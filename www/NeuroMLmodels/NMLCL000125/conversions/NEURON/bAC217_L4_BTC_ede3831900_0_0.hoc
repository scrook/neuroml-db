// Cell: bAC217_L4_BTC_ede3831900_0_0
/*
{
  "id" : "bAC217_L4_BTC_ede3831900_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.28644, 1.8584, 2.77", "2.16301, -14.2936, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 9.99901, -3.7416, 1.38", "-6.30231, 11.9308, -3.96191, 1.38", "-8.18695, 14.9556, -4.30687, 1.66", "-9.7961, 17.5382, -4.60141, 1.38", "-11.0829, 19.6035, -4.83695, 1.11", "-12.0992, 21.2346, -5.02297, 1.11", "-14.4487, 25.0054, -5.45301, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.26481, 6.4384, 1.38", "6.01473, 9.11994, 7.22439, 1.38", "6.11, 10.8846, 7.71191, 1.38", "6.39242, 13.9702, 8.668, 1.38", "6.77845, 17.2613, 9.73621, 1.38", "7.069, 19.7383, 10.5402, 1.38", "7.32826, 21.9487, 11.2576, 0.83", "7.49758, 24.0974, 12.0041, 1.38", "7.74555, 26.6473, 12.929, 1.38", "8.3121, 29.6882, 14.0128, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.641967", "6.19422, -24.7888, -0.978947, 0.641967", "9.61231, -39.3941, -0.978947, 0.641967" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.16301, -14.2936, 1.8584, 2.22", "5.28575, -19.7798, 1.47329, 2.22", "6.91023, -22.6338, 1.27296, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.16301, -14.2936, 1.8584, 0.83", "0.681799, -15.4982, 1.85691, 0.83", "-0.385102, -16.3396, 1.98326, 1.11", "-1.85707, -17.5004, 2.15759, 0.83", "-2.98768, -18.392, 2.29149, 0.83", "-4.90463, -19.9038, 2.51852, 1.38", "-6.73688, -21.3487, 2.73551, 1.38", "-8.39921, -22.5012, 3.04925, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.4487, 25.0054, -5.45301, 0.55", "-18.3118, 25.8558, -3.85345, 0.55", "-20.141, 26.039, -2.77891, 0.55", "-21.4384, 26.0964, -1.90966, 0.55", "-23.5695, 26.1036, -0.419416, 1.11", "-27.3024, 25.9931, 2.19396, 0.83", "-31.0622, 25.7261, 4.8804, 0.83", "-34.9933, 25.1444, 7.91484, 0.55", "-37.1285, 24.702, 9.58604, 1.38", "-38.6796, 24.2881, 10.8151, 0.28", "-40.0933, 23.8204, 11.946, 0.83", "-41.7962, 23.2556, 13.3545, 0.28", "-42.9741, 22.851, 14.3779, 0.55", "-44.4694, 22.4239, 15.5987, 0.55", "-46.8442, 21.8306, 17.5219, 0.55", "-48.8958, 21.3318, 19.1671, 0.55", "-52.3865, 20.5831, 22.0104, 0.55", "-53.8639, 20.3019, 23.1728, 0.55", "-56.701, 19.8011, 25.3171, 0.83", "-58.7001, 19.4939, 26.7685, 0.83", "-60.3005, 19.2686, 27.8445, 0.83", "-63.7143, 18.8561, 30.0657, 0.83", "-64.9858, 18.6839, 30.8491, 0.83", "-68.0447, 18.2327, 32.8445, 0.83", "-72.2184, 17.5144, 35.6395, 0.83", "-73.2672, 17.3592, 36.3346, 0.83", "-75.5587, 17.0696, 37.7981, 0.28", "-76.8496, 16.8679, 38.5321, 0.83", "-79.9572, 16.3514, 40.2018, 0.28", "-82.1527, 15.9665, 41.2219, 0.83", "-84.7317, 15.5091, 42.2709, 0.28", "-85.2912, 15.4076, 42.4893, 0.55", "-88.505, 14.9147, 43.5895, 0.55", "-90.8252, 14.6302, 44.303, 0.28", "-93.4904, 14.3126, 44.852, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.4487, 25.0054, -5.45301, 1.11", "-15.5059, 28.7373, -7.84365, 1.11", "-16.115, 30.7748, -8.95418, 1.11", "-16.8497, 33.2321, -10.2936, 1.11", "-17.4672, 35.2978, -11.4195, 1.11", "-18.1944, 37.7303, -12.7453, 0.83", "-18.9392, 40.2213, -14.1031, 0.83", "-19.4846, 42.1861, -14.8863, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.3121, 29.6882, 14.0128, 0.83", "7.13462, 33.4891, 16.193, 0.83", "6.25394, 36.3319, 17.8237, 0.83", "5.57181, 38.5338, 19.0867, 0.83", "4.50731, 41.9699, 21.0577, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.3121, 29.6882, 14.0128, 0.83", "11.835, 32.6005, 14.1244, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.641967", "13.0304, -53.9995, -0.978947, 0.641967", "16.4485, -68.6049, -0.978947, 0.641967" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "6.91023, -22.6338, 1.27296, 0.83", "8.08725, -24.063, -1.342, 0.83", "8.76336, -24.7021, -2.89549, 0.83", "9.59286, -25.3645, -4.84848, 0.83", "12.9061, -27.9186, -12.903, 0.83", "14.7459, -29.3214, -17.3667, 0.83", "17.503, -31.4238, -24.0564, 0.55", "18.6981, -32.3411, -27.3623, 0.83", "20.0006, -33.2889, -31.2144, 0.83", "21.2204, -34.0616, -34.8665, 1.11", "21.4882, -34.1764, -35.4806, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.91023, -22.6338, 1.27296, 1.66", "7.84069, -24.9575, 1.3595, 1.66", "9.18148, -27.7588, 1.45149, 1.11", "10.1936, -29.6155, 1.51749, 1.11", "12.0757, -32.5043, 1.92161, 1.11", "13.6824, -34.9705, 2.26661, 1.11", "14.8062, -36.6955, 2.50793, 1.38", "16.1433, -38.5378, 2.79344, 1.11", "16.9867, -39.5621, 3.00918, 1.11", "20.5843, -43.1073, 4.10099, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-8.39921, -22.5012, 3.04925, 0.28", "-10.1768, -24.0488, 5.63981, 0.28", "-11.0352, -24.6889, 6.75721, 1.11", "-14.065, -26.7795, 10.6662, 0.55", "-14.9615, -27.4245, 11.863, 0.83", "-16.9459, -28.8525, 14.5121, 0.83", "-19.233, -30.4983, 17.5654, 0.55", "-20.6009, -31.4208, 19.3524, 1.11", "-23.0511, -32.994, 22.5947, 0.55", "-23.946, -33.5647, 23.7031, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-8.39921, -22.5012, 3.04925, 0.83", "-12.1995, -23.1518, 2.44894, 0.83", "-15.0317, -23.6231, 1.96174, 1.11", "-17.8059, -24.0167, 1.40987, 0.83", "-20.8888, -24.4096, 0.706605, 0.83", "-24.6907, -24.8942, -0.16068, 0.83", "-28.3199, -25.3567, -0.98857, 0.83", "-32.2736, -25.866, -1.95003, 1.11", "-36.3778, -26.3552, -3.09085, 1.11", "-39.9823, -26.7507, -4.17994, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-93.4904, 14.3126, 44.852, 0.28", "-93.3958, 13.1953, 45.2938, 0.28", "-93.3622, 12.7986, 45.4507, 0.83", "-93.1927, 10.7962, 46.2426, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-93.4904, 14.3126, 44.852, 0.28", "-96.8071, 14.8986, 45.8925, 0.28", "-97.9786, 15.1031, 45.8736, 0.55", "-100.583, 15.4843, 45.444, 0.28", "-102.919, 15.7736, 44.9207, 0.83", "-105.702, 16.1182, 44.2974, 0.28", "-108.371, 16.4487, 43.6994, 0.28", "-112.925, 16.9286, 41.9202, 0.28", "-113.854, 17.0223, 41.4485, 0.83", "-115.285, 17.1817, 40.4742, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-19.4846, 42.1861, -14.8863, 0.55", "-20.903, 42.5108, -15.5083, 0.55", "-23.4037, 43.0832, -16.6048, 0.55", "-25.8179, 43.6359, -17.6634, 0.83", "-30.1736, 44.633, -19.5732, 0.55", "-32.9039, 45.258, -20.7704, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-19.4846, 42.1861, -14.8863, 0.55", "-18.1235, 45.822, -16.1336, 0.55", "-17.5182, 47.6394, -16.6182, 0.55", "-17.0343, 49.214, -16.8805, 0.83", "-16.4045, 51.2968, -17.1169, 0.55", "-16.0091, 52.6366, -17.2563, 0.83", "-15.4102, 54.6346, -17.4355, 0.55", "-14.9728, 56.1637, -17.4746, 0.83", "-14.2769, 58.3545, -17.5956, 0.28", "-13.8417, 59.5748, -17.707, 0.83", "-13.0508, 61.5777, -17.9483, 0.55", "-12.405, 63.1457, -18.1712, 0.83", "-11.3701, 65.5425, -18.5789, 0.55", "-10.145, 68.2155, -19.1291, 0.83", "-8.97313, 70.6844, -19.7447, 0.83", "-7.38631, 73.97, -20.561, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "4.50731, 41.9699, 21.0577, 0.83", "5.17034, 44.8423, 21.7652, 0.83", "5.74901, 47.986, 22.566, 0.83", "6.05515, 49.92, 23.1463, 0.83", "6.43864, 52.5967, 24.0321, 0.83", "6.83926, 55.6058, 25.0519, 0.83", "7.22187, 58.933, 26.1984, 0.83", "7.52448, 62.09, 27.3568, 0.83", "7.79753, 65.2147, 28.5884, 0.83", "7.90557, 67.0893, 29.319, 0.55", "7.94923, 69.1306, 30.0471, 0.55", "7.95958, 70.8472, 30.5398, 0.83", "7.95858, 72.3915, 30.8502, 0.83", "7.97339, 73.8246, 31.0445, 0.55", "7.97225, 75.6475, 31.1178, 0.83", "7.96748, 77.1299, 31.1317, 0.55", "7.94944, 78.4023, 31.1375, 0.83", "7.89221, 80.3726, 31.1617, 0.55", "7.78146, 82.3484, 31.1729, 0.83", "7.59645, 84.1478, 31.0337, 0.55", "7.4548, 85.1243, 30.9191, 0.55", "7.19295, 86.6322, 30.7365, 0.83", "6.76129, 88.7828, 30.4676, 0.83", "6.3886, 90.5622, 30.2515, 0.55", "5.45758, 94.5824, 29.76, 0.83", "4.89329, 96.9116, 29.4819, 0.83", "4.22632, 99.7516, 29.1829, 0.83", "3.85609, 101.477, 29.0741, 0.83", "3.56127, 102.853, 29.0785, 0.83", "3.28137, 104.201, 29.1966, 0.55", "2.96659, 105.729, 29.4467, 0.55", "2.54357, 107.462, 29.7395, 0.83", "1.64265, 110.665, 30.2932, 0.83", "0.913404, 113.197, 30.7121, 1.11", "0.332333, 115.118, 31.0203, 0.55", "-0.359533, 117.216, 31.3715, 1.11", "-1.43914, 120.145, 31.9072, 0.83", "-2.39828, 122.567, 32.3297, 0.83", "-3.0832, 124.177, 32.5584, 0.83", "-3.75378, 125.79, 32.7234, 0.55", "-4.67054, 128.066, 32.8911, 0.55", "-4.87376, 128.606, 32.9129, 0.55", "-5.54602, 130.625, 32.9864, 0.55", "-6.00965, 132.108, 32.9871, 0.28", "-6.70891, 134.507, 32.861, 0.55", "-7.42314, 137.265, 32.5757, 0.55", "-7.79022, 138.832, 32.3605, 0.55", "-8.40906, 141.566, 31.9682, 0.83", "-9.03817, 144.463, 31.5354, 0.83", "-9.52883, 146.521, 31.1446, 0.83", "-9.85865, 147.709, 30.8657, 0.55", "-10.1688, 148.764, 30.5904, 0.83", "-10.723, 150.444, 30.1984, 0.83", "-11.5157, 152.553, 29.7745, 0.83", "-12.5295, 155.186, 29.4601, 0.83", "-13.1855, 156.842, 29.3289, 0.83", "-13.8358, 158.373, 29.1755, 0.83", "-14.7941, 160.537, 28.9088, 0.55", "-15.8514, 162.788, 28.6335, 0.55", "-16.6098, 164.424, 28.4602, 0.55", "-17.422, 166.246, 28.2733, 0.83", "-18.6395, 169.031, 27.9339, 1.11", "-19.8, 171.96, 27.6118, 0.55", "-20.3521, 173.681, 27.4741, 0.55", "-20.9005, 175.69, 27.3748, 0.55", "-21.3386, 177.698, 27.3137, 0.83", "-21.6932, 180.145, 27.2763, 0.83", "-21.9808, 183.541, 27.2543, 0.83", "-22.1334, 187.638, 27.1133, 0.83", "-22.154, 190.032, 26.9455, 0.55", "-22.1403, 192.411, 26.7061, 0.55", "-22.076, 195.404, 26.3334, 0.83", "-22.0796, 196.805, 26.126, 0.83", "-22.2138, 199.003, 25.798, 0.83", "-22.5397, 201.572, 25.5128, 0.83", "-22.9572, 203.666, 25.4409, 0.28", "-23.2523, 204.735, 25.4781, 0.83", "-24.2528, 207.757, 25.7204, 0.83", "-25.1348, 210.144, 26.0194, 0.83", "-26.1053, 212.435, 26.4597, 0.83", "-27.1815, 214.77, 27.0444, 0.83", "-27.9378, 216.31, 27.4932, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "4.50731, 41.9699, 21.0577, 0.83", "2.77017, 43.4701, 23.1331, 0.83", "1.52976, 44.8168, 24.8009, 0.55", "-0.467432, 47.0026, 27.4829, 0.55", "-2.33716, 49.049, 29.9831, 0.55", "-4.45382, 51.132, 32.7042, 0.55", "-6.04147, 52.485, 34.7, 0.55", "-8.78983, 54.3817, 38.1475, 0.55", "-10.7851, 55.4188, 40.4962, 0.55", "-13.5996, 56.3312, 43.3896, 0.55", "-18.1674, 56.7518, 47.4098, 0.55", "-20.9215, 56.523, 49.4642, 0.55", "-23.9488, 55.6804, 51.4281, 0.55", "-25.7711, 54.8465, 52.3898, 0.55", "-27.2477, 53.9191, 53.0221, 0.55", "-30.0021, 51.7141, 53.897, 0.28", "-31.3452, 50.4183, 54.2172, 0.83", "-33.1465, 48.5177, 54.6134, 0.55", "-34.3, 47.1068, 54.7714, 0.55", "-35.7193, 44.9298, 54.8079, 0.55", "-36.9954, 42.6293, 54.7058, 0.83", "-38.0516, 40.5759, 54.5226, 0.55", "-38.9394, 38.8329, 54.2817, 0.55", "-40.9926, 34.7444, 53.5802, 0.55", "-43.0672, 30.8606, 52.8436, 0.83", "-44.7347, 27.9975, 52.2162, 0.83", "-46.5589, 25.1403, 51.3401, 0.83", "-48.7882, 21.9718, 50.27, 0.55", "-49.8755, 20.5361, 49.8312, 0.28", "-51.2771, 18.841, 49.404, 0.55", "-52.9776, 17.0275, 48.9566, 0.28", "-56.6578, 13.3327, 48.2031, 0.55", "-58.9576, 11.1445, 47.8572, 0.55", "-61.2004, 9.05875, 47.6756, 0.28", "-63.222, 7.18683, 47.6054, 0.55", "-66.6759, 3.81268, 47.5855, 0.55", "-67.8607, 2.58884, 47.6387, 0.83", "-69.9209, 0.28738, 47.8142, 0.55", "-72.7098, -3.16217, 47.9014, 0.55", "-74.5204, -5.87477, 47.847, 0.83", "-76.2444, -9.20122, 47.735, 0.55", "-77.2227, -11.8126, 47.5946, 0.55", "-77.9913, -14.4661, 47.4047, 0.55", "-78.2767, -15.8895, 47.2787, 0.83", "-78.7867, -19.5766, 46.8723, 0.55", "-79.1934, -23.911, 46.3455, 0.28", "-79.6676, -30.1928, 45.5752, 0.28", "-79.8706, -32.8331, 45.1581, 0.83", "-80.2567, -38.0165, 44.2689, 0.28", "-80.3992, -39.8341, 43.9707, 0.83", "-80.4966, -40.9675, 43.7974, 0.28", "-80.5979, -42.7504, 43.4866, 0.83", "-80.8166, -46.3045, 42.869, 0.28", "-80.9583, -47.6654, 42.6783, 0.55", "-81.4522, -50.7333, 42.3477, 0.28", "-81.7858, -52.5052, 42.1769, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.835, 32.6005, 14.1244, 0.83", "12.2803, 34.1314, 11.8352, 0.83", "12.8598, 36.0698, 9.26324, 0.83", "13.2563, 37.3046, 7.79735, 0.83", "15.97, 44.7349, -0.124195, 0.55", "16.8383, 46.7825, -2.00988, 0.55", "17.3735, 47.8901, -2.88235, 0.55", "18.1352, 49.3054, -3.86094, 0.55", "18.9795, 50.71, -4.54517, 1.11", "20.0438, 52.3597, -4.90332, 0.55", "21.9809, 55.1433, -4.79875, 0.55", "23.6385, 57.6449, -4.60221, 0.55", "24.7075, 59.2718, -4.41395, 0.55", "26.0223, 61.3169, -4.00294, 0.83", "27.5014, 63.8015, -3.34783, 0.55", "28.5333, 65.782, -2.74879, 1.11", "29.5296, 67.8433, -2.04025, 0.55", "30.4725, 69.8683, -1.30789, 0.83", "32.0526, 73.3945, -0.0682344, 0.55", "32.8671, 75.2464, 0.54517, 0.55", "33.9501, 77.8129, 1.31982, 0.55", "34.8088, 79.8341, 1.79638, 0.55", "35.3293, 81.092, 2.0289, 0.28", "36.3693, 83.5967, 2.35612, 0.55", "37.1441, 85.4876, 2.48961, 0.28", "37.878, 87.2066, 2.5702, 0.55", "39.2766, 90.4407, 2.66548, 0.55", "40.0218, 92.2647, 2.70034, 0.55", "41.0546, 94.8025, 2.71287, 0.28", "41.9514, 97.4411, 1.99774, 0.83", "42.6617, 99.7586, 0.985521, 0.28", "42.8179, 100.27, 0.683709, 0.55", "43.1798, 101.415, -0.258462, 0.28", "43.4093, 102.111, -0.948415, 0.83", "46.2736, 110.411, -10.173, 0.55", "47.4657, 113.473, -13.7186, 0.55", "47.8526, 114.4, -14.763, 0.83", "48.8827, 116.566, -16.8336, 0.55", "49.4538, 117.629, -17.6026, 0.55", "50.1723, 118.895, -17.8821, 0.83", "51.0754, 120.48, -17.4017, 0.28", "51.4375, 121.342, -17.2431, 0.55", "52.2601, 123.775, -16.5849, 0.28", "52.7227, 125.368, -15.9218, 0.55", "53.1017, 126.748, -15.363, 0.28", "53.3208, 128.131, -14.9483, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.835, 32.6005, 14.1244, 0.55", "13.6614, 31.8417, 15.3749, 0.55", "16.4021, 30.7031, 17.2513, 0.28", "17.8401, 30.1057, 18.2358, 0.55", "20.4815, 29.0083, 20.0442, 0.55", "23.9351, 27.5735, 22.4087, 0.55", "25.8233, 26.789, 23.7014, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "21.4882, -34.1764, -35.4806, 0.55", "19.0532, -32.2618, -37.3768, 0.55", "18.4179, -31.722, -38.2202, 0.83", "17.0057, -30.4994, -40.3247, 0.55", "16.4182, -30.0205, -41.181, 0.55", "13.9475, -28.2268, -45.6575, 0.28", "13.4436, -27.9101, -46.615, 0.83", "11.5749, -26.9389, -50.9194, 0.55", "11.3793, -26.8592, -51.3948, 0.55", "10.8653, -26.7078, -52.6995, 0.83", "8.53894, -26.1926, -58.4313, 0.55", "8.07593, -26.124, -59.5133, 0.55", "7.56395, -26.0534, -60.754, 0.83", "6.5005, -25.8526, -63.5838, 0.55", "6.29276, -25.7761, -64.1978, 0.55", "5.95471, -25.5589, -65.3857, 0.55", "4.68099, -24.3416, -70.2214, 0.28", "4.37122, -23.9689, -71.5799, 0.83", "3.3832, -22.5486, -76.1926, 0.55", "3.148, -22.1242, -77.3817, 0.83", "1.99774, -19.6466, -83.3576, 0.55", "1.73193, -18.8205, -85.0483, 0.28", "1.60186, -18.2655, -86.0364, 0.83", "1.43388, -17.2161, -87.7257, 0.55", "1.35345, -16.356, -88.8993, 0.83", "1.34025, -14.2564, -91.4876, 0.55", "1.60479, -11.0534, -94.7398, 0.28", "1.66954, -10.5649, -95.2189, 0.55", "1.88375, -9.26685, -96.4605, 0.28", "1.98403, -8.7408, -96.9595, 0.55", "2.34256, -6.95974, -98.606, 0.28", "2.48565, -6.33313, -99.1562, 0.55", "2.91441, -4.36903, -100.867, 0.28", "3.07009, -3.64294, -101.541, 0.55", "3.35696, -2.03757, -103.053, 0.28", "3.40194, -1.67624, -103.398, 0.55", "3.53336, -0.228416, -104.698, 0.28", "3.57326, 0.27325, -105.142, 0.55", "3.62482, 1.83166, -106.468, 0.28", "3.6059, 2.60787, -107.225, 0.55", "3.42094, 4.87014, -109.461, 0.28", "3.29906, 5.79217, -110.411, 0.55", "2.90416, 8.32934, -113.358, 0.28", "2.79093, 9.09685, -114.323, 0.55", "2.5108, 11.5665, -117.837, 0.28", "2.41827, 12.3882, -119.114, 0.28", "2.30942, 13.3461, -120.689, 0.55", "2.05332, 14.9979, -123.42, 0.28", "2.00276, 15.3074, -123.89, 0.55", "1.79762, 16.6303, -126.079, 0.28", "1.69033, 17.2641, -127.12, 0.83", "1.41816, 18.5524, -129.239, 0.55", "1.2505, 19.3888, -130.613, 0.55", "0.973994, 20.8891, -132.974, 0.55", "0.429888, 24.6182, -139.079, 0.83", "0.298563, 25.9048, -141.28, 0.28", "0.268674, 26.5845, -142.5, 0.55", "0.34846, 29.1013, -147.33, 0.55", "0.439786, 29.7642, -148.624, 0.55", "0.874806, 31.8985, -153.015, 0.83", "1.2022, 33.2616, -155.991, 0.28", "1.37242, 33.9662, -158.012, 0.55", "1.57585, 34.5323, -160.519, 0.28", "1.65924, 34.6703, -161.613, 0.83", "2.03184, 34.9963, -167.813, 0.55", "2.14102, 34.9574, -170.204, 0.55", "2.23907, 34.6372, -175.676, 0.55", "1.99134, 34.0703, -183.812, 0.55", "1.86796, 33.9282, -185.703, 0.55", "1.44867, 33.5884, -190.453, 0.55", "0.892622, 33.2954, -195.419, 0.55", "0.363445, 33.1341, -199.28, 0.55", "-0.673397, 32.9508, -205.079, 0.55", "-1.93561, 32.88, -210.955, 0.55", "-2.22658, 32.8828, -212.27, 0.55", "-3.50237, 32.8614, -218.037, 0.55", "-3.81593, 32.8525, -219.425, 0.28", "-3.88803, 32.8452, -219.761, 0.55", "-6.69061, 32.2574, -232.846, 0.28", "-6.96165, 32.1924, -234.026, 0.83", "-8.58277, 31.6938, -240.978, 0.28", "-8.68986, 31.659, -241.423, 0.55", "-9.48402, 31.4341, -244.668, 0.28", "-9.82005, 31.3371, -245.984, 0.55", "-10.6355, 31.0425, -248.47, 0.28", "-10.909, 30.9344, -249.329, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "21.4882, -34.1764, -35.4806, 0.55", "23.4088, -34.4123, -37.3602, 0.55", "25.0173, -34.5925, -38.7718, 0.55", "28.6149, -34.9686, -42.095, 0.83", "29.5728, -35.1058, -42.9925, 0.83", "30.6892, -35.2942, -44.0321, 0.83", "31.6294, -35.4507, -44.8823, 0.83", "33.2924, -35.7208, -46.3353, 0.83", "36.0679, -36.2524, -48.7809, 0.83", "37.7808, -36.5393, -50.1922, 0.83", "39.6528, -36.7904, -51.8023, 0.83", "41.7393, -37.0142, -53.5855, 0.83", "43.6399, -37.1837, -55.2034, 0.83", "46.7274, -37.439, -57.7351, 0.83", "48.6418, -37.5444, -59.2164, 0.83", "51.087, -37.5685, -61.1096, 0.83", "52.6558, -37.5398, -62.3389, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "20.5843, -43.1073, 4.10099, 0.55", "21.5666, -43.1102, 5.36845, 0.55", "22.3714, -43.1807, 6.43934, 0.28", "22.8728, -43.2795, 7.12653, 0.55", "23.7164, -43.4904, 8.2984, 1.11", "25.1882, -43.9743, 10.5004, 0.55", "25.7333, -44.187, 11.3685, 0.55", "26.3063, -44.4782, 12.3685, 0.83", "26.8932, -44.8102, 13.4545, 0.28", "26.8932, -44.8102, 13.4545, 0.83", "27.8087, -45.657, 15.3842, 0.28", "28.0507, -45.9151, 15.906, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "20.5843, -43.1073, 4.10099, 0.83", "23.1445, -46.7558, 3.63058, 0.83", "25.5107, -49.4667, 2.8675, 0.55", "27.1313, -50.9899, 2.12206, 0.83", "28.4537, -52.2328, 1.51384, 0.83", "30.2864, -53.9553, 0.670856, 0.83", "31.896, -55.4682, -0.0694887, 0.83", "35.3017, -57.929, -1.92732, 0.83", "37.8778, -59.5042, -3.62206, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-39.9823, -26.7507, -4.17994, 0.55", "-40.7517, -24.0402, -6.03139, 0.55", "-41.6626, -20.2883, -8.48408, 0.83", "-42.8465, -15.0489, -12.01, 0.55", "-43.3624, -12.498, -13.6091, 0.55", "-44.055, -8.75985, -15.8315, 1.11", "-44.6666, -5.4267, -17.731, 0.83", "-45.2598, -1.90663, -19.6587, 0.55", "-45.487, -0.463611, -20.3997, 0.55", "-46.2705, 3.05967, -21.9923, 0.55", "-46.4366, 3.77408, -22.3168, 1.11", "-47.0626, 5.51998, -22.8176, 0.55", "-48.0701, 7.27136, -22.8901, 0.83", "-49.3164, 8.88579, -22.6689, 0.55", "-50.9478, 10.7532, -22.307, 0.55", "-52.1914, 12.0641, -22.0953, 0.83", "-57.7094, 18.3453, -21.9181, 0.55", "-59.1143, 20.108, -22.0202, 0.83", "-60.8201, 22.4044, -22.4019, 0.55", "-62.5869, 24.7912, -23.0662, 0.55", "-64.1124, 27.0062, -24.0484, 1.11", "-66.6487, 31.1969, -26.3989, 0.55", "-67.3773, 32.5696, -27.2794, 0.55", "-69.1631, 36.224, -29.5733, 0.55", "-70.2607, 38.6262, -31.0616, 0.55", "-71.6951, 41.7348, -32.892, 1.11", "-73.3808, 45.2007, -34.8159, 0.55", "-74.5132, 47.3116, -35.845, 1.11", "-75.9713, 49.9277, -37.1042, 0.28", "-76.5092, 50.839, -37.4978, 0.55", "-77.4651, 52.3035, -38.0623, 0.28", "-78.9283, 54.1734, -38.6461, 0.83", "-81.3911, 56.8956, -39.4505, 0.28", "-82.358, 57.9023, -39.6802, 0.55", "-86.5278, 62.0003, -40.3623, 0.28", "-88.1261, 63.5815, -40.5705, 0.83", "-90.397, 65.8879, -40.8466, 0.55", "-92.6817, 68.2609, -41.12, 0.55", "-94.9576, 70.6892, -41.4486, 0.55", "-96.6584, 72.6003, -41.703, 0.83", "-98.5793, 74.912, -42.0495, 0.28", "-100.342, 77.2033, -42.4038, 0.55", "-102.306, 80.2618, -42.9648, 0.55", "-102.632, 80.8955, -43.0794, 0.83", "-103.72, 83.806, -43.8909, 0.28", "-104.095, 85.4879, -44.4128, 0.55", "-104.209, 86.8851, -45.011, 0.28", "-104.14, 89.701, -46.6574, 0.55", "-103.819, 92.6463, -48.6596, 0.55", "-103.261, 96.8127, -51.7224, 0.28", "-102.609, 99.5486, -54.2026, 0.83", "-101.411, 103.45, -58.1061, 0.55", "-100.397, 106.251, -61.0808, 0.55", "-99.9606, 107.419, -62.3803, 0.55", "-99.2607, 109.174, -64.5328, 0.83", "-97.5257, 113.994, -70.462, 0.28", "-97.2092, 114.972, -71.7341, 0.83", "-96.9019, 116.33, -73.4128, 0.28", "-96.7708, 117.726, -75.0032, 0.55", "-97.1861, 121.059, -78.8271, 0.83", "-97.763, 122.128, -79.6901, 0.83", "-99.3441, 123.863, -80.3091, 0.28", "-100.231, 124.698, -80.4128, 0.55", "-102.489, 126.683, -80.2821, 0.28", "-104.16, 128.246, -79.9805, 0.55", "-109.161, 132.71, -77.7312, 0.28", "-110.181, 133.616, -77.1564, 0.55", "-111.753, 135.128, -76.1277, 0.28", "-112.97, 136.362, -75.229, 0.83", "-114.929, 138.425, -73.6629, 0.83", "-120.18, 144.525, -69.2184, 0.28", "-120.888, 145.455, -68.6025, 0.55", "-123.236, 148.751, -66.4944, 0.28", "-124.498, 150.651, -65.3406, 0.83", "-125.774, 152.74, -64.1615, 0.28", "-126.725, 154.485, -63.3396, 0.83", "-128.378, 158.294, -62.1847, 0.28", "-129.044, 160.042, -61.7646, 0.83", "-130.097, 163.336, -61.2619, 0.28", "-130.586, 165.343, -61.265, 0.55", "-130.931, 167.434, -61.5639, 0.28", "-131.096, 169.863, -62.395, 0.55", "-131.096, 172.813, -63.865, 0.28", "-131.03, 174.04, -64.6006, 0.83", "-130.773, 177.05, -66.6081, 0.28", "-130.472, 179.267, -68.44, 0.83", "-129.859, 183.207, -71.8781, 0.28", "-129.568, 184.472, -73.1723, 0.83", "-128.9, 186.703, -75.7299, 0.28", "-128.546, 187.575, -76.8877, 0.83", "-126.186, 192.625, -84.0448, 0.28", "-125.143, 194.544, -87.1066, 0.83", "-122.552, 198.881, -94.3867, 0.28", "-121.492, 200.424, -97.1502, 0.83", "-119.461, 203.177, -102.363, 0.28", "-118.802, 204.024, -104.048, 0.55", "-117.003, 206.575, -108.918, 0.28", "-116.482, 207.409, -110.489, 0.28", "-115.568, 209.538, -113.968, 0.55", "-114.768, 212.68, -119.355, 0.28", "-114.481, 214.821, -123.095, 0.83", "-114.178, 216.727, -126.772, 0.28", "-114.062, 217.661, -128.607, 0.55", "-114.053, 219.165, -131.376, 0.28", "-114.871, 226.305, -143.352, 0.28", "-115.012, 227.158, -144.671, 0.83", "-116.087, 232.84, -152.998, 0.28", "-116.181, 233.465, -153.936, 0.83", "-117.431, 240.927, -163.961, 0.28", "-117.627, 241.708, -164.637, 0.55", "-119.407, 245.487, -164.818, 0.28", "-119.914, 246.642, -164.986, 0.55", "-120.791, 248.359, -165.159, 0.28", "-121.1, 249.872, -166.19, 0.55", "-121.208, 252.262, -168.561, 0.28", "-121.254, 253.389, -169.696, 1.11", "-121.613, 255.926, -172.253, 0.28", "-121.75, 256.947, -173.391, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-39.9823, -26.7507, -4.17994, 0.55", "-43.621, -29.3543, -5.60861, 0.55", "-45.267, -30.3983, -6.23663, 0.55", "-47.8633, -31.8925, -7.1411, 0.83", "-50.5394, -33.4195, -8.03049, 0.55", "-52.8379, -34.7942, -8.62283, 0.55", "-53.9246, -35.4908, -8.84949, 0.83", "-55.5534, -36.6019, -9.00489, 0.55", "-58.574, -38.5909, -8.80334, 0.55", "-60.1602, -39.657, -8.47877, 0.55", "-63.0931, -41.7544, -7.57416, 0.55", "-64.4299, -42.7337, -7.01074, 0.28", "-67.4743, -45.0471, -5.50071, 0.83", "-71.1163, -47.7242, -3.43827, 0.55", "-71.7789, -48.185, -3.04065, 0.55", "-73.8945, -49.565, -1.83517, 0.83", "-76.3927, -51.0636, -0.60299, 0.55", "-78.2218, -52.1011, 0.217008, 0.83", "-83.0155, -54.8588, 1.93024, 0.55", "-85.0782, -56.1287, 2.42214, 0.83", "-87.5871, -57.6515, 2.80198, 0.28", "-89.4893, -58.7777, 2.87031, 0.55", "-91.4718, -59.9756, 2.64646, 0.55", "-94.2542, -61.6977, 1.99159, 0.28", "-95.3853, -62.4481, 1.53408, 0.28", "-96.3537, -63.0725, 1.10392, 0.55", "-98.966, -64.8861, -0.00771493, 0.28", "-99.9926, -65.641, -0.296142, 0.55", "-100.5, -66.0434, -0.412648, 0.28", "-101.906, -67.1753, -0.581305, 0.28", "-102.844, -67.934, -0.685147, 0.55", "-104.701, -69.5415, -0.862077, 0.28", "-106.537, -71.3331, -1.03478, 0.55", "-108.829, -73.5232, -1.19675, 0.28", "-110.564, -75.215, -1.27698, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-93.1927, 10.7962, 46.2426, 0.28", "-95.4902, 12.9272, 46.4209, 0.28", "-96.1026, 13.5767, 46.4702, 0.55", "-97.4158, 15.0094, 46.5965, 0.28", "-97.7036, 15.3557, 46.633, 0.55", "-100.371, 18.8214, 47.0496, 0.28", "-102.427, 21.5666, 47.4872, 0.28", "-103.607, 23.3566, 47.8204, 0.28", "-104.429, 24.7198, 48.105, 0.55", "-106.24, 27.9679, 48.6991, 0.28", "-106.904, 29.1904, 48.9501, 0.55", "-107.907, 31.1427, 49.4353, 0.28", "-108.415, 32.2507, 49.7265, 0.55", "-109.196, 34.0802, 50.2299, 0.28", "-110.144, 36.6086, 50.8745, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-93.1927, 10.7962, 46.2426, 0.28", "-89.6786, 10.0685, 43.7257, 0.28", "-88.6906, 9.94511, 42.9376, 0.83", "-83.8816, 9.46361, 39.572, 0.28", "-83.3786, 9.41151, 39.2393, 0.83", "-78.9331, 8.84211, 36.6782, 0.28", "-77.6178, 8.64186, 35.9803, 0.83", "-68.9486, 7.33537, 31.8142, 0.28", "-64.0499, 6.52989, 29.6699, 0.28", "-62.9707, 6.33373, 29.269, 1.11", "-57.332, 5.17124, 27.4545, 0.28", "-55.6783, 4.8096, 26.9157, 0.55", "-49.6347, 3.46337, 24.8253, 0.28", "-46.8397, 2.76756, 23.8499, 0.28", "-45.105, 2.34174, 23.1347, 0.55", "-42.495, 1.74212, 21.9682, 0.28", "-34.8712, 0.0473783, 17.8739, 0.28", "-30.8917, -0.847751, 15.6254, 0.28", "-30.0462, -1.0937, 15.0934, 0.83", "-28.2413, -1.71222, 13.8782, 0.28", "-28.2413, -1.71222, 13.8782, 0.83", "-24.3732, -3.31964, 11.3106, 0.28", "-23.4077, -3.89827, 10.7558, 0.83", "-20.6639, -5.83115, 8.64137, 0.28", "-19.0267, -7.03827, 7.25941, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-32.9039, 45.258, -20.7704, 0.28", "-34.2724, 43.7289, -21.4308, 0.28", "-35.3538, 42.5266, -22.0722, 0.83", "-36.528, 41.212, -22.7537, 0.55", "-37.7614, 39.853, -23.6346, 1.11", "-41.1768, 35.9458, -26.4743, 0.28", "-41.4196, 35.6761, -26.708, 0.83", "-42.5394, 34.4468, -27.9948, 0.83", "-43.2393, 33.6727, -28.8848, 0.83", "-45.8307, 30.8361, -32.3843, 0.28", "-46.4982, 30.1189, -33.2672, 0.83", "-48.9693, 27.7194, -36.7117, 0.28", "-49.4179, 27.2961, -37.3727, 0.55", "-50.1936, 26.5808, -38.5496, 0.55", "-50.9988, 25.8489, -39.8193, 0.55", "-52.0478, 24.9224, -41.4326, 1.11", "-56.3741, 21.2072, -48.5989, 0.55", "-56.9857, 20.6666, -49.7171, 0.28", "-57.1665, 20.5215, -50.0597, 0.55", "-58.3715, 19.6456, -52.3496, 0.28", "-58.8742, 19.2693, -53.3789, 0.83", "-61.7907, 17.0659, -59.6104, 0.28", "-61.9212, 16.9684, -59.8757, 0.55", "-64.8461, 14.8069, -65.7827, 0.28", "-65.3645, 14.3956, -66.8506, 0.55", "-66.8629, 13.1601, -69.8039, 0.28", "-67.1241, 12.9306, -70.311, 0.83", "-68.373, 11.7658, -72.597, 0.28", "-68.9949, 11.1762, -73.727, 0.83", "-71.9953, 8.08317, -79.1313, 0.28", "-72.7341, 7.33548, -80.3446, 0.83", "-75.6328, 4.47193, -84.6688, 0.55", "-75.9991, 4.0985, -85.2026, 0.83", "-77.9978, 1.97748, -88.0455, 0.28", "-78.6145, 1.30098, -88.8678, 0.55", "-81.0957, -1.5437, -91.9338, 0.28", "-81.9798, -2.59053, -93.0329, 0.83", "-86.2675, -7.8114, -97.9826, 0.28", "-86.4828, -8.07764, -98.2317, 0.83", "-87.789, -9.76729, -99.7382, 0.28", "-88.1225, -10.191, -100.143, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-32.9039, 45.258, -20.7704, 0.55", "-33.9739, 47.9545, -21.1879, 0.55", "-34.7794, 49.9909, -21.5611, 0.55", "-35.6339, 52.1245, -22.0926, 0.28", "-36.2008, 53.5328, -22.4819, 1.38", "-37.0649, 55.5814, -23.1338, 0.55", "-38.0482, 57.8656, -23.8941, 0.55", "-38.481, 58.839, -24.1999, 0.83", "-39.2599, 60.5697, -24.8082, 0.28", "-39.6712, 61.5574, -25.182, 0.55", "-40.3344, 63.2977, -25.8043, 0.28", "-40.7826, 64.5648, -26.173, 0.83", "-41.5818, 67.1814, -26.6861, 0.28", "-41.9669, 68.5859, -26.9775, 0.55", "-42.3548, 70.2662, -27.32, 0.28", "-42.6186, 71.6812, -27.699, 0.83", "-42.9576, 74.3167, -28.5073, 0.28", "-43.1994, 76.6348, -29.391, 0.83", "-43.4534, 80.5122, -31.0994, 0.28", "-43.4834, 81.8497, -31.7507, 0.83", "-43.5393, 85.4788, -33.8627, 0.28", "-43.5347, 87.1464, -34.9596, 0.83", "-43.4977, 89.1856, -36.4113, 0.28", "-43.4804, 90.7885, -37.6216, 0.55", "-43.4613, 92.3915, -38.8225, 0.83", "-43.5465, 95.9399, -41.4406, 0.28", "-43.6418, 97.3326, -42.4034, 0.83", "-43.8487, 99.2206, -43.6579, 0.83", "-44.1369, 101.114, -44.8205, 0.28", "-44.5292, 102.574, -45.7092, 0.83", "-45.0398, 104.045, -46.5108, 0.28", "-45.4525, 105.103, -46.9859, 0.55", "-45.8265, 105.873, -47.3181, 0.28", "-46.7245, 107.467, -47.8784, 0.55", "-48.486, 110.453, -48.5985, 0.28", "-49.2127, 111.519, -48.8019, 0.55", "-50.0676, 112.672, -48.9593, 0.28", "-51.0458, 113.913, -49.0683, 0.83", "-52.3546, 115.509, -49.0942, 0.28", "-53.6409, 117.071, -49.0075, 0.83", "-55.5272, 119.408, -48.7032, 0.28", "-56.2766, 120.335, -48.6191, 0.83", "-57.1357, 121.434, -48.545, 0.28", "-58.2366, 122.95, -48.5014, 0.28", "-58.7231, 123.68, -48.5671, 0.55", "-59.7976, 125.531, -48.9362, 0.28", "-60.6466, 127.143, -49.567, 0.55", "-61.1183, 128.065, -50.0564, 0.55", "-61.7981, 129.434, -50.9009, 0.83", "-63.1259, 131.923, -52.7232, 0.28", "-64.1214, 133.721, -54.1828, 0.83", "-65.5925, 136.193, -56.4948, 0.28", "-66.172, 137.089, -57.4057, 0.28", "-66.9617, 138.333, -58.7185, 0.83", "-68.4451, 140.67, -61.3, 0.28", "-68.9874, 141.538, -62.222, 0.83", "-70.8808, 144.753, -65.4952, 0.28", "-71.7964, 146.321, -67.057, 1.11", "-73.5777, 149.398, -70.181, 0.28", "-74.2845, 150.694, -71.5272, 0.55", "-74.8667, 151.914, -72.699, 0.28", "-75.3127, 152.919, -73.5902, 0.55", "-76.334, 155.588, -75.7712, 0.28", "-76.7784, 156.646, -76.7234, 0.55", "-77.5002, 158.257, -78.2287, 0.28", "-77.9718, 159.295, -79.3024, 0.55", "-78.5134, 160.532, -80.6794, 0.28", "-79.2766, 162.355, -82.7686, 0.55", "-80.5443, 165.741, -86.4442, 0.28", "-81.0652, 167.131, -88.0252, 0.55", "-81.7775, 169.112, -90.3034, 0.28", "-82.1445, 170.204, -91.6374, 0.83", "-82.558, 171.689, -93.4399, 0.28", "-82.8259, 172.748, -94.7715, 0.83", "-83.2312, 174.575, -97.055, 0.28", "-83.4456, 175.388, -98.1735, 0.55", "-83.7368, 176.521, -99.8075, 0.28", "-83.9662, 177.464, -101.263, 0.55", "-84.6162, 180.223, -105.328, 0.28", "-84.8515, 181.188, -106.67, 0.28", "-85.4449, 183.373, -109.253, 0.55", "-85.95, 185.225, -111.182, 0.28", "-86.2453, 186.248, -112.079, 0.55", "-87.1322, 189.019, -114.029, 0.28", "-87.767, 190.643, -114.787, 0.83", "-88.9052, 193.015, -115.558, 0.28", "-89.3671, 193.748, -115.69, 0.55", "-90.2343, 194.843, -115.8, 0.28", "-91.1866, 195.85, -115.898, 0.55", "-93.4404, 197.864, -116.037, 0.28", "-93.9626, 198.306, -116.04, 0.55", "-97.2923, 201.064, -116.135, 0.28", "-98.1165, 201.819, -116.193, 0.55", "-99.2029, 202.982, -116.296, 0.28", "-100.27, 204.211, -116.428, 0.55", "-101.905, 206.377, -116.69, 0.28", "-102.857, 207.779, -116.841, 0.55", "-104.53, 211.096, -116.928, 0.28", "-105.105, 212.442, -116.986, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.38631, 73.97, -20.561, 0.55", "-5.95361, 75.1699, -21.8579, 0.55", "-4.35269, 77.0759, -24.9688, 0.55", "-3.8391, 77.876, -26.5356, 0.83", "-3.45955, 78.5323, -27.9065, 0.83", "-2.48507, 80.3914, -31.8998, 0.28", "-2.1248, 81.093, -33.3748, 0.83", "-1.39619, 83.6762, -39.638, 0.55", "-1.39134, 84.2468, -41.1958, 0.28", "-1.44475, 84.5101, -41.9757, 0.28", "-1.62822, 84.9443, -43.3274, 0.55", "-1.91195, 85.4694, -44.9027, 0.55", "-2.93382, 87.3444, -50.0619, 0.28", "-3.358, 88.2567, -52.2965, 0.83", "-4.19695, 90.2778, -56.9775, 0.83", "-4.87142, 92.0736, -60.9817, 0.83", "-5.65336, 94.3818, -66.022, 0.28", "-5.88457, 95.192, -67.7285, 0.28", "-5.94577, 95.6472, -68.5769, 0.55", "-5.90731, 97.6923, -72.0829, 0.28", "-5.85507, 98.002, -72.5673, 0.55", "-5.22649, 100.004, -75.684, 0.28", "-4.99397, 100.66, -76.9946, 0.55", "-4.77358, 101.225, -78.3501, 0.28", "-4.68615, 101.432, -78.8923, 0.55", "-4.00146, 102.726, -82.7069, 0.28", "-3.7603, 103.094, -83.8464, 0.55", "-2.31594, 104.849, -89.8971, 0.28", "-1.8789, 105.345, -91.607, 0.28", "-1.38956, 105.863, -93.3244, 0.55", "-0.356874, 106.962, -96.9982, 0.28", "-0.00434883, 107.308, -98.1171, 0.55", "1.4772, 108.698, -102.62, 0.28", "2.26756, 109.376, -104.803, 0.28", "2.9569, 109.966, -106.762, 0.83", "5.49503, 111.944, -113.489, 0.28", "6.19253, 112.44, -115.199, 0.28", "7.21451, 113.109, -117.491, 0.55", "8.15789, 113.681, -119.353, 0.28", "8.8326, 114.034, -120.693, 0.55", "9.51988, 114.361, -121.925, 0.28", "10.0198, 114.578, -122.478, 0.55", "11.196, 115.145, -123.795, 0.28", "12.9601, 116.161, -125.401, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.38631, 73.97, -20.561, 0.55", "-7.62259, 77.6708, -19.5372, 0.55", "-7.56831, 80.1427, -18.7629, 0.55", "-7.53901, 81.1928, -18.4273, 0.55", "-7.47924, 82.8688, -17.9077, 0.55", "-7.44492, 84.2778, -17.5317, 0.55", "-7.34472, 87.663, -16.6396, 0.28", "-7.28933, 88.8559, -16.3191, 0.55", "-7.11101, 90.5304, -15.7719, 0.55", "-7.03264, 91.3448, -15.4428, 0.83", "-6.92489, 93.2016, -14.5857, 0.28", "-6.86375, 94.7638, -13.865, 0.83", "-6.8231, 97.6129, -12.5258, 0.28", "-6.80402, 97.9434, -12.3358, 0.83", "-6.48365, 100.469, -10.6992, 0.55", "-6.28257, 101.62, -9.88248, 0.55", "-5.93046, 103.312, -8.64664, 0.83", "-5.207, 106.391, -6.36248, 0.55", "-4.58964, 108.752, -4.60476, 0.83", "-4.2411, 109.949, -3.69869, 0.28", "-3.91601, 110.995, -2.96477, 0.83", "-3.44394, 112.551, -1.88413, 0.83", "-2.72473, 115.284, -0.0507021, 0.83", "-2.28157, 117.557, 1.16835, 0.28", "-2.17742, 118.334, 1.54467, 0.83", "-1.90068, 120.687, 2.73349, 0.83", "-1.67752, 122.753, 3.8063, 0.28", "-1.55512, 123.831, 4.40084, 0.55", "-1.36545, 125.969, 5.50955, 0.28", "-1.25493, 128.19, 6.7579, 0.55", "-1.15173, 131.108, 8.54266, 0.28", "-1.138, 131.767, 8.98669, 0.83", "-1.12051, 133.1, 9.86765, 0.28", "-1.0872, 134.701, 10.9809, 0.55", "-0.933499, 137.044, 12.7792, 0.28", "-0.896219, 137.492, 13.1017, 0.55", "-0.789683, 138.461, 13.8286, 0.28", "-0.603555, 139.478, 14.6764, 0.83", "-0.241462, 140.811, 15.8277, 0.28", "0.346078, 142.464, 17.3191, 0.55", "0.817101, 143.592, 18.4533, 0.28", "1.09734, 144.291, 19.1258, 0.83", "1.70017, 145.768, 20.458, 0.83", "2.28872, 147.253, 21.6909, 0.55", "2.61019, 148.06, 22.2756, 0.83", "4.31274, 152.563, 25.1555, 0.55", "4.91062, 154.255, 26.0779, 0.83", "6.74368, 159.788, 28.4746, 0.28", "7.04933, 160.955, 28.7433, 0.55", "7.55865, 163.25, 28.8545, 0.28", "7.83874, 164.614, 28.7628, 0.83", "8.28325, 167.38, 28.0537, 0.28", "8.46714, 169.038, 27.4474, 0.55", "8.56451, 173.589, 24.7143, 0.28", "8.53593, 175.585, 23.4345, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-27.9378, 216.31, 27.4932, 0.55", "-28.1709, 218.234, 27.5374, 0.55", "-28.5386, 220.51, 27.647, 0.55", "-28.9085, 222.694, 27.7673, 0.83", "-29.1652, 224.201, 27.8694, 0.55", "-29.467, 226.075, 28.0159, 1.11", "-29.8799, 228.957, 28.2364, 0.55", "-30.1311, 231.006, 28.3917, 1.11", "-30.3068, 232.562, 28.4518, 0.83", "-30.4044, 234.045, 28.422, 0.55", "-30.3914, 236.019, 28.2385, 0.55", "-30.2467, 237.754, 27.9185, 0.83", "-29.9426, 239.605, 27.3169, 0.55", "-29.5314, 241.464, 26.4744, 0.83", "-29.1413, 242.893, 25.6844, 0.83", "-28.7604, 244.082, 24.9122, 0.83", "-28.4101, 245.041, 24.2367, 1.11", "-27.686, 247.053, 22.7397, 0.83", "-27.3804, 247.923, 22.0978, 0.55", "-26.8642, 249.324, 21.1103, 0.83", "-26.1394, 251.475, 19.6818, 0.55", "-25.6696, 252.82, 18.7858, 1.11", "-24.936, 254.862, 17.4687, 0.55", "-24.6648, 255.586, 17.041, 0.55", "-24.2977, 256.6, 16.4681, 0.55", "-23.4752, 259.025, 15.259, 0.55", "-23.1464, 260.031, 14.8467, 0.28", "-22.9427, 260.713, 14.6247, 0.55", "-22.5637, 262.02, 14.3097, 0.28", "-22.2807, 263.168, 14.0674, 0.83", "-21.8267, 265.32, 13.6729, 0.55", "-21.6759, 266.04, 13.5616, 0.83", "-21.3931, 267.583, 13.3295, 0.55", "-21.2262, 268.581, 13.1654, 0.83", "-20.757, 271.615, 12.636, 0.28", "-20.4691, 273.622, 12.2495, 0.83", "-20.1874, 275.695, 11.8219, 0.28", "-19.9579, 277.522, 11.4384, 0.55", "-19.7441, 279.446, 11.0404, 0.55", "-19.6339, 281.18, 10.6851, 0.55", "-19.6281, 282.134, 10.4998, 0.28", "-19.6635, 283.049, 10.3362, 0.55", "-19.8122, 284.805, 10.0809, 0.28", "-19.9677, 285.833, 9.91863, 0.55", "-20.3639, 287.691, 9.59469, 0.28", "-20.671, 288.95, 9.36782, 0.28", "-21.1257, 290.706, 9.0446, 0.83", "-21.5648, 292.277, 8.74648, 0.83", "-22.4042, 295.274, 8.17912, 0.55", "-22.8309, 296.963, 7.86878, 0.55", "-23.0412, 298.066, 7.67963, 0.55", "-23.139, 298.699, 7.54446, 0.28", "-23.2452, 299.597, 7.33526, 0.55", "-23.2861, 300.368, 7.16001, 0.28", "-23.3296, 301.089, 6.99122, 1.11", "-23.6554, 303.249, 6.37843, 0.55", "-24.0162, 304.806, 5.93728, 0.55", "-24.4394, 306.158, 5.52897, 0.28", "-24.75, 306.915, 5.27268, 0.83", "-25.7899, 309.078, 4.4346, 0.55", "-26.5087, 310.474, 3.85219, 0.83", "-27.3632, 312.008, 3.15348, 0.83", "-28.2326, 313.567, 2.35841, 0.55", "-28.9136, 314.801, 1.65548, 0.28", "-29.5517, 316.011, 0.937592, 0.55", "-30.1161, 317.127, 0.269965, 0.55", "-30.8697, 318.593, -0.655607, 1.11", "-31.8298, 320.527, -1.8563, 0.55", "-32.2225, 321.366, -2.33966, 0.55", "-32.6702, 322.269, -2.86012, 0.55", "-33.8282, 324.385, -4.04889, 0.55", "-34.4311, 325.451, -4.66461, 0.83", "-35.6564, 327.712, -5.87014, 0.28", "-36.0166, 328.389, -6.20427, 0.55", "-36.9865, 330.325, -7.11155, 0.28", "-37.4233, 331.276, -7.54081, 0.55", "-38.0173, 332.78, -8.15931, 0.28", "-38.5869, 334.281, -8.68705, 0.55", "-38.8598, 335.061, -8.92542, 0.28", "-39.2595, 336.347, -9.26613, 0.55", "-39.7624, 338.504, -9.71531, 0.55", "-40.0166, 339.622, -9.96955, 0.28", "-40.2927, 340.597, -10.1746, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-27.9378, 216.31, 27.4932, 0.55", "-29.9535, 217.645, 27.4664, 0.55", "-32.3135, 219.319, 27.5526, 1.11", "-34.8876, 221.043, 27.7635, 0.55", "-35.7397, 221.618, 27.7936, 0.83", "-37.7815, 223.027, 27.8354, 0.55", "-39.4672, 224.138, 27.8754, 0.55", "-40.7778, 224.985, 27.9038, 0.83", "-44.6558, 227.417, 27.9904, 0.55", "-47.5151, 229.17, 28.1543, 0.55", "-48.5295, 229.785, 28.1849, 0.83", "-51.3076, 231.427, 28.2408, 0.55", "-51.7579, 231.687, 28.2418, 0.83", "-53.23, 232.577, 28.2928, 0.28", "-53.4625, 232.735, 28.3266, 0.55", "-54.8229, 233.673, 28.7399, 0.28", "-55.6609, 234.303, 29.0504, 0.55", "-56.6189, 234.991, 29.3849, 0.55", "-59.2315, 236.748, 30.2381, 0.55", "-61.0257, 237.952, 30.7864, 0.55", "-62.4482, 238.936, 31.103, 0.83", "-64.4155, 240.342, 31.4394, 0.83", "-67.0028, 242.302, 31.5751, 0.55", "-68.9217, 243.812, 31.5022, 0.55", "-71.0171, 245.534, 31.2466, 1.11", "-73.3504, 247.704, 30.8199, 0.55", "-73.9766, 248.347, 30.6682, 0.83", "-75.8894, 250.585, 30.2012, 0.28", "-76.8697, 251.834, 29.7155, 0.55", "-77.536, 252.688, 29.2566, 0.28", "-78.1665, 253.536, 28.7467, 0.83", "-79.4409, 255.379, 27.5699, 0.28", "-80.5606, 257.064, 26.4486, 0.83", "-84.6411, 263.678, 22.009, 0.55", "-85.3927, 264.963, 21.1306, 0.55", "-86.0359, 266.136, 20.3329, 0.83", "-86.8063, 267.641, 19.3689, 0.28", "-87.1283, 268.381, 18.9678, 0.55", "-87.554, 269.489, 18.5169, 0.28", "-87.9801, 270.983, 18.3356, 0.55", "-88.635, 273.084, 18.058, 0.55", "-89.0219, 274.28, 17.9076, 0.55", "-89.4449, 275.615, 17.764, 0.83", "-90.0947, 277.753, 17.5207, 0.28", "-90.6258, 279.551, 17.3345, 0.83", "-91.1895, 281.778, 17.1351, 0.55", "-91.4017, 282.667, 17.0818, 0.55", "-91.7481, 284.36, 17.045, 0.83", "-91.9247, 285.247, 17.0762, 0.55", "-92.2139, 286.907, 17.2905, 0.83", "-92.5751, 288.415, 17.5466, 0.28", "-92.7811, 289.033, 17.6103, 0.28", "-93.4995, 290.678, 17.6632, 0.28", "-93.8523, 291.387, 17.6253, 0.83", "-94.7873, 293.037, 17.3623, 0.55", "-95.9944, 294.866, 16.6909, 0.83", "-97.8969, 297.34, 15.4356, 0.28", "-98.5845, 298.1, 14.9145, 0.55", "-99.4099, 298.839, 14.2334, 0.28", "-100.08, 299.354, 13.725, 0.83", "-102.661, 301.22, 11.8377, 0.83", "-103.507, 301.813, 11.2573, 0.83", "-106.149, 303.633, 9.65609, 0.83", "-109.208, 305.718, 7.92162, 0.55", "-111.058, 306.94, 6.92467, 0.55", "-112.711, 308.045, 6.07406, 0.55", "-114.493, 309.263, 5.22711, 0.55", "-117.064, 311.19, 3.99642, 0.55", "-119.046, 312.8, 3.17003, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "52.6558, -37.5398, -62.3389, 0.55", "53.8232, -36.821, -63.3627, 0.55", "54.9979, -36.0285, -64.4042, 0.83", "57.3855, -34.3555, -66.523, 0.28", "58.5916, -33.4781, -67.5679, 0.83", "61.4966, -31.3274, -69.9864, 0.28", "62.4881, -30.5864, -70.7746, 0.55", "64.6994, -28.8498, -72.6148, 0.55", "66.985, -26.9352, -74.4237, 0.55", "68.9232, -25.2871, -75.8619, 0.28", "69.7133, -24.6066, -76.4165, 0.28", "70.506, -23.9208, -76.9418, 0.55", "72.209, -22.4995, -78.0064, 0.28", "74.5063, -20.6015, -79.2196, 0.55", "77.2171, -18.2485, -80.7766, 0.28", "77.9227, -17.6387, -81.2002, 0.55", "80.7794, -15.0403, -82.9677, 0.28", "82.6313, -13.3032, -84.1478, 0.28", "84.7534, -11.2825, -85.5776, 0.83", "88.0804, -7.96395, -88.0356, 0.55", "88.8862, -7.15051, -88.6598, 0.55", "90.5266, -5.51758, -90.0656, 0.55", "92.1992, -3.93339, -91.5731, 0.83", "94.6944, -1.70584, -93.8282, 0.28", "95.4615, -1.08426, -94.4611, 0.55", "97.4828, 0.37218, -95.7456, 0.28", "97.8555, 0.62155, -95.9659, 0.55", "99.6006, 1.61307, -96.835, 0.55", "102.175, 2.96385, -97.8174, 0.28", "103.112, 3.43921, -98.0881, 0.55", "105.381, 4.51855, -98.6745, 0.28", "106.307, 4.94362, -98.871, 0.55", "108.302, 5.75781, -99.2788, 0.28", "109.567, 6.15267, -99.5531, 0.55", "110.264, 6.31655, -99.6805, 0.55", "112.207, 6.7936, -99.9458, 0.28", "113.491, 7.13541, -100.044, 0.28", "114.758, 7.55626, -100.138, 0.55", "117.83, 8.78191, -100.326, 0.28", "119.967, 9.83001, -100.427, 0.55", "121.956, 10.9854, -100.453, 0.55", "123.767, 12.2472, -100.403, 0.83", "126.411, 14.4023, -100.199, 0.28", "127.369, 15.3251, -100.08, 0.28", "128.995, 17.224, -99.7448, 0.55", "130.559, 19.2992, -99.3221, 0.28", "131.222, 20.2492, -99.0972, 0.55", "132.225, 21.7962, -98.6464, 0.55", "133.645, 24.098, -97.8411, 0.28", "134.489, 25.5012, -97.3459, 0.55", "135.751, 27.6896, -96.5843, 0.28", "137.142, 30.1903, -95.7671, 0.55", "138.558, 32.7878, -94.9545, 0.55", "139.171, 33.9609, -94.6036, 0.55", "140.358, 36.3422, -93.9729, 0.55", "141.463, 38.561, -93.4905, 0.55", "142.559, 40.8644, -93.0786, 0.55", "143.583, 43.065, -92.7221, 0.28", "144.13, 44.2237, -92.5864, 0.55", "145.864, 47.875, -92.2103, 0.28", "146.993, 50.3408, -92.0556, 0.28", "147.536, 51.5898, -92.0135, 0.55", "148.504, 53.8041, -91.9758, 0.28", "149.37, 55.8023, -91.9619, 0.55", "150.019, 57.3335, -91.942, 0.55", "151.747, 61.6636, -91.8493, 0.28", "152.742, 64.3648, -91.7852, 0.28", "153.122, 65.4693, -91.7513, 0.55", "153.841, 67.7038, -91.6586, 0.55", "154.774, 70.7269, -91.4221, 0.28", "155.478, 73.0653, -91.1999, 0.55", "156.1, 75.2198, -90.9172, 0.28", "156.564, 77.0825, -90.6644, 0.55", "156.823, 78.2037, -90.4879, 0.28", "156.993, 78.958, -90.2951, 0.55", "157.455, 81.1298, -89.5628, 0.28", "157.695, 82.1819, -89.118, 0.55", "158.554, 85.632, -87.4753, 0.28", "159.192, 87.9877, -86.2854, 0.55", "160.066, 91.0914, -84.6255, 0.28", "160.566, 92.7551, -83.7058, 0.55", "161.17, 94.6443, -82.6104, 0.28", "161.729, 96.3238, -81.5908, 0.55", "162.271, 97.8997, -80.6155, 0.28", "162.671, 99.121, -79.8772, 0.55", "163.606, 102.184, -78.1371, 0.28", "164.069, 103.741, -77.2073, 0.55", "164.673, 105.981, -75.8372, 0.28", "164.883, 106.811, -75.2979, 0.55", "165.352, 108.928, -73.8963, 0.28", "165.781, 111.172, -72.4323, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "52.6558, -37.5398, -62.3389, 0.28", "54.4546, -37.8743, -62.7917, 0.28", "54.9955, -37.9679, -62.9557, 0.55", "55.7441, -38.0481, -63.2125, 0.55", "56.8924, -38.1402, -63.6072, 0.28", "57.572, -38.1955, -63.8279, 0.55", "59.9419, -38.3645, -64.5333, 0.28", "60.5796, -38.374, -64.6951, 0.55", "62.0919, -38.3351, -65.0248, 0.28", "62.7365, -38.2922, -65.1381, 0.28", "63.7864, -38.1927, -65.2602, 0.55", "64.7538, -38.1052, -65.3213, 0.55", "67.0692, -37.9388, -65.2795, 0.28", "67.9295, -37.9214, -65.2534, 0.55", "68.8988, -37.9683, -65.2186, 0.55", "70.6716, -38.1501, -65.1783, 0.28", "71.8284, -38.3501, -65.1666, 0.55", "73.2599, -38.7512, -65.1416, 0.28", "74.0146, -39.0609, -65.1216, 0.55", "75.384, -39.7604, -65.078, 0.28", "75.9541, -40.1316, -65.047, 0.55", "76.5634, -40.6252, -64.9911, 0.55", "77.3204, -41.3936, -64.8466, 0.28", "77.7327, -41.905, -64.7331, 0.28", "78.1443, -42.5703, -64.5777, 0.55", "78.6131, -43.5758, -64.3434, 0.28", "78.67, -43.7299, -64.308, 0.55", "79.1069, -45.1971, -64.0334, 0.28", "79.149, -45.3659, -64.022, 0.83", "79.6815, -47.6396, -64.0543, 0.28", "79.7971, -48.0647, -64.1427, 0.55", "80.0966, -49.0989, -64.5166, 0.28", "80.2906, -49.7343, -64.8166, 0.55", "80.7782, -51.1579, -65.6966, 0.28", "80.8401, -51.3367, -65.8173, 0.55", "81.5986, -53.3952, -67.389, 0.28", "81.6942, -53.6783, -67.5997, 0.55", "81.757, -53.8512, -67.728, 0.55", "81.9794, -54.4978, -68.1218, 0.28", "82.1568, -55.0465, -68.3903, 0.55", "82.4675, -56.0077, -68.7658, 0.28", "82.5963, -56.4049, -68.8986, 0.55", "83.457, -58.778, -69.7463, 0.28", "83.6447, -59.2619, -69.9228, 0.55", "83.8736, -59.8092, -70.153, 0.28", "84.6535, -61.5624, -70.9499, 0.28", "84.8903, -62.132, -71.1965, 0.55", "85.5303, -63.7786, -71.862, 0.28", "85.5733, -63.9194, -71.9093, 0.55", "86.0441, -65.7577, -72.5106, 0.28", "86.2106, -66.6724, -72.7412, 0.55", "86.3533, -67.8634, -72.9277, 0.28", "86.4032, -68.3699, -72.9501, 0.55", "86.496, -69.4218, -72.9109, 0.28", "86.545, -69.8861, -72.8787, 0.55", "86.812, -71.6764, -72.8418, 0.28", "87.0928, -73.1298, -72.8963, 0.28", "87.2565, -73.7516, -72.9669, 0.55", "87.7196, -75.2583, -73.1971, 0.28", "87.8842, -75.7148, -73.2763, 0.55", "89.0253, -78.7168, -73.8387, 0.28", "89.5011, -79.8411, -74.0834, 0.55", "90.2731, -81.4877, -74.451, 0.28", "90.4317, -81.8098, -74.5243, 0.55", "91.2449, -83.3335, -74.8585, 0.28", "91.3643, -83.5397, -74.8954, 0.55", "91.8817, -84.2295, -74.8923, 0.28", "92.2589, -84.6528, -74.9046, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "28.0507, -45.9151, 15.906, 0.55", "28.4848, -45.8042, 16.9128, 0.55", "29.3512, -45.525, 18.9505, 0.55", "30.9549, -44.9967, 22.6229, 0.55", "32.1991, -44.6011, 25.4115, 0.55", "33.3332, -44.2872, 27.9095, 0.28", "33.9689, -44.1284, 29.2746, 0.83", "34.7553, -43.9579, 31.0014, 0.55", "35.3579, -43.8846, 32.2745, 0.28", "35.683, -43.8702, 32.8326, 0.55", "36.4023, -43.8565, 33.9494, 0.28", "36.6437, -43.8619, 34.3215, 0.55", "37.7359, -44.0017, 35.796, 0.28", "38.456, -44.2265, 36.6703, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "28.0507, -45.9151, 15.906, 0.28", "35.8041, -47.548, 14.7296, 0.28", "36.8419, -47.7275, 14.6482, 0.83", "40.3468, -48.2287, 14.5358, 0.28", "41.3281, -48.2923, 14.5753, 0.83", "43.565, -48.3024, 14.7616, 0.28", "44.492, -48.2551, 14.8744, 0.83", "46.9286, -47.714, 15.7304, 0.28", "47.4492, -47.4764, 15.9231, 0.83", "50.0224, -45.7477, 16.9293, 0.28", "50.6493, -45.3014, 17.1677, 0.28", "51.5398, -44.6375, 17.4993, 0.55", "53.0357, -43.4745, 18.4176, 0.28", "55.1392, -41.7938, 20.1696, 0.28", "55.5975, -41.4195, 20.7301, 0.83", "58.485, -39.0645, 25.3898, 0.28", "58.9377, -38.7276, 26.258, 0.55", "61.78, -36.7105, 33.2104, 0.28", "62.0399, -36.5272, 34.0174, 0.83", "63.2917, -35.4909, 39.3057, 0.28", "63.4212, -35.334, 40.0597, 0.55", "63.6753, -34.8123, 42.4833, 0.28", "63.9224, -34.2895, 44.7468, 0.55", "64.369, -33.5383, 47.3816, 0.28", "64.5742, -33.1981, 48.4073, 0.55", "65.4111, -31.7687, 51.3283, 0.28", "65.6884, -31.1614, 52.4223, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "37.8778, -59.5042, -3.62206, 0.55", "39.4097, -60.0783, -4.55853, 0.55", "41.8586, -61.0187, -6.06613, 0.55", "43.628, -61.7281, -7.1786, 0.28", "44.8909, -62.2277, -7.96312, 0.55", "46.875, -62.9866, -9.13986, 0.55", "47.732, -63.3383, -9.60808, 0.28", "48.3194, -63.5913, -9.94951, 0.55", "48.9799, -63.932, -10.3117, 0.28", "49.955, -64.5152, -10.8369, 0.55", "51.4064, -65.4341, -11.5142, 0.55", "53.4948, -66.7747, -12.4317, 0.55", "56.1971, -68.4952, -14.004, 1.38", "57.8677, -69.532, -15.1385, 0.83", "59.2654, -70.3456, -16.1772, 0.55", "60.9975, -71.2952, -17.5749, 0.28", "63.0916, -72.3607, -19.3843, 0.83", "66.946, -74.0833, -23.1502, 0.28", "67.4342, -74.3072, -23.6727, 0.28", "68.6165, -74.9056, -25.1275, 0.55", "69.3914, -75.3088, -26.1502, 0.55", "70.0728, -75.7048, -27.1353, 0.55", "71.9736, -76.9692, -29.7806, 0.55", "73.834, -78.3726, -32.2453, 0.28", "74.9525, -79.3033, -33.7956, 0.83", "75.6284, -79.9023, -34.7652, 0.83", "77.4194, -81.4875, -37.2939, 0.55", "78.1582, -82.136, -38.2696, 0.83", "79.2309, -83.0211, -39.4159, 0.28", "80.0341, -83.6046, -40.1155, 0.55", "80.5377, -83.9862, -40.4758, 0.28", "80.7883, -84.192, -40.6226, 0.55", "82.0287, -85.1464, -41.1659, 0.28", "83.3739, -86.2242, -41.8651, 0.28", "84.4102, -87.0703, -42.3952, 0.83", "85.2807, -87.8699, -42.8707, 0.55", "87.4487, -90.0057, -44.0843, 0.28", "88.0737, -90.688, -44.4879, 0.83", "90.0271, -93.0155, -45.8626, 0.28", "90.7406, -94.0104, -46.4119, 0.83", "91.9613, -95.8125, -47.3107, 0.28", "92.3049, -96.3294, -47.5738, 0.83", "93.711, -98.5564, -48.6615, 0.28", "94.5601, -99.9266, -49.3038, 0.28", "95.3421, -101.088, -49.7709, 0.55", "96.2556, -102.355, -50.3552, 0.55", "97.7946, -104.279, -51.298, 0.55", "98.6304, -105.255, -51.7856, 0.28", "99.0813, -105.756, -52.0509, 0.55", "100.553, -107.371, -53.0629, 0.28", "101.67, -108.503, -53.8341, 0.55", "102.831, -109.724, -54.6751, 0.28", "103.183, -110.089, -54.9016, 0.83", "104.686, -111.629, -55.939, 0.28", "105.038, -111.967, -56.1847, 0.55", "105.947, -112.761, -56.8438, 0.55", "107.524, -114.052, -57.7602, 0.28", "107.587, -114.101, -57.7977, 0.55", "108.982, -115.118, -58.7417, 0.28", "109.536, -115.488, -59.1211, 0.55", "110.999, -116.506, -60.2668, 0.28", "111.95, -117.157, -61.0806, 0.55", "113.658, -118.253, -62.6182, 0.55", "115.128, -119.211, -64.0129, 0.28", "116.021, -119.824, -64.8883, 0.83", "117.551, -120.917, -66.4067, 0.28", "117.89, -121.13, -66.699, 0.55", "119.177, -121.818, -67.6961, 0.28", "119.635, -122.009, -67.9356, 0.55", "121.881, -122.75, -68.8488, 0.28", "122.608, -122.941, -69.1043, 0.83", "125.5, -123.472, -69.8056, 0.28", "126.044, -123.549, -69.9109, 0.55", "128.295, -123.669, -70.1553, 0.28", "130.228, -123.607, -70.3204, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "37.8778, -59.5042, -3.62206, 0.55", "38.2407, -60.2589, -4.85607, 0.55", "38.9078, -61.8943, -7.45867, 0.55", "39.5083, -63.296, -9.65873, 0.28", "39.9657, -64.2901, -11.2675, 0.83", "40.8002, -65.8539, -13.8698, 0.28", "40.9989, -66.2039, -14.4996, 0.55", "41.1595, -66.4904, -15.0732, 0.55", "41.5338, -66.9872, -16.2608, 0.55", "42.1649, -67.6941, -18.0768, 0.55", "42.5237, -68.0621, -19.0765, 0.55", "43.6863, -68.9757, -21.7473, 0.83", "44.4183, -69.5044, -23.3965, 0.28", "44.7, -69.7036, -24.0805, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-88.1225, -10.191, -100.143, 0.28", "-89.2706, -10.244, -99.7502, 0.28", "-90.7624, -10.3128, -99.2404, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-88.1225, -10.191, -100.143, 0.28", "-89.1194, -12.0226, -101.867, 0.28", "-89.4108, -12.5581, -102.371, 0.55", "-90.3226, -14.2335, -103.948, 0.28", "-90.7262, -14.9751, -104.646, 0.83", "-92.4924, -18.2204, -107.701, 0.28", "-92.7827, -18.7538, -108.203, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-119.046, 312.8, 3.17003, 0.55", "-120.304, 313.598, 2.17069, 0.55", "-121.643, 314.552, 1.1725, 0.28", "-122.978, 315.505, 0.177087, 0.55", "-126.839, 318.258, -2.7012, 0.28", "-127.282, 318.575, -3.03207, 0.55", "-130.145, 320.617, -5.16631, 0.28", "-131.569, 321.498, -6.41933, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-119.046, 312.8, 3.17003, 0.28", "-121.47, 311.461, 2.40503, 0.28", "-122.819, 310.716, 1.97923, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "165.781, 111.172, -72.4323, 0.28", "162.732, 113.073, -72.7359, 0.28", "161.699, 113.717, -72.8388, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "165.781, 111.172, -72.4323, 0.28", "166.203, 112.733, -71.6589, 0.28", "166.961, 115.666, -70.1623, 0.28", "167.137, 116.449, -69.7215, 0.55", "167.664, 119.277, -67.9563, 0.28", "167.967, 120.903, -66.942, 0.55", "168.359, 123.003, -65.6316, 0.28", "168.524, 124.097, -64.8738, 0.55", "168.704, 125.809, -63.5292, 0.28", "168.795, 127.197, -62.4179, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "44.7, -69.7036, -24.0805, 0.55", "43.57, -70.8558, -26.4591, 0.55", "43.0664, -71.4287, -27.5997, 0.28", "42.7211, -71.7822, -28.3606, 0.83", "40.4918, -73.8238, -32.834, 0.28", "39.8596, -74.4259, -34.084, 0.83", "37.0897, -77.1261, -39.3689, 0.28", "36.7021, -77.4986, -40.0966, 0.83", "34.2243, -79.599, -44.4095, 0.28", "33.4596, -80.1859, -45.5864, 0.55", "29.9607, -82.5427, -50.3605, 0.28", "29.244, -82.9903, -51.3268, 0.28", "27.6941, -83.8773, -53.3987, 0.83", "23.1338, -86.3484, -59.5499, 0.28", "21.8962, -87.0008, -61.2857, 0.55", "19.4924, -88.2201, -64.7509, 0.55", "17.6991, -89.0511, -67.3063, 0.55", "14.6234, -90.5231, -71.7363, 0.28", "13.7726, -90.9911, -72.9834, 0.83", "10.8937, -92.7491, -77.0903, 0.28", "10.3322, -93.131, -77.8608, 0.55", "7.73896, -95.0414, -80.8909, 0.28", "6.92529, -95.6038, -81.6923, 0.55", "3.7272, -97.8615, -84.4507, 0.28", "3.4383, -98.0517, -84.6935, 0.83", "1.67684, -99.1201, -85.9538, 0.28", "0.221734, -99.9625, -86.867, 0.55", "-4.25458, -102.395, -89.5139, 0.28", "-5.6135, -103.142, -90.2415, 0.83", "-11.5606, -106.443, -93.0233, 0.28", "-14.1254, -107.902, -94.1726, 0.55", "-17.4922, -109.905, -95.7054, 0.55", "-21.2473, -112.28, -97.3262, 0.28", "-24.4149, -114.428, -98.5126, 0.55", "-26.6661, -116.014, -99.4701, 0.28", "-26.9933, -116.264, -99.6181, 0.55", "-28.9783, -117.718, -100.639, 0.28", "-30.526, -118.745, -101.463, 0.55", "-32.2353, -119.746, -102.405, 0.55", "-35.1684, -121.168, -104.191, 0.28", "-36.4348, -121.695, -104.928, 0.55", "-38.2576, -122.411, -105.968, 0.28", "-39.4294, -122.825, -106.589, 0.55", "-42.6037, -123.875, -108.274, 0.28", "-43.6628, -124.202, -108.882, 0.55", "-46.3172, -125.062, -110.414, 0.28", "-47.9722, -125.668, -111.6, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "44.7, -69.7036, -24.0805, 0.28", "47.889, -69.9412, -24.8148, 0.28", "48.3451, -69.9933, -24.9634, 0.83", "50.4363, -70.339, -25.6644, 0.28", "51.166, -70.4416, -25.9153, 0.28", "52.0624, -70.6094, -26.258, 0.55", "53.6075, -70.949, -27.0681, 0.28", "55.2176, -71.3981, -28.1678, 0.55", "56.1595, -71.728, -28.8427, 0.55", "57.2999, -72.2174, -29.8173, 0.55", "59.2472, -73.114, -31.6886, 0.83", "61.5261, -74.2298, -34.1291, 0.28", "62.2993, -74.6276, -35.0158, 0.28", "62.6844, -74.8661, -35.5217, 0.83", "65.2088, -76.5228, -39.0269, 0.28", "65.9041, -77.049, -40.0846, 0.83", "66.4733, -77.5423, -41.0265, 0.83", "67.4711, -78.5139, -42.6715, 0.83", "69.1425, -80.2638, -45.512, 0.55", "70.5585, -81.9774, -47.977, 0.55", "72.2621, -84.4365, -50.954, 0.55", "73.0208, -85.7989, -52.4175, 0.55", "73.6171, -87.147, -53.6892, 0.28", "73.6783, -87.3275, -53.828, 0.55", "74.3568, -90.1118, -55.4835, 0.28", "74.5338, -91.1795, -55.9804, 0.55", "75.0231, -94.3488, -57.2012, 0.28", "75.3351, -96.142, -57.7963, 0.55", "75.7316, -98.0717, -58.3662, 0.28", "76.1057, -99.5134, -58.6983, 0.55", "77.1351, -102.863, -59.2391, 0.28", "77.4268, -103.664, -59.3133, 1.11", "79.243, -107.653, -59.3742, 0.28", "80.2926, -109.58, -59.2729, 0.55", "81.4675, -111.366, -58.8667, 0.28", "81.9117, -111.919, -58.6221, 0.55", "83.1788, -113.278, -57.7025, 0.28", "84.0674, -114.135, -56.9568, 0.28", "85.8672, -115.614, -55.2307, 0.55", "88.5334, -117.809, -52.5157, 0.55", "89.5732, -118.666, -51.4341, 0.28", "89.7924, -118.828, -51.2219, 0.55", "91.4303, -119.901, -49.8028, 0.28", "91.7182, -120.079, -49.5738, 0.55", "93.0952, -120.791, -48.7175, 0.28", "93.7357, -121.058, -48.4344, 0.55", "96.3439, -121.813, -47.214, 0.28", "97.1801, -121.947, -46.7328, 0.55", "98.5282, -121.987, -45.972, 0.28", "98.9686, -121.939, -45.6514, 0.55", "100.243, -121.641, -44.5809, 0.28", "101.342, -121.332, -43.5776, 0.55", "103.322, -120.616, -41.3973, 0.28", "104.819, -119.985, -39.6079, 0.55", "107.964, -118.396, -35.6156, 0.28", "108.416, -118.153, -35.0081, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L4_BTC_ede3831900_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.28644, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.16301, -14.2936, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 9.99901, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -6.30231, 11.9308, -3.96191, 1.38 ) }
    dend_11 { pt3dadd( -8.18695, 14.9556, -4.30687, 1.66 ) }
    dend_11 { pt3dadd( -9.7961, 17.5382, -4.60141, 1.38 ) }
    dend_11 { pt3dadd( -11.0829, 19.6035, -4.83695, 1.11 ) }
    dend_11 { pt3dadd( -12.0992, 21.2346, -5.02297, 1.11 ) }
    dend_11 { pt3dadd( -14.4487, 25.0054, -5.45301, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.26481, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01473, 9.11994, 7.22439, 1.38 ) }
    dend_0 { pt3dadd( 6.11, 10.8846, 7.71191, 1.38 ) }
    dend_0 { pt3dadd( 6.39242, 13.9702, 8.668, 1.38 ) }
    dend_0 { pt3dadd( 6.77845, 17.2613, 9.73621, 1.38 ) }
    dend_0 { pt3dadd( 7.069, 19.7383, 10.5402, 1.38 ) }
    dend_0 { pt3dadd( 7.32826, 21.9487, 11.2576, 0.83 ) }
    dend_0 { pt3dadd( 7.49758, 24.0974, 12.0041, 1.38 ) }
    dend_0 { pt3dadd( 7.74555, 26.6473, 12.929, 1.38 ) }
    dend_0 { pt3dadd( 8.3121, 29.6882, 14.0128, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.641967 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.641967 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.641967 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.16301, -14.2936, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 5.28575, -19.7798, 1.47329, 2.22 ) }
    dend_32 { pt3dadd( 6.91023, -22.6338, 1.27296, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.16301, -14.2936, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( 0.681799, -15.4982, 1.85691, 0.83 ) }
    dend_27 { pt3dadd( -0.385102, -16.3396, 1.98326, 1.11 ) }
    dend_27 { pt3dadd( -1.85707, -17.5004, 2.15759, 0.83 ) }
    dend_27 { pt3dadd( -2.98768, -18.392, 2.29149, 0.83 ) }
    dend_27 { pt3dadd( -4.90463, -19.9038, 2.51852, 1.38 ) }
    dend_27 { pt3dadd( -6.73688, -21.3487, 2.73551, 1.38 ) }
    dend_27 { pt3dadd( -8.39921, -22.5012, 3.04925, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.4487, 25.0054, -5.45301, 0.55 ) }
    dend_21 { pt3dadd( -18.3118, 25.8558, -3.85345, 0.55 ) }
    dend_21 { pt3dadd( -20.141, 26.039, -2.77891, 0.55 ) }
    dend_21 { pt3dadd( -21.4384, 26.0964, -1.90966, 0.55 ) }
    dend_21 { pt3dadd( -23.5695, 26.1036, -0.419416, 1.11 ) }
    dend_21 { pt3dadd( -27.3024, 25.9931, 2.19396, 0.83 ) }
    dend_21 { pt3dadd( -31.0622, 25.7261, 4.8804, 0.83 ) }
    dend_21 { pt3dadd( -34.9933, 25.1444, 7.91484, 0.55 ) }
    dend_21 { pt3dadd( -37.1285, 24.702, 9.58604, 1.38 ) }
    dend_21 { pt3dadd( -38.6796, 24.2881, 10.8151, 0.28 ) }
    dend_21 { pt3dadd( -40.0933, 23.8204, 11.946, 0.83 ) }
    dend_21 { pt3dadd( -41.7962, 23.2556, 13.3545, 0.28 ) }
    dend_21 { pt3dadd( -42.9741, 22.851, 14.3779, 0.55 ) }
    dend_21 { pt3dadd( -44.4694, 22.4239, 15.5987, 0.55 ) }
    dend_21 { pt3dadd( -46.8442, 21.8306, 17.5219, 0.55 ) }
    dend_21 { pt3dadd( -48.8958, 21.3318, 19.1671, 0.55 ) }
    dend_21 { pt3dadd( -52.3865, 20.5831, 22.0104, 0.55 ) }
    dend_21 { pt3dadd( -53.8639, 20.3019, 23.1728, 0.55 ) }
    dend_21 { pt3dadd( -56.701, 19.8011, 25.3171, 0.83 ) }
    dend_21 { pt3dadd( -58.7001, 19.4939, 26.7685, 0.83 ) }
    dend_21 { pt3dadd( -60.3005, 19.2686, 27.8445, 0.83 ) }
    dend_21 { pt3dadd( -63.7143, 18.8561, 30.0657, 0.83 ) }
    dend_21 { pt3dadd( -64.9858, 18.6839, 30.8491, 0.83 ) }
    dend_21 { pt3dadd( -68.0447, 18.2327, 32.8445, 0.83 ) }
    dend_21 { pt3dadd( -72.2184, 17.5144, 35.6395, 0.83 ) }
    dend_21 { pt3dadd( -73.2672, 17.3592, 36.3346, 0.83 ) }
    dend_21 { pt3dadd( -75.5587, 17.0696, 37.7981, 0.28 ) }
    dend_21 { pt3dadd( -76.8496, 16.8679, 38.5321, 0.83 ) }
    dend_21 { pt3dadd( -79.9572, 16.3514, 40.2018, 0.28 ) }
    dend_21 { pt3dadd( -82.1527, 15.9665, 41.2219, 0.83 ) }
    dend_21 { pt3dadd( -84.7317, 15.5091, 42.2709, 0.28 ) }
    dend_21 { pt3dadd( -85.2912, 15.4076, 42.4893, 0.55 ) }
    dend_21 { pt3dadd( -88.505, 14.9147, 43.5895, 0.55 ) }
    dend_21 { pt3dadd( -90.8252, 14.6302, 44.303, 0.28 ) }
    dend_21 { pt3dadd( -93.4904, 14.3126, 44.852, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.4487, 25.0054, -5.45301, 1.11 ) }
    dend_12 { pt3dadd( -15.5059, 28.7373, -7.84365, 1.11 ) }
    dend_12 { pt3dadd( -16.115, 30.7748, -8.95418, 1.11 ) }
    dend_12 { pt3dadd( -16.8497, 33.2321, -10.2936, 1.11 ) }
    dend_12 { pt3dadd( -17.4672, 35.2978, -11.4195, 1.11 ) }
    dend_12 { pt3dadd( -18.1944, 37.7303, -12.7453, 0.83 ) }
    dend_12 { pt3dadd( -18.9392, 40.2213, -14.1031, 0.83 ) }
    dend_12 { pt3dadd( -19.4846, 42.1861, -14.8863, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.3121, 29.6882, 14.0128, 0.83 ) }
    dend_4 { pt3dadd( 7.13462, 33.4891, 16.193, 0.83 ) }
    dend_4 { pt3dadd( 6.25394, 36.3319, 17.8237, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 5.57181, 38.5338, 19.0867, 0.83 ) }
    dend_4 { pt3dadd( 4.50731, 41.9699, 21.0577, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.3121, 29.6882, 14.0128, 0.83 ) }
    dend_1 { pt3dadd( 11.835, 32.6005, 14.1244, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.641967 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.641967 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.641967 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 6.91023, -22.6338, 1.27296, 0.83 ) }
    dend_42 { pt3dadd( 8.08725, -24.063, -1.342, 0.83 ) }
    dend_42 { pt3dadd( 8.76336, -24.7021, -2.89549, 0.83 ) }
    dend_42 { pt3dadd( 9.59286, -25.3645, -4.84848, 0.83 ) }
    dend_42 { pt3dadd( 12.9061, -27.9186, -12.903, 0.83 ) }
    dend_42 { pt3dadd( 14.7459, -29.3214, -17.3667, 0.83 ) }
    dend_42 { pt3dadd( 17.503, -31.4238, -24.0564, 0.55 ) }
    dend_42 { pt3dadd( 18.6981, -32.3411, -27.3623, 0.83 ) }
    dend_42 { pt3dadd( 20.0006, -33.2889, -31.2144, 0.83 ) }
    dend_42 { pt3dadd( 21.2204, -34.0616, -34.8665, 1.11 ) }
    dend_42 { pt3dadd( 21.4882, -34.1764, -35.4806, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.91023, -22.6338, 1.27296, 1.66 ) }
    dend_33 { pt3dadd( 7.84069, -24.9575, 1.3595, 1.66 ) }
    dend_33 { pt3dadd( 9.18148, -27.7588, 1.45149, 1.11 ) }
    dend_33 { pt3dadd( 10.1936, -29.6155, 1.51749, 1.11 ) }
    dend_33 { pt3dadd( 12.0757, -32.5043, 1.92161, 1.11 ) }
    dend_33 { pt3dadd( 13.6824, -34.9705, 2.26661, 1.11 ) }
    dend_33 { pt3dadd( 14.8062, -36.6955, 2.50793, 1.38 ) }
    dend_33 { pt3dadd( 16.1433, -38.5378, 2.79344, 1.11 ) }
    dend_33 { pt3dadd( 16.9867, -39.5621, 3.00918, 1.11 ) }
    dend_33 { pt3dadd( 20.5843, -43.1073, 4.10099, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -8.39921, -22.5012, 3.04925, 0.28 ) }
    dend_31 { pt3dadd( -10.1768, -24.0488, 5.63981, 0.28 ) }
    dend_31 { pt3dadd( -11.0352, -24.6889, 6.75721, 1.11 ) }
    dend_31 { pt3dadd( -14.065, -26.7795, 10.6662, 0.55 ) }
    dend_31 { pt3dadd( -14.9615, -27.4245, 11.863, 0.83 ) }
    dend_31 { pt3dadd( -16.9459, -28.8525, 14.5121, 0.83 ) }
    dend_31 { pt3dadd( -19.233, -30.4983, 17.5654, 0.55 ) }
    dend_31 { pt3dadd( -20.6009, -31.4208, 19.3524, 1.11 ) }
    dend_31 { pt3dadd( -23.0511, -32.994, 22.5947, 0.55 ) }
    dend_31 { pt3dadd( -23.946, -33.5647, 23.7031, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -8.39921, -22.5012, 3.04925, 0.83 ) }
    dend_28 { pt3dadd( -12.1995, -23.1518, 2.44894, 0.83 ) }
    dend_28 { pt3dadd( -15.0317, -23.6231, 1.96174, 1.11 ) }
    dend_28 { pt3dadd( -17.8059, -24.0167, 1.40987, 0.83 ) }
    dend_28 { pt3dadd( -20.8888, -24.4096, 0.706605, 0.83 ) }
    dend_28 { pt3dadd( -24.6907, -24.8942, -0.16068, 0.83 ) }
    dend_28 { pt3dadd( -28.3199, -25.3567, -0.98857, 0.83 ) }
    dend_28 { pt3dadd( -32.2736, -25.866, -1.95003, 1.11 ) }
    dend_28 { pt3dadd( -36.3778, -26.3552, -3.09085, 1.11 ) }
    dend_28 { pt3dadd( -39.9823, -26.7507, -4.17994, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -93.4904, 14.3126, 44.852, 0.28 ) }
    dend_23 { pt3dadd( -93.3958, 13.1953, 45.2938, 0.28 ) }
    dend_23 { pt3dadd( -93.3622, 12.7986, 45.4507, 0.83 ) }
    dend_23 { pt3dadd( -93.1927, 10.7962, 46.2426, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -93.4904, 14.3126, 44.852, 0.28 ) }
    dend_22 { pt3dadd( -96.8071, 14.8986, 45.8925, 0.28 ) }
    dend_22 { pt3dadd( -97.9786, 15.1031, 45.8736, 0.55 ) }
    dend_22 { pt3dadd( -100.583, 15.4843, 45.444, 0.28 ) }
    dend_22 { pt3dadd( -102.919, 15.7736, 44.9207, 0.83 ) }
    dend_22 { pt3dadd( -105.702, 16.1182, 44.2974, 0.28 ) }
    dend_22 { pt3dadd( -108.371, 16.4487, 43.6994, 0.28 ) }
    dend_22 { pt3dadd( -112.925, 16.9286, 41.9202, 0.28 ) }
    dend_22 { pt3dadd( -113.854, 17.0223, 41.4485, 0.83 ) }
    dend_22 { pt3dadd( -115.285, 17.1817, 40.4742, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -19.4846, 42.1861, -14.8863, 0.55 ) }
    dend_16 { pt3dadd( -20.903, 42.5108, -15.5083, 0.55 ) }
    dend_16 { pt3dadd( -23.4037, 43.0832, -16.6048, 0.55 ) }
    dend_16 { pt3dadd( -25.8179, 43.6359, -17.6634, 0.83 ) }
    dend_16 { pt3dadd( -30.1736, 44.633, -19.5732, 0.55 ) }
    dend_16 { pt3dadd( -32.9039, 45.258, -20.7704, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -19.4846, 42.1861, -14.8863, 0.55 ) }
    dend_13 { pt3dadd( -18.1235, 45.822, -16.1336, 0.55 ) }
    dend_13 { pt3dadd( -17.5182, 47.6394, -16.6182, 0.55 ) }
    dend_13 { pt3dadd( -17.0343, 49.214, -16.8805, 0.83 ) }
    dend_13 { pt3dadd( -16.4045, 51.2968, -17.1169, 0.55 ) }
    dend_13 { pt3dadd( -16.0091, 52.6366, -17.2563, 0.83 ) }
    dend_13 { pt3dadd( -15.4102, 54.6346, -17.4355, 0.55 ) }
    dend_13 { pt3dadd( -14.9728, 56.1637, -17.4746, 0.83 ) }
    dend_13 { pt3dadd( -14.2769, 58.3545, -17.5956, 0.28 ) }
    dend_13 { pt3dadd( -13.8417, 59.5748, -17.707, 0.83 ) }
    dend_13 { pt3dadd( -13.0508, 61.5777, -17.9483, 0.55 ) }
    dend_13 { pt3dadd( -12.405, 63.1457, -18.1712, 0.83 ) }
    dend_13 { pt3dadd( -11.3701, 65.5425, -18.5789, 0.55 ) }
    dend_13 { pt3dadd( -10.145, 68.2155, -19.1291, 0.83 ) }
    dend_13 { pt3dadd( -8.97313, 70.6844, -19.7447, 0.83 ) }
    dend_13 { pt3dadd( -7.38631, 73.97, -20.561, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 4.50731, 41.9699, 21.0577, 0.83 ) }
    dend_6 { pt3dadd( 5.17034, 44.8423, 21.7652, 0.83 ) }
    dend_6 { pt3dadd( 5.74901, 47.986, 22.566, 0.83 ) }
    dend_6 { pt3dadd( 6.05515, 49.92, 23.1463, 0.83 ) }
    dend_6 { pt3dadd( 6.43864, 52.5967, 24.0321, 0.83 ) }
    dend_6 { pt3dadd( 6.83926, 55.6058, 25.0519, 0.83 ) }
    dend_6 { pt3dadd( 7.22187, 58.933, 26.1984, 0.83 ) }
    dend_6 { pt3dadd( 7.52448, 62.09, 27.3568, 0.83 ) }
    dend_6 { pt3dadd( 7.79753, 65.2147, 28.5884, 0.83 ) }
    dend_6 { pt3dadd( 7.90557, 67.0893, 29.319, 0.55 ) }
    dend_6 { pt3dadd( 7.94923, 69.1306, 30.0471, 0.55 ) }
    dend_6 { pt3dadd( 7.95958, 70.8472, 30.5398, 0.83 ) }
    dend_6 { pt3dadd( 7.95858, 72.3915, 30.8502, 0.83 ) }
    dend_6 { pt3dadd( 7.97339, 73.8246, 31.0445, 0.55 ) }
    dend_6 { pt3dadd( 7.97225, 75.6475, 31.1178, 0.83 ) }
    dend_6 { pt3dadd( 7.96748, 77.1299, 31.1317, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 7.94944, 78.4023, 31.1375, 0.83 ) }
    dend_6 { pt3dadd( 7.89221, 80.3726, 31.1617, 0.55 ) }
    dend_6 { pt3dadd( 7.78146, 82.3484, 31.1729, 0.83 ) }
    dend_6 { pt3dadd( 7.59645, 84.1478, 31.0337, 0.55 ) }
    dend_6 { pt3dadd( 7.4548, 85.1243, 30.9191, 0.55 ) }
    dend_6 { pt3dadd( 7.19295, 86.6322, 30.7365, 0.83 ) }
    dend_6 { pt3dadd( 6.76129, 88.7828, 30.4676, 0.83 ) }
    dend_6 { pt3dadd( 6.3886, 90.5622, 30.2515, 0.55 ) }
    dend_6 { pt3dadd( 5.45758, 94.5824, 29.76, 0.83 ) }
    dend_6 { pt3dadd( 4.89329, 96.9116, 29.4819, 0.83 ) }
    dend_6 { pt3dadd( 4.22632, 99.7516, 29.1829, 0.83 ) }
    dend_6 { pt3dadd( 3.85609, 101.477, 29.0741, 0.83 ) }
    dend_6 { pt3dadd( 3.56127, 102.853, 29.0785, 0.83 ) }
    dend_6 { pt3dadd( 3.28137, 104.201, 29.1966, 0.55 ) }
    dend_6 { pt3dadd( 2.96659, 105.729, 29.4467, 0.55 ) }
    dend_6 { pt3dadd( 2.54357, 107.462, 29.7395, 0.83 ) }
    dend_6 { pt3dadd( 1.64265, 110.665, 30.2932, 0.83 ) }
    dend_6 { pt3dadd( 0.913404, 113.197, 30.7121, 1.11 ) }
    dend_6 { pt3dadd( 0.332333, 115.118, 31.0203, 0.55 ) }
    dend_6 { pt3dadd( -0.359533, 117.216, 31.3715, 1.11 ) }
    dend_6 { pt3dadd( -1.43914, 120.145, 31.9072, 0.83 ) }
    dend_6 { pt3dadd( -2.39828, 122.567, 32.3297, 0.83 ) }
    dend_6 { pt3dadd( -3.0832, 124.177, 32.5584, 0.83 ) }
    dend_6 { pt3dadd( -3.75378, 125.79, 32.7234, 0.55 ) }
    dend_6 { pt3dadd( -4.67054, 128.066, 32.8911, 0.55 ) }
    dend_6 { pt3dadd( -4.87376, 128.606, 32.9129, 0.55 ) }
    dend_6 { pt3dadd( -5.54602, 130.625, 32.9864, 0.55 ) }
    dend_6 { pt3dadd( -6.00965, 132.108, 32.9871, 0.28 ) }
    dend_6 { pt3dadd( -6.70891, 134.507, 32.861, 0.55 ) }
    dend_6 { pt3dadd( -7.42314, 137.265, 32.5757, 0.55 ) }
    dend_6 { pt3dadd( -7.79022, 138.832, 32.3605, 0.55 ) }
    dend_6 { pt3dadd( -8.40906, 141.566, 31.9682, 0.83 ) }
    dend_6 { pt3dadd( -9.03817, 144.463, 31.5354, 0.83 ) }
    dend_6 { pt3dadd( -9.52883, 146.521, 31.1446, 0.83 ) }
    dend_6 { pt3dadd( -9.85865, 147.709, 30.8657, 0.55 ) }
    dend_6 { pt3dadd( -10.1688, 148.764, 30.5904, 0.83 ) }
    dend_6 { pt3dadd( -10.723, 150.444, 30.1984, 0.83 ) }
    dend_6 { pt3dadd( -11.5157, 152.553, 29.7745, 0.83 ) }
    dend_6 { pt3dadd( -12.5295, 155.186, 29.4601, 0.83 ) }
    dend_6 { pt3dadd( -13.1855, 156.842, 29.3289, 0.83 ) }
    dend_6 { pt3dadd( -13.8358, 158.373, 29.1755, 0.83 ) }
    dend_6 { pt3dadd( -14.7941, 160.537, 28.9088, 0.55 ) }
    dend_6 { pt3dadd( -15.8514, 162.788, 28.6335, 0.55 ) }
    dend_6 { pt3dadd( -16.6098, 164.424, 28.4602, 0.55 ) }
    dend_6 { pt3dadd( -17.422, 166.246, 28.2733, 0.83 ) }
    dend_6 { pt3dadd( -18.6395, 169.031, 27.9339, 1.11 ) }
    dend_6 { pt3dadd( -19.8, 171.96, 27.6118, 0.55 ) }
    dend_6 { pt3dadd( -20.3521, 173.681, 27.4741, 0.55 ) }
    dend_6 { pt3dadd( -20.9005, 175.69, 27.3748, 0.55 ) }
    dend_6 { pt3dadd( -21.3386, 177.698, 27.3137, 0.83 ) }
    dend_6 { pt3dadd( -21.6932, 180.145, 27.2763, 0.83 ) }
    dend_6 { pt3dadd( -21.9808, 183.541, 27.2543, 0.83 ) }
    dend_6 { pt3dadd( -22.1334, 187.638, 27.1133, 0.83 ) }
    dend_6 { pt3dadd( -22.154, 190.032, 26.9455, 0.55 ) }
    dend_6 { pt3dadd( -22.1403, 192.411, 26.7061, 0.55 ) }
    dend_6 { pt3dadd( -22.076, 195.404, 26.3334, 0.83 ) }
    dend_6 { pt3dadd( -22.0796, 196.805, 26.126, 0.83 ) }
    dend_6 { pt3dadd( -22.2138, 199.003, 25.798, 0.83 ) }
    dend_6 { pt3dadd( -22.5397, 201.572, 25.5128, 0.83 ) }
    dend_6 { pt3dadd( -22.9572, 203.666, 25.4409, 0.28 ) }
    dend_6 { pt3dadd( -23.2523, 204.735, 25.4781, 0.83 ) }
    dend_6 { pt3dadd( -24.2528, 207.757, 25.7204, 0.83 ) }
    dend_6 { pt3dadd( -25.1348, 210.144, 26.0194, 0.83 ) }
    dend_6 { pt3dadd( -26.1053, 212.435, 26.4597, 0.83 ) }
    dend_6 { pt3dadd( -27.1815, 214.77, 27.0444, 0.83 ) }
    dend_6 { pt3dadd( -27.9378, 216.31, 27.4932, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 4.50731, 41.9699, 21.0577, 0.83 ) }
    dend_5 { pt3dadd( 2.77017, 43.4701, 23.1331, 0.83 ) }
    dend_5 { pt3dadd( 1.52976, 44.8168, 24.8009, 0.55 ) }
    dend_5 { pt3dadd( -0.467432, 47.0026, 27.4829, 0.55 ) }
    dend_5 { pt3dadd( -2.33716, 49.049, 29.9831, 0.55 ) }
    dend_5 { pt3dadd( -4.45382, 51.132, 32.7042, 0.55 ) }
    dend_5 { pt3dadd( -6.04147, 52.485, 34.7, 0.55 ) }
    dend_5 { pt3dadd( -8.78983, 54.3817, 38.1475, 0.55 ) }
    dend_5 { pt3dadd( -10.7851, 55.4188, 40.4962, 0.55 ) }
    dend_5 { pt3dadd( -13.5996, 56.3312, 43.3896, 0.55 ) }
    dend_5 { pt3dadd( -18.1674, 56.7518, 47.4098, 0.55 ) }
    dend_5 { pt3dadd( -20.9215, 56.523, 49.4642, 0.55 ) }
    dend_5 { pt3dadd( -23.9488, 55.6804, 51.4281, 0.55 ) }
    dend_5 { pt3dadd( -25.7711, 54.8465, 52.3898, 0.55 ) }
    dend_5 { pt3dadd( -27.2477, 53.9191, 53.0221, 0.55 ) }
    dend_5 { pt3dadd( -30.0021, 51.7141, 53.897, 0.28 ) }
    dend_5 { pt3dadd( -31.3452, 50.4183, 54.2172, 0.83 ) }
    dend_5 { pt3dadd( -33.1465, 48.5177, 54.6134, 0.55 ) }
    dend_5 { pt3dadd( -34.3, 47.1068, 54.7714, 0.55 ) }
    dend_5 { pt3dadd( -35.7193, 44.9298, 54.8079, 0.55 ) }
    dend_5 { pt3dadd( -36.9954, 42.6293, 54.7058, 0.83 ) }
    dend_5 { pt3dadd( -38.0516, 40.5759, 54.5226, 0.55 ) }
    dend_5 { pt3dadd( -38.9394, 38.8329, 54.2817, 0.55 ) }
    dend_5 { pt3dadd( -40.9926, 34.7444, 53.5802, 0.55 ) }
    dend_5 { pt3dadd( -43.0672, 30.8606, 52.8436, 0.83 ) }
    dend_5 { pt3dadd( -44.7347, 27.9975, 52.2162, 0.83 ) }
    dend_5 { pt3dadd( -46.5589, 25.1403, 51.3401, 0.83 ) }
    dend_5 { pt3dadd( -48.7882, 21.9718, 50.27, 0.55 ) }
    dend_5 { pt3dadd( -49.8755, 20.5361, 49.8312, 0.28 ) }
    dend_5 { pt3dadd( -51.2771, 18.841, 49.404, 0.55 ) }
    dend_5 { pt3dadd( -52.9776, 17.0275, 48.9566, 0.28 ) }
    dend_5 { pt3dadd( -56.6578, 13.3327, 48.2031, 0.55 ) }
    dend_5 { pt3dadd( -58.9576, 11.1445, 47.8572, 0.55 ) }
    dend_5 { pt3dadd( -61.2004, 9.05875, 47.6756, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -63.222, 7.18683, 47.6054, 0.55 ) }
    dend_5 { pt3dadd( -66.6759, 3.81268, 47.5855, 0.55 ) }
    dend_5 { pt3dadd( -67.8607, 2.58884, 47.6387, 0.83 ) }
    dend_5 { pt3dadd( -69.9209, 0.28738, 47.8142, 0.55 ) }
    dend_5 { pt3dadd( -72.7098, -3.16217, 47.9014, 0.55 ) }
    dend_5 { pt3dadd( -74.5204, -5.87477, 47.847, 0.83 ) }
    dend_5 { pt3dadd( -76.2444, -9.20122, 47.735, 0.55 ) }
    dend_5 { pt3dadd( -77.2227, -11.8126, 47.5946, 0.55 ) }
    dend_5 { pt3dadd( -77.9913, -14.4661, 47.4047, 0.55 ) }
    dend_5 { pt3dadd( -78.2767, -15.8895, 47.2787, 0.83 ) }
    dend_5 { pt3dadd( -78.7867, -19.5766, 46.8723, 0.55 ) }
    dend_5 { pt3dadd( -79.1934, -23.911, 46.3455, 0.28 ) }
    dend_5 { pt3dadd( -79.6676, -30.1928, 45.5752, 0.28 ) }
    dend_5 { pt3dadd( -79.8706, -32.8331, 45.1581, 0.83 ) }
    dend_5 { pt3dadd( -80.2567, -38.0165, 44.2689, 0.28 ) }
    dend_5 { pt3dadd( -80.3992, -39.8341, 43.9707, 0.83 ) }
    dend_5 { pt3dadd( -80.4966, -40.9675, 43.7974, 0.28 ) }
    dend_5 { pt3dadd( -80.5979, -42.7504, 43.4866, 0.83 ) }
    dend_5 { pt3dadd( -80.8166, -46.3045, 42.869, 0.28 ) }
    dend_5 { pt3dadd( -80.9583, -47.6654, 42.6783, 0.55 ) }
    dend_5 { pt3dadd( -81.4522, -50.7333, 42.3477, 0.28 ) }
    dend_5 { pt3dadd( -81.7858, -52.5052, 42.1769, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.835, 32.6005, 14.1244, 0.83 ) }
    dend_3 { pt3dadd( 12.2803, 34.1314, 11.8352, 0.83 ) }
    dend_3 { pt3dadd( 12.8598, 36.0698, 9.26324, 0.83 ) }
    dend_3 { pt3dadd( 13.2563, 37.3046, 7.79735, 0.83 ) }
    dend_3 { pt3dadd( 15.97, 44.7349, -0.124195, 0.55 ) }
    dend_3 { pt3dadd( 16.8383, 46.7825, -2.00988, 0.55 ) }
    dend_3 { pt3dadd( 17.3735, 47.8901, -2.88235, 0.55 ) }
    dend_3 { pt3dadd( 18.1352, 49.3054, -3.86094, 0.55 ) }
    dend_3 { pt3dadd( 18.9795, 50.71, -4.54517, 1.11 ) }
    dend_3 { pt3dadd( 20.0438, 52.3597, -4.90332, 0.55 ) }
    dend_3 { pt3dadd( 21.9809, 55.1433, -4.79875, 0.55 ) }
    dend_3 { pt3dadd( 23.6385, 57.6449, -4.60221, 0.55 ) }
    dend_3 { pt3dadd( 24.7075, 59.2718, -4.41395, 0.55 ) }
    dend_3 { pt3dadd( 26.0223, 61.3169, -4.00294, 0.83 ) }
    dend_3 { pt3dadd( 27.5014, 63.8015, -3.34783, 0.55 ) }
    dend_3 { pt3dadd( 28.5333, 65.782, -2.74879, 1.11 ) }
    dend_3 { pt3dadd( 29.5296, 67.8433, -2.04025, 0.55 ) }
    dend_3 { pt3dadd( 30.4725, 69.8683, -1.30789, 0.83 ) }
    dend_3 { pt3dadd( 32.0526, 73.3945, -0.0682344, 0.55 ) }
    dend_3 { pt3dadd( 32.8671, 75.2464, 0.54517, 0.55 ) }
    dend_3 { pt3dadd( 33.9501, 77.8129, 1.31982, 0.55 ) }
    dend_3 { pt3dadd( 34.8088, 79.8341, 1.79638, 0.55 ) }
    dend_3 { pt3dadd( 35.3293, 81.092, 2.0289, 0.28 ) }
    dend_3 { pt3dadd( 36.3693, 83.5967, 2.35612, 0.55 ) }
    dend_3 { pt3dadd( 37.1441, 85.4876, 2.48961, 0.28 ) }
    dend_3 { pt3dadd( 37.878, 87.2066, 2.5702, 0.55 ) }
    dend_3 { pt3dadd( 39.2766, 90.4407, 2.66548, 0.55 ) }
    dend_3 { pt3dadd( 40.0218, 92.2647, 2.70034, 0.55 ) }
    dend_3 { pt3dadd( 41.0546, 94.8025, 2.71287, 0.28 ) }
    dend_3 { pt3dadd( 41.9514, 97.4411, 1.99774, 0.83 ) }
    dend_3 { pt3dadd( 42.6617, 99.7586, 0.985521, 0.28 ) }
    dend_3 { pt3dadd( 42.8179, 100.27, 0.683709, 0.55 ) }
    dend_3 { pt3dadd( 43.1798, 101.415, -0.258462, 0.28 ) }
    dend_3 { pt3dadd( 43.4093, 102.111, -0.948415, 0.83 ) }
    dend_3 { pt3dadd( 46.2736, 110.411, -10.173, 0.55 ) }
    dend_3 { pt3dadd( 47.4657, 113.473, -13.7186, 0.55 ) }
    dend_3 { pt3dadd( 47.8526, 114.4, -14.763, 0.83 ) }
    dend_3 { pt3dadd( 48.8827, 116.566, -16.8336, 0.55 ) }
    dend_3 { pt3dadd( 49.4538, 117.629, -17.6026, 0.55 ) }
    dend_3 { pt3dadd( 50.1723, 118.895, -17.8821, 0.83 ) }
    dend_3 { pt3dadd( 51.0754, 120.48, -17.4017, 0.28 ) }
    dend_3 { pt3dadd( 51.4375, 121.342, -17.2431, 0.55 ) }
    dend_3 { pt3dadd( 52.2601, 123.775, -16.5849, 0.28 ) }
    dend_3 { pt3dadd( 52.7227, 125.368, -15.9218, 0.55 ) }
    dend_3 { pt3dadd( 53.1017, 126.748, -15.363, 0.28 ) }
    dend_3 { pt3dadd( 53.3208, 128.131, -14.9483, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.835, 32.6005, 14.1244, 0.55 ) }
    dend_2 { pt3dadd( 13.6614, 31.8417, 15.3749, 0.55 ) }
    dend_2 { pt3dadd( 16.4021, 30.7031, 17.2513, 0.28 ) }
    dend_2 { pt3dadd( 17.8401, 30.1057, 18.2358, 0.55 ) }
    dend_2 { pt3dadd( 20.4815, 29.0083, 20.0442, 0.55 ) }
    dend_2 { pt3dadd( 23.9351, 27.5735, 22.4087, 0.55 ) }
    dend_2 { pt3dadd( 25.8233, 26.789, 23.7014, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 21.4882, -34.1764, -35.4806, 0.55 ) }
    dend_48 { pt3dadd( 19.0532, -32.2618, -37.3768, 0.55 ) }
    dend_48 { pt3dadd( 18.4179, -31.722, -38.2202, 0.83 ) }
    dend_48 { pt3dadd( 17.0057, -30.4994, -40.3247, 0.55 ) }
    dend_48 { pt3dadd( 16.4182, -30.0205, -41.181, 0.55 ) }
    dend_48 { pt3dadd( 13.9475, -28.2268, -45.6575, 0.28 ) }
    dend_48 { pt3dadd( 13.4436, -27.9101, -46.615, 0.83 ) }
    dend_48 { pt3dadd( 11.5749, -26.9389, -50.9194, 0.55 ) }
    dend_48 { pt3dadd( 11.3793, -26.8592, -51.3948, 0.55 ) }
    dend_48 { pt3dadd( 10.8653, -26.7078, -52.6995, 0.83 ) }
    dend_48 { pt3dadd( 8.53894, -26.1926, -58.4313, 0.55 ) }
    dend_48 { pt3dadd( 8.07593, -26.124, -59.5133, 0.55 ) }
    dend_48 { pt3dadd( 7.56395, -26.0534, -60.754, 0.83 ) }
    dend_48 { pt3dadd( 6.5005, -25.8526, -63.5838, 0.55 ) }
    dend_48 { pt3dadd( 6.29276, -25.7761, -64.1978, 0.55 ) }
    dend_48 { pt3dadd( 5.95471, -25.5589, -65.3857, 0.55 ) }
    dend_48 { pt3dadd( 4.68099, -24.3416, -70.2214, 0.28 ) }
    dend_48 { pt3dadd( 4.37122, -23.9689, -71.5799, 0.83 ) }
    dend_48 { pt3dadd( 3.3832, -22.5486, -76.1926, 0.55 ) }
    dend_48 { pt3dadd( 3.148, -22.1242, -77.3817, 0.83 ) }
    dend_48 { pt3dadd( 1.99774, -19.6466, -83.3576, 0.55 ) }
    dend_48 { pt3dadd( 1.73193, -18.8205, -85.0483, 0.28 ) }
    dend_48 { pt3dadd( 1.60186, -18.2655, -86.0364, 0.83 ) }
    dend_48 { pt3dadd( 1.43388, -17.2161, -87.7257, 0.55 ) }
    dend_48 { pt3dadd( 1.35345, -16.356, -88.8993, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( 1.34025, -14.2564, -91.4876, 0.55 ) }
    dend_48 { pt3dadd( 1.60479, -11.0534, -94.7398, 0.28 ) }
    dend_48 { pt3dadd( 1.66954, -10.5649, -95.2189, 0.55 ) }
    dend_48 { pt3dadd( 1.88375, -9.26685, -96.4605, 0.28 ) }
    dend_48 { pt3dadd( 1.98403, -8.7408, -96.9595, 0.55 ) }
    dend_48 { pt3dadd( 2.34256, -6.95974, -98.606, 0.28 ) }
    dend_48 { pt3dadd( 2.48565, -6.33313, -99.1562, 0.55 ) }
    dend_48 { pt3dadd( 2.91441, -4.36903, -100.867, 0.28 ) }
    dend_48 { pt3dadd( 3.07009, -3.64294, -101.541, 0.55 ) }
    dend_48 { pt3dadd( 3.35696, -2.03757, -103.053, 0.28 ) }
    dend_48 { pt3dadd( 3.40194, -1.67624, -103.398, 0.55 ) }
    dend_48 { pt3dadd( 3.53336, -0.228416, -104.698, 0.28 ) }
    dend_48 { pt3dadd( 3.57326, 0.27325, -105.142, 0.55 ) }
    dend_48 { pt3dadd( 3.62482, 1.83166, -106.468, 0.28 ) }
    dend_48 { pt3dadd( 3.6059, 2.60787, -107.225, 0.55 ) }
    dend_48 { pt3dadd( 3.42094, 4.87014, -109.461, 0.28 ) }
    dend_48 { pt3dadd( 3.29906, 5.79217, -110.411, 0.55 ) }
    dend_48 { pt3dadd( 2.90416, 8.32934, -113.358, 0.28 ) }
    dend_48 { pt3dadd( 2.79093, 9.09685, -114.323, 0.55 ) }
    dend_48 { pt3dadd( 2.5108, 11.5665, -117.837, 0.28 ) }
    dend_48 { pt3dadd( 2.41827, 12.3882, -119.114, 0.28 ) }
    dend_48 { pt3dadd( 2.30942, 13.3461, -120.689, 0.55 ) }
    dend_48 { pt3dadd( 2.05332, 14.9979, -123.42, 0.28 ) }
    dend_48 { pt3dadd( 2.00276, 15.3074, -123.89, 0.55 ) }
    dend_48 { pt3dadd( 1.79762, 16.6303, -126.079, 0.28 ) }
    dend_48 { pt3dadd( 1.69033, 17.2641, -127.12, 0.83 ) }
    dend_48 { pt3dadd( 1.41816, 18.5524, -129.239, 0.55 ) }
    dend_48 { pt3dadd( 1.2505, 19.3888, -130.613, 0.55 ) }
    dend_48 { pt3dadd( 0.973994, 20.8891, -132.974, 0.55 ) }
    dend_48 { pt3dadd( 0.429888, 24.6182, -139.079, 0.83 ) }
    dend_48 { pt3dadd( 0.298563, 25.9048, -141.28, 0.28 ) }
    dend_48 { pt3dadd( 0.268674, 26.5845, -142.5, 0.55 ) }
    dend_48 { pt3dadd( 0.34846, 29.1013, -147.33, 0.55 ) }
    dend_48 { pt3dadd( 0.439786, 29.7642, -148.624, 0.55 ) }
    dend_48 { pt3dadd( 0.874806, 31.8985, -153.015, 0.83 ) }
    dend_48 { pt3dadd( 1.2022, 33.2616, -155.991, 0.28 ) }
    dend_48 { pt3dadd( 1.37242, 33.9662, -158.012, 0.55 ) }
    dend_48 { pt3dadd( 1.57585, 34.5323, -160.519, 0.28 ) }
    dend_48 { pt3dadd( 1.65924, 34.6703, -161.613, 0.83 ) }
    dend_48 { pt3dadd( 2.03184, 34.9963, -167.813, 0.55 ) }
    dend_48 { pt3dadd( 2.14102, 34.9574, -170.204, 0.55 ) }
    dend_48 { pt3dadd( 2.23907, 34.6372, -175.676, 0.55 ) }
    dend_48 { pt3dadd( 1.99134, 34.0703, -183.812, 0.55 ) }
    dend_48 { pt3dadd( 1.86796, 33.9282, -185.703, 0.55 ) }
    dend_48 { pt3dadd( 1.44867, 33.5884, -190.453, 0.55 ) }
    dend_48 { pt3dadd( 0.892622, 33.2954, -195.419, 0.55 ) }
    dend_48 { pt3dadd( 0.363445, 33.1341, -199.28, 0.55 ) }
    dend_48 { pt3dadd( -0.673397, 32.9508, -205.079, 0.55 ) }
    dend_48 { pt3dadd( -1.93561, 32.88, -210.955, 0.55 ) }
    dend_48 { pt3dadd( -2.22658, 32.8828, -212.27, 0.55 ) }
    dend_48 { pt3dadd( -3.50237, 32.8614, -218.037, 0.55 ) }
    dend_48 { pt3dadd( -3.81593, 32.8525, -219.425, 0.28 ) }
    dend_48 { pt3dadd( -3.88803, 32.8452, -219.761, 0.55 ) }
    dend_48 { pt3dadd( -6.69061, 32.2574, -232.846, 0.28 ) }
    dend_48 { pt3dadd( -6.96165, 32.1924, -234.026, 0.83 ) }
    dend_48 { pt3dadd( -8.58277, 31.6938, -240.978, 0.28 ) }
    dend_48 { pt3dadd( -8.68986, 31.659, -241.423, 0.55 ) }
    dend_48 { pt3dadd( -9.48402, 31.4341, -244.668, 0.28 ) }
    dend_48 { pt3dadd( -9.82005, 31.3371, -245.984, 0.55 ) }
    dend_48 { pt3dadd( -10.6355, 31.0425, -248.47, 0.28 ) }
    dend_48 { pt3dadd( -10.909, 30.9344, -249.329, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 21.4882, -34.1764, -35.4806, 0.55 ) }
    dend_43 { pt3dadd( 23.4088, -34.4123, -37.3602, 0.55 ) }
    dend_43 { pt3dadd( 25.0173, -34.5925, -38.7718, 0.55 ) }
    dend_43 { pt3dadd( 28.6149, -34.9686, -42.095, 0.83 ) }
    dend_43 { pt3dadd( 29.5728, -35.1058, -42.9925, 0.83 ) }
    dend_43 { pt3dadd( 30.6892, -35.2942, -44.0321, 0.83 ) }
    dend_43 { pt3dadd( 31.6294, -35.4507, -44.8823, 0.83 ) }
    dend_43 { pt3dadd( 33.2924, -35.7208, -46.3353, 0.83 ) }
    dend_43 { pt3dadd( 36.0679, -36.2524, -48.7809, 0.83 ) }
    dend_43 { pt3dadd( 37.7808, -36.5393, -50.1922, 0.83 ) }
    dend_43 { pt3dadd( 39.6528, -36.7904, -51.8023, 0.83 ) }
    dend_43 { pt3dadd( 41.7393, -37.0142, -53.5855, 0.83 ) }
    dend_43 { pt3dadd( 43.6399, -37.1837, -55.2034, 0.83 ) }
    dend_43 { pt3dadd( 46.7274, -37.439, -57.7351, 0.83 ) }
    dend_43 { pt3dadd( 48.6418, -37.5444, -59.2164, 0.83 ) }
    dend_43 { pt3dadd( 51.087, -37.5685, -61.1096, 0.83 ) }
    dend_43 { pt3dadd( 52.6558, -37.5398, -62.3389, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 20.5843, -43.1073, 4.10099, 0.55 ) }
    dend_39 { pt3dadd( 21.5666, -43.1102, 5.36845, 0.55 ) }
    dend_39 { pt3dadd( 22.3714, -43.1807, 6.43934, 0.28 ) }
    dend_39 { pt3dadd( 22.8728, -43.2795, 7.12653, 0.55 ) }
    dend_39 { pt3dadd( 23.7164, -43.4904, 8.2984, 1.11 ) }
    dend_39 { pt3dadd( 25.1882, -43.9743, 10.5004, 0.55 ) }
    dend_39 { pt3dadd( 25.7333, -44.187, 11.3685, 0.55 ) }
    dend_39 { pt3dadd( 26.3063, -44.4782, 12.3685, 0.83 ) }
    dend_39 { pt3dadd( 26.8932, -44.8102, 13.4545, 0.28 ) }
    dend_39 { pt3dadd( 26.8932, -44.8102, 13.4545, 0.83 ) }
    dend_39 { pt3dadd( 27.8087, -45.657, 15.3842, 0.28 ) }
    dend_39 { pt3dadd( 28.0507, -45.9151, 15.906, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 20.5843, -43.1073, 4.10099, 0.83 ) }
    dend_34 { pt3dadd( 23.1445, -46.7558, 3.63058, 0.83 ) }
    dend_34 { pt3dadd( 25.5107, -49.4667, 2.8675, 0.55 ) }
    dend_34 { pt3dadd( 27.1313, -50.9899, 2.12206, 0.83 ) }
    dend_34 { pt3dadd( 28.4537, -52.2328, 1.51384, 0.83 ) }
    dend_34 { pt3dadd( 30.2864, -53.9553, 0.670856, 0.83 ) }
    dend_34 { pt3dadd( 31.896, -55.4682, -0.0694887, 0.83 ) }
    dend_34 { pt3dadd( 35.3017, -57.929, -1.92732, 0.83 ) }
    dend_34 { pt3dadd( 37.8778, -59.5042, -3.62206, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -39.9823, -26.7507, -4.17994, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -40.7517, -24.0402, -6.03139, 0.55 ) }
    dend_30 { pt3dadd( -41.6626, -20.2883, -8.48408, 0.83 ) }
    dend_30 { pt3dadd( -42.8465, -15.0489, -12.01, 0.55 ) }
    dend_30 { pt3dadd( -43.3624, -12.498, -13.6091, 0.55 ) }
    dend_30 { pt3dadd( -44.055, -8.75985, -15.8315, 1.11 ) }
    dend_30 { pt3dadd( -44.6666, -5.4267, -17.731, 0.83 ) }
    dend_30 { pt3dadd( -45.2598, -1.90663, -19.6587, 0.55 ) }
    dend_30 { pt3dadd( -45.487, -0.463611, -20.3997, 0.55 ) }
    dend_30 { pt3dadd( -46.2705, 3.05967, -21.9923, 0.55 ) }
    dend_30 { pt3dadd( -46.4366, 3.77408, -22.3168, 1.11 ) }
    dend_30 { pt3dadd( -47.0626, 5.51998, -22.8176, 0.55 ) }
    dend_30 { pt3dadd( -48.0701, 7.27136, -22.8901, 0.83 ) }
    dend_30 { pt3dadd( -49.3164, 8.88579, -22.6689, 0.55 ) }
    dend_30 { pt3dadd( -50.9478, 10.7532, -22.307, 0.55 ) }
    dend_30 { pt3dadd( -52.1914, 12.0641, -22.0953, 0.83 ) }
    dend_30 { pt3dadd( -57.7094, 18.3453, -21.9181, 0.55 ) }
    dend_30 { pt3dadd( -59.1143, 20.108, -22.0202, 0.83 ) }
    dend_30 { pt3dadd( -60.8201, 22.4044, -22.4019, 0.55 ) }
    dend_30 { pt3dadd( -62.5869, 24.7912, -23.0662, 0.55 ) }
    dend_30 { pt3dadd( -64.1124, 27.0062, -24.0484, 1.11 ) }
    dend_30 { pt3dadd( -66.6487, 31.1969, -26.3989, 0.55 ) }
    dend_30 { pt3dadd( -67.3773, 32.5696, -27.2794, 0.55 ) }
    dend_30 { pt3dadd( -69.1631, 36.224, -29.5733, 0.55 ) }
    dend_30 { pt3dadd( -70.2607, 38.6262, -31.0616, 0.55 ) }
    dend_30 { pt3dadd( -71.6951, 41.7348, -32.892, 1.11 ) }
    dend_30 { pt3dadd( -73.3808, 45.2007, -34.8159, 0.55 ) }
    dend_30 { pt3dadd( -74.5132, 47.3116, -35.845, 1.11 ) }
    dend_30 { pt3dadd( -75.9713, 49.9277, -37.1042, 0.28 ) }
    dend_30 { pt3dadd( -76.5092, 50.839, -37.4978, 0.55 ) }
    dend_30 { pt3dadd( -77.4651, 52.3035, -38.0623, 0.28 ) }
    dend_30 { pt3dadd( -78.9283, 54.1734, -38.6461, 0.83 ) }
    dend_30 { pt3dadd( -81.3911, 56.8956, -39.4505, 0.28 ) }
    dend_30 { pt3dadd( -82.358, 57.9023, -39.6802, 0.55 ) }
    dend_30 { pt3dadd( -86.5278, 62.0003, -40.3623, 0.28 ) }
    dend_30 { pt3dadd( -88.1261, 63.5815, -40.5705, 0.83 ) }
    dend_30 { pt3dadd( -90.397, 65.8879, -40.8466, 0.55 ) }
    dend_30 { pt3dadd( -92.6817, 68.2609, -41.12, 0.55 ) }
    dend_30 { pt3dadd( -94.9576, 70.6892, -41.4486, 0.55 ) }
    dend_30 { pt3dadd( -96.6584, 72.6003, -41.703, 0.83 ) }
    dend_30 { pt3dadd( -98.5793, 74.912, -42.0495, 0.28 ) }
    dend_30 { pt3dadd( -100.342, 77.2033, -42.4038, 0.55 ) }
    dend_30 { pt3dadd( -102.306, 80.2618, -42.9648, 0.55 ) }
    dend_30 { pt3dadd( -102.632, 80.8955, -43.0794, 0.83 ) }
    dend_30 { pt3dadd( -103.72, 83.806, -43.8909, 0.28 ) }
    dend_30 { pt3dadd( -104.095, 85.4879, -44.4128, 0.55 ) }
    dend_30 { pt3dadd( -104.209, 86.8851, -45.011, 0.28 ) }
    dend_30 { pt3dadd( -104.14, 89.701, -46.6574, 0.55 ) }
    dend_30 { pt3dadd( -103.819, 92.6463, -48.6596, 0.55 ) }
    dend_30 { pt3dadd( -103.261, 96.8127, -51.7224, 0.28 ) }
    dend_30 { pt3dadd( -102.609, 99.5486, -54.2026, 0.83 ) }
    dend_30 { pt3dadd( -101.411, 103.45, -58.1061, 0.55 ) }
    dend_30 { pt3dadd( -100.397, 106.251, -61.0808, 0.55 ) }
    dend_30 { pt3dadd( -99.9606, 107.419, -62.3803, 0.55 ) }
    dend_30 { pt3dadd( -99.2607, 109.174, -64.5328, 0.83 ) }
    dend_30 { pt3dadd( -97.5257, 113.994, -70.462, 0.28 ) }
    dend_30 { pt3dadd( -97.2092, 114.972, -71.7341, 0.83 ) }
    dend_30 { pt3dadd( -96.9019, 116.33, -73.4128, 0.28 ) }
    dend_30 { pt3dadd( -96.7708, 117.726, -75.0032, 0.55 ) }
    dend_30 { pt3dadd( -97.1861, 121.059, -78.8271, 0.83 ) }
    dend_30 { pt3dadd( -97.763, 122.128, -79.6901, 0.83 ) }
    dend_30 { pt3dadd( -99.3441, 123.863, -80.3091, 0.28 ) }
    dend_30 { pt3dadd( -100.231, 124.698, -80.4128, 0.55 ) }
    dend_30 { pt3dadd( -102.489, 126.683, -80.2821, 0.28 ) }
    dend_30 { pt3dadd( -104.16, 128.246, -79.9805, 0.55 ) }
    dend_30 { pt3dadd( -109.161, 132.71, -77.7312, 0.28 ) }
    dend_30 { pt3dadd( -110.181, 133.616, -77.1564, 0.55 ) }
    dend_30 { pt3dadd( -111.753, 135.128, -76.1277, 0.28 ) }
    dend_30 { pt3dadd( -112.97, 136.362, -75.229, 0.83 ) }
    dend_30 { pt3dadd( -114.929, 138.425, -73.6629, 0.83 ) }
    dend_30 { pt3dadd( -120.18, 144.525, -69.2184, 0.28 ) }
    dend_30 { pt3dadd( -120.888, 145.455, -68.6025, 0.55 ) }
    dend_30 { pt3dadd( -123.236, 148.751, -66.4944, 0.28 ) }
    dend_30 { pt3dadd( -124.498, 150.651, -65.3406, 0.83 ) }
    dend_30 { pt3dadd( -125.774, 152.74, -64.1615, 0.28 ) }
    dend_30 { pt3dadd( -126.725, 154.485, -63.3396, 0.83 ) }
    dend_30 { pt3dadd( -128.378, 158.294, -62.1847, 0.28 ) }
    dend_30 { pt3dadd( -129.044, 160.042, -61.7646, 0.83 ) }
    dend_30 { pt3dadd( -130.097, 163.336, -61.2619, 0.28 ) }
    dend_30 { pt3dadd( -130.586, 165.343, -61.265, 0.55 ) }
    dend_30 { pt3dadd( -130.931, 167.434, -61.5639, 0.28 ) }
    dend_30 { pt3dadd( -131.096, 169.863, -62.395, 0.55 ) }
    dend_30 { pt3dadd( -131.096, 172.813, -63.865, 0.28 ) }
    dend_30 { pt3dadd( -131.03, 174.04, -64.6006, 0.83 ) }
    dend_30 { pt3dadd( -130.773, 177.05, -66.6081, 0.28 ) }
    dend_30 { pt3dadd( -130.472, 179.267, -68.44, 0.83 ) }
    dend_30 { pt3dadd( -129.859, 183.207, -71.8781, 0.28 ) }
    dend_30 { pt3dadd( -129.568, 184.472, -73.1723, 0.83 ) }
    dend_30 { pt3dadd( -128.9, 186.703, -75.7299, 0.28 ) }
    dend_30 { pt3dadd( -128.546, 187.575, -76.8877, 0.83 ) }
    dend_30 { pt3dadd( -126.186, 192.625, -84.0448, 0.28 ) }
    dend_30 { pt3dadd( -125.143, 194.544, -87.1066, 0.83 ) }
    dend_30 { pt3dadd( -122.552, 198.881, -94.3867, 0.28 ) }
    dend_30 { pt3dadd( -121.492, 200.424, -97.1502, 0.83 ) }
    dend_30 { pt3dadd( -119.461, 203.177, -102.363, 0.28 ) }
    dend_30 { pt3dadd( -118.802, 204.024, -104.048, 0.55 ) }
    dend_30 { pt3dadd( -117.003, 206.575, -108.918, 0.28 ) }
    dend_30 { pt3dadd( -116.482, 207.409, -110.489, 0.28 ) }
    dend_30 { pt3dadd( -115.568, 209.538, -113.968, 0.55 ) }
    dend_30 { pt3dadd( -114.768, 212.68, -119.355, 0.28 ) }
    dend_30 { pt3dadd( -114.481, 214.821, -123.095, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -114.178, 216.727, -126.772, 0.28 ) }
    dend_30 { pt3dadd( -114.062, 217.661, -128.607, 0.55 ) }
    dend_30 { pt3dadd( -114.053, 219.165, -131.376, 0.28 ) }
    dend_30 { pt3dadd( -114.871, 226.305, -143.352, 0.28 ) }
    dend_30 { pt3dadd( -115.012, 227.158, -144.671, 0.83 ) }
    dend_30 { pt3dadd( -116.087, 232.84, -152.998, 0.28 ) }
    dend_30 { pt3dadd( -116.181, 233.465, -153.936, 0.83 ) }
    dend_30 { pt3dadd( -117.431, 240.927, -163.961, 0.28 ) }
    dend_30 { pt3dadd( -117.627, 241.708, -164.637, 0.55 ) }
    dend_30 { pt3dadd( -119.407, 245.487, -164.818, 0.28 ) }
    dend_30 { pt3dadd( -119.914, 246.642, -164.986, 0.55 ) }
    dend_30 { pt3dadd( -120.791, 248.359, -165.159, 0.28 ) }
    dend_30 { pt3dadd( -121.1, 249.872, -166.19, 0.55 ) }
    dend_30 { pt3dadd( -121.208, 252.262, -168.561, 0.28 ) }
    dend_30 { pt3dadd( -121.254, 253.389, -169.696, 1.11 ) }
    dend_30 { pt3dadd( -121.613, 255.926, -172.253, 0.28 ) }
    dend_30 { pt3dadd( -121.75, 256.947, -173.391, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -39.9823, -26.7507, -4.17994, 0.55 ) }
    dend_29 { pt3dadd( -43.621, -29.3543, -5.60861, 0.55 ) }
    dend_29 { pt3dadd( -45.267, -30.3983, -6.23663, 0.55 ) }
    dend_29 { pt3dadd( -47.8633, -31.8925, -7.1411, 0.83 ) }
    dend_29 { pt3dadd( -50.5394, -33.4195, -8.03049, 0.55 ) }
    dend_29 { pt3dadd( -52.8379, -34.7942, -8.62283, 0.55 ) }
    dend_29 { pt3dadd( -53.9246, -35.4908, -8.84949, 0.83 ) }
    dend_29 { pt3dadd( -55.5534, -36.6019, -9.00489, 0.55 ) }
    dend_29 { pt3dadd( -58.574, -38.5909, -8.80334, 0.55 ) }
    dend_29 { pt3dadd( -60.1602, -39.657, -8.47877, 0.55 ) }
    dend_29 { pt3dadd( -63.0931, -41.7544, -7.57416, 0.55 ) }
    dend_29 { pt3dadd( -64.4299, -42.7337, -7.01074, 0.28 ) }
    dend_29 { pt3dadd( -67.4743, -45.0471, -5.50071, 0.83 ) }
    dend_29 { pt3dadd( -71.1163, -47.7242, -3.43827, 0.55 ) }
    dend_29 { pt3dadd( -71.7789, -48.185, -3.04065, 0.55 ) }
    dend_29 { pt3dadd( -73.8945, -49.565, -1.83517, 0.83 ) }
    dend_29 { pt3dadd( -76.3927, -51.0636, -0.60299, 0.55 ) }
    dend_29 { pt3dadd( -78.2218, -52.1011, 0.217008, 0.83 ) }
    dend_29 { pt3dadd( -83.0155, -54.8588, 1.93024, 0.55 ) }
    dend_29 { pt3dadd( -85.0782, -56.1287, 2.42214, 0.83 ) }
    dend_29 { pt3dadd( -87.5871, -57.6515, 2.80198, 0.28 ) }
    dend_29 { pt3dadd( -89.4893, -58.7777, 2.87031, 0.55 ) }
    dend_29 { pt3dadd( -91.4718, -59.9756, 2.64646, 0.55 ) }
    dend_29 { pt3dadd( -94.2542, -61.6977, 1.99159, 0.28 ) }
    dend_29 { pt3dadd( -95.3853, -62.4481, 1.53408, 0.28 ) }
    dend_29 { pt3dadd( -96.3537, -63.0725, 1.10392, 0.55 ) }
    dend_29 { pt3dadd( -98.966, -64.8861, -0.00771493, 0.28 ) }
    dend_29 { pt3dadd( -99.9926, -65.641, -0.296142, 0.55 ) }
    dend_29 { pt3dadd( -100.5, -66.0434, -0.412648, 0.28 ) }
    dend_29 { pt3dadd( -101.906, -67.1753, -0.581305, 0.28 ) }
    dend_29 { pt3dadd( -102.844, -67.934, -0.685147, 0.55 ) }
    dend_29 { pt3dadd( -104.701, -69.5415, -0.862077, 0.28 ) }
    dend_29 { pt3dadd( -106.537, -71.3331, -1.03478, 0.55 ) }
    dend_29 { pt3dadd( -108.829, -73.5232, -1.19675, 0.28 ) }
    dend_29 { pt3dadd( -110.564, -75.215, -1.27698, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -93.1927, 10.7962, 46.2426, 0.28 ) }
    dend_25 { pt3dadd( -95.4902, 12.9272, 46.4209, 0.28 ) }
    dend_25 { pt3dadd( -96.1026, 13.5767, 46.4702, 0.55 ) }
    dend_25 { pt3dadd( -97.4158, 15.0094, 46.5965, 0.28 ) }
    dend_25 { pt3dadd( -97.7036, 15.3557, 46.633, 0.55 ) }
    dend_25 { pt3dadd( -100.371, 18.8214, 47.0496, 0.28 ) }
    dend_25 { pt3dadd( -102.427, 21.5666, 47.4872, 0.28 ) }
    dend_25 { pt3dadd( -103.607, 23.3566, 47.8204, 0.28 ) }
    dend_25 { pt3dadd( -104.429, 24.7198, 48.105, 0.55 ) }
    dend_25 { pt3dadd( -106.24, 27.9679, 48.6991, 0.28 ) }
    dend_25 { pt3dadd( -106.904, 29.1904, 48.9501, 0.55 ) }
    dend_25 { pt3dadd( -107.907, 31.1427, 49.4353, 0.28 ) }
    dend_25 { pt3dadd( -108.415, 32.2507, 49.7265, 0.55 ) }
    dend_25 { pt3dadd( -109.196, 34.0802, 50.2299, 0.28 ) }
    dend_25 { pt3dadd( -110.144, 36.6086, 50.8745, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -93.1927, 10.7962, 46.2426, 0.28 ) }
    dend_24 { pt3dadd( -89.6786, 10.0685, 43.7257, 0.28 ) }
    dend_24 { pt3dadd( -88.6906, 9.94511, 42.9376, 0.83 ) }
    dend_24 { pt3dadd( -83.8816, 9.46361, 39.572, 0.28 ) }
    dend_24 { pt3dadd( -83.3786, 9.41151, 39.2393, 0.83 ) }
    dend_24 { pt3dadd( -78.9331, 8.84211, 36.6782, 0.28 ) }
    dend_24 { pt3dadd( -77.6178, 8.64186, 35.9803, 0.83 ) }
    dend_24 { pt3dadd( -68.9486, 7.33537, 31.8142, 0.28 ) }
    dend_24 { pt3dadd( -64.0499, 6.52989, 29.6699, 0.28 ) }
    dend_24 { pt3dadd( -62.9707, 6.33373, 29.269, 1.11 ) }
    dend_24 { pt3dadd( -57.332, 5.17124, 27.4545, 0.28 ) }
    dend_24 { pt3dadd( -55.6783, 4.8096, 26.9157, 0.55 ) }
    dend_24 { pt3dadd( -49.6347, 3.46337, 24.8253, 0.28 ) }
    dend_24 { pt3dadd( -46.8397, 2.76756, 23.8499, 0.28 ) }
    dend_24 { pt3dadd( -45.105, 2.34174, 23.1347, 0.55 ) }
    dend_24 { pt3dadd( -42.495, 1.74212, 21.9682, 0.28 ) }
    dend_24 { pt3dadd( -34.8712, 0.0473783, 17.8739, 0.28 ) }
    dend_24 { pt3dadd( -30.8917, -0.847751, 15.6254, 0.28 ) }
    dend_24 { pt3dadd( -30.0462, -1.0937, 15.0934, 0.83 ) }
    dend_24 { pt3dadd( -28.2413, -1.71222, 13.8782, 0.28 ) }
    dend_24 { pt3dadd( -28.2413, -1.71222, 13.8782, 0.83 ) }
    dend_24 { pt3dadd( -24.3732, -3.31964, 11.3106, 0.28 ) }
    dend_24 { pt3dadd( -23.4077, -3.89827, 10.7558, 0.83 ) }
    dend_24 { pt3dadd( -20.6639, -5.83115, 8.64137, 0.28 ) }
    dend_24 { pt3dadd( -19.0267, -7.03827, 7.25941, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -32.9039, 45.258, -20.7704, 0.28 ) }
    dend_18 { pt3dadd( -34.2724, 43.7289, -21.4308, 0.28 ) }
    dend_18 { pt3dadd( -35.3538, 42.5266, -22.0722, 0.83 ) }
    dend_18 { pt3dadd( -36.528, 41.212, -22.7537, 0.55 ) }
    dend_18 { pt3dadd( -37.7614, 39.853, -23.6346, 1.11 ) }
    dend_18 { pt3dadd( -41.1768, 35.9458, -26.4743, 0.28 ) }
    dend_18 { pt3dadd( -41.4196, 35.6761, -26.708, 0.83 ) }
    dend_18 { pt3dadd( -42.5394, 34.4468, -27.9948, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -43.2393, 33.6727, -28.8848, 0.83 ) }
    dend_18 { pt3dadd( -45.8307, 30.8361, -32.3843, 0.28 ) }
    dend_18 { pt3dadd( -46.4982, 30.1189, -33.2672, 0.83 ) }
    dend_18 { pt3dadd( -48.9693, 27.7194, -36.7117, 0.28 ) }
    dend_18 { pt3dadd( -49.4179, 27.2961, -37.3727, 0.55 ) }
    dend_18 { pt3dadd( -50.1936, 26.5808, -38.5496, 0.55 ) }
    dend_18 { pt3dadd( -50.9988, 25.8489, -39.8193, 0.55 ) }
    dend_18 { pt3dadd( -52.0478, 24.9224, -41.4326, 1.11 ) }
    dend_18 { pt3dadd( -56.3741, 21.2072, -48.5989, 0.55 ) }
    dend_18 { pt3dadd( -56.9857, 20.6666, -49.7171, 0.28 ) }
    dend_18 { pt3dadd( -57.1665, 20.5215, -50.0597, 0.55 ) }
    dend_18 { pt3dadd( -58.3715, 19.6456, -52.3496, 0.28 ) }
    dend_18 { pt3dadd( -58.8742, 19.2693, -53.3789, 0.83 ) }
    dend_18 { pt3dadd( -61.7907, 17.0659, -59.6104, 0.28 ) }
    dend_18 { pt3dadd( -61.9212, 16.9684, -59.8757, 0.55 ) }
    dend_18 { pt3dadd( -64.8461, 14.8069, -65.7827, 0.28 ) }
    dend_18 { pt3dadd( -65.3645, 14.3956, -66.8506, 0.55 ) }
    dend_18 { pt3dadd( -66.8629, 13.1601, -69.8039, 0.28 ) }
    dend_18 { pt3dadd( -67.1241, 12.9306, -70.311, 0.83 ) }
    dend_18 { pt3dadd( -68.373, 11.7658, -72.597, 0.28 ) }
    dend_18 { pt3dadd( -68.9949, 11.1762, -73.727, 0.83 ) }
    dend_18 { pt3dadd( -71.9953, 8.08317, -79.1313, 0.28 ) }
    dend_18 { pt3dadd( -72.7341, 7.33548, -80.3446, 0.83 ) }
    dend_18 { pt3dadd( -75.6328, 4.47193, -84.6688, 0.55 ) }
    dend_18 { pt3dadd( -75.9991, 4.0985, -85.2026, 0.83 ) }
    dend_18 { pt3dadd( -77.9978, 1.97748, -88.0455, 0.28 ) }
    dend_18 { pt3dadd( -78.6145, 1.30098, -88.8678, 0.55 ) }
    dend_18 { pt3dadd( -81.0957, -1.5437, -91.9338, 0.28 ) }
    dend_18 { pt3dadd( -81.9798, -2.59053, -93.0329, 0.83 ) }
    dend_18 { pt3dadd( -86.2675, -7.8114, -97.9826, 0.28 ) }
    dend_18 { pt3dadd( -86.4828, -8.07764, -98.2317, 0.83 ) }
    dend_18 { pt3dadd( -87.789, -9.76729, -99.7382, 0.28 ) }
    dend_18 { pt3dadd( -88.1225, -10.191, -100.143, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -32.9039, 45.258, -20.7704, 0.55 ) }
    dend_17 { pt3dadd( -33.9739, 47.9545, -21.1879, 0.55 ) }
    dend_17 { pt3dadd( -34.7794, 49.9909, -21.5611, 0.55 ) }
    dend_17 { pt3dadd( -35.6339, 52.1245, -22.0926, 0.28 ) }
    dend_17 { pt3dadd( -36.2008, 53.5328, -22.4819, 1.38 ) }
    dend_17 { pt3dadd( -37.0649, 55.5814, -23.1338, 0.55 ) }
    dend_17 { pt3dadd( -38.0482, 57.8656, -23.8941, 0.55 ) }
    dend_17 { pt3dadd( -38.481, 58.839, -24.1999, 0.83 ) }
    dend_17 { pt3dadd( -39.2599, 60.5697, -24.8082, 0.28 ) }
    dend_17 { pt3dadd( -39.6712, 61.5574, -25.182, 0.55 ) }
    dend_17 { pt3dadd( -40.3344, 63.2977, -25.8043, 0.28 ) }
    dend_17 { pt3dadd( -40.7826, 64.5648, -26.173, 0.83 ) }
    dend_17 { pt3dadd( -41.5818, 67.1814, -26.6861, 0.28 ) }
    dend_17 { pt3dadd( -41.9669, 68.5859, -26.9775, 0.55 ) }
    dend_17 { pt3dadd( -42.3548, 70.2662, -27.32, 0.28 ) }
    dend_17 { pt3dadd( -42.6186, 71.6812, -27.699, 0.83 ) }
    dend_17 { pt3dadd( -42.9576, 74.3167, -28.5073, 0.28 ) }
    dend_17 { pt3dadd( -43.1994, 76.6348, -29.391, 0.83 ) }
    dend_17 { pt3dadd( -43.4534, 80.5122, -31.0994, 0.28 ) }
    dend_17 { pt3dadd( -43.4834, 81.8497, -31.7507, 0.83 ) }
    dend_17 { pt3dadd( -43.5393, 85.4788, -33.8627, 0.28 ) }
    dend_17 { pt3dadd( -43.5347, 87.1464, -34.9596, 0.83 ) }
    dend_17 { pt3dadd( -43.4977, 89.1856, -36.4113, 0.28 ) }
    dend_17 { pt3dadd( -43.4804, 90.7885, -37.6216, 0.55 ) }
    dend_17 { pt3dadd( -43.4613, 92.3915, -38.8225, 0.83 ) }
    dend_17 { pt3dadd( -43.5465, 95.9399, -41.4406, 0.28 ) }
    dend_17 { pt3dadd( -43.6418, 97.3326, -42.4034, 0.83 ) }
    dend_17 { pt3dadd( -43.8487, 99.2206, -43.6579, 0.83 ) }
    dend_17 { pt3dadd( -44.1369, 101.114, -44.8205, 0.28 ) }
    dend_17 { pt3dadd( -44.5292, 102.574, -45.7092, 0.83 ) }
    dend_17 { pt3dadd( -45.0398, 104.045, -46.5108, 0.28 ) }
    dend_17 { pt3dadd( -45.4525, 105.103, -46.9859, 0.55 ) }
    dend_17 { pt3dadd( -45.8265, 105.873, -47.3181, 0.28 ) }
    dend_17 { pt3dadd( -46.7245, 107.467, -47.8784, 0.55 ) }
    dend_17 { pt3dadd( -48.486, 110.453, -48.5985, 0.28 ) }
    dend_17 { pt3dadd( -49.2127, 111.519, -48.8019, 0.55 ) }
    dend_17 { pt3dadd( -50.0676, 112.672, -48.9593, 0.28 ) }
    dend_17 { pt3dadd( -51.0458, 113.913, -49.0683, 0.83 ) }
    dend_17 { pt3dadd( -52.3546, 115.509, -49.0942, 0.28 ) }
    dend_17 { pt3dadd( -53.6409, 117.071, -49.0075, 0.83 ) }
    dend_17 { pt3dadd( -55.5272, 119.408, -48.7032, 0.28 ) }
    dend_17 { pt3dadd( -56.2766, 120.335, -48.6191, 0.83 ) }
    dend_17 { pt3dadd( -57.1357, 121.434, -48.545, 0.28 ) }
    dend_17 { pt3dadd( -58.2366, 122.95, -48.5014, 0.28 ) }
    dend_17 { pt3dadd( -58.7231, 123.68, -48.5671, 0.55 ) }
    dend_17 { pt3dadd( -59.7976, 125.531, -48.9362, 0.28 ) }
    dend_17 { pt3dadd( -60.6466, 127.143, -49.567, 0.55 ) }
    dend_17 { pt3dadd( -61.1183, 128.065, -50.0564, 0.55 ) }
    dend_17 { pt3dadd( -61.7981, 129.434, -50.9009, 0.83 ) }
    dend_17 { pt3dadd( -63.1259, 131.923, -52.7232, 0.28 ) }
    dend_17 { pt3dadd( -64.1214, 133.721, -54.1828, 0.83 ) }
    dend_17 { pt3dadd( -65.5925, 136.193, -56.4948, 0.28 ) }
    dend_17 { pt3dadd( -66.172, 137.089, -57.4057, 0.28 ) }
    dend_17 { pt3dadd( -66.9617, 138.333, -58.7185, 0.83 ) }
    dend_17 { pt3dadd( -68.4451, 140.67, -61.3, 0.28 ) }
    dend_17 { pt3dadd( -68.9874, 141.538, -62.222, 0.83 ) }
    dend_17 { pt3dadd( -70.8808, 144.753, -65.4952, 0.28 ) }
    dend_17 { pt3dadd( -71.7964, 146.321, -67.057, 1.11 ) }
    dend_17 { pt3dadd( -73.5777, 149.398, -70.181, 0.28 ) }
    dend_17 { pt3dadd( -74.2845, 150.694, -71.5272, 0.55 ) }
    dend_17 { pt3dadd( -74.8667, 151.914, -72.699, 0.28 ) }
    dend_17 { pt3dadd( -75.3127, 152.919, -73.5902, 0.55 ) }
    dend_17 { pt3dadd( -76.334, 155.588, -75.7712, 0.28 ) }
    dend_17 { pt3dadd( -76.7784, 156.646, -76.7234, 0.55 ) }
    dend_17 { pt3dadd( -77.5002, 158.257, -78.2287, 0.28 ) }
    dend_17 { pt3dadd( -77.9718, 159.295, -79.3024, 0.55 ) }
    dend_17 { pt3dadd( -78.5134, 160.532, -80.6794, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -79.2766, 162.355, -82.7686, 0.55 ) }
    dend_17 { pt3dadd( -80.5443, 165.741, -86.4442, 0.28 ) }
    dend_17 { pt3dadd( -81.0652, 167.131, -88.0252, 0.55 ) }
    dend_17 { pt3dadd( -81.7775, 169.112, -90.3034, 0.28 ) }
    dend_17 { pt3dadd( -82.1445, 170.204, -91.6374, 0.83 ) }
    dend_17 { pt3dadd( -82.558, 171.689, -93.4399, 0.28 ) }
    dend_17 { pt3dadd( -82.8259, 172.748, -94.7715, 0.83 ) }
    dend_17 { pt3dadd( -83.2312, 174.575, -97.055, 0.28 ) }
    dend_17 { pt3dadd( -83.4456, 175.388, -98.1735, 0.55 ) }
    dend_17 { pt3dadd( -83.7368, 176.521, -99.8075, 0.28 ) }
    dend_17 { pt3dadd( -83.9662, 177.464, -101.263, 0.55 ) }
    dend_17 { pt3dadd( -84.6162, 180.223, -105.328, 0.28 ) }
    dend_17 { pt3dadd( -84.8515, 181.188, -106.67, 0.28 ) }
    dend_17 { pt3dadd( -85.4449, 183.373, -109.253, 0.55 ) }
    dend_17 { pt3dadd( -85.95, 185.225, -111.182, 0.28 ) }
    dend_17 { pt3dadd( -86.2453, 186.248, -112.079, 0.55 ) }
    dend_17 { pt3dadd( -87.1322, 189.019, -114.029, 0.28 ) }
    dend_17 { pt3dadd( -87.767, 190.643, -114.787, 0.83 ) }
    dend_17 { pt3dadd( -88.9052, 193.015, -115.558, 0.28 ) }
    dend_17 { pt3dadd( -89.3671, 193.748, -115.69, 0.55 ) }
    dend_17 { pt3dadd( -90.2343, 194.843, -115.8, 0.28 ) }
    dend_17 { pt3dadd( -91.1866, 195.85, -115.898, 0.55 ) }
    dend_17 { pt3dadd( -93.4404, 197.864, -116.037, 0.28 ) }
    dend_17 { pt3dadd( -93.9626, 198.306, -116.04, 0.55 ) }
    dend_17 { pt3dadd( -97.2923, 201.064, -116.135, 0.28 ) }
    dend_17 { pt3dadd( -98.1165, 201.819, -116.193, 0.55 ) }
    dend_17 { pt3dadd( -99.2029, 202.982, -116.296, 0.28 ) }
    dend_17 { pt3dadd( -100.27, 204.211, -116.428, 0.55 ) }
    dend_17 { pt3dadd( -101.905, 206.377, -116.69, 0.28 ) }
    dend_17 { pt3dadd( -102.857, 207.779, -116.841, 0.55 ) }
    dend_17 { pt3dadd( -104.53, 211.096, -116.928, 0.28 ) }
    dend_17 { pt3dadd( -105.105, 212.442, -116.986, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.38631, 73.97, -20.561, 0.55 ) }
    dend_15 { pt3dadd( -5.95361, 75.1699, -21.8579, 0.55 ) }
    dend_15 { pt3dadd( -4.35269, 77.0759, -24.9688, 0.55 ) }
    dend_15 { pt3dadd( -3.8391, 77.876, -26.5356, 0.83 ) }
    dend_15 { pt3dadd( -3.45955, 78.5323, -27.9065, 0.83 ) }
    dend_15 { pt3dadd( -2.48507, 80.3914, -31.8998, 0.28 ) }
    dend_15 { pt3dadd( -2.1248, 81.093, -33.3748, 0.83 ) }
    dend_15 { pt3dadd( -1.39619, 83.6762, -39.638, 0.55 ) }
    dend_15 { pt3dadd( -1.39134, 84.2468, -41.1958, 0.28 ) }
    dend_15 { pt3dadd( -1.44475, 84.5101, -41.9757, 0.28 ) }
    dend_15 { pt3dadd( -1.62822, 84.9443, -43.3274, 0.55 ) }
    dend_15 { pt3dadd( -1.91195, 85.4694, -44.9027, 0.55 ) }
    dend_15 { pt3dadd( -2.93382, 87.3444, -50.0619, 0.28 ) }
    dend_15 { pt3dadd( -3.358, 88.2567, -52.2965, 0.83 ) }
    dend_15 { pt3dadd( -4.19695, 90.2778, -56.9775, 0.83 ) }
    dend_15 { pt3dadd( -4.87142, 92.0736, -60.9817, 0.83 ) }
    dend_15 { pt3dadd( -5.65336, 94.3818, -66.022, 0.28 ) }
    dend_15 { pt3dadd( -5.88457, 95.192, -67.7285, 0.28 ) }
    dend_15 { pt3dadd( -5.94577, 95.6472, -68.5769, 0.55 ) }
    dend_15 { pt3dadd( -5.90731, 97.6923, -72.0829, 0.28 ) }
    dend_15 { pt3dadd( -5.85507, 98.002, -72.5673, 0.55 ) }
    dend_15 { pt3dadd( -5.22649, 100.004, -75.684, 0.28 ) }
    dend_15 { pt3dadd( -4.99397, 100.66, -76.9946, 0.55 ) }
    dend_15 { pt3dadd( -4.77358, 101.225, -78.3501, 0.28 ) }
    dend_15 { pt3dadd( -4.68615, 101.432, -78.8923, 0.55 ) }
    dend_15 { pt3dadd( -4.00146, 102.726, -82.7069, 0.28 ) }
    dend_15 { pt3dadd( -3.7603, 103.094, -83.8464, 0.55 ) }
    dend_15 { pt3dadd( -2.31594, 104.849, -89.8971, 0.28 ) }
    dend_15 { pt3dadd( -1.8789, 105.345, -91.607, 0.28 ) }
    dend_15 { pt3dadd( -1.38956, 105.863, -93.3244, 0.55 ) }
    dend_15 { pt3dadd( -0.356874, 106.962, -96.9982, 0.28 ) }
    dend_15 { pt3dadd( -0.00434883, 107.308, -98.1171, 0.55 ) }
    dend_15 { pt3dadd( 1.4772, 108.698, -102.62, 0.28 ) }
    dend_15 { pt3dadd( 2.26756, 109.376, -104.803, 0.28 ) }
    dend_15 { pt3dadd( 2.9569, 109.966, -106.762, 0.83 ) }
    dend_15 { pt3dadd( 5.49503, 111.944, -113.489, 0.28 ) }
    dend_15 { pt3dadd( 6.19253, 112.44, -115.199, 0.28 ) }
    dend_15 { pt3dadd( 7.21451, 113.109, -117.491, 0.55 ) }
    dend_15 { pt3dadd( 8.15789, 113.681, -119.353, 0.28 ) }
    dend_15 { pt3dadd( 8.8326, 114.034, -120.693, 0.55 ) }
    dend_15 { pt3dadd( 9.51988, 114.361, -121.925, 0.28 ) }
    dend_15 { pt3dadd( 10.0198, 114.578, -122.478, 0.55 ) }
    dend_15 { pt3dadd( 11.196, 115.145, -123.795, 0.28 ) }
    dend_15 { pt3dadd( 12.9601, 116.161, -125.401, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.38631, 73.97, -20.561, 0.55 ) }
    dend_14 { pt3dadd( -7.62259, 77.6708, -19.5372, 0.55 ) }
    dend_14 { pt3dadd( -7.56831, 80.1427, -18.7629, 0.55 ) }
    dend_14 { pt3dadd( -7.53901, 81.1928, -18.4273, 0.55 ) }
    dend_14 { pt3dadd( -7.47924, 82.8688, -17.9077, 0.55 ) }
    dend_14 { pt3dadd( -7.44492, 84.2778, -17.5317, 0.55 ) }
    dend_14 { pt3dadd( -7.34472, 87.663, -16.6396, 0.28 ) }
    dend_14 { pt3dadd( -7.28933, 88.8559, -16.3191, 0.55 ) }
    dend_14 { pt3dadd( -7.11101, 90.5304, -15.7719, 0.55 ) }
    dend_14 { pt3dadd( -7.03264, 91.3448, -15.4428, 0.83 ) }
    dend_14 { pt3dadd( -6.92489, 93.2016, -14.5857, 0.28 ) }
    dend_14 { pt3dadd( -6.86375, 94.7638, -13.865, 0.83 ) }
    dend_14 { pt3dadd( -6.8231, 97.6129, -12.5258, 0.28 ) }
    dend_14 { pt3dadd( -6.80402, 97.9434, -12.3358, 0.83 ) }
    dend_14 { pt3dadd( -6.48365, 100.469, -10.6992, 0.55 ) }
    dend_14 { pt3dadd( -6.28257, 101.62, -9.88248, 0.55 ) }
    dend_14 { pt3dadd( -5.93046, 103.312, -8.64664, 0.83 ) }
    dend_14 { pt3dadd( -5.207, 106.391, -6.36248, 0.55 ) }
    dend_14 { pt3dadd( -4.58964, 108.752, -4.60476, 0.83 ) }
    dend_14 { pt3dadd( -4.2411, 109.949, -3.69869, 0.28 ) }
    dend_14 { pt3dadd( -3.91601, 110.995, -2.96477, 0.83 ) }
    dend_14 { pt3dadd( -3.44394, 112.551, -1.88413, 0.83 ) }
    dend_14 { pt3dadd( -2.72473, 115.284, -0.0507021, 0.83 ) }
    dend_14 { pt3dadd( -2.28157, 117.557, 1.16835, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -2.17742, 118.334, 1.54467, 0.83 ) }
    dend_14 { pt3dadd( -1.90068, 120.687, 2.73349, 0.83 ) }
    dend_14 { pt3dadd( -1.67752, 122.753, 3.8063, 0.28 ) }
    dend_14 { pt3dadd( -1.55512, 123.831, 4.40084, 0.55 ) }
    dend_14 { pt3dadd( -1.36545, 125.969, 5.50955, 0.28 ) }
    dend_14 { pt3dadd( -1.25493, 128.19, 6.7579, 0.55 ) }
    dend_14 { pt3dadd( -1.15173, 131.108, 8.54266, 0.28 ) }
    dend_14 { pt3dadd( -1.138, 131.767, 8.98669, 0.83 ) }
    dend_14 { pt3dadd( -1.12051, 133.1, 9.86765, 0.28 ) }
    dend_14 { pt3dadd( -1.0872, 134.701, 10.9809, 0.55 ) }
    dend_14 { pt3dadd( -0.933499, 137.044, 12.7792, 0.28 ) }
    dend_14 { pt3dadd( -0.896219, 137.492, 13.1017, 0.55 ) }
    dend_14 { pt3dadd( -0.789683, 138.461, 13.8286, 0.28 ) }
    dend_14 { pt3dadd( -0.603555, 139.478, 14.6764, 0.83 ) }
    dend_14 { pt3dadd( -0.241462, 140.811, 15.8277, 0.28 ) }
    dend_14 { pt3dadd( 0.346078, 142.464, 17.3191, 0.55 ) }
    dend_14 { pt3dadd( 0.817101, 143.592, 18.4533, 0.28 ) }
    dend_14 { pt3dadd( 1.09734, 144.291, 19.1258, 0.83 ) }
    dend_14 { pt3dadd( 1.70017, 145.768, 20.458, 0.83 ) }
    dend_14 { pt3dadd( 2.28872, 147.253, 21.6909, 0.55 ) }
    dend_14 { pt3dadd( 2.61019, 148.06, 22.2756, 0.83 ) }
    dend_14 { pt3dadd( 4.31274, 152.563, 25.1555, 0.55 ) }
    dend_14 { pt3dadd( 4.91062, 154.255, 26.0779, 0.83 ) }
    dend_14 { pt3dadd( 6.74368, 159.788, 28.4746, 0.28 ) }
    dend_14 { pt3dadd( 7.04933, 160.955, 28.7433, 0.55 ) }
    dend_14 { pt3dadd( 7.55865, 163.25, 28.8545, 0.28 ) }
    dend_14 { pt3dadd( 7.83874, 164.614, 28.7628, 0.83 ) }
    dend_14 { pt3dadd( 8.28325, 167.38, 28.0537, 0.28 ) }
    dend_14 { pt3dadd( 8.46714, 169.038, 27.4474, 0.55 ) }
    dend_14 { pt3dadd( 8.56451, 173.589, 24.7143, 0.28 ) }
    dend_14 { pt3dadd( 8.53593, 175.585, 23.4345, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -27.9378, 216.31, 27.4932, 0.55 ) }
    dend_10 { pt3dadd( -28.1709, 218.234, 27.5374, 0.55 ) }
    dend_10 { pt3dadd( -28.5386, 220.51, 27.647, 0.55 ) }
    dend_10 { pt3dadd( -28.9085, 222.694, 27.7673, 0.83 ) }
    dend_10 { pt3dadd( -29.1652, 224.201, 27.8694, 0.55 ) }
    dend_10 { pt3dadd( -29.467, 226.075, 28.0159, 1.11 ) }
    dend_10 { pt3dadd( -29.8799, 228.957, 28.2364, 0.55 ) }
    dend_10 { pt3dadd( -30.1311, 231.006, 28.3917, 1.11 ) }
    dend_10 { pt3dadd( -30.3068, 232.562, 28.4518, 0.83 ) }
    dend_10 { pt3dadd( -30.4044, 234.045, 28.422, 0.55 ) }
    dend_10 { pt3dadd( -30.3914, 236.019, 28.2385, 0.55 ) }
    dend_10 { pt3dadd( -30.2467, 237.754, 27.9185, 0.83 ) }
    dend_10 { pt3dadd( -29.9426, 239.605, 27.3169, 0.55 ) }
    dend_10 { pt3dadd( -29.5314, 241.464, 26.4744, 0.83 ) }
    dend_10 { pt3dadd( -29.1413, 242.893, 25.6844, 0.83 ) }
    dend_10 { pt3dadd( -28.7604, 244.082, 24.9122, 0.83 ) }
    dend_10 { pt3dadd( -28.4101, 245.041, 24.2367, 1.11 ) }
    dend_10 { pt3dadd( -27.686, 247.053, 22.7397, 0.83 ) }
    dend_10 { pt3dadd( -27.3804, 247.923, 22.0978, 0.55 ) }
    dend_10 { pt3dadd( -26.8642, 249.324, 21.1103, 0.83 ) }
    dend_10 { pt3dadd( -26.1394, 251.475, 19.6818, 0.55 ) }
    dend_10 { pt3dadd( -25.6696, 252.82, 18.7858, 1.11 ) }
    dend_10 { pt3dadd( -24.936, 254.862, 17.4687, 0.55 ) }
    dend_10 { pt3dadd( -24.6648, 255.586, 17.041, 0.55 ) }
    dend_10 { pt3dadd( -24.2977, 256.6, 16.4681, 0.55 ) }
    dend_10 { pt3dadd( -23.4752, 259.025, 15.259, 0.55 ) }
    dend_10 { pt3dadd( -23.1464, 260.031, 14.8467, 0.28 ) }
    dend_10 { pt3dadd( -22.9427, 260.713, 14.6247, 0.55 ) }
    dend_10 { pt3dadd( -22.5637, 262.02, 14.3097, 0.28 ) }
    dend_10 { pt3dadd( -22.2807, 263.168, 14.0674, 0.83 ) }
    dend_10 { pt3dadd( -21.8267, 265.32, 13.6729, 0.55 ) }
    dend_10 { pt3dadd( -21.6759, 266.04, 13.5616, 0.83 ) }
    dend_10 { pt3dadd( -21.3931, 267.583, 13.3295, 0.55 ) }
    dend_10 { pt3dadd( -21.2262, 268.581, 13.1654, 0.83 ) }
    dend_10 { pt3dadd( -20.757, 271.615, 12.636, 0.28 ) }
    dend_10 { pt3dadd( -20.4691, 273.622, 12.2495, 0.83 ) }
    dend_10 { pt3dadd( -20.1874, 275.695, 11.8219, 0.28 ) }
    dend_10 { pt3dadd( -19.9579, 277.522, 11.4384, 0.55 ) }
    dend_10 { pt3dadd( -19.7441, 279.446, 11.0404, 0.55 ) }
    dend_10 { pt3dadd( -19.6339, 281.18, 10.6851, 0.55 ) }
    dend_10 { pt3dadd( -19.6281, 282.134, 10.4998, 0.28 ) }
    dend_10 { pt3dadd( -19.6635, 283.049, 10.3362, 0.55 ) }
    dend_10 { pt3dadd( -19.8122, 284.805, 10.0809, 0.28 ) }
    dend_10 { pt3dadd( -19.9677, 285.833, 9.91863, 0.55 ) }
    dend_10 { pt3dadd( -20.3639, 287.691, 9.59469, 0.28 ) }
    dend_10 { pt3dadd( -20.671, 288.95, 9.36782, 0.28 ) }
    dend_10 { pt3dadd( -21.1257, 290.706, 9.0446, 0.83 ) }
    dend_10 { pt3dadd( -21.5648, 292.277, 8.74648, 0.83 ) }
    dend_10 { pt3dadd( -22.4042, 295.274, 8.17912, 0.55 ) }
    dend_10 { pt3dadd( -22.8309, 296.963, 7.86878, 0.55 ) }
    dend_10 { pt3dadd( -23.0412, 298.066, 7.67963, 0.55 ) }
    dend_10 { pt3dadd( -23.139, 298.699, 7.54446, 0.28 ) }
    dend_10 { pt3dadd( -23.2452, 299.597, 7.33526, 0.55 ) }
    dend_10 { pt3dadd( -23.2861, 300.368, 7.16001, 0.28 ) }
    dend_10 { pt3dadd( -23.3296, 301.089, 6.99122, 1.11 ) }
    dend_10 { pt3dadd( -23.6554, 303.249, 6.37843, 0.55 ) }
    dend_10 { pt3dadd( -24.0162, 304.806, 5.93728, 0.55 ) }
    dend_10 { pt3dadd( -24.4394, 306.158, 5.52897, 0.28 ) }
    dend_10 { pt3dadd( -24.75, 306.915, 5.27268, 0.83 ) }
    dend_10 { pt3dadd( -25.7899, 309.078, 4.4346, 0.55 ) }
    dend_10 { pt3dadd( -26.5087, 310.474, 3.85219, 0.83 ) }
    dend_10 { pt3dadd( -27.3632, 312.008, 3.15348, 0.83 ) }
    dend_10 { pt3dadd( -28.2326, 313.567, 2.35841, 0.55 ) }
    dend_10 { pt3dadd( -28.9136, 314.801, 1.65548, 0.28 ) }
    dend_10 { pt3dadd( -29.5517, 316.011, 0.937592, 0.55 ) }
    dend_10 { pt3dadd( -30.1161, 317.127, 0.269965, 0.55 ) }
    dend_10 { pt3dadd( -30.8697, 318.593, -0.655607, 1.11 ) }
    dend_10 { pt3dadd( -31.8298, 320.527, -1.8563, 0.55 ) }
    dend_10 { pt3dadd( -32.2225, 321.366, -2.33966, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -32.6702, 322.269, -2.86012, 0.55 ) }
    dend_10 { pt3dadd( -33.8282, 324.385, -4.04889, 0.55 ) }
    dend_10 { pt3dadd( -34.4311, 325.451, -4.66461, 0.83 ) }
    dend_10 { pt3dadd( -35.6564, 327.712, -5.87014, 0.28 ) }
    dend_10 { pt3dadd( -36.0166, 328.389, -6.20427, 0.55 ) }
    dend_10 { pt3dadd( -36.9865, 330.325, -7.11155, 0.28 ) }
    dend_10 { pt3dadd( -37.4233, 331.276, -7.54081, 0.55 ) }
    dend_10 { pt3dadd( -38.0173, 332.78, -8.15931, 0.28 ) }
    dend_10 { pt3dadd( -38.5869, 334.281, -8.68705, 0.55 ) }
    dend_10 { pt3dadd( -38.8598, 335.061, -8.92542, 0.28 ) }
    dend_10 { pt3dadd( -39.2595, 336.347, -9.26613, 0.55 ) }
    dend_10 { pt3dadd( -39.7624, 338.504, -9.71531, 0.55 ) }
    dend_10 { pt3dadd( -40.0166, 339.622, -9.96955, 0.28 ) }
    dend_10 { pt3dadd( -40.2927, 340.597, -10.1746, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -27.9378, 216.31, 27.4932, 0.55 ) }
    dend_7 { pt3dadd( -29.9535, 217.645, 27.4664, 0.55 ) }
    dend_7 { pt3dadd( -32.3135, 219.319, 27.5526, 1.11 ) }
    dend_7 { pt3dadd( -34.8876, 221.043, 27.7635, 0.55 ) }
    dend_7 { pt3dadd( -35.7397, 221.618, 27.7936, 0.83 ) }
    dend_7 { pt3dadd( -37.7815, 223.027, 27.8354, 0.55 ) }
    dend_7 { pt3dadd( -39.4672, 224.138, 27.8754, 0.55 ) }
    dend_7 { pt3dadd( -40.7778, 224.985, 27.9038, 0.83 ) }
    dend_7 { pt3dadd( -44.6558, 227.417, 27.9904, 0.55 ) }
    dend_7 { pt3dadd( -47.5151, 229.17, 28.1543, 0.55 ) }
    dend_7 { pt3dadd( -48.5295, 229.785, 28.1849, 0.83 ) }
    dend_7 { pt3dadd( -51.3076, 231.427, 28.2408, 0.55 ) }
    dend_7 { pt3dadd( -51.7579, 231.687, 28.2418, 0.83 ) }
    dend_7 { pt3dadd( -53.23, 232.577, 28.2928, 0.28 ) }
    dend_7 { pt3dadd( -53.4625, 232.735, 28.3266, 0.55 ) }
    dend_7 { pt3dadd( -54.8229, 233.673, 28.7399, 0.28 ) }
    dend_7 { pt3dadd( -55.6609, 234.303, 29.0504, 0.55 ) }
    dend_7 { pt3dadd( -56.6189, 234.991, 29.3849, 0.55 ) }
    dend_7 { pt3dadd( -59.2315, 236.748, 30.2381, 0.55 ) }
    dend_7 { pt3dadd( -61.0257, 237.952, 30.7864, 0.55 ) }
    dend_7 { pt3dadd( -62.4482, 238.936, 31.103, 0.83 ) }
    dend_7 { pt3dadd( -64.4155, 240.342, 31.4394, 0.83 ) }
    dend_7 { pt3dadd( -67.0028, 242.302, 31.5751, 0.55 ) }
    dend_7 { pt3dadd( -68.9217, 243.812, 31.5022, 0.55 ) }
    dend_7 { pt3dadd( -71.0171, 245.534, 31.2466, 1.11 ) }
    dend_7 { pt3dadd( -73.3504, 247.704, 30.8199, 0.55 ) }
    dend_7 { pt3dadd( -73.9766, 248.347, 30.6682, 0.83 ) }
    dend_7 { pt3dadd( -75.8894, 250.585, 30.2012, 0.28 ) }
    dend_7 { pt3dadd( -76.8697, 251.834, 29.7155, 0.55 ) }
    dend_7 { pt3dadd( -77.536, 252.688, 29.2566, 0.28 ) }
    dend_7 { pt3dadd( -78.1665, 253.536, 28.7467, 0.83 ) }
    dend_7 { pt3dadd( -79.4409, 255.379, 27.5699, 0.28 ) }
    dend_7 { pt3dadd( -80.5606, 257.064, 26.4486, 0.83 ) }
    dend_7 { pt3dadd( -84.6411, 263.678, 22.009, 0.55 ) }
    dend_7 { pt3dadd( -85.3927, 264.963, 21.1306, 0.55 ) }
    dend_7 { pt3dadd( -86.0359, 266.136, 20.3329, 0.83 ) }
    dend_7 { pt3dadd( -86.8063, 267.641, 19.3689, 0.28 ) }
    dend_7 { pt3dadd( -87.1283, 268.381, 18.9678, 0.55 ) }
    dend_7 { pt3dadd( -87.554, 269.489, 18.5169, 0.28 ) }
    dend_7 { pt3dadd( -87.9801, 270.983, 18.3356, 0.55 ) }
    dend_7 { pt3dadd( -88.635, 273.084, 18.058, 0.55 ) }
    dend_7 { pt3dadd( -89.0219, 274.28, 17.9076, 0.55 ) }
    dend_7 { pt3dadd( -89.4449, 275.615, 17.764, 0.83 ) }
    dend_7 { pt3dadd( -90.0947, 277.753, 17.5207, 0.28 ) }
    dend_7 { pt3dadd( -90.6258, 279.551, 17.3345, 0.83 ) }
    dend_7 { pt3dadd( -91.1895, 281.778, 17.1351, 0.55 ) }
    dend_7 { pt3dadd( -91.4017, 282.667, 17.0818, 0.55 ) }
    dend_7 { pt3dadd( -91.7481, 284.36, 17.045, 0.83 ) }
    dend_7 { pt3dadd( -91.9247, 285.247, 17.0762, 0.55 ) }
    dend_7 { pt3dadd( -92.2139, 286.907, 17.2905, 0.83 ) }
    dend_7 { pt3dadd( -92.5751, 288.415, 17.5466, 0.28 ) }
    dend_7 { pt3dadd( -92.7811, 289.033, 17.6103, 0.28 ) }
    dend_7 { pt3dadd( -93.4995, 290.678, 17.6632, 0.28 ) }
    dend_7 { pt3dadd( -93.8523, 291.387, 17.6253, 0.83 ) }
    dend_7 { pt3dadd( -94.7873, 293.037, 17.3623, 0.55 ) }
    dend_7 { pt3dadd( -95.9944, 294.866, 16.6909, 0.83 ) }
    dend_7 { pt3dadd( -97.8969, 297.34, 15.4356, 0.28 ) }
    dend_7 { pt3dadd( -98.5845, 298.1, 14.9145, 0.55 ) }
    dend_7 { pt3dadd( -99.4099, 298.839, 14.2334, 0.28 ) }
    dend_7 { pt3dadd( -100.08, 299.354, 13.725, 0.83 ) }
    dend_7 { pt3dadd( -102.661, 301.22, 11.8377, 0.83 ) }
    dend_7 { pt3dadd( -103.507, 301.813, 11.2573, 0.83 ) }
    dend_7 { pt3dadd( -106.149, 303.633, 9.65609, 0.83 ) }
    dend_7 { pt3dadd( -109.208, 305.718, 7.92162, 0.55 ) }
    dend_7 { pt3dadd( -111.058, 306.94, 6.92467, 0.55 ) }
    dend_7 { pt3dadd( -112.711, 308.045, 6.07406, 0.55 ) }
    dend_7 { pt3dadd( -114.493, 309.263, 5.22711, 0.55 ) }
    dend_7 { pt3dadd( -117.064, 311.19, 3.99642, 0.55 ) }
    dend_7 { pt3dadd( -119.046, 312.8, 3.17003, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 52.6558, -37.5398, -62.3389, 0.55 ) }
    dend_45 { pt3dadd( 53.8232, -36.821, -63.3627, 0.55 ) }
    dend_45 { pt3dadd( 54.9979, -36.0285, -64.4042, 0.83 ) }
    dend_45 { pt3dadd( 57.3855, -34.3555, -66.523, 0.28 ) }
    dend_45 { pt3dadd( 58.5916, -33.4781, -67.5679, 0.83 ) }
    dend_45 { pt3dadd( 61.4966, -31.3274, -69.9864, 0.28 ) }
    dend_45 { pt3dadd( 62.4881, -30.5864, -70.7746, 0.55 ) }
    dend_45 { pt3dadd( 64.6994, -28.8498, -72.6148, 0.55 ) }
    dend_45 { pt3dadd( 66.985, -26.9352, -74.4237, 0.55 ) }
    dend_45 { pt3dadd( 68.9232, -25.2871, -75.8619, 0.28 ) }
    dend_45 { pt3dadd( 69.7133, -24.6066, -76.4165, 0.28 ) }
    dend_45 { pt3dadd( 70.506, -23.9208, -76.9418, 0.55 ) }
    dend_45 { pt3dadd( 72.209, -22.4995, -78.0064, 0.28 ) }
    dend_45 { pt3dadd( 74.5063, -20.6015, -79.2196, 0.55 ) }
    dend_45 { pt3dadd( 77.2171, -18.2485, -80.7766, 0.28 ) }
    dend_45 { pt3dadd( 77.9227, -17.6387, -81.2002, 0.55 ) }
    dend_45 { pt3dadd( 80.7794, -15.0403, -82.9677, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 82.6313, -13.3032, -84.1478, 0.28 ) }
    dend_45 { pt3dadd( 84.7534, -11.2825, -85.5776, 0.83 ) }
    dend_45 { pt3dadd( 88.0804, -7.96395, -88.0356, 0.55 ) }
    dend_45 { pt3dadd( 88.8862, -7.15051, -88.6598, 0.55 ) }
    dend_45 { pt3dadd( 90.5266, -5.51758, -90.0656, 0.55 ) }
    dend_45 { pt3dadd( 92.1992, -3.93339, -91.5731, 0.83 ) }
    dend_45 { pt3dadd( 94.6944, -1.70584, -93.8282, 0.28 ) }
    dend_45 { pt3dadd( 95.4615, -1.08426, -94.4611, 0.55 ) }
    dend_45 { pt3dadd( 97.4828, 0.37218, -95.7456, 0.28 ) }
    dend_45 { pt3dadd( 97.8555, 0.62155, -95.9659, 0.55 ) }
    dend_45 { pt3dadd( 99.6006, 1.61307, -96.835, 0.55 ) }
    dend_45 { pt3dadd( 102.175, 2.96385, -97.8174, 0.28 ) }
    dend_45 { pt3dadd( 103.112, 3.43921, -98.0881, 0.55 ) }
    dend_45 { pt3dadd( 105.381, 4.51855, -98.6745, 0.28 ) }
    dend_45 { pt3dadd( 106.307, 4.94362, -98.871, 0.55 ) }
    dend_45 { pt3dadd( 108.302, 5.75781, -99.2788, 0.28 ) }
    dend_45 { pt3dadd( 109.567, 6.15267, -99.5531, 0.55 ) }
    dend_45 { pt3dadd( 110.264, 6.31655, -99.6805, 0.55 ) }
    dend_45 { pt3dadd( 112.207, 6.7936, -99.9458, 0.28 ) }
    dend_45 { pt3dadd( 113.491, 7.13541, -100.044, 0.28 ) }
    dend_45 { pt3dadd( 114.758, 7.55626, -100.138, 0.55 ) }
    dend_45 { pt3dadd( 117.83, 8.78191, -100.326, 0.28 ) }
    dend_45 { pt3dadd( 119.967, 9.83001, -100.427, 0.55 ) }
    dend_45 { pt3dadd( 121.956, 10.9854, -100.453, 0.55 ) }
    dend_45 { pt3dadd( 123.767, 12.2472, -100.403, 0.83 ) }
    dend_45 { pt3dadd( 126.411, 14.4023, -100.199, 0.28 ) }
    dend_45 { pt3dadd( 127.369, 15.3251, -100.08, 0.28 ) }
    dend_45 { pt3dadd( 128.995, 17.224, -99.7448, 0.55 ) }
    dend_45 { pt3dadd( 130.559, 19.2992, -99.3221, 0.28 ) }
    dend_45 { pt3dadd( 131.222, 20.2492, -99.0972, 0.55 ) }
    dend_45 { pt3dadd( 132.225, 21.7962, -98.6464, 0.55 ) }
    dend_45 { pt3dadd( 133.645, 24.098, -97.8411, 0.28 ) }
    dend_45 { pt3dadd( 134.489, 25.5012, -97.3459, 0.55 ) }
    dend_45 { pt3dadd( 135.751, 27.6896, -96.5843, 0.28 ) }
    dend_45 { pt3dadd( 137.142, 30.1903, -95.7671, 0.55 ) }
    dend_45 { pt3dadd( 138.558, 32.7878, -94.9545, 0.55 ) }
    dend_45 { pt3dadd( 139.171, 33.9609, -94.6036, 0.55 ) }
    dend_45 { pt3dadd( 140.358, 36.3422, -93.9729, 0.55 ) }
    dend_45 { pt3dadd( 141.463, 38.561, -93.4905, 0.55 ) }
    dend_45 { pt3dadd( 142.559, 40.8644, -93.0786, 0.55 ) }
    dend_45 { pt3dadd( 143.583, 43.065, -92.7221, 0.28 ) }
    dend_45 { pt3dadd( 144.13, 44.2237, -92.5864, 0.55 ) }
    dend_45 { pt3dadd( 145.864, 47.875, -92.2103, 0.28 ) }
    dend_45 { pt3dadd( 146.993, 50.3408, -92.0556, 0.28 ) }
    dend_45 { pt3dadd( 147.536, 51.5898, -92.0135, 0.55 ) }
    dend_45 { pt3dadd( 148.504, 53.8041, -91.9758, 0.28 ) }
    dend_45 { pt3dadd( 149.37, 55.8023, -91.9619, 0.55 ) }
    dend_45 { pt3dadd( 150.019, 57.3335, -91.942, 0.55 ) }
    dend_45 { pt3dadd( 151.747, 61.6636, -91.8493, 0.28 ) }
    dend_45 { pt3dadd( 152.742, 64.3648, -91.7852, 0.28 ) }
    dend_45 { pt3dadd( 153.122, 65.4693, -91.7513, 0.55 ) }
    dend_45 { pt3dadd( 153.841, 67.7038, -91.6586, 0.55 ) }
    dend_45 { pt3dadd( 154.774, 70.7269, -91.4221, 0.28 ) }
    dend_45 { pt3dadd( 155.478, 73.0653, -91.1999, 0.55 ) }
    dend_45 { pt3dadd( 156.1, 75.2198, -90.9172, 0.28 ) }
    dend_45 { pt3dadd( 156.564, 77.0825, -90.6644, 0.55 ) }
    dend_45 { pt3dadd( 156.823, 78.2037, -90.4879, 0.28 ) }
    dend_45 { pt3dadd( 156.993, 78.958, -90.2951, 0.55 ) }
    dend_45 { pt3dadd( 157.455, 81.1298, -89.5628, 0.28 ) }
    dend_45 { pt3dadd( 157.695, 82.1819, -89.118, 0.55 ) }
    dend_45 { pt3dadd( 158.554, 85.632, -87.4753, 0.28 ) }
    dend_45 { pt3dadd( 159.192, 87.9877, -86.2854, 0.55 ) }
    dend_45 { pt3dadd( 160.066, 91.0914, -84.6255, 0.28 ) }
    dend_45 { pt3dadd( 160.566, 92.7551, -83.7058, 0.55 ) }
    dend_45 { pt3dadd( 161.17, 94.6443, -82.6104, 0.28 ) }
    dend_45 { pt3dadd( 161.729, 96.3238, -81.5908, 0.55 ) }
    dend_45 { pt3dadd( 162.271, 97.8997, -80.6155, 0.28 ) }
    dend_45 { pt3dadd( 162.671, 99.121, -79.8772, 0.55 ) }
    dend_45 { pt3dadd( 163.606, 102.184, -78.1371, 0.28 ) }
    dend_45 { pt3dadd( 164.069, 103.741, -77.2073, 0.55 ) }
    dend_45 { pt3dadd( 164.673, 105.981, -75.8372, 0.28 ) }
    dend_45 { pt3dadd( 164.883, 106.811, -75.2979, 0.55 ) }
    dend_45 { pt3dadd( 165.352, 108.928, -73.8963, 0.28 ) }
    dend_45 { pt3dadd( 165.781, 111.172, -72.4323, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 52.6558, -37.5398, -62.3389, 0.28 ) }
    dend_44 { pt3dadd( 54.4546, -37.8743, -62.7917, 0.28 ) }
    dend_44 { pt3dadd( 54.9955, -37.9679, -62.9557, 0.55 ) }
    dend_44 { pt3dadd( 55.7441, -38.0481, -63.2125, 0.55 ) }
    dend_44 { pt3dadd( 56.8924, -38.1402, -63.6072, 0.28 ) }
    dend_44 { pt3dadd( 57.572, -38.1955, -63.8279, 0.55 ) }
    dend_44 { pt3dadd( 59.9419, -38.3645, -64.5333, 0.28 ) }
    dend_44 { pt3dadd( 60.5796, -38.374, -64.6951, 0.55 ) }
    dend_44 { pt3dadd( 62.0919, -38.3351, -65.0248, 0.28 ) }
    dend_44 { pt3dadd( 62.7365, -38.2922, -65.1381, 0.28 ) }
    dend_44 { pt3dadd( 63.7864, -38.1927, -65.2602, 0.55 ) }
    dend_44 { pt3dadd( 64.7538, -38.1052, -65.3213, 0.55 ) }
    dend_44 { pt3dadd( 67.0692, -37.9388, -65.2795, 0.28 ) }
    dend_44 { pt3dadd( 67.9295, -37.9214, -65.2534, 0.55 ) }
    dend_44 { pt3dadd( 68.8988, -37.9683, -65.2186, 0.55 ) }
    dend_44 { pt3dadd( 70.6716, -38.1501, -65.1783, 0.28 ) }
    dend_44 { pt3dadd( 71.8284, -38.3501, -65.1666, 0.55 ) }
    dend_44 { pt3dadd( 73.2599, -38.7512, -65.1416, 0.28 ) }
    dend_44 { pt3dadd( 74.0146, -39.0609, -65.1216, 0.55 ) }
    dend_44 { pt3dadd( 75.384, -39.7604, -65.078, 0.28 ) }
    dend_44 { pt3dadd( 75.9541, -40.1316, -65.047, 0.55 ) }
    dend_44 { pt3dadd( 76.5634, -40.6252, -64.9911, 0.55 ) }
    dend_44 { pt3dadd( 77.3204, -41.3936, -64.8466, 0.28 ) }
    dend_44 { pt3dadd( 77.7327, -41.905, -64.7331, 0.28 ) }
    dend_44 { pt3dadd( 78.1443, -42.5703, -64.5777, 0.55 ) }
    dend_44 { pt3dadd( 78.6131, -43.5758, -64.3434, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 78.67, -43.7299, -64.308, 0.55 ) }
    dend_44 { pt3dadd( 79.1069, -45.1971, -64.0334, 0.28 ) }
    dend_44 { pt3dadd( 79.149, -45.3659, -64.022, 0.83 ) }
    dend_44 { pt3dadd( 79.6815, -47.6396, -64.0543, 0.28 ) }
    dend_44 { pt3dadd( 79.7971, -48.0647, -64.1427, 0.55 ) }
    dend_44 { pt3dadd( 80.0966, -49.0989, -64.5166, 0.28 ) }
    dend_44 { pt3dadd( 80.2906, -49.7343, -64.8166, 0.55 ) }
    dend_44 { pt3dadd( 80.7782, -51.1579, -65.6966, 0.28 ) }
    dend_44 { pt3dadd( 80.8401, -51.3367, -65.8173, 0.55 ) }
    dend_44 { pt3dadd( 81.5986, -53.3952, -67.389, 0.28 ) }
    dend_44 { pt3dadd( 81.6942, -53.6783, -67.5997, 0.55 ) }
    dend_44 { pt3dadd( 81.757, -53.8512, -67.728, 0.55 ) }
    dend_44 { pt3dadd( 81.9794, -54.4978, -68.1218, 0.28 ) }
    dend_44 { pt3dadd( 82.1568, -55.0465, -68.3903, 0.55 ) }
    dend_44 { pt3dadd( 82.4675, -56.0077, -68.7658, 0.28 ) }
    dend_44 { pt3dadd( 82.5963, -56.4049, -68.8986, 0.55 ) }
    dend_44 { pt3dadd( 83.457, -58.778, -69.7463, 0.28 ) }
    dend_44 { pt3dadd( 83.6447, -59.2619, -69.9228, 0.55 ) }
    dend_44 { pt3dadd( 83.8736, -59.8092, -70.153, 0.28 ) }
    dend_44 { pt3dadd( 84.6535, -61.5624, -70.9499, 0.28 ) }
    dend_44 { pt3dadd( 84.8903, -62.132, -71.1965, 0.55 ) }
    dend_44 { pt3dadd( 85.5303, -63.7786, -71.862, 0.28 ) }
    dend_44 { pt3dadd( 85.5733, -63.9194, -71.9093, 0.55 ) }
    dend_44 { pt3dadd( 86.0441, -65.7577, -72.5106, 0.28 ) }
    dend_44 { pt3dadd( 86.2106, -66.6724, -72.7412, 0.55 ) }
    dend_44 { pt3dadd( 86.3533, -67.8634, -72.9277, 0.28 ) }
    dend_44 { pt3dadd( 86.4032, -68.3699, -72.9501, 0.55 ) }
    dend_44 { pt3dadd( 86.496, -69.4218, -72.9109, 0.28 ) }
    dend_44 { pt3dadd( 86.545, -69.8861, -72.8787, 0.55 ) }
    dend_44 { pt3dadd( 86.812, -71.6764, -72.8418, 0.28 ) }
    dend_44 { pt3dadd( 87.0928, -73.1298, -72.8963, 0.28 ) }
    dend_44 { pt3dadd( 87.2565, -73.7516, -72.9669, 0.55 ) }
    dend_44 { pt3dadd( 87.7196, -75.2583, -73.1971, 0.28 ) }
    dend_44 { pt3dadd( 87.8842, -75.7148, -73.2763, 0.55 ) }
    dend_44 { pt3dadd( 89.0253, -78.7168, -73.8387, 0.28 ) }
    dend_44 { pt3dadd( 89.5011, -79.8411, -74.0834, 0.55 ) }
    dend_44 { pt3dadd( 90.2731, -81.4877, -74.451, 0.28 ) }
    dend_44 { pt3dadd( 90.4317, -81.8098, -74.5243, 0.55 ) }
    dend_44 { pt3dadd( 91.2449, -83.3335, -74.8585, 0.28 ) }
    dend_44 { pt3dadd( 91.3643, -83.5397, -74.8954, 0.55 ) }
    dend_44 { pt3dadd( 91.8817, -84.2295, -74.8923, 0.28 ) }
    dend_44 { pt3dadd( 92.2589, -84.6528, -74.9046, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 28.0507, -45.9151, 15.906, 0.55 ) }
    dend_41 { pt3dadd( 28.4848, -45.8042, 16.9128, 0.55 ) }
    dend_41 { pt3dadd( 29.3512, -45.525, 18.9505, 0.55 ) }
    dend_41 { pt3dadd( 30.9549, -44.9967, 22.6229, 0.55 ) }
    dend_41 { pt3dadd( 32.1991, -44.6011, 25.4115, 0.55 ) }
    dend_41 { pt3dadd( 33.3332, -44.2872, 27.9095, 0.28 ) }
    dend_41 { pt3dadd( 33.9689, -44.1284, 29.2746, 0.83 ) }
    dend_41 { pt3dadd( 34.7553, -43.9579, 31.0014, 0.55 ) }
    dend_41 { pt3dadd( 35.3579, -43.8846, 32.2745, 0.28 ) }
    dend_41 { pt3dadd( 35.683, -43.8702, 32.8326, 0.55 ) }
    dend_41 { pt3dadd( 36.4023, -43.8565, 33.9494, 0.28 ) }
    dend_41 { pt3dadd( 36.6437, -43.8619, 34.3215, 0.55 ) }
    dend_41 { pt3dadd( 37.7359, -44.0017, 35.796, 0.28 ) }
    dend_41 { pt3dadd( 38.456, -44.2265, 36.6703, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 28.0507, -45.9151, 15.906, 0.28 ) }
    dend_40 { pt3dadd( 35.8041, -47.548, 14.7296, 0.28 ) }
    dend_40 { pt3dadd( 36.8419, -47.7275, 14.6482, 0.83 ) }
    dend_40 { pt3dadd( 40.3468, -48.2287, 14.5358, 0.28 ) }
    dend_40 { pt3dadd( 41.3281, -48.2923, 14.5753, 0.83 ) }
    dend_40 { pt3dadd( 43.565, -48.3024, 14.7616, 0.28 ) }
    dend_40 { pt3dadd( 44.492, -48.2551, 14.8744, 0.83 ) }
    dend_40 { pt3dadd( 46.9286, -47.714, 15.7304, 0.28 ) }
    dend_40 { pt3dadd( 47.4492, -47.4764, 15.9231, 0.83 ) }
    dend_40 { pt3dadd( 50.0224, -45.7477, 16.9293, 0.28 ) }
    dend_40 { pt3dadd( 50.6493, -45.3014, 17.1677, 0.28 ) }
    dend_40 { pt3dadd( 51.5398, -44.6375, 17.4993, 0.55 ) }
    dend_40 { pt3dadd( 53.0357, -43.4745, 18.4176, 0.28 ) }
    dend_40 { pt3dadd( 55.1392, -41.7938, 20.1696, 0.28 ) }
    dend_40 { pt3dadd( 55.5975, -41.4195, 20.7301, 0.83 ) }
    dend_40 { pt3dadd( 58.485, -39.0645, 25.3898, 0.28 ) }
    dend_40 { pt3dadd( 58.9377, -38.7276, 26.258, 0.55 ) }
    dend_40 { pt3dadd( 61.78, -36.7105, 33.2104, 0.28 ) }
    dend_40 { pt3dadd( 62.0399, -36.5272, 34.0174, 0.83 ) }
    dend_40 { pt3dadd( 63.2917, -35.4909, 39.3057, 0.28 ) }
    dend_40 { pt3dadd( 63.4212, -35.334, 40.0597, 0.55 ) }
    dend_40 { pt3dadd( 63.6753, -34.8123, 42.4833, 0.28 ) }
    dend_40 { pt3dadd( 63.9224, -34.2895, 44.7468, 0.55 ) }
    dend_40 { pt3dadd( 64.369, -33.5383, 47.3816, 0.28 ) }
    dend_40 { pt3dadd( 64.5742, -33.1981, 48.4073, 0.55 ) }
    dend_40 { pt3dadd( 65.4111, -31.7687, 51.3283, 0.28 ) }
    dend_40 { pt3dadd( 65.6884, -31.1614, 52.4223, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 37.8778, -59.5042, -3.62206, 0.55 ) }
    dend_38 { pt3dadd( 39.4097, -60.0783, -4.55853, 0.55 ) }
    dend_38 { pt3dadd( 41.8586, -61.0187, -6.06613, 0.55 ) }
    dend_38 { pt3dadd( 43.628, -61.7281, -7.1786, 0.28 ) }
    dend_38 { pt3dadd( 44.8909, -62.2277, -7.96312, 0.55 ) }
    dend_38 { pt3dadd( 46.875, -62.9866, -9.13986, 0.55 ) }
    dend_38 { pt3dadd( 47.732, -63.3383, -9.60808, 0.28 ) }
    dend_38 { pt3dadd( 48.3194, -63.5913, -9.94951, 0.55 ) }
    dend_38 { pt3dadd( 48.9799, -63.932, -10.3117, 0.28 ) }
    dend_38 { pt3dadd( 49.955, -64.5152, -10.8369, 0.55 ) }
    dend_38 { pt3dadd( 51.4064, -65.4341, -11.5142, 0.55 ) }
    dend_38 { pt3dadd( 53.4948, -66.7747, -12.4317, 0.55 ) }
    dend_38 { pt3dadd( 56.1971, -68.4952, -14.004, 1.38 ) }
    dend_38 { pt3dadd( 57.8677, -69.532, -15.1385, 0.83 ) }
    dend_38 { pt3dadd( 59.2654, -70.3456, -16.1772, 0.55 ) }
    dend_38 { pt3dadd( 60.9975, -71.2952, -17.5749, 0.28 ) }
    dend_38 { pt3dadd( 63.0916, -72.3607, -19.3843, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 66.946, -74.0833, -23.1502, 0.28 ) }
    dend_38 { pt3dadd( 67.4342, -74.3072, -23.6727, 0.28 ) }
    dend_38 { pt3dadd( 68.6165, -74.9056, -25.1275, 0.55 ) }
    dend_38 { pt3dadd( 69.3914, -75.3088, -26.1502, 0.55 ) }
    dend_38 { pt3dadd( 70.0728, -75.7048, -27.1353, 0.55 ) }
    dend_38 { pt3dadd( 71.9736, -76.9692, -29.7806, 0.55 ) }
    dend_38 { pt3dadd( 73.834, -78.3726, -32.2453, 0.28 ) }
    dend_38 { pt3dadd( 74.9525, -79.3033, -33.7956, 0.83 ) }
    dend_38 { pt3dadd( 75.6284, -79.9023, -34.7652, 0.83 ) }
    dend_38 { pt3dadd( 77.4194, -81.4875, -37.2939, 0.55 ) }
    dend_38 { pt3dadd( 78.1582, -82.136, -38.2696, 0.83 ) }
    dend_38 { pt3dadd( 79.2309, -83.0211, -39.4159, 0.28 ) }
    dend_38 { pt3dadd( 80.0341, -83.6046, -40.1155, 0.55 ) }
    dend_38 { pt3dadd( 80.5377, -83.9862, -40.4758, 0.28 ) }
    dend_38 { pt3dadd( 80.7883, -84.192, -40.6226, 0.55 ) }
    dend_38 { pt3dadd( 82.0287, -85.1464, -41.1659, 0.28 ) }
    dend_38 { pt3dadd( 83.3739, -86.2242, -41.8651, 0.28 ) }
    dend_38 { pt3dadd( 84.4102, -87.0703, -42.3952, 0.83 ) }
    dend_38 { pt3dadd( 85.2807, -87.8699, -42.8707, 0.55 ) }
    dend_38 { pt3dadd( 87.4487, -90.0057, -44.0843, 0.28 ) }
    dend_38 { pt3dadd( 88.0737, -90.688, -44.4879, 0.83 ) }
    dend_38 { pt3dadd( 90.0271, -93.0155, -45.8626, 0.28 ) }
    dend_38 { pt3dadd( 90.7406, -94.0104, -46.4119, 0.83 ) }
    dend_38 { pt3dadd( 91.9613, -95.8125, -47.3107, 0.28 ) }
    dend_38 { pt3dadd( 92.3049, -96.3294, -47.5738, 0.83 ) }
    dend_38 { pt3dadd( 93.711, -98.5564, -48.6615, 0.28 ) }
    dend_38 { pt3dadd( 94.5601, -99.9266, -49.3038, 0.28 ) }
    dend_38 { pt3dadd( 95.3421, -101.088, -49.7709, 0.55 ) }
    dend_38 { pt3dadd( 96.2556, -102.355, -50.3552, 0.55 ) }
    dend_38 { pt3dadd( 97.7946, -104.279, -51.298, 0.55 ) }
    dend_38 { pt3dadd( 98.6304, -105.255, -51.7856, 0.28 ) }
    dend_38 { pt3dadd( 99.0813, -105.756, -52.0509, 0.55 ) }
    dend_38 { pt3dadd( 100.553, -107.371, -53.0629, 0.28 ) }
    dend_38 { pt3dadd( 101.67, -108.503, -53.8341, 0.55 ) }
    dend_38 { pt3dadd( 102.831, -109.724, -54.6751, 0.28 ) }
    dend_38 { pt3dadd( 103.183, -110.089, -54.9016, 0.83 ) }
    dend_38 { pt3dadd( 104.686, -111.629, -55.939, 0.28 ) }
    dend_38 { pt3dadd( 105.038, -111.967, -56.1847, 0.55 ) }
    dend_38 { pt3dadd( 105.947, -112.761, -56.8438, 0.55 ) }
    dend_38 { pt3dadd( 107.524, -114.052, -57.7602, 0.28 ) }
    dend_38 { pt3dadd( 107.587, -114.101, -57.7977, 0.55 ) }
    dend_38 { pt3dadd( 108.982, -115.118, -58.7417, 0.28 ) }
    dend_38 { pt3dadd( 109.536, -115.488, -59.1211, 0.55 ) }
    dend_38 { pt3dadd( 110.999, -116.506, -60.2668, 0.28 ) }
    dend_38 { pt3dadd( 111.95, -117.157, -61.0806, 0.55 ) }
    dend_38 { pt3dadd( 113.658, -118.253, -62.6182, 0.55 ) }
    dend_38 { pt3dadd( 115.128, -119.211, -64.0129, 0.28 ) }
    dend_38 { pt3dadd( 116.021, -119.824, -64.8883, 0.83 ) }
    dend_38 { pt3dadd( 117.551, -120.917, -66.4067, 0.28 ) }
    dend_38 { pt3dadd( 117.89, -121.13, -66.699, 0.55 ) }
    dend_38 { pt3dadd( 119.177, -121.818, -67.6961, 0.28 ) }
    dend_38 { pt3dadd( 119.635, -122.009, -67.9356, 0.55 ) }
    dend_38 { pt3dadd( 121.881, -122.75, -68.8488, 0.28 ) }
    dend_38 { pt3dadd( 122.608, -122.941, -69.1043, 0.83 ) }
    dend_38 { pt3dadd( 125.5, -123.472, -69.8056, 0.28 ) }
    dend_38 { pt3dadd( 126.044, -123.549, -69.9109, 0.55 ) }
    dend_38 { pt3dadd( 128.295, -123.669, -70.1553, 0.28 ) }
    dend_38 { pt3dadd( 130.228, -123.607, -70.3204, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 37.8778, -59.5042, -3.62206, 0.55 ) }
    dend_35 { pt3dadd( 38.2407, -60.2589, -4.85607, 0.55 ) }
    dend_35 { pt3dadd( 38.9078, -61.8943, -7.45867, 0.55 ) }
    dend_35 { pt3dadd( 39.5083, -63.296, -9.65873, 0.28 ) }
    dend_35 { pt3dadd( 39.9657, -64.2901, -11.2675, 0.83 ) }
    dend_35 { pt3dadd( 40.8002, -65.8539, -13.8698, 0.28 ) }
    dend_35 { pt3dadd( 40.9989, -66.2039, -14.4996, 0.55 ) }
    dend_35 { pt3dadd( 41.1595, -66.4904, -15.0732, 0.55 ) }
    dend_35 { pt3dadd( 41.5338, -66.9872, -16.2608, 0.55 ) }
    dend_35 { pt3dadd( 42.1649, -67.6941, -18.0768, 0.55 ) }
    dend_35 { pt3dadd( 42.5237, -68.0621, -19.0765, 0.55 ) }
    dend_35 { pt3dadd( 43.6863, -68.9757, -21.7473, 0.83 ) }
    dend_35 { pt3dadd( 44.4183, -69.5044, -23.3965, 0.28 ) }
    dend_35 { pt3dadd( 44.7, -69.7036, -24.0805, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -88.1225, -10.191, -100.143, 0.28 ) }
    dend_20 { pt3dadd( -89.2706, -10.244, -99.7502, 0.28 ) }
    dend_20 { pt3dadd( -90.7624, -10.3128, -99.2404, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -88.1225, -10.191, -100.143, 0.28 ) }
    dend_19 { pt3dadd( -89.1194, -12.0226, -101.867, 0.28 ) }
    dend_19 { pt3dadd( -89.4108, -12.5581, -102.371, 0.55 ) }
    dend_19 { pt3dadd( -90.3226, -14.2335, -103.948, 0.28 ) }
    dend_19 { pt3dadd( -90.7262, -14.9751, -104.646, 0.83 ) }
    dend_19 { pt3dadd( -92.4924, -18.2204, -107.701, 0.28 ) }
    dend_19 { pt3dadd( -92.7827, -18.7538, -108.203, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -119.046, 312.8, 3.17003, 0.55 ) }
    dend_9 { pt3dadd( -120.304, 313.598, 2.17069, 0.55 ) }
    dend_9 { pt3dadd( -121.643, 314.552, 1.1725, 0.28 ) }
    dend_9 { pt3dadd( -122.978, 315.505, 0.177087, 0.55 ) }
    dend_9 { pt3dadd( -126.839, 318.258, -2.7012, 0.28 ) }
    dend_9 { pt3dadd( -127.282, 318.575, -3.03207, 0.55 ) }
    dend_9 { pt3dadd( -130.145, 320.617, -5.16631, 0.28 ) }
    dend_9 { pt3dadd( -131.569, 321.498, -6.41933, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -119.046, 312.8, 3.17003, 0.28 ) }
    dend_8 { pt3dadd( -121.47, 311.461, 2.40503, 0.28 ) }
    dend_8 { pt3dadd( -122.819, 310.716, 1.97923, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 165.781, 111.172, -72.4323, 0.28 ) }
    dend_47 { pt3dadd( 162.732, 113.073, -72.7359, 0.28 ) }
    dend_47 { pt3dadd( 161.699, 113.717, -72.8388, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 165.781, 111.172, -72.4323, 0.28 ) }
    dend_46 { pt3dadd( 166.203, 112.733, -71.6589, 0.28 ) }
    dend_46 { pt3dadd( 166.961, 115.666, -70.1623, 0.28 ) }
    dend_46 { pt3dadd( 167.137, 116.449, -69.7215, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 167.664, 119.277, -67.9563, 0.28 ) }
    dend_46 { pt3dadd( 167.967, 120.903, -66.942, 0.55 ) }
    dend_46 { pt3dadd( 168.359, 123.003, -65.6316, 0.28 ) }
    dend_46 { pt3dadd( 168.524, 124.097, -64.8738, 0.55 ) }
    dend_46 { pt3dadd( 168.704, 125.809, -63.5292, 0.28 ) }
    dend_46 { pt3dadd( 168.795, 127.197, -62.4179, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 44.7, -69.7036, -24.0805, 0.55 ) }
    dend_37 { pt3dadd( 43.57, -70.8558, -26.4591, 0.55 ) }
    dend_37 { pt3dadd( 43.0664, -71.4287, -27.5997, 0.28 ) }
    dend_37 { pt3dadd( 42.7211, -71.7822, -28.3606, 0.83 ) }
    dend_37 { pt3dadd( 40.4918, -73.8238, -32.834, 0.28 ) }
    dend_37 { pt3dadd( 39.8596, -74.4259, -34.084, 0.83 ) }
    dend_37 { pt3dadd( 37.0897, -77.1261, -39.3689, 0.28 ) }
    dend_37 { pt3dadd( 36.7021, -77.4986, -40.0966, 0.83 ) }
    dend_37 { pt3dadd( 34.2243, -79.599, -44.4095, 0.28 ) }
    dend_37 { pt3dadd( 33.4596, -80.1859, -45.5864, 0.55 ) }
    dend_37 { pt3dadd( 29.9607, -82.5427, -50.3605, 0.28 ) }
    dend_37 { pt3dadd( 29.244, -82.9903, -51.3268, 0.28 ) }
    dend_37 { pt3dadd( 27.6941, -83.8773, -53.3987, 0.83 ) }
    dend_37 { pt3dadd( 23.1338, -86.3484, -59.5499, 0.28 ) }
    dend_37 { pt3dadd( 21.8962, -87.0008, -61.2857, 0.55 ) }
    dend_37 { pt3dadd( 19.4924, -88.2201, -64.7509, 0.55 ) }
    dend_37 { pt3dadd( 17.6991, -89.0511, -67.3063, 0.55 ) }
    dend_37 { pt3dadd( 14.6234, -90.5231, -71.7363, 0.28 ) }
    dend_37 { pt3dadd( 13.7726, -90.9911, -72.9834, 0.83 ) }
    dend_37 { pt3dadd( 10.8937, -92.7491, -77.0903, 0.28 ) }
    dend_37 { pt3dadd( 10.3322, -93.131, -77.8608, 0.55 ) }
    dend_37 { pt3dadd( 7.73896, -95.0414, -80.8909, 0.28 ) }
    dend_37 { pt3dadd( 6.92529, -95.6038, -81.6923, 0.55 ) }
    dend_37 { pt3dadd( 3.7272, -97.8615, -84.4507, 0.28 ) }
    dend_37 { pt3dadd( 3.4383, -98.0517, -84.6935, 0.83 ) }
    dend_37 { pt3dadd( 1.67684, -99.1201, -85.9538, 0.28 ) }
    dend_37 { pt3dadd( 0.221734, -99.9625, -86.867, 0.55 ) }
    dend_37 { pt3dadd( -4.25458, -102.395, -89.5139, 0.28 ) }
    dend_37 { pt3dadd( -5.6135, -103.142, -90.2415, 0.83 ) }
    dend_37 { pt3dadd( -11.5606, -106.443, -93.0233, 0.28 ) }
    dend_37 { pt3dadd( -14.1254, -107.902, -94.1726, 0.55 ) }
    dend_37 { pt3dadd( -17.4922, -109.905, -95.7054, 0.55 ) }
    dend_37 { pt3dadd( -21.2473, -112.28, -97.3262, 0.28 ) }
    dend_37 { pt3dadd( -24.4149, -114.428, -98.5126, 0.55 ) }
    dend_37 { pt3dadd( -26.6661, -116.014, -99.4701, 0.28 ) }
    dend_37 { pt3dadd( -26.9933, -116.264, -99.6181, 0.55 ) }
    dend_37 { pt3dadd( -28.9783, -117.718, -100.639, 0.28 ) }
    dend_37 { pt3dadd( -30.526, -118.745, -101.463, 0.55 ) }
    dend_37 { pt3dadd( -32.2353, -119.746, -102.405, 0.55 ) }
    dend_37 { pt3dadd( -35.1684, -121.168, -104.191, 0.28 ) }
    dend_37 { pt3dadd( -36.4348, -121.695, -104.928, 0.55 ) }
    dend_37 { pt3dadd( -38.2576, -122.411, -105.968, 0.28 ) }
    dend_37 { pt3dadd( -39.4294, -122.825, -106.589, 0.55 ) }
    dend_37 { pt3dadd( -42.6037, -123.875, -108.274, 0.28 ) }
    dend_37 { pt3dadd( -43.6628, -124.202, -108.882, 0.55 ) }
    dend_37 { pt3dadd( -46.3172, -125.062, -110.414, 0.28 ) }
    dend_37 { pt3dadd( -47.9722, -125.668, -111.6, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 44.7, -69.7036, -24.0805, 0.28 ) }
    dend_36 { pt3dadd( 47.889, -69.9412, -24.8148, 0.28 ) }
    dend_36 { pt3dadd( 48.3451, -69.9933, -24.9634, 0.83 ) }
    dend_36 { pt3dadd( 50.4363, -70.339, -25.6644, 0.28 ) }
    dend_36 { pt3dadd( 51.166, -70.4416, -25.9153, 0.28 ) }
    dend_36 { pt3dadd( 52.0624, -70.6094, -26.258, 0.55 ) }
    dend_36 { pt3dadd( 53.6075, -70.949, -27.0681, 0.28 ) }
    dend_36 { pt3dadd( 55.2176, -71.3981, -28.1678, 0.55 ) }
    dend_36 { pt3dadd( 56.1595, -71.728, -28.8427, 0.55 ) }
    dend_36 { pt3dadd( 57.2999, -72.2174, -29.8173, 0.55 ) }
    dend_36 { pt3dadd( 59.2472, -73.114, -31.6886, 0.83 ) }
    dend_36 { pt3dadd( 61.5261, -74.2298, -34.1291, 0.28 ) }
    dend_36 { pt3dadd( 62.2993, -74.6276, -35.0158, 0.28 ) }
    dend_36 { pt3dadd( 62.6844, -74.8661, -35.5217, 0.83 ) }
    dend_36 { pt3dadd( 65.2088, -76.5228, -39.0269, 0.28 ) }
    dend_36 { pt3dadd( 65.9041, -77.049, -40.0846, 0.83 ) }
    dend_36 { pt3dadd( 66.4733, -77.5423, -41.0265, 0.83 ) }
    dend_36 { pt3dadd( 67.4711, -78.5139, -42.6715, 0.83 ) }
    dend_36 { pt3dadd( 69.1425, -80.2638, -45.512, 0.55 ) }
    dend_36 { pt3dadd( 70.5585, -81.9774, -47.977, 0.55 ) }
    dend_36 { pt3dadd( 72.2621, -84.4365, -50.954, 0.55 ) }
    dend_36 { pt3dadd( 73.0208, -85.7989, -52.4175, 0.55 ) }
    dend_36 { pt3dadd( 73.6171, -87.147, -53.6892, 0.28 ) }
    dend_36 { pt3dadd( 73.6783, -87.3275, -53.828, 0.55 ) }
    dend_36 { pt3dadd( 74.3568, -90.1118, -55.4835, 0.28 ) }
    dend_36 { pt3dadd( 74.5338, -91.1795, -55.9804, 0.55 ) }
    dend_36 { pt3dadd( 75.0231, -94.3488, -57.2012, 0.28 ) }
    dend_36 { pt3dadd( 75.3351, -96.142, -57.7963, 0.55 ) }
    dend_36 { pt3dadd( 75.7316, -98.0717, -58.3662, 0.28 ) }
    dend_36 { pt3dadd( 76.1057, -99.5134, -58.6983, 0.55 ) }
    dend_36 { pt3dadd( 77.1351, -102.863, -59.2391, 0.28 ) }
    dend_36 { pt3dadd( 77.4268, -103.664, -59.3133, 1.11 ) }
    dend_36 { pt3dadd( 79.243, -107.653, -59.3742, 0.28 ) }
    dend_36 { pt3dadd( 80.2926, -109.58, -59.2729, 0.55 ) }
    dend_36 { pt3dadd( 81.4675, -111.366, -58.8667, 0.28 ) }
    dend_36 { pt3dadd( 81.9117, -111.919, -58.6221, 0.55 ) }
    dend_36 { pt3dadd( 83.1788, -113.278, -57.7025, 0.28 ) }
    dend_36 { pt3dadd( 84.0674, -114.135, -56.9568, 0.28 ) }
    dend_36 { pt3dadd( 85.8672, -115.614, -55.2307, 0.55 ) }
    dend_36 { pt3dadd( 88.5334, -117.809, -52.5157, 0.55 ) }
    dend_36 { pt3dadd( 89.5732, -118.666, -51.4341, 0.28 ) }
    dend_36 { pt3dadd( 89.7924, -118.828, -51.2219, 0.55 ) }
    dend_36 { pt3dadd( 91.4303, -119.901, -49.8028, 0.28 ) }
    dend_36 { pt3dadd( 91.7182, -120.079, -49.5738, 0.55 ) }
    dend_36 { pt3dadd( 93.0952, -120.791, -48.7175, 0.28 ) }
    dend_36 { pt3dadd( 93.7357, -121.058, -48.4344, 0.55 ) }
    dend_36 { pt3dadd( 96.3439, -121.813, -47.214, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 97.1801, -121.947, -46.7328, 0.55 ) }
    dend_36 { pt3dadd( 98.5282, -121.987, -45.972, 0.28 ) }
    dend_36 { pt3dadd( 98.9686, -121.939, -45.6514, 0.55 ) }
    dend_36 { pt3dadd( 100.243, -121.641, -44.5809, 0.28 ) }
    dend_36 { pt3dadd( 101.342, -121.332, -43.5776, 0.55 ) }
    dend_36 { pt3dadd( 103.322, -120.616, -41.3973, 0.28 ) }
    dend_36 { pt3dadd( 104.819, -119.985, -39.6079, 0.55 ) }
    dend_36 { pt3dadd( 107.964, -118.396, -35.6156, 0.28 ) }
    dend_36 { pt3dadd( 108.416, -118.153, -35.0081, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 5
    dend_42 nseg = 3
    dend_6 nseg = 9
    dend_5 nseg = 9
    dend_3 nseg = 7
    dend_48 nseg = 13
    dend_43 nseg = 3
    dend_30 nseg = 21
    dend_29 nseg = 5
    dend_24 nseg = 5
    dend_18 nseg = 5
    dend_17 nseg = 11
    dend_15 nseg = 5
    dend_14 nseg = 5
    dend_10 nseg = 7
    dend_7 nseg = 7
    dend_45 nseg = 11
    dend_44 nseg = 3
    dend_40 nseg = 3
    dend_38 nseg = 7
    dend_37 nseg = 7
    dend_36 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L4_BTC_ede3831900_0_0


