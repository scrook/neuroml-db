// Cell: cACint209_L4_NBC_70775a2036_0_0
/*
{
  "id" : "cACint209_L4_NBC_70775a2036_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.0899217, 10.7196, -0.0356444, 3.50948", "0.0981917, 9.65057, -0.0320434, 6.08457", "0.106462, 8.58151, -0.0284423, 8.34889", "0.114732, 7.51245, -0.0248413, 10.1103", "0.123002, 6.44339, -0.0212403, 11.2383", "0.131272, 5.37433, -0.0176392, 11.2661", "0.139542, 4.30528, -0.0140382, 11.244", "0.147812, 3.23622, -0.0104372, 11.4836", "0.156082, 2.16716, -0.00683612, 11.9517", "0.164352, 1.0981, -0.00323509, 12.4011", "0.172622, 0.0290375, 3.65951E-4, 12.5604", "0.180892, -1.04002, 0.00396699, 12.3795", "0.189162, -2.10908, 0.00756802, 12.1972", "0.197432, -3.17814, 0.0111691, 11.9032", "0.205702, -4.2472, 0.0147701, 11.2483", "0.213971, -5.31626, 0.0183711, 10.5305", "0.222241, -6.38532, 0.0219722, 9.81153", "0.230511, -7.45438, 0.0255732, 8.46221", "0.238781, -8.52344, 0.0291742, 6.6335", "0.247051, -9.5925, 0.0327753, 4.80479", "0.255321, -10.6616, 0.0363763, 2.85351" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-3.65193, 5.50999, 6.96795, 2.0", "-7.44666, 5.3323, 5.30172, 2.0", "-12.2747, 5.10623, 3.18178, 1.33", "-15.6833, 4.94662, 1.6851, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999982464829099
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-5.79193, -4.77626, 9.36795, 4.0", "-6.58231, -4.9948, 9.36795, 4.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999982464829099
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.568065, -9.31001, -1.56205, 2.67", "2.09603, -13.4519, -1.56205, 2.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999982464829099
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "2.50807, -7.98401, 4.43795, 0.67", "4.29759, -10.7971, 9.49745, 0.67", "5.26682, -12.0482, 12.0637, 0.67", "7.23866, -14.7725, 16.9156, 0.67", "10.1556, -17.7357, 21.9537, 0.67", "13.301, -20.5367, 26.133, 0.67", "20.8115, -26.6666, 34.1125, 0.67", "22.3877, -27.792, 35.553, 0.67", "25.4733, -30.0901, 38.1203, 0.67", "31.6824, -34.8391, 41.764, 0.67", "35.5496, -37.3644, 43.0353, 1.33", "38.863, -39.5693, 43.3991, 0.67", "40.1901, -40.5229, 43.3352, 1.33", "42.1193, -41.9759, 43.2762, 0.67", "47.6742, -45.9939, 43.3744, 0.67", "49.7681, -47.5789, 43.6725, 0.67", "51.2755, -48.4572, 44.0256, 0.67", "54.2536, -50.0136, 44.8964, 0.67", "56.4871, -51.0073, 45.6146, 0.33", "60.6991, -52.5353, 47.2124, 0.67", "65.1568, -53.8771, 49.587, 0.33", "68.1439, -54.6595, 51.1071, 0.33", "75.6184, -61.9446, 56.7514, 0.33", "81.9953, -68.6577, 64.1775, 0.33", "88.5292, -75.5699, 71.2716, 0.33", "92.6841, -83.1956, 79.2998, 0.33", "95.352, -91.008, 87.7436, 0.33", "98.9103, -99.1679, 95.4978, 0.33", "105.165, -105.216, 103.592, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999982464829099,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.76807, -2.93351, 10.568, 2.0", "4.21851, -4.08352, 13.4924, 1.33", "3.68722, -5.49875, 16.7832, 1.33", "3.57994, -6.5687, 19.5109, 1.33", "3.84684, -9.4427, 26.2393, 1.33", "4.14575, -10.639, 29.0693, 1.33", "4.81726, -12.6436, 33.6135, 0.67", "5.52581, -14.9182, 39.2193, 1.33", "6.32015, -17.0075, 44.675, 1.33", "7.01546, -18.0736, 47.2108, 0.67", "7.94306, -19.0321, 49.1984, 0.67", "8.57083, -19.6158, 50.5323, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999982464829099,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.96807, 6.96274, 0.437955, 1.33", "14.8039, 6.97592, -0.56553, 1.33", "21.438, 7.50732, -1.51471, 0.67", "25.2798, 8.00777, -2.12515, 1.33", "27.5006, 8.35187, -2.39217, 0.33", "29.4351, 8.57961, -2.76818, 0.67", "32.8871, 8.8174, -3.50547, 1.33", "35.2001, 8.91958, -4.20065, 0.67", "36.0757, 8.94129, -4.40145, 1.33", "40.7277, 8.5474, -5.72878, 0.67", "47.3313, 7.63628, -7.59922, 0.33", "49.4743, 7.18051, -8.20486, 0.67", "53.0322, 6.27761, -9.24936, 0.67", "55.962, 5.492, -10.1704, 0.67", "61.0081, 3.92444, -11.9021, 0.33", "63.1859, 3.14572, -12.7066, 1.33", "66.2463, 1.67398, -14.1348, 0.33", "68.5082, 0.366395, -15.3739, 1.33", "70.0457, -0.786417, -16.4067, 0.67", "72.7157, -3.33783, -18.448, 0.33", "73.3987, -4.08947, -19.019, 1.33", "78.1219, -10.1038, -23.4385, 0.33", "79.8601, -12.7579, -25.148, 0.33", "81.6597, -15.8013, -27.047, 1.33", "83.6024, -19.1415, -29.1622, 0.33", "83.8667, -19.5612, -29.4304, 1.33", "84.8793, -21.0649, -30.3591, 0.33", "85.4526, -21.8049, -30.7433, 1.33", "88.4411, -25.4347, -32.6451, 0.33", "89.0285, -26.0244, -32.9339, 0.67", "92.3637, -28.7755, -34.2657, 0.33", "93.0925, -29.247, -34.4875, 0.67", "95.0846, -30.3105, -35.0388, 0.33", "96.3047, -30.9136, -35.3857, 0.67", "101.118, -33.2073, -36.6106, 0.33", "102.311, -33.7601, -36.918, 0.67", "106.244, -35.4904, -37.8833, 0.33", "108.919, -36.7092, -38.6598, 0.67", "114.051, -39.0899, -40.4796, 0.33", "114.808, -39.4468, -40.7764, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999982464829099,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.09807, 10.4337, 6.03795, 4.0", "1.66254, 11.6946, 6.03795, 4.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999982464829099
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.255321, -10.6616, 0.0363763, 0.67", "0.371353, -25.6612, 0.0363763, 0.67", "0.487386, -40.6607, 0.0363763, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-15.6833, 4.94662, 1.6851, 0.67", "-18.7546, 2.78835, 2.67007, 0.67", "-23.0091, 0.684398, 3.43886, 1.33", "-24.6451, -0.0464542, 3.65801, 0.67", "-26.6346, -0.784787, 3.85049, 1.33", "-31.3003, -2.29458, 4.22176, 1.33", "-34.2463, -3.11303, 4.4174, 0.67", "-38.5341, -4.02699, 4.85548, 0.67", "-40.1783, -4.23829, 5.0726, 0.67", "-46.2732, -4.82701, 6.00018, 1.33", "-48.1046, -4.95199, 6.33057, 0.33", "-49.7568, -4.95755, 6.62507, 0.33", "-54.7784, -4.84694, 7.65844, 0.67", "-56.0371, -4.85991, 7.85723, 0.67", "-58.6887, -4.90488, 7.96028, 0.67", "-60.5543, -5.0533, 7.74325, 1.33", "-63.0937, -5.42059, 7.02497, 0.33", "-65.7909, -6.00717, 6.02925, 0.67", "-70.2386, -7.14012, 4.25939, 0.33", "-71.0449, -7.36992, 3.98441, 1.33", "-72.9798, -7.99053, 3.53242, 0.67", "-76.319, -9.20862, 2.934, 0.33", "-78.9949, -10.1833, 2.70063, 1.33", "-82.0846, -11.218, 2.718, 0.33", "-83.5785, -11.6315, 2.82826, 1.33", "-86.5963, -12.385, 3.0769, 0.67", "-91.0028, -13.3794, 3.49878, 0.67", "-94.7957, -14.1377, 3.92635, 1.33", "-97.6837, -14.6084, 4.1684, 0.33", "-99.9118, -14.9443, 4.29603, 0.33", "-100.885, -15.0892, 4.37724, 1.33", "-104.169, -15.6027, 4.73577, 0.33", "-105.706, -15.8488, 5.08637, 1.33", "-109.397, -16.6025, 6.19706, 0.33", "-111.285, -17.1057, 6.90828, 1.33", "-114.835, -18.328, 8.49822, 0.33", "-115.765, -18.7256, 8.97695, 0.67", "-119.35, -20.5965, 11.1233, 0.33", "-120.292, -21.1826, 11.7383, 0.67", "-122.048, -22.4305, 12.9598, 0.33", "-122.548, -22.7795, 13.3027, 0.67", "-124.954, -24.1948, 14.6736, 0.33", "-125.537, -24.453, 14.932, 0.67", "-127.592, -25.0062, 15.4996, 0.33", "-128.878, -25.2108, 15.8104, 0.33", "-131.357, -25.4635, 16.3434, 1.33", "-134.41, -25.6814, 16.9333, 0.33", "-135.323, -25.7353, 17.0871, 0.67", "-139.752, -26.0177, 17.9513, 0.33", "-141.013, -26.1027, 18.2146, 1.33", "-143.372, -26.3408, 18.7349, 0.33", "-144.265, -26.4876, 18.9372, 0.67", "-147.304, -27.1193, 19.7308, 0.33", "-149.974, -27.7445, 20.4766, 1.33", "-151.73, -28.2049, 21.0048, 0.33", "-152.539, -28.4547, 21.2045, 0.67", "-154.981, -29.2666, 21.9216, 0.33", "-156.09, -29.6806, 22.2805, 0.67", "-157.951, -30.4002, 22.8875, 0.33", "-158.972, -30.7512, 23.1713, 0.67", "-162.297, -31.7315, 24.1186, 0.33", "-166.212, -32.3615, 25.3746, 0.67", "-167.914, -32.4425, 25.9492, 0.33", "-168.987, -32.4019, 26.2795, 1.33", "-172.913, -32.0219, 27.2827, 0.33", "-174.007, -31.8871, 27.5004, 0.67", "-178.781, -31.2306, 27.991, 0.33", "-180.056, -31.0934, 27.8967, 1.33", "-184.071, -30.7486, 27.2227, 0.33", "-185.665, -30.6651, 26.8217, 0.67", "-189.405, -30.6108, 25.4063, 0.33", "-192.291, -30.6329, 24.1469, 0.67", "-196.303, -30.8207, 22.0904, 0.33", "-197.196, -30.8825, 21.599, 0.67", "-198.254, -30.9796, 20.9569, 0.33", "-199.936, -31.0842, 19.9548, 0.67", "-202.255, -31.1553, 18.3584, 0.33", "-203.267, -31.1068, 18.0706, 0.67", "-212.083, -33.7683, 19.444, 0.67", "-220.935, -35.1996, 21.9937, 0.67", "-229.802, -36.1106, 24.7389, 0.67", "-238.298, -38.1407, 27.9716, 0.67", "-246.28, -39.9195, 32.4302, 0.67", "-253.824, -42.9333, 36.9407, 0.67", "-262.289, -44.6144, 40.4542, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-15.6833, 4.94662, 1.6851, 1.33", "-19.3483, 12.9003, 2.13917, 1.33", "-20.8946, 15.856, 2.49152, 1.33", "-22.9056, 18.4844, 3.38706, 0.67", "-24.6749, 20.6983, 4.494, 0.67", "-25.5933, 21.8054, 5.25226, 0.67", "-27.0922, 23.519, 6.19074, 1.33", "-31.1441, 27.8565, 8.41304, 0.67", "-35.9586, 32.901, 10.5754, 1.33", "-40.2688, 37.1503, 12.3599, 0.67", "-43.7924, 40.5042, 13.6913, 1.33", "-51.8036, 47.9373, 16.7065, 1.33", "-54.8543, 50.8268, 17.8992, 0.67", "-57.8686, 54.0266, 19.1045, 0.67", "-62.6218, 59.8318, 19.8664, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.58231, -4.9948, 9.36795, 1.33", "-6.62201, -9.0906, 10.4902, 1.33", "-6.66635, -13.6648, 11.7435, 1.33", "-6.73768, -21.0234, 13.7597, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-6.58231, -4.9948, 9.36795, 0.67", "-8.91715, -3.13403, 7.22765, 0.67", "-10.7974, -1.66461, 5.46987, 1.33", "-13.532, 0.3209, 2.75973, 0.67", "-15.7542, 1.88089, 0.603009, 0.67", "-16.8959, 2.62197, -0.47156, 0.67", "-21.4903, 5.64027, -5.0992, 0.67", "-22.9756, 6.53208, -6.60542, 0.67", "-24.7275, 7.514, -8.43326, 1.33", "-26.1693, 8.2908, -9.92678, 0.67", "-27.2035, 8.81604, -11.0628, 0.67", "-30.2647, 10.0387, -14.2338, 0.33", "-32.0551, 10.4145, -15.6971, 1.33", "-33.3684, 10.6694, -16.7154, 0.33", "-34.9956, 10.8495, -18.0307, 1.33", "-36.4827, 10.9053, -19.3012, 0.33", "-37.3196, 10.9418, -20.0056, 0.67", "-39.415, 10.9232, -21.3816, 0.33", "-41.4874, 10.8989, -22.5439, 2.0", "-46.1876, 10.9551, -24.5274, 0.33", "-46.7885, 10.9728, -24.6646, 0.67", "-48.6182, 11.0862, -24.9582, 0.33", "-54.2953, 11.6252, -24.7227, 1.33", "-56.0867, 11.8286, -24.3052, 0.33", "-57.653, 12.026, -23.6991, 0.67", "-58.9857, 12.2033, -23.0758, 0.33", "-61.2708, 12.4093, -22.5191, 0.67", "-64.5479, 12.669, -22.4655, 0.33", "-67.0686, 12.916, -22.8076, 0.67", "-70.2324, 13.2586, -23.3209, 0.33", "-71.1199, 13.3444, -23.4929, 0.67", "-77.2936, 13.9337, -24.9638, 0.33", "-78.9996, 14.0539, -25.4715, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.09603, -13.4519, -1.56205, 1.33", "5.79445, -15.3667, -3.36178, 1.33", "7.50272, -16.4463, -4.39959, 1.33", "9.35532, -17.9463, -5.7002, 1.33", "14.2295, -22.6062, -9.29465, 1.33", "15.8493, -24.2094, -10.4471, 0.67", "25.344, -33.9749, -17.3874, 1.33", "27.7762, -36.5271, -19.2443, 1.33", "30.8875, -39.7025, -21.7447, 1.33", "33.0307, -41.9017, -23.5302, 0.67", "36.1103, -45.0627, -26.0948, 1.33", "42.8649, -51.0925, -30.6853, 1.33", "44.9826, -52.7715, -31.6959, 0.67", "49.0376, -55.4208, -33.5034, 0.67", "51.3762, -56.7981, -34.4843, 0.67", "53.5654, -58.1449, -35.4006, 0.67", "55.2811, -59.4343, -36.0808, 0.67", "57.4681, -61.4483, -36.828, 0.33", "59.6451, -63.8701, -37.6122, 1.33", "62.4502, -67.264, -38.5612, 0.67", "63.2861, -68.4174, -38.8592, 0.67", "65.0056, -71.0879, -39.5989, 1.33", "66.4794, -73.4295, -40.248, 0.67", "68.473, -76.4299, -41.0423, 1.33", "69.8548, -78.4504, -41.5581, 0.33", "73.1855, -82.9378, -42.7509, 0.67", "74.9537, -85.1608, -43.5291, 0.33", "76.9564, -87.4669, -44.5052, 1.33", "78.7769, -89.4396, -45.5648, 0.67", "80.7335, -91.4474, -46.8885, 0.67", "81.8738, -92.566, -47.7006, 0.33", "84.4906, -95.0391, -49.5693, 1.33", "86.2969, -96.9866, -50.8385, 0.33", "88.2839, -99.438, -52.2879, 1.33", "89.6732, -101.407, -53.5054, 0.33", "90.9557, -103.332, -54.6485, 0.67", "92.3147, -105.515, -55.8561, 0.33", "93.0812, -106.895, -56.6492, 0.33", "93.8595, -108.692, -57.7833, 0.67", "95.674, -113.228, -60.6598, 0.67", "96.1044, -114.401, -61.4424, 0.33", "96.7585, -116.186, -62.6238, 1.33", "98.3288, -120.879, -65.6335, 0.33", "98.8484, -122.796, -66.7304, 0.33", "99.3272, -125.458, -68.3793, 0.67", "99.6042, -127.884, -69.8074, 0.33", "99.7194, -130.936, -71.6626, 0.67", "99.6335, -133.918, -73.4418, 0.33", "99.5166, -135.79, -74.5004, 1.33", "99.0899, -142.482, -78.5486, 0.33", "98.8702, -144.6, -80.0105, 0.33", "98.7544, -145.595, -80.8153, 1.33", "98.5488, -147.458, -82.4283, 0.33", "98.5272, -148.02, -82.9976, 0.67", "98.6589, -150.665, -85.8705, 0.33", "99.1362, -153.03, -88.3113, 1.33", "100.175, -156.734, -92.2491, 0.33", "100.629, -157.878, -93.5304, 2.0", "103.206, -162.831, -99.3655, 0.33", "103.995, -164.224, -101.025, 1.33", "105.675, -166.781, -104.04, 0.33", "106.181, -167.424, -104.738, 0.67", "108.924, -170.09, -107.51, 0.33", "109.836, -170.902, -108.343, 2.0" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "2.09603, -13.4519, -1.56205, 1.33", "-0.771025, -19.9975, -1.37364, 1.33", "-3.46688, -26.1524, -1.19648, 1.33", "-6.16182, -32.3051, -1.01938, 1.33", "-8.21152, -36.9848, -0.884676, 1.33", "-9.47969, -39.8801, -0.801337, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.57083, -19.6158, 50.5323, 0.67", "12.0959, -19.3483, 51.1931, 0.67", "14.1533, -19.0575, 51.8994, 0.33", "17.0016, -18.747, 52.2489, 0.67", "19.1048, -18.5496, 52.3175, 0.33", "20.7511, -18.3951, 52.3712, 0.33", "22.5176, -18.2293, 52.4289, 0.67", "26.9426, -17.4415, 52.6577, 0.33", "32.5013, -16.4034, 52.2761, 0.33", "33.8047, -16.23, 52.0316, 0.67", "41.6194, -15.9388, 51.4472, 0.67", "49.2675, -14.2797, 50.71, 0.67", "56.9747, -12.7436, 50.613, 0.67", "64.4573, -10.4094, 49.9546, 0.67", "71.823, -7.78002, 50.808, 0.67", "79.4189, -6.54555, 52.3938, 0.67", "86.4205, -4.06986, 54.9908, 0.67", "92.4239, -0.716802, 58.8099, 0.67", "98.4089, 1.49661, 63.4125, 0.67", "104.229, 4.11537, 68.0141, 0.67", "109.803, 7.35699, 72.5179, 0.67", "115.461, 9.30715, 77.6246, 0.67", "120.501, 11.0523, 83.4092, 0.67", "125.966, 13.7816, 88.3667, 0.67", "130.919, 17.7331, 93.0127, 0.67", "136.921, 21.8556, 95.9727, 0.67", "142.303, 26.0239, 99.8963, 0.67", "147.883, 30.1128, 103.625, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.57083, -19.6158, 50.5323, 0.67", "13.3676, -19.8306, 52.8038, 0.67", "26.7189, -22.1782, 59.9602, 0.67", "39.8873, -21.99, 67.8036, 0.67", "53.905, -21.3306, 73.9629, 0.67", "68.3271, -20.9838, 79.1395, 0.67", "83.2418, -21.9459, 82.5557, 0.67", "98.5367, -21.6121, 83.4744, 0.67", "113.511, -19.33, 85.6901, 0.67", "128.562, -16.5781, 85.9221, 0.67", "143.472, -14.607, 88.7979, 0.67", "158.013, -12.4565, 93.0833, 0.67", "172.815, -11.2595, 96.8499, 0.67", "188.06, -11.6475, 98.4157, 0.67", "203.329, -10.9663, 99.5203, 0.67", "218.551, -12.5923, 100.355, 0.67", "233.484, -15.5588, 102.121, 0.67", "247.499, -20.2696, 106.103, 0.67", "260.846, -26.449, 110.281, 0.67", "274.569, -32.8486, 112.386, 0.67", "288.515, -38.3011, 115.539, 0.67", "303.359, -41.8805, 116.821, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "1.66254, 11.6946, 6.03795, 2.67", "-1.41737, 17.167, 6.45854, 2.67", "-4.5008, 21.7266, 7.04661, 1.33", "-8.4987, 27.6385, 7.80909, 1.33", "-11.5465, 32.1453, 8.39036, 1.33", "-14.9465, 37.173, 9.03879, 1.33", "-19.6181, 44.0811, 9.92975, 1.33", "-22.7907, 48.3168, 10.8396, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.66254, 11.6946, 6.03795, 1.33", "5.47386, 14.3736, 6.04809, 1.33", "6.77778, 15.2901, 6.05155, 1.33", "8.56389, 16.5456, 6.0563, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "0.487386, -40.6607, 0.0363763, 0.33", "0.603418, -55.6603, 0.0363763, 0.33", "0.71945, -70.6598, 0.0363763, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-62.6218, 59.8318, 19.8664, 0.33", "-63.8171, 61.7854, 19.9472, 0.33", "-64.6344, 63.0128, 20.0104, 0.67", "-65.8331, 64.8232, 20.0913, 0.33", "-67.6649, 67.9038, 20.1873, 0.33", "-69.2016, 70.8955, 20.5177, 0.67", "-70.6845, 73.8558, 20.9219, 0.33", "-71.6226, 75.6809, 21.2212, 0.67", "-73.0923, 78.6612, 21.7513, 0.33", "-74.2665, 81.2156, 22.2284, 0.33", "-77.7379, 89.5219, 24.1183, 0.67", "-78.3715, 90.9249, 24.5096, 0.33", "-78.3715, 90.9249, 24.5096, 0.67", "-79.1429, 92.4205, 25.1343, 0.33", "-79.8901, 93.5706, 25.77, 0.67", "-81.886, 96.0031, 27.3368, 0.67", "-83.7661, 97.814, 28.5625, 0.33", "-86.5455, 100.484, 30.2528, 0.67", "-89.039, 102.69, 31.3054, 0.33", "-92.0269, 105.166, 32.3529, 0.67", "-94.5973, 107.276, 32.9999, 0.33", "-97.0024, 109.187, 33.226, 0.33", "-97.6577, 109.645, 33.243, 0.67", "-102.0, 112.186, 33.2271, 0.33", "-103.998, 113.167, 33.1024, 1.33", "-107.136, 114.369, 32.5056, 0.33", "-109.401, 114.983, 31.9923, 0.67", "-112.112, 115.578, 31.2914, 0.33", "-114.368, 115.91, 30.6175, 1.33", "-119.585, 116.496, 28.861, 0.33", "-119.915, 116.531, 28.7347, 0.67", "-120.928, 116.613, 28.3283, 0.33", "-121.693, 116.711, 28.0611, 0.67", "-125.842, 117.537, 26.7131, 0.33", "-126.906, 117.795, 26.3808, 1.33", "-128.943, 118.534, 26.2179, 0.33", "-129.281, 118.665, 26.195, 0.67", "-131.362, 119.57, 26.1124, 0.33", "-132.97, 120.396, 26.1713, 1.33", "-135.651, 122.488, 26.9652, 0.33", "-138.633, 124.816, 27.9514, 0.67", "-147.244, 130.943, 30.2086, 0.67", "-155.205, 138.167, 30.8491, 0.67", "-162.094, 146.391, 30.6369, 0.67", "-170.145, 153.292, 28.7329, 0.67" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-62.6218, 59.8318, 19.8664, 0.67", "-63.2584, 61.1062, 20.05, 0.67", "-64.5515, 63.0911, 20.6236, 0.67", "-66.1488, 65.1449, 21.357, 0.67", "-68.9513, 68.1924, 22.5463, 0.67", "-70.2437, 69.4535, 23.049, 0.67", "-72.2062, 71.1028, 23.8877, 0.67", "-75.0173, 73.2214, 25.2401, 1.33", "-76.1177, 73.9639, 25.8005, 0.67", "-77.2989, 74.7794, 26.504, 0.67", "-78.5726, 75.6719, 27.328, 0.67", "-80.9217, 77.6429, 29.1808, 0.67", "-82.9061, 79.4352, 30.8932, 0.67", "-83.4863, 80.0542, 31.443, 0.67", "-84.449, 81.151, 32.447, 0.67", "-84.9933, 81.797, 33.0461, 0.67", "-86.6809, 83.7059, 34.7833, 0.33", "-87.0685, 84.0925, 35.0602, 1.33", "-88.0089, 84.6043, 35.4955, 0.67", "-89.0357, 85.0703, 35.7936, 0.33", "-89.6376, 85.3062, 35.8379, 0.33", "-91.6289, 85.9599, 36.0823, 0.67", "-92.594, 86.2956, 36.1533, 0.33", "-94.1846, 86.9, 36.4153, 0.33", "-95.2182, 87.3358, 36.7176, 0.67", "-95.9465, 87.6262, 37.0289, 0.67", "-98.3436, 88.6438, 38.3713, 0.33", "-98.8132, 88.8343, 38.7152, 1.33", "-102.81, 92.1742, 41.9298, 1.33", "-107.272, 94.7718, 45.2557, 1.33", "-111.616, 97.2116, 48.8511, 1.33", "-115.848, 99.162, 52.8688, 1.33", "-119.888, 102.002, 56.5047, 1.33", "-124.99, 104.489, 58.8728, 1.33" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-6.73768, -21.0234, 13.7597, 1.33", "-9.14874, -25.1407, 15.4788, 1.33", "-12.1336, -30.1919, 17.0926, 0.67", "-13.8249, -32.7178, 17.7017, 0.67", "-16.3081, -37.0234, 18.8638, 0.67", "-17.5089, -39.2296, 19.4512, 0.67", "-21.1122, -46.1889, 21.1822, 0.67", "-22.0896, -48.0028, 21.5512, 0.67", "-24.3316, -52.8241, 22.0938, 0.67", "-26.8988, -60.0556, 22.8377, 0.67", "-27.5672, -62.4898, 23.0598, 0.67", "-28.1091, -64.7931, 23.3218, 0.67", "-28.5765, -67.2518, 23.6541, 0.67", "-28.821, -70.4409, 23.9291, 0.67", "-28.5082, -74.7523, 23.9815, 0.33", "-28.3222, -75.6244, 23.8985, 0.67", "-27.494, -77.5756, 23.7755, 0.33", "-27.0944, -78.3379, 23.6663, 0.67", "-26.3891, -79.5413, 23.4122, 0.33", "-25.8894, -80.6483, 23.0697, 0.67", "-24.8694, -83.5911, 21.654, 0.33", "-24.6937, -84.1678, 21.3747, 1.33", "-23.431, -89.3276, 18.8648, 0.33", "-23.3465, -89.7697, 18.6496, 0.67", "-22.6342, -95.2892, 15.8629, 0.33", "-22.3206, -99.489, 13.5897, 0.67", "-22.9626, -108.805, 12.6349, 0.67", "-22.8525, -118.196, 12.1896, 0.67", "-22.9501, -127.536, 11.1709, 0.67", "-21.9825, -136.549, 8.61619, 0.67", "-22.5143, -145.306, 5.26293, 0.67", "-22.6602, -153.208, 0.13779, 0.67", "-23.6605, -161.497, -4.16969, 0.67", "-25.8212, -169.966, -7.55513, 0.67", "-27.3007, -178.997, -9.57801, 0.67", "-29.7129, -188.034, -10.0538, 0.67", "-31.1449, -197.191, -11.446, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-6.73768, -21.0234, 13.7597, 0.67", "-8.58146, -22.4775, 12.3533, 0.67", "-10.1573, -23.7006, 11.3354, 0.67", "-12.3803, -25.7149, 9.69164, 0.67", "-15.0891, -28.6695, 7.41205, 0.67", "-15.6822, -29.3401, 6.83847, 0.33", "-16.3848, -30.1535, 6.071, 0.67", "-18.6927, -33.0167, 3.4147, 0.67", "-20.8506, -36.0303, 0.818426, 1.33", "-22.5346, -38.5809, -1.02491, 0.67", "-24.2909, -41.0862, -2.64593, 0.67", "-25.5081, -42.7205, -3.62901, 0.67", "-27.5502, -45.3949, -5.08081, 1.33", "-28.4407, -46.6963, -5.64295, 0.67", "-31.1988, -50.4925, -6.77511, 0.67", "-31.861, -51.433, -6.9829, 0.33", "-32.0683, -51.7792, -7.05202, 0.67", "-32.2934, -52.2223, -7.19219, 0.33", "-32.9621, -53.8349, -8.02254, 0.67", "-33.5181, -55.8529, -9.14711, 0.33", "-33.6331, -56.6888, -9.65567, 0.33", "-33.8739, -58.088, -10.5708, 0.67", "-34.1752, -59.1833, -11.2358, 1.33", "-34.8051, -60.7176, -12.0832, 0.33", "-34.9239, -60.9266, -12.1799, 0.67", "-35.3672, -61.5304, -12.4924, 0.33", "-36.6752, -62.9672, -13.4979, 0.67", "-37.6814, -63.8753, -14.4694, 0.67", "-38.2405, -64.2907, -15.0727, 0.33", "-38.5857, -64.5347, -15.4784, 0.67", "-40.416, -65.8887, -17.6753, 0.33", "-41.2526, -66.4811, -18.629, 0.67", "-42.8217, -67.5642, -20.3363, 0.33", "-43.2916, -67.8792, -20.8419, 0.67", "-43.9684, -68.3585, -21.5715, 0.67", "-45.6039, -69.5294, -23.242, 0.33", "-46.2823, -70.0569, -23.8752, 0.67", "-47.3658, -70.86, -24.9556, 0.33", "-48.8289, -71.8951, -26.3952, 0.67", "-49.9644, -72.6497, -27.5471, 0.33", "-50.2314, -72.7981, -27.8279, 0.67", "-51.025, -73.1712, -28.6023, 0.33", "-53.125, -74.1373, -30.4984, 0.33", "-53.3216, -74.2169, -30.6481, 0.67", "-54.448, -74.5692, -31.263, 0.33", "-56.0733, -74.9663, -31.9469, 0.67", "-57.8181, -75.3464, -32.569, 1.33", "-59.1518, -75.572, -32.9874, 0.33", "-59.5105, -75.6412, -33.0569, 0.67", "-61.0442, -75.9329, -33.3767, 0.33", "-62.5078, -76.206, -33.724, 0.67", "-63.4013, -76.3572, -33.9424, 0.33", "-64.4551, -76.446, -34.4852, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "109.836, -170.902, -108.343, 0.33", "116.141, -173.532, -108.256, 0.33", "117.238, -173.965, -108.18, 1.33", "123.773, -176.812, -107.507, 0.33", "125.25, -177.493, -107.329, 0.67", "127.814, -178.751, -106.995, 0.33", "131.088, -180.426, -106.547, 2.0", "135.638, -183.027, -105.96, 0.33", "139.647, -185.648, -105.493, 0.33", "140.633, -186.404, -105.392, 1.33", "142.387, -187.885, -105.218, 0.33", "143.307, -188.702, -105.125, 1.33", "147.611, -192.727, -104.722, 0.33", "148.994, -194.023, -104.742, 0.67", "150.946, -195.782, -104.634, 0.33", "151.571, -196.387, -104.546, 0.67", "153.198, -198.053, -104.18, 0.33", "153.786, -198.68, -104.0, 0.67", "155.506, -200.54, -103.299, 0.33", "157.762, -203.122, -102.433, 0.67", "160.855, -206.895, -101.206, 0.33", "161.949, -208.219, -100.801, 0.67", "163.794, -210.491, -100.177, 0.33", "164.141, -210.913, -100.082, 0.67", "165.48, -212.521, -99.7733, 0.33", "165.734, -212.82, -99.7316, 0.67", "168.324, -215.814, -99.202, 0.33", "169.014, -216.676, -99.0479, 1.33", "171.852, -220.402, -98.4967, 0.33", "172.972, -221.768, -98.3244, 1.33", "175.003, -224.046, -98.0589, 0.33", "175.391, -224.441, -98.0162, 0.67", "177.266, -226.128, -97.9567, 0.33", "178.756, -227.275, -97.7116, 0.67", "182.585, -229.949, -96.7811, 0.33", "183.224, -230.383, -96.5971, 1.33", "186.324, -232.506, -95.3476, 0.33", "188.463, -233.976, -94.3199, 1.33", "195.372, -238.816, -90.6183, 0.33", "197.826, -240.652, -89.1661, 0.33", "198.48, -241.178, -88.7352, 1.33", "202.203, -244.299, -86.1307, 0.33", "202.768, -244.807, -85.6947, 0.67", "205.996, -247.827, -83.0912, 0.33", "206.598, -248.368, -82.7787, 1.33" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "109.836, -170.902, -108.343, 0.33", "112.434, -173.786, -114.707, 0.33", "112.788, -174.2, -115.488, 0.67", "113.19, -174.691, -116.334, 0.33", "113.417, -174.99, -116.8, 0.67", "116.084, -178.902, -122.868, 0.33", "116.378, -179.34, -123.515, 0.67", "117.151, -180.439, -124.831, 0.33", "117.249, -180.59, -125.027, 1.33", "117.704, -181.348, -126.045, 0.33", "118.638, -183.258, -128.581, 1.33", "119.211, -184.588, -130.321, 0.33", "119.381, -184.913, -130.78, 0.67", "121.783, -188.202, -136.418, 0.33", "121.897, -188.32, -136.652, 1.33", "124.206, -190.137, -140.691, 0.33", "125.097, -190.65, -142.064, 0.33", "125.706, -190.913, -142.928, 0.67", "128.894, -191.751, -146.923, 0.33", "129.891, -191.892, -147.969, 1.33", "131.145, -192.062, -149.268, 0.33", "133.352, -192.223, -151.438, 0.67", "134.981, -192.452, -153.176, 0.33", "137.332, -192.898, -155.785, 0.67", "138.588, -193.299, -157.057, 0.33", "138.916, -193.43, -157.449, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.47969, -39.8801, -0.801337, 1.33", "-6.60302, -45.6782, -3.15168, 1.33", "-4.57623, -50.0095, -5.01073, 1.33", "-3.00543, -53.1201, -6.9945, 0.67", "-1.97866, -55.1828, -8.49451, 0.67", "-1.41456, -56.5146, -9.46108, 1.33", "0.0270988, -60.4941, -12.1781, 0.67", "0.363651, -61.9513, -13.0788, 1.33", "1.27881, -67.4031, -16.5141, 0.67", "1.45176, -68.8474, -17.4405, 0.67", "1.80982, -72.0305, -19.2186, 1.33", "2.06905, -74.3349, -20.1721, 0.33", "2.34369, -76.4119, -20.6335, 0.33", "2.85789, -80.3185, -21.4522, 1.33", "3.39175, -85.0084, -22.2306, 0.67", "3.70431, -87.8117, -22.7993, 0.33", "3.90645, -90.1219, -23.4863, 1.33", "4.16396, -93.9099, -24.9898, 0.67", "4.26482, -99.2631, -27.3436, 0.67", "4.23584, -102.707, -28.9688, 1.33", "4.11308, -108.138, -31.395, 0.67", "3.83033, -113.225, -33.6839, 1.33", "3.47944, -117.675, -35.6782, 0.33", "3.18319, -121.041, -37.1432, 1.33", "3.06751, -123.923, -38.1967, 0.33", "3.12503, -125.845, -38.8737, 0.67", "3.34997, -127.702, -39.3409, 0.33", "3.54463, -128.76, -39.4563, 0.33", "3.87051, -130.548, -39.5802, 1.33", "4.44614, -133.689, -39.9148, 0.33", "4.74844, -135.587, -40.0189, 0.67", "5.17886, -139.688, -40.0928, 0.33", "5.24404, -141.09, -40.0378, 0.67", "5.26006, -144.826, -39.6968, 0.33", "5.20806, -146.243, -39.4897, 1.33", "4.79583, -151.105, -38.4972, 0.33", "4.662, -152.293, -38.2244, 0.67", "4.42759, -153.948, -37.8628, 0.33", "4.26823, -154.935, -37.6909, 0.67", "3.72676, -157.657, -37.312, 0.33", "3.31334, -159.333, -37.1783, 1.33", "1.78759, -164.556, -37.3275, 0.33", "1.06085, -166.859, -37.4997, 0.67", "-0.41111, -171.089, -38.2641, 0.33", "-0.870696, -172.19, -38.5597, 0.67", "-2.02887, -174.557, -39.5787, 0.33", "-3.48005, -177.402, -41.1955, 0.67", "-4.53036, -179.368, -42.6909, 0.67", "-6.38547, -182.907, -45.7268, 0.33", "-7.05032, -184.316, -46.9846, 0.67", "-8.64516, -187.98, -50.2646, 0.33", "-9.23376, -189.418, -51.5361, 1.33", "-11.0034, -193.833, -55.2892, 0.33", "-11.0895, -194.079, -55.5012, 0.67", "-11.6804, -195.935, -56.9733, 0.33", "-12.7311, -199.73, -60.0385, 1.33" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-9.47969, -39.8801, -0.801337, 0.67", "-9.51464, -45.8396, -3.62785, 0.67", "-9.7678, -46.7666, -3.95723, 0.33", "-10.5322, -48.2805, -4.3021, 0.67", "-12.9771, -52.2319, -4.82027, 0.67", "-13.8566, -53.5739, -4.93671, 0.33", "-14.9708, -55.1911, -4.92842, 0.67", "-18.21, -59.5465, -4.31131, 0.67", "-20.4125, -62.2296, -3.87237, 0.33", "-22.2702, -64.2524, -3.48706, 0.33", "-22.9868, -64.8926, -3.3453, 0.67", "-25.552, -66.9633, -2.74482, 0.33" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "147.883, 30.1128, 103.625, 0.67", "155.139, 31.4492, 106.077, 0.67", "162.608, 32.0096, 108.152, 0.67", "169.641, 31.7322, 111.414, 0.67", "175.861, 31.5833, 116.039, 0.67", "182.904, 31.7214, 119.302, 0.67", "189.354, 33.0107, 123.441, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "147.883, 30.1128, 103.625, 0.67", "155.419, 32.5673, 106.361, 0.67", "162.632, 34.7439, 110.037, 0.67", "170.409, 36.4006, 112.685, 0.67", "178.208, 38.7945, 114.622, 0.67", "185.349, 42.4655, 117.021, 0.67", "192.722, 46.2693, 118.192, 0.67", "200.082, 50.2568, 117.928, 0.67", "207.25, 54.5798, 117.851, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "303.359, -41.8805, 116.821, 0.67", "314.255, -38.7915, 120.245, 0.67", "324.618, -36.4507, 125.482, 0.67", "334.335, -33.2206, 131.41, 0.67", "343.748, -31.4157, 138.382, 0.67", "352.637, -27.1037, 144.857, 0.67", "360.776, -20.939, 150.702, 0.67", "369.499, -16.3441, 157.197, 0.67", "376.612, -12.1462, 165.65, 0.67", "384.165, -6.61963, 172.813, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "303.359, -41.8805, 116.821, 0.67", "313.584, -44.695, 118.873, 0.67", "322.87, -48.6004, 122.726, 0.67", "330.901, -52.3156, 128.884, 0.67", "337.755, -55.6618, 136.501, 0.67", "343.544, -59.8124, 144.563, 0.67", "350.014, -65.9833, 150.482, 0.67", "356.756, -71.0133, 157.173, 0.67", "362.488, -75.8164, 164.891, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-22.7907, 48.3168, 10.8396, 0.67", "-24.8988, 50.3242, 11.9753, 0.67", "-28.2378, 53.6051, 13.9368, 0.67", "-29.8007, 55.1278, 14.9963, 0.67", "-33.126, 58.6132, 17.3876, 0.67", "-34.1446, 59.7769, 18.2203, 0.67", "-36.06, 61.9405, 19.6621, 0.67", "-37.9897, 64.3505, 21.2395, 0.67", "-39.614, 66.403, 22.8221, 0.67", "-40.8869, 67.9749, 24.1339, 0.67", "-45.0881, 72.9591, 28.4016, 0.67", "-47.6657, 75.7387, 30.6696, 0.67", "-49.0861, 77.246, 31.7497, 0.67", "-51.9739, 80.0973, 33.7529, 0.67", "-53.4439, 81.2974, 34.5894, 0.67", "-56.8288, 83.4795, 36.4634, 0.67", "-59.5099, 84.7284, 37.8334, 0.67", "-60.5275, 85.1078, 38.3682, 0.67", "-64.3816, 86.1721, 40.1862, 0.67", "-67.6041, 86.9473, 41.6008, 0.67", "-71.8394, 87.7674, 43.6271, 0.67", "-74.3414, 88.1206, 44.9326, 0.67", "-76.0946, 88.3113, 45.7929, 0.67", "-78.1213, 88.5555, 46.7124, 0.67", "-80.9207, 89.0875, 47.8233, 0.67", "-84.8513, 90.2026, 49.1554, 0.67", "-86.8966, 91.0175, 49.7728, 0.67", "-89.2014, 92.2435, 50.4592, 0.67", "-90.0285, 92.7437, 50.6877, 0.67", "-91.8935, 94.026, 51.4151, 0.67", "-93.9471, 95.4781, 52.2639, 0.67", "-96.7218, 97.599, 53.4849, 0.67", "-101.526, 101.468, 55.683, 0.67", "-104.284, 103.642, 57.0056, 0.67", "-109.193, 107.329, 59.4409, 0.67", "-115.231, 110.857, 61.3053, 0.67" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-22.7907, 48.3168, 10.8396, 0.67", "-25.2291, 51.7146, 10.6066, 0.67", "-31.0088, 59.7548, 9.88106, 0.67", "-32.2065, 61.3289, 9.72104, 0.67", "-33.7476, 63.3988, 9.50545, 0.67", "-38.4754, 69.922, 8.83687, 0.67", "-39.5499, 71.3511, 8.63779, 0.67", "-41.0149, 73.1939, 8.26377, 0.67", "-43.0429, 75.2156, 7.69203, 0.67", "-46.1313, 77.882, 6.86875, 0.67", "-47.7293, 78.9552, 6.53299, 0.67", "-51.623, 80.7729, 5.92274, 0.67", "-53.5866, 81.3925, 5.58968, 1.33", "-55.6581, 81.8158, 5.25726, 0.33", "-57.6691, 82.1348, 4.8409, 0.67", "-60.1844, 82.451, 4.28374, 0.33", "-62.7009, 82.8885, 3.74778, 1.33", "-65.4621, 83.6469, 3.2097, 0.33", "-66.6576, 84.0893, 2.93443, 1.33", "-69.9828, 85.7534, 2.07476, 0.33", "-71.2137, 86.533, 1.7561, 1.33", "-72.5819, 87.5881, 1.44146, 0.33", "-73.1272, 88.0589, 1.33446, 0.67", "-74.7356, 89.5283, 1.04733, 0.33", "-75.8108, 90.5758, 0.843864, 0.67", "-76.7351, 91.4909, 0.705626, 0.33", "-77.1365, 91.8815, 0.613207, 0.67", "-79.9713, 94.5076, -0.303562, 0.33", "-80.3859, 94.8686, -0.459966, 0.67", "-81.9202, 96.0713, -1.1517, 0.33", "-82.5432, 96.4989, -1.43466, 0.67" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "8.56389, 16.5456, 6.0563, 0.67", "9.39401, 18.2602, 4.41155, 0.67", "14.6267, 26.1458, -2.55871, 0.67", "18.9669, 32.5172, -7.70429, 0.67", "19.9228, 33.9205, -8.74596, 0.67", "21.3872, 36.0928, -10.2317, 0.67", "22.9212, 38.3601, -11.6573, 1.33", "26.8795, 43.9791, -14.5249, 0.67", "28.9325, 46.5374, -15.3827, 0.67", "30.1089, 48.1716, -15.8044, 1.33", "31.1795, 49.8679, -16.2035, 0.33", "32.8582, 52.8203, -16.847, 1.33", "34.1636, 55.3576, -17.3724, 0.33", "34.7419, 56.4818, -17.5993, 0.67", "35.5594, 57.8566, -17.9317, 0.33", "37.5363, 60.8525, -18.8045, 0.67", "39.3589, 63.5984, -19.8889, 0.33", "40.8735, 65.8364, -21.1373, 1.33", "42.8735, 68.6085, -23.1013, 0.33", "44.2259, 70.245, -24.5361, 1.33", "45.8364, 71.9191, -26.328, 0.33", "48.5419, 74.0987, -29.3491, 1.33", "50.9221, 75.5914, -32.1565, 0.33", "52.14, 76.1342, -33.5176, 1.33", "54.1683, 76.8061, -35.666, 0.33", "55.1325, 77.1074, -36.5186, 0.67", "56.9821, 77.694, -37.8039, 0.33", "58.3819, 78.2376, -38.5508, 1.33", "61.3807, 79.8312, -40.1195, 0.33", "62.2624, 80.4356, -40.6224, 0.67", "65.1086, 82.7199, -42.1255, 0.33", "65.7707, 83.2941, -42.4412, 0.67", "68.9841, 86.3119, -43.825, 0.33", "70.6934, 88.1733, -44.8147, 0.67", "72.3096, 90.1527, -45.9863, 0.33", "74.1292, 92.2628, -47.5084, 0.67", "76.1495, 94.4949, -49.3753, 0.33", "76.8925, 95.1352, -50.0503, 0.67", "81.2773, 98.3097, -54.5754, 0.33", "82.0495, 98.8265, -55.4032, 1.33", "85.2695, 100.988, -59.3831, 0.33", "85.6704, 101.261, -59.9448, 1.33", "88.7189, 103.016, -64.3244, 0.33", "91.137, 104.036, -67.3443, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.56389, 16.5456, 6.0563, 1.33", "10.3362, 20.1525, 5.20186, 1.33", "12.2934, 24.1359, 4.25823, 1.33", "14.693, 29.0194, 3.10138, 1.33", "15.466, 30.5927, 2.7287, 0.67", "16.6909, 33.0855, 2.13817, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-170.145, 153.292, 28.7329, 0.67", "-177.292, 161.947, 29.5749, 0.67", "-182.338, 171.71, 31.7494, 0.67", "-186.204, 182.062, 33.4229, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-170.145, 153.292, 28.7329, 0.67", "-179.806, 158.852, 29.4551, 0.67", "-189.647, 164.154, 29.5401, 0.67", "-199.151, 170.007, 29.7892, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-124.99, 104.489, 58.8728, 0.67", "-132.824, 111.013, 64.0032, 0.67", "-139.587, 119.06, 68.3293, 0.67", "-145.622, 127.795, 72.3222, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-124.99, 104.489, 58.8728, 1.33", "-132.321, 109.036, 63.3367, 0.67", "-139.49, 114.918, 66.1249, 0.67", "-145.728, 121.81, 68.7114, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-31.1449, -197.191, -11.446, 0.67", "-35.0363, -205.301, -12.7097, 0.67", "-37.3863, -213.557, -15.7401, 0.67", "-38.8998, -222.176, -18.2638, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-31.1449, -197.191, -11.446, 0.67", "-27.6608, -202.898, -10.5717, 0.67", "-24.2125, -208.535, -9.21279, 0.67", "-19.8953, -213.486, -7.57983, 0.67", "-14.8892, -217.583, -5.54115, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-12.7311, -199.73, -60.0385, 0.67", "-13.9599, -202.312, -59.7963, 0.67", "-14.597, -203.758, -59.6737, 0.33", "-15.2917, -205.538, -59.18, 1.33", "-16.0585, -207.434, -58.5257, 0.33", "-16.871, -209.534, -57.782, 0.33", "-18.0018, -212.544, -56.5341, 0.33", "-18.4083, -213.82, -55.9237, 1.33", "-19.7803, -219.333, -53.2332, 0.33", "-20.0181, -220.641, -52.6065, 1.33", "-20.3865, -223.523, -51.166, 0.33", "-20.5936, -226.279, -49.7987, 0.67", "-20.5726, -228.781, -48.6166, 0.33", "-20.4716, -230.34, -48.0297, 0.67", "-20.342, -231.626, -47.8191, 0.33", "-20.2172, -232.495, -47.7067, 0.67", "-19.8996, -234.587, -47.6007, 0.33", "-19.825, -235.239, -47.6596, 1.33", "-19.8375, -237.581, -47.9485, 0.33", "-20.1562, -240.268, -48.3736, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-12.7311, -199.73, -60.0385, 0.33", "-13.781, -199.949, -60.7014, 0.33", "-14.1626, -200.014, -60.9111, 0.67", "-15.7609, -199.975, -60.8161, 0.33", "-17.0886, -199.91, -60.7558, 0.67", "-19.8979, -199.65, -60.6787, 0.33", "-21.7533, -199.387, -60.5067, 0.33", "-22.7066, -199.23, -60.376, 0.67", "-29.6446, -197.992, -59.0673, 0.33", "-32.5593, -197.359, -58.2637, 0.67", "-34.0896, -196.917, -57.6907, 0.33", "-36.5346, -196.057, -56.4697, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-115.231, 110.857, 61.3053, 0.67", "-119.526, 114.129, 64.3062, 0.67", "-123.676, 116.947, 67.937, 0.67", "-127.009, 120.019, 72.1537, 0.67" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-115.231, 110.857, 61.3053, 0.67", "-125.835, 116.41, 64.0572, 0.67", "-137.088, 121.072, 65.7738, 0.67", "-148.739, 124.416, 68.0256, 0.67" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "16.6909, 33.0855, 2.13817, 0.67", "17.8514, 36.8122, 2.30342, 0.67", "19.0973, 40.702, 2.31549, 0.33", "19.6222, 42.1527, 2.29884, 0.67", "22.7994, 50.478, 1.66332, 0.67", "23.9709, 53.3716, 1.3265, 0.67", "25.4866, 56.9465, 0.820866, 0.67", "25.8745, 57.8324, 0.676844, 0.33", "27.0623, 59.9965, 0.232888, 1.33", "28.9343, 63.1085, -0.659911, 0.33", "29.6945, 64.2644, -1.28759, 0.67", "30.5335, 65.4867, -1.99178, 0.33", "30.815, 65.9423, -2.2835, 0.67", "31.539, 67.2424, -3.24367, 0.33", "32.12, 68.3604, -4.09859, 0.67", "33.5481, 71.0591, -6.03838, 0.33", "34.6008, 73.1195, -7.46498, 1.33", "36.7358, 77.3221, -10.2903, 0.33", "37.113, 78.071, -10.7604, 1.33", "38.2254, 80.3585, -12.0665, 0.33", "39.1376, 82.284, -12.9587, 0.67", "39.8622, 83.9099, -13.3952, 0.33", "40.0116, 84.3008, -13.4407, 0.67", "40.371, 85.483, -13.3683, 0.33", "40.4566, 86.0788, -13.3843, 0.67", "40.4784, 87.6097, -13.502, 0.33", "40.337, 90.0553, -13.7645, 1.33", "40.0818, 92.7377, -14.1058, 0.33", "39.824, 94.7241, -14.3678, 0.67", "39.0175, 100.173, -15.1285, 0.33", "38.8314, 101.225, -15.2702, 0.67", "38.5617, 102.43, -15.4415, 0.33", "38.4216, 103.0, -15.5365, 0.67", "38.0295, 104.431, -15.7865, 0.33", "37.6906, 105.672, -15.9417, 0.67", "37.1135, 107.702, -15.6748, 0.33", "36.61, 109.398, -15.4789, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "16.6909, 33.0855, 2.13817, 0.67", "20.2498, 36.7229, 2.71075, 0.67", "22.6136, 39.4113, 3.38206, 0.67", "25.7015, 42.9232, 4.259, 0.67", "26.9062, 44.2933, 4.60113, 0.33", "29.4486, 47.1848, 5.32315, 1.33", "31.806, 49.8657, 5.99261, 0.67", "33.8381, 52.5609, 6.90402, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "33.8381, 52.5609, 6.90402, 0.67", "37.6621, 56.1295, 10.433, 0.67", "39.1439, 57.549, 11.7525, 0.67", "39.9185, 58.2595, 12.4333, 0.67", "43.4037, 61.3831, 15.4503, 0.67", "46.0536, 63.734, 17.6609, 0.67", "47.9668, 65.4804, 19.2167, 0.33", "50.361, 67.6372, 21.0174, 0.67", "51.4072, 68.6079, 21.8457, 0.33", "53.2372, 70.3161, 23.216, 0.67", "54.1732, 71.2397, 23.9685, 0.67", "55.3371, 72.3348, 24.8436, 0.33", "57.253, 74.1353, 26.2834, 0.67", "58.5189, 75.2524, 27.2634, 0.33", "59.8303, 76.4366, 28.2848, 0.67", "62.8589, 79.025, 30.7096, 0.33", "64.4613, 80.301, 32.0382, 0.67", "67.6157, 82.5353, 34.5951, 0.67", "72.4358, 87.2361, 40.7624, 0.67", "76.0511, 93.183, 46.6083, 0.67", "80.7857, 98.739, 52.052, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "33.8381, 52.5609, 6.90402, 0.67", "31.7506, 60.0928, 8.50793, 0.67", "31.5065, 61.5509, 8.84141, 0.67", "31.3604, 63.4675, 9.2996, 0.33", "31.4454, 64.4369, 9.57269, 0.67", "32.1448, 67.0883, 10.4169, 0.33", "32.3364, 67.8147, 10.6481, 0.67", "34.135, 70.2516, 11.7431, 0.33", "35.0184, 71.2644, 12.2617, 0.33", "37.3304, 73.3536, 13.4278, 0.67", "38.9387, 74.5385, 14.0606, 0.33", "40.3031, 82.6048, 15.9371, 0.33", "43.0076, 90.5185, 16.7485, 0.33", "47.3731, 97.4493, 18.8186, 0.33", "51.4453, 104.719, 20.1155, 0.33", "55.0737, 112.303, 20.5726, 0.33", "57.972, 120.188, 20.7739, 0.33", "62.5895, 127.174, 19.6702, 0.33", "67.0918, 134.292, 20.2412, 0.33", "70.9387, 141.784, 20.339, 0.33", "73.8721, 149.626, 19.5901, 0.33", "78.0882, 156.927, 19.7433, 0.33", "83.5881, 163.163, 21.3944, 0.33", "89.7942, 168.891, 22.322, 0.33", "95.8872, 174.349, 24.6478, 0.33", "103.229, 178.566, 25.7702, 0.33", "110.868, 182.378, 26.2517, 0.33", "117.997, 187.009, 26.963, 0.33", "124.856, 191.397, 29.5255, 0.33", "132.084, 194.021, 33.3142, 0.33", "140.407, 195.038, 35.171, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_31", "dend_22", "dend_21", "dend_14", "dend_13", "dend_0", "dend_46", "dend_39", "dend_33", "dend_32", "dend_28", "dend_23", "dend_18", "dend_15", "dend_8", "dend_1", "dend_43", "dend_40", "dend_35", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_20", "dend_19", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_2", "dend_45", "dend_44", "dend_42", "dend_41", "dend_37", "dend_36", "dend_27", "dend_26", "dend_12", "dend_11", "dend_6", "dend_3", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_31", "dend_22", "dend_21", "dend_14", "dend_13", "dend_0", "dend_46", "dend_39", "dend_33", "dend_32", "dend_28", "dend_23", "dend_18", "dend_15", "dend_8", "dend_1", "dend_43", "dend_40", "dend_35", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_20", "dend_19", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_2", "dend_45", "dend_44", "dend_42", "dend_41", "dend_37", "dend_36", "dend_27", "dend_26", "dend_12", "dend_11", "dend_6", "dend_3", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_31", "dend_22", "dend_21", "dend_14", "dend_13", "dend_0", "axon_0", "dend_46", "dend_39", "dend_33", "dend_32", "dend_28", "dend_23", "dend_18", "dend_15", "dend_8", "dend_1", "axon_1", "dend_43", "dend_40", "dend_35", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_20", "dend_19", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_2", "dend_45", "dend_44", "dend_42", "dend_41", "dend_37", "dend_36", "dend_27", "dend_26", "dend_12", "dend_11", "dend_6", "dend_3", "dend_5", "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_31", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_NBC_70775a2036_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_22
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_31, dend_22, dend_21, dend_14, dend_13, dend_0, dend_46, dend_39, dend_33, dend_32, dend_28, dend_23, dend_18, dend_15, dend_8, dend_1, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_25, dend_24, dend_20, dend_19, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_45, dend_44, dend_42, dend_41, dend_37, dend_36, dend_27, dend_26, dend_12, dend_11, dend_6, dend_3, dend_5, dend_4]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_31, dend_22, dend_21, dend_14, dend_13, dend_0, dend_46, dend_39, dend_33, dend_32, dend_28, dend_23, dend_18, dend_15, dend_8, dend_1, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_25, dend_24, dend_20, dend_19, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_45, dend_44, dend_42, dend_41, dend_37, dend_36, dend_27, dend_26, dend_12, dend_11, dend_6, dend_3, dend_5, dend_4]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_31, dend_22, dend_21, dend_14, dend_13, dend_0, axon_0, dend_46, dend_39, dend_33, dend_32, dend_28, dend_23, dend_18, dend_15, dend_8, dend_1, axon_1, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_25, dend_24, dend_20, dend_19, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_45, dend_44, dend_42, dend_41, dend_37, dend_36, dend_27, dend_26, dend_12, dend_11, dend_6, dend_3, dend_5, dend_4]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_31, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.4999982464829099)
    connect dend_31(0), soma_0(0.4999982464829099)
    connect dend_22(0), soma_0(0.4999982464829099)
    connect dend_21(0), soma_0(0.4999982464829099)
    connect dend_14(0), soma_0(0.4999982464829099)
    connect dend_13(0), soma_0(0.4999982464829099)
    connect dend_0(0), soma_0(0.4999982464829099)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.0899217, 10.7196, -0.0356444, 3.50948 ) }
    soma_0 { pt3dadd( 0.0981917, 9.65057, -0.0320434, 6.08457 ) }
    soma_0 { pt3dadd( 0.106462, 8.58151, -0.0284423, 8.34889 ) }
    soma_0 { pt3dadd( 0.114732, 7.51245, -0.0248413, 10.1103 ) }
    soma_0 { pt3dadd( 0.123002, 6.44339, -0.0212403, 11.2383 ) }
    soma_0 { pt3dadd( 0.131272, 5.37433, -0.0176392, 11.2661 ) }
    soma_0 { pt3dadd( 0.139542, 4.30528, -0.0140382, 11.244 ) }
    soma_0 { pt3dadd( 0.147812, 3.23622, -0.0104372, 11.4836 ) }
    soma_0 { pt3dadd( 0.156082, 2.16716, -0.00683612, 11.9517 ) }
    soma_0 { pt3dadd( 0.164352, 1.0981, -0.00323509, 12.4011 ) }
    soma_0 { pt3dadd( 0.172622, 0.0290375, 3.65951E-4, 12.5604 ) }
    soma_0 { pt3dadd( 0.180892, -1.04002, 0.00396699, 12.3795 ) }
    soma_0 { pt3dadd( 0.189162, -2.10908, 0.00756802, 12.1972 ) }
    soma_0 { pt3dadd( 0.197432, -3.17814, 0.0111691, 11.9032 ) }
    soma_0 { pt3dadd( 0.205702, -4.2472, 0.0147701, 11.2483 ) }
    soma_0 { pt3dadd( 0.213971, -5.31626, 0.0183711, 10.5305 ) }
    soma_0 { pt3dadd( 0.222241, -6.38532, 0.0219722, 9.81153 ) }
    soma_0 { pt3dadd( 0.230511, -7.45438, 0.0255732, 8.46221 ) }
    soma_0 { pt3dadd( 0.238781, -8.52344, 0.0291742, 6.6335 ) }
    soma_0 { pt3dadd( 0.247051, -9.5925, 0.0327753, 4.80479 ) }
    soma_0 { pt3dadd( 0.255321, -10.6616, 0.0363763, 2.85351 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -3.65193, 5.50999, 6.96795, 2.0 ) }
    dend_38 { pt3dadd( -7.44666, 5.3323, 5.30172, 2.0 ) }
    dend_38 { pt3dadd( -12.2747, 5.10623, 3.18178, 1.33 ) }
    dend_38 { pt3dadd( -15.6833, 4.94662, 1.6851, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 25/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -5.79193, -4.77626, 9.36795, 4.0 ) }
    dend_31 { pt3dadd( -6.58231, -4.9948, 9.36795, 4.0 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.568065, -9.31001, -1.56205, 2.67 ) }
    dend_22 { pt3dadd( 2.09603, -13.4519, -1.56205, 2.67 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 29/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 2.50807, -7.98401, 4.43795, 0.67 ) }
    dend_21 { pt3dadd( 4.29759, -10.7971, 9.49745, 0.67 ) }
    dend_21 { pt3dadd( 5.26682, -12.0482, 12.0637, 0.67 ) }
    dend_21 { pt3dadd( 7.23866, -14.7725, 16.9156, 0.67 ) }
    dend_21 { pt3dadd( 10.1556, -17.7357, 21.9537, 0.67 ) }
    dend_21 { pt3dadd( 13.301, -20.5367, 26.133, 0.67 ) }
    dend_21 { pt3dadd( 20.8115, -26.6666, 34.1125, 0.67 ) }
    dend_21 { pt3dadd( 22.3877, -27.792, 35.553, 0.67 ) }
    dend_21 { pt3dadd( 25.4733, -30.0901, 38.1203, 0.67 ) }
    dend_21 { pt3dadd( 31.6824, -34.8391, 41.764, 0.67 ) }
    dend_21 { pt3dadd( 35.5496, -37.3644, 43.0353, 1.33 ) }
    dend_21 { pt3dadd( 38.863, -39.5693, 43.3991, 0.67 ) }
    dend_21 { pt3dadd( 40.1901, -40.5229, 43.3352, 1.33 ) }
    dend_21 { pt3dadd( 42.1193, -41.9759, 43.2762, 0.67 ) }
    dend_21 { pt3dadd( 47.6742, -45.9939, 43.3744, 0.67 ) }
    dend_21 { pt3dadd( 49.7681, -47.5789, 43.6725, 0.67 ) }
    dend_21 { pt3dadd( 51.2755, -48.4572, 44.0256, 0.67 ) }
    dend_21 { pt3dadd( 54.2536, -50.0136, 44.8964, 0.67 ) }
    dend_21 { pt3dadd( 56.4871, -51.0073, 45.6146, 0.33 ) }
    dend_21 { pt3dadd( 60.6991, -52.5353, 47.2124, 0.67 ) }
    dend_21 { pt3dadd( 65.1568, -53.8771, 49.587, 0.33 ) }
    dend_21 { pt3dadd( 68.1439, -54.6595, 51.1071, 0.33 ) }
    dend_21 { pt3dadd( 75.6184, -61.9446, 56.7514, 0.33 ) }
    dend_21 { pt3dadd( 81.9953, -68.6577, 64.1775, 0.33 ) }
    dend_21 { pt3dadd( 88.5292, -75.5699, 71.2716, 0.33 ) }
    dend_21 { pt3dadd( 92.6841, -83.1956, 79.2998, 0.33 ) }
    dend_21 { pt3dadd( 95.352, -91.008, 87.7436, 0.33 ) }
    dend_21 { pt3dadd( 98.9103, -99.1679, 95.4978, 0.33 ) }
    dend_21 { pt3dadd( 105.165, -105.216, 103.592, 0.33 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.76807, -2.93351, 10.568, 2.0 ) }
    dend_14 { pt3dadd( 4.21851, -4.08352, 13.4924, 1.33 ) }
    dend_14 { pt3dadd( 3.68722, -5.49875, 16.7832, 1.33 ) }
    dend_14 { pt3dadd( 3.57994, -6.5687, 19.5109, 1.33 ) }
    dend_14 { pt3dadd( 3.84684, -9.4427, 26.2393, 1.33 ) }
    dend_14 { pt3dadd( 4.14575, -10.639, 29.0693, 1.33 ) }
    dend_14 { pt3dadd( 4.81726, -12.6436, 33.6135, 0.67 ) }
    dend_14 { pt3dadd( 5.52581, -14.9182, 39.2193, 1.33 ) }
    dend_14 { pt3dadd( 6.32015, -17.0075, 44.675, 1.33 ) }
    dend_14 { pt3dadd( 7.01546, -18.0736, 47.2108, 0.67 ) }
    dend_14 { pt3dadd( 7.94306, -19.0321, 49.1984, 0.67 ) }
    dend_14 { pt3dadd( 8.57083, -19.6158, 50.5323, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 70/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.96807, 6.96274, 0.437955, 1.33 ) }
    dend_13 { pt3dadd( 14.8039, 6.97592, -0.56553, 1.33 ) }
    dend_13 { pt3dadd( 21.438, 7.50732, -1.51471, 0.67 ) }
    dend_13 { pt3dadd( 25.2798, 8.00777, -2.12515, 1.33 ) }
    dend_13 { pt3dadd( 27.5006, 8.35187, -2.39217, 0.33 ) }
    dend_13 { pt3dadd( 29.4351, 8.57961, -2.76818, 0.67 ) }
    dend_13 { pt3dadd( 32.8871, 8.8174, -3.50547, 1.33 ) }
    dend_13 { pt3dadd( 35.2001, 8.91958, -4.20065, 0.67 ) }
    dend_13 { pt3dadd( 36.0757, 8.94129, -4.40145, 1.33 ) }
    dend_13 { pt3dadd( 40.7277, 8.5474, -5.72878, 0.67 ) }
    dend_13 { pt3dadd( 47.3313, 7.63628, -7.59922, 0.33 ) }
    dend_13 { pt3dadd( 49.4743, 7.18051, -8.20486, 0.67 ) }
    dend_13 { pt3dadd( 53.0322, 6.27761, -9.24936, 0.67 ) }
    dend_13 { pt3dadd( 55.962, 5.492, -10.1704, 0.67 ) }
    dend_13 { pt3dadd( 61.0081, 3.92444, -11.9021, 0.33 ) }
    dend_13 { pt3dadd( 63.1859, 3.14572, -12.7066, 1.33 ) }
    dend_13 { pt3dadd( 66.2463, 1.67398, -14.1348, 0.33 ) }
    dend_13 { pt3dadd( 68.5082, 0.366395, -15.3739, 1.33 ) }
    dend_13 { pt3dadd( 70.0457, -0.786417, -16.4067, 0.67 ) }
    dend_13 { pt3dadd( 72.7157, -3.33783, -18.448, 0.33 ) }
    dend_13 { pt3dadd( 73.3987, -4.08947, -19.019, 1.33 ) }
    dend_13 { pt3dadd( 78.1219, -10.1038, -23.4385, 0.33 ) }
    dend_13 { pt3dadd( 79.8601, -12.7579, -25.148, 0.33 ) }
    dend_13 { pt3dadd( 81.6597, -15.8013, -27.047, 1.33 ) }
    dend_13 { pt3dadd( 83.6024, -19.1415, -29.1622, 0.33 ) }
    dend_13 { pt3dadd( 83.8667, -19.5612, -29.4304, 1.33 ) }
    dend_13 { pt3dadd( 84.8793, -21.0649, -30.3591, 0.33 ) }
    dend_13 { pt3dadd( 85.4526, -21.8049, -30.7433, 1.33 ) }
    dend_13 { pt3dadd( 88.4411, -25.4347, -32.6451, 0.33 ) }
    dend_13 { pt3dadd( 89.0285, -26.0244, -32.9339, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_13 { pt3dadd( 92.3637, -28.7755, -34.2657, 0.33 ) }
    dend_13 { pt3dadd( 93.0925, -29.247, -34.4875, 0.67 ) }
    dend_13 { pt3dadd( 95.0846, -30.3105, -35.0388, 0.33 ) }
    dend_13 { pt3dadd( 96.3047, -30.9136, -35.3857, 0.67 ) }
    dend_13 { pt3dadd( 101.118, -33.2073, -36.6106, 0.33 ) }
    dend_13 { pt3dadd( 102.311, -33.7601, -36.918, 0.67 ) }
    dend_13 { pt3dadd( 106.244, -35.4904, -37.8833, 0.33 ) }
    dend_13 { pt3dadd( 108.919, -36.7092, -38.6598, 0.67 ) }
    dend_13 { pt3dadd( 114.051, -39.0899, -40.4796, 0.33 ) }
    dend_13 { pt3dadd( 114.808, -39.4468, -40.7764, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 10/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.09807, 10.4337, 6.03795, 4.0 ) }
    dend_0 { pt3dadd( 1.66254, 11.6946, 6.03795, 4.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.255321, -10.6616, 0.0363763, 0.67 ) }
    axon_0 { pt3dadd( 0.371353, -25.6612, 0.0363763, 0.67 ) }
    axon_0 { pt3dadd( 0.487386, -40.6607, 0.0363763, 0.67 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 15/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -15.6833, 4.94662, 1.6851, 0.67 ) }
    dend_46 { pt3dadd( -18.7546, 2.78835, 2.67007, 0.67 ) }
    dend_46 { pt3dadd( -23.0091, 0.684398, 3.43886, 1.33 ) }
    dend_46 { pt3dadd( -24.6451, -0.0464542, 3.65801, 0.67 ) }
    dend_46 { pt3dadd( -26.6346, -0.784787, 3.85049, 1.33 ) }
    dend_46 { pt3dadd( -31.3003, -2.29458, 4.22176, 1.33 ) }
    dend_46 { pt3dadd( -34.2463, -3.11303, 4.4174, 0.67 ) }
    dend_46 { pt3dadd( -38.5341, -4.02699, 4.85548, 0.67 ) }
    dend_46 { pt3dadd( -40.1783, -4.23829, 5.0726, 0.67 ) }
    dend_46 { pt3dadd( -46.2732, -4.82701, 6.00018, 1.33 ) }
    dend_46 { pt3dadd( -48.1046, -4.95199, 6.33057, 0.33 ) }
    dend_46 { pt3dadd( -49.7568, -4.95755, 6.62507, 0.33 ) }
    dend_46 { pt3dadd( -54.7784, -4.84694, 7.65844, 0.67 ) }
    dend_46 { pt3dadd( -56.0371, -4.85991, 7.85723, 0.67 ) }
    dend_46 { pt3dadd( -58.6887, -4.90488, 7.96028, 0.67 ) }
    dend_46 { pt3dadd( -60.5543, -5.0533, 7.74325, 1.33 ) }
    dend_46 { pt3dadd( -63.0937, -5.42059, 7.02497, 0.33 ) }
    dend_46 { pt3dadd( -65.7909, -6.00717, 6.02925, 0.67 ) }
    dend_46 { pt3dadd( -70.2386, -7.14012, 4.25939, 0.33 ) }
    dend_46 { pt3dadd( -71.0449, -7.36992, 3.98441, 1.33 ) }
    dend_46 { pt3dadd( -72.9798, -7.99053, 3.53242, 0.67 ) }
    dend_46 { pt3dadd( -76.319, -9.20862, 2.934, 0.33 ) }
    dend_46 { pt3dadd( -78.9949, -10.1833, 2.70063, 1.33 ) }
    dend_46 { pt3dadd( -82.0846, -11.218, 2.718, 0.33 ) }
    dend_46 { pt3dadd( -83.5785, -11.6315, 2.82826, 1.33 ) }
    dend_46 { pt3dadd( -86.5963, -12.385, 3.0769, 0.67 ) }
    dend_46 { pt3dadd( -91.0028, -13.3794, 3.49878, 0.67 ) }
    dend_46 { pt3dadd( -94.7957, -14.1377, 3.92635, 1.33 ) }
    dend_46 { pt3dadd( -97.6837, -14.6084, 4.1684, 0.33 ) }
    dend_46 { pt3dadd( -99.9118, -14.9443, 4.29603, 0.33 ) }
    dend_46 { pt3dadd( -100.885, -15.0892, 4.37724, 1.33 ) }
    dend_46 { pt3dadd( -104.169, -15.6027, 4.73577, 0.33 ) }
    dend_46 { pt3dadd( -105.706, -15.8488, 5.08637, 1.33 ) }
    dend_46 { pt3dadd( -109.397, -16.6025, 6.19706, 0.33 ) }
    dend_46 { pt3dadd( -111.285, -17.1057, 6.90828, 1.33 ) }
    dend_46 { pt3dadd( -114.835, -18.328, 8.49822, 0.33 ) }
    dend_46 { pt3dadd( -115.765, -18.7256, 8.97695, 0.67 ) }
    dend_46 { pt3dadd( -119.35, -20.5965, 11.1233, 0.33 ) }
    dend_46 { pt3dadd( -120.292, -21.1826, 11.7383, 0.67 ) }
    dend_46 { pt3dadd( -122.048, -22.4305, 12.9598, 0.33 ) }
    dend_46 { pt3dadd( -122.548, -22.7795, 13.3027, 0.67 ) }
    dend_46 { pt3dadd( -124.954, -24.1948, 14.6736, 0.33 ) }
    dend_46 { pt3dadd( -125.537, -24.453, 14.932, 0.67 ) }
    dend_46 { pt3dadd( -127.592, -25.0062, 15.4996, 0.33 ) }
    dend_46 { pt3dadd( -128.878, -25.2108, 15.8104, 0.33 ) }
    dend_46 { pt3dadd( -131.357, -25.4635, 16.3434, 1.33 ) }
    dend_46 { pt3dadd( -134.41, -25.6814, 16.9333, 0.33 ) }
    dend_46 { pt3dadd( -135.323, -25.7353, 17.0871, 0.67 ) }
    dend_46 { pt3dadd( -139.752, -26.0177, 17.9513, 0.33 ) }
    dend_46 { pt3dadd( -141.013, -26.1027, 18.2146, 1.33 ) }
    dend_46 { pt3dadd( -143.372, -26.3408, 18.7349, 0.33 ) }
    dend_46 { pt3dadd( -144.265, -26.4876, 18.9372, 0.67 ) }
    dend_46 { pt3dadd( -147.304, -27.1193, 19.7308, 0.33 ) }
    dend_46 { pt3dadd( -149.974, -27.7445, 20.4766, 1.33 ) }
    dend_46 { pt3dadd( -151.73, -28.2049, 21.0048, 0.33 ) }
    dend_46 { pt3dadd( -152.539, -28.4547, 21.2045, 0.67 ) }
    dend_46 { pt3dadd( -154.981, -29.2666, 21.9216, 0.33 ) }
    dend_46 { pt3dadd( -156.09, -29.6806, 22.2805, 0.67 ) }
    dend_46 { pt3dadd( -157.951, -30.4002, 22.8875, 0.33 ) }
    dend_46 { pt3dadd( -158.972, -30.7512, 23.1713, 0.67 ) }
    dend_46 { pt3dadd( -162.297, -31.7315, 24.1186, 0.33 ) }
    dend_46 { pt3dadd( -166.212, -32.3615, 25.3746, 0.67 ) }
    dend_46 { pt3dadd( -167.914, -32.4425, 25.9492, 0.33 ) }
    dend_46 { pt3dadd( -168.987, -32.4019, 26.2795, 1.33 ) }
    dend_46 { pt3dadd( -172.913, -32.0219, 27.2827, 0.33 ) }
    dend_46 { pt3dadd( -174.007, -31.8871, 27.5004, 0.67 ) }
    dend_46 { pt3dadd( -178.781, -31.2306, 27.991, 0.33 ) }
    dend_46 { pt3dadd( -180.056, -31.0934, 27.8967, 1.33 ) }
    dend_46 { pt3dadd( -184.071, -30.7486, 27.2227, 0.33 ) }
    dend_46 { pt3dadd( -185.665, -30.6651, 26.8217, 0.67 ) }
    dend_46 { pt3dadd( -189.405, -30.6108, 25.4063, 0.33 ) }
    dend_46 { pt3dadd( -192.291, -30.6329, 24.1469, 0.67 ) }
    dend_46 { pt3dadd( -196.303, -30.8207, 22.0904, 0.33 ) }
    dend_46 { pt3dadd( -197.196, -30.8825, 21.599, 0.67 ) }
    dend_46 { pt3dadd( -198.254, -30.9796, 20.9569, 0.33 ) }
    dend_46 { pt3dadd( -199.936, -31.0842, 19.9548, 0.67 ) }
    dend_46 { pt3dadd( -202.255, -31.1553, 18.3584, 0.33 ) }
    dend_46 { pt3dadd( -203.267, -31.1068, 18.0706, 0.67 ) }
    dend_46 { pt3dadd( -212.083, -33.7683, 19.444, 0.67 ) }
    dend_46 { pt3dadd( -220.935, -35.1996, 21.9937, 0.67 ) }
    dend_46 { pt3dadd( -229.802, -36.1106, 24.7389, 0.67 ) }
    dend_46 { pt3dadd( -238.298, -38.1407, 27.9716, 0.67 ) }
    dend_46 { pt3dadd( -246.28, -39.9195, 32.4302, 0.67 ) }
    dend_46 { pt3dadd( -253.824, -42.9333, 36.9407, 0.67 ) }
    dend_46 { pt3dadd( -262.289, -44.6144, 40.4542, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 0/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -15.6833, 4.94662, 1.6851, 1.33 ) }
    dend_39 { pt3dadd( -19.3483, 12.9003, 2.13917, 1.33 ) }
    dend_39 { pt3dadd( -20.8946, 15.856, 2.49152, 1.33 ) }
    dend_39 { pt3dadd( -22.9056, 18.4844, 3.38706, 0.67 ) }
    dend_39 { pt3dadd( -24.6749, 20.6983, 4.494, 0.67 ) }
    dend_39 { pt3dadd( -25.5933, 21.8054, 5.25226, 0.67 ) }
    dend_39 { pt3dadd( -27.0922, 23.519, 6.19074, 1.33 ) }
    dend_39 { pt3dadd( -31.1441, 27.8565, 8.41304, 0.67 ) }
    dend_39 { pt3dadd( -35.9586, 32.901, 10.5754, 1.33 ) }
    dend_39 { pt3dadd( -40.2688, 37.1503, 12.3599, 0.67 ) }
    dend_39 { pt3dadd( -43.7924, 40.5042, 13.6913, 1.33 ) }
    dend_39 { pt3dadd( -51.8036, 47.9373, 16.7065, 1.33 ) }
    dend_39 { pt3dadd( -54.8543, 50.8268, 17.8992, 0.67 ) }
    dend_39 { pt3dadd( -57.8686, 54.0266, 19.1045, 0.67 ) }
    dend_39 { pt3dadd( -62.6218, 59.8318, 19.8664, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 15/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.58231, -4.9948, 9.36795, 1.33 ) }
    dend_33 { pt3dadd( -6.62201, -9.0906, 10.4902, 1.33 ) }
    dend_33 { pt3dadd( -6.66635, -13.6648, 11.7435, 1.33 ) }
    dend_33 { pt3dadd( -6.73768, -21.0234, 13.7597, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 19/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -6.58231, -4.9948, 9.36795, 0.67 ) }
    dend_32 { pt3dadd( -8.91715, -3.13403, 7.22765, 0.67 ) }
    dend_32 { pt3dadd( -10.7974, -1.66461, 5.46987, 1.33 ) }
    dend_32 { pt3dadd( -13.532, 0.3209, 2.75973, 0.67 ) }
    dend_32 { pt3dadd( -15.7542, 1.88089, 0.603009, 0.67 ) }
    dend_32 { pt3dadd( -16.8959, 2.62197, -0.47156, 0.67 ) }
    dend_32 { pt3dadd( -21.4903, 5.64027, -5.0992, 0.67 ) }
    dend_32 { pt3dadd( -22.9756, 6.53208, -6.60542, 0.67 ) }
    dend_32 { pt3dadd( -24.7275, 7.514, -8.43326, 1.33 ) }
    dend_32 { pt3dadd( -26.1693, 8.2908, -9.92678, 0.67 ) }
    dend_32 { pt3dadd( -27.2035, 8.81604, -11.0628, 0.67 ) }
    dend_32 { pt3dadd( -30.2647, 10.0387, -14.2338, 0.33 ) }
    dend_32 { pt3dadd( -32.0551, 10.4145, -15.6971, 1.33 ) }
    dend_32 { pt3dadd( -33.3684, 10.6694, -16.7154, 0.33 ) }
    dend_32 { pt3dadd( -34.9956, 10.8495, -18.0307, 1.33 ) }
    dend_32 { pt3dadd( -36.4827, 10.9053, -19.3012, 0.33 ) }
    dend_32 { pt3dadd( -37.3196, 10.9418, -20.0056, 0.67 ) }
    dend_32 { pt3dadd( -39.415, 10.9232, -21.3816, 0.33 ) }
    dend_32 { pt3dadd( -41.4874, 10.8989, -22.5439, 2.0 ) }
    dend_32 { pt3dadd( -46.1876, 10.9551, -24.5274, 0.33 ) }
    dend_32 { pt3dadd( -46.7885, 10.9728, -24.6646, 0.67 ) }
    dend_32 { pt3dadd( -48.6182, 11.0862, -24.9582, 0.33 ) }
    dend_32 { pt3dadd( -54.2953, 11.6252, -24.7227, 1.33 ) }
    dend_32 { pt3dadd( -56.0867, 11.8286, -24.3052, 0.33 ) }
    dend_32 { pt3dadd( -57.653, 12.026, -23.6991, 0.67 ) }
    dend_32 { pt3dadd( -58.9857, 12.2033, -23.0758, 0.33 ) }
    dend_32 { pt3dadd( -61.2708, 12.4093, -22.5191, 0.67 ) }
    dend_32 { pt3dadd( -64.5479, 12.669, -22.4655, 0.33 ) }
    dend_32 { pt3dadd( -67.0686, 12.916, -22.8076, 0.67 ) }
    dend_32 { pt3dadd( -70.2324, 13.2586, -23.3209, 0.33 ) }
    dend_32 { pt3dadd( -71.1199, 13.3444, -23.4929, 0.67 ) }
    dend_32 { pt3dadd( -77.2936, 13.9337, -24.9638, 0.33 ) }
    dend_32 { pt3dadd( -78.9996, 14.0539, -25.4715, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_22 (entry count 52/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.09603, -13.4519, -1.56205, 1.33 ) }
    dend_28 { pt3dadd( 5.79445, -15.3667, -3.36178, 1.33 ) }
    dend_28 { pt3dadd( 7.50272, -16.4463, -4.39959, 1.33 ) }
    dend_28 { pt3dadd( 9.35532, -17.9463, -5.7002, 1.33 ) }
    dend_28 { pt3dadd( 14.2295, -22.6062, -9.29465, 1.33 ) }
    dend_28 { pt3dadd( 15.8493, -24.2094, -10.4471, 0.67 ) }
    dend_28 { pt3dadd( 25.344, -33.9749, -17.3874, 1.33 ) }
    dend_28 { pt3dadd( 27.7762, -36.5271, -19.2443, 1.33 ) }
    dend_28 { pt3dadd( 30.8875, -39.7025, -21.7447, 1.33 ) }
    dend_28 { pt3dadd( 33.0307, -41.9017, -23.5302, 0.67 ) }
    dend_28 { pt3dadd( 36.1103, -45.0627, -26.0948, 1.33 ) }
    dend_28 { pt3dadd( 42.8649, -51.0925, -30.6853, 1.33 ) }
    dend_28 { pt3dadd( 44.9826, -52.7715, -31.6959, 0.67 ) }
    dend_28 { pt3dadd( 49.0376, -55.4208, -33.5034, 0.67 ) }
    dend_28 { pt3dadd( 51.3762, -56.7981, -34.4843, 0.67 ) }
    dend_28 { pt3dadd( 53.5654, -58.1449, -35.4006, 0.67 ) }
    dend_28 { pt3dadd( 55.2811, -59.4343, -36.0808, 0.67 ) }
    dend_28 { pt3dadd( 57.4681, -61.4483, -36.828, 0.33 ) }
    dend_28 { pt3dadd( 59.6451, -63.8701, -37.6122, 1.33 ) }
    dend_28 { pt3dadd( 62.4502, -67.264, -38.5612, 0.67 ) }
    dend_28 { pt3dadd( 63.2861, -68.4174, -38.8592, 0.67 ) }
    dend_28 { pt3dadd( 65.0056, -71.0879, -39.5989, 1.33 ) }
    dend_28 { pt3dadd( 66.4794, -73.4295, -40.248, 0.67 ) }
    dend_28 { pt3dadd( 68.473, -76.4299, -41.0423, 1.33 ) }
    dend_28 { pt3dadd( 69.8548, -78.4504, -41.5581, 0.33 ) }
    dend_28 { pt3dadd( 73.1855, -82.9378, -42.7509, 0.67 ) }
    dend_28 { pt3dadd( 74.9537, -85.1608, -43.5291, 0.33 ) }
    dend_28 { pt3dadd( 76.9564, -87.4669, -44.5052, 1.33 ) }
    dend_28 { pt3dadd( 78.7769, -89.4396, -45.5648, 0.67 ) }
    dend_28 { pt3dadd( 80.7335, -91.4474, -46.8885, 0.67 ) }
    dend_28 { pt3dadd( 81.8738, -92.566, -47.7006, 0.33 ) }
    dend_28 { pt3dadd( 84.4906, -95.0391, -49.5693, 1.33 ) }
    dend_28 { pt3dadd( 86.2969, -96.9866, -50.8385, 0.33 ) }
    dend_28 { pt3dadd( 88.2839, -99.438, -52.2879, 1.33 ) }
    dend_28 { pt3dadd( 89.6732, -101.407, -53.5054, 0.33 ) }
    dend_28 { pt3dadd( 90.9557, -103.332, -54.6485, 0.67 ) }
    dend_28 { pt3dadd( 92.3147, -105.515, -55.8561, 0.33 ) }
    dend_28 { pt3dadd( 93.0812, -106.895, -56.6492, 0.33 ) }
    dend_28 { pt3dadd( 93.8595, -108.692, -57.7833, 0.67 ) }
    dend_28 { pt3dadd( 95.674, -113.228, -60.6598, 0.67 ) }
    dend_28 { pt3dadd( 96.1044, -114.401, -61.4424, 0.33 ) }
    dend_28 { pt3dadd( 96.7585, -116.186, -62.6238, 1.33 ) }
    dend_28 { pt3dadd( 98.3288, -120.879, -65.6335, 0.33 ) }
    dend_28 { pt3dadd( 98.8484, -122.796, -66.7304, 0.33 ) }
    dend_28 { pt3dadd( 99.3272, -125.458, -68.3793, 0.67 ) }
    dend_28 { pt3dadd( 99.6042, -127.884, -69.8074, 0.33 ) }
    dend_28 { pt3dadd( 99.7194, -130.936, -71.6626, 0.67 ) }
    dend_28 { pt3dadd( 99.6335, -133.918, -73.4418, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( 99.5166, -135.79, -74.5004, 1.33 ) }
    dend_28 { pt3dadd( 99.0899, -142.482, -78.5486, 0.33 ) }
    dend_28 { pt3dadd( 98.8702, -144.6, -80.0105, 0.33 ) }
    dend_28 { pt3dadd( 98.7544, -145.595, -80.8153, 1.33 ) }
    dend_28 { pt3dadd( 98.5488, -147.458, -82.4283, 0.33 ) }
    dend_28 { pt3dadd( 98.5272, -148.02, -82.9976, 0.67 ) }
    dend_28 { pt3dadd( 98.6589, -150.665, -85.8705, 0.33 ) }
    dend_28 { pt3dadd( 99.1362, -153.03, -88.3113, 1.33 ) }
    dend_28 { pt3dadd( 100.175, -156.734, -92.2491, 0.33 ) }
    dend_28 { pt3dadd( 100.629, -157.878, -93.5304, 2.0 ) }
    dend_28 { pt3dadd( 103.206, -162.831, -99.3655, 0.33 ) }
    dend_28 { pt3dadd( 103.995, -164.224, -101.025, 1.33 ) }
    dend_28 { pt3dadd( 105.675, -166.781, -104.04, 0.33 ) }
    dend_28 { pt3dadd( 106.181, -167.424, -104.738, 0.67 ) }
    dend_28 { pt3dadd( 108.924, -170.09, -107.51, 0.33 ) }
    dend_28 { pt3dadd( 109.836, -170.902, -108.343, 2.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 16/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 2.09603, -13.4519, -1.56205, 1.33 ) }
    dend_23 { pt3dadd( -0.771025, -19.9975, -1.37364, 1.33 ) }
    dend_23 { pt3dadd( -3.46688, -26.1524, -1.19648, 1.33 ) }
    dend_23 { pt3dadd( -6.16182, -32.3051, -1.01938, 1.33 ) }
    dend_23 { pt3dadd( -8.21152, -36.9848, -0.884676, 1.33 ) }
    dend_23 { pt3dadd( -9.47969, -39.8801, -0.801337, 1.33 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.57083, -19.6158, 50.5323, 0.67 ) }
    dend_18 { pt3dadd( 12.0959, -19.3483, 51.1931, 0.67 ) }
    dend_18 { pt3dadd( 14.1533, -19.0575, 51.8994, 0.33 ) }
    dend_18 { pt3dadd( 17.0016, -18.747, 52.2489, 0.67 ) }
    dend_18 { pt3dadd( 19.1048, -18.5496, 52.3175, 0.33 ) }
    dend_18 { pt3dadd( 20.7511, -18.3951, 52.3712, 0.33 ) }
    dend_18 { pt3dadd( 22.5176, -18.2293, 52.4289, 0.67 ) }
    dend_18 { pt3dadd( 26.9426, -17.4415, 52.6577, 0.33 ) }
    dend_18 { pt3dadd( 32.5013, -16.4034, 52.2761, 0.33 ) }
    dend_18 { pt3dadd( 33.8047, -16.23, 52.0316, 0.67 ) }
    dend_18 { pt3dadd( 41.6194, -15.9388, 51.4472, 0.67 ) }
    dend_18 { pt3dadd( 49.2675, -14.2797, 50.71, 0.67 ) }
    dend_18 { pt3dadd( 56.9747, -12.7436, 50.613, 0.67 ) }
    dend_18 { pt3dadd( 64.4573, -10.4094, 49.9546, 0.67 ) }
    dend_18 { pt3dadd( 71.823, -7.78002, 50.808, 0.67 ) }
    dend_18 { pt3dadd( 79.4189, -6.54555, 52.3938, 0.67 ) }
    dend_18 { pt3dadd( 86.4205, -4.06986, 54.9908, 0.67 ) }
    dend_18 { pt3dadd( 92.4239, -0.716802, 58.8099, 0.67 ) }
    dend_18 { pt3dadd( 98.4089, 1.49661, 63.4125, 0.67 ) }
    dend_18 { pt3dadd( 104.229, 4.11537, 68.0141, 0.67 ) }
    dend_18 { pt3dadd( 109.803, 7.35699, 72.5179, 0.67 ) }
    dend_18 { pt3dadd( 115.461, 9.30715, 77.6246, 0.67 ) }
    dend_18 { pt3dadd( 120.501, 11.0523, 83.4092, 0.67 ) }
    dend_18 { pt3dadd( 125.966, 13.7816, 88.3667, 0.67 ) }
    dend_18 { pt3dadd( 130.919, 17.7331, 93.0127, 0.67 ) }
    dend_18 { pt3dadd( 136.921, 21.8556, 95.9727, 0.67 ) }
    dend_18 { pt3dadd( 142.303, 26.0239, 99.8963, 0.67 ) }
    dend_18 { pt3dadd( 147.883, 30.1128, 103.625, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 50/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.57083, -19.6158, 50.5323, 0.67 ) }
    dend_15 { pt3dadd( 13.3676, -19.8306, 52.8038, 0.67 ) }
    dend_15 { pt3dadd( 26.7189, -22.1782, 59.9602, 0.67 ) }
    dend_15 { pt3dadd( 39.8873, -21.99, 67.8036, 0.67 ) }
    dend_15 { pt3dadd( 53.905, -21.3306, 73.9629, 0.67 ) }
    dend_15 { pt3dadd( 68.3271, -20.9838, 79.1395, 0.67 ) }
    dend_15 { pt3dadd( 83.2418, -21.9459, 82.5557, 0.67 ) }
    dend_15 { pt3dadd( 98.5367, -21.6121, 83.4744, 0.67 ) }
    dend_15 { pt3dadd( 113.511, -19.33, 85.6901, 0.67 ) }
    dend_15 { pt3dadd( 128.562, -16.5781, 85.9221, 0.67 ) }
    dend_15 { pt3dadd( 143.472, -14.607, 88.7979, 0.67 ) }
    dend_15 { pt3dadd( 158.013, -12.4565, 93.0833, 0.67 ) }
    dend_15 { pt3dadd( 172.815, -11.2595, 96.8499, 0.67 ) }
    dend_15 { pt3dadd( 188.06, -11.6475, 98.4157, 0.67 ) }
    dend_15 { pt3dadd( 203.329, -10.9663, 99.5203, 0.67 ) }
    dend_15 { pt3dadd( 218.551, -12.5923, 100.355, 0.67 ) }
    dend_15 { pt3dadd( 233.484, -15.5588, 102.121, 0.67 ) }
    dend_15 { pt3dadd( 247.499, -20.2696, 106.103, 0.67 ) }
    dend_15 { pt3dadd( 260.846, -26.449, 110.281, 0.67 ) }
    dend_15 { pt3dadd( 274.569, -32.8486, 112.386, 0.67 ) }
    dend_15 { pt3dadd( 288.515, -38.3011, 115.539, 0.67 ) }
    dend_15 { pt3dadd( 303.359, -41.8805, 116.821, 0.67 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 72/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 1.66254, 11.6946, 6.03795, 2.67 ) }
    dend_8 { pt3dadd( -1.41737, 17.167, 6.45854, 2.67 ) }
    dend_8 { pt3dadd( -4.5008, 21.7266, 7.04661, 1.33 ) }
    dend_8 { pt3dadd( -8.4987, 27.6385, 7.80909, 1.33 ) }
    dend_8 { pt3dadd( -11.5465, 32.1453, 8.39036, 1.33 ) }
    dend_8 { pt3dadd( -14.9465, 37.173, 9.03879, 1.33 ) }
    dend_8 { pt3dadd( -19.6181, 44.0811, 9.92975, 1.33 ) }
    dend_8 { pt3dadd( -22.7907, 48.3168, 10.8396, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 80/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.66254, 11.6946, 6.03795, 1.33 ) }
    dend_1 { pt3dadd( 5.47386, 14.3736, 6.04809, 1.33 ) }
    dend_1 { pt3dadd( 6.77778, 15.2901, 6.05155, 1.33 ) }
    dend_1 { pt3dadd( 8.56389, 16.5456, 6.0563, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 84/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 0.487386, -40.6607, 0.0363763, 0.33 ) }
    axon_1 { pt3dadd( 0.603418, -55.6603, 0.0363763, 0.33 ) }
    axon_1 { pt3dadd( 0.71945, -70.6598, 0.0363763, 0.33 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 87/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -62.6218, 59.8318, 19.8664, 0.33 ) }
    dend_43 { pt3dadd( -63.8171, 61.7854, 19.9472, 0.33 ) }
    dend_43 { pt3dadd( -64.6344, 63.0128, 20.0104, 0.67 ) }
    dend_43 { pt3dadd( -65.8331, 64.8232, 20.0913, 0.33 ) }
    dend_43 { pt3dadd( -67.6649, 67.9038, 20.1873, 0.33 ) }
    dend_43 { pt3dadd( -69.2016, 70.8955, 20.5177, 0.67 ) }
    dend_43 { pt3dadd( -70.6845, 73.8558, 20.9219, 0.33 ) }
    dend_43 { pt3dadd( -71.6226, 75.6809, 21.2212, 0.67 ) }
    dend_43 { pt3dadd( -73.0923, 78.6612, 21.7513, 0.33 ) }
    dend_43 { pt3dadd( -74.2665, 81.2156, 22.2284, 0.33 ) }
    dend_43 { pt3dadd( -77.7379, 89.5219, 24.1183, 0.67 ) }
    dend_43 { pt3dadd( -78.3715, 90.9249, 24.5096, 0.33 ) }
    dend_43 { pt3dadd( -78.3715, 90.9249, 24.5096, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_43 { pt3dadd( -79.1429, 92.4205, 25.1343, 0.33 ) }
    dend_43 { pt3dadd( -79.8901, 93.5706, 25.77, 0.67 ) }
    dend_43 { pt3dadd( -81.886, 96.0031, 27.3368, 0.67 ) }
    dend_43 { pt3dadd( -83.7661, 97.814, 28.5625, 0.33 ) }
    dend_43 { pt3dadd( -86.5455, 100.484, 30.2528, 0.67 ) }
    dend_43 { pt3dadd( -89.039, 102.69, 31.3054, 0.33 ) }
    dend_43 { pt3dadd( -92.0269, 105.166, 32.3529, 0.67 ) }
    dend_43 { pt3dadd( -94.5973, 107.276, 32.9999, 0.33 ) }
    dend_43 { pt3dadd( -97.0024, 109.187, 33.226, 0.33 ) }
    dend_43 { pt3dadd( -97.6577, 109.645, 33.243, 0.67 ) }
    dend_43 { pt3dadd( -102.0, 112.186, 33.2271, 0.33 ) }
    dend_43 { pt3dadd( -103.998, 113.167, 33.1024, 1.33 ) }
    dend_43 { pt3dadd( -107.136, 114.369, 32.5056, 0.33 ) }
    dend_43 { pt3dadd( -109.401, 114.983, 31.9923, 0.67 ) }
    dend_43 { pt3dadd( -112.112, 115.578, 31.2914, 0.33 ) }
    dend_43 { pt3dadd( -114.368, 115.91, 30.6175, 1.33 ) }
    dend_43 { pt3dadd( -119.585, 116.496, 28.861, 0.33 ) }
    dend_43 { pt3dadd( -119.915, 116.531, 28.7347, 0.67 ) }
    dend_43 { pt3dadd( -120.928, 116.613, 28.3283, 0.33 ) }
    dend_43 { pt3dadd( -121.693, 116.711, 28.0611, 0.67 ) }
    dend_43 { pt3dadd( -125.842, 117.537, 26.7131, 0.33 ) }
    dend_43 { pt3dadd( -126.906, 117.795, 26.3808, 1.33 ) }
    dend_43 { pt3dadd( -128.943, 118.534, 26.2179, 0.33 ) }
    dend_43 { pt3dadd( -129.281, 118.665, 26.195, 0.67 ) }
    dend_43 { pt3dadd( -131.362, 119.57, 26.1124, 0.33 ) }
    dend_43 { pt3dadd( -132.97, 120.396, 26.1713, 1.33 ) }
    dend_43 { pt3dadd( -135.651, 122.488, 26.9652, 0.33 ) }
    dend_43 { pt3dadd( -138.633, 124.816, 27.9514, 0.67 ) }
    dend_43 { pt3dadd( -147.244, 130.943, 30.2086, 0.67 ) }
    dend_43 { pt3dadd( -155.205, 138.167, 30.8491, 0.67 ) }
    dend_43 { pt3dadd( -162.094, 146.391, 30.6369, 0.67 ) }
    dend_43 { pt3dadd( -170.145, 153.292, 28.7329, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 32/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -62.6218, 59.8318, 19.8664, 0.67 ) }
    dend_40 { pt3dadd( -63.2584, 61.1062, 20.05, 0.67 ) }
    dend_40 { pt3dadd( -64.5515, 63.0911, 20.6236, 0.67 ) }
    dend_40 { pt3dadd( -66.1488, 65.1449, 21.357, 0.67 ) }
    dend_40 { pt3dadd( -68.9513, 68.1924, 22.5463, 0.67 ) }
    dend_40 { pt3dadd( -70.2437, 69.4535, 23.049, 0.67 ) }
    dend_40 { pt3dadd( -72.2062, 71.1028, 23.8877, 0.67 ) }
    dend_40 { pt3dadd( -75.0173, 73.2214, 25.2401, 1.33 ) }
    dend_40 { pt3dadd( -76.1177, 73.9639, 25.8005, 0.67 ) }
    dend_40 { pt3dadd( -77.2989, 74.7794, 26.504, 0.67 ) }
    dend_40 { pt3dadd( -78.5726, 75.6719, 27.328, 0.67 ) }
    dend_40 { pt3dadd( -80.9217, 77.6429, 29.1808, 0.67 ) }
    dend_40 { pt3dadd( -82.9061, 79.4352, 30.8932, 0.67 ) }
    dend_40 { pt3dadd( -83.4863, 80.0542, 31.443, 0.67 ) }
    dend_40 { pt3dadd( -84.449, 81.151, 32.447, 0.67 ) }
    dend_40 { pt3dadd( -84.9933, 81.797, 33.0461, 0.67 ) }
    dend_40 { pt3dadd( -86.6809, 83.7059, 34.7833, 0.33 ) }
    dend_40 { pt3dadd( -87.0685, 84.0925, 35.0602, 1.33 ) }
    dend_40 { pt3dadd( -88.0089, 84.6043, 35.4955, 0.67 ) }
    dend_40 { pt3dadd( -89.0357, 85.0703, 35.7936, 0.33 ) }
    dend_40 { pt3dadd( -89.6376, 85.3062, 35.8379, 0.33 ) }
    dend_40 { pt3dadd( -91.6289, 85.9599, 36.0823, 0.67 ) }
    dend_40 { pt3dadd( -92.594, 86.2956, 36.1533, 0.33 ) }
    dend_40 { pt3dadd( -94.1846, 86.9, 36.4153, 0.33 ) }
    dend_40 { pt3dadd( -95.2182, 87.3358, 36.7176, 0.67 ) }
    dend_40 { pt3dadd( -95.9465, 87.6262, 37.0289, 0.67 ) }
    dend_40 { pt3dadd( -98.3436, 88.6438, 38.3713, 0.33 ) }
    dend_40 { pt3dadd( -98.8132, 88.8343, 38.7152, 1.33 ) }
    dend_40 { pt3dadd( -102.81, 92.1742, 41.9298, 1.33 ) }
    dend_40 { pt3dadd( -107.272, 94.7718, 45.2557, 1.33 ) }
    dend_40 { pt3dadd( -111.616, 97.2116, 48.8511, 1.33 ) }
    dend_40 { pt3dadd( -115.848, 99.162, 52.8688, 1.33 ) }
    dend_40 { pt3dadd( -119.888, 102.002, 56.5047, 1.33 ) }
    dend_40 { pt3dadd( -124.99, 104.489, 58.8728, 1.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 66/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -6.73768, -21.0234, 13.7597, 1.33 ) }
    dend_35 { pt3dadd( -9.14874, -25.1407, 15.4788, 1.33 ) }
    dend_35 { pt3dadd( -12.1336, -30.1919, 17.0926, 0.67 ) }
    dend_35 { pt3dadd( -13.8249, -32.7178, 17.7017, 0.67 ) }
    dend_35 { pt3dadd( -16.3081, -37.0234, 18.8638, 0.67 ) }
    dend_35 { pt3dadd( -17.5089, -39.2296, 19.4512, 0.67 ) }
    dend_35 { pt3dadd( -21.1122, -46.1889, 21.1822, 0.67 ) }
    dend_35 { pt3dadd( -22.0896, -48.0028, 21.5512, 0.67 ) }
    dend_35 { pt3dadd( -24.3316, -52.8241, 22.0938, 0.67 ) }
    dend_35 { pt3dadd( -26.8988, -60.0556, 22.8377, 0.67 ) }
    dend_35 { pt3dadd( -27.5672, -62.4898, 23.0598, 0.67 ) }
    dend_35 { pt3dadd( -28.1091, -64.7931, 23.3218, 0.67 ) }
    dend_35 { pt3dadd( -28.5765, -67.2518, 23.6541, 0.67 ) }
    dend_35 { pt3dadd( -28.821, -70.4409, 23.9291, 0.67 ) }
    dend_35 { pt3dadd( -28.5082, -74.7523, 23.9815, 0.33 ) }
    dend_35 { pt3dadd( -28.3222, -75.6244, 23.8985, 0.67 ) }
    dend_35 { pt3dadd( -27.494, -77.5756, 23.7755, 0.33 ) }
    dend_35 { pt3dadd( -27.0944, -78.3379, 23.6663, 0.67 ) }
    dend_35 { pt3dadd( -26.3891, -79.5413, 23.4122, 0.33 ) }
    dend_35 { pt3dadd( -25.8894, -80.6483, 23.0697, 0.67 ) }
    dend_35 { pt3dadd( -24.8694, -83.5911, 21.654, 0.33 ) }
    dend_35 { pt3dadd( -24.6937, -84.1678, 21.3747, 1.33 ) }
    dend_35 { pt3dadd( -23.431, -89.3276, 18.8648, 0.33 ) }
    dend_35 { pt3dadd( -23.3465, -89.7697, 18.6496, 0.67 ) }
    dend_35 { pt3dadd( -22.6342, -95.2892, 15.8629, 0.33 ) }
    dend_35 { pt3dadd( -22.3206, -99.489, 13.5897, 0.67 ) }
    dend_35 { pt3dadd( -22.9626, -108.805, 12.6349, 0.67 ) }
    dend_35 { pt3dadd( -22.8525, -118.196, 12.1896, 0.67 ) }
    dend_35 { pt3dadd( -22.9501, -127.536, 11.1709, 0.67 ) }
    dend_35 { pt3dadd( -21.9825, -136.549, 8.61619, 0.67 ) }
    dend_35 { pt3dadd( -22.5143, -145.306, 5.26293, 0.67 ) }
    dend_35 { pt3dadd( -22.6602, -153.208, 0.13779, 0.67 ) }
    dend_35 { pt3dadd( -23.6605, -161.497, -4.16969, 0.67 ) }
    dend_35 { pt3dadd( -25.8212, -169.966, -7.55513, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_35 { pt3dadd( -27.3007, -178.997, -9.57801, 0.67 ) }
    dend_35 { pt3dadd( -29.7129, -188.034, -10.0538, 0.67 ) }
    dend_35 { pt3dadd( -31.1449, -197.191, -11.446, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 3/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -6.73768, -21.0234, 13.7597, 0.67 ) }
    dend_34 { pt3dadd( -8.58146, -22.4775, 12.3533, 0.67 ) }
    dend_34 { pt3dadd( -10.1573, -23.7006, 11.3354, 0.67 ) }
    dend_34 { pt3dadd( -12.3803, -25.7149, 9.69164, 0.67 ) }
    dend_34 { pt3dadd( -15.0891, -28.6695, 7.41205, 0.67 ) }
    dend_34 { pt3dadd( -15.6822, -29.3401, 6.83847, 0.33 ) }
    dend_34 { pt3dadd( -16.3848, -30.1535, 6.071, 0.67 ) }
    dend_34 { pt3dadd( -18.6927, -33.0167, 3.4147, 0.67 ) }
    dend_34 { pt3dadd( -20.8506, -36.0303, 0.818426, 1.33 ) }
    dend_34 { pt3dadd( -22.5346, -38.5809, -1.02491, 0.67 ) }
    dend_34 { pt3dadd( -24.2909, -41.0862, -2.64593, 0.67 ) }
    dend_34 { pt3dadd( -25.5081, -42.7205, -3.62901, 0.67 ) }
    dend_34 { pt3dadd( -27.5502, -45.3949, -5.08081, 1.33 ) }
    dend_34 { pt3dadd( -28.4407, -46.6963, -5.64295, 0.67 ) }
    dend_34 { pt3dadd( -31.1988, -50.4925, -6.77511, 0.67 ) }
    dend_34 { pt3dadd( -31.861, -51.433, -6.9829, 0.33 ) }
    dend_34 { pt3dadd( -32.0683, -51.7792, -7.05202, 0.67 ) }
    dend_34 { pt3dadd( -32.2934, -52.2223, -7.19219, 0.33 ) }
    dend_34 { pt3dadd( -32.9621, -53.8349, -8.02254, 0.67 ) }
    dend_34 { pt3dadd( -33.5181, -55.8529, -9.14711, 0.33 ) }
    dend_34 { pt3dadd( -33.6331, -56.6888, -9.65567, 0.33 ) }
    dend_34 { pt3dadd( -33.8739, -58.088, -10.5708, 0.67 ) }
    dend_34 { pt3dadd( -34.1752, -59.1833, -11.2358, 1.33 ) }
    dend_34 { pt3dadd( -34.8051, -60.7176, -12.0832, 0.33 ) }
    dend_34 { pt3dadd( -34.9239, -60.9266, -12.1799, 0.67 ) }
    dend_34 { pt3dadd( -35.3672, -61.5304, -12.4924, 0.33 ) }
    dend_34 { pt3dadd( -36.6752, -62.9672, -13.4979, 0.67 ) }
    dend_34 { pt3dadd( -37.6814, -63.8753, -14.4694, 0.67 ) }
    dend_34 { pt3dadd( -38.2405, -64.2907, -15.0727, 0.33 ) }
    dend_34 { pt3dadd( -38.5857, -64.5347, -15.4784, 0.67 ) }
    dend_34 { pt3dadd( -40.416, -65.8887, -17.6753, 0.33 ) }
    dend_34 { pt3dadd( -41.2526, -66.4811, -18.629, 0.67 ) }
    dend_34 { pt3dadd( -42.8217, -67.5642, -20.3363, 0.33 ) }
    dend_34 { pt3dadd( -43.2916, -67.8792, -20.8419, 0.67 ) }
    dend_34 { pt3dadd( -43.9684, -68.3585, -21.5715, 0.67 ) }
    dend_34 { pt3dadd( -45.6039, -69.5294, -23.242, 0.33 ) }
    dend_34 { pt3dadd( -46.2823, -70.0569, -23.8752, 0.67 ) }
    dend_34 { pt3dadd( -47.3658, -70.86, -24.9556, 0.33 ) }
    dend_34 { pt3dadd( -48.8289, -71.8951, -26.3952, 0.67 ) }
    dend_34 { pt3dadd( -49.9644, -72.6497, -27.5471, 0.33 ) }
    dend_34 { pt3dadd( -50.2314, -72.7981, -27.8279, 0.67 ) }
    dend_34 { pt3dadd( -51.025, -73.1712, -28.6023, 0.33 ) }
    dend_34 { pt3dadd( -53.125, -74.1373, -30.4984, 0.33 ) }
    dend_34 { pt3dadd( -53.3216, -74.2169, -30.6481, 0.67 ) }
    dend_34 { pt3dadd( -54.448, -74.5692, -31.263, 0.33 ) }
    dend_34 { pt3dadd( -56.0733, -74.9663, -31.9469, 0.67 ) }
    dend_34 { pt3dadd( -57.8181, -75.3464, -32.569, 1.33 ) }
    dend_34 { pt3dadd( -59.1518, -75.572, -32.9874, 0.33 ) }
    dend_34 { pt3dadd( -59.5105, -75.6412, -33.0569, 0.67 ) }
    dend_34 { pt3dadd( -61.0442, -75.9329, -33.3767, 0.33 ) }
    dend_34 { pt3dadd( -62.5078, -76.206, -33.724, 0.67 ) }
    dend_34 { pt3dadd( -63.4013, -76.3572, -33.9424, 0.33 ) }
    dend_34 { pt3dadd( -64.4551, -76.446, -34.4852, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 56/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 109.836, -170.902, -108.343, 0.33 ) }
    dend_30 { pt3dadd( 116.141, -173.532, -108.256, 0.33 ) }
    dend_30 { pt3dadd( 117.238, -173.965, -108.18, 1.33 ) }
    dend_30 { pt3dadd( 123.773, -176.812, -107.507, 0.33 ) }
    dend_30 { pt3dadd( 125.25, -177.493, -107.329, 0.67 ) }
    dend_30 { pt3dadd( 127.814, -178.751, -106.995, 0.33 ) }
    dend_30 { pt3dadd( 131.088, -180.426, -106.547, 2.0 ) }
    dend_30 { pt3dadd( 135.638, -183.027, -105.96, 0.33 ) }
    dend_30 { pt3dadd( 139.647, -185.648, -105.493, 0.33 ) }
    dend_30 { pt3dadd( 140.633, -186.404, -105.392, 1.33 ) }
    dend_30 { pt3dadd( 142.387, -187.885, -105.218, 0.33 ) }
    dend_30 { pt3dadd( 143.307, -188.702, -105.125, 1.33 ) }
    dend_30 { pt3dadd( 147.611, -192.727, -104.722, 0.33 ) }
    dend_30 { pt3dadd( 148.994, -194.023, -104.742, 0.67 ) }
    dend_30 { pt3dadd( 150.946, -195.782, -104.634, 0.33 ) }
    dend_30 { pt3dadd( 151.571, -196.387, -104.546, 0.67 ) }
    dend_30 { pt3dadd( 153.198, -198.053, -104.18, 0.33 ) }
    dend_30 { pt3dadd( 153.786, -198.68, -104.0, 0.67 ) }
    dend_30 { pt3dadd( 155.506, -200.54, -103.299, 0.33 ) }
    dend_30 { pt3dadd( 157.762, -203.122, -102.433, 0.67 ) }
    dend_30 { pt3dadd( 160.855, -206.895, -101.206, 0.33 ) }
    dend_30 { pt3dadd( 161.949, -208.219, -100.801, 0.67 ) }
    dend_30 { pt3dadd( 163.794, -210.491, -100.177, 0.33 ) }
    dend_30 { pt3dadd( 164.141, -210.913, -100.082, 0.67 ) }
    dend_30 { pt3dadd( 165.48, -212.521, -99.7733, 0.33 ) }
    dend_30 { pt3dadd( 165.734, -212.82, -99.7316, 0.67 ) }
    dend_30 { pt3dadd( 168.324, -215.814, -99.202, 0.33 ) }
    dend_30 { pt3dadd( 169.014, -216.676, -99.0479, 1.33 ) }
    dend_30 { pt3dadd( 171.852, -220.402, -98.4967, 0.33 ) }
    dend_30 { pt3dadd( 172.972, -221.768, -98.3244, 1.33 ) }
    dend_30 { pt3dadd( 175.003, -224.046, -98.0589, 0.33 ) }
    dend_30 { pt3dadd( 175.391, -224.441, -98.0162, 0.67 ) }
    dend_30 { pt3dadd( 177.266, -226.128, -97.9567, 0.33 ) }
    dend_30 { pt3dadd( 178.756, -227.275, -97.7116, 0.67 ) }
    dend_30 { pt3dadd( 182.585, -229.949, -96.7811, 0.33 ) }
    dend_30 { pt3dadd( 183.224, -230.383, -96.5971, 1.33 ) }
    dend_30 { pt3dadd( 186.324, -232.506, -95.3476, 0.33 ) }
    dend_30 { pt3dadd( 188.463, -233.976, -94.3199, 1.33 ) }
    dend_30 { pt3dadd( 195.372, -238.816, -90.6183, 0.33 ) }
    dend_30 { pt3dadd( 197.826, -240.652, -89.1661, 0.33 ) }
    dend_30 { pt3dadd( 198.48, -241.178, -88.7352, 1.33 ) }
    dend_30 { pt3dadd( 202.203, -244.299, -86.1307, 0.33 ) }
    dend_30 { pt3dadd( 202.768, -244.807, -85.6947, 0.67 ) }
    dend_30 { pt3dadd( 205.996, -247.827, -83.0912, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( 206.598, -248.368, -82.7787, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 109.836, -170.902, -108.343, 0.33 ) }
    dend_29 { pt3dadd( 112.434, -173.786, -114.707, 0.33 ) }
    dend_29 { pt3dadd( 112.788, -174.2, -115.488, 0.67 ) }
    dend_29 { pt3dadd( 113.19, -174.691, -116.334, 0.33 ) }
    dend_29 { pt3dadd( 113.417, -174.99, -116.8, 0.67 ) }
    dend_29 { pt3dadd( 116.084, -178.902, -122.868, 0.33 ) }
    dend_29 { pt3dadd( 116.378, -179.34, -123.515, 0.67 ) }
    dend_29 { pt3dadd( 117.151, -180.439, -124.831, 0.33 ) }
    dend_29 { pt3dadd( 117.249, -180.59, -125.027, 1.33 ) }
    dend_29 { pt3dadd( 117.704, -181.348, -126.045, 0.33 ) }
    dend_29 { pt3dadd( 118.638, -183.258, -128.581, 1.33 ) }
    dend_29 { pt3dadd( 119.211, -184.588, -130.321, 0.33 ) }
    dend_29 { pt3dadd( 119.381, -184.913, -130.78, 0.67 ) }
    dend_29 { pt3dadd( 121.783, -188.202, -136.418, 0.33 ) }
    dend_29 { pt3dadd( 121.897, -188.32, -136.652, 1.33 ) }
    dend_29 { pt3dadd( 124.206, -190.137, -140.691, 0.33 ) }
    dend_29 { pt3dadd( 125.097, -190.65, -142.064, 0.33 ) }
    dend_29 { pt3dadd( 125.706, -190.913, -142.928, 0.67 ) }
    dend_29 { pt3dadd( 128.894, -191.751, -146.923, 0.33 ) }
    dend_29 { pt3dadd( 129.891, -191.892, -147.969, 1.33 ) }
    dend_29 { pt3dadd( 131.145, -192.062, -149.268, 0.33 ) }
    dend_29 { pt3dadd( 133.352, -192.223, -151.438, 0.67 ) }
    dend_29 { pt3dadd( 134.981, -192.452, -153.176, 0.33 ) }
    dend_29 { pt3dadd( 137.332, -192.898, -155.785, 0.67 ) }
    dend_29 { pt3dadd( 138.588, -193.299, -157.057, 0.33 ) }
    dend_29 { pt3dadd( 138.916, -193.43, -157.449, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.47969, -39.8801, -0.801337, 1.33 ) }
    dend_25 { pt3dadd( -6.60302, -45.6782, -3.15168, 1.33 ) }
    dend_25 { pt3dadd( -4.57623, -50.0095, -5.01073, 1.33 ) }
    dend_25 { pt3dadd( -3.00543, -53.1201, -6.9945, 0.67 ) }
    dend_25 { pt3dadd( -1.97866, -55.1828, -8.49451, 0.67 ) }
    dend_25 { pt3dadd( -1.41456, -56.5146, -9.46108, 1.33 ) }
    dend_25 { pt3dadd( 0.0270988, -60.4941, -12.1781, 0.67 ) }
    dend_25 { pt3dadd( 0.363651, -61.9513, -13.0788, 1.33 ) }
    dend_25 { pt3dadd( 1.27881, -67.4031, -16.5141, 0.67 ) }
    dend_25 { pt3dadd( 1.45176, -68.8474, -17.4405, 0.67 ) }
    dend_25 { pt3dadd( 1.80982, -72.0305, -19.2186, 1.33 ) }
    dend_25 { pt3dadd( 2.06905, -74.3349, -20.1721, 0.33 ) }
    dend_25 { pt3dadd( 2.34369, -76.4119, -20.6335, 0.33 ) }
    dend_25 { pt3dadd( 2.85789, -80.3185, -21.4522, 1.33 ) }
    dend_25 { pt3dadd( 3.39175, -85.0084, -22.2306, 0.67 ) }
    dend_25 { pt3dadd( 3.70431, -87.8117, -22.7993, 0.33 ) }
    dend_25 { pt3dadd( 3.90645, -90.1219, -23.4863, 1.33 ) }
    dend_25 { pt3dadd( 4.16396, -93.9099, -24.9898, 0.67 ) }
    dend_25 { pt3dadd( 4.26482, -99.2631, -27.3436, 0.67 ) }
    dend_25 { pt3dadd( 4.23584, -102.707, -28.9688, 1.33 ) }
    dend_25 { pt3dadd( 4.11308, -108.138, -31.395, 0.67 ) }
    dend_25 { pt3dadd( 3.83033, -113.225, -33.6839, 1.33 ) }
    dend_25 { pt3dadd( 3.47944, -117.675, -35.6782, 0.33 ) }
    dend_25 { pt3dadd( 3.18319, -121.041, -37.1432, 1.33 ) }
    dend_25 { pt3dadd( 3.06751, -123.923, -38.1967, 0.33 ) }
    dend_25 { pt3dadd( 3.12503, -125.845, -38.8737, 0.67 ) }
    dend_25 { pt3dadd( 3.34997, -127.702, -39.3409, 0.33 ) }
    dend_25 { pt3dadd( 3.54463, -128.76, -39.4563, 0.33 ) }
    dend_25 { pt3dadd( 3.87051, -130.548, -39.5802, 1.33 ) }
    dend_25 { pt3dadd( 4.44614, -133.689, -39.9148, 0.33 ) }
    dend_25 { pt3dadd( 4.74844, -135.587, -40.0189, 0.67 ) }
    dend_25 { pt3dadd( 5.17886, -139.688, -40.0928, 0.33 ) }
    dend_25 { pt3dadd( 5.24404, -141.09, -40.0378, 0.67 ) }
    dend_25 { pt3dadd( 5.26006, -144.826, -39.6968, 0.33 ) }
    dend_25 { pt3dadd( 5.20806, -146.243, -39.4897, 1.33 ) }
    dend_25 { pt3dadd( 4.79583, -151.105, -38.4972, 0.33 ) }
    dend_25 { pt3dadd( 4.662, -152.293, -38.2244, 0.67 ) }
    dend_25 { pt3dadd( 4.42759, -153.948, -37.8628, 0.33 ) }
    dend_25 { pt3dadd( 4.26823, -154.935, -37.6909, 0.67 ) }
    dend_25 { pt3dadd( 3.72676, -157.657, -37.312, 0.33 ) }
    dend_25 { pt3dadd( 3.31334, -159.333, -37.1783, 1.33 ) }
    dend_25 { pt3dadd( 1.78759, -164.556, -37.3275, 0.33 ) }
    dend_25 { pt3dadd( 1.06085, -166.859, -37.4997, 0.67 ) }
    dend_25 { pt3dadd( -0.41111, -171.089, -38.2641, 0.33 ) }
    dend_25 { pt3dadd( -0.870696, -172.19, -38.5597, 0.67 ) }
    dend_25 { pt3dadd( -2.02887, -174.557, -39.5787, 0.33 ) }
    dend_25 { pt3dadd( -3.48005, -177.402, -41.1955, 0.67 ) }
    dend_25 { pt3dadd( -4.53036, -179.368, -42.6909, 0.67 ) }
    dend_25 { pt3dadd( -6.38547, -182.907, -45.7268, 0.33 ) }
    dend_25 { pt3dadd( -7.05032, -184.316, -46.9846, 0.67 ) }
    dend_25 { pt3dadd( -8.64516, -187.98, -50.2646, 0.33 ) }
    dend_25 { pt3dadd( -9.23376, -189.418, -51.5361, 1.33 ) }
    dend_25 { pt3dadd( -11.0034, -193.833, -55.2892, 0.33 ) }
    dend_25 { pt3dadd( -11.0895, -194.079, -55.5012, 0.67 ) }
    dend_25 { pt3dadd( -11.6804, -195.935, -56.9733, 0.33 ) }
    dend_25 { pt3dadd( -12.7311, -199.73, -60.0385, 1.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 83/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -9.47969, -39.8801, -0.801337, 0.67 ) }
    dend_24 { pt3dadd( -9.51464, -45.8396, -3.62785, 0.67 ) }
    dend_24 { pt3dadd( -9.7678, -46.7666, -3.95723, 0.33 ) }
    dend_24 { pt3dadd( -10.5322, -48.2805, -4.3021, 0.67 ) }
    dend_24 { pt3dadd( -12.9771, -52.2319, -4.82027, 0.67 ) }
    dend_24 { pt3dadd( -13.8566, -53.5739, -4.93671, 0.33 ) }
    dend_24 { pt3dadd( -14.9708, -55.1911, -4.92842, 0.67 ) }
    dend_24 { pt3dadd( -18.21, -59.5465, -4.31131, 0.67 ) }
    dend_24 { pt3dadd( -20.4125, -62.2296, -3.87237, 0.33 ) }
    dend_24 { pt3dadd( -22.2702, -64.2524, -3.48706, 0.33 ) }
    dend_24 { pt3dadd( -22.9868, -64.8926, -3.3453, 0.67 ) }
    dend_24 { pt3dadd( -25.552, -66.9633, -2.74482, 0.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 95/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 147.883, 30.1128, 103.625, 0.67 ) }
    dend_20 { pt3dadd( 155.139, 31.4492, 106.077, 0.67 ) }
    dend_20 { pt3dadd( 162.608, 32.0096, 108.152, 0.67 ) }
    dend_20 { pt3dadd( 169.641, 31.7322, 111.414, 0.67 ) }
    dend_20 { pt3dadd( 175.861, 31.5833, 116.039, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_20 { pt3dadd( 182.904, 31.7214, 119.302, 0.67 ) }
    dend_20 { pt3dadd( 189.354, 33.0107, 123.441, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 2/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 147.883, 30.1128, 103.625, 0.67 ) }
    dend_19 { pt3dadd( 155.419, 32.5673, 106.361, 0.67 ) }
    dend_19 { pt3dadd( 162.632, 34.7439, 110.037, 0.67 ) }
    dend_19 { pt3dadd( 170.409, 36.4006, 112.685, 0.67 ) }
    dend_19 { pt3dadd( 178.208, 38.7945, 114.622, 0.67 ) }
    dend_19 { pt3dadd( 185.349, 42.4655, 117.021, 0.67 ) }
    dend_19 { pt3dadd( 192.722, 46.2693, 118.192, 0.67 ) }
    dend_19 { pt3dadd( 200.082, 50.2568, 117.928, 0.67 ) }
    dend_19 { pt3dadd( 207.25, 54.5798, 117.851, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 303.359, -41.8805, 116.821, 0.67 ) }
    dend_17 { pt3dadd( 314.255, -38.7915, 120.245, 0.67 ) }
    dend_17 { pt3dadd( 324.618, -36.4507, 125.482, 0.67 ) }
    dend_17 { pt3dadd( 334.335, -33.2206, 131.41, 0.67 ) }
    dend_17 { pt3dadd( 343.748, -31.4157, 138.382, 0.67 ) }
    dend_17 { pt3dadd( 352.637, -27.1037, 144.857, 0.67 ) }
    dend_17 { pt3dadd( 360.776, -20.939, 150.702, 0.67 ) }
    dend_17 { pt3dadd( 369.499, -16.3441, 157.197, 0.67 ) }
    dend_17 { pt3dadd( 376.612, -12.1462, 165.65, 0.67 ) }
    dend_17 { pt3dadd( 384.165, -6.61963, 172.813, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 21/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 303.359, -41.8805, 116.821, 0.67 ) }
    dend_16 { pt3dadd( 313.584, -44.695, 118.873, 0.67 ) }
    dend_16 { pt3dadd( 322.87, -48.6004, 122.726, 0.67 ) }
    dend_16 { pt3dadd( 330.901, -52.3156, 128.884, 0.67 ) }
    dend_16 { pt3dadd( 337.755, -55.6618, 136.501, 0.67 ) }
    dend_16 { pt3dadd( 343.544, -59.8124, 144.563, 0.67 ) }
    dend_16 { pt3dadd( 350.014, -65.9833, 150.482, 0.67 ) }
    dend_16 { pt3dadd( 356.756, -71.0133, 157.173, 0.67 ) }
    dend_16 { pt3dadd( 362.488, -75.8164, 164.891, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -22.7907, 48.3168, 10.8396, 0.67 ) }
    dend_10 { pt3dadd( -24.8988, 50.3242, 11.9753, 0.67 ) }
    dend_10 { pt3dadd( -28.2378, 53.6051, 13.9368, 0.67 ) }
    dend_10 { pt3dadd( -29.8007, 55.1278, 14.9963, 0.67 ) }
    dend_10 { pt3dadd( -33.126, 58.6132, 17.3876, 0.67 ) }
    dend_10 { pt3dadd( -34.1446, 59.7769, 18.2203, 0.67 ) }
    dend_10 { pt3dadd( -36.06, 61.9405, 19.6621, 0.67 ) }
    dend_10 { pt3dadd( -37.9897, 64.3505, 21.2395, 0.67 ) }
    dend_10 { pt3dadd( -39.614, 66.403, 22.8221, 0.67 ) }
    dend_10 { pt3dadd( -40.8869, 67.9749, 24.1339, 0.67 ) }
    dend_10 { pt3dadd( -45.0881, 72.9591, 28.4016, 0.67 ) }
    dend_10 { pt3dadd( -47.6657, 75.7387, 30.6696, 0.67 ) }
    dend_10 { pt3dadd( -49.0861, 77.246, 31.7497, 0.67 ) }
    dend_10 { pt3dadd( -51.9739, 80.0973, 33.7529, 0.67 ) }
    dend_10 { pt3dadd( -53.4439, 81.2974, 34.5894, 0.67 ) }
    dend_10 { pt3dadd( -56.8288, 83.4795, 36.4634, 0.67 ) }
    dend_10 { pt3dadd( -59.5099, 84.7284, 37.8334, 0.67 ) }
    dend_10 { pt3dadd( -60.5275, 85.1078, 38.3682, 0.67 ) }
    dend_10 { pt3dadd( -64.3816, 86.1721, 40.1862, 0.67 ) }
    dend_10 { pt3dadd( -67.6041, 86.9473, 41.6008, 0.67 ) }
    dend_10 { pt3dadd( -71.8394, 87.7674, 43.6271, 0.67 ) }
    dend_10 { pt3dadd( -74.3414, 88.1206, 44.9326, 0.67 ) }
    dend_10 { pt3dadd( -76.0946, 88.3113, 45.7929, 0.67 ) }
    dend_10 { pt3dadd( -78.1213, 88.5555, 46.7124, 0.67 ) }
    dend_10 { pt3dadd( -80.9207, 89.0875, 47.8233, 0.67 ) }
    dend_10 { pt3dadd( -84.8513, 90.2026, 49.1554, 0.67 ) }
    dend_10 { pt3dadd( -86.8966, 91.0175, 49.7728, 0.67 ) }
    dend_10 { pt3dadd( -89.2014, 92.2435, 50.4592, 0.67 ) }
    dend_10 { pt3dadd( -90.0285, 92.7437, 50.6877, 0.67 ) }
    dend_10 { pt3dadd( -91.8935, 94.026, 51.4151, 0.67 ) }
    dend_10 { pt3dadd( -93.9471, 95.4781, 52.2639, 0.67 ) }
    dend_10 { pt3dadd( -96.7218, 97.599, 53.4849, 0.67 ) }
    dend_10 { pt3dadd( -101.526, 101.468, 55.683, 0.67 ) }
    dend_10 { pt3dadd( -104.284, 103.642, 57.0056, 0.67 ) }
    dend_10 { pt3dadd( -109.193, 107.329, 59.4409, 0.67 ) }
    dend_10 { pt3dadd( -115.231, 110.857, 61.3053, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 66/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -22.7907, 48.3168, 10.8396, 0.67 ) }
    dend_9 { pt3dadd( -25.2291, 51.7146, 10.6066, 0.67 ) }
    dend_9 { pt3dadd( -31.0088, 59.7548, 9.88106, 0.67 ) }
    dend_9 { pt3dadd( -32.2065, 61.3289, 9.72104, 0.67 ) }
    dend_9 { pt3dadd( -33.7476, 63.3988, 9.50545, 0.67 ) }
    dend_9 { pt3dadd( -38.4754, 69.922, 8.83687, 0.67 ) }
    dend_9 { pt3dadd( -39.5499, 71.3511, 8.63779, 0.67 ) }
    dend_9 { pt3dadd( -41.0149, 73.1939, 8.26377, 0.67 ) }
    dend_9 { pt3dadd( -43.0429, 75.2156, 7.69203, 0.67 ) }
    dend_9 { pt3dadd( -46.1313, 77.882, 6.86875, 0.67 ) }
    dend_9 { pt3dadd( -47.7293, 78.9552, 6.53299, 0.67 ) }
    dend_9 { pt3dadd( -51.623, 80.7729, 5.92274, 0.67 ) }
    dend_9 { pt3dadd( -53.5866, 81.3925, 5.58968, 1.33 ) }
    dend_9 { pt3dadd( -55.6581, 81.8158, 5.25726, 0.33 ) }
    dend_9 { pt3dadd( -57.6691, 82.1348, 4.8409, 0.67 ) }
    dend_9 { pt3dadd( -60.1844, 82.451, 4.28374, 0.33 ) }
    dend_9 { pt3dadd( -62.7009, 82.8885, 3.74778, 1.33 ) }
    dend_9 { pt3dadd( -65.4621, 83.6469, 3.2097, 0.33 ) }
    dend_9 { pt3dadd( -66.6576, 84.0893, 2.93443, 1.33 ) }
    dend_9 { pt3dadd( -69.9828, 85.7534, 2.07476, 0.33 ) }
    dend_9 { pt3dadd( -71.2137, 86.533, 1.7561, 1.33 ) }
    dend_9 { pt3dadd( -72.5819, 87.5881, 1.44146, 0.33 ) }
    dend_9 { pt3dadd( -73.1272, 88.0589, 1.33446, 0.67 ) }
    dend_9 { pt3dadd( -74.7356, 89.5283, 1.04733, 0.33 ) }
    dend_9 { pt3dadd( -75.8108, 90.5758, 0.843864, 0.67 ) }
    dend_9 { pt3dadd( -76.7351, 91.4909, 0.705626, 0.33 ) }
    dend_9 { pt3dadd( -77.1365, 91.8815, 0.613207, 0.67 ) }
    dend_9 { pt3dadd( -79.9713, 94.5076, -0.303562, 0.33 ) }
    dend_9 { pt3dadd( -80.3859, 94.8686, -0.459966, 0.67 ) }
    dend_9 { pt3dadd( -81.9202, 96.0713, -1.1517, 0.33 ) }
    dend_9 { pt3dadd( -82.5432, 96.4989, -1.43466, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 97/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 8.56389, 16.5456, 6.0563, 0.67 ) }
    dend_7 { pt3dadd( 9.39401, 18.2602, 4.41155, 0.67 ) }
    dend_7 { pt3dadd( 14.6267, 26.1458, -2.55871, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_7 { pt3dadd( 18.9669, 32.5172, -7.70429, 0.67 ) }
    dend_7 { pt3dadd( 19.9228, 33.9205, -8.74596, 0.67 ) }
    dend_7 { pt3dadd( 21.3872, 36.0928, -10.2317, 0.67 ) }
    dend_7 { pt3dadd( 22.9212, 38.3601, -11.6573, 1.33 ) }
    dend_7 { pt3dadd( 26.8795, 43.9791, -14.5249, 0.67 ) }
    dend_7 { pt3dadd( 28.9325, 46.5374, -15.3827, 0.67 ) }
    dend_7 { pt3dadd( 30.1089, 48.1716, -15.8044, 1.33 ) }
    dend_7 { pt3dadd( 31.1795, 49.8679, -16.2035, 0.33 ) }
    dend_7 { pt3dadd( 32.8582, 52.8203, -16.847, 1.33 ) }
    dend_7 { pt3dadd( 34.1636, 55.3576, -17.3724, 0.33 ) }
    dend_7 { pt3dadd( 34.7419, 56.4818, -17.5993, 0.67 ) }
    dend_7 { pt3dadd( 35.5594, 57.8566, -17.9317, 0.33 ) }
    dend_7 { pt3dadd( 37.5363, 60.8525, -18.8045, 0.67 ) }
    dend_7 { pt3dadd( 39.3589, 63.5984, -19.8889, 0.33 ) }
    dend_7 { pt3dadd( 40.8735, 65.8364, -21.1373, 1.33 ) }
    dend_7 { pt3dadd( 42.8735, 68.6085, -23.1013, 0.33 ) }
    dend_7 { pt3dadd( 44.2259, 70.245, -24.5361, 1.33 ) }
    dend_7 { pt3dadd( 45.8364, 71.9191, -26.328, 0.33 ) }
    dend_7 { pt3dadd( 48.5419, 74.0987, -29.3491, 1.33 ) }
    dend_7 { pt3dadd( 50.9221, 75.5914, -32.1565, 0.33 ) }
    dend_7 { pt3dadd( 52.14, 76.1342, -33.5176, 1.33 ) }
    dend_7 { pt3dadd( 54.1683, 76.8061, -35.666, 0.33 ) }
    dend_7 { pt3dadd( 55.1325, 77.1074, -36.5186, 0.67 ) }
    dend_7 { pt3dadd( 56.9821, 77.694, -37.8039, 0.33 ) }
    dend_7 { pt3dadd( 58.3819, 78.2376, -38.5508, 1.33 ) }
    dend_7 { pt3dadd( 61.3807, 79.8312, -40.1195, 0.33 ) }
    dend_7 { pt3dadd( 62.2624, 80.4356, -40.6224, 0.67 ) }
    dend_7 { pt3dadd( 65.1086, 82.7199, -42.1255, 0.33 ) }
    dend_7 { pt3dadd( 65.7707, 83.2941, -42.4412, 0.67 ) }
    dend_7 { pt3dadd( 68.9841, 86.3119, -43.825, 0.33 ) }
    dend_7 { pt3dadd( 70.6934, 88.1733, -44.8147, 0.67 ) }
    dend_7 { pt3dadd( 72.3096, 90.1527, -45.9863, 0.33 ) }
    dend_7 { pt3dadd( 74.1292, 92.2628, -47.5084, 0.67 ) }
    dend_7 { pt3dadd( 76.1495, 94.4949, -49.3753, 0.33 ) }
    dend_7 { pt3dadd( 76.8925, 95.1352, -50.0503, 0.67 ) }
    dend_7 { pt3dadd( 81.2773, 98.3097, -54.5754, 0.33 ) }
    dend_7 { pt3dadd( 82.0495, 98.8265, -55.4032, 1.33 ) }
    dend_7 { pt3dadd( 85.2695, 100.988, -59.3831, 0.33 ) }
    dend_7 { pt3dadd( 85.6704, 101.261, -59.9448, 1.33 ) }
    dend_7 { pt3dadd( 88.7189, 103.016, -64.3244, 0.33 ) }
    dend_7 { pt3dadd( 91.137, 104.036, -67.3443, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 41/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.56389, 16.5456, 6.0563, 1.33 ) }
    dend_2 { pt3dadd( 10.3362, 20.1525, 5.20186, 1.33 ) }
    dend_2 { pt3dadd( 12.2934, 24.1359, 4.25823, 1.33 ) }
    dend_2 { pt3dadd( 14.693, 29.0194, 3.10138, 1.33 ) }
    dend_2 { pt3dadd( 15.466, 30.5927, 2.7287, 0.67 ) }
    dend_2 { pt3dadd( 16.6909, 33.0855, 2.13817, 1.33 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 47/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -170.145, 153.292, 28.7329, 0.67 ) }
    dend_45 { pt3dadd( -177.292, 161.947, 29.5749, 0.67 ) }
    dend_45 { pt3dadd( -182.338, 171.71, 31.7494, 0.67 ) }
    dend_45 { pt3dadd( -186.204, 182.062, 33.4229, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 51/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -170.145, 153.292, 28.7329, 0.67 ) }
    dend_44 { pt3dadd( -179.806, 158.852, 29.4551, 0.67 ) }
    dend_44 { pt3dadd( -189.647, 164.154, 29.5401, 0.67 ) }
    dend_44 { pt3dadd( -199.151, 170.007, 29.7892, 0.67 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 55/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -124.99, 104.489, 58.8728, 0.67 ) }
    dend_42 { pt3dadd( -132.824, 111.013, 64.0032, 0.67 ) }
    dend_42 { pt3dadd( -139.587, 119.06, 68.3293, 0.67 ) }
    dend_42 { pt3dadd( -145.622, 127.795, 72.3222, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -124.99, 104.489, 58.8728, 1.33 ) }
    dend_41 { pt3dadd( -132.321, 109.036, 63.3367, 0.67 ) }
    dend_41 { pt3dadd( -139.49, 114.918, 66.1249, 0.67 ) }
    dend_41 { pt3dadd( -145.728, 121.81, 68.7114, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 63/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -31.1449, -197.191, -11.446, 0.67 ) }
    dend_37 { pt3dadd( -35.0363, -205.301, -12.7097, 0.67 ) }
    dend_37 { pt3dadd( -37.3863, -213.557, -15.7401, 0.67 ) }
    dend_37 { pt3dadd( -38.8998, -222.176, -18.2638, 0.67 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 67/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -31.1449, -197.191, -11.446, 0.67 ) }
    dend_36 { pt3dadd( -27.6608, -202.898, -10.5717, 0.67 ) }
    dend_36 { pt3dadd( -24.2125, -208.535, -9.21279, 0.67 ) }
    dend_36 { pt3dadd( -19.8953, -213.486, -7.57983, 0.67 ) }
    dend_36 { pt3dadd( -14.8892, -217.583, -5.54115, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 72/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -12.7311, -199.73, -60.0385, 0.67 ) }
    dend_27 { pt3dadd( -13.9599, -202.312, -59.7963, 0.67 ) }
    dend_27 { pt3dadd( -14.597, -203.758, -59.6737, 0.33 ) }
    dend_27 { pt3dadd( -15.2917, -205.538, -59.18, 1.33 ) }
    dend_27 { pt3dadd( -16.0585, -207.434, -58.5257, 0.33 ) }
    dend_27 { pt3dadd( -16.871, -209.534, -57.782, 0.33 ) }
    dend_27 { pt3dadd( -18.0018, -212.544, -56.5341, 0.33 ) }
    dend_27 { pt3dadd( -18.4083, -213.82, -55.9237, 1.33 ) }
    dend_27 { pt3dadd( -19.7803, -219.333, -53.2332, 0.33 ) }
    dend_27 { pt3dadd( -20.0181, -220.641, -52.6065, 1.33 ) }
    dend_27 { pt3dadd( -20.3865, -223.523, -51.166, 0.33 ) }
    dend_27 { pt3dadd( -20.5936, -226.279, -49.7987, 0.67 ) }
    dend_27 { pt3dadd( -20.5726, -228.781, -48.6166, 0.33 ) }
    dend_27 { pt3dadd( -20.4716, -230.34, -48.0297, 0.67 ) }
    dend_27 { pt3dadd( -20.342, -231.626, -47.8191, 0.33 ) }
    dend_27 { pt3dadd( -20.2172, -232.495, -47.7067, 0.67 ) }
    dend_27 { pt3dadd( -19.8996, -234.587, -47.6007, 0.33 ) }
    dend_27 { pt3dadd( -19.825, -235.239, -47.6596, 1.33 ) }
    dend_27 { pt3dadd( -19.8375, -237.581, -47.9485, 0.33 ) }
    dend_27 { pt3dadd( -20.1562, -240.268, -48.3736, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 92/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -12.7311, -199.73, -60.0385, 0.33 ) }
    dend_26 { pt3dadd( -13.781, -199.949, -60.7014, 0.33 ) }
    dend_26 { pt3dadd( -14.1626, -200.014, -60.9111, 0.67 ) }
    dend_26 { pt3dadd( -15.7609, -199.975, -60.8161, 0.33 ) }
    dend_26 { pt3dadd( -17.0886, -199.91, -60.7558, 0.67 ) }
    dend_26 { pt3dadd( -19.8979, -199.65, -60.6787, 0.33 ) }
    dend_26 { pt3dadd( -21.7533, -199.387, -60.5067, 0.33 ) }
    dend_26 { pt3dadd( -22.7066, -199.23, -60.376, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( -29.6446, -197.992, -59.0673, 0.33 ) }
    dend_26 { pt3dadd( -32.5593, -197.359, -58.2637, 0.67 ) }
    dend_26 { pt3dadd( -34.0896, -196.917, -57.6907, 0.33 ) }
    dend_26 { pt3dadd( -36.5346, -196.057, -56.4697, 1.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 4/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -115.231, 110.857, 61.3053, 0.67 ) }
    dend_12 { pt3dadd( -119.526, 114.129, 64.3062, 0.67 ) }
    dend_12 { pt3dadd( -123.676, 116.947, 67.937, 0.67 ) }
    dend_12 { pt3dadd( -127.009, 120.019, 72.1537, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 8/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -115.231, 110.857, 61.3053, 0.67 ) }
    dend_11 { pt3dadd( -125.835, 116.41, 64.0572, 0.67 ) }
    dend_11 { pt3dadd( -137.088, 121.072, 65.7738, 0.67 ) }
    dend_11 { pt3dadd( -148.739, 124.416, 68.0256, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 12/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 16.6909, 33.0855, 2.13817, 0.67 ) }
    dend_6 { pt3dadd( 17.8514, 36.8122, 2.30342, 0.67 ) }
    dend_6 { pt3dadd( 19.0973, 40.702, 2.31549, 0.33 ) }
    dend_6 { pt3dadd( 19.6222, 42.1527, 2.29884, 0.67 ) }
    dend_6 { pt3dadd( 22.7994, 50.478, 1.66332, 0.67 ) }
    dend_6 { pt3dadd( 23.9709, 53.3716, 1.3265, 0.67 ) }
    dend_6 { pt3dadd( 25.4866, 56.9465, 0.820866, 0.67 ) }
    dend_6 { pt3dadd( 25.8745, 57.8324, 0.676844, 0.33 ) }
    dend_6 { pt3dadd( 27.0623, 59.9965, 0.232888, 1.33 ) }
    dend_6 { pt3dadd( 28.9343, 63.1085, -0.659911, 0.33 ) }
    dend_6 { pt3dadd( 29.6945, 64.2644, -1.28759, 0.67 ) }
    dend_6 { pt3dadd( 30.5335, 65.4867, -1.99178, 0.33 ) }
    dend_6 { pt3dadd( 30.815, 65.9423, -2.2835, 0.67 ) }
    dend_6 { pt3dadd( 31.539, 67.2424, -3.24367, 0.33 ) }
    dend_6 { pt3dadd( 32.12, 68.3604, -4.09859, 0.67 ) }
    dend_6 { pt3dadd( 33.5481, 71.0591, -6.03838, 0.33 ) }
    dend_6 { pt3dadd( 34.6008, 73.1195, -7.46498, 1.33 ) }
    dend_6 { pt3dadd( 36.7358, 77.3221, -10.2903, 0.33 ) }
    dend_6 { pt3dadd( 37.113, 78.071, -10.7604, 1.33 ) }
    dend_6 { pt3dadd( 38.2254, 80.3585, -12.0665, 0.33 ) }
    dend_6 { pt3dadd( 39.1376, 82.284, -12.9587, 0.67 ) }
    dend_6 { pt3dadd( 39.8622, 83.9099, -13.3952, 0.33 ) }
    dend_6 { pt3dadd( 40.0116, 84.3008, -13.4407, 0.67 ) }
    dend_6 { pt3dadd( 40.371, 85.483, -13.3683, 0.33 ) }
    dend_6 { pt3dadd( 40.4566, 86.0788, -13.3843, 0.67 ) }
    dend_6 { pt3dadd( 40.4784, 87.6097, -13.502, 0.33 ) }
    dend_6 { pt3dadd( 40.337, 90.0553, -13.7645, 1.33 ) }
    dend_6 { pt3dadd( 40.0818, 92.7377, -14.1058, 0.33 ) }
    dend_6 { pt3dadd( 39.824, 94.7241, -14.3678, 0.67 ) }
    dend_6 { pt3dadd( 39.0175, 100.173, -15.1285, 0.33 ) }
    dend_6 { pt3dadd( 38.8314, 101.225, -15.2702, 0.67 ) }
    dend_6 { pt3dadd( 38.5617, 102.43, -15.4415, 0.33 ) }
    dend_6 { pt3dadd( 38.4216, 103.0, -15.5365, 0.67 ) }
    dend_6 { pt3dadd( 38.0295, 104.431, -15.7865, 0.33 ) }
    dend_6 { pt3dadd( 37.6906, 105.672, -15.9417, 0.67 ) }
    dend_6 { pt3dadd( 37.1135, 107.702, -15.6748, 0.33 ) }
    dend_6 { pt3dadd( 36.61, 109.398, -15.4789, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 49/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 16.6909, 33.0855, 2.13817, 0.67 ) }
    dend_3 { pt3dadd( 20.2498, 36.7229, 2.71075, 0.67 ) }
    dend_3 { pt3dadd( 22.6136, 39.4113, 3.38206, 0.67 ) }
    dend_3 { pt3dadd( 25.7015, 42.9232, 4.259, 0.67 ) }
    dend_3 { pt3dadd( 26.9062, 44.2933, 4.60113, 0.33 ) }
    dend_3 { pt3dadd( 29.4486, 47.1848, 5.32315, 1.33 ) }
    dend_3 { pt3dadd( 31.806, 49.8657, 5.99261, 0.67 ) }
    dend_3 { pt3dadd( 33.8381, 52.5609, 6.90402, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 57/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 33.8381, 52.5609, 6.90402, 0.67 ) }
    dend_5 { pt3dadd( 37.6621, 56.1295, 10.433, 0.67 ) }
    dend_5 { pt3dadd( 39.1439, 57.549, 11.7525, 0.67 ) }
    dend_5 { pt3dadd( 39.9185, 58.2595, 12.4333, 0.67 ) }
    dend_5 { pt3dadd( 43.4037, 61.3831, 15.4503, 0.67 ) }
    dend_5 { pt3dadd( 46.0536, 63.734, 17.6609, 0.67 ) }
    dend_5 { pt3dadd( 47.9668, 65.4804, 19.2167, 0.33 ) }
    dend_5 { pt3dadd( 50.361, 67.6372, 21.0174, 0.67 ) }
    dend_5 { pt3dadd( 51.4072, 68.6079, 21.8457, 0.33 ) }
    dend_5 { pt3dadd( 53.2372, 70.3161, 23.216, 0.67 ) }
    dend_5 { pt3dadd( 54.1732, 71.2397, 23.9685, 0.67 ) }
    dend_5 { pt3dadd( 55.3371, 72.3348, 24.8436, 0.33 ) }
    dend_5 { pt3dadd( 57.253, 74.1353, 26.2834, 0.67 ) }
    dend_5 { pt3dadd( 58.5189, 75.2524, 27.2634, 0.33 ) }
    dend_5 { pt3dadd( 59.8303, 76.4366, 28.2848, 0.67 ) }
    dend_5 { pt3dadd( 62.8589, 79.025, 30.7096, 0.33 ) }
    dend_5 { pt3dadd( 64.4613, 80.301, 32.0382, 0.67 ) }
    dend_5 { pt3dadd( 67.6157, 82.5353, 34.5951, 0.67 ) }
    dend_5 { pt3dadd( 72.4358, 87.2361, 40.7624, 0.67 ) }
    dend_5 { pt3dadd( 76.0511, 93.183, 46.6083, 0.67 ) }
    dend_5 { pt3dadd( 80.7857, 98.739, 52.052, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 78/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 33.8381, 52.5609, 6.90402, 0.67 ) }
    dend_4 { pt3dadd( 31.7506, 60.0928, 8.50793, 0.67 ) }
    dend_4 { pt3dadd( 31.5065, 61.5509, 8.84141, 0.67 ) }
    dend_4 { pt3dadd( 31.3604, 63.4675, 9.2996, 0.33 ) }
    dend_4 { pt3dadd( 31.4454, 64.4369, 9.57269, 0.67 ) }
    dend_4 { pt3dadd( 32.1448, 67.0883, 10.4169, 0.33 ) }
    dend_4 { pt3dadd( 32.3364, 67.8147, 10.6481, 0.67 ) }
    dend_4 { pt3dadd( 34.135, 70.2516, 11.7431, 0.33 ) }
    dend_4 { pt3dadd( 35.0184, 71.2644, 12.2617, 0.33 ) }
    dend_4 { pt3dadd( 37.3304, 73.3536, 13.4278, 0.67 ) }
    dend_4 { pt3dadd( 38.9387, 74.5385, 14.0606, 0.33 ) }
    dend_4 { pt3dadd( 40.3031, 82.6048, 15.9371, 0.33 ) }
    dend_4 { pt3dadd( 43.0076, 90.5185, 16.7485, 0.33 ) }
    dend_4 { pt3dadd( 47.3731, 97.4493, 18.8186, 0.33 ) }
    dend_4 { pt3dadd( 51.4453, 104.719, 20.1155, 0.33 ) }
    dend_4 { pt3dadd( 55.0737, 112.303, 20.5726, 0.33 ) }
    dend_4 { pt3dadd( 57.972, 120.188, 20.7739, 0.33 ) }
    dend_4 { pt3dadd( 62.5895, 127.174, 19.6702, 0.33 ) }
    dend_4 { pt3dadd( 67.0918, 134.292, 20.2412, 0.33 ) }
    dend_4 { pt3dadd( 70.9387, 141.784, 20.339, 0.33 ) }
    dend_4 { pt3dadd( 73.8721, 149.626, 19.5901, 0.33 ) }
    dend_4 { pt3dadd( 78.0882, 156.927, 19.7433, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_4 { pt3dadd( 83.5881, 163.163, 21.3944, 0.33 ) }
    dend_4 { pt3dadd( 89.7942, 168.891, 22.322, 0.33 ) }
    dend_4 { pt3dadd( 95.8872, 174.349, 24.6478, 0.33 ) }
    dend_4 { pt3dadd( 103.229, 178.566, 25.7702, 0.33 ) }
    dend_4 { pt3dadd( 110.868, 182.378, 26.2517, 0.33 ) }
    dend_4 { pt3dadd( 117.997, 187.009, 26.963, 0.33 ) }
    dend_4 { pt3dadd( 124.856, 191.397, 29.5255, 0.33 ) }
    dend_4 { pt3dadd( 132.084, 194.021, 33.3142, 0.33 ) }
    dend_4 { pt3dadd( 140.407, 195.038, 35.171, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_31, dend_22, dend_21, dend_14, dend_13, dend_0, dend_46, dend_39, dend_33, dend_32, dend_28, dend_23, dend_18, dend_15, dend_8, dend_1, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_25, dend_24, dend_20, dend_19, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_45, dend_44, dend_42, dend_41, dend_37, dend_36, dend_27, dend_26, dend_12, dend_11, dend_6, dend_3, dend_5, dend_4]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_31, dend_22, dend_21, dend_14, dend_13, dend_0, dend_46, dend_39, dend_33, dend_32, dend_28, dend_23, dend_18, dend_15, dend_8, dend_1, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_25, dend_24, dend_20, dend_19, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_45, dend_44, dend_42, dend_41, dend_37, dend_36, dend_27, dend_26, dend_12, dend_11, dend_6, dend_3, dend_5, dend_4]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_31, dend_22, dend_21, dend_14, dend_13, dend_0, axon_0, dend_46, dend_39, dend_33, dend_32, dend_28, dend_23, dend_18, dend_15, dend_8, dend_1, axon_1, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_25, dend_24, dend_20, dend_19, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_45, dend_44, dend_42, dend_41, dend_37, dend_36, dend_27, dend_26, dend_12, dend_11, dend_6, dend_3, dend_5, dend_4]}
    ModelViewParmSubset_5 = new SectionList()
    dend_38 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_21 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_14 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_13 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_46 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_39 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_32 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_18 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_15 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_35 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_34 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_30 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_25 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_20 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_17 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_7 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_27 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_6 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_5 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_31 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_33 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_3 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_12 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_41 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_11 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_42 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_37 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_26 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_44 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_45 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_31, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 9
    dend_14 nseg = 3
    dend_13 nseg = 7
    dend_46 nseg = 13
    dend_39 nseg = 3
    dend_32 nseg = 5
    dend_28 nseg = 11
    dend_18 nseg = 9
    dend_15 nseg = 15
    dend_8 nseg = 3
    dend_43 nseg = 7
    dend_40 nseg = 5
    dend_35 nseg = 9
    dend_34 nseg = 5
    dend_30 nseg = 7
    dend_29 nseg = 3
    dend_25 nseg = 9
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_17 nseg = 5
    dend_16 nseg = 5
    dend_10 nseg = 7
    dend_9 nseg = 5
    dend_7 nseg = 7
    dend_27 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 5
    dend_4 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_NBC_70775a2036_0_0


