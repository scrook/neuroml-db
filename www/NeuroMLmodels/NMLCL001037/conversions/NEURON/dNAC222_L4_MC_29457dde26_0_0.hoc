// Cell: dNAC222_L4_MC_29457dde26_0_0
/*
{
  "id" : "dNAC222_L4_MC_29457dde26_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.990274, 10.0329, -2.04532, 6.5955", "-0.916974, 8.69695, -1.77222, 11.7827", "-0.843674, 7.361, -1.49912, 14.5661", "-0.770374, 6.02505, -1.22601, 15.5703", "-0.697074, 4.6891, -0.952908, 16.4465", "-0.623774, 3.35314, -0.679804, 17.1803", "-0.550474, 2.01719, -0.4067, 17.9244", "-0.477174, 0.681242, -0.133596, 18.3543", "-0.403873, -0.654708, 0.139508, 18.5081", "-0.330573, -1.99066, 0.412612, 18.2649", "-0.257273, -3.32661, 0.685717, 18.0213", "-0.183973, -4.66256, 0.958821, 17.7017", "-0.110673, -5.99851, 1.23192, 17.3049", "-0.0373732, -7.33446, 1.50503, 16.1306", "0.0359269, -8.67041, 1.77813, 14.7151", "0.109227, -10.0064, 2.05124, 13.0272", "0.182527, -11.3423, 2.32434, 11.0913", "0.255827, -12.6783, 2.59744, 9.26593", "0.329127, -14.0142, 2.87055, 7.34863", "0.402427, -15.3502, 3.14365, 4.67215", "0.475727, -16.6861, 3.41676, 2.80931" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "0.496558, -16.7808, 6.73932, 2.8", "0.496558, -16.7808, 6.73932, 2.8", "0.497997, -18.5504, 6.98681, 2.58", "0.499606, -20.5264, 7.26319, 2.58", "0.500726, -21.9044, 7.45591, 3.24", "0.501911, -23.3593, 7.65939, 3.98", "0.502751, -24.3912, 7.80371, 4.13", "0.503258, -25.3342, 7.94828, 4.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000033000065803
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.30344, 1.53946, -17.4507, 1.77", "-4.36381, 2.20011, -18.0845, 1.77", "-4.47921, 3.46305, -19.2959, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000033000065803
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.34656, 8.29621, -2.63068, 3.68", "4.34656, 8.29621, -2.63068, 3.68", "4.82339, 9.8219, -3.23665, 2.73", "5.23795, 11.4855, -3.78444, 2.73", "5.25147, 11.5397, -3.80231, 2.73", "5.66414, 13.1957, -4.34762, 2.43", "5.94183, 14.31, -4.71455, 2.21", "6.31587, 15.9741, -5.23243, 2.06", "6.48921, 17.0489, -5.51624, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000033000065803
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.475727, -16.6861, 3.41676, 0.673181", "1.2975, -31.6636, 3.41676, 0.673181", "2.11928, -46.641, 3.41676, 0.673181" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "0.503258, -25.3342, 7.94828, 0.74", "-2.39052, -26.9045, 8.7876, 0.74", "-3.66791, -27.6125, 9.03483, 0.74", "-4.6261, -28.1275, 9.16305, 1.33", "-5.31468, -28.4939, 9.235, 1.62", "-6.09769, -28.9054, 9.27673, 1.92", "-7.34607, -29.5545, 9.29821, 1.62", "-8.49356, -30.1806, 9.09122, 0.96", "-9.33729, -30.643, 9.00549, 0.81", "-9.39932, -30.6745, 9.00811, 0.81", "-10.3995, -31.1306, 9.19848, 1.62", "-11.1146, -31.4005, 9.47129, 1.99", "-12.0868, -31.6713, 10.05, 1.99", "-14.3876, -32.1914, 11.8337, 0.88", "-15.3629, -32.3437, 12.6998, 0.66", "-15.9425, -32.3959, 13.2632, 0.66", "-16.7079, -32.3951, 14.0804, 1.03", "-17.2304, -32.3302, 14.6796, 1.03", "-17.2744, -32.3221, 14.7334, 1.03", "-17.77, -32.245, 15.2652, 1.03", "-17.8107, -32.243, 15.3092, 1.03", "-18.2576, -32.2861, 15.8156, 1.03", "-19.4448, -32.5031, 17.1561, 0.74", "-20.5012, -32.7738, 18.3425, 0.44", "-20.9374, -32.91, 18.8466, 0.81", "-21.1651, -33.0041, 19.1246, 0.81", "-21.5525, -33.1904, 19.6103, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.503258, -25.3342, 7.94828, 2.43", "1.10436, -27.9322, 7.60674, 2.43", "1.45591, -29.4516, 7.40699, 1.99" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-4.47921, 3.46305, -19.2959, 0.44", "-2.74353, 5.08812, -23.695, 0.44", "-2.07423, 5.87506, -25.2708, 0.44", "-2.05316, 5.90606, -25.3171, 0.44", "-1.50373, 6.85873, -26.4095, 0.59", "-1.44937, 6.96461, -26.4975, 0.59", "-0.768265, 8.24785, -27.4138, 1.69", "-0.376772, 9.0504, -27.6664, 2.95", "0.169894, 9.9359, -27.9326, 2.87", "0.740444, 10.6236, -28.217, 1.62", "2.04192, 11.7213, -28.8672, 0.22", "2.79306, 12.2073, -29.2889, 0.74", "3.74434, 12.6634, -29.863, 0.81", "5.17361, 13.2318, -30.7971, 0.74", "6.077, 13.5551, -31.4341, 0.29", "6.62015, 13.8029, -31.9064, 0.29", "7.36609, 14.3631, -32.724, 1.84", "7.67037, 14.7837, -33.1006, 2.65", "7.70012, 14.8411, -33.1459, 2.65", "7.99128, 15.4327, -33.6059, 2.43", "8.49696, 16.5489, -34.9816, 0.29", "8.68817, 17.0174, -35.6847, 0.29", "8.96158, 17.7215, -36.8804, 0.29", "9.34323, 18.8019, -38.8026, 1.4", "9.55933, 19.4971, -40.0983, 4.13", "10.4021, 22.1446, -45.0777, 0.44", "10.4978, 22.486, -45.7091, 0.59", "10.5132, 22.5544, -45.8408, 0.59", "10.566, 22.8667, -46.4323, 0.59", "10.66, 23.4811, -47.4787, 0.37", "10.9333, 25.2286, -50.1763, 2.8", "11.0867, 25.9223, -51.1933, 3.39", "11.7434, 28.7975, -55.5269, 0.96", "11.8602, 29.3212, -56.3296, 0.59", "12.0116, 30.04, -57.4471, 2.21", "12.0704, 30.365, -57.937, 3.17", "12.313, 32.439, -61.0618, 0.52", "12.3606, 32.7246, -61.5541, 0.29", "12.3672, 32.7579, -61.6149, 0.29", "12.4727, 33.1664, -62.4324, 0.29", "12.6567, 33.7556, -63.7163, 2.43", "12.8622, 34.2514, -64.837, 3.09", "13.9106, 36.4333, -69.6209, 0.37", "14.3712, 37.2497, -71.3932, 0.96", "14.5556, 37.539, -72.021, 0.96", "14.572, 37.5626, -72.0734, 0.96", "15.407, 38.6819, -74.5735, 0.37", "16.1113, 39.6082, -76.4573, 2.73", "16.5744, 40.2288, -77.437, 3.61", "17.3331, 41.2188, -79.0763, 2.87" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.47921, 3.46305, -19.2959, 1.47", "-6.26944, 7.81409, -25.3684, 1.47", "-6.78741, 9.2051, -26.7276, 1.47", "-6.82553, 9.3143, -26.8025, 1.47", "-7.17506, 10.4183, -27.403, 1.69", "-7.19224, 10.4775, -27.4334, 1.69", "-7.60304, 12.0256, -28.2289, 1.69", "-7.96645, 13.7271, -28.784, 1.69", "-8.21572, 14.9809, -29.2531, 1.99", "-8.4764, 16.3866, -29.8245, 2.06", "-8.73122, 17.8991, -30.5318, 2.28", "-8.92364, 19.1282, -31.1852, 2.21", "-9.11123, 20.6457, -32.2441, 2.43" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.48921, 17.0489, -5.51624, 1.92", "6.41291, 17.4467, -11.3298, 1.92", "6.50236, 17.5662, -12.9161, 1.69", "6.76084, 17.7682, -15.4026, 2.0", "7.67476, 18.3654, -21.4009, 1.33", "7.69079, 18.3751, -21.4786, 1.33", "8.01568, 18.571, -23.0545, 0.88", "8.61002, 18.7543, -24.4579, 0.88", "8.67468, 18.7693, -24.5603, 0.88", "9.53884, 18.9562, -25.3461, 1.55", "10.6013, 19.3574, -25.5103, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.48921, 17.0489, -5.51624, 1.62", "6.17248, 17.9925, -5.5949, 1.62", "5.76542, 19.2367, -5.77417, 1.47", "5.39789, 20.5948, -5.994, 0.59", "5.26493, 21.3179, -6.11007, 0.96", "5.21435, 21.8866, -6.18344, 1.25", "5.21174, 22.465, -6.24668, 1.4", "5.41138, 23.649, -6.32395, 0.96", "5.78556, 24.5955, -6.31261, 0.81", "6.29346, 25.5357, -6.25487, 1.25", "6.90763, 26.4834, -6.16201, 1.69", "7.30814, 27.0095, -6.08119, 2.06", "7.94246, 27.7037, -5.90996, 2.28", "8.6471, 28.3314, -5.64178, 2.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.11928, -46.641, 3.41676, 0.15", "2.94105, -61.6185, 3.41676, 0.15", "3.76282, -76.596, 3.41676, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "1.45591, -29.4516, 7.40699, 0.52", "3.31562, -29.9871, 5.84019, 0.52", "4.58561, -30.3284, 4.86394, 0.96", "5.8251, -30.7005, 3.96358, 0.29", "6.89994, -31.0792, 3.20008, 0.44", "6.95412, -31.1016, 3.1622, 0.44", "7.45437, -31.3522, 2.78563, 0.44", "7.99125, -31.7008, 2.39015, 0.29", "8.50517, -32.0547, 2.01999, 0.29", "8.98014, -32.4334, 1.67445, 0.88", "9.3002, -32.7479, 1.42169, 0.88", "10.4685, -34.0709, 0.370715, 0.44", "10.7237, -34.3898, 0.106362, 0.22", "11.1033, -34.8594, -0.313739, 0.22", "11.5779, -35.3975, -0.8087, 0.81", "11.8304, -35.6574, -1.05119, 0.96", "12.7142, -36.4866, -1.82889, 0.29", "13.4539, -37.149, -2.41119, 0.29", "13.9025, -37.5322, -2.75962, 1.25", "14.3557, -37.8657, -3.09106, 1.69", "15.6508, -38.6256, -3.93565, 0.22", "16.075, -38.834, -4.19507, 0.22", "16.3628, -38.9623, -4.36675, 0.81", "16.4236, -38.9934, -4.40777, 0.81", "17.1412, -39.4319, -4.9548, 0.81", "17.1854, -39.4673, -4.99513, 0.81", "18.0704, -40.3788, -5.95547, 0.22", "18.8643, -41.3588, -6.89928, 1.47", "19.2972, -41.9955, -7.48678, 1.99", "19.4462, -42.2243, -7.72595, 2.5", "20.0564, -43.1453, -8.7413, 0.81", "20.4508, -43.7494, -9.41604, 0.29", "20.7645, -44.2507, -9.99057, 0.15", "21.3547, -45.1885, -11.1095, 1.4", "22.4359, -46.7764, -13.1274, 0.37", "22.8307, -47.3029, -13.8745, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "1.45591, -29.4516, 7.40699, 1.77", "1.1074, -31.19, 7.11631, 1.77", "0.794665, -32.746, 6.88817, 1.84", "0.443843, -34.5327, 6.64945, 1.84", "0.0951398, -36.3876, 6.42266, 1.84", "-0.172211, -37.8959, 6.25588, 2.06", "-0.44969, -39.5605, 6.08629, 2.58", "-0.676893, -41.0034, 5.97166, 3.09", "-0.770087, -41.6385, 5.92091, 3.39", "-0.89329, -42.5547, 5.85459, 3.61", "-1.13518, -44.6207, 5.76202, 3.39", "-1.31612, -46.3377, 5.70649, 2.14" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "17.3331, 41.2188, -79.0763, 0.37", "17.3219, 43.1718, -83.0156, 0.37", "17.2924, 43.6436, -83.9205, 0.37", "17.2819, 43.7359, -84.0849, 0.37", "17.1723, 44.442, -85.2031, 0.66", "17.0429, 45.1698, -86.2448, 0.22", "17.0385, 45.2025, -86.2944, 0.22", "16.9842, 45.6474, -86.9104, 0.22", "16.9609, 45.9258, -87.3102, 0.59", "16.8629, 47.1021, -89.084, 1.77", "16.8216, 47.632, -89.9081, 2.5", "16.6069, 49.9318, -93.6115, 0.22", "16.5655, 50.2751, -94.1881, 0.52", "16.5498, 50.3967, -94.4041, 0.52", "16.3908, 51.1821, -95.8566, 1.11", "16.3793, 51.213, -95.918, 1.11", "16.1984, 51.4907, -96.5597, 1.25", "15.4633, 52.2411, -98.3954, 0.22", "15.4408, 52.2619, -98.4469, 0.22", "14.9378, 52.6693, -99.5071, 1.55", "14.2154, 53.1914, -100.878, 1.77", "12.8371, 54.1256, -103.397, 0.37", "12.6902, 54.2216, -103.715, 1.11", "12.4414, 54.4092, -104.431, 1.25", "11.7916, 55.0199, -106.754, 0.22", "11.5287, 55.2947, -107.82, 1.77", "11.2998, 55.5655, -108.852, 2.43", "10.1849, 56.8604, -113.632, 0.66", "9.37807, 57.7297, -116.856, 0.59", "8.76255, 58.3745, -119.258, 1.69", "8.58326, 58.5535, -119.905, 2.06", "8.54458, 58.5866, -120.025, 2.06", "7.07132, 59.5506, -123.18, 0.22", "6.46154, 59.8442, -123.907, 0.22", "6.41646, 59.8606, -123.943, 0.22", "5.78392, 60.0548, -124.363, 1.55", "5.19413, 60.2517, -124.733, 1.99", "3.93452, 60.7202, -125.415, 0.15", "3.83223, 60.7661, -125.48, 0.15", "3.28965, 61.0522, -125.953, 0.15", "3.21199, 61.0981, -126.032, 0.15", "2.80806, 61.3875, -126.5, 0.96", "2.46828, 61.6665, -126.985, 1.18", "1.01844, 63.152, -129.345, 0.15", "0.987008, 63.1875, -129.396, 0.15", "0.589781, 63.6748, -130.029, 1.18", "0.243649, 64.1179, -130.573, 1.33", "-0.397593, 64.9631, -131.595, 0.15", "-0.876822, 65.6221, -132.332, 0.15", "-1.77138, 66.9939, -133.513, 1.99", "-2.26796, 67.7793, -134.215, 2.73", "-2.29549, 67.825, -134.259, 2.73" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "17.3331, 41.2188, -79.0763, 0.22", "19.3199, 42.4785, -81.5486, 0.22", "20.1661, 43.0923, -82.7337, 0.74", "20.6897, 43.5963, -83.6478, 1.03", "21.6288, 44.6874, -85.5589, 0.29", "22.1458, 45.4469, -86.9778, 0.81", "22.6158, 46.3611, -88.694, 1.84", "22.7035, 46.7866, -89.492, 2.36", "22.6926, 48.0187, -91.8668, 0.29", "22.6036, 48.5155, -92.7878, 0.96", "22.0456, 50.1409, -95.5829, 0.29", "21.737, 50.8026, -96.6552, 2.06", "21.4127, 51.3673, -97.5022, 2.43", "20.4373, 52.9246, -99.6481, 0.29", "20.1054, 53.4053, -100.233, 0.22", "19.6298, 54.0601, -100.916, 1.25", "19.2559, 54.5718, -101.341, 1.62", "18.3171, 55.8097, -102.313, 0.15", "17.8752, 56.3588, -102.718, 0.81", "17.6161, 56.6762, -102.937, 0.96", "17.0292, 57.4287, -103.51, 0.22", "16.4852, 58.1518, -104.222, 1.03", "16.3005, 58.4059, -104.498, 1.25", "15.4402, 59.6136, -105.943, 0.22", "14.8426, 60.5033, -107.033, 2.14", "14.4968, 61.0398, -107.719, 2.73", "13.177, 63.1615, -110.456, 0.37", "12.9041, 63.6249, -111.063, 0.44", "12.4817, 64.388, -112.103, 0.44", "12.2426, 64.9228, -112.87, 1.18", "11.8144, 66.1336, -114.606, 0.22", "11.7233, 66.4735, -115.069, 0.22", "11.5546, 67.4839, -116.305, 1.62", "11.4583, 68.2805, -117.249, 2.21", "11.3315, 70.3446, -119.552, 0.37", "11.3324, 70.8519, -120.086, 0.37", "11.3347, 70.901, -120.134, 0.37", "11.4006, 71.8592, -121.069, 0.74", "11.4315, 72.3086, -121.484, 0.59", "11.4795, 73.3363, -122.355, 0.29", "11.5095, 74.4283, -123.232, 1.47", "11.5367, 75.2777, -123.949, 1.77", "11.5868, 76.8951, -125.282, 0.22", "11.5886, 76.9766, -125.347, 0.22", "11.5997, 77.4731, -125.701, 0.22", "11.6068, 78.0174, -126.016, 0.22", "11.6083, 78.0791, -126.046, 0.22", "11.6605, 79.2193, -126.482, 1.69", "11.6856, 79.872, -126.696, 1.69", "11.7715, 81.4557, -127.211, 0.22", "11.8182, 82.1831, -127.448, 0.52", "11.8205, 82.2391, -127.465, 0.52", "11.8393, 83.286, -127.821, 0.22", "11.8391, 83.3505, -127.843, 0.22", "11.8345, 84.1087, -128.112, 0.22", "11.8019, 85.5917, -128.638, 1.55", "11.7882, 86.2911, -128.878, 1.77", "11.771, 87.7903, -129.408, 0.22", "11.7616, 88.5307, -129.69, 0.59", "11.7542, 89.9231, -130.235, 0.22", "11.7525, 90.7112, -130.567, 0.59", "11.6708, 92.0671, -131.217, 0.22", "11.5659, 93.0307, -131.721, 1.47", "11.417, 93.7865, -132.121, 2.28", "11.4004, 93.8448, -132.154, 2.28", "11.1102, 94.5993, -132.575, 2.73", "10.1291, 96.7112, -133.698, 0.22", "9.72446, 97.4722, -134.054, 0.52", "9.22889, 98.3618, -134.418, 0.22", "8.93538, 98.8851, -134.617, 0.81", "8.58851, 99.5055, -134.836, 1.18", "7.679, 101.183, -135.414, 0.22", "6.95413, 102.61, -135.883, 0.22", "6.43897, 103.639, -136.246, 1.11", "6.15898, 104.225, -136.476, 1.69", "5.89651, 104.799, -136.713, 1.99", "5.22732, 106.342, -137.388, 0.22", "4.70406, 107.521, -138.015, 0.22", "4.33873, 108.324, -138.499, 0.22", "3.85759, 109.326, -139.103, 1.25", "3.65867, 109.718, -139.344, 2.36", "3.30887, 110.385, -139.764, 2.36", "2.24684, 112.321, -140.932, 0.22", "2.21856, 112.374, -140.966, 0.22", "1.69065, 113.628, -141.742, 0.22", "1.67506, 113.676, -141.77, 0.22", "1.50551, 114.454, -142.179, 0.22", "1.4279, 115.478, -142.66, 2.28", "1.47455, 116.37, -143.047, 1.47", "1.6883, 118.374, -143.959, 0.22", "1.78591, 118.935, -144.242, 0.66", "1.85634, 119.298, -144.432, 0.66", "2.16789, 120.721, -145.217, 0.22", "2.33711, 121.44, -145.627, 0.81", "2.42317, 121.882, -145.874, 0.81", "2.63396, 123.276, -146.676, 0.22", "2.74484, 124.471, -147.383, 1.69", "2.76539, 124.999, -147.685, 1.92", "2.76517, 125.068, -147.723, 1.92", "2.7217, 126.425, -148.451, 0.22", "2.69598, 126.876, -148.688, 0.59", "2.58697, 128.146, -149.327, 0.22", "2.48762, 129.113, -149.838, 0.22", "2.48337, 129.163, -149.867, 0.22", "2.43537, 130.118, -150.443, 0.22", "2.42616, 130.967, -150.98, 1.62", "2.42771, 131.034, -151.022, 1.62", "2.47646, 131.687, -151.424, 1.69", "2.58907, 132.811, -152.117, 0.44", "2.66975, 133.553, -152.557, 0.59", "2.6771, 133.613, -152.589, 0.59", "2.84223, 134.868, -153.264, 0.22", "2.96132, 135.854, -153.78, 0.59", "2.98834, 136.107, -153.904, 0.74", "3.06878, 137.023, -154.351, 0.22", "3.11496, 137.852, -154.797, 1.11", "3.13883, 139.053, -155.468, 0.22", "3.1173, 139.936, -155.958, 1.55", "3.0884, 140.451, -156.234, 1.77", "3.07167, 140.667, -156.35, 1.77", "2.88527, 142.372, -157.259, 0.22", "2.85068, 142.639, -157.402, 0.37", "2.73778, 143.469, -157.813, 0.22", "2.72937, 143.529, -157.846, 0.22", "2.67975, 143.893, -158.055, 0.52", "2.50683, 145.167, -158.763, 0.22", "2.34184, 146.415, -159.489, 1.25", "2.3168, 146.598, -159.601, 1.77", "2.08834, 148.088, -160.558, 0.15", "1.98166, 148.743, -160.977, 0.15", "1.84998, 149.529, -161.519, 0.59", "1.61331, 150.882, -162.517, 0.22", "1.47571, 151.639, -163.096, 0.22", "1.36307, 152.305, -163.6, 1.4", "1.30959, 152.581, -163.816, 1.55", "0.735905, 155.018, -165.807, 0.22", "0.724934, 155.062, -165.844, 0.22", "0.569031, 155.66, -166.346, 0.22", "0.408022, 156.258, -166.854, 1.84", "-0.230523, 158.503, -168.765, 0.22", "-0.482523, 159.288, -169.432, 1.33" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-9.11123, 20.6457, -32.2441, 1.47", "-12.1048, 19.2299, -35.6668, 1.47", "-13.246, 18.7817, -36.6925, 2.28", "-14.0134, 18.5171, -37.2845, 2.73", "-14.7861, 18.2816, -37.8193, 2.87", "-14.8418, 18.2646, -37.8578, 2.87", "-16.1787, 17.857, -38.783, 2.95", "-17.5457, 17.586, -39.256, 2.95", "-18.6317, 17.3864, -39.6118, 2.43", "-19.1538, 17.2976, -39.7819, 2.43" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-9.11123, 20.6457, -32.2441, 0.59", "-6.0132, 23.0737, -32.9754, 0.59", "-5.41767, 23.5758, -33.182, 0.59", "-4.3361, 24.6014, -33.6265, 0.81", "-3.32612, 25.6861, -34.0954, 0.74", "-2.94197, 26.1677, -34.2971, 0.66", "-2.36383, 27.0239, -34.6089, 0.52", "-2.34628, 27.0736, -34.6351, 0.52", "-2.31466, 27.7124, -34.8021, 0.66", "-2.43465, 28.1934, -34.764, 0.66", "-2.67658, 28.7882, -34.5855, 0.52", "-3.00532, 29.4509, -34.2892, 0.44", "-3.46748, 30.2655, -33.835, 0.66", "-3.66155, 30.5984, -33.6366, 0.88", "-3.97306, 31.1147, -33.3113, 0.96", "-4.27214, 31.6251, -33.003, 0.81", "-4.54826, 32.1085, -32.7499, 0.88", "-4.83561, 32.5988, -32.5223, 0.88", "-4.88724, 32.6828, -32.4875, 0.88", "-5.23387, 33.226, -32.2808, 0.88", "-5.5814, 33.7951, -32.1305, 1.03", "-5.98561, 34.4516, -32.0526, 1.03" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "10.6013, 19.3574, -25.5103, 0.37", "10.7839, 21.0528, -25.4981, 0.37", "10.8487, 22.199, -25.4258, 0.81", "10.864, 22.7664, -25.3769, 1.33", "10.8902, 23.8553, -25.2751, 1.92", "10.9073, 24.7808, -25.1881, 1.03", "10.9522, 26.7402, -24.9954, 0.29", "10.9488, 27.541, -24.893, 0.66", "10.938, 28.1857, -24.8369, 0.66", "10.9198, 29.4249, -24.7594, 0.44", "10.9199, 30.2856, -24.7506, 0.59", "10.94, 31.0484, -24.7843, 0.52", "11.0035, 31.9676, -24.8828, 0.52", "11.0647, 33.2453, -25.0756, 1.25", "11.0754, 33.8803, -25.1821, 1.92", "11.0361, 35.2031, -25.4212, 1.62", "11.0325, 35.2703, -25.4332, 1.62", "10.9401, 36.4003, -25.6246, 0.29", "10.869, 37.1483, -25.7455, 0.22", "10.8154, 37.6922, -25.8145, 0.22", "10.7481, 38.4087, -25.9038, 1.11", "10.6726, 39.1925, -25.9912, 1.69", "10.6339, 39.6171, -26.0404, 2.06", "10.582, 40.6249, -26.1703, 1.11", "10.5407, 41.8245, -26.3188, 0.29", "10.4961, 42.9722, -26.4508, 1.99", "10.4854, 43.4843, -26.5118, 2.65", "10.4969, 44.1565, -26.6043, 2.87", "10.6086, 45.8464, -26.853, 0.22", "10.7656, 47.0127, -27.026, 0.37", "10.9696, 47.8269, -27.1771, 0.37", "11.521, 49.2331, -27.4763, 2.58", "12.0927, 50.2632, -27.7203, 2.87", "12.4333, 50.7073, -27.8367, 2.95", "12.9998, 51.2284, -27.9872, 3.09", "14.1398, 52.1, -28.264, 0.74", "14.8947, 52.5912, -28.425, 0.29", "15.692, 53.0243, -28.554, 1.4", "16.3609, 53.3529, -28.6326, 2.06", "17.2974, 53.7848, -28.734, 2.73" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "10.6013, 19.3574, -25.5103, 0.44", "11.8015, 21.7905, -24.4223, 0.44", "12.1814, 22.6358, -24.0601, 0.44", "12.236, 22.7625, -24.0089, 0.44", "12.5384, 23.4761, -23.7304, 0.44", "13.217, 24.9797, -23.1756, 0.44", "14.1152, 26.9701, -22.4411, 1.25", "14.1374, 27.0329, -22.425, 1.25", "14.3399, 27.6119, -22.2612, 1.25", "14.3744, 27.7059, -22.2328, 1.25", "14.7851, 28.7118, -21.8804, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "8.6471, 28.3314, -5.64178, 0.74", "8.39143, 29.0281, -4.13775, 0.74", "8.09059, 29.7653, -2.71972, 0.74", "7.61075, 30.9331, -0.671507, 1.4", "6.95523, 32.5029, 1.87056, 0.29", "6.82157, 32.8527, 2.40813, 0.29", "6.61461, 33.4378, 3.25855, 0.22", "6.44822, 33.9553, 3.93867, 0.22", "6.0255, 35.3654, 5.51869, 1.11", "5.89593, 35.7926, 5.88677, 1.55", "5.33288, 37.3963, 7.11636, 0.22", "5.201, 37.8086, 7.49078, 0.22", "5.0788, 38.3322, 8.01799, 1.03", "5.03517, 38.6837, 8.39987, 1.18", "5.02616, 39.6328, 9.46041, 0.22", "5.21013, 40.7963, 10.8447, 1.33", "5.5965, 41.9597, 12.296, 0.29", "5.84564, 42.4333, 12.9129, 0.29", "6.19221, 42.9332, 13.5671, 0.74", "6.46593, 43.2919, 13.9986, 1.11", "6.99148, 43.9628, 14.6975, 0.29", "7.0229, 44.0089, 14.7385, 0.29", "7.27694, 44.5133, 15.1294, 0.29", "7.61463, 45.3785, 15.7752, 0.29", "7.88938, 46.2138, 16.322, 0.74", "8.10151, 46.8983, 16.7146, 1.25", "8.4649, 48.0629, 17.3078, 0.88", "8.62951, 48.5726, 17.5308, 1.03", "8.87405, 49.2886, 17.7922, 0.74", "9.30647, 50.4667, 18.0823, 0.29", "9.66935, 51.3829, 18.2395, 0.29", "9.69691, 51.4559, 18.2456, 0.29", "9.92504, 52.2066, 18.2355, 0.29", "9.96095, 52.3485, 18.2341, 0.29", "10.1413, 53.1085, 18.2341, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.6471, 28.3314, -5.64178, 0.96", "9.18068, 29.8111, -6.34627, 0.96", "9.53518, 30.9832, -6.88976, 0.29", "9.76025, 31.8777, -7.27441, 0.81", "9.95811, 32.8901, -7.66132, 1.11", "9.96597, 32.945, -7.68046, 1.11", "10.0277, 33.4933, -7.84695, 1.11", "10.0278, 33.5602, -7.86113, 1.11", "10.0198, 34.2703, -8.02487, 1.25", "10.0358, 34.855, -8.13779, 1.11", "10.1044, 36.0621, -8.31059, 0.81", "10.2028, 37.2696, -8.45343, 1.47", "10.2099, 37.3274, -8.45902, 1.47", "10.4009, 38.6368, -8.55873, 2.28", "10.532, 39.4275, -8.60708, 2.14", "10.6856, 40.1929, -8.62192, 1.47", "11.0213, 41.6867, -8.58434, 0.88", "11.4288, 43.2839, -8.5041, 0.29", "11.8077, 44.686, -8.40398, 0.29", "11.8267, 44.7514, -8.3975, 0.29", "12.1824, 45.8924, -8.29297, 1.55", "12.428, 46.6436, -8.21706, 2.14", "12.6711, 47.4233, -8.13079, 1.92", "12.8824, 48.174, -8.04473, 1.11", "13.0724, 49.0539, -7.95556, 0.44", "13.1758, 49.997, -7.88831, 0.37", "13.1642, 50.1428, -7.88614, 0.37", "13.014, 50.7335, -7.89661, 0.29", "12.987, 50.8069, -7.90003, 0.29", "12.681, 51.6096, -7.95417, 0.29", "12.457, 52.2106, -7.99943, 0.29", "12.2243, 52.9163, -8.05572, 0.29", "11.8807, 54.1242, -8.15519, 1.84", "11.7036, 54.9645, -8.22685, 2.65", "11.595, 55.7474, -8.29372, 2.95", "11.5841, 56.165, -8.32949, 2.95", "11.5883, 56.2426, -8.33618, 2.95" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-1.31612, -46.3377, 5.70649, 0.44", "0.415038, -46.7666, 6.18029, 0.44", "1.3112, -47.0677, 6.35214, 0.44", "1.3851, -47.0955, 6.36317, 0.44", "2.1492, -47.4245, 6.45437, 0.44", "3.16471, -47.8617, 6.57558, 0.37", "4.00297, -48.2225, 6.67563, 0.37", "5.04118, -48.5995, 6.71159, 1.92", "5.48715, -48.8014, 6.72518, 2.5", "6.21943, -49.1911, 6.74036, 2.8" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.31612, -46.3377, 5.70649, 1.03", "-1.181, -48.1668, 4.85773, 1.03", "-1.09467, -49.3355, 4.31537, 1.03", "-1.0064, -50.5304, 3.76092, 1.33", "-0.918616, -51.7188, 3.20947, 1.33" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.29549, 67.825, -134.259, 0.37", "-1.78442, 69.9149, -137.758, 0.37", "-1.62948, 70.437, -138.673, 0.22", "-1.61866, 70.4721, -138.732, 0.22", "-1.51311, 70.814, -139.286, 0.22", "-1.22627, 71.8208, -141.067, 1.77", "-1.00138, 72.686, -142.618, 1.33", "-0.824387, 73.4605, -143.958, 0.22", "-0.774053, 73.778, -144.524, 0.74", "-0.763985, 73.8846, -144.714, 0.74", "-0.790874, 75.5711, -147.517, 0.22", "-0.864047, 76.1919, -148.384, 1.25", "-0.940167, 76.6122, -148.885, 1.4", "-1.34129, 78.2971, -150.842, 0.22", "-1.353, 78.3436, -150.892, 0.22", "-1.64689, 79.4939, -151.988, 0.22", "-1.91226, 80.5553, -152.787, 1.55", "-2.0535, 81.1269, -153.172, 1.47", "-2.66555, 83.786, -154.75, 0.22", "-2.91836, 84.7912, -155.305, 0.22", "-2.95425, 84.9166, -155.378, 0.22", "-3.21391, 85.7105, -155.855, 0.22", "-3.70862, 86.9535, -156.558, 1.77", "-3.88515, 87.3741, -156.777, 2.06", "-4.94171, 89.8101, -157.952, 0.22", "-5.00265, 89.9468, -158.026, 0.22", "-5.28042, 90.6018, -158.402, 0.88", "-5.82996, 92.0162, -159.252, 0.22", "-6.17708, 93.205, -159.997, 0.88", "-6.18879, 93.2627, -160.033, 0.88", "-6.20846, 93.5191, -160.176, 0.88", "-6.28308, 94.2877, -160.65, 0.15", "-6.34857, 94.8094, -161.011, 0.52", "-6.57214, 95.9508, -161.869, 0.22", "-6.76978, 96.5487, -162.371, 0.22", "-6.79226, 96.6029, -162.423, 0.22", "-7.13164, 97.3526, -163.207, 0.22", "-7.34168, 97.8309, -163.746, 0.22", "-7.75581, 98.8532, -164.92, 1.69", "-7.93238, 99.3945, -165.648, 1.47", "-8.29162, 100.821, -167.747, 0.29", "-8.42511, 101.551, -168.868, 0.22", "-8.50232, 102.574, -170.493, 1.11", "-8.50512, 102.837, -170.926, 1.11", "-8.43513, 104.979, -174.703, 0.37", "-8.43362, 105.008, -174.755, 0.37", "-8.42679, 105.256, -175.221, 1.03", "-8.44818, 106.306, -177.228, 0.22", "-8.5169, 107.071, -178.69, 1.55", "-8.63279, 107.923, -180.304, 1.62", "-8.99826, 109.536, -183.221, 0.22", "-9.31125, 110.652, -185.254, 1.47", "-9.39187, 110.88, -185.669, 2.06", "-9.59893, 111.37, -186.522, 2.06", "-9.61643, 111.412, -186.587, 2.06", "-10.2853, 113.207, -189.027, 0.15", "-10.443, 113.668, -189.624, 1.03", "-10.5513, 114.027, -190.074, 1.4", "-10.9574, 115.551, -191.917, 0.15", "-11.2364, 116.744, -193.314, 1.33", "-11.5709, 118.308, -195.112, 0.22", "-11.7479, 119.285, -196.177, 0.81", "-11.7729, 119.428, -196.34, 1.18", "-11.8858, 119.963, -197.018, 0.59", "-12.0471, 120.582, -197.858, 1.25", "-12.062, 120.629, -197.92, 1.25", "-12.2521, 120.994, -198.463, 1.25", "-13.2244, 122.51, -200.868, 1.11", "-13.9838, 123.561, -202.638, 0.22", "-14.0204, 123.605, -202.717, 0.22", "-14.6112, 124.245, -203.853, 1.77", "-16.5015, 126.215, -207.277, 0.15", "-17.0599, 126.786, -208.237, 1.4", "-17.0917, 126.826, -208.299, 1.4", "-17.238, 127.066, -208.662, 2.06", "-17.9476, 129.316, -211.739, 0.22", "-18.0732, 130.243, -212.904, 2.21", "-18.0701, 130.695, -213.411, 2.95", "-17.8967, 134.096, -217.154, 0.22", "-17.7782, 135.318, -218.486, 1.84", "-17.2013, 138.646, -222.049, 0.22", "-17.0678, 139.088, -222.496, 0.96", "-17.0414, 139.165, -222.573, 0.96" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.29549, 67.825, -134.259, 0.22", "-5.3616, 69.7511, -135.825, 0.22", "-6.00671, 70.1136, -136.079, 0.44", "-7.37619, 70.8274, -136.516, 0.22", "-8.14962, 71.2083, -136.73, 1.03", "-8.38395, 71.3196, -136.785, 1.18", "-9.712, 71.9579, -137.048, 0.22", "-11.1158, 72.5889, -137.126, 0.22", "-11.9011, 72.9291, -137.167, 1.4", "-12.4599, 73.1705, -137.193, 1.62", "-13.8882, 73.8246, -137.246, 0.22", "-14.908, 74.3178, -137.265, 0.22", "-14.9785, 74.3546, -137.265, 0.22", "-15.556, 74.6605, -137.248, 0.22", "-16.3055, 75.0549, -137.215, 1.33", "-17.0127, 75.4206, -137.174, 1.69", "-18.3816, 76.1138, -137.067, 0.15", "-19.376, 76.6119, -136.976, 0.74", "-20.6594, 77.2973, -136.848, 0.15", "-21.1193, 77.5699, -136.79, 0.15", "-21.176, 77.6092, -136.783, 0.15", "-21.6861, 78.0218, -136.742, 0.88", "-22.1726, 78.4865, -136.728, 1.25", "-22.6011, 78.8764, -136.795, 1.11", "-23.5771, 79.7213, -137.07, 0.22", "-24.6074, 80.5763, -137.411, 0.22", "-25.4213, 81.2037, -137.674, 1.03", "-25.6282, 81.351, -137.747, 1.33", "-27.875, 82.8461, -138.532, 0.15", "-27.9236, 82.8761, -138.549, 0.15", "-28.3097, 83.119, -138.721, 1.03", "-29.7482, 84.082, -139.414, 0.22", "-30.4043, 84.5796, -139.748, 1.18", "-31.01, 85.1029, -140.107, 1.33", "-31.0537, 85.1477, -140.137, 1.33", "-32.6736, 86.8622, -141.37, 0.15", "-33.0701, 87.2837, -141.729, 0.66", "-33.3157, 87.5489, -141.983, 0.66", "-34.0739, 88.3347, -142.763, 0.22", "-34.2633, 88.5064, -142.946, 0.66", "-34.5275, 88.7201, -143.17, 0.66", "-35.6737, 89.5346, -143.991, 0.15", "-36.0896, 89.8276, -144.293, 0.66", "-36.6344, 90.2106, -144.686, 0.66", "-37.9825, 91.2124, -145.65, 0.22", "-38.4823, 91.6044, -146.015, 0.88", "-38.7262, 91.8064, -146.205, 1.25", "-40.7166, 93.5543, -147.813, 0.22", "-40.7528, 93.5882, -147.846, 0.22", "-41.4135, 94.236, -148.483, 1.03", "-41.5819, 94.4029, -148.664, 1.03", "-42.8708, 95.6349, -150.071, 0.22", "-42.9054, 95.6672, -150.107, 0.22", "-43.6975, 96.3557, -150.922, 0.96", "-43.9999, 96.598, -151.22, 1.4", "-45.3718, 97.6305, -152.544, 0.15", "-45.903, 98.0153, -153.041, 0.44", "-46.5296, 98.4533, -153.576, 0.15", "-47.3735, 99.0234, -154.255, 1.03", "-47.647, 99.1935, -154.446, 1.18" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.482523, 159.288, -169.432, 0.22", "-0.655841, 160.163, -170.286, 0.22", "-1.00027, 161.962, -171.914, 1.33", "-1.13436, 162.678, -172.518, 1.62", "-1.54797, 164.695, -174.281, 0.22", "-1.73354, 165.548, -175.037, 0.22", "-1.75456, 165.635, -175.114, 0.22", "-1.97279, 166.411, -175.768, 1.03", "-2.09249, 166.809, -176.061, 1.03", "-2.62124, 168.452, -177.219, 0.22", "-2.66168, 168.577, -177.306, 0.22", "-2.89425, 169.249, -177.834, 0.22", "-2.91226, 169.301, -177.876, 0.22", "-3.45188, 170.646, -178.997, 1.84", "-3.67264, 171.167, -179.403, 2.43", "-3.71343, 171.258, -179.465, 2.43", "-4.25882, 172.415, -180.219, 1.11", "-4.82797, 173.596, -180.946, 0.22", "-5.34504, 174.602, -181.546, 0.22", "-5.76763, 175.35, -181.959, 0.81", "-6.12732, 175.995, -182.298, 1.99", "-6.42004, 176.519, -182.552, 1.4", "-6.69149, 177.051, -182.805, 0.96", "-7.24223, 178.352, -183.466, 0.15", "-7.48139, 179.079, -183.879, 0.15", "-7.71961, 179.952, -184.419, 1.25", "-7.78348, 180.221, -184.591, 1.62", "-8.02835, 181.527, -185.414, 0.15", "-8.09807, 182.029, -185.827, 0.52", "-8.1425, 182.376, -186.108, 0.52", "-8.26058, 183.202, -186.757, 0.15", "-8.43458, 184.245, -187.537, 1.4", "-8.54754, 184.82, -187.95, 1.99", "-9.49222, 188.978, -190.91, 0.15", "-9.83727, 190.458, -191.964, 0.15", "-10.0563, 191.434, -192.639, 1.18", "-10.1469, 191.863, -192.917, 2.14", "-10.2193, 192.208, -193.125, 2.14", "-10.7166, 194.438, -194.309, 0.15", "-10.8922, 195.257, -194.609, 0.66", "-11.153, 196.609, -195.18, 0.22", "-11.3157, 197.518, -195.564, 0.96", "-11.4023, 198.029, -195.765, 1.11", "-11.4242, 198.156, -195.814, 1.11", "-11.5602, 198.868, -196.066, 1.11", "-12.0126, 201.133, -196.908, 0.22", "-12.2314, 202.115, -197.272, 0.22", "-12.5118, 203.327, -197.72, 1.47", "-12.7922, 204.667, -198.242, 0.22", "-12.9293, 205.409, -198.545, 0.81", "-12.9715, 205.676, -198.657, 0.81", "-13.1571, 207.312, -199.303, 0.22", "-13.1706, 207.85, -199.54, 0.96", "-13.0084, 209.402, -200.332, 0.22", "-12.8747, 210.1, -200.753, 1.4", "-12.7804, 210.508, -201.027, 1.77", "-12.602, 211.279, -201.536, 1.55", "-12.1853, 212.999, -202.677, 0.22", "-11.9374, 214.133, -203.396, 0.59", "-11.249, 217.958, -205.546, 0.22", "-11.2404, 218.019, -205.576, 0.22", "-11.0513, 219.915, -206.409, 0.22", "-11.0483, 219.98, -206.433, 0.22", "-11.0562, 220.743, -206.625, 0.96", "-11.1063, 222.441, -206.869, 0.22", "-11.1289, 223.583, -206.889, 0.37", "-11.1401, 224.514, -206.907, 0.15", "-11.1381, 224.805, -206.913, 0.44", "-11.125, 225.531, -206.927, 0.22", "-11.0983, 226.247, -206.938, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-0.482523, 159.288, -169.432, 0.22", "-1.4173, 158.878, -169.466, 0.22", "-1.68404, 158.749, -169.474, 0.29", "-2.27385, 158.451, -169.506, 0.15", "-2.84222, 158.16, -169.543, 0.29", "-4.04383, 157.544, -169.621, 0.15", "-5.28249, 156.911, -169.701, 0.44", "-5.9286, 156.57, -169.748, 0.15", "-6.48007, 156.264, -169.79, 0.59", "-6.76103, 156.094, -169.813, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-19.1538, 17.2976, -39.7819, 2.28", "-19.1785, 17.3123, -44.8907, 2.28", "-19.2717, 17.3184, -46.1555, 2.21", "-19.875, 17.2993, -50.8936, 2.43", "-20.0369, 17.2757, -51.8283, 2.58", "-20.1034, 17.2572, -52.1305, 2.58", "-21.0667, 16.8718, -55.7164, 0.52", "-21.5253, 16.7214, -56.7067, 2.06", "-21.8639, 16.6087, -57.3042, 2.43", "-23.01, 16.1537, -58.997, 1.62", "-23.7299, 15.867, -60.0419, 0.59", "-24.7495, 15.5048, -61.4451, 2.58", "-25.9762, 15.1385, -63.0079, 3.61", "-27.6672, 14.7104, -65.2127, 0.59", "-28.3233, 14.5579, -66.1064, 0.29", "-28.386, 14.546, -66.1914, 0.29", "-28.7187, 14.4928, -66.6821, 0.59", "-29.053, 14.4309, -67.1723, 0.44", "-29.945, 14.1418, -68.4946, 0.22", "-30.9138, 13.7569, -69.8304, 0.22", "-30.949, 13.7434, -69.877, 0.22", "-31.8713, 13.4581, -71.0069, 2.06", "-32.7571, 13.2248, -72.0394, 3.39", "-33.9005, 12.9942, -73.2445, 3.61", "-35.5292, 12.7836, -74.739, 2.06", "-36.6194, 12.6742, -75.601, 0.44", "-37.704, 12.5634, -76.3694, 0.22", "-37.8244, 12.5536, -76.4401, 0.22", "-38.5684, 12.512, -76.7911, 0.22", "-38.6451, 12.5117, -76.8139, 0.22", "-39.7339, 12.5685, -76.9593, 0.22", "-40.6199, 12.6714, -76.9884, 0.22", "-41.4522, 12.8255, -77.0827, 0.66", "-41.5596, 12.8527, -77.1044, 0.66", "-42.2955, 13.0972, -77.3455, 0.88", "-42.7885, 13.2922, -77.5345, 0.22", "-43.4105, 13.5538, -77.7822, 0.22", "-44.8281, 14.1076, -78.3525, 0.81", "-45.408, 14.314, -78.5857, 0.96", "-46.2557, 14.5987, -78.9089, 0.59", "-47.5333, 15.0047, -79.3815, 0.22", "-48.6646, 15.3464, -79.7813, 0.22", "-49.7113, 15.6398, -80.1095, 2.14", "-50.7839, 15.9316, -80.3571, 3.46", "-51.5968, 16.1597, -80.542, 3.76", "-51.6536, 16.1751, -80.5531, 3.76" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-19.1538, 17.2976, -39.7819, 0.22", "-20.1077, 17.4599, -39.8127, 0.22", "-21.6301, 17.719, -39.8617, 0.22", "-21.7581, 17.7408, -39.8658, 0.22", "-23.1026, 17.9696, -39.9091, 2.14", "-23.9291, 18.1102, -39.9357, 2.65" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.98561, 34.4516, -32.0526, 0.29", "-6.34875, 34.7861, -32.851, 0.29", "-6.3805, 34.8148, -32.9059, 0.29", "-6.63107, 35.0587, -33.3233, 0.44", "-7.2565, 35.7315, -34.3714, 0.66", "-8.01537, 36.5931, -35.658, 0.22", "-8.51132, 37.1787, -36.4715, 0.37", "-8.97077, 37.7946, -37.2997, 0.37", "-9.31203, 38.2986, -37.8975, 0.29", "-9.72353, 38.9146, -38.6, 1.03", "-9.7549, 38.9662, -38.6511, 1.03", "-10.0055, 39.4658, -39.1162, 1.25", "-10.4917, 40.5833, -40.2077, 0.22", "-10.7572, 41.2158, -40.8856, 0.52", "-11.2652, 42.3208, -42.116, 0.22", "-11.4506, 42.6881, -42.5383, 0.22", "-11.729, 43.1756, -43.1522, 0.44", "-11.7735, 43.246, -43.2507, 0.44", "-12.127, 43.7099, -43.9087, 0.29", "-12.4139, 44.0283, -44.3358, 0.59", "-12.6525, 44.2846, -44.6318, 0.81", "-13.3821, 44.9966, -45.43, 0.59", "-13.4214, 45.0357, -45.4718, 0.59", "-13.9807, 45.6223, -46.0576, 0.29", "-14.7873, 46.5057, -46.897, 1.99", "-15.2749, 47.0526, -47.3903, 2.5", "-15.8452, 47.6989, -47.9471, 2.8", "-17.5477, 49.6133, -49.4707, 0.22", "-18.0078, 50.1213, -49.8574, 0.88", "-18.049, 50.1664, -49.8901, 0.88", "-18.4236, 50.5748, -50.1734, 0.66", "-18.9494, 51.1387, -50.5339, 0.22", "-19.3843, 51.6022, -50.8243, 0.22", "-19.9544, 52.1588, -51.1885, 0.22", "-20.5632, 52.7485, -51.6571, 1.03", "-20.9345, 53.1124, -51.9817, 1.55", "-21.171, 53.3476, -52.2117, 1.77", "-22.005, 54.2135, -53.1418, 0.22", "-22.5341, 54.8034, -53.8878, 0.22", "-23.0504, 55.3993, -54.7257, 1.69", "-23.3918, 55.7691, -55.2915, 2.21", "-23.4224, 55.8015, -55.345, 2.21", "-23.7237, 56.1188, -56.0488, 2.21", "-24.6521, 57.2121, -58.6617, 0.22", "-24.6676, 57.2343, -58.715, 0.22", "-24.9818, 57.7258, -59.9159, 1.55", "-25.1968, 58.0671, -60.7464, 2.36", "-26.4597, 60.0831, -65.6141, 0.29", "-26.7038, 60.4813, -66.519, 0.88", "-27.1002, 61.1997, -68.0151, 0.22", "-27.1165, 61.2321, -68.0745, 0.22", "-27.3082, 61.6596, -68.745, 0.22", "-27.3297, 61.7053, -68.8062, 0.22", "-27.8508, 62.7801, -69.9635, 2.36", "-28.0885, 63.2879, -70.5778, 2.73", "-29.0539, 65.4639, -73.3111, 0.22", "-29.2187, 65.8578, -73.8029, 0.88", "-29.3086, 66.096, -74.0921, 1.03", "-29.3252, 66.1389, -74.1439, 1.03", "-30.0058, 67.8315, -76.3849, 0.22", "-30.0223, 67.8711, -76.4395, 0.22", "-30.312, 68.682, -77.5304, 0.22", "-30.5629, 69.4917, -78.7036, 1.69", "-30.6936, 69.9296, -79.3517, 1.92", "-31.2562, 71.7912, -82.091, 0.66", "-31.4779, 72.5818, -83.2691, 0.29", "-31.696, 73.5072, -84.6553, 0.66", "-31.8988, 74.8317, -86.7256, 0.22", "-31.9459, 75.2821, -87.4315, 1.25", "-31.9702, 75.6878, -88.0314, 1.69", "-32.0342, 77.4731, -90.4182, 0.22", "-32.0524, 77.9247, -90.9853, 1.03", "-32.1071, 79.2772, -92.5627, 0.22", "-32.1067, 79.3332, -92.6184, 0.22", "-32.0798, 79.7063, -92.9616, 0.22", "-32.0093, 80.3488, -93.4966, 1.11", "-31.9535, 80.7552, -93.8172, 1.33", "-31.6546, 82.5199, -95.2857, 0.29", "-31.5586, 82.9267, -95.6832, 0.29", "-31.3388, 83.6709, -96.498, 0.88", "-31.267, 83.8771, -96.7804, 0.88", "-30.7986, 85.0995, -98.6601, 0.22", "-30.6024, 85.6262, -99.5677, 1.47", "-30.0852, 87.0959, -102.266, 0.29", "-30.0256, 87.2602, -102.588, 0.59", "-29.4835, 88.7581, -105.67, 0.37", "-29.3211, 89.217, -106.598, 1.18", "-29.0153, 90.2839, -108.804, 0.88", "-28.9763, 90.4656, -109.201, 1.03", "-28.7934, 91.3342, -111.158, 0.37", "-28.6078, 92.0656, -112.833, 1.33", "-28.5098, 92.3881, -113.555, 1.33", "-27.9875, 93.8738, -116.93, 1.03", "-27.7976, 94.3685, -118.011, 1.18", "-27.3276, 95.6165, -120.63, 0.22", "-27.2008, 96.0084, -121.406, 1.25", "-27.134, 96.223, -121.823, 1.4", "-26.8442, 97.2355, -123.885, 0.15", "-26.7619, 97.6848, -124.734, 0.81", "-26.7885, 97.9005, -125.192, 0.81", "-27.1645, 98.6463, -126.872, 0.29", "-27.4578, 99.0465, -127.809, 0.59", "-28.3711, 99.9235, -129.986, 1.25", "-28.9556, 100.359, -131.12, 1.4", "-30.6906, 101.469, -134.111, 0.15", "-31.355, 101.852, -135.147, 0.15", "-31.7352, 102.059, -135.698, 1.03", "-33.1773, 102.826, -137.657, 0.22", "-33.2186, 102.848, -137.709, 0.22", "-33.595, 103.042, -138.193, 1.03", "-33.8961, 103.201, -138.554, 1.25", "-35.8012, 104.24, -140.883, 0.15", "-36.1566, 104.449, -141.287, 0.66", "-36.2067, 104.482, -141.339, 0.66", "-36.4652, 104.665, -141.573, 0.88", "-37.7898, 105.583, -142.641, 0.22", "-38.2347, 105.878, -142.941, 0.22", "-38.9051, 106.307, -143.293, 1.11", "-39.3398, 106.587, -143.537, 1.47", "-39.6803, 106.82, -143.755, 1.47", "-41.3358, 108.072, -144.952, 0.22", "-41.73, 108.408, -145.263, 0.74", "-41.9184, 108.578, -145.418, 0.88", "-41.955, 108.615, -145.449, 0.88", "-42.8094, 109.458, -146.184, 0.22", "-43.3532, 110.018, -146.634, 0.22", "-43.8965, 110.624, -147.116, 0.52", "-44.2616, 111.027, -147.455, 1.18", "-45.0505, 111.835, -148.207, 0.22", "-45.9022, 112.572, -149.007, 0.88", "-46.2395, 112.822, -149.315, 1.03", "-47.5068, 113.647, -150.483, 0.22", "-48.0312, 113.932, -150.98, 0.22", "-49.0243, 114.391, -151.935, 1.11", "-50.4292, 114.902, -153.161, 0.15", "-50.7352, 114.995, -153.409, 0.59", "-50.9743, 115.057, -153.593, 0.59", "-52.4911, 115.391, -154.616, 0.22", "-52.632, 115.428, -154.722, 0.22", "-54.6454, 115.992, -156.201, 0.22", "-54.6917, 116.007, -156.236, 0.22", "-55.4847, 116.279, -156.849, 1.03", "-56.0844, 116.507, -157.315, 1.4", "-57.7537, 117.294, -158.545, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.98561, 34.4516, -32.0526, 0.29", "-5.62769, 35.1305, -32.5665, 0.29", "-5.2415, 36.0582, -33.2065, 1.69", "-5.12196, 36.456, -33.454, 2.36", "-4.91214, 37.326, -33.9619, 2.14", "-4.49543, 39.3223, -35.0802, 0.29", "-4.37933, 39.8694, -35.387, 0.44", "-4.26482, 40.6245, -35.8113, 0.44", "-4.1688, 41.4798, -36.2752, 0.22", "-4.13104, 41.7561, -36.4272, 0.22", "-4.12023, 41.8068, -36.4552, 0.22", "-3.86982, 42.5048, -36.9691, 0.37", "-3.81467, 42.614, -37.0716, 0.37", "-3.77012, 42.7018, -37.154, 0.37", "-3.53729, 43.2916, -37.6472, 0.37", "-3.34535, 43.9314, -38.1478, 0.22", "-2.98578, 45.3222, -39.1947, 2.06", "-2.78463, 46.1886, -39.8162, 2.73", "-2.39408, 47.9045, -40.9946, 0.22", "-2.13168, 48.9204, -41.6909, 0.22", "-1.80899, 49.9358, -42.3921, 0.22", "-1.57474, 50.518, -42.8037, 0.22", "-1.16128, 51.3986, -43.5106, 1.77", "-0.986189, 51.7428, -43.8051, 1.99", "-0.153144, 53.0694, -45.063, 0.22", "0.438245, 53.9003, -45.9015, 2.28", "0.885067, 54.5384, -46.5368, 2.5", "1.95624, 56.3, -48.2686, 0.44", "2.26938, 56.9063, -48.8703, 0.44", "2.74904, 58.0437, -49.976, 0.29", "2.76218, 58.0933, -50.0222, 0.29", "2.88129, 58.8563, -50.6821, 0.22", "3.06962, 60.2034, -51.7586, 1.69", "3.14395, 60.8477, -52.2331, 2.21", "3.16753, 61.0855, -52.4062, 2.21", "3.33243, 62.7034, -53.5039, 0.52", "3.53169, 63.5955, -54.0978, 0.22", "3.72349, 64.1176, -54.4275, 0.22", "3.76982, 64.212, -54.4811, 0.22", "4.28058, 65.1345, -54.9918, 1.62", "4.57138, 65.6126, -55.2592, 1.84", "5.22427, 66.5944, -55.8355, 0.22", "5.70408, 67.3437, -56.3523, 0.59", "5.78677, 67.4967, -56.4647, 0.81", "6.32939, 68.6051, -57.2572, 0.22", "6.71339, 69.4496, -57.8552, 1.84", "7.05849, 70.2073, -58.3872, 2.14", "7.49083, 71.0299, -58.9553, 1.62", "8.43011, 72.5624, -60.0068, 0.22", "9.0458, 73.4533, -60.5935, 0.22", "9.22973, 73.6861, -60.7304, 0.52", "9.61258, 74.0834, -60.9315, 0.52", "10.5264, 74.8634, -61.227, 0.22", "10.8408, 75.0696, -61.285, 0.81", "11.1183, 75.2036, -61.3151, 0.81", "11.6011, 75.4102, -61.3899, 0.44", "12.7305, 75.8997, -61.6242, 0.22", "12.8015, 75.9302, -61.6439, 0.22", "13.5514, 76.2456, -61.8904, 1.62", "14.1609, 76.4966, -62.1054, 2.28", "14.9667, 76.8224, -62.4113, 1.77", "15.916, 77.2051, -62.7957, 0.52", "16.7654, 77.5671, -63.1562, 0.22", "16.8339, 77.5973, -63.1836, 0.22", "17.2928, 77.7868, -63.3685, 0.22", "17.387, 77.8191, -63.4049, 0.22", "17.7241, 77.9018, -63.513, 0.22", "18.1319, 77.9496, -63.6417, 0.74", "18.8226, 78.041, -63.8586, 0.74", "20.1734, 78.2294, -64.2962, 0.22", "20.76, 78.3346, -64.4981, 0.74", "21.2547, 78.4423, -64.6878, 0.96", "22.7289, 78.788, -65.4119, 0.22", "23.5266, 78.9798, -65.8889, 0.22", "23.5837, 78.9941, -65.9266, 0.22", "24.5606, 79.2467, -66.6109, 1.47", "25.3047, 79.4188, -67.1366, 1.99", "26.5554, 79.6528, -67.9955, 1.33", "27.9813, 79.8471, -68.9147, 0.15", "28.4284, 79.8957, -69.1848, 0.29", "28.4976, 79.9034, -69.2241, 0.29", "29.3518, 79.9929, -69.6581, 0.29", "30.3276, 80.1405, -70.0697, 0.81", "30.7608, 80.2376, -70.2228, 0.81", "31.9357, 80.5871, -70.7095, 0.15", "31.9947, 80.6082, -70.7404, 0.15", "32.2966, 80.7273, -70.916, 0.15", "33.365, 81.1847, -71.5787, 1.33", "33.9958, 81.4622, -71.9784, 1.84", "34.8804, 81.8694, -72.5045, 1.62", "36.474, 82.6852, -73.3765, 0.22", "37.2009, 83.0998, -73.7494, 1.11", "37.6333, 83.3734, -73.9561, 1.33", "37.687, 83.4117, -73.9778, 1.33", "38.8968, 84.3376, -74.3379, 0.22", "39.4627, 84.8512, -74.5221, 0.81", "39.6672, 85.0832, -74.6124, 1.11", "39.6994, 85.1273, -74.6353, 1.11", "39.9927, 85.5798, -74.9281, 1.4", "40.1331, 85.8124, -75.0993, 1.4", "40.9948, 87.3654, -76.4186, 0.22", "41.0269, 87.4199, -76.4661, 0.22", "41.3669, 87.9675, -76.9202, 0.22", "41.4007, 88.0141, -76.9587, 0.22", "41.8797, 88.5623, -77.3506, 1.11", "42.1881, 88.8663, -77.52, 1.4", "42.3383, 88.9962, -77.5624, 1.4", "42.612, 89.2173, -77.6409, 1.4", "43.4347, 89.9046, -77.9002, 0.52", "44.3858, 90.7172, -78.2091, 0.81", "44.4363, 90.7614, -78.2264, 0.81", "45.0689, 91.3269, -78.4435, 0.81", "45.6906, 91.8946, -78.645, 0.22", "46.2941, 92.4403, -78.8178, 0.22", "46.8678, 92.9653, -78.9502, 0.22", "46.9269, 93.0162, -78.9635, 0.22", "47.5218, 93.5107, -79.1179, 1.03", "47.9599, 93.8553, -79.2345, 1.55", "48.4219, 94.2018, -79.3498, 1.77", "48.557, 94.2888, -79.384, 1.77", "48.9706, 94.5672, -79.5022, 1.69", "50.2151, 95.4373, -79.8699, 0.29", "50.7688, 95.9046, -80.0597, 0.52", "50.8418, 95.9751, -80.0869, 0.52", "52.0253, 97.2499, -80.5453, 0.22", "52.7703, 98.1469, -80.8336, 1.92", "53.1134, 98.6438, -80.9735, 2.21", "54.2233, 100.611, -81.4367, 0.15", "54.4363, 101.072, -81.5415, 0.81", "54.5677, 101.432, -81.6154, 1.4", "54.8132, 102.406, -81.7889, 0.66", "55.0749, 103.689, -81.9881, 0.22", "55.1396, 104.031, -82.0345, 0.59", "55.4011, 105.38, -82.1773, 0.29", "55.6314, 106.27, -82.2652, 0.44", "55.9803, 107.391, -82.3669, 0.22", "56.2926, 108.193, -82.4286, 1.4", "56.5707, 108.799, -82.4882, 1.99", "56.8657, 109.383, -82.5792, 1.55", "57.6533, 110.785, -82.8798, 0.22", "57.6922, 110.848, -82.9034, 0.22", "58.0526, 111.449, -83.2, 0.22", "58.6298, 112.464, -83.8114, 1.25", "58.9507, 113.115, -84.2501, 1.55", "59.1399, 113.566, -84.5878, 1.11", "59.5606, 114.73, -85.4929, 0.22", "59.6544, 114.999, -85.7045, 0.66", "59.6736, 115.059, -85.7519, 0.66", "59.7429, 115.285, -85.9132, 0.66", "59.9969, 116.231, -86.5234, 0.22", "60.149, 116.891, -86.9034, 0.22", "60.3452, 117.781, -87.3199, 0.22", "60.4367, 118.212, -87.5267, 0.22", "60.5276, 118.665, -87.7445, 0.81", "60.5981, 119.038, -87.9257, 1.11", "60.6927, 119.557, -88.1691, 0.96", "60.8752, 120.542, -88.6373, 0.22", "61.1108, 121.596, -89.1158, 0.22", "61.1249, 121.656, -89.1419, 0.22", "61.403, 122.77, -89.5774, 1.69", "61.5598, 123.335, -89.7373, 1.99", "61.5781, 123.391, -89.7393, 1.99", "62.1186, 124.783, -89.4022, 0.22", "62.4508, 125.527, -89.08, 0.22", "62.7367, 126.042, -88.7706, 0.52", "63.3589, 126.968, -88.0322, 0.29", "64.3301, 128.318, -86.7836, 0.29", "64.7341, 128.852, -86.256, 1.25", "64.9345, 129.096, -85.9894, 1.47", "65.8674, 130.187, -84.8473, 0.22", "66.4473, 130.868, -84.1712, 0.52", "66.9559, 131.469, -83.6576, 0.22", "67.3458, 131.958, -83.3387, 0.22", "67.3783, 132.001, -83.3134, 0.22", "67.7904, 132.607, -83.0352, 0.96", "67.9715, 132.921, -82.9518, 1.25", "68.2111, 133.333, -82.8828, 1.25", "68.8174, 134.318, -82.7564, 0.22", "68.8535, 134.376, -82.7485, 0.22", "69.3171, 135.135, -82.6763, 0.22", "69.7275, 135.842, -82.6745, 1.03", "69.8772, 136.107, -82.6917, 1.33", "69.916, 136.176, -82.7003, 1.33", "70.1502, 136.549, -82.8107, 0.96", "70.8368, 137.611, -83.2014, 0.22", "71.364, 138.396, -83.569, 0.88", "71.4004, 138.447, -83.5966, 0.88", "71.6712, 138.825, -83.8062, 1.03", "72.5214, 139.997, -84.4808, 0.22", "73.127, 140.812, -84.9771, 0.22", "73.677, 141.506, -85.4284, 1.25", "74.0787, 141.997, -85.7436, 1.62", "74.1228, 142.051, -85.779, 1.62" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "17.2974, 53.7848, -28.734, 0.22", "17.7802, 55.3793, -28.7802, 0.22", "17.9547, 55.972, -28.7891, 0.22", "18.2243, 56.8818, -28.7975, 1.62", "18.4286, 57.5335, -28.8015, 1.84", "18.5947, 58.0503, -28.8049, 2.06", "19.0402, 59.4542, -28.8146, 0.22", "19.2243, 60.0869, -28.7976, 0.22", "19.2452, 60.1622, -28.7961, 0.22", "19.3188, 60.4356, -28.796, 0.22", "19.4296, 60.9293, -28.798, 0.22", "19.4975, 61.3586, -28.8025, 0.22", "19.5481, 61.9251, -28.8358, 0.52", "19.5602, 62.0704, -28.8474, 0.52", "19.5719, 62.2157, -28.8603, 0.52", "19.6059, 62.6417, -28.8992, 0.52", "19.664, 63.2026, -28.9458, 0.52", "19.7485, 63.9197, -29.0015, 0.22", "19.8288, 64.5952, -29.0477, 0.22", "19.8361, 64.663, -29.0503, 0.22", "19.9013, 65.3069, -29.0604, 0.22", "19.9529, 66.0225, -29.0549, 0.81", "19.9658, 66.3799, -29.0507, 1.11", "19.9514, 66.9548, -29.0394, 1.11", "19.8734, 67.8988, -29.0316, 0.29", "19.8627, 67.9662, -29.0329, 0.29", "19.6802, 68.6873, -29.0653, 0.29", "19.3407, 69.734, -29.1333, 1.03", "19.1477, 70.2605, -29.1741, 1.55", "19.0156, 70.59, -29.2033, 1.77", "18.5876, 71.6029, -29.3044, 0.22", "18.2968, 72.3197, -29.3682, 0.22", "18.0681, 72.9292, -29.4123, 0.74", "17.9836, 73.2098, -29.4064, 0.74", "17.8744, 73.6939, -29.3664, 0.52", "17.816, 74.0375, -29.3219, 0.37", "17.7317, 74.672, -29.2225, 0.37", "17.6241, 75.4407, -29.1072, 0.29", "17.421, 76.743, -28.9846, 1.77", "17.2379, 77.7478, -28.9618, 2.28", "17.2241, 77.8147, -28.9638, 2.28", "17.0387, 78.6272, -29.0226, 2.28", "16.7724, 79.6216, -29.1381, 1.99", "16.4846, 80.5447, -29.3107, 1.55", "16.0203, 81.8549, -29.6425, 0.22", "15.8426, 82.3283, -29.7661, 0.29", "15.6646, 82.7631, -29.8732, 0.29", "15.349, 83.4435, -30.0204, 0.22", "14.9735, 84.0927, -30.1457, 0.22", "14.7383, 84.4378, -30.1931, 0.44", "14.5563, 84.6822, -30.2232, 0.44", "14.1235, 85.2819, -30.3057, 0.37", "13.5724, 86.0909, -30.415, 0.29", "13.1288, 86.7696, -30.4986, 0.22", "12.8058, 87.2841, -30.5431, 0.44", "12.6185, 87.5942, -30.5687, 0.44", "12.1774, 88.3487, -30.6253, 0.22", "11.687, 89.2229, -30.6417, 0.22", "11.446, 89.6757, -30.632, 0.22", "10.8097, 90.9006, -30.5655, 2.28", "10.5854, 91.3267, -30.5383, 3.02", "10.4205, 91.6421, -30.5136, 3.02", "9.49555, 93.5747, -30.267, 0.22", "9.41758, 93.7725, -30.2331, 0.29", "9.20598, 94.5044, -30.0881, 0.22", "9.07207, 95.1801, -29.9387, 0.66", "9.02162, 95.5924, -29.8466, 0.66", "8.94391, 96.8754, -29.5327, 0.22", "8.94989, 97.8435, -29.2857, 0.22", "8.94834, 98.6451, -29.0608, 0.29", "8.9505, 98.7107, -29.0416, 0.29", "8.98842, 99.8125, -28.7083, 0.29", "9.03122, 101.036, -28.3643, 0.96", "9.04503, 101.52, -28.2475, 1.33", "9.07311, 102.496, -28.0262, 0.22", "9.08905, 103.484, -27.8048, 0.22", "9.10134, 103.902, -27.7171, 0.22", "9.1305, 104.496, -27.6053, 0.81", "9.16758, 105.134, -27.5305, 1.11", "9.19983, 106.036, -27.4728, 0.22", "9.20714, 106.669, -27.4722, 0.22", "9.18568, 107.096, -27.4897, 0.44", "9.17059, 107.331, -27.5083, 0.44", "9.0729, 108.21, -27.629, 0.22", "8.99753, 108.792, -27.7565, 0.22", "8.99001, 108.848, -27.7718, 0.22", "8.87938, 109.658, -28.0598, 0.66", "8.81849, 110.061, -28.2119, 0.66", "8.70586, 110.764, -28.498, 0.22", "8.53702, 111.697, -28.8875, 1.11", "8.40844, 112.352, -29.1701, 1.25", "8.07546, 113.962, -29.9403, 0.22", "7.83753, 115.109, -30.5463, 0.22", "7.66689, 115.928, -31.0019, 1.03", "7.54428, 116.484, -31.3118, 1.55", "7.3777, 117.173, -31.6822, 1.69", "7.12587, 118.244, -32.243, 0.81", "6.91362, 119.273, -32.7212, 0.22", "6.90207, 119.343, -32.7527, 0.22", "6.81028, 120.29, -33.1349, 0.22", "6.75349, 121.298, -33.5396, 0.88", "6.74884, 122.094, -33.8536, 0.22", "6.76474, 122.766, -34.1084, 0.59", "6.82033, 124.042, -34.6079, 0.22", "6.90607, 125.376, -35.1598, 1.77", "6.97423, 126.309, -35.5826, 1.99", "7.0589, 127.618, -36.2148, 0.22", "7.06763, 127.941, -36.3716, 0.29", "7.06216, 128.604, -36.6967, 0.22", "7.02245, 129.189, -36.9719, 0.37", "6.93009, 129.732, -37.2166, 0.22", "6.91714, 129.786, -37.2382, 0.22", "6.79789, 130.158, -37.3941, 0.37", "6.68115, 130.465, -37.5221, 0.37", "6.4705, 130.991, -37.7238, 0.22", "6.15616, 131.771, -38.0013, 1.11", "6.01268, 132.163, -38.1273, 1.47", "5.69801, 133.042, -38.3706, 0.22", "5.33933, 134.074, -38.6475, 0.22", "5.10107, 134.723, -38.8492, 0.22", "5.08247, 134.775, -38.8688, 0.22", "4.86735, 135.34, -39.102, 0.22", "4.42606, 136.479, -39.6007, 1.92", "4.18373, 137.102, -39.8891, 1.77", "3.84841, 138.036, -40.3817, 1.47", "3.40993, 139.173, -41.0436, 0.22", "3.04844, 140.072, -41.6046, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "17.2974, 53.7848, -28.734, 0.15", "19.0414, 54.676, -28.6693, 0.15", "20.0154, 55.2207, -28.6405, 0.15", "20.6598, 55.6069, -28.6252, 0.37", "21.4527, 56.0865, -28.5995, 0.44", "22.5003, 56.6795, -28.5615, 0.81", "22.8804, 56.876, -28.5475, 1.03", "23.3392, 57.1281, -28.5281, 1.03", "23.9313, 57.4553, -28.501, 0.81", "24.7734, 57.8668, -28.4392, 0.22", "25.3426, 58.1249, -28.3853, 0.22", "26.2172, 58.5258, -28.3003, 0.29", "27.0611, 58.9074, -28.224, 0.29", "28.0722, 59.3808, -28.0979, 1.4", "28.6268, 59.6604, -28.0157, 1.99", "29.4212, 60.0983, -27.8857, 2.28", "31.3604, 61.2788, -27.5656, 0.29", "32.0973, 61.7493, -27.4466, 0.29", "32.8027, 62.2009, -27.3536, 0.81", "33.2685, 62.5024, -27.3326, 0.81", "33.6182, 62.7324, -27.3386, 0.81", "34.5049, 63.3024, -27.5111, 0.29", "35.1238, 63.7191, -27.7451, 0.29", "35.7544, 64.1704, -28.0504, 2.14", "36.6564, 64.8345, -28.5533, 2.95", "37.0267, 65.1213, -28.7805, 2.95", "38.6853, 66.5459, -29.8704, 0.22", "39.2139, 67.0633, -30.2411, 0.22", "39.5771, 67.4682, -30.5037, 0.81", "39.7396, 67.6755, -30.6155, 1.11", "40.1415, 68.2585, -30.8551, 0.66", "40.6326, 69.0419, -31.1077, 0.22", "40.9209, 69.5409, -31.205, 0.22", "41.1861, 69.9392, -31.2737, 0.37", "41.5512, 70.425, -31.3488, 0.37", "42.2906, 71.252, -31.4815, 0.88", "42.4522, 71.411, -31.5054, 1.33", "42.4952, 71.4515, -31.5117, 1.33", "42.8808, 71.7982, -31.5617, 1.18", "43.7791, 72.6321, -31.7033, 0.29", "44.4725, 73.3396, -31.8619, 1.03", "44.8709, 73.8005, -31.9838, 1.55", "45.2536, 74.3086, -32.1453, 2.28", "45.7118, 75.0138, -32.39, 1.4", "46.2706, 76.0822, -32.78, 0.22", "46.6909, 77.1435, -33.273, 0.22", "46.9122, 77.8017, -33.6457, 0.81", "47.1166, 78.5203, -34.0978, 1.55", "47.1945, 78.8668, -34.327, 1.92", "47.2792, 79.5219, -34.7714, 2.14", "47.4046, 81.1824, -35.8986, 1.11", "47.445, 82.2199, -36.566, 0.29", "47.4723, 83.1042, -37.1364, 0.22", "47.4823, 83.5887, -37.4481, 0.22", "47.5212, 84.7931, -38.2146, 1.55", "47.5429, 85.0449, -38.3624, 2.43", "47.7022, 86.0129, -38.8596, 2.87", "48.1435, 87.7502, -39.7534, 0.22", "48.1623, 87.7994, -39.7801, 0.22", "48.6216, 88.6861, -40.2816, 0.22", "49.267, 89.6546, -40.939, 0.22", "49.7626, 90.2889, -41.4544, 0.22", "50.2169, 90.7843, -41.9015, 1.77", "50.5069, 91.0766, -42.1623, 2.28", "51.2192, 91.7677, -42.7777, 2.28", "52.391, 92.8776, -43.7609, 1.69", "53.3115, 93.747, -44.511, 0.22", "54.0377, 94.4426, -45.0548, 0.22", "54.6498, 95.0246, -45.4466, 1.33", "55.1323, 95.4977, -45.7696, 1.62", "55.5763, 95.9592, -46.0801, 1.62", "55.872, 96.2846, -46.2879, 0.81", "56.6716, 97.2429, -46.9614, 0.29", "57.1255, 97.847, -47.4075, 0.22", "58.364, 99.6765, -48.7638, 1.99", "58.7407, 100.285, -49.197, 2.5", "58.9394, 100.628, -49.4342, 2.65", "59.7811, 102.197, -50.4402, 0.22", "60.1849, 102.958, -50.88, 0.22", "60.5892, 103.732, -51.2822, 0.88", "60.8987, 104.322, -51.5048, 1.47", "61.2128, 104.899, -51.7013, 1.69", "61.5128, 105.432, -51.8768, 0.96", "62.1158, 106.492, -52.1855, 0.22", "62.1502, 106.549, -52.2011, 0.22", "62.3886, 106.934, -52.2929, 0.22", "62.7694, 107.536, -52.4113, 0.88", "62.9991, 107.893, -52.4617, 0.88", "63.2762, 108.326, -52.5109, 0.44", "63.7797, 109.124, -52.567, 0.22", "63.989, 109.413, -52.5856, 0.22", "64.5605, 110.139, -52.6283, 1.11", "64.7623, 110.378, -52.6398, 1.47", "64.8532, 110.481, -52.6444, 1.47", "65.1633, 110.835, -52.6577, 1.47", "66.3142, 112.19, -52.8446, 0.22", "66.7827, 112.758, -52.9591, 0.22", "67.4032, 113.555, -53.1888, 1.25", "67.6726, 113.917, -53.3166, 1.92", "68.0126, 114.419, -53.5186, 1.92", "69.0495, 116.117, -54.3113, 0.22", "69.3087, 116.607, -54.5707, 0.22", "69.6547, 117.311, -54.9423, 0.22", "69.6995, 117.408, -54.9911, 0.22", "69.9318, 117.919, -55.2959, 0.22", "69.9845, 118.031, -55.3753, 0.22", "70.3805, 118.938, -56.0326, 0.22", "70.7766, 119.84, -56.717, 1.69", "70.9763, 120.279, -57.0684, 2.21", "71.7385, 121.925, -58.4281, 1.18", "72.0961, 122.68, -59.083, 0.29", "72.2798, 123.072, -59.4266, 0.29", "72.5824, 123.74, -60.0221, 0.22", "72.8922, 124.434, -60.6014, 1.18", "73.1333, 125.003, -61.017, 1.33", "73.1815, 125.124, -61.0857, 1.33", "73.7874, 126.6, -61.8635, 0.22", "73.9822, 127.027, -62.0867, 0.88", "74.217, 127.506, -62.3266, 1.33", "74.7695, 128.577, -62.8513, 0.22", "74.9574, 128.906, -63.0404, 0.29", "75.2642, 129.413, -63.3394, 0.22", "75.9616, 130.506, -63.9953, 1.62", "76.1781, 130.82, -64.1817, 1.99", "76.7122, 131.538, -64.6067, 1.55", "77.9971, 133.18, -65.5382, 0.22", "78.5267, 133.859, -65.9113, 0.22", "78.5713, 133.915, -65.9427, 0.22", "79.1416, 134.663, -66.3351, 0.22", "79.1856, 134.721, -66.3646, 0.22", "79.884, 135.693, -66.7871, 1.03", "80.28, 136.275, -67.0025, 1.11", "81.1405, 137.564, -67.4821, 0.22", "81.5702, 138.167, -67.7089, 0.22", "81.6094, 138.219, -67.7293, 0.22", "82.4191, 139.212, -68.1198, 1.55", "82.7932, 139.604, -68.2929, 2.36", "83.1487, 139.947, -68.457, 2.21", "84.7633, 141.447, -69.1725, 0.22", "84.804, 141.486, -69.1927, 0.22", "85.6296, 142.301, -69.6628, 0.59", "86.5373, 143.264, -70.2548, 0.22", "86.8873, 143.697, -70.5113, 0.44", "87.0627, 143.971, -70.6725, 0.59", "87.5411, 144.977, -71.2353, 0.22", "87.8585, 145.713, -71.6245, 1.18", "88.0695, 146.266, -71.8971, 1.55", "88.3007, 146.889, -72.1817, 1.62", "89.0504, 148.633, -72.9838, 0.22", "89.086, 148.697, -73.013, 0.22", "89.4546, 149.2, -73.2211, 0.22", "89.7252, 149.505, -73.3392, 0.44", "89.8726, 149.645, -73.3902, 0.44", "90.0786, 149.812, -73.4408, 0.44", "91.1178, 150.546, -73.5979, 0.22", "91.8098, 151.07, -73.7228, 1.03", "92.1652, 151.35, -73.7977, 1.55", "92.3673, 151.512, -73.8411, 1.92", "92.842, 151.908, -73.9436, 1.92", "93.4809, 152.456, -74.0797, 1.33", "94.8265, 153.648, -74.3651, 0.22", "95.8959, 154.587, -74.6215, 0.22", "96.612, 155.223, -74.7962, 0.74", "96.7196, 155.322, -74.8213, 0.74", "97.015, 155.603, -74.8849, 0.74", "97.0642, 155.65, -74.8941, 0.74", "98.1087, 156.695, -75.0739, 0.29", "99.0374, 157.708, -75.2147, 0.22", "99.8159, 158.598, -75.3232, 1.25", "100.146, 158.992, -75.3632, 1.92", "100.447, 159.37, -75.3888, 2.36", "100.724, 159.732, -75.3997, 2.43", "101.972, 161.452, -75.3774, 0.22", "102.43, 162.081, -75.3627, 0.88", "102.633, 162.355, -75.3535, 0.88", "103.287, 163.225, -75.316, 0.22", "103.665, 163.71, -75.2887, 0.88", "103.711, 163.762, -75.2842, 0.88", "103.986, 164.012, -75.2486, 1.25", "104.112, 164.113, -75.2341, 1.25", "104.195, 164.178, -75.227, 1.25", "104.251, 164.219, -75.2235, 1.25", "105.531, 165.027, -75.2439, 0.22", "106.186, 165.372, -75.2318, 0.22", "106.249, 165.402, -75.23, 0.22", "106.823, 165.654, -75.2082, 0.59", "107.19, 165.807, -75.1944, 0.59", "108.633, 166.363, -75.1406, 0.22", "109.964, 166.775, -75.0928, 1.25", "110.032, 166.792, -75.09, 1.25", "110.56, 166.906, -75.0629, 1.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "14.7851, 28.7118, -21.8804, 0.29", "16.2315, 29.8974, -21.2208, 0.29", "16.8319, 30.3351, -20.9892, 0.37", "17.755, 30.8822, -20.6385, 0.22", "18.3191, 31.1807, -20.422, 0.44", "18.3817, 31.208, -20.408, 0.44", "19.7099, 31.7163, -20.2489, 1.69", "19.7779, 31.7315, -20.2536, 1.69", "20.8699, 31.923, -20.4611, 1.92", "20.9371, 31.9322, -20.4783, 1.92", "22.96, 32.2737, -21.1017, 0.29", "23.4153, 32.3624, -21.2643, 0.74", "23.4871, 32.3783, -21.2955, 0.74", "24.631, 32.7009, -21.841, 0.22", "24.6898, 32.7234, -21.8714, 0.22", "25.172, 32.9468, -22.0845, 0.59", "25.2302, 32.9793, -22.1046, 0.59", "25.4088, 33.086, -22.1719, 0.59", "26.3124, 33.6596, -22.5148, 0.22", "26.8485, 34.0158, -22.7224, 0.88", "27.7488, 34.6135, -23.0697, 0.22", "27.8433, 34.6764, -23.1058, 0.22", "28.4008, 35.0523, -23.3076, 0.66", "28.7719, 35.3057, -23.4329, 0.66", "29.7983, 35.9713, -23.7002, 0.22", "30.0604, 36.1252, -23.7565, 0.44", "30.2903, 36.2515, -23.7923, 0.44", "30.6408, 36.4338, -23.8318, 0.44", "30.729, 36.4771, -23.8396, 0.44", "31.7162, 36.9366, -23.9079, 0.37", "32.7066, 37.3679, -23.9357, 1.99", "33.1916, 37.5685, -23.9504, 2.73", "33.8386, 37.8255, -23.9717, 2.73" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.7851, 28.7118, -21.8804, 0.22", "14.9684, 30.8135, -21.927, 0.22", "15.1231, 31.9287, -22.0071, 1.33", "15.2281, 32.5614, -22.0652, 1.62", "15.4797, 33.6692, -22.2647, 1.99", "15.9588, 35.5208, -22.7226, 0.22", "16.2564, 36.5088, -23.0004, 0.22", "16.6497, 37.5022, -23.3899, 0.96", "16.8547, 37.9453, -23.5743, 1.47", "17.8058, 39.7259, -24.3641, 0.22", "18.3615, 40.64, -24.7985, 1.84", "18.8598, 41.3635, -25.1408, 1.99", "19.8216, 42.6891, -25.7469, 0.29", "20.3308, 43.3548, -26.0068, 0.52", "20.7864, 43.9455, -26.1845, 0.29", "20.8252, 44.0019, -26.1906, 0.29", "21.3639, 44.893, -26.217, 0.29", "21.4044, 44.9811, -26.2161, 0.29", "21.6973, 45.8392, -26.1535, 0.22", "21.8644, 46.423, -26.1098, 0.22", "22.2587, 47.9594, -25.9987, 2.36", "22.4626, 48.6563, -25.9453, 2.73", "22.731, 49.4707, -25.876, 2.58", "23.1148, 50.4585, -25.7842, 1.25", "23.6588, 51.65, -25.6607, 0.22", "23.7849, 51.8773, -25.6356, 0.22", "24.3698, 52.6982, -25.5366, 0.22", "24.8481, 53.2789, -25.4594, 0.66", "25.136, 53.5884, -25.4187, 0.96", "25.1835, 53.6382, -25.4122, 0.96", "25.5847, 54.1067, -25.3413, 0.66", "26.2044, 54.9275, -25.2198, 0.22", "26.257, 55.0091, -25.2166, 0.22", "26.6976, 55.6509, -25.259, 0.22", "27.183, 56.3321, -25.3518, 1.25", "27.51, 56.7624, -25.4343, 1.62", "27.8189, 57.1616, -25.5378, 1.84", "28.6248, 58.2009, -25.867, 0.81", "29.3433, 59.2038, -26.195, 0.22", "29.4561, 59.3749, -26.2541, 0.22", "29.8454, 60.0507, -26.4834, 0.22", "30.17, 60.8081, -26.6991, 0.15", "30.2483, 61.0749, -26.7546, 0.15", "30.3732, 61.7942, -26.8672, 0.15", "30.3985, 62.0721, -26.9144, 0.15", "30.4457, 62.7018, -27.0418, 0.15", "30.5253, 64.007, -27.3346, 1.55", "30.5627, 64.5693, -27.4652, 1.92", "30.701, 66.1506, -27.8588, 0.22", "30.709, 66.2161, -27.8766, 0.22", "30.8183, 67.05, -28.1196, 0.22", "30.9078, 67.6614, -28.3177, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "11.5883, 56.2426, -8.33618, 0.29", "10.0201, 58.0902, -8.54998, 0.29", "9.16692, 59.1215, -8.62845, 0.29", "8.4151, 60.0874, -8.6754, 0.29", "7.83465, 60.9279, -8.69547, 0.52", "7.20378, 61.913, -8.70855, 0.22", "6.77213, 62.6647, -8.71223, 0.22", "6.74526, 62.7273, -8.70447, 0.22", "6.57341, 63.345, -8.63608, 0.22", "6.48479, 64.2943, -8.62921, 0.22", "6.4856, 64.3623, -8.63514, 0.22", "6.5389, 65.1454, -8.75566, 1.77", "6.5755, 65.616, -8.84355, 2.06", "6.64955, 66.6388, -9.05536, 1.18", "6.74295, 68.0264, -9.36862, 0.22", "6.77759, 68.7923, -9.56523, 0.22", "6.79107, 69.4959, -9.75083, 0.22", "6.78642, 70.6437, -10.0695, 1.55", "6.76999, 71.1422, -10.2081, 1.84", "6.76439, 71.1983, -10.2241, 1.84", "6.56825, 72.311, -10.5106, 0.37", "6.39981, 72.9609, -10.6949, 0.22", "6.37185, 73.0309, -10.7163, 0.22", "6.16756, 73.4259, -10.8335, 0.52", "5.89493, 73.95, -10.9855, 0.59", "5.62608, 74.4855, -11.1491, 0.59", "5.60101, 74.5363, -11.165, 0.59", "5.29038, 75.2572, -11.4046, 0.22", "5.14075, 75.6434, -11.5241, 0.22", "4.99221, 76.0742, -11.6589, 0.22", "4.86209, 76.5637, -11.7956, 0.22", "4.7466, 77.1848, -11.9794, 0.88", "4.67855, 77.6676, -12.1389, 1.03", "4.61827, 78.2589, -12.3734, 0.66", "4.53451, 79.2836, -12.7951, 0.22", "4.47601, 80.1227, -13.142, 0.22", "4.42642, 81.2473, -13.5968, 1.47", "4.41421, 81.9802, -13.8881, 1.84", "4.40491, 83.5474, -14.4969, 0.22", "4.38842, 84.437, -14.8406, 0.22", "4.37979, 84.5746, -14.8908, 0.22", "4.2902, 85.174, -15.0943, 0.22", "4.02493, 86.3382, -15.4533, 1.55", "3.90604, 86.7514, -15.5702, 1.92", "3.38882, 88.2628, -15.9919, 0.29", "3.13923, 88.9086, -16.1913, 0.29", "2.85303, 89.6684, -16.4766, 0.29", "2.52247, 90.5718, -16.867, 0.81", "2.5016, 90.6309, -16.8952, 0.81", "2.35697, 91.0622, -17.1094, 1.11", "2.34028, 91.1107, -17.1384, 1.11", "2.01114, 92.1033, -18.1845, 0.29", "1.82289, 92.626, -18.8791, 0.29", "1.78569, 92.7198, -19.0143, 0.29", "1.61294, 93.1471, -19.6063, 0.29", "1.20824, 94.1226, -20.9027, 0.96", "0.561885, 96.0414, -23.3081, 0.22", "0.424835, 96.5042, -23.872, 0.22", "0.358776, 96.7886, -24.2045, 0.22", "0.187758, 97.8213, -25.2902, 1.99", "0.112852, 98.6467, -26.0243, 2.95", "-0.00989142, 100.439, -27.266, 0.37", "-0.0140856, 100.492, -27.2935, 0.37", "-0.074489, 101.057, -27.6031, 0.59", "-0.176685, 101.671, -27.959, 0.74", "-0.345818, 102.34, -28.3596, 0.88", "-0.831004, 103.604, -29.0982, 0.22", "-0.861767, 103.656, -29.1298, 0.22", "-1.23629, 104.255, -29.533, 0.22", "-1.54615, 104.699, -29.8559, 0.66", "-1.74246, 104.971, -30.0513, 0.66", "-1.7766, 105.02, -30.0857, 0.66", "-2.27503, 105.831, -30.572, 0.22", "-2.84172, 106.826, -31.1216, 1.18", "-3.06892, 107.275, -31.3613, 1.33", "-3.41798, 108.01, -31.7449, 0.81", "-3.78226, 108.833, -32.1798, 0.44", "-3.97454, 109.287, -32.4133, 0.59", "-4.13995, 109.695, -32.6148, 0.59", "-4.58898, 110.863, -33.2698, 0.22", "-5.05055, 112.064, -33.9675, 1.69", "-5.34399, 112.874, -34.4552, 2.73", "-5.61926, 113.654, -34.9322, 2.73", "-5.63865, 113.71, -34.9672, 2.73", "-6.41469, 115.805, -36.3004, 0.52", "-6.82057, 116.856, -36.9276, 0.96", "-7.29252, 118.076, -37.602, 0.22", "-7.50383, 118.639, -37.8842, 0.52", "-7.58888, 118.887, -37.9951, 0.52", "-7.92956, 119.96, -38.3811, 0.29", "-8.13973, 120.803, -38.5337, 0.22", "-8.27935, 121.507, -38.6197, 0.81", "-8.33383, 121.852, -38.6526, 0.81", "-8.3526, 121.995, -38.6698, 0.81", "-8.37469, 122.272, -38.7261, 0.81", "-8.36398, 123.257, -39.1248, 0.29", "-8.32234, 124.218, -39.6306, 0.29", "-8.23991, 125.303, -40.2528, 1.92", "-8.18843, 125.826, -40.5667, 2.36", "-8.04694, 126.975, -41.2791, 2.06", "-7.68045, 129.186, -42.8095, 0.29", "-7.58352, 129.652, -43.1582, 0.74", "-7.48533, 130.077, -43.5021, 0.96", "-7.4513, 130.245, -43.6354, 0.96", "-7.42811, 130.404, -43.7567, 0.96", "-7.4289, 131.646, -44.6279, 0.37", "-7.53382, 132.314, -45.0334, 0.22", "-7.62877, 132.745, -45.2904, 0.22", "-7.85212, 133.779, -45.8416, 1.62", "-7.96348, 134.45, -46.1623, 1.92", "-8.13068, 135.691, -46.685, 0.59", "-8.2067, 136.632, -47.0059, 0.22", "-8.1824, 137.195, -47.1947, 0.74", "-8.04804, 138.208, -47.5077, 0.29", "-7.90264, 139.021, -47.7123, 0.81", "-7.88983, 139.088, -47.7248, 0.81", "-7.79793, 139.579, -47.8324, 0.81", "-7.64966, 140.451, -48.0758, 0.22", "-7.54939, 141.342, -48.3465, 0.22", "-7.47615, 142.812, -48.7855, 1.4", "-7.46858, 143.514, -48.9796, 1.99", "-7.47421, 145.269, -49.4397, 0.29", "-7.48194, 145.693, -49.5433, 0.29", "-7.49631, 146.542, -49.7395, 0.22", "-7.47207, 147.279, -49.9118, 0.81", "-7.462, 147.553, -49.9764, 1.03", "-7.46124, 147.76, -50.036, 1.03", "-7.4746, 148.195, -50.1669, 0.74", "-7.50559, 149.185, -50.5154, 0.22", "-7.47083, 149.982, -50.7927, 1.11", "-7.43647, 150.352, -50.9141, 1.47", "-7.23523, 151.857, -51.344, 0.29", "-7.13162, 152.49, -51.503, 0.29", "-6.93563, 153.404, -51.6822, 0.22", "-6.53556, 154.935, -51.8761, 1.62", "-6.36596, 155.503, -51.9077, 1.77", "-6.1314, 156.264, -51.9036, 1.25", "-6.10967, 156.339, -51.8959, 1.25", "-5.80308, 157.635, -51.734, 0.29", "-5.69983, 158.402, -51.6439, 0.29", "-5.66789, 159.335, -51.5477, 0.81", "-5.6785, 160.135, -51.4712, 0.88", "-5.73038, 161.025, -51.4332, 0.29", "-5.79568, 161.729, -51.4361, 0.29", "-5.97991, 162.997, -51.505, 1.62", "-6.05475, 163.486, -51.5551, 2.06", "-6.13172, 163.986, -51.6324, 2.06", "-6.26323, 165.232, -51.8672, 0.44", "-6.28806, 165.717, -51.976, 0.29", "-6.26561, 166.365, -52.1012, 0.29", "-6.16842, 167.133, -52.1908, 0.22", "-6.14831, 167.243, -52.1952, 0.22", "-6.0057, 167.883, -52.1573, 0.22", "-5.99266, 167.958, -52.1436, 0.22", "-5.89599, 168.902, -51.9729, 0.22", "-5.857, 169.775, -51.8177, 0.52", "-5.88608, 170.285, -51.7385, 0.59", "-5.94412, 170.734, -51.6806, 0.59", "-6.1271, 171.807, -51.5775, 0.29", "-6.20395, 172.454, -51.5435, 0.88", "-6.21175, 172.533, -51.5427, 0.88", "-6.22229, 173.169, -51.5421, 1.11", "-6.20988, 173.452, -51.5429, 1.33", "-6.14061, 174.202, -51.5475, 1.03", "-5.96662, 175.503, -51.5596, 0.29", "-5.95645, 175.57, -51.5604, 0.29", "-5.76335, 176.695, -51.5721, 0.29", "-5.74895, 176.762, -51.5734, 0.29", "-5.4646, 177.949, -51.6048, 0.29", "-5.26377, 178.665, -51.6278, 0.81", "-5.0328, 179.331, -51.6513, 1.03", "-5.00162, 179.402, -51.6555, 1.03", "-4.54299, 180.294, -51.7362, 1.69", "-4.33878, 180.661, -51.7759, 1.69", "-3.87966, 181.4, -51.9157, 1.92", "-3.47412, 182.029, -52.0746, 1.25", "-2.83309, 182.991, -52.4211, 0.96", "-2.5649, 183.385, -52.8168, 0.74", "-2.54394, 183.419, -52.8614, 0.74", "-2.1175, 184.143, -53.936, 0.22", "-2.08887, 184.195, -54.0159, 0.22", "-1.65665, 185.085, -55.3664, 2.06", "-0.29908, 188.146, -59.8912, 0.22", "-0.106158, 188.62, -60.5464, 1.25", "0.00690338, 188.951, -60.9727, 1.62", "0.250304, 189.822, -62.0866, 0.22", "0.488943, 190.756, -63.2012, 1.47", "0.54827, 191.016, -63.4912, 2.06", "0.717694, 191.838, -64.2665, 2.8", "0.872651, 192.674, -65.0642, 2.95", "1.3771, 196.249, -68.481, 0.59", "1.47638, 197.311, -69.4849, 0.22", "1.48068, 197.361, -69.5315, 0.22", "1.52852, 198.195, -70.2556, 0.37", "1.54082, 198.993, -70.8533, 0.37", "1.53582, 199.723, -71.2709, 0.22", "1.52531, 200.255, -71.4891, 0.22", "1.57908, 201.049, -71.8809, 0.22", "1.75627, 201.926, -72.3497, 0.22", "2.15442, 203.187, -73.0875, 1.92", "2.27644, 203.507, -73.2792, 2.06", "2.86995, 205.089, -74.1991, 0.37", "3.02695, 205.615, -74.4945, 0.88", "3.03945, 206.161, -74.7662, 0.88", "2.88467, 206.868, -75.05, 0.29", "2.72668, 207.508, -75.3807, 0.44", "2.54495, 208.228, -75.7611, 0.22", "2.39798, 208.809, -76.0713, 0.22", "2.15841, 210.06, -76.7885, 1.92", "2.10258, 210.674, -77.1602, 2.14", "2.16109, 212.891, -78.4985, 0.22", "2.23687, 213.574, -78.9081, 0.22", "2.35675, 214.238, -79.3019, 0.96", "2.43132, 214.56, -79.49, 1.11", "2.78984, 215.745, -80.1029, 0.22", "3.02985, 216.383, -80.3729, 0.52", "3.05331, 216.436, -80.3836, 0.52", "3.1439, 216.635, -80.4292, 0.52", "3.17239, 216.695, -80.445, 0.52", "3.70525, 217.835, -80.7723, 0.22", "4.11785, 218.708, -81.0322, 0.52", "4.38397, 219.269, -81.2134, 0.52", "5.10057, 220.809, -81.7804, 1.11", "5.74123, 222.199, -82.3473, 0.15", "5.87735, 222.505, -82.4844, 0.88", "5.90188, 222.562, -82.5127, 0.88", "6.03132, 222.868, -82.6658, 0.88", "6.6682, 224.191, -83.2941, 0.22", "7.15606, 225.133, -83.6791, 0.22", "7.18017, 225.182, -83.6986, 0.22", "7.56721, 226.044, -84.0162, 1.03", "7.72592, 226.408, -84.1467, 1.33", "8.22256, 227.598, -84.5494, 0.22", "8.48224, 228.266, -84.7335, 0.22", "8.50157, 228.32, -84.7472, 0.22", "8.88369, 229.428, -85.0198, 1.4" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.5883, 56.2426, -8.33618, 0.29", "11.7279, 58.2559, -7.44143, 0.29", "11.8056, 59.5603, -6.83175, 0.29", "11.8197, 59.6766, -6.78193, 0.29", "11.977, 60.7102, -6.35883, 0.29", "11.9958, 60.8063, -6.32371, 0.29", "12.1559, 61.5325, -6.07943, 0.29", "12.4042, 62.6111, -5.80742, 0.29", "12.7191, 63.989, -5.49543, 0.29", "12.7377, 64.0887, -5.47346, 0.29", "12.851, 64.8663, -5.31215, 0.29", "12.8625, 65.0088, -5.28025, 0.29", "12.8421, 65.9787, -5.05834, 0.29", "12.6936, 67.1334, -4.81115, 1.18", "12.4945, 68.1204, -4.59636, 2.14", "12.4189, 68.4655, -4.52463, 2.43", "12.2959, 69.0258, -4.4054, 2.43", "12.0789, 70.1666, -4.18715, 0.59", "11.9865, 70.7471, -4.09987, 0.29", "11.8805, 71.3494, -4.05338, 0.29", "11.8597, 71.4736, -4.03805, 0.29", "11.7044, 72.5248, -3.83475, 0.29", "11.6956, 72.5903, -3.81723, 0.29", "11.6154, 73.3136, -3.56018, 0.29", "11.5294, 74.1662, -3.2454, 0.29", "11.4091, 75.4125, -2.80055, 0.15", "11.3961, 75.5405, -2.75382, 0.15", "11.3031, 76.3452, -2.48545, 0.15", "11.1506, 77.573, -2.10218, 0.81", "10.979, 78.5856, -1.81044, 1.4", "10.8406, 79.2649, -1.64221, 1.99", "10.6427, 80.0247, -1.4956, 2.21", "10.2607, 81.3366, -1.25115, 0.29", "10.0341, 82.0245, -1.13865, 0.22", "9.6849, 82.9343, -1.02459, 0.22", "9.51476, 83.3356, -0.98447, 0.22", "9.45269, 83.4686, -0.97711, 0.22", "9.13983, 84.1151, -0.96088, 0.22", "8.67026, 85.0501, -0.92639, 1.11", "8.51168, 85.378, -0.913, 1.18", "8.30579, 85.8503, -0.88832, 0.88", "7.93625, 86.7456, -0.84256, 0.52", "7.60612, 87.6193, -0.798382, 0.29", "7.33748, 88.4195, -0.778691, 0.29", "7.30411, 88.5521, -0.778883, 0.29", "7.19538, 89.2577, -0.82495, 0.22", "7.11905, 90.1288, -0.92409, 0.96", "7.0979, 90.5525, -0.98994, 0.96", "7.04703, 91.3041, -1.15878, 0.44", "6.94201, 92.1295, -1.37482, 0.29", "6.68958, 93.3671, -1.7178, 1.84", "6.57037, 93.7876, -1.84399, 2.14", "6.39398, 94.3458, -2.01932, 1.92", "5.93498, 95.8254, -2.48119, 0.29", "5.65185, 96.737, -2.75828, 0.29", "5.46558, 97.384, -2.97075, 0.29", "5.31285, 98.1023, -3.21965, 0.22", "5.23216, 98.9696, -3.53298, 1.03", "5.27401, 99.6275, -3.79373, 1.03", "5.28511, 99.6905, -3.81835, 1.03", "5.44623, 100.494, -4.17509, 1.18", "5.63787, 101.587, -4.68152, 1.92", "5.71324, 102.329, -5.02631, 2.21", "5.69652, 103.749, -5.66597, 0.29", "5.59291, 104.609, -6.03694, 0.29", "5.27758, 106.085, -6.62515, 1.18", "5.08326, 106.701, -6.84394, 1.33", "4.62209, 107.766, -7.23432, 0.29", "4.10456, 108.762, -7.60691, 0.29", "3.48268, 109.85, -7.99782, 1.03", "3.15188, 110.452, -8.22155, 1.25", "2.89865, 110.945, -8.39772, 1.4", "2.15711, 112.529, -9.00552, 0.22", "2.1286, 112.596, -9.03215, 0.22", "1.8448, 113.449, -9.34541, 0.22", "1.50219, 114.753, -9.72867, 2.36", "1.48786, 114.827, -9.74656, 2.36", "1.40683, 115.447, -9.85017, 2.8", "1.35334, 116.089, -9.86487, 2.65", "1.1967, 117.885, -9.80103, 0.29", "1.11637, 118.746, -9.71786, 0.22", "1.05864, 119.314, -9.64615, 0.22", "0.990775, 119.94, -9.56896, 0.22", "0.762632, 121.639, -9.36648, 1.84", "0.688746, 122.05, -9.31883, 2.43", "0.590903, 122.464, -9.27331, 2.58", "0.0614171, 124.301, -9.09516, 0.22", "0.0291151, 124.399, -9.08588, 0.22", "-0.299781, 125.369, -9.00436, 0.22", "-0.703185, 126.589, -8.9266, 1.77", "-0.808562, 126.93, -8.90152, 2.21", "-1.33447, 128.779, -8.74845, 0.29", "-1.48133, 129.422, -8.70152, 0.29", "-1.62667, 130.271, -8.65973, 0.29", "-1.72666, 131.262, -8.63962, 1.18", "-1.76454, 131.906, -8.63901, 1.47", "-1.78983, 132.617, -8.64866, 1.11", "-1.78141, 133.721, -8.69661, 0.22", "-1.78242, 133.921, -8.6944, 0.22", "-1.80861, 134.846, -8.63483, 0.74", "-1.83985, 135.32, -8.57543, 0.52", "-1.91397, 136.255, -8.32314, 0.29", "-1.92033, 136.32, -8.30241, 0.29", "-2.1018, 137.87, -7.75352, 1.99", "-2.13533, 138.154, -7.65504, 2.73", "-2.25269, 139.243, -7.25503, 2.43", "-2.46007, 141.451, -6.45825, 0.29", "-2.54424, 142.523, -6.07769, 0.22", "-2.54991, 142.588, -6.05685, 0.22", "-2.61561, 143.24, -5.87742, 0.22", "-2.71872, 144.09, -5.67991, 0.88", "-2.78851, 144.661, -5.59225, 1.18", "-2.93279, 145.801, -5.5401, 0.29", "-2.98802, 146.348, -5.52082, 0.22", "-3.02569, 146.799, -5.52639, 0.37", "-3.07204, 147.443, -5.56887, 0.37", "-3.14652, 148.385, -5.68987, 0.29", "-3.15252, 148.452, -5.69421, 0.29", "-3.19514, 148.98, -5.61735, 0.29", "-3.24271, 149.678, -5.37531, 0.59", "-3.2519, 149.771, -5.32742, 0.59", "-3.30021, 150.212, -5.05774, 0.59", "-3.42338, 151.249, -4.38783, 0.22", "-3.61165, 153.016, -3.26627, 2.5", "-3.70889, 154.051, -2.62858, 1.99", "-3.85883, 155.885, -1.5413, 0.22", "-3.92977, 156.999, -0.92691, 1.62", "-3.96196, 157.583, -0.637267, 2.28", "-4.05678, 159.008, -0.0502847, 0.22", "-4.12511, 159.783, 0.186361, 0.74", "-4.14402, 160.036, 0.238813, 0.74", "-4.18676, 160.943, 0.345563, 0.22", "-4.2135, 161.648, 0.405434, 0.66", "-4.21003, 162.258, 0.481604, 0.66", "-4.1774, 163.068, 0.605699, 0.29", "-4.15523, 163.885, 0.746478, 0.37", "-4.1642, 164.338, 0.822492, 0.22", "-4.22375, 164.975, 0.918862, 0.22", "-4.40244, 166.452, 1.12006, 1.92", "-4.47264, 166.941, 1.17783, 2.65", "-4.75003, 168.456, 1.32311, 0.29", "-4.92982, 169.294, 1.36032, 0.29", "-5.16591, 170.331, 1.35818, 0.29", "-5.32902, 170.999, 1.31906, 0.29", "-5.46724, 171.551, 1.26665, 1.03", "-5.64929, 172.331, 1.20398, 1.4", "-5.85912, 173.404, 1.15739, 0.29", "-5.87268, 173.48, 1.15741, 0.29", "-6.04703, 174.299, 1.20744, 0.29", "-6.35174, 175.249, 1.31929, 0.66", "-6.60202, 175.859, 1.41537, 1.11", "-6.89512, 176.469, 1.53722, 1.25", "-7.20826, 177.098, 1.72966, 0.81", "-7.51847, 177.766, 1.95158, 0.29", "-7.78655, 178.382, 2.17367, 0.29", "-8.0741, 179.083, 2.43921, 0.29", "-8.09605, 179.141, 2.46488, 0.29", "-8.47783, 180.23, 2.96022, 0.22", "-8.70241, 180.922, 3.31213, 0.22", "-8.7156, 180.973, 3.33964, 0.22", "-8.93639, 182.031, 3.97469, 1.03", "-9.0615, 182.654, 4.36892, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "6.21943, -49.1911, 6.74036, 0.29", "6.96737, -51.3248, 7.61845, 0.29", "7.33491, -52.5454, 8.1527, 0.29", "7.52979, -53.4284, 8.60293, 0.66", "7.74888, -54.6867, 9.28147, 0.44", "7.8384, -55.4175, 9.68181, 0.81", "7.86723, -55.7973, 9.88439, 1.18", "7.87657, -57.0135, 10.5162, 1.03", "7.72345, -58.2327, 11.1855, 0.44", "7.67023, -58.4907, 11.3356, 1.03", "7.57796, -58.9132, 11.621, 0.59", "7.43438, -59.5476, 12.1052, 0.37" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "6.21943, -49.1911, 6.74036, 0.96", "7.29501, -53.3351, 2.66699, 0.96", "7.40257, -53.7607, 2.285, 1.25", "7.65126, -54.7994, 1.43998, 1.25", "8.02539, -56.5069, 0.195459, 0.44", "8.28707, -57.8333, -0.647169, 0.44", "8.36255, -58.2442, -0.87794, 1.55", "8.45977, -58.896, -1.04412, 1.77", "8.54987, -59.664, -1.20991, 1.47", "8.60131, -60.5811, -1.3517, 0.81", "8.62696, -61.8485, -1.52666, 0.52", "8.66588, -62.5669, -1.6314, 0.88", "8.74083, -63.0566, -1.73477, 1.25", "8.96463, -63.8798, -1.97933, 1.03", "9.57284, -65.0439, -2.44583, 0.37", "10.5084, -66.3283, -3.05057, 0.66", "10.9553, -66.829, -3.31444, 1.25", "11.8076, -67.7159, -3.78954, 1.84", "12.4277, -68.333, -4.11199, 1.99", "13.8682, -69.6793, -4.78351, 0.29", "14.4346, -70.2068, -5.00474, 0.29", "14.5034, -70.2835, -5.02419, 0.29", "14.9237, -70.9112, -5.18479, 0.29", "15.2033, -71.4999, -5.35744, 1.18", "15.2235, -71.5524, -5.37441, 1.18", "15.3648, -71.9532, -5.53015, 1.62", "15.5587, -72.4347, -5.75151, 1.62", "16.2041, -73.9363, -6.53485, 0.37", "16.7113, -75.1055, -7.17436, 1.99", "16.9553, -75.6924, -7.50199, 2.65", "17.2925, -76.5831, -7.99349, 2.65", "17.6354, -77.5771, -8.53953, 2.06", "18.0991, -79.0653, -9.34397, 0.52", "18.3593, -79.9526, -9.77636, 0.29", "18.3979, -80.0953, -9.84327, 0.29", "18.5472, -80.6506, -10.1358, 0.29", "18.5612, -80.7084, -10.1703, 0.29", "18.76, -81.4403, -10.639, 0.29", "18.971, -82.1006, -11.1143, 1.69", "19.3029, -82.9992, -11.8021, 2.06", "19.7177, -84.1431, -12.6913, 1.92", "20.1406, -85.517, -13.7615, 0.44", "20.3027, -86.2068, -14.2719, 0.37", "20.4587, -87.3896, -15.1609, 0.52", "20.4923, -87.7637, -15.4278, 0.52", "20.5437, -88.5526, -15.9404, 0.22", "20.6031, -89.626, -16.5561, 2.14", "20.6419, -90.394, -16.9463, 2.87", "20.7461, -92.9012, -18.1886, 0.81", "20.8165, -94.2307, -18.8207, 0.29", "20.8216, -94.2917, -18.8515, 0.29", "20.9223, -95.1937, -19.3313, 0.29", "21.052, -96.1963, -19.8785, 0.29", "21.1732, -97.0953, -20.3779, 1.77", "21.2894, -97.8377, -20.779, 2.5", "21.5728, -99.4886, -21.7592, 0.52", "21.7577, -100.346, -22.2762, 0.22", "21.9105, -100.877, -22.6026, 0.22", "22.1128, -101.347, -22.8758, 0.22", "22.49, -102.054, -23.1896, 0.96", "22.8056, -102.55, -23.3575, 1.25", "23.118, -102.993, -23.4537, 1.25", "23.5607, -103.599, -23.5722, 0.66", "24.166, -104.442, -23.7391, 0.29", "24.7324, -105.252, -23.9221, 0.29", "24.7717, -105.308, -23.9335, 0.29", "25.4178, -106.213, -24.1075, 0.29", "26.144, -107.191, -24.36, 2.06", "26.5636, -107.751, -24.5244, 3.02", "27.2804, -108.669, -24.958, 3.17", "28.4146, -110.111, -25.9152, 0.29", "29.0686, -110.957, -26.585, 0.29", "29.9602, -112.188, -27.7223, 1.4", "30.1113, -112.422, -27.9555, 1.4", "31.2479, -114.571, -30.2939, 0.29", "31.7416, -115.612, -31.4944, 0.29", "31.7579, -115.648, -31.5388, 0.29", "32.2158, -116.61, -32.7027, 2.36", "32.5954, -117.396, -33.5593, 2.8", "33.7127, -119.58, -35.7443, 0.52", "34.1938, -120.522, -36.5076, 0.44", "34.3626, -120.853, -36.7499, 0.81", "34.7628, -121.674, -37.3153, 0.22", "35.0278, -122.233, -37.6682, 0.22", "35.0482, -122.283, -37.6947, 0.22", "35.2615, -122.815, -37.9796, 0.22", "35.5724, -123.806, -38.628, 2.14", "35.7902, -124.479, -39.1222, 2.65", "35.9615, -124.978, -39.5577, 2.65", "35.9768, -125.02, -39.5968, 2.65", "36.7719, -127.038, -41.497, 0.29", "36.8043, -127.118, -41.5785, 0.29", "37.0256, -127.694, -42.1557, 0.29", "37.4025, -128.783, -43.165, 1.47", "37.5507, -129.262, -43.5832, 1.84", "37.7045, -129.762, -43.9965, 2.14", "38.4066, -132.01, -45.6674, 0.52", "38.6882, -132.73, -46.1946, 0.29", "38.9635, -133.326, -46.6194, 0.37", "38.9927, -133.378, -46.6536, 0.37", "39.3997, -134.007, -47.0745, 1.18", "39.7429, -134.576, -47.4044, 0.74", "40.2742, -135.516, -47.7964, 0.29", "40.8476, -136.613, -48.2529, 1.62", "41.0517, -137.044, -48.4207, 2.28", "41.4384, -137.964, -48.7326, 1.92", "41.9782, -139.393, -49.1818, 0.22", "42.2994, -140.273, -49.4748, 0.22", "42.6023, -141.1, -49.78, 0.96", "42.8331, -141.663, -50.0364, 1.18", "43.0703, -142.197, -50.3817, 1.47", "43.529, -143.255, -51.1894, 0.59", "43.8862, -144.122, -51.9435, 1.77", "44.1495, -144.856, -52.6201, 2.43", "44.4092, -145.686, -53.3796, 2.43", "44.9617, -147.749, -55.3021, 0.52", "45.2404, -149.003, -56.4605, 0.29", "45.3938, -149.878, -57.2605, 1.55", "45.4021, -149.936, -57.3127, 1.55", "45.4852, -150.609, -57.8961, 1.84", "45.6868, -152.471, -59.5204, 0.52", "45.8071, -153.337, -60.2754, 0.96", "46.0821, -154.764, -61.5657, 0.52", "46.3141, -155.704, -62.4209, 1.18", "46.3456, -155.816, -62.523, 1.18", "46.9453, -157.628, -64.2901, 0.29", "47.3005, -158.49, -65.1407, 0.22", "47.5353, -158.99, -65.6471, 1.55", "48.0244, -160.014, -66.7808, 1.55", "48.0412, -160.049, -66.8256, 1.55", "48.5866, -161.206, -68.3857, 1.99", "48.866, -161.777, -69.195, 2.21", "48.8988, -161.84, -69.2898, 2.21", "49.5918, -163.102, -71.169, 2.58", "50.6995, -165.023, -73.9268, 0.22", "50.9241, -165.396, -74.4251, 0.22", "51.289, -165.995, -75.157, 1.11", "51.4226, -166.229, -75.405, 1.11", "52.1187, -167.51, -76.555, 0.37", "52.6564, -168.568, -77.3161, 2.06", "52.8501, -169.063, -77.6029, 2.5", "53.4964, -171.132, -78.7072, 0.22", "53.8626, -172.755, -79.4636, 0.22", "53.9665, -173.49, -79.761, 1.55", "53.9929, -173.947, -79.9074, 1.55", "53.9584, -175.589, -80.2811, 0.22", "53.954, -175.645, -80.29, 0.22", "53.821, -176.753, -80.3423, 0.22", "53.6905, -177.658, -80.3656, 1.11", "53.622, -178.16, -80.367, 1.4", "53.4685, -179.665, -80.3507, 0.22", "53.42, -180.544, -80.2957, 0.88", "53.3971, -181.331, -80.219, 0.88", "53.4011, -182.445, -80.0707, 0.22", "53.4058, -182.732, -80.0188, 0.22", "53.4131, -183.786, -79.8118, 0.22", "53.3452, -185.357, -79.4367, 0.22", "53.34, -185.423, -79.4188, 0.22", "53.2036, -186.6, -79.0963, 0.22", "53.0379, -187.852, -78.768, 2.21", "52.9306, -188.55, -78.5991, 2.36", "52.5811, -190.508, -78.1639, 0.15", "52.3121, -191.884, -77.9031, 0.15", "52.0432, -193.225, -77.6852, 0.15", "51.8326, -194.262, -77.5532, 0.52", "51.7221, -194.831, -77.5079, 0.74", "51.6951, -194.964, -77.5004, 0.74", "51.6359, -195.251, -77.4958, 0.74", "51.2749, -196.762, -77.46, 0.29", "51.0062, -197.805, -77.4286, 0.22", "50.7875, -198.497, -77.3917, 0.81", "50.3031, -199.833, -77.2961, 0.22", "50.2784, -199.896, -77.2904, 0.22", "50.0746, -200.359, -77.2748, 0.22", "50.0431, -200.419, -77.2761, 0.22", "49.5339, -201.318, -77.3347, 1.84", "49.1573, -201.956, -77.3965, 2.28", "48.7908, -202.557, -77.4808, 2.28", "47.7907, -204.208, -77.7345, 0.22", "47.1071, -205.337, -77.9245, 0.22", "46.8171, -205.833, -78.0135, 0.96", "46.415, -206.533, -78.152, 0.96", "45.7108, -207.712, -78.3822, 0.22", "45.3704, -208.26, -78.4806, 0.66", "45.337, -208.32, -78.4899, 0.66", "45.1268, -208.762, -78.5851, 0.66", "44.649, -209.988, -78.8882, 0.22", "44.4381, -210.762, -79.1235, 1.11", "44.3775, -211.128, -79.2453, 1.11", "44.3012, -212.365, -79.6915, 0.22", "44.3417, -213.182, -79.9957, 0.88", "44.4339, -213.772, -80.2232, 1.11", "44.7816, -214.96, -80.6921, 0.22", "44.9618, -215.441, -80.8738, 0.59", "45.4862, -216.54, -81.2722, 0.22", "45.8431, -217.137, -81.4474, 0.22", "45.8818, -217.193, -81.4602, 0.22", "46.2868, -217.714, -81.5585, 1.03", "46.7448, -218.285, -81.6152, 1.55", "47.9639, -219.884, -81.7698, 0.22", "48.5556, -220.701, -81.8441, 1.4", "48.8439, -221.128, -81.8888, 1.84", "48.9617, -221.309, -81.9059, 1.84", "49.8752, -222.73, -82.0242, 0.22", "50.5868, -223.846, -82.1196, 0.22", "50.6627, -223.969, -82.1297, 0.22", "51.3122, -225.016, -82.2488, 0.22", "51.7297, -225.66, -82.3223, 1.03", "52.016, -226.087, -82.3826, 1.03", "52.8455, -227.268, -82.5348, 0.22", "53.3196, -227.928, -82.5943, 1.03", "53.6647, -228.395, -82.6402, 1.03", "53.7064, -228.449, -82.6462, 1.03", "54.9947, -230.117, -82.8704, 0.15", "55.7025, -231.025, -82.9963, 1.25", "56.1755, -231.632, -83.0799, 1.69", "57.2056, -233.02, -83.2842, 0.22", "57.7284, -233.781, -83.3944, 0.22", "58.2203, -234.564, -83.5057, 1.18", "58.475, -235.01, -83.5677, 1.77", "58.6617, -235.395, -83.6317, 1.84", "59.1822, -236.716, -83.8185, 0.22", "59.4438, -237.561, -83.898, 0.22", "59.6611, -238.328, -83.9451, 0.52", "59.68, -238.393, -83.9466, 0.52", "59.7953, -238.777, -83.9496, 0.52", "60.2308, -240.033, -83.9204, 0.22", "60.4706, -240.585, -83.8644, 1.18", "60.6189, -240.867, -83.8288, 1.4", "60.6508, -240.926, -83.82, 1.4" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-0.918616, -51.7188, 3.20947, 0.96", "-0.794531, -51.9626, 2.3912, 0.96", "-0.504853, -52.8126, 0.0757609, 1.4", "-0.270586, -53.8568, -2.29995, 1.69", "-0.0532905, -55.652, -6.00044, 0.88", "-0.0179718, -56.3565, -7.33095, 0.96", "-0.0164542, -57.0089, -8.43314, 0.96", "-0.0773425, -57.523, -9.14813, 1.18", "-0.203068, -58.2502, -9.92857, 1.84", "-0.427729, -59.7558, -11.2491, 2.14", "-0.469324, -60.2961, -11.7146, 2.36", "-0.357551, -61.1201, -12.7118, 0.74", "-0.0547175, -61.8263, -13.9276, 0.44", "0.181273, -62.197, -14.8894, 0.66", "0.433879, -62.6119, -16.2038, 1.03", "0.663387, -63.0045, -17.6089, 1.84", "0.808564, -63.5074, -19.3412, 1.84", "0.81171, -63.5222, -19.3991, 1.84", "0.798846, -64.6211, -23.5627, 0.52", "0.649939, -65.0798, -25.0722, 0.52", "0.638785, -65.1003, -25.1272, 0.52", "0.147213, -65.9434, -26.8164, 0.52" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-0.918616, -51.7188, 3.20947, 0.52", "-0.829253, -53.0737, 2.82065, 0.52", "-0.867836, -53.9165, 2.57742, 0.52", "-1.02843, -54.7368, 2.35382, 1.03", "-1.34529, -55.5686, 2.10519, 0.37", "-1.77173, -56.4324, 1.84962, 0.88", "-2.09224, -56.9969, 1.68809, 1.11", "-2.38816, -57.4007, 1.5625, 1.33", "-3.02157, -58.1256, 1.33838, 0.88", "-4.05146, -59.1875, 1.02065, 0.59", "-4.79412, -59.9031, 0.831118, 0.59", "-5.42227, -60.4944, 0.71707, 1.18", "-6.21498, -61.2407, 0.660827, 1.47", "-6.62171, -61.6167, 0.680577, 1.69", "-6.6811, -61.6681, 0.690281, 1.69", "-7.4167, -62.2288, 0.900955, 1.33", "-8.49307, -62.9293, 1.25304, 0.29", "-9.62915, -63.5854, 1.63617, 0.29", "-10.3307, -63.9699, 1.86212, 1.47", "-11.0935, -64.3845, 2.07156, 1.69", "-11.9039, -64.8119, 2.25083, 2.21", "-12.6313, -65.1731, 2.36145, 2.06", "-13.5498, -65.5965, 2.41, 0.96", "-14.8277, -66.1654, 2.52877, 0.22", "-15.7218, -66.5841, 2.67164, 0.22", "-16.2751, -66.8585, 2.79288, 1.11", "-16.8755, -67.1549, 2.94683, 1.77", "-17.5898, -67.4921, 3.16482, 1.77", "-20.0578, -68.6003, 3.98753, 0.29", "-20.5137, -68.7999, 4.14258, 0.74", "-20.9336, -69.0036, 4.29088, 0.96", "-21.755, -69.4469, 4.58127, 0.96", "-22.7547, -70.0552, 4.90171, 0.88", "-23.6558, -70.6601, 5.07718, 0.52", "-24.4362, -71.2561, 4.97821, 0.52", "-25.5029, -72.1434, 4.6772, 1.4", "-25.7644, -72.3736, 4.58594, 1.84", "-26.5531, -73.126, 4.22433, 1.03", "-27.5747, -74.1662, 3.59483, 0.52", "-29.3398, -76.0115, 2.21871, 2.28", "-29.9289, -76.632, 1.64558, 3.24" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-51.6536, 16.1751, -80.5531, 0.29", "-53.3627, 16.3231, -82.4647, 0.29", "-54.4621, 16.4645, -83.6975, 0.29", "-55.5833, 16.6199, -84.9109, 0.52", "-56.5455, 16.7558, -85.9232, 0.22", "-57.1567, 16.8565, -86.54, 1.33", "-57.6425, 16.9364, -87.0165, 1.92", "-58.2892, 17.0698, -87.6293, 2.06", "-59.9445, 17.351, -89.1617, 0.29", "-60.1025, 17.3622, -89.3143, 0.52", "-60.8665, 17.3548, -90.1804, 0.29", "-62.0046, 17.2765, -91.539, 0.22", "-63.4032, 17.1141, -93.3106, 1.62", "-63.6964, 17.0675, -93.7026, 2.28", "-64.5087, 16.9294, -94.8778, 1.77", "-66.5121, 16.5794, -97.9066, 0.22", "-67.0989, 16.4795, -98.8458, 0.22", "-67.6048, 16.424, -99.7503, 1.03", "-68.4144, 16.4345, -101.309, 0.59", "-68.979, 16.5354, -102.498, 1.47", "-69.0034, 16.5448, -102.552, 1.47", "-69.2556, 16.685, -103.122, 1.69", "-70.3958, 17.4608, -105.928, 0.37", "-70.7147, 17.7074, -106.708, 0.52", "-71.1973, 18.1062, -107.823, 0.74", "-71.6187, 18.4325, -108.729, 0.29", "-72.225, 18.8422, -109.846, 1.47", "-72.2601, 18.8628, -109.903, 1.47", "-72.6533, 19.075, -110.448, 1.99", "-73.8789, 19.7223, -112.257, 0.22", "-73.9098, 19.7376, -112.306, 0.22", "-74.4117, 19.9838, -113.171, 0.52", "-75.2569, 20.3399, -114.698, 0.44", "-75.6731, 20.4909, -115.443, 1.33", "-76.8915, 20.8183, -117.579, 0.52", "-77.9321, 21.0131, -119.306, 0.29", "-77.9643, 21.0179, -119.356, 0.29", "-78.7154, 21.1256, -120.456, 1.84", "-79.0271, 21.1621, -120.858, 2.21", "-81.1445, 21.3609, -123.234, 0.22", "-81.9694, 21.4065, -123.984, 1.11", "-82.3141, 21.432, -124.257, 1.4", "-83.3605, 21.4711, -124.967, 0.22", "-83.4128, 21.4701, -124.996, 0.22", "-84.3534, 21.3777, -125.431, 0.22", "-85.2835, 21.2174, -125.738, 1.62", "-86.0228, 21.0621, -125.99, 1.77", "-87.6871, 20.6696, -126.546, 0.22", "-89.1389, 20.2879, -127.013, 0.22", "-90.0709, 20.0408, -127.312, 1.4", "-90.5484, 19.9126, -127.471, 1.77", "-92.8767, 19.31, -128.237, 0.22", "-93.9103, 19.0471, -128.655, 0.22", "-94.002, 19.0239, -128.703, 0.22", "-94.5707, 18.8747, -129.052, 0.22", "-95.2152, 18.6789, -129.514, 1.11", "-95.4955, 18.5801, -129.733, 1.11", "-97.3935, 17.815, -131.375, 0.22", "-98.0306, 17.5647, -131.954, 0.96", "-98.2195, 17.4929, -132.118, 1.18", "-99.6659, 16.9562, -133.323, 0.22", "-100.065, 16.8085, -133.632, 0.22", "-100.682, 16.5789, -134.151, 1.18", "-102.184, 16.032, -135.403, 0.22", "-102.813, 15.817, -135.952, 0.22", "-103.584, 15.5499, -136.709, 1.92", "-103.905, 15.4324, -137.074, 2.14", "-106.354, 14.5215, -140.259, 0.29", "-107.205, 14.1653, -141.505, 0.22", "-107.714, 13.9495, -142.346, 1.11", "-109.013, 13.4324, -144.738, 0.74", "-109.786, 13.109, -146.383, 1.69", "-111.086, 12.4898, -149.515, 1.18", "-111.973, 12.0005, -151.832, 0.66", "-112.667, 11.5316, -153.873, 0.88", "-113.847, 10.5658, -157.699, 1.69", "-114.991, 9.365, -161.95, 1.55", "-115.772, 8.32162, -165.264, 0.29", "-116.052, 7.76426, -166.785, 1.33", "-116.311, 7.0246, -168.539, 0.22", "-116.381, 6.66995, -169.223, 0.59", "-116.482, 5.6588, -170.874, 0.22", "-116.491, 5.59127, -170.984, 0.22", "-116.623, 5.06587, -171.91, 0.22", "-117.01, 4.33917, -173.492, 2.06", "-118.179, 3.01401, -176.809, 1.11", "-118.699, 2.58976, -178.06, 0.81", "-119.812, 1.8713, -180.421, 0.44", "-120.232, 1.62996, -181.251, 1.03", "-122.005, 0.71913, -184.511, 0.22", "-122.424, 0.5219, -185.237, 0.88", "-124.353, -0.191679, -188.274, 0.22", "-124.678, -0.299699, -188.761, 0.96", "-125.832, -0.658154, -190.449, 1.47", "-126.16, -0.763577, -190.933, 1.55", "-126.407, -0.841241, -191.288, 1.55", "-129.116, -1.70358, -195.229, 0.22", "-129.66, -1.92456, -196.169, 0.52", "-130.77, -2.47026, -198.335, 0.52", "-131.273, -2.75397, -199.513, 0.52", "-131.317, -2.78066, -199.621, 0.52", "-131.883, -3.22791, -201.23, 1.03", "-132.884, -4.67048, -205.46, 0.59", "-133.077, -5.0474, -206.573, 0.88", "-133.517, -6.26378, -210.218, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-51.6536, 16.1751, -80.5531, 0.22", "-53.3356, 18.0215, -82.2563, 0.22", "-53.8324, 18.5141, -82.7312, 0.81", "-54.0621, 18.7215, -82.9284, 1.11", "-54.723, 19.2767, -83.4189, 0.37", "-55.5317, 19.9129, -83.9441, 0.22", "-55.5882, 19.9564, -83.9789, 0.22", "-56.2147, 20.4099, -84.3146, 0.22", "-57.1187, 21.0259, -84.7471, 0.22", "-57.9119, 21.5143, -85.0822, 1.33", "-58.4398, 21.8057, -85.2512, 2.14", "-59.4694, 22.353, -85.5123, 2.5" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-23.9291, 18.1102, -39.9357, 0.22", "-25.847, 18.0634, -40.3726, 0.22", "-26.5208, 18.0159, -40.5391, 0.22", "-27.3921, 17.9415, -40.7456, 0.22", "-28.3665, 17.8518, -40.9609, 1.55", "-28.9949, 17.7618, -41.0879, 2.28", "-29.4418, 17.6821, -41.1702, 2.43", "-31.4698, 17.3058, -41.4735, 0.22", "-32.1787, 17.1112, -41.5737, 1.18", "-32.8567, 16.8543, -41.6673, 1.25", "-34.1746, 16.2595, -41.8375, 0.22", "-34.9418, 15.8811, -41.9211, 0.88", "-35.3116, 15.6836, -41.9778, 1.11", "-36.6545, 14.9174, -42.2194, 0.22", "-37.517, 14.4137, -42.406, 1.69", "-37.6518, 14.3334, -42.4384, 2.06", "-38.23, 13.994, -42.5875, 2.21", "-40.2789, 12.7864, -43.1274, 0.22", "-41.1371, 12.2801, -43.3395, 0.22", "-41.2046, 12.2411, -43.3551, 0.22", "-42.2111, 11.6559, -43.5581, 0.22", "-42.5741, 11.4409, -43.6278, 0.52", "-42.9917, 11.1936, -43.6855, 0.52", "-43.9638, 10.6063, -43.7404, 0.15", "-44.7606, 10.1335, -43.7821, 1.62", "-45.1592, 9.9059, -43.8005, 1.99", "-45.6402, 9.6495, -43.82, 1.92", "-46.9951, 8.91148, -43.8625, 0.22", "-47.6239, 8.53875, -43.8755, 0.22", "-47.9056, 8.35948, -43.8696, 0.74", "-48.2564, 8.13231, -43.844, 0.96", "-48.6327, 7.89471, -43.8049, 0.74", "-49.43, 7.38889, -43.6986, 0.15", "-49.9771, 7.02925, -43.6269, 0.15", "-50.481, 6.69531, -43.5688, 0.15", "-51.4157, 6.11839, -43.4775, 0.15", "-51.932, 5.81787, -43.4299, 1.25", "-52.441, 5.54497, -43.3858, 1.55", "-53.1424, 5.21277, -43.3325, 1.18", "-54.0504, 4.79136, -43.2428, 0.22", "-54.9042, 4.36728, -43.1513, 0.22", "-54.9571, 4.34045, -43.1448, 0.22", "-55.9556, 3.84878, -43.0123, 1.69", "-56.3939, 3.6391, -42.9522, 2.06", "-58.1964, 2.78949, -42.7208, 0.22", "-58.7652, 2.51634, -42.6486, 0.52", "-59.8969, 1.93927, -42.5237, 0.22", "-59.95, 1.91234, -42.519, 0.22", "-60.2899, 1.73983, -42.5125, 0.22", "-60.9432, 1.44251, -42.5485, 1.03", "-60.9992, 1.42318, -42.5569, 1.03", "-61.3779, 1.315, -42.6234, 1.55", "-61.7441, 1.23184, -42.6672, 1.77", "-63.1304, 0.96646, -42.7797, 0.22", "-64.0682, 0.81056, -42.8281, 0.22", "-65.1716, 0.63335, -42.8571, 1.18", "-66.0563, 0.4849, -42.8877, 1.47", "-67.728, 0.20219, -42.9569, 0.22", "-68.2348, 0.11584, -42.9761, 0.52", "-68.5659, 0.0635798, -42.976, 0.52", "-69.868, -0.1755, -42.9551, 0.22", "-71.0495, -0.414346, -42.9037, 0.96", "-71.633, -0.53337, -42.8684, 1.18", "-71.6916, -0.545517, -42.8653, 1.18", "-73.1837, -0.871241, -42.7586, 0.15", "-73.8023, -1.01421, -42.7032, 0.15", "-74.4961, -1.18275, -42.622, 0.96", "-75.0703, -1.31037, -42.5437, 1.33", "-75.7916, -1.43986, -42.4651, 1.03", "-76.8106, -1.58529, -42.3923, 0.22", "-77.4651, -1.64546, -42.3843, 0.22", "-77.545, -1.64784, -42.3847, 0.22", "-78.5412, -1.64543, -42.3894, 0.22", "-79.3595, -1.6296, -42.383, 0.44", "-79.5095, -1.62841, -42.3821, 0.44", "-80.693, -1.63271, -42.3715, 0.22", "-81.3573, -1.65641, -42.3792, 1.11", "-82.1482, -1.71545, -42.4036, 1.69", "-82.675, -1.77787, -42.4351, 1.92", "-84.1189, -1.95572, -42.5574, 0.22", "-85.066, -2.07762, -42.6745, 0.22", "-85.8475, -2.20633, -42.7995, 0.22", "-85.9723, -2.23324, -42.8233, 0.22", "-86.9648, -2.49886, -43.0765, 1.4", "-87.6574, -2.72074, -43.2819, 2.21", "-88.5919, -3.08383, -43.5946, 0.96", "-89.4476, -3.46032, -43.9137, 0.15", "-89.9445, -3.68229, -44.1078, 0.15", "-90.6146, -3.99726, -44.3695, 0.15", "-90.9308, -4.15562, -44.4937, 0.81", "-91.3019, -4.3533, -44.6339, 1.25", "-91.9714, -4.72273, -44.8272, 1.33", "-93.4444, -5.54061, -45.1731, 0.22", "-94.1569, -5.95941, -45.2912, 1.62", "-94.5654, -6.22327, -45.3345, 1.99", "-95.2395, -6.67054, -45.4043, 1.92", "-96.5147, -7.54171, -45.5444, 0.29", "-96.5704, -7.58272, -45.55, 0.29", "-97.4607, -8.28819, -45.6436, 0.29", "-98.0767, -8.80216, -45.7332, 0.29", "-98.9187, -9.54751, -45.8876, 0.29", "-99.4469, -10.0292, -46.0052, 0.29", "-99.91, -10.4744, -46.1376, 0.66", "-100.271, -10.843, -46.2365, 0.52", "-100.857, -11.4971, -46.4061, 0.22", "-101.213, -11.9191, -46.5013, 0.81", "-101.607, -12.4008, -46.5921, 0.96", "-102.522, -13.4554, -46.7834, 0.22", "-103.051, -14.0261, -46.9061, 0.22", "-103.351, -14.3193, -46.9779, 1.18", "-103.772, -14.6869, -47.0825, 1.4", "-104.202, -15.034, -47.1879, 1.4", "-104.611, -15.3364, -47.2903, 1.03", "-105.639, -16.0308, -47.5268, 0.22", "-106.164, -16.3509, -47.6456, 0.22", "-106.571, -16.5903, -47.7498, 0.29", "-107.11, -16.9111, -47.9323, 0.29", "-107.761, -17.3223, -48.1889, 0.37", "-108.285, -17.6712, -48.4148, 0.37", "-108.345, -17.7152, -48.4419, 0.37", "-109.044, -18.3199, -48.8056, 0.29", "-109.728, -18.9909, -49.2396, 1.77", "-110.032, -19.3209, -49.4275, 2.36", "-110.068, -19.3627, -49.4485, 2.36", "-110.353, -19.6963, -49.5957, 2.65", "-110.803, -20.2221, -49.7974, 2.58", "-112.01, -21.5513, -50.2866, 0.29", "-112.802, -22.2958, -50.6447, 0.22", "-112.852, -22.3368, -50.6695, 0.22", "-113.376, -22.7042, -50.9173, 0.22", "-113.917, -23.0202, -51.1703, 0.88", "-114.601, -23.3418, -51.4632, 0.59", "-115.809, -23.7864, -51.9638, 0.22", "-115.87, -23.8054, -51.9925, 0.22", "-116.981, -24.1166, -52.4871, 0.22", "-117.406, -24.2281, -52.6649, 1.11", "-117.977, -24.3827, -52.877, 1.25", "-118.492, -24.5436, -53.0422, 0.88", "-119.906, -25.0255, -53.4522, 0.22", "-120.775, -25.3418, -53.6976, 0.44", "-121.775, -25.7241, -53.9784, 0.22", "-122.238, -25.9421, -54.0794, 0.74", "-123.17, -26.4888, -54.2313, 0.22", "-123.958, -27.0505, -54.2969, 1.55", "-124.448, -27.4834, -54.2797, 1.92", "-124.505, -27.5383, -54.2761, 1.92", "-125.713, -28.7186, -54.1453, 0.22", "-126.163, -29.1017, -54.0981, 0.66", "-126.755, -29.4604, -54.0486, 0.44", "-126.828, -29.4916, -54.0458, 0.44", "-127.641, -29.7426, -54.0568, 0.22", "-127.962, -29.8303, -54.0745, 0.59", "-128.832, -30.0239, -54.1542, 0.66", "-130.022, -30.2993, -54.2422, 0.22", "-130.718, -30.5009, -54.2946, 1.11", "-131.162, -30.6647, -54.3358, 1.4", "-132.554, -31.3116, -54.4828, 0.22", "-132.964, -31.5371, -54.5402, 0.74", "-133.685, -32.0136, -54.6665, 0.74", "-134.877, -32.8593, -54.9087, 0.15", "-135.6, -33.389, -55.0712, 1.33", "-136.297, -33.9081, -55.2418, 1.4", "-137.139, -34.5856, -55.4813, 0.22", "-137.745, -35.0977, -55.6626, 0.22", "-138.227, -35.5248, -55.8187, 0.22", "-138.324, -35.6051, -55.8485, 0.22", "-139.24, -36.2795, -56.1378, 0.66", "-139.99, -36.7856, -56.4229, 0.22", "-140.542, -37.1371, -56.6491, 0.22", "-140.995, -37.4083, -56.8499, 0.66", "-141.537, -37.7291, -57.0876, 0.74", "-142.723, -38.4062, -57.598, 0.22", "-143.646, -38.9164, -58.0019, 1.4", "-144.167, -39.1841, -58.2224, 1.77", "-145.613, -39.9096, -58.8672, 0.15", "-146.593, -40.4318, -59.3426, 0.15", "-147.312, -40.8262, -59.7282, 1.33", "-147.407, -40.8764, -59.7804, 1.33", "-147.888, -41.1259, -60.0522, 1.69", "-149.341, -41.9039, -60.9634, 0.22", "-150.094, -42.3188, -61.5102, 0.22", "-151.143, -42.9224, -62.3102, 0.22", "-151.844, -43.3555, -62.8346, 1.77", "-151.894, -43.3883, -62.8708, 1.77", "-152.453, -43.7643, -63.287, 1.55", "-154.212, -44.9483, -64.547, 0.22", "-154.985, -45.4782, -65.0907, 0.22", "-155.53, -45.893, -65.5337, 1.18", "-155.778, -46.0849, -65.7457, 1.25", "-157.417, -47.3276, -67.1657, 0.22", "-158.474, -48.1051, -68.1016, 1.47", "-158.761, -48.3154, -68.3654, 1.47", "-160.433, -49.5314, -69.9469, 0.22", "-160.909, -49.8808, -70.3938, 0.22", "-160.954, -49.9164, -70.4327, 0.22", "-161.737, -50.601, -70.978, 1.33", "-162.016, -50.8492, -71.1199, 1.4", "-162.936, -51.6728, -71.4467, 0.22", "-163.152, -51.8719, -71.4886, 0.37", "-164.183, -52.8611, -71.6637, 0.22", "-165.15, -53.7845, -71.7895, 1.11", "-166.188, -54.7755, -71.891, 0.22", "-166.495, -55.0553, -71.9248, 1.11", "-166.845, -55.3519, -71.966, 1.11", "-167.907, -56.2128, -72.1068, 0.22", "-169.004, -57.0618, -72.2714, 0.22", "-169.601, -57.4881, -72.3695, 0.88", "-170.511, -58.0691, -72.5323, 0.22", "-170.638, -58.1449, -72.5527, 0.37", "-171.164, -58.4504, -72.5669, 0.15", "-171.355, -58.5558, -72.5448, 0.29", "-172.513, -59.1846, -72.2977, 0.22", "-173.052, -59.4796, -72.1513, 0.22", "-174.062, -60.0501, -71.8291, 1.25", "-175.82, -61.072, -71.2204, 0.22", "-176.522, -61.4962, -70.9463, 1.33", "-177.683, -62.2185, -70.439, 0.22", "-178.091, -62.4816, -70.2215, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-23.9291, 18.1102, -39.9357, 0.22", "-24.7461, 19.5846, -39.9553, 0.22", "-25.4315, 20.8046, -39.952, 0.22", "-25.9844, 21.7821, -39.945, 1.47", "-26.2961, 22.3462, -39.9286, 1.77", "-26.9747, 23.6287, -39.8735, 0.66", "-27.3772, 24.4185, -39.8337, 1.55", "-27.6089, 24.8879, -39.8061, 1.92", "-27.6336, 24.9411, -39.8024, 1.92", "-28.3555, 26.579, -39.6985, 0.15", "-28.636, 27.2415, -39.6652, 0.66", "-28.7455, 27.5136, -39.6554, 0.66", "-29.2445, 28.773, -39.63, 0.22", "-29.6593, 29.7819, -39.6179, 0.22", "-29.6858, 29.8451, -39.6174, 0.22", "-30.2193, 31.0773, -39.6789, 0.22", "-30.6983, 32.2011, -39.7693, 1.62", "-30.8706, 32.6201, -39.8109, 2.06", "-31.0599, 33.0966, -39.8659, 1.92", "-31.3125, 33.7937, -39.965, 1.25", "-31.705, 35.0294, -40.1553, 0.22", "-31.912, 35.7823, -40.2853, 0.22", "-32.1163, 36.668, -40.4493, 0.59", "-32.1908, 37.0628, -40.5169, 0.59", "-32.3525, 38.1321, -40.6797, 0.22", "-32.4702, 39.0448, -40.7909, 0.22", "-32.4796, 39.1221, -40.7962, 0.22", "-32.5451, 39.6502, -40.8392, 0.22", "-32.675, 40.7892, -40.9382, 1.33", "-32.7164, 41.1406, -40.9922, 1.4", "-32.7919, 41.7391, -41.1278, 0.66", "-32.8727, 42.3448, -41.2954, 0.22", "-33.0397, 43.4675, -41.636, 1.69", "-33.1101, 43.8675, -41.7787, 2.21", "-33.363, 45.235, -42.3195, 0.81", "-33.552, 46.2385, -42.7159, 0.22", "-33.6728, 46.8666, -42.9588, 0.44", "-33.7364, 47.1906, -43.0759, 0.52", "-33.9645, 48.2697, -43.4081, 0.22", "-34.1254, 49.0258, -43.5918, 0.22", "-34.3071, 49.8578, -43.7267, 1.25", "-34.4182, 50.3603, -43.7952, 1.55", "-34.5232, 50.9215, -43.871, 1.33", "-34.749, 52.2876, -44.0408, 0.22", "-34.8974, 53.0529, -44.1229, 0.22", "-35.1835, 54.3502, -44.2841, 1.62", "-35.2694, 54.7273, -44.3336, 1.77", "-35.7067, 56.6327, -44.5866, 0.22", "-35.8682, 57.3365, -44.6777, 0.22", "-36.1158, 58.4583, -44.8321, 0.22", "-36.397, 59.8182, -45.0305, 0.22", "-36.5616, 60.722, -45.1807, 0.81", "-36.6381, 61.2148, -45.2757, 1.11", "-36.7277, 61.9062, -45.4241, 0.88", "-36.8409, 62.9695, -45.7318, 0.29", "-36.8723, 63.3758, -45.8695, 0.29", "-36.9863, 64.6212, -46.3483, 1.92", "-37.0684, 65.4023, -46.6893, 2.43", "-37.1218, 65.9849, -46.9589, 2.36", "-37.2462, 67.8676, -47.8666, 0.22", "-37.2883, 68.5918, -48.2125, 0.22", "-37.2954, 68.6978, -48.2627, 0.22", "-37.3482, 69.4255, -48.5982, 0.74", "-37.4102, 70.0337, -48.8648, 0.74", "-37.5119, 70.8349, -49.1792, 0.22", "-37.6067, 71.4633, -49.3504, 0.37", "-37.6938, 71.862, -49.4533, 0.37", "-37.7089, 71.9267, -49.4693, 0.37", "-37.8191, 72.3537, -49.5999, 0.37", "-37.9201, 72.7073, -49.733, 0.22", "-38.0185, 73.1949, -49.9398, 0.22", "-38.0355, 73.3109, -49.9893, 0.22", "-38.1811, 74.2956, -50.384, 1.77", "-38.3161, 75.1202, -50.6931, 2.14", "-38.3872, 75.5032, -50.8296, 1.92", "-38.7709, 77.2813, -51.4282, 0.29", "-38.9253, 77.8529, -51.5984, 0.29", "-39.1858, 78.6232, -51.7842, 0.22", "-39.357, 79.0668, -51.8594, 0.59", "-39.4661, 79.3607, -51.8899, 0.74", "-39.492, 79.4343, -51.8956, 0.74", "-39.7271, 80.1122, -51.9111, 0.37", "-39.9977, 81.1102, -51.9484, 0.22", "-40.162, 81.9269, -51.9859, 0.22", "-40.2652, 82.5661, -52.0645, 0.29", "-40.2754, 82.6326, -52.0765, 0.29", "-40.3987, 83.2829, -52.2315, 0.29", "-40.551, 84.0362, -52.4353, 1.25", "-40.7239, 84.7939, -52.6472, 1.62", "-40.9864, 85.7614, -52.9118, 1.84", "-41.1816, 86.4778, -53.107, 1.55", "-41.4826, 87.6446, -53.4196, 0.15", "-41.7383, 88.7525, -53.6734, 0.15", "-41.8587, 89.3143, -53.7741, 1.11", "-41.9282, 89.6563, -53.8158, 1.55", "-42.0641, 90.3354, -53.8475, 1.47", "-42.0752, 90.3928, -53.8494, 1.47", "-42.3077, 91.475, -53.906, 0.52", "-42.4737, 92.0749, -53.9744, 0.22", "-42.5921, 92.4539, -54.0305, 0.22", "-42.7337, 92.8886, -54.1202, 0.59", "-42.8885, 93.3201, -54.2361, 0.59", "-43.2968, 94.2876, -54.5725, 0.22", "-43.8033, 95.3179, -55.0062, 1.18", "-43.973, 95.6377, -55.148, 1.55", "-44.5026, 96.6375, -55.5877, 0.44", "-44.8931, 97.3695, -55.8975, 0.22", "-45.3003, 98.1403, -56.1883, 0.22", "-45.5462, 98.6277, -56.3302, 0.22", "-45.7239, 98.9921, -56.4122, 0.44", "-46.0723, 99.7695, -56.5608, 0.44", "-46.4262, 100.642, -56.6813, 0.22", "-46.725, 101.529, -56.7783, 0.22", "-47.0567, 102.639, -56.8842, 1.33", "-47.231, 103.217, -56.9417, 1.4", "-47.3924, 103.746, -56.9941, 0.96", "-47.4091, 103.803, -57.0004, 0.96", "-47.5753, 104.438, -57.0725, 0.22", "-47.8501, 105.548, -57.2074, 0.22", "-47.8647, 105.625, -57.2156, 0.22", "-47.9477, 106.187, -57.2592, 0.22", "-48.0767, 107.155, -57.3122, 0.74", "-48.1282, 107.579, -57.3361, 0.96", "-48.1763, 108.041, -57.3653, 0.59", "-48.2984, 109.39, -57.4536, 0.22", "-48.4309, 110.742, -57.5666, 0.22", "-48.4497, 110.885, -57.5854, 0.22", "-48.5572, 111.529, -57.6973, 0.22", "-48.7242, 112.377, -57.8782, 1.62", "-48.8196, 112.854, -58.0013, 2.06", "-48.9949, 113.631, -58.251, 1.92", "-49.3996, 115.394, -58.9151, 0.22", "-49.5545, 116.116, -59.2364, 0.29", "-49.6454, 116.565, -59.4737, 0.29", "-49.7541, 117.071, -59.7985, 0.22", "-49.9309, 117.824, -60.3871, 1.18", "-50.0979, 118.423, -60.9497, 1.11", "-50.4253, 119.396, -61.9887, 0.29", "-50.7693, 120.229, -62.9471, 0.29", "-51.3225, 121.403, -64.3266, 1.55", "-51.6973, 122.117, -65.1734, 1.99", "-52.3617, 123.294, -66.5583, 0.22", "-52.6231, 123.725, -67.0409, 0.37", "-53.0845, 124.461, -67.7957, 0.37", "-53.4104, 125.005, -68.2892, 0.22", "-53.8871, 125.871, -68.9231, 0.22", "-54.1874, 126.498, -69.2878, 1.11", "-54.4413, 127.092, -69.5747, 1.25", "-54.6204, 127.544, -69.7731, 0.74", "-54.9868, 128.469, -70.1291, 0.22", "-55.2629, 129.079, -70.3577, 0.22", "-55.6339, 129.814, -70.5876, 1.33", "-55.8852, 130.294, -70.7264, 1.62", "-56.0263, 130.553, -70.795, 1.77", "-56.0556, 130.604, -70.8063, 1.77", "-56.6197, 131.557, -71.0131, 0.29", "-57.0454, 132.266, -71.1728, 0.29", "-57.3982, 132.84, -71.2975, 0.66", "-57.6581, 133.279, -71.3942, 0.88", "-58.3851, 134.527, -71.659, 0.22", "-58.7621, 135.16, -71.7833, 1.25", "-58.9471, 135.471, -71.8372, 1.25", "-59.2527, 135.99, -71.9222, 1.11", "-59.8148, 136.941, -72.0924, 0.22", "-60.1267, 137.473, -72.2026, 0.44", "-60.3768, 137.915, -72.3017, 0.44", "-60.7018, 138.49, -72.4777, 0.22", "-61.1042, 139.148, -72.7455, 0.22", "-61.6529, 139.965, -73.1743, 0.96", "-61.9907, 140.417, -73.4779, 1.25", "-62.0216, 140.458, -73.5089, 1.25", "-62.5435, 141.221, -74.2197, 0.52", "-62.9056, 141.797, -74.7998, 0.22", "-62.9492, 141.874, -74.8792, 0.22", "-63.1497, 142.286, -75.2658, 1.18", "-63.2882, 142.6, -75.531, 1.33", "-63.8227, 144.122, -76.651, 0.22", "-63.9577, 144.633, -76.9731, 0.29", "-63.9686, 144.693, -77.0061, 0.29", "-64.0419, 145.208, -77.2636, 0.37", "-64.1336, 146.075, -77.6407, 0.22", "-64.2179, 146.963, -77.9865, 1.25", "-64.2398, 147.232, -78.0725, 1.55", "-64.2769, 147.911, -78.2886, 1.03", "-64.3355, 149.146, -78.6924, 0.22", "-64.3662, 149.829, -78.9106, 0.22", "-64.396, 150.389, -79.0802, 0.74", "-64.4084, 150.529, -79.1223, 0.74", "-64.4573, 151.007, -79.2593, 0.74", "-64.5435, 152.154, -79.5989, 0.22", "-64.5767, 152.799, -79.7729, 0.22", "-64.5782, 152.857, -79.7878, 0.22", "-64.5873, 154.066, -80.0832, 0.74", "-64.5797, 154.928, -80.279, 1.33", "-64.5461, 156.113, -80.5644, 0.22", "-64.4949, 157.083, -80.7928, 1.11", "-64.4823, 157.292, -80.8433, 1.4", "-64.4672, 157.566, -80.9087, 1.62", "-64.4322, 158.327, -81.0838, 1.03", "-64.404, 159.152, -81.2858, 0.44", "-64.401, 159.779, -81.4308, 0.29", "-64.3866, 160.548, -81.6172, 0.52", "-64.3839, 160.822, -81.6847, 0.88", "-64.4166, 161.449, -81.833, 0.52", "-64.4732, 162.182, -81.9895, 0.22", "-64.5355, 162.743, -82.107, 0.52", "-64.592, 163.152, -82.2072, 0.52", "-64.6915, 163.786, -82.3688, 0.29", "-64.8477, 164.676, -82.6094, 0.29", "-64.9907, 165.296, -82.7844, 0.22", "-65.2505, 166.193, -83.0309, 1.18", "-65.395, 166.654, -83.1583, 1.4", "-65.6578, 167.382, -83.3492, 0.81", "-66.0001, 168.214, -83.5504, 0.22", "-66.3984, 169.103, -83.7511, 1.11", "-66.6362, 169.549, -83.8401, 1.11", "-66.9619, 170.103, -83.9239, 0.81", "-67.4392, 170.874, -84.0536, 0.22", "-67.7029, 171.283, -84.1222, 0.22", "-67.8449, 171.525, -84.168, 0.44", "-67.9172, 171.667, -84.1993, 0.44", "-68.0113, 171.868, -84.2481, 0.44", "-68.3385, 172.577, -84.4667, 0.22", "-68.6664, 173.352, -84.7242, 0.22", "-69.1714, 174.458, -85.2494, 0.88", "-69.4217, 174.971, -85.5351, 1.4", "-69.6465, 175.398, -85.7927, 1.69", "-70.0676, 176.087, -86.2472, 1.69", "-70.4015, 176.564, -86.5927, 1.33", "-71.6365, 178.137, -87.9068, 0.22", "-71.6752, 178.178, -87.9461, 0.22", "-72.0899, 178.589, -88.3601, 0.29", "-72.5973, 179.04, -88.8251, 0.22", "-72.6621, 179.094, -88.8747, 0.22", "-72.8961, 179.296, -89.0165, 0.22", "-73.2705, 179.639, -89.1439, 0.59", "-73.3248, 179.689, -89.1726, 0.59", "-73.6283, 179.98, -89.3729, 0.88", "-74.2002, 180.583, -89.7784, 0.22", "-74.7131, 181.104, -90.1257, 1.18", "-75.1516, 181.542, -90.4097, 1.18", "-76.301, 182.54, -91.0895, 0.22", "-76.3509, 182.579, -91.1173, 0.22", "-77.0825, 183.113, -91.4944, 0.22", "-77.8877, 183.659, -91.8616, 1.33", "-78.2058, 183.876, -91.9936, 1.62", "-79.6828, 184.936, -92.5038, 0.22", "-79.7366, 184.978, -92.5179, 0.22", "-80.2133, 185.35, -92.6369, 0.59", "-80.6065, 185.682, -92.749, 0.59", "-81.4983, 186.56, -93.0234, 0.22", "-81.9339, 187.04, -93.1664, 0.22", "-82.3468, 187.574, -93.3066, 1.11", "-82.8591, 188.257, -93.487, 1.55", "-83.5301, 189.202, -93.7494, 0.22", "-83.813, 189.626, -93.8646, 0.81", "-83.8478, 189.684, -93.8789, 0.81", "-84.018, 189.988, -93.9567, 1.11", "-84.1589, 190.305, -94.0357, 1.25", "-84.4492, 191.363, -94.2721, 0.22", "-84.5511, 191.896, -94.3706, 0.52", "-84.5797, 192.094, -94.4166, 0.52", "-84.5899, 192.169, -94.4352, 0.52", "-84.7681, 193.241, -94.7799, 0.22", "-84.9476, 194.174, -95.1764, 1.18", "-85.0001, 194.421, -95.3095, 1.47", "-85.2811, 195.561, -96.0708, 0.22", "-85.4317, 196.107, -96.4559, 0.44", "-85.8153, 197.311, -97.3643, 0.22", "-86.1303, 198.104, -98.0427, 0.44", "-86.4654, 198.883, -98.7928, 0.66", "-86.7732, 199.59, -99.5367, 1.03" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "110.56, 166.906, -75.0629, 0.22", "112.618, 166.937, -74.5288, 0.22", "112.872, 166.945, -74.4703, 0.22", "114.176, 167.036, -74.2921, 0.22", "114.281, 167.049, -74.2828, 0.22", "115.209, 167.178, -74.2223, 1.25", "115.618, 167.275, -74.2052, 1.4", "115.693, 167.303, -74.2093, 1.4", "117.099, 168.014, -74.2865, 0.22", "117.608, 168.365, -74.3256, 0.96", "117.69, 168.43, -74.3329, 0.96", "119.041, 169.678, -74.5028, 0.22", "119.311, 169.956, -74.5497, 0.29", "119.726, 170.411, -74.634, 0.22", "120.371, 171.122, -74.753, 0.96", "120.872, 171.62, -74.8377, 1.25", "121.853, 172.521, -74.9928, 0.22", "122.573, 173.13, -75.1001, 0.88", "123.004, 173.467, -75.1541, 0.88", "124.344, 174.432, -75.3137, 0.22", "125.142, 174.954, -75.3976, 1.11", "125.2, 174.992, -75.4052, 1.11", "125.601, 175.262, -75.4699, 1.25", "126.067, 175.611, -75.5661, 1.25", "127.208, 176.588, -75.9736, 0.22", "127.522, 176.889, -76.1276, 0.44", "128.052, 177.439, -76.4256, 0.22", "128.68, 178.126, -76.7999, 1.33", "129.036, 178.525, -77.0219, 1.47", "130.039, 179.719, -77.6912, 0.22", "130.458, 180.238, -77.9605, 0.59", "130.806, 180.652, -78.1549, 0.22", "131.272, 181.161, -78.3655, 0.88", "131.524, 181.413, -78.4495, 0.88", "131.612, 181.491, -78.4647, 0.88", "132.406, 182.161, -78.5123, 0.22", "132.927, 182.589, -78.541, 0.22", "132.981, 182.633, -78.5435, 0.22", "133.599, 183.182, -78.59, 1.47", "135.02, 184.549, -78.7337, 0.22", "135.663, 185.258, -78.8068, 0.74", "135.754, 185.374, -78.8202, 0.74", "135.979, 185.73, -78.8585, 0.74", "136.42, 186.594, -78.9442, 0.22", "136.49, 186.807, -78.9513, 0.37", "136.674, 187.874, -78.9445, 0.22", "136.683, 187.951, -78.9411, 0.22", "136.799, 189.006, -78.8711, 0.22", "136.806, 189.083, -78.8627, 0.22", "136.851, 190.396, -78.6102, 0.81" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "110.56, 166.906, -75.0629, 0.74", "113.43, 163.667, -78.9906, 0.74", "114.261, 162.728, -79.9402, 0.29", "115.231, 161.628, -80.14, 0.22", "115.767, 161.029, -79.8778, 0.44", "116.44, 160.286, -79.2454, 0.52", "116.543, 160.174, -79.1357, 0.52", "117.365, 159.34, -77.9, 0.22", "117.582, 159.131, -77.5416, 0.59", "117.625, 159.098, -77.4836, 0.59", "118.611, 158.491, -76.3786, 0.22", "118.656, 158.463, -76.3329, 0.22", "119.664, 157.889, -75.4103, 0.22", "119.707, 157.867, -75.3765, 0.22", "120.853, 157.31, -74.4826, 0.74", "121.904, 156.835, -73.7026, 0.88" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "33.8386, 37.8255, -23.9717, 0.22", "34.9501, 39.4079, -23.3935, 0.22", "35.4137, 40.0527, -23.2143, 0.22", "36.1011, 40.88, -23.0068, 1.18", "36.5219, 41.3258, -22.9048, 1.77", "37.1054, 41.9013, -22.781, 2.06", "37.4406, 42.2166, -22.7174, 2.06", "38.9673, 43.481, -22.5759, 0.22", "39.7569, 44.0812, -22.519, 0.22", "40.4532, 44.5732, -22.4903, 0.52", "40.5891, 44.6728, -22.4871, 0.52", "40.9913, 44.9882, -22.4871, 0.52", "41.0526, 45.0384, -22.4871, 0.52", "41.6827, 45.5712, -22.4871, 0.44", "42.3454, 46.1595, -22.4871, 0.37", "43.3217, 46.9579, -22.4871, 0.22", "43.3856, 47.0049, -22.4871, 0.22", "43.7531, 47.2408, -22.4871, 0.37", "44.0773, 47.4145, -22.478, 0.37", "44.7713, 47.7009, -22.4319, 0.37", "45.3849, 47.8984, -22.3775, 0.22", "45.5902, 47.9489, -22.3642, 0.22", "46.6225, 48.1873, -22.3097, 0.22", "47.9563, 48.4451, -22.251, 2.14", "48.8579, 48.5924, -22.2176, 2.87", "49.3788, 48.664, -22.2073, 2.73", "51.3978, 48.8585, -22.1959, 0.22", "51.4675, 48.8647, -22.1991, 0.22", "52.2937, 48.9405, -22.2857, 0.22", "52.3621, 48.9489, -22.298, 0.22", "53.2683, 49.1344, -22.5056, 0.44", "53.3215, 49.154, -22.5247, 0.44", "54.5701, 49.8893, -23.1416, 0.22", "54.9005, 50.1064, -23.3048, 0.74", "54.9616, 50.1482, -23.3336, 0.74", "55.4058, 50.458, -23.5479, 0.74", "56.5649, 51.2883, -24.1273, 0.22", "57.0592, 51.6367, -24.3725, 0.22", "58.3773, 52.5312, -24.999, 1.92", "59.0175, 52.9435, -25.2989, 2.87" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "33.8386, 37.8255, -23.9717, 0.22", "35.9825, 37.8458, -24.3023, 0.22", "36.7013, 37.8243, -24.4945, 0.66", "37.6854, 37.7632, -24.847, 0.22", "38.2509, 37.7113, -25.0658, 0.22", "38.996, 37.6053, -25.4157, 0.22", "39.7452, 37.4622, -25.8099, 0.96", "41.3229, 37.097, -26.8296, 0.22", "42.2147, 36.8753, -27.5753, 0.81", "42.5365, 36.8083, -27.9054, 0.81", "43.7611, 36.6593, -29.5603, 0.22", "44.4731, 36.6275, -30.7288, 0.22", "45.1709, 36.6352, -32.0774, 2.06", "46.3897, 36.7157, -34.7195, 1.18", "47.1832, 36.8238, -36.5175, 1.77", "48.3397, 37.0327, -39.235, 1.77", "48.4136, 37.0495, -39.4092, 1.77", "49.9852, 37.4201, -42.9991, 0.22", "51.0917, 37.6457, -45.3348, 0.22", "51.6304, 37.7375, -46.379, 1.47", "51.9287, 37.766, -46.8926, 1.62", "53.1953, 37.8495, -48.7061, 0.22", "53.5459, 37.8811, -49.1862, 0.74", "53.8774, 37.9445, -49.5751, 0.81" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "30.9078, 67.6614, -28.3177, 0.22", "31.1628, 68.9198, -28.3417, 0.22", "31.1755, 68.9869, -28.3443, 0.22", "31.3258, 69.8342, -28.382, 0.29", "31.5148, 70.6578, -28.461, 0.22", "31.7038, 71.3662, -28.5413, 0.22", "32.0182, 72.4807, -28.6979, 1.25", "32.1166, 72.7881, -28.7563, 1.84", "32.4267, 73.7292, -28.9435, 1.18", "32.9048, 75.1793, -29.2391, 0.22", "33.2622, 76.2605, -29.4536, 0.22", "33.5833, 77.0895, -29.6272, 0.74", "33.6103, 77.1511, -29.6402, 0.74", "33.846, 77.6421, -29.7384, 0.74", "34.17, 78.2699, -29.8541, 0.22", "34.4124, 78.7107, -29.9118, 0.37", "35.0974, 79.7654, -30.0973, 0.22", "35.2245, 79.9373, -30.1316, 0.22", "35.8512, 80.7346, -30.3176, 0.22", "35.896, 80.7846, -30.3338, 0.22", "36.5991, 81.4705, -30.6493, 0.22", "37.4902, 82.2678, -31.1833, 0.22", "37.8737, 82.5872, -31.4547, 1.25", "37.9269, 82.629, -31.4964, 1.25", "38.6717, 83.192, -32.1265, 1.92", "39.3227, 83.7024, -32.6844, 1.69", "40.0276, 84.3045, -33.3281, 1.11", "40.2563, 84.5397, -33.5879, 0.52", "40.7397, 85.1941, -34.2955, 0.96", "40.901, 85.4713, -34.5756, 1.25", "41.1215, 85.973, -35.041, 0.96", "41.7038, 87.5975, -36.4386, 0.29", "42.0988, 88.8749, -37.4758, 0.59", "42.3958, 89.9543, -38.3258, 1.11", "42.4776, 90.3456, -38.6646, 1.4", "42.6813, 91.6626, -39.8628, 0.22", "42.745, 92.3722, -40.6071, 1.47", "42.7446, 92.5696, -40.8297, 1.69", "42.7311, 92.973, -41.2728, 1.55", "42.5, 95.0676, -43.64, 0.59", "42.4308, 95.4051, -44.0312, 0.44", "42.036, 96.617, -45.4222, 0.44", "41.6398, 97.4901, -46.414, 0.29", "41.1408, 98.4171, -47.4275, 0.29", "40.9238, 98.7588, -47.7631, 0.22", "40.3812, 99.5125, -48.3509, 1.18", "39.9904, 99.9965, -48.7133, 1.4", "38.8641, 101.265, -49.5852, 0.15", "38.8202, 101.307, -49.6183, 0.15", "38.3027, 101.781, -50.0432, 0.15", "37.7064, 102.371, -50.5724, 0.15", "36.7811, 103.391, -51.4064, 0.15", "36.2398, 104.047, -51.9171, 1.99", "35.6658, 104.811, -52.4749, 2.28", "34.5701, 106.364, -53.5669, 0.37", "33.9981, 107.253, -54.171, 0.29", "33.5079, 108.121, -54.7158, 0.22", "33.2686, 108.668, -55.0604, 0.22", "33.2518, 108.715, -55.0896, 0.22", "32.938, 109.952, -55.7912, 0.22", "32.7843, 110.862, -56.2846, 1.18", "32.7346, 111.31, -56.539, 1.18", "32.6363, 113.115, -57.6196, 0.29", "32.629, 114.068, -58.2073, 0.29", "32.6486, 114.586, -58.4827, 0.29", "32.7838, 115.778, -58.997, 1.4", "32.8372, 116.102, -59.1129, 1.99", "32.8475, 116.157, -59.1287, 1.99", "32.999, 116.806, -59.2554, 1.99", "33.5479, 118.806, -59.6305, 0.37", "33.8061, 119.649, -59.794, 0.59", "34.2538, 120.949, -60.0235, 0.29", "34.5435, 121.739, -60.1667, 0.88", "34.5814, 121.834, -60.1867, 0.88", "34.6474, 121.974, -60.2207, 0.88", "35.2115, 122.97, -60.5656, 0.29", "35.7634, 123.851, -60.9002, 0.29", "36.0659, 124.269, -61.082, 0.66", "36.6863, 125.045, -61.4795, 0.22", "37.1908, 125.656, -61.8517, 1.77", "37.2578, 125.737, -61.9063, 1.77", "37.6219, 126.196, -62.2723, 1.69", "38.1489, 126.875, -62.8492, 0.59", "38.358, 127.156, -63.0906, 0.59", "38.848, 127.874, -63.6761, 0.29", "39.1077, 128.294, -63.9918, 0.66", "39.88, 129.624, -64.898, 0.22", "40.4288, 130.645, -65.5557, 0.22", "40.4789, 130.745, -65.617, 0.22", "40.8061, 131.374, -66.0207, 1.18", "41.019, 131.777, -66.2779, 1.18", "41.6458, 132.926, -67.0554, 0.29", "42.1365, 133.82, -67.7047, 1.03", "42.3102, 134.13, -67.9647, 1.62", "43.1046, 135.535, -69.2346, 0.22", "43.2394, 135.781, -69.4683, 0.52", "43.7103, 136.624, -70.3042, 0.22", "44.0966, 137.301, -71.0013, 1.03", "44.543, 138.083, -71.8249, 0.22", "44.8926, 138.719, -72.5311, 1.55", "45.083, 139.148, -73.0207, 1.62" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "30.9078, 67.6614, -28.3177, 1.33", "31.3587, 68.2019, -28.3925, 1.33", "31.404, 68.2529, -28.4028, 1.33", "31.7587, 68.6321, -28.4836, 1.33", "31.8062, 68.6812, -28.4943, 1.33", "32.4889, 69.3143, -28.6449, 0.66", "33.371, 70.1301, -28.8477, 0.22", "33.969, 70.7537, -29.0206, 0.66", "34.2499, 71.0608, -29.1052, 0.88", "34.3024, 71.1177, -29.1208, 0.88", "34.9829, 71.8003, -29.3045, 0.22", "35.4191, 72.1952, -29.3954, 0.22", "36.3182, 72.9341, -29.5059, 0.96", "36.4025, 72.9967, -29.5138, 0.96", "36.7688, 73.2428, -29.5385, 0.96", "37.7583, 73.8196, -29.573, 0.22", "38.3693, 74.1667, -29.5783, 1.11", "38.8585, 74.4231, -29.5767, 1.84", "39.5325, 74.7507, -29.571, 2.28", "39.9656, 74.9781, -29.5651, 1.99", "41.4506, 75.811, -29.5435, 0.15", "42.1601, 76.2192, -29.5422, 0.15", "42.2198, 76.2548, -29.5436, 0.15", "43.311, 76.9445, -29.5727, 0.15", "44.0868, 77.4657, -29.5953, 1.55", "44.6252, 77.8329, -29.6184, 1.84", "46.1696, 78.8924, -29.7111, 0.22", "46.6223, 79.1905, -29.7439, 0.22", "47.2826, 79.6173, -29.8148, 0.96", "47.6752, 79.8746, -29.8706, 1.11", "49.0551, 80.7835, -30.1706, 0.22", "49.6996, 81.2148, -30.3513, 0.52", "50.001, 81.4106, -30.4544, 0.59", "50.9155, 81.9617, -30.812, 0.22", "51.3197, 82.1685, -30.9951, 0.22", "52.3756, 82.6269, -31.5188, 0.88", "52.4447, 82.6466, -31.5537, 0.88", "52.8074, 82.6962, -31.7126, 0.88", "52.9198, 82.7029, -31.7541, 0.88", "54.1643, 82.6762, -32.1509, 0.29", "54.2513, 82.6636, -32.1963, 0.29", "55.1474, 82.5177, -32.7616, 0.29", "56.3019, 82.3437, -33.5826, 1.47", "56.5397, 82.3159, -33.7645, 1.92", "57.3801, 82.2372, -34.4466, 1.99", "60.2439, 82.0734, -36.9011, 0.29", "61.0921, 82.0581, -37.6424, 0.22", "61.1433, 82.0598, -37.69, 0.22", "61.6418, 82.1034, -38.1408, 0.22", "61.7029, 82.1128, -38.1916, 0.22", "62.7464, 82.4478, -38.9091, 1.18", "63.0934, 82.6398, -39.0499, 1.33", "63.6039, 82.9221, -39.245, 1.18", "64.6309, 83.5012, -39.6516, 0.22", "64.6964, 83.5379, -39.6777, 0.22", "65.4097, 83.9637, -39.9514, 0.22", "65.4658, 84.0001, -39.9704, 0.22", "66.0626, 84.3372, -40.1197, 0.44", "66.1273, 84.3633, -40.1172, 0.44", "66.6876, 84.5503, -40.165, 0.44", "66.7911, 84.5879, -40.1896, 0.44", "67.2552, 84.7716, -40.3593, 0.96", "67.64, 84.944, -40.6714, 1.33", "68.7662, 85.4793, -41.8186, 0.37", "70.1604, 86.1906, -43.3807, 0.29", "70.817, 86.5589, -44.1773, 1.69", "71.1745, 86.7705, -44.6352, 2.21", "73.4781, 88.3027, -47.8357, 0.22", "73.5138, 88.3291, -47.8894, 0.22", "73.8409, 88.6068, -48.4235, 0.96", "74.0836, 88.8258, -48.7877, 0.96", "74.9725, 89.6606, -50.0252, 0.29", "75.4932, 90.1762, -50.717, 0.22", "75.568, 90.2521, -50.8062, 0.22", "75.9409, 90.551, -51.2562, 0.22", "75.9838, 90.5755, -51.3055, 0.22", "76.8279, 90.9944, -52.3349, 0.96", "77.6894, 91.3896, -53.4046, 0.66", "78.4432, 91.7064, -54.3384, 0.22", "78.9608, 91.9168, -54.9763, 1.33", "79.4297, 92.0961, -55.5487, 1.33", "81.063, 92.699, -57.4195, 0.15", "81.8064, 92.9401, -58.2222, 0.37", "81.8622, 92.9556, -58.2773, 0.37", "81.9955, 92.9959, -58.4473, 0.37", "82.0828, 93.0278, -58.5731, 0.37", "82.643, 93.2564, -59.4305, 0.59", "83.4171, 93.5558, -60.6106, 0.29", "84.231, 93.9004, -61.8794, 2.28", "86.3383, 94.857, -65.1401, 0.88", "86.8321, 95.101, -65.9121, 0.66", "87.4886, 95.407, -66.9223, 0.22", "87.5318, 95.4252, -66.987, 0.22", "88.0782, 95.6004, -67.6857, 1.33", "88.4582, 95.6168, -68.0402, 1.69", "88.5185, 95.5944, -68.0674, 1.69", "89.9596, 94.8273, -68.6232, 0.22", "90.7012, 94.3355, -68.855, 0.22", "90.9422, 94.1561, -68.9247, 0.59", "91.0996, 94.0227, -68.9633, 0.59", "91.1503, 93.9772, -68.9756, 0.59", "91.7573, 93.433, -69.1011, 0.22", "91.8099, 93.388, -69.104, 0.22", "92.187, 93.0786, -69.1336, 1.03", "92.4832, 92.8384, -69.161, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.0615, 182.654, 4.36892, 0.29", "-9.30483, 183.883, 4.01612, 0.29", "-9.37288, 185.068, 3.68366, 0.29", "-9.3729, 185.133, 3.66116, 0.29", "-9.35139, 186.075, 3.3019, 0.29", "-9.35065, 186.288, 3.22055, 0.29", "-9.35578, 187.137, 2.89547, 0.52", "-9.32041, 187.939, 2.57847, 0.81", "-9.28219, 189.02, 2.14229, 0.22", "-9.30627, 190.156, 1.6914, 1.69", "-9.37494, 190.635, 1.51117, 1.92", "-9.39186, 190.697, 1.48878, 1.92", "-9.53153, 191.09, 1.35944, 1.92", "-10.0235, 192.436, 0.949712, 0.29", "-10.0485, 192.508, 0.931949, 0.29", "-10.3388, 193.471, 0.706629, 0.22", "-10.5298, 194.174, 0.586715, 0.22", "-10.8331, 195.301, 0.447133, 0.22", "-11.1311, 196.435, 0.351534, 1.55", "-11.2327, 196.852, 0.336735, 1.84", "-11.7451, 198.993, 0.393845, 0.22", "-11.9725, 200.113, 0.490387, 1.25", "-12.0628, 200.559, 0.553501, 1.62", "-12.1233, 200.775, 0.602489, 1.62", "-12.1419, 200.829, 0.618284, 1.62", "-12.6172, 202.068, 1.02965, 0.29", "-12.9666, 202.908, 1.32432, 0.29", "-13.2467, 203.555, 1.46298, 0.29", "-13.6332, 204.406, 1.5836, 0.22", "-13.9211, 204.999, 1.62901, 0.22", "-14.1608, 205.458, 1.61112, 0.59", "-14.471, 205.993, 1.53069, 0.29", "-15.1428, 207.089, 1.36053, 1.92", "-15.4628, 207.643, 1.27442, 2.5", "-15.5986, 207.919, 1.23112, 2.36", "-16.2943, 209.469, 1.03038, 0.29", "-16.4744, 209.848, 0.985963, 0.29", "-16.8919, 210.697, 0.905571, 0.29", "-17.1476, 211.217, 0.865174, 0.29", "-17.5278, 212.003, 0.807961, 0.22", "-17.8604, 212.704, 0.76646, 0.22", "-18.4496, 213.943, 0.73959, 2.58", "-18.594, 214.236, 0.718706, 2.87" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-9.0615, 182.654, 4.36892, 0.15", "-10.6114, 184.027, 4.48955, 0.15", "-11.5815, 185.01, 4.42389, 0.15", "-11.6335, 185.07, 4.41609, 0.15", "-12.5438, 186.098, 4.27955, 0.15", "-13.2733, 186.924, 4.17014, 0.15", "-13.6427, 187.342, 4.11472, 0.29", "-14.3414, 188.285, 3.77156, 0.44", "-14.5607, 188.617, 3.62618, 0.74" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "0.147213, -65.9434, -26.8164, 0.66", "0.934641, -66.438, -30.218, 0.66", "2.14139, -67.1048, -34.7584, 1.84", "4.4336, -68.1796, -42.4946, 1.92", "6.06586, -68.8533, -47.5672, 1.92", "7.29788, -69.3091, -51.1313, 0.52", "7.85051, -69.4966, -52.6338, 0.52", "8.69106, -69.6928, -54.5025, 1.84", "10.377, -69.9953, -57.6019, 0.44", "10.7391, -70.0791, -58.2475, 0.66", "11.2062, -70.2353, -59.2133, 0.44", "11.7553, -70.4952, -60.5275, 1.77", "11.8534, -70.5581, -60.8045, 2.06", "13.1694, -71.6762, -64.9245, 1.77", "14.1201, -72.6732, -68.1778, 2.06", "14.8788, -73.5543, -70.8502, 0.88", "15.4388, -74.26, -72.8317, 0.22", "16.0005, -74.9889, -74.7251, 1.69", "16.0794, -75.0847, -74.9596, 1.99", "16.933, -76.0648, -76.9862, 0.59", "17.5454, -76.7282, -78.2018, 0.22", "17.9576, -77.1884, -79.0633, 1.69", "18.1315, -77.3967, -79.4999, 1.69", "19.0401, -78.4566, -82.0431, 0.29", "19.3395, -78.7586, -82.9469, 0.22", "20.1265, -79.5329, -85.4388, 1.03", "20.9293, -80.2971, -88.1843, 1.25", "21.6281, -80.9375, -90.7246, 1.62", "22.2034, -81.4518, -92.9967, 1.62", "22.821, -81.9702, -95.7191, 1.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "0.147213, -65.9434, -26.8164, 1.99", "0.496083, -66.2951, -25.7218, 1.99", "1.15539, -67.0003, -24.2426, 1.77", "2.50558, -68.8362, -21.6611, 0.88", "5.10338, -73.3422, -17.3077, 0.74", "5.26271, -73.6907, -17.0788, 0.74", "5.47261, -74.3033, -16.8898, 1.62", "5.61519, -75.2231, -16.8575, 1.62", "5.55301, -76.7868, -17.3464, 0.59", "5.41242, -77.7737, -17.8892, 2.21", "5.27469, -78.665, -18.5245, 2.5", "4.89601, -80.7054, -20.1307, 0.37", "4.57005, -82.3136, -21.4771, 0.37", "4.34918, -83.3871, -22.4486, 1.92", "4.29619, -83.6498, -22.6967, 2.14", "4.04314, -84.9771, -23.9488, 0.29", "3.80056, -86.3835, -25.2919, 0.29", "3.74115, -86.9151, -25.7774, 0.29", "3.73158, -87.1974, -26.0234, 0.29", "3.73873, -87.9752, -26.7098, 1.33", "3.77911, -88.7179, -27.3977, 1.69", "3.96592, -90.2078, -28.7771, 0.44", "4.2155, -91.3781, -29.8351, 0.44", "4.41281, -92.1874, -30.5319, 2.36", "4.51806, -92.6167, -30.875, 2.58", "5.01688, -94.7705, -32.4564, 0.29", "5.18475, -95.5698, -32.9743, 0.29", "5.40079, -96.6487, -33.5748, 1.99", "5.54645, -97.4109, -33.9517, 2.36", "5.89508, -99.5509, -35.0458, 0.29", "5.98543, -100.419, -35.5334, 0.29", "5.99349, -101.231, -36.0328, 0.22", "5.98501, -101.351, -36.121, 0.22", "5.90683, -101.91, -36.6496, 0.22", "5.64144, -103.296, -38.1434, 0.59", "5.30037, -104.608, -39.6653, 1.69", "5.13109, -105.165, -40.3254, 2.21", "4.88074, -105.858, -41.1382, 2.06", "4.24067, -107.534, -42.9836, 0.74", "4.06193, -107.995, -43.4502, 0.88", "3.84363, -108.599, -43.974, 0.88", "3.53641, -109.604, -44.7018, 0.29", "3.30712, -110.438, -45.1958, 1.18", "3.13394, -111.093, -45.4849, 1.47", "2.9422, -111.896, -45.7067, 1.77", "2.91618, -112.008, -45.7311, 1.77", "2.59757, -113.257, -45.9321, 0.29", "2.34656, -114.117, -46.0065, 0.29", "2.09943, -114.876, -46.0446, 1.84", "1.84818, -115.557, -46.0717, 2.65", "1.47145, -116.513, -46.1055, 1.92", "0.974196, -117.751, -46.1568, 0.52", "0.445222, -119.053, -46.2292, 0.22", "0.183768, -119.773, -46.2863, 0.22", "0.162089, -119.848, -46.2944, 0.22", "0.0313242, -120.499, -46.3788, 0.88", "-0.0122222, -120.945, -46.4489, 1.25", "-0.032026, -121.502, -46.5433, 1.25", "-0.042173, -122.359, -46.7022, 0.81", "-0.0431948, -123.634, -46.9435, 0.29", "-0.0785905, -124.427, -47.1051, 0.29", "-0.211444, -125.454, -47.3466, 1.84", "-0.330949, -126.067, -47.4986, 1.99", "-0.527928, -126.813, -47.6932, 1.77", "-0.548907, -126.876, -47.7095, 1.77", "-1.10995, -128.348, -48.054, 0.22", "-1.50753, -129.359, -48.2951, 0.22", "-1.94964, -130.54, -48.564, 0.22", "-2.27415, -131.464, -48.7704, 0.88", "-2.48255, -132.096, -48.9143, 1.47", "-2.68361, -132.781, -49.0607, 1.69", "-2.93238, -133.824, -49.2582, 1.77", "-3.07654, -134.514, -49.3865, 1.77", "-3.09185, -134.581, -49.3994, 1.77", "-3.50341, -136.417, -49.7912, 0.22", "-3.64225, -137.109, -49.9524, 0.74", "-3.72609, -137.585, -50.0666, 0.74", "-3.92768, -139.048, -50.4151, 0.22", "-3.97545, -139.55, -50.543, 0.59", "-4.01218, -140.773, -50.8697, 0.22", "-4.01292, -141.563, -51.0771, 1.11", "-4.02055, -142.257, -51.2565, 2.14", "-4.01252, -143.037, -51.4452, 2.36", "-3.95367, -144.283, -51.7137, 0.81", "-3.85025, -145.676, -51.9836, 0.22", "-3.72414, -147.042, -52.2042, 0.22", "-3.57057, -148.197, -52.3811, 0.22", "-3.38239, -149.26, -52.5331, 0.22", "-3.19931, -150.096, -52.6358, 0.96", "-3.07757, -150.535, -52.6874, 1.33", "-2.86274, -151.165, -52.7761, 0.96", "-2.30863, -152.493, -53.0107, 0.22", "-2.07058, -153.051, -53.1227, 0.74", "-1.92162, -153.454, -53.2241, 0.74", "-1.57499, -154.557, -53.5226, 0.22", "-1.39848, -155.23, -53.7152, 1.11", "-1.27993, -155.792, -53.8769, 1.55", "-1.19419, -156.404, -54.0741, 1.69", "-1.07963, -157.766, -54.6003, 0.22", "-1.07156, -158.69, -54.9835, 1.03", "-1.11337, -159.191, -55.2319, 1.18", "-1.1974, -159.693, -55.5097, 1.47", "-1.51082, -161.001, -56.293, 0.22", "-1.90692, -162.122, -57.0215, 0.22", "-2.26324, -162.91, -57.5654, 0.22", "-2.86531, -164.064, -58.3958, 1.55", "-3.10186, -164.477, -58.6927, 1.77", "-3.34272, -164.861, -58.9576, 1.47", "-4.38448, -166.43, -59.9069, 0.22", "-4.41409, -166.475, -59.9314, 0.22", "-4.68332, -166.904, -60.139, 0.29", "-4.72455, -166.965, -60.1659, 0.29", "-5.15436, -167.576, -60.4597, 0.29", "-5.89068, -168.471, -60.9166, 0.22", "-5.9731, -168.559, -60.9613, 0.22", "-6.62427, -169.132, -61.2964, 0.52", "-7.57016, -169.77, -61.7936, 0.29", "-7.63222, -169.809, -61.8234, 0.29", "-8.34723, -170.258, -62.0959, 1.18", "-8.4115, -170.3, -62.1157, 1.18", "-9.10795, -170.826, -62.2918, 1.55", "-10.6836, -172.137, -62.6218, 0.22", "-11.8924, -173.275, -62.8014, 0.22", "-12.8128, -174.238, -62.9174, 1.77", "-13.0738, -174.572, -63.0098, 2.21", "-13.7906, -175.66, -63.4031, 1.11", "-13.8225, -175.716, -63.4281, 1.11", "-14.2174, -176.479, -63.833, 1.77", "-14.4487, -176.928, -64.11, 2.06", "-16.0894, -180.132, -66.2421, 0.22", "-16.647, -181.169, -66.9446, 1.03", "-17.3034, -182.363, -67.7734, 0.37", "-17.8372, -183.292, -68.3984, 0.22", "-18.1169, -183.757, -68.7013, 0.37", "-18.8801, -184.947, -69.4092, 0.81", "-19.8255, -186.393, -70.0384, 0.22", "-19.8545, -186.44, -70.058, 0.22", "-20.479, -187.591, -70.4423, 0.22", "-20.6096, -187.846, -70.5137, 0.52", "-20.6379, -187.908, -70.5275, 0.52", "-21.0403, -188.898, -70.6672, 0.22", "-21.2634, -189.723, -70.7886, 0.22", "-21.4296, -190.611, -70.9408, 0.22", "-21.5484, -191.587, -71.1264, 1.33", "-21.5956, -192.076, -71.2367, 1.55", "-21.6266, -192.492, -71.3417, 1.55", "-21.7, -194.253, -71.8365, 0.22", "-21.7041, -195.352, -72.156, 0.22", "-21.7002, -195.417, -72.1738, 0.22", "-21.6075, -196.477, -72.4386, 0.88", "-21.5875, -196.753, -72.5011, 1.33", "-21.5612, -197.313, -72.607, 1.33", "-21.5716, -197.809, -72.6492, 1.11", "-21.6659, -199.042, -72.7005, 0.22", "-21.7407, -199.74, -72.7045, 0.88", "-21.8082, -200.247, -72.6904, 1.11", "-21.9319, -200.967, -72.6824, 0.81", "-22.2044, -202.242, -72.6599, 0.22", "-22.519, -203.497, -72.6576, 0.22", "-22.7774, -204.337, -72.642, 1.03", "-22.9089, -204.747, -72.629, 1.4", "-23.3626, -206.135, -72.5889, 0.22", "-23.6212, -206.883, -72.5729, 0.96", "-23.9074, -207.671, -72.5939, 1.25", "-24.4275, -209.063, -72.6509, 0.37", "-24.7448, -209.934, -72.7158, 0.22", "-24.7639, -209.999, -72.7221, 0.22", "-24.9867, -211.044, -72.8371, 0.22", "-25.1815, -212.326, -73.0149, 1.4", "-25.2465, -212.9, -73.0976, 1.4", "-25.3619, -214.253, -73.3303, 0.29", "-25.4674, -215.393, -73.5182, 0.29", "-25.5214, -215.964, -73.6008, 0.37", "-25.6202, -216.9, -73.7384, 0.29", "-25.6971, -217.505, -73.8186, 0.29", "-25.8681, -218.318, -73.9658, 0.29", "-26.0897, -219.035, -74.1347, 1.4", "-26.4047, -219.887, -74.3826, 1.4", "-26.8773, -221.244, -74.8424, 0.22", "-27.0438, -221.8, -75.0503, 0.44", "-27.3036, -223.076, -75.5361, 0.29", "-27.3821, -223.747, -75.7887, 0.81", "-27.3971, -224.352, -75.9784, 0.81", "-27.34, -225.199, -76.2874, 0.74", "-27.2546, -225.852, -76.5248, 0.81", "-27.0891, -226.958, -76.9442, 0.22", "-26.9956, -227.423, -77.1139, 0.88", "-26.8223, -228.262, -77.4241, 1.18", "-26.4547, -230.324, -78.3828, 0.66", "-26.3845, -230.954, -78.7014, 0.44", "-26.349, -231.469, -78.9863, 1.4", "-26.3399, -231.956, -79.2923, 1.77", "-26.3323, -232.602, -79.7216, 1.69", "-26.302, -234.63, -81.1228, 0.29", "-26.2843, -235.594, -81.7245, 0.29", "-26.2703, -236.199, -82.0867, 0.29", "-26.2594, -237.757, -82.9842, 1.33", "-26.2723, -238.738, -83.5266, 1.92", "-26.2861, -239.637, -83.9857, 1.11", "-26.2513, -240.856, -84.413, 0.15", "-26.1248, -242.184, -84.6737, 0.15", "-26.0216, -243.005, -84.7152, 1.25", "-25.9495, -243.425, -84.6708, 1.77", "-25.8405, -243.986, -84.5568, 2.06", "-25.3116, -246.229, -83.9138, 0.22", "-24.8977, -247.66, -83.4121, 0.22", "-24.8806, -247.712, -83.3903, 0.22", "-24.6399, -248.38, -83.0702, 0.88", "-24.6184, -248.438, -83.0409, 0.88", "-24.4038, -249.029, -82.7295, 1.11", "-24.3807, -249.089, -82.7022, 1.11" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-29.9289, -76.632, 1.64558, 0.52", "-33.2958, -77.7781, -1.17657, 0.52", "-34.0953, -78.0403, -1.79323, 0.37", "-34.9347, -78.3086, -2.37614, 1.55", "-35.4916, -78.4755, -2.70341, 2.06", "-36.5982, -78.8196, -3.31623, 1.69", "-37.7417, -79.2122, -3.92967, 0.44", "-38.2478, -79.4047, -4.12412, 1.4", "-38.913, -79.6512, -4.39777, 1.69", "-40.962, -80.4578, -5.30547, 0.22", "-41.6121, -80.743, -5.57706, 0.22", "-42.1374, -81.0326, -5.84429, 0.22", "-42.7728, -81.4167, -6.22571, 0.22", "-42.8186, -81.4516, -6.26483, 0.22", "-43.5895, -82.1836, -7.10947, 1.69", "-43.7521, -82.3671, -7.32096, 1.99", "-45.2034, -84.1484, -9.30535, 0.74", "-45.8953, -85.057, -10.2715, 2.28", "-47.1531, -86.8999, -12.0997, 0.52", "-47.4847, -87.4963, -12.6424, 1.03", "-47.6042, -87.8028, -12.8771, 1.03", "-47.9008, -89.0116, -13.5992, 0.29", "-48.1002, -90.2475, -14.2022, 1.77", "-48.1372, -90.6396, -14.3769, 2.28", "-48.3071, -92.9531, -15.2052, 0.22", "-48.3807, -94.8564, -15.891, 0.22", "-48.3507, -96.8873, -16.6041, 0.74" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-29.9289, -76.632, 1.64558, 0.37", "-30.2089, -79.6509, 2.28858, 0.37", "-30.2479, -80.6907, 2.54626, 0.22", "-30.2663, -81.6564, 2.79144, 0.88", "-30.2822, -82.2117, 2.93128, 0.88", "-30.3409, -83.9669, 3.37013, 0.22", "-30.3708, -84.8725, 3.58853, 0.22", "-30.3863, -85.6371, 3.85913, 0.66", "-30.4074, -86.1338, 3.99945, 0.66", "-30.5397, -87.2523, 4.2219, 0.22", "-30.5544, -87.3185, 4.23072, 0.22", "-30.7684, -88.0121, 4.25537, 0.22", "-30.9878, -88.588, 4.25526, 0.37", "-31.2143, -89.0964, 4.25947, 0.37", "-31.6912, -90.0597, 4.27094, 0.22", "-31.9563, -90.6423, 4.27275, 1.62", "-32.2173, -91.3174, 4.26047, 2.28", "-32.5075, -92.1878, 4.23251, 1.47", "-32.9668, -93.7515, 4.20003, 0.22", "-33.2316, -94.7896, 4.19535, 1.55", "-33.6143, -96.4295, 4.21938, 0.22", "-33.8328, -97.3738, 4.24976, 0.22", "-33.9433, -97.8634, 4.27435, 0.22", "-34.1117, -98.7185, 4.33974, 0.22", "-34.1851, -99.1754, 4.37157, 0.22", "-34.3663, -100.242, 4.47346, 1.62", "-34.4604, -100.658, 4.52495, 2.06", "-34.6403, -101.374, 4.6149, 1.77", "-34.9728, -102.786, 4.70769, 0.22", "-35.0668, -103.279, 4.72584, 0.59", "-35.0779, -103.346, 4.72838, 0.59", "-35.1384, -103.84, 4.74992, 0.59", "-35.2411, -104.854, 4.80011, 0.29", "-35.3213, -105.891, 4.85403, 0.22", "-35.4213, -107.16, 4.91734, 0.22", "-35.4926, -107.881, 4.9554, 0.59", "-35.5567, -108.355, 4.97812, 0.59", "-35.5685, -108.424, 4.98108, 0.59", "-35.7661, -109.34, 5.01175, 0.22", "-35.9916, -110.117, 5.02818, 1.55", "-36.2294, -110.745, 5.01335, 1.55", "-36.7424, -111.926, 5.07813, 0.29", "-37.045, -112.561, 5.15201, 0.22", "-37.2636, -113.005, 5.22583, 0.66", "-37.4919, -113.446, 5.32361, 1.03", "-37.678, -113.801, 5.4266, 1.03", "-38.5559, -115.412, 6.05, 0.22", "-38.7436, -115.736, 6.19974, 0.22", "-38.9499, -116.088, 6.36764, 0.66", "-39.0998, -116.325, 6.48983, 0.66", "-39.7243, -117.244, 6.96374, 0.37", "-40.1884, -117.902, 7.2821, 1.25", "-40.6141, -118.508, 7.5302, 1.55", "-40.8851, -118.944, 7.71732, 1.77", "-41.5722, -120.266, 8.26236, 0.29", "-41.7677, -120.713, 8.43765, 0.96", "-41.9496, -121.219, 8.61782, 1.11", "-42.151, -121.951, 8.84535, 1.03", "-42.4411, -123.344, 9.20219, 0.29", "-42.6043, -124.388, 9.38724, 0.29", "-42.6132, -124.456, 9.39409, 0.29", "-42.7391, -125.048, 9.43486, 1.4", "-42.9111, -125.596, 9.46154, 1.62", "-43.3827, -126.812, 9.48908, 0.22", "-43.9673, -128.029, 9.47915, 2.28", "-44.2417, -128.539, 9.48506, 2.58", "-44.9193, -129.719, 9.51669, 2.06", "-45.6889, -130.966, 9.51334, 0.29", "-46.2644, -131.818, 9.48348, 0.81", "-46.697, -132.393, 9.44677, 1.25", "-47.5118, -133.408, 9.31222, 0.29", "-47.9786, -134.018, 9.22202, 0.29", "-48.6403, -134.962, 9.06315, 0.74", "-48.8852, -135.327, 8.99527, 0.81", "-49.337, -136.115, 8.86429, 0.44", "-49.6518, -136.814, 8.77797, 0.74", "-50.0693, -137.919, 8.6612, 0.29", "-50.2663, -138.618, 8.61556, 0.52", "-50.4146, -139.318, 8.6023, 0.81", "-50.4941, -139.984, 8.58674, 0.96", "-50.5841, -141.229, 8.60824, 0.52", "-50.6445, -141.854, 8.66722, 1.11", "-50.7392, -142.456, 8.76259, 1.11", "-50.9714, -143.341, 8.96857, 0.44", "-51.5014, -144.803, 9.40886, 3.32", "-52.1208, -146.154, 9.91607, 1.62", "-52.8194, -147.4, 10.4656, 0.29", "-53.5093, -148.415, 10.9146, 0.22", "-54.3091, -149.391, 11.3034, 0.22", "-54.8439, -149.941, 11.491, 0.22", "-55.4145, -150.454, 11.613, 1.77", "-56.04, -151.022, 11.6537, 2.06", "-56.9629, -151.947, 11.6084, 1.18", "-57.7192, -152.82, 11.5148, 0.29", "-58.153, -153.439, 11.4425, 0.29", "-58.589, -154.154, 11.3522, 0.22", "-58.9216, -154.809, 11.2749, 0.88", "-59.1323, -155.339, 11.2442, 1.47", "-59.3287, -155.99, 11.2586, 1.25", "-59.5385, -156.755, 11.2975, 0.88", "-59.705, -157.326, 11.3261, 0.59", "-60.0214, -158.201, 11.369, 0.37", "-60.4066, -159.049, 11.4086, 0.37", "-60.794, -159.775, 11.4181, 0.52", "-61.1802, -160.413, 11.4065, 0.74", "-61.6493, -161.111, 11.3713, 1.62", "-62.142, -161.785, 11.2996, 2.06", "-62.4535, -162.182, 11.2363, 1.69", "-63.2059, -163.126, 11.0436, 0.37", "-63.7295, -163.824, 10.9163, 0.29", "-64.1724, -164.462, 10.8245, 0.22", "-64.5685, -165.049, 10.7617, 1.03", "-64.825, -165.423, 10.7278, 1.25", "-65.2664, -166.02, 10.6871, 1.11", "-66.0967, -167.092, 10.6519, 0.22", "-66.8243, -168.018, 10.6368, 0.22", "-67.2119, -168.501, 10.6433, 1.03", "-67.6214, -169.003, 10.6713, 1.4", "-67.997, -169.441, 10.6932, 1.92" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-59.4694, 22.353, -85.5123, 0.22", "-60.5393, 22.6412, -86.0351, 0.22", "-61.6452, 22.9306, -86.5448, 0.22", "-62.0035, 23.0209, -86.697, 0.74", "-62.8968, 23.2627, -87.0535, 1.03", "-63.7668, 23.5082, -87.4232, 0.22", "-63.8388, 23.5257, -87.453, 0.22", "-64.4932, 23.7079, -87.717, 0.22", "-65.1888, 23.8792, -87.9804, 0.66", "-65.5843, 23.9754, -88.1188, 0.81", "-66.8008, 24.2576, -88.4952, 0.22", "-67.784, 24.4904, -88.7644, 0.22", "-68.5848, 24.687, -88.974, 0.29", "-68.6775, 24.7122, -88.9974, 0.29", "-69.276, 24.8805, -89.1364, 0.29", "-70.2914, 25.1951, -89.3398, 1.4", "-70.8059, 25.3842, -89.4183, 2.21", "-71.2151, 25.5542, -89.4865, 2.14", "-72.5987, 26.0593, -89.715, 0.22", "-72.6641, 26.0813, -89.7258, 0.22", "-73.397, 26.3122, -89.8427, 0.59", "-73.7481, 26.4213, -89.8934, 0.59", "-74.4944, 26.6389, -89.9989, 0.22", "-75.1915, 26.828, -90.082, 0.22", "-75.2598, 26.8423, -90.0872, 0.22", "-75.8421, 26.9522, -90.1389, 0.22", "-75.9106, 26.9633, -90.1479, 0.22", "-76.1692, 27.0118, -90.1873, 0.22", "-76.9028, 27.1924, -90.3258, 1.03", "-77.2507, 27.2866, -90.4066, 1.47", "-77.7471, 27.4095, -90.5342, 1.47", "-78.9356, 27.6368, -90.8674, 0.22", "-79.0019, 27.6472, -90.8869, 0.22", "-79.694, 27.7313, -91.1056, 0.22", "-80.0131, 27.7563, -91.2115, 0.22", "-80.1079, 27.7609, -91.2429, 0.22", "-80.6746, 27.763, -91.4062, 0.22", "-81.3683, 27.7452, -91.6339, 0.22", "-81.4242, 27.7441, -91.6556, 0.22", "-82.239, 27.7476, -92.0385, 0.22", "-82.2921, 27.7486, -92.0664, 0.22", "-83.3861, 27.7767, -92.6997, 1.69", "-84.1926, 27.816, -93.2081, 2.28", "-84.7507, 27.8456, -93.577, 2.28", "-86.4182, 27.9433, -94.693, 0.22", "-87.7552, 28.0298, -95.6113, 0.22", "-88.347, 28.0688, -96.0135, 0.88", "-89.2726, 28.1338, -96.6464, 0.22", "-89.3404, 28.1362, -96.6889, 0.22", "-89.7261, 28.1311, -96.9118, 0.88", "-89.7864, 28.1238, -96.9465, 0.88", "-90.1728, 28.0482, -97.1542, 0.88", "-90.2432, 28.0319, -97.1884, 0.88", "-91.5175, 27.7358, -97.7526, 0.37", "-92.2672, 27.5889, -98.0685, 1.4", "-93.8218, 27.3316, -98.682, 0.22", "-94.5133, 27.2302, -98.9341, 0.52", "-95.2099, 27.1318, -99.1624, 0.22", "-95.9282, 27.0377, -99.3672, 1.62", "-96.3851, 26.9891, -99.4657, 1.84", "-97.0367, 26.9155, -99.5671, 1.25", "-98.3283, 26.7381, -99.6865, 0.22", "-99.0705, 26.6018, -99.7314, 0.29", "-99.1387, 26.5863, -99.7332, 0.29", "-99.7105, 26.4452, -99.7486, 0.29", "-100.301, 26.2991, -99.7565, 0.22", "-100.879, 26.1747, -99.7538, 0.22", "-101.74, 26.0276, -99.7308, 0.81", "-102.181, 25.9642, -99.7385, 1.03", "-103.68, 25.7764, -99.804, 0.22", "-104.141, 25.7297, -99.8329, 1.18", "-104.808, 25.7021, -99.8849, 1.55", "-105.316, 25.7055, -99.9319, 1.92", "-107.238, 25.809, -100.15, 0.22", "-108.039, 25.9058, -100.25, 0.66", "-108.683, 26.0285, -100.357, 0.81", "-109.612, 26.2633, -100.573, 0.22", "-109.676, 26.2836, -100.592, 0.22", "-110.176, 26.5023, -100.825, 0.22", "-110.917, 26.891, -101.269, 0.22", "-111.57, 27.2057, -101.722, 1.03", "-112.091, 27.4133, -102.095, 1.62", "-112.568, 27.5399, -102.424, 1.84", "-114.423, 27.8704, -103.606, 0.22", "-115.119, 27.9444, -104.013, 0.29", "-115.587, 27.9667, -104.255, 0.88", "-116.135, 27.9747, -104.514, 0.88", "-117.358, 27.9104, -104.99, 0.22", "-118.267, 27.8048, -105.26, 1.62", "-118.625, 27.7315, -105.318, 1.92", "-119.207, 27.6048, -105.387, 1.69", "-119.683, 27.5031, -105.414, 1.25", "-121.248, 27.1645, -105.373, 0.22", "-121.315, 27.1494, -105.364, 0.22", "-122.026, 26.938, -105.234, 0.22", "-122.082, 26.9194, -105.223, 0.22", "-122.485, 26.7631, -105.149, 1.18", "-123.233, 26.4307, -105.022, 1.84", "-123.772, 26.1686, -104.954, 2.06", "-125.362, 25.4077, -104.758, 0.22", "-125.434, 25.3746, -104.749, 0.22", "-126.321, 24.973, -104.643, 0.22", "-126.773, 24.7682, -104.594, 0.37", "-126.924, 24.7032, -104.583, 0.37", "-127.227, 24.5864, -104.556, 0.37", "-128.262, 24.1982, -104.425, 0.22", "-128.336, 24.1697, -104.415, 0.22", "-128.79, 23.9973, -104.352, 0.96", "-129.201, 23.8357, -104.301, 1.33", "-129.684, 23.6368, -104.25, 1.33", "-131.089, 22.9943, -104.098, 0.22", "-131.558, 22.7673, -104.05, 0.22", "-132.365, 22.3705, -103.969, 0.22", "-133.339, 21.8937, -103.873, 1.33", "-133.639, 21.7478, -103.845, 1.77", "-135.415, 20.8992, -103.695, 0.22", "-136.241, 20.5036, -103.636, 0.44", "-136.894, 20.1884, -103.593, 0.22", "-137.36, 19.9753, -103.553, 0.66", "-137.873, 19.7511, -103.499, 0.74", "-137.963, 19.7137, -103.489, 0.74", "-138.878, 19.3348, -103.399, 0.22", "-139.889, 18.8833, -103.294, 0.22", "-140.688, 18.4733, -103.23, 1.03", "-141.276, 18.1403, -103.196, 1.77", "-141.414, 18.0579, -103.191, 2.06", "-142.924, 17.0587, -103.217, 0.22", "-142.972, 17.0235, -103.221, 0.22", "-143.711, 16.3957, -103.327, 0.22", "-143.892, 16.242, -103.366, 1.03", "-144.246, 15.9628, -103.444, 1.03", "-145.013, 15.4128, -103.597, 0.22", "-145.078, 15.3706, -103.613, 0.22", "-145.593, 15.0481, -103.727, 0.22", "-146.145, 14.7134, -103.841, 0.22", "-146.211, 14.6714, -103.854, 0.22", "-147.088, 14.0808, -104.016, 0.22", "-147.921, 13.5429, -104.156, 1.25", "-148.42, 13.2189, -104.244, 1.62", "-148.477, 13.1817, -104.254, 1.62", "-148.976, 12.8525, -104.345, 0.88", "-149.709, 12.3569, -104.473, 0.22", "-150.644, 11.6966, -104.624, 0.22", "-150.708, 11.6501, -104.629, 0.22", "-151.211, 11.2818, -104.661, 0.22", "-151.683, 10.9127, -104.676, 1.03", "-152.076, 10.563, -104.673, 1.18", "-152.337, 10.2871, -104.646, 1.03", "-153.014, 9.4112, -104.507, 0.15", "-153.204, 9.1447, -104.465, 0.15", "-153.435, 8.78367, -104.408, 0.15", "-153.724, 8.29344, -104.336, 0.15", "-153.993, 7.81451, -104.278, 0.81", "-154.166, 7.48981, -104.249, 0.81", "-154.55, 6.64757, -104.184, 0.22", "-154.791, 6.09233, -104.135, 0.22", "-155.07, 5.49348, -104.079, 1.18", "-155.288, 5.06035, -104.032, 1.69", "-155.5, 4.64693, -103.985, 1.47", "-156.095, 3.52801, -103.834, 0.22", "-156.323, 3.1037, -103.762, 0.22", "-156.572, 2.67141, -103.684, 0.22", "-157.051, 1.91823, -103.541, 0.22", "-157.409, 1.42766, -103.485, 0.52", "-157.549, 1.24848, -103.48, 0.52", "-157.93, 0.72362, -103.527, 0.22", "-158.183, 0.35305, -103.598, 0.74", "-158.391, 0.0291678, -103.673, 0.74", "-159.038, -0.994794, -103.98, 0.22", "-159.408, -1.57645, -104.18, 0.22", "-160.178, -2.80735, -104.65, 1.99", "-160.591, -3.50252, -104.955, 2.43" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-59.4694, 22.353, -85.5123, 0.22", "-61.2364, 24.0379, -86.2975, 0.22", "-61.516, 24.3022, -86.426, 0.37", "-62.3641, 25.0512, -86.7986, 0.22", "-62.8405, 25.4581, -87.0017, 1.03", "-63.4758, 26.0038, -87.2605, 1.4", "-64.7212, 27.0759, -87.7793, 0.22", "-64.7702, 27.1175, -87.8053, 0.22", "-65.2713, 27.5436, -88.1301, 0.22", "-65.3671, 27.6299, -88.2167, 0.22", "-65.8597, 28.0744, -88.7003, 0.22", "-66.3339, 28.4907, -89.1912, 0.44", "-67.3875, 29.3713, -90.2999, 1.18", "-67.5717, 29.5205, -90.4985, 1.47", "-68.9828, 30.5577, -92.0073, 0.22", "-69.5617, 30.9216, -92.5653, 0.22", "-70.2419, 31.2958, -93.1671, 1.25", "-70.9487, 31.659, -93.7344, 2.21", "-71.6128, 31.9911, -94.2103, 2.06", "-72.9834, 32.7013, -95.2164, 0.22", "-73.8914, 33.1809, -95.8568, 0.22", "-73.9679, 33.2256, -95.9146, 0.22", "-74.5492, 33.588, -96.3606, 0.66", "-74.9729, 33.8033, -96.6894, 0.88", "-75.9126, 34.1565, -97.4004, 0.22", "-76.3695, 34.2895, -97.7569, 0.22", "-77.0843, 34.4312, -98.3327, 1.25", "-77.5843, 34.4883, -98.7344, 1.4", "-79.6283, 34.58, -100.35, 0.22", "-80.546, 34.6122, -101.064, 1.84", "-80.6018, 34.6139, -101.106, 1.84", "-81.2232, 34.6534, -101.586, 1.84", "-82.6506, 34.824, -102.689, 0.22", "-82.7058, 34.8354, -102.73, 0.22", "-83.5212, 35.1404, -103.332, 0.22", "-83.6043, 35.1728, -103.401, 0.22", "-84.0107, 35.3526, -103.737, 0.22", "-84.0539, 35.3743, -103.772, 0.22", "-84.5772, 35.6461, -104.177, 0.96", "-85.2405, 35.9687, -104.714, 0.96", "-86.2379, 36.3981, -105.513, 0.22", "-87.0336, 36.7498, -106.142, 0.22", "-87.0848, 36.7742, -106.183, 0.22", "-87.9079, 37.1818, -106.782, 1.55", "-88.4869, 37.4819, -107.173, 1.92", "-89.0014, 37.7351, -107.502, 1.92", "-89.0548, 37.759, -107.54, 1.92", "-90.8574, 38.4739, -108.962, 0.22", "-91.4744, 38.6929, -109.523, 0.22", "-91.5223, 38.7084, -109.572, 0.22", "-92.4052, 38.9503, -110.486, 1.55", "-93.4697, 39.1968, -111.646, 1.77", "-93.5174, 39.2061, -111.697, 1.77", "-95.2907, 39.4681, -113.435, 0.22", "-95.3346, 39.4747, -113.475, 0.22", "-96.0294, 39.5865, -114.005, 0.22", "-96.0893, 39.597, -114.04, 0.22", "-97.2118, 39.8144, -114.562, 0.22", "-98.1849, 40.0195, -114.975, 0.22", "-98.2396, 40.0319, -114.996, 0.22", "-99.1041, 40.2387, -115.365, 0.96", "-99.1659, 40.2556, -115.394, 0.96", "-100.674, 40.6538, -116.052, 0.22", "-101.558, 40.8871, -116.424, 1.4", "-102.297, 41.0982, -116.716, 2.06", "-102.82, 41.2565, -116.899, 2.36", "-104.829, 41.9026, -117.528, 0.22", "-105.994, 42.2997, -117.823, 0.22", "-106.637, 42.5374, -117.935, 0.88", "-107.06, 42.7096, -117.993, 1.18", "-108.035, 43.1352, -118.089, 0.22", "-108.107, 43.168, -118.096, 0.22", "-108.866, 43.5492, -118.163, 0.22", "-108.934, 43.588, -118.177, 0.22", "-109.551, 43.9418, -118.345, 0.22", "-109.601, 43.97, -118.362, 0.22", "-110.36, 44.3605, -118.727, 0.59", "-110.963, 44.6438, -119.033, 0.22", "-112.077, 45.1487, -119.613, 1.55", "-112.537, 45.3528, -119.844, 2.21", "-113.512, 45.7843, -120.311, 2.06", "-115.436, 46.6143, -121.156, 0.52", "-116.317, 47.0043, -121.506, 0.52", "-116.762, 47.206, -121.665, 0.52", "-117.486, 47.5381, -121.877, 0.22", "-118.174, 47.8836, -122.051, 0.66", "-118.791, 48.2362, -122.161, 0.88", "-119.78, 48.9099, -122.265, 0.22", "-120.277, 49.282, -122.329, 0.88", "-120.549, 49.507, -122.378, 0.88", "-121.245, 50.1414, -122.538, 0.22", "-121.737, 50.5854, -122.659, 0.22", "-122.165, 50.9646, -122.763, 0.88", "-122.684, 51.3796, -122.874, 1.18", "-123.704, 52.1153, -123.079, 0.22", "-123.762, 52.1526, -123.089, 0.22", "-124.863, 52.7394, -123.273, 0.22", "-125.611, 53.0943, -123.392, 0.22", "-126.493, 53.4772, -123.554, 1.84", "-127.149, 53.7314, -123.743, 2.36", "-127.742, 53.9265, -123.952, 1.99", "-129.292, 54.3643, -124.582, 0.15", "-129.841, 54.4961, -124.841, 0.59", "-130.629, 54.6488, -125.239, 0.74", "-132.329, 54.9369, -126.134, 0.29", "-133.112, 55.0551, -126.546, 0.22", "-133.931, 55.1634, -126.984, 0.22", "-135.104, 55.2626, -127.588, 1.47", "-135.167, 55.2667, -127.618, 1.47", "-135.661, 55.3084, -127.819, 1.84", "-135.994, 55.3587, -127.947, 1.77", "-136.692, 55.4975, -128.254, 1.62", "-138.205, 55.8061, -128.942, 0.22", "-138.84, 55.9366, -129.218, 1.03", "-139.375, 56.0378, -129.435, 1.25", "-140.998, 56.3312, -130.04, 0.22", "-141.138, 56.3578, -130.086, 0.22", "-141.952, 56.5282, -130.302, 0.22", "-142.745, 56.7112, -130.478, 0.22", "-143.563, 56.9172, -130.641, 0.22", "-144.093, 57.0883, -130.748, 0.96", "-144.598, 57.2927, -130.845, 1.11", "-145.79, 57.8619, -131.116, 0.15", "-146.846, 58.4402, -131.386, 1.77", "-147.375, 58.7402, -131.548, 1.99", "-148.889, 59.7122, -132.064, 0.22", "-149.416, 60.0733, -132.261, 0.22", "-150.025, 60.508, -132.5, 1.03", "-150.4, 60.7837, -132.644, 1.03", "-151.815, 61.8365, -133.204, 0.22", "-152.546, 62.364, -133.486, 0.22", "-153.285, 62.8786, -133.751, 0.96", "-153.823, 63.2631, -133.946, 1.33", "-154.502, 63.7639, -134.195, 0.66", "-155.32, 64.3892, -134.505, 0.22", "-155.784, 64.7577, -134.676, 0.88", "-156.284, 65.1351, -134.871, 0.88", "-156.992, 65.7044, -135.163, 0.22", "-157.486, 66.1592, -135.422, 0.22", "-157.654, 66.3347, -135.523, 0.22", "-157.983, 66.7006, -135.728, 0.22", "-157.983, 66.7006, -135.728, 0.81", "-158.2, 66.9865, -135.865, 0.81", "-159.058, 68.0719, -136.392, 0.22", "-159.453, 68.5628, -136.646, 1.33", "-159.605, 68.7515, -136.747, 1.62", "-159.686, 68.8515, -136.798, 1.55", "-160.069, 69.353, -137.028, 1.4", "-161.017, 70.5945, -137.62, 0.22", "-161.051, 70.6381, -137.641, 0.22", "-161.554, 71.2706, -137.967, 0.22", "-161.922, 71.7402, -138.221, 0.37", "-162.47, 72.4418, -138.639, 0.22", "-163.141, 73.3209, -139.201, 1.25", "-163.457, 73.7192, -139.464, 1.4", "-163.525, 73.7971, -139.522, 1.4", "-164.27, 74.5516, -140.163, 0.22", "-164.967, 75.1276, -140.769, 0.22", "-165.008, 75.1554, -140.802, 0.22", "-165.961, 75.7303, -141.503, 0.22", "-166.762, 76.1545, -142.049, 1.69", "-167.432, 76.4624, -142.453, 1.84", "-168.811, 76.9967, -143.18, 0.15", "-169.664, 77.3011, -143.583, 0.15", "-169.733, 77.3278, -143.611, 0.15", "-170.475, 77.6525, -143.843, 0.15", "-171.187, 78.0032, -144.014, 1.18", "-171.827, 78.3492, -144.128, 1.47", "-172.274, 78.6212, -144.187, 1.55", "-173.967, 79.7173, -144.367, 0.22", "-175.366, 80.6561, -144.484, 0.22", "-176.146, 81.1982, -144.53, 1.47", "-176.784, 81.6513, -144.555, 1.77", "-177.411, 82.1029, -144.563, 1.69", "-178.658, 83.0482, -144.549, 0.22", "-179.355, 83.6049, -144.533, 0.74", "-179.401, 83.6425, -144.532, 0.74", "-179.837, 84.0113, -144.506, 1.03", "-179.883, 84.0487, -144.501, 1.03", "-180.971, 84.7973, -144.327, 0.22", "-181.031, 84.8307, -144.316, 0.22", "-181.69, 85.134, -144.187, 0.22", "-181.754, 85.1592, -144.173, 0.22", "-182.863, 85.5382, -143.905, 0.22", "-183.855, 85.8646, -143.613, 0.96", "-184.214, 85.9853, -143.492, 1.25", "-184.677, 86.1685, -143.331, 1.25", "-186.057, 86.7972, -142.846, 0.22", "-186.699, 87.1384, -142.597, 0.52", "-187.584, 87.6802, -142.239, 0.22", "-188.263, 88.1585, -141.924, 0.22", "-188.837, 88.598, -141.651, 0.74", "-189.209, 88.9186, -141.473, 0.96", "-190.077, 89.7876, -141.065, 0.22", "-190.458, 90.2007, -140.893, 0.22", "-191.034, 90.8479, -140.655, 1.18", "-191.396, 91.2511, -140.512, 1.55", "-191.788, 91.6796, -140.367, 1.84", "-193.187, 93.1405, -139.918, 0.22", "-193.618, 93.5688, -139.81, 0.52", "-194.272, 94.2038, -139.643, 0.22", "-194.929, 94.8181, -139.486, 0.22", "-195.616, 95.4525, -139.332, 1.11", "-195.94, 95.742, -139.267, 1.47", "-196.632, 96.3499, -139.153, 1.69", "-197.772, 97.3736, -138.968, 0.22", "-198.219, 97.8052, -138.908, 0.22", "-198.711, 98.326, -138.852, 0.81", "-198.906, 98.5457, -138.837, 1.18", "-198.957, 98.6056, -138.834, 1.18", "-199.17, 98.8527, -138.835, 0.88", "-199.844, 99.6595, -138.893, 0.22", "-200.405, 100.394, -138.937, 0.22", "-200.444, 100.45, -138.938, 0.22", "-200.759, 100.919, -138.933, 0.74", "-200.892, 101.138, -138.926, 0.74", "-201.271, 101.812, -138.89, 0.22", "-201.654, 102.507, -138.841, 0.22", "-202.064, 103.323, -138.788, 1.25", "-202.35, 103.916, -138.737, 1.47", "-202.889, 105.058, -138.625, 0.22", "-202.934, 105.151, -138.615, 0.22", "-203.455, 106.195, -138.499, 0.22", "-203.858, 107.032, -138.395, 0.52", "-204.212, 107.863, -138.293, 0.22", "-204.344, 108.19, -138.251, 0.22", "-204.557, 108.661, -138.18, 0.81", "-204.695, 108.951, -138.135, 0.81", "-205.268, 110.054, -137.965, 0.22", "-205.716, 110.786, -137.85, 1.33", "-206.162, 111.484, -137.751, 1.62", "-207.015, 112.825, -137.565, 0.22", "-207.453, 113.516, -137.473, 0.88", "-207.799, 114.057, -137.404, 0.88", "-208.432, 115.014, -137.296, 0.22", "-208.87, 115.679, -137.225, 0.22", "-209.352, 116.477, -137.157, 0.96", "-209.495, 116.734, -137.143, 1.33", "-209.561, 116.854, -137.138, 1.33", "-209.713, 117.135, -137.132, 1.33", "-210.319, 118.222, -137.126, 0.22", "-210.649, 118.732, -137.162, 0.44", "-210.714, 118.813, -137.175, 0.44", "-211.219, 119.387, -137.302, 0.22", "-211.576, 119.759, -137.405, 0.81", "-211.923, 120.082, -137.53, 1.25", "-212.681, 120.713, -137.864, 0.66", "-213.31, 121.168, -138.146, 0.22", "-213.648, 121.387, -138.289, 0.44", "-213.98, 121.584, -138.422, 0.44", "-214.802, 122.092, -138.729, 0.22", "-214.906, 122.16, -138.765, 0.22", "-215.916, 122.904, -139.041, 0.22", "-216.457, 123.347, -139.185, 1.18", "-216.799, 123.649, -139.268, 1.33", "-217.439, 124.257, -139.399, 1.11", "-217.479, 124.299, -139.405, 1.11", "-218.34, 125.248, -139.507, 0.22", "-218.385, 125.3, -139.511, 0.22", "-218.88, 125.903, -139.558, 0.22", "-219.325, 126.464, -139.597, 0.22", "-219.899, 127.201, -139.641, 1.25", "-220.121, 127.492, -139.658, 1.55", "-220.458, 127.945, -139.685, 1.69", "-220.814, 128.417, -139.713, 0.96", "-221.763, 129.641, -139.79, 0.22", "-221.816, 129.7, -139.793, 0.22", "-222.04, 129.924, -139.802, 0.22", "-222.378, 130.243, -139.809, 0.59", "-222.656, 130.484, -139.812, 0.88", "-223.013, 130.779, -139.813, 0.88", "-224.261, 131.783, -139.831, 0.22", "-224.371, 131.882, -139.835, 0.22", "-224.974, 132.521, -139.837, 0.22", "-225.012, 132.566, -139.837, 0.22", "-225.46, 133.163, -139.821, 0.88", "-225.713, 133.514, -139.786, 1.25", "-226.079, 134.049, -139.704, 1.55", "-226.939, 135.195, -139.482, 0.22", "-226.982, 135.249, -139.469, 0.22", "-227.641, 136.031, -139.262, 0.22", "-228.463, 136.984, -138.925, 0.22", "-228.507, 137.034, -138.905, 0.22", "-228.984, 137.561, -138.675, 0.59", "-229.078, 137.665, -138.628, 0.59", "-229.302, 137.919, -138.511, 0.59", "-230.244, 139.046, -137.977, 0.15", "-230.765, 139.743, -137.683, 1.18", "-231.368, 140.574, -137.318, 1.4" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "59.0175, 52.9435, -25.2989, 0.22", "60.3302, 54.3813, -25.511, 0.22", "60.9319, 55.0154, -25.6001, 0.81", "61.6297, 55.6905, -25.7113, 0.22", "62.1675, 56.1837, -25.7974, 0.22", "62.5034, 56.4648, -25.8481, 0.22", "63.0812, 56.8835, -25.9587, 0.22", "63.1426, 56.9139, -25.9712, 0.22", "64.1854, 57.3598, -26.2109, 1.4", "64.5204, 57.4967, -26.2915, 1.77", "65.1803, 57.7646, -26.4553, 1.18", "66.7705, 58.3932, -26.8707, 0.22", "67.3815, 58.6286, -27.0334, 0.22", "68.2746, 58.9761, -27.2658, 0.22", "68.6519, 59.1096, -27.3499, 0.88", "69.1552, 59.2795, -27.4439, 0.88", "70.1802, 59.6309, -27.5198, 0.29", "70.6629, 59.7887, -27.4916, 0.52", "71.0373, 59.9225, -27.4705, 0.52", "71.9465, 60.2387, -27.4163, 0.22", "72.411, 60.3967, -27.4135, 0.22", "73.9214, 60.9098, -27.4615, 1.84", "74.2694, 61.0305, -27.4833, 2.21", "75.9496, 61.635, -27.7099, 0.22", "76.5772, 61.8677, -27.8533, 0.22", "77.4297, 62.1985, -28.1248, 1.03", "77.4915, 62.2203, -28.149, 1.03", "77.8958, 62.3503, -28.3277, 1.11", "79.2097, 62.7461, -28.8715, 0.22", "80.5081, 63.0934, -29.3581, 0.22", "80.6173, 63.1231, -29.3976, 0.22", "81.3006, 63.3167, -29.6689, 0.29", "82.4067, 63.6323, -30.1765, 0.29", "83.5297, 63.9538, -30.7572, 1.55", "83.7145, 64.0082, -30.8626, 2.06", "83.7734, 64.025, -30.8963, 2.06", "85.3641, 64.4766, -31.7929, 0.66", "86.3591, 64.796, -32.3635, 0.22", "86.4169, 64.8154, -32.3976, 0.52", "86.5964, 64.8729, -32.494, 0.52", "87.6462, 65.2117, -32.9982, 0.22", "88.1835, 65.3825, -33.2173, 0.37", "89.5402, 65.8084, -33.6653, 1.77", "89.7413, 65.8713, -33.727, 1.99", "92.161, 66.6442, -34.4128, 0.22", "92.7415, 66.8318, -34.5644, 0.52", "93.811, 67.1804, -34.812, 0.22", "94.6825, 67.4612, -34.9868, 0.22", "95.7833, 67.7879, -35.1549, 0.22", "96.4657, 67.9916, -35.2376, 0.96", "96.9088, 68.1258, -35.2666, 1.11", "98.3871, 68.5562, -35.3634, 0.22", "98.4636, 68.5787, -35.368, 0.22", "99.4488, 68.8663, -35.4243, 0.22", "99.5233, 68.8929, -35.435, 0.22", "100.291, 69.2494, -35.6195, 0.59", "100.508, 69.3816, -35.6927, 0.96", "100.933, 69.6845, -35.8698, 1.25", "101.231, 69.9023, -36.0019, 1.25", "102.888, 71.1206, -36.8053, 0.22", "103.617, 71.6269, -37.1617, 0.22", "104.359, 72.1171, -37.5381, 0.66", "104.976, 72.5003, -37.8513, 0.66", "105.439, 72.7794, -38.0775, 0.29", "106.135, 73.1795, -38.3842, 1.25", "106.506, 73.3689, -38.5176, 1.84", "107.795, 74.0252, -38.9792, 0.22", "107.852, 74.0587, -38.9994, 0.22", "108.643, 74.6035, -39.3764, 0.88", "109.015, 74.8802, -39.612, 0.88", "109.113, 74.9607, -39.6899, 0.88", "110.062, 75.7658, -40.5497, 0.22", "110.505, 76.1482, -40.9742, 0.88", "111.561, 77.0645, -42.0127, 0.66", "112.278, 77.6854, -42.751, 1.11", "113.383, 78.6712, -43.9088, 0.22", "113.423, 78.7084, -43.9512, 0.22", "113.93, 79.1952, -44.4782, 0.29", "114.05, 79.3176, -44.6002, 0.29", "114.09, 79.364, -44.6319, 0.29", "114.752, 80.1654, -45.0842, 0.22", "114.786, 80.2062, -45.11, 0.22", "114.964, 80.4639, -45.3495, 0.81", "114.989, 80.5088, -45.3958, 0.81", "115.252, 81.0419, -45.9684, 0.22", "115.687, 81.9381, -46.9412, 1.47", "115.989, 82.5451, -47.5954, 1.69", "116.888, 84.2014, -49.4367, 0.22", "117.08, 84.5463, -49.8192, 0.44", "117.625, 85.4941, -50.8414, 0.22", "118.106, 86.3239, -51.7534, 1.4", "118.326, 86.6975, -52.1236, 1.62", "119.168, 88.033, -53.3096, 0.29", "119.801, 88.9606, -54.0568, 0.22", "120.59, 90.0925, -54.9678, 2.06", "121.493, 91.4171, -55.9934, 1.18", "122.432, 92.8638, -57.0816, 0.22", "122.777, 93.4211, -57.4846, 0.59", "122.808, 93.4738, -57.5167, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "59.0175, 52.9435, -25.2989, 0.22", "60.9693, 52.2274, -25.3475, 0.22", "62.0282, 51.8747, -25.393, 0.22", "62.6605, 51.6901, -25.4727, 0.88", "62.8691, 51.6298, -25.5056, 0.88", "64.0526, 51.2817, -25.7559, 0.22", "65.1294, 50.9565, -26.0444, 1.69", "65.3995, 50.8821, -26.1391, 1.99", "67.4086, 50.22, -26.8735, 0.22", "67.6027, 50.1458, -26.9439, 0.37", "68.807, 49.6617, -27.4061, 0.22", "69.6198, 49.3081, -27.747, 1.47", "69.9797, 49.1313, -27.8981, 2.06", "71.21, 48.4642, -28.3873, 0.22", "71.6704, 48.1558, -28.5235, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.594, 214.236, 0.718706, 0.22", "-19.8009, 215.693, 1.03004, 0.22", "-20.3571, 216.342, 1.20995, 0.22", "-20.6455, 216.693, 1.3182, 0.74", "-20.95, 217.076, 1.49579, 0.88", "-21.0354, 217.184, 1.55507, 0.88", "-21.646, 217.919, 1.99768, 0.22", "-22.0455, 218.243, 2.31619, 0.59", "-22.4128, 218.482, 2.6096, 0.74", "-23.4759, 219.04, 3.41805, 0.22", "-23.5279, 219.066, 3.45668, 0.22", "-23.9796, 219.271, 3.7781, 0.81", "-25.169, 219.728, 4.57965, 0.22", "-25.6106, 219.854, 4.85934, 0.22", "-26.4326, 220.023, 5.32269, 0.22", "-27.274, 220.15, 5.69477, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-18.594, 214.236, 0.718706, 0.22", "-18.4369, 216.075, 0.417177, 0.22", "-18.4313, 216.141, 0.404323, 0.22", "-18.3843, 216.922, 0.237211, 0.22", "-18.3466, 217.693, 0.0604703, 0.81", "-18.3246, 218.391, -0.10447, 1.11", "-18.3067, 219.441, -0.35918, 0.22", "-18.2998, 220.193, -0.565278, 0.22", "-18.3083, 220.688, -0.707382, 0.22", "-18.3124, 220.743, -0.724809, 0.22", "-18.4302, 221.779, -1.05861, 1.55", "-18.4727, 222.197, -1.19974, 2.21" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "22.821, -81.9702, -95.7191, 1.18", "25.9385, -83.2251, -101.043, 1.18", "27.7286, -84.0381, -104.002, 0.52", "27.8922, -84.1168, -104.267, 1.11", "28.9687, -84.621, -106.141, 1.47", "29.8145, -85.0172, -107.614, 1.55", "31.0354, -85.5891, -109.74, 0.59", "31.5841, -85.8887, -110.652, 0.59", "31.9829, -86.1278, -111.4, 0.96", "33.4734, -87.0162, -114.417, 0.66" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "22.821, -81.9702, -95.7191, 0.29", "24.9073, -83.6968, -98.7681, 0.29", "25.3692, -84.0791, -99.4432, 0.29", "25.7941, -84.4308, -100.064, 0.37", "26.5865, -85.0865, -101.222, 0.52" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-160.591, -3.50252, -104.955, 0.22", "-161.35, -4.77052, -106.308, 0.22", "-161.42, -4.89568, -106.429, 0.22", "-161.868, -5.77863, -107.263, 0.81", "-161.887, -5.81886, -107.303, 0.81", "-162.408, -6.83223, -108.329, 0.81", "-162.917, -7.71837, -109.244, 0.15", "-163.337, -8.37689, -109.928, 0.96", "-163.907, -9.25939, -110.826, 2.21", "-164.687, -10.4757, -112.087, 2.36", "-165.638, -11.9593, -113.612, 0.22", "-166.248, -12.9489, -114.647, 0.22", "-166.59, -13.5133, -115.267, 1.4", "-166.729, -13.748, -115.521, 1.77", "-167.794, -15.612, -117.496, 0.22", "-168.294, -16.5482, -118.453, 0.37", "-168.862, -17.7797, -119.646, 0.96", "-169.146, -18.3972, -120.25, 0.88", "-169.493, -19.0868, -120.937, 0.22", "-169.519, -19.1324, -120.983, 0.22", "-169.729, -19.431, -121.271, 0.96", "-170.121, -19.914, -121.745, 1.11", "-171.357, -21.3004, -123.034, 0.22", "-171.911, -21.8959, -123.594, 0.22", "-172.507, -22.5185, -124.169, 1.25", "-172.731, -22.7401, -124.372, 1.55", "-173.496, -23.4507, -125.017, 0.29", "-173.886, -23.7673, -125.303, 0.22", "-174.157, -23.9593, -125.452, 0.52", "-175.197, -24.5846, -125.971, 0.22", "-175.962, -24.9469, -126.354, 1.25", "-176.242, -25.0516, -126.484, 1.33", "-177.282, -25.3331, -126.918, 0.59", "-177.894, -25.4716, -127.165, 0.15", "-178.621, -25.6104, -127.431, 0.44", "-180.244, -25.8335, -127.975, 0.22", "-181.12, -25.9228, -128.256, 1.25", "-181.572, -25.9574, -128.395, 1.55", "-183.414, -26.0591, -128.929, 0.22", "-184.467, -26.1003, -129.254, 0.22", "-185.874, -26.1311, -129.71, 0.29", "-187.215, -26.1346, -130.169, 0.22", "-187.419, -26.1315, -130.251, 0.81", "-187.825, -26.119, -130.422, 1.03", "-189.368, -26.0246, -131.081, 0.22", "-190.151, -25.9766, -131.443, 1.18", "-190.7, -25.9517, -131.699, 1.47", "-191.615, -25.9024, -132.106, 1.11", "-192.837, -25.7959, -132.618, 0.22", "-193.179, -25.7488, -132.751, 0.74", "-193.742, -25.646, -132.935, 0.74", "-194.59, -25.4242, -133.206, 0.22", "-195.734, -25.038, -133.556, 0.22", "-196.209, -24.8413, -133.683, 0.22", "-196.964, -24.4965, -133.892, 1.33", "-197.292, -24.3379, -133.979, 1.47", "-198.411, -23.7633, -134.244, 0.22", "-199.197, -23.3226, -134.435, 0.37", "-199.869, -22.9463, -134.612, 0.22", "-200.662, -22.5366, -134.813, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-160.591, -3.50252, -104.955, 0.22", "-161.693, -2.55793, -105.253, 0.22", "-161.739, -2.52262, -105.266, 0.22", "-162.633, -1.95975, -105.555, 0.22", "-162.693, -1.92899, -105.574, 0.22", "-163.585, -1.58899, -105.801, 0.22", "-163.898, -1.49772, -105.876, 0.96", "-164.484, -1.4017, -105.995, 0.96", "-165.3, -1.34633, -106.164, 0.52", "-166.63, -1.35813, -106.446, 0.22", "-168.072, -1.45712, -106.744, 0.22", "-168.925, -1.56384, -106.912, 0.96", "-169.379, -1.62722, -106.99, 1.11", "-170.826, -1.83519, -107.205, 0.22", "-170.894, -1.84584, -107.216, 0.22", "-171.792, -2.01038, -107.372, 0.22", "-172.44, -2.12424, -107.492, 0.22", "-173.309, -2.25501, -107.645, 0.74", "-174.28, -2.36879, -107.815, 0.22", "-174.979, -2.41029, -107.924, 0.88", "-175.195, -2.4208, -107.962, 1.11" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_25", "dend_0", "dend_64", "dend_49", "dend_41", "dend_26", "dend_10", "dend_1", "dend_63", "dend_50", "dend_45", "dend_42", "dend_30", "dend_27", "dend_20", "dend_11", "dend_9", "dend_2", "dend_60", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_15", "dend_12", "dend_8", "dend_3", "dend_62", "dend_61", "dend_55", "dend_52", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_17", "dend_16", "dend_14", "dend_13", "dend_5", "dend_4", "dend_57", "dend_56", "dend_54", "dend_53", "dend_37", "dend_36", "dend_19", "dend_18", "dend_7", "dend_6", "dend_59", "dend_58", "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_25", "dend_0", "dend_64", "dend_49", "dend_41", "dend_26", "dend_10", "dend_1", "dend_63", "dend_50", "dend_45", "dend_42", "dend_30", "dend_27", "dend_20", "dend_11", "dend_9", "dend_2", "dend_60", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_15", "dend_12", "dend_8", "dend_3", "dend_62", "dend_61", "dend_55", "dend_52", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_17", "dend_16", "dend_14", "dend_13", "dend_5", "dend_4", "dend_57", "dend_56", "dend_54", "dend_53", "dend_37", "dend_36", "dend_19", "dend_18", "dend_7", "dend_6", "dend_59", "dend_58", "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_MC_29457dde26_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_64, id: dend_64, parent: dend_48
create dend_64
public dend_64
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_63, id: dend_63, parent: dend_49
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_50
create dend_60
public dend_60
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_25, dend_0, dend_64, dend_49, dend_41, dend_26, dend_10, dend_1, dend_63, dend_50, dend_45, dend_42, dend_30, dend_27, dend_20, dend_11, dend_9, dend_2, dend_60, dend_51, dend_47, dend_46, dend_44, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_15, dend_12, dend_8, dend_3, dend_62, dend_61, dend_55, dend_52, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_17, dend_16, dend_14, dend_13, dend_5, dend_4, dend_57, dend_56, dend_54, dend_53, dend_37, dend_36, dend_19, dend_18, dend_7, dend_6, dend_59, dend_58, dend_39, dend_38]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_48, dend_25, dend_0, dend_64, dend_49, dend_41, dend_26, dend_10, dend_1, dend_63, dend_50, dend_45, dend_42, dend_30, dend_27, dend_20, dend_11, dend_9, dend_2, dend_60, dend_51, dend_47, dend_46, dend_44, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_15, dend_12, dend_8, dend_3, dend_62, dend_61, dend_55, dend_52, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_17, dend_16, dend_14, dend_13, dend_5, dend_4, dend_57, dend_56, dend_54, dend_53, dend_37, dend_36, dend_19, dend_18, dend_7, dend_6, dend_59, dend_58, dend_39, dend_38]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.45000033000065803)
    connect dend_25(0), soma_0(0.45000033000065803)
    connect dend_0(0), soma_0(0.45000033000065803)
    connect axon_0(0), soma_0(1.0)
    connect dend_64(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_63(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.990274, 10.0329, -2.04532, 6.5955 ) }
    soma_0 { pt3dadd( -0.916974, 8.69695, -1.77222, 11.7827 ) }
    soma_0 { pt3dadd( -0.843674, 7.361, -1.49912, 14.5661 ) }
    soma_0 { pt3dadd( -0.770374, 6.02505, -1.22601, 15.5703 ) }
    soma_0 { pt3dadd( -0.697074, 4.6891, -0.952908, 16.4465 ) }
    soma_0 { pt3dadd( -0.623774, 3.35314, -0.679804, 17.1803 ) }
    soma_0 { pt3dadd( -0.550474, 2.01719, -0.4067, 17.9244 ) }
    soma_0 { pt3dadd( -0.477174, 0.681242, -0.133596, 18.3543 ) }
    soma_0 { pt3dadd( -0.403873, -0.654708, 0.139508, 18.5081 ) }
    soma_0 { pt3dadd( -0.330573, -1.99066, 0.412612, 18.2649 ) }
    soma_0 { pt3dadd( -0.257273, -3.32661, 0.685717, 18.0213 ) }
    soma_0 { pt3dadd( -0.183973, -4.66256, 0.958821, 17.7017 ) }
    soma_0 { pt3dadd( -0.110673, -5.99851, 1.23192, 17.3049 ) }
    soma_0 { pt3dadd( -0.0373732, -7.33446, 1.50503, 16.1306 ) }
    soma_0 { pt3dadd( 0.0359269, -8.67041, 1.77813, 14.7151 ) }
    soma_0 { pt3dadd( 0.109227, -10.0064, 2.05124, 13.0272 ) }
    soma_0 { pt3dadd( 0.182527, -11.3423, 2.32434, 11.0913 ) }
    soma_0 { pt3dadd( 0.255827, -12.6783, 2.59744, 9.26593 ) }
    soma_0 { pt3dadd( 0.329127, -14.0142, 2.87055, 7.34863 ) }
    soma_0 { pt3dadd( 0.402427, -15.3502, 3.14365, 4.67215 ) }
    soma_0 { pt3dadd( 0.475727, -16.6861, 3.41676, 2.80931 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 0.496558, -16.7808, 6.73932, 2.8 ) }
    dend_48 { pt3dadd( 0.496558, -16.7808, 6.73932, 2.8 ) }
    dend_48 { pt3dadd( 0.497997, -18.5504, 6.98681, 2.58 ) }
    dend_48 { pt3dadd( 0.499606, -20.5264, 7.26319, 2.58 ) }
    dend_48 { pt3dadd( 0.500726, -21.9044, 7.45591, 3.24 ) }
    dend_48 { pt3dadd( 0.501911, -23.3593, 7.65939, 3.98 ) }
    dend_48 { pt3dadd( 0.502751, -24.3912, 7.80371, 4.13 ) }
    dend_48 { pt3dadd( 0.503258, -25.3342, 7.94828, 4.05 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.30344, 1.53946, -17.4507, 1.77 ) }
    dend_25 { pt3dadd( -4.36381, 2.20011, -18.0845, 1.77 ) }
    dend_25 { pt3dadd( -4.47921, 3.46305, -19.2959, 2.06 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.34656, 8.29621, -2.63068, 3.68 ) }
    dend_0 { pt3dadd( 4.34656, 8.29621, -2.63068, 3.68 ) }
    dend_0 { pt3dadd( 4.82339, 9.8219, -3.23665, 2.73 ) }
    dend_0 { pt3dadd( 5.23795, 11.4855, -3.78444, 2.73 ) }
    dend_0 { pt3dadd( 5.25147, 11.5397, -3.80231, 2.73 ) }
    dend_0 { pt3dadd( 5.66414, 13.1957, -4.34762, 2.43 ) }
    dend_0 { pt3dadd( 5.94183, 14.31, -4.71455, 2.21 ) }
    dend_0 { pt3dadd( 6.31587, 15.9741, -5.23243, 2.06 ) }
    dend_0 { pt3dadd( 6.48921, 17.0489, -5.51624, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 41/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.475727, -16.6861, 3.41676, 0.673181 ) }
    axon_0 { pt3dadd( 1.2975, -31.6636, 3.41676, 0.673181 ) }
    axon_0 { pt3dadd( 2.11928, -46.641, 3.41676, 0.673181 ) }
    // Section: dend_64, id: dend_64, parent: dend_48 (entry count 44/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 0.503258, -25.3342, 7.94828, 0.74 ) }
    dend_64 { pt3dadd( -2.39052, -26.9045, 8.7876, 0.74 ) }
    dend_64 { pt3dadd( -3.66791, -27.6125, 9.03483, 0.74 ) }
    dend_64 { pt3dadd( -4.6261, -28.1275, 9.16305, 1.33 ) }
    dend_64 { pt3dadd( -5.31468, -28.4939, 9.235, 1.62 ) }
    dend_64 { pt3dadd( -6.09769, -28.9054, 9.27673, 1.92 ) }
    dend_64 { pt3dadd( -7.34607, -29.5545, 9.29821, 1.62 ) }
    dend_64 { pt3dadd( -8.49356, -30.1806, 9.09122, 0.96 ) }
    dend_64 { pt3dadd( -9.33729, -30.643, 9.00549, 0.81 ) }
    dend_64 { pt3dadd( -9.39932, -30.6745, 9.00811, 0.81 ) }
    dend_64 { pt3dadd( -10.3995, -31.1306, 9.19848, 1.62 ) }
    dend_64 { pt3dadd( -11.1146, -31.4005, 9.47129, 1.99 ) }
    dend_64 { pt3dadd( -12.0868, -31.6713, 10.05, 1.99 ) }
    dend_64 { pt3dadd( -14.3876, -32.1914, 11.8337, 0.88 ) }
    dend_64 { pt3dadd( -15.3629, -32.3437, 12.6998, 0.66 ) }
    dend_64 { pt3dadd( -15.9425, -32.3959, 13.2632, 0.66 ) }
    dend_64 { pt3dadd( -16.7079, -32.3951, 14.0804, 1.03 ) }
    dend_64 { pt3dadd( -17.2304, -32.3302, 14.6796, 1.03 ) }
    dend_64 { pt3dadd( -17.2744, -32.3221, 14.7334, 1.03 ) }
    dend_64 { pt3dadd( -17.77, -32.245, 15.2652, 1.03 ) }
    dend_64 { pt3dadd( -17.8107, -32.243, 15.3092, 1.03 ) }
    dend_64 { pt3dadd( -18.2576, -32.2861, 15.8156, 1.03 ) }
    dend_64 { pt3dadd( -19.4448, -32.5031, 17.1561, 0.74 ) }
    dend_64 { pt3dadd( -20.5012, -32.7738, 18.3425, 0.44 ) }
    dend_64 { pt3dadd( -20.9374, -32.91, 18.8466, 0.81 ) }
    dend_64 { pt3dadd( -21.1651, -33.0041, 19.1246, 0.81 ) }
    dend_64 { pt3dadd( -21.5525, -33.1904, 19.6103, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 71/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.503258, -25.3342, 7.94828, 2.43 ) }
    dend_49 { pt3dadd( 1.10436, -27.9322, 7.60674, 2.43 ) }
    dend_49 { pt3dadd( 1.45591, -29.4516, 7.40699, 1.99 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 74/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -4.47921, 3.46305, -19.2959, 0.44 ) }
    dend_41 { pt3dadd( -2.74353, 5.08812, -23.695, 0.44 ) }
    dend_41 { pt3dadd( -2.07423, 5.87506, -25.2708, 0.44 ) }
    dend_41 { pt3dadd( -2.05316, 5.90606, -25.3171, 0.44 ) }
    dend_41 { pt3dadd( -1.50373, 6.85873, -26.4095, 0.59 ) }
    dend_41 { pt3dadd( -1.44937, 6.96461, -26.4975, 0.59 ) }
    dend_41 { pt3dadd( -0.768265, 8.24785, -27.4138, 1.69 ) }
    dend_41 { pt3dadd( -0.376772, 9.0504, -27.6664, 2.95 ) }
    dend_41 { pt3dadd( 0.169894, 9.9359, -27.9326, 2.87 ) }
    dend_41 { pt3dadd( 0.740444, 10.6236, -28.217, 1.62 ) }
    dend_41 { pt3dadd( 2.04192, 11.7213, -28.8672, 0.22 ) }
    dend_41 { pt3dadd( 2.79306, 12.2073, -29.2889, 0.74 ) }
    dend_41 { pt3dadd( 3.74434, 12.6634, -29.863, 0.81 ) }
    dend_41 { pt3dadd( 5.17361, 13.2318, -30.7971, 0.74 ) }
    dend_41 { pt3dadd( 6.077, 13.5551, -31.4341, 0.29 ) }
    dend_41 { pt3dadd( 6.62015, 13.8029, -31.9064, 0.29 ) }
    dend_41 { pt3dadd( 7.36609, 14.3631, -32.724, 1.84 ) }
    dend_41 { pt3dadd( 7.67037, 14.7837, -33.1006, 2.65 ) }
    dend_41 { pt3dadd( 7.70012, 14.8411, -33.1459, 2.65 ) }
    dend_41 { pt3dadd( 7.99128, 15.4327, -33.6059, 2.43 ) }
    dend_41 { pt3dadd( 8.49696, 16.5489, -34.9816, 0.29 ) }
    dend_41 { pt3dadd( 8.68817, 17.0174, -35.6847, 0.29 ) }
    dend_41 { pt3dadd( 8.96158, 17.7215, -36.8804, 0.29 ) }
    dend_41 { pt3dadd( 9.34323, 18.8019, -38.8026, 1.4 ) }
    dend_41 { pt3dadd( 9.55933, 19.4971, -40.0983, 4.13 ) }
    dend_41 { pt3dadd( 10.4021, 22.1446, -45.0777, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_41 { pt3dadd( 10.4978, 22.486, -45.7091, 0.59 ) }
    dend_41 { pt3dadd( 10.5132, 22.5544, -45.8408, 0.59 ) }
    dend_41 { pt3dadd( 10.566, 22.8667, -46.4323, 0.59 ) }
    dend_41 { pt3dadd( 10.66, 23.4811, -47.4787, 0.37 ) }
    dend_41 { pt3dadd( 10.9333, 25.2286, -50.1763, 2.8 ) }
    dend_41 { pt3dadd( 11.0867, 25.9223, -51.1933, 3.39 ) }
    dend_41 { pt3dadd( 11.7434, 28.7975, -55.5269, 0.96 ) }
    dend_41 { pt3dadd( 11.8602, 29.3212, -56.3296, 0.59 ) }
    dend_41 { pt3dadd( 12.0116, 30.04, -57.4471, 2.21 ) }
    dend_41 { pt3dadd( 12.0704, 30.365, -57.937, 3.17 ) }
    dend_41 { pt3dadd( 12.313, 32.439, -61.0618, 0.52 ) }
    dend_41 { pt3dadd( 12.3606, 32.7246, -61.5541, 0.29 ) }
    dend_41 { pt3dadd( 12.3672, 32.7579, -61.6149, 0.29 ) }
    dend_41 { pt3dadd( 12.4727, 33.1664, -62.4324, 0.29 ) }
    dend_41 { pt3dadd( 12.6567, 33.7556, -63.7163, 2.43 ) }
    dend_41 { pt3dadd( 12.8622, 34.2514, -64.837, 3.09 ) }
    dend_41 { pt3dadd( 13.9106, 36.4333, -69.6209, 0.37 ) }
    dend_41 { pt3dadd( 14.3712, 37.2497, -71.3932, 0.96 ) }
    dend_41 { pt3dadd( 14.5556, 37.539, -72.021, 0.96 ) }
    dend_41 { pt3dadd( 14.572, 37.5626, -72.0734, 0.96 ) }
    dend_41 { pt3dadd( 15.407, 38.6819, -74.5735, 0.37 ) }
    dend_41 { pt3dadd( 16.1113, 39.6082, -76.4573, 2.73 ) }
    dend_41 { pt3dadd( 16.5744, 40.2288, -77.437, 3.61 ) }
    dend_41 { pt3dadd( 17.3331, 41.2188, -79.0763, 2.87 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 24/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.47921, 3.46305, -19.2959, 1.47 ) }
    dend_26 { pt3dadd( -6.26944, 7.81409, -25.3684, 1.47 ) }
    dend_26 { pt3dadd( -6.78741, 9.2051, -26.7276, 1.47 ) }
    dend_26 { pt3dadd( -6.82553, 9.3143, -26.8025, 1.47 ) }
    dend_26 { pt3dadd( -7.17506, 10.4183, -27.403, 1.69 ) }
    dend_26 { pt3dadd( -7.19224, 10.4775, -27.4334, 1.69 ) }
    dend_26 { pt3dadd( -7.60304, 12.0256, -28.2289, 1.69 ) }
    dend_26 { pt3dadd( -7.96645, 13.7271, -28.784, 1.69 ) }
    dend_26 { pt3dadd( -8.21572, 14.9809, -29.2531, 1.99 ) }
    dend_26 { pt3dadd( -8.4764, 16.3866, -29.8245, 2.06 ) }
    dend_26 { pt3dadd( -8.73122, 17.8991, -30.5318, 2.28 ) }
    dend_26 { pt3dadd( -8.92364, 19.1282, -31.1852, 2.21 ) }
    dend_26 { pt3dadd( -9.11123, 20.6457, -32.2441, 2.43 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 37/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.48921, 17.0489, -5.51624, 1.92 ) }
    dend_10 { pt3dadd( 6.41291, 17.4467, -11.3298, 1.92 ) }
    dend_10 { pt3dadd( 6.50236, 17.5662, -12.9161, 1.69 ) }
    dend_10 { pt3dadd( 6.76084, 17.7682, -15.4026, 2.0 ) }
    dend_10 { pt3dadd( 7.67476, 18.3654, -21.4009, 1.33 ) }
    dend_10 { pt3dadd( 7.69079, 18.3751, -21.4786, 1.33 ) }
    dend_10 { pt3dadd( 8.01568, 18.571, -23.0545, 0.88 ) }
    dend_10 { pt3dadd( 8.61002, 18.7543, -24.4579, 0.88 ) }
    dend_10 { pt3dadd( 8.67468, 18.7693, -24.5603, 0.88 ) }
    dend_10 { pt3dadd( 9.53884, 18.9562, -25.3461, 1.55 ) }
    dend_10 { pt3dadd( 10.6013, 19.3574, -25.5103, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 48/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.48921, 17.0489, -5.51624, 1.62 ) }
    dend_1 { pt3dadd( 6.17248, 17.9925, -5.5949, 1.62 ) }
    dend_1 { pt3dadd( 5.76542, 19.2367, -5.77417, 1.47 ) }
    dend_1 { pt3dadd( 5.39789, 20.5948, -5.994, 0.59 ) }
    dend_1 { pt3dadd( 5.26493, 21.3179, -6.11007, 0.96 ) }
    dend_1 { pt3dadd( 5.21435, 21.8866, -6.18344, 1.25 ) }
    dend_1 { pt3dadd( 5.21174, 22.465, -6.24668, 1.4 ) }
    dend_1 { pt3dadd( 5.41138, 23.649, -6.32395, 0.96 ) }
    dend_1 { pt3dadd( 5.78556, 24.5955, -6.31261, 0.81 ) }
    dend_1 { pt3dadd( 6.29346, 25.5357, -6.25487, 1.25 ) }
    dend_1 { pt3dadd( 6.90763, 26.4834, -6.16201, 1.69 ) }
    dend_1 { pt3dadd( 7.30814, 27.0095, -6.08119, 2.06 ) }
    dend_1 { pt3dadd( 7.94246, 27.7037, -5.90996, 2.28 ) }
    dend_1 { pt3dadd( 8.6471, 28.3314, -5.64178, 2.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.11928, -46.641, 3.41676, 0.15 ) }
    axon_1 { pt3dadd( 2.94105, -61.6185, 3.41676, 0.15 ) }
    axon_1 { pt3dadd( 3.76282, -76.596, 3.41676, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_49 (entry count 65/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 1.45591, -29.4516, 7.40699, 0.52 ) }
    dend_63 { pt3dadd( 3.31562, -29.9871, 5.84019, 0.52 ) }
    dend_63 { pt3dadd( 4.58561, -30.3284, 4.86394, 0.96 ) }
    dend_63 { pt3dadd( 5.8251, -30.7005, 3.96358, 0.29 ) }
    dend_63 { pt3dadd( 6.89994, -31.0792, 3.20008, 0.44 ) }
    dend_63 { pt3dadd( 6.95412, -31.1016, 3.1622, 0.44 ) }
    dend_63 { pt3dadd( 7.45437, -31.3522, 2.78563, 0.44 ) }
    dend_63 { pt3dadd( 7.99125, -31.7008, 2.39015, 0.29 ) }
    dend_63 { pt3dadd( 8.50517, -32.0547, 2.01999, 0.29 ) }
    dend_63 { pt3dadd( 8.98014, -32.4334, 1.67445, 0.88 ) }
    dend_63 { pt3dadd( 9.3002, -32.7479, 1.42169, 0.88 ) }
    dend_63 { pt3dadd( 10.4685, -34.0709, 0.370715, 0.44 ) }
    dend_63 { pt3dadd( 10.7237, -34.3898, 0.106362, 0.22 ) }
    dend_63 { pt3dadd( 11.1033, -34.8594, -0.313739, 0.22 ) }
    dend_63 { pt3dadd( 11.5779, -35.3975, -0.8087, 0.81 ) }
    dend_63 { pt3dadd( 11.8304, -35.6574, -1.05119, 0.96 ) }
    dend_63 { pt3dadd( 12.7142, -36.4866, -1.82889, 0.29 ) }
    dend_63 { pt3dadd( 13.4539, -37.149, -2.41119, 0.29 ) }
    dend_63 { pt3dadd( 13.9025, -37.5322, -2.75962, 1.25 ) }
    dend_63 { pt3dadd( 14.3557, -37.8657, -3.09106, 1.69 ) }
    dend_63 { pt3dadd( 15.6508, -38.6256, -3.93565, 0.22 ) }
    dend_63 { pt3dadd( 16.075, -38.834, -4.19507, 0.22 ) }
    dend_63 { pt3dadd( 16.3628, -38.9623, -4.36675, 0.81 ) }
    dend_63 { pt3dadd( 16.4236, -38.9934, -4.40777, 0.81 ) }
    dend_63 { pt3dadd( 17.1412, -39.4319, -4.9548, 0.81 ) }
    dend_63 { pt3dadd( 17.1854, -39.4673, -4.99513, 0.81 ) }
    dend_63 { pt3dadd( 18.0704, -40.3788, -5.95547, 0.22 ) }
    dend_63 { pt3dadd( 18.8643, -41.3588, -6.89928, 1.47 ) }
    dend_63 { pt3dadd( 19.2972, -41.9955, -7.48678, 1.99 ) }
    dend_63 { pt3dadd( 19.4462, -42.2243, -7.72595, 2.5 ) }
    dend_63 { pt3dadd( 20.0564, -43.1453, -8.7413, 0.81 ) }
    dend_63 { pt3dadd( 20.4508, -43.7494, -9.41604, 0.29 ) }
    dend_63 { pt3dadd( 20.7645, -44.2507, -9.99057, 0.15 ) }
    dend_63 { pt3dadd( 21.3547, -45.1885, -11.1095, 1.4 ) }
    dend_63 { pt3dadd( 22.4359, -46.7764, -13.1274, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_63 { pt3dadd( 22.8307, -47.3029, -13.8745, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 1.45591, -29.4516, 7.40699, 1.77 ) }
    dend_50 { pt3dadd( 1.1074, -31.19, 7.11631, 1.77 ) }
    dend_50 { pt3dadd( 0.794665, -32.746, 6.88817, 1.84 ) }
    dend_50 { pt3dadd( 0.443843, -34.5327, 6.64945, 1.84 ) }
    dend_50 { pt3dadd( 0.0951398, -36.3876, 6.42266, 1.84 ) }
    dend_50 { pt3dadd( -0.172211, -37.8959, 6.25588, 2.06 ) }
    dend_50 { pt3dadd( -0.44969, -39.5605, 6.08629, 2.58 ) }
    dend_50 { pt3dadd( -0.676893, -41.0034, 5.97166, 3.09 ) }
    dend_50 { pt3dadd( -0.770087, -41.6385, 5.92091, 3.39 ) }
    dend_50 { pt3dadd( -0.89329, -42.5547, 5.85459, 3.61 ) }
    dend_50 { pt3dadd( -1.13518, -44.6207, 5.76202, 3.39 ) }
    dend_50 { pt3dadd( -1.31612, -46.3377, 5.70649, 2.14 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 13/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 17.3331, 41.2188, -79.0763, 0.37 ) }
    dend_45 { pt3dadd( 17.3219, 43.1718, -83.0156, 0.37 ) }
    dend_45 { pt3dadd( 17.2924, 43.6436, -83.9205, 0.37 ) }
    dend_45 { pt3dadd( 17.2819, 43.7359, -84.0849, 0.37 ) }
    dend_45 { pt3dadd( 17.1723, 44.442, -85.2031, 0.66 ) }
    dend_45 { pt3dadd( 17.0429, 45.1698, -86.2448, 0.22 ) }
    dend_45 { pt3dadd( 17.0385, 45.2025, -86.2944, 0.22 ) }
    dend_45 { pt3dadd( 16.9842, 45.6474, -86.9104, 0.22 ) }
    dend_45 { pt3dadd( 16.9609, 45.9258, -87.3102, 0.59 ) }
    dend_45 { pt3dadd( 16.8629, 47.1021, -89.084, 1.77 ) }
    dend_45 { pt3dadd( 16.8216, 47.632, -89.9081, 2.5 ) }
    dend_45 { pt3dadd( 16.6069, 49.9318, -93.6115, 0.22 ) }
    dend_45 { pt3dadd( 16.5655, 50.2751, -94.1881, 0.52 ) }
    dend_45 { pt3dadd( 16.5498, 50.3967, -94.4041, 0.52 ) }
    dend_45 { pt3dadd( 16.3908, 51.1821, -95.8566, 1.11 ) }
    dend_45 { pt3dadd( 16.3793, 51.213, -95.918, 1.11 ) }
    dend_45 { pt3dadd( 16.1984, 51.4907, -96.5597, 1.25 ) }
    dend_45 { pt3dadd( 15.4633, 52.2411, -98.3954, 0.22 ) }
    dend_45 { pt3dadd( 15.4408, 52.2619, -98.4469, 0.22 ) }
    dend_45 { pt3dadd( 14.9378, 52.6693, -99.5071, 1.55 ) }
    dend_45 { pt3dadd( 14.2154, 53.1914, -100.878, 1.77 ) }
    dend_45 { pt3dadd( 12.8371, 54.1256, -103.397, 0.37 ) }
    dend_45 { pt3dadd( 12.6902, 54.2216, -103.715, 1.11 ) }
    dend_45 { pt3dadd( 12.4414, 54.4092, -104.431, 1.25 ) }
    dend_45 { pt3dadd( 11.7916, 55.0199, -106.754, 0.22 ) }
    dend_45 { pt3dadd( 11.5287, 55.2947, -107.82, 1.77 ) }
    dend_45 { pt3dadd( 11.2998, 55.5655, -108.852, 2.43 ) }
    dend_45 { pt3dadd( 10.1849, 56.8604, -113.632, 0.66 ) }
    dend_45 { pt3dadd( 9.37807, 57.7297, -116.856, 0.59 ) }
    dend_45 { pt3dadd( 8.76255, 58.3745, -119.258, 1.69 ) }
    dend_45 { pt3dadd( 8.58326, 58.5535, -119.905, 2.06 ) }
    dend_45 { pt3dadd( 8.54458, 58.5866, -120.025, 2.06 ) }
    dend_45 { pt3dadd( 7.07132, 59.5506, -123.18, 0.22 ) }
    dend_45 { pt3dadd( 6.46154, 59.8442, -123.907, 0.22 ) }
    dend_45 { pt3dadd( 6.41646, 59.8606, -123.943, 0.22 ) }
    dend_45 { pt3dadd( 5.78392, 60.0548, -124.363, 1.55 ) }
    dend_45 { pt3dadd( 5.19413, 60.2517, -124.733, 1.99 ) }
    dend_45 { pt3dadd( 3.93452, 60.7202, -125.415, 0.15 ) }
    dend_45 { pt3dadd( 3.83223, 60.7661, -125.48, 0.15 ) }
    dend_45 { pt3dadd( 3.28965, 61.0522, -125.953, 0.15 ) }
    dend_45 { pt3dadd( 3.21199, 61.0981, -126.032, 0.15 ) }
    dend_45 { pt3dadd( 2.80806, 61.3875, -126.5, 0.96 ) }
    dend_45 { pt3dadd( 2.46828, 61.6665, -126.985, 1.18 ) }
    dend_45 { pt3dadd( 1.01844, 63.152, -129.345, 0.15 ) }
    dend_45 { pt3dadd( 0.987008, 63.1875, -129.396, 0.15 ) }
    dend_45 { pt3dadd( 0.589781, 63.6748, -130.029, 1.18 ) }
    dend_45 { pt3dadd( 0.243649, 64.1179, -130.573, 1.33 ) }
    dend_45 { pt3dadd( -0.397593, 64.9631, -131.595, 0.15 ) }
    dend_45 { pt3dadd( -0.876822, 65.6221, -132.332, 0.15 ) }
    dend_45 { pt3dadd( -1.77138, 66.9939, -133.513, 1.99 ) }
    dend_45 { pt3dadd( -2.26796, 67.7793, -134.215, 2.73 ) }
    dend_45 { pt3dadd( -2.29549, 67.825, -134.259, 2.73 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 65/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 17.3331, 41.2188, -79.0763, 0.22 ) }
    dend_42 { pt3dadd( 19.3199, 42.4785, -81.5486, 0.22 ) }
    dend_42 { pt3dadd( 20.1661, 43.0923, -82.7337, 0.74 ) }
    dend_42 { pt3dadd( 20.6897, 43.5963, -83.6478, 1.03 ) }
    dend_42 { pt3dadd( 21.6288, 44.6874, -85.5589, 0.29 ) }
    dend_42 { pt3dadd( 22.1458, 45.4469, -86.9778, 0.81 ) }
    dend_42 { pt3dadd( 22.6158, 46.3611, -88.694, 1.84 ) }
    dend_42 { pt3dadd( 22.7035, 46.7866, -89.492, 2.36 ) }
    dend_42 { pt3dadd( 22.6926, 48.0187, -91.8668, 0.29 ) }
    dend_42 { pt3dadd( 22.6036, 48.5155, -92.7878, 0.96 ) }
    dend_42 { pt3dadd( 22.0456, 50.1409, -95.5829, 0.29 ) }
    dend_42 { pt3dadd( 21.737, 50.8026, -96.6552, 2.06 ) }
    dend_42 { pt3dadd( 21.4127, 51.3673, -97.5022, 2.43 ) }
    dend_42 { pt3dadd( 20.4373, 52.9246, -99.6481, 0.29 ) }
    dend_42 { pt3dadd( 20.1054, 53.4053, -100.233, 0.22 ) }
    dend_42 { pt3dadd( 19.6298, 54.0601, -100.916, 1.25 ) }
    dend_42 { pt3dadd( 19.2559, 54.5718, -101.341, 1.62 ) }
    dend_42 { pt3dadd( 18.3171, 55.8097, -102.313, 0.15 ) }
    dend_42 { pt3dadd( 17.8752, 56.3588, -102.718, 0.81 ) }
    dend_42 { pt3dadd( 17.6161, 56.6762, -102.937, 0.96 ) }
    dend_42 { pt3dadd( 17.0292, 57.4287, -103.51, 0.22 ) }
    dend_42 { pt3dadd( 16.4852, 58.1518, -104.222, 1.03 ) }
    dend_42 { pt3dadd( 16.3005, 58.4059, -104.498, 1.25 ) }
    dend_42 { pt3dadd( 15.4402, 59.6136, -105.943, 0.22 ) }
    dend_42 { pt3dadd( 14.8426, 60.5033, -107.033, 2.14 ) }
    dend_42 { pt3dadd( 14.4968, 61.0398, -107.719, 2.73 ) }
    dend_42 { pt3dadd( 13.177, 63.1615, -110.456, 0.37 ) }
    dend_42 { pt3dadd( 12.9041, 63.6249, -111.063, 0.44 ) }
    dend_42 { pt3dadd( 12.4817, 64.388, -112.103, 0.44 ) }
    dend_42 { pt3dadd( 12.2426, 64.9228, -112.87, 1.18 ) }
    dend_42 { pt3dadd( 11.8144, 66.1336, -114.606, 0.22 ) }
    dend_42 { pt3dadd( 11.7233, 66.4735, -115.069, 0.22 ) }
    dend_42 { pt3dadd( 11.5546, 67.4839, -116.305, 1.62 ) }
    dend_42 { pt3dadd( 11.4583, 68.2805, -117.249, 2.21 ) }
    dend_42 { pt3dadd( 11.3315, 70.3446, -119.552, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( 11.3324, 70.8519, -120.086, 0.37 ) }
    dend_42 { pt3dadd( 11.3347, 70.901, -120.134, 0.37 ) }
    dend_42 { pt3dadd( 11.4006, 71.8592, -121.069, 0.74 ) }
    dend_42 { pt3dadd( 11.4315, 72.3086, -121.484, 0.59 ) }
    dend_42 { pt3dadd( 11.4795, 73.3363, -122.355, 0.29 ) }
    dend_42 { pt3dadd( 11.5095, 74.4283, -123.232, 1.47 ) }
    dend_42 { pt3dadd( 11.5367, 75.2777, -123.949, 1.77 ) }
    dend_42 { pt3dadd( 11.5868, 76.8951, -125.282, 0.22 ) }
    dend_42 { pt3dadd( 11.5886, 76.9766, -125.347, 0.22 ) }
    dend_42 { pt3dadd( 11.5997, 77.4731, -125.701, 0.22 ) }
    dend_42 { pt3dadd( 11.6068, 78.0174, -126.016, 0.22 ) }
    dend_42 { pt3dadd( 11.6083, 78.0791, -126.046, 0.22 ) }
    dend_42 { pt3dadd( 11.6605, 79.2193, -126.482, 1.69 ) }
    dend_42 { pt3dadd( 11.6856, 79.872, -126.696, 1.69 ) }
    dend_42 { pt3dadd( 11.7715, 81.4557, -127.211, 0.22 ) }
    dend_42 { pt3dadd( 11.8182, 82.1831, -127.448, 0.52 ) }
    dend_42 { pt3dadd( 11.8205, 82.2391, -127.465, 0.52 ) }
    dend_42 { pt3dadd( 11.8393, 83.286, -127.821, 0.22 ) }
    dend_42 { pt3dadd( 11.8391, 83.3505, -127.843, 0.22 ) }
    dend_42 { pt3dadd( 11.8345, 84.1087, -128.112, 0.22 ) }
    dend_42 { pt3dadd( 11.8019, 85.5917, -128.638, 1.55 ) }
    dend_42 { pt3dadd( 11.7882, 86.2911, -128.878, 1.77 ) }
    dend_42 { pt3dadd( 11.771, 87.7903, -129.408, 0.22 ) }
    dend_42 { pt3dadd( 11.7616, 88.5307, -129.69, 0.59 ) }
    dend_42 { pt3dadd( 11.7542, 89.9231, -130.235, 0.22 ) }
    dend_42 { pt3dadd( 11.7525, 90.7112, -130.567, 0.59 ) }
    dend_42 { pt3dadd( 11.6708, 92.0671, -131.217, 0.22 ) }
    dend_42 { pt3dadd( 11.5659, 93.0307, -131.721, 1.47 ) }
    dend_42 { pt3dadd( 11.417, 93.7865, -132.121, 2.28 ) }
    dend_42 { pt3dadd( 11.4004, 93.8448, -132.154, 2.28 ) }
    dend_42 { pt3dadd( 11.1102, 94.5993, -132.575, 2.73 ) }
    dend_42 { pt3dadd( 10.1291, 96.7112, -133.698, 0.22 ) }
    dend_42 { pt3dadd( 9.72446, 97.4722, -134.054, 0.52 ) }
    dend_42 { pt3dadd( 9.22889, 98.3618, -134.418, 0.22 ) }
    dend_42 { pt3dadd( 8.93538, 98.8851, -134.617, 0.81 ) }
    dend_42 { pt3dadd( 8.58851, 99.5055, -134.836, 1.18 ) }
    dend_42 { pt3dadd( 7.679, 101.183, -135.414, 0.22 ) }
    dend_42 { pt3dadd( 6.95413, 102.61, -135.883, 0.22 ) }
    dend_42 { pt3dadd( 6.43897, 103.639, -136.246, 1.11 ) }
    dend_42 { pt3dadd( 6.15898, 104.225, -136.476, 1.69 ) }
    dend_42 { pt3dadd( 5.89651, 104.799, -136.713, 1.99 ) }
    dend_42 { pt3dadd( 5.22732, 106.342, -137.388, 0.22 ) }
    dend_42 { pt3dadd( 4.70406, 107.521, -138.015, 0.22 ) }
    dend_42 { pt3dadd( 4.33873, 108.324, -138.499, 0.22 ) }
    dend_42 { pt3dadd( 3.85759, 109.326, -139.103, 1.25 ) }
    dend_42 { pt3dadd( 3.65867, 109.718, -139.344, 2.36 ) }
    dend_42 { pt3dadd( 3.30887, 110.385, -139.764, 2.36 ) }
    dend_42 { pt3dadd( 2.24684, 112.321, -140.932, 0.22 ) }
    dend_42 { pt3dadd( 2.21856, 112.374, -140.966, 0.22 ) }
    dend_42 { pt3dadd( 1.69065, 113.628, -141.742, 0.22 ) }
    dend_42 { pt3dadd( 1.67506, 113.676, -141.77, 0.22 ) }
    dend_42 { pt3dadd( 1.50551, 114.454, -142.179, 0.22 ) }
    dend_42 { pt3dadd( 1.4279, 115.478, -142.66, 2.28 ) }
    dend_42 { pt3dadd( 1.47455, 116.37, -143.047, 1.47 ) }
    dend_42 { pt3dadd( 1.6883, 118.374, -143.959, 0.22 ) }
    dend_42 { pt3dadd( 1.78591, 118.935, -144.242, 0.66 ) }
    dend_42 { pt3dadd( 1.85634, 119.298, -144.432, 0.66 ) }
    dend_42 { pt3dadd( 2.16789, 120.721, -145.217, 0.22 ) }
    dend_42 { pt3dadd( 2.33711, 121.44, -145.627, 0.81 ) }
    dend_42 { pt3dadd( 2.42317, 121.882, -145.874, 0.81 ) }
    dend_42 { pt3dadd( 2.63396, 123.276, -146.676, 0.22 ) }
    dend_42 { pt3dadd( 2.74484, 124.471, -147.383, 1.69 ) }
    dend_42 { pt3dadd( 2.76539, 124.999, -147.685, 1.92 ) }
    dend_42 { pt3dadd( 2.76517, 125.068, -147.723, 1.92 ) }
    dend_42 { pt3dadd( 2.7217, 126.425, -148.451, 0.22 ) }
    dend_42 { pt3dadd( 2.69598, 126.876, -148.688, 0.59 ) }
    dend_42 { pt3dadd( 2.58697, 128.146, -149.327, 0.22 ) }
    dend_42 { pt3dadd( 2.48762, 129.113, -149.838, 0.22 ) }
    dend_42 { pt3dadd( 2.48337, 129.163, -149.867, 0.22 ) }
    dend_42 { pt3dadd( 2.43537, 130.118, -150.443, 0.22 ) }
    dend_42 { pt3dadd( 2.42616, 130.967, -150.98, 1.62 ) }
    dend_42 { pt3dadd( 2.42771, 131.034, -151.022, 1.62 ) }
    dend_42 { pt3dadd( 2.47646, 131.687, -151.424, 1.69 ) }
    dend_42 { pt3dadd( 2.58907, 132.811, -152.117, 0.44 ) }
    dend_42 { pt3dadd( 2.66975, 133.553, -152.557, 0.59 ) }
    dend_42 { pt3dadd( 2.6771, 133.613, -152.589, 0.59 ) }
    dend_42 { pt3dadd( 2.84223, 134.868, -153.264, 0.22 ) }
    dend_42 { pt3dadd( 2.96132, 135.854, -153.78, 0.59 ) }
    dend_42 { pt3dadd( 2.98834, 136.107, -153.904, 0.74 ) }
    dend_42 { pt3dadd( 3.06878, 137.023, -154.351, 0.22 ) }
    dend_42 { pt3dadd( 3.11496, 137.852, -154.797, 1.11 ) }
    dend_42 { pt3dadd( 3.13883, 139.053, -155.468, 0.22 ) }
    dend_42 { pt3dadd( 3.1173, 139.936, -155.958, 1.55 ) }
    dend_42 { pt3dadd( 3.0884, 140.451, -156.234, 1.77 ) }
    dend_42 { pt3dadd( 3.07167, 140.667, -156.35, 1.77 ) }
    dend_42 { pt3dadd( 2.88527, 142.372, -157.259, 0.22 ) }
    dend_42 { pt3dadd( 2.85068, 142.639, -157.402, 0.37 ) }
    dend_42 { pt3dadd( 2.73778, 143.469, -157.813, 0.22 ) }
    dend_42 { pt3dadd( 2.72937, 143.529, -157.846, 0.22 ) }
    dend_42 { pt3dadd( 2.67975, 143.893, -158.055, 0.52 ) }
    dend_42 { pt3dadd( 2.50683, 145.167, -158.763, 0.22 ) }
    dend_42 { pt3dadd( 2.34184, 146.415, -159.489, 1.25 ) }
    dend_42 { pt3dadd( 2.3168, 146.598, -159.601, 1.77 ) }
    dend_42 { pt3dadd( 2.08834, 148.088, -160.558, 0.15 ) }
    dend_42 { pt3dadd( 1.98166, 148.743, -160.977, 0.15 ) }
    dend_42 { pt3dadd( 1.84998, 149.529, -161.519, 0.59 ) }
    dend_42 { pt3dadd( 1.61331, 150.882, -162.517, 0.22 ) }
    dend_42 { pt3dadd( 1.47571, 151.639, -163.096, 0.22 ) }
    dend_42 { pt3dadd( 1.36307, 152.305, -163.6, 1.4 ) }
    dend_42 { pt3dadd( 1.30959, 152.581, -163.816, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 0.735905, 155.018, -165.807, 0.22 ) }
    dend_42 { pt3dadd( 0.724934, 155.062, -165.844, 0.22 ) }
    dend_42 { pt3dadd( 0.569031, 155.66, -166.346, 0.22 ) }
    dend_42 { pt3dadd( 0.408022, 156.258, -166.854, 1.84 ) }
    dend_42 { pt3dadd( -0.230523, 158.503, -168.765, 0.22 ) }
    dend_42 { pt3dadd( -0.482523, 159.288, -169.432, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 6/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -9.11123, 20.6457, -32.2441, 1.47 ) }
    dend_30 { pt3dadd( -12.1048, 19.2299, -35.6668, 1.47 ) }
    dend_30 { pt3dadd( -13.246, 18.7817, -36.6925, 2.28 ) }
    dend_30 { pt3dadd( -14.0134, 18.5171, -37.2845, 2.73 ) }
    dend_30 { pt3dadd( -14.7861, 18.2816, -37.8193, 2.87 ) }
    dend_30 { pt3dadd( -14.8418, 18.2646, -37.8578, 2.87 ) }
    dend_30 { pt3dadd( -16.1787, 17.857, -38.783, 2.95 ) }
    dend_30 { pt3dadd( -17.5457, 17.586, -39.256, 2.95 ) }
    dend_30 { pt3dadd( -18.6317, 17.3864, -39.6118, 2.43 ) }
    dend_30 { pt3dadd( -19.1538, 17.2976, -39.7819, 2.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 16/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -9.11123, 20.6457, -32.2441, 0.59 ) }
    dend_27 { pt3dadd( -6.0132, 23.0737, -32.9754, 0.59 ) }
    dend_27 { pt3dadd( -5.41767, 23.5758, -33.182, 0.59 ) }
    dend_27 { pt3dadd( -4.3361, 24.6014, -33.6265, 0.81 ) }
    dend_27 { pt3dadd( -3.32612, 25.6861, -34.0954, 0.74 ) }
    dend_27 { pt3dadd( -2.94197, 26.1677, -34.2971, 0.66 ) }
    dend_27 { pt3dadd( -2.36383, 27.0239, -34.6089, 0.52 ) }
    dend_27 { pt3dadd( -2.34628, 27.0736, -34.6351, 0.52 ) }
    dend_27 { pt3dadd( -2.31466, 27.7124, -34.8021, 0.66 ) }
    dend_27 { pt3dadd( -2.43465, 28.1934, -34.764, 0.66 ) }
    dend_27 { pt3dadd( -2.67658, 28.7882, -34.5855, 0.52 ) }
    dend_27 { pt3dadd( -3.00532, 29.4509, -34.2892, 0.44 ) }
    dend_27 { pt3dadd( -3.46748, 30.2655, -33.835, 0.66 ) }
    dend_27 { pt3dadd( -3.66155, 30.5984, -33.6366, 0.88 ) }
    dend_27 { pt3dadd( -3.97306, 31.1147, -33.3113, 0.96 ) }
    dend_27 { pt3dadd( -4.27214, 31.6251, -33.003, 0.81 ) }
    dend_27 { pt3dadd( -4.54826, 32.1085, -32.7499, 0.88 ) }
    dend_27 { pt3dadd( -4.83561, 32.5988, -32.5223, 0.88 ) }
    dend_27 { pt3dadd( -4.88724, 32.6828, -32.4875, 0.88 ) }
    dend_27 { pt3dadd( -5.23387, 33.226, -32.2808, 0.88 ) }
    dend_27 { pt3dadd( -5.5814, 33.7951, -32.1305, 1.03 ) }
    dend_27 { pt3dadd( -5.98561, 34.4516, -32.0526, 1.03 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 38/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 10.6013, 19.3574, -25.5103, 0.37 ) }
    dend_20 { pt3dadd( 10.7839, 21.0528, -25.4981, 0.37 ) }
    dend_20 { pt3dadd( 10.8487, 22.199, -25.4258, 0.81 ) }
    dend_20 { pt3dadd( 10.864, 22.7664, -25.3769, 1.33 ) }
    dend_20 { pt3dadd( 10.8902, 23.8553, -25.2751, 1.92 ) }
    dend_20 { pt3dadd( 10.9073, 24.7808, -25.1881, 1.03 ) }
    dend_20 { pt3dadd( 10.9522, 26.7402, -24.9954, 0.29 ) }
    dend_20 { pt3dadd( 10.9488, 27.541, -24.893, 0.66 ) }
    dend_20 { pt3dadd( 10.938, 28.1857, -24.8369, 0.66 ) }
    dend_20 { pt3dadd( 10.9198, 29.4249, -24.7594, 0.44 ) }
    dend_20 { pt3dadd( 10.9199, 30.2856, -24.7506, 0.59 ) }
    dend_20 { pt3dadd( 10.94, 31.0484, -24.7843, 0.52 ) }
    dend_20 { pt3dadd( 11.0035, 31.9676, -24.8828, 0.52 ) }
    dend_20 { pt3dadd( 11.0647, 33.2453, -25.0756, 1.25 ) }
    dend_20 { pt3dadd( 11.0754, 33.8803, -25.1821, 1.92 ) }
    dend_20 { pt3dadd( 11.0361, 35.2031, -25.4212, 1.62 ) }
    dend_20 { pt3dadd( 11.0325, 35.2703, -25.4332, 1.62 ) }
    dend_20 { pt3dadd( 10.9401, 36.4003, -25.6246, 0.29 ) }
    dend_20 { pt3dadd( 10.869, 37.1483, -25.7455, 0.22 ) }
    dend_20 { pt3dadd( 10.8154, 37.6922, -25.8145, 0.22 ) }
    dend_20 { pt3dadd( 10.7481, 38.4087, -25.9038, 1.11 ) }
    dend_20 { pt3dadd( 10.6726, 39.1925, -25.9912, 1.69 ) }
    dend_20 { pt3dadd( 10.6339, 39.6171, -26.0404, 2.06 ) }
    dend_20 { pt3dadd( 10.582, 40.6249, -26.1703, 1.11 ) }
    dend_20 { pt3dadd( 10.5407, 41.8245, -26.3188, 0.29 ) }
    dend_20 { pt3dadd( 10.4961, 42.9722, -26.4508, 1.99 ) }
    dend_20 { pt3dadd( 10.4854, 43.4843, -26.5118, 2.65 ) }
    dend_20 { pt3dadd( 10.4969, 44.1565, -26.6043, 2.87 ) }
    dend_20 { pt3dadd( 10.6086, 45.8464, -26.853, 0.22 ) }
    dend_20 { pt3dadd( 10.7656, 47.0127, -27.026, 0.37 ) }
    dend_20 { pt3dadd( 10.9696, 47.8269, -27.1771, 0.37 ) }
    dend_20 { pt3dadd( 11.521, 49.2331, -27.4763, 2.58 ) }
    dend_20 { pt3dadd( 12.0927, 50.2632, -27.7203, 2.87 ) }
    dend_20 { pt3dadd( 12.4333, 50.7073, -27.8367, 2.95 ) }
    dend_20 { pt3dadd( 12.9998, 51.2284, -27.9872, 3.09 ) }
    dend_20 { pt3dadd( 14.1398, 52.1, -28.264, 0.74 ) }
    dend_20 { pt3dadd( 14.8947, 52.5912, -28.425, 0.29 ) }
    dend_20 { pt3dadd( 15.692, 53.0243, -28.554, 1.4 ) }
    dend_20 { pt3dadd( 16.3609, 53.3529, -28.6326, 2.06 ) }
    dend_20 { pt3dadd( 17.2974, 53.7848, -28.734, 2.73 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 78/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 10.6013, 19.3574, -25.5103, 0.44 ) }
    dend_11 { pt3dadd( 11.8015, 21.7905, -24.4223, 0.44 ) }
    dend_11 { pt3dadd( 12.1814, 22.6358, -24.0601, 0.44 ) }
    dend_11 { pt3dadd( 12.236, 22.7625, -24.0089, 0.44 ) }
    dend_11 { pt3dadd( 12.5384, 23.4761, -23.7304, 0.44 ) }
    dend_11 { pt3dadd( 13.217, 24.9797, -23.1756, 0.44 ) }
    dend_11 { pt3dadd( 14.1152, 26.9701, -22.4411, 1.25 ) }
    dend_11 { pt3dadd( 14.1374, 27.0329, -22.425, 1.25 ) }
    dend_11 { pt3dadd( 14.3399, 27.6119, -22.2612, 1.25 ) }
    dend_11 { pt3dadd( 14.3744, 27.7059, -22.2328, 1.25 ) }
    dend_11 { pt3dadd( 14.7851, 28.7118, -21.8804, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 89/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 8.6471, 28.3314, -5.64178, 0.74 ) }
    dend_9 { pt3dadd( 8.39143, 29.0281, -4.13775, 0.74 ) }
    dend_9 { pt3dadd( 8.09059, 29.7653, -2.71972, 0.74 ) }
    dend_9 { pt3dadd( 7.61075, 30.9331, -0.671507, 1.4 ) }
    dend_9 { pt3dadd( 6.95523, 32.5029, 1.87056, 0.29 ) }
    dend_9 { pt3dadd( 6.82157, 32.8527, 2.40813, 0.29 ) }
    dend_9 { pt3dadd( 6.61461, 33.4378, 3.25855, 0.22 ) }
    dend_9 { pt3dadd( 6.44822, 33.9553, 3.93867, 0.22 ) }
    dend_9 { pt3dadd( 6.0255, 35.3654, 5.51869, 1.11 ) }
    dend_9 { pt3dadd( 5.89593, 35.7926, 5.88677, 1.55 ) }
    dend_9 { pt3dadd( 5.33288, 37.3963, 7.11636, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_9 { pt3dadd( 5.201, 37.8086, 7.49078, 0.22 ) }
    dend_9 { pt3dadd( 5.0788, 38.3322, 8.01799, 1.03 ) }
    dend_9 { pt3dadd( 5.03517, 38.6837, 8.39987, 1.18 ) }
    dend_9 { pt3dadd( 5.02616, 39.6328, 9.46041, 0.22 ) }
    dend_9 { pt3dadd( 5.21013, 40.7963, 10.8447, 1.33 ) }
    dend_9 { pt3dadd( 5.5965, 41.9597, 12.296, 0.29 ) }
    dend_9 { pt3dadd( 5.84564, 42.4333, 12.9129, 0.29 ) }
    dend_9 { pt3dadd( 6.19221, 42.9332, 13.5671, 0.74 ) }
    dend_9 { pt3dadd( 6.46593, 43.2919, 13.9986, 1.11 ) }
    dend_9 { pt3dadd( 6.99148, 43.9628, 14.6975, 0.29 ) }
    dend_9 { pt3dadd( 7.0229, 44.0089, 14.7385, 0.29 ) }
    dend_9 { pt3dadd( 7.27694, 44.5133, 15.1294, 0.29 ) }
    dend_9 { pt3dadd( 7.61463, 45.3785, 15.7752, 0.29 ) }
    dend_9 { pt3dadd( 7.88938, 46.2138, 16.322, 0.74 ) }
    dend_9 { pt3dadd( 8.10151, 46.8983, 16.7146, 1.25 ) }
    dend_9 { pt3dadd( 8.4649, 48.0629, 17.3078, 0.88 ) }
    dend_9 { pt3dadd( 8.62951, 48.5726, 17.5308, 1.03 ) }
    dend_9 { pt3dadd( 8.87405, 49.2886, 17.7922, 0.74 ) }
    dend_9 { pt3dadd( 9.30647, 50.4667, 18.0823, 0.29 ) }
    dend_9 { pt3dadd( 9.66935, 51.3829, 18.2395, 0.29 ) }
    dend_9 { pt3dadd( 9.69691, 51.4559, 18.2456, 0.29 ) }
    dend_9 { pt3dadd( 9.92504, 52.2066, 18.2355, 0.29 ) }
    dend_9 { pt3dadd( 9.96095, 52.3485, 18.2341, 0.29 ) }
    dend_9 { pt3dadd( 10.1413, 53.1085, 18.2341, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 24/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.6471, 28.3314, -5.64178, 0.96 ) }
    dend_2 { pt3dadd( 9.18068, 29.8111, -6.34627, 0.96 ) }
    dend_2 { pt3dadd( 9.53518, 30.9832, -6.88976, 0.29 ) }
    dend_2 { pt3dadd( 9.76025, 31.8777, -7.27441, 0.81 ) }
    dend_2 { pt3dadd( 9.95811, 32.8901, -7.66132, 1.11 ) }
    dend_2 { pt3dadd( 9.96597, 32.945, -7.68046, 1.11 ) }
    dend_2 { pt3dadd( 10.0277, 33.4933, -7.84695, 1.11 ) }
    dend_2 { pt3dadd( 10.0278, 33.5602, -7.86113, 1.11 ) }
    dend_2 { pt3dadd( 10.0198, 34.2703, -8.02487, 1.25 ) }
    dend_2 { pt3dadd( 10.0358, 34.855, -8.13779, 1.11 ) }
    dend_2 { pt3dadd( 10.1044, 36.0621, -8.31059, 0.81 ) }
    dend_2 { pt3dadd( 10.2028, 37.2696, -8.45343, 1.47 ) }
    dend_2 { pt3dadd( 10.2099, 37.3274, -8.45902, 1.47 ) }
    dend_2 { pt3dadd( 10.4009, 38.6368, -8.55873, 2.28 ) }
    dend_2 { pt3dadd( 10.532, 39.4275, -8.60708, 2.14 ) }
    dend_2 { pt3dadd( 10.6856, 40.1929, -8.62192, 1.47 ) }
    dend_2 { pt3dadd( 11.0213, 41.6867, -8.58434, 0.88 ) }
    dend_2 { pt3dadd( 11.4288, 43.2839, -8.5041, 0.29 ) }
    dend_2 { pt3dadd( 11.8077, 44.686, -8.40398, 0.29 ) }
    dend_2 { pt3dadd( 11.8267, 44.7514, -8.3975, 0.29 ) }
    dend_2 { pt3dadd( 12.1824, 45.8924, -8.29297, 1.55 ) }
    dend_2 { pt3dadd( 12.428, 46.6436, -8.21706, 2.14 ) }
    dend_2 { pt3dadd( 12.6711, 47.4233, -8.13079, 1.92 ) }
    dend_2 { pt3dadd( 12.8824, 48.174, -8.04473, 1.11 ) }
    dend_2 { pt3dadd( 13.0724, 49.0539, -7.95556, 0.44 ) }
    dend_2 { pt3dadd( 13.1758, 49.997, -7.88831, 0.37 ) }
    dend_2 { pt3dadd( 13.1642, 50.1428, -7.88614, 0.37 ) }
    dend_2 { pt3dadd( 13.014, 50.7335, -7.89661, 0.29 ) }
    dend_2 { pt3dadd( 12.987, 50.8069, -7.90003, 0.29 ) }
    dend_2 { pt3dadd( 12.681, 51.6096, -7.95417, 0.29 ) }
    dend_2 { pt3dadd( 12.457, 52.2106, -7.99943, 0.29 ) }
    dend_2 { pt3dadd( 12.2243, 52.9163, -8.05572, 0.29 ) }
    dend_2 { pt3dadd( 11.8807, 54.1242, -8.15519, 1.84 ) }
    dend_2 { pt3dadd( 11.7036, 54.9645, -8.22685, 2.65 ) }
    dend_2 { pt3dadd( 11.595, 55.7474, -8.29372, 2.95 ) }
    dend_2 { pt3dadd( 11.5841, 56.165, -8.32949, 2.95 ) }
    dend_2 { pt3dadd( 11.5883, 56.2426, -8.33618, 2.95 ) }
    // Section: dend_60, id: dend_60, parent: dend_50 (entry count 61/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -1.31612, -46.3377, 5.70649, 0.44 ) }
    dend_60 { pt3dadd( 0.415038, -46.7666, 6.18029, 0.44 ) }
    dend_60 { pt3dadd( 1.3112, -47.0677, 6.35214, 0.44 ) }
    dend_60 { pt3dadd( 1.3851, -47.0955, 6.36317, 0.44 ) }
    dend_60 { pt3dadd( 2.1492, -47.4245, 6.45437, 0.44 ) }
    dend_60 { pt3dadd( 3.16471, -47.8617, 6.57558, 0.37 ) }
    dend_60 { pt3dadd( 4.00297, -48.2225, 6.67563, 0.37 ) }
    dend_60 { pt3dadd( 5.04118, -48.5995, 6.71159, 1.92 ) }
    dend_60 { pt3dadd( 5.48715, -48.8014, 6.72518, 2.5 ) }
    dend_60 { pt3dadd( 6.21943, -49.1911, 6.74036, 2.8 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 71/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.31612, -46.3377, 5.70649, 1.03 ) }
    dend_51 { pt3dadd( -1.181, -48.1668, 4.85773, 1.03 ) }
    dend_51 { pt3dadd( -1.09467, -49.3355, 4.31537, 1.03 ) }
    dend_51 { pt3dadd( -1.0064, -50.5304, 3.76092, 1.33 ) }
    dend_51 { pt3dadd( -0.918616, -51.7188, 3.20947, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 76/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.29549, 67.825, -134.259, 0.37 ) }
    dend_47 { pt3dadd( -1.78442, 69.9149, -137.758, 0.37 ) }
    dend_47 { pt3dadd( -1.62948, 70.437, -138.673, 0.22 ) }
    dend_47 { pt3dadd( -1.61866, 70.4721, -138.732, 0.22 ) }
    dend_47 { pt3dadd( -1.51311, 70.814, -139.286, 0.22 ) }
    dend_47 { pt3dadd( -1.22627, 71.8208, -141.067, 1.77 ) }
    dend_47 { pt3dadd( -1.00138, 72.686, -142.618, 1.33 ) }
    dend_47 { pt3dadd( -0.824387, 73.4605, -143.958, 0.22 ) }
    dend_47 { pt3dadd( -0.774053, 73.778, -144.524, 0.74 ) }
    dend_47 { pt3dadd( -0.763985, 73.8846, -144.714, 0.74 ) }
    dend_47 { pt3dadd( -0.790874, 75.5711, -147.517, 0.22 ) }
    dend_47 { pt3dadd( -0.864047, 76.1919, -148.384, 1.25 ) }
    dend_47 { pt3dadd( -0.940167, 76.6122, -148.885, 1.4 ) }
    dend_47 { pt3dadd( -1.34129, 78.2971, -150.842, 0.22 ) }
    dend_47 { pt3dadd( -1.353, 78.3436, -150.892, 0.22 ) }
    dend_47 { pt3dadd( -1.64689, 79.4939, -151.988, 0.22 ) }
    dend_47 { pt3dadd( -1.91226, 80.5553, -152.787, 1.55 ) }
    dend_47 { pt3dadd( -2.0535, 81.1269, -153.172, 1.47 ) }
    dend_47 { pt3dadd( -2.66555, 83.786, -154.75, 0.22 ) }
    dend_47 { pt3dadd( -2.91836, 84.7912, -155.305, 0.22 ) }
    dend_47 { pt3dadd( -2.95425, 84.9166, -155.378, 0.22 ) }
    dend_47 { pt3dadd( -3.21391, 85.7105, -155.855, 0.22 ) }
    dend_47 { pt3dadd( -3.70862, 86.9535, -156.558, 1.77 ) }
    dend_47 { pt3dadd( -3.88515, 87.3741, -156.777, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( -4.94171, 89.8101, -157.952, 0.22 ) }
    dend_47 { pt3dadd( -5.00265, 89.9468, -158.026, 0.22 ) }
    dend_47 { pt3dadd( -5.28042, 90.6018, -158.402, 0.88 ) }
    dend_47 { pt3dadd( -5.82996, 92.0162, -159.252, 0.22 ) }
    dend_47 { pt3dadd( -6.17708, 93.205, -159.997, 0.88 ) }
    dend_47 { pt3dadd( -6.18879, 93.2627, -160.033, 0.88 ) }
    dend_47 { pt3dadd( -6.20846, 93.5191, -160.176, 0.88 ) }
    dend_47 { pt3dadd( -6.28308, 94.2877, -160.65, 0.15 ) }
    dend_47 { pt3dadd( -6.34857, 94.8094, -161.011, 0.52 ) }
    dend_47 { pt3dadd( -6.57214, 95.9508, -161.869, 0.22 ) }
    dend_47 { pt3dadd( -6.76978, 96.5487, -162.371, 0.22 ) }
    dend_47 { pt3dadd( -6.79226, 96.6029, -162.423, 0.22 ) }
    dend_47 { pt3dadd( -7.13164, 97.3526, -163.207, 0.22 ) }
    dend_47 { pt3dadd( -7.34168, 97.8309, -163.746, 0.22 ) }
    dend_47 { pt3dadd( -7.75581, 98.8532, -164.92, 1.69 ) }
    dend_47 { pt3dadd( -7.93238, 99.3945, -165.648, 1.47 ) }
    dend_47 { pt3dadd( -8.29162, 100.821, -167.747, 0.29 ) }
    dend_47 { pt3dadd( -8.42511, 101.551, -168.868, 0.22 ) }
    dend_47 { pt3dadd( -8.50232, 102.574, -170.493, 1.11 ) }
    dend_47 { pt3dadd( -8.50512, 102.837, -170.926, 1.11 ) }
    dend_47 { pt3dadd( -8.43513, 104.979, -174.703, 0.37 ) }
    dend_47 { pt3dadd( -8.43362, 105.008, -174.755, 0.37 ) }
    dend_47 { pt3dadd( -8.42679, 105.256, -175.221, 1.03 ) }
    dend_47 { pt3dadd( -8.44818, 106.306, -177.228, 0.22 ) }
    dend_47 { pt3dadd( -8.5169, 107.071, -178.69, 1.55 ) }
    dend_47 { pt3dadd( -8.63279, 107.923, -180.304, 1.62 ) }
    dend_47 { pt3dadd( -8.99826, 109.536, -183.221, 0.22 ) }
    dend_47 { pt3dadd( -9.31125, 110.652, -185.254, 1.47 ) }
    dend_47 { pt3dadd( -9.39187, 110.88, -185.669, 2.06 ) }
    dend_47 { pt3dadd( -9.59893, 111.37, -186.522, 2.06 ) }
    dend_47 { pt3dadd( -9.61643, 111.412, -186.587, 2.06 ) }
    dend_47 { pt3dadd( -10.2853, 113.207, -189.027, 0.15 ) }
    dend_47 { pt3dadd( -10.443, 113.668, -189.624, 1.03 ) }
    dend_47 { pt3dadd( -10.5513, 114.027, -190.074, 1.4 ) }
    dend_47 { pt3dadd( -10.9574, 115.551, -191.917, 0.15 ) }
    dend_47 { pt3dadd( -11.2364, 116.744, -193.314, 1.33 ) }
    dend_47 { pt3dadd( -11.5709, 118.308, -195.112, 0.22 ) }
    dend_47 { pt3dadd( -11.7479, 119.285, -196.177, 0.81 ) }
    dend_47 { pt3dadd( -11.7729, 119.428, -196.34, 1.18 ) }
    dend_47 { pt3dadd( -11.8858, 119.963, -197.018, 0.59 ) }
    dend_47 { pt3dadd( -12.0471, 120.582, -197.858, 1.25 ) }
    dend_47 { pt3dadd( -12.062, 120.629, -197.92, 1.25 ) }
    dend_47 { pt3dadd( -12.2521, 120.994, -198.463, 1.25 ) }
    dend_47 { pt3dadd( -13.2244, 122.51, -200.868, 1.11 ) }
    dend_47 { pt3dadd( -13.9838, 123.561, -202.638, 0.22 ) }
    dend_47 { pt3dadd( -14.0204, 123.605, -202.717, 0.22 ) }
    dend_47 { pt3dadd( -14.6112, 124.245, -203.853, 1.77 ) }
    dend_47 { pt3dadd( -16.5015, 126.215, -207.277, 0.15 ) }
    dend_47 { pt3dadd( -17.0599, 126.786, -208.237, 1.4 ) }
    dend_47 { pt3dadd( -17.0917, 126.826, -208.299, 1.4 ) }
    dend_47 { pt3dadd( -17.238, 127.066, -208.662, 2.06 ) }
    dend_47 { pt3dadd( -17.9476, 129.316, -211.739, 0.22 ) }
    dend_47 { pt3dadd( -18.0732, 130.243, -212.904, 2.21 ) }
    dend_47 { pt3dadd( -18.0701, 130.695, -213.411, 2.95 ) }
    dend_47 { pt3dadd( -17.8967, 134.096, -217.154, 0.22 ) }
    dend_47 { pt3dadd( -17.7782, 135.318, -218.486, 1.84 ) }
    dend_47 { pt3dadd( -17.2013, 138.646, -222.049, 0.22 ) }
    dend_47 { pt3dadd( -17.0678, 139.088, -222.496, 0.96 ) }
    dend_47 { pt3dadd( -17.0414, 139.165, -222.573, 0.96 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 59/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.29549, 67.825, -134.259, 0.22 ) }
    dend_46 { pt3dadd( -5.3616, 69.7511, -135.825, 0.22 ) }
    dend_46 { pt3dadd( -6.00671, 70.1136, -136.079, 0.44 ) }
    dend_46 { pt3dadd( -7.37619, 70.8274, -136.516, 0.22 ) }
    dend_46 { pt3dadd( -8.14962, 71.2083, -136.73, 1.03 ) }
    dend_46 { pt3dadd( -8.38395, 71.3196, -136.785, 1.18 ) }
    dend_46 { pt3dadd( -9.712, 71.9579, -137.048, 0.22 ) }
    dend_46 { pt3dadd( -11.1158, 72.5889, -137.126, 0.22 ) }
    dend_46 { pt3dadd( -11.9011, 72.9291, -137.167, 1.4 ) }
    dend_46 { pt3dadd( -12.4599, 73.1705, -137.193, 1.62 ) }
    dend_46 { pt3dadd( -13.8882, 73.8246, -137.246, 0.22 ) }
    dend_46 { pt3dadd( -14.908, 74.3178, -137.265, 0.22 ) }
    dend_46 { pt3dadd( -14.9785, 74.3546, -137.265, 0.22 ) }
    dend_46 { pt3dadd( -15.556, 74.6605, -137.248, 0.22 ) }
    dend_46 { pt3dadd( -16.3055, 75.0549, -137.215, 1.33 ) }
    dend_46 { pt3dadd( -17.0127, 75.4206, -137.174, 1.69 ) }
    dend_46 { pt3dadd( -18.3816, 76.1138, -137.067, 0.15 ) }
    dend_46 { pt3dadd( -19.376, 76.6119, -136.976, 0.74 ) }
    dend_46 { pt3dadd( -20.6594, 77.2973, -136.848, 0.15 ) }
    dend_46 { pt3dadd( -21.1193, 77.5699, -136.79, 0.15 ) }
    dend_46 { pt3dadd( -21.176, 77.6092, -136.783, 0.15 ) }
    dend_46 { pt3dadd( -21.6861, 78.0218, -136.742, 0.88 ) }
    dend_46 { pt3dadd( -22.1726, 78.4865, -136.728, 1.25 ) }
    dend_46 { pt3dadd( -22.6011, 78.8764, -136.795, 1.11 ) }
    dend_46 { pt3dadd( -23.5771, 79.7213, -137.07, 0.22 ) }
    dend_46 { pt3dadd( -24.6074, 80.5763, -137.411, 0.22 ) }
    dend_46 { pt3dadd( -25.4213, 81.2037, -137.674, 1.03 ) }
    dend_46 { pt3dadd( -25.6282, 81.351, -137.747, 1.33 ) }
    dend_46 { pt3dadd( -27.875, 82.8461, -138.532, 0.15 ) }
    dend_46 { pt3dadd( -27.9236, 82.8761, -138.549, 0.15 ) }
    dend_46 { pt3dadd( -28.3097, 83.119, -138.721, 1.03 ) }
    dend_46 { pt3dadd( -29.7482, 84.082, -139.414, 0.22 ) }
    dend_46 { pt3dadd( -30.4043, 84.5796, -139.748, 1.18 ) }
    dend_46 { pt3dadd( -31.01, 85.1029, -140.107, 1.33 ) }
    dend_46 { pt3dadd( -31.0537, 85.1477, -140.137, 1.33 ) }
    dend_46 { pt3dadd( -32.6736, 86.8622, -141.37, 0.15 ) }
    dend_46 { pt3dadd( -33.0701, 87.2837, -141.729, 0.66 ) }
    dend_46 { pt3dadd( -33.3157, 87.5489, -141.983, 0.66 ) }
    dend_46 { pt3dadd( -34.0739, 88.3347, -142.763, 0.22 ) }
    dend_46 { pt3dadd( -34.2633, 88.5064, -142.946, 0.66 ) }
    dend_46 { pt3dadd( -34.5275, 88.7201, -143.17, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_46 { pt3dadd( -35.6737, 89.5346, -143.991, 0.15 ) }
    dend_46 { pt3dadd( -36.0896, 89.8276, -144.293, 0.66 ) }
    dend_46 { pt3dadd( -36.6344, 90.2106, -144.686, 0.66 ) }
    dend_46 { pt3dadd( -37.9825, 91.2124, -145.65, 0.22 ) }
    dend_46 { pt3dadd( -38.4823, 91.6044, -146.015, 0.88 ) }
    dend_46 { pt3dadd( -38.7262, 91.8064, -146.205, 1.25 ) }
    dend_46 { pt3dadd( -40.7166, 93.5543, -147.813, 0.22 ) }
    dend_46 { pt3dadd( -40.7528, 93.5882, -147.846, 0.22 ) }
    dend_46 { pt3dadd( -41.4135, 94.236, -148.483, 1.03 ) }
    dend_46 { pt3dadd( -41.5819, 94.4029, -148.664, 1.03 ) }
    dend_46 { pt3dadd( -42.8708, 95.6349, -150.071, 0.22 ) }
    dend_46 { pt3dadd( -42.9054, 95.6672, -150.107, 0.22 ) }
    dend_46 { pt3dadd( -43.6975, 96.3557, -150.922, 0.96 ) }
    dend_46 { pt3dadd( -43.9999, 96.598, -151.22, 1.4 ) }
    dend_46 { pt3dadd( -45.3718, 97.6305, -152.544, 0.15 ) }
    dend_46 { pt3dadd( -45.903, 98.0153, -153.041, 0.44 ) }
    dend_46 { pt3dadd( -46.5296, 98.4533, -153.576, 0.15 ) }
    dend_46 { pt3dadd( -47.3735, 99.0234, -154.255, 1.03 ) }
    dend_46 { pt3dadd( -47.647, 99.1935, -154.446, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.482523, 159.288, -169.432, 0.22 ) }
    dend_44 { pt3dadd( -0.655841, 160.163, -170.286, 0.22 ) }
    dend_44 { pt3dadd( -1.00027, 161.962, -171.914, 1.33 ) }
    dend_44 { pt3dadd( -1.13436, 162.678, -172.518, 1.62 ) }
    dend_44 { pt3dadd( -1.54797, 164.695, -174.281, 0.22 ) }
    dend_44 { pt3dadd( -1.73354, 165.548, -175.037, 0.22 ) }
    dend_44 { pt3dadd( -1.75456, 165.635, -175.114, 0.22 ) }
    dend_44 { pt3dadd( -1.97279, 166.411, -175.768, 1.03 ) }
    dend_44 { pt3dadd( -2.09249, 166.809, -176.061, 1.03 ) }
    dend_44 { pt3dadd( -2.62124, 168.452, -177.219, 0.22 ) }
    dend_44 { pt3dadd( -2.66168, 168.577, -177.306, 0.22 ) }
    dend_44 { pt3dadd( -2.89425, 169.249, -177.834, 0.22 ) }
    dend_44 { pt3dadd( -2.91226, 169.301, -177.876, 0.22 ) }
    dend_44 { pt3dadd( -3.45188, 170.646, -178.997, 1.84 ) }
    dend_44 { pt3dadd( -3.67264, 171.167, -179.403, 2.43 ) }
    dend_44 { pt3dadd( -3.71343, 171.258, -179.465, 2.43 ) }
    dend_44 { pt3dadd( -4.25882, 172.415, -180.219, 1.11 ) }
    dend_44 { pt3dadd( -4.82797, 173.596, -180.946, 0.22 ) }
    dend_44 { pt3dadd( -5.34504, 174.602, -181.546, 0.22 ) }
    dend_44 { pt3dadd( -5.76763, 175.35, -181.959, 0.81 ) }
    dend_44 { pt3dadd( -6.12732, 175.995, -182.298, 1.99 ) }
    dend_44 { pt3dadd( -6.42004, 176.519, -182.552, 1.4 ) }
    dend_44 { pt3dadd( -6.69149, 177.051, -182.805, 0.96 ) }
    dend_44 { pt3dadd( -7.24223, 178.352, -183.466, 0.15 ) }
    dend_44 { pt3dadd( -7.48139, 179.079, -183.879, 0.15 ) }
    dend_44 { pt3dadd( -7.71961, 179.952, -184.419, 1.25 ) }
    dend_44 { pt3dadd( -7.78348, 180.221, -184.591, 1.62 ) }
    dend_44 { pt3dadd( -8.02835, 181.527, -185.414, 0.15 ) }
    dend_44 { pt3dadd( -8.09807, 182.029, -185.827, 0.52 ) }
    dend_44 { pt3dadd( -8.1425, 182.376, -186.108, 0.52 ) }
    dend_44 { pt3dadd( -8.26058, 183.202, -186.757, 0.15 ) }
    dend_44 { pt3dadd( -8.43458, 184.245, -187.537, 1.4 ) }
    dend_44 { pt3dadd( -8.54754, 184.82, -187.95, 1.99 ) }
    dend_44 { pt3dadd( -9.49222, 188.978, -190.91, 0.15 ) }
    dend_44 { pt3dadd( -9.83727, 190.458, -191.964, 0.15 ) }
    dend_44 { pt3dadd( -10.0563, 191.434, -192.639, 1.18 ) }
    dend_44 { pt3dadd( -10.1469, 191.863, -192.917, 2.14 ) }
    dend_44 { pt3dadd( -10.2193, 192.208, -193.125, 2.14 ) }
    dend_44 { pt3dadd( -10.7166, 194.438, -194.309, 0.15 ) }
    dend_44 { pt3dadd( -10.8922, 195.257, -194.609, 0.66 ) }
    dend_44 { pt3dadd( -11.153, 196.609, -195.18, 0.22 ) }
    dend_44 { pt3dadd( -11.3157, 197.518, -195.564, 0.96 ) }
    dend_44 { pt3dadd( -11.4023, 198.029, -195.765, 1.11 ) }
    dend_44 { pt3dadd( -11.4242, 198.156, -195.814, 1.11 ) }
    dend_44 { pt3dadd( -11.5602, 198.868, -196.066, 1.11 ) }
    dend_44 { pt3dadd( -12.0126, 201.133, -196.908, 0.22 ) }
    dend_44 { pt3dadd( -12.2314, 202.115, -197.272, 0.22 ) }
    dend_44 { pt3dadd( -12.5118, 203.327, -197.72, 1.47 ) }
    dend_44 { pt3dadd( -12.7922, 204.667, -198.242, 0.22 ) }
    dend_44 { pt3dadd( -12.9293, 205.409, -198.545, 0.81 ) }
    dend_44 { pt3dadd( -12.9715, 205.676, -198.657, 0.81 ) }
    dend_44 { pt3dadd( -13.1571, 207.312, -199.303, 0.22 ) }
    dend_44 { pt3dadd( -13.1706, 207.85, -199.54, 0.96 ) }
    dend_44 { pt3dadd( -13.0084, 209.402, -200.332, 0.22 ) }
    dend_44 { pt3dadd( -12.8747, 210.1, -200.753, 1.4 ) }
    dend_44 { pt3dadd( -12.7804, 210.508, -201.027, 1.77 ) }
    dend_44 { pt3dadd( -12.602, 211.279, -201.536, 1.55 ) }
    dend_44 { pt3dadd( -12.1853, 212.999, -202.677, 0.22 ) }
    dend_44 { pt3dadd( -11.9374, 214.133, -203.396, 0.59 ) }
    dend_44 { pt3dadd( -11.249, 217.958, -205.546, 0.22 ) }
    dend_44 { pt3dadd( -11.2404, 218.019, -205.576, 0.22 ) }
    dend_44 { pt3dadd( -11.0513, 219.915, -206.409, 0.22 ) }
    dend_44 { pt3dadd( -11.0483, 219.98, -206.433, 0.22 ) }
    dend_44 { pt3dadd( -11.0562, 220.743, -206.625, 0.96 ) }
    dend_44 { pt3dadd( -11.1063, 222.441, -206.869, 0.22 ) }
    dend_44 { pt3dadd( -11.1289, 223.583, -206.889, 0.37 ) }
    dend_44 { pt3dadd( -11.1401, 224.514, -206.907, 0.15 ) }
    dend_44 { pt3dadd( -11.1381, 224.805, -206.913, 0.44 ) }
    dend_44 { pt3dadd( -11.125, 225.531, -206.927, 0.22 ) }
    dend_44 { pt3dadd( -11.0983, 226.247, -206.938, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -0.482523, 159.288, -169.432, 0.22 ) }
    dend_43 { pt3dadd( -1.4173, 158.878, -169.466, 0.22 ) }
    dend_43 { pt3dadd( -1.68404, 158.749, -169.474, 0.29 ) }
    dend_43 { pt3dadd( -2.27385, 158.451, -169.506, 0.15 ) }
    dend_43 { pt3dadd( -2.84222, 158.16, -169.543, 0.29 ) }
    dend_43 { pt3dadd( -4.04383, 157.544, -169.621, 0.15 ) }
    dend_43 { pt3dadd( -5.28249, 156.911, -169.701, 0.44 ) }
    dend_43 { pt3dadd( -5.9286, 156.57, -169.748, 0.15 ) }
    dend_43 { pt3dadd( -6.48007, 156.264, -169.79, 0.59 ) }
    dend_43 { pt3dadd( -6.76103, 156.094, -169.813, 0.59 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 99/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -19.1538, 17.2976, -39.7819, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -19.1785, 17.3123, -44.8907, 2.28 ) }
    dend_34 { pt3dadd( -19.2717, 17.3184, -46.1555, 2.21 ) }
    dend_34 { pt3dadd( -19.875, 17.2993, -50.8936, 2.43 ) }
    dend_34 { pt3dadd( -20.0369, 17.2757, -51.8283, 2.58 ) }
    dend_34 { pt3dadd( -20.1034, 17.2572, -52.1305, 2.58 ) }
    dend_34 { pt3dadd( -21.0667, 16.8718, -55.7164, 0.52 ) }
    dend_34 { pt3dadd( -21.5253, 16.7214, -56.7067, 2.06 ) }
    dend_34 { pt3dadd( -21.8639, 16.6087, -57.3042, 2.43 ) }
    dend_34 { pt3dadd( -23.01, 16.1537, -58.997, 1.62 ) }
    dend_34 { pt3dadd( -23.7299, 15.867, -60.0419, 0.59 ) }
    dend_34 { pt3dadd( -24.7495, 15.5048, -61.4451, 2.58 ) }
    dend_34 { pt3dadd( -25.9762, 15.1385, -63.0079, 3.61 ) }
    dend_34 { pt3dadd( -27.6672, 14.7104, -65.2127, 0.59 ) }
    dend_34 { pt3dadd( -28.3233, 14.5579, -66.1064, 0.29 ) }
    dend_34 { pt3dadd( -28.386, 14.546, -66.1914, 0.29 ) }
    dend_34 { pt3dadd( -28.7187, 14.4928, -66.6821, 0.59 ) }
    dend_34 { pt3dadd( -29.053, 14.4309, -67.1723, 0.44 ) }
    dend_34 { pt3dadd( -29.945, 14.1418, -68.4946, 0.22 ) }
    dend_34 { pt3dadd( -30.9138, 13.7569, -69.8304, 0.22 ) }
    dend_34 { pt3dadd( -30.949, 13.7434, -69.877, 0.22 ) }
    dend_34 { pt3dadd( -31.8713, 13.4581, -71.0069, 2.06 ) }
    dend_34 { pt3dadd( -32.7571, 13.2248, -72.0394, 3.39 ) }
    dend_34 { pt3dadd( -33.9005, 12.9942, -73.2445, 3.61 ) }
    dend_34 { pt3dadd( -35.5292, 12.7836, -74.739, 2.06 ) }
    dend_34 { pt3dadd( -36.6194, 12.6742, -75.601, 0.44 ) }
    dend_34 { pt3dadd( -37.704, 12.5634, -76.3694, 0.22 ) }
    dend_34 { pt3dadd( -37.8244, 12.5536, -76.4401, 0.22 ) }
    dend_34 { pt3dadd( -38.5684, 12.512, -76.7911, 0.22 ) }
    dend_34 { pt3dadd( -38.6451, 12.5117, -76.8139, 0.22 ) }
    dend_34 { pt3dadd( -39.7339, 12.5685, -76.9593, 0.22 ) }
    dend_34 { pt3dadd( -40.6199, 12.6714, -76.9884, 0.22 ) }
    dend_34 { pt3dadd( -41.4522, 12.8255, -77.0827, 0.66 ) }
    dend_34 { pt3dadd( -41.5596, 12.8527, -77.1044, 0.66 ) }
    dend_34 { pt3dadd( -42.2955, 13.0972, -77.3455, 0.88 ) }
    dend_34 { pt3dadd( -42.7885, 13.2922, -77.5345, 0.22 ) }
    dend_34 { pt3dadd( -43.4105, 13.5538, -77.7822, 0.22 ) }
    dend_34 { pt3dadd( -44.8281, 14.1076, -78.3525, 0.81 ) }
    dend_34 { pt3dadd( -45.408, 14.314, -78.5857, 0.96 ) }
    dend_34 { pt3dadd( -46.2557, 14.5987, -78.9089, 0.59 ) }
    dend_34 { pt3dadd( -47.5333, 15.0047, -79.3815, 0.22 ) }
    dend_34 { pt3dadd( -48.6646, 15.3464, -79.7813, 0.22 ) }
    dend_34 { pt3dadd( -49.7113, 15.6398, -80.1095, 2.14 ) }
    dend_34 { pt3dadd( -50.7839, 15.9316, -80.3571, 3.46 ) }
    dend_34 { pt3dadd( -51.5968, 16.1597, -80.542, 3.76 ) }
    dend_34 { pt3dadd( -51.6536, 16.1751, -80.5531, 3.76 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 45/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -19.1538, 17.2976, -39.7819, 0.22 ) }
    dend_31 { pt3dadd( -20.1077, 17.4599, -39.8127, 0.22 ) }
    dend_31 { pt3dadd( -21.6301, 17.719, -39.8617, 0.22 ) }
    dend_31 { pt3dadd( -21.7581, 17.7408, -39.8658, 0.22 ) }
    dend_31 { pt3dadd( -23.1026, 17.9696, -39.9091, 2.14 ) }
    dend_31 { pt3dadd( -23.9291, 18.1102, -39.9357, 2.65 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 51/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.98561, 34.4516, -32.0526, 0.29 ) }
    dend_29 { pt3dadd( -6.34875, 34.7861, -32.851, 0.29 ) }
    dend_29 { pt3dadd( -6.3805, 34.8148, -32.9059, 0.29 ) }
    dend_29 { pt3dadd( -6.63107, 35.0587, -33.3233, 0.44 ) }
    dend_29 { pt3dadd( -7.2565, 35.7315, -34.3714, 0.66 ) }
    dend_29 { pt3dadd( -8.01537, 36.5931, -35.658, 0.22 ) }
    dend_29 { pt3dadd( -8.51132, 37.1787, -36.4715, 0.37 ) }
    dend_29 { pt3dadd( -8.97077, 37.7946, -37.2997, 0.37 ) }
    dend_29 { pt3dadd( -9.31203, 38.2986, -37.8975, 0.29 ) }
    dend_29 { pt3dadd( -9.72353, 38.9146, -38.6, 1.03 ) }
    dend_29 { pt3dadd( -9.7549, 38.9662, -38.6511, 1.03 ) }
    dend_29 { pt3dadd( -10.0055, 39.4658, -39.1162, 1.25 ) }
    dend_29 { pt3dadd( -10.4917, 40.5833, -40.2077, 0.22 ) }
    dend_29 { pt3dadd( -10.7572, 41.2158, -40.8856, 0.52 ) }
    dend_29 { pt3dadd( -11.2652, 42.3208, -42.116, 0.22 ) }
    dend_29 { pt3dadd( -11.4506, 42.6881, -42.5383, 0.22 ) }
    dend_29 { pt3dadd( -11.729, 43.1756, -43.1522, 0.44 ) }
    dend_29 { pt3dadd( -11.7735, 43.246, -43.2507, 0.44 ) }
    dend_29 { pt3dadd( -12.127, 43.7099, -43.9087, 0.29 ) }
    dend_29 { pt3dadd( -12.4139, 44.0283, -44.3358, 0.59 ) }
    dend_29 { pt3dadd( -12.6525, 44.2846, -44.6318, 0.81 ) }
    dend_29 { pt3dadd( -13.3821, 44.9966, -45.43, 0.59 ) }
    dend_29 { pt3dadd( -13.4214, 45.0357, -45.4718, 0.59 ) }
    dend_29 { pt3dadd( -13.9807, 45.6223, -46.0576, 0.29 ) }
    dend_29 { pt3dadd( -14.7873, 46.5057, -46.897, 1.99 ) }
    dend_29 { pt3dadd( -15.2749, 47.0526, -47.3903, 2.5 ) }
    dend_29 { pt3dadd( -15.8452, 47.6989, -47.9471, 2.8 ) }
    dend_29 { pt3dadd( -17.5477, 49.6133, -49.4707, 0.22 ) }
    dend_29 { pt3dadd( -18.0078, 50.1213, -49.8574, 0.88 ) }
    dend_29 { pt3dadd( -18.049, 50.1664, -49.8901, 0.88 ) }
    dend_29 { pt3dadd( -18.4236, 50.5748, -50.1734, 0.66 ) }
    dend_29 { pt3dadd( -18.9494, 51.1387, -50.5339, 0.22 ) }
    dend_29 { pt3dadd( -19.3843, 51.6022, -50.8243, 0.22 ) }
    dend_29 { pt3dadd( -19.9544, 52.1588, -51.1885, 0.22 ) }
    dend_29 { pt3dadd( -20.5632, 52.7485, -51.6571, 1.03 ) }
    dend_29 { pt3dadd( -20.9345, 53.1124, -51.9817, 1.55 ) }
    dend_29 { pt3dadd( -21.171, 53.3476, -52.2117, 1.77 ) }
    dend_29 { pt3dadd( -22.005, 54.2135, -53.1418, 0.22 ) }
    dend_29 { pt3dadd( -22.5341, 54.8034, -53.8878, 0.22 ) }
    dend_29 { pt3dadd( -23.0504, 55.3993, -54.7257, 1.69 ) }
    dend_29 { pt3dadd( -23.3918, 55.7691, -55.2915, 2.21 ) }
    dend_29 { pt3dadd( -23.4224, 55.8015, -55.345, 2.21 ) }
    dend_29 { pt3dadd( -23.7237, 56.1188, -56.0488, 2.21 ) }
    dend_29 { pt3dadd( -24.6521, 57.2121, -58.6617, 0.22 ) }
    dend_29 { pt3dadd( -24.6676, 57.2343, -58.715, 0.22 ) }
    dend_29 { pt3dadd( -24.9818, 57.7258, -59.9159, 1.55 ) }
    dend_29 { pt3dadd( -25.1968, 58.0671, -60.7464, 2.36 ) }
    dend_29 { pt3dadd( -26.4597, 60.0831, -65.6141, 0.29 ) }
    dend_29 { pt3dadd( -26.7038, 60.4813, -66.519, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_29 { pt3dadd( -27.1002, 61.1997, -68.0151, 0.22 ) }
    dend_29 { pt3dadd( -27.1165, 61.2321, -68.0745, 0.22 ) }
    dend_29 { pt3dadd( -27.3082, 61.6596, -68.745, 0.22 ) }
    dend_29 { pt3dadd( -27.3297, 61.7053, -68.8062, 0.22 ) }
    dend_29 { pt3dadd( -27.8508, 62.7801, -69.9635, 2.36 ) }
    dend_29 { pt3dadd( -28.0885, 63.2879, -70.5778, 2.73 ) }
    dend_29 { pt3dadd( -29.0539, 65.4639, -73.3111, 0.22 ) }
    dend_29 { pt3dadd( -29.2187, 65.8578, -73.8029, 0.88 ) }
    dend_29 { pt3dadd( -29.3086, 66.096, -74.0921, 1.03 ) }
    dend_29 { pt3dadd( -29.3252, 66.1389, -74.1439, 1.03 ) }
    dend_29 { pt3dadd( -30.0058, 67.8315, -76.3849, 0.22 ) }
    dend_29 { pt3dadd( -30.0223, 67.8711, -76.4395, 0.22 ) }
    dend_29 { pt3dadd( -30.312, 68.682, -77.5304, 0.22 ) }
    dend_29 { pt3dadd( -30.5629, 69.4917, -78.7036, 1.69 ) }
    dend_29 { pt3dadd( -30.6936, 69.9296, -79.3517, 1.92 ) }
    dend_29 { pt3dadd( -31.2562, 71.7912, -82.091, 0.66 ) }
    dend_29 { pt3dadd( -31.4779, 72.5818, -83.2691, 0.29 ) }
    dend_29 { pt3dadd( -31.696, 73.5072, -84.6553, 0.66 ) }
    dend_29 { pt3dadd( -31.8988, 74.8317, -86.7256, 0.22 ) }
    dend_29 { pt3dadd( -31.9459, 75.2821, -87.4315, 1.25 ) }
    dend_29 { pt3dadd( -31.9702, 75.6878, -88.0314, 1.69 ) }
    dend_29 { pt3dadd( -32.0342, 77.4731, -90.4182, 0.22 ) }
    dend_29 { pt3dadd( -32.0524, 77.9247, -90.9853, 1.03 ) }
    dend_29 { pt3dadd( -32.1071, 79.2772, -92.5627, 0.22 ) }
    dend_29 { pt3dadd( -32.1067, 79.3332, -92.6184, 0.22 ) }
    dend_29 { pt3dadd( -32.0798, 79.7063, -92.9616, 0.22 ) }
    dend_29 { pt3dadd( -32.0093, 80.3488, -93.4966, 1.11 ) }
    dend_29 { pt3dadd( -31.9535, 80.7552, -93.8172, 1.33 ) }
    dend_29 { pt3dadd( -31.6546, 82.5199, -95.2857, 0.29 ) }
    dend_29 { pt3dadd( -31.5586, 82.9267, -95.6832, 0.29 ) }
    dend_29 { pt3dadd( -31.3388, 83.6709, -96.498, 0.88 ) }
    dend_29 { pt3dadd( -31.267, 83.8771, -96.7804, 0.88 ) }
    dend_29 { pt3dadd( -30.7986, 85.0995, -98.6601, 0.22 ) }
    dend_29 { pt3dadd( -30.6024, 85.6262, -99.5677, 1.47 ) }
    dend_29 { pt3dadd( -30.0852, 87.0959, -102.266, 0.29 ) }
    dend_29 { pt3dadd( -30.0256, 87.2602, -102.588, 0.59 ) }
    dend_29 { pt3dadd( -29.4835, 88.7581, -105.67, 0.37 ) }
    dend_29 { pt3dadd( -29.3211, 89.217, -106.598, 1.18 ) }
    dend_29 { pt3dadd( -29.0153, 90.2839, -108.804, 0.88 ) }
    dend_29 { pt3dadd( -28.9763, 90.4656, -109.201, 1.03 ) }
    dend_29 { pt3dadd( -28.7934, 91.3342, -111.158, 0.37 ) }
    dend_29 { pt3dadd( -28.6078, 92.0656, -112.833, 1.33 ) }
    dend_29 { pt3dadd( -28.5098, 92.3881, -113.555, 1.33 ) }
    dend_29 { pt3dadd( -27.9875, 93.8738, -116.93, 1.03 ) }
    dend_29 { pt3dadd( -27.7976, 94.3685, -118.011, 1.18 ) }
    dend_29 { pt3dadd( -27.3276, 95.6165, -120.63, 0.22 ) }
    dend_29 { pt3dadd( -27.2008, 96.0084, -121.406, 1.25 ) }
    dend_29 { pt3dadd( -27.134, 96.223, -121.823, 1.4 ) }
    dend_29 { pt3dadd( -26.8442, 97.2355, -123.885, 0.15 ) }
    dend_29 { pt3dadd( -26.7619, 97.6848, -124.734, 0.81 ) }
    dend_29 { pt3dadd( -26.7885, 97.9005, -125.192, 0.81 ) }
    dend_29 { pt3dadd( -27.1645, 98.6463, -126.872, 0.29 ) }
    dend_29 { pt3dadd( -27.4578, 99.0465, -127.809, 0.59 ) }
    dend_29 { pt3dadd( -28.3711, 99.9235, -129.986, 1.25 ) }
    dend_29 { pt3dadd( -28.9556, 100.359, -131.12, 1.4 ) }
    dend_29 { pt3dadd( -30.6906, 101.469, -134.111, 0.15 ) }
    dend_29 { pt3dadd( -31.355, 101.852, -135.147, 0.15 ) }
    dend_29 { pt3dadd( -31.7352, 102.059, -135.698, 1.03 ) }
    dend_29 { pt3dadd( -33.1773, 102.826, -137.657, 0.22 ) }
    dend_29 { pt3dadd( -33.2186, 102.848, -137.709, 0.22 ) }
    dend_29 { pt3dadd( -33.595, 103.042, -138.193, 1.03 ) }
    dend_29 { pt3dadd( -33.8961, 103.201, -138.554, 1.25 ) }
    dend_29 { pt3dadd( -35.8012, 104.24, -140.883, 0.15 ) }
    dend_29 { pt3dadd( -36.1566, 104.449, -141.287, 0.66 ) }
    dend_29 { pt3dadd( -36.2067, 104.482, -141.339, 0.66 ) }
    dend_29 { pt3dadd( -36.4652, 104.665, -141.573, 0.88 ) }
    dend_29 { pt3dadd( -37.7898, 105.583, -142.641, 0.22 ) }
    dend_29 { pt3dadd( -38.2347, 105.878, -142.941, 0.22 ) }
    dend_29 { pt3dadd( -38.9051, 106.307, -143.293, 1.11 ) }
    dend_29 { pt3dadd( -39.3398, 106.587, -143.537, 1.47 ) }
    dend_29 { pt3dadd( -39.6803, 106.82, -143.755, 1.47 ) }
    dend_29 { pt3dadd( -41.3358, 108.072, -144.952, 0.22 ) }
    dend_29 { pt3dadd( -41.73, 108.408, -145.263, 0.74 ) }
    dend_29 { pt3dadd( -41.9184, 108.578, -145.418, 0.88 ) }
    dend_29 { pt3dadd( -41.955, 108.615, -145.449, 0.88 ) }
    dend_29 { pt3dadd( -42.8094, 109.458, -146.184, 0.22 ) }
    dend_29 { pt3dadd( -43.3532, 110.018, -146.634, 0.22 ) }
    dend_29 { pt3dadd( -43.8965, 110.624, -147.116, 0.52 ) }
    dend_29 { pt3dadd( -44.2616, 111.027, -147.455, 1.18 ) }
    dend_29 { pt3dadd( -45.0505, 111.835, -148.207, 0.22 ) }
    dend_29 { pt3dadd( -45.9022, 112.572, -149.007, 0.88 ) }
    dend_29 { pt3dadd( -46.2395, 112.822, -149.315, 1.03 ) }
    dend_29 { pt3dadd( -47.5068, 113.647, -150.483, 0.22 ) }
    dend_29 { pt3dadd( -48.0312, 113.932, -150.98, 0.22 ) }
    dend_29 { pt3dadd( -49.0243, 114.391, -151.935, 1.11 ) }
    dend_29 { pt3dadd( -50.4292, 114.902, -153.161, 0.15 ) }
    dend_29 { pt3dadd( -50.7352, 114.995, -153.409, 0.59 ) }
    dend_29 { pt3dadd( -50.9743, 115.057, -153.593, 0.59 ) }
    dend_29 { pt3dadd( -52.4911, 115.391, -154.616, 0.22 ) }
    dend_29 { pt3dadd( -52.632, 115.428, -154.722, 0.22 ) }
    dend_29 { pt3dadd( -54.6454, 115.992, -156.201, 0.22 ) }
    dend_29 { pt3dadd( -54.6917, 116.007, -156.236, 0.22 ) }
    dend_29 { pt3dadd( -55.4847, 116.279, -156.849, 1.03 ) }
    dend_29 { pt3dadd( -56.0844, 116.507, -157.315, 1.4 ) }
    dend_29 { pt3dadd( -57.7537, 117.294, -158.545, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 95/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.98561, 34.4516, -32.0526, 0.29 ) }
    dend_28 { pt3dadd( -5.62769, 35.1305, -32.5665, 0.29 ) }
    dend_28 { pt3dadd( -5.2415, 36.0582, -33.2065, 1.69 ) }
    dend_28 { pt3dadd( -5.12196, 36.456, -33.454, 2.36 ) }
    dend_28 { pt3dadd( -4.91214, 37.326, -33.9619, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -4.49543, 39.3223, -35.0802, 0.29 ) }
    dend_28 { pt3dadd( -4.37933, 39.8694, -35.387, 0.44 ) }
    dend_28 { pt3dadd( -4.26482, 40.6245, -35.8113, 0.44 ) }
    dend_28 { pt3dadd( -4.1688, 41.4798, -36.2752, 0.22 ) }
    dend_28 { pt3dadd( -4.13104, 41.7561, -36.4272, 0.22 ) }
    dend_28 { pt3dadd( -4.12023, 41.8068, -36.4552, 0.22 ) }
    dend_28 { pt3dadd( -3.86982, 42.5048, -36.9691, 0.37 ) }
    dend_28 { pt3dadd( -3.81467, 42.614, -37.0716, 0.37 ) }
    dend_28 { pt3dadd( -3.77012, 42.7018, -37.154, 0.37 ) }
    dend_28 { pt3dadd( -3.53729, 43.2916, -37.6472, 0.37 ) }
    dend_28 { pt3dadd( -3.34535, 43.9314, -38.1478, 0.22 ) }
    dend_28 { pt3dadd( -2.98578, 45.3222, -39.1947, 2.06 ) }
    dend_28 { pt3dadd( -2.78463, 46.1886, -39.8162, 2.73 ) }
    dend_28 { pt3dadd( -2.39408, 47.9045, -40.9946, 0.22 ) }
    dend_28 { pt3dadd( -2.13168, 48.9204, -41.6909, 0.22 ) }
    dend_28 { pt3dadd( -1.80899, 49.9358, -42.3921, 0.22 ) }
    dend_28 { pt3dadd( -1.57474, 50.518, -42.8037, 0.22 ) }
    dend_28 { pt3dadd( -1.16128, 51.3986, -43.5106, 1.77 ) }
    dend_28 { pt3dadd( -0.986189, 51.7428, -43.8051, 1.99 ) }
    dend_28 { pt3dadd( -0.153144, 53.0694, -45.063, 0.22 ) }
    dend_28 { pt3dadd( 0.438245, 53.9003, -45.9015, 2.28 ) }
    dend_28 { pt3dadd( 0.885067, 54.5384, -46.5368, 2.5 ) }
    dend_28 { pt3dadd( 1.95624, 56.3, -48.2686, 0.44 ) }
    dend_28 { pt3dadd( 2.26938, 56.9063, -48.8703, 0.44 ) }
    dend_28 { pt3dadd( 2.74904, 58.0437, -49.976, 0.29 ) }
    dend_28 { pt3dadd( 2.76218, 58.0933, -50.0222, 0.29 ) }
    dend_28 { pt3dadd( 2.88129, 58.8563, -50.6821, 0.22 ) }
    dend_28 { pt3dadd( 3.06962, 60.2034, -51.7586, 1.69 ) }
    dend_28 { pt3dadd( 3.14395, 60.8477, -52.2331, 2.21 ) }
    dend_28 { pt3dadd( 3.16753, 61.0855, -52.4062, 2.21 ) }
    dend_28 { pt3dadd( 3.33243, 62.7034, -53.5039, 0.52 ) }
    dend_28 { pt3dadd( 3.53169, 63.5955, -54.0978, 0.22 ) }
    dend_28 { pt3dadd( 3.72349, 64.1176, -54.4275, 0.22 ) }
    dend_28 { pt3dadd( 3.76982, 64.212, -54.4811, 0.22 ) }
    dend_28 { pt3dadd( 4.28058, 65.1345, -54.9918, 1.62 ) }
    dend_28 { pt3dadd( 4.57138, 65.6126, -55.2592, 1.84 ) }
    dend_28 { pt3dadd( 5.22427, 66.5944, -55.8355, 0.22 ) }
    dend_28 { pt3dadd( 5.70408, 67.3437, -56.3523, 0.59 ) }
    dend_28 { pt3dadd( 5.78677, 67.4967, -56.4647, 0.81 ) }
    dend_28 { pt3dadd( 6.32939, 68.6051, -57.2572, 0.22 ) }
    dend_28 { pt3dadd( 6.71339, 69.4496, -57.8552, 1.84 ) }
    dend_28 { pt3dadd( 7.05849, 70.2073, -58.3872, 2.14 ) }
    dend_28 { pt3dadd( 7.49083, 71.0299, -58.9553, 1.62 ) }
    dend_28 { pt3dadd( 8.43011, 72.5624, -60.0068, 0.22 ) }
    dend_28 { pt3dadd( 9.0458, 73.4533, -60.5935, 0.22 ) }
    dend_28 { pt3dadd( 9.22973, 73.6861, -60.7304, 0.52 ) }
    dend_28 { pt3dadd( 9.61258, 74.0834, -60.9315, 0.52 ) }
    dend_28 { pt3dadd( 10.5264, 74.8634, -61.227, 0.22 ) }
    dend_28 { pt3dadd( 10.8408, 75.0696, -61.285, 0.81 ) }
    dend_28 { pt3dadd( 11.1183, 75.2036, -61.3151, 0.81 ) }
    dend_28 { pt3dadd( 11.6011, 75.4102, -61.3899, 0.44 ) }
    dend_28 { pt3dadd( 12.7305, 75.8997, -61.6242, 0.22 ) }
    dend_28 { pt3dadd( 12.8015, 75.9302, -61.6439, 0.22 ) }
    dend_28 { pt3dadd( 13.5514, 76.2456, -61.8904, 1.62 ) }
    dend_28 { pt3dadd( 14.1609, 76.4966, -62.1054, 2.28 ) }
    dend_28 { pt3dadd( 14.9667, 76.8224, -62.4113, 1.77 ) }
    dend_28 { pt3dadd( 15.916, 77.2051, -62.7957, 0.52 ) }
    dend_28 { pt3dadd( 16.7654, 77.5671, -63.1562, 0.22 ) }
    dend_28 { pt3dadd( 16.8339, 77.5973, -63.1836, 0.22 ) }
    dend_28 { pt3dadd( 17.2928, 77.7868, -63.3685, 0.22 ) }
    dend_28 { pt3dadd( 17.387, 77.8191, -63.4049, 0.22 ) }
    dend_28 { pt3dadd( 17.7241, 77.9018, -63.513, 0.22 ) }
    dend_28 { pt3dadd( 18.1319, 77.9496, -63.6417, 0.74 ) }
    dend_28 { pt3dadd( 18.8226, 78.041, -63.8586, 0.74 ) }
    dend_28 { pt3dadd( 20.1734, 78.2294, -64.2962, 0.22 ) }
    dend_28 { pt3dadd( 20.76, 78.3346, -64.4981, 0.74 ) }
    dend_28 { pt3dadd( 21.2547, 78.4423, -64.6878, 0.96 ) }
    dend_28 { pt3dadd( 22.7289, 78.788, -65.4119, 0.22 ) }
    dend_28 { pt3dadd( 23.5266, 78.9798, -65.8889, 0.22 ) }
    dend_28 { pt3dadd( 23.5837, 78.9941, -65.9266, 0.22 ) }
    dend_28 { pt3dadd( 24.5606, 79.2467, -66.6109, 1.47 ) }
    dend_28 { pt3dadd( 25.3047, 79.4188, -67.1366, 1.99 ) }
    dend_28 { pt3dadd( 26.5554, 79.6528, -67.9955, 1.33 ) }
    dend_28 { pt3dadd( 27.9813, 79.8471, -68.9147, 0.15 ) }
    dend_28 { pt3dadd( 28.4284, 79.8957, -69.1848, 0.29 ) }
    dend_28 { pt3dadd( 28.4976, 79.9034, -69.2241, 0.29 ) }
    dend_28 { pt3dadd( 29.3518, 79.9929, -69.6581, 0.29 ) }
    dend_28 { pt3dadd( 30.3276, 80.1405, -70.0697, 0.81 ) }
    dend_28 { pt3dadd( 30.7608, 80.2376, -70.2228, 0.81 ) }
    dend_28 { pt3dadd( 31.9357, 80.5871, -70.7095, 0.15 ) }
    dend_28 { pt3dadd( 31.9947, 80.6082, -70.7404, 0.15 ) }
    dend_28 { pt3dadd( 32.2966, 80.7273, -70.916, 0.15 ) }
    dend_28 { pt3dadd( 33.365, 81.1847, -71.5787, 1.33 ) }
    dend_28 { pt3dadd( 33.9958, 81.4622, -71.9784, 1.84 ) }
    dend_28 { pt3dadd( 34.8804, 81.8694, -72.5045, 1.62 ) }
    dend_28 { pt3dadd( 36.474, 82.6852, -73.3765, 0.22 ) }
    dend_28 { pt3dadd( 37.2009, 83.0998, -73.7494, 1.11 ) }
    dend_28 { pt3dadd( 37.6333, 83.3734, -73.9561, 1.33 ) }
    dend_28 { pt3dadd( 37.687, 83.4117, -73.9778, 1.33 ) }
    dend_28 { pt3dadd( 38.8968, 84.3376, -74.3379, 0.22 ) }
    dend_28 { pt3dadd( 39.4627, 84.8512, -74.5221, 0.81 ) }
    dend_28 { pt3dadd( 39.6672, 85.0832, -74.6124, 1.11 ) }
    dend_28 { pt3dadd( 39.6994, 85.1273, -74.6353, 1.11 ) }
    dend_28 { pt3dadd( 39.9927, 85.5798, -74.9281, 1.4 ) }
    dend_28 { pt3dadd( 40.1331, 85.8124, -75.0993, 1.4 ) }
    dend_28 { pt3dadd( 40.9948, 87.3654, -76.4186, 0.22 ) }
    dend_28 { pt3dadd( 41.0269, 87.4199, -76.4661, 0.22 ) }
    dend_28 { pt3dadd( 41.3669, 87.9675, -76.9202, 0.22 ) }
    dend_28 { pt3dadd( 41.4007, 88.0141, -76.9587, 0.22 ) }
    dend_28 { pt3dadd( 41.8797, 88.5623, -77.3506, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( 42.1881, 88.8663, -77.52, 1.4 ) }
    dend_28 { pt3dadd( 42.3383, 88.9962, -77.5624, 1.4 ) }
    dend_28 { pt3dadd( 42.612, 89.2173, -77.6409, 1.4 ) }
    dend_28 { pt3dadd( 43.4347, 89.9046, -77.9002, 0.52 ) }
    dend_28 { pt3dadd( 44.3858, 90.7172, -78.2091, 0.81 ) }
    dend_28 { pt3dadd( 44.4363, 90.7614, -78.2264, 0.81 ) }
    dend_28 { pt3dadd( 45.0689, 91.3269, -78.4435, 0.81 ) }
    dend_28 { pt3dadd( 45.6906, 91.8946, -78.645, 0.22 ) }
    dend_28 { pt3dadd( 46.2941, 92.4403, -78.8178, 0.22 ) }
    dend_28 { pt3dadd( 46.8678, 92.9653, -78.9502, 0.22 ) }
    dend_28 { pt3dadd( 46.9269, 93.0162, -78.9635, 0.22 ) }
    dend_28 { pt3dadd( 47.5218, 93.5107, -79.1179, 1.03 ) }
    dend_28 { pt3dadd( 47.9599, 93.8553, -79.2345, 1.55 ) }
    dend_28 { pt3dadd( 48.4219, 94.2018, -79.3498, 1.77 ) }
    dend_28 { pt3dadd( 48.557, 94.2888, -79.384, 1.77 ) }
    dend_28 { pt3dadd( 48.9706, 94.5672, -79.5022, 1.69 ) }
    dend_28 { pt3dadd( 50.2151, 95.4373, -79.8699, 0.29 ) }
    dend_28 { pt3dadd( 50.7688, 95.9046, -80.0597, 0.52 ) }
    dend_28 { pt3dadd( 50.8418, 95.9751, -80.0869, 0.52 ) }
    dend_28 { pt3dadd( 52.0253, 97.2499, -80.5453, 0.22 ) }
    dend_28 { pt3dadd( 52.7703, 98.1469, -80.8336, 1.92 ) }
    dend_28 { pt3dadd( 53.1134, 98.6438, -80.9735, 2.21 ) }
    dend_28 { pt3dadd( 54.2233, 100.611, -81.4367, 0.15 ) }
    dend_28 { pt3dadd( 54.4363, 101.072, -81.5415, 0.81 ) }
    dend_28 { pt3dadd( 54.5677, 101.432, -81.6154, 1.4 ) }
    dend_28 { pt3dadd( 54.8132, 102.406, -81.7889, 0.66 ) }
    dend_28 { pt3dadd( 55.0749, 103.689, -81.9881, 0.22 ) }
    dend_28 { pt3dadd( 55.1396, 104.031, -82.0345, 0.59 ) }
    dend_28 { pt3dadd( 55.4011, 105.38, -82.1773, 0.29 ) }
    dend_28 { pt3dadd( 55.6314, 106.27, -82.2652, 0.44 ) }
    dend_28 { pt3dadd( 55.9803, 107.391, -82.3669, 0.22 ) }
    dend_28 { pt3dadd( 56.2926, 108.193, -82.4286, 1.4 ) }
    dend_28 { pt3dadd( 56.5707, 108.799, -82.4882, 1.99 ) }
    dend_28 { pt3dadd( 56.8657, 109.383, -82.5792, 1.55 ) }
    dend_28 { pt3dadd( 57.6533, 110.785, -82.8798, 0.22 ) }
    dend_28 { pt3dadd( 57.6922, 110.848, -82.9034, 0.22 ) }
    dend_28 { pt3dadd( 58.0526, 111.449, -83.2, 0.22 ) }
    dend_28 { pt3dadd( 58.6298, 112.464, -83.8114, 1.25 ) }
    dend_28 { pt3dadd( 58.9507, 113.115, -84.2501, 1.55 ) }
    dend_28 { pt3dadd( 59.1399, 113.566, -84.5878, 1.11 ) }
    dend_28 { pt3dadd( 59.5606, 114.73, -85.4929, 0.22 ) }
    dend_28 { pt3dadd( 59.6544, 114.999, -85.7045, 0.66 ) }
    dend_28 { pt3dadd( 59.6736, 115.059, -85.7519, 0.66 ) }
    dend_28 { pt3dadd( 59.7429, 115.285, -85.9132, 0.66 ) }
    dend_28 { pt3dadd( 59.9969, 116.231, -86.5234, 0.22 ) }
    dend_28 { pt3dadd( 60.149, 116.891, -86.9034, 0.22 ) }
    dend_28 { pt3dadd( 60.3452, 117.781, -87.3199, 0.22 ) }
    dend_28 { pt3dadd( 60.4367, 118.212, -87.5267, 0.22 ) }
    dend_28 { pt3dadd( 60.5276, 118.665, -87.7445, 0.81 ) }
    dend_28 { pt3dadd( 60.5981, 119.038, -87.9257, 1.11 ) }
    dend_28 { pt3dadd( 60.6927, 119.557, -88.1691, 0.96 ) }
    dend_28 { pt3dadd( 60.8752, 120.542, -88.6373, 0.22 ) }
    dend_28 { pt3dadd( 61.1108, 121.596, -89.1158, 0.22 ) }
    dend_28 { pt3dadd( 61.1249, 121.656, -89.1419, 0.22 ) }
    dend_28 { pt3dadd( 61.403, 122.77, -89.5774, 1.69 ) }
    dend_28 { pt3dadd( 61.5598, 123.335, -89.7373, 1.99 ) }
    dend_28 { pt3dadd( 61.5781, 123.391, -89.7393, 1.99 ) }
    dend_28 { pt3dadd( 62.1186, 124.783, -89.4022, 0.22 ) }
    dend_28 { pt3dadd( 62.4508, 125.527, -89.08, 0.22 ) }
    dend_28 { pt3dadd( 62.7367, 126.042, -88.7706, 0.52 ) }
    dend_28 { pt3dadd( 63.3589, 126.968, -88.0322, 0.29 ) }
    dend_28 { pt3dadd( 64.3301, 128.318, -86.7836, 0.29 ) }
    dend_28 { pt3dadd( 64.7341, 128.852, -86.256, 1.25 ) }
    dend_28 { pt3dadd( 64.9345, 129.096, -85.9894, 1.47 ) }
    dend_28 { pt3dadd( 65.8674, 130.187, -84.8473, 0.22 ) }
    dend_28 { pt3dadd( 66.4473, 130.868, -84.1712, 0.52 ) }
    dend_28 { pt3dadd( 66.9559, 131.469, -83.6576, 0.22 ) }
    dend_28 { pt3dadd( 67.3458, 131.958, -83.3387, 0.22 ) }
    dend_28 { pt3dadd( 67.3783, 132.001, -83.3134, 0.22 ) }
    dend_28 { pt3dadd( 67.7904, 132.607, -83.0352, 0.96 ) }
    dend_28 { pt3dadd( 67.9715, 132.921, -82.9518, 1.25 ) }
    dend_28 { pt3dadd( 68.2111, 133.333, -82.8828, 1.25 ) }
    dend_28 { pt3dadd( 68.8174, 134.318, -82.7564, 0.22 ) }
    dend_28 { pt3dadd( 68.8535, 134.376, -82.7485, 0.22 ) }
    dend_28 { pt3dadd( 69.3171, 135.135, -82.6763, 0.22 ) }
    dend_28 { pt3dadd( 69.7275, 135.842, -82.6745, 1.03 ) }
    dend_28 { pt3dadd( 69.8772, 136.107, -82.6917, 1.33 ) }
    dend_28 { pt3dadd( 69.916, 136.176, -82.7003, 1.33 ) }
    dend_28 { pt3dadd( 70.1502, 136.549, -82.8107, 0.96 ) }
    dend_28 { pt3dadd( 70.8368, 137.611, -83.2014, 0.22 ) }
    dend_28 { pt3dadd( 71.364, 138.396, -83.569, 0.88 ) }
    dend_28 { pt3dadd( 71.4004, 138.447, -83.5966, 0.88 ) }
    dend_28 { pt3dadd( 71.6712, 138.825, -83.8062, 1.03 ) }
    dend_28 { pt3dadd( 72.5214, 139.997, -84.4808, 0.22 ) }
    dend_28 { pt3dadd( 73.127, 140.812, -84.9771, 0.22 ) }
    dend_28 { pt3dadd( 73.677, 141.506, -85.4284, 1.25 ) }
    dend_28 { pt3dadd( 74.0787, 141.997, -85.7436, 1.62 ) }
    dend_28 { pt3dadd( 74.1228, 142.051, -85.779, 1.62 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 88/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 17.2974, 53.7848, -28.734, 0.22 ) }
    dend_24 { pt3dadd( 17.7802, 55.3793, -28.7802, 0.22 ) }
    dend_24 { pt3dadd( 17.9547, 55.972, -28.7891, 0.22 ) }
    dend_24 { pt3dadd( 18.2243, 56.8818, -28.7975, 1.62 ) }
    dend_24 { pt3dadd( 18.4286, 57.5335, -28.8015, 1.84 ) }
    dend_24 { pt3dadd( 18.5947, 58.0503, -28.8049, 2.06 ) }
    dend_24 { pt3dadd( 19.0402, 59.4542, -28.8146, 0.22 ) }
    dend_24 { pt3dadd( 19.2243, 60.0869, -28.7976, 0.22 ) }
    dend_24 { pt3dadd( 19.2452, 60.1622, -28.7961, 0.22 ) }
    dend_24 { pt3dadd( 19.3188, 60.4356, -28.796, 0.22 ) }
    dend_24 { pt3dadd( 19.4296, 60.9293, -28.798, 0.22 ) }
    dend_24 { pt3dadd( 19.4975, 61.3586, -28.8025, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_24 { pt3dadd( 19.5481, 61.9251, -28.8358, 0.52 ) }
    dend_24 { pt3dadd( 19.5602, 62.0704, -28.8474, 0.52 ) }
    dend_24 { pt3dadd( 19.5719, 62.2157, -28.8603, 0.52 ) }
    dend_24 { pt3dadd( 19.6059, 62.6417, -28.8992, 0.52 ) }
    dend_24 { pt3dadd( 19.664, 63.2026, -28.9458, 0.52 ) }
    dend_24 { pt3dadd( 19.7485, 63.9197, -29.0015, 0.22 ) }
    dend_24 { pt3dadd( 19.8288, 64.5952, -29.0477, 0.22 ) }
    dend_24 { pt3dadd( 19.8361, 64.663, -29.0503, 0.22 ) }
    dend_24 { pt3dadd( 19.9013, 65.3069, -29.0604, 0.22 ) }
    dend_24 { pt3dadd( 19.9529, 66.0225, -29.0549, 0.81 ) }
    dend_24 { pt3dadd( 19.9658, 66.3799, -29.0507, 1.11 ) }
    dend_24 { pt3dadd( 19.9514, 66.9548, -29.0394, 1.11 ) }
    dend_24 { pt3dadd( 19.8734, 67.8988, -29.0316, 0.29 ) }
    dend_24 { pt3dadd( 19.8627, 67.9662, -29.0329, 0.29 ) }
    dend_24 { pt3dadd( 19.6802, 68.6873, -29.0653, 0.29 ) }
    dend_24 { pt3dadd( 19.3407, 69.734, -29.1333, 1.03 ) }
    dend_24 { pt3dadd( 19.1477, 70.2605, -29.1741, 1.55 ) }
    dend_24 { pt3dadd( 19.0156, 70.59, -29.2033, 1.77 ) }
    dend_24 { pt3dadd( 18.5876, 71.6029, -29.3044, 0.22 ) }
    dend_24 { pt3dadd( 18.2968, 72.3197, -29.3682, 0.22 ) }
    dend_24 { pt3dadd( 18.0681, 72.9292, -29.4123, 0.74 ) }
    dend_24 { pt3dadd( 17.9836, 73.2098, -29.4064, 0.74 ) }
    dend_24 { pt3dadd( 17.8744, 73.6939, -29.3664, 0.52 ) }
    dend_24 { pt3dadd( 17.816, 74.0375, -29.3219, 0.37 ) }
    dend_24 { pt3dadd( 17.7317, 74.672, -29.2225, 0.37 ) }
    dend_24 { pt3dadd( 17.6241, 75.4407, -29.1072, 0.29 ) }
    dend_24 { pt3dadd( 17.421, 76.743, -28.9846, 1.77 ) }
    dend_24 { pt3dadd( 17.2379, 77.7478, -28.9618, 2.28 ) }
    dend_24 { pt3dadd( 17.2241, 77.8147, -28.9638, 2.28 ) }
    dend_24 { pt3dadd( 17.0387, 78.6272, -29.0226, 2.28 ) }
    dend_24 { pt3dadd( 16.7724, 79.6216, -29.1381, 1.99 ) }
    dend_24 { pt3dadd( 16.4846, 80.5447, -29.3107, 1.55 ) }
    dend_24 { pt3dadd( 16.0203, 81.8549, -29.6425, 0.22 ) }
    dend_24 { pt3dadd( 15.8426, 82.3283, -29.7661, 0.29 ) }
    dend_24 { pt3dadd( 15.6646, 82.7631, -29.8732, 0.29 ) }
    dend_24 { pt3dadd( 15.349, 83.4435, -30.0204, 0.22 ) }
    dend_24 { pt3dadd( 14.9735, 84.0927, -30.1457, 0.22 ) }
    dend_24 { pt3dadd( 14.7383, 84.4378, -30.1931, 0.44 ) }
    dend_24 { pt3dadd( 14.5563, 84.6822, -30.2232, 0.44 ) }
    dend_24 { pt3dadd( 14.1235, 85.2819, -30.3057, 0.37 ) }
    dend_24 { pt3dadd( 13.5724, 86.0909, -30.415, 0.29 ) }
    dend_24 { pt3dadd( 13.1288, 86.7696, -30.4986, 0.22 ) }
    dend_24 { pt3dadd( 12.8058, 87.2841, -30.5431, 0.44 ) }
    dend_24 { pt3dadd( 12.6185, 87.5942, -30.5687, 0.44 ) }
    dend_24 { pt3dadd( 12.1774, 88.3487, -30.6253, 0.22 ) }
    dend_24 { pt3dadd( 11.687, 89.2229, -30.6417, 0.22 ) }
    dend_24 { pt3dadd( 11.446, 89.6757, -30.632, 0.22 ) }
    dend_24 { pt3dadd( 10.8097, 90.9006, -30.5655, 2.28 ) }
    dend_24 { pt3dadd( 10.5854, 91.3267, -30.5383, 3.02 ) }
    dend_24 { pt3dadd( 10.4205, 91.6421, -30.5136, 3.02 ) }
    dend_24 { pt3dadd( 9.49555, 93.5747, -30.267, 0.22 ) }
    dend_24 { pt3dadd( 9.41758, 93.7725, -30.2331, 0.29 ) }
    dend_24 { pt3dadd( 9.20598, 94.5044, -30.0881, 0.22 ) }
    dend_24 { pt3dadd( 9.07207, 95.1801, -29.9387, 0.66 ) }
    dend_24 { pt3dadd( 9.02162, 95.5924, -29.8466, 0.66 ) }
    dend_24 { pt3dadd( 8.94391, 96.8754, -29.5327, 0.22 ) }
    dend_24 { pt3dadd( 8.94989, 97.8435, -29.2857, 0.22 ) }
    dend_24 { pt3dadd( 8.94834, 98.6451, -29.0608, 0.29 ) }
    dend_24 { pt3dadd( 8.9505, 98.7107, -29.0416, 0.29 ) }
    dend_24 { pt3dadd( 8.98842, 99.8125, -28.7083, 0.29 ) }
    dend_24 { pt3dadd( 9.03122, 101.036, -28.3643, 0.96 ) }
    dend_24 { pt3dadd( 9.04503, 101.52, -28.2475, 1.33 ) }
    dend_24 { pt3dadd( 9.07311, 102.496, -28.0262, 0.22 ) }
    dend_24 { pt3dadd( 9.08905, 103.484, -27.8048, 0.22 ) }
    dend_24 { pt3dadd( 9.10134, 103.902, -27.7171, 0.22 ) }
    dend_24 { pt3dadd( 9.1305, 104.496, -27.6053, 0.81 ) }
    dend_24 { pt3dadd( 9.16758, 105.134, -27.5305, 1.11 ) }
    dend_24 { pt3dadd( 9.19983, 106.036, -27.4728, 0.22 ) }
    dend_24 { pt3dadd( 9.20714, 106.669, -27.4722, 0.22 ) }
    dend_24 { pt3dadd( 9.18568, 107.096, -27.4897, 0.44 ) }
    dend_24 { pt3dadd( 9.17059, 107.331, -27.5083, 0.44 ) }
    dend_24 { pt3dadd( 9.0729, 108.21, -27.629, 0.22 ) }
    dend_24 { pt3dadd( 8.99753, 108.792, -27.7565, 0.22 ) }
    dend_24 { pt3dadd( 8.99001, 108.848, -27.7718, 0.22 ) }
    dend_24 { pt3dadd( 8.87938, 109.658, -28.0598, 0.66 ) }
    dend_24 { pt3dadd( 8.81849, 110.061, -28.2119, 0.66 ) }
    dend_24 { pt3dadd( 8.70586, 110.764, -28.498, 0.22 ) }
    dend_24 { pt3dadd( 8.53702, 111.697, -28.8875, 1.11 ) }
    dend_24 { pt3dadd( 8.40844, 112.352, -29.1701, 1.25 ) }
    dend_24 { pt3dadd( 8.07546, 113.962, -29.9403, 0.22 ) }
    dend_24 { pt3dadd( 7.83753, 115.109, -30.5463, 0.22 ) }
    dend_24 { pt3dadd( 7.66689, 115.928, -31.0019, 1.03 ) }
    dend_24 { pt3dadd( 7.54428, 116.484, -31.3118, 1.55 ) }
    dend_24 { pt3dadd( 7.3777, 117.173, -31.6822, 1.69 ) }
    dend_24 { pt3dadd( 7.12587, 118.244, -32.243, 0.81 ) }
    dend_24 { pt3dadd( 6.91362, 119.273, -32.7212, 0.22 ) }
    dend_24 { pt3dadd( 6.90207, 119.343, -32.7527, 0.22 ) }
    dend_24 { pt3dadd( 6.81028, 120.29, -33.1349, 0.22 ) }
    dend_24 { pt3dadd( 6.75349, 121.298, -33.5396, 0.88 ) }
    dend_24 { pt3dadd( 6.74884, 122.094, -33.8536, 0.22 ) }
    dend_24 { pt3dadd( 6.76474, 122.766, -34.1084, 0.59 ) }
    dend_24 { pt3dadd( 6.82033, 124.042, -34.6079, 0.22 ) }
    dend_24 { pt3dadd( 6.90607, 125.376, -35.1598, 1.77 ) }
    dend_24 { pt3dadd( 6.97423, 126.309, -35.5826, 1.99 ) }
    dend_24 { pt3dadd( 7.0589, 127.618, -36.2148, 0.22 ) }
    dend_24 { pt3dadd( 7.06763, 127.941, -36.3716, 0.29 ) }
    dend_24 { pt3dadd( 7.06216, 128.604, -36.6967, 0.22 ) }
    dend_24 { pt3dadd( 7.02245, 129.189, -36.9719, 0.37 ) }
    dend_24 { pt3dadd( 6.93009, 129.732, -37.2166, 0.22 ) }
    dend_24 { pt3dadd( 6.91714, 129.786, -37.2382, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_24 { pt3dadd( 6.79789, 130.158, -37.3941, 0.37 ) }
    dend_24 { pt3dadd( 6.68115, 130.465, -37.5221, 0.37 ) }
    dend_24 { pt3dadd( 6.4705, 130.991, -37.7238, 0.22 ) }
    dend_24 { pt3dadd( 6.15616, 131.771, -38.0013, 1.11 ) }
    dend_24 { pt3dadd( 6.01268, 132.163, -38.1273, 1.47 ) }
    dend_24 { pt3dadd( 5.69801, 133.042, -38.3706, 0.22 ) }
    dend_24 { pt3dadd( 5.33933, 134.074, -38.6475, 0.22 ) }
    dend_24 { pt3dadd( 5.10107, 134.723, -38.8492, 0.22 ) }
    dend_24 { pt3dadd( 5.08247, 134.775, -38.8688, 0.22 ) }
    dend_24 { pt3dadd( 4.86735, 135.34, -39.102, 0.22 ) }
    dend_24 { pt3dadd( 4.42606, 136.479, -39.6007, 1.92 ) }
    dend_24 { pt3dadd( 4.18373, 137.102, -39.8891, 1.77 ) }
    dend_24 { pt3dadd( 3.84841, 138.036, -40.3817, 1.47 ) }
    dend_24 { pt3dadd( 3.40993, 139.173, -41.0436, 0.22 ) }
    dend_24 { pt3dadd( 3.04844, 140.072, -41.6046, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 15/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 17.2974, 53.7848, -28.734, 0.15 ) }
    dend_21 { pt3dadd( 19.0414, 54.676, -28.6693, 0.15 ) }
    dend_21 { pt3dadd( 20.0154, 55.2207, -28.6405, 0.15 ) }
    dend_21 { pt3dadd( 20.6598, 55.6069, -28.6252, 0.37 ) }
    dend_21 { pt3dadd( 21.4527, 56.0865, -28.5995, 0.44 ) }
    dend_21 { pt3dadd( 22.5003, 56.6795, -28.5615, 0.81 ) }
    dend_21 { pt3dadd( 22.8804, 56.876, -28.5475, 1.03 ) }
    dend_21 { pt3dadd( 23.3392, 57.1281, -28.5281, 1.03 ) }
    dend_21 { pt3dadd( 23.9313, 57.4553, -28.501, 0.81 ) }
    dend_21 { pt3dadd( 24.7734, 57.8668, -28.4392, 0.22 ) }
    dend_21 { pt3dadd( 25.3426, 58.1249, -28.3853, 0.22 ) }
    dend_21 { pt3dadd( 26.2172, 58.5258, -28.3003, 0.29 ) }
    dend_21 { pt3dadd( 27.0611, 58.9074, -28.224, 0.29 ) }
    dend_21 { pt3dadd( 28.0722, 59.3808, -28.0979, 1.4 ) }
    dend_21 { pt3dadd( 28.6268, 59.6604, -28.0157, 1.99 ) }
    dend_21 { pt3dadd( 29.4212, 60.0983, -27.8857, 2.28 ) }
    dend_21 { pt3dadd( 31.3604, 61.2788, -27.5656, 0.29 ) }
    dend_21 { pt3dadd( 32.0973, 61.7493, -27.4466, 0.29 ) }
    dend_21 { pt3dadd( 32.8027, 62.2009, -27.3536, 0.81 ) }
    dend_21 { pt3dadd( 33.2685, 62.5024, -27.3326, 0.81 ) }
    dend_21 { pt3dadd( 33.6182, 62.7324, -27.3386, 0.81 ) }
    dend_21 { pt3dadd( 34.5049, 63.3024, -27.5111, 0.29 ) }
    dend_21 { pt3dadd( 35.1238, 63.7191, -27.7451, 0.29 ) }
    dend_21 { pt3dadd( 35.7544, 64.1704, -28.0504, 2.14 ) }
    dend_21 { pt3dadd( 36.6564, 64.8345, -28.5533, 2.95 ) }
    dend_21 { pt3dadd( 37.0267, 65.1213, -28.7805, 2.95 ) }
    dend_21 { pt3dadd( 38.6853, 66.5459, -29.8704, 0.22 ) }
    dend_21 { pt3dadd( 39.2139, 67.0633, -30.2411, 0.22 ) }
    dend_21 { pt3dadd( 39.5771, 67.4682, -30.5037, 0.81 ) }
    dend_21 { pt3dadd( 39.7396, 67.6755, -30.6155, 1.11 ) }
    dend_21 { pt3dadd( 40.1415, 68.2585, -30.8551, 0.66 ) }
    dend_21 { pt3dadd( 40.6326, 69.0419, -31.1077, 0.22 ) }
    dend_21 { pt3dadd( 40.9209, 69.5409, -31.205, 0.22 ) }
    dend_21 { pt3dadd( 41.1861, 69.9392, -31.2737, 0.37 ) }
    dend_21 { pt3dadd( 41.5512, 70.425, -31.3488, 0.37 ) }
    dend_21 { pt3dadd( 42.2906, 71.252, -31.4815, 0.88 ) }
    dend_21 { pt3dadd( 42.4522, 71.411, -31.5054, 1.33 ) }
    dend_21 { pt3dadd( 42.4952, 71.4515, -31.5117, 1.33 ) }
    dend_21 { pt3dadd( 42.8808, 71.7982, -31.5617, 1.18 ) }
    dend_21 { pt3dadd( 43.7791, 72.6321, -31.7033, 0.29 ) }
    dend_21 { pt3dadd( 44.4725, 73.3396, -31.8619, 1.03 ) }
    dend_21 { pt3dadd( 44.8709, 73.8005, -31.9838, 1.55 ) }
    dend_21 { pt3dadd( 45.2536, 74.3086, -32.1453, 2.28 ) }
    dend_21 { pt3dadd( 45.7118, 75.0138, -32.39, 1.4 ) }
    dend_21 { pt3dadd( 46.2706, 76.0822, -32.78, 0.22 ) }
    dend_21 { pt3dadd( 46.6909, 77.1435, -33.273, 0.22 ) }
    dend_21 { pt3dadd( 46.9122, 77.8017, -33.6457, 0.81 ) }
    dend_21 { pt3dadd( 47.1166, 78.5203, -34.0978, 1.55 ) }
    dend_21 { pt3dadd( 47.1945, 78.8668, -34.327, 1.92 ) }
    dend_21 { pt3dadd( 47.2792, 79.5219, -34.7714, 2.14 ) }
    dend_21 { pt3dadd( 47.4046, 81.1824, -35.8986, 1.11 ) }
    dend_21 { pt3dadd( 47.445, 82.2199, -36.566, 0.29 ) }
    dend_21 { pt3dadd( 47.4723, 83.1042, -37.1364, 0.22 ) }
    dend_21 { pt3dadd( 47.4823, 83.5887, -37.4481, 0.22 ) }
    dend_21 { pt3dadd( 47.5212, 84.7931, -38.2146, 1.55 ) }
    dend_21 { pt3dadd( 47.5429, 85.0449, -38.3624, 2.43 ) }
    dend_21 { pt3dadd( 47.7022, 86.0129, -38.8596, 2.87 ) }
    dend_21 { pt3dadd( 48.1435, 87.7502, -39.7534, 0.22 ) }
    dend_21 { pt3dadd( 48.1623, 87.7994, -39.7801, 0.22 ) }
    dend_21 { pt3dadd( 48.6216, 88.6861, -40.2816, 0.22 ) }
    dend_21 { pt3dadd( 49.267, 89.6546, -40.939, 0.22 ) }
    dend_21 { pt3dadd( 49.7626, 90.2889, -41.4544, 0.22 ) }
    dend_21 { pt3dadd( 50.2169, 90.7843, -41.9015, 1.77 ) }
    dend_21 { pt3dadd( 50.5069, 91.0766, -42.1623, 2.28 ) }
    dend_21 { pt3dadd( 51.2192, 91.7677, -42.7777, 2.28 ) }
    dend_21 { pt3dadd( 52.391, 92.8776, -43.7609, 1.69 ) }
    dend_21 { pt3dadd( 53.3115, 93.747, -44.511, 0.22 ) }
    dend_21 { pt3dadd( 54.0377, 94.4426, -45.0548, 0.22 ) }
    dend_21 { pt3dadd( 54.6498, 95.0246, -45.4466, 1.33 ) }
    dend_21 { pt3dadd( 55.1323, 95.4977, -45.7696, 1.62 ) }
    dend_21 { pt3dadd( 55.5763, 95.9592, -46.0801, 1.62 ) }
    dend_21 { pt3dadd( 55.872, 96.2846, -46.2879, 0.81 ) }
    dend_21 { pt3dadd( 56.6716, 97.2429, -46.9614, 0.29 ) }
    dend_21 { pt3dadd( 57.1255, 97.847, -47.4075, 0.22 ) }
    dend_21 { pt3dadd( 58.364, 99.6765, -48.7638, 1.99 ) }
    dend_21 { pt3dadd( 58.7407, 100.285, -49.197, 2.5 ) }
    dend_21 { pt3dadd( 58.9394, 100.628, -49.4342, 2.65 ) }
    dend_21 { pt3dadd( 59.7811, 102.197, -50.4402, 0.22 ) }
    dend_21 { pt3dadd( 60.1849, 102.958, -50.88, 0.22 ) }
    dend_21 { pt3dadd( 60.5892, 103.732, -51.2822, 0.88 ) }
    dend_21 { pt3dadd( 60.8987, 104.322, -51.5048, 1.47 ) }
    dend_21 { pt3dadd( 61.2128, 104.899, -51.7013, 1.69 ) }
    dend_21 { pt3dadd( 61.5128, 105.432, -51.8768, 0.96 ) }
    dend_21 { pt3dadd( 62.1158, 106.492, -52.1855, 0.22 ) }
    dend_21 { pt3dadd( 62.1502, 106.549, -52.2011, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_21 { pt3dadd( 62.3886, 106.934, -52.2929, 0.22 ) }
    dend_21 { pt3dadd( 62.7694, 107.536, -52.4113, 0.88 ) }
    dend_21 { pt3dadd( 62.9991, 107.893, -52.4617, 0.88 ) }
    dend_21 { pt3dadd( 63.2762, 108.326, -52.5109, 0.44 ) }
    dend_21 { pt3dadd( 63.7797, 109.124, -52.567, 0.22 ) }
    dend_21 { pt3dadd( 63.989, 109.413, -52.5856, 0.22 ) }
    dend_21 { pt3dadd( 64.5605, 110.139, -52.6283, 1.11 ) }
    dend_21 { pt3dadd( 64.7623, 110.378, -52.6398, 1.47 ) }
    dend_21 { pt3dadd( 64.8532, 110.481, -52.6444, 1.47 ) }
    dend_21 { pt3dadd( 65.1633, 110.835, -52.6577, 1.47 ) }
    dend_21 { pt3dadd( 66.3142, 112.19, -52.8446, 0.22 ) }
    dend_21 { pt3dadd( 66.7827, 112.758, -52.9591, 0.22 ) }
    dend_21 { pt3dadd( 67.4032, 113.555, -53.1888, 1.25 ) }
    dend_21 { pt3dadd( 67.6726, 113.917, -53.3166, 1.92 ) }
    dend_21 { pt3dadd( 68.0126, 114.419, -53.5186, 1.92 ) }
    dend_21 { pt3dadd( 69.0495, 116.117, -54.3113, 0.22 ) }
    dend_21 { pt3dadd( 69.3087, 116.607, -54.5707, 0.22 ) }
    dend_21 { pt3dadd( 69.6547, 117.311, -54.9423, 0.22 ) }
    dend_21 { pt3dadd( 69.6995, 117.408, -54.9911, 0.22 ) }
    dend_21 { pt3dadd( 69.9318, 117.919, -55.2959, 0.22 ) }
    dend_21 { pt3dadd( 69.9845, 118.031, -55.3753, 0.22 ) }
    dend_21 { pt3dadd( 70.3805, 118.938, -56.0326, 0.22 ) }
    dend_21 { pt3dadd( 70.7766, 119.84, -56.717, 1.69 ) }
    dend_21 { pt3dadd( 70.9763, 120.279, -57.0684, 2.21 ) }
    dend_21 { pt3dadd( 71.7385, 121.925, -58.4281, 1.18 ) }
    dend_21 { pt3dadd( 72.0961, 122.68, -59.083, 0.29 ) }
    dend_21 { pt3dadd( 72.2798, 123.072, -59.4266, 0.29 ) }
    dend_21 { pt3dadd( 72.5824, 123.74, -60.0221, 0.22 ) }
    dend_21 { pt3dadd( 72.8922, 124.434, -60.6014, 1.18 ) }
    dend_21 { pt3dadd( 73.1333, 125.003, -61.017, 1.33 ) }
    dend_21 { pt3dadd( 73.1815, 125.124, -61.0857, 1.33 ) }
    dend_21 { pt3dadd( 73.7874, 126.6, -61.8635, 0.22 ) }
    dend_21 { pt3dadd( 73.9822, 127.027, -62.0867, 0.88 ) }
    dend_21 { pt3dadd( 74.217, 127.506, -62.3266, 1.33 ) }
    dend_21 { pt3dadd( 74.7695, 128.577, -62.8513, 0.22 ) }
    dend_21 { pt3dadd( 74.9574, 128.906, -63.0404, 0.29 ) }
    dend_21 { pt3dadd( 75.2642, 129.413, -63.3394, 0.22 ) }
    dend_21 { pt3dadd( 75.9616, 130.506, -63.9953, 1.62 ) }
    dend_21 { pt3dadd( 76.1781, 130.82, -64.1817, 1.99 ) }
    dend_21 { pt3dadd( 76.7122, 131.538, -64.6067, 1.55 ) }
    dend_21 { pt3dadd( 77.9971, 133.18, -65.5382, 0.22 ) }
    dend_21 { pt3dadd( 78.5267, 133.859, -65.9113, 0.22 ) }
    dend_21 { pt3dadd( 78.5713, 133.915, -65.9427, 0.22 ) }
    dend_21 { pt3dadd( 79.1416, 134.663, -66.3351, 0.22 ) }
    dend_21 { pt3dadd( 79.1856, 134.721, -66.3646, 0.22 ) }
    dend_21 { pt3dadd( 79.884, 135.693, -66.7871, 1.03 ) }
    dend_21 { pt3dadd( 80.28, 136.275, -67.0025, 1.11 ) }
    dend_21 { pt3dadd( 81.1405, 137.564, -67.4821, 0.22 ) }
    dend_21 { pt3dadd( 81.5702, 138.167, -67.7089, 0.22 ) }
    dend_21 { pt3dadd( 81.6094, 138.219, -67.7293, 0.22 ) }
    dend_21 { pt3dadd( 82.4191, 139.212, -68.1198, 1.55 ) }
    dend_21 { pt3dadd( 82.7932, 139.604, -68.2929, 2.36 ) }
    dend_21 { pt3dadd( 83.1487, 139.947, -68.457, 2.21 ) }
    dend_21 { pt3dadd( 84.7633, 141.447, -69.1725, 0.22 ) }
    dend_21 { pt3dadd( 84.804, 141.486, -69.1927, 0.22 ) }
    dend_21 { pt3dadd( 85.6296, 142.301, -69.6628, 0.59 ) }
    dend_21 { pt3dadd( 86.5373, 143.264, -70.2548, 0.22 ) }
    dend_21 { pt3dadd( 86.8873, 143.697, -70.5113, 0.44 ) }
    dend_21 { pt3dadd( 87.0627, 143.971, -70.6725, 0.59 ) }
    dend_21 { pt3dadd( 87.5411, 144.977, -71.2353, 0.22 ) }
    dend_21 { pt3dadd( 87.8585, 145.713, -71.6245, 1.18 ) }
    dend_21 { pt3dadd( 88.0695, 146.266, -71.8971, 1.55 ) }
    dend_21 { pt3dadd( 88.3007, 146.889, -72.1817, 1.62 ) }
    dend_21 { pt3dadd( 89.0504, 148.633, -72.9838, 0.22 ) }
    dend_21 { pt3dadd( 89.086, 148.697, -73.013, 0.22 ) }
    dend_21 { pt3dadd( 89.4546, 149.2, -73.2211, 0.22 ) }
    dend_21 { pt3dadd( 89.7252, 149.505, -73.3392, 0.44 ) }
    dend_21 { pt3dadd( 89.8726, 149.645, -73.3902, 0.44 ) }
    dend_21 { pt3dadd( 90.0786, 149.812, -73.4408, 0.44 ) }
    dend_21 { pt3dadd( 91.1178, 150.546, -73.5979, 0.22 ) }
    dend_21 { pt3dadd( 91.8098, 151.07, -73.7228, 1.03 ) }
    dend_21 { pt3dadd( 92.1652, 151.35, -73.7977, 1.55 ) }
    dend_21 { pt3dadd( 92.3673, 151.512, -73.8411, 1.92 ) }
    dend_21 { pt3dadd( 92.842, 151.908, -73.9436, 1.92 ) }
    dend_21 { pt3dadd( 93.4809, 152.456, -74.0797, 1.33 ) }
    dend_21 { pt3dadd( 94.8265, 153.648, -74.3651, 0.22 ) }
    dend_21 { pt3dadd( 95.8959, 154.587, -74.6215, 0.22 ) }
    dend_21 { pt3dadd( 96.612, 155.223, -74.7962, 0.74 ) }
    dend_21 { pt3dadd( 96.7196, 155.322, -74.8213, 0.74 ) }
    dend_21 { pt3dadd( 97.015, 155.603, -74.8849, 0.74 ) }
    dend_21 { pt3dadd( 97.0642, 155.65, -74.8941, 0.74 ) }
    dend_21 { pt3dadd( 98.1087, 156.695, -75.0739, 0.29 ) }
    dend_21 { pt3dadd( 99.0374, 157.708, -75.2147, 0.22 ) }
    dend_21 { pt3dadd( 99.8159, 158.598, -75.3232, 1.25 ) }
    dend_21 { pt3dadd( 100.146, 158.992, -75.3632, 1.92 ) }
    dend_21 { pt3dadd( 100.447, 159.37, -75.3888, 2.36 ) }
    dend_21 { pt3dadd( 100.724, 159.732, -75.3997, 2.43 ) }
    dend_21 { pt3dadd( 101.972, 161.452, -75.3774, 0.22 ) }
    dend_21 { pt3dadd( 102.43, 162.081, -75.3627, 0.88 ) }
    dend_21 { pt3dadd( 102.633, 162.355, -75.3535, 0.88 ) }
    dend_21 { pt3dadd( 103.287, 163.225, -75.316, 0.22 ) }
    dend_21 { pt3dadd( 103.665, 163.71, -75.2887, 0.88 ) }
    dend_21 { pt3dadd( 103.711, 163.762, -75.2842, 0.88 ) }
    dend_21 { pt3dadd( 103.986, 164.012, -75.2486, 1.25 ) }
    dend_21 { pt3dadd( 104.112, 164.113, -75.2341, 1.25 ) }
    dend_21 { pt3dadd( 104.195, 164.178, -75.227, 1.25 ) }
    dend_21 { pt3dadd( 104.251, 164.219, -75.2235, 1.25 ) }
    dend_21 { pt3dadd( 105.531, 165.027, -75.2439, 0.22 ) }
    dend_21 { pt3dadd( 106.186, 165.372, -75.2318, 0.22 ) }
    dend_21 { pt3dadd( 106.249, 165.402, -75.23, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_21 { pt3dadd( 106.823, 165.654, -75.2082, 0.59 ) }
    dend_21 { pt3dadd( 107.19, 165.807, -75.1944, 0.59 ) }
    dend_21 { pt3dadd( 108.633, 166.363, -75.1406, 0.22 ) }
    dend_21 { pt3dadd( 109.964, 166.775, -75.0928, 1.25 ) }
    dend_21 { pt3dadd( 110.032, 166.792, -75.09, 1.25 ) }
    dend_21 { pt3dadd( 110.56, 166.906, -75.0629, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 6/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 14.7851, 28.7118, -21.8804, 0.29 ) }
    dend_15 { pt3dadd( 16.2315, 29.8974, -21.2208, 0.29 ) }
    dend_15 { pt3dadd( 16.8319, 30.3351, -20.9892, 0.37 ) }
    dend_15 { pt3dadd( 17.755, 30.8822, -20.6385, 0.22 ) }
    dend_15 { pt3dadd( 18.3191, 31.1807, -20.422, 0.44 ) }
    dend_15 { pt3dadd( 18.3817, 31.208, -20.408, 0.44 ) }
    dend_15 { pt3dadd( 19.7099, 31.7163, -20.2489, 1.69 ) }
    dend_15 { pt3dadd( 19.7779, 31.7315, -20.2536, 1.69 ) }
    dend_15 { pt3dadd( 20.8699, 31.923, -20.4611, 1.92 ) }
    dend_15 { pt3dadd( 20.9371, 31.9322, -20.4783, 1.92 ) }
    dend_15 { pt3dadd( 22.96, 32.2737, -21.1017, 0.29 ) }
    dend_15 { pt3dadd( 23.4153, 32.3624, -21.2643, 0.74 ) }
    dend_15 { pt3dadd( 23.4871, 32.3783, -21.2955, 0.74 ) }
    dend_15 { pt3dadd( 24.631, 32.7009, -21.841, 0.22 ) }
    dend_15 { pt3dadd( 24.6898, 32.7234, -21.8714, 0.22 ) }
    dend_15 { pt3dadd( 25.172, 32.9468, -22.0845, 0.59 ) }
    dend_15 { pt3dadd( 25.2302, 32.9793, -22.1046, 0.59 ) }
    dend_15 { pt3dadd( 25.4088, 33.086, -22.1719, 0.59 ) }
    dend_15 { pt3dadd( 26.3124, 33.6596, -22.5148, 0.22 ) }
    dend_15 { pt3dadd( 26.8485, 34.0158, -22.7224, 0.88 ) }
    dend_15 { pt3dadd( 27.7488, 34.6135, -23.0697, 0.22 ) }
    dend_15 { pt3dadd( 27.8433, 34.6764, -23.1058, 0.22 ) }
    dend_15 { pt3dadd( 28.4008, 35.0523, -23.3076, 0.66 ) }
    dend_15 { pt3dadd( 28.7719, 35.3057, -23.4329, 0.66 ) }
    dend_15 { pt3dadd( 29.7983, 35.9713, -23.7002, 0.22 ) }
    dend_15 { pt3dadd( 30.0604, 36.1252, -23.7565, 0.44 ) }
    dend_15 { pt3dadd( 30.2903, 36.2515, -23.7923, 0.44 ) }
    dend_15 { pt3dadd( 30.6408, 36.4338, -23.8318, 0.44 ) }
    dend_15 { pt3dadd( 30.729, 36.4771, -23.8396, 0.44 ) }
    dend_15 { pt3dadd( 31.7162, 36.9366, -23.9079, 0.37 ) }
    dend_15 { pt3dadd( 32.7066, 37.3679, -23.9357, 1.99 ) }
    dend_15 { pt3dadd( 33.1916, 37.5685, -23.9504, 2.73 ) }
    dend_15 { pt3dadd( 33.8386, 37.8255, -23.9717, 2.73 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.7851, 28.7118, -21.8804, 0.22 ) }
    dend_12 { pt3dadd( 14.9684, 30.8135, -21.927, 0.22 ) }
    dend_12 { pt3dadd( 15.1231, 31.9287, -22.0071, 1.33 ) }
    dend_12 { pt3dadd( 15.2281, 32.5614, -22.0652, 1.62 ) }
    dend_12 { pt3dadd( 15.4797, 33.6692, -22.2647, 1.99 ) }
    dend_12 { pt3dadd( 15.9588, 35.5208, -22.7226, 0.22 ) }
    dend_12 { pt3dadd( 16.2564, 36.5088, -23.0004, 0.22 ) }
    dend_12 { pt3dadd( 16.6497, 37.5022, -23.3899, 0.96 ) }
    dend_12 { pt3dadd( 16.8547, 37.9453, -23.5743, 1.47 ) }
    dend_12 { pt3dadd( 17.8058, 39.7259, -24.3641, 0.22 ) }
    dend_12 { pt3dadd( 18.3615, 40.64, -24.7985, 1.84 ) }
    dend_12 { pt3dadd( 18.8598, 41.3635, -25.1408, 1.99 ) }
    dend_12 { pt3dadd( 19.8216, 42.6891, -25.7469, 0.29 ) }
    dend_12 { pt3dadd( 20.3308, 43.3548, -26.0068, 0.52 ) }
    dend_12 { pt3dadd( 20.7864, 43.9455, -26.1845, 0.29 ) }
    dend_12 { pt3dadd( 20.8252, 44.0019, -26.1906, 0.29 ) }
    dend_12 { pt3dadd( 21.3639, 44.893, -26.217, 0.29 ) }
    dend_12 { pt3dadd( 21.4044, 44.9811, -26.2161, 0.29 ) }
    dend_12 { pt3dadd( 21.6973, 45.8392, -26.1535, 0.22 ) }
    dend_12 { pt3dadd( 21.8644, 46.423, -26.1098, 0.22 ) }
    dend_12 { pt3dadd( 22.2587, 47.9594, -25.9987, 2.36 ) }
    dend_12 { pt3dadd( 22.4626, 48.6563, -25.9453, 2.73 ) }
    dend_12 { pt3dadd( 22.731, 49.4707, -25.876, 2.58 ) }
    dend_12 { pt3dadd( 23.1148, 50.4585, -25.7842, 1.25 ) }
    dend_12 { pt3dadd( 23.6588, 51.65, -25.6607, 0.22 ) }
    dend_12 { pt3dadd( 23.7849, 51.8773, -25.6356, 0.22 ) }
    dend_12 { pt3dadd( 24.3698, 52.6982, -25.5366, 0.22 ) }
    dend_12 { pt3dadd( 24.8481, 53.2789, -25.4594, 0.66 ) }
    dend_12 { pt3dadd( 25.136, 53.5884, -25.4187, 0.96 ) }
    dend_12 { pt3dadd( 25.1835, 53.6382, -25.4122, 0.96 ) }
    dend_12 { pt3dadd( 25.5847, 54.1067, -25.3413, 0.66 ) }
    dend_12 { pt3dadd( 26.2044, 54.9275, -25.2198, 0.22 ) }
    dend_12 { pt3dadd( 26.257, 55.0091, -25.2166, 0.22 ) }
    dend_12 { pt3dadd( 26.6976, 55.6509, -25.259, 0.22 ) }
    dend_12 { pt3dadd( 27.183, 56.3321, -25.3518, 1.25 ) }
    dend_12 { pt3dadd( 27.51, 56.7624, -25.4343, 1.62 ) }
    dend_12 { pt3dadd( 27.8189, 57.1616, -25.5378, 1.84 ) }
    dend_12 { pt3dadd( 28.6248, 58.2009, -25.867, 0.81 ) }
    dend_12 { pt3dadd( 29.3433, 59.2038, -26.195, 0.22 ) }
    dend_12 { pt3dadd( 29.4561, 59.3749, -26.2541, 0.22 ) }
    dend_12 { pt3dadd( 29.8454, 60.0507, -26.4834, 0.22 ) }
    dend_12 { pt3dadd( 30.17, 60.8081, -26.6991, 0.15 ) }
    dend_12 { pt3dadd( 30.2483, 61.0749, -26.7546, 0.15 ) }
    dend_12 { pt3dadd( 30.3732, 61.7942, -26.8672, 0.15 ) }
    dend_12 { pt3dadd( 30.3985, 62.0721, -26.9144, 0.15 ) }
    dend_12 { pt3dadd( 30.4457, 62.7018, -27.0418, 0.15 ) }
    dend_12 { pt3dadd( 30.5253, 64.007, -27.3346, 1.55 ) }
    dend_12 { pt3dadd( 30.5627, 64.5693, -27.4652, 1.92 ) }
    dend_12 { pt3dadd( 30.701, 66.1506, -27.8588, 0.22 ) }
    dend_12 { pt3dadd( 30.709, 66.2161, -27.8766, 0.22 ) }
    dend_12 { pt3dadd( 30.8183, 67.05, -28.1196, 0.22 ) }
    dend_12 { pt3dadd( 30.9078, 67.6614, -28.3177, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 91/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 11.5883, 56.2426, -8.33618, 0.29 ) }
    dend_8 { pt3dadd( 10.0201, 58.0902, -8.54998, 0.29 ) }
    dend_8 { pt3dadd( 9.16692, 59.1215, -8.62845, 0.29 ) }
    dend_8 { pt3dadd( 8.4151, 60.0874, -8.6754, 0.29 ) }
    dend_8 { pt3dadd( 7.83465, 60.9279, -8.69547, 0.52 ) }
    dend_8 { pt3dadd( 7.20378, 61.913, -8.70855, 0.22 ) }
    dend_8 { pt3dadd( 6.77213, 62.6647, -8.71223, 0.22 ) }
    dend_8 { pt3dadd( 6.74526, 62.7273, -8.70447, 0.22 ) }
    dend_8 { pt3dadd( 6.57341, 63.345, -8.63608, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_8 { pt3dadd( 6.48479, 64.2943, -8.62921, 0.22 ) }
    dend_8 { pt3dadd( 6.4856, 64.3623, -8.63514, 0.22 ) }
    dend_8 { pt3dadd( 6.5389, 65.1454, -8.75566, 1.77 ) }
    dend_8 { pt3dadd( 6.5755, 65.616, -8.84355, 2.06 ) }
    dend_8 { pt3dadd( 6.64955, 66.6388, -9.05536, 1.18 ) }
    dend_8 { pt3dadd( 6.74295, 68.0264, -9.36862, 0.22 ) }
    dend_8 { pt3dadd( 6.77759, 68.7923, -9.56523, 0.22 ) }
    dend_8 { pt3dadd( 6.79107, 69.4959, -9.75083, 0.22 ) }
    dend_8 { pt3dadd( 6.78642, 70.6437, -10.0695, 1.55 ) }
    dend_8 { pt3dadd( 6.76999, 71.1422, -10.2081, 1.84 ) }
    dend_8 { pt3dadd( 6.76439, 71.1983, -10.2241, 1.84 ) }
    dend_8 { pt3dadd( 6.56825, 72.311, -10.5106, 0.37 ) }
    dend_8 { pt3dadd( 6.39981, 72.9609, -10.6949, 0.22 ) }
    dend_8 { pt3dadd( 6.37185, 73.0309, -10.7163, 0.22 ) }
    dend_8 { pt3dadd( 6.16756, 73.4259, -10.8335, 0.52 ) }
    dend_8 { pt3dadd( 5.89493, 73.95, -10.9855, 0.59 ) }
    dend_8 { pt3dadd( 5.62608, 74.4855, -11.1491, 0.59 ) }
    dend_8 { pt3dadd( 5.60101, 74.5363, -11.165, 0.59 ) }
    dend_8 { pt3dadd( 5.29038, 75.2572, -11.4046, 0.22 ) }
    dend_8 { pt3dadd( 5.14075, 75.6434, -11.5241, 0.22 ) }
    dend_8 { pt3dadd( 4.99221, 76.0742, -11.6589, 0.22 ) }
    dend_8 { pt3dadd( 4.86209, 76.5637, -11.7956, 0.22 ) }
    dend_8 { pt3dadd( 4.7466, 77.1848, -11.9794, 0.88 ) }
    dend_8 { pt3dadd( 4.67855, 77.6676, -12.1389, 1.03 ) }
    dend_8 { pt3dadd( 4.61827, 78.2589, -12.3734, 0.66 ) }
    dend_8 { pt3dadd( 4.53451, 79.2836, -12.7951, 0.22 ) }
    dend_8 { pt3dadd( 4.47601, 80.1227, -13.142, 0.22 ) }
    dend_8 { pt3dadd( 4.42642, 81.2473, -13.5968, 1.47 ) }
    dend_8 { pt3dadd( 4.41421, 81.9802, -13.8881, 1.84 ) }
    dend_8 { pt3dadd( 4.40491, 83.5474, -14.4969, 0.22 ) }
    dend_8 { pt3dadd( 4.38842, 84.437, -14.8406, 0.22 ) }
    dend_8 { pt3dadd( 4.37979, 84.5746, -14.8908, 0.22 ) }
    dend_8 { pt3dadd( 4.2902, 85.174, -15.0943, 0.22 ) }
    dend_8 { pt3dadd( 4.02493, 86.3382, -15.4533, 1.55 ) }
    dend_8 { pt3dadd( 3.90604, 86.7514, -15.5702, 1.92 ) }
    dend_8 { pt3dadd( 3.38882, 88.2628, -15.9919, 0.29 ) }
    dend_8 { pt3dadd( 3.13923, 88.9086, -16.1913, 0.29 ) }
    dend_8 { pt3dadd( 2.85303, 89.6684, -16.4766, 0.29 ) }
    dend_8 { pt3dadd( 2.52247, 90.5718, -16.867, 0.81 ) }
    dend_8 { pt3dadd( 2.5016, 90.6309, -16.8952, 0.81 ) }
    dend_8 { pt3dadd( 2.35697, 91.0622, -17.1094, 1.11 ) }
    dend_8 { pt3dadd( 2.34028, 91.1107, -17.1384, 1.11 ) }
    dend_8 { pt3dadd( 2.01114, 92.1033, -18.1845, 0.29 ) }
    dend_8 { pt3dadd( 1.82289, 92.626, -18.8791, 0.29 ) }
    dend_8 { pt3dadd( 1.78569, 92.7198, -19.0143, 0.29 ) }
    dend_8 { pt3dadd( 1.61294, 93.1471, -19.6063, 0.29 ) }
    dend_8 { pt3dadd( 1.20824, 94.1226, -20.9027, 0.96 ) }
    dend_8 { pt3dadd( 0.561885, 96.0414, -23.3081, 0.22 ) }
    dend_8 { pt3dadd( 0.424835, 96.5042, -23.872, 0.22 ) }
    dend_8 { pt3dadd( 0.358776, 96.7886, -24.2045, 0.22 ) }
    dend_8 { pt3dadd( 0.187758, 97.8213, -25.2902, 1.99 ) }
    dend_8 { pt3dadd( 0.112852, 98.6467, -26.0243, 2.95 ) }
    dend_8 { pt3dadd( -0.00989142, 100.439, -27.266, 0.37 ) }
    dend_8 { pt3dadd( -0.0140856, 100.492, -27.2935, 0.37 ) }
    dend_8 { pt3dadd( -0.074489, 101.057, -27.6031, 0.59 ) }
    dend_8 { pt3dadd( -0.176685, 101.671, -27.959, 0.74 ) }
    dend_8 { pt3dadd( -0.345818, 102.34, -28.3596, 0.88 ) }
    dend_8 { pt3dadd( -0.831004, 103.604, -29.0982, 0.22 ) }
    dend_8 { pt3dadd( -0.861767, 103.656, -29.1298, 0.22 ) }
    dend_8 { pt3dadd( -1.23629, 104.255, -29.533, 0.22 ) }
    dend_8 { pt3dadd( -1.54615, 104.699, -29.8559, 0.66 ) }
    dend_8 { pt3dadd( -1.74246, 104.971, -30.0513, 0.66 ) }
    dend_8 { pt3dadd( -1.7766, 105.02, -30.0857, 0.66 ) }
    dend_8 { pt3dadd( -2.27503, 105.831, -30.572, 0.22 ) }
    dend_8 { pt3dadd( -2.84172, 106.826, -31.1216, 1.18 ) }
    dend_8 { pt3dadd( -3.06892, 107.275, -31.3613, 1.33 ) }
    dend_8 { pt3dadd( -3.41798, 108.01, -31.7449, 0.81 ) }
    dend_8 { pt3dadd( -3.78226, 108.833, -32.1798, 0.44 ) }
    dend_8 { pt3dadd( -3.97454, 109.287, -32.4133, 0.59 ) }
    dend_8 { pt3dadd( -4.13995, 109.695, -32.6148, 0.59 ) }
    dend_8 { pt3dadd( -4.58898, 110.863, -33.2698, 0.22 ) }
    dend_8 { pt3dadd( -5.05055, 112.064, -33.9675, 1.69 ) }
    dend_8 { pt3dadd( -5.34399, 112.874, -34.4552, 2.73 ) }
    dend_8 { pt3dadd( -5.61926, 113.654, -34.9322, 2.73 ) }
    dend_8 { pt3dadd( -5.63865, 113.71, -34.9672, 2.73 ) }
    dend_8 { pt3dadd( -6.41469, 115.805, -36.3004, 0.52 ) }
    dend_8 { pt3dadd( -6.82057, 116.856, -36.9276, 0.96 ) }
    dend_8 { pt3dadd( -7.29252, 118.076, -37.602, 0.22 ) }
    dend_8 { pt3dadd( -7.50383, 118.639, -37.8842, 0.52 ) }
    dend_8 { pt3dadd( -7.58888, 118.887, -37.9951, 0.52 ) }
    dend_8 { pt3dadd( -7.92956, 119.96, -38.3811, 0.29 ) }
    dend_8 { pt3dadd( -8.13973, 120.803, -38.5337, 0.22 ) }
    dend_8 { pt3dadd( -8.27935, 121.507, -38.6197, 0.81 ) }
    dend_8 { pt3dadd( -8.33383, 121.852, -38.6526, 0.81 ) }
    dend_8 { pt3dadd( -8.3526, 121.995, -38.6698, 0.81 ) }
    dend_8 { pt3dadd( -8.37469, 122.272, -38.7261, 0.81 ) }
    dend_8 { pt3dadd( -8.36398, 123.257, -39.1248, 0.29 ) }
    dend_8 { pt3dadd( -8.32234, 124.218, -39.6306, 0.29 ) }
    dend_8 { pt3dadd( -8.23991, 125.303, -40.2528, 1.92 ) }
    dend_8 { pt3dadd( -8.18843, 125.826, -40.5667, 2.36 ) }
    dend_8 { pt3dadd( -8.04694, 126.975, -41.2791, 2.06 ) }
    dend_8 { pt3dadd( -7.68045, 129.186, -42.8095, 0.29 ) }
    dend_8 { pt3dadd( -7.58352, 129.652, -43.1582, 0.74 ) }
    dend_8 { pt3dadd( -7.48533, 130.077, -43.5021, 0.96 ) }
    dend_8 { pt3dadd( -7.4513, 130.245, -43.6354, 0.96 ) }
    dend_8 { pt3dadd( -7.42811, 130.404, -43.7567, 0.96 ) }
    dend_8 { pt3dadd( -7.4289, 131.646, -44.6279, 0.37 ) }
    dend_8 { pt3dadd( -7.53382, 132.314, -45.0334, 0.22 ) }
    dend_8 { pt3dadd( -7.62877, 132.745, -45.2904, 0.22 ) }
    dend_8 { pt3dadd( -7.85212, 133.779, -45.8416, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_8 { pt3dadd( -7.96348, 134.45, -46.1623, 1.92 ) }
    dend_8 { pt3dadd( -8.13068, 135.691, -46.685, 0.59 ) }
    dend_8 { pt3dadd( -8.2067, 136.632, -47.0059, 0.22 ) }
    dend_8 { pt3dadd( -8.1824, 137.195, -47.1947, 0.74 ) }
    dend_8 { pt3dadd( -8.04804, 138.208, -47.5077, 0.29 ) }
    dend_8 { pt3dadd( -7.90264, 139.021, -47.7123, 0.81 ) }
    dend_8 { pt3dadd( -7.88983, 139.088, -47.7248, 0.81 ) }
    dend_8 { pt3dadd( -7.79793, 139.579, -47.8324, 0.81 ) }
    dend_8 { pt3dadd( -7.64966, 140.451, -48.0758, 0.22 ) }
    dend_8 { pt3dadd( -7.54939, 141.342, -48.3465, 0.22 ) }
    dend_8 { pt3dadd( -7.47615, 142.812, -48.7855, 1.4 ) }
    dend_8 { pt3dadd( -7.46858, 143.514, -48.9796, 1.99 ) }
    dend_8 { pt3dadd( -7.47421, 145.269, -49.4397, 0.29 ) }
    dend_8 { pt3dadd( -7.48194, 145.693, -49.5433, 0.29 ) }
    dend_8 { pt3dadd( -7.49631, 146.542, -49.7395, 0.22 ) }
    dend_8 { pt3dadd( -7.47207, 147.279, -49.9118, 0.81 ) }
    dend_8 { pt3dadd( -7.462, 147.553, -49.9764, 1.03 ) }
    dend_8 { pt3dadd( -7.46124, 147.76, -50.036, 1.03 ) }
    dend_8 { pt3dadd( -7.4746, 148.195, -50.1669, 0.74 ) }
    dend_8 { pt3dadd( -7.50559, 149.185, -50.5154, 0.22 ) }
    dend_8 { pt3dadd( -7.47083, 149.982, -50.7927, 1.11 ) }
    dend_8 { pt3dadd( -7.43647, 150.352, -50.9141, 1.47 ) }
    dend_8 { pt3dadd( -7.23523, 151.857, -51.344, 0.29 ) }
    dend_8 { pt3dadd( -7.13162, 152.49, -51.503, 0.29 ) }
    dend_8 { pt3dadd( -6.93563, 153.404, -51.6822, 0.22 ) }
    dend_8 { pt3dadd( -6.53556, 154.935, -51.8761, 1.62 ) }
    dend_8 { pt3dadd( -6.36596, 155.503, -51.9077, 1.77 ) }
    dend_8 { pt3dadd( -6.1314, 156.264, -51.9036, 1.25 ) }
    dend_8 { pt3dadd( -6.10967, 156.339, -51.8959, 1.25 ) }
    dend_8 { pt3dadd( -5.80308, 157.635, -51.734, 0.29 ) }
    dend_8 { pt3dadd( -5.69983, 158.402, -51.6439, 0.29 ) }
    dend_8 { pt3dadd( -5.66789, 159.335, -51.5477, 0.81 ) }
    dend_8 { pt3dadd( -5.6785, 160.135, -51.4712, 0.88 ) }
    dend_8 { pt3dadd( -5.73038, 161.025, -51.4332, 0.29 ) }
    dend_8 { pt3dadd( -5.79568, 161.729, -51.4361, 0.29 ) }
    dend_8 { pt3dadd( -5.97991, 162.997, -51.505, 1.62 ) }
    dend_8 { pt3dadd( -6.05475, 163.486, -51.5551, 2.06 ) }
    dend_8 { pt3dadd( -6.13172, 163.986, -51.6324, 2.06 ) }
    dend_8 { pt3dadd( -6.26323, 165.232, -51.8672, 0.44 ) }
    dend_8 { pt3dadd( -6.28806, 165.717, -51.976, 0.29 ) }
    dend_8 { pt3dadd( -6.26561, 166.365, -52.1012, 0.29 ) }
    dend_8 { pt3dadd( -6.16842, 167.133, -52.1908, 0.22 ) }
    dend_8 { pt3dadd( -6.14831, 167.243, -52.1952, 0.22 ) }
    dend_8 { pt3dadd( -6.0057, 167.883, -52.1573, 0.22 ) }
    dend_8 { pt3dadd( -5.99266, 167.958, -52.1436, 0.22 ) }
    dend_8 { pt3dadd( -5.89599, 168.902, -51.9729, 0.22 ) }
    dend_8 { pt3dadd( -5.857, 169.775, -51.8177, 0.52 ) }
    dend_8 { pt3dadd( -5.88608, 170.285, -51.7385, 0.59 ) }
    dend_8 { pt3dadd( -5.94412, 170.734, -51.6806, 0.59 ) }
    dend_8 { pt3dadd( -6.1271, 171.807, -51.5775, 0.29 ) }
    dend_8 { pt3dadd( -6.20395, 172.454, -51.5435, 0.88 ) }
    dend_8 { pt3dadd( -6.21175, 172.533, -51.5427, 0.88 ) }
    dend_8 { pt3dadd( -6.22229, 173.169, -51.5421, 1.11 ) }
    dend_8 { pt3dadd( -6.20988, 173.452, -51.5429, 1.33 ) }
    dend_8 { pt3dadd( -6.14061, 174.202, -51.5475, 1.03 ) }
    dend_8 { pt3dadd( -5.96662, 175.503, -51.5596, 0.29 ) }
    dend_8 { pt3dadd( -5.95645, 175.57, -51.5604, 0.29 ) }
    dend_8 { pt3dadd( -5.76335, 176.695, -51.5721, 0.29 ) }
    dend_8 { pt3dadd( -5.74895, 176.762, -51.5734, 0.29 ) }
    dend_8 { pt3dadd( -5.4646, 177.949, -51.6048, 0.29 ) }
    dend_8 { pt3dadd( -5.26377, 178.665, -51.6278, 0.81 ) }
    dend_8 { pt3dadd( -5.0328, 179.331, -51.6513, 1.03 ) }
    dend_8 { pt3dadd( -5.00162, 179.402, -51.6555, 1.03 ) }
    dend_8 { pt3dadd( -4.54299, 180.294, -51.7362, 1.69 ) }
    dend_8 { pt3dadd( -4.33878, 180.661, -51.7759, 1.69 ) }
    dend_8 { pt3dadd( -3.87966, 181.4, -51.9157, 1.92 ) }
    dend_8 { pt3dadd( -3.47412, 182.029, -52.0746, 1.25 ) }
    dend_8 { pt3dadd( -2.83309, 182.991, -52.4211, 0.96 ) }
    dend_8 { pt3dadd( -2.5649, 183.385, -52.8168, 0.74 ) }
    dend_8 { pt3dadd( -2.54394, 183.419, -52.8614, 0.74 ) }
    dend_8 { pt3dadd( -2.1175, 184.143, -53.936, 0.22 ) }
    dend_8 { pt3dadd( -2.08887, 184.195, -54.0159, 0.22 ) }
    dend_8 { pt3dadd( -1.65665, 185.085, -55.3664, 2.06 ) }
    dend_8 { pt3dadd( -0.29908, 188.146, -59.8912, 0.22 ) }
    dend_8 { pt3dadd( -0.106158, 188.62, -60.5464, 1.25 ) }
    dend_8 { pt3dadd( 0.00690338, 188.951, -60.9727, 1.62 ) }
    dend_8 { pt3dadd( 0.250304, 189.822, -62.0866, 0.22 ) }
    dend_8 { pt3dadd( 0.488943, 190.756, -63.2012, 1.47 ) }
    dend_8 { pt3dadd( 0.54827, 191.016, -63.4912, 2.06 ) }
    dend_8 { pt3dadd( 0.717694, 191.838, -64.2665, 2.8 ) }
    dend_8 { pt3dadd( 0.872651, 192.674, -65.0642, 2.95 ) }
    dend_8 { pt3dadd( 1.3771, 196.249, -68.481, 0.59 ) }
    dend_8 { pt3dadd( 1.47638, 197.311, -69.4849, 0.22 ) }
    dend_8 { pt3dadd( 1.48068, 197.361, -69.5315, 0.22 ) }
    dend_8 { pt3dadd( 1.52852, 198.195, -70.2556, 0.37 ) }
    dend_8 { pt3dadd( 1.54082, 198.993, -70.8533, 0.37 ) }
    dend_8 { pt3dadd( 1.53582, 199.723, -71.2709, 0.22 ) }
    dend_8 { pt3dadd( 1.52531, 200.255, -71.4891, 0.22 ) }
    dend_8 { pt3dadd( 1.57908, 201.049, -71.8809, 0.22 ) }
    dend_8 { pt3dadd( 1.75627, 201.926, -72.3497, 0.22 ) }
    dend_8 { pt3dadd( 2.15442, 203.187, -73.0875, 1.92 ) }
    dend_8 { pt3dadd( 2.27644, 203.507, -73.2792, 2.06 ) }
    dend_8 { pt3dadd( 2.86995, 205.089, -74.1991, 0.37 ) }
    dend_8 { pt3dadd( 3.02695, 205.615, -74.4945, 0.88 ) }
    dend_8 { pt3dadd( 3.03945, 206.161, -74.7662, 0.88 ) }
    dend_8 { pt3dadd( 2.88467, 206.868, -75.05, 0.29 ) }
    dend_8 { pt3dadd( 2.72668, 207.508, -75.3807, 0.44 ) }
    dend_8 { pt3dadd( 2.54495, 208.228, -75.7611, 0.22 ) }
    dend_8 { pt3dadd( 2.39798, 208.809, -76.0713, 0.22 ) }
    dend_8 { pt3dadd( 2.15841, 210.06, -76.7885, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( 2.10258, 210.674, -77.1602, 2.14 ) }
    dend_8 { pt3dadd( 2.16109, 212.891, -78.4985, 0.22 ) }
    dend_8 { pt3dadd( 2.23687, 213.574, -78.9081, 0.22 ) }
    dend_8 { pt3dadd( 2.35675, 214.238, -79.3019, 0.96 ) }
    dend_8 { pt3dadd( 2.43132, 214.56, -79.49, 1.11 ) }
    dend_8 { pt3dadd( 2.78984, 215.745, -80.1029, 0.22 ) }
    dend_8 { pt3dadd( 3.02985, 216.383, -80.3729, 0.52 ) }
    dend_8 { pt3dadd( 3.05331, 216.436, -80.3836, 0.52 ) }
    dend_8 { pt3dadd( 3.1439, 216.635, -80.4292, 0.52 ) }
    dend_8 { pt3dadd( 3.17239, 216.695, -80.445, 0.52 ) }
    dend_8 { pt3dadd( 3.70525, 217.835, -80.7723, 0.22 ) }
    dend_8 { pt3dadd( 4.11785, 218.708, -81.0322, 0.52 ) }
    dend_8 { pt3dadd( 4.38397, 219.269, -81.2134, 0.52 ) }
    dend_8 { pt3dadd( 5.10057, 220.809, -81.7804, 1.11 ) }
    dend_8 { pt3dadd( 5.74123, 222.199, -82.3473, 0.15 ) }
    dend_8 { pt3dadd( 5.87735, 222.505, -82.4844, 0.88 ) }
    dend_8 { pt3dadd( 5.90188, 222.562, -82.5127, 0.88 ) }
    dend_8 { pt3dadd( 6.03132, 222.868, -82.6658, 0.88 ) }
    dend_8 { pt3dadd( 6.6682, 224.191, -83.2941, 0.22 ) }
    dend_8 { pt3dadd( 7.15606, 225.133, -83.6791, 0.22 ) }
    dend_8 { pt3dadd( 7.18017, 225.182, -83.6986, 0.22 ) }
    dend_8 { pt3dadd( 7.56721, 226.044, -84.0162, 1.03 ) }
    dend_8 { pt3dadd( 7.72592, 226.408, -84.1467, 1.33 ) }
    dend_8 { pt3dadd( 8.22256, 227.598, -84.5494, 0.22 ) }
    dend_8 { pt3dadd( 8.48224, 228.266, -84.7335, 0.22 ) }
    dend_8 { pt3dadd( 8.50157, 228.32, -84.7472, 0.22 ) }
    dend_8 { pt3dadd( 8.88369, 229.428, -85.0198, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 27/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.5883, 56.2426, -8.33618, 0.29 ) }
    dend_3 { pt3dadd( 11.7279, 58.2559, -7.44143, 0.29 ) }
    dend_3 { pt3dadd( 11.8056, 59.5603, -6.83175, 0.29 ) }
    dend_3 { pt3dadd( 11.8197, 59.6766, -6.78193, 0.29 ) }
    dend_3 { pt3dadd( 11.977, 60.7102, -6.35883, 0.29 ) }
    dend_3 { pt3dadd( 11.9958, 60.8063, -6.32371, 0.29 ) }
    dend_3 { pt3dadd( 12.1559, 61.5325, -6.07943, 0.29 ) }
    dend_3 { pt3dadd( 12.4042, 62.6111, -5.80742, 0.29 ) }
    dend_3 { pt3dadd( 12.7191, 63.989, -5.49543, 0.29 ) }
    dend_3 { pt3dadd( 12.7377, 64.0887, -5.47346, 0.29 ) }
    dend_3 { pt3dadd( 12.851, 64.8663, -5.31215, 0.29 ) }
    dend_3 { pt3dadd( 12.8625, 65.0088, -5.28025, 0.29 ) }
    dend_3 { pt3dadd( 12.8421, 65.9787, -5.05834, 0.29 ) }
    dend_3 { pt3dadd( 12.6936, 67.1334, -4.81115, 1.18 ) }
    dend_3 { pt3dadd( 12.4945, 68.1204, -4.59636, 2.14 ) }
    dend_3 { pt3dadd( 12.4189, 68.4655, -4.52463, 2.43 ) }
    dend_3 { pt3dadd( 12.2959, 69.0258, -4.4054, 2.43 ) }
    dend_3 { pt3dadd( 12.0789, 70.1666, -4.18715, 0.59 ) }
    dend_3 { pt3dadd( 11.9865, 70.7471, -4.09987, 0.29 ) }
    dend_3 { pt3dadd( 11.8805, 71.3494, -4.05338, 0.29 ) }
    dend_3 { pt3dadd( 11.8597, 71.4736, -4.03805, 0.29 ) }
    dend_3 { pt3dadd( 11.7044, 72.5248, -3.83475, 0.29 ) }
    dend_3 { pt3dadd( 11.6956, 72.5903, -3.81723, 0.29 ) }
    dend_3 { pt3dadd( 11.6154, 73.3136, -3.56018, 0.29 ) }
    dend_3 { pt3dadd( 11.5294, 74.1662, -3.2454, 0.29 ) }
    dend_3 { pt3dadd( 11.4091, 75.4125, -2.80055, 0.15 ) }
    dend_3 { pt3dadd( 11.3961, 75.5405, -2.75382, 0.15 ) }
    dend_3 { pt3dadd( 11.3031, 76.3452, -2.48545, 0.15 ) }
    dend_3 { pt3dadd( 11.1506, 77.573, -2.10218, 0.81 ) }
    dend_3 { pt3dadd( 10.979, 78.5856, -1.81044, 1.4 ) }
    dend_3 { pt3dadd( 10.8406, 79.2649, -1.64221, 1.99 ) }
    dend_3 { pt3dadd( 10.6427, 80.0247, -1.4956, 2.21 ) }
    dend_3 { pt3dadd( 10.2607, 81.3366, -1.25115, 0.29 ) }
    dend_3 { pt3dadd( 10.0341, 82.0245, -1.13865, 0.22 ) }
    dend_3 { pt3dadd( 9.6849, 82.9343, -1.02459, 0.22 ) }
    dend_3 { pt3dadd( 9.51476, 83.3356, -0.98447, 0.22 ) }
    dend_3 { pt3dadd( 9.45269, 83.4686, -0.97711, 0.22 ) }
    dend_3 { pt3dadd( 9.13983, 84.1151, -0.96088, 0.22 ) }
    dend_3 { pt3dadd( 8.67026, 85.0501, -0.92639, 1.11 ) }
    dend_3 { pt3dadd( 8.51168, 85.378, -0.913, 1.18 ) }
    dend_3 { pt3dadd( 8.30579, 85.8503, -0.88832, 0.88 ) }
    dend_3 { pt3dadd( 7.93625, 86.7456, -0.84256, 0.52 ) }
    dend_3 { pt3dadd( 7.60612, 87.6193, -0.798382, 0.29 ) }
    dend_3 { pt3dadd( 7.33748, 88.4195, -0.778691, 0.29 ) }
    dend_3 { pt3dadd( 7.30411, 88.5521, -0.778883, 0.29 ) }
    dend_3 { pt3dadd( 7.19538, 89.2577, -0.82495, 0.22 ) }
    dend_3 { pt3dadd( 7.11905, 90.1288, -0.92409, 0.96 ) }
    dend_3 { pt3dadd( 7.0979, 90.5525, -0.98994, 0.96 ) }
    dend_3 { pt3dadd( 7.04703, 91.3041, -1.15878, 0.44 ) }
    dend_3 { pt3dadd( 6.94201, 92.1295, -1.37482, 0.29 ) }
    dend_3 { pt3dadd( 6.68958, 93.3671, -1.7178, 1.84 ) }
    dend_3 { pt3dadd( 6.57037, 93.7876, -1.84399, 2.14 ) }
    dend_3 { pt3dadd( 6.39398, 94.3458, -2.01932, 1.92 ) }
    dend_3 { pt3dadd( 5.93498, 95.8254, -2.48119, 0.29 ) }
    dend_3 { pt3dadd( 5.65185, 96.737, -2.75828, 0.29 ) }
    dend_3 { pt3dadd( 5.46558, 97.384, -2.97075, 0.29 ) }
    dend_3 { pt3dadd( 5.31285, 98.1023, -3.21965, 0.22 ) }
    dend_3 { pt3dadd( 5.23216, 98.9696, -3.53298, 1.03 ) }
    dend_3 { pt3dadd( 5.27401, 99.6275, -3.79373, 1.03 ) }
    dend_3 { pt3dadd( 5.28511, 99.6905, -3.81835, 1.03 ) }
    dend_3 { pt3dadd( 5.44623, 100.494, -4.17509, 1.18 ) }
    dend_3 { pt3dadd( 5.63787, 101.587, -4.68152, 1.92 ) }
    dend_3 { pt3dadd( 5.71324, 102.329, -5.02631, 2.21 ) }
    dend_3 { pt3dadd( 5.69652, 103.749, -5.66597, 0.29 ) }
    dend_3 { pt3dadd( 5.59291, 104.609, -6.03694, 0.29 ) }
    dend_3 { pt3dadd( 5.27758, 106.085, -6.62515, 1.18 ) }
    dend_3 { pt3dadd( 5.08326, 106.701, -6.84394, 1.33 ) }
    dend_3 { pt3dadd( 4.62209, 107.766, -7.23432, 0.29 ) }
    dend_3 { pt3dadd( 4.10456, 108.762, -7.60691, 0.29 ) }
    dend_3 { pt3dadd( 3.48268, 109.85, -7.99782, 1.03 ) }
    dend_3 { pt3dadd( 3.15188, 110.452, -8.22155, 1.25 ) }
    dend_3 { pt3dadd( 2.89865, 110.945, -8.39772, 1.4 ) }
    dend_3 { pt3dadd( 2.15711, 112.529, -9.00552, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_3 { pt3dadd( 2.1286, 112.596, -9.03215, 0.22 ) }
    dend_3 { pt3dadd( 1.8448, 113.449, -9.34541, 0.22 ) }
    dend_3 { pt3dadd( 1.50219, 114.753, -9.72867, 2.36 ) }
    dend_3 { pt3dadd( 1.48786, 114.827, -9.74656, 2.36 ) }
    dend_3 { pt3dadd( 1.40683, 115.447, -9.85017, 2.8 ) }
    dend_3 { pt3dadd( 1.35334, 116.089, -9.86487, 2.65 ) }
    dend_3 { pt3dadd( 1.1967, 117.885, -9.80103, 0.29 ) }
    dend_3 { pt3dadd( 1.11637, 118.746, -9.71786, 0.22 ) }
    dend_3 { pt3dadd( 1.05864, 119.314, -9.64615, 0.22 ) }
    dend_3 { pt3dadd( 0.990775, 119.94, -9.56896, 0.22 ) }
    dend_3 { pt3dadd( 0.762632, 121.639, -9.36648, 1.84 ) }
    dend_3 { pt3dadd( 0.688746, 122.05, -9.31883, 2.43 ) }
    dend_3 { pt3dadd( 0.590903, 122.464, -9.27331, 2.58 ) }
    dend_3 { pt3dadd( 0.0614171, 124.301, -9.09516, 0.22 ) }
    dend_3 { pt3dadd( 0.0291151, 124.399, -9.08588, 0.22 ) }
    dend_3 { pt3dadd( -0.299781, 125.369, -9.00436, 0.22 ) }
    dend_3 { pt3dadd( -0.703185, 126.589, -8.9266, 1.77 ) }
    dend_3 { pt3dadd( -0.808562, 126.93, -8.90152, 2.21 ) }
    dend_3 { pt3dadd( -1.33447, 128.779, -8.74845, 0.29 ) }
    dend_3 { pt3dadd( -1.48133, 129.422, -8.70152, 0.29 ) }
    dend_3 { pt3dadd( -1.62667, 130.271, -8.65973, 0.29 ) }
    dend_3 { pt3dadd( -1.72666, 131.262, -8.63962, 1.18 ) }
    dend_3 { pt3dadd( -1.76454, 131.906, -8.63901, 1.47 ) }
    dend_3 { pt3dadd( -1.78983, 132.617, -8.64866, 1.11 ) }
    dend_3 { pt3dadd( -1.78141, 133.721, -8.69661, 0.22 ) }
    dend_3 { pt3dadd( -1.78242, 133.921, -8.6944, 0.22 ) }
    dend_3 { pt3dadd( -1.80861, 134.846, -8.63483, 0.74 ) }
    dend_3 { pt3dadd( -1.83985, 135.32, -8.57543, 0.52 ) }
    dend_3 { pt3dadd( -1.91397, 136.255, -8.32314, 0.29 ) }
    dend_3 { pt3dadd( -1.92033, 136.32, -8.30241, 0.29 ) }
    dend_3 { pt3dadd( -2.1018, 137.87, -7.75352, 1.99 ) }
    dend_3 { pt3dadd( -2.13533, 138.154, -7.65504, 2.73 ) }
    dend_3 { pt3dadd( -2.25269, 139.243, -7.25503, 2.43 ) }
    dend_3 { pt3dadd( -2.46007, 141.451, -6.45825, 0.29 ) }
    dend_3 { pt3dadd( -2.54424, 142.523, -6.07769, 0.22 ) }
    dend_3 { pt3dadd( -2.54991, 142.588, -6.05685, 0.22 ) }
    dend_3 { pt3dadd( -2.61561, 143.24, -5.87742, 0.22 ) }
    dend_3 { pt3dadd( -2.71872, 144.09, -5.67991, 0.88 ) }
    dend_3 { pt3dadd( -2.78851, 144.661, -5.59225, 1.18 ) }
    dend_3 { pt3dadd( -2.93279, 145.801, -5.5401, 0.29 ) }
    dend_3 { pt3dadd( -2.98802, 146.348, -5.52082, 0.22 ) }
    dend_3 { pt3dadd( -3.02569, 146.799, -5.52639, 0.37 ) }
    dend_3 { pt3dadd( -3.07204, 147.443, -5.56887, 0.37 ) }
    dend_3 { pt3dadd( -3.14652, 148.385, -5.68987, 0.29 ) }
    dend_3 { pt3dadd( -3.15252, 148.452, -5.69421, 0.29 ) }
    dend_3 { pt3dadd( -3.19514, 148.98, -5.61735, 0.29 ) }
    dend_3 { pt3dadd( -3.24271, 149.678, -5.37531, 0.59 ) }
    dend_3 { pt3dadd( -3.2519, 149.771, -5.32742, 0.59 ) }
    dend_3 { pt3dadd( -3.30021, 150.212, -5.05774, 0.59 ) }
    dend_3 { pt3dadd( -3.42338, 151.249, -4.38783, 0.22 ) }
    dend_3 { pt3dadd( -3.61165, 153.016, -3.26627, 2.5 ) }
    dend_3 { pt3dadd( -3.70889, 154.051, -2.62858, 1.99 ) }
    dend_3 { pt3dadd( -3.85883, 155.885, -1.5413, 0.22 ) }
    dend_3 { pt3dadd( -3.92977, 156.999, -0.92691, 1.62 ) }
    dend_3 { pt3dadd( -3.96196, 157.583, -0.637267, 2.28 ) }
    dend_3 { pt3dadd( -4.05678, 159.008, -0.0502847, 0.22 ) }
    dend_3 { pt3dadd( -4.12511, 159.783, 0.186361, 0.74 ) }
    dend_3 { pt3dadd( -4.14402, 160.036, 0.238813, 0.74 ) }
    dend_3 { pt3dadd( -4.18676, 160.943, 0.345563, 0.22 ) }
    dend_3 { pt3dadd( -4.2135, 161.648, 0.405434, 0.66 ) }
    dend_3 { pt3dadd( -4.21003, 162.258, 0.481604, 0.66 ) }
    dend_3 { pt3dadd( -4.1774, 163.068, 0.605699, 0.29 ) }
    dend_3 { pt3dadd( -4.15523, 163.885, 0.746478, 0.37 ) }
    dend_3 { pt3dadd( -4.1642, 164.338, 0.822492, 0.22 ) }
    dend_3 { pt3dadd( -4.22375, 164.975, 0.918862, 0.22 ) }
    dend_3 { pt3dadd( -4.40244, 166.452, 1.12006, 1.92 ) }
    dend_3 { pt3dadd( -4.47264, 166.941, 1.17783, 2.65 ) }
    dend_3 { pt3dadd( -4.75003, 168.456, 1.32311, 0.29 ) }
    dend_3 { pt3dadd( -4.92982, 169.294, 1.36032, 0.29 ) }
    dend_3 { pt3dadd( -5.16591, 170.331, 1.35818, 0.29 ) }
    dend_3 { pt3dadd( -5.32902, 170.999, 1.31906, 0.29 ) }
    dend_3 { pt3dadd( -5.46724, 171.551, 1.26665, 1.03 ) }
    dend_3 { pt3dadd( -5.64929, 172.331, 1.20398, 1.4 ) }
    dend_3 { pt3dadd( -5.85912, 173.404, 1.15739, 0.29 ) }
    dend_3 { pt3dadd( -5.87268, 173.48, 1.15741, 0.29 ) }
    dend_3 { pt3dadd( -6.04703, 174.299, 1.20744, 0.29 ) }
    dend_3 { pt3dadd( -6.35174, 175.249, 1.31929, 0.66 ) }
    dend_3 { pt3dadd( -6.60202, 175.859, 1.41537, 1.11 ) }
    dend_3 { pt3dadd( -6.89512, 176.469, 1.53722, 1.25 ) }
    dend_3 { pt3dadd( -7.20826, 177.098, 1.72966, 0.81 ) }
    dend_3 { pt3dadd( -7.51847, 177.766, 1.95158, 0.29 ) }
    dend_3 { pt3dadd( -7.78655, 178.382, 2.17367, 0.29 ) }
    dend_3 { pt3dadd( -8.0741, 179.083, 2.43921, 0.29 ) }
    dend_3 { pt3dadd( -8.09605, 179.141, 2.46488, 0.29 ) }
    dend_3 { pt3dadd( -8.47783, 180.23, 2.96022, 0.22 ) }
    dend_3 { pt3dadd( -8.70241, 180.922, 3.31213, 0.22 ) }
    dend_3 { pt3dadd( -8.7156, 180.973, 3.33964, 0.22 ) }
    dend_3 { pt3dadd( -8.93639, 182.031, 3.97469, 1.03 ) }
    dend_3 { pt3dadd( -9.0615, 182.654, 4.36892, 1.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 89/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 6.21943, -49.1911, 6.74036, 0.29 ) }
    dend_62 { pt3dadd( 6.96737, -51.3248, 7.61845, 0.29 ) }
    dend_62 { pt3dadd( 7.33491, -52.5454, 8.1527, 0.29 ) }
    dend_62 { pt3dadd( 7.52979, -53.4284, 8.60293, 0.66 ) }
    dend_62 { pt3dadd( 7.74888, -54.6867, 9.28147, 0.44 ) }
    dend_62 { pt3dadd( 7.8384, -55.4175, 9.68181, 0.81 ) }
    dend_62 { pt3dadd( 7.86723, -55.7973, 9.88439, 1.18 ) }
    dend_62 { pt3dadd( 7.87657, -57.0135, 10.5162, 1.03 ) }
    dend_62 { pt3dadd( 7.72345, -58.2327, 11.1855, 0.44 ) }
    dend_62 { pt3dadd( 7.67023, -58.4907, 11.3356, 1.03 ) }
    dend_62 { pt3dadd( 7.57796, -58.9132, 11.621, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_62 { pt3dadd( 7.43438, -59.5476, 12.1052, 0.37 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 1/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 6.21943, -49.1911, 6.74036, 0.96 ) }
    dend_61 { pt3dadd( 7.29501, -53.3351, 2.66699, 0.96 ) }
    dend_61 { pt3dadd( 7.40257, -53.7607, 2.285, 1.25 ) }
    dend_61 { pt3dadd( 7.65126, -54.7994, 1.43998, 1.25 ) }
    dend_61 { pt3dadd( 8.02539, -56.5069, 0.195459, 0.44 ) }
    dend_61 { pt3dadd( 8.28707, -57.8333, -0.647169, 0.44 ) }
    dend_61 { pt3dadd( 8.36255, -58.2442, -0.87794, 1.55 ) }
    dend_61 { pt3dadd( 8.45977, -58.896, -1.04412, 1.77 ) }
    dend_61 { pt3dadd( 8.54987, -59.664, -1.20991, 1.47 ) }
    dend_61 { pt3dadd( 8.60131, -60.5811, -1.3517, 0.81 ) }
    dend_61 { pt3dadd( 8.62696, -61.8485, -1.52666, 0.52 ) }
    dend_61 { pt3dadd( 8.66588, -62.5669, -1.6314, 0.88 ) }
    dend_61 { pt3dadd( 8.74083, -63.0566, -1.73477, 1.25 ) }
    dend_61 { pt3dadd( 8.96463, -63.8798, -1.97933, 1.03 ) }
    dend_61 { pt3dadd( 9.57284, -65.0439, -2.44583, 0.37 ) }
    dend_61 { pt3dadd( 10.5084, -66.3283, -3.05057, 0.66 ) }
    dend_61 { pt3dadd( 10.9553, -66.829, -3.31444, 1.25 ) }
    dend_61 { pt3dadd( 11.8076, -67.7159, -3.78954, 1.84 ) }
    dend_61 { pt3dadd( 12.4277, -68.333, -4.11199, 1.99 ) }
    dend_61 { pt3dadd( 13.8682, -69.6793, -4.78351, 0.29 ) }
    dend_61 { pt3dadd( 14.4346, -70.2068, -5.00474, 0.29 ) }
    dend_61 { pt3dadd( 14.5034, -70.2835, -5.02419, 0.29 ) }
    dend_61 { pt3dadd( 14.9237, -70.9112, -5.18479, 0.29 ) }
    dend_61 { pt3dadd( 15.2033, -71.4999, -5.35744, 1.18 ) }
    dend_61 { pt3dadd( 15.2235, -71.5524, -5.37441, 1.18 ) }
    dend_61 { pt3dadd( 15.3648, -71.9532, -5.53015, 1.62 ) }
    dend_61 { pt3dadd( 15.5587, -72.4347, -5.75151, 1.62 ) }
    dend_61 { pt3dadd( 16.2041, -73.9363, -6.53485, 0.37 ) }
    dend_61 { pt3dadd( 16.7113, -75.1055, -7.17436, 1.99 ) }
    dend_61 { pt3dadd( 16.9553, -75.6924, -7.50199, 2.65 ) }
    dend_61 { pt3dadd( 17.2925, -76.5831, -7.99349, 2.65 ) }
    dend_61 { pt3dadd( 17.6354, -77.5771, -8.53953, 2.06 ) }
    dend_61 { pt3dadd( 18.0991, -79.0653, -9.34397, 0.52 ) }
    dend_61 { pt3dadd( 18.3593, -79.9526, -9.77636, 0.29 ) }
    dend_61 { pt3dadd( 18.3979, -80.0953, -9.84327, 0.29 ) }
    dend_61 { pt3dadd( 18.5472, -80.6506, -10.1358, 0.29 ) }
    dend_61 { pt3dadd( 18.5612, -80.7084, -10.1703, 0.29 ) }
    dend_61 { pt3dadd( 18.76, -81.4403, -10.639, 0.29 ) }
    dend_61 { pt3dadd( 18.971, -82.1006, -11.1143, 1.69 ) }
    dend_61 { pt3dadd( 19.3029, -82.9992, -11.8021, 2.06 ) }
    dend_61 { pt3dadd( 19.7177, -84.1431, -12.6913, 1.92 ) }
    dend_61 { pt3dadd( 20.1406, -85.517, -13.7615, 0.44 ) }
    dend_61 { pt3dadd( 20.3027, -86.2068, -14.2719, 0.37 ) }
    dend_61 { pt3dadd( 20.4587, -87.3896, -15.1609, 0.52 ) }
    dend_61 { pt3dadd( 20.4923, -87.7637, -15.4278, 0.52 ) }
    dend_61 { pt3dadd( 20.5437, -88.5526, -15.9404, 0.22 ) }
    dend_61 { pt3dadd( 20.6031, -89.626, -16.5561, 2.14 ) }
    dend_61 { pt3dadd( 20.6419, -90.394, -16.9463, 2.87 ) }
    dend_61 { pt3dadd( 20.7461, -92.9012, -18.1886, 0.81 ) }
    dend_61 { pt3dadd( 20.8165, -94.2307, -18.8207, 0.29 ) }
    dend_61 { pt3dadd( 20.8216, -94.2917, -18.8515, 0.29 ) }
    dend_61 { pt3dadd( 20.9223, -95.1937, -19.3313, 0.29 ) }
    dend_61 { pt3dadd( 21.052, -96.1963, -19.8785, 0.29 ) }
    dend_61 { pt3dadd( 21.1732, -97.0953, -20.3779, 1.77 ) }
    dend_61 { pt3dadd( 21.2894, -97.8377, -20.779, 2.5 ) }
    dend_61 { pt3dadd( 21.5728, -99.4886, -21.7592, 0.52 ) }
    dend_61 { pt3dadd( 21.7577, -100.346, -22.2762, 0.22 ) }
    dend_61 { pt3dadd( 21.9105, -100.877, -22.6026, 0.22 ) }
    dend_61 { pt3dadd( 22.1128, -101.347, -22.8758, 0.22 ) }
    dend_61 { pt3dadd( 22.49, -102.054, -23.1896, 0.96 ) }
    dend_61 { pt3dadd( 22.8056, -102.55, -23.3575, 1.25 ) }
    dend_61 { pt3dadd( 23.118, -102.993, -23.4537, 1.25 ) }
    dend_61 { pt3dadd( 23.5607, -103.599, -23.5722, 0.66 ) }
    dend_61 { pt3dadd( 24.166, -104.442, -23.7391, 0.29 ) }
    dend_61 { pt3dadd( 24.7324, -105.252, -23.9221, 0.29 ) }
    dend_61 { pt3dadd( 24.7717, -105.308, -23.9335, 0.29 ) }
    dend_61 { pt3dadd( 25.4178, -106.213, -24.1075, 0.29 ) }
    dend_61 { pt3dadd( 26.144, -107.191, -24.36, 2.06 ) }
    dend_61 { pt3dadd( 26.5636, -107.751, -24.5244, 3.02 ) }
    dend_61 { pt3dadd( 27.2804, -108.669, -24.958, 3.17 ) }
    dend_61 { pt3dadd( 28.4146, -110.111, -25.9152, 0.29 ) }
    dend_61 { pt3dadd( 29.0686, -110.957, -26.585, 0.29 ) }
    dend_61 { pt3dadd( 29.9602, -112.188, -27.7223, 1.4 ) }
    dend_61 { pt3dadd( 30.1113, -112.422, -27.9555, 1.4 ) }
    dend_61 { pt3dadd( 31.2479, -114.571, -30.2939, 0.29 ) }
    dend_61 { pt3dadd( 31.7416, -115.612, -31.4944, 0.29 ) }
    dend_61 { pt3dadd( 31.7579, -115.648, -31.5388, 0.29 ) }
    dend_61 { pt3dadd( 32.2158, -116.61, -32.7027, 2.36 ) }
    dend_61 { pt3dadd( 32.5954, -117.396, -33.5593, 2.8 ) }
    dend_61 { pt3dadd( 33.7127, -119.58, -35.7443, 0.52 ) }
    dend_61 { pt3dadd( 34.1938, -120.522, -36.5076, 0.44 ) }
    dend_61 { pt3dadd( 34.3626, -120.853, -36.7499, 0.81 ) }
    dend_61 { pt3dadd( 34.7628, -121.674, -37.3153, 0.22 ) }
    dend_61 { pt3dadd( 35.0278, -122.233, -37.6682, 0.22 ) }
    dend_61 { pt3dadd( 35.0482, -122.283, -37.6947, 0.22 ) }
    dend_61 { pt3dadd( 35.2615, -122.815, -37.9796, 0.22 ) }
    dend_61 { pt3dadd( 35.5724, -123.806, -38.628, 2.14 ) }
    dend_61 { pt3dadd( 35.7902, -124.479, -39.1222, 2.65 ) }
    dend_61 { pt3dadd( 35.9615, -124.978, -39.5577, 2.65 ) }
    dend_61 { pt3dadd( 35.9768, -125.02, -39.5968, 2.65 ) }
    dend_61 { pt3dadd( 36.7719, -127.038, -41.497, 0.29 ) }
    dend_61 { pt3dadd( 36.8043, -127.118, -41.5785, 0.29 ) }
    dend_61 { pt3dadd( 37.0256, -127.694, -42.1557, 0.29 ) }
    dend_61 { pt3dadd( 37.4025, -128.783, -43.165, 1.47 ) }
    dend_61 { pt3dadd( 37.5507, -129.262, -43.5832, 1.84 ) }
    dend_61 { pt3dadd( 37.7045, -129.762, -43.9965, 2.14 ) }
    dend_61 { pt3dadd( 38.4066, -132.01, -45.6674, 0.52 ) }
    dend_61 { pt3dadd( 38.6882, -132.73, -46.1946, 0.29 ) }
    dend_61 { pt3dadd( 38.9635, -133.326, -46.6194, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_61 { pt3dadd( 38.9927, -133.378, -46.6536, 0.37 ) }
    dend_61 { pt3dadd( 39.3997, -134.007, -47.0745, 1.18 ) }
    dend_61 { pt3dadd( 39.7429, -134.576, -47.4044, 0.74 ) }
    dend_61 { pt3dadd( 40.2742, -135.516, -47.7964, 0.29 ) }
    dend_61 { pt3dadd( 40.8476, -136.613, -48.2529, 1.62 ) }
    dend_61 { pt3dadd( 41.0517, -137.044, -48.4207, 2.28 ) }
    dend_61 { pt3dadd( 41.4384, -137.964, -48.7326, 1.92 ) }
    dend_61 { pt3dadd( 41.9782, -139.393, -49.1818, 0.22 ) }
    dend_61 { pt3dadd( 42.2994, -140.273, -49.4748, 0.22 ) }
    dend_61 { pt3dadd( 42.6023, -141.1, -49.78, 0.96 ) }
    dend_61 { pt3dadd( 42.8331, -141.663, -50.0364, 1.18 ) }
    dend_61 { pt3dadd( 43.0703, -142.197, -50.3817, 1.47 ) }
    dend_61 { pt3dadd( 43.529, -143.255, -51.1894, 0.59 ) }
    dend_61 { pt3dadd( 43.8862, -144.122, -51.9435, 1.77 ) }
    dend_61 { pt3dadd( 44.1495, -144.856, -52.6201, 2.43 ) }
    dend_61 { pt3dadd( 44.4092, -145.686, -53.3796, 2.43 ) }
    dend_61 { pt3dadd( 44.9617, -147.749, -55.3021, 0.52 ) }
    dend_61 { pt3dadd( 45.2404, -149.003, -56.4605, 0.29 ) }
    dend_61 { pt3dadd( 45.3938, -149.878, -57.2605, 1.55 ) }
    dend_61 { pt3dadd( 45.4021, -149.936, -57.3127, 1.55 ) }
    dend_61 { pt3dadd( 45.4852, -150.609, -57.8961, 1.84 ) }
    dend_61 { pt3dadd( 45.6868, -152.471, -59.5204, 0.52 ) }
    dend_61 { pt3dadd( 45.8071, -153.337, -60.2754, 0.96 ) }
    dend_61 { pt3dadd( 46.0821, -154.764, -61.5657, 0.52 ) }
    dend_61 { pt3dadd( 46.3141, -155.704, -62.4209, 1.18 ) }
    dend_61 { pt3dadd( 46.3456, -155.816, -62.523, 1.18 ) }
    dend_61 { pt3dadd( 46.9453, -157.628, -64.2901, 0.29 ) }
    dend_61 { pt3dadd( 47.3005, -158.49, -65.1407, 0.22 ) }
    dend_61 { pt3dadd( 47.5353, -158.99, -65.6471, 1.55 ) }
    dend_61 { pt3dadd( 48.0244, -160.014, -66.7808, 1.55 ) }
    dend_61 { pt3dadd( 48.0412, -160.049, -66.8256, 1.55 ) }
    dend_61 { pt3dadd( 48.5866, -161.206, -68.3857, 1.99 ) }
    dend_61 { pt3dadd( 48.866, -161.777, -69.195, 2.21 ) }
    dend_61 { pt3dadd( 48.8988, -161.84, -69.2898, 2.21 ) }
    dend_61 { pt3dadd( 49.5918, -163.102, -71.169, 2.58 ) }
    dend_61 { pt3dadd( 50.6995, -165.023, -73.9268, 0.22 ) }
    dend_61 { pt3dadd( 50.9241, -165.396, -74.4251, 0.22 ) }
    dend_61 { pt3dadd( 51.289, -165.995, -75.157, 1.11 ) }
    dend_61 { pt3dadd( 51.4226, -166.229, -75.405, 1.11 ) }
    dend_61 { pt3dadd( 52.1187, -167.51, -76.555, 0.37 ) }
    dend_61 { pt3dadd( 52.6564, -168.568, -77.3161, 2.06 ) }
    dend_61 { pt3dadd( 52.8501, -169.063, -77.6029, 2.5 ) }
    dend_61 { pt3dadd( 53.4964, -171.132, -78.7072, 0.22 ) }
    dend_61 { pt3dadd( 53.8626, -172.755, -79.4636, 0.22 ) }
    dend_61 { pt3dadd( 53.9665, -173.49, -79.761, 1.55 ) }
    dend_61 { pt3dadd( 53.9929, -173.947, -79.9074, 1.55 ) }
    dend_61 { pt3dadd( 53.9584, -175.589, -80.2811, 0.22 ) }
    dend_61 { pt3dadd( 53.954, -175.645, -80.29, 0.22 ) }
    dend_61 { pt3dadd( 53.821, -176.753, -80.3423, 0.22 ) }
    dend_61 { pt3dadd( 53.6905, -177.658, -80.3656, 1.11 ) }
    dend_61 { pt3dadd( 53.622, -178.16, -80.367, 1.4 ) }
    dend_61 { pt3dadd( 53.4685, -179.665, -80.3507, 0.22 ) }
    dend_61 { pt3dadd( 53.42, -180.544, -80.2957, 0.88 ) }
    dend_61 { pt3dadd( 53.3971, -181.331, -80.219, 0.88 ) }
    dend_61 { pt3dadd( 53.4011, -182.445, -80.0707, 0.22 ) }
    dend_61 { pt3dadd( 53.4058, -182.732, -80.0188, 0.22 ) }
    dend_61 { pt3dadd( 53.4131, -183.786, -79.8118, 0.22 ) }
    dend_61 { pt3dadd( 53.3452, -185.357, -79.4367, 0.22 ) }
    dend_61 { pt3dadd( 53.34, -185.423, -79.4188, 0.22 ) }
    dend_61 { pt3dadd( 53.2036, -186.6, -79.0963, 0.22 ) }
    dend_61 { pt3dadd( 53.0379, -187.852, -78.768, 2.21 ) }
    dend_61 { pt3dadd( 52.9306, -188.55, -78.5991, 2.36 ) }
    dend_61 { pt3dadd( 52.5811, -190.508, -78.1639, 0.15 ) }
    dend_61 { pt3dadd( 52.3121, -191.884, -77.9031, 0.15 ) }
    dend_61 { pt3dadd( 52.0432, -193.225, -77.6852, 0.15 ) }
    dend_61 { pt3dadd( 51.8326, -194.262, -77.5532, 0.52 ) }
    dend_61 { pt3dadd( 51.7221, -194.831, -77.5079, 0.74 ) }
    dend_61 { pt3dadd( 51.6951, -194.964, -77.5004, 0.74 ) }
    dend_61 { pt3dadd( 51.6359, -195.251, -77.4958, 0.74 ) }
    dend_61 { pt3dadd( 51.2749, -196.762, -77.46, 0.29 ) }
    dend_61 { pt3dadd( 51.0062, -197.805, -77.4286, 0.22 ) }
    dend_61 { pt3dadd( 50.7875, -198.497, -77.3917, 0.81 ) }
    dend_61 { pt3dadd( 50.3031, -199.833, -77.2961, 0.22 ) }
    dend_61 { pt3dadd( 50.2784, -199.896, -77.2904, 0.22 ) }
    dend_61 { pt3dadd( 50.0746, -200.359, -77.2748, 0.22 ) }
    dend_61 { pt3dadd( 50.0431, -200.419, -77.2761, 0.22 ) }
    dend_61 { pt3dadd( 49.5339, -201.318, -77.3347, 1.84 ) }
    dend_61 { pt3dadd( 49.1573, -201.956, -77.3965, 2.28 ) }
    dend_61 { pt3dadd( 48.7908, -202.557, -77.4808, 2.28 ) }
    dend_61 { pt3dadd( 47.7907, -204.208, -77.7345, 0.22 ) }
    dend_61 { pt3dadd( 47.1071, -205.337, -77.9245, 0.22 ) }
    dend_61 { pt3dadd( 46.8171, -205.833, -78.0135, 0.96 ) }
    dend_61 { pt3dadd( 46.415, -206.533, -78.152, 0.96 ) }
    dend_61 { pt3dadd( 45.7108, -207.712, -78.3822, 0.22 ) }
    dend_61 { pt3dadd( 45.3704, -208.26, -78.4806, 0.66 ) }
    dend_61 { pt3dadd( 45.337, -208.32, -78.4899, 0.66 ) }
    dend_61 { pt3dadd( 45.1268, -208.762, -78.5851, 0.66 ) }
    dend_61 { pt3dadd( 44.649, -209.988, -78.8882, 0.22 ) }
    dend_61 { pt3dadd( 44.4381, -210.762, -79.1235, 1.11 ) }
    dend_61 { pt3dadd( 44.3775, -211.128, -79.2453, 1.11 ) }
    dend_61 { pt3dadd( 44.3012, -212.365, -79.6915, 0.22 ) }
    dend_61 { pt3dadd( 44.3417, -213.182, -79.9957, 0.88 ) }
    dend_61 { pt3dadd( 44.4339, -213.772, -80.2232, 1.11 ) }
    dend_61 { pt3dadd( 44.7816, -214.96, -80.6921, 0.22 ) }
    dend_61 { pt3dadd( 44.9618, -215.441, -80.8738, 0.59 ) }
    dend_61 { pt3dadd( 45.4862, -216.54, -81.2722, 0.22 ) }
    dend_61 { pt3dadd( 45.8431, -217.137, -81.4474, 0.22 ) }
    dend_61 { pt3dadd( 45.8818, -217.193, -81.4602, 0.22 ) }
    dend_61 { pt3dadd( 46.2868, -217.714, -81.5585, 1.03 ) }
    dend_61 { pt3dadd( 46.7448, -218.285, -81.6152, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_61 { pt3dadd( 47.9639, -219.884, -81.7698, 0.22 ) }
    dend_61 { pt3dadd( 48.5556, -220.701, -81.8441, 1.4 ) }
    dend_61 { pt3dadd( 48.8439, -221.128, -81.8888, 1.84 ) }
    dend_61 { pt3dadd( 48.9617, -221.309, -81.9059, 1.84 ) }
    dend_61 { pt3dadd( 49.8752, -222.73, -82.0242, 0.22 ) }
    dend_61 { pt3dadd( 50.5868, -223.846, -82.1196, 0.22 ) }
    dend_61 { pt3dadd( 50.6627, -223.969, -82.1297, 0.22 ) }
    dend_61 { pt3dadd( 51.3122, -225.016, -82.2488, 0.22 ) }
    dend_61 { pt3dadd( 51.7297, -225.66, -82.3223, 1.03 ) }
    dend_61 { pt3dadd( 52.016, -226.087, -82.3826, 1.03 ) }
    dend_61 { pt3dadd( 52.8455, -227.268, -82.5348, 0.22 ) }
    dend_61 { pt3dadd( 53.3196, -227.928, -82.5943, 1.03 ) }
    dend_61 { pt3dadd( 53.6647, -228.395, -82.6402, 1.03 ) }
    dend_61 { pt3dadd( 53.7064, -228.449, -82.6462, 1.03 ) }
    dend_61 { pt3dadd( 54.9947, -230.117, -82.8704, 0.15 ) }
    dend_61 { pt3dadd( 55.7025, -231.025, -82.9963, 1.25 ) }
    dend_61 { pt3dadd( 56.1755, -231.632, -83.0799, 1.69 ) }
    dend_61 { pt3dadd( 57.2056, -233.02, -83.2842, 0.22 ) }
    dend_61 { pt3dadd( 57.7284, -233.781, -83.3944, 0.22 ) }
    dend_61 { pt3dadd( 58.2203, -234.564, -83.5057, 1.18 ) }
    dend_61 { pt3dadd( 58.475, -235.01, -83.5677, 1.77 ) }
    dend_61 { pt3dadd( 58.6617, -235.395, -83.6317, 1.84 ) }
    dend_61 { pt3dadd( 59.1822, -236.716, -83.8185, 0.22 ) }
    dend_61 { pt3dadd( 59.4438, -237.561, -83.898, 0.22 ) }
    dend_61 { pt3dadd( 59.6611, -238.328, -83.9451, 0.52 ) }
    dend_61 { pt3dadd( 59.68, -238.393, -83.9466, 0.52 ) }
    dend_61 { pt3dadd( 59.7953, -238.777, -83.9496, 0.52 ) }
    dend_61 { pt3dadd( 60.2308, -240.033, -83.9204, 0.22 ) }
    dend_61 { pt3dadd( 60.4706, -240.585, -83.8644, 1.18 ) }
    dend_61 { pt3dadd( 60.6189, -240.867, -83.8288, 1.4 ) }
    dend_61 { pt3dadd( 60.6508, -240.926, -83.82, 1.4 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 31/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -0.918616, -51.7188, 3.20947, 0.96 ) }
    dend_55 { pt3dadd( -0.794531, -51.9626, 2.3912, 0.96 ) }
    dend_55 { pt3dadd( -0.504853, -52.8126, 0.0757609, 1.4 ) }
    dend_55 { pt3dadd( -0.270586, -53.8568, -2.29995, 1.69 ) }
    dend_55 { pt3dadd( -0.0532905, -55.652, -6.00044, 0.88 ) }
    dend_55 { pt3dadd( -0.0179718, -56.3565, -7.33095, 0.96 ) }
    dend_55 { pt3dadd( -0.0164542, -57.0089, -8.43314, 0.96 ) }
    dend_55 { pt3dadd( -0.0773425, -57.523, -9.14813, 1.18 ) }
    dend_55 { pt3dadd( -0.203068, -58.2502, -9.92857, 1.84 ) }
    dend_55 { pt3dadd( -0.427729, -59.7558, -11.2491, 2.14 ) }
    dend_55 { pt3dadd( -0.469324, -60.2961, -11.7146, 2.36 ) }
    dend_55 { pt3dadd( -0.357551, -61.1201, -12.7118, 0.74 ) }
    dend_55 { pt3dadd( -0.0547175, -61.8263, -13.9276, 0.44 ) }
    dend_55 { pt3dadd( 0.181273, -62.197, -14.8894, 0.66 ) }
    dend_55 { pt3dadd( 0.433879, -62.6119, -16.2038, 1.03 ) }
    dend_55 { pt3dadd( 0.663387, -63.0045, -17.6089, 1.84 ) }
    dend_55 { pt3dadd( 0.808564, -63.5074, -19.3412, 1.84 ) }
    dend_55 { pt3dadd( 0.81171, -63.5222, -19.3991, 1.84 ) }
    dend_55 { pt3dadd( 0.798846, -64.6211, -23.5627, 0.52 ) }
    dend_55 { pt3dadd( 0.649939, -65.0798, -25.0722, 0.52 ) }
    dend_55 { pt3dadd( 0.638785, -65.1003, -25.1272, 0.52 ) }
    dend_55 { pt3dadd( 0.147213, -65.9434, -26.8164, 0.52 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 53/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -0.918616, -51.7188, 3.20947, 0.52 ) }
    dend_52 { pt3dadd( -0.829253, -53.0737, 2.82065, 0.52 ) }
    dend_52 { pt3dadd( -0.867836, -53.9165, 2.57742, 0.52 ) }
    dend_52 { pt3dadd( -1.02843, -54.7368, 2.35382, 1.03 ) }
    dend_52 { pt3dadd( -1.34529, -55.5686, 2.10519, 0.37 ) }
    dend_52 { pt3dadd( -1.77173, -56.4324, 1.84962, 0.88 ) }
    dend_52 { pt3dadd( -2.09224, -56.9969, 1.68809, 1.11 ) }
    dend_52 { pt3dadd( -2.38816, -57.4007, 1.5625, 1.33 ) }
    dend_52 { pt3dadd( -3.02157, -58.1256, 1.33838, 0.88 ) }
    dend_52 { pt3dadd( -4.05146, -59.1875, 1.02065, 0.59 ) }
    dend_52 { pt3dadd( -4.79412, -59.9031, 0.831118, 0.59 ) }
    dend_52 { pt3dadd( -5.42227, -60.4944, 0.71707, 1.18 ) }
    dend_52 { pt3dadd( -6.21498, -61.2407, 0.660827, 1.47 ) }
    dend_52 { pt3dadd( -6.62171, -61.6167, 0.680577, 1.69 ) }
    dend_52 { pt3dadd( -6.6811, -61.6681, 0.690281, 1.69 ) }
    dend_52 { pt3dadd( -7.4167, -62.2288, 0.900955, 1.33 ) }
    dend_52 { pt3dadd( -8.49307, -62.9293, 1.25304, 0.29 ) }
    dend_52 { pt3dadd( -9.62915, -63.5854, 1.63617, 0.29 ) }
    dend_52 { pt3dadd( -10.3307, -63.9699, 1.86212, 1.47 ) }
    dend_52 { pt3dadd( -11.0935, -64.3845, 2.07156, 1.69 ) }
    dend_52 { pt3dadd( -11.9039, -64.8119, 2.25083, 2.21 ) }
    dend_52 { pt3dadd( -12.6313, -65.1731, 2.36145, 2.06 ) }
    dend_52 { pt3dadd( -13.5498, -65.5965, 2.41, 0.96 ) }
    dend_52 { pt3dadd( -14.8277, -66.1654, 2.52877, 0.22 ) }
    dend_52 { pt3dadd( -15.7218, -66.5841, 2.67164, 0.22 ) }
    dend_52 { pt3dadd( -16.2751, -66.8585, 2.79288, 1.11 ) }
    dend_52 { pt3dadd( -16.8755, -67.1549, 2.94683, 1.77 ) }
    dend_52 { pt3dadd( -17.5898, -67.4921, 3.16482, 1.77 ) }
    dend_52 { pt3dadd( -20.0578, -68.6003, 3.98753, 0.29 ) }
    dend_52 { pt3dadd( -20.5137, -68.7999, 4.14258, 0.74 ) }
    dend_52 { pt3dadd( -20.9336, -69.0036, 4.29088, 0.96 ) }
    dend_52 { pt3dadd( -21.755, -69.4469, 4.58127, 0.96 ) }
    dend_52 { pt3dadd( -22.7547, -70.0552, 4.90171, 0.88 ) }
    dend_52 { pt3dadd( -23.6558, -70.6601, 5.07718, 0.52 ) }
    dend_52 { pt3dadd( -24.4362, -71.2561, 4.97821, 0.52 ) }
    dend_52 { pt3dadd( -25.5029, -72.1434, 4.6772, 1.4 ) }
    dend_52 { pt3dadd( -25.7644, -72.3736, 4.58594, 1.84 ) }
    dend_52 { pt3dadd( -26.5531, -73.126, 4.22433, 1.03 ) }
    dend_52 { pt3dadd( -27.5747, -74.1662, 3.59483, 0.52 ) }
    dend_52 { pt3dadd( -29.3398, -76.0115, 2.21871, 2.28 ) }
    dend_52 { pt3dadd( -29.9289, -76.632, 1.64558, 3.24 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 94/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -51.6536, 16.1751, -80.5531, 0.29 ) }
    dend_40 { pt3dadd( -53.3627, 16.3231, -82.4647, 0.29 ) }
    dend_40 { pt3dadd( -54.4621, 16.4645, -83.6975, 0.29 ) }
    dend_40 { pt3dadd( -55.5833, 16.6199, -84.9109, 0.52 ) }
    dend_40 { pt3dadd( -56.5455, 16.7558, -85.9232, 0.22 ) }
    dend_40 { pt3dadd( -57.1567, 16.8565, -86.54, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_40 { pt3dadd( -57.6425, 16.9364, -87.0165, 1.92 ) }
    dend_40 { pt3dadd( -58.2892, 17.0698, -87.6293, 2.06 ) }
    dend_40 { pt3dadd( -59.9445, 17.351, -89.1617, 0.29 ) }
    dend_40 { pt3dadd( -60.1025, 17.3622, -89.3143, 0.52 ) }
    dend_40 { pt3dadd( -60.8665, 17.3548, -90.1804, 0.29 ) }
    dend_40 { pt3dadd( -62.0046, 17.2765, -91.539, 0.22 ) }
    dend_40 { pt3dadd( -63.4032, 17.1141, -93.3106, 1.62 ) }
    dend_40 { pt3dadd( -63.6964, 17.0675, -93.7026, 2.28 ) }
    dend_40 { pt3dadd( -64.5087, 16.9294, -94.8778, 1.77 ) }
    dend_40 { pt3dadd( -66.5121, 16.5794, -97.9066, 0.22 ) }
    dend_40 { pt3dadd( -67.0989, 16.4795, -98.8458, 0.22 ) }
    dend_40 { pt3dadd( -67.6048, 16.424, -99.7503, 1.03 ) }
    dend_40 { pt3dadd( -68.4144, 16.4345, -101.309, 0.59 ) }
    dend_40 { pt3dadd( -68.979, 16.5354, -102.498, 1.47 ) }
    dend_40 { pt3dadd( -69.0034, 16.5448, -102.552, 1.47 ) }
    dend_40 { pt3dadd( -69.2556, 16.685, -103.122, 1.69 ) }
    dend_40 { pt3dadd( -70.3958, 17.4608, -105.928, 0.37 ) }
    dend_40 { pt3dadd( -70.7147, 17.7074, -106.708, 0.52 ) }
    dend_40 { pt3dadd( -71.1973, 18.1062, -107.823, 0.74 ) }
    dend_40 { pt3dadd( -71.6187, 18.4325, -108.729, 0.29 ) }
    dend_40 { pt3dadd( -72.225, 18.8422, -109.846, 1.47 ) }
    dend_40 { pt3dadd( -72.2601, 18.8628, -109.903, 1.47 ) }
    dend_40 { pt3dadd( -72.6533, 19.075, -110.448, 1.99 ) }
    dend_40 { pt3dadd( -73.8789, 19.7223, -112.257, 0.22 ) }
    dend_40 { pt3dadd( -73.9098, 19.7376, -112.306, 0.22 ) }
    dend_40 { pt3dadd( -74.4117, 19.9838, -113.171, 0.52 ) }
    dend_40 { pt3dadd( -75.2569, 20.3399, -114.698, 0.44 ) }
    dend_40 { pt3dadd( -75.6731, 20.4909, -115.443, 1.33 ) }
    dend_40 { pt3dadd( -76.8915, 20.8183, -117.579, 0.52 ) }
    dend_40 { pt3dadd( -77.9321, 21.0131, -119.306, 0.29 ) }
    dend_40 { pt3dadd( -77.9643, 21.0179, -119.356, 0.29 ) }
    dend_40 { pt3dadd( -78.7154, 21.1256, -120.456, 1.84 ) }
    dend_40 { pt3dadd( -79.0271, 21.1621, -120.858, 2.21 ) }
    dend_40 { pt3dadd( -81.1445, 21.3609, -123.234, 0.22 ) }
    dend_40 { pt3dadd( -81.9694, 21.4065, -123.984, 1.11 ) }
    dend_40 { pt3dadd( -82.3141, 21.432, -124.257, 1.4 ) }
    dend_40 { pt3dadd( -83.3605, 21.4711, -124.967, 0.22 ) }
    dend_40 { pt3dadd( -83.4128, 21.4701, -124.996, 0.22 ) }
    dend_40 { pt3dadd( -84.3534, 21.3777, -125.431, 0.22 ) }
    dend_40 { pt3dadd( -85.2835, 21.2174, -125.738, 1.62 ) }
    dend_40 { pt3dadd( -86.0228, 21.0621, -125.99, 1.77 ) }
    dend_40 { pt3dadd( -87.6871, 20.6696, -126.546, 0.22 ) }
    dend_40 { pt3dadd( -89.1389, 20.2879, -127.013, 0.22 ) }
    dend_40 { pt3dadd( -90.0709, 20.0408, -127.312, 1.4 ) }
    dend_40 { pt3dadd( -90.5484, 19.9126, -127.471, 1.77 ) }
    dend_40 { pt3dadd( -92.8767, 19.31, -128.237, 0.22 ) }
    dend_40 { pt3dadd( -93.9103, 19.0471, -128.655, 0.22 ) }
    dend_40 { pt3dadd( -94.002, 19.0239, -128.703, 0.22 ) }
    dend_40 { pt3dadd( -94.5707, 18.8747, -129.052, 0.22 ) }
    dend_40 { pt3dadd( -95.2152, 18.6789, -129.514, 1.11 ) }
    dend_40 { pt3dadd( -95.4955, 18.5801, -129.733, 1.11 ) }
    dend_40 { pt3dadd( -97.3935, 17.815, -131.375, 0.22 ) }
    dend_40 { pt3dadd( -98.0306, 17.5647, -131.954, 0.96 ) }
    dend_40 { pt3dadd( -98.2195, 17.4929, -132.118, 1.18 ) }
    dend_40 { pt3dadd( -99.6659, 16.9562, -133.323, 0.22 ) }
    dend_40 { pt3dadd( -100.065, 16.8085, -133.632, 0.22 ) }
    dend_40 { pt3dadd( -100.682, 16.5789, -134.151, 1.18 ) }
    dend_40 { pt3dadd( -102.184, 16.032, -135.403, 0.22 ) }
    dend_40 { pt3dadd( -102.813, 15.817, -135.952, 0.22 ) }
    dend_40 { pt3dadd( -103.584, 15.5499, -136.709, 1.92 ) }
    dend_40 { pt3dadd( -103.905, 15.4324, -137.074, 2.14 ) }
    dend_40 { pt3dadd( -106.354, 14.5215, -140.259, 0.29 ) }
    dend_40 { pt3dadd( -107.205, 14.1653, -141.505, 0.22 ) }
    dend_40 { pt3dadd( -107.714, 13.9495, -142.346, 1.11 ) }
    dend_40 { pt3dadd( -109.013, 13.4324, -144.738, 0.74 ) }
    dend_40 { pt3dadd( -109.786, 13.109, -146.383, 1.69 ) }
    dend_40 { pt3dadd( -111.086, 12.4898, -149.515, 1.18 ) }
    dend_40 { pt3dadd( -111.973, 12.0005, -151.832, 0.66 ) }
    dend_40 { pt3dadd( -112.667, 11.5316, -153.873, 0.88 ) }
    dend_40 { pt3dadd( -113.847, 10.5658, -157.699, 1.69 ) }
    dend_40 { pt3dadd( -114.991, 9.365, -161.95, 1.55 ) }
    dend_40 { pt3dadd( -115.772, 8.32162, -165.264, 0.29 ) }
    dend_40 { pt3dadd( -116.052, 7.76426, -166.785, 1.33 ) }
    dend_40 { pt3dadd( -116.311, 7.0246, -168.539, 0.22 ) }
    dend_40 { pt3dadd( -116.381, 6.66995, -169.223, 0.59 ) }
    dend_40 { pt3dadd( -116.482, 5.6588, -170.874, 0.22 ) }
    dend_40 { pt3dadd( -116.491, 5.59127, -170.984, 0.22 ) }
    dend_40 { pt3dadd( -116.623, 5.06587, -171.91, 0.22 ) }
    dend_40 { pt3dadd( -117.01, 4.33917, -173.492, 2.06 ) }
    dend_40 { pt3dadd( -118.179, 3.01401, -176.809, 1.11 ) }
    dend_40 { pt3dadd( -118.699, 2.58976, -178.06, 0.81 ) }
    dend_40 { pt3dadd( -119.812, 1.8713, -180.421, 0.44 ) }
    dend_40 { pt3dadd( -120.232, 1.62996, -181.251, 1.03 ) }
    dend_40 { pt3dadd( -122.005, 0.71913, -184.511, 0.22 ) }
    dend_40 { pt3dadd( -122.424, 0.5219, -185.237, 0.88 ) }
    dend_40 { pt3dadd( -124.353, -0.191679, -188.274, 0.22 ) }
    dend_40 { pt3dadd( -124.678, -0.299699, -188.761, 0.96 ) }
    dend_40 { pt3dadd( -125.832, -0.658154, -190.449, 1.47 ) }
    dend_40 { pt3dadd( -126.16, -0.763577, -190.933, 1.55 ) }
    dend_40 { pt3dadd( -126.407, -0.841241, -191.288, 1.55 ) }
    dend_40 { pt3dadd( -129.116, -1.70358, -195.229, 0.22 ) }
    dend_40 { pt3dadd( -129.66, -1.92456, -196.169, 0.52 ) }
    dend_40 { pt3dadd( -130.77, -2.47026, -198.335, 0.52 ) }
    dend_40 { pt3dadd( -131.273, -2.75397, -199.513, 0.52 ) }
    dend_40 { pt3dadd( -131.317, -2.78066, -199.621, 0.52 ) }
    dend_40 { pt3dadd( -131.883, -3.22791, -201.23, 1.03 ) }
    dend_40 { pt3dadd( -132.884, -4.67048, -205.46, 0.59 ) }
    dend_40 { pt3dadd( -133.077, -5.0474, -206.573, 0.88 ) }
    dend_40 { pt3dadd( -133.517, -6.26378, -210.218, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 99/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -51.6536, 16.1751, -80.5531, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_35 { pt3dadd( -53.3356, 18.0215, -82.2563, 0.22 ) }
    dend_35 { pt3dadd( -53.8324, 18.5141, -82.7312, 0.81 ) }
    dend_35 { pt3dadd( -54.0621, 18.7215, -82.9284, 1.11 ) }
    dend_35 { pt3dadd( -54.723, 19.2767, -83.4189, 0.37 ) }
    dend_35 { pt3dadd( -55.5317, 19.9129, -83.9441, 0.22 ) }
    dend_35 { pt3dadd( -55.5882, 19.9564, -83.9789, 0.22 ) }
    dend_35 { pt3dadd( -56.2147, 20.4099, -84.3146, 0.22 ) }
    dend_35 { pt3dadd( -57.1187, 21.0259, -84.7471, 0.22 ) }
    dend_35 { pt3dadd( -57.9119, 21.5143, -85.0822, 1.33 ) }
    dend_35 { pt3dadd( -58.4398, 21.8057, -85.2512, 2.14 ) }
    dend_35 { pt3dadd( -59.4694, 22.353, -85.5123, 2.5 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 11/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -23.9291, 18.1102, -39.9357, 0.22 ) }
    dend_33 { pt3dadd( -25.847, 18.0634, -40.3726, 0.22 ) }
    dend_33 { pt3dadd( -26.5208, 18.0159, -40.5391, 0.22 ) }
    dend_33 { pt3dadd( -27.3921, 17.9415, -40.7456, 0.22 ) }
    dend_33 { pt3dadd( -28.3665, 17.8518, -40.9609, 1.55 ) }
    dend_33 { pt3dadd( -28.9949, 17.7618, -41.0879, 2.28 ) }
    dend_33 { pt3dadd( -29.4418, 17.6821, -41.1702, 2.43 ) }
    dend_33 { pt3dadd( -31.4698, 17.3058, -41.4735, 0.22 ) }
    dend_33 { pt3dadd( -32.1787, 17.1112, -41.5737, 1.18 ) }
    dend_33 { pt3dadd( -32.8567, 16.8543, -41.6673, 1.25 ) }
    dend_33 { pt3dadd( -34.1746, 16.2595, -41.8375, 0.22 ) }
    dend_33 { pt3dadd( -34.9418, 15.8811, -41.9211, 0.88 ) }
    dend_33 { pt3dadd( -35.3116, 15.6836, -41.9778, 1.11 ) }
    dend_33 { pt3dadd( -36.6545, 14.9174, -42.2194, 0.22 ) }
    dend_33 { pt3dadd( -37.517, 14.4137, -42.406, 1.69 ) }
    dend_33 { pt3dadd( -37.6518, 14.3334, -42.4384, 2.06 ) }
    dend_33 { pt3dadd( -38.23, 13.994, -42.5875, 2.21 ) }
    dend_33 { pt3dadd( -40.2789, 12.7864, -43.1274, 0.22 ) }
    dend_33 { pt3dadd( -41.1371, 12.2801, -43.3395, 0.22 ) }
    dend_33 { pt3dadd( -41.2046, 12.2411, -43.3551, 0.22 ) }
    dend_33 { pt3dadd( -42.2111, 11.6559, -43.5581, 0.22 ) }
    dend_33 { pt3dadd( -42.5741, 11.4409, -43.6278, 0.52 ) }
    dend_33 { pt3dadd( -42.9917, 11.1936, -43.6855, 0.52 ) }
    dend_33 { pt3dadd( -43.9638, 10.6063, -43.7404, 0.15 ) }
    dend_33 { pt3dadd( -44.7606, 10.1335, -43.7821, 1.62 ) }
    dend_33 { pt3dadd( -45.1592, 9.9059, -43.8005, 1.99 ) }
    dend_33 { pt3dadd( -45.6402, 9.6495, -43.82, 1.92 ) }
    dend_33 { pt3dadd( -46.9951, 8.91148, -43.8625, 0.22 ) }
    dend_33 { pt3dadd( -47.6239, 8.53875, -43.8755, 0.22 ) }
    dend_33 { pt3dadd( -47.9056, 8.35948, -43.8696, 0.74 ) }
    dend_33 { pt3dadd( -48.2564, 8.13231, -43.844, 0.96 ) }
    dend_33 { pt3dadd( -48.6327, 7.89471, -43.8049, 0.74 ) }
    dend_33 { pt3dadd( -49.43, 7.38889, -43.6986, 0.15 ) }
    dend_33 { pt3dadd( -49.9771, 7.02925, -43.6269, 0.15 ) }
    dend_33 { pt3dadd( -50.481, 6.69531, -43.5688, 0.15 ) }
    dend_33 { pt3dadd( -51.4157, 6.11839, -43.4775, 0.15 ) }
    dend_33 { pt3dadd( -51.932, 5.81787, -43.4299, 1.25 ) }
    dend_33 { pt3dadd( -52.441, 5.54497, -43.3858, 1.55 ) }
    dend_33 { pt3dadd( -53.1424, 5.21277, -43.3325, 1.18 ) }
    dend_33 { pt3dadd( -54.0504, 4.79136, -43.2428, 0.22 ) }
    dend_33 { pt3dadd( -54.9042, 4.36728, -43.1513, 0.22 ) }
    dend_33 { pt3dadd( -54.9571, 4.34045, -43.1448, 0.22 ) }
    dend_33 { pt3dadd( -55.9556, 3.84878, -43.0123, 1.69 ) }
    dend_33 { pt3dadd( -56.3939, 3.6391, -42.9522, 2.06 ) }
    dend_33 { pt3dadd( -58.1964, 2.78949, -42.7208, 0.22 ) }
    dend_33 { pt3dadd( -58.7652, 2.51634, -42.6486, 0.52 ) }
    dend_33 { pt3dadd( -59.8969, 1.93927, -42.5237, 0.22 ) }
    dend_33 { pt3dadd( -59.95, 1.91234, -42.519, 0.22 ) }
    dend_33 { pt3dadd( -60.2899, 1.73983, -42.5125, 0.22 ) }
    dend_33 { pt3dadd( -60.9432, 1.44251, -42.5485, 1.03 ) }
    dend_33 { pt3dadd( -60.9992, 1.42318, -42.5569, 1.03 ) }
    dend_33 { pt3dadd( -61.3779, 1.315, -42.6234, 1.55 ) }
    dend_33 { pt3dadd( -61.7441, 1.23184, -42.6672, 1.77 ) }
    dend_33 { pt3dadd( -63.1304, 0.96646, -42.7797, 0.22 ) }
    dend_33 { pt3dadd( -64.0682, 0.81056, -42.8281, 0.22 ) }
    dend_33 { pt3dadd( -65.1716, 0.63335, -42.8571, 1.18 ) }
    dend_33 { pt3dadd( -66.0563, 0.4849, -42.8877, 1.47 ) }
    dend_33 { pt3dadd( -67.728, 0.20219, -42.9569, 0.22 ) }
    dend_33 { pt3dadd( -68.2348, 0.11584, -42.9761, 0.52 ) }
    dend_33 { pt3dadd( -68.5659, 0.0635798, -42.976, 0.52 ) }
    dend_33 { pt3dadd( -69.868, -0.1755, -42.9551, 0.22 ) }
    dend_33 { pt3dadd( -71.0495, -0.414346, -42.9037, 0.96 ) }
    dend_33 { pt3dadd( -71.633, -0.53337, -42.8684, 1.18 ) }
    dend_33 { pt3dadd( -71.6916, -0.545517, -42.8653, 1.18 ) }
    dend_33 { pt3dadd( -73.1837, -0.871241, -42.7586, 0.15 ) }
    dend_33 { pt3dadd( -73.8023, -1.01421, -42.7032, 0.15 ) }
    dend_33 { pt3dadd( -74.4961, -1.18275, -42.622, 0.96 ) }
    dend_33 { pt3dadd( -75.0703, -1.31037, -42.5437, 1.33 ) }
    dend_33 { pt3dadd( -75.7916, -1.43986, -42.4651, 1.03 ) }
    dend_33 { pt3dadd( -76.8106, -1.58529, -42.3923, 0.22 ) }
    dend_33 { pt3dadd( -77.4651, -1.64546, -42.3843, 0.22 ) }
    dend_33 { pt3dadd( -77.545, -1.64784, -42.3847, 0.22 ) }
    dend_33 { pt3dadd( -78.5412, -1.64543, -42.3894, 0.22 ) }
    dend_33 { pt3dadd( -79.3595, -1.6296, -42.383, 0.44 ) }
    dend_33 { pt3dadd( -79.5095, -1.62841, -42.3821, 0.44 ) }
    dend_33 { pt3dadd( -80.693, -1.63271, -42.3715, 0.22 ) }
    dend_33 { pt3dadd( -81.3573, -1.65641, -42.3792, 1.11 ) }
    dend_33 { pt3dadd( -82.1482, -1.71545, -42.4036, 1.69 ) }
    dend_33 { pt3dadd( -82.675, -1.77787, -42.4351, 1.92 ) }
    dend_33 { pt3dadd( -84.1189, -1.95572, -42.5574, 0.22 ) }
    dend_33 { pt3dadd( -85.066, -2.07762, -42.6745, 0.22 ) }
    dend_33 { pt3dadd( -85.8475, -2.20633, -42.7995, 0.22 ) }
    dend_33 { pt3dadd( -85.9723, -2.23324, -42.8233, 0.22 ) }
    dend_33 { pt3dadd( -86.9648, -2.49886, -43.0765, 1.4 ) }
    dend_33 { pt3dadd( -87.6574, -2.72074, -43.2819, 2.21 ) }
    dend_33 { pt3dadd( -88.5919, -3.08383, -43.5946, 0.96 ) }
    dend_33 { pt3dadd( -89.4476, -3.46032, -43.9137, 0.15 ) }
    dend_33 { pt3dadd( -89.9445, -3.68229, -44.1078, 0.15 ) }
    dend_33 { pt3dadd( -90.6146, -3.99726, -44.3695, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_33 { pt3dadd( -90.9308, -4.15562, -44.4937, 0.81 ) }
    dend_33 { pt3dadd( -91.3019, -4.3533, -44.6339, 1.25 ) }
    dend_33 { pt3dadd( -91.9714, -4.72273, -44.8272, 1.33 ) }
    dend_33 { pt3dadd( -93.4444, -5.54061, -45.1731, 0.22 ) }
    dend_33 { pt3dadd( -94.1569, -5.95941, -45.2912, 1.62 ) }
    dend_33 { pt3dadd( -94.5654, -6.22327, -45.3345, 1.99 ) }
    dend_33 { pt3dadd( -95.2395, -6.67054, -45.4043, 1.92 ) }
    dend_33 { pt3dadd( -96.5147, -7.54171, -45.5444, 0.29 ) }
    dend_33 { pt3dadd( -96.5704, -7.58272, -45.55, 0.29 ) }
    dend_33 { pt3dadd( -97.4607, -8.28819, -45.6436, 0.29 ) }
    dend_33 { pt3dadd( -98.0767, -8.80216, -45.7332, 0.29 ) }
    dend_33 { pt3dadd( -98.9187, -9.54751, -45.8876, 0.29 ) }
    dend_33 { pt3dadd( -99.4469, -10.0292, -46.0052, 0.29 ) }
    dend_33 { pt3dadd( -99.91, -10.4744, -46.1376, 0.66 ) }
    dend_33 { pt3dadd( -100.271, -10.843, -46.2365, 0.52 ) }
    dend_33 { pt3dadd( -100.857, -11.4971, -46.4061, 0.22 ) }
    dend_33 { pt3dadd( -101.213, -11.9191, -46.5013, 0.81 ) }
    dend_33 { pt3dadd( -101.607, -12.4008, -46.5921, 0.96 ) }
    dend_33 { pt3dadd( -102.522, -13.4554, -46.7834, 0.22 ) }
    dend_33 { pt3dadd( -103.051, -14.0261, -46.9061, 0.22 ) }
    dend_33 { pt3dadd( -103.351, -14.3193, -46.9779, 1.18 ) }
    dend_33 { pt3dadd( -103.772, -14.6869, -47.0825, 1.4 ) }
    dend_33 { pt3dadd( -104.202, -15.034, -47.1879, 1.4 ) }
    dend_33 { pt3dadd( -104.611, -15.3364, -47.2903, 1.03 ) }
    dend_33 { pt3dadd( -105.639, -16.0308, -47.5268, 0.22 ) }
    dend_33 { pt3dadd( -106.164, -16.3509, -47.6456, 0.22 ) }
    dend_33 { pt3dadd( -106.571, -16.5903, -47.7498, 0.29 ) }
    dend_33 { pt3dadd( -107.11, -16.9111, -47.9323, 0.29 ) }
    dend_33 { pt3dadd( -107.761, -17.3223, -48.1889, 0.37 ) }
    dend_33 { pt3dadd( -108.285, -17.6712, -48.4148, 0.37 ) }
    dend_33 { pt3dadd( -108.345, -17.7152, -48.4419, 0.37 ) }
    dend_33 { pt3dadd( -109.044, -18.3199, -48.8056, 0.29 ) }
    dend_33 { pt3dadd( -109.728, -18.9909, -49.2396, 1.77 ) }
    dend_33 { pt3dadd( -110.032, -19.3209, -49.4275, 2.36 ) }
    dend_33 { pt3dadd( -110.068, -19.3627, -49.4485, 2.36 ) }
    dend_33 { pt3dadd( -110.353, -19.6963, -49.5957, 2.65 ) }
    dend_33 { pt3dadd( -110.803, -20.2221, -49.7974, 2.58 ) }
    dend_33 { pt3dadd( -112.01, -21.5513, -50.2866, 0.29 ) }
    dend_33 { pt3dadd( -112.802, -22.2958, -50.6447, 0.22 ) }
    dend_33 { pt3dadd( -112.852, -22.3368, -50.6695, 0.22 ) }
    dend_33 { pt3dadd( -113.376, -22.7042, -50.9173, 0.22 ) }
    dend_33 { pt3dadd( -113.917, -23.0202, -51.1703, 0.88 ) }
    dend_33 { pt3dadd( -114.601, -23.3418, -51.4632, 0.59 ) }
    dend_33 { pt3dadd( -115.809, -23.7864, -51.9638, 0.22 ) }
    dend_33 { pt3dadd( -115.87, -23.8054, -51.9925, 0.22 ) }
    dend_33 { pt3dadd( -116.981, -24.1166, -52.4871, 0.22 ) }
    dend_33 { pt3dadd( -117.406, -24.2281, -52.6649, 1.11 ) }
    dend_33 { pt3dadd( -117.977, -24.3827, -52.877, 1.25 ) }
    dend_33 { pt3dadd( -118.492, -24.5436, -53.0422, 0.88 ) }
    dend_33 { pt3dadd( -119.906, -25.0255, -53.4522, 0.22 ) }
    dend_33 { pt3dadd( -120.775, -25.3418, -53.6976, 0.44 ) }
    dend_33 { pt3dadd( -121.775, -25.7241, -53.9784, 0.22 ) }
    dend_33 { pt3dadd( -122.238, -25.9421, -54.0794, 0.74 ) }
    dend_33 { pt3dadd( -123.17, -26.4888, -54.2313, 0.22 ) }
    dend_33 { pt3dadd( -123.958, -27.0505, -54.2969, 1.55 ) }
    dend_33 { pt3dadd( -124.448, -27.4834, -54.2797, 1.92 ) }
    dend_33 { pt3dadd( -124.505, -27.5383, -54.2761, 1.92 ) }
    dend_33 { pt3dadd( -125.713, -28.7186, -54.1453, 0.22 ) }
    dend_33 { pt3dadd( -126.163, -29.1017, -54.0981, 0.66 ) }
    dend_33 { pt3dadd( -126.755, -29.4604, -54.0486, 0.44 ) }
    dend_33 { pt3dadd( -126.828, -29.4916, -54.0458, 0.44 ) }
    dend_33 { pt3dadd( -127.641, -29.7426, -54.0568, 0.22 ) }
    dend_33 { pt3dadd( -127.962, -29.8303, -54.0745, 0.59 ) }
    dend_33 { pt3dadd( -128.832, -30.0239, -54.1542, 0.66 ) }
    dend_33 { pt3dadd( -130.022, -30.2993, -54.2422, 0.22 ) }
    dend_33 { pt3dadd( -130.718, -30.5009, -54.2946, 1.11 ) }
    dend_33 { pt3dadd( -131.162, -30.6647, -54.3358, 1.4 ) }
    dend_33 { pt3dadd( -132.554, -31.3116, -54.4828, 0.22 ) }
    dend_33 { pt3dadd( -132.964, -31.5371, -54.5402, 0.74 ) }
    dend_33 { pt3dadd( -133.685, -32.0136, -54.6665, 0.74 ) }
    dend_33 { pt3dadd( -134.877, -32.8593, -54.9087, 0.15 ) }
    dend_33 { pt3dadd( -135.6, -33.389, -55.0712, 1.33 ) }
    dend_33 { pt3dadd( -136.297, -33.9081, -55.2418, 1.4 ) }
    dend_33 { pt3dadd( -137.139, -34.5856, -55.4813, 0.22 ) }
    dend_33 { pt3dadd( -137.745, -35.0977, -55.6626, 0.22 ) }
    dend_33 { pt3dadd( -138.227, -35.5248, -55.8187, 0.22 ) }
    dend_33 { pt3dadd( -138.324, -35.6051, -55.8485, 0.22 ) }
    dend_33 { pt3dadd( -139.24, -36.2795, -56.1378, 0.66 ) }
    dend_33 { pt3dadd( -139.99, -36.7856, -56.4229, 0.22 ) }
    dend_33 { pt3dadd( -140.542, -37.1371, -56.6491, 0.22 ) }
    dend_33 { pt3dadd( -140.995, -37.4083, -56.8499, 0.66 ) }
    dend_33 { pt3dadd( -141.537, -37.7291, -57.0876, 0.74 ) }
    dend_33 { pt3dadd( -142.723, -38.4062, -57.598, 0.22 ) }
    dend_33 { pt3dadd( -143.646, -38.9164, -58.0019, 1.4 ) }
    dend_33 { pt3dadd( -144.167, -39.1841, -58.2224, 1.77 ) }
    dend_33 { pt3dadd( -145.613, -39.9096, -58.8672, 0.15 ) }
    dend_33 { pt3dadd( -146.593, -40.4318, -59.3426, 0.15 ) }
    dend_33 { pt3dadd( -147.312, -40.8262, -59.7282, 1.33 ) }
    dend_33 { pt3dadd( -147.407, -40.8764, -59.7804, 1.33 ) }
    dend_33 { pt3dadd( -147.888, -41.1259, -60.0522, 1.69 ) }
    dend_33 { pt3dadd( -149.341, -41.9039, -60.9634, 0.22 ) }
    dend_33 { pt3dadd( -150.094, -42.3188, -61.5102, 0.22 ) }
    dend_33 { pt3dadd( -151.143, -42.9224, -62.3102, 0.22 ) }
    dend_33 { pt3dadd( -151.844, -43.3555, -62.8346, 1.77 ) }
    dend_33 { pt3dadd( -151.894, -43.3883, -62.8708, 1.77 ) }
    dend_33 { pt3dadd( -152.453, -43.7643, -63.287, 1.55 ) }
    dend_33 { pt3dadd( -154.212, -44.9483, -64.547, 0.22 ) }
    dend_33 { pt3dadd( -154.985, -45.4782, -65.0907, 0.22 ) }
    dend_33 { pt3dadd( -155.53, -45.893, -65.5337, 1.18 ) }
    dend_33 { pt3dadd( -155.778, -46.0849, -65.7457, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_33 { pt3dadd( -157.417, -47.3276, -67.1657, 0.22 ) }
    dend_33 { pt3dadd( -158.474, -48.1051, -68.1016, 1.47 ) }
    dend_33 { pt3dadd( -158.761, -48.3154, -68.3654, 1.47 ) }
    dend_33 { pt3dadd( -160.433, -49.5314, -69.9469, 0.22 ) }
    dend_33 { pt3dadd( -160.909, -49.8808, -70.3938, 0.22 ) }
    dend_33 { pt3dadd( -160.954, -49.9164, -70.4327, 0.22 ) }
    dend_33 { pt3dadd( -161.737, -50.601, -70.978, 1.33 ) }
    dend_33 { pt3dadd( -162.016, -50.8492, -71.1199, 1.4 ) }
    dend_33 { pt3dadd( -162.936, -51.6728, -71.4467, 0.22 ) }
    dend_33 { pt3dadd( -163.152, -51.8719, -71.4886, 0.37 ) }
    dend_33 { pt3dadd( -164.183, -52.8611, -71.6637, 0.22 ) }
    dend_33 { pt3dadd( -165.15, -53.7845, -71.7895, 1.11 ) }
    dend_33 { pt3dadd( -166.188, -54.7755, -71.891, 0.22 ) }
    dend_33 { pt3dadd( -166.495, -55.0553, -71.9248, 1.11 ) }
    dend_33 { pt3dadd( -166.845, -55.3519, -71.966, 1.11 ) }
    dend_33 { pt3dadd( -167.907, -56.2128, -72.1068, 0.22 ) }
    dend_33 { pt3dadd( -169.004, -57.0618, -72.2714, 0.22 ) }
    dend_33 { pt3dadd( -169.601, -57.4881, -72.3695, 0.88 ) }
    dend_33 { pt3dadd( -170.511, -58.0691, -72.5323, 0.22 ) }
    dend_33 { pt3dadd( -170.638, -58.1449, -72.5527, 0.37 ) }
    dend_33 { pt3dadd( -171.164, -58.4504, -72.5669, 0.15 ) }
    dend_33 { pt3dadd( -171.355, -58.5558, -72.5448, 0.29 ) }
    dend_33 { pt3dadd( -172.513, -59.1846, -72.2977, 0.22 ) }
    dend_33 { pt3dadd( -173.052, -59.4796, -72.1513, 0.22 ) }
    dend_33 { pt3dadd( -174.062, -60.0501, -71.8291, 1.25 ) }
    dend_33 { pt3dadd( -175.82, -61.072, -71.2204, 0.22 ) }
    dend_33 { pt3dadd( -176.522, -61.4962, -70.9463, 1.33 ) }
    dend_33 { pt3dadd( -177.683, -62.2185, -70.439, 0.22 ) }
    dend_33 { pt3dadd( -178.091, -62.4816, -70.2215, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -23.9291, 18.1102, -39.9357, 0.22 ) }
    dend_32 { pt3dadd( -24.7461, 19.5846, -39.9553, 0.22 ) }
    dend_32 { pt3dadd( -25.4315, 20.8046, -39.952, 0.22 ) }
    dend_32 { pt3dadd( -25.9844, 21.7821, -39.945, 1.47 ) }
    dend_32 { pt3dadd( -26.2961, 22.3462, -39.9286, 1.77 ) }
    dend_32 { pt3dadd( -26.9747, 23.6287, -39.8735, 0.66 ) }
    dend_32 { pt3dadd( -27.3772, 24.4185, -39.8337, 1.55 ) }
    dend_32 { pt3dadd( -27.6089, 24.8879, -39.8061, 1.92 ) }
    dend_32 { pt3dadd( -27.6336, 24.9411, -39.8024, 1.92 ) }
    dend_32 { pt3dadd( -28.3555, 26.579, -39.6985, 0.15 ) }
    dend_32 { pt3dadd( -28.636, 27.2415, -39.6652, 0.66 ) }
    dend_32 { pt3dadd( -28.7455, 27.5136, -39.6554, 0.66 ) }
    dend_32 { pt3dadd( -29.2445, 28.773, -39.63, 0.22 ) }
    dend_32 { pt3dadd( -29.6593, 29.7819, -39.6179, 0.22 ) }
    dend_32 { pt3dadd( -29.6858, 29.8451, -39.6174, 0.22 ) }
    dend_32 { pt3dadd( -30.2193, 31.0773, -39.6789, 0.22 ) }
    dend_32 { pt3dadd( -30.6983, 32.2011, -39.7693, 1.62 ) }
    dend_32 { pt3dadd( -30.8706, 32.6201, -39.8109, 2.06 ) }
    dend_32 { pt3dadd( -31.0599, 33.0966, -39.8659, 1.92 ) }
    dend_32 { pt3dadd( -31.3125, 33.7937, -39.965, 1.25 ) }
    dend_32 { pt3dadd( -31.705, 35.0294, -40.1553, 0.22 ) }
    dend_32 { pt3dadd( -31.912, 35.7823, -40.2853, 0.22 ) }
    dend_32 { pt3dadd( -32.1163, 36.668, -40.4493, 0.59 ) }
    dend_32 { pt3dadd( -32.1908, 37.0628, -40.5169, 0.59 ) }
    dend_32 { pt3dadd( -32.3525, 38.1321, -40.6797, 0.22 ) }
    dend_32 { pt3dadd( -32.4702, 39.0448, -40.7909, 0.22 ) }
    dend_32 { pt3dadd( -32.4796, 39.1221, -40.7962, 0.22 ) }
    dend_32 { pt3dadd( -32.5451, 39.6502, -40.8392, 0.22 ) }
    dend_32 { pt3dadd( -32.675, 40.7892, -40.9382, 1.33 ) }
    dend_32 { pt3dadd( -32.7164, 41.1406, -40.9922, 1.4 ) }
    dend_32 { pt3dadd( -32.7919, 41.7391, -41.1278, 0.66 ) }
    dend_32 { pt3dadd( -32.8727, 42.3448, -41.2954, 0.22 ) }
    dend_32 { pt3dadd( -33.0397, 43.4675, -41.636, 1.69 ) }
    dend_32 { pt3dadd( -33.1101, 43.8675, -41.7787, 2.21 ) }
    dend_32 { pt3dadd( -33.363, 45.235, -42.3195, 0.81 ) }
    dend_32 { pt3dadd( -33.552, 46.2385, -42.7159, 0.22 ) }
    dend_32 { pt3dadd( -33.6728, 46.8666, -42.9588, 0.44 ) }
    dend_32 { pt3dadd( -33.7364, 47.1906, -43.0759, 0.52 ) }
    dend_32 { pt3dadd( -33.9645, 48.2697, -43.4081, 0.22 ) }
    dend_32 { pt3dadd( -34.1254, 49.0258, -43.5918, 0.22 ) }
    dend_32 { pt3dadd( -34.3071, 49.8578, -43.7267, 1.25 ) }
    dend_32 { pt3dadd( -34.4182, 50.3603, -43.7952, 1.55 ) }
    dend_32 { pt3dadd( -34.5232, 50.9215, -43.871, 1.33 ) }
    dend_32 { pt3dadd( -34.749, 52.2876, -44.0408, 0.22 ) }
    dend_32 { pt3dadd( -34.8974, 53.0529, -44.1229, 0.22 ) }
    dend_32 { pt3dadd( -35.1835, 54.3502, -44.2841, 1.62 ) }
    dend_32 { pt3dadd( -35.2694, 54.7273, -44.3336, 1.77 ) }
    dend_32 { pt3dadd( -35.7067, 56.6327, -44.5866, 0.22 ) }
    dend_32 { pt3dadd( -35.8682, 57.3365, -44.6777, 0.22 ) }
    dend_32 { pt3dadd( -36.1158, 58.4583, -44.8321, 0.22 ) }
    dend_32 { pt3dadd( -36.397, 59.8182, -45.0305, 0.22 ) }
    dend_32 { pt3dadd( -36.5616, 60.722, -45.1807, 0.81 ) }
    dend_32 { pt3dadd( -36.6381, 61.2148, -45.2757, 1.11 ) }
    dend_32 { pt3dadd( -36.7277, 61.9062, -45.4241, 0.88 ) }
    dend_32 { pt3dadd( -36.8409, 62.9695, -45.7318, 0.29 ) }
    dend_32 { pt3dadd( -36.8723, 63.3758, -45.8695, 0.29 ) }
    dend_32 { pt3dadd( -36.9863, 64.6212, -46.3483, 1.92 ) }
    dend_32 { pt3dadd( -37.0684, 65.4023, -46.6893, 2.43 ) }
    dend_32 { pt3dadd( -37.1218, 65.9849, -46.9589, 2.36 ) }
    dend_32 { pt3dadd( -37.2462, 67.8676, -47.8666, 0.22 ) }
    dend_32 { pt3dadd( -37.2883, 68.5918, -48.2125, 0.22 ) }
    dend_32 { pt3dadd( -37.2954, 68.6978, -48.2627, 0.22 ) }
    dend_32 { pt3dadd( -37.3482, 69.4255, -48.5982, 0.74 ) }
    dend_32 { pt3dadd( -37.4102, 70.0337, -48.8648, 0.74 ) }
    dend_32 { pt3dadd( -37.5119, 70.8349, -49.1792, 0.22 ) }
    dend_32 { pt3dadd( -37.6067, 71.4633, -49.3504, 0.37 ) }
    dend_32 { pt3dadd( -37.6938, 71.862, -49.4533, 0.37 ) }
    dend_32 { pt3dadd( -37.7089, 71.9267, -49.4693, 0.37 ) }
    dend_32 { pt3dadd( -37.8191, 72.3537, -49.5999, 0.37 ) }
    dend_32 { pt3dadd( -37.9201, 72.7073, -49.733, 0.22 ) }
    dend_32 { pt3dadd( -38.0185, 73.1949, -49.9398, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_32 { pt3dadd( -38.0355, 73.3109, -49.9893, 0.22 ) }
    dend_32 { pt3dadd( -38.1811, 74.2956, -50.384, 1.77 ) }
    dend_32 { pt3dadd( -38.3161, 75.1202, -50.6931, 2.14 ) }
    dend_32 { pt3dadd( -38.3872, 75.5032, -50.8296, 1.92 ) }
    dend_32 { pt3dadd( -38.7709, 77.2813, -51.4282, 0.29 ) }
    dend_32 { pt3dadd( -38.9253, 77.8529, -51.5984, 0.29 ) }
    dend_32 { pt3dadd( -39.1858, 78.6232, -51.7842, 0.22 ) }
    dend_32 { pt3dadd( -39.357, 79.0668, -51.8594, 0.59 ) }
    dend_32 { pt3dadd( -39.4661, 79.3607, -51.8899, 0.74 ) }
    dend_32 { pt3dadd( -39.492, 79.4343, -51.8956, 0.74 ) }
    dend_32 { pt3dadd( -39.7271, 80.1122, -51.9111, 0.37 ) }
    dend_32 { pt3dadd( -39.9977, 81.1102, -51.9484, 0.22 ) }
    dend_32 { pt3dadd( -40.162, 81.9269, -51.9859, 0.22 ) }
    dend_32 { pt3dadd( -40.2652, 82.5661, -52.0645, 0.29 ) }
    dend_32 { pt3dadd( -40.2754, 82.6326, -52.0765, 0.29 ) }
    dend_32 { pt3dadd( -40.3987, 83.2829, -52.2315, 0.29 ) }
    dend_32 { pt3dadd( -40.551, 84.0362, -52.4353, 1.25 ) }
    dend_32 { pt3dadd( -40.7239, 84.7939, -52.6472, 1.62 ) }
    dend_32 { pt3dadd( -40.9864, 85.7614, -52.9118, 1.84 ) }
    dend_32 { pt3dadd( -41.1816, 86.4778, -53.107, 1.55 ) }
    dend_32 { pt3dadd( -41.4826, 87.6446, -53.4196, 0.15 ) }
    dend_32 { pt3dadd( -41.7383, 88.7525, -53.6734, 0.15 ) }
    dend_32 { pt3dadd( -41.8587, 89.3143, -53.7741, 1.11 ) }
    dend_32 { pt3dadd( -41.9282, 89.6563, -53.8158, 1.55 ) }
    dend_32 { pt3dadd( -42.0641, 90.3354, -53.8475, 1.47 ) }
    dend_32 { pt3dadd( -42.0752, 90.3928, -53.8494, 1.47 ) }
    dend_32 { pt3dadd( -42.3077, 91.475, -53.906, 0.52 ) }
    dend_32 { pt3dadd( -42.4737, 92.0749, -53.9744, 0.22 ) }
    dend_32 { pt3dadd( -42.5921, 92.4539, -54.0305, 0.22 ) }
    dend_32 { pt3dadd( -42.7337, 92.8886, -54.1202, 0.59 ) }
    dend_32 { pt3dadd( -42.8885, 93.3201, -54.2361, 0.59 ) }
    dend_32 { pt3dadd( -43.2968, 94.2876, -54.5725, 0.22 ) }
    dend_32 { pt3dadd( -43.8033, 95.3179, -55.0062, 1.18 ) }
    dend_32 { pt3dadd( -43.973, 95.6377, -55.148, 1.55 ) }
    dend_32 { pt3dadd( -44.5026, 96.6375, -55.5877, 0.44 ) }
    dend_32 { pt3dadd( -44.8931, 97.3695, -55.8975, 0.22 ) }
    dend_32 { pt3dadd( -45.3003, 98.1403, -56.1883, 0.22 ) }
    dend_32 { pt3dadd( -45.5462, 98.6277, -56.3302, 0.22 ) }
    dend_32 { pt3dadd( -45.7239, 98.9921, -56.4122, 0.44 ) }
    dend_32 { pt3dadd( -46.0723, 99.7695, -56.5608, 0.44 ) }
    dend_32 { pt3dadd( -46.4262, 100.642, -56.6813, 0.22 ) }
    dend_32 { pt3dadd( -46.725, 101.529, -56.7783, 0.22 ) }
    dend_32 { pt3dadd( -47.0567, 102.639, -56.8842, 1.33 ) }
    dend_32 { pt3dadd( -47.231, 103.217, -56.9417, 1.4 ) }
    dend_32 { pt3dadd( -47.3924, 103.746, -56.9941, 0.96 ) }
    dend_32 { pt3dadd( -47.4091, 103.803, -57.0004, 0.96 ) }
    dend_32 { pt3dadd( -47.5753, 104.438, -57.0725, 0.22 ) }
    dend_32 { pt3dadd( -47.8501, 105.548, -57.2074, 0.22 ) }
    dend_32 { pt3dadd( -47.8647, 105.625, -57.2156, 0.22 ) }
    dend_32 { pt3dadd( -47.9477, 106.187, -57.2592, 0.22 ) }
    dend_32 { pt3dadd( -48.0767, 107.155, -57.3122, 0.74 ) }
    dend_32 { pt3dadd( -48.1282, 107.579, -57.3361, 0.96 ) }
    dend_32 { pt3dadd( -48.1763, 108.041, -57.3653, 0.59 ) }
    dend_32 { pt3dadd( -48.2984, 109.39, -57.4536, 0.22 ) }
    dend_32 { pt3dadd( -48.4309, 110.742, -57.5666, 0.22 ) }
    dend_32 { pt3dadd( -48.4497, 110.885, -57.5854, 0.22 ) }
    dend_32 { pt3dadd( -48.5572, 111.529, -57.6973, 0.22 ) }
    dend_32 { pt3dadd( -48.7242, 112.377, -57.8782, 1.62 ) }
    dend_32 { pt3dadd( -48.8196, 112.854, -58.0013, 2.06 ) }
    dend_32 { pt3dadd( -48.9949, 113.631, -58.251, 1.92 ) }
    dend_32 { pt3dadd( -49.3996, 115.394, -58.9151, 0.22 ) }
    dend_32 { pt3dadd( -49.5545, 116.116, -59.2364, 0.29 ) }
    dend_32 { pt3dadd( -49.6454, 116.565, -59.4737, 0.29 ) }
    dend_32 { pt3dadd( -49.7541, 117.071, -59.7985, 0.22 ) }
    dend_32 { pt3dadd( -49.9309, 117.824, -60.3871, 1.18 ) }
    dend_32 { pt3dadd( -50.0979, 118.423, -60.9497, 1.11 ) }
    dend_32 { pt3dadd( -50.4253, 119.396, -61.9887, 0.29 ) }
    dend_32 { pt3dadd( -50.7693, 120.229, -62.9471, 0.29 ) }
    dend_32 { pt3dadd( -51.3225, 121.403, -64.3266, 1.55 ) }
    dend_32 { pt3dadd( -51.6973, 122.117, -65.1734, 1.99 ) }
    dend_32 { pt3dadd( -52.3617, 123.294, -66.5583, 0.22 ) }
    dend_32 { pt3dadd( -52.6231, 123.725, -67.0409, 0.37 ) }
    dend_32 { pt3dadd( -53.0845, 124.461, -67.7957, 0.37 ) }
    dend_32 { pt3dadd( -53.4104, 125.005, -68.2892, 0.22 ) }
    dend_32 { pt3dadd( -53.8871, 125.871, -68.9231, 0.22 ) }
    dend_32 { pt3dadd( -54.1874, 126.498, -69.2878, 1.11 ) }
    dend_32 { pt3dadd( -54.4413, 127.092, -69.5747, 1.25 ) }
    dend_32 { pt3dadd( -54.6204, 127.544, -69.7731, 0.74 ) }
    dend_32 { pt3dadd( -54.9868, 128.469, -70.1291, 0.22 ) }
    dend_32 { pt3dadd( -55.2629, 129.079, -70.3577, 0.22 ) }
    dend_32 { pt3dadd( -55.6339, 129.814, -70.5876, 1.33 ) }
    dend_32 { pt3dadd( -55.8852, 130.294, -70.7264, 1.62 ) }
    dend_32 { pt3dadd( -56.0263, 130.553, -70.795, 1.77 ) }
    dend_32 { pt3dadd( -56.0556, 130.604, -70.8063, 1.77 ) }
    dend_32 { pt3dadd( -56.6197, 131.557, -71.0131, 0.29 ) }
    dend_32 { pt3dadd( -57.0454, 132.266, -71.1728, 0.29 ) }
    dend_32 { pt3dadd( -57.3982, 132.84, -71.2975, 0.66 ) }
    dend_32 { pt3dadd( -57.6581, 133.279, -71.3942, 0.88 ) }
    dend_32 { pt3dadd( -58.3851, 134.527, -71.659, 0.22 ) }
    dend_32 { pt3dadd( -58.7621, 135.16, -71.7833, 1.25 ) }
    dend_32 { pt3dadd( -58.9471, 135.471, -71.8372, 1.25 ) }
    dend_32 { pt3dadd( -59.2527, 135.99, -71.9222, 1.11 ) }
    dend_32 { pt3dadd( -59.8148, 136.941, -72.0924, 0.22 ) }
    dend_32 { pt3dadd( -60.1267, 137.473, -72.2026, 0.44 ) }
    dend_32 { pt3dadd( -60.3768, 137.915, -72.3017, 0.44 ) }
    dend_32 { pt3dadd( -60.7018, 138.49, -72.4777, 0.22 ) }
    dend_32 { pt3dadd( -61.1042, 139.148, -72.7455, 0.22 ) }
    dend_32 { pt3dadd( -61.6529, 139.965, -73.1743, 0.96 ) }
    dend_32 { pt3dadd( -61.9907, 140.417, -73.4779, 1.25 ) }
    dend_32 { pt3dadd( -62.0216, 140.458, -73.5089, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_32 { pt3dadd( -62.5435, 141.221, -74.2197, 0.52 ) }
    dend_32 { pt3dadd( -62.9056, 141.797, -74.7998, 0.22 ) }
    dend_32 { pt3dadd( -62.9492, 141.874, -74.8792, 0.22 ) }
    dend_32 { pt3dadd( -63.1497, 142.286, -75.2658, 1.18 ) }
    dend_32 { pt3dadd( -63.2882, 142.6, -75.531, 1.33 ) }
    dend_32 { pt3dadd( -63.8227, 144.122, -76.651, 0.22 ) }
    dend_32 { pt3dadd( -63.9577, 144.633, -76.9731, 0.29 ) }
    dend_32 { pt3dadd( -63.9686, 144.693, -77.0061, 0.29 ) }
    dend_32 { pt3dadd( -64.0419, 145.208, -77.2636, 0.37 ) }
    dend_32 { pt3dadd( -64.1336, 146.075, -77.6407, 0.22 ) }
    dend_32 { pt3dadd( -64.2179, 146.963, -77.9865, 1.25 ) }
    dend_32 { pt3dadd( -64.2398, 147.232, -78.0725, 1.55 ) }
    dend_32 { pt3dadd( -64.2769, 147.911, -78.2886, 1.03 ) }
    dend_32 { pt3dadd( -64.3355, 149.146, -78.6924, 0.22 ) }
    dend_32 { pt3dadd( -64.3662, 149.829, -78.9106, 0.22 ) }
    dend_32 { pt3dadd( -64.396, 150.389, -79.0802, 0.74 ) }
    dend_32 { pt3dadd( -64.4084, 150.529, -79.1223, 0.74 ) }
    dend_32 { pt3dadd( -64.4573, 151.007, -79.2593, 0.74 ) }
    dend_32 { pt3dadd( -64.5435, 152.154, -79.5989, 0.22 ) }
    dend_32 { pt3dadd( -64.5767, 152.799, -79.7729, 0.22 ) }
    dend_32 { pt3dadd( -64.5782, 152.857, -79.7878, 0.22 ) }
    dend_32 { pt3dadd( -64.5873, 154.066, -80.0832, 0.74 ) }
    dend_32 { pt3dadd( -64.5797, 154.928, -80.279, 1.33 ) }
    dend_32 { pt3dadd( -64.5461, 156.113, -80.5644, 0.22 ) }
    dend_32 { pt3dadd( -64.4949, 157.083, -80.7928, 1.11 ) }
    dend_32 { pt3dadd( -64.4823, 157.292, -80.8433, 1.4 ) }
    dend_32 { pt3dadd( -64.4672, 157.566, -80.9087, 1.62 ) }
    dend_32 { pt3dadd( -64.4322, 158.327, -81.0838, 1.03 ) }
    dend_32 { pt3dadd( -64.404, 159.152, -81.2858, 0.44 ) }
    dend_32 { pt3dadd( -64.401, 159.779, -81.4308, 0.29 ) }
    dend_32 { pt3dadd( -64.3866, 160.548, -81.6172, 0.52 ) }
    dend_32 { pt3dadd( -64.3839, 160.822, -81.6847, 0.88 ) }
    dend_32 { pt3dadd( -64.4166, 161.449, -81.833, 0.52 ) }
    dend_32 { pt3dadd( -64.4732, 162.182, -81.9895, 0.22 ) }
    dend_32 { pt3dadd( -64.5355, 162.743, -82.107, 0.52 ) }
    dend_32 { pt3dadd( -64.592, 163.152, -82.2072, 0.52 ) }
    dend_32 { pt3dadd( -64.6915, 163.786, -82.3688, 0.29 ) }
    dend_32 { pt3dadd( -64.8477, 164.676, -82.6094, 0.29 ) }
    dend_32 { pt3dadd( -64.9907, 165.296, -82.7844, 0.22 ) }
    dend_32 { pt3dadd( -65.2505, 166.193, -83.0309, 1.18 ) }
    dend_32 { pt3dadd( -65.395, 166.654, -83.1583, 1.4 ) }
    dend_32 { pt3dadd( -65.6578, 167.382, -83.3492, 0.81 ) }
    dend_32 { pt3dadd( -66.0001, 168.214, -83.5504, 0.22 ) }
    dend_32 { pt3dadd( -66.3984, 169.103, -83.7511, 1.11 ) }
    dend_32 { pt3dadd( -66.6362, 169.549, -83.8401, 1.11 ) }
    dend_32 { pt3dadd( -66.9619, 170.103, -83.9239, 0.81 ) }
    dend_32 { pt3dadd( -67.4392, 170.874, -84.0536, 0.22 ) }
    dend_32 { pt3dadd( -67.7029, 171.283, -84.1222, 0.22 ) }
    dend_32 { pt3dadd( -67.8449, 171.525, -84.168, 0.44 ) }
    dend_32 { pt3dadd( -67.9172, 171.667, -84.1993, 0.44 ) }
    dend_32 { pt3dadd( -68.0113, 171.868, -84.2481, 0.44 ) }
    dend_32 { pt3dadd( -68.3385, 172.577, -84.4667, 0.22 ) }
    dend_32 { pt3dadd( -68.6664, 173.352, -84.7242, 0.22 ) }
    dend_32 { pt3dadd( -69.1714, 174.458, -85.2494, 0.88 ) }
    dend_32 { pt3dadd( -69.4217, 174.971, -85.5351, 1.4 ) }
    dend_32 { pt3dadd( -69.6465, 175.398, -85.7927, 1.69 ) }
    dend_32 { pt3dadd( -70.0676, 176.087, -86.2472, 1.69 ) }
    dend_32 { pt3dadd( -70.4015, 176.564, -86.5927, 1.33 ) }
    dend_32 { pt3dadd( -71.6365, 178.137, -87.9068, 0.22 ) }
    dend_32 { pt3dadd( -71.6752, 178.178, -87.9461, 0.22 ) }
    dend_32 { pt3dadd( -72.0899, 178.589, -88.3601, 0.29 ) }
    dend_32 { pt3dadd( -72.5973, 179.04, -88.8251, 0.22 ) }
    dend_32 { pt3dadd( -72.6621, 179.094, -88.8747, 0.22 ) }
    dend_32 { pt3dadd( -72.8961, 179.296, -89.0165, 0.22 ) }
    dend_32 { pt3dadd( -73.2705, 179.639, -89.1439, 0.59 ) }
    dend_32 { pt3dadd( -73.3248, 179.689, -89.1726, 0.59 ) }
    dend_32 { pt3dadd( -73.6283, 179.98, -89.3729, 0.88 ) }
    dend_32 { pt3dadd( -74.2002, 180.583, -89.7784, 0.22 ) }
    dend_32 { pt3dadd( -74.7131, 181.104, -90.1257, 1.18 ) }
    dend_32 { pt3dadd( -75.1516, 181.542, -90.4097, 1.18 ) }
    dend_32 { pt3dadd( -76.301, 182.54, -91.0895, 0.22 ) }
    dend_32 { pt3dadd( -76.3509, 182.579, -91.1173, 0.22 ) }
    dend_32 { pt3dadd( -77.0825, 183.113, -91.4944, 0.22 ) }
    dend_32 { pt3dadd( -77.8877, 183.659, -91.8616, 1.33 ) }
    dend_32 { pt3dadd( -78.2058, 183.876, -91.9936, 1.62 ) }
    dend_32 { pt3dadd( -79.6828, 184.936, -92.5038, 0.22 ) }
    dend_32 { pt3dadd( -79.7366, 184.978, -92.5179, 0.22 ) }
    dend_32 { pt3dadd( -80.2133, 185.35, -92.6369, 0.59 ) }
    dend_32 { pt3dadd( -80.6065, 185.682, -92.749, 0.59 ) }
    dend_32 { pt3dadd( -81.4983, 186.56, -93.0234, 0.22 ) }
    dend_32 { pt3dadd( -81.9339, 187.04, -93.1664, 0.22 ) }
    dend_32 { pt3dadd( -82.3468, 187.574, -93.3066, 1.11 ) }
    dend_32 { pt3dadd( -82.8591, 188.257, -93.487, 1.55 ) }
    dend_32 { pt3dadd( -83.5301, 189.202, -93.7494, 0.22 ) }
    dend_32 { pt3dadd( -83.813, 189.626, -93.8646, 0.81 ) }
    dend_32 { pt3dadd( -83.8478, 189.684, -93.8789, 0.81 ) }
    dend_32 { pt3dadd( -84.018, 189.988, -93.9567, 1.11 ) }
    dend_32 { pt3dadd( -84.1589, 190.305, -94.0357, 1.25 ) }
    dend_32 { pt3dadd( -84.4492, 191.363, -94.2721, 0.22 ) }
    dend_32 { pt3dadd( -84.5511, 191.896, -94.3706, 0.52 ) }
    dend_32 { pt3dadd( -84.5797, 192.094, -94.4166, 0.52 ) }
    dend_32 { pt3dadd( -84.5899, 192.169, -94.4352, 0.52 ) }
    dend_32 { pt3dadd( -84.7681, 193.241, -94.7799, 0.22 ) }
    dend_32 { pt3dadd( -84.9476, 194.174, -95.1764, 1.18 ) }
    dend_32 { pt3dadd( -85.0001, 194.421, -95.3095, 1.47 ) }
    dend_32 { pt3dadd( -85.2811, 195.561, -96.0708, 0.22 ) }
    dend_32 { pt3dadd( -85.4317, 196.107, -96.4559, 0.44 ) }
    dend_32 { pt3dadd( -85.8153, 197.311, -97.3643, 0.22 ) }
    dend_32 { pt3dadd( -86.1303, 198.104, -98.0427, 0.44 ) }
    dend_32 { pt3dadd( -86.4654, 198.883, -98.7928, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_32 { pt3dadd( -86.7732, 199.59, -99.5367, 1.03 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 110.56, 166.906, -75.0629, 0.22 ) }
    dend_23 { pt3dadd( 112.618, 166.937, -74.5288, 0.22 ) }
    dend_23 { pt3dadd( 112.872, 166.945, -74.4703, 0.22 ) }
    dend_23 { pt3dadd( 114.176, 167.036, -74.2921, 0.22 ) }
    dend_23 { pt3dadd( 114.281, 167.049, -74.2828, 0.22 ) }
    dend_23 { pt3dadd( 115.209, 167.178, -74.2223, 1.25 ) }
    dend_23 { pt3dadd( 115.618, 167.275, -74.2052, 1.4 ) }
    dend_23 { pt3dadd( 115.693, 167.303, -74.2093, 1.4 ) }
    dend_23 { pt3dadd( 117.099, 168.014, -74.2865, 0.22 ) }
    dend_23 { pt3dadd( 117.608, 168.365, -74.3256, 0.96 ) }
    dend_23 { pt3dadd( 117.69, 168.43, -74.3329, 0.96 ) }
    dend_23 { pt3dadd( 119.041, 169.678, -74.5028, 0.22 ) }
    dend_23 { pt3dadd( 119.311, 169.956, -74.5497, 0.29 ) }
    dend_23 { pt3dadd( 119.726, 170.411, -74.634, 0.22 ) }
    dend_23 { pt3dadd( 120.371, 171.122, -74.753, 0.96 ) }
    dend_23 { pt3dadd( 120.872, 171.62, -74.8377, 1.25 ) }
    dend_23 { pt3dadd( 121.853, 172.521, -74.9928, 0.22 ) }
    dend_23 { pt3dadd( 122.573, 173.13, -75.1001, 0.88 ) }
    dend_23 { pt3dadd( 123.004, 173.467, -75.1541, 0.88 ) }
    dend_23 { pt3dadd( 124.344, 174.432, -75.3137, 0.22 ) }
    dend_23 { pt3dadd( 125.142, 174.954, -75.3976, 1.11 ) }
    dend_23 { pt3dadd( 125.2, 174.992, -75.4052, 1.11 ) }
    dend_23 { pt3dadd( 125.601, 175.262, -75.4699, 1.25 ) }
    dend_23 { pt3dadd( 126.067, 175.611, -75.5661, 1.25 ) }
    dend_23 { pt3dadd( 127.208, 176.588, -75.9736, 0.22 ) }
    dend_23 { pt3dadd( 127.522, 176.889, -76.1276, 0.44 ) }
    dend_23 { pt3dadd( 128.052, 177.439, -76.4256, 0.22 ) }
    dend_23 { pt3dadd( 128.68, 178.126, -76.7999, 1.33 ) }
    dend_23 { pt3dadd( 129.036, 178.525, -77.0219, 1.47 ) }
    dend_23 { pt3dadd( 130.039, 179.719, -77.6912, 0.22 ) }
    dend_23 { pt3dadd( 130.458, 180.238, -77.9605, 0.59 ) }
    dend_23 { pt3dadd( 130.806, 180.652, -78.1549, 0.22 ) }
    dend_23 { pt3dadd( 131.272, 181.161, -78.3655, 0.88 ) }
    dend_23 { pt3dadd( 131.524, 181.413, -78.4495, 0.88 ) }
    dend_23 { pt3dadd( 131.612, 181.491, -78.4647, 0.88 ) }
    dend_23 { pt3dadd( 132.406, 182.161, -78.5123, 0.22 ) }
    dend_23 { pt3dadd( 132.927, 182.589, -78.541, 0.22 ) }
    dend_23 { pt3dadd( 132.981, 182.633, -78.5435, 0.22 ) }
    dend_23 { pt3dadd( 133.599, 183.182, -78.59, 1.47 ) }
    dend_23 { pt3dadd( 135.02, 184.549, -78.7337, 0.22 ) }
    dend_23 { pt3dadd( 135.663, 185.258, -78.8068, 0.74 ) }
    dend_23 { pt3dadd( 135.754, 185.374, -78.8202, 0.74 ) }
    dend_23 { pt3dadd( 135.979, 185.73, -78.8585, 0.74 ) }
    dend_23 { pt3dadd( 136.42, 186.594, -78.9442, 0.22 ) }
    dend_23 { pt3dadd( 136.49, 186.807, -78.9513, 0.37 ) }
    dend_23 { pt3dadd( 136.674, 187.874, -78.9445, 0.22 ) }
    dend_23 { pt3dadd( 136.683, 187.951, -78.9411, 0.22 ) }
    dend_23 { pt3dadd( 136.799, 189.006, -78.8711, 0.22 ) }
    dend_23 { pt3dadd( 136.806, 189.083, -78.8627, 0.22 ) }
    dend_23 { pt3dadd( 136.851, 190.396, -78.6102, 0.81 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 51/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 110.56, 166.906, -75.0629, 0.74 ) }
    dend_22 { pt3dadd( 113.43, 163.667, -78.9906, 0.74 ) }
    dend_22 { pt3dadd( 114.261, 162.728, -79.9402, 0.29 ) }
    dend_22 { pt3dadd( 115.231, 161.628, -80.14, 0.22 ) }
    dend_22 { pt3dadd( 115.767, 161.029, -79.8778, 0.44 ) }
    dend_22 { pt3dadd( 116.44, 160.286, -79.2454, 0.52 ) }
    dend_22 { pt3dadd( 116.543, 160.174, -79.1357, 0.52 ) }
    dend_22 { pt3dadd( 117.365, 159.34, -77.9, 0.22 ) }
    dend_22 { pt3dadd( 117.582, 159.131, -77.5416, 0.59 ) }
    dend_22 { pt3dadd( 117.625, 159.098, -77.4836, 0.59 ) }
    dend_22 { pt3dadd( 118.611, 158.491, -76.3786, 0.22 ) }
    dend_22 { pt3dadd( 118.656, 158.463, -76.3329, 0.22 ) }
    dend_22 { pt3dadd( 119.664, 157.889, -75.4103, 0.22 ) }
    dend_22 { pt3dadd( 119.707, 157.867, -75.3765, 0.22 ) }
    dend_22 { pt3dadd( 120.853, 157.31, -74.4826, 0.74 ) }
    dend_22 { pt3dadd( 121.904, 156.835, -73.7026, 0.88 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 33.8386, 37.8255, -23.9717, 0.22 ) }
    dend_17 { pt3dadd( 34.9501, 39.4079, -23.3935, 0.22 ) }
    dend_17 { pt3dadd( 35.4137, 40.0527, -23.2143, 0.22 ) }
    dend_17 { pt3dadd( 36.1011, 40.88, -23.0068, 1.18 ) }
    dend_17 { pt3dadd( 36.5219, 41.3258, -22.9048, 1.77 ) }
    dend_17 { pt3dadd( 37.1054, 41.9013, -22.781, 2.06 ) }
    dend_17 { pt3dadd( 37.4406, 42.2166, -22.7174, 2.06 ) }
    dend_17 { pt3dadd( 38.9673, 43.481, -22.5759, 0.22 ) }
    dend_17 { pt3dadd( 39.7569, 44.0812, -22.519, 0.22 ) }
    dend_17 { pt3dadd( 40.4532, 44.5732, -22.4903, 0.52 ) }
    dend_17 { pt3dadd( 40.5891, 44.6728, -22.4871, 0.52 ) }
    dend_17 { pt3dadd( 40.9913, 44.9882, -22.4871, 0.52 ) }
    dend_17 { pt3dadd( 41.0526, 45.0384, -22.4871, 0.52 ) }
    dend_17 { pt3dadd( 41.6827, 45.5712, -22.4871, 0.44 ) }
    dend_17 { pt3dadd( 42.3454, 46.1595, -22.4871, 0.37 ) }
    dend_17 { pt3dadd( 43.3217, 46.9579, -22.4871, 0.22 ) }
    dend_17 { pt3dadd( 43.3856, 47.0049, -22.4871, 0.22 ) }
    dend_17 { pt3dadd( 43.7531, 47.2408, -22.4871, 0.37 ) }
    dend_17 { pt3dadd( 44.0773, 47.4145, -22.478, 0.37 ) }
    dend_17 { pt3dadd( 44.7713, 47.7009, -22.4319, 0.37 ) }
    dend_17 { pt3dadd( 45.3849, 47.8984, -22.3775, 0.22 ) }
    dend_17 { pt3dadd( 45.5902, 47.9489, -22.3642, 0.22 ) }
    dend_17 { pt3dadd( 46.6225, 48.1873, -22.3097, 0.22 ) }
    dend_17 { pt3dadd( 47.9563, 48.4451, -22.251, 2.14 ) }
    dend_17 { pt3dadd( 48.8579, 48.5924, -22.2176, 2.87 ) }
    dend_17 { pt3dadd( 49.3788, 48.664, -22.2073, 2.73 ) }
    dend_17 { pt3dadd( 51.3978, 48.8585, -22.1959, 0.22 ) }
    dend_17 { pt3dadd( 51.4675, 48.8647, -22.1991, 0.22 ) }
    dend_17 { pt3dadd( 52.2937, 48.9405, -22.2857, 0.22 ) }
    dend_17 { pt3dadd( 52.3621, 48.9489, -22.298, 0.22 ) }
    dend_17 { pt3dadd( 53.2683, 49.1344, -22.5056, 0.44 ) }
    dend_17 { pt3dadd( 53.3215, 49.154, -22.5247, 0.44 ) }
    dend_17 { pt3dadd( 54.5701, 49.8893, -23.1416, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( 54.9005, 50.1064, -23.3048, 0.74 ) }
    dend_17 { pt3dadd( 54.9616, 50.1482, -23.3336, 0.74 ) }
    dend_17 { pt3dadd( 55.4058, 50.458, -23.5479, 0.74 ) }
    dend_17 { pt3dadd( 56.5649, 51.2883, -24.1273, 0.22 ) }
    dend_17 { pt3dadd( 57.0592, 51.6367, -24.3725, 0.22 ) }
    dend_17 { pt3dadd( 58.3773, 52.5312, -24.999, 1.92 ) }
    dend_17 { pt3dadd( 59.0175, 52.9435, -25.2989, 2.87 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 7/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 33.8386, 37.8255, -23.9717, 0.22 ) }
    dend_16 { pt3dadd( 35.9825, 37.8458, -24.3023, 0.22 ) }
    dend_16 { pt3dadd( 36.7013, 37.8243, -24.4945, 0.66 ) }
    dend_16 { pt3dadd( 37.6854, 37.7632, -24.847, 0.22 ) }
    dend_16 { pt3dadd( 38.2509, 37.7113, -25.0658, 0.22 ) }
    dend_16 { pt3dadd( 38.996, 37.6053, -25.4157, 0.22 ) }
    dend_16 { pt3dadd( 39.7452, 37.4622, -25.8099, 0.96 ) }
    dend_16 { pt3dadd( 41.3229, 37.097, -26.8296, 0.22 ) }
    dend_16 { pt3dadd( 42.2147, 36.8753, -27.5753, 0.81 ) }
    dend_16 { pt3dadd( 42.5365, 36.8083, -27.9054, 0.81 ) }
    dend_16 { pt3dadd( 43.7611, 36.6593, -29.5603, 0.22 ) }
    dend_16 { pt3dadd( 44.4731, 36.6275, -30.7288, 0.22 ) }
    dend_16 { pt3dadd( 45.1709, 36.6352, -32.0774, 2.06 ) }
    dend_16 { pt3dadd( 46.3897, 36.7157, -34.7195, 1.18 ) }
    dend_16 { pt3dadd( 47.1832, 36.8238, -36.5175, 1.77 ) }
    dend_16 { pt3dadd( 48.3397, 37.0327, -39.235, 1.77 ) }
    dend_16 { pt3dadd( 48.4136, 37.0495, -39.4092, 1.77 ) }
    dend_16 { pt3dadd( 49.9852, 37.4201, -42.9991, 0.22 ) }
    dend_16 { pt3dadd( 51.0917, 37.6457, -45.3348, 0.22 ) }
    dend_16 { pt3dadd( 51.6304, 37.7375, -46.379, 1.47 ) }
    dend_16 { pt3dadd( 51.9287, 37.766, -46.8926, 1.62 ) }
    dend_16 { pt3dadd( 53.1953, 37.8495, -48.7061, 0.22 ) }
    dend_16 { pt3dadd( 53.5459, 37.8811, -49.1862, 0.74 ) }
    dend_16 { pt3dadd( 53.8774, 37.9445, -49.5751, 0.81 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 31/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 30.9078, 67.6614, -28.3177, 0.22 ) }
    dend_14 { pt3dadd( 31.1628, 68.9198, -28.3417, 0.22 ) }
    dend_14 { pt3dadd( 31.1755, 68.9869, -28.3443, 0.22 ) }
    dend_14 { pt3dadd( 31.3258, 69.8342, -28.382, 0.29 ) }
    dend_14 { pt3dadd( 31.5148, 70.6578, -28.461, 0.22 ) }
    dend_14 { pt3dadd( 31.7038, 71.3662, -28.5413, 0.22 ) }
    dend_14 { pt3dadd( 32.0182, 72.4807, -28.6979, 1.25 ) }
    dend_14 { pt3dadd( 32.1166, 72.7881, -28.7563, 1.84 ) }
    dend_14 { pt3dadd( 32.4267, 73.7292, -28.9435, 1.18 ) }
    dend_14 { pt3dadd( 32.9048, 75.1793, -29.2391, 0.22 ) }
    dend_14 { pt3dadd( 33.2622, 76.2605, -29.4536, 0.22 ) }
    dend_14 { pt3dadd( 33.5833, 77.0895, -29.6272, 0.74 ) }
    dend_14 { pt3dadd( 33.6103, 77.1511, -29.6402, 0.74 ) }
    dend_14 { pt3dadd( 33.846, 77.6421, -29.7384, 0.74 ) }
    dend_14 { pt3dadd( 34.17, 78.2699, -29.8541, 0.22 ) }
    dend_14 { pt3dadd( 34.4124, 78.7107, -29.9118, 0.37 ) }
    dend_14 { pt3dadd( 35.0974, 79.7654, -30.0973, 0.22 ) }
    dend_14 { pt3dadd( 35.2245, 79.9373, -30.1316, 0.22 ) }
    dend_14 { pt3dadd( 35.8512, 80.7346, -30.3176, 0.22 ) }
    dend_14 { pt3dadd( 35.896, 80.7846, -30.3338, 0.22 ) }
    dend_14 { pt3dadd( 36.5991, 81.4705, -30.6493, 0.22 ) }
    dend_14 { pt3dadd( 37.4902, 82.2678, -31.1833, 0.22 ) }
    dend_14 { pt3dadd( 37.8737, 82.5872, -31.4547, 1.25 ) }
    dend_14 { pt3dadd( 37.9269, 82.629, -31.4964, 1.25 ) }
    dend_14 { pt3dadd( 38.6717, 83.192, -32.1265, 1.92 ) }
    dend_14 { pt3dadd( 39.3227, 83.7024, -32.6844, 1.69 ) }
    dend_14 { pt3dadd( 40.0276, 84.3045, -33.3281, 1.11 ) }
    dend_14 { pt3dadd( 40.2563, 84.5397, -33.5879, 0.52 ) }
    dend_14 { pt3dadd( 40.7397, 85.1941, -34.2955, 0.96 ) }
    dend_14 { pt3dadd( 40.901, 85.4713, -34.5756, 1.25 ) }
    dend_14 { pt3dadd( 41.1215, 85.973, -35.041, 0.96 ) }
    dend_14 { pt3dadd( 41.7038, 87.5975, -36.4386, 0.29 ) }
    dend_14 { pt3dadd( 42.0988, 88.8749, -37.4758, 0.59 ) }
    dend_14 { pt3dadd( 42.3958, 89.9543, -38.3258, 1.11 ) }
    dend_14 { pt3dadd( 42.4776, 90.3456, -38.6646, 1.4 ) }
    dend_14 { pt3dadd( 42.6813, 91.6626, -39.8628, 0.22 ) }
    dend_14 { pt3dadd( 42.745, 92.3722, -40.6071, 1.47 ) }
    dend_14 { pt3dadd( 42.7446, 92.5696, -40.8297, 1.69 ) }
    dend_14 { pt3dadd( 42.7311, 92.973, -41.2728, 1.55 ) }
    dend_14 { pt3dadd( 42.5, 95.0676, -43.64, 0.59 ) }
    dend_14 { pt3dadd( 42.4308, 95.4051, -44.0312, 0.44 ) }
    dend_14 { pt3dadd( 42.036, 96.617, -45.4222, 0.44 ) }
    dend_14 { pt3dadd( 41.6398, 97.4901, -46.414, 0.29 ) }
    dend_14 { pt3dadd( 41.1408, 98.4171, -47.4275, 0.29 ) }
    dend_14 { pt3dadd( 40.9238, 98.7588, -47.7631, 0.22 ) }
    dend_14 { pt3dadd( 40.3812, 99.5125, -48.3509, 1.18 ) }
    dend_14 { pt3dadd( 39.9904, 99.9965, -48.7133, 1.4 ) }
    dend_14 { pt3dadd( 38.8641, 101.265, -49.5852, 0.15 ) }
    dend_14 { pt3dadd( 38.8202, 101.307, -49.6183, 0.15 ) }
    dend_14 { pt3dadd( 38.3027, 101.781, -50.0432, 0.15 ) }
    dend_14 { pt3dadd( 37.7064, 102.371, -50.5724, 0.15 ) }
    dend_14 { pt3dadd( 36.7811, 103.391, -51.4064, 0.15 ) }
    dend_14 { pt3dadd( 36.2398, 104.047, -51.9171, 1.99 ) }
    dend_14 { pt3dadd( 35.6658, 104.811, -52.4749, 2.28 ) }
    dend_14 { pt3dadd( 34.5701, 106.364, -53.5669, 0.37 ) }
    dend_14 { pt3dadd( 33.9981, 107.253, -54.171, 0.29 ) }
    dend_14 { pt3dadd( 33.5079, 108.121, -54.7158, 0.22 ) }
    dend_14 { pt3dadd( 33.2686, 108.668, -55.0604, 0.22 ) }
    dend_14 { pt3dadd( 33.2518, 108.715, -55.0896, 0.22 ) }
    dend_14 { pt3dadd( 32.938, 109.952, -55.7912, 0.22 ) }
    dend_14 { pt3dadd( 32.7843, 110.862, -56.2846, 1.18 ) }
    dend_14 { pt3dadd( 32.7346, 111.31, -56.539, 1.18 ) }
    dend_14 { pt3dadd( 32.6363, 113.115, -57.6196, 0.29 ) }
    dend_14 { pt3dadd( 32.629, 114.068, -58.2073, 0.29 ) }
    dend_14 { pt3dadd( 32.6486, 114.586, -58.4827, 0.29 ) }
    dend_14 { pt3dadd( 32.7838, 115.778, -58.997, 1.4 ) }
    dend_14 { pt3dadd( 32.8372, 116.102, -59.1129, 1.99 ) }
    dend_14 { pt3dadd( 32.8475, 116.157, -59.1287, 1.99 ) }
    dend_14 { pt3dadd( 32.999, 116.806, -59.2554, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_14 { pt3dadd( 33.5479, 118.806, -59.6305, 0.37 ) }
    dend_14 { pt3dadd( 33.8061, 119.649, -59.794, 0.59 ) }
    dend_14 { pt3dadd( 34.2538, 120.949, -60.0235, 0.29 ) }
    dend_14 { pt3dadd( 34.5435, 121.739, -60.1667, 0.88 ) }
    dend_14 { pt3dadd( 34.5814, 121.834, -60.1867, 0.88 ) }
    dend_14 { pt3dadd( 34.6474, 121.974, -60.2207, 0.88 ) }
    dend_14 { pt3dadd( 35.2115, 122.97, -60.5656, 0.29 ) }
    dend_14 { pt3dadd( 35.7634, 123.851, -60.9002, 0.29 ) }
    dend_14 { pt3dadd( 36.0659, 124.269, -61.082, 0.66 ) }
    dend_14 { pt3dadd( 36.6863, 125.045, -61.4795, 0.22 ) }
    dend_14 { pt3dadd( 37.1908, 125.656, -61.8517, 1.77 ) }
    dend_14 { pt3dadd( 37.2578, 125.737, -61.9063, 1.77 ) }
    dend_14 { pt3dadd( 37.6219, 126.196, -62.2723, 1.69 ) }
    dend_14 { pt3dadd( 38.1489, 126.875, -62.8492, 0.59 ) }
    dend_14 { pt3dadd( 38.358, 127.156, -63.0906, 0.59 ) }
    dend_14 { pt3dadd( 38.848, 127.874, -63.6761, 0.29 ) }
    dend_14 { pt3dadd( 39.1077, 128.294, -63.9918, 0.66 ) }
    dend_14 { pt3dadd( 39.88, 129.624, -64.898, 0.22 ) }
    dend_14 { pt3dadd( 40.4288, 130.645, -65.5557, 0.22 ) }
    dend_14 { pt3dadd( 40.4789, 130.745, -65.617, 0.22 ) }
    dend_14 { pt3dadd( 40.8061, 131.374, -66.0207, 1.18 ) }
    dend_14 { pt3dadd( 41.019, 131.777, -66.2779, 1.18 ) }
    dend_14 { pt3dadd( 41.6458, 132.926, -67.0554, 0.29 ) }
    dend_14 { pt3dadd( 42.1365, 133.82, -67.7047, 1.03 ) }
    dend_14 { pt3dadd( 42.3102, 134.13, -67.9647, 1.62 ) }
    dend_14 { pt3dadd( 43.1046, 135.535, -69.2346, 0.22 ) }
    dend_14 { pt3dadd( 43.2394, 135.781, -69.4683, 0.52 ) }
    dend_14 { pt3dadd( 43.7103, 136.624, -70.3042, 0.22 ) }
    dend_14 { pt3dadd( 44.0966, 137.301, -71.0013, 1.03 ) }
    dend_14 { pt3dadd( 44.543, 138.083, -71.8249, 0.22 ) }
    dend_14 { pt3dadd( 44.8926, 138.719, -72.5311, 1.55 ) }
    dend_14 { pt3dadd( 45.083, 139.148, -73.0207, 1.62 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 32/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 30.9078, 67.6614, -28.3177, 1.33 ) }
    dend_13 { pt3dadd( 31.3587, 68.2019, -28.3925, 1.33 ) }
    dend_13 { pt3dadd( 31.404, 68.2529, -28.4028, 1.33 ) }
    dend_13 { pt3dadd( 31.7587, 68.6321, -28.4836, 1.33 ) }
    dend_13 { pt3dadd( 31.8062, 68.6812, -28.4943, 1.33 ) }
    dend_13 { pt3dadd( 32.4889, 69.3143, -28.6449, 0.66 ) }
    dend_13 { pt3dadd( 33.371, 70.1301, -28.8477, 0.22 ) }
    dend_13 { pt3dadd( 33.969, 70.7537, -29.0206, 0.66 ) }
    dend_13 { pt3dadd( 34.2499, 71.0608, -29.1052, 0.88 ) }
    dend_13 { pt3dadd( 34.3024, 71.1177, -29.1208, 0.88 ) }
    dend_13 { pt3dadd( 34.9829, 71.8003, -29.3045, 0.22 ) }
    dend_13 { pt3dadd( 35.4191, 72.1952, -29.3954, 0.22 ) }
    dend_13 { pt3dadd( 36.3182, 72.9341, -29.5059, 0.96 ) }
    dend_13 { pt3dadd( 36.4025, 72.9967, -29.5138, 0.96 ) }
    dend_13 { pt3dadd( 36.7688, 73.2428, -29.5385, 0.96 ) }
    dend_13 { pt3dadd( 37.7583, 73.8196, -29.573, 0.22 ) }
    dend_13 { pt3dadd( 38.3693, 74.1667, -29.5783, 1.11 ) }
    dend_13 { pt3dadd( 38.8585, 74.4231, -29.5767, 1.84 ) }
    dend_13 { pt3dadd( 39.5325, 74.7507, -29.571, 2.28 ) }
    dend_13 { pt3dadd( 39.9656, 74.9781, -29.5651, 1.99 ) }
    dend_13 { pt3dadd( 41.4506, 75.811, -29.5435, 0.15 ) }
    dend_13 { pt3dadd( 42.1601, 76.2192, -29.5422, 0.15 ) }
    dend_13 { pt3dadd( 42.2198, 76.2548, -29.5436, 0.15 ) }
    dend_13 { pt3dadd( 43.311, 76.9445, -29.5727, 0.15 ) }
    dend_13 { pt3dadd( 44.0868, 77.4657, -29.5953, 1.55 ) }
    dend_13 { pt3dadd( 44.6252, 77.8329, -29.6184, 1.84 ) }
    dend_13 { pt3dadd( 46.1696, 78.8924, -29.7111, 0.22 ) }
    dend_13 { pt3dadd( 46.6223, 79.1905, -29.7439, 0.22 ) }
    dend_13 { pt3dadd( 47.2826, 79.6173, -29.8148, 0.96 ) }
    dend_13 { pt3dadd( 47.6752, 79.8746, -29.8706, 1.11 ) }
    dend_13 { pt3dadd( 49.0551, 80.7835, -30.1706, 0.22 ) }
    dend_13 { pt3dadd( 49.6996, 81.2148, -30.3513, 0.52 ) }
    dend_13 { pt3dadd( 50.001, 81.4106, -30.4544, 0.59 ) }
    dend_13 { pt3dadd( 50.9155, 81.9617, -30.812, 0.22 ) }
    dend_13 { pt3dadd( 51.3197, 82.1685, -30.9951, 0.22 ) }
    dend_13 { pt3dadd( 52.3756, 82.6269, -31.5188, 0.88 ) }
    dend_13 { pt3dadd( 52.4447, 82.6466, -31.5537, 0.88 ) }
    dend_13 { pt3dadd( 52.8074, 82.6962, -31.7126, 0.88 ) }
    dend_13 { pt3dadd( 52.9198, 82.7029, -31.7541, 0.88 ) }
    dend_13 { pt3dadd( 54.1643, 82.6762, -32.1509, 0.29 ) }
    dend_13 { pt3dadd( 54.2513, 82.6636, -32.1963, 0.29 ) }
    dend_13 { pt3dadd( 55.1474, 82.5177, -32.7616, 0.29 ) }
    dend_13 { pt3dadd( 56.3019, 82.3437, -33.5826, 1.47 ) }
    dend_13 { pt3dadd( 56.5397, 82.3159, -33.7645, 1.92 ) }
    dend_13 { pt3dadd( 57.3801, 82.2372, -34.4466, 1.99 ) }
    dend_13 { pt3dadd( 60.2439, 82.0734, -36.9011, 0.29 ) }
    dend_13 { pt3dadd( 61.0921, 82.0581, -37.6424, 0.22 ) }
    dend_13 { pt3dadd( 61.1433, 82.0598, -37.69, 0.22 ) }
    dend_13 { pt3dadd( 61.6418, 82.1034, -38.1408, 0.22 ) }
    dend_13 { pt3dadd( 61.7029, 82.1128, -38.1916, 0.22 ) }
    dend_13 { pt3dadd( 62.7464, 82.4478, -38.9091, 1.18 ) }
    dend_13 { pt3dadd( 63.0934, 82.6398, -39.0499, 1.33 ) }
    dend_13 { pt3dadd( 63.6039, 82.9221, -39.245, 1.18 ) }
    dend_13 { pt3dadd( 64.6309, 83.5012, -39.6516, 0.22 ) }
    dend_13 { pt3dadd( 64.6964, 83.5379, -39.6777, 0.22 ) }
    dend_13 { pt3dadd( 65.4097, 83.9637, -39.9514, 0.22 ) }
    dend_13 { pt3dadd( 65.4658, 84.0001, -39.9704, 0.22 ) }
    dend_13 { pt3dadd( 66.0626, 84.3372, -40.1197, 0.44 ) }
    dend_13 { pt3dadd( 66.1273, 84.3633, -40.1172, 0.44 ) }
    dend_13 { pt3dadd( 66.6876, 84.5503, -40.165, 0.44 ) }
    dend_13 { pt3dadd( 66.7911, 84.5879, -40.1896, 0.44 ) }
    dend_13 { pt3dadd( 67.2552, 84.7716, -40.3593, 0.96 ) }
    dend_13 { pt3dadd( 67.64, 84.944, -40.6714, 1.33 ) }
    dend_13 { pt3dadd( 68.7662, 85.4793, -41.8186, 0.37 ) }
    dend_13 { pt3dadd( 70.1604, 86.1906, -43.3807, 0.29 ) }
    dend_13 { pt3dadd( 70.817, 86.5589, -44.1773, 1.69 ) }
    dend_13 { pt3dadd( 71.1745, 86.7705, -44.6352, 2.21 ) }
    dend_13 { pt3dadd( 73.4781, 88.3027, -47.8357, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_13 { pt3dadd( 73.5138, 88.3291, -47.8894, 0.22 ) }
    dend_13 { pt3dadd( 73.8409, 88.6068, -48.4235, 0.96 ) }
    dend_13 { pt3dadd( 74.0836, 88.8258, -48.7877, 0.96 ) }
    dend_13 { pt3dadd( 74.9725, 89.6606, -50.0252, 0.29 ) }
    dend_13 { pt3dadd( 75.4932, 90.1762, -50.717, 0.22 ) }
    dend_13 { pt3dadd( 75.568, 90.2521, -50.8062, 0.22 ) }
    dend_13 { pt3dadd( 75.9409, 90.551, -51.2562, 0.22 ) }
    dend_13 { pt3dadd( 75.9838, 90.5755, -51.3055, 0.22 ) }
    dend_13 { pt3dadd( 76.8279, 90.9944, -52.3349, 0.96 ) }
    dend_13 { pt3dadd( 77.6894, 91.3896, -53.4046, 0.66 ) }
    dend_13 { pt3dadd( 78.4432, 91.7064, -54.3384, 0.22 ) }
    dend_13 { pt3dadd( 78.9608, 91.9168, -54.9763, 1.33 ) }
    dend_13 { pt3dadd( 79.4297, 92.0961, -55.5487, 1.33 ) }
    dend_13 { pt3dadd( 81.063, 92.699, -57.4195, 0.15 ) }
    dend_13 { pt3dadd( 81.8064, 92.9401, -58.2222, 0.37 ) }
    dend_13 { pt3dadd( 81.8622, 92.9556, -58.2773, 0.37 ) }
    dend_13 { pt3dadd( 81.9955, 92.9959, -58.4473, 0.37 ) }
    dend_13 { pt3dadd( 82.0828, 93.0278, -58.5731, 0.37 ) }
    dend_13 { pt3dadd( 82.643, 93.2564, -59.4305, 0.59 ) }
    dend_13 { pt3dadd( 83.4171, 93.5558, -60.6106, 0.29 ) }
    dend_13 { pt3dadd( 84.231, 93.9004, -61.8794, 2.28 ) }
    dend_13 { pt3dadd( 86.3383, 94.857, -65.1401, 0.88 ) }
    dend_13 { pt3dadd( 86.8321, 95.101, -65.9121, 0.66 ) }
    dend_13 { pt3dadd( 87.4886, 95.407, -66.9223, 0.22 ) }
    dend_13 { pt3dadd( 87.5318, 95.4252, -66.987, 0.22 ) }
    dend_13 { pt3dadd( 88.0782, 95.6004, -67.6857, 1.33 ) }
    dend_13 { pt3dadd( 88.4582, 95.6168, -68.0402, 1.69 ) }
    dend_13 { pt3dadd( 88.5185, 95.5944, -68.0674, 1.69 ) }
    dend_13 { pt3dadd( 89.9596, 94.8273, -68.6232, 0.22 ) }
    dend_13 { pt3dadd( 90.7012, 94.3355, -68.855, 0.22 ) }
    dend_13 { pt3dadd( 90.9422, 94.1561, -68.9247, 0.59 ) }
    dend_13 { pt3dadd( 91.0996, 94.0227, -68.9633, 0.59 ) }
    dend_13 { pt3dadd( 91.1503, 93.9772, -68.9756, 0.59 ) }
    dend_13 { pt3dadd( 91.7573, 93.433, -69.1011, 0.22 ) }
    dend_13 { pt3dadd( 91.8099, 93.388, -69.104, 0.22 ) }
    dend_13 { pt3dadd( 92.187, 93.0786, -69.1336, 1.03 ) }
    dend_13 { pt3dadd( 92.4832, 92.8384, -69.161, 1.03 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 37/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.0615, 182.654, 4.36892, 0.29 ) }
    dend_5 { pt3dadd( -9.30483, 183.883, 4.01612, 0.29 ) }
    dend_5 { pt3dadd( -9.37288, 185.068, 3.68366, 0.29 ) }
    dend_5 { pt3dadd( -9.3729, 185.133, 3.66116, 0.29 ) }
    dend_5 { pt3dadd( -9.35139, 186.075, 3.3019, 0.29 ) }
    dend_5 { pt3dadd( -9.35065, 186.288, 3.22055, 0.29 ) }
    dend_5 { pt3dadd( -9.35578, 187.137, 2.89547, 0.52 ) }
    dend_5 { pt3dadd( -9.32041, 187.939, 2.57847, 0.81 ) }
    dend_5 { pt3dadd( -9.28219, 189.02, 2.14229, 0.22 ) }
    dend_5 { pt3dadd( -9.30627, 190.156, 1.6914, 1.69 ) }
    dend_5 { pt3dadd( -9.37494, 190.635, 1.51117, 1.92 ) }
    dend_5 { pt3dadd( -9.39186, 190.697, 1.48878, 1.92 ) }
    dend_5 { pt3dadd( -9.53153, 191.09, 1.35944, 1.92 ) }
    dend_5 { pt3dadd( -10.0235, 192.436, 0.949712, 0.29 ) }
    dend_5 { pt3dadd( -10.0485, 192.508, 0.931949, 0.29 ) }
    dend_5 { pt3dadd( -10.3388, 193.471, 0.706629, 0.22 ) }
    dend_5 { pt3dadd( -10.5298, 194.174, 0.586715, 0.22 ) }
    dend_5 { pt3dadd( -10.8331, 195.301, 0.447133, 0.22 ) }
    dend_5 { pt3dadd( -11.1311, 196.435, 0.351534, 1.55 ) }
    dend_5 { pt3dadd( -11.2327, 196.852, 0.336735, 1.84 ) }
    dend_5 { pt3dadd( -11.7451, 198.993, 0.393845, 0.22 ) }
    dend_5 { pt3dadd( -11.9725, 200.113, 0.490387, 1.25 ) }
    dend_5 { pt3dadd( -12.0628, 200.559, 0.553501, 1.62 ) }
    dend_5 { pt3dadd( -12.1233, 200.775, 0.602489, 1.62 ) }
    dend_5 { pt3dadd( -12.1419, 200.829, 0.618284, 1.62 ) }
    dend_5 { pt3dadd( -12.6172, 202.068, 1.02965, 0.29 ) }
    dend_5 { pt3dadd( -12.9666, 202.908, 1.32432, 0.29 ) }
    dend_5 { pt3dadd( -13.2467, 203.555, 1.46298, 0.29 ) }
    dend_5 { pt3dadd( -13.6332, 204.406, 1.5836, 0.22 ) }
    dend_5 { pt3dadd( -13.9211, 204.999, 1.62901, 0.22 ) }
    dend_5 { pt3dadd( -14.1608, 205.458, 1.61112, 0.59 ) }
    dend_5 { pt3dadd( -14.471, 205.993, 1.53069, 0.29 ) }
    dend_5 { pt3dadd( -15.1428, 207.089, 1.36053, 1.92 ) }
    dend_5 { pt3dadd( -15.4628, 207.643, 1.27442, 2.5 ) }
    dend_5 { pt3dadd( -15.5986, 207.919, 1.23112, 2.36 ) }
    dend_5 { pt3dadd( -16.2943, 209.469, 1.03038, 0.29 ) }
    dend_5 { pt3dadd( -16.4744, 209.848, 0.985963, 0.29 ) }
    dend_5 { pt3dadd( -16.8919, 210.697, 0.905571, 0.29 ) }
    dend_5 { pt3dadd( -17.1476, 211.217, 0.865174, 0.29 ) }
    dend_5 { pt3dadd( -17.5278, 212.003, 0.807961, 0.22 ) }
    dend_5 { pt3dadd( -17.8604, 212.704, 0.76646, 0.22 ) }
    dend_5 { pt3dadd( -18.4496, 213.943, 0.73959, 2.58 ) }
    dend_5 { pt3dadd( -18.594, 214.236, 0.718706, 2.87 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 80/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -9.0615, 182.654, 4.36892, 0.15 ) }
    dend_4 { pt3dadd( -10.6114, 184.027, 4.48955, 0.15 ) }
    dend_4 { pt3dadd( -11.5815, 185.01, 4.42389, 0.15 ) }
    dend_4 { pt3dadd( -11.6335, 185.07, 4.41609, 0.15 ) }
    dend_4 { pt3dadd( -12.5438, 186.098, 4.27955, 0.15 ) }
    dend_4 { pt3dadd( -13.2733, 186.924, 4.17014, 0.15 ) }
    dend_4 { pt3dadd( -13.6427, 187.342, 4.11472, 0.29 ) }
    dend_4 { pt3dadd( -14.3414, 188.285, 3.77156, 0.44 ) }
    dend_4 { pt3dadd( -14.5607, 188.617, 3.62618, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 89/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 0.147213, -65.9434, -26.8164, 0.66 ) }
    dend_57 { pt3dadd( 0.934641, -66.438, -30.218, 0.66 ) }
    dend_57 { pt3dadd( 2.14139, -67.1048, -34.7584, 1.84 ) }
    dend_57 { pt3dadd( 4.4336, -68.1796, -42.4946, 1.92 ) }
    dend_57 { pt3dadd( 6.06586, -68.8533, -47.5672, 1.92 ) }
    dend_57 { pt3dadd( 7.29788, -69.3091, -51.1313, 0.52 ) }
    dend_57 { pt3dadd( 7.85051, -69.4966, -52.6338, 0.52 ) }
    dend_57 { pt3dadd( 8.69106, -69.6928, -54.5025, 1.84 ) }
    dend_57 { pt3dadd( 10.377, -69.9953, -57.6019, 0.44 ) }
    dend_57 { pt3dadd( 10.7391, -70.0791, -58.2475, 0.66 ) }
    dend_57 { pt3dadd( 11.2062, -70.2353, -59.2133, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_57 { pt3dadd( 11.7553, -70.4952, -60.5275, 1.77 ) }
    dend_57 { pt3dadd( 11.8534, -70.5581, -60.8045, 2.06 ) }
    dend_57 { pt3dadd( 13.1694, -71.6762, -64.9245, 1.77 ) }
    dend_57 { pt3dadd( 14.1201, -72.6732, -68.1778, 2.06 ) }
    dend_57 { pt3dadd( 14.8788, -73.5543, -70.8502, 0.88 ) }
    dend_57 { pt3dadd( 15.4388, -74.26, -72.8317, 0.22 ) }
    dend_57 { pt3dadd( 16.0005, -74.9889, -74.7251, 1.69 ) }
    dend_57 { pt3dadd( 16.0794, -75.0847, -74.9596, 1.99 ) }
    dend_57 { pt3dadd( 16.933, -76.0648, -76.9862, 0.59 ) }
    dend_57 { pt3dadd( 17.5454, -76.7282, -78.2018, 0.22 ) }
    dend_57 { pt3dadd( 17.9576, -77.1884, -79.0633, 1.69 ) }
    dend_57 { pt3dadd( 18.1315, -77.3967, -79.4999, 1.69 ) }
    dend_57 { pt3dadd( 19.0401, -78.4566, -82.0431, 0.29 ) }
    dend_57 { pt3dadd( 19.3395, -78.7586, -82.9469, 0.22 ) }
    dend_57 { pt3dadd( 20.1265, -79.5329, -85.4388, 1.03 ) }
    dend_57 { pt3dadd( 20.9293, -80.2971, -88.1843, 1.25 ) }
    dend_57 { pt3dadd( 21.6281, -80.9375, -90.7246, 1.62 ) }
    dend_57 { pt3dadd( 22.2034, -81.4518, -92.9967, 1.62 ) }
    dend_57 { pt3dadd( 22.821, -81.9702, -95.7191, 1.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 19/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 0.147213, -65.9434, -26.8164, 1.99 ) }
    dend_56 { pt3dadd( 0.496083, -66.2951, -25.7218, 1.99 ) }
    dend_56 { pt3dadd( 1.15539, -67.0003, -24.2426, 1.77 ) }
    dend_56 { pt3dadd( 2.50558, -68.8362, -21.6611, 0.88 ) }
    dend_56 { pt3dadd( 5.10338, -73.3422, -17.3077, 0.74 ) }
    dend_56 { pt3dadd( 5.26271, -73.6907, -17.0788, 0.74 ) }
    dend_56 { pt3dadd( 5.47261, -74.3033, -16.8898, 1.62 ) }
    dend_56 { pt3dadd( 5.61519, -75.2231, -16.8575, 1.62 ) }
    dend_56 { pt3dadd( 5.55301, -76.7868, -17.3464, 0.59 ) }
    dend_56 { pt3dadd( 5.41242, -77.7737, -17.8892, 2.21 ) }
    dend_56 { pt3dadd( 5.27469, -78.665, -18.5245, 2.5 ) }
    dend_56 { pt3dadd( 4.89601, -80.7054, -20.1307, 0.37 ) }
    dend_56 { pt3dadd( 4.57005, -82.3136, -21.4771, 0.37 ) }
    dend_56 { pt3dadd( 4.34918, -83.3871, -22.4486, 1.92 ) }
    dend_56 { pt3dadd( 4.29619, -83.6498, -22.6967, 2.14 ) }
    dend_56 { pt3dadd( 4.04314, -84.9771, -23.9488, 0.29 ) }
    dend_56 { pt3dadd( 3.80056, -86.3835, -25.2919, 0.29 ) }
    dend_56 { pt3dadd( 3.74115, -86.9151, -25.7774, 0.29 ) }
    dend_56 { pt3dadd( 3.73158, -87.1974, -26.0234, 0.29 ) }
    dend_56 { pt3dadd( 3.73873, -87.9752, -26.7098, 1.33 ) }
    dend_56 { pt3dadd( 3.77911, -88.7179, -27.3977, 1.69 ) }
    dend_56 { pt3dadd( 3.96592, -90.2078, -28.7771, 0.44 ) }
    dend_56 { pt3dadd( 4.2155, -91.3781, -29.8351, 0.44 ) }
    dend_56 { pt3dadd( 4.41281, -92.1874, -30.5319, 2.36 ) }
    dend_56 { pt3dadd( 4.51806, -92.6167, -30.875, 2.58 ) }
    dend_56 { pt3dadd( 5.01688, -94.7705, -32.4564, 0.29 ) }
    dend_56 { pt3dadd( 5.18475, -95.5698, -32.9743, 0.29 ) }
    dend_56 { pt3dadd( 5.40079, -96.6487, -33.5748, 1.99 ) }
    dend_56 { pt3dadd( 5.54645, -97.4109, -33.9517, 2.36 ) }
    dend_56 { pt3dadd( 5.89508, -99.5509, -35.0458, 0.29 ) }
    dend_56 { pt3dadd( 5.98543, -100.419, -35.5334, 0.29 ) }
    dend_56 { pt3dadd( 5.99349, -101.231, -36.0328, 0.22 ) }
    dend_56 { pt3dadd( 5.98501, -101.351, -36.121, 0.22 ) }
    dend_56 { pt3dadd( 5.90683, -101.91, -36.6496, 0.22 ) }
    dend_56 { pt3dadd( 5.64144, -103.296, -38.1434, 0.59 ) }
    dend_56 { pt3dadd( 5.30037, -104.608, -39.6653, 1.69 ) }
    dend_56 { pt3dadd( 5.13109, -105.165, -40.3254, 2.21 ) }
    dend_56 { pt3dadd( 4.88074, -105.858, -41.1382, 2.06 ) }
    dend_56 { pt3dadd( 4.24067, -107.534, -42.9836, 0.74 ) }
    dend_56 { pt3dadd( 4.06193, -107.995, -43.4502, 0.88 ) }
    dend_56 { pt3dadd( 3.84363, -108.599, -43.974, 0.88 ) }
    dend_56 { pt3dadd( 3.53641, -109.604, -44.7018, 0.29 ) }
    dend_56 { pt3dadd( 3.30712, -110.438, -45.1958, 1.18 ) }
    dend_56 { pt3dadd( 3.13394, -111.093, -45.4849, 1.47 ) }
    dend_56 { pt3dadd( 2.9422, -111.896, -45.7067, 1.77 ) }
    dend_56 { pt3dadd( 2.91618, -112.008, -45.7311, 1.77 ) }
    dend_56 { pt3dadd( 2.59757, -113.257, -45.9321, 0.29 ) }
    dend_56 { pt3dadd( 2.34656, -114.117, -46.0065, 0.29 ) }
    dend_56 { pt3dadd( 2.09943, -114.876, -46.0446, 1.84 ) }
    dend_56 { pt3dadd( 1.84818, -115.557, -46.0717, 2.65 ) }
    dend_56 { pt3dadd( 1.47145, -116.513, -46.1055, 1.92 ) }
    dend_56 { pt3dadd( 0.974196, -117.751, -46.1568, 0.52 ) }
    dend_56 { pt3dadd( 0.445222, -119.053, -46.2292, 0.22 ) }
    dend_56 { pt3dadd( 0.183768, -119.773, -46.2863, 0.22 ) }
    dend_56 { pt3dadd( 0.162089, -119.848, -46.2944, 0.22 ) }
    dend_56 { pt3dadd( 0.0313242, -120.499, -46.3788, 0.88 ) }
    dend_56 { pt3dadd( -0.0122222, -120.945, -46.4489, 1.25 ) }
    dend_56 { pt3dadd( -0.032026, -121.502, -46.5433, 1.25 ) }
    dend_56 { pt3dadd( -0.042173, -122.359, -46.7022, 0.81 ) }
    dend_56 { pt3dadd( -0.0431948, -123.634, -46.9435, 0.29 ) }
    dend_56 { pt3dadd( -0.0785905, -124.427, -47.1051, 0.29 ) }
    dend_56 { pt3dadd( -0.211444, -125.454, -47.3466, 1.84 ) }
    dend_56 { pt3dadd( -0.330949, -126.067, -47.4986, 1.99 ) }
    dend_56 { pt3dadd( -0.527928, -126.813, -47.6932, 1.77 ) }
    dend_56 { pt3dadd( -0.548907, -126.876, -47.7095, 1.77 ) }
    dend_56 { pt3dadd( -1.10995, -128.348, -48.054, 0.22 ) }
    dend_56 { pt3dadd( -1.50753, -129.359, -48.2951, 0.22 ) }
    dend_56 { pt3dadd( -1.94964, -130.54, -48.564, 0.22 ) }
    dend_56 { pt3dadd( -2.27415, -131.464, -48.7704, 0.88 ) }
    dend_56 { pt3dadd( -2.48255, -132.096, -48.9143, 1.47 ) }
    dend_56 { pt3dadd( -2.68361, -132.781, -49.0607, 1.69 ) }
    dend_56 { pt3dadd( -2.93238, -133.824, -49.2582, 1.77 ) }
    dend_56 { pt3dadd( -3.07654, -134.514, -49.3865, 1.77 ) }
    dend_56 { pt3dadd( -3.09185, -134.581, -49.3994, 1.77 ) }
    dend_56 { pt3dadd( -3.50341, -136.417, -49.7912, 0.22 ) }
    dend_56 { pt3dadd( -3.64225, -137.109, -49.9524, 0.74 ) }
    dend_56 { pt3dadd( -3.72609, -137.585, -50.0666, 0.74 ) }
    dend_56 { pt3dadd( -3.92768, -139.048, -50.4151, 0.22 ) }
    dend_56 { pt3dadd( -3.97545, -139.55, -50.543, 0.59 ) }
    dend_56 { pt3dadd( -4.01218, -140.773, -50.8697, 0.22 ) }
    dend_56 { pt3dadd( -4.01292, -141.563, -51.0771, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_56 { pt3dadd( -4.02055, -142.257, -51.2565, 2.14 ) }
    dend_56 { pt3dadd( -4.01252, -143.037, -51.4452, 2.36 ) }
    dend_56 { pt3dadd( -3.95367, -144.283, -51.7137, 0.81 ) }
    dend_56 { pt3dadd( -3.85025, -145.676, -51.9836, 0.22 ) }
    dend_56 { pt3dadd( -3.72414, -147.042, -52.2042, 0.22 ) }
    dend_56 { pt3dadd( -3.57057, -148.197, -52.3811, 0.22 ) }
    dend_56 { pt3dadd( -3.38239, -149.26, -52.5331, 0.22 ) }
    dend_56 { pt3dadd( -3.19931, -150.096, -52.6358, 0.96 ) }
    dend_56 { pt3dadd( -3.07757, -150.535, -52.6874, 1.33 ) }
    dend_56 { pt3dadd( -2.86274, -151.165, -52.7761, 0.96 ) }
    dend_56 { pt3dadd( -2.30863, -152.493, -53.0107, 0.22 ) }
    dend_56 { pt3dadd( -2.07058, -153.051, -53.1227, 0.74 ) }
    dend_56 { pt3dadd( -1.92162, -153.454, -53.2241, 0.74 ) }
    dend_56 { pt3dadd( -1.57499, -154.557, -53.5226, 0.22 ) }
    dend_56 { pt3dadd( -1.39848, -155.23, -53.7152, 1.11 ) }
    dend_56 { pt3dadd( -1.27993, -155.792, -53.8769, 1.55 ) }
    dend_56 { pt3dadd( -1.19419, -156.404, -54.0741, 1.69 ) }
    dend_56 { pt3dadd( -1.07963, -157.766, -54.6003, 0.22 ) }
    dend_56 { pt3dadd( -1.07156, -158.69, -54.9835, 1.03 ) }
    dend_56 { pt3dadd( -1.11337, -159.191, -55.2319, 1.18 ) }
    dend_56 { pt3dadd( -1.1974, -159.693, -55.5097, 1.47 ) }
    dend_56 { pt3dadd( -1.51082, -161.001, -56.293, 0.22 ) }
    dend_56 { pt3dadd( -1.90692, -162.122, -57.0215, 0.22 ) }
    dend_56 { pt3dadd( -2.26324, -162.91, -57.5654, 0.22 ) }
    dend_56 { pt3dadd( -2.86531, -164.064, -58.3958, 1.55 ) }
    dend_56 { pt3dadd( -3.10186, -164.477, -58.6927, 1.77 ) }
    dend_56 { pt3dadd( -3.34272, -164.861, -58.9576, 1.47 ) }
    dend_56 { pt3dadd( -4.38448, -166.43, -59.9069, 0.22 ) }
    dend_56 { pt3dadd( -4.41409, -166.475, -59.9314, 0.22 ) }
    dend_56 { pt3dadd( -4.68332, -166.904, -60.139, 0.29 ) }
    dend_56 { pt3dadd( -4.72455, -166.965, -60.1659, 0.29 ) }
    dend_56 { pt3dadd( -5.15436, -167.576, -60.4597, 0.29 ) }
    dend_56 { pt3dadd( -5.89068, -168.471, -60.9166, 0.22 ) }
    dend_56 { pt3dadd( -5.9731, -168.559, -60.9613, 0.22 ) }
    dend_56 { pt3dadd( -6.62427, -169.132, -61.2964, 0.52 ) }
    dend_56 { pt3dadd( -7.57016, -169.77, -61.7936, 0.29 ) }
    dend_56 { pt3dadd( -7.63222, -169.809, -61.8234, 0.29 ) }
    dend_56 { pt3dadd( -8.34723, -170.258, -62.0959, 1.18 ) }
    dend_56 { pt3dadd( -8.4115, -170.3, -62.1157, 1.18 ) }
    dend_56 { pt3dadd( -9.10795, -170.826, -62.2918, 1.55 ) }
    dend_56 { pt3dadd( -10.6836, -172.137, -62.6218, 0.22 ) }
    dend_56 { pt3dadd( -11.8924, -173.275, -62.8014, 0.22 ) }
    dend_56 { pt3dadd( -12.8128, -174.238, -62.9174, 1.77 ) }
    dend_56 { pt3dadd( -13.0738, -174.572, -63.0098, 2.21 ) }
    dend_56 { pt3dadd( -13.7906, -175.66, -63.4031, 1.11 ) }
    dend_56 { pt3dadd( -13.8225, -175.716, -63.4281, 1.11 ) }
    dend_56 { pt3dadd( -14.2174, -176.479, -63.833, 1.77 ) }
    dend_56 { pt3dadd( -14.4487, -176.928, -64.11, 2.06 ) }
    dend_56 { pt3dadd( -16.0894, -180.132, -66.2421, 0.22 ) }
    dend_56 { pt3dadd( -16.647, -181.169, -66.9446, 1.03 ) }
    dend_56 { pt3dadd( -17.3034, -182.363, -67.7734, 0.37 ) }
    dend_56 { pt3dadd( -17.8372, -183.292, -68.3984, 0.22 ) }
    dend_56 { pt3dadd( -18.1169, -183.757, -68.7013, 0.37 ) }
    dend_56 { pt3dadd( -18.8801, -184.947, -69.4092, 0.81 ) }
    dend_56 { pt3dadd( -19.8255, -186.393, -70.0384, 0.22 ) }
    dend_56 { pt3dadd( -19.8545, -186.44, -70.058, 0.22 ) }
    dend_56 { pt3dadd( -20.479, -187.591, -70.4423, 0.22 ) }
    dend_56 { pt3dadd( -20.6096, -187.846, -70.5137, 0.52 ) }
    dend_56 { pt3dadd( -20.6379, -187.908, -70.5275, 0.52 ) }
    dend_56 { pt3dadd( -21.0403, -188.898, -70.6672, 0.22 ) }
    dend_56 { pt3dadd( -21.2634, -189.723, -70.7886, 0.22 ) }
    dend_56 { pt3dadd( -21.4296, -190.611, -70.9408, 0.22 ) }
    dend_56 { pt3dadd( -21.5484, -191.587, -71.1264, 1.33 ) }
    dend_56 { pt3dadd( -21.5956, -192.076, -71.2367, 1.55 ) }
    dend_56 { pt3dadd( -21.6266, -192.492, -71.3417, 1.55 ) }
    dend_56 { pt3dadd( -21.7, -194.253, -71.8365, 0.22 ) }
    dend_56 { pt3dadd( -21.7041, -195.352, -72.156, 0.22 ) }
    dend_56 { pt3dadd( -21.7002, -195.417, -72.1738, 0.22 ) }
    dend_56 { pt3dadd( -21.6075, -196.477, -72.4386, 0.88 ) }
    dend_56 { pt3dadd( -21.5875, -196.753, -72.5011, 1.33 ) }
    dend_56 { pt3dadd( -21.5612, -197.313, -72.607, 1.33 ) }
    dend_56 { pt3dadd( -21.5716, -197.809, -72.6492, 1.11 ) }
    dend_56 { pt3dadd( -21.6659, -199.042, -72.7005, 0.22 ) }
    dend_56 { pt3dadd( -21.7407, -199.74, -72.7045, 0.88 ) }
    dend_56 { pt3dadd( -21.8082, -200.247, -72.6904, 1.11 ) }
    dend_56 { pt3dadd( -21.9319, -200.967, -72.6824, 0.81 ) }
    dend_56 { pt3dadd( -22.2044, -202.242, -72.6599, 0.22 ) }
    dend_56 { pt3dadd( -22.519, -203.497, -72.6576, 0.22 ) }
    dend_56 { pt3dadd( -22.7774, -204.337, -72.642, 1.03 ) }
    dend_56 { pt3dadd( -22.9089, -204.747, -72.629, 1.4 ) }
    dend_56 { pt3dadd( -23.3626, -206.135, -72.5889, 0.22 ) }
    dend_56 { pt3dadd( -23.6212, -206.883, -72.5729, 0.96 ) }
    dend_56 { pt3dadd( -23.9074, -207.671, -72.5939, 1.25 ) }
    dend_56 { pt3dadd( -24.4275, -209.063, -72.6509, 0.37 ) }
    dend_56 { pt3dadd( -24.7448, -209.934, -72.7158, 0.22 ) }
    dend_56 { pt3dadd( -24.7639, -209.999, -72.7221, 0.22 ) }
    dend_56 { pt3dadd( -24.9867, -211.044, -72.8371, 0.22 ) }
    dend_56 { pt3dadd( -25.1815, -212.326, -73.0149, 1.4 ) }
    dend_56 { pt3dadd( -25.2465, -212.9, -73.0976, 1.4 ) }
    dend_56 { pt3dadd( -25.3619, -214.253, -73.3303, 0.29 ) }
    dend_56 { pt3dadd( -25.4674, -215.393, -73.5182, 0.29 ) }
    dend_56 { pt3dadd( -25.5214, -215.964, -73.6008, 0.37 ) }
    dend_56 { pt3dadd( -25.6202, -216.9, -73.7384, 0.29 ) }
    dend_56 { pt3dadd( -25.6971, -217.505, -73.8186, 0.29 ) }
    dend_56 { pt3dadd( -25.8681, -218.318, -73.9658, 0.29 ) }
    dend_56 { pt3dadd( -26.0897, -219.035, -74.1347, 1.4 ) }
    dend_56 { pt3dadd( -26.4047, -219.887, -74.3826, 1.4 ) }
    dend_56 { pt3dadd( -26.8773, -221.244, -74.8424, 0.22 ) }
    dend_56 { pt3dadd( -27.0438, -221.8, -75.0503, 0.44 ) }
    dend_56 { pt3dadd( -27.3036, -223.076, -75.5361, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_56 { pt3dadd( -27.3821, -223.747, -75.7887, 0.81 ) }
    dend_56 { pt3dadd( -27.3971, -224.352, -75.9784, 0.81 ) }
    dend_56 { pt3dadd( -27.34, -225.199, -76.2874, 0.74 ) }
    dend_56 { pt3dadd( -27.2546, -225.852, -76.5248, 0.81 ) }
    dend_56 { pt3dadd( -27.0891, -226.958, -76.9442, 0.22 ) }
    dend_56 { pt3dadd( -26.9956, -227.423, -77.1139, 0.88 ) }
    dend_56 { pt3dadd( -26.8223, -228.262, -77.4241, 1.18 ) }
    dend_56 { pt3dadd( -26.4547, -230.324, -78.3828, 0.66 ) }
    dend_56 { pt3dadd( -26.3845, -230.954, -78.7014, 0.44 ) }
    dend_56 { pt3dadd( -26.349, -231.469, -78.9863, 1.4 ) }
    dend_56 { pt3dadd( -26.3399, -231.956, -79.2923, 1.77 ) }
    dend_56 { pt3dadd( -26.3323, -232.602, -79.7216, 1.69 ) }
    dend_56 { pt3dadd( -26.302, -234.63, -81.1228, 0.29 ) }
    dend_56 { pt3dadd( -26.2843, -235.594, -81.7245, 0.29 ) }
    dend_56 { pt3dadd( -26.2703, -236.199, -82.0867, 0.29 ) }
    dend_56 { pt3dadd( -26.2594, -237.757, -82.9842, 1.33 ) }
    dend_56 { pt3dadd( -26.2723, -238.738, -83.5266, 1.92 ) }
    dend_56 { pt3dadd( -26.2861, -239.637, -83.9857, 1.11 ) }
    dend_56 { pt3dadd( -26.2513, -240.856, -84.413, 0.15 ) }
    dend_56 { pt3dadd( -26.1248, -242.184, -84.6737, 0.15 ) }
    dend_56 { pt3dadd( -26.0216, -243.005, -84.7152, 1.25 ) }
    dend_56 { pt3dadd( -25.9495, -243.425, -84.6708, 1.77 ) }
    dend_56 { pt3dadd( -25.8405, -243.986, -84.5568, 2.06 ) }
    dend_56 { pt3dadd( -25.3116, -246.229, -83.9138, 0.22 ) }
    dend_56 { pt3dadd( -24.8977, -247.66, -83.4121, 0.22 ) }
    dend_56 { pt3dadd( -24.8806, -247.712, -83.3903, 0.22 ) }
    dend_56 { pt3dadd( -24.6399, -248.38, -83.0702, 0.88 ) }
    dend_56 { pt3dadd( -24.6184, -248.438, -83.0409, 0.88 ) }
    dend_56 { pt3dadd( -24.4038, -249.029, -82.7295, 1.11 ) }
    dend_56 { pt3dadd( -24.3807, -249.089, -82.7022, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 30/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -29.9289, -76.632, 1.64558, 0.52 ) }
    dend_54 { pt3dadd( -33.2958, -77.7781, -1.17657, 0.52 ) }
    dend_54 { pt3dadd( -34.0953, -78.0403, -1.79323, 0.37 ) }
    dend_54 { pt3dadd( -34.9347, -78.3086, -2.37614, 1.55 ) }
    dend_54 { pt3dadd( -35.4916, -78.4755, -2.70341, 2.06 ) }
    dend_54 { pt3dadd( -36.5982, -78.8196, -3.31623, 1.69 ) }
    dend_54 { pt3dadd( -37.7417, -79.2122, -3.92967, 0.44 ) }
    dend_54 { pt3dadd( -38.2478, -79.4047, -4.12412, 1.4 ) }
    dend_54 { pt3dadd( -38.913, -79.6512, -4.39777, 1.69 ) }
    dend_54 { pt3dadd( -40.962, -80.4578, -5.30547, 0.22 ) }
    dend_54 { pt3dadd( -41.6121, -80.743, -5.57706, 0.22 ) }
    dend_54 { pt3dadd( -42.1374, -81.0326, -5.84429, 0.22 ) }
    dend_54 { pt3dadd( -42.7728, -81.4167, -6.22571, 0.22 ) }
    dend_54 { pt3dadd( -42.8186, -81.4516, -6.26483, 0.22 ) }
    dend_54 { pt3dadd( -43.5895, -82.1836, -7.10947, 1.69 ) }
    dend_54 { pt3dadd( -43.7521, -82.3671, -7.32096, 1.99 ) }
    dend_54 { pt3dadd( -45.2034, -84.1484, -9.30535, 0.74 ) }
    dend_54 { pt3dadd( -45.8953, -85.057, -10.2715, 2.28 ) }
    dend_54 { pt3dadd( -47.1531, -86.8999, -12.0997, 0.52 ) }
    dend_54 { pt3dadd( -47.4847, -87.4963, -12.6424, 1.03 ) }
    dend_54 { pt3dadd( -47.6042, -87.8028, -12.8771, 1.03 ) }
    dend_54 { pt3dadd( -47.9008, -89.0116, -13.5992, 0.29 ) }
    dend_54 { pt3dadd( -48.1002, -90.2475, -14.2022, 1.77 ) }
    dend_54 { pt3dadd( -48.1372, -90.6396, -14.3769, 2.28 ) }
    dend_54 { pt3dadd( -48.3071, -92.9531, -15.2052, 0.22 ) }
    dend_54 { pt3dadd( -48.3807, -94.8564, -15.891, 0.22 ) }
    dend_54 { pt3dadd( -48.3507, -96.8873, -16.6041, 0.74 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 57/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -29.9289, -76.632, 1.64558, 0.37 ) }
    dend_53 { pt3dadd( -30.2089, -79.6509, 2.28858, 0.37 ) }
    dend_53 { pt3dadd( -30.2479, -80.6907, 2.54626, 0.22 ) }
    dend_53 { pt3dadd( -30.2663, -81.6564, 2.79144, 0.88 ) }
    dend_53 { pt3dadd( -30.2822, -82.2117, 2.93128, 0.88 ) }
    dend_53 { pt3dadd( -30.3409, -83.9669, 3.37013, 0.22 ) }
    dend_53 { pt3dadd( -30.3708, -84.8725, 3.58853, 0.22 ) }
    dend_53 { pt3dadd( -30.3863, -85.6371, 3.85913, 0.66 ) }
    dend_53 { pt3dadd( -30.4074, -86.1338, 3.99945, 0.66 ) }
    dend_53 { pt3dadd( -30.5397, -87.2523, 4.2219, 0.22 ) }
    dend_53 { pt3dadd( -30.5544, -87.3185, 4.23072, 0.22 ) }
    dend_53 { pt3dadd( -30.7684, -88.0121, 4.25537, 0.22 ) }
    dend_53 { pt3dadd( -30.9878, -88.588, 4.25526, 0.37 ) }
    dend_53 { pt3dadd( -31.2143, -89.0964, 4.25947, 0.37 ) }
    dend_53 { pt3dadd( -31.6912, -90.0597, 4.27094, 0.22 ) }
    dend_53 { pt3dadd( -31.9563, -90.6423, 4.27275, 1.62 ) }
    dend_53 { pt3dadd( -32.2173, -91.3174, 4.26047, 2.28 ) }
    dend_53 { pt3dadd( -32.5075, -92.1878, 4.23251, 1.47 ) }
    dend_53 { pt3dadd( -32.9668, -93.7515, 4.20003, 0.22 ) }
    dend_53 { pt3dadd( -33.2316, -94.7896, 4.19535, 1.55 ) }
    dend_53 { pt3dadd( -33.6143, -96.4295, 4.21938, 0.22 ) }
    dend_53 { pt3dadd( -33.8328, -97.3738, 4.24976, 0.22 ) }
    dend_53 { pt3dadd( -33.9433, -97.8634, 4.27435, 0.22 ) }
    dend_53 { pt3dadd( -34.1117, -98.7185, 4.33974, 0.22 ) }
    dend_53 { pt3dadd( -34.1851, -99.1754, 4.37157, 0.22 ) }
    dend_53 { pt3dadd( -34.3663, -100.242, 4.47346, 1.62 ) }
    dend_53 { pt3dadd( -34.4604, -100.658, 4.52495, 2.06 ) }
    dend_53 { pt3dadd( -34.6403, -101.374, 4.6149, 1.77 ) }
    dend_53 { pt3dadd( -34.9728, -102.786, 4.70769, 0.22 ) }
    dend_53 { pt3dadd( -35.0668, -103.279, 4.72584, 0.59 ) }
    dend_53 { pt3dadd( -35.0779, -103.346, 4.72838, 0.59 ) }
    dend_53 { pt3dadd( -35.1384, -103.84, 4.74992, 0.59 ) }
    dend_53 { pt3dadd( -35.2411, -104.854, 4.80011, 0.29 ) }
    dend_53 { pt3dadd( -35.3213, -105.891, 4.85403, 0.22 ) }
    dend_53 { pt3dadd( -35.4213, -107.16, 4.91734, 0.22 ) }
    dend_53 { pt3dadd( -35.4926, -107.881, 4.9554, 0.59 ) }
    dend_53 { pt3dadd( -35.5567, -108.355, 4.97812, 0.59 ) }
    dend_53 { pt3dadd( -35.5685, -108.424, 4.98108, 0.59 ) }
    dend_53 { pt3dadd( -35.7661, -109.34, 5.01175, 0.22 ) }
    dend_53 { pt3dadd( -35.9916, -110.117, 5.02818, 1.55 ) }
    dend_53 { pt3dadd( -36.2294, -110.745, 5.01335, 1.55 ) }
    dend_53 { pt3dadd( -36.7424, -111.926, 5.07813, 0.29 ) }
    dend_53 { pt3dadd( -37.045, -112.561, 5.15201, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_53 { pt3dadd( -37.2636, -113.005, 5.22583, 0.66 ) }
    dend_53 { pt3dadd( -37.4919, -113.446, 5.32361, 1.03 ) }
    dend_53 { pt3dadd( -37.678, -113.801, 5.4266, 1.03 ) }
    dend_53 { pt3dadd( -38.5559, -115.412, 6.05, 0.22 ) }
    dend_53 { pt3dadd( -38.7436, -115.736, 6.19974, 0.22 ) }
    dend_53 { pt3dadd( -38.9499, -116.088, 6.36764, 0.66 ) }
    dend_53 { pt3dadd( -39.0998, -116.325, 6.48983, 0.66 ) }
    dend_53 { pt3dadd( -39.7243, -117.244, 6.96374, 0.37 ) }
    dend_53 { pt3dadd( -40.1884, -117.902, 7.2821, 1.25 ) }
    dend_53 { pt3dadd( -40.6141, -118.508, 7.5302, 1.55 ) }
    dend_53 { pt3dadd( -40.8851, -118.944, 7.71732, 1.77 ) }
    dend_53 { pt3dadd( -41.5722, -120.266, 8.26236, 0.29 ) }
    dend_53 { pt3dadd( -41.7677, -120.713, 8.43765, 0.96 ) }
    dend_53 { pt3dadd( -41.9496, -121.219, 8.61782, 1.11 ) }
    dend_53 { pt3dadd( -42.151, -121.951, 8.84535, 1.03 ) }
    dend_53 { pt3dadd( -42.4411, -123.344, 9.20219, 0.29 ) }
    dend_53 { pt3dadd( -42.6043, -124.388, 9.38724, 0.29 ) }
    dend_53 { pt3dadd( -42.6132, -124.456, 9.39409, 0.29 ) }
    dend_53 { pt3dadd( -42.7391, -125.048, 9.43486, 1.4 ) }
    dend_53 { pt3dadd( -42.9111, -125.596, 9.46154, 1.62 ) }
    dend_53 { pt3dadd( -43.3827, -126.812, 9.48908, 0.22 ) }
    dend_53 { pt3dadd( -43.9673, -128.029, 9.47915, 2.28 ) }
    dend_53 { pt3dadd( -44.2417, -128.539, 9.48506, 2.58 ) }
    dend_53 { pt3dadd( -44.9193, -129.719, 9.51669, 2.06 ) }
    dend_53 { pt3dadd( -45.6889, -130.966, 9.51334, 0.29 ) }
    dend_53 { pt3dadd( -46.2644, -131.818, 9.48348, 0.81 ) }
    dend_53 { pt3dadd( -46.697, -132.393, 9.44677, 1.25 ) }
    dend_53 { pt3dadd( -47.5118, -133.408, 9.31222, 0.29 ) }
    dend_53 { pt3dadd( -47.9786, -134.018, 9.22202, 0.29 ) }
    dend_53 { pt3dadd( -48.6403, -134.962, 9.06315, 0.74 ) }
    dend_53 { pt3dadd( -48.8852, -135.327, 8.99527, 0.81 ) }
    dend_53 { pt3dadd( -49.337, -136.115, 8.86429, 0.44 ) }
    dend_53 { pt3dadd( -49.6518, -136.814, 8.77797, 0.74 ) }
    dend_53 { pt3dadd( -50.0693, -137.919, 8.6612, 0.29 ) }
    dend_53 { pt3dadd( -50.2663, -138.618, 8.61556, 0.52 ) }
    dend_53 { pt3dadd( -50.4146, -139.318, 8.6023, 0.81 ) }
    dend_53 { pt3dadd( -50.4941, -139.984, 8.58674, 0.96 ) }
    dend_53 { pt3dadd( -50.5841, -141.229, 8.60824, 0.52 ) }
    dend_53 { pt3dadd( -50.6445, -141.854, 8.66722, 1.11 ) }
    dend_53 { pt3dadd( -50.7392, -142.456, 8.76259, 1.11 ) }
    dend_53 { pt3dadd( -50.9714, -143.341, 8.96857, 0.44 ) }
    dend_53 { pt3dadd( -51.5014, -144.803, 9.40886, 3.32 ) }
    dend_53 { pt3dadd( -52.1208, -146.154, 9.91607, 1.62 ) }
    dend_53 { pt3dadd( -52.8194, -147.4, 10.4656, 0.29 ) }
    dend_53 { pt3dadd( -53.5093, -148.415, 10.9146, 0.22 ) }
    dend_53 { pt3dadd( -54.3091, -149.391, 11.3034, 0.22 ) }
    dend_53 { pt3dadd( -54.8439, -149.941, 11.491, 0.22 ) }
    dend_53 { pt3dadd( -55.4145, -150.454, 11.613, 1.77 ) }
    dend_53 { pt3dadd( -56.04, -151.022, 11.6537, 2.06 ) }
    dend_53 { pt3dadd( -56.9629, -151.947, 11.6084, 1.18 ) }
    dend_53 { pt3dadd( -57.7192, -152.82, 11.5148, 0.29 ) }
    dend_53 { pt3dadd( -58.153, -153.439, 11.4425, 0.29 ) }
    dend_53 { pt3dadd( -58.589, -154.154, 11.3522, 0.22 ) }
    dend_53 { pt3dadd( -58.9216, -154.809, 11.2749, 0.88 ) }
    dend_53 { pt3dadd( -59.1323, -155.339, 11.2442, 1.47 ) }
    dend_53 { pt3dadd( -59.3287, -155.99, 11.2586, 1.25 ) }
    dend_53 { pt3dadd( -59.5385, -156.755, 11.2975, 0.88 ) }
    dend_53 { pt3dadd( -59.705, -157.326, 11.3261, 0.59 ) }
    dend_53 { pt3dadd( -60.0214, -158.201, 11.369, 0.37 ) }
    dend_53 { pt3dadd( -60.4066, -159.049, 11.4086, 0.37 ) }
    dend_53 { pt3dadd( -60.794, -159.775, 11.4181, 0.52 ) }
    dend_53 { pt3dadd( -61.1802, -160.413, 11.4065, 0.74 ) }
    dend_53 { pt3dadd( -61.6493, -161.111, 11.3713, 1.62 ) }
    dend_53 { pt3dadd( -62.142, -161.785, 11.2996, 2.06 ) }
    dend_53 { pt3dadd( -62.4535, -162.182, 11.2363, 1.69 ) }
    dend_53 { pt3dadd( -63.2059, -163.126, 11.0436, 0.37 ) }
    dend_53 { pt3dadd( -63.7295, -163.824, 10.9163, 0.29 ) }
    dend_53 { pt3dadd( -64.1724, -164.462, 10.8245, 0.22 ) }
    dend_53 { pt3dadd( -64.5685, -165.049, 10.7617, 1.03 ) }
    dend_53 { pt3dadd( -64.825, -165.423, 10.7278, 1.25 ) }
    dend_53 { pt3dadd( -65.2664, -166.02, 10.6871, 1.11 ) }
    dend_53 { pt3dadd( -66.0967, -167.092, 10.6519, 0.22 ) }
    dend_53 { pt3dadd( -66.8243, -168.018, 10.6368, 0.22 ) }
    dend_53 { pt3dadd( -67.2119, -168.501, 10.6433, 1.03 ) }
    dend_53 { pt3dadd( -67.6214, -169.003, 10.6713, 1.4 ) }
    dend_53 { pt3dadd( -67.997, -169.441, 10.6932, 1.92 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -59.4694, 22.353, -85.5123, 0.22 ) }
    dend_37 { pt3dadd( -60.5393, 22.6412, -86.0351, 0.22 ) }
    dend_37 { pt3dadd( -61.6452, 22.9306, -86.5448, 0.22 ) }
    dend_37 { pt3dadd( -62.0035, 23.0209, -86.697, 0.74 ) }
    dend_37 { pt3dadd( -62.8968, 23.2627, -87.0535, 1.03 ) }
    dend_37 { pt3dadd( -63.7668, 23.5082, -87.4232, 0.22 ) }
    dend_37 { pt3dadd( -63.8388, 23.5257, -87.453, 0.22 ) }
    dend_37 { pt3dadd( -64.4932, 23.7079, -87.717, 0.22 ) }
    dend_37 { pt3dadd( -65.1888, 23.8792, -87.9804, 0.66 ) }
    dend_37 { pt3dadd( -65.5843, 23.9754, -88.1188, 0.81 ) }
    dend_37 { pt3dadd( -66.8008, 24.2576, -88.4952, 0.22 ) }
    dend_37 { pt3dadd( -67.784, 24.4904, -88.7644, 0.22 ) }
    dend_37 { pt3dadd( -68.5848, 24.687, -88.974, 0.29 ) }
    dend_37 { pt3dadd( -68.6775, 24.7122, -88.9974, 0.29 ) }
    dend_37 { pt3dadd( -69.276, 24.8805, -89.1364, 0.29 ) }
    dend_37 { pt3dadd( -70.2914, 25.1951, -89.3398, 1.4 ) }
    dend_37 { pt3dadd( -70.8059, 25.3842, -89.4183, 2.21 ) }
    dend_37 { pt3dadd( -71.2151, 25.5542, -89.4865, 2.14 ) }
    dend_37 { pt3dadd( -72.5987, 26.0593, -89.715, 0.22 ) }
    dend_37 { pt3dadd( -72.6641, 26.0813, -89.7258, 0.22 ) }
    dend_37 { pt3dadd( -73.397, 26.3122, -89.8427, 0.59 ) }
    dend_37 { pt3dadd( -73.7481, 26.4213, -89.8934, 0.59 ) }
    dend_37 { pt3dadd( -74.4944, 26.6389, -89.9989, 0.22 ) }
    dend_37 { pt3dadd( -75.1915, 26.828, -90.082, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_37 { pt3dadd( -75.2598, 26.8423, -90.0872, 0.22 ) }
    dend_37 { pt3dadd( -75.8421, 26.9522, -90.1389, 0.22 ) }
    dend_37 { pt3dadd( -75.9106, 26.9633, -90.1479, 0.22 ) }
    dend_37 { pt3dadd( -76.1692, 27.0118, -90.1873, 0.22 ) }
    dend_37 { pt3dadd( -76.9028, 27.1924, -90.3258, 1.03 ) }
    dend_37 { pt3dadd( -77.2507, 27.2866, -90.4066, 1.47 ) }
    dend_37 { pt3dadd( -77.7471, 27.4095, -90.5342, 1.47 ) }
    dend_37 { pt3dadd( -78.9356, 27.6368, -90.8674, 0.22 ) }
    dend_37 { pt3dadd( -79.0019, 27.6472, -90.8869, 0.22 ) }
    dend_37 { pt3dadd( -79.694, 27.7313, -91.1056, 0.22 ) }
    dend_37 { pt3dadd( -80.0131, 27.7563, -91.2115, 0.22 ) }
    dend_37 { pt3dadd( -80.1079, 27.7609, -91.2429, 0.22 ) }
    dend_37 { pt3dadd( -80.6746, 27.763, -91.4062, 0.22 ) }
    dend_37 { pt3dadd( -81.3683, 27.7452, -91.6339, 0.22 ) }
    dend_37 { pt3dadd( -81.4242, 27.7441, -91.6556, 0.22 ) }
    dend_37 { pt3dadd( -82.239, 27.7476, -92.0385, 0.22 ) }
    dend_37 { pt3dadd( -82.2921, 27.7486, -92.0664, 0.22 ) }
    dend_37 { pt3dadd( -83.3861, 27.7767, -92.6997, 1.69 ) }
    dend_37 { pt3dadd( -84.1926, 27.816, -93.2081, 2.28 ) }
    dend_37 { pt3dadd( -84.7507, 27.8456, -93.577, 2.28 ) }
    dend_37 { pt3dadd( -86.4182, 27.9433, -94.693, 0.22 ) }
    dend_37 { pt3dadd( -87.7552, 28.0298, -95.6113, 0.22 ) }
    dend_37 { pt3dadd( -88.347, 28.0688, -96.0135, 0.88 ) }
    dend_37 { pt3dadd( -89.2726, 28.1338, -96.6464, 0.22 ) }
    dend_37 { pt3dadd( -89.3404, 28.1362, -96.6889, 0.22 ) }
    dend_37 { pt3dadd( -89.7261, 28.1311, -96.9118, 0.88 ) }
    dend_37 { pt3dadd( -89.7864, 28.1238, -96.9465, 0.88 ) }
    dend_37 { pt3dadd( -90.1728, 28.0482, -97.1542, 0.88 ) }
    dend_37 { pt3dadd( -90.2432, 28.0319, -97.1884, 0.88 ) }
    dend_37 { pt3dadd( -91.5175, 27.7358, -97.7526, 0.37 ) }
    dend_37 { pt3dadd( -92.2672, 27.5889, -98.0685, 1.4 ) }
    dend_37 { pt3dadd( -93.8218, 27.3316, -98.682, 0.22 ) }
    dend_37 { pt3dadd( -94.5133, 27.2302, -98.9341, 0.52 ) }
    dend_37 { pt3dadd( -95.2099, 27.1318, -99.1624, 0.22 ) }
    dend_37 { pt3dadd( -95.9282, 27.0377, -99.3672, 1.62 ) }
    dend_37 { pt3dadd( -96.3851, 26.9891, -99.4657, 1.84 ) }
    dend_37 { pt3dadd( -97.0367, 26.9155, -99.5671, 1.25 ) }
    dend_37 { pt3dadd( -98.3283, 26.7381, -99.6865, 0.22 ) }
    dend_37 { pt3dadd( -99.0705, 26.6018, -99.7314, 0.29 ) }
    dend_37 { pt3dadd( -99.1387, 26.5863, -99.7332, 0.29 ) }
    dend_37 { pt3dadd( -99.7105, 26.4452, -99.7486, 0.29 ) }
    dend_37 { pt3dadd( -100.301, 26.2991, -99.7565, 0.22 ) }
    dend_37 { pt3dadd( -100.879, 26.1747, -99.7538, 0.22 ) }
    dend_37 { pt3dadd( -101.74, 26.0276, -99.7308, 0.81 ) }
    dend_37 { pt3dadd( -102.181, 25.9642, -99.7385, 1.03 ) }
    dend_37 { pt3dadd( -103.68, 25.7764, -99.804, 0.22 ) }
    dend_37 { pt3dadd( -104.141, 25.7297, -99.8329, 1.18 ) }
    dend_37 { pt3dadd( -104.808, 25.7021, -99.8849, 1.55 ) }
    dend_37 { pt3dadd( -105.316, 25.7055, -99.9319, 1.92 ) }
    dend_37 { pt3dadd( -107.238, 25.809, -100.15, 0.22 ) }
    dend_37 { pt3dadd( -108.039, 25.9058, -100.25, 0.66 ) }
    dend_37 { pt3dadd( -108.683, 26.0285, -100.357, 0.81 ) }
    dend_37 { pt3dadd( -109.612, 26.2633, -100.573, 0.22 ) }
    dend_37 { pt3dadd( -109.676, 26.2836, -100.592, 0.22 ) }
    dend_37 { pt3dadd( -110.176, 26.5023, -100.825, 0.22 ) }
    dend_37 { pt3dadd( -110.917, 26.891, -101.269, 0.22 ) }
    dend_37 { pt3dadd( -111.57, 27.2057, -101.722, 1.03 ) }
    dend_37 { pt3dadd( -112.091, 27.4133, -102.095, 1.62 ) }
    dend_37 { pt3dadd( -112.568, 27.5399, -102.424, 1.84 ) }
    dend_37 { pt3dadd( -114.423, 27.8704, -103.606, 0.22 ) }
    dend_37 { pt3dadd( -115.119, 27.9444, -104.013, 0.29 ) }
    dend_37 { pt3dadd( -115.587, 27.9667, -104.255, 0.88 ) }
    dend_37 { pt3dadd( -116.135, 27.9747, -104.514, 0.88 ) }
    dend_37 { pt3dadd( -117.358, 27.9104, -104.99, 0.22 ) }
    dend_37 { pt3dadd( -118.267, 27.8048, -105.26, 1.62 ) }
    dend_37 { pt3dadd( -118.625, 27.7315, -105.318, 1.92 ) }
    dend_37 { pt3dadd( -119.207, 27.6048, -105.387, 1.69 ) }
    dend_37 { pt3dadd( -119.683, 27.5031, -105.414, 1.25 ) }
    dend_37 { pt3dadd( -121.248, 27.1645, -105.373, 0.22 ) }
    dend_37 { pt3dadd( -121.315, 27.1494, -105.364, 0.22 ) }
    dend_37 { pt3dadd( -122.026, 26.938, -105.234, 0.22 ) }
    dend_37 { pt3dadd( -122.082, 26.9194, -105.223, 0.22 ) }
    dend_37 { pt3dadd( -122.485, 26.7631, -105.149, 1.18 ) }
    dend_37 { pt3dadd( -123.233, 26.4307, -105.022, 1.84 ) }
    dend_37 { pt3dadd( -123.772, 26.1686, -104.954, 2.06 ) }
    dend_37 { pt3dadd( -125.362, 25.4077, -104.758, 0.22 ) }
    dend_37 { pt3dadd( -125.434, 25.3746, -104.749, 0.22 ) }
    dend_37 { pt3dadd( -126.321, 24.973, -104.643, 0.22 ) }
    dend_37 { pt3dadd( -126.773, 24.7682, -104.594, 0.37 ) }
    dend_37 { pt3dadd( -126.924, 24.7032, -104.583, 0.37 ) }
    dend_37 { pt3dadd( -127.227, 24.5864, -104.556, 0.37 ) }
    dend_37 { pt3dadd( -128.262, 24.1982, -104.425, 0.22 ) }
    dend_37 { pt3dadd( -128.336, 24.1697, -104.415, 0.22 ) }
    dend_37 { pt3dadd( -128.79, 23.9973, -104.352, 0.96 ) }
    dend_37 { pt3dadd( -129.201, 23.8357, -104.301, 1.33 ) }
    dend_37 { pt3dadd( -129.684, 23.6368, -104.25, 1.33 ) }
    dend_37 { pt3dadd( -131.089, 22.9943, -104.098, 0.22 ) }
    dend_37 { pt3dadd( -131.558, 22.7673, -104.05, 0.22 ) }
    dend_37 { pt3dadd( -132.365, 22.3705, -103.969, 0.22 ) }
    dend_37 { pt3dadd( -133.339, 21.8937, -103.873, 1.33 ) }
    dend_37 { pt3dadd( -133.639, 21.7478, -103.845, 1.77 ) }
    dend_37 { pt3dadd( -135.415, 20.8992, -103.695, 0.22 ) }
    dend_37 { pt3dadd( -136.241, 20.5036, -103.636, 0.44 ) }
    dend_37 { pt3dadd( -136.894, 20.1884, -103.593, 0.22 ) }
    dend_37 { pt3dadd( -137.36, 19.9753, -103.553, 0.66 ) }
    dend_37 { pt3dadd( -137.873, 19.7511, -103.499, 0.74 ) }
    dend_37 { pt3dadd( -137.963, 19.7137, -103.489, 0.74 ) }
    dend_37 { pt3dadd( -138.878, 19.3348, -103.399, 0.22 ) }
    dend_37 { pt3dadd( -139.889, 18.8833, -103.294, 0.22 ) }
    dend_37 { pt3dadd( -140.688, 18.4733, -103.23, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_37 { pt3dadd( -141.276, 18.1403, -103.196, 1.77 ) }
    dend_37 { pt3dadd( -141.414, 18.0579, -103.191, 2.06 ) }
    dend_37 { pt3dadd( -142.924, 17.0587, -103.217, 0.22 ) }
    dend_37 { pt3dadd( -142.972, 17.0235, -103.221, 0.22 ) }
    dend_37 { pt3dadd( -143.711, 16.3957, -103.327, 0.22 ) }
    dend_37 { pt3dadd( -143.892, 16.242, -103.366, 1.03 ) }
    dend_37 { pt3dadd( -144.246, 15.9628, -103.444, 1.03 ) }
    dend_37 { pt3dadd( -145.013, 15.4128, -103.597, 0.22 ) }
    dend_37 { pt3dadd( -145.078, 15.3706, -103.613, 0.22 ) }
    dend_37 { pt3dadd( -145.593, 15.0481, -103.727, 0.22 ) }
    dend_37 { pt3dadd( -146.145, 14.7134, -103.841, 0.22 ) }
    dend_37 { pt3dadd( -146.211, 14.6714, -103.854, 0.22 ) }
    dend_37 { pt3dadd( -147.088, 14.0808, -104.016, 0.22 ) }
    dend_37 { pt3dadd( -147.921, 13.5429, -104.156, 1.25 ) }
    dend_37 { pt3dadd( -148.42, 13.2189, -104.244, 1.62 ) }
    dend_37 { pt3dadd( -148.477, 13.1817, -104.254, 1.62 ) }
    dend_37 { pt3dadd( -148.976, 12.8525, -104.345, 0.88 ) }
    dend_37 { pt3dadd( -149.709, 12.3569, -104.473, 0.22 ) }
    dend_37 { pt3dadd( -150.644, 11.6966, -104.624, 0.22 ) }
    dend_37 { pt3dadd( -150.708, 11.6501, -104.629, 0.22 ) }
    dend_37 { pt3dadd( -151.211, 11.2818, -104.661, 0.22 ) }
    dend_37 { pt3dadd( -151.683, 10.9127, -104.676, 1.03 ) }
    dend_37 { pt3dadd( -152.076, 10.563, -104.673, 1.18 ) }
    dend_37 { pt3dadd( -152.337, 10.2871, -104.646, 1.03 ) }
    dend_37 { pt3dadd( -153.014, 9.4112, -104.507, 0.15 ) }
    dend_37 { pt3dadd( -153.204, 9.1447, -104.465, 0.15 ) }
    dend_37 { pt3dadd( -153.435, 8.78367, -104.408, 0.15 ) }
    dend_37 { pt3dadd( -153.724, 8.29344, -104.336, 0.15 ) }
    dend_37 { pt3dadd( -153.993, 7.81451, -104.278, 0.81 ) }
    dend_37 { pt3dadd( -154.166, 7.48981, -104.249, 0.81 ) }
    dend_37 { pt3dadd( -154.55, 6.64757, -104.184, 0.22 ) }
    dend_37 { pt3dadd( -154.791, 6.09233, -104.135, 0.22 ) }
    dend_37 { pt3dadd( -155.07, 5.49348, -104.079, 1.18 ) }
    dend_37 { pt3dadd( -155.288, 5.06035, -104.032, 1.69 ) }
    dend_37 { pt3dadd( -155.5, 4.64693, -103.985, 1.47 ) }
    dend_37 { pt3dadd( -156.095, 3.52801, -103.834, 0.22 ) }
    dend_37 { pt3dadd( -156.323, 3.1037, -103.762, 0.22 ) }
    dend_37 { pt3dadd( -156.572, 2.67141, -103.684, 0.22 ) }
    dend_37 { pt3dadd( -157.051, 1.91823, -103.541, 0.22 ) }
    dend_37 { pt3dadd( -157.409, 1.42766, -103.485, 0.52 ) }
    dend_37 { pt3dadd( -157.549, 1.24848, -103.48, 0.52 ) }
    dend_37 { pt3dadd( -157.93, 0.72362, -103.527, 0.22 ) }
    dend_37 { pt3dadd( -158.183, 0.35305, -103.598, 0.74 ) }
    dend_37 { pt3dadd( -158.391, 0.0291678, -103.673, 0.74 ) }
    dend_37 { pt3dadd( -159.038, -0.994794, -103.98, 0.22 ) }
    dend_37 { pt3dadd( -159.408, -1.57645, -104.18, 0.22 ) }
    dend_37 { pt3dadd( -160.178, -2.80735, -104.65, 1.99 ) }
    dend_37 { pt3dadd( -160.591, -3.50252, -104.955, 2.43 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -59.4694, 22.353, -85.5123, 0.22 ) }
    dend_36 { pt3dadd( -61.2364, 24.0379, -86.2975, 0.22 ) }
    dend_36 { pt3dadd( -61.516, 24.3022, -86.426, 0.37 ) }
    dend_36 { pt3dadd( -62.3641, 25.0512, -86.7986, 0.22 ) }
    dend_36 { pt3dadd( -62.8405, 25.4581, -87.0017, 1.03 ) }
    dend_36 { pt3dadd( -63.4758, 26.0038, -87.2605, 1.4 ) }
    dend_36 { pt3dadd( -64.7212, 27.0759, -87.7793, 0.22 ) }
    dend_36 { pt3dadd( -64.7702, 27.1175, -87.8053, 0.22 ) }
    dend_36 { pt3dadd( -65.2713, 27.5436, -88.1301, 0.22 ) }
    dend_36 { pt3dadd( -65.3671, 27.6299, -88.2167, 0.22 ) }
    dend_36 { pt3dadd( -65.8597, 28.0744, -88.7003, 0.22 ) }
    dend_36 { pt3dadd( -66.3339, 28.4907, -89.1912, 0.44 ) }
    dend_36 { pt3dadd( -67.3875, 29.3713, -90.2999, 1.18 ) }
    dend_36 { pt3dadd( -67.5717, 29.5205, -90.4985, 1.47 ) }
    dend_36 { pt3dadd( -68.9828, 30.5577, -92.0073, 0.22 ) }
    dend_36 { pt3dadd( -69.5617, 30.9216, -92.5653, 0.22 ) }
    dend_36 { pt3dadd( -70.2419, 31.2958, -93.1671, 1.25 ) }
    dend_36 { pt3dadd( -70.9487, 31.659, -93.7344, 2.21 ) }
    dend_36 { pt3dadd( -71.6128, 31.9911, -94.2103, 2.06 ) }
    dend_36 { pt3dadd( -72.9834, 32.7013, -95.2164, 0.22 ) }
    dend_36 { pt3dadd( -73.8914, 33.1809, -95.8568, 0.22 ) }
    dend_36 { pt3dadd( -73.9679, 33.2256, -95.9146, 0.22 ) }
    dend_36 { pt3dadd( -74.5492, 33.588, -96.3606, 0.66 ) }
    dend_36 { pt3dadd( -74.9729, 33.8033, -96.6894, 0.88 ) }
    dend_36 { pt3dadd( -75.9126, 34.1565, -97.4004, 0.22 ) }
    dend_36 { pt3dadd( -76.3695, 34.2895, -97.7569, 0.22 ) }
    dend_36 { pt3dadd( -77.0843, 34.4312, -98.3327, 1.25 ) }
    dend_36 { pt3dadd( -77.5843, 34.4883, -98.7344, 1.4 ) }
    dend_36 { pt3dadd( -79.6283, 34.58, -100.35, 0.22 ) }
    dend_36 { pt3dadd( -80.546, 34.6122, -101.064, 1.84 ) }
    dend_36 { pt3dadd( -80.6018, 34.6139, -101.106, 1.84 ) }
    dend_36 { pt3dadd( -81.2232, 34.6534, -101.586, 1.84 ) }
    dend_36 { pt3dadd( -82.6506, 34.824, -102.689, 0.22 ) }
    dend_36 { pt3dadd( -82.7058, 34.8354, -102.73, 0.22 ) }
    dend_36 { pt3dadd( -83.5212, 35.1404, -103.332, 0.22 ) }
    dend_36 { pt3dadd( -83.6043, 35.1728, -103.401, 0.22 ) }
    dend_36 { pt3dadd( -84.0107, 35.3526, -103.737, 0.22 ) }
    dend_36 { pt3dadd( -84.0539, 35.3743, -103.772, 0.22 ) }
    dend_36 { pt3dadd( -84.5772, 35.6461, -104.177, 0.96 ) }
    dend_36 { pt3dadd( -85.2405, 35.9687, -104.714, 0.96 ) }
    dend_36 { pt3dadd( -86.2379, 36.3981, -105.513, 0.22 ) }
    dend_36 { pt3dadd( -87.0336, 36.7498, -106.142, 0.22 ) }
    dend_36 { pt3dadd( -87.0848, 36.7742, -106.183, 0.22 ) }
    dend_36 { pt3dadd( -87.9079, 37.1818, -106.782, 1.55 ) }
    dend_36 { pt3dadd( -88.4869, 37.4819, -107.173, 1.92 ) }
    dend_36 { pt3dadd( -89.0014, 37.7351, -107.502, 1.92 ) }
    dend_36 { pt3dadd( -89.0548, 37.759, -107.54, 1.92 ) }
    dend_36 { pt3dadd( -90.8574, 38.4739, -108.962, 0.22 ) }
    dend_36 { pt3dadd( -91.4744, 38.6929, -109.523, 0.22 ) }
    dend_36 { pt3dadd( -91.5223, 38.7084, -109.572, 0.22 ) }
    dend_36 { pt3dadd( -92.4052, 38.9503, -110.486, 1.55 ) }
    dend_36 { pt3dadd( -93.4697, 39.1968, -111.646, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_36 { pt3dadd( -93.5174, 39.2061, -111.697, 1.77 ) }
    dend_36 { pt3dadd( -95.2907, 39.4681, -113.435, 0.22 ) }
    dend_36 { pt3dadd( -95.3346, 39.4747, -113.475, 0.22 ) }
    dend_36 { pt3dadd( -96.0294, 39.5865, -114.005, 0.22 ) }
    dend_36 { pt3dadd( -96.0893, 39.597, -114.04, 0.22 ) }
    dend_36 { pt3dadd( -97.2118, 39.8144, -114.562, 0.22 ) }
    dend_36 { pt3dadd( -98.1849, 40.0195, -114.975, 0.22 ) }
    dend_36 { pt3dadd( -98.2396, 40.0319, -114.996, 0.22 ) }
    dend_36 { pt3dadd( -99.1041, 40.2387, -115.365, 0.96 ) }
    dend_36 { pt3dadd( -99.1659, 40.2556, -115.394, 0.96 ) }
    dend_36 { pt3dadd( -100.674, 40.6538, -116.052, 0.22 ) }
    dend_36 { pt3dadd( -101.558, 40.8871, -116.424, 1.4 ) }
    dend_36 { pt3dadd( -102.297, 41.0982, -116.716, 2.06 ) }
    dend_36 { pt3dadd( -102.82, 41.2565, -116.899, 2.36 ) }
    dend_36 { pt3dadd( -104.829, 41.9026, -117.528, 0.22 ) }
    dend_36 { pt3dadd( -105.994, 42.2997, -117.823, 0.22 ) }
    dend_36 { pt3dadd( -106.637, 42.5374, -117.935, 0.88 ) }
    dend_36 { pt3dadd( -107.06, 42.7096, -117.993, 1.18 ) }
    dend_36 { pt3dadd( -108.035, 43.1352, -118.089, 0.22 ) }
    dend_36 { pt3dadd( -108.107, 43.168, -118.096, 0.22 ) }
    dend_36 { pt3dadd( -108.866, 43.5492, -118.163, 0.22 ) }
    dend_36 { pt3dadd( -108.934, 43.588, -118.177, 0.22 ) }
    dend_36 { pt3dadd( -109.551, 43.9418, -118.345, 0.22 ) }
    dend_36 { pt3dadd( -109.601, 43.97, -118.362, 0.22 ) }
    dend_36 { pt3dadd( -110.36, 44.3605, -118.727, 0.59 ) }
    dend_36 { pt3dadd( -110.963, 44.6438, -119.033, 0.22 ) }
    dend_36 { pt3dadd( -112.077, 45.1487, -119.613, 1.55 ) }
    dend_36 { pt3dadd( -112.537, 45.3528, -119.844, 2.21 ) }
    dend_36 { pt3dadd( -113.512, 45.7843, -120.311, 2.06 ) }
    dend_36 { pt3dadd( -115.436, 46.6143, -121.156, 0.52 ) }
    dend_36 { pt3dadd( -116.317, 47.0043, -121.506, 0.52 ) }
    dend_36 { pt3dadd( -116.762, 47.206, -121.665, 0.52 ) }
    dend_36 { pt3dadd( -117.486, 47.5381, -121.877, 0.22 ) }
    dend_36 { pt3dadd( -118.174, 47.8836, -122.051, 0.66 ) }
    dend_36 { pt3dadd( -118.791, 48.2362, -122.161, 0.88 ) }
    dend_36 { pt3dadd( -119.78, 48.9099, -122.265, 0.22 ) }
    dend_36 { pt3dadd( -120.277, 49.282, -122.329, 0.88 ) }
    dend_36 { pt3dadd( -120.549, 49.507, -122.378, 0.88 ) }
    dend_36 { pt3dadd( -121.245, 50.1414, -122.538, 0.22 ) }
    dend_36 { pt3dadd( -121.737, 50.5854, -122.659, 0.22 ) }
    dend_36 { pt3dadd( -122.165, 50.9646, -122.763, 0.88 ) }
    dend_36 { pt3dadd( -122.684, 51.3796, -122.874, 1.18 ) }
    dend_36 { pt3dadd( -123.704, 52.1153, -123.079, 0.22 ) }
    dend_36 { pt3dadd( -123.762, 52.1526, -123.089, 0.22 ) }
    dend_36 { pt3dadd( -124.863, 52.7394, -123.273, 0.22 ) }
    dend_36 { pt3dadd( -125.611, 53.0943, -123.392, 0.22 ) }
    dend_36 { pt3dadd( -126.493, 53.4772, -123.554, 1.84 ) }
    dend_36 { pt3dadd( -127.149, 53.7314, -123.743, 2.36 ) }
    dend_36 { pt3dadd( -127.742, 53.9265, -123.952, 1.99 ) }
    dend_36 { pt3dadd( -129.292, 54.3643, -124.582, 0.15 ) }
    dend_36 { pt3dadd( -129.841, 54.4961, -124.841, 0.59 ) }
    dend_36 { pt3dadd( -130.629, 54.6488, -125.239, 0.74 ) }
    dend_36 { pt3dadd( -132.329, 54.9369, -126.134, 0.29 ) }
    dend_36 { pt3dadd( -133.112, 55.0551, -126.546, 0.22 ) }
    dend_36 { pt3dadd( -133.931, 55.1634, -126.984, 0.22 ) }
    dend_36 { pt3dadd( -135.104, 55.2626, -127.588, 1.47 ) }
    dend_36 { pt3dadd( -135.167, 55.2667, -127.618, 1.47 ) }
    dend_36 { pt3dadd( -135.661, 55.3084, -127.819, 1.84 ) }
    dend_36 { pt3dadd( -135.994, 55.3587, -127.947, 1.77 ) }
    dend_36 { pt3dadd( -136.692, 55.4975, -128.254, 1.62 ) }
    dend_36 { pt3dadd( -138.205, 55.8061, -128.942, 0.22 ) }
    dend_36 { pt3dadd( -138.84, 55.9366, -129.218, 1.03 ) }
    dend_36 { pt3dadd( -139.375, 56.0378, -129.435, 1.25 ) }
    dend_36 { pt3dadd( -140.998, 56.3312, -130.04, 0.22 ) }
    dend_36 { pt3dadd( -141.138, 56.3578, -130.086, 0.22 ) }
    dend_36 { pt3dadd( -141.952, 56.5282, -130.302, 0.22 ) }
    dend_36 { pt3dadd( -142.745, 56.7112, -130.478, 0.22 ) }
    dend_36 { pt3dadd( -143.563, 56.9172, -130.641, 0.22 ) }
    dend_36 { pt3dadd( -144.093, 57.0883, -130.748, 0.96 ) }
    dend_36 { pt3dadd( -144.598, 57.2927, -130.845, 1.11 ) }
    dend_36 { pt3dadd( -145.79, 57.8619, -131.116, 0.15 ) }
    dend_36 { pt3dadd( -146.846, 58.4402, -131.386, 1.77 ) }
    dend_36 { pt3dadd( -147.375, 58.7402, -131.548, 1.99 ) }
    dend_36 { pt3dadd( -148.889, 59.7122, -132.064, 0.22 ) }
    dend_36 { pt3dadd( -149.416, 60.0733, -132.261, 0.22 ) }
    dend_36 { pt3dadd( -150.025, 60.508, -132.5, 1.03 ) }
    dend_36 { pt3dadd( -150.4, 60.7837, -132.644, 1.03 ) }
    dend_36 { pt3dadd( -151.815, 61.8365, -133.204, 0.22 ) }
    dend_36 { pt3dadd( -152.546, 62.364, -133.486, 0.22 ) }
    dend_36 { pt3dadd( -153.285, 62.8786, -133.751, 0.96 ) }
    dend_36 { pt3dadd( -153.823, 63.2631, -133.946, 1.33 ) }
    dend_36 { pt3dadd( -154.502, 63.7639, -134.195, 0.66 ) }
    dend_36 { pt3dadd( -155.32, 64.3892, -134.505, 0.22 ) }
    dend_36 { pt3dadd( -155.784, 64.7577, -134.676, 0.88 ) }
    dend_36 { pt3dadd( -156.284, 65.1351, -134.871, 0.88 ) }
    dend_36 { pt3dadd( -156.992, 65.7044, -135.163, 0.22 ) }
    dend_36 { pt3dadd( -157.486, 66.1592, -135.422, 0.22 ) }
    dend_36 { pt3dadd( -157.654, 66.3347, -135.523, 0.22 ) }
    dend_36 { pt3dadd( -157.983, 66.7006, -135.728, 0.22 ) }
    dend_36 { pt3dadd( -157.983, 66.7006, -135.728, 0.81 ) }
    dend_36 { pt3dadd( -158.2, 66.9865, -135.865, 0.81 ) }
    dend_36 { pt3dadd( -159.058, 68.0719, -136.392, 0.22 ) }
    dend_36 { pt3dadd( -159.453, 68.5628, -136.646, 1.33 ) }
    dend_36 { pt3dadd( -159.605, 68.7515, -136.747, 1.62 ) }
    dend_36 { pt3dadd( -159.686, 68.8515, -136.798, 1.55 ) }
    dend_36 { pt3dadd( -160.069, 69.353, -137.028, 1.4 ) }
    dend_36 { pt3dadd( -161.017, 70.5945, -137.62, 0.22 ) }
    dend_36 { pt3dadd( -161.051, 70.6381, -137.641, 0.22 ) }
    dend_36 { pt3dadd( -161.554, 71.2706, -137.967, 0.22 ) }
    dend_36 { pt3dadd( -161.922, 71.7402, -138.221, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_36 { pt3dadd( -162.47, 72.4418, -138.639, 0.22 ) }
    dend_36 { pt3dadd( -163.141, 73.3209, -139.201, 1.25 ) }
    dend_36 { pt3dadd( -163.457, 73.7192, -139.464, 1.4 ) }
    dend_36 { pt3dadd( -163.525, 73.7971, -139.522, 1.4 ) }
    dend_36 { pt3dadd( -164.27, 74.5516, -140.163, 0.22 ) }
    dend_36 { pt3dadd( -164.967, 75.1276, -140.769, 0.22 ) }
    dend_36 { pt3dadd( -165.008, 75.1554, -140.802, 0.22 ) }
    dend_36 { pt3dadd( -165.961, 75.7303, -141.503, 0.22 ) }
    dend_36 { pt3dadd( -166.762, 76.1545, -142.049, 1.69 ) }
    dend_36 { pt3dadd( -167.432, 76.4624, -142.453, 1.84 ) }
    dend_36 { pt3dadd( -168.811, 76.9967, -143.18, 0.15 ) }
    dend_36 { pt3dadd( -169.664, 77.3011, -143.583, 0.15 ) }
    dend_36 { pt3dadd( -169.733, 77.3278, -143.611, 0.15 ) }
    dend_36 { pt3dadd( -170.475, 77.6525, -143.843, 0.15 ) }
    dend_36 { pt3dadd( -171.187, 78.0032, -144.014, 1.18 ) }
    dend_36 { pt3dadd( -171.827, 78.3492, -144.128, 1.47 ) }
    dend_36 { pt3dadd( -172.274, 78.6212, -144.187, 1.55 ) }
    dend_36 { pt3dadd( -173.967, 79.7173, -144.367, 0.22 ) }
    dend_36 { pt3dadd( -175.366, 80.6561, -144.484, 0.22 ) }
    dend_36 { pt3dadd( -176.146, 81.1982, -144.53, 1.47 ) }
    dend_36 { pt3dadd( -176.784, 81.6513, -144.555, 1.77 ) }
    dend_36 { pt3dadd( -177.411, 82.1029, -144.563, 1.69 ) }
    dend_36 { pt3dadd( -178.658, 83.0482, -144.549, 0.22 ) }
    dend_36 { pt3dadd( -179.355, 83.6049, -144.533, 0.74 ) }
    dend_36 { pt3dadd( -179.401, 83.6425, -144.532, 0.74 ) }
    dend_36 { pt3dadd( -179.837, 84.0113, -144.506, 1.03 ) }
    dend_36 { pt3dadd( -179.883, 84.0487, -144.501, 1.03 ) }
    dend_36 { pt3dadd( -180.971, 84.7973, -144.327, 0.22 ) }
    dend_36 { pt3dadd( -181.031, 84.8307, -144.316, 0.22 ) }
    dend_36 { pt3dadd( -181.69, 85.134, -144.187, 0.22 ) }
    dend_36 { pt3dadd( -181.754, 85.1592, -144.173, 0.22 ) }
    dend_36 { pt3dadd( -182.863, 85.5382, -143.905, 0.22 ) }
    dend_36 { pt3dadd( -183.855, 85.8646, -143.613, 0.96 ) }
    dend_36 { pt3dadd( -184.214, 85.9853, -143.492, 1.25 ) }
    dend_36 { pt3dadd( -184.677, 86.1685, -143.331, 1.25 ) }
    dend_36 { pt3dadd( -186.057, 86.7972, -142.846, 0.22 ) }
    dend_36 { pt3dadd( -186.699, 87.1384, -142.597, 0.52 ) }
    dend_36 { pt3dadd( -187.584, 87.6802, -142.239, 0.22 ) }
    dend_36 { pt3dadd( -188.263, 88.1585, -141.924, 0.22 ) }
    dend_36 { pt3dadd( -188.837, 88.598, -141.651, 0.74 ) }
    dend_36 { pt3dadd( -189.209, 88.9186, -141.473, 0.96 ) }
    dend_36 { pt3dadd( -190.077, 89.7876, -141.065, 0.22 ) }
    dend_36 { pt3dadd( -190.458, 90.2007, -140.893, 0.22 ) }
    dend_36 { pt3dadd( -191.034, 90.8479, -140.655, 1.18 ) }
    dend_36 { pt3dadd( -191.396, 91.2511, -140.512, 1.55 ) }
    dend_36 { pt3dadd( -191.788, 91.6796, -140.367, 1.84 ) }
    dend_36 { pt3dadd( -193.187, 93.1405, -139.918, 0.22 ) }
    dend_36 { pt3dadd( -193.618, 93.5688, -139.81, 0.52 ) }
    dend_36 { pt3dadd( -194.272, 94.2038, -139.643, 0.22 ) }
    dend_36 { pt3dadd( -194.929, 94.8181, -139.486, 0.22 ) }
    dend_36 { pt3dadd( -195.616, 95.4525, -139.332, 1.11 ) }
    dend_36 { pt3dadd( -195.94, 95.742, -139.267, 1.47 ) }
    dend_36 { pt3dadd( -196.632, 96.3499, -139.153, 1.69 ) }
    dend_36 { pt3dadd( -197.772, 97.3736, -138.968, 0.22 ) }
    dend_36 { pt3dadd( -198.219, 97.8052, -138.908, 0.22 ) }
    dend_36 { pt3dadd( -198.711, 98.326, -138.852, 0.81 ) }
    dend_36 { pt3dadd( -198.906, 98.5457, -138.837, 1.18 ) }
    dend_36 { pt3dadd( -198.957, 98.6056, -138.834, 1.18 ) }
    dend_36 { pt3dadd( -199.17, 98.8527, -138.835, 0.88 ) }
    dend_36 { pt3dadd( -199.844, 99.6595, -138.893, 0.22 ) }
    dend_36 { pt3dadd( -200.405, 100.394, -138.937, 0.22 ) }
    dend_36 { pt3dadd( -200.444, 100.45, -138.938, 0.22 ) }
    dend_36 { pt3dadd( -200.759, 100.919, -138.933, 0.74 ) }
    dend_36 { pt3dadd( -200.892, 101.138, -138.926, 0.74 ) }
    dend_36 { pt3dadd( -201.271, 101.812, -138.89, 0.22 ) }
    dend_36 { pt3dadd( -201.654, 102.507, -138.841, 0.22 ) }
    dend_36 { pt3dadd( -202.064, 103.323, -138.788, 1.25 ) }
    dend_36 { pt3dadd( -202.35, 103.916, -138.737, 1.47 ) }
    dend_36 { pt3dadd( -202.889, 105.058, -138.625, 0.22 ) }
    dend_36 { pt3dadd( -202.934, 105.151, -138.615, 0.22 ) }
    dend_36 { pt3dadd( -203.455, 106.195, -138.499, 0.22 ) }
    dend_36 { pt3dadd( -203.858, 107.032, -138.395, 0.52 ) }
    dend_36 { pt3dadd( -204.212, 107.863, -138.293, 0.22 ) }
    dend_36 { pt3dadd( -204.344, 108.19, -138.251, 0.22 ) }
    dend_36 { pt3dadd( -204.557, 108.661, -138.18, 0.81 ) }
    dend_36 { pt3dadd( -204.695, 108.951, -138.135, 0.81 ) }
    dend_36 { pt3dadd( -205.268, 110.054, -137.965, 0.22 ) }
    dend_36 { pt3dadd( -205.716, 110.786, -137.85, 1.33 ) }
    dend_36 { pt3dadd( -206.162, 111.484, -137.751, 1.62 ) }
    dend_36 { pt3dadd( -207.015, 112.825, -137.565, 0.22 ) }
    dend_36 { pt3dadd( -207.453, 113.516, -137.473, 0.88 ) }
    dend_36 { pt3dadd( -207.799, 114.057, -137.404, 0.88 ) }
    dend_36 { pt3dadd( -208.432, 115.014, -137.296, 0.22 ) }
    dend_36 { pt3dadd( -208.87, 115.679, -137.225, 0.22 ) }
    dend_36 { pt3dadd( -209.352, 116.477, -137.157, 0.96 ) }
    dend_36 { pt3dadd( -209.495, 116.734, -137.143, 1.33 ) }
    dend_36 { pt3dadd( -209.561, 116.854, -137.138, 1.33 ) }
    dend_36 { pt3dadd( -209.713, 117.135, -137.132, 1.33 ) }
    dend_36 { pt3dadd( -210.319, 118.222, -137.126, 0.22 ) }
    dend_36 { pt3dadd( -210.649, 118.732, -137.162, 0.44 ) }
    dend_36 { pt3dadd( -210.714, 118.813, -137.175, 0.44 ) }
    dend_36 { pt3dadd( -211.219, 119.387, -137.302, 0.22 ) }
    dend_36 { pt3dadd( -211.576, 119.759, -137.405, 0.81 ) }
    dend_36 { pt3dadd( -211.923, 120.082, -137.53, 1.25 ) }
    dend_36 { pt3dadd( -212.681, 120.713, -137.864, 0.66 ) }
    dend_36 { pt3dadd( -213.31, 121.168, -138.146, 0.22 ) }
    dend_36 { pt3dadd( -213.648, 121.387, -138.289, 0.44 ) }
    dend_36 { pt3dadd( -213.98, 121.584, -138.422, 0.44 ) }
    dend_36 { pt3dadd( -214.802, 122.092, -138.729, 0.22 ) }
    dend_36 { pt3dadd( -214.906, 122.16, -138.765, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_36 { pt3dadd( -215.916, 122.904, -139.041, 0.22 ) }
    dend_36 { pt3dadd( -216.457, 123.347, -139.185, 1.18 ) }
    dend_36 { pt3dadd( -216.799, 123.649, -139.268, 1.33 ) }
    dend_36 { pt3dadd( -217.439, 124.257, -139.399, 1.11 ) }
    dend_36 { pt3dadd( -217.479, 124.299, -139.405, 1.11 ) }
    dend_36 { pt3dadd( -218.34, 125.248, -139.507, 0.22 ) }
    dend_36 { pt3dadd( -218.385, 125.3, -139.511, 0.22 ) }
    dend_36 { pt3dadd( -218.88, 125.903, -139.558, 0.22 ) }
    dend_36 { pt3dadd( -219.325, 126.464, -139.597, 0.22 ) }
    dend_36 { pt3dadd( -219.899, 127.201, -139.641, 1.25 ) }
    dend_36 { pt3dadd( -220.121, 127.492, -139.658, 1.55 ) }
    dend_36 { pt3dadd( -220.458, 127.945, -139.685, 1.69 ) }
    dend_36 { pt3dadd( -220.814, 128.417, -139.713, 0.96 ) }
    dend_36 { pt3dadd( -221.763, 129.641, -139.79, 0.22 ) }
    dend_36 { pt3dadd( -221.816, 129.7, -139.793, 0.22 ) }
    dend_36 { pt3dadd( -222.04, 129.924, -139.802, 0.22 ) }
    dend_36 { pt3dadd( -222.378, 130.243, -139.809, 0.59 ) }
    dend_36 { pt3dadd( -222.656, 130.484, -139.812, 0.88 ) }
    dend_36 { pt3dadd( -223.013, 130.779, -139.813, 0.88 ) }
    dend_36 { pt3dadd( -224.261, 131.783, -139.831, 0.22 ) }
    dend_36 { pt3dadd( -224.371, 131.882, -139.835, 0.22 ) }
    dend_36 { pt3dadd( -224.974, 132.521, -139.837, 0.22 ) }
    dend_36 { pt3dadd( -225.012, 132.566, -139.837, 0.22 ) }
    dend_36 { pt3dadd( -225.46, 133.163, -139.821, 0.88 ) }
    dend_36 { pt3dadd( -225.713, 133.514, -139.786, 1.25 ) }
    dend_36 { pt3dadd( -226.079, 134.049, -139.704, 1.55 ) }
    dend_36 { pt3dadd( -226.939, 135.195, -139.482, 0.22 ) }
    dend_36 { pt3dadd( -226.982, 135.249, -139.469, 0.22 ) }
    dend_36 { pt3dadd( -227.641, 136.031, -139.262, 0.22 ) }
    dend_36 { pt3dadd( -228.463, 136.984, -138.925, 0.22 ) }
    dend_36 { pt3dadd( -228.507, 137.034, -138.905, 0.22 ) }
    dend_36 { pt3dadd( -228.984, 137.561, -138.675, 0.59 ) }
    dend_36 { pt3dadd( -229.078, 137.665, -138.628, 0.59 ) }
    dend_36 { pt3dadd( -229.302, 137.919, -138.511, 0.59 ) }
    dend_36 { pt3dadd( -230.244, 139.046, -137.977, 0.15 ) }
    dend_36 { pt3dadd( -230.765, 139.743, -137.683, 1.18 ) }
    dend_36 { pt3dadd( -231.368, 140.574, -137.318, 1.4 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 37/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 59.0175, 52.9435, -25.2989, 0.22 ) }
    dend_19 { pt3dadd( 60.3302, 54.3813, -25.511, 0.22 ) }
    dend_19 { pt3dadd( 60.9319, 55.0154, -25.6001, 0.81 ) }
    dend_19 { pt3dadd( 61.6297, 55.6905, -25.7113, 0.22 ) }
    dend_19 { pt3dadd( 62.1675, 56.1837, -25.7974, 0.22 ) }
    dend_19 { pt3dadd( 62.5034, 56.4648, -25.8481, 0.22 ) }
    dend_19 { pt3dadd( 63.0812, 56.8835, -25.9587, 0.22 ) }
    dend_19 { pt3dadd( 63.1426, 56.9139, -25.9712, 0.22 ) }
    dend_19 { pt3dadd( 64.1854, 57.3598, -26.2109, 1.4 ) }
    dend_19 { pt3dadd( 64.5204, 57.4967, -26.2915, 1.77 ) }
    dend_19 { pt3dadd( 65.1803, 57.7646, -26.4553, 1.18 ) }
    dend_19 { pt3dadd( 66.7705, 58.3932, -26.8707, 0.22 ) }
    dend_19 { pt3dadd( 67.3815, 58.6286, -27.0334, 0.22 ) }
    dend_19 { pt3dadd( 68.2746, 58.9761, -27.2658, 0.22 ) }
    dend_19 { pt3dadd( 68.6519, 59.1096, -27.3499, 0.88 ) }
    dend_19 { pt3dadd( 69.1552, 59.2795, -27.4439, 0.88 ) }
    dend_19 { pt3dadd( 70.1802, 59.6309, -27.5198, 0.29 ) }
    dend_19 { pt3dadd( 70.6629, 59.7887, -27.4916, 0.52 ) }
    dend_19 { pt3dadd( 71.0373, 59.9225, -27.4705, 0.52 ) }
    dend_19 { pt3dadd( 71.9465, 60.2387, -27.4163, 0.22 ) }
    dend_19 { pt3dadd( 72.411, 60.3967, -27.4135, 0.22 ) }
    dend_19 { pt3dadd( 73.9214, 60.9098, -27.4615, 1.84 ) }
    dend_19 { pt3dadd( 74.2694, 61.0305, -27.4833, 2.21 ) }
    dend_19 { pt3dadd( 75.9496, 61.635, -27.7099, 0.22 ) }
    dend_19 { pt3dadd( 76.5772, 61.8677, -27.8533, 0.22 ) }
    dend_19 { pt3dadd( 77.4297, 62.1985, -28.1248, 1.03 ) }
    dend_19 { pt3dadd( 77.4915, 62.2203, -28.149, 1.03 ) }
    dend_19 { pt3dadd( 77.8958, 62.3503, -28.3277, 1.11 ) }
    dend_19 { pt3dadd( 79.2097, 62.7461, -28.8715, 0.22 ) }
    dend_19 { pt3dadd( 80.5081, 63.0934, -29.3581, 0.22 ) }
    dend_19 { pt3dadd( 80.6173, 63.1231, -29.3976, 0.22 ) }
    dend_19 { pt3dadd( 81.3006, 63.3167, -29.6689, 0.29 ) }
    dend_19 { pt3dadd( 82.4067, 63.6323, -30.1765, 0.29 ) }
    dend_19 { pt3dadd( 83.5297, 63.9538, -30.7572, 1.55 ) }
    dend_19 { pt3dadd( 83.7145, 64.0082, -30.8626, 2.06 ) }
    dend_19 { pt3dadd( 83.7734, 64.025, -30.8963, 2.06 ) }
    dend_19 { pt3dadd( 85.3641, 64.4766, -31.7929, 0.66 ) }
    dend_19 { pt3dadd( 86.3591, 64.796, -32.3635, 0.22 ) }
    dend_19 { pt3dadd( 86.4169, 64.8154, -32.3976, 0.52 ) }
    dend_19 { pt3dadd( 86.5964, 64.8729, -32.494, 0.52 ) }
    dend_19 { pt3dadd( 87.6462, 65.2117, -32.9982, 0.22 ) }
    dend_19 { pt3dadd( 88.1835, 65.3825, -33.2173, 0.37 ) }
    dend_19 { pt3dadd( 89.5402, 65.8084, -33.6653, 1.77 ) }
    dend_19 { pt3dadd( 89.7413, 65.8713, -33.727, 1.99 ) }
    dend_19 { pt3dadd( 92.161, 66.6442, -34.4128, 0.22 ) }
    dend_19 { pt3dadd( 92.7415, 66.8318, -34.5644, 0.52 ) }
    dend_19 { pt3dadd( 93.811, 67.1804, -34.812, 0.22 ) }
    dend_19 { pt3dadd( 94.6825, 67.4612, -34.9868, 0.22 ) }
    dend_19 { pt3dadd( 95.7833, 67.7879, -35.1549, 0.22 ) }
    dend_19 { pt3dadd( 96.4657, 67.9916, -35.2376, 0.96 ) }
    dend_19 { pt3dadd( 96.9088, 68.1258, -35.2666, 1.11 ) }
    dend_19 { pt3dadd( 98.3871, 68.5562, -35.3634, 0.22 ) }
    dend_19 { pt3dadd( 98.4636, 68.5787, -35.368, 0.22 ) }
    dend_19 { pt3dadd( 99.4488, 68.8663, -35.4243, 0.22 ) }
    dend_19 { pt3dadd( 99.5233, 68.8929, -35.435, 0.22 ) }
    dend_19 { pt3dadd( 100.291, 69.2494, -35.6195, 0.59 ) }
    dend_19 { pt3dadd( 100.508, 69.3816, -35.6927, 0.96 ) }
    dend_19 { pt3dadd( 100.933, 69.6845, -35.8698, 1.25 ) }
    dend_19 { pt3dadd( 101.231, 69.9023, -36.0019, 1.25 ) }
    dend_19 { pt3dadd( 102.888, 71.1206, -36.8053, 0.22 ) }
    dend_19 { pt3dadd( 103.617, 71.6269, -37.1617, 0.22 ) }
    dend_19 { pt3dadd( 104.359, 72.1171, -37.5381, 0.66 ) }
    dend_19 { pt3dadd( 104.976, 72.5003, -37.8513, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_19 { pt3dadd( 105.439, 72.7794, -38.0775, 0.29 ) }
    dend_19 { pt3dadd( 106.135, 73.1795, -38.3842, 1.25 ) }
    dend_19 { pt3dadd( 106.506, 73.3689, -38.5176, 1.84 ) }
    dend_19 { pt3dadd( 107.795, 74.0252, -38.9792, 0.22 ) }
    dend_19 { pt3dadd( 107.852, 74.0587, -38.9994, 0.22 ) }
    dend_19 { pt3dadd( 108.643, 74.6035, -39.3764, 0.88 ) }
    dend_19 { pt3dadd( 109.015, 74.8802, -39.612, 0.88 ) }
    dend_19 { pt3dadd( 109.113, 74.9607, -39.6899, 0.88 ) }
    dend_19 { pt3dadd( 110.062, 75.7658, -40.5497, 0.22 ) }
    dend_19 { pt3dadd( 110.505, 76.1482, -40.9742, 0.88 ) }
    dend_19 { pt3dadd( 111.561, 77.0645, -42.0127, 0.66 ) }
    dend_19 { pt3dadd( 112.278, 77.6854, -42.751, 1.11 ) }
    dend_19 { pt3dadd( 113.383, 78.6712, -43.9088, 0.22 ) }
    dend_19 { pt3dadd( 113.423, 78.7084, -43.9512, 0.22 ) }
    dend_19 { pt3dadd( 113.93, 79.1952, -44.4782, 0.29 ) }
    dend_19 { pt3dadd( 114.05, 79.3176, -44.6002, 0.29 ) }
    dend_19 { pt3dadd( 114.09, 79.364, -44.6319, 0.29 ) }
    dend_19 { pt3dadd( 114.752, 80.1654, -45.0842, 0.22 ) }
    dend_19 { pt3dadd( 114.786, 80.2062, -45.11, 0.22 ) }
    dend_19 { pt3dadd( 114.964, 80.4639, -45.3495, 0.81 ) }
    dend_19 { pt3dadd( 114.989, 80.5088, -45.3958, 0.81 ) }
    dend_19 { pt3dadd( 115.252, 81.0419, -45.9684, 0.22 ) }
    dend_19 { pt3dadd( 115.687, 81.9381, -46.9412, 1.47 ) }
    dend_19 { pt3dadd( 115.989, 82.5451, -47.5954, 1.69 ) }
    dend_19 { pt3dadd( 116.888, 84.2014, -49.4367, 0.22 ) }
    dend_19 { pt3dadd( 117.08, 84.5463, -49.8192, 0.44 ) }
    dend_19 { pt3dadd( 117.625, 85.4941, -50.8414, 0.22 ) }
    dend_19 { pt3dadd( 118.106, 86.3239, -51.7534, 1.4 ) }
    dend_19 { pt3dadd( 118.326, 86.6975, -52.1236, 1.62 ) }
    dend_19 { pt3dadd( 119.168, 88.033, -53.3096, 0.29 ) }
    dend_19 { pt3dadd( 119.801, 88.9606, -54.0568, 0.22 ) }
    dend_19 { pt3dadd( 120.59, 90.0925, -54.9678, 2.06 ) }
    dend_19 { pt3dadd( 121.493, 91.4171, -55.9934, 1.18 ) }
    dend_19 { pt3dadd( 122.432, 92.8638, -57.0816, 0.22 ) }
    dend_19 { pt3dadd( 122.777, 93.4211, -57.4846, 0.59 ) }
    dend_19 { pt3dadd( 122.808, 93.4738, -57.5167, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 36/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 59.0175, 52.9435, -25.2989, 0.22 ) }
    dend_18 { pt3dadd( 60.9693, 52.2274, -25.3475, 0.22 ) }
    dend_18 { pt3dadd( 62.0282, 51.8747, -25.393, 0.22 ) }
    dend_18 { pt3dadd( 62.6605, 51.6901, -25.4727, 0.88 ) }
    dend_18 { pt3dadd( 62.8691, 51.6298, -25.5056, 0.88 ) }
    dend_18 { pt3dadd( 64.0526, 51.2817, -25.7559, 0.22 ) }
    dend_18 { pt3dadd( 65.1294, 50.9565, -26.0444, 1.69 ) }
    dend_18 { pt3dadd( 65.3995, 50.8821, -26.1391, 1.99 ) }
    dend_18 { pt3dadd( 67.4086, 50.22, -26.8735, 0.22 ) }
    dend_18 { pt3dadd( 67.6027, 50.1458, -26.9439, 0.37 ) }
    dend_18 { pt3dadd( 68.807, 49.6617, -27.4061, 0.22 ) }
    dend_18 { pt3dadd( 69.6198, 49.3081, -27.747, 1.47 ) }
    dend_18 { pt3dadd( 69.9797, 49.1313, -27.8981, 2.06 ) }
    dend_18 { pt3dadd( 71.21, 48.4642, -28.3873, 0.22 ) }
    dend_18 { pt3dadd( 71.6704, 48.1558, -28.5235, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.594, 214.236, 0.718706, 0.22 ) }
    dend_7 { pt3dadd( -19.8009, 215.693, 1.03004, 0.22 ) }
    dend_7 { pt3dadd( -20.3571, 216.342, 1.20995, 0.22 ) }
    dend_7 { pt3dadd( -20.6455, 216.693, 1.3182, 0.74 ) }
    dend_7 { pt3dadd( -20.95, 217.076, 1.49579, 0.88 ) }
    dend_7 { pt3dadd( -21.0354, 217.184, 1.55507, 0.88 ) }
    dend_7 { pt3dadd( -21.646, 217.919, 1.99768, 0.22 ) }
    dend_7 { pt3dadd( -22.0455, 218.243, 2.31619, 0.59 ) }
    dend_7 { pt3dadd( -22.4128, 218.482, 2.6096, 0.74 ) }
    dend_7 { pt3dadd( -23.4759, 219.04, 3.41805, 0.22 ) }
    dend_7 { pt3dadd( -23.5279, 219.066, 3.45668, 0.22 ) }
    dend_7 { pt3dadd( -23.9796, 219.271, 3.7781, 0.81 ) }
    dend_7 { pt3dadd( -25.169, 219.728, 4.57965, 0.22 ) }
    dend_7 { pt3dadd( -25.6106, 219.854, 4.85934, 0.22 ) }
    dend_7 { pt3dadd( -26.4326, 220.023, 5.32269, 0.22 ) }
    dend_7 { pt3dadd( -27.274, 220.15, 5.69477, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 67/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -18.594, 214.236, 0.718706, 0.22 ) }
    dend_6 { pt3dadd( -18.4369, 216.075, 0.417177, 0.22 ) }
    dend_6 { pt3dadd( -18.4313, 216.141, 0.404323, 0.22 ) }
    dend_6 { pt3dadd( -18.3843, 216.922, 0.237211, 0.22 ) }
    dend_6 { pt3dadd( -18.3466, 217.693, 0.0604703, 0.81 ) }
    dend_6 { pt3dadd( -18.3246, 218.391, -0.10447, 1.11 ) }
    dend_6 { pt3dadd( -18.3067, 219.441, -0.35918, 0.22 ) }
    dend_6 { pt3dadd( -18.2998, 220.193, -0.565278, 0.22 ) }
    dend_6 { pt3dadd( -18.3083, 220.688, -0.707382, 0.22 ) }
    dend_6 { pt3dadd( -18.3124, 220.743, -0.724809, 0.22 ) }
    dend_6 { pt3dadd( -18.4302, 221.779, -1.05861, 1.55 ) }
    dend_6 { pt3dadd( -18.4727, 222.197, -1.19974, 2.21 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 79/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 22.821, -81.9702, -95.7191, 1.18 ) }
    dend_59 { pt3dadd( 25.9385, -83.2251, -101.043, 1.18 ) }
    dend_59 { pt3dadd( 27.7286, -84.0381, -104.002, 0.52 ) }
    dend_59 { pt3dadd( 27.8922, -84.1168, -104.267, 1.11 ) }
    dend_59 { pt3dadd( 28.9687, -84.621, -106.141, 1.47 ) }
    dend_59 { pt3dadd( 29.8145, -85.0172, -107.614, 1.55 ) }
    dend_59 { pt3dadd( 31.0354, -85.5891, -109.74, 0.59 ) }
    dend_59 { pt3dadd( 31.5841, -85.8887, -110.652, 0.59 ) }
    dend_59 { pt3dadd( 31.9829, -86.1278, -111.4, 0.96 ) }
    dend_59 { pt3dadd( 33.4734, -87.0162, -114.417, 0.66 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 89/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 22.821, -81.9702, -95.7191, 0.29 ) }
    dend_58 { pt3dadd( 24.9073, -83.6968, -98.7681, 0.29 ) }
    dend_58 { pt3dadd( 25.3692, -84.0791, -99.4432, 0.29 ) }
    dend_58 { pt3dadd( 25.7941, -84.4308, -100.064, 0.37 ) }
    dend_58 { pt3dadd( 26.5865, -85.0865, -101.222, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 94/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -160.591, -3.50252, -104.955, 0.22 ) }
    dend_39 { pt3dadd( -161.35, -4.77052, -106.308, 0.22 ) }
    dend_39 { pt3dadd( -161.42, -4.89568, -106.429, 0.22 ) }
    dend_39 { pt3dadd( -161.868, -5.77863, -107.263, 0.81 ) }
    dend_39 { pt3dadd( -161.887, -5.81886, -107.303, 0.81 ) }
    dend_39 { pt3dadd( -162.408, -6.83223, -108.329, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_39 { pt3dadd( -162.917, -7.71837, -109.244, 0.15 ) }
    dend_39 { pt3dadd( -163.337, -8.37689, -109.928, 0.96 ) }
    dend_39 { pt3dadd( -163.907, -9.25939, -110.826, 2.21 ) }
    dend_39 { pt3dadd( -164.687, -10.4757, -112.087, 2.36 ) }
    dend_39 { pt3dadd( -165.638, -11.9593, -113.612, 0.22 ) }
    dend_39 { pt3dadd( -166.248, -12.9489, -114.647, 0.22 ) }
    dend_39 { pt3dadd( -166.59, -13.5133, -115.267, 1.4 ) }
    dend_39 { pt3dadd( -166.729, -13.748, -115.521, 1.77 ) }
    dend_39 { pt3dadd( -167.794, -15.612, -117.496, 0.22 ) }
    dend_39 { pt3dadd( -168.294, -16.5482, -118.453, 0.37 ) }
    dend_39 { pt3dadd( -168.862, -17.7797, -119.646, 0.96 ) }
    dend_39 { pt3dadd( -169.146, -18.3972, -120.25, 0.88 ) }
    dend_39 { pt3dadd( -169.493, -19.0868, -120.937, 0.22 ) }
    dend_39 { pt3dadd( -169.519, -19.1324, -120.983, 0.22 ) }
    dend_39 { pt3dadd( -169.729, -19.431, -121.271, 0.96 ) }
    dend_39 { pt3dadd( -170.121, -19.914, -121.745, 1.11 ) }
    dend_39 { pt3dadd( -171.357, -21.3004, -123.034, 0.22 ) }
    dend_39 { pt3dadd( -171.911, -21.8959, -123.594, 0.22 ) }
    dend_39 { pt3dadd( -172.507, -22.5185, -124.169, 1.25 ) }
    dend_39 { pt3dadd( -172.731, -22.7401, -124.372, 1.55 ) }
    dend_39 { pt3dadd( -173.496, -23.4507, -125.017, 0.29 ) }
    dend_39 { pt3dadd( -173.886, -23.7673, -125.303, 0.22 ) }
    dend_39 { pt3dadd( -174.157, -23.9593, -125.452, 0.52 ) }
    dend_39 { pt3dadd( -175.197, -24.5846, -125.971, 0.22 ) }
    dend_39 { pt3dadd( -175.962, -24.9469, -126.354, 1.25 ) }
    dend_39 { pt3dadd( -176.242, -25.0516, -126.484, 1.33 ) }
    dend_39 { pt3dadd( -177.282, -25.3331, -126.918, 0.59 ) }
    dend_39 { pt3dadd( -177.894, -25.4716, -127.165, 0.15 ) }
    dend_39 { pt3dadd( -178.621, -25.6104, -127.431, 0.44 ) }
    dend_39 { pt3dadd( -180.244, -25.8335, -127.975, 0.22 ) }
    dend_39 { pt3dadd( -181.12, -25.9228, -128.256, 1.25 ) }
    dend_39 { pt3dadd( -181.572, -25.9574, -128.395, 1.55 ) }
    dend_39 { pt3dadd( -183.414, -26.0591, -128.929, 0.22 ) }
    dend_39 { pt3dadd( -184.467, -26.1003, -129.254, 0.22 ) }
    dend_39 { pt3dadd( -185.874, -26.1311, -129.71, 0.29 ) }
    dend_39 { pt3dadd( -187.215, -26.1346, -130.169, 0.22 ) }
    dend_39 { pt3dadd( -187.419, -26.1315, -130.251, 0.81 ) }
    dend_39 { pt3dadd( -187.825, -26.119, -130.422, 1.03 ) }
    dend_39 { pt3dadd( -189.368, -26.0246, -131.081, 0.22 ) }
    dend_39 { pt3dadd( -190.151, -25.9766, -131.443, 1.18 ) }
    dend_39 { pt3dadd( -190.7, -25.9517, -131.699, 1.47 ) }
    dend_39 { pt3dadd( -191.615, -25.9024, -132.106, 1.11 ) }
    dend_39 { pt3dadd( -192.837, -25.7959, -132.618, 0.22 ) }
    dend_39 { pt3dadd( -193.179, -25.7488, -132.751, 0.74 ) }
    dend_39 { pt3dadd( -193.742, -25.646, -132.935, 0.74 ) }
    dend_39 { pt3dadd( -194.59, -25.4242, -133.206, 0.22 ) }
    dend_39 { pt3dadd( -195.734, -25.038, -133.556, 0.22 ) }
    dend_39 { pt3dadd( -196.209, -24.8413, -133.683, 0.22 ) }
    dend_39 { pt3dadd( -196.964, -24.4965, -133.892, 1.33 ) }
    dend_39 { pt3dadd( -197.292, -24.3379, -133.979, 1.47 ) }
    dend_39 { pt3dadd( -198.411, -23.7633, -134.244, 0.22 ) }
    dend_39 { pt3dadd( -199.197, -23.3226, -134.435, 0.37 ) }
    dend_39 { pt3dadd( -199.869, -22.9463, -134.612, 0.22 ) }
    dend_39 { pt3dadd( -200.662, -22.5366, -134.813, 0.81 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 54/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -160.591, -3.50252, -104.955, 0.22 ) }
    dend_38 { pt3dadd( -161.693, -2.55793, -105.253, 0.22 ) }
    dend_38 { pt3dadd( -161.739, -2.52262, -105.266, 0.22 ) }
    dend_38 { pt3dadd( -162.633, -1.95975, -105.555, 0.22 ) }
    dend_38 { pt3dadd( -162.693, -1.92899, -105.574, 0.22 ) }
    dend_38 { pt3dadd( -163.585, -1.58899, -105.801, 0.22 ) }
    dend_38 { pt3dadd( -163.898, -1.49772, -105.876, 0.96 ) }
    dend_38 { pt3dadd( -164.484, -1.4017, -105.995, 0.96 ) }
    dend_38 { pt3dadd( -165.3, -1.34633, -106.164, 0.52 ) }
    dend_38 { pt3dadd( -166.63, -1.35813, -106.446, 0.22 ) }
    dend_38 { pt3dadd( -168.072, -1.45712, -106.744, 0.22 ) }
    dend_38 { pt3dadd( -168.925, -1.56384, -106.912, 0.96 ) }
    dend_38 { pt3dadd( -169.379, -1.62722, -106.99, 1.11 ) }
    dend_38 { pt3dadd( -170.826, -1.83519, -107.205, 0.22 ) }
    dend_38 { pt3dadd( -170.894, -1.84584, -107.216, 0.22 ) }
    dend_38 { pt3dadd( -171.792, -2.01038, -107.372, 0.22 ) }
    dend_38 { pt3dadd( -172.44, -2.12424, -107.492, 0.22 ) }
    dend_38 { pt3dadd( -173.309, -2.25501, -107.645, 0.74 ) }
    dend_38 { pt3dadd( -174.28, -2.36879, -107.815, 0.22 ) }
    dend_38 { pt3dadd( -174.979, -2.41029, -107.924, 0.88 ) }
    dend_38 { pt3dadd( -175.195, -2.4208, -107.962, 1.11 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_25, dend_0, dend_64, dend_49, dend_41, dend_26, dend_10, dend_1, dend_63, dend_50, dend_45, dend_42, dend_30, dend_27, dend_20, dend_11, dend_9, dend_2, dend_60, dend_51, dend_47, dend_46, dend_44, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_15, dend_12, dend_8, dend_3, dend_62, dend_61, dend_55, dend_52, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_17, dend_16, dend_14, dend_13, dend_5, dend_4, dend_57, dend_56, dend_54, dend_53, dend_37, dend_36, dend_19, dend_18, dend_7, dend_6, dend_59, dend_58, dend_39, dend_38]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_48, dend_25, dend_0, dend_64, dend_49, dend_41, dend_26, dend_10, dend_1, dend_63, dend_50, dend_45, dend_42, dend_30, dend_27, dend_20, dend_11, dend_9, dend_2, dend_60, dend_51, dend_47, dend_46, dend_44, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_15, dend_12, dend_8, dend_3, dend_62, dend_61, dend_55, dend_52, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_17, dend_16, dend_14, dend_13, dend_5, dend_4, dend_57, dend_56, dend_54, dend_53, dend_37, dend_36, dend_19, dend_18, dend_7, dend_6, dend_59, dend_58, dend_39, dend_38]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_45 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_42 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_47 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_46 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_44 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_24 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_21 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_12 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_61 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_52 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_40 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_33 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_32 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_57 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_53 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_36 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_49 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_50 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_64 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_27 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_63 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_62 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_55 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_18 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_58 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_59 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_4 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_5 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_6 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_7 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_22 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_23 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_41 nseg = 3
    dend_45 nseg = 3
    dend_42 nseg = 7
    dend_47 nseg = 5
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 9
    dend_28 nseg = 9
    dend_24 nseg = 5
    dend_21 nseg = 9
    dend_12 nseg = 3
    dend_8 nseg = 11
    dend_3 nseg = 7
    dend_61 nseg = 11
    dend_52 nseg = 3
    dend_40 nseg = 9
    dend_33 nseg = 9
    dend_32 nseg = 11
    dend_14 nseg = 5
    dend_13 nseg = 5
    dend_57 nseg = 3
    dend_56 nseg = 11
    dend_53 nseg = 5
    dend_37 nseg = 5
    dend_36 nseg = 11
    dend_19 nseg = 5
    dend_39 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_MC_29457dde26_0_0


