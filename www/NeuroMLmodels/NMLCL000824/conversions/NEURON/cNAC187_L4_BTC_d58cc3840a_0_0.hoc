// Cell: cNAC187_L4_BTC_d58cc3840a_0_0
/*
{
  "id" : "cNAC187_L4_BTC_d58cc3840a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.71855, 1.8584, 2.77", "2.15135, -14.8333, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 10.5559, -3.7416, 1.38", "-6.31935, 12.6156, -3.96504, 1.38", "-8.23069, 15.8405, -4.31488, 1.66", "-9.86265, 18.594, -4.61359, 1.38", "-11.1677, 20.796, -4.85246, 1.11", "-12.1984, 22.535, -5.04112, 1.11", "-14.5811, 26.5553, -5.47725, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.6302, 6.4384, 1.38", "6.01563, 10.4317, 7.43387, 1.38", "6.13629, 12.7813, 8.05132, 1.38", "6.49398, 16.8897, 9.26221, 1.38", "6.98289, 21.2716, 10.6151, 1.38", "7.35087, 24.5697, 11.6333, 1.38", "7.67923, 27.5126, 12.542, 0.83", "7.89367, 30.3736, 13.4875, 1.38", "8.20773, 33.7687, 14.6588, 1.38", "8.92528, 37.8175, 16.0315, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.695856", "6.19422, -24.7888, -0.978947, 0.695856", "9.61231, -39.3941, -0.978947, 0.695856" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.15135, -14.8333, 1.8584, 2.22", "4.5864, -19.4071, 1.48097, 2.22", "5.85313, -21.7864, 1.28463, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.15135, -14.8333, 1.8584, 0.83", "-0.2236, -16.7676, 2.64637, 0.83", "-1.8695, -18.1121, 3.41006, 1.11", "-4.14029, -19.9671, 4.46371, 0.83", "-5.88446, -21.3919, 5.27301, 0.83", "-8.84172, -23.8076, 6.64518, 1.38", "-11.6683, -26.1166, 7.95672, 1.38", "-14.1643, -27.9374, 9.31973, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.5811, 26.5553, -5.47725, 0.55", "-18.1422, 27.374, -4.01292, 0.55", "-19.8291, 27.5487, -3.0279, 0.55", "-21.0258, 27.6023, -2.23075, 0.55", "-22.9915, 27.6059, -0.864014, 1.11", "-26.4348, 27.4929, 1.53259, 0.83", "-29.9029, 27.2285, 3.99617, 0.83", "-33.5295, 26.6587, 6.77925, 0.55", "-35.4993, 26.2268, 8.3119, 1.38", "-36.9302, 25.8235, 9.43904, 0.28", "-38.2343, 25.3684, 10.4759, 0.83", "-39.8055, 24.8187, 11.7677, 0.28", "-40.8923, 24.4249, 12.7063, 0.55", "-42.2719, 24.0089, 13.8259, 0.55", "-44.4627, 23.4304, 15.5897, 0.55", "-46.3555, 22.944, 17.0986, 0.55", "-49.576, 22.2132, 19.7065, 0.55", "-50.9389, 21.9385, 20.7726, 0.55", "-53.5562, 21.449, 22.739, 0.83", "-55.4002, 21.1484, 24.0698, 0.83", "-56.8761, 20.9279, 25.0561, 0.83", "-60.0245, 20.5234, 27.092, 0.83", "-61.197, 20.3549, 27.8099, 0.83", "-64.018, 19.9136, 29.6387, 0.83", "-67.8673, 19.2119, 32.2005, 0.83", "-68.8345, 19.0601, 32.8376, 0.83", "-70.9478, 18.7764, 34.1789, 0.28", "-72.1381, 18.5793, 34.8512, 0.83", "-75.003, 18.0753, 36.3799, 0.28", "-77.0268, 17.7001, 37.313, 0.83", "-79.4036, 17.2544, 38.2717, 0.28", "-79.9192, 17.1556, 38.4713, 0.55", "-82.8806, 16.6752, 39.4754, 0.55", "-85.0184, 16.3976, 40.1261, 0.28", "-87.4734, 16.088, 40.6245, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.5811, 26.5553, -5.47725, 1.11", "-15.521, 30.5317, -7.76945, 1.11", "-16.0789, 32.694, -8.83049, 1.11", "-16.7518, 35.302, -10.1102, 1.11", "-17.3174, 37.4944, -11.186, 1.11", "-17.9835, 40.076, -12.4527, 0.83", "-18.6656, 42.7198, -13.75, 0.83", "-19.1815, 44.7935, -14.4858, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.92528, 37.8175, 16.0315, 0.83", "7.78732, 41.7656, 17.6347, 0.83", "6.93619, 44.7185, 18.8338, 0.83", "6.27695, 47.0057, 19.7626, 0.83", "5.24818, 50.5749, 21.212, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.92528, 37.8175, 16.0315, 0.83", "13.3353, 41.487, 16.3615, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.695856", "13.0304, -53.9995, -0.978947, 0.695856", "16.4485, -68.6049, -0.978947, 0.695856" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.85313, -21.7864, 1.28463, 0.83", "6.91311, -23.0532, -0.960172, 0.83", "7.52327, -23.6156, -2.29192, 0.83", "8.27296, -24.1948, -3.965, 0.83", "11.2724, -26.4228, -10.8652, 0.83", "12.9377, -27.6461, -14.689, 0.83", "15.4335, -29.4794, -20.4197, 0.55", "16.5229, -30.2749, -23.2534, 0.83", "17.715, -31.092, -26.5558, 0.83", "18.8324, -31.7527, -29.6856, 1.11", "19.0743, -31.8503, -30.2106, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.85313, -21.7864, 1.28463, 1.66", "6.80521, -24.2898, 1.36395, 1.66", "8.17735, -27.3078, 1.44592, 1.11", "9.21329, -29.3082, 1.50486, 1.11", "11.1413, -32.4214, 1.90392, 1.11", "12.7872, -35.0793, 2.2446, 1.11", "13.9385, -36.9384, 2.4829, 1.38", "15.3083, -38.924, 2.76524, 1.11", "16.1726, -40.0282, 2.98016, 1.11", "19.8608, -43.8511, 4.07442, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-14.1643, -27.9374, 9.31973, 0.28", "-14.4242, -30.16, 12.6735, 0.28", "-14.6161, -31.0795, 14.1836, 1.11", "-15.2861, -34.1201, 19.5023, 0.55", "-15.4634, -35.0592, 21.1095, 0.83", "-15.8558, -37.1382, 24.6674, 0.83", "-16.3082, -39.5343, 28.768, 0.55", "-16.5929, -40.8867, 31.1921, 1.11", "-17.0626, -43.2251, 35.582, 0.55", "-17.2817, -44.0587, 37.1163, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-14.1643, -27.9374, 9.31973, 0.83", "-18.0432, -28.3039, 10.5441, 0.83", "-20.9513, -28.5585, 11.4201, 1.11", "-23.828, -28.727, 12.2116, 0.83", "-27.0625, -28.8576, 13.0092, 0.83", "-31.0514, -29.0186, 13.9929, 0.83", "-34.859, -29.1723, 14.9319, 0.83", "-39.0357, -29.3404, 15.8992, 1.11", "-43.4345, -29.4591, 16.7721, 1.11", "-47.3354, -29.5182, 17.4591, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-87.4734, 16.088, 40.6245, 0.28", "-87.2407, 14.516, 41.427, 0.28", "-87.1581, 13.9578, 41.7119, 0.83", "-86.741, 11.1405, 43.1501, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-87.4734, 16.088, 40.6245, 0.28", "-90.7063, 16.6459, 41.6317, 0.28", "-91.8515, 16.8138, 41.6128, 0.55", "-94.3976, 17.0852, 41.1996, 0.28", "-96.6819, 17.2655, 40.6986, 0.83", "-99.4028, 17.4803, 40.1018, 0.28", "-102.013, 17.6863, 39.5293, 0.28", "-106.47, 17.8996, 37.8218, 0.28", "-107.379, 17.9312, 37.3682, 0.83", "-108.783, 17.9784, 36.4283, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-19.1815, 44.7935, -14.4858, 0.55", "-20.277, 45.1122, -15.4359, 0.55", "-22.2085, 45.674, -17.111, 0.55", "-24.0732, 46.2164, -18.7283, 0.83", "-27.4374, 47.1949, -21.6461, 0.55", "-29.5462, 47.8083, -23.475, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-19.1815, 44.7935, -14.4858, 0.55", "-17.7382, 48.833, -15.5358, 0.55", "-17.1042, 50.8452, -15.9222, 0.55", "-16.608, 52.5811, -16.0965, 0.83", "-15.97, 54.8726, -16.2134, 0.55", "-15.5705, 56.3459, -16.2762, 0.83", "-14.9673, 58.5419, -16.3394, 0.55", "-14.5341, 60.2179, -16.2876, 0.83", "-13.8373, 62.623, -16.276, 0.28", "-13.3967, 63.9652, -16.3117, 0.83", "-12.5902, 66.1717, -16.4256, 0.55", "-11.9288, 67.9009, -16.548, 0.83", "-10.8637, 70.5476, -16.8012, 0.55", "-9.5956, 73.5043, -17.1775, 0.83", "-8.37502, 76.2405, -17.6335, 0.83", "-6.72262, 79.882, -18.2354, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "5.24818, 50.5749, 21.212, 0.83", "6.30546, 54.201, 22.18, 0.83", "7.2839, 58.2004, 23.2067, 0.83", "7.79241, 60.681, 23.918, 0.83", "8.41583, 64.1316, 24.9804, 0.83", "9.07187, 68.0194, 26.1893, 0.83", "9.72053, 72.3317, 27.5218, 0.83", "10.2377, 76.4435, 28.8415, 0.83", "10.6838, 80.5284, 30.2344, 0.83", "10.8913, 82.9886, 31.0365, 0.55", "11.0611, 85.6732, 31.8002, 0.55", "11.2236, 87.9212, 32.2932, 0.83", "11.4136, 89.9294, 32.579, 0.83", "11.6469, 91.7786, 32.7429, 0.55", "11.9935, 94.1135, 32.7421, 0.83", "12.2901, 96.0073, 32.6872, 0.55", "12.5312, 97.6347, 32.627, 0.83", "12.8649, 100.163, 32.5387, 0.55", "13.1442, 102.706, 32.412, 0.83", "13.3649, 105.019, 32.0881, 0.55", "13.454, 106.278, 31.8495, 0.55", "13.5446, 108.228, 31.456, 0.83", "13.611, 111.021, 30.8601, 0.83", "13.6456, 113.334, 30.3675, 0.55", "13.6237, 118.579, 29.2127, 0.83", "13.5798, 121.623, 28.5407, 0.83", "13.5336, 125.335, 27.7766, 0.83", "13.5149, 127.592, 27.4115, 0.83", "13.4624, 129.403, 27.2256, 0.83", "13.3739, 131.19, 27.1786, 0.55", "13.2277, 133.229, 27.2606, 0.55", "12.9828, 135.555, 27.3356, 0.83", "12.3893, 139.878, 27.4374, 0.83", "11.9084, 143.296, 27.4889, 1.11", "11.5159, 145.894, 27.5048, 0.55", "11.016, 148.743, 27.5144, 1.11", "10.169, 152.747, 27.5314, 0.83", "9.40166, 156.069, 27.493, 0.83", "8.85931, 158.279, 27.3871, 0.83", "8.36069, 160.484, 27.2136, 0.55", "7.71758, 163.58, 26.9066, 0.55", "7.58886, 164.309, 26.8191, 0.55", "7.21062, 167.02, 26.5205, 0.55", "6.98946, 168.999, 26.2527, 0.28", "6.74266, 172.176, 25.6946, 0.55", "6.61999, 175.795, 24.9297, 0.55", "6.61633, 177.836, 24.4506, 0.55", "6.64211, 181.394, 23.6044, 0.83", "6.70665, 185.155, 22.6997, 0.83", "6.73751, 187.826, 21.942, 0.83", "6.72439, 189.369, 21.423, 0.55", "6.70448, 190.739, 20.9229, 0.83", "6.58491, 192.939, 20.1539, 0.83", "6.29564, 195.728, 19.2256, 0.83", "5.81733, 199.239, 18.3039, 0.83", "5.46764, 201.459, 17.7932, 0.83", "5.10799, 203.516, 17.265, 0.83", "4.57572, 206.424, 16.4442, 0.55", "3.95195, 209.461, 15.5667, 0.55", "3.49914, 211.67, 14.9642, 0.55", "3.02908, 214.124, 14.3141, 0.83", "2.3605, 217.865, 13.2689, 1.11", "1.7795, 221.78, 12.2614, 0.55", "1.56454, 224.063, 11.785, 0.55", "1.39773, 226.717, 11.3408, 0.55", "1.34054, 229.354, 10.9884, 0.83", "1.45964, 232.537, 10.6788, 0.83", "1.84597, 236.922, 10.3716, 0.83", "2.58147, 242.16, 9.95283, 0.83", "3.12501, 245.197, 9.63909, 0.55", "3.73461, 248.202, 9.25817, 0.55", "4.58496, 251.963, 8.71683, 0.83", "4.9582, 253.726, 8.41089, 0.83", "5.39849, 256.515, 7.87265, 0.83", "5.67908, 259.819, 7.28388, 0.83", "5.66779, 262.56, 6.92381, 0.28", "5.53768, 263.984, 6.78991, 0.83", "4.92298, 268.057, 6.4981, 0.83", "4.28768, 271.304, 6.35224, 0.83", "3.47296, 274.464, 6.33561, 0.83", "2.48615, 277.715, 6.43812, 0.83", "1.75606, 279.877, 6.55851, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.24818, 50.5749, 21.212, 0.83", "3.79597, 51.9446, 22.4394, 0.83", "2.75164, 53.1456, 23.443, 0.55", "1.07177, 55.093, 25.0558, 0.55", "-0.499438, 56.9157, 26.558, 0.55", "-2.2785, 58.7921, 28.186, 0.55", "-3.62043, 60.0342, 29.3807, 0.55", "-5.97149, 61.837, 31.4574, 0.55", "-7.67951, 62.874, 32.863, 0.55", "-10.0674, 63.8886, 34.5565, 0.55", "-13.92, 64.6785, 36.8444, 0.55", "-16.224, 64.7621, 37.9689, 0.55", "-18.7549, 64.3799, 39.0085, 0.55", "-20.2697, 63.8853, 39.4834, 0.55", "-21.4934, 63.2817, 39.7687, 0.55", "-23.7657, 61.7717, 40.0933, 0.28", "-24.8736, 60.8587, 40.1806, 0.83", "-26.3654, 59.5058, 40.2788, 0.55", "-27.3205, 58.4841, 40.2776, 0.55", "-28.5027, 56.8761, 40.1748, 0.55", "-29.5697, 55.1568, 39.9945, 0.83", "-30.4492, 53.6129, 39.7779, 0.55", "-31.1776, 52.2981, 39.5328, 0.55", "-32.8463, 49.2059, 38.8621, 0.55", "-34.5124, 46.2728, 38.1565, 0.83", "-35.83, 44.1153, 37.5553, 0.83", "-37.2276, 41.9607, 36.7503, 0.83", "-38.9143, 39.5795, 35.7567, 0.55", "-39.7411, 38.5074, 35.3295, 0.28", "-40.8158, 37.2529, 34.8749, 0.55", "-42.1133, 35.9235, 34.3676, 0.28", "-44.9359, 33.2355, 33.4195, 0.55", "-46.709, 31.6555, 32.9146, 0.55", "-48.4562, 30.1592, 32.5345, 0.28", "-50.0432, 28.8211, 32.26, 0.55", "-52.7799, 26.4023, 31.8697, 0.55", "-53.7312, 25.5235, 31.7817, 0.83", "-55.4081, 23.8641, 31.6949, 0.55", "-57.6792, 21.3506, 31.4781, 0.55", "-59.1694, 19.3451, 31.271, 0.83", "-60.6287, 16.8533, 31.0533, 0.55", "-61.4935, 14.8717, 30.8964, 0.55", "-62.2015, 12.8423, 30.7339, 0.55", "-62.4854, 11.7448, 30.6468, 0.83", "-63.0427, 8.88414, 30.3947, 0.55", "-63.5504, 5.50722, 30.0894, 0.28", "-64.2013, 0.6057, 29.658, 0.28", "-64.4648, -1.45844, 29.408, 0.83", "-64.9636, -5.51469, 28.8674, 0.28", "-65.1455, -6.936, 28.6867, 0.83", "-65.2669, -7.82121, 28.5822, 0.28", "-65.4148, -9.21854, 28.3971, 0.83", "-65.7221, -12.003, 28.027, 0.28", "-65.8883, -13.0635, 27.9107, 0.55", "-66.4037, -15.4392, 27.6968, 0.28", "-66.7394, -16.8074, 27.5812, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "13.3353, 41.487, 16.3615, 0.83", "14.3871, 42.8368, 14.1848, 0.83", "15.6646, 44.5708, 11.744, 0.83", "16.468, 45.687, 10.3598, 0.83", "21.4239, 52.4484, 2.96136, 0.55", "22.8415, 54.3255, 1.2327, 0.55", "23.6395, 55.3474, 0.452803, 0.55", "24.7046, 56.6576, -0.396661, 0.55", "25.785, 57.9737, -0.946411, 1.11", "27.0287, 59.5491, -1.15082, 0.55", "29.1119, 62.2525, -0.787925, 0.55", "30.8829, 64.697, -0.381956, 0.55", "32.0132, 66.2923, -0.0622005, 0.55", "33.3694, 68.314, 0.499964, 0.83", "34.8715, 70.7924, 1.30595, 0.55", "35.9122, 72.7861, 1.98975, 1.11", "36.9033, 74.8744, 2.76577, 0.55", "37.8349, 76.9316, 3.55496, 0.83", "39.4058, 80.5164, 4.88172, 0.55", "40.2245, 82.3972, 5.53927, 0.55", "41.3309, 85.0015, 6.36844, 0.55", "42.2362, 87.0414, 6.89523, 0.55", "42.7999, 88.307, 7.15883, 0.28", "43.9545, 90.8156, 7.55486, 0.55", "44.8404, 92.7014, 7.74314, 0.28", "45.6824, 94.41, 7.88181, 0.55", "47.2961, 97.6185, 8.09285, 0.55", "48.1683, 99.4306, 8.18428, 0.55", "49.3859, 101.949, 8.27634, 0.28", "50.6374, 104.523, 7.63804, 0.83", "51.7441, 106.759, 6.69373, 0.28", "52.0044, 107.246, 6.41035, 0.55", "52.6553, 108.315, 5.52398, 0.28", "53.0851, 108.955, 4.87527, 0.83", "58.5415, 116.492, -3.78453, 0.55", "60.7138, 119.249, -7.08584, 0.55", "61.3901, 120.084, -8.05196, 0.83", "63.012, 122.055, -9.92868, 0.55", "63.8184, 123.036, -10.5994, 0.55", "64.6801, 124.253, -10.7822, 0.83", "65.5864, 125.842, -10.2171, 0.28", "65.9781, 126.709, -10.036, 0.55", "66.8486, 129.189, -9.36716, 0.28", "67.2968, 130.837, -8.72407, 0.55", "67.6679, 132.265, -8.18659, 0.28", "67.9171, 133.698, -7.82177, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "13.3353, 41.487, 16.3615, 0.55", "14.8074, 40.6953, 17.81, 0.55", "17.0164, 39.5073, 19.9837, 0.28", "18.1754, 38.884, 21.1242, 0.55", "20.3043, 37.7391, 23.2191, 0.55", "23.0879, 36.242, 25.9582, 0.55", "24.6098, 35.4236, 27.4558, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "19.0743, -31.8503, -30.2106, 0.55", "15.8093, -29.8352, -32.3593, 0.55", "14.9241, -29.2807, -33.3385, 0.83", "12.9347, -28.034, -35.7905, 0.55", "12.1119, -27.5514, -36.7861, 0.55", "8.60256, -25.8527, -42.0071, 0.28", "7.88845, -25.5707, -43.1225, 0.83", "5.19955, -24.8264, -48.1486, 0.55", "4.91841, -24.7776, -48.7032, 0.55", "4.18131, -24.7254, -50.224, 0.83", "0.878003, -24.6922, -56.8907, 0.55", "0.229113, -24.7244, -58.1457, 0.55", "-0.491524, -24.7694, -59.5859, 0.83", "-2.01527, -24.8108, -62.8821, 0.55", "-2.32207, -24.7759, -63.601, 0.55", "-2.84705, -24.6148, -65.0011, 0.55", "-4.89836, -23.5298, -70.727, 0.28", "-5.42073, -23.1812, -72.3413, 0.83", "-7.13525, -21.7964, -77.8365, 0.55", "-7.56032, -21.3643, -79.2578, 0.83", "-9.69609, -18.7566, -86.4212, 0.55", "-10.2428, -17.8555, -88.4597, 0.28", "-10.5401, -17.2356, -89.657, 0.83", "-10.9945, -16.0436, -91.7138, 0.55", "-11.2812, -15.0472, -93.1529, 0.83", "-11.74, -12.5775, -96.3513, 0.55", "-12.0428, -8.73539, -100.424, 0.28", "-12.0585, -8.1457, -101.027, 0.55", "-12.0474, -6.5721, -102.596, 0.28", "-12.0266, -5.93264, -103.228, 0.55", "-11.9297, -3.76288, -105.318, 0.28", "-11.873, -2.99585, -106.02, 0.55", "-11.7177, -0.59291, -108.203, 0.28", "-11.6672, 0.29251, -109.059, 0.55", "-11.6253, 2.24257, -110.972, 0.28", "-11.6397, 2.67896, -111.408, 0.55", "-11.7483, 4.42765, -113.046, 0.28", "-11.7921, 5.03331, -113.606, 0.55", "-12.0099, 6.91024, -115.274, 0.28", "-12.1796, 7.83417, -116.217, 0.55", "-12.8312, 10.5108, -118.989, 0.28", "-13.1553, 11.5943, -120.16, 0.55", "-14.1459, 14.5482, -123.776, 0.28", "-14.4443, 15.438, -124.958, 0.55", "-15.338, 18.2846, -129.257, 0.28", "-15.6436, 19.225, -130.817, 0.28", "-16.0081, 20.3159, -132.738, 0.55", "-16.7194, 22.1886, -136.062, 0.28", "-16.8524, 22.5418, -136.635, 0.55", "-17.4222, 24.0415, -139.299, 0.28", "-17.7053, 24.7594, -140.566, 0.83", "-18.3455, 26.2128, -143.139, 0.55", "-18.7502, 27.1573, -144.809, 0.55", "-19.4386, 28.8608, -147.682, 0.55", "-20.9989, 33.096, -155.117, 0.83", "-21.478, 34.5574, -157.801, 0.28", "-21.6888, 35.3303, -159.291, 0.55", "-22.2686, 38.1935, -165.196, 0.55", "-22.3394, 38.9539, -166.784, 0.55", "-22.4182, 41.4039, -172.176, 0.83", "-22.4238, 42.9634, -175.829, 0.28", "-22.4657, 43.7395, -178.295, 0.55", "-22.4936, 44.3152, -181.337, 0.28", "-22.5002, 44.4292, -182.657, 0.83", "-22.608, 44.4923, -190.111, 0.55", "-22.6729, 44.3064, -192.975, 0.55", "-22.977, 43.5745, -199.502, 0.55", "-23.8879, 42.3294, -209.168, 0.55", "-24.1769, 42.0197, -211.408, 0.55", "-25.0348, 41.2516, -217.026, 0.55", "-26.0786, 40.5136, -222.893, 0.55", "-27.0127, 40.0125, -227.449, 0.55", "-28.7104, 39.3075, -234.273, 0.55", "-30.695, 38.7138, -241.176, 0.55", "-31.1513, 38.6034, -242.722, 0.55", "-33.1484, 38.077, -249.495, 0.55", "-33.6364, 37.9449, -251.125, 0.28", "-33.7495, 37.9069, -251.52, 0.55", "-38.1125, 36.0466, -266.87, 0.28", "-38.5266, 35.8618, -268.251, 0.83", "-40.9816, 34.6254, -276.384, 0.28", "-41.1425, 34.5423, -276.905, 0.55", "-42.334, 33.9708, -280.699, 0.28", "-42.8332, 33.7302, -282.236, 0.55", "-43.9793, 33.1165, -285.117, 0.28", "-44.3648, 32.8973, -286.114, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "19.0743, -31.8503, -30.2106, 0.55", "21.1037, -32.0553, -32.2934, 0.55", "22.8072, -32.2035, -33.8626, 0.55", "26.6108, -32.5084, -37.5521, 0.83", "27.6251, -32.6319, -38.5474, 0.83", "28.809, -32.808, -39.6999, 0.83", "29.8067, -32.9532, -40.6432, 0.83", "31.5725, -33.2013, -42.2569, 0.83", "34.5233, -33.7076, -44.9706, 0.83", "36.3451, -33.971, -46.5404, 0.83", "38.3307, -34.1897, -48.3305, 0.83", "40.5414, -34.3695, -50.3145, 0.83", "42.5532, -34.4943, -52.1155, 0.83", "45.8232, -34.6719, -54.9374, 0.83", "47.8508, -34.7199, -56.5927, 0.83", "50.4342, -34.6559, -58.7105, 0.83", "52.0891, -34.5651, -60.086, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "19.8608, -43.8511, 4.07442, 0.55", "21.7055, -43.6687, 5.18274, 0.55", "23.2323, -43.6074, 6.14616, 0.28", "24.1929, -43.6415, 6.78333, 0.55", "25.8161, -43.7578, 7.88482, 1.11", "28.7234, -44.0889, 10.0277, 0.55", "29.8252, -44.2467, 10.8939, 0.55", "31.025, -44.4884, 11.928, 0.83", "32.2836, -44.7695, 13.0713, 0.28", "32.2836, -44.7695, 13.0713, 0.83", "34.3582, -45.6167, 15.22, 0.28", "34.9122, -45.8859, 15.8102, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "19.8608, -43.8511, 4.07442, 0.83", "22.0874, -47.076, 3.71296, 0.83", "24.1593, -49.4557, 3.12134, 0.55", "25.5886, -50.7805, 2.5378, 0.83", "26.7549, -51.8614, 2.06166, 0.83", "28.3713, -53.3595, 1.40175, 0.83", "29.7909, -54.6752, 0.822195, 0.83", "32.8057, -56.7889, -0.62786, 0.83", "35.1009, -58.1227, -1.96097, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-47.3354, -29.5182, 17.4591, 0.55", "-48.2843, -27.2017, 16.553, 0.55", "-49.4563, -24.0107, 15.3203, 0.83", "-51.0676, -19.5531, 13.5, 0.55", "-51.7711, -17.3937, 12.6724, 0.55", "-52.7181, -14.2406, 11.5198, 1.11", "-53.5303, -11.4346, 10.5457, 0.83", "-54.3258, -8.47926, 9.55171, 0.55", "-54.6243, -7.27177, 9.17209, 0.55", "-55.4339, -4.3247, 8.4708, 0.55", "-55.6034, -3.72663, 8.33004, 1.11", "-56.067, -2.27147, 8.25987, 0.55", "-56.6418, -0.818152, 8.61163, 0.83", "-57.288, 0.52079, 9.24052, 0.55", "-58.1276, 2.07333, 10.1052, 0.55", "-58.7979, 3.17136, 10.7175, 0.83", "-61.9975, 8.46153, 12.9324, 0.55", "-62.8503, 9.94791, 13.4016, 0.83", "-63.9617, 11.8932, 13.8014, 0.55", "-65.2041, 13.9318, 14.0337, 0.55", "-66.4046, 15.8408, 13.9622, 1.11", "-68.6073, 19.4646, 13.3729, 0.55", "-69.2975, 20.6529, 13.0697, 0.55", "-71.0139, 23.8048, 12.2434, 0.55", "-72.0838, 25.8713, 11.6872, 0.55", "-73.4453, 28.5399, 11.0369, 1.11", "-74.9818, 31.5127, 10.421, 0.55", "-75.9406, 33.32, 10.1789, 1.11", "-77.1602, 35.562, 9.90876, 0.28", "-77.5898, 36.3417, 9.85549, 0.55", "-78.319, 37.5955, 9.84748, 0.28", "-79.3674, 39.2011, 10.0138, 0.83", "-81.1028, 41.5542, 10.4017, 0.28", "-81.7594, 42.4231, 10.6103, 0.55", "-84.5038, 45.9572, 11.7118, 0.28", "-85.537, 47.3168, 12.1703, 0.83", "-86.9937, 49.2947, 12.837, 0.55", "-88.4536, 51.3262, 13.5124, 0.55", "-89.9225, 53.4048, 14.1489, 0.55", "-91.0159, 55.0353, 14.6216, 0.83", "-92.2596, 57.0024, 15.1199, 0.28", "-93.4007, 58.9451, 15.5579, 0.55", "-94.6906, 61.5223, 15.9484, 0.55", "-94.9026, 62.0516, 16.0026, 0.83", "-95.6976, 64.4785, 15.9169, 0.28", "-96.0036, 65.8701, 15.7439, 0.55", "-96.1796, 67.0257, 15.4203, 0.28", "-96.4843, 69.3663, 14.3669, 0.55", "-96.7307, 71.8186, 12.9897, 0.55", "-97.0867, 75.2964, 10.8492, 0.28", "-97.2876, 77.5943, 9.02747, 0.83", "-97.5184, 80.8791, 6.08902, 0.55", "-97.6384, 83.2402, 3.80953, 0.55", "-97.6996, 84.2281, 2.81437, 0.55", "-97.8298, 85.7221, 1.1684, 0.83", "-98.3197, 89.8377, -3.29951, 0.28", "-98.4666, 90.6792, -4.24058, 0.83", "-98.7299, 91.8498, -5.44226, 0.28", "-99.0797, 93.0535, -6.52219, 0.55", "-100.416, 95.972, -8.86734, 0.83", "-101.02, 96.9093, -9.22025, 0.83", "-102.17, 98.4165, -9.04116, 0.28", "-102.742, 99.1364, -8.78013, 0.55", "-104.076, 100.832, -7.85205, 0.28", "-104.985, 102.149, -7.02387, 0.55", "-107.265, 105.833, -3.63909, 0.28", "-107.69, 106.573, -2.8705, 0.55", "-108.289, 107.797, -1.58552, 0.28", "-108.713, 108.788, -0.519369, 0.83", "-109.348, 110.438, 1.27993, 0.83", "-110.925, 115.297, 6.28679, 0.28", "-111.124, 116.036, 6.97662, 0.55", "-111.746, 118.653, 9.31441, 0.28", "-112.063, 120.16, 10.5889, 0.83", "-112.368, 121.816, 11.8913, 0.28", "-112.6, 123.205, 12.8289, 0.83", "-113.039, 126.251, 14.2971, 0.28", "-113.215, 127.651, 14.8644, 0.83", "-113.509, 130.297, 15.6681, 0.28", "-113.691, 131.921, 15.8957, 0.55", "-113.869, 133.622, 15.8756, 0.28", "-114.083, 135.615, 15.4433, 0.55", "-114.364, 138.055, 14.5376, 0.28", "-114.479, 139.075, 14.0538, 0.83", "-114.765, 141.582, 12.6969, 0.28", "-115.021, 143.445, 11.4195, 0.83", "-115.485, 146.764, 8.99914, 0.28", "-115.635, 147.837, 8.06076, 0.83", "-115.889, 149.737, 6.16583, 0.28", "-115.98, 150.485, 5.28612, 0.83", "-116.449, 154.827, -0.222241, 0.28", "-116.645, 156.491, -2.5973, 0.83", "-117.054, 160.261, -8.29004, 0.28", "-117.164, 161.606, -10.4806, 0.83", "-117.364, 164.015, -14.6286, 0.28", "-117.43, 164.76, -15.971, 0.55", "-117.685, 166.999, -19.8128, 0.28", "-117.806, 167.734, -21.0308, 0.28", "-118.216, 169.599, -23.6377, 0.55", "-119.278, 172.397, -27.4666, 0.28", "-120.2, 174.323, -30.0337, 0.83", "-121.107, 176.057, -32.5706, 0.28", "-121.584, 176.91, -33.825, 0.55", "-122.411, 178.283, -35.6575, 0.28", "-126.515, 184.771, -43.2689, 0.28", "-126.996, 185.542, -44.0877, 0.83", "-130.139, 190.653, -49.1834, 0.28", "-130.475, 191.215, -49.767, 0.83", "-134.182, 197.859, -55.8981, 0.28", "-134.487, 198.535, -56.2648, 0.55", "-135.47, 201.65, -55.6588, 0.28", "-135.783, 202.607, -55.5624, 0.55", "-136.306, 204.033, -55.3247, 0.28", "-136.754, 205.319, -55.8702, 0.55", "-137.457, 207.377, -57.3667, 0.28", "-137.792, 208.348, -58.0848, 1.11", "-138.717, 210.549, -59.6156, 0.28", "-139.121, 211.441, -60.3083, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-47.3354, -29.5182, 17.4591, 0.55", "-51.1204, -31.5777, 17.7242, 0.55", "-52.8102, -32.3853, 17.8693, 0.55", "-55.4218, -33.526, 18.1786, 0.83", "-58.0938, -34.695, 18.5323, 0.55", "-60.3218, -35.7808, 18.9667, 0.55", "-61.3571, -36.3452, 19.2106, 0.83", "-62.8369, -37.2783, 19.7166, 0.55", "-65.3622, -39.0045, 21.0481, 0.55", "-66.5965, -39.9596, 21.9186, 0.55", "-68.761, -41.8842, 23.7588, 0.55", "-69.685, -42.803, 24.7152, 0.28", "-71.7005, -45.0034, 27.0661, 0.83", "-73.9915, -47.5833, 30.0883, 0.55", "-74.3958, -48.0308, 30.658, 0.55", "-75.7043, -49.3649, 32.4335, 0.83", "-77.3176, -50.7918, 34.3893, 0.55", "-78.528, -51.7695, 35.7611, 0.83", "-81.8916, -54.3118, 39.0084, 0.55", "-83.4538, -55.4529, 40.2049, 0.83", "-85.4456, -56.7919, 41.4893, 0.28", "-87.0475, -57.7518, 42.2916, 0.55", "-88.8466, -58.7371, 42.8924, 0.55", "-91.5231, -60.1144, 43.4629, 0.28", "-92.6991, -60.6972, 43.5394, 0.28", "-93.7206, -61.1741, 43.576, 0.55", "-96.4689, -62.5889, 43.7027, 0.28", "-97.4897, -63.2041, 43.8666, 0.55", "-97.9859, -63.5392, 43.9657, 0.28", "-99.2966, -64.5034, 44.3611, 0.28", "-100.168, -65.1513, 44.6316, 0.55", "-101.892, -66.5372, 45.1812, 0.28", "-103.618, -68.0989, 45.7101, 0.55", "-105.745, -70.0114, 46.417, 0.28", "-107.339, -71.4968, 46.9822, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-86.741, 11.1405, 43.1501, 0.28", "-89.1589, 13.0561, 42.9844, 0.28", "-89.8115, 13.6477, 42.9258, 0.55", "-91.2147, 14.96, 42.8117, 0.28", "-91.5253, 15.2813, 42.7887, 0.55", "-94.4277, 18.5298, 42.5987, 0.28", "-96.671, 21.1312, 42.5477, 0.28", "-97.9788, 22.8534, 42.5537, 0.28", "-98.8996, 24.1792, 42.5846, 0.55", "-100.956, 27.335, 42.5732, 0.28", "-101.712, 28.5303, 42.5941, 0.55", "-102.863, 30.4626, 42.7051, 0.28", "-103.457, 31.5687, 42.7808, 0.55", "-104.383, 33.4055, 42.9249, 0.28", "-105.536, 35.9463, 43.0708, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-86.741, 11.1405, 43.1501, 0.28", "-84.3605, 10.3778, 41.6336, 0.28", "-83.7056, 10.1813, 41.1346, 0.83", "-80.5394, 9.46281, 38.9346, 0.28", "-80.2079, 9.39361, 38.7161, 0.83", "-77.2588, 8.85572, 37.0368, 0.28", "-76.3807, 8.69975, 36.5845, 0.83", "-70.5948, 7.8357, 33.8466, 0.28", "-67.3133, 7.38419, 32.4412, 0.28", "-66.5871, 7.29964, 32.1786, 1.11", "-62.7682, 6.87935, 31.0111, 0.28", "-61.6444, 6.74174, 30.6718, 0.55", "-57.5334, 6.18095, 29.3706, 0.28", "-55.6191, 5.87625, 28.7881, 0.28", "-54.4321, 5.6511, 28.362, 0.55", "-52.6535, 5.30345, 27.6557, 0.28", "-47.4682, 4.07353, 25.1826, 0.28", "-44.7597, 3.38536, 23.8317, 0.28", "-44.1743, 3.18743, 23.5321, 0.83", "-42.9081, 2.68231, 22.8782, 0.28", "-42.9081, 2.68231, 22.8782, 0.83", "-40.1442, 1.45024, 21.5906, 0.28", "-39.4228, 1.07126, 21.3767, 0.83", "-37.3213, -0.365831, 20.5578, 0.28", "-36.0578, -1.29767, 20.0184, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-29.5462, 47.8083, -23.475, 0.28", "-30.4583, 46.3464, -24.5707, 0.28", "-31.1495, 45.2123, -25.5413, 0.83", "-31.9028, 43.9702, -26.5828, 0.55", "-32.6545, 42.7078, -27.8199, 1.11", "-34.6219, 39.125, -31.6127, 0.28", "-34.7544, 38.8822, -31.9095, 0.83", "-35.314, 37.803, -33.4609, 0.83", "-35.6415, 37.134, -34.5065, 0.83", "-36.8052, 34.7116, -38.5548, 0.28", "-37.111, 34.0981, -39.58, 0.83", "-38.2197, 32.0954, -43.5036, 0.28", "-38.4129, 31.7483, -44.2461, 0.55", "-38.74, 31.1684, -45.5581, 0.55", "-39.0683, 30.5828, -46.9612, 0.55", "-39.5087, 29.8406, -48.7503, 1.11", "-41.2043, 26.9473, -56.5697, 0.55", "-41.4161, 26.537, -57.7693, 0.28", "-41.4769, 26.4315, -58.1329, 0.55", "-41.8886, 25.8162, -60.5533, 0.28", "-42.0407, 25.5585, -61.6292, 0.83", "-42.8554, 24.0775, -68.1023, 0.28", "-42.8955, 24.0106, -68.3799, 0.55", "-43.8033, 22.5277, -74.5653, 0.28", "-43.9564, 22.2404, -75.6829, 0.55", "-44.4291, 21.3483, -78.8006, 0.28", "-44.5121, 21.1781, -79.3388, 0.83", "-44.9387, 20.2822, -81.7967, 0.28", "-45.1525, 19.8256, -83.0144, 0.83", "-46.1742, 17.3786, -88.8724, 0.28", "-46.4568, 16.7744, -90.2101, 0.83", "-47.6814, 14.4147, -95.0674, 0.55", "-47.8384, 14.1038, -95.6714, 0.83", "-48.7054, 12.3181, -98.9135, 0.28", "-48.9849, 11.7389, -99.8678, 0.55", "-50.16, 9.25911, -103.507, 0.28", "-50.5743, 8.34448, -104.812, 0.83", "-52.667, 3.72133, -110.825, 0.28", "-52.7716, 3.48533, -111.128, 0.83", "-53.4009, 1.98145, -112.968, 0.28", "-53.5574, 1.60736, -113.455, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-29.5462, 47.8083, -23.475, 0.55", "-30.7086, 50.5501, -23.8573, 0.55", "-31.5671, 52.6298, -24.1988, 0.55", "-32.4354, 54.8302, -24.6901, 0.28", "-33.0, 56.2885, -25.0509, 1.38", "-33.833, 58.4205, -25.667, 0.55", "-34.7705, 60.8016, -26.391, 0.55", "-35.1882, 61.8125, -26.6868, 0.83", "-35.9207, 63.6195, -27.2755, 0.28", "-36.2999, 64.657, -27.626, 0.55", "-36.9214, 66.4838, -28.1914, 0.28", "-37.3664, 67.8028, -28.5143, 0.83", "-38.2398, 70.4962, -28.9124, 0.28", "-38.6631, 71.9475, -29.1276, 0.55", "-39.1034, 73.6876, -29.3572, 0.28", "-39.389, 75.1714, -29.6154, 0.83", "-39.7491, 77.9613, -30.1447, 0.28", "-39.9628, 80.446, -30.7532, 0.83", "-40.1126, 84.6485, -31.9385, 0.28", "-40.0925, 86.1116, -32.3872, 0.83", "-39.9133, 90.1374, -33.9166, 0.28", "-39.7657, 92.0092, -34.7273, 0.83", "-39.5238, 94.3175, -35.8113, 0.28", "-39.3246, 96.142, -36.7311, 0.55", "-39.1261, 97.9651, -37.6416, 0.83", "-38.8178, 101.987, -39.6588, 0.28", "-38.7734, 103.55, -40.4092, 0.83", "-38.8004, 105.657, -41.4033, 0.83", "-38.9306, 107.75, -42.3364, 0.28", "-39.1919, 109.35, -43.1004, 0.83", "-39.5901, 110.941, -43.8183, 0.28", "-39.9487, 112.066, -44.2545, 0.55", "-40.282, 112.878, -44.5818, 0.28", "-41.1251, 114.53, -45.1791, 0.55", "-42.8746, 117.568, -46.0168, 0.28", "-43.606, 118.637, -46.2958, 0.55", "-44.4796, 119.779, -46.5607, 0.28", "-45.4919, 120.995, -46.8075, 0.83", "-46.8745, 122.539, -47.0343, 0.28", "-48.2654, 124.031, -47.1542, 0.83", "-50.3616, 126.238, -47.1602, 0.28", "-51.1834, 127.12, -47.1968, 0.83", "-52.1229, 128.17, -47.2551, 0.28", "-53.3234, 129.635, -47.3642, 0.28", "-53.8354, 130.356, -47.4838, 0.55", "-54.9261, 132.228, -47.926, 0.28", "-55.7049, 133.913, -48.5715, 0.55", "-56.0996, 134.897, -49.0557, 0.55", "-56.6323, 136.38, -49.8773, 0.83", "-57.6024, 139.113, -51.6651, 0.28", "-58.2952, 141.107, -53.1001, 0.83", "-59.2542, 143.89, -55.3873, 0.28", "-59.6236, 144.907, -56.2979, 0.28", "-60.1084, 146.328, -57.6023, 0.83", "-60.9856, 149.014, -60.1594, 0.28", "-61.314, 150.008, -61.0724, 0.83", "-62.4647, 153.67, -64.2876, 0.28", "-63.0287, 155.451, -65.8214, 1.11", "-64.1037, 158.958, -68.8811, 0.28", "-64.5072, 160.442, -70.1849, 0.55", "-64.8371, 161.83, -71.2984, 0.28", "-65.0995, 162.964, -72.1366, 0.55", "-65.6982, 165.958, -74.1414, 0.28", "-65.9467, 167.155, -75.0294, 0.55", "-66.351, 168.984, -76.4464, 0.28", "-66.5873, 170.178, -77.4578, 0.55", "-66.8215, 171.619, -78.7469, 0.28", "-67.1165, 173.753, -80.6917, 0.55", "-67.5842, 177.695, -84.0683, 0.28", "-67.7556, 179.325, -85.5214, 0.55", "-67.9648, 181.653, -87.6064, 0.28", "-68.0331, 182.951, -88.8204, 0.83", "-68.0499, 184.719, -90.4344, 0.28", "-68.0231, 185.989, -91.62, 0.83", "-67.9279, 188.181, -93.6354, 0.28", "-67.8875, 189.171, -94.6373, 0.55", "-67.8017, 190.563, -96.1011, 0.28", "-67.6906, 191.736, -97.4039, 0.55", "-67.4021, 195.141, -101.03, 0.28", "-67.3317, 196.32, -102.227, 0.28", "-67.3625, 198.912, -104.533, 0.55", "-67.4666, 201.068, -106.248, 0.28", "-67.5887, 202.231, -107.043, 0.55", "-68.1404, 205.3, -108.78, 0.28", "-68.6833, 207.031, -109.477, 0.83", "-69.7715, 209.493, -110.248, 0.28", "-70.2415, 210.231, -110.42, 0.55", "-71.1344, 211.306, -110.652, 0.28", "-72.1006, 212.283, -110.91, 0.55", "-74.3757, 214.207, -111.478, 0.28", "-74.9088, 214.622, -111.586, 0.55", "-78.2789, 217.225, -112.349, 0.28", "-79.1105, 217.948, -112.561, 0.55", "-80.2171, 219.077, -112.845, 0.28", "-81.3037, 220.278, -113.141, 0.55", "-82.9823, 222.417, -113.617, 0.28", "-83.9742, 223.806, -113.875, 0.55", "-85.862, 227.087, -114.059, 0.28", "-86.524, 228.43, -114.122, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.72262, 79.882, -18.2354, 0.55", "-4.97796, 81.4192, -18.9848, 0.55", "-2.52915, 83.8946, -21.4506, 0.55", "-1.57215, 84.9426, -22.7992, 0.83", "-0.800239, 85.806, -24.005, 0.83", "1.3227, 88.2532, -27.5642, 0.28", "2.10576, 89.1734, -28.8779, 0.83", "4.67053, 92.5835, -34.7467, 0.55", "5.13961, 93.339, -36.2695, 0.28", "5.32098, 93.6881, -37.0518, 0.28", "5.54692, 94.2621, -38.4395, 0.55", "5.73883, 94.9466, -40.0794, 0.55", "6.26065, 97.3525, -45.4739, 0.28", "6.49558, 98.5064, -47.7991, 0.83", "7.02685, 101.049, -52.6479, 0.83", "7.51797, 103.301, -56.7776, 0.83", "8.19845, 106.193, -61.9509, 0.28", "8.45955, 107.206, -63.6897, 0.28", "8.63792, 107.772, -64.5333, 0.55", "9.64975, 110.312, -67.9134, 0.28", "9.83373, 110.697, -68.3633, 0.55", "11.3077, 113.204, -71.1583, 0.28", "11.9133, 114.05, -72.3536, 0.55", "12.5302, 114.8, -73.6022, 0.28", "12.778, 115.079, -74.1029, 0.55", "14.6061, 116.866, -77.6099, 0.28", "15.1904, 117.382, -78.646, 0.55", "18.4746, 119.918, -84.1026, 0.28", "19.4315, 120.636, -85.6349, 0.28", "20.4407, 121.384, -87.1558, 0.55", "22.5867, 122.972, -90.4147, 0.28", "23.2771, 123.471, -91.3938, 0.55", "26.118, 125.481, -95.3127, 0.28", "27.5667, 126.466, -97.1884, 0.28", "28.8486, 127.328, -98.8791, 0.83", "33.4256, 130.247, -104.63, 0.28", "34.6418, 130.986, -106.075, 0.28", "36.3581, 131.987, -107.981, 0.55", "37.8626, 132.841, -109.49, 0.28", "38.9462, 133.39, -110.58, 0.55", "40.0091, 133.903, -111.56, 0.28", "40.6702, 134.226, -111.932, 0.55", "42.2257, 135.047, -112.82, 0.28", "44.4201, 136.433, -113.775, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-6.72262, 79.882, -18.2354, 0.55", "-7.45061, 83.5893, -17.1574, 0.55", "-7.76011, 86.0711, -16.2978, 0.55", "-7.88741, 87.1253, -15.9247, 0.55", "-8.07428, 88.8096, -15.341, 0.55", "-8.23096, 90.2288, -14.9117, 0.55", "-8.58785, 93.6402, -13.8864, 0.28", "-8.69627, 94.843, -13.5141, 0.55", "-8.77843, 96.5305, -12.8741, 0.55", "-8.84221, 97.3466, -12.5056, 0.83", "-9.08143, 99.1966, -11.5834, 0.28", "-9.31036, 100.751, -10.8154, 0.83", "-9.80085, 103.581, -9.40954, 0.28", "-9.85305, 103.908, -9.21014, 0.83", "-10.1339, 106.402, -7.46784, 0.55", "-10.2281, 107.536, -6.59296, 0.55", "-10.3222, 109.206, -5.25915, 0.83", "-10.4247, 112.246, -2.7775, 0.55", "-10.4458, 114.58, -0.852655, 0.83", "-10.4268, 115.764, 0.146355, 0.28", "-10.3764, 116.804, 0.97021, 0.83", "-10.3092, 118.351, 2.18224, 0.83", "-10.2784, 121.066, 4.22204, 0.83", "-10.3213, 123.336, 5.59086, 0.28", "-10.3702, 124.112, 6.00857, 0.83", "-10.5674, 126.457, 7.30997, 0.83", "-10.7666, 128.513, 8.47484, 0.28", "-10.8737, 129.584, 9.11692, 0.55", "-11.1182, 131.709, 10.3104, 0.28", "-11.4781, 133.905, 11.6189, 0.55", "-12.0272, 136.78, 13.4636, 0.28", "-12.1706, 137.426, 13.9163, 0.83", "-12.4659, 138.732, 14.8131, 0.28", "-12.823, 140.3, 15.9454, 0.55", "-13.2897, 142.587, 17.7886, 0.28", "-13.3661, 143.026, 18.123, 0.55", "-13.5144, 143.976, 18.8804, 0.28", "-13.6216, 144.971, 19.7744, 0.83", "-13.6611, 146.279, 21.0143, 0.28", "-13.5957, 147.904, 22.6473, 0.55", "-13.5146, 149.009, 23.8893, 0.28", "-13.4677, 149.696, 24.6274, 0.83", "-13.336, 151.153, 26.1062, 0.83", "-13.193, 152.623, 27.4881, 0.55", "-13.0922, 153.427, 28.1592, 0.83", "-12.5186, 157.939, 31.5203, 0.55", "-12.302, 159.642, 32.622, 0.83", "-11.5518, 165.247, 35.6102, 0.28", "-11.4098, 166.44, 35.9967, 0.55", "-11.1113, 168.81, 36.3404, 0.28", "-10.9152, 170.227, 36.3903, 0.83", "-10.5013, 173.13, 35.9673, 0.28", "-10.285, 174.877, 35.5219, 0.55", "-9.80405, 179.721, 33.1884, 0.28", "-9.63969, 181.847, 32.0703, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "1.75606, 279.877, 6.55851, 0.55", "1.93079, 282.54, 6.44768, 0.55", "1.99795, 285.716, 6.3075, 0.55", "2.03297, 288.769, 6.17626, 0.83", "2.04153, 290.88, 6.1049, 0.55", "2.05577, 293.503, 6.05032, 1.11", "2.13467, 297.525, 6.0002, 0.55", "2.23628, 300.375, 5.99527, 1.11", "2.37259, 302.529, 5.94129, 0.83", "2.6413, 304.556, 5.85019, 0.55", "3.25677, 307.205, 5.68432, 0.55", "4.05646, 309.483, 5.47063, 0.83", "5.26224, 311.849, 5.07919, 0.55", "6.76274, 314.17, 4.51227, 0.83", "8.10064, 315.919, 3.98105, 0.83", "9.35937, 317.349, 3.45938, 0.83", "10.4594, 318.485, 3.01522, 1.11", "12.8153, 320.86, 1.99004, 0.83", "13.8222, 321.889, 1.54675, 0.55", "15.434, 323.548, 0.900581, 0.83", "17.772, 326.12, -0.0496249, 0.55", "19.2534, 327.725, -0.634095, 1.11", "21.4915, 330.164, -1.45997, 0.55", "22.2671, 331.032, -1.70229, 0.55", "23.3203, 332.252, -2.02372, 0.55", "25.6606, 335.207, -2.66267, 0.55", "26.5512, 336.446, -2.8419, 0.28", "27.092, 337.299, -2.91671, 0.55", "28.0331, 338.95, -2.95094, 0.28", "28.7814, 340.415, -2.98223, 0.83", "30.0596, 343.185, -3.03556, 0.55", "30.4705, 344.114, -3.03217, 0.83", "31.3038, 346.116, -3.04875, 0.55", "31.8366, 347.412, -3.08667, 0.83", "33.4392, 351.356, -3.26351, 0.28", "34.5028, 353.965, -3.43616, 0.83", "35.6068, 356.66, -3.6569, 0.28", "36.5647, 359.037, -3.87282, 0.55", "37.54, 361.548, -4.11509, 0.55", "38.3298, 363.827, -4.39265, 0.55", "38.6991, 365.094, -4.57627, 0.28", "39.0, 366.32, -4.76859, 0.55", "39.4486, 368.698, -5.13638, 0.28", "39.6491, 370.101, -5.41753, 0.55", "39.9134, 372.658, -6.04616, 0.28", "40.0578, 374.397, -6.50929, 0.28", "40.2365, 376.829, -7.18269, 0.83", "40.3691, 379.009, -7.81924, 0.83", "40.6196, 383.17, -9.03354, 0.55", "40.802, 385.506, -9.67248, 0.55", "40.9827, 387.019, -10.0233, 0.55", "41.1306, 387.879, -10.2356, 0.28", "41.3873, 389.09, -10.5306, 0.55", "41.6572, 390.12, -10.7409, 0.28", "41.908, 391.085, -10.9468, 1.11", "42.534, 393.998, -11.8269, 0.55", "42.853, 396.123, -12.5565, 0.55", "43.0336, 397.989, -13.3007, 0.28", "43.0782, 399.044, -13.8031, 0.83", "43.1255, 402.079, -15.4673, 0.55", "43.1373, 404.042, -16.6219, 0.83", "43.1264, 406.204, -18.0026, 0.83", "43.1782, 408.39, -19.4972, 0.55", "43.2819, 410.109, -20.7532, 0.28", "43.4363, 411.785, -21.9928, 0.55", "43.608, 413.324, -23.1237, 0.55", "43.8573, 415.342, -24.6702, 1.11", "44.2066, 418.001, -26.6627, 0.55", "44.3552, 419.155, -27.4689, 0.55", "44.4887, 420.402, -28.3561, 0.55", "44.6644, 423.35, -30.4848, 0.55", "44.7452, 424.837, -31.5901, 0.83", "44.8969, 427.993, -33.7865, 0.28", "44.9291, 428.94, -34.4104, 0.55", "45.0485, 431.643, -36.0974, 0.28", "45.1362, 432.965, -36.8784, 0.55", "45.3312, 435.043, -37.9755, 0.28", "45.483, 437.124, -38.9571, 0.55", "45.5592, 438.206, -39.4114, 0.28", "45.6981, 439.986, -40.0663, 0.55", "46.0151, 442.954, -40.9067, 0.55", "46.2022, 444.488, -41.3602, 0.28", "46.2959, 445.84, -41.7793, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "1.75606, 279.877, 6.55851, 0.55", "0.171549, 281.493, 5.85198, 0.55", "-1.70113, 283.508, 5.12663, 1.11", "-3.79538, 285.614, 4.44555, 0.55", "-4.47604, 286.311, 4.184, 0.83", "-6.09268, 288.012, 3.5284, 0.55", "-7.43732, 289.364, 2.99418, 0.55", "-8.48479, 290.399, 2.57715, 0.83", "-11.5966, 293.386, 1.34836, 0.55", "-13.9275, 295.559, 0.534566, 0.55", "-14.7472, 296.32, 0.221196, 0.83", "-16.9907, 298.36, -0.660662, 0.55", "-17.3527, 298.684, -0.810558, 0.83", "-18.5449, 299.787, -1.25931, 0.28", "-18.7382, 299.98, -1.30754, 0.55", "-19.9316, 301.149, -1.39519, 0.28", "-20.6752, 301.926, -1.40064, 0.55", "-21.5244, 302.779, -1.42414, 0.55", "-23.8413, 304.986, -1.5368, 0.55", "-25.4215, 306.494, -1.64809, 0.55", "-26.6343, 307.707, -1.84452, 0.83", "-28.2734, 309.422, -2.20998, 0.83", "-30.3191, 311.757, -2.97278, 0.55", "-31.7749, 313.529, -3.69802, 0.55", "-33.2999, 315.52, -4.65226, 1.11", "-34.9149, 317.974, -5.85386, 0.55", "-35.3274, 318.689, -6.2124, 0.83", "-36.5424, 321.147, -7.32207, 0.28", "-37.0747, 322.483, -8.11795, 0.55", "-37.3967, 323.385, -8.7758, 0.28", "-37.6723, 324.271, -9.46842, 0.83", "-38.1647, 326.176, -11.006, 0.28", "-38.5606, 327.906, -12.4387, 0.83", "-39.8207, 334.649, -17.9988, 0.55", "-40.0239, 335.951, -19.0806, 0.55", "-40.1721, 337.134, -20.051, 0.83", "-40.331, 338.65, -21.225, 0.28", "-40.3803, 339.394, -21.7185, 0.55", "-40.4487, 340.513, -22.3043, 0.28", "-40.5367, 342.042, -22.6616, 0.55", "-40.7038, 344.197, -23.2019, 0.55", "-40.8137, 345.427, -23.507, 0.55", "-40.9359, 346.8, -23.8227, 0.83", "-41.1027, 348.995, -24.3319, 0.28", "-41.2349, 350.839, -24.7385, 0.83", "-41.3235, 353.115, -25.1846, 0.55", "-41.3554, 354.023, -25.3348, 0.55", "-41.3839, 355.752, -25.5444, 0.83", "-41.4095, 356.661, -25.607, 0.55", "-41.4676, 358.372, -25.5699, 0.83", "-41.6273, 359.945, -25.5113, 0.28", "-41.7323, 360.595, -25.5427, 0.28", "-42.1285, 362.338, -25.7851, 0.28", "-42.3198, 363.09, -25.958, 0.83", "-42.8144, 364.839, -26.5543, 0.55", "-43.4011, 366.767, -27.6124, 0.83", "-44.3316, 369.383, -29.4424, 0.28", "-44.669, 370.189, -30.1595, 0.55", "-45.0851, 370.978, -31.0636, 0.28", "-45.4496, 371.539, -31.7535, 0.83", "-46.8949, 373.589, -34.3431, 0.83", "-47.3836, 374.247, -35.1566, 0.83", "-48.9767, 376.288, -37.504, 0.83", "-50.8619, 378.64, -40.1131, 0.55", "-52.0234, 380.029, -41.6421, 0.55", "-53.0716, 381.287, -42.9727, 0.55", "-54.2175, 382.676, -44.3443, 0.55", "-55.8424, 384.847, -46.3385, 0.55", "-57.1121, 386.657, -47.77, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "52.0891, -34.5651, -60.086, 0.55", "52.9247, -33.8925, -61.0699, 0.55", "53.7572, -33.1561, -62.0744, 0.83", "55.4421, -31.605, -64.1222, 0.28", "56.291, -30.7911, -65.1378, 0.83", "58.3369, -28.7899, -67.5044, 0.28", "59.0364, -28.0976, -68.2815, 0.55", "60.5826, -26.4873, -70.0896, 0.55", "62.1725, -24.7103, -71.8891, 0.55", "63.5231, -23.1739, -73.3368, 0.28", "64.0744, -22.5374, -73.9012, 0.28", "64.629, -21.8935, -74.4415, 0.55", "65.8295, -20.5502, -75.5451, 0.28", "67.4635, -18.7361, -76.8459, 0.55", "69.3719, -16.507, -78.4941, 0.28", "69.8681, -15.9307, -78.9383, 0.55", "71.8591, -13.4886, -80.7897, 0.28", "73.142, -11.8623, -82.0225, 0.28", "74.6044, -9.97891, -83.5021, 0.83", "76.8685, -6.91296, -86.0137, 0.55", "77.4142, -6.16436, -86.647, 0.55", "78.5204, -4.67194, -88.0473, 0.55", "79.6532, -3.22709, -89.5311, 0.83", "81.358, -1.19085, -91.7402, 0.28", "81.8925, -0.615009, -92.3642, 0.55", "83.3425, 0.77616, -93.6748, 0.28", "83.6127, 1.0173, -93.9013, 0.55", "84.9073, 2.00624, -94.8129, 0.55", "86.8461, 3.39267, -95.8989, 0.28", "87.5585, 3.89041, -96.2204, 0.55", "89.2946, 5.03874, -96.9357, 0.28", "90.0079, 5.49761, -97.1908, 0.55", "91.5553, 6.39854, -97.7198, 0.28", "92.5499, 6.86245, -98.0596, 0.55", "93.1049, 7.07312, -98.2231, 0.55", "94.6544, 7.68557, -98.605, 0.28", "95.6803, 8.12012, -98.795, 0.28", "96.683, 8.62215, -98.9861, 0.55", "99.093, 10.0221, -99.4304, 0.28", "100.75, 11.1694, -99.7294, 0.55", "102.275, 12.4003, -99.963, 0.55", "103.644, 13.7104, -100.13, 0.83", "105.615, 15.9078, -100.287, 0.28", "106.316, 16.8319, -100.316, 0.28", "107.475, 18.7023, -100.278, 0.55", "108.568, 20.7273, -100.177, 0.28", "109.026, 21.651, -100.1, 0.55", "109.712, 23.1536, -99.9002, 0.55", "110.68, 25.3928, -99.4854, 0.28", "111.252, 26.7558, -99.2275, 0.55", "112.1, 28.8745, -98.8309, 0.28", "113.022, 31.2852, -98.4188, 0.55", "113.954, 33.7828, -98.0191, 0.55", "114.352, 34.9067, -97.8504, 0.55", "115.108, 37.1744, -97.5723, 0.55", "115.805, 39.2784, -97.4013, 0.55", "116.483, 41.4494, -97.2948, 0.55", "117.107, 43.5177, -97.2225, 0.28", "117.44, 44.6032, -97.2284, 0.55", "118.495, 48.0208, -97.2909, 0.28", "119.168, 50.3157, -97.4134, 0.28", "119.482, 51.4717, -97.5039, 0.55", "120.041, 53.5188, -97.6956, 0.28", "120.539, 55.3635, -97.8849, 0.55", "120.909, 56.7764, -98.0214, 0.55", "121.867, 60.7626, -98.3697, 0.28", "122.396, 63.2404, -98.5764, 0.28", "122.591, 64.2513, -98.6528, 0.55", "122.944, 66.2929, -98.784, 0.55", "123.395, 69.0597, -98.8658, 0.28", "123.73, 71.2011, -98.8952, 0.55", "124.023, 73.1779, -98.8554, 0.28", "124.213, 74.8792, -98.809, 0.55", "124.313, 75.9032, -98.7595, 0.28", "124.381, 76.5979, -98.6641, 0.55", "124.562, 78.6097, -98.239, 0.28", "124.668, 79.5937, -97.9588, 0.55", "125.086, 82.8444, -96.8908, 0.28", "125.417, 85.0753, -96.1077, 0.55", "125.888, 88.0263, -95.0011, 0.28", "126.167, 89.6142, -94.3849, 0.55", "126.519, 91.4258, -93.6449, 0.28", "126.851, 93.0425, -92.9501, 0.55", "127.179, 94.5631, -92.2837, 0.28", "127.416, 95.7378, -91.7807, 0.55", "127.945, 98.6666, -90.608, 0.28", "128.207, 100.159, -89.9731, 0.55", "128.534, 102.299, -89.0288, 0.28", "128.645, 103.094, -88.6516, 0.55", "128.874, 105.116, -87.6632, 0.28", "129.059, 107.249, -86.6293, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "52.0891, -34.5651, -60.086, 0.28", "55.209, -34.8177, -61.071, 0.28", "56.1421, -34.8861, -61.4164, 0.55", "57.4182, -34.8972, -61.9537, 0.55", "59.3679, -34.8586, -62.7841, 0.28", "60.5235, -34.835, -63.2531, 0.55", "64.5551, -34.6973, -64.7814, 0.28", "65.6346, -34.5902, -65.1499, 0.55", "68.1864, -34.2155, -65.9402, 0.28", "69.271, -34.0033, -66.2341, 0.28", "71.0374, -33.5927, -66.6096, 0.55", "72.6725, -33.2125, -66.8661, 0.55", "76.6185, -32.3454, -67.1484, 0.28", "78.0965, -32.1016, -67.228, 0.55", "79.7787, -31.9457, -67.2981, 0.55", "82.8757, -31.8385, -67.4515, 0.28", "84.9149, -31.918, -67.564, 0.55", "87.4765, -32.2915, -67.661, 0.28", "88.8513, -32.6646, -67.6849, 0.55", "91.3806, -33.5882, -67.6941, 0.28", "92.4545, -34.1147, -67.6633, 0.55", "93.6284, -34.848, -67.5757, 0.55", "95.1331, -36.0253, -67.313, 0.28", "95.9794, -36.8277, -67.0952, 0.28", "96.8669, -37.9004, -66.7807, 0.55", "97.9447, -39.5586, -66.2848, 0.28", "98.0838, -39.8164, -66.2076, 0.55", "99.2231, -42.308, -65.565, 0.28", "99.3378, -42.6003, -65.5248, 0.83", "100.8, -46.5806, -65.2996, 0.28", "101.091, -47.3358, -65.402, 0.55", "101.812, -49.1984, -65.9283, 0.28", "102.263, -50.3533, -66.3744, 0.55", "103.342, -52.966, -67.7407, 0.28", "103.477, -53.2958, -67.93, 0.55", "105.093, -57.1158, -70.4302, 0.28", "105.3, -57.6422, -70.7633, 0.55", "105.435, -57.9627, -70.9668, 0.55", "105.927, -59.1481, -71.5773, 0.28", "106.333, -60.1446, -71.9803, 0.55", "107.055, -61.8729, -72.5223, 0.28", "107.357, -62.5829, -72.7077, 0.55", "109.311, -66.813, -73.9221, 0.28", "109.729, -67.6734, -74.1779, 0.55", "110.228, -68.648, -74.5222, 0.28", "111.899, -71.7696, -75.7346, 0.28", "112.414, -72.7855, -76.105, 0.55", "113.834, -75.7244, -77.0873, 0.28", "113.937, -75.9768, -77.1531, 0.55", "115.12, -79.2908, -77.9703, 0.28", "115.6, -80.9434, -78.2489, 0.55", "116.111, -83.0923, -78.4046, 0.28", "116.318, -83.9984, -78.3709, 0.55", "116.737, -85.867, -78.1513, 0.28", "116.937, -86.6871, -78.03, 0.55", "117.834, -89.8463, -77.7234, 0.28", "118.662, -92.4112, -77.6293, 0.28", "119.086, -93.5065, -77.6771, 0.55", "120.22, -96.1558, -77.9041, 0.28", "120.604, -96.9544, -77.9927, 0.55", "123.226, -102.199, -78.6555, 0.28", "124.287, -104.158, -78.9694, 0.55", "125.97, -107.01, -79.4558, 0.28", "126.311, -107.566, -79.5545, 0.55", "128.039, -110.181, -80.0081, 0.28", "128.29, -110.531, -80.0566, 0.55", "129.347, -111.65, -80.0164, 0.28", "130.096, -112.325, -80.0249, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "34.9122, -45.8859, 15.8102, 0.55", "35.694, -45.6619, 16.9439, 0.55", "37.2584, -45.1364, 19.2392, 0.55", "40.1289, -44.154, 23.3642, 0.55", "42.3414, -43.4141, 26.49, 0.55", "44.3501, -42.8041, 29.2869, 0.28", "45.4682, -42.487, 30.812, 0.83", "46.8622, -42.127, 32.7469, 0.55", "47.921, -41.9301, 34.1699, 0.28", "48.4616, -41.8644, 34.7794, 0.55", "49.6294, -41.7499, 35.9821, 0.28", "50.0212, -41.7249, 36.3829, 0.55", "51.7481, -41.7765, 37.9421, 0.28", "52.8696, -41.9922, 38.8548, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "34.9122, -45.8859, 15.8102, 0.28", "41.9358, -48.7748, 11.7605, 0.28", "42.9097, -49.1027, 11.2823, 0.83", "46.2713, -50.0607, 9.79899, 0.28", "47.2446, -50.2298, 9.43431, 0.83", "49.5072, -50.447, 8.66463, 0.28", "50.4611, -50.4731, 8.36807, 0.83", "53.219, -49.9668, 8.02961, 0.28", "53.8141, -49.7226, 7.93932, 0.83", "56.7876, -47.8953, 7.42026, 0.28", "57.5093, -47.424, 7.28172, 0.28", "58.5321, -46.723, 7.07154, 0.55", "60.4085, -45.4175, 7.05265, 0.28", "63.2491, -43.4358, 7.45597, 0.28", "63.9463, -42.9578, 7.71263, 0.83", "68.8315, -39.7137, 10.4082, 0.28", "69.6572, -39.2119, 10.9695, 0.55", "75.4953, -35.855, 15.9489, 0.28", "76.104, -35.5135, 16.5681, 0.83", "79.6503, -33.4075, 20.8537, 0.28", "80.1084, -33.0917, 21.4835, 0.55", "81.4227, -32.0402, 23.5728, 0.28", "82.66, -31.0201, 25.5119, 0.55", "84.2576, -29.6934, 27.6697, 0.28", "84.9108, -29.1278, 28.4858, 0.55", "87.0235, -27.0391, 30.5992, 0.28", "87.7805, -26.1738, 31.39, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "35.1009, -58.1227, -1.96097, 0.55", "37.063, -58.655, -2.61485, 0.55", "40.2034, -59.5306, -3.67551, 0.55", "42.4801, -60.1939, -4.47214, 0.28", "44.1021, -60.6613, -5.02931, 0.55", "46.6332, -61.3755, -5.84002, 0.55", "47.7152, -61.7195, -6.15139, 0.28", "48.4631, -61.9654, -6.38899, 0.55", "49.2992, -62.312, -6.6427, 0.28", "50.5329, -62.9195, -7.02152, 0.55", "52.3395, -63.9029, -7.48197, 0.55", "54.9226, -65.3501, -8.08645, 0.55", "58.3787, -67.1338, -9.28015, 1.38", "60.563, -68.1745, -10.188, 0.83", "62.4155, -68.9655, -11.0343, 0.55", "64.7426, -69.856, -12.1914, 0.28", "67.5892, -70.8135, -13.7043, 0.83", "72.9519, -72.2144, -16.9146, 0.28", "73.6447, -72.39, -17.3712, 0.28", "75.3804, -72.8455, -18.6905, 0.55", "76.5388, -73.1441, -19.6317, 0.55", "77.584, -73.4391, -20.5588, 0.55", "80.4734, -74.4685, -23.0632, 0.55", "83.2686, -75.6937, -25.4102, 0.28", "84.9718, -76.5195, -26.9104, 0.83", "86.0117, -77.0552, -27.8586, 0.83", "88.7552, -78.4801, -30.3273, 0.55", "89.8669, -79.0741, -31.2723, 0.83", "91.3992, -79.9213, -32.3434, 0.28", "92.4973, -80.4924, -32.9608, 0.55", "93.1629, -80.8837, -33.2666, 0.28", "93.485, -81.1031, -33.3864, 0.55", "95.0229, -82.1484, -33.7719, 0.28", "96.7243, -83.3115, -34.3158, 0.28", "98.0329, -84.2276, -34.7283, 0.83", "99.1438, -85.0957, -35.1231, 0.55", "101.922, -87.4215, -36.1638, 0.28", "102.741, -88.16, -36.5333, 0.83", "105.338, -90.6753, -37.8451, 0.28", "106.305, -91.755, -38.4007, 0.83", "107.949, -93.727, -39.325, 0.28", "108.415, -94.2914, -39.5977, 0.83", "110.328, -96.7303, -40.7456, 0.28", "111.48, -98.2356, -41.4277, 0.28", "112.501, -99.5282, -41.9042, 0.55", "113.703, -100.924, -42.4865, 0.55", "115.711, -103.038, -43.3851, 0.55", "116.792, -104.11, -43.8347, 0.28", "117.375, -104.658, -44.0751, 0.55", "119.322, -106.395, -45.0129, 0.28", "120.797, -107.602, -45.7117, 0.55", "122.344, -108.902, -46.4881, 0.28", "122.805, -109.296, -46.6919, 0.83", "124.791, -110.942, -47.6349, 0.28", "125.255, -111.299, -47.8546, 0.55", "126.463, -112.128, -48.4343, 0.55", "128.487, -113.505, -49.1807, 0.28", "128.568, -113.557, -49.2112, 0.55", "130.394, -114.604, -49.9926, 0.28", "131.12, -114.98, -50.3019, 0.55", "133.081, -115.992, -51.2801, 0.28", "134.376, -116.624, -51.9883, 0.55", "136.722, -117.659, -53.329, 0.55", "138.763, -118.554, -54.5622, 0.28", "140.012, -119.128, -55.3471, 0.83", "142.159, -120.161, -56.7197, 0.28", "142.62, -120.363, -56.9712, 0.55", "144.336, -121.012, -57.7831, 0.28", "144.911, -121.201, -57.9386, 0.55", "147.649, -121.95, -58.3851, 0.28", "148.522, -122.143, -58.4776, 0.83", "151.895, -122.699, -58.4671, 0.28", "152.521, -122.782, -58.4322, 0.55", "155.049, -122.928, -58.0476, 0.28", "157.204, -122.869, -57.6397, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "35.1009, -58.1227, -1.96097, 0.55", "36.1345, -59.0034, -3.76403, 0.55", "38.1729, -60.9264, -7.61543, 0.55", "39.95, -62.583, -10.8614, 0.28", "41.2747, -63.7466, -13.2206, 0.83", "43.5536, -65.5626, -16.9896, 0.28", "44.0993, -65.9575, -17.8964, 0.55", "44.5657, -66.2664, -18.7225, 0.55", "45.5882, -66.7568, -20.3942, 0.55", "47.2351, -67.4257, -22.9153, 0.55", "48.1575, -67.7612, -24.2937, 0.55", "50.9151, -68.5549, -27.8805, 0.83", "52.637, -68.99, -30.0815, 0.28", "53.3186, -69.1386, -30.9983, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-53.5574, 1.60736, -113.455, 0.28", "-54.6539, 1.24273, -113.438, 0.28", "-56.0784, 0.76895, -113.415, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-53.5574, 1.60736, -113.455, 0.28", "-54.5173, -0.762691, -115.934, 0.28", "-54.798, -1.45562, -116.659, 0.55", "-55.6761, -3.62358, -118.926, 0.28", "-56.0648, -4.58317, -119.93, 0.83", "-57.7656, -8.7826, -124.322, 0.28", "-58.0452, -9.47276, -125.044, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-57.1121, 386.657, -47.77, 0.55", "-57.8657, 387.553, -49.1101, 0.55", "-58.6682, 388.622, -50.4806, 0.28", "-59.4685, 389.688, -51.8472, 0.55", "-61.7825, 392.769, -55.7989, 0.28", "-62.0486, 393.123, -56.2532, 0.55", "-63.7645, 395.408, -59.1834, 0.28", "-64.5871, 396.389, -60.813, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-57.1121, 386.657, -47.77, 0.28", "-58.981, 385.922, -48.172, 0.28", "-60.0212, 385.513, -48.3957, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "129.059, 107.249, -86.6293, 0.28", "125.778, 109.045, -86.479, 0.28", "124.665, 109.653, -86.4281, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "129.059, 107.249, -86.6293, 0.28", "129.291, 109.044, -86.0498, 0.28", "129.691, 112.418, -84.915, 0.28", "129.773, 113.319, -84.5688, 0.55", "129.971, 116.583, -83.1374, 0.28", "130.084, 118.458, -82.3148, 0.55", "130.231, 120.881, -81.2522, 0.28", "130.272, 122.147, -80.6206, 0.55", "130.266, 124.136, -79.4673, 0.28", "130.205, 125.743, -78.5073, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "53.3186, -69.1386, -30.9983, 0.55", "52.5824, -70.237, -33.2686, 0.55", "52.2652, -70.78, -34.3548, 0.28", "52.0429, -71.1158, -35.0793, 0.83", "50.554, -73.0714, -39.354, 0.28", "50.1322, -73.6486, -40.5502, 0.83", "48.2742, -76.2437, -45.6195, 0.28", "48.0128, -76.6022, -46.3181, 0.83", "46.2927, -78.6402, -50.4697, 0.28", "45.7448, -79.2166, -51.6103, 0.55", "43.1632, -81.565, -56.268, 0.28", "42.6306, -82.0131, -57.2107, 0.28", "41.4709, -82.9061, -59.2309, 0.83", "38.0517, -85.3998, -65.2205, 0.28", "37.1275, -86.0568, -66.9055, 0.55", "35.3358, -87.284, -70.2615, 0.55", "33.9905, -88.1261, -72.7362, 0.55", "31.6906, -89.6129, -77.0244, 0.28", "31.0611, -90.0812, -78.2318, 0.83", "28.9362, -91.835, -82.2204, 0.28", "28.5225, -92.2152, -82.972, 0.55", "26.5827, -94.1298, -85.9701, 0.28", "25.9594, -94.7009, -86.7751, 0.55", "23.4826, -97.0049, -89.5868, 0.28", "23.2572, -97.2002, -89.8346, 0.83", "21.8585, -98.3128, -91.1446, 0.28", "20.6898, -99.1984, -92.1102, 0.55", "17.0689, -101.778, -94.9299, 0.28", "15.9644, -102.572, -95.7175, 0.83", "11.1019, -106.092, -98.8025, 0.28", "9.00368, -107.645, -100.088, 0.55", "6.25849, -109.767, -101.801, 0.55", "3.20129, -112.271, -103.634, 0.28", "0.619983, -114.526, -105.022, 0.55", "-1.20072, -116.181, -106.113, 0.28", "-1.46313, -116.44, -106.28, 0.55", "-3.05022, -117.945, -107.403, 0.28", "-4.29415, -119.017, -108.301, 0.55", "-5.67631, -120.073, -109.317, 0.55", "-8.05886, -121.599, -111.206, 0.28", "-9.09738, -122.176, -111.989, 0.55", "-10.5971, -122.967, -113.096, 0.28", "-11.5688, -123.434, -113.762, 0.55", "-14.2064, -124.631, -115.57, 0.28", "-15.0847, -125.005, -116.214, 0.55", "-17.2821, -125.984, -117.835, 0.28", "-18.6287, -126.652, -119.056, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "53.3186, -69.1386, -30.9983, 0.28", "57.0368, -69.0798, -31.4705, 0.28", "57.5751, -69.0908, -31.5883, 0.83", "60.056, -69.2674, -32.1553, 0.28", "60.9207, -69.307, -32.3596, 0.28", "61.9907, -69.4038, -32.6514, 0.55", "63.8649, -69.6191, -33.4058, 0.28", "65.8555, -69.9432, -34.4861, 0.55", "67.03, -70.2114, -35.1567, 0.55", "68.4781, -70.6352, -36.1515, 0.55", "70.9803, -71.4204, -38.0878, 0.83", "73.9433, -72.4051, -40.6413, 0.28", "74.957, -72.759, -41.5751, 0.28", "75.4729, -72.98, -42.1149, 0.83", "78.8855, -74.5301, -45.8718, 0.28", "79.8423, -75.0357, -47.0145, 0.83", "80.6403, -75.5202, -48.0388, 0.83", "82.0484, -76.4976, -49.8321, 0.83", "84.4283, -78.2765, -52.9376, 0.55", "86.4734, -80.0568, -55.645, 0.55", "88.9727, -82.6734, -58.9319, 0.55", "90.1268, -84.1508, -60.5636, 0.55", "91.0737, -85.6371, -61.9957, 0.28", "91.1761, -85.8395, -62.154, 0.55", "92.3959, -89.0147, -64.0736, 0.28", "92.754, -90.2477, -64.6628, 0.55", "93.7473, -93.9249, -66.1272, 0.28", "94.3385, -96.0075, -66.8431, 0.55", "95.0352, -98.2466, -67.5263, 0.28", "95.6335, -99.9171, -67.9214, 0.55", "97.1794, -103.796, -68.5583, 0.28", "97.5943, -104.722, -68.6426, 1.11", "100.038, -109.317, -68.6702, 0.28", "101.399, -111.528, -68.5148, 0.55", "102.854, -113.574, -67.9927, 0.28", "103.382, -114.207, -67.6867, 0.55", "104.843, -115.762, -66.5527, 0.28", "105.847, -116.743, -65.6387, 0.28", "107.832, -118.436, -63.5317, 0.55", "110.755, -120.956, -60.2312, 0.55", "111.892, -121.941, -58.9182, 0.28", "112.132, -122.126, -58.6586, 0.55", "113.93, -123.332, -56.9018, 0.28", "114.247, -123.53, -56.6157, 0.55", "115.778, -124.297, -55.5131, 0.28", "116.497, -124.571, -55.1283, 0.55", "119.386, -125.293, -53.4705, 0.28", "120.292, -125.4, -52.8322, 0.55", "121.737, -125.362, -51.8127, 0.28", "122.195, -125.28, -51.3953, 0.55", "123.49, -124.861, -50.0183, 0.28", "124.594, -124.442, -48.7376, 0.55", "126.523, -123.516, -46.0001, 0.28", "127.957, -122.718, -43.7667, 0.55", "130.918, -120.737, -38.7985, 0.28", "131.339, -120.436, -38.0455, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_BTC_d58cc3840a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.71855, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.15135, -14.8333, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 10.5559, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -6.31935, 12.6156, -3.96504, 1.38 ) }
    dend_11 { pt3dadd( -8.23069, 15.8405, -4.31488, 1.66 ) }
    dend_11 { pt3dadd( -9.86265, 18.594, -4.61359, 1.38 ) }
    dend_11 { pt3dadd( -11.1677, 20.796, -4.85246, 1.11 ) }
    dend_11 { pt3dadd( -12.1984, 22.535, -5.04112, 1.11 ) }
    dend_11 { pt3dadd( -14.5811, 26.5553, -5.47725, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.6302, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01563, 10.4317, 7.43387, 1.38 ) }
    dend_0 { pt3dadd( 6.13629, 12.7813, 8.05132, 1.38 ) }
    dend_0 { pt3dadd( 6.49398, 16.8897, 9.26221, 1.38 ) }
    dend_0 { pt3dadd( 6.98289, 21.2716, 10.6151, 1.38 ) }
    dend_0 { pt3dadd( 7.35087, 24.5697, 11.6333, 1.38 ) }
    dend_0 { pt3dadd( 7.67923, 27.5126, 12.542, 0.83 ) }
    dend_0 { pt3dadd( 7.89367, 30.3736, 13.4875, 1.38 ) }
    dend_0 { pt3dadd( 8.20773, 33.7687, 14.6588, 1.38 ) }
    dend_0 { pt3dadd( 8.92528, 37.8175, 16.0315, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.695856 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.695856 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.695856 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.15135, -14.8333, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 4.5864, -19.4071, 1.48097, 2.22 ) }
    dend_32 { pt3dadd( 5.85313, -21.7864, 1.28463, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.15135, -14.8333, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( -0.2236, -16.7676, 2.64637, 0.83 ) }
    dend_27 { pt3dadd( -1.8695, -18.1121, 3.41006, 1.11 ) }
    dend_27 { pt3dadd( -4.14029, -19.9671, 4.46371, 0.83 ) }
    dend_27 { pt3dadd( -5.88446, -21.3919, 5.27301, 0.83 ) }
    dend_27 { pt3dadd( -8.84172, -23.8076, 6.64518, 1.38 ) }
    dend_27 { pt3dadd( -11.6683, -26.1166, 7.95672, 1.38 ) }
    dend_27 { pt3dadd( -14.1643, -27.9374, 9.31973, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.5811, 26.5553, -5.47725, 0.55 ) }
    dend_21 { pt3dadd( -18.1422, 27.374, -4.01292, 0.55 ) }
    dend_21 { pt3dadd( -19.8291, 27.5487, -3.0279, 0.55 ) }
    dend_21 { pt3dadd( -21.0258, 27.6023, -2.23075, 0.55 ) }
    dend_21 { pt3dadd( -22.9915, 27.6059, -0.864014, 1.11 ) }
    dend_21 { pt3dadd( -26.4348, 27.4929, 1.53259, 0.83 ) }
    dend_21 { pt3dadd( -29.9029, 27.2285, 3.99617, 0.83 ) }
    dend_21 { pt3dadd( -33.5295, 26.6587, 6.77925, 0.55 ) }
    dend_21 { pt3dadd( -35.4993, 26.2268, 8.3119, 1.38 ) }
    dend_21 { pt3dadd( -36.9302, 25.8235, 9.43904, 0.28 ) }
    dend_21 { pt3dadd( -38.2343, 25.3684, 10.4759, 0.83 ) }
    dend_21 { pt3dadd( -39.8055, 24.8187, 11.7677, 0.28 ) }
    dend_21 { pt3dadd( -40.8923, 24.4249, 12.7063, 0.55 ) }
    dend_21 { pt3dadd( -42.2719, 24.0089, 13.8259, 0.55 ) }
    dend_21 { pt3dadd( -44.4627, 23.4304, 15.5897, 0.55 ) }
    dend_21 { pt3dadd( -46.3555, 22.944, 17.0986, 0.55 ) }
    dend_21 { pt3dadd( -49.576, 22.2132, 19.7065, 0.55 ) }
    dend_21 { pt3dadd( -50.9389, 21.9385, 20.7726, 0.55 ) }
    dend_21 { pt3dadd( -53.5562, 21.449, 22.739, 0.83 ) }
    dend_21 { pt3dadd( -55.4002, 21.1484, 24.0698, 0.83 ) }
    dend_21 { pt3dadd( -56.8761, 20.9279, 25.0561, 0.83 ) }
    dend_21 { pt3dadd( -60.0245, 20.5234, 27.092, 0.83 ) }
    dend_21 { pt3dadd( -61.197, 20.3549, 27.8099, 0.83 ) }
    dend_21 { pt3dadd( -64.018, 19.9136, 29.6387, 0.83 ) }
    dend_21 { pt3dadd( -67.8673, 19.2119, 32.2005, 0.83 ) }
    dend_21 { pt3dadd( -68.8345, 19.0601, 32.8376, 0.83 ) }
    dend_21 { pt3dadd( -70.9478, 18.7764, 34.1789, 0.28 ) }
    dend_21 { pt3dadd( -72.1381, 18.5793, 34.8512, 0.83 ) }
    dend_21 { pt3dadd( -75.003, 18.0753, 36.3799, 0.28 ) }
    dend_21 { pt3dadd( -77.0268, 17.7001, 37.313, 0.83 ) }
    dend_21 { pt3dadd( -79.4036, 17.2544, 38.2717, 0.28 ) }
    dend_21 { pt3dadd( -79.9192, 17.1556, 38.4713, 0.55 ) }
    dend_21 { pt3dadd( -82.8806, 16.6752, 39.4754, 0.55 ) }
    dend_21 { pt3dadd( -85.0184, 16.3976, 40.1261, 0.28 ) }
    dend_21 { pt3dadd( -87.4734, 16.088, 40.6245, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.5811, 26.5553, -5.47725, 1.11 ) }
    dend_12 { pt3dadd( -15.521, 30.5317, -7.76945, 1.11 ) }
    dend_12 { pt3dadd( -16.0789, 32.694, -8.83049, 1.11 ) }
    dend_12 { pt3dadd( -16.7518, 35.302, -10.1102, 1.11 ) }
    dend_12 { pt3dadd( -17.3174, 37.4944, -11.186, 1.11 ) }
    dend_12 { pt3dadd( -17.9835, 40.076, -12.4527, 0.83 ) }
    dend_12 { pt3dadd( -18.6656, 42.7198, -13.75, 0.83 ) }
    dend_12 { pt3dadd( -19.1815, 44.7935, -14.4858, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.92528, 37.8175, 16.0315, 0.83 ) }
    dend_4 { pt3dadd( 7.78732, 41.7656, 17.6347, 0.83 ) }
    dend_4 { pt3dadd( 6.93619, 44.7185, 18.8338, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 6.27695, 47.0057, 19.7626, 0.83 ) }
    dend_4 { pt3dadd( 5.24818, 50.5749, 21.212, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.92528, 37.8175, 16.0315, 0.83 ) }
    dend_1 { pt3dadd( 13.3353, 41.487, 16.3615, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.695856 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.695856 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.695856 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.85313, -21.7864, 1.28463, 0.83 ) }
    dend_42 { pt3dadd( 6.91311, -23.0532, -0.960172, 0.83 ) }
    dend_42 { pt3dadd( 7.52327, -23.6156, -2.29192, 0.83 ) }
    dend_42 { pt3dadd( 8.27296, -24.1948, -3.965, 0.83 ) }
    dend_42 { pt3dadd( 11.2724, -26.4228, -10.8652, 0.83 ) }
    dend_42 { pt3dadd( 12.9377, -27.6461, -14.689, 0.83 ) }
    dend_42 { pt3dadd( 15.4335, -29.4794, -20.4197, 0.55 ) }
    dend_42 { pt3dadd( 16.5229, -30.2749, -23.2534, 0.83 ) }
    dend_42 { pt3dadd( 17.715, -31.092, -26.5558, 0.83 ) }
    dend_42 { pt3dadd( 18.8324, -31.7527, -29.6856, 1.11 ) }
    dend_42 { pt3dadd( 19.0743, -31.8503, -30.2106, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.85313, -21.7864, 1.28463, 1.66 ) }
    dend_33 { pt3dadd( 6.80521, -24.2898, 1.36395, 1.66 ) }
    dend_33 { pt3dadd( 8.17735, -27.3078, 1.44592, 1.11 ) }
    dend_33 { pt3dadd( 9.21329, -29.3082, 1.50486, 1.11 ) }
    dend_33 { pt3dadd( 11.1413, -32.4214, 1.90392, 1.11 ) }
    dend_33 { pt3dadd( 12.7872, -35.0793, 2.2446, 1.11 ) }
    dend_33 { pt3dadd( 13.9385, -36.9384, 2.4829, 1.38 ) }
    dend_33 { pt3dadd( 15.3083, -38.924, 2.76524, 1.11 ) }
    dend_33 { pt3dadd( 16.1726, -40.0282, 2.98016, 1.11 ) }
    dend_33 { pt3dadd( 19.8608, -43.8511, 4.07442, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -14.1643, -27.9374, 9.31973, 0.28 ) }
    dend_31 { pt3dadd( -14.4242, -30.16, 12.6735, 0.28 ) }
    dend_31 { pt3dadd( -14.6161, -31.0795, 14.1836, 1.11 ) }
    dend_31 { pt3dadd( -15.2861, -34.1201, 19.5023, 0.55 ) }
    dend_31 { pt3dadd( -15.4634, -35.0592, 21.1095, 0.83 ) }
    dend_31 { pt3dadd( -15.8558, -37.1382, 24.6674, 0.83 ) }
    dend_31 { pt3dadd( -16.3082, -39.5343, 28.768, 0.55 ) }
    dend_31 { pt3dadd( -16.5929, -40.8867, 31.1921, 1.11 ) }
    dend_31 { pt3dadd( -17.0626, -43.2251, 35.582, 0.55 ) }
    dend_31 { pt3dadd( -17.2817, -44.0587, 37.1163, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -14.1643, -27.9374, 9.31973, 0.83 ) }
    dend_28 { pt3dadd( -18.0432, -28.3039, 10.5441, 0.83 ) }
    dend_28 { pt3dadd( -20.9513, -28.5585, 11.4201, 1.11 ) }
    dend_28 { pt3dadd( -23.828, -28.727, 12.2116, 0.83 ) }
    dend_28 { pt3dadd( -27.0625, -28.8576, 13.0092, 0.83 ) }
    dend_28 { pt3dadd( -31.0514, -29.0186, 13.9929, 0.83 ) }
    dend_28 { pt3dadd( -34.859, -29.1723, 14.9319, 0.83 ) }
    dend_28 { pt3dadd( -39.0357, -29.3404, 15.8992, 1.11 ) }
    dend_28 { pt3dadd( -43.4345, -29.4591, 16.7721, 1.11 ) }
    dend_28 { pt3dadd( -47.3354, -29.5182, 17.4591, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -87.4734, 16.088, 40.6245, 0.28 ) }
    dend_23 { pt3dadd( -87.2407, 14.516, 41.427, 0.28 ) }
    dend_23 { pt3dadd( -87.1581, 13.9578, 41.7119, 0.83 ) }
    dend_23 { pt3dadd( -86.741, 11.1405, 43.1501, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -87.4734, 16.088, 40.6245, 0.28 ) }
    dend_22 { pt3dadd( -90.7063, 16.6459, 41.6317, 0.28 ) }
    dend_22 { pt3dadd( -91.8515, 16.8138, 41.6128, 0.55 ) }
    dend_22 { pt3dadd( -94.3976, 17.0852, 41.1996, 0.28 ) }
    dend_22 { pt3dadd( -96.6819, 17.2655, 40.6986, 0.83 ) }
    dend_22 { pt3dadd( -99.4028, 17.4803, 40.1018, 0.28 ) }
    dend_22 { pt3dadd( -102.013, 17.6863, 39.5293, 0.28 ) }
    dend_22 { pt3dadd( -106.47, 17.8996, 37.8218, 0.28 ) }
    dend_22 { pt3dadd( -107.379, 17.9312, 37.3682, 0.83 ) }
    dend_22 { pt3dadd( -108.783, 17.9784, 36.4283, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -19.1815, 44.7935, -14.4858, 0.55 ) }
    dend_16 { pt3dadd( -20.277, 45.1122, -15.4359, 0.55 ) }
    dend_16 { pt3dadd( -22.2085, 45.674, -17.111, 0.55 ) }
    dend_16 { pt3dadd( -24.0732, 46.2164, -18.7283, 0.83 ) }
    dend_16 { pt3dadd( -27.4374, 47.1949, -21.6461, 0.55 ) }
    dend_16 { pt3dadd( -29.5462, 47.8083, -23.475, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -19.1815, 44.7935, -14.4858, 0.55 ) }
    dend_13 { pt3dadd( -17.7382, 48.833, -15.5358, 0.55 ) }
    dend_13 { pt3dadd( -17.1042, 50.8452, -15.9222, 0.55 ) }
    dend_13 { pt3dadd( -16.608, 52.5811, -16.0965, 0.83 ) }
    dend_13 { pt3dadd( -15.97, 54.8726, -16.2134, 0.55 ) }
    dend_13 { pt3dadd( -15.5705, 56.3459, -16.2762, 0.83 ) }
    dend_13 { pt3dadd( -14.9673, 58.5419, -16.3394, 0.55 ) }
    dend_13 { pt3dadd( -14.5341, 60.2179, -16.2876, 0.83 ) }
    dend_13 { pt3dadd( -13.8373, 62.623, -16.276, 0.28 ) }
    dend_13 { pt3dadd( -13.3967, 63.9652, -16.3117, 0.83 ) }
    dend_13 { pt3dadd( -12.5902, 66.1717, -16.4256, 0.55 ) }
    dend_13 { pt3dadd( -11.9288, 67.9009, -16.548, 0.83 ) }
    dend_13 { pt3dadd( -10.8637, 70.5476, -16.8012, 0.55 ) }
    dend_13 { pt3dadd( -9.5956, 73.5043, -17.1775, 0.83 ) }
    dend_13 { pt3dadd( -8.37502, 76.2405, -17.6335, 0.83 ) }
    dend_13 { pt3dadd( -6.72262, 79.882, -18.2354, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 5.24818, 50.5749, 21.212, 0.83 ) }
    dend_6 { pt3dadd( 6.30546, 54.201, 22.18, 0.83 ) }
    dend_6 { pt3dadd( 7.2839, 58.2004, 23.2067, 0.83 ) }
    dend_6 { pt3dadd( 7.79241, 60.681, 23.918, 0.83 ) }
    dend_6 { pt3dadd( 8.41583, 64.1316, 24.9804, 0.83 ) }
    dend_6 { pt3dadd( 9.07187, 68.0194, 26.1893, 0.83 ) }
    dend_6 { pt3dadd( 9.72053, 72.3317, 27.5218, 0.83 ) }
    dend_6 { pt3dadd( 10.2377, 76.4435, 28.8415, 0.83 ) }
    dend_6 { pt3dadd( 10.6838, 80.5284, 30.2344, 0.83 ) }
    dend_6 { pt3dadd( 10.8913, 82.9886, 31.0365, 0.55 ) }
    dend_6 { pt3dadd( 11.0611, 85.6732, 31.8002, 0.55 ) }
    dend_6 { pt3dadd( 11.2236, 87.9212, 32.2932, 0.83 ) }
    dend_6 { pt3dadd( 11.4136, 89.9294, 32.579, 0.83 ) }
    dend_6 { pt3dadd( 11.6469, 91.7786, 32.7429, 0.55 ) }
    dend_6 { pt3dadd( 11.9935, 94.1135, 32.7421, 0.83 ) }
    dend_6 { pt3dadd( 12.2901, 96.0073, 32.6872, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 12.5312, 97.6347, 32.627, 0.83 ) }
    dend_6 { pt3dadd( 12.8649, 100.163, 32.5387, 0.55 ) }
    dend_6 { pt3dadd( 13.1442, 102.706, 32.412, 0.83 ) }
    dend_6 { pt3dadd( 13.3649, 105.019, 32.0881, 0.55 ) }
    dend_6 { pt3dadd( 13.454, 106.278, 31.8495, 0.55 ) }
    dend_6 { pt3dadd( 13.5446, 108.228, 31.456, 0.83 ) }
    dend_6 { pt3dadd( 13.611, 111.021, 30.8601, 0.83 ) }
    dend_6 { pt3dadd( 13.6456, 113.334, 30.3675, 0.55 ) }
    dend_6 { pt3dadd( 13.6237, 118.579, 29.2127, 0.83 ) }
    dend_6 { pt3dadd( 13.5798, 121.623, 28.5407, 0.83 ) }
    dend_6 { pt3dadd( 13.5336, 125.335, 27.7766, 0.83 ) }
    dend_6 { pt3dadd( 13.5149, 127.592, 27.4115, 0.83 ) }
    dend_6 { pt3dadd( 13.4624, 129.403, 27.2256, 0.83 ) }
    dend_6 { pt3dadd( 13.3739, 131.19, 27.1786, 0.55 ) }
    dend_6 { pt3dadd( 13.2277, 133.229, 27.2606, 0.55 ) }
    dend_6 { pt3dadd( 12.9828, 135.555, 27.3356, 0.83 ) }
    dend_6 { pt3dadd( 12.3893, 139.878, 27.4374, 0.83 ) }
    dend_6 { pt3dadd( 11.9084, 143.296, 27.4889, 1.11 ) }
    dend_6 { pt3dadd( 11.5159, 145.894, 27.5048, 0.55 ) }
    dend_6 { pt3dadd( 11.016, 148.743, 27.5144, 1.11 ) }
    dend_6 { pt3dadd( 10.169, 152.747, 27.5314, 0.83 ) }
    dend_6 { pt3dadd( 9.40166, 156.069, 27.493, 0.83 ) }
    dend_6 { pt3dadd( 8.85931, 158.279, 27.3871, 0.83 ) }
    dend_6 { pt3dadd( 8.36069, 160.484, 27.2136, 0.55 ) }
    dend_6 { pt3dadd( 7.71758, 163.58, 26.9066, 0.55 ) }
    dend_6 { pt3dadd( 7.58886, 164.309, 26.8191, 0.55 ) }
    dend_6 { pt3dadd( 7.21062, 167.02, 26.5205, 0.55 ) }
    dend_6 { pt3dadd( 6.98946, 168.999, 26.2527, 0.28 ) }
    dend_6 { pt3dadd( 6.74266, 172.176, 25.6946, 0.55 ) }
    dend_6 { pt3dadd( 6.61999, 175.795, 24.9297, 0.55 ) }
    dend_6 { pt3dadd( 6.61633, 177.836, 24.4506, 0.55 ) }
    dend_6 { pt3dadd( 6.64211, 181.394, 23.6044, 0.83 ) }
    dend_6 { pt3dadd( 6.70665, 185.155, 22.6997, 0.83 ) }
    dend_6 { pt3dadd( 6.73751, 187.826, 21.942, 0.83 ) }
    dend_6 { pt3dadd( 6.72439, 189.369, 21.423, 0.55 ) }
    dend_6 { pt3dadd( 6.70448, 190.739, 20.9229, 0.83 ) }
    dend_6 { pt3dadd( 6.58491, 192.939, 20.1539, 0.83 ) }
    dend_6 { pt3dadd( 6.29564, 195.728, 19.2256, 0.83 ) }
    dend_6 { pt3dadd( 5.81733, 199.239, 18.3039, 0.83 ) }
    dend_6 { pt3dadd( 5.46764, 201.459, 17.7932, 0.83 ) }
    dend_6 { pt3dadd( 5.10799, 203.516, 17.265, 0.83 ) }
    dend_6 { pt3dadd( 4.57572, 206.424, 16.4442, 0.55 ) }
    dend_6 { pt3dadd( 3.95195, 209.461, 15.5667, 0.55 ) }
    dend_6 { pt3dadd( 3.49914, 211.67, 14.9642, 0.55 ) }
    dend_6 { pt3dadd( 3.02908, 214.124, 14.3141, 0.83 ) }
    dend_6 { pt3dadd( 2.3605, 217.865, 13.2689, 1.11 ) }
    dend_6 { pt3dadd( 1.7795, 221.78, 12.2614, 0.55 ) }
    dend_6 { pt3dadd( 1.56454, 224.063, 11.785, 0.55 ) }
    dend_6 { pt3dadd( 1.39773, 226.717, 11.3408, 0.55 ) }
    dend_6 { pt3dadd( 1.34054, 229.354, 10.9884, 0.83 ) }
    dend_6 { pt3dadd( 1.45964, 232.537, 10.6788, 0.83 ) }
    dend_6 { pt3dadd( 1.84597, 236.922, 10.3716, 0.83 ) }
    dend_6 { pt3dadd( 2.58147, 242.16, 9.95283, 0.83 ) }
    dend_6 { pt3dadd( 3.12501, 245.197, 9.63909, 0.55 ) }
    dend_6 { pt3dadd( 3.73461, 248.202, 9.25817, 0.55 ) }
    dend_6 { pt3dadd( 4.58496, 251.963, 8.71683, 0.83 ) }
    dend_6 { pt3dadd( 4.9582, 253.726, 8.41089, 0.83 ) }
    dend_6 { pt3dadd( 5.39849, 256.515, 7.87265, 0.83 ) }
    dend_6 { pt3dadd( 5.67908, 259.819, 7.28388, 0.83 ) }
    dend_6 { pt3dadd( 5.66779, 262.56, 6.92381, 0.28 ) }
    dend_6 { pt3dadd( 5.53768, 263.984, 6.78991, 0.83 ) }
    dend_6 { pt3dadd( 4.92298, 268.057, 6.4981, 0.83 ) }
    dend_6 { pt3dadd( 4.28768, 271.304, 6.35224, 0.83 ) }
    dend_6 { pt3dadd( 3.47296, 274.464, 6.33561, 0.83 ) }
    dend_6 { pt3dadd( 2.48615, 277.715, 6.43812, 0.83 ) }
    dend_6 { pt3dadd( 1.75606, 279.877, 6.55851, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.24818, 50.5749, 21.212, 0.83 ) }
    dend_5 { pt3dadd( 3.79597, 51.9446, 22.4394, 0.83 ) }
    dend_5 { pt3dadd( 2.75164, 53.1456, 23.443, 0.55 ) }
    dend_5 { pt3dadd( 1.07177, 55.093, 25.0558, 0.55 ) }
    dend_5 { pt3dadd( -0.499438, 56.9157, 26.558, 0.55 ) }
    dend_5 { pt3dadd( -2.2785, 58.7921, 28.186, 0.55 ) }
    dend_5 { pt3dadd( -3.62043, 60.0342, 29.3807, 0.55 ) }
    dend_5 { pt3dadd( -5.97149, 61.837, 31.4574, 0.55 ) }
    dend_5 { pt3dadd( -7.67951, 62.874, 32.863, 0.55 ) }
    dend_5 { pt3dadd( -10.0674, 63.8886, 34.5565, 0.55 ) }
    dend_5 { pt3dadd( -13.92, 64.6785, 36.8444, 0.55 ) }
    dend_5 { pt3dadd( -16.224, 64.7621, 37.9689, 0.55 ) }
    dend_5 { pt3dadd( -18.7549, 64.3799, 39.0085, 0.55 ) }
    dend_5 { pt3dadd( -20.2697, 63.8853, 39.4834, 0.55 ) }
    dend_5 { pt3dadd( -21.4934, 63.2817, 39.7687, 0.55 ) }
    dend_5 { pt3dadd( -23.7657, 61.7717, 40.0933, 0.28 ) }
    dend_5 { pt3dadd( -24.8736, 60.8587, 40.1806, 0.83 ) }
    dend_5 { pt3dadd( -26.3654, 59.5058, 40.2788, 0.55 ) }
    dend_5 { pt3dadd( -27.3205, 58.4841, 40.2776, 0.55 ) }
    dend_5 { pt3dadd( -28.5027, 56.8761, 40.1748, 0.55 ) }
    dend_5 { pt3dadd( -29.5697, 55.1568, 39.9945, 0.83 ) }
    dend_5 { pt3dadd( -30.4492, 53.6129, 39.7779, 0.55 ) }
    dend_5 { pt3dadd( -31.1776, 52.2981, 39.5328, 0.55 ) }
    dend_5 { pt3dadd( -32.8463, 49.2059, 38.8621, 0.55 ) }
    dend_5 { pt3dadd( -34.5124, 46.2728, 38.1565, 0.83 ) }
    dend_5 { pt3dadd( -35.83, 44.1153, 37.5553, 0.83 ) }
    dend_5 { pt3dadd( -37.2276, 41.9607, 36.7503, 0.83 ) }
    dend_5 { pt3dadd( -38.9143, 39.5795, 35.7567, 0.55 ) }
    dend_5 { pt3dadd( -39.7411, 38.5074, 35.3295, 0.28 ) }
    dend_5 { pt3dadd( -40.8158, 37.2529, 34.8749, 0.55 ) }
    dend_5 { pt3dadd( -42.1133, 35.9235, 34.3676, 0.28 ) }
    dend_5 { pt3dadd( -44.9359, 33.2355, 33.4195, 0.55 ) }
    dend_5 { pt3dadd( -46.709, 31.6555, 32.9146, 0.55 ) }
    dend_5 { pt3dadd( -48.4562, 30.1592, 32.5345, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -50.0432, 28.8211, 32.26, 0.55 ) }
    dend_5 { pt3dadd( -52.7799, 26.4023, 31.8697, 0.55 ) }
    dend_5 { pt3dadd( -53.7312, 25.5235, 31.7817, 0.83 ) }
    dend_5 { pt3dadd( -55.4081, 23.8641, 31.6949, 0.55 ) }
    dend_5 { pt3dadd( -57.6792, 21.3506, 31.4781, 0.55 ) }
    dend_5 { pt3dadd( -59.1694, 19.3451, 31.271, 0.83 ) }
    dend_5 { pt3dadd( -60.6287, 16.8533, 31.0533, 0.55 ) }
    dend_5 { pt3dadd( -61.4935, 14.8717, 30.8964, 0.55 ) }
    dend_5 { pt3dadd( -62.2015, 12.8423, 30.7339, 0.55 ) }
    dend_5 { pt3dadd( -62.4854, 11.7448, 30.6468, 0.83 ) }
    dend_5 { pt3dadd( -63.0427, 8.88414, 30.3947, 0.55 ) }
    dend_5 { pt3dadd( -63.5504, 5.50722, 30.0894, 0.28 ) }
    dend_5 { pt3dadd( -64.2013, 0.6057, 29.658, 0.28 ) }
    dend_5 { pt3dadd( -64.4648, -1.45844, 29.408, 0.83 ) }
    dend_5 { pt3dadd( -64.9636, -5.51469, 28.8674, 0.28 ) }
    dend_5 { pt3dadd( -65.1455, -6.936, 28.6867, 0.83 ) }
    dend_5 { pt3dadd( -65.2669, -7.82121, 28.5822, 0.28 ) }
    dend_5 { pt3dadd( -65.4148, -9.21854, 28.3971, 0.83 ) }
    dend_5 { pt3dadd( -65.7221, -12.003, 28.027, 0.28 ) }
    dend_5 { pt3dadd( -65.8883, -13.0635, 27.9107, 0.55 ) }
    dend_5 { pt3dadd( -66.4037, -15.4392, 27.6968, 0.28 ) }
    dend_5 { pt3dadd( -66.7394, -16.8074, 27.5812, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 13.3353, 41.487, 16.3615, 0.83 ) }
    dend_3 { pt3dadd( 14.3871, 42.8368, 14.1848, 0.83 ) }
    dend_3 { pt3dadd( 15.6646, 44.5708, 11.744, 0.83 ) }
    dend_3 { pt3dadd( 16.468, 45.687, 10.3598, 0.83 ) }
    dend_3 { pt3dadd( 21.4239, 52.4484, 2.96136, 0.55 ) }
    dend_3 { pt3dadd( 22.8415, 54.3255, 1.2327, 0.55 ) }
    dend_3 { pt3dadd( 23.6395, 55.3474, 0.452803, 0.55 ) }
    dend_3 { pt3dadd( 24.7046, 56.6576, -0.396661, 0.55 ) }
    dend_3 { pt3dadd( 25.785, 57.9737, -0.946411, 1.11 ) }
    dend_3 { pt3dadd( 27.0287, 59.5491, -1.15082, 0.55 ) }
    dend_3 { pt3dadd( 29.1119, 62.2525, -0.787925, 0.55 ) }
    dend_3 { pt3dadd( 30.8829, 64.697, -0.381956, 0.55 ) }
    dend_3 { pt3dadd( 32.0132, 66.2923, -0.0622005, 0.55 ) }
    dend_3 { pt3dadd( 33.3694, 68.314, 0.499964, 0.83 ) }
    dend_3 { pt3dadd( 34.8715, 70.7924, 1.30595, 0.55 ) }
    dend_3 { pt3dadd( 35.9122, 72.7861, 1.98975, 1.11 ) }
    dend_3 { pt3dadd( 36.9033, 74.8744, 2.76577, 0.55 ) }
    dend_3 { pt3dadd( 37.8349, 76.9316, 3.55496, 0.83 ) }
    dend_3 { pt3dadd( 39.4058, 80.5164, 4.88172, 0.55 ) }
    dend_3 { pt3dadd( 40.2245, 82.3972, 5.53927, 0.55 ) }
    dend_3 { pt3dadd( 41.3309, 85.0015, 6.36844, 0.55 ) }
    dend_3 { pt3dadd( 42.2362, 87.0414, 6.89523, 0.55 ) }
    dend_3 { pt3dadd( 42.7999, 88.307, 7.15883, 0.28 ) }
    dend_3 { pt3dadd( 43.9545, 90.8156, 7.55486, 0.55 ) }
    dend_3 { pt3dadd( 44.8404, 92.7014, 7.74314, 0.28 ) }
    dend_3 { pt3dadd( 45.6824, 94.41, 7.88181, 0.55 ) }
    dend_3 { pt3dadd( 47.2961, 97.6185, 8.09285, 0.55 ) }
    dend_3 { pt3dadd( 48.1683, 99.4306, 8.18428, 0.55 ) }
    dend_3 { pt3dadd( 49.3859, 101.949, 8.27634, 0.28 ) }
    dend_3 { pt3dadd( 50.6374, 104.523, 7.63804, 0.83 ) }
    dend_3 { pt3dadd( 51.7441, 106.759, 6.69373, 0.28 ) }
    dend_3 { pt3dadd( 52.0044, 107.246, 6.41035, 0.55 ) }
    dend_3 { pt3dadd( 52.6553, 108.315, 5.52398, 0.28 ) }
    dend_3 { pt3dadd( 53.0851, 108.955, 4.87527, 0.83 ) }
    dend_3 { pt3dadd( 58.5415, 116.492, -3.78453, 0.55 ) }
    dend_3 { pt3dadd( 60.7138, 119.249, -7.08584, 0.55 ) }
    dend_3 { pt3dadd( 61.3901, 120.084, -8.05196, 0.83 ) }
    dend_3 { pt3dadd( 63.012, 122.055, -9.92868, 0.55 ) }
    dend_3 { pt3dadd( 63.8184, 123.036, -10.5994, 0.55 ) }
    dend_3 { pt3dadd( 64.6801, 124.253, -10.7822, 0.83 ) }
    dend_3 { pt3dadd( 65.5864, 125.842, -10.2171, 0.28 ) }
    dend_3 { pt3dadd( 65.9781, 126.709, -10.036, 0.55 ) }
    dend_3 { pt3dadd( 66.8486, 129.189, -9.36716, 0.28 ) }
    dend_3 { pt3dadd( 67.2968, 130.837, -8.72407, 0.55 ) }
    dend_3 { pt3dadd( 67.6679, 132.265, -8.18659, 0.28 ) }
    dend_3 { pt3dadd( 67.9171, 133.698, -7.82177, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 13.3353, 41.487, 16.3615, 0.55 ) }
    dend_2 { pt3dadd( 14.8074, 40.6953, 17.81, 0.55 ) }
    dend_2 { pt3dadd( 17.0164, 39.5073, 19.9837, 0.28 ) }
    dend_2 { pt3dadd( 18.1754, 38.884, 21.1242, 0.55 ) }
    dend_2 { pt3dadd( 20.3043, 37.7391, 23.2191, 0.55 ) }
    dend_2 { pt3dadd( 23.0879, 36.242, 25.9582, 0.55 ) }
    dend_2 { pt3dadd( 24.6098, 35.4236, 27.4558, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 19.0743, -31.8503, -30.2106, 0.55 ) }
    dend_48 { pt3dadd( 15.8093, -29.8352, -32.3593, 0.55 ) }
    dend_48 { pt3dadd( 14.9241, -29.2807, -33.3385, 0.83 ) }
    dend_48 { pt3dadd( 12.9347, -28.034, -35.7905, 0.55 ) }
    dend_48 { pt3dadd( 12.1119, -27.5514, -36.7861, 0.55 ) }
    dend_48 { pt3dadd( 8.60256, -25.8527, -42.0071, 0.28 ) }
    dend_48 { pt3dadd( 7.88845, -25.5707, -43.1225, 0.83 ) }
    dend_48 { pt3dadd( 5.19955, -24.8264, -48.1486, 0.55 ) }
    dend_48 { pt3dadd( 4.91841, -24.7776, -48.7032, 0.55 ) }
    dend_48 { pt3dadd( 4.18131, -24.7254, -50.224, 0.83 ) }
    dend_48 { pt3dadd( 0.878003, -24.6922, -56.8907, 0.55 ) }
    dend_48 { pt3dadd( 0.229113, -24.7244, -58.1457, 0.55 ) }
    dend_48 { pt3dadd( -0.491524, -24.7694, -59.5859, 0.83 ) }
    dend_48 { pt3dadd( -2.01527, -24.8108, -62.8821, 0.55 ) }
    dend_48 { pt3dadd( -2.32207, -24.7759, -63.601, 0.55 ) }
    dend_48 { pt3dadd( -2.84705, -24.6148, -65.0011, 0.55 ) }
    dend_48 { pt3dadd( -4.89836, -23.5298, -70.727, 0.28 ) }
    dend_48 { pt3dadd( -5.42073, -23.1812, -72.3413, 0.83 ) }
    dend_48 { pt3dadd( -7.13525, -21.7964, -77.8365, 0.55 ) }
    dend_48 { pt3dadd( -7.56032, -21.3643, -79.2578, 0.83 ) }
    dend_48 { pt3dadd( -9.69609, -18.7566, -86.4212, 0.55 ) }
    dend_48 { pt3dadd( -10.2428, -17.8555, -88.4597, 0.28 ) }
    dend_48 { pt3dadd( -10.5401, -17.2356, -89.657, 0.83 ) }
    dend_48 { pt3dadd( -10.9945, -16.0436, -91.7138, 0.55 ) }
    dend_48 { pt3dadd( -11.2812, -15.0472, -93.1529, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -11.74, -12.5775, -96.3513, 0.55 ) }
    dend_48 { pt3dadd( -12.0428, -8.73539, -100.424, 0.28 ) }
    dend_48 { pt3dadd( -12.0585, -8.1457, -101.027, 0.55 ) }
    dend_48 { pt3dadd( -12.0474, -6.5721, -102.596, 0.28 ) }
    dend_48 { pt3dadd( -12.0266, -5.93264, -103.228, 0.55 ) }
    dend_48 { pt3dadd( -11.9297, -3.76288, -105.318, 0.28 ) }
    dend_48 { pt3dadd( -11.873, -2.99585, -106.02, 0.55 ) }
    dend_48 { pt3dadd( -11.7177, -0.59291, -108.203, 0.28 ) }
    dend_48 { pt3dadd( -11.6672, 0.29251, -109.059, 0.55 ) }
    dend_48 { pt3dadd( -11.6253, 2.24257, -110.972, 0.28 ) }
    dend_48 { pt3dadd( -11.6397, 2.67896, -111.408, 0.55 ) }
    dend_48 { pt3dadd( -11.7483, 4.42765, -113.046, 0.28 ) }
    dend_48 { pt3dadd( -11.7921, 5.03331, -113.606, 0.55 ) }
    dend_48 { pt3dadd( -12.0099, 6.91024, -115.274, 0.28 ) }
    dend_48 { pt3dadd( -12.1796, 7.83417, -116.217, 0.55 ) }
    dend_48 { pt3dadd( -12.8312, 10.5108, -118.989, 0.28 ) }
    dend_48 { pt3dadd( -13.1553, 11.5943, -120.16, 0.55 ) }
    dend_48 { pt3dadd( -14.1459, 14.5482, -123.776, 0.28 ) }
    dend_48 { pt3dadd( -14.4443, 15.438, -124.958, 0.55 ) }
    dend_48 { pt3dadd( -15.338, 18.2846, -129.257, 0.28 ) }
    dend_48 { pt3dadd( -15.6436, 19.225, -130.817, 0.28 ) }
    dend_48 { pt3dadd( -16.0081, 20.3159, -132.738, 0.55 ) }
    dend_48 { pt3dadd( -16.7194, 22.1886, -136.062, 0.28 ) }
    dend_48 { pt3dadd( -16.8524, 22.5418, -136.635, 0.55 ) }
    dend_48 { pt3dadd( -17.4222, 24.0415, -139.299, 0.28 ) }
    dend_48 { pt3dadd( -17.7053, 24.7594, -140.566, 0.83 ) }
    dend_48 { pt3dadd( -18.3455, 26.2128, -143.139, 0.55 ) }
    dend_48 { pt3dadd( -18.7502, 27.1573, -144.809, 0.55 ) }
    dend_48 { pt3dadd( -19.4386, 28.8608, -147.682, 0.55 ) }
    dend_48 { pt3dadd( -20.9989, 33.096, -155.117, 0.83 ) }
    dend_48 { pt3dadd( -21.478, 34.5574, -157.801, 0.28 ) }
    dend_48 { pt3dadd( -21.6888, 35.3303, -159.291, 0.55 ) }
    dend_48 { pt3dadd( -22.2686, 38.1935, -165.196, 0.55 ) }
    dend_48 { pt3dadd( -22.3394, 38.9539, -166.784, 0.55 ) }
    dend_48 { pt3dadd( -22.4182, 41.4039, -172.176, 0.83 ) }
    dend_48 { pt3dadd( -22.4238, 42.9634, -175.829, 0.28 ) }
    dend_48 { pt3dadd( -22.4657, 43.7395, -178.295, 0.55 ) }
    dend_48 { pt3dadd( -22.4936, 44.3152, -181.337, 0.28 ) }
    dend_48 { pt3dadd( -22.5002, 44.4292, -182.657, 0.83 ) }
    dend_48 { pt3dadd( -22.608, 44.4923, -190.111, 0.55 ) }
    dend_48 { pt3dadd( -22.6729, 44.3064, -192.975, 0.55 ) }
    dend_48 { pt3dadd( -22.977, 43.5745, -199.502, 0.55 ) }
    dend_48 { pt3dadd( -23.8879, 42.3294, -209.168, 0.55 ) }
    dend_48 { pt3dadd( -24.1769, 42.0197, -211.408, 0.55 ) }
    dend_48 { pt3dadd( -25.0348, 41.2516, -217.026, 0.55 ) }
    dend_48 { pt3dadd( -26.0786, 40.5136, -222.893, 0.55 ) }
    dend_48 { pt3dadd( -27.0127, 40.0125, -227.449, 0.55 ) }
    dend_48 { pt3dadd( -28.7104, 39.3075, -234.273, 0.55 ) }
    dend_48 { pt3dadd( -30.695, 38.7138, -241.176, 0.55 ) }
    dend_48 { pt3dadd( -31.1513, 38.6034, -242.722, 0.55 ) }
    dend_48 { pt3dadd( -33.1484, 38.077, -249.495, 0.55 ) }
    dend_48 { pt3dadd( -33.6364, 37.9449, -251.125, 0.28 ) }
    dend_48 { pt3dadd( -33.7495, 37.9069, -251.52, 0.55 ) }
    dend_48 { pt3dadd( -38.1125, 36.0466, -266.87, 0.28 ) }
    dend_48 { pt3dadd( -38.5266, 35.8618, -268.251, 0.83 ) }
    dend_48 { pt3dadd( -40.9816, 34.6254, -276.384, 0.28 ) }
    dend_48 { pt3dadd( -41.1425, 34.5423, -276.905, 0.55 ) }
    dend_48 { pt3dadd( -42.334, 33.9708, -280.699, 0.28 ) }
    dend_48 { pt3dadd( -42.8332, 33.7302, -282.236, 0.55 ) }
    dend_48 { pt3dadd( -43.9793, 33.1165, -285.117, 0.28 ) }
    dend_48 { pt3dadd( -44.3648, 32.8973, -286.114, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 19.0743, -31.8503, -30.2106, 0.55 ) }
    dend_43 { pt3dadd( 21.1037, -32.0553, -32.2934, 0.55 ) }
    dend_43 { pt3dadd( 22.8072, -32.2035, -33.8626, 0.55 ) }
    dend_43 { pt3dadd( 26.6108, -32.5084, -37.5521, 0.83 ) }
    dend_43 { pt3dadd( 27.6251, -32.6319, -38.5474, 0.83 ) }
    dend_43 { pt3dadd( 28.809, -32.808, -39.6999, 0.83 ) }
    dend_43 { pt3dadd( 29.8067, -32.9532, -40.6432, 0.83 ) }
    dend_43 { pt3dadd( 31.5725, -33.2013, -42.2569, 0.83 ) }
    dend_43 { pt3dadd( 34.5233, -33.7076, -44.9706, 0.83 ) }
    dend_43 { pt3dadd( 36.3451, -33.971, -46.5404, 0.83 ) }
    dend_43 { pt3dadd( 38.3307, -34.1897, -48.3305, 0.83 ) }
    dend_43 { pt3dadd( 40.5414, -34.3695, -50.3145, 0.83 ) }
    dend_43 { pt3dadd( 42.5532, -34.4943, -52.1155, 0.83 ) }
    dend_43 { pt3dadd( 45.8232, -34.6719, -54.9374, 0.83 ) }
    dend_43 { pt3dadd( 47.8508, -34.7199, -56.5927, 0.83 ) }
    dend_43 { pt3dadd( 50.4342, -34.6559, -58.7105, 0.83 ) }
    dend_43 { pt3dadd( 52.0891, -34.5651, -60.086, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 19.8608, -43.8511, 4.07442, 0.55 ) }
    dend_39 { pt3dadd( 21.7055, -43.6687, 5.18274, 0.55 ) }
    dend_39 { pt3dadd( 23.2323, -43.6074, 6.14616, 0.28 ) }
    dend_39 { pt3dadd( 24.1929, -43.6415, 6.78333, 0.55 ) }
    dend_39 { pt3dadd( 25.8161, -43.7578, 7.88482, 1.11 ) }
    dend_39 { pt3dadd( 28.7234, -44.0889, 10.0277, 0.55 ) }
    dend_39 { pt3dadd( 29.8252, -44.2467, 10.8939, 0.55 ) }
    dend_39 { pt3dadd( 31.025, -44.4884, 11.928, 0.83 ) }
    dend_39 { pt3dadd( 32.2836, -44.7695, 13.0713, 0.28 ) }
    dend_39 { pt3dadd( 32.2836, -44.7695, 13.0713, 0.83 ) }
    dend_39 { pt3dadd( 34.3582, -45.6167, 15.22, 0.28 ) }
    dend_39 { pt3dadd( 34.9122, -45.8859, 15.8102, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 19.8608, -43.8511, 4.07442, 0.83 ) }
    dend_34 { pt3dadd( 22.0874, -47.076, 3.71296, 0.83 ) }
    dend_34 { pt3dadd( 24.1593, -49.4557, 3.12134, 0.55 ) }
    dend_34 { pt3dadd( 25.5886, -50.7805, 2.5378, 0.83 ) }
    dend_34 { pt3dadd( 26.7549, -51.8614, 2.06166, 0.83 ) }
    dend_34 { pt3dadd( 28.3713, -53.3595, 1.40175, 0.83 ) }
    dend_34 { pt3dadd( 29.7909, -54.6752, 0.822195, 0.83 ) }
    dend_34 { pt3dadd( 32.8057, -56.7889, -0.62786, 0.83 ) }
    dend_34 { pt3dadd( 35.1009, -58.1227, -1.96097, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -47.3354, -29.5182, 17.4591, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -48.2843, -27.2017, 16.553, 0.55 ) }
    dend_30 { pt3dadd( -49.4563, -24.0107, 15.3203, 0.83 ) }
    dend_30 { pt3dadd( -51.0676, -19.5531, 13.5, 0.55 ) }
    dend_30 { pt3dadd( -51.7711, -17.3937, 12.6724, 0.55 ) }
    dend_30 { pt3dadd( -52.7181, -14.2406, 11.5198, 1.11 ) }
    dend_30 { pt3dadd( -53.5303, -11.4346, 10.5457, 0.83 ) }
    dend_30 { pt3dadd( -54.3258, -8.47926, 9.55171, 0.55 ) }
    dend_30 { pt3dadd( -54.6243, -7.27177, 9.17209, 0.55 ) }
    dend_30 { pt3dadd( -55.4339, -4.3247, 8.4708, 0.55 ) }
    dend_30 { pt3dadd( -55.6034, -3.72663, 8.33004, 1.11 ) }
    dend_30 { pt3dadd( -56.067, -2.27147, 8.25987, 0.55 ) }
    dend_30 { pt3dadd( -56.6418, -0.818152, 8.61163, 0.83 ) }
    dend_30 { pt3dadd( -57.288, 0.52079, 9.24052, 0.55 ) }
    dend_30 { pt3dadd( -58.1276, 2.07333, 10.1052, 0.55 ) }
    dend_30 { pt3dadd( -58.7979, 3.17136, 10.7175, 0.83 ) }
    dend_30 { pt3dadd( -61.9975, 8.46153, 12.9324, 0.55 ) }
    dend_30 { pt3dadd( -62.8503, 9.94791, 13.4016, 0.83 ) }
    dend_30 { pt3dadd( -63.9617, 11.8932, 13.8014, 0.55 ) }
    dend_30 { pt3dadd( -65.2041, 13.9318, 14.0337, 0.55 ) }
    dend_30 { pt3dadd( -66.4046, 15.8408, 13.9622, 1.11 ) }
    dend_30 { pt3dadd( -68.6073, 19.4646, 13.3729, 0.55 ) }
    dend_30 { pt3dadd( -69.2975, 20.6529, 13.0697, 0.55 ) }
    dend_30 { pt3dadd( -71.0139, 23.8048, 12.2434, 0.55 ) }
    dend_30 { pt3dadd( -72.0838, 25.8713, 11.6872, 0.55 ) }
    dend_30 { pt3dadd( -73.4453, 28.5399, 11.0369, 1.11 ) }
    dend_30 { pt3dadd( -74.9818, 31.5127, 10.421, 0.55 ) }
    dend_30 { pt3dadd( -75.9406, 33.32, 10.1789, 1.11 ) }
    dend_30 { pt3dadd( -77.1602, 35.562, 9.90876, 0.28 ) }
    dend_30 { pt3dadd( -77.5898, 36.3417, 9.85549, 0.55 ) }
    dend_30 { pt3dadd( -78.319, 37.5955, 9.84748, 0.28 ) }
    dend_30 { pt3dadd( -79.3674, 39.2011, 10.0138, 0.83 ) }
    dend_30 { pt3dadd( -81.1028, 41.5542, 10.4017, 0.28 ) }
    dend_30 { pt3dadd( -81.7594, 42.4231, 10.6103, 0.55 ) }
    dend_30 { pt3dadd( -84.5038, 45.9572, 11.7118, 0.28 ) }
    dend_30 { pt3dadd( -85.537, 47.3168, 12.1703, 0.83 ) }
    dend_30 { pt3dadd( -86.9937, 49.2947, 12.837, 0.55 ) }
    dend_30 { pt3dadd( -88.4536, 51.3262, 13.5124, 0.55 ) }
    dend_30 { pt3dadd( -89.9225, 53.4048, 14.1489, 0.55 ) }
    dend_30 { pt3dadd( -91.0159, 55.0353, 14.6216, 0.83 ) }
    dend_30 { pt3dadd( -92.2596, 57.0024, 15.1199, 0.28 ) }
    dend_30 { pt3dadd( -93.4007, 58.9451, 15.5579, 0.55 ) }
    dend_30 { pt3dadd( -94.6906, 61.5223, 15.9484, 0.55 ) }
    dend_30 { pt3dadd( -94.9026, 62.0516, 16.0026, 0.83 ) }
    dend_30 { pt3dadd( -95.6976, 64.4785, 15.9169, 0.28 ) }
    dend_30 { pt3dadd( -96.0036, 65.8701, 15.7439, 0.55 ) }
    dend_30 { pt3dadd( -96.1796, 67.0257, 15.4203, 0.28 ) }
    dend_30 { pt3dadd( -96.4843, 69.3663, 14.3669, 0.55 ) }
    dend_30 { pt3dadd( -96.7307, 71.8186, 12.9897, 0.55 ) }
    dend_30 { pt3dadd( -97.0867, 75.2964, 10.8492, 0.28 ) }
    dend_30 { pt3dadd( -97.2876, 77.5943, 9.02747, 0.83 ) }
    dend_30 { pt3dadd( -97.5184, 80.8791, 6.08902, 0.55 ) }
    dend_30 { pt3dadd( -97.6384, 83.2402, 3.80953, 0.55 ) }
    dend_30 { pt3dadd( -97.6996, 84.2281, 2.81437, 0.55 ) }
    dend_30 { pt3dadd( -97.8298, 85.7221, 1.1684, 0.83 ) }
    dend_30 { pt3dadd( -98.3197, 89.8377, -3.29951, 0.28 ) }
    dend_30 { pt3dadd( -98.4666, 90.6792, -4.24058, 0.83 ) }
    dend_30 { pt3dadd( -98.7299, 91.8498, -5.44226, 0.28 ) }
    dend_30 { pt3dadd( -99.0797, 93.0535, -6.52219, 0.55 ) }
    dend_30 { pt3dadd( -100.416, 95.972, -8.86734, 0.83 ) }
    dend_30 { pt3dadd( -101.02, 96.9093, -9.22025, 0.83 ) }
    dend_30 { pt3dadd( -102.17, 98.4165, -9.04116, 0.28 ) }
    dend_30 { pt3dadd( -102.742, 99.1364, -8.78013, 0.55 ) }
    dend_30 { pt3dadd( -104.076, 100.832, -7.85205, 0.28 ) }
    dend_30 { pt3dadd( -104.985, 102.149, -7.02387, 0.55 ) }
    dend_30 { pt3dadd( -107.265, 105.833, -3.63909, 0.28 ) }
    dend_30 { pt3dadd( -107.69, 106.573, -2.8705, 0.55 ) }
    dend_30 { pt3dadd( -108.289, 107.797, -1.58552, 0.28 ) }
    dend_30 { pt3dadd( -108.713, 108.788, -0.519369, 0.83 ) }
    dend_30 { pt3dadd( -109.348, 110.438, 1.27993, 0.83 ) }
    dend_30 { pt3dadd( -110.925, 115.297, 6.28679, 0.28 ) }
    dend_30 { pt3dadd( -111.124, 116.036, 6.97662, 0.55 ) }
    dend_30 { pt3dadd( -111.746, 118.653, 9.31441, 0.28 ) }
    dend_30 { pt3dadd( -112.063, 120.16, 10.5889, 0.83 ) }
    dend_30 { pt3dadd( -112.368, 121.816, 11.8913, 0.28 ) }
    dend_30 { pt3dadd( -112.6, 123.205, 12.8289, 0.83 ) }
    dend_30 { pt3dadd( -113.039, 126.251, 14.2971, 0.28 ) }
    dend_30 { pt3dadd( -113.215, 127.651, 14.8644, 0.83 ) }
    dend_30 { pt3dadd( -113.509, 130.297, 15.6681, 0.28 ) }
    dend_30 { pt3dadd( -113.691, 131.921, 15.8957, 0.55 ) }
    dend_30 { pt3dadd( -113.869, 133.622, 15.8756, 0.28 ) }
    dend_30 { pt3dadd( -114.083, 135.615, 15.4433, 0.55 ) }
    dend_30 { pt3dadd( -114.364, 138.055, 14.5376, 0.28 ) }
    dend_30 { pt3dadd( -114.479, 139.075, 14.0538, 0.83 ) }
    dend_30 { pt3dadd( -114.765, 141.582, 12.6969, 0.28 ) }
    dend_30 { pt3dadd( -115.021, 143.445, 11.4195, 0.83 ) }
    dend_30 { pt3dadd( -115.485, 146.764, 8.99914, 0.28 ) }
    dend_30 { pt3dadd( -115.635, 147.837, 8.06076, 0.83 ) }
    dend_30 { pt3dadd( -115.889, 149.737, 6.16583, 0.28 ) }
    dend_30 { pt3dadd( -115.98, 150.485, 5.28612, 0.83 ) }
    dend_30 { pt3dadd( -116.449, 154.827, -0.222241, 0.28 ) }
    dend_30 { pt3dadd( -116.645, 156.491, -2.5973, 0.83 ) }
    dend_30 { pt3dadd( -117.054, 160.261, -8.29004, 0.28 ) }
    dend_30 { pt3dadd( -117.164, 161.606, -10.4806, 0.83 ) }
    dend_30 { pt3dadd( -117.364, 164.015, -14.6286, 0.28 ) }
    dend_30 { pt3dadd( -117.43, 164.76, -15.971, 0.55 ) }
    dend_30 { pt3dadd( -117.685, 166.999, -19.8128, 0.28 ) }
    dend_30 { pt3dadd( -117.806, 167.734, -21.0308, 0.28 ) }
    dend_30 { pt3dadd( -118.216, 169.599, -23.6377, 0.55 ) }
    dend_30 { pt3dadd( -119.278, 172.397, -27.4666, 0.28 ) }
    dend_30 { pt3dadd( -120.2, 174.323, -30.0337, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -121.107, 176.057, -32.5706, 0.28 ) }
    dend_30 { pt3dadd( -121.584, 176.91, -33.825, 0.55 ) }
    dend_30 { pt3dadd( -122.411, 178.283, -35.6575, 0.28 ) }
    dend_30 { pt3dadd( -126.515, 184.771, -43.2689, 0.28 ) }
    dend_30 { pt3dadd( -126.996, 185.542, -44.0877, 0.83 ) }
    dend_30 { pt3dadd( -130.139, 190.653, -49.1834, 0.28 ) }
    dend_30 { pt3dadd( -130.475, 191.215, -49.767, 0.83 ) }
    dend_30 { pt3dadd( -134.182, 197.859, -55.8981, 0.28 ) }
    dend_30 { pt3dadd( -134.487, 198.535, -56.2648, 0.55 ) }
    dend_30 { pt3dadd( -135.47, 201.65, -55.6588, 0.28 ) }
    dend_30 { pt3dadd( -135.783, 202.607, -55.5624, 0.55 ) }
    dend_30 { pt3dadd( -136.306, 204.033, -55.3247, 0.28 ) }
    dend_30 { pt3dadd( -136.754, 205.319, -55.8702, 0.55 ) }
    dend_30 { pt3dadd( -137.457, 207.377, -57.3667, 0.28 ) }
    dend_30 { pt3dadd( -137.792, 208.348, -58.0848, 1.11 ) }
    dend_30 { pt3dadd( -138.717, 210.549, -59.6156, 0.28 ) }
    dend_30 { pt3dadd( -139.121, 211.441, -60.3083, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -47.3354, -29.5182, 17.4591, 0.55 ) }
    dend_29 { pt3dadd( -51.1204, -31.5777, 17.7242, 0.55 ) }
    dend_29 { pt3dadd( -52.8102, -32.3853, 17.8693, 0.55 ) }
    dend_29 { pt3dadd( -55.4218, -33.526, 18.1786, 0.83 ) }
    dend_29 { pt3dadd( -58.0938, -34.695, 18.5323, 0.55 ) }
    dend_29 { pt3dadd( -60.3218, -35.7808, 18.9667, 0.55 ) }
    dend_29 { pt3dadd( -61.3571, -36.3452, 19.2106, 0.83 ) }
    dend_29 { pt3dadd( -62.8369, -37.2783, 19.7166, 0.55 ) }
    dend_29 { pt3dadd( -65.3622, -39.0045, 21.0481, 0.55 ) }
    dend_29 { pt3dadd( -66.5965, -39.9596, 21.9186, 0.55 ) }
    dend_29 { pt3dadd( -68.761, -41.8842, 23.7588, 0.55 ) }
    dend_29 { pt3dadd( -69.685, -42.803, 24.7152, 0.28 ) }
    dend_29 { pt3dadd( -71.7005, -45.0034, 27.0661, 0.83 ) }
    dend_29 { pt3dadd( -73.9915, -47.5833, 30.0883, 0.55 ) }
    dend_29 { pt3dadd( -74.3958, -48.0308, 30.658, 0.55 ) }
    dend_29 { pt3dadd( -75.7043, -49.3649, 32.4335, 0.83 ) }
    dend_29 { pt3dadd( -77.3176, -50.7918, 34.3893, 0.55 ) }
    dend_29 { pt3dadd( -78.528, -51.7695, 35.7611, 0.83 ) }
    dend_29 { pt3dadd( -81.8916, -54.3118, 39.0084, 0.55 ) }
    dend_29 { pt3dadd( -83.4538, -55.4529, 40.2049, 0.83 ) }
    dend_29 { pt3dadd( -85.4456, -56.7919, 41.4893, 0.28 ) }
    dend_29 { pt3dadd( -87.0475, -57.7518, 42.2916, 0.55 ) }
    dend_29 { pt3dadd( -88.8466, -58.7371, 42.8924, 0.55 ) }
    dend_29 { pt3dadd( -91.5231, -60.1144, 43.4629, 0.28 ) }
    dend_29 { pt3dadd( -92.6991, -60.6972, 43.5394, 0.28 ) }
    dend_29 { pt3dadd( -93.7206, -61.1741, 43.576, 0.55 ) }
    dend_29 { pt3dadd( -96.4689, -62.5889, 43.7027, 0.28 ) }
    dend_29 { pt3dadd( -97.4897, -63.2041, 43.8666, 0.55 ) }
    dend_29 { pt3dadd( -97.9859, -63.5392, 43.9657, 0.28 ) }
    dend_29 { pt3dadd( -99.2966, -64.5034, 44.3611, 0.28 ) }
    dend_29 { pt3dadd( -100.168, -65.1513, 44.6316, 0.55 ) }
    dend_29 { pt3dadd( -101.892, -66.5372, 45.1812, 0.28 ) }
    dend_29 { pt3dadd( -103.618, -68.0989, 45.7101, 0.55 ) }
    dend_29 { pt3dadd( -105.745, -70.0114, 46.417, 0.28 ) }
    dend_29 { pt3dadd( -107.339, -71.4968, 46.9822, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -86.741, 11.1405, 43.1501, 0.28 ) }
    dend_25 { pt3dadd( -89.1589, 13.0561, 42.9844, 0.28 ) }
    dend_25 { pt3dadd( -89.8115, 13.6477, 42.9258, 0.55 ) }
    dend_25 { pt3dadd( -91.2147, 14.96, 42.8117, 0.28 ) }
    dend_25 { pt3dadd( -91.5253, 15.2813, 42.7887, 0.55 ) }
    dend_25 { pt3dadd( -94.4277, 18.5298, 42.5987, 0.28 ) }
    dend_25 { pt3dadd( -96.671, 21.1312, 42.5477, 0.28 ) }
    dend_25 { pt3dadd( -97.9788, 22.8534, 42.5537, 0.28 ) }
    dend_25 { pt3dadd( -98.8996, 24.1792, 42.5846, 0.55 ) }
    dend_25 { pt3dadd( -100.956, 27.335, 42.5732, 0.28 ) }
    dend_25 { pt3dadd( -101.712, 28.5303, 42.5941, 0.55 ) }
    dend_25 { pt3dadd( -102.863, 30.4626, 42.7051, 0.28 ) }
    dend_25 { pt3dadd( -103.457, 31.5687, 42.7808, 0.55 ) }
    dend_25 { pt3dadd( -104.383, 33.4055, 42.9249, 0.28 ) }
    dend_25 { pt3dadd( -105.536, 35.9463, 43.0708, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -86.741, 11.1405, 43.1501, 0.28 ) }
    dend_24 { pt3dadd( -84.3605, 10.3778, 41.6336, 0.28 ) }
    dend_24 { pt3dadd( -83.7056, 10.1813, 41.1346, 0.83 ) }
    dend_24 { pt3dadd( -80.5394, 9.46281, 38.9346, 0.28 ) }
    dend_24 { pt3dadd( -80.2079, 9.39361, 38.7161, 0.83 ) }
    dend_24 { pt3dadd( -77.2588, 8.85572, 37.0368, 0.28 ) }
    dend_24 { pt3dadd( -76.3807, 8.69975, 36.5845, 0.83 ) }
    dend_24 { pt3dadd( -70.5948, 7.8357, 33.8466, 0.28 ) }
    dend_24 { pt3dadd( -67.3133, 7.38419, 32.4412, 0.28 ) }
    dend_24 { pt3dadd( -66.5871, 7.29964, 32.1786, 1.11 ) }
    dend_24 { pt3dadd( -62.7682, 6.87935, 31.0111, 0.28 ) }
    dend_24 { pt3dadd( -61.6444, 6.74174, 30.6718, 0.55 ) }
    dend_24 { pt3dadd( -57.5334, 6.18095, 29.3706, 0.28 ) }
    dend_24 { pt3dadd( -55.6191, 5.87625, 28.7881, 0.28 ) }
    dend_24 { pt3dadd( -54.4321, 5.6511, 28.362, 0.55 ) }
    dend_24 { pt3dadd( -52.6535, 5.30345, 27.6557, 0.28 ) }
    dend_24 { pt3dadd( -47.4682, 4.07353, 25.1826, 0.28 ) }
    dend_24 { pt3dadd( -44.7597, 3.38536, 23.8317, 0.28 ) }
    dend_24 { pt3dadd( -44.1743, 3.18743, 23.5321, 0.83 ) }
    dend_24 { pt3dadd( -42.9081, 2.68231, 22.8782, 0.28 ) }
    dend_24 { pt3dadd( -42.9081, 2.68231, 22.8782, 0.83 ) }
    dend_24 { pt3dadd( -40.1442, 1.45024, 21.5906, 0.28 ) }
    dend_24 { pt3dadd( -39.4228, 1.07126, 21.3767, 0.83 ) }
    dend_24 { pt3dadd( -37.3213, -0.365831, 20.5578, 0.28 ) }
    dend_24 { pt3dadd( -36.0578, -1.29767, 20.0184, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -29.5462, 47.8083, -23.475, 0.28 ) }
    dend_18 { pt3dadd( -30.4583, 46.3464, -24.5707, 0.28 ) }
    dend_18 { pt3dadd( -31.1495, 45.2123, -25.5413, 0.83 ) }
    dend_18 { pt3dadd( -31.9028, 43.9702, -26.5828, 0.55 ) }
    dend_18 { pt3dadd( -32.6545, 42.7078, -27.8199, 1.11 ) }
    dend_18 { pt3dadd( -34.6219, 39.125, -31.6127, 0.28 ) }
    dend_18 { pt3dadd( -34.7544, 38.8822, -31.9095, 0.83 ) }
    dend_18 { pt3dadd( -35.314, 37.803, -33.4609, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -35.6415, 37.134, -34.5065, 0.83 ) }
    dend_18 { pt3dadd( -36.8052, 34.7116, -38.5548, 0.28 ) }
    dend_18 { pt3dadd( -37.111, 34.0981, -39.58, 0.83 ) }
    dend_18 { pt3dadd( -38.2197, 32.0954, -43.5036, 0.28 ) }
    dend_18 { pt3dadd( -38.4129, 31.7483, -44.2461, 0.55 ) }
    dend_18 { pt3dadd( -38.74, 31.1684, -45.5581, 0.55 ) }
    dend_18 { pt3dadd( -39.0683, 30.5828, -46.9612, 0.55 ) }
    dend_18 { pt3dadd( -39.5087, 29.8406, -48.7503, 1.11 ) }
    dend_18 { pt3dadd( -41.2043, 26.9473, -56.5697, 0.55 ) }
    dend_18 { pt3dadd( -41.4161, 26.537, -57.7693, 0.28 ) }
    dend_18 { pt3dadd( -41.4769, 26.4315, -58.1329, 0.55 ) }
    dend_18 { pt3dadd( -41.8886, 25.8162, -60.5533, 0.28 ) }
    dend_18 { pt3dadd( -42.0407, 25.5585, -61.6292, 0.83 ) }
    dend_18 { pt3dadd( -42.8554, 24.0775, -68.1023, 0.28 ) }
    dend_18 { pt3dadd( -42.8955, 24.0106, -68.3799, 0.55 ) }
    dend_18 { pt3dadd( -43.8033, 22.5277, -74.5653, 0.28 ) }
    dend_18 { pt3dadd( -43.9564, 22.2404, -75.6829, 0.55 ) }
    dend_18 { pt3dadd( -44.4291, 21.3483, -78.8006, 0.28 ) }
    dend_18 { pt3dadd( -44.5121, 21.1781, -79.3388, 0.83 ) }
    dend_18 { pt3dadd( -44.9387, 20.2822, -81.7967, 0.28 ) }
    dend_18 { pt3dadd( -45.1525, 19.8256, -83.0144, 0.83 ) }
    dend_18 { pt3dadd( -46.1742, 17.3786, -88.8724, 0.28 ) }
    dend_18 { pt3dadd( -46.4568, 16.7744, -90.2101, 0.83 ) }
    dend_18 { pt3dadd( -47.6814, 14.4147, -95.0674, 0.55 ) }
    dend_18 { pt3dadd( -47.8384, 14.1038, -95.6714, 0.83 ) }
    dend_18 { pt3dadd( -48.7054, 12.3181, -98.9135, 0.28 ) }
    dend_18 { pt3dadd( -48.9849, 11.7389, -99.8678, 0.55 ) }
    dend_18 { pt3dadd( -50.16, 9.25911, -103.507, 0.28 ) }
    dend_18 { pt3dadd( -50.5743, 8.34448, -104.812, 0.83 ) }
    dend_18 { pt3dadd( -52.667, 3.72133, -110.825, 0.28 ) }
    dend_18 { pt3dadd( -52.7716, 3.48533, -111.128, 0.83 ) }
    dend_18 { pt3dadd( -53.4009, 1.98145, -112.968, 0.28 ) }
    dend_18 { pt3dadd( -53.5574, 1.60736, -113.455, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -29.5462, 47.8083, -23.475, 0.55 ) }
    dend_17 { pt3dadd( -30.7086, 50.5501, -23.8573, 0.55 ) }
    dend_17 { pt3dadd( -31.5671, 52.6298, -24.1988, 0.55 ) }
    dend_17 { pt3dadd( -32.4354, 54.8302, -24.6901, 0.28 ) }
    dend_17 { pt3dadd( -33.0, 56.2885, -25.0509, 1.38 ) }
    dend_17 { pt3dadd( -33.833, 58.4205, -25.667, 0.55 ) }
    dend_17 { pt3dadd( -34.7705, 60.8016, -26.391, 0.55 ) }
    dend_17 { pt3dadd( -35.1882, 61.8125, -26.6868, 0.83 ) }
    dend_17 { pt3dadd( -35.9207, 63.6195, -27.2755, 0.28 ) }
    dend_17 { pt3dadd( -36.2999, 64.657, -27.626, 0.55 ) }
    dend_17 { pt3dadd( -36.9214, 66.4838, -28.1914, 0.28 ) }
    dend_17 { pt3dadd( -37.3664, 67.8028, -28.5143, 0.83 ) }
    dend_17 { pt3dadd( -38.2398, 70.4962, -28.9124, 0.28 ) }
    dend_17 { pt3dadd( -38.6631, 71.9475, -29.1276, 0.55 ) }
    dend_17 { pt3dadd( -39.1034, 73.6876, -29.3572, 0.28 ) }
    dend_17 { pt3dadd( -39.389, 75.1714, -29.6154, 0.83 ) }
    dend_17 { pt3dadd( -39.7491, 77.9613, -30.1447, 0.28 ) }
    dend_17 { pt3dadd( -39.9628, 80.446, -30.7532, 0.83 ) }
    dend_17 { pt3dadd( -40.1126, 84.6485, -31.9385, 0.28 ) }
    dend_17 { pt3dadd( -40.0925, 86.1116, -32.3872, 0.83 ) }
    dend_17 { pt3dadd( -39.9133, 90.1374, -33.9166, 0.28 ) }
    dend_17 { pt3dadd( -39.7657, 92.0092, -34.7273, 0.83 ) }
    dend_17 { pt3dadd( -39.5238, 94.3175, -35.8113, 0.28 ) }
    dend_17 { pt3dadd( -39.3246, 96.142, -36.7311, 0.55 ) }
    dend_17 { pt3dadd( -39.1261, 97.9651, -37.6416, 0.83 ) }
    dend_17 { pt3dadd( -38.8178, 101.987, -39.6588, 0.28 ) }
    dend_17 { pt3dadd( -38.7734, 103.55, -40.4092, 0.83 ) }
    dend_17 { pt3dadd( -38.8004, 105.657, -41.4033, 0.83 ) }
    dend_17 { pt3dadd( -38.9306, 107.75, -42.3364, 0.28 ) }
    dend_17 { pt3dadd( -39.1919, 109.35, -43.1004, 0.83 ) }
    dend_17 { pt3dadd( -39.5901, 110.941, -43.8183, 0.28 ) }
    dend_17 { pt3dadd( -39.9487, 112.066, -44.2545, 0.55 ) }
    dend_17 { pt3dadd( -40.282, 112.878, -44.5818, 0.28 ) }
    dend_17 { pt3dadd( -41.1251, 114.53, -45.1791, 0.55 ) }
    dend_17 { pt3dadd( -42.8746, 117.568, -46.0168, 0.28 ) }
    dend_17 { pt3dadd( -43.606, 118.637, -46.2958, 0.55 ) }
    dend_17 { pt3dadd( -44.4796, 119.779, -46.5607, 0.28 ) }
    dend_17 { pt3dadd( -45.4919, 120.995, -46.8075, 0.83 ) }
    dend_17 { pt3dadd( -46.8745, 122.539, -47.0343, 0.28 ) }
    dend_17 { pt3dadd( -48.2654, 124.031, -47.1542, 0.83 ) }
    dend_17 { pt3dadd( -50.3616, 126.238, -47.1602, 0.28 ) }
    dend_17 { pt3dadd( -51.1834, 127.12, -47.1968, 0.83 ) }
    dend_17 { pt3dadd( -52.1229, 128.17, -47.2551, 0.28 ) }
    dend_17 { pt3dadd( -53.3234, 129.635, -47.3642, 0.28 ) }
    dend_17 { pt3dadd( -53.8354, 130.356, -47.4838, 0.55 ) }
    dend_17 { pt3dadd( -54.9261, 132.228, -47.926, 0.28 ) }
    dend_17 { pt3dadd( -55.7049, 133.913, -48.5715, 0.55 ) }
    dend_17 { pt3dadd( -56.0996, 134.897, -49.0557, 0.55 ) }
    dend_17 { pt3dadd( -56.6323, 136.38, -49.8773, 0.83 ) }
    dend_17 { pt3dadd( -57.6024, 139.113, -51.6651, 0.28 ) }
    dend_17 { pt3dadd( -58.2952, 141.107, -53.1001, 0.83 ) }
    dend_17 { pt3dadd( -59.2542, 143.89, -55.3873, 0.28 ) }
    dend_17 { pt3dadd( -59.6236, 144.907, -56.2979, 0.28 ) }
    dend_17 { pt3dadd( -60.1084, 146.328, -57.6023, 0.83 ) }
    dend_17 { pt3dadd( -60.9856, 149.014, -60.1594, 0.28 ) }
    dend_17 { pt3dadd( -61.314, 150.008, -61.0724, 0.83 ) }
    dend_17 { pt3dadd( -62.4647, 153.67, -64.2876, 0.28 ) }
    dend_17 { pt3dadd( -63.0287, 155.451, -65.8214, 1.11 ) }
    dend_17 { pt3dadd( -64.1037, 158.958, -68.8811, 0.28 ) }
    dend_17 { pt3dadd( -64.5072, 160.442, -70.1849, 0.55 ) }
    dend_17 { pt3dadd( -64.8371, 161.83, -71.2984, 0.28 ) }
    dend_17 { pt3dadd( -65.0995, 162.964, -72.1366, 0.55 ) }
    dend_17 { pt3dadd( -65.6982, 165.958, -74.1414, 0.28 ) }
    dend_17 { pt3dadd( -65.9467, 167.155, -75.0294, 0.55 ) }
    dend_17 { pt3dadd( -66.351, 168.984, -76.4464, 0.28 ) }
    dend_17 { pt3dadd( -66.5873, 170.178, -77.4578, 0.55 ) }
    dend_17 { pt3dadd( -66.8215, 171.619, -78.7469, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -67.1165, 173.753, -80.6917, 0.55 ) }
    dend_17 { pt3dadd( -67.5842, 177.695, -84.0683, 0.28 ) }
    dend_17 { pt3dadd( -67.7556, 179.325, -85.5214, 0.55 ) }
    dend_17 { pt3dadd( -67.9648, 181.653, -87.6064, 0.28 ) }
    dend_17 { pt3dadd( -68.0331, 182.951, -88.8204, 0.83 ) }
    dend_17 { pt3dadd( -68.0499, 184.719, -90.4344, 0.28 ) }
    dend_17 { pt3dadd( -68.0231, 185.989, -91.62, 0.83 ) }
    dend_17 { pt3dadd( -67.9279, 188.181, -93.6354, 0.28 ) }
    dend_17 { pt3dadd( -67.8875, 189.171, -94.6373, 0.55 ) }
    dend_17 { pt3dadd( -67.8017, 190.563, -96.1011, 0.28 ) }
    dend_17 { pt3dadd( -67.6906, 191.736, -97.4039, 0.55 ) }
    dend_17 { pt3dadd( -67.4021, 195.141, -101.03, 0.28 ) }
    dend_17 { pt3dadd( -67.3317, 196.32, -102.227, 0.28 ) }
    dend_17 { pt3dadd( -67.3625, 198.912, -104.533, 0.55 ) }
    dend_17 { pt3dadd( -67.4666, 201.068, -106.248, 0.28 ) }
    dend_17 { pt3dadd( -67.5887, 202.231, -107.043, 0.55 ) }
    dend_17 { pt3dadd( -68.1404, 205.3, -108.78, 0.28 ) }
    dend_17 { pt3dadd( -68.6833, 207.031, -109.477, 0.83 ) }
    dend_17 { pt3dadd( -69.7715, 209.493, -110.248, 0.28 ) }
    dend_17 { pt3dadd( -70.2415, 210.231, -110.42, 0.55 ) }
    dend_17 { pt3dadd( -71.1344, 211.306, -110.652, 0.28 ) }
    dend_17 { pt3dadd( -72.1006, 212.283, -110.91, 0.55 ) }
    dend_17 { pt3dadd( -74.3757, 214.207, -111.478, 0.28 ) }
    dend_17 { pt3dadd( -74.9088, 214.622, -111.586, 0.55 ) }
    dend_17 { pt3dadd( -78.2789, 217.225, -112.349, 0.28 ) }
    dend_17 { pt3dadd( -79.1105, 217.948, -112.561, 0.55 ) }
    dend_17 { pt3dadd( -80.2171, 219.077, -112.845, 0.28 ) }
    dend_17 { pt3dadd( -81.3037, 220.278, -113.141, 0.55 ) }
    dend_17 { pt3dadd( -82.9823, 222.417, -113.617, 0.28 ) }
    dend_17 { pt3dadd( -83.9742, 223.806, -113.875, 0.55 ) }
    dend_17 { pt3dadd( -85.862, 227.087, -114.059, 0.28 ) }
    dend_17 { pt3dadd( -86.524, 228.43, -114.122, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.72262, 79.882, -18.2354, 0.55 ) }
    dend_15 { pt3dadd( -4.97796, 81.4192, -18.9848, 0.55 ) }
    dend_15 { pt3dadd( -2.52915, 83.8946, -21.4506, 0.55 ) }
    dend_15 { pt3dadd( -1.57215, 84.9426, -22.7992, 0.83 ) }
    dend_15 { pt3dadd( -0.800239, 85.806, -24.005, 0.83 ) }
    dend_15 { pt3dadd( 1.3227, 88.2532, -27.5642, 0.28 ) }
    dend_15 { pt3dadd( 2.10576, 89.1734, -28.8779, 0.83 ) }
    dend_15 { pt3dadd( 4.67053, 92.5835, -34.7467, 0.55 ) }
    dend_15 { pt3dadd( 5.13961, 93.339, -36.2695, 0.28 ) }
    dend_15 { pt3dadd( 5.32098, 93.6881, -37.0518, 0.28 ) }
    dend_15 { pt3dadd( 5.54692, 94.2621, -38.4395, 0.55 ) }
    dend_15 { pt3dadd( 5.73883, 94.9466, -40.0794, 0.55 ) }
    dend_15 { pt3dadd( 6.26065, 97.3525, -45.4739, 0.28 ) }
    dend_15 { pt3dadd( 6.49558, 98.5064, -47.7991, 0.83 ) }
    dend_15 { pt3dadd( 7.02685, 101.049, -52.6479, 0.83 ) }
    dend_15 { pt3dadd( 7.51797, 103.301, -56.7776, 0.83 ) }
    dend_15 { pt3dadd( 8.19845, 106.193, -61.9509, 0.28 ) }
    dend_15 { pt3dadd( 8.45955, 107.206, -63.6897, 0.28 ) }
    dend_15 { pt3dadd( 8.63792, 107.772, -64.5333, 0.55 ) }
    dend_15 { pt3dadd( 9.64975, 110.312, -67.9134, 0.28 ) }
    dend_15 { pt3dadd( 9.83373, 110.697, -68.3633, 0.55 ) }
    dend_15 { pt3dadd( 11.3077, 113.204, -71.1583, 0.28 ) }
    dend_15 { pt3dadd( 11.9133, 114.05, -72.3536, 0.55 ) }
    dend_15 { pt3dadd( 12.5302, 114.8, -73.6022, 0.28 ) }
    dend_15 { pt3dadd( 12.778, 115.079, -74.1029, 0.55 ) }
    dend_15 { pt3dadd( 14.6061, 116.866, -77.6099, 0.28 ) }
    dend_15 { pt3dadd( 15.1904, 117.382, -78.646, 0.55 ) }
    dend_15 { pt3dadd( 18.4746, 119.918, -84.1026, 0.28 ) }
    dend_15 { pt3dadd( 19.4315, 120.636, -85.6349, 0.28 ) }
    dend_15 { pt3dadd( 20.4407, 121.384, -87.1558, 0.55 ) }
    dend_15 { pt3dadd( 22.5867, 122.972, -90.4147, 0.28 ) }
    dend_15 { pt3dadd( 23.2771, 123.471, -91.3938, 0.55 ) }
    dend_15 { pt3dadd( 26.118, 125.481, -95.3127, 0.28 ) }
    dend_15 { pt3dadd( 27.5667, 126.466, -97.1884, 0.28 ) }
    dend_15 { pt3dadd( 28.8486, 127.328, -98.8791, 0.83 ) }
    dend_15 { pt3dadd( 33.4256, 130.247, -104.63, 0.28 ) }
    dend_15 { pt3dadd( 34.6418, 130.986, -106.075, 0.28 ) }
    dend_15 { pt3dadd( 36.3581, 131.987, -107.981, 0.55 ) }
    dend_15 { pt3dadd( 37.8626, 132.841, -109.49, 0.28 ) }
    dend_15 { pt3dadd( 38.9462, 133.39, -110.58, 0.55 ) }
    dend_15 { pt3dadd( 40.0091, 133.903, -111.56, 0.28 ) }
    dend_15 { pt3dadd( 40.6702, 134.226, -111.932, 0.55 ) }
    dend_15 { pt3dadd( 42.2257, 135.047, -112.82, 0.28 ) }
    dend_15 { pt3dadd( 44.4201, 136.433, -113.775, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -6.72262, 79.882, -18.2354, 0.55 ) }
    dend_14 { pt3dadd( -7.45061, 83.5893, -17.1574, 0.55 ) }
    dend_14 { pt3dadd( -7.76011, 86.0711, -16.2978, 0.55 ) }
    dend_14 { pt3dadd( -7.88741, 87.1253, -15.9247, 0.55 ) }
    dend_14 { pt3dadd( -8.07428, 88.8096, -15.341, 0.55 ) }
    dend_14 { pt3dadd( -8.23096, 90.2288, -14.9117, 0.55 ) }
    dend_14 { pt3dadd( -8.58785, 93.6402, -13.8864, 0.28 ) }
    dend_14 { pt3dadd( -8.69627, 94.843, -13.5141, 0.55 ) }
    dend_14 { pt3dadd( -8.77843, 96.5305, -12.8741, 0.55 ) }
    dend_14 { pt3dadd( -8.84221, 97.3466, -12.5056, 0.83 ) }
    dend_14 { pt3dadd( -9.08143, 99.1966, -11.5834, 0.28 ) }
    dend_14 { pt3dadd( -9.31036, 100.751, -10.8154, 0.83 ) }
    dend_14 { pt3dadd( -9.80085, 103.581, -9.40954, 0.28 ) }
    dend_14 { pt3dadd( -9.85305, 103.908, -9.21014, 0.83 ) }
    dend_14 { pt3dadd( -10.1339, 106.402, -7.46784, 0.55 ) }
    dend_14 { pt3dadd( -10.2281, 107.536, -6.59296, 0.55 ) }
    dend_14 { pt3dadd( -10.3222, 109.206, -5.25915, 0.83 ) }
    dend_14 { pt3dadd( -10.4247, 112.246, -2.7775, 0.55 ) }
    dend_14 { pt3dadd( -10.4458, 114.58, -0.852655, 0.83 ) }
    dend_14 { pt3dadd( -10.4268, 115.764, 0.146355, 0.28 ) }
    dend_14 { pt3dadd( -10.3764, 116.804, 0.97021, 0.83 ) }
    dend_14 { pt3dadd( -10.3092, 118.351, 2.18224, 0.83 ) }
    dend_14 { pt3dadd( -10.2784, 121.066, 4.22204, 0.83 ) }
    dend_14 { pt3dadd( -10.3213, 123.336, 5.59086, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -10.3702, 124.112, 6.00857, 0.83 ) }
    dend_14 { pt3dadd( -10.5674, 126.457, 7.30997, 0.83 ) }
    dend_14 { pt3dadd( -10.7666, 128.513, 8.47484, 0.28 ) }
    dend_14 { pt3dadd( -10.8737, 129.584, 9.11692, 0.55 ) }
    dend_14 { pt3dadd( -11.1182, 131.709, 10.3104, 0.28 ) }
    dend_14 { pt3dadd( -11.4781, 133.905, 11.6189, 0.55 ) }
    dend_14 { pt3dadd( -12.0272, 136.78, 13.4636, 0.28 ) }
    dend_14 { pt3dadd( -12.1706, 137.426, 13.9163, 0.83 ) }
    dend_14 { pt3dadd( -12.4659, 138.732, 14.8131, 0.28 ) }
    dend_14 { pt3dadd( -12.823, 140.3, 15.9454, 0.55 ) }
    dend_14 { pt3dadd( -13.2897, 142.587, 17.7886, 0.28 ) }
    dend_14 { pt3dadd( -13.3661, 143.026, 18.123, 0.55 ) }
    dend_14 { pt3dadd( -13.5144, 143.976, 18.8804, 0.28 ) }
    dend_14 { pt3dadd( -13.6216, 144.971, 19.7744, 0.83 ) }
    dend_14 { pt3dadd( -13.6611, 146.279, 21.0143, 0.28 ) }
    dend_14 { pt3dadd( -13.5957, 147.904, 22.6473, 0.55 ) }
    dend_14 { pt3dadd( -13.5146, 149.009, 23.8893, 0.28 ) }
    dend_14 { pt3dadd( -13.4677, 149.696, 24.6274, 0.83 ) }
    dend_14 { pt3dadd( -13.336, 151.153, 26.1062, 0.83 ) }
    dend_14 { pt3dadd( -13.193, 152.623, 27.4881, 0.55 ) }
    dend_14 { pt3dadd( -13.0922, 153.427, 28.1592, 0.83 ) }
    dend_14 { pt3dadd( -12.5186, 157.939, 31.5203, 0.55 ) }
    dend_14 { pt3dadd( -12.302, 159.642, 32.622, 0.83 ) }
    dend_14 { pt3dadd( -11.5518, 165.247, 35.6102, 0.28 ) }
    dend_14 { pt3dadd( -11.4098, 166.44, 35.9967, 0.55 ) }
    dend_14 { pt3dadd( -11.1113, 168.81, 36.3404, 0.28 ) }
    dend_14 { pt3dadd( -10.9152, 170.227, 36.3903, 0.83 ) }
    dend_14 { pt3dadd( -10.5013, 173.13, 35.9673, 0.28 ) }
    dend_14 { pt3dadd( -10.285, 174.877, 35.5219, 0.55 ) }
    dend_14 { pt3dadd( -9.80405, 179.721, 33.1884, 0.28 ) }
    dend_14 { pt3dadd( -9.63969, 181.847, 32.0703, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 1.75606, 279.877, 6.55851, 0.55 ) }
    dend_10 { pt3dadd( 1.93079, 282.54, 6.44768, 0.55 ) }
    dend_10 { pt3dadd( 1.99795, 285.716, 6.3075, 0.55 ) }
    dend_10 { pt3dadd( 2.03297, 288.769, 6.17626, 0.83 ) }
    dend_10 { pt3dadd( 2.04153, 290.88, 6.1049, 0.55 ) }
    dend_10 { pt3dadd( 2.05577, 293.503, 6.05032, 1.11 ) }
    dend_10 { pt3dadd( 2.13467, 297.525, 6.0002, 0.55 ) }
    dend_10 { pt3dadd( 2.23628, 300.375, 5.99527, 1.11 ) }
    dend_10 { pt3dadd( 2.37259, 302.529, 5.94129, 0.83 ) }
    dend_10 { pt3dadd( 2.6413, 304.556, 5.85019, 0.55 ) }
    dend_10 { pt3dadd( 3.25677, 307.205, 5.68432, 0.55 ) }
    dend_10 { pt3dadd( 4.05646, 309.483, 5.47063, 0.83 ) }
    dend_10 { pt3dadd( 5.26224, 311.849, 5.07919, 0.55 ) }
    dend_10 { pt3dadd( 6.76274, 314.17, 4.51227, 0.83 ) }
    dend_10 { pt3dadd( 8.10064, 315.919, 3.98105, 0.83 ) }
    dend_10 { pt3dadd( 9.35937, 317.349, 3.45938, 0.83 ) }
    dend_10 { pt3dadd( 10.4594, 318.485, 3.01522, 1.11 ) }
    dend_10 { pt3dadd( 12.8153, 320.86, 1.99004, 0.83 ) }
    dend_10 { pt3dadd( 13.8222, 321.889, 1.54675, 0.55 ) }
    dend_10 { pt3dadd( 15.434, 323.548, 0.900581, 0.83 ) }
    dend_10 { pt3dadd( 17.772, 326.12, -0.0496249, 0.55 ) }
    dend_10 { pt3dadd( 19.2534, 327.725, -0.634095, 1.11 ) }
    dend_10 { pt3dadd( 21.4915, 330.164, -1.45997, 0.55 ) }
    dend_10 { pt3dadd( 22.2671, 331.032, -1.70229, 0.55 ) }
    dend_10 { pt3dadd( 23.3203, 332.252, -2.02372, 0.55 ) }
    dend_10 { pt3dadd( 25.6606, 335.207, -2.66267, 0.55 ) }
    dend_10 { pt3dadd( 26.5512, 336.446, -2.8419, 0.28 ) }
    dend_10 { pt3dadd( 27.092, 337.299, -2.91671, 0.55 ) }
    dend_10 { pt3dadd( 28.0331, 338.95, -2.95094, 0.28 ) }
    dend_10 { pt3dadd( 28.7814, 340.415, -2.98223, 0.83 ) }
    dend_10 { pt3dadd( 30.0596, 343.185, -3.03556, 0.55 ) }
    dend_10 { pt3dadd( 30.4705, 344.114, -3.03217, 0.83 ) }
    dend_10 { pt3dadd( 31.3038, 346.116, -3.04875, 0.55 ) }
    dend_10 { pt3dadd( 31.8366, 347.412, -3.08667, 0.83 ) }
    dend_10 { pt3dadd( 33.4392, 351.356, -3.26351, 0.28 ) }
    dend_10 { pt3dadd( 34.5028, 353.965, -3.43616, 0.83 ) }
    dend_10 { pt3dadd( 35.6068, 356.66, -3.6569, 0.28 ) }
    dend_10 { pt3dadd( 36.5647, 359.037, -3.87282, 0.55 ) }
    dend_10 { pt3dadd( 37.54, 361.548, -4.11509, 0.55 ) }
    dend_10 { pt3dadd( 38.3298, 363.827, -4.39265, 0.55 ) }
    dend_10 { pt3dadd( 38.6991, 365.094, -4.57627, 0.28 ) }
    dend_10 { pt3dadd( 39.0, 366.32, -4.76859, 0.55 ) }
    dend_10 { pt3dadd( 39.4486, 368.698, -5.13638, 0.28 ) }
    dend_10 { pt3dadd( 39.6491, 370.101, -5.41753, 0.55 ) }
    dend_10 { pt3dadd( 39.9134, 372.658, -6.04616, 0.28 ) }
    dend_10 { pt3dadd( 40.0578, 374.397, -6.50929, 0.28 ) }
    dend_10 { pt3dadd( 40.2365, 376.829, -7.18269, 0.83 ) }
    dend_10 { pt3dadd( 40.3691, 379.009, -7.81924, 0.83 ) }
    dend_10 { pt3dadd( 40.6196, 383.17, -9.03354, 0.55 ) }
    dend_10 { pt3dadd( 40.802, 385.506, -9.67248, 0.55 ) }
    dend_10 { pt3dadd( 40.9827, 387.019, -10.0233, 0.55 ) }
    dend_10 { pt3dadd( 41.1306, 387.879, -10.2356, 0.28 ) }
    dend_10 { pt3dadd( 41.3873, 389.09, -10.5306, 0.55 ) }
    dend_10 { pt3dadd( 41.6572, 390.12, -10.7409, 0.28 ) }
    dend_10 { pt3dadd( 41.908, 391.085, -10.9468, 1.11 ) }
    dend_10 { pt3dadd( 42.534, 393.998, -11.8269, 0.55 ) }
    dend_10 { pt3dadd( 42.853, 396.123, -12.5565, 0.55 ) }
    dend_10 { pt3dadd( 43.0336, 397.989, -13.3007, 0.28 ) }
    dend_10 { pt3dadd( 43.0782, 399.044, -13.8031, 0.83 ) }
    dend_10 { pt3dadd( 43.1255, 402.079, -15.4673, 0.55 ) }
    dend_10 { pt3dadd( 43.1373, 404.042, -16.6219, 0.83 ) }
    dend_10 { pt3dadd( 43.1264, 406.204, -18.0026, 0.83 ) }
    dend_10 { pt3dadd( 43.1782, 408.39, -19.4972, 0.55 ) }
    dend_10 { pt3dadd( 43.2819, 410.109, -20.7532, 0.28 ) }
    dend_10 { pt3dadd( 43.4363, 411.785, -21.9928, 0.55 ) }
    dend_10 { pt3dadd( 43.608, 413.324, -23.1237, 0.55 ) }
    dend_10 { pt3dadd( 43.8573, 415.342, -24.6702, 1.11 ) }
    dend_10 { pt3dadd( 44.2066, 418.001, -26.6627, 0.55 ) }
    dend_10 { pt3dadd( 44.3552, 419.155, -27.4689, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 44.4887, 420.402, -28.3561, 0.55 ) }
    dend_10 { pt3dadd( 44.6644, 423.35, -30.4848, 0.55 ) }
    dend_10 { pt3dadd( 44.7452, 424.837, -31.5901, 0.83 ) }
    dend_10 { pt3dadd( 44.8969, 427.993, -33.7865, 0.28 ) }
    dend_10 { pt3dadd( 44.9291, 428.94, -34.4104, 0.55 ) }
    dend_10 { pt3dadd( 45.0485, 431.643, -36.0974, 0.28 ) }
    dend_10 { pt3dadd( 45.1362, 432.965, -36.8784, 0.55 ) }
    dend_10 { pt3dadd( 45.3312, 435.043, -37.9755, 0.28 ) }
    dend_10 { pt3dadd( 45.483, 437.124, -38.9571, 0.55 ) }
    dend_10 { pt3dadd( 45.5592, 438.206, -39.4114, 0.28 ) }
    dend_10 { pt3dadd( 45.6981, 439.986, -40.0663, 0.55 ) }
    dend_10 { pt3dadd( 46.0151, 442.954, -40.9067, 0.55 ) }
    dend_10 { pt3dadd( 46.2022, 444.488, -41.3602, 0.28 ) }
    dend_10 { pt3dadd( 46.2959, 445.84, -41.7793, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 1.75606, 279.877, 6.55851, 0.55 ) }
    dend_7 { pt3dadd( 0.171549, 281.493, 5.85198, 0.55 ) }
    dend_7 { pt3dadd( -1.70113, 283.508, 5.12663, 1.11 ) }
    dend_7 { pt3dadd( -3.79538, 285.614, 4.44555, 0.55 ) }
    dend_7 { pt3dadd( -4.47604, 286.311, 4.184, 0.83 ) }
    dend_7 { pt3dadd( -6.09268, 288.012, 3.5284, 0.55 ) }
    dend_7 { pt3dadd( -7.43732, 289.364, 2.99418, 0.55 ) }
    dend_7 { pt3dadd( -8.48479, 290.399, 2.57715, 0.83 ) }
    dend_7 { pt3dadd( -11.5966, 293.386, 1.34836, 0.55 ) }
    dend_7 { pt3dadd( -13.9275, 295.559, 0.534566, 0.55 ) }
    dend_7 { pt3dadd( -14.7472, 296.32, 0.221196, 0.83 ) }
    dend_7 { pt3dadd( -16.9907, 298.36, -0.660662, 0.55 ) }
    dend_7 { pt3dadd( -17.3527, 298.684, -0.810558, 0.83 ) }
    dend_7 { pt3dadd( -18.5449, 299.787, -1.25931, 0.28 ) }
    dend_7 { pt3dadd( -18.7382, 299.98, -1.30754, 0.55 ) }
    dend_7 { pt3dadd( -19.9316, 301.149, -1.39519, 0.28 ) }
    dend_7 { pt3dadd( -20.6752, 301.926, -1.40064, 0.55 ) }
    dend_7 { pt3dadd( -21.5244, 302.779, -1.42414, 0.55 ) }
    dend_7 { pt3dadd( -23.8413, 304.986, -1.5368, 0.55 ) }
    dend_7 { pt3dadd( -25.4215, 306.494, -1.64809, 0.55 ) }
    dend_7 { pt3dadd( -26.6343, 307.707, -1.84452, 0.83 ) }
    dend_7 { pt3dadd( -28.2734, 309.422, -2.20998, 0.83 ) }
    dend_7 { pt3dadd( -30.3191, 311.757, -2.97278, 0.55 ) }
    dend_7 { pt3dadd( -31.7749, 313.529, -3.69802, 0.55 ) }
    dend_7 { pt3dadd( -33.2999, 315.52, -4.65226, 1.11 ) }
    dend_7 { pt3dadd( -34.9149, 317.974, -5.85386, 0.55 ) }
    dend_7 { pt3dadd( -35.3274, 318.689, -6.2124, 0.83 ) }
    dend_7 { pt3dadd( -36.5424, 321.147, -7.32207, 0.28 ) }
    dend_7 { pt3dadd( -37.0747, 322.483, -8.11795, 0.55 ) }
    dend_7 { pt3dadd( -37.3967, 323.385, -8.7758, 0.28 ) }
    dend_7 { pt3dadd( -37.6723, 324.271, -9.46842, 0.83 ) }
    dend_7 { pt3dadd( -38.1647, 326.176, -11.006, 0.28 ) }
    dend_7 { pt3dadd( -38.5606, 327.906, -12.4387, 0.83 ) }
    dend_7 { pt3dadd( -39.8207, 334.649, -17.9988, 0.55 ) }
    dend_7 { pt3dadd( -40.0239, 335.951, -19.0806, 0.55 ) }
    dend_7 { pt3dadd( -40.1721, 337.134, -20.051, 0.83 ) }
    dend_7 { pt3dadd( -40.331, 338.65, -21.225, 0.28 ) }
    dend_7 { pt3dadd( -40.3803, 339.394, -21.7185, 0.55 ) }
    dend_7 { pt3dadd( -40.4487, 340.513, -22.3043, 0.28 ) }
    dend_7 { pt3dadd( -40.5367, 342.042, -22.6616, 0.55 ) }
    dend_7 { pt3dadd( -40.7038, 344.197, -23.2019, 0.55 ) }
    dend_7 { pt3dadd( -40.8137, 345.427, -23.507, 0.55 ) }
    dend_7 { pt3dadd( -40.9359, 346.8, -23.8227, 0.83 ) }
    dend_7 { pt3dadd( -41.1027, 348.995, -24.3319, 0.28 ) }
    dend_7 { pt3dadd( -41.2349, 350.839, -24.7385, 0.83 ) }
    dend_7 { pt3dadd( -41.3235, 353.115, -25.1846, 0.55 ) }
    dend_7 { pt3dadd( -41.3554, 354.023, -25.3348, 0.55 ) }
    dend_7 { pt3dadd( -41.3839, 355.752, -25.5444, 0.83 ) }
    dend_7 { pt3dadd( -41.4095, 356.661, -25.607, 0.55 ) }
    dend_7 { pt3dadd( -41.4676, 358.372, -25.5699, 0.83 ) }
    dend_7 { pt3dadd( -41.6273, 359.945, -25.5113, 0.28 ) }
    dend_7 { pt3dadd( -41.7323, 360.595, -25.5427, 0.28 ) }
    dend_7 { pt3dadd( -42.1285, 362.338, -25.7851, 0.28 ) }
    dend_7 { pt3dadd( -42.3198, 363.09, -25.958, 0.83 ) }
    dend_7 { pt3dadd( -42.8144, 364.839, -26.5543, 0.55 ) }
    dend_7 { pt3dadd( -43.4011, 366.767, -27.6124, 0.83 ) }
    dend_7 { pt3dadd( -44.3316, 369.383, -29.4424, 0.28 ) }
    dend_7 { pt3dadd( -44.669, 370.189, -30.1595, 0.55 ) }
    dend_7 { pt3dadd( -45.0851, 370.978, -31.0636, 0.28 ) }
    dend_7 { pt3dadd( -45.4496, 371.539, -31.7535, 0.83 ) }
    dend_7 { pt3dadd( -46.8949, 373.589, -34.3431, 0.83 ) }
    dend_7 { pt3dadd( -47.3836, 374.247, -35.1566, 0.83 ) }
    dend_7 { pt3dadd( -48.9767, 376.288, -37.504, 0.83 ) }
    dend_7 { pt3dadd( -50.8619, 378.64, -40.1131, 0.55 ) }
    dend_7 { pt3dadd( -52.0234, 380.029, -41.6421, 0.55 ) }
    dend_7 { pt3dadd( -53.0716, 381.287, -42.9727, 0.55 ) }
    dend_7 { pt3dadd( -54.2175, 382.676, -44.3443, 0.55 ) }
    dend_7 { pt3dadd( -55.8424, 384.847, -46.3385, 0.55 ) }
    dend_7 { pt3dadd( -57.1121, 386.657, -47.77, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 52.0891, -34.5651, -60.086, 0.55 ) }
    dend_45 { pt3dadd( 52.9247, -33.8925, -61.0699, 0.55 ) }
    dend_45 { pt3dadd( 53.7572, -33.1561, -62.0744, 0.83 ) }
    dend_45 { pt3dadd( 55.4421, -31.605, -64.1222, 0.28 ) }
    dend_45 { pt3dadd( 56.291, -30.7911, -65.1378, 0.83 ) }
    dend_45 { pt3dadd( 58.3369, -28.7899, -67.5044, 0.28 ) }
    dend_45 { pt3dadd( 59.0364, -28.0976, -68.2815, 0.55 ) }
    dend_45 { pt3dadd( 60.5826, -26.4873, -70.0896, 0.55 ) }
    dend_45 { pt3dadd( 62.1725, -24.7103, -71.8891, 0.55 ) }
    dend_45 { pt3dadd( 63.5231, -23.1739, -73.3368, 0.28 ) }
    dend_45 { pt3dadd( 64.0744, -22.5374, -73.9012, 0.28 ) }
    dend_45 { pt3dadd( 64.629, -21.8935, -74.4415, 0.55 ) }
    dend_45 { pt3dadd( 65.8295, -20.5502, -75.5451, 0.28 ) }
    dend_45 { pt3dadd( 67.4635, -18.7361, -76.8459, 0.55 ) }
    dend_45 { pt3dadd( 69.3719, -16.507, -78.4941, 0.28 ) }
    dend_45 { pt3dadd( 69.8681, -15.9307, -78.9383, 0.55 ) }
    dend_45 { pt3dadd( 71.8591, -13.4886, -80.7897, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 73.142, -11.8623, -82.0225, 0.28 ) }
    dend_45 { pt3dadd( 74.6044, -9.97891, -83.5021, 0.83 ) }
    dend_45 { pt3dadd( 76.8685, -6.91296, -86.0137, 0.55 ) }
    dend_45 { pt3dadd( 77.4142, -6.16436, -86.647, 0.55 ) }
    dend_45 { pt3dadd( 78.5204, -4.67194, -88.0473, 0.55 ) }
    dend_45 { pt3dadd( 79.6532, -3.22709, -89.5311, 0.83 ) }
    dend_45 { pt3dadd( 81.358, -1.19085, -91.7402, 0.28 ) }
    dend_45 { pt3dadd( 81.8925, -0.615009, -92.3642, 0.55 ) }
    dend_45 { pt3dadd( 83.3425, 0.77616, -93.6748, 0.28 ) }
    dend_45 { pt3dadd( 83.6127, 1.0173, -93.9013, 0.55 ) }
    dend_45 { pt3dadd( 84.9073, 2.00624, -94.8129, 0.55 ) }
    dend_45 { pt3dadd( 86.8461, 3.39267, -95.8989, 0.28 ) }
    dend_45 { pt3dadd( 87.5585, 3.89041, -96.2204, 0.55 ) }
    dend_45 { pt3dadd( 89.2946, 5.03874, -96.9357, 0.28 ) }
    dend_45 { pt3dadd( 90.0079, 5.49761, -97.1908, 0.55 ) }
    dend_45 { pt3dadd( 91.5553, 6.39854, -97.7198, 0.28 ) }
    dend_45 { pt3dadd( 92.5499, 6.86245, -98.0596, 0.55 ) }
    dend_45 { pt3dadd( 93.1049, 7.07312, -98.2231, 0.55 ) }
    dend_45 { pt3dadd( 94.6544, 7.68557, -98.605, 0.28 ) }
    dend_45 { pt3dadd( 95.6803, 8.12012, -98.795, 0.28 ) }
    dend_45 { pt3dadd( 96.683, 8.62215, -98.9861, 0.55 ) }
    dend_45 { pt3dadd( 99.093, 10.0221, -99.4304, 0.28 ) }
    dend_45 { pt3dadd( 100.75, 11.1694, -99.7294, 0.55 ) }
    dend_45 { pt3dadd( 102.275, 12.4003, -99.963, 0.55 ) }
    dend_45 { pt3dadd( 103.644, 13.7104, -100.13, 0.83 ) }
    dend_45 { pt3dadd( 105.615, 15.9078, -100.287, 0.28 ) }
    dend_45 { pt3dadd( 106.316, 16.8319, -100.316, 0.28 ) }
    dend_45 { pt3dadd( 107.475, 18.7023, -100.278, 0.55 ) }
    dend_45 { pt3dadd( 108.568, 20.7273, -100.177, 0.28 ) }
    dend_45 { pt3dadd( 109.026, 21.651, -100.1, 0.55 ) }
    dend_45 { pt3dadd( 109.712, 23.1536, -99.9002, 0.55 ) }
    dend_45 { pt3dadd( 110.68, 25.3928, -99.4854, 0.28 ) }
    dend_45 { pt3dadd( 111.252, 26.7558, -99.2275, 0.55 ) }
    dend_45 { pt3dadd( 112.1, 28.8745, -98.8309, 0.28 ) }
    dend_45 { pt3dadd( 113.022, 31.2852, -98.4188, 0.55 ) }
    dend_45 { pt3dadd( 113.954, 33.7828, -98.0191, 0.55 ) }
    dend_45 { pt3dadd( 114.352, 34.9067, -97.8504, 0.55 ) }
    dend_45 { pt3dadd( 115.108, 37.1744, -97.5723, 0.55 ) }
    dend_45 { pt3dadd( 115.805, 39.2784, -97.4013, 0.55 ) }
    dend_45 { pt3dadd( 116.483, 41.4494, -97.2948, 0.55 ) }
    dend_45 { pt3dadd( 117.107, 43.5177, -97.2225, 0.28 ) }
    dend_45 { pt3dadd( 117.44, 44.6032, -97.2284, 0.55 ) }
    dend_45 { pt3dadd( 118.495, 48.0208, -97.2909, 0.28 ) }
    dend_45 { pt3dadd( 119.168, 50.3157, -97.4134, 0.28 ) }
    dend_45 { pt3dadd( 119.482, 51.4717, -97.5039, 0.55 ) }
    dend_45 { pt3dadd( 120.041, 53.5188, -97.6956, 0.28 ) }
    dend_45 { pt3dadd( 120.539, 55.3635, -97.8849, 0.55 ) }
    dend_45 { pt3dadd( 120.909, 56.7764, -98.0214, 0.55 ) }
    dend_45 { pt3dadd( 121.867, 60.7626, -98.3697, 0.28 ) }
    dend_45 { pt3dadd( 122.396, 63.2404, -98.5764, 0.28 ) }
    dend_45 { pt3dadd( 122.591, 64.2513, -98.6528, 0.55 ) }
    dend_45 { pt3dadd( 122.944, 66.2929, -98.784, 0.55 ) }
    dend_45 { pt3dadd( 123.395, 69.0597, -98.8658, 0.28 ) }
    dend_45 { pt3dadd( 123.73, 71.2011, -98.8952, 0.55 ) }
    dend_45 { pt3dadd( 124.023, 73.1779, -98.8554, 0.28 ) }
    dend_45 { pt3dadd( 124.213, 74.8792, -98.809, 0.55 ) }
    dend_45 { pt3dadd( 124.313, 75.9032, -98.7595, 0.28 ) }
    dend_45 { pt3dadd( 124.381, 76.5979, -98.6641, 0.55 ) }
    dend_45 { pt3dadd( 124.562, 78.6097, -98.239, 0.28 ) }
    dend_45 { pt3dadd( 124.668, 79.5937, -97.9588, 0.55 ) }
    dend_45 { pt3dadd( 125.086, 82.8444, -96.8908, 0.28 ) }
    dend_45 { pt3dadd( 125.417, 85.0753, -96.1077, 0.55 ) }
    dend_45 { pt3dadd( 125.888, 88.0263, -95.0011, 0.28 ) }
    dend_45 { pt3dadd( 126.167, 89.6142, -94.3849, 0.55 ) }
    dend_45 { pt3dadd( 126.519, 91.4258, -93.6449, 0.28 ) }
    dend_45 { pt3dadd( 126.851, 93.0425, -92.9501, 0.55 ) }
    dend_45 { pt3dadd( 127.179, 94.5631, -92.2837, 0.28 ) }
    dend_45 { pt3dadd( 127.416, 95.7378, -91.7807, 0.55 ) }
    dend_45 { pt3dadd( 127.945, 98.6666, -90.608, 0.28 ) }
    dend_45 { pt3dadd( 128.207, 100.159, -89.9731, 0.55 ) }
    dend_45 { pt3dadd( 128.534, 102.299, -89.0288, 0.28 ) }
    dend_45 { pt3dadd( 128.645, 103.094, -88.6516, 0.55 ) }
    dend_45 { pt3dadd( 128.874, 105.116, -87.6632, 0.28 ) }
    dend_45 { pt3dadd( 129.059, 107.249, -86.6293, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 52.0891, -34.5651, -60.086, 0.28 ) }
    dend_44 { pt3dadd( 55.209, -34.8177, -61.071, 0.28 ) }
    dend_44 { pt3dadd( 56.1421, -34.8861, -61.4164, 0.55 ) }
    dend_44 { pt3dadd( 57.4182, -34.8972, -61.9537, 0.55 ) }
    dend_44 { pt3dadd( 59.3679, -34.8586, -62.7841, 0.28 ) }
    dend_44 { pt3dadd( 60.5235, -34.835, -63.2531, 0.55 ) }
    dend_44 { pt3dadd( 64.5551, -34.6973, -64.7814, 0.28 ) }
    dend_44 { pt3dadd( 65.6346, -34.5902, -65.1499, 0.55 ) }
    dend_44 { pt3dadd( 68.1864, -34.2155, -65.9402, 0.28 ) }
    dend_44 { pt3dadd( 69.271, -34.0033, -66.2341, 0.28 ) }
    dend_44 { pt3dadd( 71.0374, -33.5927, -66.6096, 0.55 ) }
    dend_44 { pt3dadd( 72.6725, -33.2125, -66.8661, 0.55 ) }
    dend_44 { pt3dadd( 76.6185, -32.3454, -67.1484, 0.28 ) }
    dend_44 { pt3dadd( 78.0965, -32.1016, -67.228, 0.55 ) }
    dend_44 { pt3dadd( 79.7787, -31.9457, -67.2981, 0.55 ) }
    dend_44 { pt3dadd( 82.8757, -31.8385, -67.4515, 0.28 ) }
    dend_44 { pt3dadd( 84.9149, -31.918, -67.564, 0.55 ) }
    dend_44 { pt3dadd( 87.4765, -32.2915, -67.661, 0.28 ) }
    dend_44 { pt3dadd( 88.8513, -32.6646, -67.6849, 0.55 ) }
    dend_44 { pt3dadd( 91.3806, -33.5882, -67.6941, 0.28 ) }
    dend_44 { pt3dadd( 92.4545, -34.1147, -67.6633, 0.55 ) }
    dend_44 { pt3dadd( 93.6284, -34.848, -67.5757, 0.55 ) }
    dend_44 { pt3dadd( 95.1331, -36.0253, -67.313, 0.28 ) }
    dend_44 { pt3dadd( 95.9794, -36.8277, -67.0952, 0.28 ) }
    dend_44 { pt3dadd( 96.8669, -37.9004, -66.7807, 0.55 ) }
    dend_44 { pt3dadd( 97.9447, -39.5586, -66.2848, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 98.0838, -39.8164, -66.2076, 0.55 ) }
    dend_44 { pt3dadd( 99.2231, -42.308, -65.565, 0.28 ) }
    dend_44 { pt3dadd( 99.3378, -42.6003, -65.5248, 0.83 ) }
    dend_44 { pt3dadd( 100.8, -46.5806, -65.2996, 0.28 ) }
    dend_44 { pt3dadd( 101.091, -47.3358, -65.402, 0.55 ) }
    dend_44 { pt3dadd( 101.812, -49.1984, -65.9283, 0.28 ) }
    dend_44 { pt3dadd( 102.263, -50.3533, -66.3744, 0.55 ) }
    dend_44 { pt3dadd( 103.342, -52.966, -67.7407, 0.28 ) }
    dend_44 { pt3dadd( 103.477, -53.2958, -67.93, 0.55 ) }
    dend_44 { pt3dadd( 105.093, -57.1158, -70.4302, 0.28 ) }
    dend_44 { pt3dadd( 105.3, -57.6422, -70.7633, 0.55 ) }
    dend_44 { pt3dadd( 105.435, -57.9627, -70.9668, 0.55 ) }
    dend_44 { pt3dadd( 105.927, -59.1481, -71.5773, 0.28 ) }
    dend_44 { pt3dadd( 106.333, -60.1446, -71.9803, 0.55 ) }
    dend_44 { pt3dadd( 107.055, -61.8729, -72.5223, 0.28 ) }
    dend_44 { pt3dadd( 107.357, -62.5829, -72.7077, 0.55 ) }
    dend_44 { pt3dadd( 109.311, -66.813, -73.9221, 0.28 ) }
    dend_44 { pt3dadd( 109.729, -67.6734, -74.1779, 0.55 ) }
    dend_44 { pt3dadd( 110.228, -68.648, -74.5222, 0.28 ) }
    dend_44 { pt3dadd( 111.899, -71.7696, -75.7346, 0.28 ) }
    dend_44 { pt3dadd( 112.414, -72.7855, -76.105, 0.55 ) }
    dend_44 { pt3dadd( 113.834, -75.7244, -77.0873, 0.28 ) }
    dend_44 { pt3dadd( 113.937, -75.9768, -77.1531, 0.55 ) }
    dend_44 { pt3dadd( 115.12, -79.2908, -77.9703, 0.28 ) }
    dend_44 { pt3dadd( 115.6, -80.9434, -78.2489, 0.55 ) }
    dend_44 { pt3dadd( 116.111, -83.0923, -78.4046, 0.28 ) }
    dend_44 { pt3dadd( 116.318, -83.9984, -78.3709, 0.55 ) }
    dend_44 { pt3dadd( 116.737, -85.867, -78.1513, 0.28 ) }
    dend_44 { pt3dadd( 116.937, -86.6871, -78.03, 0.55 ) }
    dend_44 { pt3dadd( 117.834, -89.8463, -77.7234, 0.28 ) }
    dend_44 { pt3dadd( 118.662, -92.4112, -77.6293, 0.28 ) }
    dend_44 { pt3dadd( 119.086, -93.5065, -77.6771, 0.55 ) }
    dend_44 { pt3dadd( 120.22, -96.1558, -77.9041, 0.28 ) }
    dend_44 { pt3dadd( 120.604, -96.9544, -77.9927, 0.55 ) }
    dend_44 { pt3dadd( 123.226, -102.199, -78.6555, 0.28 ) }
    dend_44 { pt3dadd( 124.287, -104.158, -78.9694, 0.55 ) }
    dend_44 { pt3dadd( 125.97, -107.01, -79.4558, 0.28 ) }
    dend_44 { pt3dadd( 126.311, -107.566, -79.5545, 0.55 ) }
    dend_44 { pt3dadd( 128.039, -110.181, -80.0081, 0.28 ) }
    dend_44 { pt3dadd( 128.29, -110.531, -80.0566, 0.55 ) }
    dend_44 { pt3dadd( 129.347, -111.65, -80.0164, 0.28 ) }
    dend_44 { pt3dadd( 130.096, -112.325, -80.0249, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 34.9122, -45.8859, 15.8102, 0.55 ) }
    dend_41 { pt3dadd( 35.694, -45.6619, 16.9439, 0.55 ) }
    dend_41 { pt3dadd( 37.2584, -45.1364, 19.2392, 0.55 ) }
    dend_41 { pt3dadd( 40.1289, -44.154, 23.3642, 0.55 ) }
    dend_41 { pt3dadd( 42.3414, -43.4141, 26.49, 0.55 ) }
    dend_41 { pt3dadd( 44.3501, -42.8041, 29.2869, 0.28 ) }
    dend_41 { pt3dadd( 45.4682, -42.487, 30.812, 0.83 ) }
    dend_41 { pt3dadd( 46.8622, -42.127, 32.7469, 0.55 ) }
    dend_41 { pt3dadd( 47.921, -41.9301, 34.1699, 0.28 ) }
    dend_41 { pt3dadd( 48.4616, -41.8644, 34.7794, 0.55 ) }
    dend_41 { pt3dadd( 49.6294, -41.7499, 35.9821, 0.28 ) }
    dend_41 { pt3dadd( 50.0212, -41.7249, 36.3829, 0.55 ) }
    dend_41 { pt3dadd( 51.7481, -41.7765, 37.9421, 0.28 ) }
    dend_41 { pt3dadd( 52.8696, -41.9922, 38.8548, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 34.9122, -45.8859, 15.8102, 0.28 ) }
    dend_40 { pt3dadd( 41.9358, -48.7748, 11.7605, 0.28 ) }
    dend_40 { pt3dadd( 42.9097, -49.1027, 11.2823, 0.83 ) }
    dend_40 { pt3dadd( 46.2713, -50.0607, 9.79899, 0.28 ) }
    dend_40 { pt3dadd( 47.2446, -50.2298, 9.43431, 0.83 ) }
    dend_40 { pt3dadd( 49.5072, -50.447, 8.66463, 0.28 ) }
    dend_40 { pt3dadd( 50.4611, -50.4731, 8.36807, 0.83 ) }
    dend_40 { pt3dadd( 53.219, -49.9668, 8.02961, 0.28 ) }
    dend_40 { pt3dadd( 53.8141, -49.7226, 7.93932, 0.83 ) }
    dend_40 { pt3dadd( 56.7876, -47.8953, 7.42026, 0.28 ) }
    dend_40 { pt3dadd( 57.5093, -47.424, 7.28172, 0.28 ) }
    dend_40 { pt3dadd( 58.5321, -46.723, 7.07154, 0.55 ) }
    dend_40 { pt3dadd( 60.4085, -45.4175, 7.05265, 0.28 ) }
    dend_40 { pt3dadd( 63.2491, -43.4358, 7.45597, 0.28 ) }
    dend_40 { pt3dadd( 63.9463, -42.9578, 7.71263, 0.83 ) }
    dend_40 { pt3dadd( 68.8315, -39.7137, 10.4082, 0.28 ) }
    dend_40 { pt3dadd( 69.6572, -39.2119, 10.9695, 0.55 ) }
    dend_40 { pt3dadd( 75.4953, -35.855, 15.9489, 0.28 ) }
    dend_40 { pt3dadd( 76.104, -35.5135, 16.5681, 0.83 ) }
    dend_40 { pt3dadd( 79.6503, -33.4075, 20.8537, 0.28 ) }
    dend_40 { pt3dadd( 80.1084, -33.0917, 21.4835, 0.55 ) }
    dend_40 { pt3dadd( 81.4227, -32.0402, 23.5728, 0.28 ) }
    dend_40 { pt3dadd( 82.66, -31.0201, 25.5119, 0.55 ) }
    dend_40 { pt3dadd( 84.2576, -29.6934, 27.6697, 0.28 ) }
    dend_40 { pt3dadd( 84.9108, -29.1278, 28.4858, 0.55 ) }
    dend_40 { pt3dadd( 87.0235, -27.0391, 30.5992, 0.28 ) }
    dend_40 { pt3dadd( 87.7805, -26.1738, 31.39, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 35.1009, -58.1227, -1.96097, 0.55 ) }
    dend_38 { pt3dadd( 37.063, -58.655, -2.61485, 0.55 ) }
    dend_38 { pt3dadd( 40.2034, -59.5306, -3.67551, 0.55 ) }
    dend_38 { pt3dadd( 42.4801, -60.1939, -4.47214, 0.28 ) }
    dend_38 { pt3dadd( 44.1021, -60.6613, -5.02931, 0.55 ) }
    dend_38 { pt3dadd( 46.6332, -61.3755, -5.84002, 0.55 ) }
    dend_38 { pt3dadd( 47.7152, -61.7195, -6.15139, 0.28 ) }
    dend_38 { pt3dadd( 48.4631, -61.9654, -6.38899, 0.55 ) }
    dend_38 { pt3dadd( 49.2992, -62.312, -6.6427, 0.28 ) }
    dend_38 { pt3dadd( 50.5329, -62.9195, -7.02152, 0.55 ) }
    dend_38 { pt3dadd( 52.3395, -63.9029, -7.48197, 0.55 ) }
    dend_38 { pt3dadd( 54.9226, -65.3501, -8.08645, 0.55 ) }
    dend_38 { pt3dadd( 58.3787, -67.1338, -9.28015, 1.38 ) }
    dend_38 { pt3dadd( 60.563, -68.1745, -10.188, 0.83 ) }
    dend_38 { pt3dadd( 62.4155, -68.9655, -11.0343, 0.55 ) }
    dend_38 { pt3dadd( 64.7426, -69.856, -12.1914, 0.28 ) }
    dend_38 { pt3dadd( 67.5892, -70.8135, -13.7043, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 72.9519, -72.2144, -16.9146, 0.28 ) }
    dend_38 { pt3dadd( 73.6447, -72.39, -17.3712, 0.28 ) }
    dend_38 { pt3dadd( 75.3804, -72.8455, -18.6905, 0.55 ) }
    dend_38 { pt3dadd( 76.5388, -73.1441, -19.6317, 0.55 ) }
    dend_38 { pt3dadd( 77.584, -73.4391, -20.5588, 0.55 ) }
    dend_38 { pt3dadd( 80.4734, -74.4685, -23.0632, 0.55 ) }
    dend_38 { pt3dadd( 83.2686, -75.6937, -25.4102, 0.28 ) }
    dend_38 { pt3dadd( 84.9718, -76.5195, -26.9104, 0.83 ) }
    dend_38 { pt3dadd( 86.0117, -77.0552, -27.8586, 0.83 ) }
    dend_38 { pt3dadd( 88.7552, -78.4801, -30.3273, 0.55 ) }
    dend_38 { pt3dadd( 89.8669, -79.0741, -31.2723, 0.83 ) }
    dend_38 { pt3dadd( 91.3992, -79.9213, -32.3434, 0.28 ) }
    dend_38 { pt3dadd( 92.4973, -80.4924, -32.9608, 0.55 ) }
    dend_38 { pt3dadd( 93.1629, -80.8837, -33.2666, 0.28 ) }
    dend_38 { pt3dadd( 93.485, -81.1031, -33.3864, 0.55 ) }
    dend_38 { pt3dadd( 95.0229, -82.1484, -33.7719, 0.28 ) }
    dend_38 { pt3dadd( 96.7243, -83.3115, -34.3158, 0.28 ) }
    dend_38 { pt3dadd( 98.0329, -84.2276, -34.7283, 0.83 ) }
    dend_38 { pt3dadd( 99.1438, -85.0957, -35.1231, 0.55 ) }
    dend_38 { pt3dadd( 101.922, -87.4215, -36.1638, 0.28 ) }
    dend_38 { pt3dadd( 102.741, -88.16, -36.5333, 0.83 ) }
    dend_38 { pt3dadd( 105.338, -90.6753, -37.8451, 0.28 ) }
    dend_38 { pt3dadd( 106.305, -91.755, -38.4007, 0.83 ) }
    dend_38 { pt3dadd( 107.949, -93.727, -39.325, 0.28 ) }
    dend_38 { pt3dadd( 108.415, -94.2914, -39.5977, 0.83 ) }
    dend_38 { pt3dadd( 110.328, -96.7303, -40.7456, 0.28 ) }
    dend_38 { pt3dadd( 111.48, -98.2356, -41.4277, 0.28 ) }
    dend_38 { pt3dadd( 112.501, -99.5282, -41.9042, 0.55 ) }
    dend_38 { pt3dadd( 113.703, -100.924, -42.4865, 0.55 ) }
    dend_38 { pt3dadd( 115.711, -103.038, -43.3851, 0.55 ) }
    dend_38 { pt3dadd( 116.792, -104.11, -43.8347, 0.28 ) }
    dend_38 { pt3dadd( 117.375, -104.658, -44.0751, 0.55 ) }
    dend_38 { pt3dadd( 119.322, -106.395, -45.0129, 0.28 ) }
    dend_38 { pt3dadd( 120.797, -107.602, -45.7117, 0.55 ) }
    dend_38 { pt3dadd( 122.344, -108.902, -46.4881, 0.28 ) }
    dend_38 { pt3dadd( 122.805, -109.296, -46.6919, 0.83 ) }
    dend_38 { pt3dadd( 124.791, -110.942, -47.6349, 0.28 ) }
    dend_38 { pt3dadd( 125.255, -111.299, -47.8546, 0.55 ) }
    dend_38 { pt3dadd( 126.463, -112.128, -48.4343, 0.55 ) }
    dend_38 { pt3dadd( 128.487, -113.505, -49.1807, 0.28 ) }
    dend_38 { pt3dadd( 128.568, -113.557, -49.2112, 0.55 ) }
    dend_38 { pt3dadd( 130.394, -114.604, -49.9926, 0.28 ) }
    dend_38 { pt3dadd( 131.12, -114.98, -50.3019, 0.55 ) }
    dend_38 { pt3dadd( 133.081, -115.992, -51.2801, 0.28 ) }
    dend_38 { pt3dadd( 134.376, -116.624, -51.9883, 0.55 ) }
    dend_38 { pt3dadd( 136.722, -117.659, -53.329, 0.55 ) }
    dend_38 { pt3dadd( 138.763, -118.554, -54.5622, 0.28 ) }
    dend_38 { pt3dadd( 140.012, -119.128, -55.3471, 0.83 ) }
    dend_38 { pt3dadd( 142.159, -120.161, -56.7197, 0.28 ) }
    dend_38 { pt3dadd( 142.62, -120.363, -56.9712, 0.55 ) }
    dend_38 { pt3dadd( 144.336, -121.012, -57.7831, 0.28 ) }
    dend_38 { pt3dadd( 144.911, -121.201, -57.9386, 0.55 ) }
    dend_38 { pt3dadd( 147.649, -121.95, -58.3851, 0.28 ) }
    dend_38 { pt3dadd( 148.522, -122.143, -58.4776, 0.83 ) }
    dend_38 { pt3dadd( 151.895, -122.699, -58.4671, 0.28 ) }
    dend_38 { pt3dadd( 152.521, -122.782, -58.4322, 0.55 ) }
    dend_38 { pt3dadd( 155.049, -122.928, -58.0476, 0.28 ) }
    dend_38 { pt3dadd( 157.204, -122.869, -57.6397, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 35.1009, -58.1227, -1.96097, 0.55 ) }
    dend_35 { pt3dadd( 36.1345, -59.0034, -3.76403, 0.55 ) }
    dend_35 { pt3dadd( 38.1729, -60.9264, -7.61543, 0.55 ) }
    dend_35 { pt3dadd( 39.95, -62.583, -10.8614, 0.28 ) }
    dend_35 { pt3dadd( 41.2747, -63.7466, -13.2206, 0.83 ) }
    dend_35 { pt3dadd( 43.5536, -65.5626, -16.9896, 0.28 ) }
    dend_35 { pt3dadd( 44.0993, -65.9575, -17.8964, 0.55 ) }
    dend_35 { pt3dadd( 44.5657, -66.2664, -18.7225, 0.55 ) }
    dend_35 { pt3dadd( 45.5882, -66.7568, -20.3942, 0.55 ) }
    dend_35 { pt3dadd( 47.2351, -67.4257, -22.9153, 0.55 ) }
    dend_35 { pt3dadd( 48.1575, -67.7612, -24.2937, 0.55 ) }
    dend_35 { pt3dadd( 50.9151, -68.5549, -27.8805, 0.83 ) }
    dend_35 { pt3dadd( 52.637, -68.99, -30.0815, 0.28 ) }
    dend_35 { pt3dadd( 53.3186, -69.1386, -30.9983, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -53.5574, 1.60736, -113.455, 0.28 ) }
    dend_20 { pt3dadd( -54.6539, 1.24273, -113.438, 0.28 ) }
    dend_20 { pt3dadd( -56.0784, 0.76895, -113.415, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -53.5574, 1.60736, -113.455, 0.28 ) }
    dend_19 { pt3dadd( -54.5173, -0.762691, -115.934, 0.28 ) }
    dend_19 { pt3dadd( -54.798, -1.45562, -116.659, 0.55 ) }
    dend_19 { pt3dadd( -55.6761, -3.62358, -118.926, 0.28 ) }
    dend_19 { pt3dadd( -56.0648, -4.58317, -119.93, 0.83 ) }
    dend_19 { pt3dadd( -57.7656, -8.7826, -124.322, 0.28 ) }
    dend_19 { pt3dadd( -58.0452, -9.47276, -125.044, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -57.1121, 386.657, -47.77, 0.55 ) }
    dend_9 { pt3dadd( -57.8657, 387.553, -49.1101, 0.55 ) }
    dend_9 { pt3dadd( -58.6682, 388.622, -50.4806, 0.28 ) }
    dend_9 { pt3dadd( -59.4685, 389.688, -51.8472, 0.55 ) }
    dend_9 { pt3dadd( -61.7825, 392.769, -55.7989, 0.28 ) }
    dend_9 { pt3dadd( -62.0486, 393.123, -56.2532, 0.55 ) }
    dend_9 { pt3dadd( -63.7645, 395.408, -59.1834, 0.28 ) }
    dend_9 { pt3dadd( -64.5871, 396.389, -60.813, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -57.1121, 386.657, -47.77, 0.28 ) }
    dend_8 { pt3dadd( -58.981, 385.922, -48.172, 0.28 ) }
    dend_8 { pt3dadd( -60.0212, 385.513, -48.3957, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 129.059, 107.249, -86.6293, 0.28 ) }
    dend_47 { pt3dadd( 125.778, 109.045, -86.479, 0.28 ) }
    dend_47 { pt3dadd( 124.665, 109.653, -86.4281, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 129.059, 107.249, -86.6293, 0.28 ) }
    dend_46 { pt3dadd( 129.291, 109.044, -86.0498, 0.28 ) }
    dend_46 { pt3dadd( 129.691, 112.418, -84.915, 0.28 ) }
    dend_46 { pt3dadd( 129.773, 113.319, -84.5688, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 129.971, 116.583, -83.1374, 0.28 ) }
    dend_46 { pt3dadd( 130.084, 118.458, -82.3148, 0.55 ) }
    dend_46 { pt3dadd( 130.231, 120.881, -81.2522, 0.28 ) }
    dend_46 { pt3dadd( 130.272, 122.147, -80.6206, 0.55 ) }
    dend_46 { pt3dadd( 130.266, 124.136, -79.4673, 0.28 ) }
    dend_46 { pt3dadd( 130.205, 125.743, -78.5073, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 53.3186, -69.1386, -30.9983, 0.55 ) }
    dend_37 { pt3dadd( 52.5824, -70.237, -33.2686, 0.55 ) }
    dend_37 { pt3dadd( 52.2652, -70.78, -34.3548, 0.28 ) }
    dend_37 { pt3dadd( 52.0429, -71.1158, -35.0793, 0.83 ) }
    dend_37 { pt3dadd( 50.554, -73.0714, -39.354, 0.28 ) }
    dend_37 { pt3dadd( 50.1322, -73.6486, -40.5502, 0.83 ) }
    dend_37 { pt3dadd( 48.2742, -76.2437, -45.6195, 0.28 ) }
    dend_37 { pt3dadd( 48.0128, -76.6022, -46.3181, 0.83 ) }
    dend_37 { pt3dadd( 46.2927, -78.6402, -50.4697, 0.28 ) }
    dend_37 { pt3dadd( 45.7448, -79.2166, -51.6103, 0.55 ) }
    dend_37 { pt3dadd( 43.1632, -81.565, -56.268, 0.28 ) }
    dend_37 { pt3dadd( 42.6306, -82.0131, -57.2107, 0.28 ) }
    dend_37 { pt3dadd( 41.4709, -82.9061, -59.2309, 0.83 ) }
    dend_37 { pt3dadd( 38.0517, -85.3998, -65.2205, 0.28 ) }
    dend_37 { pt3dadd( 37.1275, -86.0568, -66.9055, 0.55 ) }
    dend_37 { pt3dadd( 35.3358, -87.284, -70.2615, 0.55 ) }
    dend_37 { pt3dadd( 33.9905, -88.1261, -72.7362, 0.55 ) }
    dend_37 { pt3dadd( 31.6906, -89.6129, -77.0244, 0.28 ) }
    dend_37 { pt3dadd( 31.0611, -90.0812, -78.2318, 0.83 ) }
    dend_37 { pt3dadd( 28.9362, -91.835, -82.2204, 0.28 ) }
    dend_37 { pt3dadd( 28.5225, -92.2152, -82.972, 0.55 ) }
    dend_37 { pt3dadd( 26.5827, -94.1298, -85.9701, 0.28 ) }
    dend_37 { pt3dadd( 25.9594, -94.7009, -86.7751, 0.55 ) }
    dend_37 { pt3dadd( 23.4826, -97.0049, -89.5868, 0.28 ) }
    dend_37 { pt3dadd( 23.2572, -97.2002, -89.8346, 0.83 ) }
    dend_37 { pt3dadd( 21.8585, -98.3128, -91.1446, 0.28 ) }
    dend_37 { pt3dadd( 20.6898, -99.1984, -92.1102, 0.55 ) }
    dend_37 { pt3dadd( 17.0689, -101.778, -94.9299, 0.28 ) }
    dend_37 { pt3dadd( 15.9644, -102.572, -95.7175, 0.83 ) }
    dend_37 { pt3dadd( 11.1019, -106.092, -98.8025, 0.28 ) }
    dend_37 { pt3dadd( 9.00368, -107.645, -100.088, 0.55 ) }
    dend_37 { pt3dadd( 6.25849, -109.767, -101.801, 0.55 ) }
    dend_37 { pt3dadd( 3.20129, -112.271, -103.634, 0.28 ) }
    dend_37 { pt3dadd( 0.619983, -114.526, -105.022, 0.55 ) }
    dend_37 { pt3dadd( -1.20072, -116.181, -106.113, 0.28 ) }
    dend_37 { pt3dadd( -1.46313, -116.44, -106.28, 0.55 ) }
    dend_37 { pt3dadd( -3.05022, -117.945, -107.403, 0.28 ) }
    dend_37 { pt3dadd( -4.29415, -119.017, -108.301, 0.55 ) }
    dend_37 { pt3dadd( -5.67631, -120.073, -109.317, 0.55 ) }
    dend_37 { pt3dadd( -8.05886, -121.599, -111.206, 0.28 ) }
    dend_37 { pt3dadd( -9.09738, -122.176, -111.989, 0.55 ) }
    dend_37 { pt3dadd( -10.5971, -122.967, -113.096, 0.28 ) }
    dend_37 { pt3dadd( -11.5688, -123.434, -113.762, 0.55 ) }
    dend_37 { pt3dadd( -14.2064, -124.631, -115.57, 0.28 ) }
    dend_37 { pt3dadd( -15.0847, -125.005, -116.214, 0.55 ) }
    dend_37 { pt3dadd( -17.2821, -125.984, -117.835, 0.28 ) }
    dend_37 { pt3dadd( -18.6287, -126.652, -119.056, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 53.3186, -69.1386, -30.9983, 0.28 ) }
    dend_36 { pt3dadd( 57.0368, -69.0798, -31.4705, 0.28 ) }
    dend_36 { pt3dadd( 57.5751, -69.0908, -31.5883, 0.83 ) }
    dend_36 { pt3dadd( 60.056, -69.2674, -32.1553, 0.28 ) }
    dend_36 { pt3dadd( 60.9207, -69.307, -32.3596, 0.28 ) }
    dend_36 { pt3dadd( 61.9907, -69.4038, -32.6514, 0.55 ) }
    dend_36 { pt3dadd( 63.8649, -69.6191, -33.4058, 0.28 ) }
    dend_36 { pt3dadd( 65.8555, -69.9432, -34.4861, 0.55 ) }
    dend_36 { pt3dadd( 67.03, -70.2114, -35.1567, 0.55 ) }
    dend_36 { pt3dadd( 68.4781, -70.6352, -36.1515, 0.55 ) }
    dend_36 { pt3dadd( 70.9803, -71.4204, -38.0878, 0.83 ) }
    dend_36 { pt3dadd( 73.9433, -72.4051, -40.6413, 0.28 ) }
    dend_36 { pt3dadd( 74.957, -72.759, -41.5751, 0.28 ) }
    dend_36 { pt3dadd( 75.4729, -72.98, -42.1149, 0.83 ) }
    dend_36 { pt3dadd( 78.8855, -74.5301, -45.8718, 0.28 ) }
    dend_36 { pt3dadd( 79.8423, -75.0357, -47.0145, 0.83 ) }
    dend_36 { pt3dadd( 80.6403, -75.5202, -48.0388, 0.83 ) }
    dend_36 { pt3dadd( 82.0484, -76.4976, -49.8321, 0.83 ) }
    dend_36 { pt3dadd( 84.4283, -78.2765, -52.9376, 0.55 ) }
    dend_36 { pt3dadd( 86.4734, -80.0568, -55.645, 0.55 ) }
    dend_36 { pt3dadd( 88.9727, -82.6734, -58.9319, 0.55 ) }
    dend_36 { pt3dadd( 90.1268, -84.1508, -60.5636, 0.55 ) }
    dend_36 { pt3dadd( 91.0737, -85.6371, -61.9957, 0.28 ) }
    dend_36 { pt3dadd( 91.1761, -85.8395, -62.154, 0.55 ) }
    dend_36 { pt3dadd( 92.3959, -89.0147, -64.0736, 0.28 ) }
    dend_36 { pt3dadd( 92.754, -90.2477, -64.6628, 0.55 ) }
    dend_36 { pt3dadd( 93.7473, -93.9249, -66.1272, 0.28 ) }
    dend_36 { pt3dadd( 94.3385, -96.0075, -66.8431, 0.55 ) }
    dend_36 { pt3dadd( 95.0352, -98.2466, -67.5263, 0.28 ) }
    dend_36 { pt3dadd( 95.6335, -99.9171, -67.9214, 0.55 ) }
    dend_36 { pt3dadd( 97.1794, -103.796, -68.5583, 0.28 ) }
    dend_36 { pt3dadd( 97.5943, -104.722, -68.6426, 1.11 ) }
    dend_36 { pt3dadd( 100.038, -109.317, -68.6702, 0.28 ) }
    dend_36 { pt3dadd( 101.399, -111.528, -68.5148, 0.55 ) }
    dend_36 { pt3dadd( 102.854, -113.574, -67.9927, 0.28 ) }
    dend_36 { pt3dadd( 103.382, -114.207, -67.6867, 0.55 ) }
    dend_36 { pt3dadd( 104.843, -115.762, -66.5527, 0.28 ) }
    dend_36 { pt3dadd( 105.847, -116.743, -65.6387, 0.28 ) }
    dend_36 { pt3dadd( 107.832, -118.436, -63.5317, 0.55 ) }
    dend_36 { pt3dadd( 110.755, -120.956, -60.2312, 0.55 ) }
    dend_36 { pt3dadd( 111.892, -121.941, -58.9182, 0.28 ) }
    dend_36 { pt3dadd( 112.132, -122.126, -58.6586, 0.55 ) }
    dend_36 { pt3dadd( 113.93, -123.332, -56.9018, 0.28 ) }
    dend_36 { pt3dadd( 114.247, -123.53, -56.6157, 0.55 ) }
    dend_36 { pt3dadd( 115.778, -124.297, -55.5131, 0.28 ) }
    dend_36 { pt3dadd( 116.497, -124.571, -55.1283, 0.55 ) }
    dend_36 { pt3dadd( 119.386, -125.293, -53.4705, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 120.292, -125.4, -52.8322, 0.55 ) }
    dend_36 { pt3dadd( 121.737, -125.362, -51.8127, 0.28 ) }
    dend_36 { pt3dadd( 122.195, -125.28, -51.3953, 0.55 ) }
    dend_36 { pt3dadd( 123.49, -124.861, -50.0183, 0.28 ) }
    dend_36 { pt3dadd( 124.594, -124.442, -48.7376, 0.55 ) }
    dend_36 { pt3dadd( 126.523, -123.516, -46.0001, 0.28 ) }
    dend_36 { pt3dadd( 127.957, -122.718, -43.7667, 0.55 ) }
    dend_36 { pt3dadd( 130.918, -120.737, -38.7985, 0.28 ) }
    dend_36 { pt3dadd( 131.339, -120.436, -38.0455, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 5
    dend_6 nseg = 11
    dend_5 nseg = 7
    dend_3 nseg = 7
    dend_48 nseg = 15
    dend_43 nseg = 3
    dend_30 nseg = 15
    dend_29 nseg = 5
    dend_24 nseg = 3
    dend_18 nseg = 5
    dend_17 nseg = 11
    dend_15 nseg = 7
    dend_14 nseg = 7
    dend_10 nseg = 9
    dend_7 nseg = 7
    dend_45 nseg = 9
    dend_44 nseg = 7
    dend_40 nseg = 3
    dend_38 nseg = 7
    dend_37 nseg = 7
    dend_36 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_BTC_d58cc3840a_0_0


