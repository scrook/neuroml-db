// Cell: bAC217_L5_LBC_3daa582d70_0_0
/*
{
  "id" : "bAC217_L5_LBC_3daa582d70_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.47353, -9.82937, -0.0150783, 3.11345", "-4.06901, -8.79368, -0.0135938, 5.39642", "-3.66449, -7.75799, -0.0121094, 6.72082", "-3.25998, -6.72231, -0.0106249, 7.70122", "-2.85546, -5.68662, -0.00914047, 8.43968", "-2.45095, -4.65093, -0.00765602, 9.25919", "-2.04643, -3.61524, -0.00617157, 10.0787", "-1.64192, -2.57956, -0.00468712, 10.8982", "-1.2374, -1.54387, -0.00320267, 11.7151", "-0.832884, -0.508183, -0.00171822, 12.3073", "-0.428368, 0.527504, -2.33766E-4, 12.0741", "-0.023852, 1.56319, 0.00125068, 11.8342", "0.380664, 2.59888, 0.00273513, 11.5616", "0.78518, 3.63457, 0.00421958, 11.0624", "1.1897, 4.67025, 0.00570403, 10.5822", "1.59421, 5.70594, 0.00718848, 10.0942", "1.99873, 6.74163, 0.00867293, 9.27653", "2.40324, 7.77731, 0.0101574, 7.88308", "2.80776, 8.813, 0.0116418, 6.37032", "3.21227, 9.84869, 0.0131263, 4.97817", "3.61679, 10.8844, 0.0146107, 4.57234" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.0120471, -7.68767, 1.51098, 1.08", "2.96824, -12.7445, 1.06211, 1.08", "5.28682, -16.7107, 0.710051, 1.08", "6.88266, -19.4405, 0.467737, 1.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.41795, -8.40967, -0.0190242, 1.08", "-3.75983, -9.04264, -0.0283024, 1.08", "0.309605, -12.5545, -0.10072, 1.08", "2.03092, -14.1498, -0.131404, 1.08", "4.79754, -16.7369, -0.178043, 1.08", "9.55396, -21.388, -0.255071, 1.08", "13.0608, -24.9037, -0.307729, 1.08", "13.2486, -25.1116, -0.310668, 1.08", "18.9705, -32.6142, -0.457381, 1.08", "20.6614, -35.2304, -0.565439, 1.08", "22.036, -37.8172, -0.72095, 1.08", "23.449, -42.0093, -1.02447, 1.08", "24.5988, -47.6361, -1.4556, 1.08", "25.1498, -52.5812, -1.86282, 1.08", "25.0957, -54.4848, -2.03021, 1.08", "24.9809, -56.8824, -2.21845, 1.08", "24.7498, -62.8563, -2.64223, 1.08", "24.8187, -66.4388, -2.85808, 1.08", "25.2091, -69.5855, -3.15521, 1.08", "25.8825, -73.7242, -3.7003, 1.08", "27.0049, -79.3091, -4.55425, 1.08", "27.1229, -79.9259, -4.66833, 1.08", "27.9958, -83.9789, -5.5439, 1.08", "29.4053, -89.094, -6.70515, 1.08", "30.5399, -93.0448, -7.54144, 1.08", "32.5445, -99.211, -8.93988, 1.08", "33.5052, -102.234, -9.62289, 1.08", "33.9923, -103.93, -9.97564, 1.08", "35.0726, -108.226, -10.8275, 1.08", "36.964, -114.711, -11.9092, 1.08", "38.3272, -119.559, -12.7701, 0.81", "38.8584, -121.249, -13.0881, 0.81", "39.8238, -124.362, -13.8137, 0.81", "40.8004, -127.609, -14.6294, 0.81", "41.5887, -130.86, -15.4471, 0.81", "42.8013, -136.243, -16.7837, 0.81", "45.0509, -146.103, -19.289, 0.81", "46.3571, -150.679, -20.5329, 0.81", "47.7647, -155.007, -21.6734, 0.81", "49.4022, -159.607, -22.7801, 0.81", "49.508, -159.866, -22.8443, 0.81", "51.9567, -164.914, -24.1144, 0.81", "53.3646, -167.805, -24.7598, 0.81", "57.4718, -174.948, -26.0435, 0.81", "60.3956, -179.568, -26.8889, 0.81", "62.3399, -182.443, -27.4536, 0.81", "62.4919, -182.685, -27.4992, 0.81", "64.1483, -185.785, -27.9987, 0.81", "67.6706, -193.209, -29.3798, 0.81", "67.6896, -193.257, -29.3888, 0.81", "68.2319, -195.92, -29.7847, 0.81", "68.4959, -197.802, -29.9882, 0.81", "69.0409, -202.297, -30.4033, 0.81", "69.2229, -203.58, -30.5082, 0.81", "70.1381, -211.297, -31.1842, 0.81", "70.6817, -215.174, -31.713, 0.81", "71.4107, -219.549, -32.442, 0.81", "72.4729, -225.941, -34.0218, 0.81", "73.174, -229.798, -35.2541, 0.81", "73.9613, -233.979, -36.9105, 0.81", "74.9821, -239.224, -39.4219, 0.81", "74.9935, -239.279, -39.452, 0.81", "75.8375, -244.957, -43.0138, 0.81", "76.1438, -247.926, -45.1756, 0.81", "76.2119, -250.557, -47.1551, 0.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.04795, -7.43117, 1.45098, 1.08", "-6.19043, -10.458, 0.334334, 1.08", "-6.38756, -14.646, -1.21065, 1.35", "-6.70638, -21.4191, -3.70933, 1.35", "-6.82982, -24.0415, -4.67675, 1.35", "-6.83999, -24.2577, -4.7565, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-2.31794, 6.75233, 2.93098, 1.89", "-4.4398, 7.78514, 2.93098, 1.89", "-7.35045, 9.2019, 2.93098, 1.89" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.377952, 8.23434, 1.46098, 1.41", "-3.07607, 9.29806, 2.33293, 1.41", "-5.8549, 10.3936, 3.23096, 1.23", "-8.62458, 11.4855, 4.12604, 1.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.75205, 10.7233, -2.91902, 1.11", "4.85002, 12.5028, -3.02032, 1.11", "5.73236, 17.2681, -3.39427, 1.11", "7.13409, 21.8625, -3.77662, 1.11", "8.38389, 24.4636, -3.97858, 1.11", "10.9794, 29.0439, -4.56931, 1.11", "13.988, 34.2757, -5.46689, 1.11", "15.7963, 37.0546, -6.03125, 1.11", "19.4801, 42.0633, -7.26942, 1.67", "25.0526, 49.4538, -9.34999, 1.11", "27.4048, 52.5657, -10.246, 1.11", "29.5932, 55.5656, -11.1585, 1.11", "31.8882, 58.9878, -12.1926, 1.11", "35.2281, 64.1003, -13.5988, 1.11", "38.224, 68.7334, -15.0113, 1.11", "40.61, 72.5414, -16.175, 1.11", "43.5237, 76.9916, -17.436, 1.11", "44.5965, 78.6191, -17.892, 1.11", "48.7102, 84.9691, -19.7405, 1.11", "51.5238, 89.3185, -20.9562, 1.11", "52.2594, 90.4803, -21.2807, 1.11", "53.6669, 92.9353, -21.9374, 1.11", "56.4474, 97.9798, -23.316, 1.11", "59.6237, 103.91, -24.9456, 1.11", "61.6693, 108.009, -26.0933, 1.11", "63.9166, 112.201, -27.2172, 1.11", "65.9655, 115.875, -28.3004, 1.11", "67.7392, 119.159, -29.3784, 1.06", "68.7209, 120.996, -30.1055, 0.53", "69.4686, 122.773, -30.8735, 0.35", "70.4542, 125.719, -32.3307, 0.35", "70.5118, 125.939, -32.4509, 0.35", "71.2175, 130.283, -34.714, 0.35", "71.3666, 131.669, -35.4619, 0.35", "71.5997, 133.978, -36.7974, 0.35", "71.9465, 137.1, -38.5863, 0.35", "72.217, 139.098, -39.7484, 0.35", "72.7557, 141.679, -41.3016, 0.35", "73.6174, 144.492, -43.0097, 0.35", "74.0427, 145.826, -43.7745, 0.35", "74.5631, 147.456, -44.6819, 0.35", "75.2128, 149.756, -45.8879, 0.35", "75.71, 151.671, -46.8527, 0.35", "76.1068, 153.094, -47.5836, 0.35", "76.3314, 154.068, -47.9999, 1.23", "76.3961, 154.379, -48.1544, 1.23", "76.763, 156.296, -49.2547, 0.18", "77.1231, 157.659, -50.1855, 0.18", "77.5077, 158.673, -50.9249, 0.18", "78.0901, 160.008, -51.9961, 1.23", "78.7222, 161.159, -52.8698, 0.18", "78.965, 161.552, -53.1099, 0.18", "80.735, 163.807, -54.1958, 0.18", "81.2005, 164.344, -54.4415, 0.88", "81.5089, 164.665, -54.5848, 0.18", "83.2886, 166.394, -55.2719, 0.18", "84.9284, 168.019, -55.731, 0.18", "87.3972, 170.412, -56.2248, 1.06", "87.6604, 170.655, -56.248, 1.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.61679, 10.8844, 0.0146107, 0.81", "9.07397, 24.8565, 0.0146107, 0.81", "14.5311, 38.8286, 0.0146107, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "6.88266, -19.4405, 0.467737, 1.08", "12.6394, -19.1504, 1.25343, 1.08", "23.6462, -17.5451, 3.4347, 1.08", "34.8439, -17.4797, 5.27275, 1.08", "46.1589, -18.1053, 5.82337, 1.08", "57.2116, -18.041, 8.39322, 1.08", "68.2017, -16.4404, 10.6601, 1.08", "78.6864, -13.549, 13.749, 1.08", "88.7545, -11.9584, 18.7043, 1.08", "97.8672, -8.70664, 24.5262, 1.08", "107.158, -4.76526, 29.5393, 1.08", "116.728, -0.559382, 33.7212, 1.08", "126.051, 4.25194, 37.7333, 1.08", "136.793, 7.00444, 39.9616, 1.08", "146.479, 11.1545, 43.9343, 1.08", "155.794, 16.4027, 47.3108, 1.08", "164.814, 22.5441, 49.6724, 1.08", "174.545, 26.8268, 53.37, 1.08", "184.283, 28.8648, 58.7792, 1.08", "194.717, 29.5683, 63.1776, 1.08", "204.324, 30.7333, 69.0883, 1.08", "214.905, 30.0727, 73.1293, 1.08" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.88266, -19.4405, 0.467737, 1.08", "9.04584, -23.6788, 0.410066, 1.08", "11.3526, -27.871, 0.222193, 1.08", "14.2301, -32.3089, -0.136495, 1.08", "16.7466, -35.9004, -0.498449, 1.08", "20.5204, -41.2864, -1.04125, 0.81", "21.8614, -43.2002, -1.23412, 0.81", "24.0123, -46.0496, -1.59757, 0.81", "27.0281, -49.8713, -2.31347, 0.81", "27.0684, -49.9104, -2.32548, 0.81" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "76.2119, -250.557, -47.1551, 0.27", "87.1124, -255.422, -46.0126, 0.27", "101.882, -262.012, -44.4644, 0.27" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "76.2119, -250.557, -47.1551, 0.27", "76.1914, -254.713, -50.9946, 0.27", "76.1532, -260.437, -56.4662, 0.27", "76.0908, -265.974, -61.6924, 0.27", "76.0422, -270.298, -65.7729, 0.27", "75.9791, -275.89, -71.0502, 0.27", "75.8661, -285.938, -80.5329, 0.27", "75.8567, -286.16, -80.7554, 0.27", "75.841, -287.976, -82.5242, 0.27" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.83999, -24.2577, -4.7565, 1.08", "-8.31644, -25.9747, -4.52553, 1.08", "-10.2941, -28.2747, -4.21614, 1.08", "-12.3395, -30.6533, -3.89618, 1.08", "-15.387, -34.1974, -3.41944, 1.08", "-16.9189, -35.9789, -3.1798, 1.08", "-18.6344, -37.9739, -2.91143, 1.08" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-6.83999, -24.2577, -4.7565, 0.27", "-9.36577, -29.7528, -5.57717, 0.27", "-10.1388, -34.4439, -6.15208, 0.54", "-10.1953, -35.5199, -6.21412, 1.08", "-10.203, -35.901, -6.22863, 1.08", "-10.4064, -41.6953, -6.49479, 1.08", "-10.5371, -44.3729, -6.62375, 1.08", "-10.8495, -53.2447, -7.02528, 1.08", "-11.1461, -61.5293, -7.59788, 1.08", "-11.1531, -61.9093, -7.63146, 1.08", "-10.9715, -68.9097, -8.39609, 1.08", "-10.6205, -72.7379, -8.91736, 1.08", "-10.4808, -75.5907, -9.32128, 1.08", "-10.534, -78.3025, -9.7165, 1.08", "-10.3191, -82.0065, -10.2374, 1.08", "-9.92635, -86.4116, -10.7404, 1.08", "-9.73645, -89.4618, -10.9555, 1.08", "-9.57911, -99.5118, -11.496, 1.08", "-9.6364, -101.437, -11.647, 1.08", "-9.77365, -109.819, -12.5727, 1.08", "-9.80115, -110.664, -12.6825, 1.08", "-10.0903, -119.917, -14.0584, 1.08", "-10.1617, -125.608, -15.0068, 1.08", "-9.76565, -131.432, -16.0715, 1.08", "-9.6373, -140.243, -17.8186, 1.08", "-9.64015, -140.603, -17.8972, 1.08", "-9.63053, -142.125, -18.2462, 1.08", "-9.51091, -147.432, -19.5266, 1.08", "-9.26354, -159.456, -22.248, 1.08", "-9.40773, -168.791, -23.9789, 1.08", "-9.64137, -176.233, -25.1465, 1.08", "-9.77945, -181.768, -25.8508, 1.08", "-9.77945, -181.852, -25.8585, 1.08", "-9.67554, -188.706, -26.2077, 1.08", "-9.10159, -197.94, -26.2567, 1.08", "-8.36966, -205.428, -26.0581, 1.08", "-7.86082, -211.783, -25.7343, 0.81", "-7.30962, -218.423, -25.4586, 0.81", "-6.94602, -223.189, -25.3347, 0.81", "-5.5393, -236.741, -25.5271, 0.81", "-4.54444, -244.369, -25.9169, 0.81", "-4.20152, -246.993, -26.1223, 0.81", "-3.25396, -254.804, -26.6776, 0.81", "-2.7289, -260.074, -26.9282, 0.81", "-1.6914, -275.547, -27.1605, 0.81", "-1.7283, -279.896, -27.1975, 0.81", "-1.74398, -280.278, -27.1997, 0.81", "-2.47804, -288.691, -27.2106, 0.81", "-3.39675, -295.117, -27.0911, 0.81", "-4.98274, -302.285, -26.9408, 0.81", "-7.31919, -310.444, -26.5709, 0.81", "-8.16441, -313.413, -26.46, 0.81", "-9.91285, -320.047, -26.2831, 0.81", "-11.2567, -325.277, -26.2324, 0.81", "-13.1568, -332.371, -26.2527, 0.81", "-15.5297, -342.52, -26.1949, 0.81", "-17.2669, -350.357, -26.043, 0.81", "-18.7169, -357.123, -26.0123, 0.81", "-20.6292, -365.966, -25.9697, 0.81", "-21.5247, -370.395, -25.972, 0.81", "-22.4173, -375.437, -26.0463, 0.81", "-23.6072, -382.144, -26.3033, 0.81", "-24.1941, -389.14, -26.5049, 0.81", "-24.1589, -391.751, -26.546, 0.81", "-24.1116, -392.288, -26.5428, 1.08", "-24.0585, -392.825, -26.5175, 1.08", "-23.2355, -399.632, -26.1926, 0.54", "-21.6724, -409.664, -25.7846, 0.54", "-20.8499, -415.054, -25.6345, 0.54", "-20.0556, -420.634, -25.5607, 0.54", "-19.663, -424.296, -25.4997, 0.54", "-19.3164, -429.571, -25.3678, 0.54", "-19.2834, -432.979, -25.1839, 0.54", "-19.5386, -440.566, -24.5805, 0.54", "-19.7683, -444.165, -24.2414, 0.54", "-20.0161, -448.48, -23.8297, 0.54", "-20.3989, -451.408, -23.5622, 0.54", "-21.4407, -457.837, -22.9676, 0.54", "-21.4567, -457.934, -22.9579, 0.54", "-21.7287, -459.476, -22.7692, 0.54", "-22.512, -464.733, -22.1335, 0.54", "-23.3074, -471.382, -21.3599, 0.54", "-24.4923, -480.781, -20.3633, 0.54", "-25.3919, -489.194, -19.615, 0.54", "-25.8653, -493.864, -19.1891, 0.54", "-26.498, -500.399, -18.7959, 0.54", "-26.5933, -501.54, -18.7612, 0.54", "-26.9915, -508.003, -18.7502, 0.54", "-27.8103, -515.667, -19.1134, 0.54", "-28.7113, -524.392, -19.8828, 0.54", "-29.4487, -530.898, -20.6618, 0.54", "-30.2611, -537.076, -21.4981, 0.54", "-30.4017, -538.201, -21.6657, 0.54", "-31.1761, -545.157, -23.0053, 0.54" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 27
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.35045, 9.2019, 2.93098, 0.81", "-8.04737, 11.1156, 3.29875, 0.81", "-9.62025, 15.3426, 4.0969, 1.08", "-13.0164, 21.1937, 5.05564, 1.08", "-13.9014, 22.4876, 5.23104, 1.08", "-16.4583, 26.5041, 5.67591, 1.08", "-16.4949, 26.5625, 5.68117, 1.08", "-19.2213, 30.5869, 5.88827, 1.08", "-23.3113, 36.7408, 6.03431, 1.08", "-24.9784, 39.6564, 5.95031, 1.08", "-28.4447, 46.2229, 5.50373, 1.08", "-31.7119, 52.7036, 4.79693, 1.08", "-33.5697, 56.3657, 4.32468, 1.08", "-36.1933, 61.6092, 3.55114, 1.08", "-38.1947, 65.6307, 2.88243, 1.08", "-38.4331, 65.9946, 2.80985, 1.08", "-39.3678, 67.0151, 2.56335, 1.08", "-44.429, 71.7102, 1.44376, 1.08", "-48.4722, 74.9776, 0.698907, 1.08", "-52.6108, 77.7701, 0.044844, 1.08", "-56.3271, 80.1154, -0.434723, 1.08", "-58.6056, 81.5327, -0.73814, 1.08", "-60.6235, 83.0574, -1.00665, 1.08", "-63.9177, 85.9896, -1.40612, 1.08", "-66.624, 88.8867, -1.66567, 1.08", "-66.8214, 89.1144, -1.68534, 1.08", "-70.3953, 93.7551, -2.04119, 1.08", "-75.3645, 100.933, -2.76642, 1.08", "-79.4753, 107.047, -3.4461, 1.08", "-83.1293, 112.77, -4.24313, 1.08", "-86.8619, 119.136, -5.13975, 1.08", "-90.7938, 126.297, -6.11483, 1.08", "-94.2721, 133.369, -7.13707, 1.08", "-97.0406, 139.103, -8.12059, 1.08", "-98.4727, 142.521, -8.71521, 1.08", "-101.063, 148.608, -9.71402, 1.08", "-103.485, 155.054, -10.4939, 1.08", "-105.863, 160.798, -10.9959, 0.81", "-107.833, 164.808, -11.1299, 0.81", "-110.399, 169.654, -11.1615, 0.81", "-112.649, 173.196, -11.0834, 0.81", "-114.631, 175.881, -11.0411, 0.54", "-119.296, 181.579, -10.7755, 0.54", "-124.257, 187.09, -10.2364, 1.08", "-125.13, 188.037, -10.1121, 1.08", "-127.954, 190.956, -9.80186, 1.08", "-134.213, 197.704, -9.46482, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.35045, 9.2019, 2.93098, 1.08", "-12.4854, 2.01671, -0.927041, 1.08", "-15.5444, -2.25399, -3.10118, 0.81", "-19.4946, -8.29697, -6.43517, 1.08", "-21.6438, -11.767, -8.3884, 1.08", "-23.8333, -15.3021, -10.3783, 1.08", "-27.0054, -20.4237, -13.2612, 1.08", "-28.5068, -23.3115, -14.6926, 1.08", "-30.9924, -28.9458, -17.9433, 0.54", "-31.3279, -29.6599, -18.4297, 0.54" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-8.62458, 11.4855, 4.12604, 0.53", "-9.65216, 11.4755, 4.41565, 0.53", "-11.9585, 11.4529, 5.06568, 0.53", "-12.2631, 11.4499, 5.15153, 0.53", "-13.6548, 11.4363, 5.54377, 0.53", "-15.3346, 11.4198, 6.01719, 0.53", "-17.4635, 11.399, 6.6172, 0.53", "-26.4149, 11.8734, 7.77004, 0.53", "-34.8263, 14.0499, 10.144, 0.53", "-43.0536, 16.8699, 12.4027, 0.53", "-50.0619, 21.3093, 15.6826, 0.53", "-57.6853, 24.9608, 18.6431, 0.53", "-64.8608, 28.4966, 22.6971, 0.53", "-72.1976, 30.7836, 27.4063, 0.53", "-79.8043, 33.082, 31.6551, 0.53", "-87.817, 34.5067, 35.5661, 0.53", "-96.2202, 34.3999, 38.9055, 0.53", "-104.252, 35.7686, 42.8, 0.53", "-112.33, 37.3339, 46.5101, 0.53", "-120.597, 39.3254, 49.5007, 0.53", "-128.938, 39.7023, 52.9706, 0.53", "-137.492, 39.2364, 55.8637, 0.53", "-145.972, 40.2705, 58.802, 0.53", "-154.297, 42.2481, 61.6359, 0.53", "-162.297, 45.0228, 64.659, 0.53", "-169.845, 47.6772, 68.7805, 0.53", "-177.319, 49.5421, 73.4783, 0.53", "-183.516, 51.3671, 79.7865, 0.53", "-189.271, 51.5511, 86.7589, 0.53", "-194.503, 50.6385, 94.0647, 0.53" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.62458, 11.4855, 4.12604, 0.53", "-8.5141, 13.2169, 4.58869, 0.53", "-8.49611, 13.4988, 4.66401, 0.53", "-8.32777, 16.137, 5.36897, 0.53", "-9.22678, 23.4912, 6.49599, 0.53", "-9.54554, 30.9383, 7.16308, 0.53", "-10.8553, 38.2057, 8.49272, 0.53", "-11.5561, 45.2282, 11.1322, 0.53", "-12.1928, 52.5905, 12.3802, 0.53", "-12.5239, 60.0209, 13.2309, 0.53", "-11.8426, 67.4339, 12.4644, 0.53", "-11.056, 74.7238, 10.9178, 0.53", "-10.3679, 81.8855, 8.78414, 0.53", "-10.7495, 88.6687, 5.52365, 0.53", "-10.5071, 95.6682, 2.79196, 0.53", "-11.2152, 102.806, 0.588359, 0.53", "-12.3884, 109.678, -2.24833, 0.53", "-12.992, 116.386, -5.64269, 0.53", "-15.0449, 123.201, -8.10966, 0.53", "-18.6468, 129.212, -11.0569, 0.53", "-21.7771, 135.236, -14.4757, 0.53", "-24.2383, 141.065, -18.7151, 0.53", "-25.3756, 147.012, -23.3199, 0.53", "-27.5948, 153.397, -26.7275, 0.53" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "87.6604, 170.655, -56.248, 0.18", "88.1115, 171.005, -56.1156, 0.18", "89.4389, 172.091, -55.6913, 0.18", "91.7794, 174.198, -54.9327, 0.53", "94.5419, 176.626, -54.1888, 0.53", "96.9041, 178.778, -53.6449, 0.35", "99.2014, 180.781, -53.2948, 0.35", "99.5219, 181.061, -53.27, 0.35", "101.442, 182.763, -53.364, 0.35", "104.031, 184.919, -53.8176, 0.35", "106.259, 186.218, -54.7156, 0.35", "108.943, 187.299, -56.1133, 0.35", "109.109, 187.353, -56.2186, 0.35", "110.913, 187.823, -57.6207, 0.18", "113.156, 188.247, -59.4936, 0.18", "117.405, 188.876, -63.3605, 0.18", "117.479, 188.883, -63.4301, 0.18", "119.46, 189.121, -65.2769, 0.53", "122.822, 189.491, -68.4343, 0.53" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "87.6604, 170.655, -56.248, 0.18", "87.7108, 171.565, -56.5367, 0.18", "87.9981, 176.75, -58.1819, 0.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.5311, 38.8286, 0.0146107, 0.54", "19.9883, 52.8007, 0.0146107, 0.54", "25.4455, 66.7728, 0.0146107, 0.54" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "214.905, 30.0727, 73.1293, 0.18", "222.89, 32.3332, 72.7382, 0.18", "230.392, 35.7716, 73.1638, 0.18", "237.407, 39.5679, 75.2508, 0.18", "243.611, 43.7854, 78.6143, 0.18", "249.799, 46.9878, 83.0692, 0.18" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "214.905, 30.0727, 73.1293, 0.18", "220.808, 31.1915, 76.7914, 0.18", "226.388, 33.0752, 80.6025, 0.18", "231.005, 34.1691, 85.7942, 0.18", "235.468, 34.0495, 91.2485, 0.18", "239.727, 35.1093, 96.7442, 0.18", "245.011, 36.478, 101.171, 0.18", "249.466, 38.6392, 106.122, 0.18" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-18.6344, -37.9739, -2.91143, 1.08", "-22.6044, -39.338, -1.8155, 1.08", "-25.7345, -40.5086, -1.04694, 0.81", "-29.0786, -41.8635, -0.204306, 0.81", "-32.2176, -43.1352, 0.586646, 0.81", "-35.8764, -44.6175, 1.5086, 0.81", "-40.3447, -46.4278, 2.63451, 0.81", "-42.0542, -47.1935, 2.98546, 0.81", "-44.8082, -48.3255, 3.38883, 0.81", "-53.8183, -54.0228, 5.90531, 0.81", "-62.651, -59.6991, 9.01385, 0.81", "-71.9875, -63.3633, 13.6322, 0.81", "-80.2673, -68.229, 18.9541, 0.81", "-88.1936, -73.3611, 24.5239, 0.81", "-95.9022, -80.0968, 28.1976, 0.81", "-101.622, -88.076, 32.6317, 0.81", "-106.63, -96.2216, 37.5513, 0.81", "-112.57, -103.885, 42.2985, 0.81", "-118.962, -111.235, 47.0106, 0.81", "-125.6, -118.023, 52.2789, 0.81", "-134.239, -122.827, 57.0729, 0.81", "-143.266, -126.177, 62.4955, 0.81", "-152.27, -130.864, 66.7246, 0.81", "-161.921, -133.019, 71.751, 0.81", "-172.061, -135.008, 75.8078, 0.81", "-182.29, -136.293, 79.966, 0.81", "-192.117, -135.554, 85.1488, 0.81" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-18.6344, -37.9739, -2.91143, 0.81", "-21.3331, -42.7428, -3.68725, 0.81", "-23.7806, -46.9504, -4.27431, 1.08", "-25.129, -49.023, -4.54798, 1.08", "-26.8902, -52.0006, -5.08346, 1.08", "-27.7774, -53.6353, -5.38848, 1.08", "-30.5229, -58.606, -6.28676, 1.08", "-30.6592, -58.836, -6.32046, 1.08", "-32.5353, -61.8584, -6.92115, 0.81", "-35.4706, -66.9056, -7.99158, 0.54", "-37.2598, -70.4891, -8.72709, 1.08", "-39.9269, -76.8661, -9.88504, 1.08", "-41.008, -80.2838, -10.424, 1.08", "-41.57, -83.1291, -10.8037, 0.81", "-41.7941, -85.9832, -11.002, 0.81", "-41.7727, -89.0043, -10.9572, 1.08", "-41.1528, -94.2678, -10.7564, 1.08", "-40.4123, -97.9132, -10.5141, 0.81", "-39.3652, -103.981, -10.0226, 0.54", "-38.9931, -107.363, -9.67028, 0.54", "-38.8314, -110.454, -9.36296, 0.54", "-38.8886, -113.978, -9.0262, 0.54", "-39.1299, -116.624, -8.77785, 1.08", "-40.1251, -121.781, -8.34292, 1.08", "-43.0364, -131.876, -7.6869, 1.08", "-43.1216, -132.129, -7.67932, 1.08", "-44.8083, -136.584, -7.57988, 1.08", "-46.7995, -141.133, -7.43435, 1.08", "-48.7073, -145.273, -7.33306, 1.08", "-49.5048, -146.699, -7.33293, 0.81", "-49.666, -146.916, -7.34195, 0.81", "-50.5252, -148.283, -7.41373, 0.81", "-52.0953, -151.301, -7.67078, 0.81", "-53.9572, -155.463, -8.09327, 0.81", "-56.3002, -160.946, -8.69354, 0.81", "-57.5201, -163.944, -9.05678, 0.81", "-60.0979, -170.459, -9.85889, 0.81", "-61.2315, -173.522, -10.2521, 1.08", "-62.6113, -177.644, -10.7782, 1.08", "-63.5863, -180.687, -11.0888, 1.08", "-64.4383, -183.633, -11.2302, 0.27", "-65.8988, -187.915, -11.2276, 0.27", "-66.6329, -189.682, -11.0835, 0.27", "-67.7934, -192.406, -10.717, 0.54", "-68.7937, -195.176, -10.2842, 0.54", "-70.1357, -199.451, -9.6107, 0.54", "-70.3047, -199.951, -9.53501, 0.54", "-71.1768, -203.081, -9.06388, 0.54", "-72.2118, -207.838, -8.59925, 0.54", "-73.1003, -213.123, -8.31417, 0.54", "-74.1453, -219.756, -8.33155, 0.54", "-74.6162, -222.941, -8.44885, 0.54", "-75.2719, -227.411, -8.71462, 0.54", "-76.0775, -232.89, -9.15004, 0.54", "-76.9345, -238.28, -9.68081, 0.54", "-78.3847, -245.509, -10.5903, 0.54", "-78.6269, -246.7, -10.7527, 0.54", "-79.8835, -252.13, -11.4852, 0.54", "-80.7536, -255.43, -11.9118, 0.54", "-81.7289, -259.129, -12.2854, 0.54", "-82.8508, -264.019, -12.7677, 0.54", "-83.709, -268.146, -13.1314, 0.54", "-84.7225, -272.971, -13.5578, 0.54", "-85.6933, -277.374, -14.0851, 0.54", "-85.7023, -277.423, -14.0915, 0.54", "-86.034, -280.355, -14.4575, 0.54" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-134.213, 197.704, -9.46482, 0.81", "-136.444, 200.189, -9.20704, 0.81", "-138.427, 202.035, -9.05939, 0.81", "-140.688, 203.953, -8.85718, 0.81", "-143.507, 205.902, -8.62654, 0.81", "-146.263, 207.76, -8.19976, 0.81", "-146.306, 207.79, -8.18997, 0.81", "-149.45, 209.981, -7.3257, 0.81", "-152.315, 211.79, -6.46316, 0.81", "-155.456, 213.518, -5.46667, 0.81", "-159.865, 215.781, -3.90958, 0.81", "-163.354, 217.491, -2.67282, 0.81", "-170.251, 222.309, 0.393362, 0.81" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-134.213, 197.704, -9.46482, 0.27", "-135.897, 200.394, -8.07078, 0.27", "-138.287, 204.211, -6.09227, 0.27", "-139.532, 206.199, -5.06208, 0.27" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-31.3279, -29.6599, -18.4297, 0.54", "-31.3494, -33.6373, -18.9795, 0.54", "-31.5292, -37.3818, -19.3714, 0.54", "-31.9052, -40.964, -19.6894, 0.54", "-33.1469, -47.5675, -20.159, 0.54", "-34.7401, -53.8504, -20.6638, 0.54", "-37.2104, -61.8265, -21.5178, 0.54", "-37.3133, -62.1099, -21.554, 0.54", "-39.2741, -67.0056, -22.207, 0.54", "-42.6525, -74.9525, -23.2621, 0.54", "-45.2106, -80.1991, -23.829, 0.54", "-47.8021, -85.0781, -24.6767, 0.54", "-49.7497, -88.5718, -25.5544, 0.54" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-31.3279, -29.6599, -18.4297, 0.54", "-37.8141, -32.854, -21.7731, 0.54", "-42.6994, -35.1644, -23.7872, 0.81", "-46.0244, -36.7899, -24.9066, 0.81", "-57.8468, -42.8981, -28.3889, 0.81", "-64.5298, -46.4169, -29.9781, 0.81", "-70.4375, -49.6738, -31.289, 0.81", "-78.7979, -54.2721, -32.6784, 0.81", "-83.9021, -57.2147, -33.2468, 0.81", "-89.7674, -60.8075, -33.7286, 0.81", "-96.8988, -65.4407, -34.0504, 0.81", "-106.532, -72.0141, -34.6006, 0.81", "-106.585, -72.0507, -34.6034, 0.81", "-115.871, -78.6255, -35.2296, 0.81", "-116.107, -78.7885, -35.2511, 0.81", "-126.742, -86.0157, -36.1795, 0.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "249.466, 38.6392, 106.122, 0.27", "256.097, 40.4404, 112.382, 0.27", "262.607, 42.0402, 118.829, 0.27" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "249.466, 38.6392, 106.122, 0.27", "258.168, 40.2513, 114.503, 0.27", "267.471, 39.9564, 122.415, 0.27" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-86.034, -280.355, -14.4575, 0.54", "-86.4563, -284.986, -14.819, 0.54", "-86.9529, -290.068, -15.2416, 0.54", "-86.974, -290.346, -15.2609, 0.54", "-87.5117, -295.626, -15.3674, 0.54", "-87.9565, -298.993, -15.3206, 0.54", "-87.988, -299.188, -15.3099, 0.54", "-89.3135, -305.523, -14.6623, 0.54", "-90.3513, -310.137, -14.0072, 0.54", "-91.5005, -315.006, -13.2285, 0.54", "-93.1615, -321.228, -11.9042, 0.54", "-94.4986, -325.428, -10.8359, 0.54", "-96.0331, -329.612, -9.63697, 0.54", "-97.4403, -332.766, -8.57463, 0.54", "-99.5109, -336.562, -7.14469, 0.54", "-101.959, -340.298, -5.64054, 0.54", "-103.615, -342.171, -4.76527, 0.54", "-105.084, -343.439, -4.15726, 0.54", "-106.233, -344.192, -3.78113, 0.54", "-108.588, -345.441, -3.19004, 0.54", "-111.054, -346.566, -2.71892, 0.54", "-113.329, -347.658, -2.38378, 0.54", "-115.206, -348.705, -2.04705, 0.54", "-117.654, -350.187, -1.53452, 0.54", "-118.976, -351.116, -1.2809, 0.54", "-120.23, -352.135, -1.07705, 0.54", "-122.986, -354.685, -0.521763, 0.54", "-125.391, -357.2, 0.11008, 0.54", "-127.693, -359.97, 0.944669, 0.54", "-129.623, -362.67, 1.81374, 0.54", "-131.573, -365.979, 2.9061, 0.54", "-133.012, -369.047, 3.96867, 0.54", "-133.933, -371.431, 4.81223, 0.54", "-134.802, -374.563, 6.09415, 0.54", "-134.951, -376.088, 6.83231, 0.54", "-134.667, -379.048, 8.85161, 0.54", "-134.554, -379.244, 9.0169, 0.54" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-86.034, -280.355, -14.4575, 0.54", "-88.454, -282.639, -12.33, 0.54", "-89.8938, -283.998, -11.0642, 0.54" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_20", "dend_13", "dend_6", "dend_3", "dend_0", "dend_25", "dend_24", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "dend_29", "dend_26", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_28", "dend_27", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_20", "dend_13", "dend_6", "dend_3", "dend_0", "dend_25", "dend_24", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "dend_29", "dend_26", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_28", "dend_27", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "axon_1", "axon_1", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_28", "dend_28", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_LBC_3daa582d70_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_20, dend_13, dend_6, dend_3, dend_0, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_28, dend_27, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_20, dend_13, dend_6, dend_3, dend_0, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_28, dend_27, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, axon_1, axon_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_28, dend_28, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.49999957196365796)
    connect dend_20(0), soma_0(0.49999957196365796)
    connect dend_13(0), soma_0(0.49999957196365796)
    connect dend_6(0), soma_0(0.49999957196365796)
    connect dend_3(0), soma_0(0.49999957196365796)
    connect dend_0(0), soma_0(0.49999957196365796)
    connect axon_0(0), soma_0(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.47353, -9.82937, -0.0150783, 3.11345 ) }
    soma_0 { pt3dadd( -4.06901, -8.79368, -0.0135938, 5.39642 ) }
    soma_0 { pt3dadd( -3.66449, -7.75799, -0.0121094, 6.72082 ) }
    soma_0 { pt3dadd( -3.25998, -6.72231, -0.0106249, 7.70122 ) }
    soma_0 { pt3dadd( -2.85546, -5.68662, -0.00914047, 8.43968 ) }
    soma_0 { pt3dadd( -2.45095, -4.65093, -0.00765602, 9.25919 ) }
    soma_0 { pt3dadd( -2.04643, -3.61524, -0.00617157, 10.0787 ) }
    soma_0 { pt3dadd( -1.64192, -2.57956, -0.00468712, 10.8982 ) }
    soma_0 { pt3dadd( -1.2374, -1.54387, -0.00320267, 11.7151 ) }
    soma_0 { pt3dadd( -0.832884, -0.508183, -0.00171822, 12.3073 ) }
    soma_0 { pt3dadd( -0.428368, 0.527504, -2.33766E-4, 12.0741 ) }
    soma_0 { pt3dadd( -0.023852, 1.56319, 0.00125068, 11.8342 ) }
    soma_0 { pt3dadd( 0.380664, 2.59888, 0.00273513, 11.5616 ) }
    soma_0 { pt3dadd( 0.78518, 3.63457, 0.00421958, 11.0624 ) }
    soma_0 { pt3dadd( 1.1897, 4.67025, 0.00570403, 10.5822 ) }
    soma_0 { pt3dadd( 1.59421, 5.70594, 0.00718848, 10.0942 ) }
    soma_0 { pt3dadd( 1.99873, 6.74163, 0.00867293, 9.27653 ) }
    soma_0 { pt3dadd( 2.40324, 7.77731, 0.0101574, 7.88308 ) }
    soma_0 { pt3dadd( 2.80776, 8.813, 0.0116418, 6.37032 ) }
    soma_0 { pt3dadd( 3.21227, 9.84869, 0.0131263, 4.97817 ) }
    soma_0 { pt3dadd( 3.61679, 10.8844, 0.0146107, 4.57234 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.0120471, -7.68767, 1.51098, 1.08 ) }
    dend_23 { pt3dadd( 2.96824, -12.7445, 1.06211, 1.08 ) }
    dend_23 { pt3dadd( 5.28682, -16.7107, 0.710051, 1.08 ) }
    dend_23 { pt3dadd( 6.88266, -19.4405, 0.467737, 1.08 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 25/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.41795, -8.40967, -0.0190242, 1.08 ) }
    dend_20 { pt3dadd( -3.75983, -9.04264, -0.0283024, 1.08 ) }
    dend_20 { pt3dadd( 0.309605, -12.5545, -0.10072, 1.08 ) }
    dend_20 { pt3dadd( 2.03092, -14.1498, -0.131404, 1.08 ) }
    dend_20 { pt3dadd( 4.79754, -16.7369, -0.178043, 1.08 ) }
    dend_20 { pt3dadd( 9.55396, -21.388, -0.255071, 1.08 ) }
    dend_20 { pt3dadd( 13.0608, -24.9037, -0.307729, 1.08 ) }
    dend_20 { pt3dadd( 13.2486, -25.1116, -0.310668, 1.08 ) }
    dend_20 { pt3dadd( 18.9705, -32.6142, -0.457381, 1.08 ) }
    dend_20 { pt3dadd( 20.6614, -35.2304, -0.565439, 1.08 ) }
    dend_20 { pt3dadd( 22.036, -37.8172, -0.72095, 1.08 ) }
    dend_20 { pt3dadd( 23.449, -42.0093, -1.02447, 1.08 ) }
    dend_20 { pt3dadd( 24.5988, -47.6361, -1.4556, 1.08 ) }
    dend_20 { pt3dadd( 25.1498, -52.5812, -1.86282, 1.08 ) }
    dend_20 { pt3dadd( 25.0957, -54.4848, -2.03021, 1.08 ) }
    dend_20 { pt3dadd( 24.9809, -56.8824, -2.21845, 1.08 ) }
    dend_20 { pt3dadd( 24.7498, -62.8563, -2.64223, 1.08 ) }
    dend_20 { pt3dadd( 24.8187, -66.4388, -2.85808, 1.08 ) }
    dend_20 { pt3dadd( 25.2091, -69.5855, -3.15521, 1.08 ) }
    dend_20 { pt3dadd( 25.8825, -73.7242, -3.7003, 1.08 ) }
    dend_20 { pt3dadd( 27.0049, -79.3091, -4.55425, 1.08 ) }
    dend_20 { pt3dadd( 27.1229, -79.9259, -4.66833, 1.08 ) }
    dend_20 { pt3dadd( 27.9958, -83.9789, -5.5439, 1.08 ) }
    dend_20 { pt3dadd( 29.4053, -89.094, -6.70515, 1.08 ) }
    dend_20 { pt3dadd( 30.5399, -93.0448, -7.54144, 1.08 ) }
    dend_20 { pt3dadd( 32.5445, -99.211, -8.93988, 1.08 ) }
    dend_20 { pt3dadd( 33.5052, -102.234, -9.62289, 1.08 ) }
    dend_20 { pt3dadd( 33.9923, -103.93, -9.97564, 1.08 ) }
    dend_20 { pt3dadd( 35.0726, -108.226, -10.8275, 1.08 ) }
    dend_20 { pt3dadd( 36.964, -114.711, -11.9092, 1.08 ) }
    dend_20 { pt3dadd( 38.3272, -119.559, -12.7701, 0.81 ) }
    dend_20 { pt3dadd( 38.8584, -121.249, -13.0881, 0.81 ) }
    dend_20 { pt3dadd( 39.8238, -124.362, -13.8137, 0.81 ) }
    dend_20 { pt3dadd( 40.8004, -127.609, -14.6294, 0.81 ) }
    dend_20 { pt3dadd( 41.5887, -130.86, -15.4471, 0.81 ) }
    dend_20 { pt3dadd( 42.8013, -136.243, -16.7837, 0.81 ) }
    dend_20 { pt3dadd( 45.0509, -146.103, -19.289, 0.81 ) }
    dend_20 { pt3dadd( 46.3571, -150.679, -20.5329, 0.81 ) }
    dend_20 { pt3dadd( 47.7647, -155.007, -21.6734, 0.81 ) }
    dend_20 { pt3dadd( 49.4022, -159.607, -22.7801, 0.81 ) }
    dend_20 { pt3dadd( 49.508, -159.866, -22.8443, 0.81 ) }
    dend_20 { pt3dadd( 51.9567, -164.914, -24.1144, 0.81 ) }
    dend_20 { pt3dadd( 53.3646, -167.805, -24.7598, 0.81 ) }
    dend_20 { pt3dadd( 57.4718, -174.948, -26.0435, 0.81 ) }
    dend_20 { pt3dadd( 60.3956, -179.568, -26.8889, 0.81 ) }
    dend_20 { pt3dadd( 62.3399, -182.443, -27.4536, 0.81 ) }
    dend_20 { pt3dadd( 62.4919, -182.685, -27.4992, 0.81 ) }
    dend_20 { pt3dadd( 64.1483, -185.785, -27.9987, 0.81 ) }
    dend_20 { pt3dadd( 67.6706, -193.209, -29.3798, 0.81 ) }
    dend_20 { pt3dadd( 67.6896, -193.257, -29.3888, 0.81 ) }
    dend_20 { pt3dadd( 68.2319, -195.92, -29.7847, 0.81 ) }
    dend_20 { pt3dadd( 68.4959, -197.802, -29.9882, 0.81 ) }
    dend_20 { pt3dadd( 69.0409, -202.297, -30.4033, 0.81 ) }
    dend_20 { pt3dadd( 69.2229, -203.58, -30.5082, 0.81 ) }
    dend_20 { pt3dadd( 70.1381, -211.297, -31.1842, 0.81 ) }
    dend_20 { pt3dadd( 70.6817, -215.174, -31.713, 0.81 ) }
    dend_20 { pt3dadd( 71.4107, -219.549, -32.442, 0.81 ) }
    dend_20 { pt3dadd( 72.4729, -225.941, -34.0218, 0.81 ) }
    dend_20 { pt3dadd( 73.174, -229.798, -35.2541, 0.81 ) }
    dend_20 { pt3dadd( 73.9613, -233.979, -36.9105, 0.81 ) }
    dend_20 { pt3dadd( 74.9821, -239.224, -39.4219, 0.81 ) }
    dend_20 { pt3dadd( 74.9935, -239.279, -39.452, 0.81 ) }
    dend_20 { pt3dadd( 75.8375, -244.957, -43.0138, 0.81 ) }
    dend_20 { pt3dadd( 76.1438, -247.926, -45.1756, 0.81 ) }
    dend_20 { pt3dadd( 76.2119, -250.557, -47.1551, 0.27 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 90/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.04795, -7.43117, 1.45098, 1.08 ) }
    dend_13 { pt3dadd( -6.19043, -10.458, 0.334334, 1.08 ) }
    dend_13 { pt3dadd( -6.38756, -14.646, -1.21065, 1.35 ) }
    dend_13 { pt3dadd( -6.70638, -21.4191, -3.70933, 1.35 ) }
    dend_13 { pt3dadd( -6.82982, -24.0415, -4.67675, 1.35 ) }
    dend_13 { pt3dadd( -6.83999, -24.2577, -4.7565, 1.35 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -2.31794, 6.75233, 2.93098, 1.89 ) }
    dend_6 { pt3dadd( -4.4398, 7.78514, 2.93098, 1.89 ) }
    dend_6 { pt3dadd( -7.35045, 9.2019, 2.93098, 1.89 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.377952, 8.23434, 1.46098, 1.41 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( -3.07607, 9.29806, 2.33293, 1.41 ) }
    dend_3 { pt3dadd( -5.8549, 10.3936, 3.23096, 1.23 ) }
    dend_3 { pt3dadd( -8.62458, 11.4855, 4.12604, 1.23 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 3/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.75205, 10.7233, -2.91902, 1.11 ) }
    dend_0 { pt3dadd( 4.85002, 12.5028, -3.02032, 1.11 ) }
    dend_0 { pt3dadd( 5.73236, 17.2681, -3.39427, 1.11 ) }
    dend_0 { pt3dadd( 7.13409, 21.8625, -3.77662, 1.11 ) }
    dend_0 { pt3dadd( 8.38389, 24.4636, -3.97858, 1.11 ) }
    dend_0 { pt3dadd( 10.9794, 29.0439, -4.56931, 1.11 ) }
    dend_0 { pt3dadd( 13.988, 34.2757, -5.46689, 1.11 ) }
    dend_0 { pt3dadd( 15.7963, 37.0546, -6.03125, 1.11 ) }
    dend_0 { pt3dadd( 19.4801, 42.0633, -7.26942, 1.67 ) }
    dend_0 { pt3dadd( 25.0526, 49.4538, -9.34999, 1.11 ) }
    dend_0 { pt3dadd( 27.4048, 52.5657, -10.246, 1.11 ) }
    dend_0 { pt3dadd( 29.5932, 55.5656, -11.1585, 1.11 ) }
    dend_0 { pt3dadd( 31.8882, 58.9878, -12.1926, 1.11 ) }
    dend_0 { pt3dadd( 35.2281, 64.1003, -13.5988, 1.11 ) }
    dend_0 { pt3dadd( 38.224, 68.7334, -15.0113, 1.11 ) }
    dend_0 { pt3dadd( 40.61, 72.5414, -16.175, 1.11 ) }
    dend_0 { pt3dadd( 43.5237, 76.9916, -17.436, 1.11 ) }
    dend_0 { pt3dadd( 44.5965, 78.6191, -17.892, 1.11 ) }
    dend_0 { pt3dadd( 48.7102, 84.9691, -19.7405, 1.11 ) }
    dend_0 { pt3dadd( 51.5238, 89.3185, -20.9562, 1.11 ) }
    dend_0 { pt3dadd( 52.2594, 90.4803, -21.2807, 1.11 ) }
    dend_0 { pt3dadd( 53.6669, 92.9353, -21.9374, 1.11 ) }
    dend_0 { pt3dadd( 56.4474, 97.9798, -23.316, 1.11 ) }
    dend_0 { pt3dadd( 59.6237, 103.91, -24.9456, 1.11 ) }
    dend_0 { pt3dadd( 61.6693, 108.009, -26.0933, 1.11 ) }
    dend_0 { pt3dadd( 63.9166, 112.201, -27.2172, 1.11 ) }
    dend_0 { pt3dadd( 65.9655, 115.875, -28.3004, 1.11 ) }
    dend_0 { pt3dadd( 67.7392, 119.159, -29.3784, 1.06 ) }
    dend_0 { pt3dadd( 68.7209, 120.996, -30.1055, 0.53 ) }
    dend_0 { pt3dadd( 69.4686, 122.773, -30.8735, 0.35 ) }
    dend_0 { pt3dadd( 70.4542, 125.719, -32.3307, 0.35 ) }
    dend_0 { pt3dadd( 70.5118, 125.939, -32.4509, 0.35 ) }
    dend_0 { pt3dadd( 71.2175, 130.283, -34.714, 0.35 ) }
    dend_0 { pt3dadd( 71.3666, 131.669, -35.4619, 0.35 ) }
    dend_0 { pt3dadd( 71.5997, 133.978, -36.7974, 0.35 ) }
    dend_0 { pt3dadd( 71.9465, 137.1, -38.5863, 0.35 ) }
    dend_0 { pt3dadd( 72.217, 139.098, -39.7484, 0.35 ) }
    dend_0 { pt3dadd( 72.7557, 141.679, -41.3016, 0.35 ) }
    dend_0 { pt3dadd( 73.6174, 144.492, -43.0097, 0.35 ) }
    dend_0 { pt3dadd( 74.0427, 145.826, -43.7745, 0.35 ) }
    dend_0 { pt3dadd( 74.5631, 147.456, -44.6819, 0.35 ) }
    dend_0 { pt3dadd( 75.2128, 149.756, -45.8879, 0.35 ) }
    dend_0 { pt3dadd( 75.71, 151.671, -46.8527, 0.35 ) }
    dend_0 { pt3dadd( 76.1068, 153.094, -47.5836, 0.35 ) }
    dend_0 { pt3dadd( 76.3314, 154.068, -47.9999, 1.23 ) }
    dend_0 { pt3dadd( 76.3961, 154.379, -48.1544, 1.23 ) }
    dend_0 { pt3dadd( 76.763, 156.296, -49.2547, 0.18 ) }
    dend_0 { pt3dadd( 77.1231, 157.659, -50.1855, 0.18 ) }
    dend_0 { pt3dadd( 77.5077, 158.673, -50.9249, 0.18 ) }
    dend_0 { pt3dadd( 78.0901, 160.008, -51.9961, 1.23 ) }
    dend_0 { pt3dadd( 78.7222, 161.159, -52.8698, 0.18 ) }
    dend_0 { pt3dadd( 78.965, 161.552, -53.1099, 0.18 ) }
    dend_0 { pt3dadd( 80.735, 163.807, -54.1958, 0.18 ) }
    dend_0 { pt3dadd( 81.2005, 164.344, -54.4415, 0.88 ) }
    dend_0 { pt3dadd( 81.5089, 164.665, -54.5848, 0.18 ) }
    dend_0 { pt3dadd( 83.2886, 166.394, -55.2719, 0.18 ) }
    dend_0 { pt3dadd( 84.9284, 168.019, -55.731, 0.18 ) }
    dend_0 { pt3dadd( 87.3972, 170.412, -56.2248, 1.06 ) }
    dend_0 { pt3dadd( 87.6604, 170.655, -56.248, 1.06 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 62/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.61679, 10.8844, 0.0146107, 0.81 ) }
    axon_0 { pt3dadd( 9.07397, 24.8565, 0.0146107, 0.81 ) }
    axon_0 { pt3dadd( 14.5311, 38.8286, 0.0146107, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 65/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 6.88266, -19.4405, 0.467737, 1.08 ) }
    dend_25 { pt3dadd( 12.6394, -19.1504, 1.25343, 1.08 ) }
    dend_25 { pt3dadd( 23.6462, -17.5451, 3.4347, 1.08 ) }
    dend_25 { pt3dadd( 34.8439, -17.4797, 5.27275, 1.08 ) }
    dend_25 { pt3dadd( 46.1589, -18.1053, 5.82337, 1.08 ) }
    dend_25 { pt3dadd( 57.2116, -18.041, 8.39322, 1.08 ) }
    dend_25 { pt3dadd( 68.2017, -16.4404, 10.6601, 1.08 ) }
    dend_25 { pt3dadd( 78.6864, -13.549, 13.749, 1.08 ) }
    dend_25 { pt3dadd( 88.7545, -11.9584, 18.7043, 1.08 ) }
    dend_25 { pt3dadd( 97.8672, -8.70664, 24.5262, 1.08 ) }
    dend_25 { pt3dadd( 107.158, -4.76526, 29.5393, 1.08 ) }
    dend_25 { pt3dadd( 116.728, -0.559382, 33.7212, 1.08 ) }
    dend_25 { pt3dadd( 126.051, 4.25194, 37.7333, 1.08 ) }
    dend_25 { pt3dadd( 136.793, 7.00444, 39.9616, 1.08 ) }
    dend_25 { pt3dadd( 146.479, 11.1545, 43.9343, 1.08 ) }
    dend_25 { pt3dadd( 155.794, 16.4027, 47.3108, 1.08 ) }
    dend_25 { pt3dadd( 164.814, 22.5441, 49.6724, 1.08 ) }
    dend_25 { pt3dadd( 174.545, 26.8268, 53.37, 1.08 ) }
    dend_25 { pt3dadd( 184.283, 28.8648, 58.7792, 1.08 ) }
    dend_25 { pt3dadd( 194.717, 29.5683, 63.1776, 1.08 ) }
    dend_25 { pt3dadd( 204.324, 30.7333, 69.0883, 1.08 ) }
    dend_25 { pt3dadd( 214.905, 30.0727, 73.1293, 1.08 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 87/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.88266, -19.4405, 0.467737, 1.08 ) }
    dend_24 { pt3dadd( 9.04584, -23.6788, 0.410066, 1.08 ) }
    dend_24 { pt3dadd( 11.3526, -27.871, 0.222193, 1.08 ) }
    dend_24 { pt3dadd( 14.2301, -32.3089, -0.136495, 1.08 ) }
    dend_24 { pt3dadd( 16.7466, -35.9004, -0.498449, 1.08 ) }
    dend_24 { pt3dadd( 20.5204, -41.2864, -1.04125, 0.81 ) }
    dend_24 { pt3dadd( 21.8614, -43.2002, -1.23412, 0.81 ) }
    dend_24 { pt3dadd( 24.0123, -46.0496, -1.59757, 0.81 ) }
    dend_24 { pt3dadd( 27.0281, -49.8713, -2.31347, 0.81 ) }
    dend_24 { pt3dadd( 27.0684, -49.9104, -2.32548, 0.81 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 76.2119, -250.557, -47.1551, 0.27 ) }
    dend_22 { pt3dadd( 87.1124, -255.422, -46.0126, 0.27 ) }
    dend_22 { pt3dadd( 101.882, -262.012, -44.4644, 0.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 0/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 76.2119, -250.557, -47.1551, 0.27 ) }
    dend_21 { pt3dadd( 76.1914, -254.713, -50.9946, 0.27 ) }
    dend_21 { pt3dadd( 76.1532, -260.437, -56.4662, 0.27 ) }
    dend_21 { pt3dadd( 76.0908, -265.974, -61.6924, 0.27 ) }
    dend_21 { pt3dadd( 76.0422, -270.298, -65.7729, 0.27 ) }
    dend_21 { pt3dadd( 75.9791, -275.89, -71.0502, 0.27 ) }
    dend_21 { pt3dadd( 75.8661, -285.938, -80.5329, 0.27 ) }
    dend_21 { pt3dadd( 75.8567, -286.16, -80.7554, 0.27 ) }
    dend_21 { pt3dadd( 75.841, -287.976, -82.5242, 0.27 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.83999, -24.2577, -4.7565, 1.08 ) }
    dend_15 { pt3dadd( -8.31644, -25.9747, -4.52553, 1.08 ) }
    dend_15 { pt3dadd( -10.2941, -28.2747, -4.21614, 1.08 ) }
    dend_15 { pt3dadd( -12.3395, -30.6533, -3.89618, 1.08 ) }
    dend_15 { pt3dadd( -15.387, -34.1974, -3.41944, 1.08 ) }
    dend_15 { pt3dadd( -16.9189, -35.9789, -3.1798, 1.08 ) }
    dend_15 { pt3dadd( -18.6344, -37.9739, -2.91143, 1.08 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 16/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -6.83999, -24.2577, -4.7565, 0.27 ) }
    dend_14 { pt3dadd( -9.36577, -29.7528, -5.57717, 0.27 ) }
    dend_14 { pt3dadd( -10.1388, -34.4439, -6.15208, 0.54 ) }
    dend_14 { pt3dadd( -10.1953, -35.5199, -6.21412, 1.08 ) }
    dend_14 { pt3dadd( -10.203, -35.901, -6.22863, 1.08 ) }
    dend_14 { pt3dadd( -10.4064, -41.6953, -6.49479, 1.08 ) }
    dend_14 { pt3dadd( -10.5371, -44.3729, -6.62375, 1.08 ) }
    dend_14 { pt3dadd( -10.8495, -53.2447, -7.02528, 1.08 ) }
    dend_14 { pt3dadd( -11.1461, -61.5293, -7.59788, 1.08 ) }
    dend_14 { pt3dadd( -11.1531, -61.9093, -7.63146, 1.08 ) }
    dend_14 { pt3dadd( -10.9715, -68.9097, -8.39609, 1.08 ) }
    dend_14 { pt3dadd( -10.6205, -72.7379, -8.91736, 1.08 ) }
    dend_14 { pt3dadd( -10.4808, -75.5907, -9.32128, 1.08 ) }
    dend_14 { pt3dadd( -10.534, -78.3025, -9.7165, 1.08 ) }
    dend_14 { pt3dadd( -10.3191, -82.0065, -10.2374, 1.08 ) }
    dend_14 { pt3dadd( -9.92635, -86.4116, -10.7404, 1.08 ) }
    dend_14 { pt3dadd( -9.73645, -89.4618, -10.9555, 1.08 ) }
    dend_14 { pt3dadd( -9.57911, -99.5118, -11.496, 1.08 ) }
    dend_14 { pt3dadd( -9.6364, -101.437, -11.647, 1.08 ) }
    dend_14 { pt3dadd( -9.77365, -109.819, -12.5727, 1.08 ) }
    dend_14 { pt3dadd( -9.80115, -110.664, -12.6825, 1.08 ) }
    dend_14 { pt3dadd( -10.0903, -119.917, -14.0584, 1.08 ) }
    dend_14 { pt3dadd( -10.1617, -125.608, -15.0068, 1.08 ) }
    dend_14 { pt3dadd( -9.76565, -131.432, -16.0715, 1.08 ) }
    dend_14 { pt3dadd( -9.6373, -140.243, -17.8186, 1.08 ) }
    dend_14 { pt3dadd( -9.64015, -140.603, -17.8972, 1.08 ) }
    dend_14 { pt3dadd( -9.63053, -142.125, -18.2462, 1.08 ) }
    dend_14 { pt3dadd( -9.51091, -147.432, -19.5266, 1.08 ) }
    dend_14 { pt3dadd( -9.26354, -159.456, -22.248, 1.08 ) }
    dend_14 { pt3dadd( -9.40773, -168.791, -23.9789, 1.08 ) }
    dend_14 { pt3dadd( -9.64137, -176.233, -25.1465, 1.08 ) }
    dend_14 { pt3dadd( -9.77945, -181.768, -25.8508, 1.08 ) }
    dend_14 { pt3dadd( -9.77945, -181.852, -25.8585, 1.08 ) }
    dend_14 { pt3dadd( -9.67554, -188.706, -26.2077, 1.08 ) }
    dend_14 { pt3dadd( -9.10159, -197.94, -26.2567, 1.08 ) }
    dend_14 { pt3dadd( -8.36966, -205.428, -26.0581, 1.08 ) }
    dend_14 { pt3dadd( -7.86082, -211.783, -25.7343, 0.81 ) }
    dend_14 { pt3dadd( -7.30962, -218.423, -25.4586, 0.81 ) }
    dend_14 { pt3dadd( -6.94602, -223.189, -25.3347, 0.81 ) }
    dend_14 { pt3dadd( -5.5393, -236.741, -25.5271, 0.81 ) }
    dend_14 { pt3dadd( -4.54444, -244.369, -25.9169, 0.81 ) }
    dend_14 { pt3dadd( -4.20152, -246.993, -26.1223, 0.81 ) }
    dend_14 { pt3dadd( -3.25396, -254.804, -26.6776, 0.81 ) }
    dend_14 { pt3dadd( -2.7289, -260.074, -26.9282, 0.81 ) }
    dend_14 { pt3dadd( -1.6914, -275.547, -27.1605, 0.81 ) }
    dend_14 { pt3dadd( -1.7283, -279.896, -27.1975, 0.81 ) }
    dend_14 { pt3dadd( -1.74398, -280.278, -27.1997, 0.81 ) }
    dend_14 { pt3dadd( -2.47804, -288.691, -27.2106, 0.81 ) }
    dend_14 { pt3dadd( -3.39675, -295.117, -27.0911, 0.81 ) }
    dend_14 { pt3dadd( -4.98274, -302.285, -26.9408, 0.81 ) }
    dend_14 { pt3dadd( -7.31919, -310.444, -26.5709, 0.81 ) }
    dend_14 { pt3dadd( -8.16441, -313.413, -26.46, 0.81 ) }
    dend_14 { pt3dadd( -9.91285, -320.047, -26.2831, 0.81 ) }
    dend_14 { pt3dadd( -11.2567, -325.277, -26.2324, 0.81 ) }
    dend_14 { pt3dadd( -13.1568, -332.371, -26.2527, 0.81 ) }
    dend_14 { pt3dadd( -15.5297, -342.52, -26.1949, 0.81 ) }
    dend_14 { pt3dadd( -17.2669, -350.357, -26.043, 0.81 ) }
    dend_14 { pt3dadd( -18.7169, -357.123, -26.0123, 0.81 ) }
    dend_14 { pt3dadd( -20.6292, -365.966, -25.9697, 0.81 ) }
    dend_14 { pt3dadd( -21.5247, -370.395, -25.972, 0.81 ) }
    dend_14 { pt3dadd( -22.4173, -375.437, -26.0463, 0.81 ) }
    dend_14 { pt3dadd( -23.6072, -382.144, -26.3033, 0.81 ) }
    dend_14 { pt3dadd( -24.1941, -389.14, -26.5049, 0.81 ) }
    dend_14 { pt3dadd( -24.1589, -391.751, -26.546, 0.81 ) }
    dend_14 { pt3dadd( -24.1116, -392.288, -26.5428, 1.08 ) }
    dend_14 { pt3dadd( -24.0585, -392.825, -26.5175, 1.08 ) }
    dend_14 { pt3dadd( -23.2355, -399.632, -26.1926, 0.54 ) }
    dend_14 { pt3dadd( -21.6724, -409.664, -25.7846, 0.54 ) }
    dend_14 { pt3dadd( -20.8499, -415.054, -25.6345, 0.54 ) }
    dend_14 { pt3dadd( -20.0556, -420.634, -25.5607, 0.54 ) }
    dend_14 { pt3dadd( -19.663, -424.296, -25.4997, 0.54 ) }
    dend_14 { pt3dadd( -19.3164, -429.571, -25.3678, 0.54 ) }
    dend_14 { pt3dadd( -19.2834, -432.979, -25.1839, 0.54 ) }
    dend_14 { pt3dadd( -19.5386, -440.566, -24.5805, 0.54 ) }
    dend_14 { pt3dadd( -19.7683, -444.165, -24.2414, 0.54 ) }
    dend_14 { pt3dadd( -20.0161, -448.48, -23.8297, 0.54 ) }
    dend_14 { pt3dadd( -20.3989, -451.408, -23.5622, 0.54 ) }
    dend_14 { pt3dadd( -21.4407, -457.837, -22.9676, 0.54 ) }
    dend_14 { pt3dadd( -21.4567, -457.934, -22.9579, 0.54 ) }
    dend_14 { pt3dadd( -21.7287, -459.476, -22.7692, 0.54 ) }
    dend_14 { pt3dadd( -22.512, -464.733, -22.1335, 0.54 ) }
    dend_14 { pt3dadd( -23.3074, -471.382, -21.3599, 0.54 ) }
    dend_14 { pt3dadd( -24.4923, -480.781, -20.3633, 0.54 ) }
    dend_14 { pt3dadd( -25.3919, -489.194, -19.615, 0.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_14 { pt3dadd( -25.8653, -493.864, -19.1891, 0.54 ) }
    dend_14 { pt3dadd( -26.498, -500.399, -18.7959, 0.54 ) }
    dend_14 { pt3dadd( -26.5933, -501.54, -18.7612, 0.54 ) }
    dend_14 { pt3dadd( -26.9915, -508.003, -18.7502, 0.54 ) }
    dend_14 { pt3dadd( -27.8103, -515.667, -19.1134, 0.54 ) }
    dend_14 { pt3dadd( -28.7113, -524.392, -19.8828, 0.54 ) }
    dend_14 { pt3dadd( -29.4487, -530.898, -20.6618, 0.54 ) }
    dend_14 { pt3dadd( -30.2611, -537.076, -21.4981, 0.54 ) }
    dend_14 { pt3dadd( -30.4017, -538.201, -21.6657, 0.54 ) }
    dend_14 { pt3dadd( -31.1761, -545.157, -23.0053, 0.54 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.35045, 9.2019, 2.93098, 0.81 ) }
    dend_10 { pt3dadd( -8.04737, 11.1156, 3.29875, 0.81 ) }
    dend_10 { pt3dadd( -9.62025, 15.3426, 4.0969, 1.08 ) }
    dend_10 { pt3dadd( -13.0164, 21.1937, 5.05564, 1.08 ) }
    dend_10 { pt3dadd( -13.9014, 22.4876, 5.23104, 1.08 ) }
    dend_10 { pt3dadd( -16.4583, 26.5041, 5.67591, 1.08 ) }
    dend_10 { pt3dadd( -16.4949, 26.5625, 5.68117, 1.08 ) }
    dend_10 { pt3dadd( -19.2213, 30.5869, 5.88827, 1.08 ) }
    dend_10 { pt3dadd( -23.3113, 36.7408, 6.03431, 1.08 ) }
    dend_10 { pt3dadd( -24.9784, 39.6564, 5.95031, 1.08 ) }
    dend_10 { pt3dadd( -28.4447, 46.2229, 5.50373, 1.08 ) }
    dend_10 { pt3dadd( -31.7119, 52.7036, 4.79693, 1.08 ) }
    dend_10 { pt3dadd( -33.5697, 56.3657, 4.32468, 1.08 ) }
    dend_10 { pt3dadd( -36.1933, 61.6092, 3.55114, 1.08 ) }
    dend_10 { pt3dadd( -38.1947, 65.6307, 2.88243, 1.08 ) }
    dend_10 { pt3dadd( -38.4331, 65.9946, 2.80985, 1.08 ) }
    dend_10 { pt3dadd( -39.3678, 67.0151, 2.56335, 1.08 ) }
    dend_10 { pt3dadd( -44.429, 71.7102, 1.44376, 1.08 ) }
    dend_10 { pt3dadd( -48.4722, 74.9776, 0.698907, 1.08 ) }
    dend_10 { pt3dadd( -52.6108, 77.7701, 0.044844, 1.08 ) }
    dend_10 { pt3dadd( -56.3271, 80.1154, -0.434723, 1.08 ) }
    dend_10 { pt3dadd( -58.6056, 81.5327, -0.73814, 1.08 ) }
    dend_10 { pt3dadd( -60.6235, 83.0574, -1.00665, 1.08 ) }
    dend_10 { pt3dadd( -63.9177, 85.9896, -1.40612, 1.08 ) }
    dend_10 { pt3dadd( -66.624, 88.8867, -1.66567, 1.08 ) }
    dend_10 { pt3dadd( -66.8214, 89.1144, -1.68534, 1.08 ) }
    dend_10 { pt3dadd( -70.3953, 93.7551, -2.04119, 1.08 ) }
    dend_10 { pt3dadd( -75.3645, 100.933, -2.76642, 1.08 ) }
    dend_10 { pt3dadd( -79.4753, 107.047, -3.4461, 1.08 ) }
    dend_10 { pt3dadd( -83.1293, 112.77, -4.24313, 1.08 ) }
    dend_10 { pt3dadd( -86.8619, 119.136, -5.13975, 1.08 ) }
    dend_10 { pt3dadd( -90.7938, 126.297, -6.11483, 1.08 ) }
    dend_10 { pt3dadd( -94.2721, 133.369, -7.13707, 1.08 ) }
    dend_10 { pt3dadd( -97.0406, 139.103, -8.12059, 1.08 ) }
    dend_10 { pt3dadd( -98.4727, 142.521, -8.71521, 1.08 ) }
    dend_10 { pt3dadd( -101.063, 148.608, -9.71402, 1.08 ) }
    dend_10 { pt3dadd( -103.485, 155.054, -10.4939, 1.08 ) }
    dend_10 { pt3dadd( -105.863, 160.798, -10.9959, 0.81 ) }
    dend_10 { pt3dadd( -107.833, 164.808, -11.1299, 0.81 ) }
    dend_10 { pt3dadd( -110.399, 169.654, -11.1615, 0.81 ) }
    dend_10 { pt3dadd( -112.649, 173.196, -11.0834, 0.81 ) }
    dend_10 { pt3dadd( -114.631, 175.881, -11.0411, 0.54 ) }
    dend_10 { pt3dadd( -119.296, 181.579, -10.7755, 0.54 ) }
    dend_10 { pt3dadd( -124.257, 187.09, -10.2364, 1.08 ) }
    dend_10 { pt3dadd( -125.13, 188.037, -10.1121, 1.08 ) }
    dend_10 { pt3dadd( -127.954, 190.956, -9.80186, 1.08 ) }
    dend_10 { pt3dadd( -134.213, 197.704, -9.46482, 1.08 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 57/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.35045, 9.2019, 2.93098, 1.08 ) }
    dend_7 { pt3dadd( -12.4854, 2.01671, -0.927041, 1.08 ) }
    dend_7 { pt3dadd( -15.5444, -2.25399, -3.10118, 0.81 ) }
    dend_7 { pt3dadd( -19.4946, -8.29697, -6.43517, 1.08 ) }
    dend_7 { pt3dadd( -21.6438, -11.767, -8.3884, 1.08 ) }
    dend_7 { pt3dadd( -23.8333, -15.3021, -10.3783, 1.08 ) }
    dend_7 { pt3dadd( -27.0054, -20.4237, -13.2612, 1.08 ) }
    dend_7 { pt3dadd( -28.5068, -23.3115, -14.6926, 1.08 ) }
    dend_7 { pt3dadd( -30.9924, -28.9458, -17.9433, 0.54 ) }
    dend_7 { pt3dadd( -31.3279, -29.6599, -18.4297, 0.54 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 67/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -8.62458, 11.4855, 4.12604, 0.53 ) }
    dend_5 { pt3dadd( -9.65216, 11.4755, 4.41565, 0.53 ) }
    dend_5 { pt3dadd( -11.9585, 11.4529, 5.06568, 0.53 ) }
    dend_5 { pt3dadd( -12.2631, 11.4499, 5.15153, 0.53 ) }
    dend_5 { pt3dadd( -13.6548, 11.4363, 5.54377, 0.53 ) }
    dend_5 { pt3dadd( -15.3346, 11.4198, 6.01719, 0.53 ) }
    dend_5 { pt3dadd( -17.4635, 11.399, 6.6172, 0.53 ) }
    dend_5 { pt3dadd( -26.4149, 11.8734, 7.77004, 0.53 ) }
    dend_5 { pt3dadd( -34.8263, 14.0499, 10.144, 0.53 ) }
    dend_5 { pt3dadd( -43.0536, 16.8699, 12.4027, 0.53 ) }
    dend_5 { pt3dadd( -50.0619, 21.3093, 15.6826, 0.53 ) }
    dend_5 { pt3dadd( -57.6853, 24.9608, 18.6431, 0.53 ) }
    dend_5 { pt3dadd( -64.8608, 28.4966, 22.6971, 0.53 ) }
    dend_5 { pt3dadd( -72.1976, 30.7836, 27.4063, 0.53 ) }
    dend_5 { pt3dadd( -79.8043, 33.082, 31.6551, 0.53 ) }
    dend_5 { pt3dadd( -87.817, 34.5067, 35.5661, 0.53 ) }
    dend_5 { pt3dadd( -96.2202, 34.3999, 38.9055, 0.53 ) }
    dend_5 { pt3dadd( -104.252, 35.7686, 42.8, 0.53 ) }
    dend_5 { pt3dadd( -112.33, 37.3339, 46.5101, 0.53 ) }
    dend_5 { pt3dadd( -120.597, 39.3254, 49.5007, 0.53 ) }
    dend_5 { pt3dadd( -128.938, 39.7023, 52.9706, 0.53 ) }
    dend_5 { pt3dadd( -137.492, 39.2364, 55.8637, 0.53 ) }
    dend_5 { pt3dadd( -145.972, 40.2705, 58.802, 0.53 ) }
    dend_5 { pt3dadd( -154.297, 42.2481, 61.6359, 0.53 ) }
    dend_5 { pt3dadd( -162.297, 45.0228, 64.659, 0.53 ) }
    dend_5 { pt3dadd( -169.845, 47.6772, 68.7805, 0.53 ) }
    dend_5 { pt3dadd( -177.319, 49.5421, 73.4783, 0.53 ) }
    dend_5 { pt3dadd( -183.516, 51.3671, 79.7865, 0.53 ) }
    dend_5 { pt3dadd( -189.271, 51.5511, 86.7589, 0.53 ) }
    dend_5 { pt3dadd( -194.503, 50.6385, 94.0647, 0.53 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.62458, 11.4855, 4.12604, 0.53 ) }
    dend_4 { pt3dadd( -8.5141, 13.2169, 4.58869, 0.53 ) }
    dend_4 { pt3dadd( -8.49611, 13.4988, 4.66401, 0.53 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_4 { pt3dadd( -8.32777, 16.137, 5.36897, 0.53 ) }
    dend_4 { pt3dadd( -9.22678, 23.4912, 6.49599, 0.53 ) }
    dend_4 { pt3dadd( -9.54554, 30.9383, 7.16308, 0.53 ) }
    dend_4 { pt3dadd( -10.8553, 38.2057, 8.49272, 0.53 ) }
    dend_4 { pt3dadd( -11.5561, 45.2282, 11.1322, 0.53 ) }
    dend_4 { pt3dadd( -12.1928, 52.5905, 12.3802, 0.53 ) }
    dend_4 { pt3dadd( -12.5239, 60.0209, 13.2309, 0.53 ) }
    dend_4 { pt3dadd( -11.8426, 67.4339, 12.4644, 0.53 ) }
    dend_4 { pt3dadd( -11.056, 74.7238, 10.9178, 0.53 ) }
    dend_4 { pt3dadd( -10.3679, 81.8855, 8.78414, 0.53 ) }
    dend_4 { pt3dadd( -10.7495, 88.6687, 5.52365, 0.53 ) }
    dend_4 { pt3dadd( -10.5071, 95.6682, 2.79196, 0.53 ) }
    dend_4 { pt3dadd( -11.2152, 102.806, 0.588359, 0.53 ) }
    dend_4 { pt3dadd( -12.3884, 109.678, -2.24833, 0.53 ) }
    dend_4 { pt3dadd( -12.992, 116.386, -5.64269, 0.53 ) }
    dend_4 { pt3dadd( -15.0449, 123.201, -8.10966, 0.53 ) }
    dend_4 { pt3dadd( -18.6468, 129.212, -11.0569, 0.53 ) }
    dend_4 { pt3dadd( -21.7771, 135.236, -14.4757, 0.53 ) }
    dend_4 { pt3dadd( -24.2383, 141.065, -18.7151, 0.53 ) }
    dend_4 { pt3dadd( -25.3756, 147.012, -23.3199, 0.53 ) }
    dend_4 { pt3dadd( -27.5948, 153.397, -26.7275, 0.53 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 21/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 87.6604, 170.655, -56.248, 0.18 ) }
    dend_2 { pt3dadd( 88.1115, 171.005, -56.1156, 0.18 ) }
    dend_2 { pt3dadd( 89.4389, 172.091, -55.6913, 0.18 ) }
    dend_2 { pt3dadd( 91.7794, 174.198, -54.9327, 0.53 ) }
    dend_2 { pt3dadd( 94.5419, 176.626, -54.1888, 0.53 ) }
    dend_2 { pt3dadd( 96.9041, 178.778, -53.6449, 0.35 ) }
    dend_2 { pt3dadd( 99.2014, 180.781, -53.2948, 0.35 ) }
    dend_2 { pt3dadd( 99.5219, 181.061, -53.27, 0.35 ) }
    dend_2 { pt3dadd( 101.442, 182.763, -53.364, 0.35 ) }
    dend_2 { pt3dadd( 104.031, 184.919, -53.8176, 0.35 ) }
    dend_2 { pt3dadd( 106.259, 186.218, -54.7156, 0.35 ) }
    dend_2 { pt3dadd( 108.943, 187.299, -56.1133, 0.35 ) }
    dend_2 { pt3dadd( 109.109, 187.353, -56.2186, 0.35 ) }
    dend_2 { pt3dadd( 110.913, 187.823, -57.6207, 0.18 ) }
    dend_2 { pt3dadd( 113.156, 188.247, -59.4936, 0.18 ) }
    dend_2 { pt3dadd( 117.405, 188.876, -63.3605, 0.18 ) }
    dend_2 { pt3dadd( 117.479, 188.883, -63.4301, 0.18 ) }
    dend_2 { pt3dadd( 119.46, 189.121, -65.2769, 0.53 ) }
    dend_2 { pt3dadd( 122.822, 189.491, -68.4343, 0.53 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 87.6604, 170.655, -56.248, 0.18 ) }
    dend_1 { pt3dadd( 87.7108, 171.565, -56.5367, 0.18 ) }
    dend_1 { pt3dadd( 87.9981, 176.75, -58.1819, 0.18 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.5311, 38.8286, 0.0146107, 0.54 ) }
    axon_1 { pt3dadd( 19.9883, 52.8007, 0.0146107, 0.54 ) }
    axon_1 { pt3dadd( 25.4455, 66.7728, 0.0146107, 0.54 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 46/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 214.905, 30.0727, 73.1293, 0.18 ) }
    dend_29 { pt3dadd( 222.89, 32.3332, 72.7382, 0.18 ) }
    dend_29 { pt3dadd( 230.392, 35.7716, 73.1638, 0.18 ) }
    dend_29 { pt3dadd( 237.407, 39.5679, 75.2508, 0.18 ) }
    dend_29 { pt3dadd( 243.611, 43.7854, 78.6143, 0.18 ) }
    dend_29 { pt3dadd( 249.799, 46.9878, 83.0692, 0.18 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 52/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 214.905, 30.0727, 73.1293, 0.18 ) }
    dend_26 { pt3dadd( 220.808, 31.1915, 76.7914, 0.18 ) }
    dend_26 { pt3dadd( 226.388, 33.0752, 80.6025, 0.18 ) }
    dend_26 { pt3dadd( 231.005, 34.1691, 85.7942, 0.18 ) }
    dend_26 { pt3dadd( 235.468, 34.0495, 91.2485, 0.18 ) }
    dend_26 { pt3dadd( 239.727, 35.1093, 96.7442, 0.18 ) }
    dend_26 { pt3dadd( 245.011, 36.478, 101.171, 0.18 ) }
    dend_26 { pt3dadd( 249.466, 38.6392, 106.122, 0.18 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 60/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -18.6344, -37.9739, -2.91143, 1.08 ) }
    dend_19 { pt3dadd( -22.6044, -39.338, -1.8155, 1.08 ) }
    dend_19 { pt3dadd( -25.7345, -40.5086, -1.04694, 0.81 ) }
    dend_19 { pt3dadd( -29.0786, -41.8635, -0.204306, 0.81 ) }
    dend_19 { pt3dadd( -32.2176, -43.1352, 0.586646, 0.81 ) }
    dend_19 { pt3dadd( -35.8764, -44.6175, 1.5086, 0.81 ) }
    dend_19 { pt3dadd( -40.3447, -46.4278, 2.63451, 0.81 ) }
    dend_19 { pt3dadd( -42.0542, -47.1935, 2.98546, 0.81 ) }
    dend_19 { pt3dadd( -44.8082, -48.3255, 3.38883, 0.81 ) }
    dend_19 { pt3dadd( -53.8183, -54.0228, 5.90531, 0.81 ) }
    dend_19 { pt3dadd( -62.651, -59.6991, 9.01385, 0.81 ) }
    dend_19 { pt3dadd( -71.9875, -63.3633, 13.6322, 0.81 ) }
    dend_19 { pt3dadd( -80.2673, -68.229, 18.9541, 0.81 ) }
    dend_19 { pt3dadd( -88.1936, -73.3611, 24.5239, 0.81 ) }
    dend_19 { pt3dadd( -95.9022, -80.0968, 28.1976, 0.81 ) }
    dend_19 { pt3dadd( -101.622, -88.076, 32.6317, 0.81 ) }
    dend_19 { pt3dadd( -106.63, -96.2216, 37.5513, 0.81 ) }
    dend_19 { pt3dadd( -112.57, -103.885, 42.2985, 0.81 ) }
    dend_19 { pt3dadd( -118.962, -111.235, 47.0106, 0.81 ) }
    dend_19 { pt3dadd( -125.6, -118.023, 52.2789, 0.81 ) }
    dend_19 { pt3dadd( -134.239, -122.827, 57.0729, 0.81 ) }
    dend_19 { pt3dadd( -143.266, -126.177, 62.4955, 0.81 ) }
    dend_19 { pt3dadd( -152.27, -130.864, 66.7246, 0.81 ) }
    dend_19 { pt3dadd( -161.921, -133.019, 71.751, 0.81 ) }
    dend_19 { pt3dadd( -172.061, -135.008, 75.8078, 0.81 ) }
    dend_19 { pt3dadd( -182.29, -136.293, 79.966, 0.81 ) }
    dend_19 { pt3dadd( -192.117, -135.554, 85.1488, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 87/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -18.6344, -37.9739, -2.91143, 0.81 ) }
    dend_16 { pt3dadd( -21.3331, -42.7428, -3.68725, 0.81 ) }
    dend_16 { pt3dadd( -23.7806, -46.9504, -4.27431, 1.08 ) }
    dend_16 { pt3dadd( -25.129, -49.023, -4.54798, 1.08 ) }
    dend_16 { pt3dadd( -26.8902, -52.0006, -5.08346, 1.08 ) }
    dend_16 { pt3dadd( -27.7774, -53.6353, -5.38848, 1.08 ) }
    dend_16 { pt3dadd( -30.5229, -58.606, -6.28676, 1.08 ) }
    dend_16 { pt3dadd( -30.6592, -58.836, -6.32046, 1.08 ) }
    dend_16 { pt3dadd( -32.5353, -61.8584, -6.92115, 0.81 ) }
    dend_16 { pt3dadd( -35.4706, -66.9056, -7.99158, 0.54 ) }
    dend_16 { pt3dadd( -37.2598, -70.4891, -8.72709, 1.08 ) }
    dend_16 { pt3dadd( -39.9269, -76.8661, -9.88504, 1.08 ) }
    dend_16 { pt3dadd( -41.008, -80.2838, -10.424, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_16 { pt3dadd( -41.57, -83.1291, -10.8037, 0.81 ) }
    dend_16 { pt3dadd( -41.7941, -85.9832, -11.002, 0.81 ) }
    dend_16 { pt3dadd( -41.7727, -89.0043, -10.9572, 1.08 ) }
    dend_16 { pt3dadd( -41.1528, -94.2678, -10.7564, 1.08 ) }
    dend_16 { pt3dadd( -40.4123, -97.9132, -10.5141, 0.81 ) }
    dend_16 { pt3dadd( -39.3652, -103.981, -10.0226, 0.54 ) }
    dend_16 { pt3dadd( -38.9931, -107.363, -9.67028, 0.54 ) }
    dend_16 { pt3dadd( -38.8314, -110.454, -9.36296, 0.54 ) }
    dend_16 { pt3dadd( -38.8886, -113.978, -9.0262, 0.54 ) }
    dend_16 { pt3dadd( -39.1299, -116.624, -8.77785, 1.08 ) }
    dend_16 { pt3dadd( -40.1251, -121.781, -8.34292, 1.08 ) }
    dend_16 { pt3dadd( -43.0364, -131.876, -7.6869, 1.08 ) }
    dend_16 { pt3dadd( -43.1216, -132.129, -7.67932, 1.08 ) }
    dend_16 { pt3dadd( -44.8083, -136.584, -7.57988, 1.08 ) }
    dend_16 { pt3dadd( -46.7995, -141.133, -7.43435, 1.08 ) }
    dend_16 { pt3dadd( -48.7073, -145.273, -7.33306, 1.08 ) }
    dend_16 { pt3dadd( -49.5048, -146.699, -7.33293, 0.81 ) }
    dend_16 { pt3dadd( -49.666, -146.916, -7.34195, 0.81 ) }
    dend_16 { pt3dadd( -50.5252, -148.283, -7.41373, 0.81 ) }
    dend_16 { pt3dadd( -52.0953, -151.301, -7.67078, 0.81 ) }
    dend_16 { pt3dadd( -53.9572, -155.463, -8.09327, 0.81 ) }
    dend_16 { pt3dadd( -56.3002, -160.946, -8.69354, 0.81 ) }
    dend_16 { pt3dadd( -57.5201, -163.944, -9.05678, 0.81 ) }
    dend_16 { pt3dadd( -60.0979, -170.459, -9.85889, 0.81 ) }
    dend_16 { pt3dadd( -61.2315, -173.522, -10.2521, 1.08 ) }
    dend_16 { pt3dadd( -62.6113, -177.644, -10.7782, 1.08 ) }
    dend_16 { pt3dadd( -63.5863, -180.687, -11.0888, 1.08 ) }
    dend_16 { pt3dadd( -64.4383, -183.633, -11.2302, 0.27 ) }
    dend_16 { pt3dadd( -65.8988, -187.915, -11.2276, 0.27 ) }
    dend_16 { pt3dadd( -66.6329, -189.682, -11.0835, 0.27 ) }
    dend_16 { pt3dadd( -67.7934, -192.406, -10.717, 0.54 ) }
    dend_16 { pt3dadd( -68.7937, -195.176, -10.2842, 0.54 ) }
    dend_16 { pt3dadd( -70.1357, -199.451, -9.6107, 0.54 ) }
    dend_16 { pt3dadd( -70.3047, -199.951, -9.53501, 0.54 ) }
    dend_16 { pt3dadd( -71.1768, -203.081, -9.06388, 0.54 ) }
    dend_16 { pt3dadd( -72.2118, -207.838, -8.59925, 0.54 ) }
    dend_16 { pt3dadd( -73.1003, -213.123, -8.31417, 0.54 ) }
    dend_16 { pt3dadd( -74.1453, -219.756, -8.33155, 0.54 ) }
    dend_16 { pt3dadd( -74.6162, -222.941, -8.44885, 0.54 ) }
    dend_16 { pt3dadd( -75.2719, -227.411, -8.71462, 0.54 ) }
    dend_16 { pt3dadd( -76.0775, -232.89, -9.15004, 0.54 ) }
    dend_16 { pt3dadd( -76.9345, -238.28, -9.68081, 0.54 ) }
    dend_16 { pt3dadd( -78.3847, -245.509, -10.5903, 0.54 ) }
    dend_16 { pt3dadd( -78.6269, -246.7, -10.7527, 0.54 ) }
    dend_16 { pt3dadd( -79.8835, -252.13, -11.4852, 0.54 ) }
    dend_16 { pt3dadd( -80.7536, -255.43, -11.9118, 0.54 ) }
    dend_16 { pt3dadd( -81.7289, -259.129, -12.2854, 0.54 ) }
    dend_16 { pt3dadd( -82.8508, -264.019, -12.7677, 0.54 ) }
    dend_16 { pt3dadd( -83.709, -268.146, -13.1314, 0.54 ) }
    dend_16 { pt3dadd( -84.7225, -272.971, -13.5578, 0.54 ) }
    dend_16 { pt3dadd( -85.6933, -277.374, -14.0851, 0.54 ) }
    dend_16 { pt3dadd( -85.7023, -277.423, -14.0915, 0.54 ) }
    dend_16 { pt3dadd( -86.034, -280.355, -14.4575, 0.54 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -134.213, 197.704, -9.46482, 0.81 ) }
    dend_12 { pt3dadd( -136.444, 200.189, -9.20704, 0.81 ) }
    dend_12 { pt3dadd( -138.427, 202.035, -9.05939, 0.81 ) }
    dend_12 { pt3dadd( -140.688, 203.953, -8.85718, 0.81 ) }
    dend_12 { pt3dadd( -143.507, 205.902, -8.62654, 0.81 ) }
    dend_12 { pt3dadd( -146.263, 207.76, -8.19976, 0.81 ) }
    dend_12 { pt3dadd( -146.306, 207.79, -8.18997, 0.81 ) }
    dend_12 { pt3dadd( -149.45, 209.981, -7.3257, 0.81 ) }
    dend_12 { pt3dadd( -152.315, 211.79, -6.46316, 0.81 ) }
    dend_12 { pt3dadd( -155.456, 213.518, -5.46667, 0.81 ) }
    dend_12 { pt3dadd( -159.865, 215.781, -3.90958, 0.81 ) }
    dend_12 { pt3dadd( -163.354, 217.491, -2.67282, 0.81 ) }
    dend_12 { pt3dadd( -170.251, 222.309, 0.393362, 0.81 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -134.213, 197.704, -9.46482, 0.27 ) }
    dend_11 { pt3dadd( -135.897, 200.394, -8.07078, 0.27 ) }
    dend_11 { pt3dadd( -138.287, 204.211, -6.09227, 0.27 ) }
    dend_11 { pt3dadd( -139.532, 206.199, -5.06208, 0.27 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 70/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -31.3279, -29.6599, -18.4297, 0.54 ) }
    dend_9 { pt3dadd( -31.3494, -33.6373, -18.9795, 0.54 ) }
    dend_9 { pt3dadd( -31.5292, -37.3818, -19.3714, 0.54 ) }
    dend_9 { pt3dadd( -31.9052, -40.964, -19.6894, 0.54 ) }
    dend_9 { pt3dadd( -33.1469, -47.5675, -20.159, 0.54 ) }
    dend_9 { pt3dadd( -34.7401, -53.8504, -20.6638, 0.54 ) }
    dend_9 { pt3dadd( -37.2104, -61.8265, -21.5178, 0.54 ) }
    dend_9 { pt3dadd( -37.3133, -62.1099, -21.554, 0.54 ) }
    dend_9 { pt3dadd( -39.2741, -67.0056, -22.207, 0.54 ) }
    dend_9 { pt3dadd( -42.6525, -74.9525, -23.2621, 0.54 ) }
    dend_9 { pt3dadd( -45.2106, -80.1991, -23.829, 0.54 ) }
    dend_9 { pt3dadd( -47.8021, -85.0781, -24.6767, 0.54 ) }
    dend_9 { pt3dadd( -49.7497, -88.5718, -25.5544, 0.54 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 83/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -31.3279, -29.6599, -18.4297, 0.54 ) }
    dend_8 { pt3dadd( -37.8141, -32.854, -21.7731, 0.54 ) }
    dend_8 { pt3dadd( -42.6994, -35.1644, -23.7872, 0.81 ) }
    dend_8 { pt3dadd( -46.0244, -36.7899, -24.9066, 0.81 ) }
    dend_8 { pt3dadd( -57.8468, -42.8981, -28.3889, 0.81 ) }
    dend_8 { pt3dadd( -64.5298, -46.4169, -29.9781, 0.81 ) }
    dend_8 { pt3dadd( -70.4375, -49.6738, -31.289, 0.81 ) }
    dend_8 { pt3dadd( -78.7979, -54.2721, -32.6784, 0.81 ) }
    dend_8 { pt3dadd( -83.9021, -57.2147, -33.2468, 0.81 ) }
    dend_8 { pt3dadd( -89.7674, -60.8075, -33.7286, 0.81 ) }
    dend_8 { pt3dadd( -96.8988, -65.4407, -34.0504, 0.81 ) }
    dend_8 { pt3dadd( -106.532, -72.0141, -34.6006, 0.81 ) }
    dend_8 { pt3dadd( -106.585, -72.0507, -34.6034, 0.81 ) }
    dend_8 { pt3dadd( -115.871, -78.6255, -35.2296, 0.81 ) }
    dend_8 { pt3dadd( -116.107, -78.7885, -35.2511, 0.81 ) }
    dend_8 { pt3dadd( -126.742, -86.0157, -36.1795, 0.81 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 249.466, 38.6392, 106.122, 0.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_28 { pt3dadd( 256.097, 40.4404, 112.382, 0.27 ) }
    dend_28 { pt3dadd( 262.607, 42.0402, 118.829, 0.27 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 2/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 249.466, 38.6392, 106.122, 0.27 ) }
    dend_27 { pt3dadd( 258.168, 40.2513, 114.503, 0.27 ) }
    dend_27 { pt3dadd( 267.471, 39.9564, 122.415, 0.27 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 5/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -86.034, -280.355, -14.4575, 0.54 ) }
    dend_18 { pt3dadd( -86.4563, -284.986, -14.819, 0.54 ) }
    dend_18 { pt3dadd( -86.9529, -290.068, -15.2416, 0.54 ) }
    dend_18 { pt3dadd( -86.974, -290.346, -15.2609, 0.54 ) }
    dend_18 { pt3dadd( -87.5117, -295.626, -15.3674, 0.54 ) }
    dend_18 { pt3dadd( -87.9565, -298.993, -15.3206, 0.54 ) }
    dend_18 { pt3dadd( -87.988, -299.188, -15.3099, 0.54 ) }
    dend_18 { pt3dadd( -89.3135, -305.523, -14.6623, 0.54 ) }
    dend_18 { pt3dadd( -90.3513, -310.137, -14.0072, 0.54 ) }
    dend_18 { pt3dadd( -91.5005, -315.006, -13.2285, 0.54 ) }
    dend_18 { pt3dadd( -93.1615, -321.228, -11.9042, 0.54 ) }
    dend_18 { pt3dadd( -94.4986, -325.428, -10.8359, 0.54 ) }
    dend_18 { pt3dadd( -96.0331, -329.612, -9.63697, 0.54 ) }
    dend_18 { pt3dadd( -97.4403, -332.766, -8.57463, 0.54 ) }
    dend_18 { pt3dadd( -99.5109, -336.562, -7.14469, 0.54 ) }
    dend_18 { pt3dadd( -101.959, -340.298, -5.64054, 0.54 ) }
    dend_18 { pt3dadd( -103.615, -342.171, -4.76527, 0.54 ) }
    dend_18 { pt3dadd( -105.084, -343.439, -4.15726, 0.54 ) }
    dend_18 { pt3dadd( -106.233, -344.192, -3.78113, 0.54 ) }
    dend_18 { pt3dadd( -108.588, -345.441, -3.19004, 0.54 ) }
    dend_18 { pt3dadd( -111.054, -346.566, -2.71892, 0.54 ) }
    dend_18 { pt3dadd( -113.329, -347.658, -2.38378, 0.54 ) }
    dend_18 { pt3dadd( -115.206, -348.705, -2.04705, 0.54 ) }
    dend_18 { pt3dadd( -117.654, -350.187, -1.53452, 0.54 ) }
    dend_18 { pt3dadd( -118.976, -351.116, -1.2809, 0.54 ) }
    dend_18 { pt3dadd( -120.23, -352.135, -1.07705, 0.54 ) }
    dend_18 { pt3dadd( -122.986, -354.685, -0.521763, 0.54 ) }
    dend_18 { pt3dadd( -125.391, -357.2, 0.11008, 0.54 ) }
    dend_18 { pt3dadd( -127.693, -359.97, 0.944669, 0.54 ) }
    dend_18 { pt3dadd( -129.623, -362.67, 1.81374, 0.54 ) }
    dend_18 { pt3dadd( -131.573, -365.979, 2.9061, 0.54 ) }
    dend_18 { pt3dadd( -133.012, -369.047, 3.96867, 0.54 ) }
    dend_18 { pt3dadd( -133.933, -371.431, 4.81223, 0.54 ) }
    dend_18 { pt3dadd( -134.802, -374.563, 6.09415, 0.54 ) }
    dend_18 { pt3dadd( -134.951, -376.088, 6.83231, 0.54 ) }
    dend_18 { pt3dadd( -134.667, -379.048, 8.85161, 0.54 ) }
    dend_18 { pt3dadd( -134.554, -379.244, 9.0169, 0.54 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 42/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -86.034, -280.355, -14.4575, 0.54 ) }
    dend_17 { pt3dadd( -88.454, -282.639, -12.33, 0.54 ) }
    dend_17 { pt3dadd( -89.8938, -283.998, -11.0642, 0.54 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_20, dend_13, dend_6, dend_3, dend_0, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_28, dend_27, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_20, dend_13, dend_6, dend_3, dend_0, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_28, dend_27, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_20 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_21 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_14 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_5 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_29 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_26 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_19 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_16 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_9 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_8 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_18 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_6 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_13 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_24 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_22 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_17 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_28 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, axon_1, axon_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_28, dend_28, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_20 nseg = 13
    dend_0 nseg = 9
    dend_25 nseg = 11
    dend_21 nseg = 3
    dend_14 nseg = 27
    dend_10 nseg = 11
    dend_7 nseg = 3
    dend_5 nseg = 11
    dend_4 nseg = 7
    dend_2 nseg = 3
    dend_29 nseg = 3
    dend_26 nseg = 3
    dend_19 nseg = 11
    dend_16 nseg = 13
    dend_12 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 5
    dend_18 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_LBC_3daa582d70_0_0


