// Cell: Cell_472299363
/*
{
  "id" : "Cell_472299363",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "438.421, 343.314, 48.72, 11.8176", "444.33, 343.314, 48.72, 11.8176", "450.238, 343.314, 48.72, 11.8176" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "444.329, 343.314, 48.72, 1.0", "450.171, 357.13, 48.72, 1.0", "456.012, 370.946, 48.72, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500042311923499
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "439.696, 343.971, 47.5558, 0.368", "438.621, 343.764, 47.0268, 0.3744", "437.516, 343.552, 46.5912, 0.4002", "436.379, 343.54, 46.5934, 0.4842", "435.503, 342.951, 47.1125, 0.5282", "434.578, 342.294, 47.2511, 0.5746", "433.591, 341.99, 46.2311, 0.5848", "432.493, 341.943, 45.5473, 0.6058", "431.355, 341.942, 45.6576, 0.5888", "430.217, 341.94, 45.4759, 0.5198", "429.088, 341.932, 45.8506, 0.4432", "427.966, 341.881, 46.373, 0.3882", "426.868, 341.593, 46.2829, 0.4256", "425.82, 341.26, 45.5434, 0.4992", "424.768, 340.951, 44.742, 0.621", "423.678, 340.642, 44.3643, 0.6582", "422.559, 340.625, 44.8148, 0.661", "421.467, 340.894, 45.2892, 0.5674", "420.387, 341.256, 45.1676, 0.5828", "419.385, 341.736, 44.5066, 0.6558", "418.345, 342.193, 44.2526, 0.8528", "417.243, 341.936, 44.24, 0.9124", "416.129, 341.681, 44.2394, 0.867", "415.018, 341.931, 44.2366, 0.718", "413.915, 342.233, 44.2196, 0.6874", "412.911, 342.777, 44.1291, 0.6616", "411.825, 343.042, 43.5394, 0.6112", "410.844, 343.616, 43.2715, 0.4844", "409.786, 343.978, 43.8704, 0.4068" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500042311923499
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "449.026, 345.482, 47.9732, 0.5086", "449.854, 345.082, 49.5592, 0.4834", "450.812, 344.66, 50.6853, 0.5334", "451.853, 344.313, 51.4872, 0.61", "452.906, 344.028, 52.3219, 0.5848", "453.31, 344.131, 52.7836, 0.499", "454.198, 344.815, 52.5143, 0.459", "454.75, 345.803, 52.183, 0.4332", "454.966, 346.903, 52.6845, 0.457", "455.34, 347.983, 52.8293, 0.508", "455.664, 349.042, 52.1399, 0.5592" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500042311923499
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "440.788, 346.507, 45.5602, 0.5338", "439.797, 347.046, 45.3653, 0.5548", "438.687, 346.951, 45.3337, 0.5806", "437.556, 346.801, 45.1556, 0.6068", "436.799, 347.408, 43.9648, 0.6564", "436.91, 348.462, 43.1648, 0.7342", "436.641, 349.568, 43.2191, 0.6624", "436.018, 350.509, 43.6615, 0.5098", "435.329, 351.42, 43.8164, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500042311923499
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "456.012, 370.946, 48.72, 1.0", "461.853, 384.762, 48.72, 1.0", "467.695, 398.578, 48.72, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "409.786, 343.978, 43.8704, 0.4068", "409.496, 343.987, 44.2607, 0.4176", "408.78, 344.123, 43.5856, 0.6694", "407.829, 344.517, 43.9796, 0.5232", "407.316, 345.49, 44.4203, 0.5644", "406.354, 345.942, 43.974, 0.431", "405.42, 345.84, 43.7074, 0.6356", "404.851, 346.379, 45.199, 0.6216", "403.757, 346.599, 45.2385, 0.8898", "402.717, 346.746, 45.3746, 0.2368", "401.887, 346.793, 46.3403, 0.483", "401.117, 347.535, 46.5091, 0.3224", "400.257, 348.245, 46.7029, 0.26", "399.664, 349.182, 46.76, 0.305", "398.904, 349.897, 47.0649, 0.3458", "398.266, 350.186, 48.72, 0.2288", "398.081, 350.637, 46.9364, 0.2514", "398.443, 351.348, 47.7988, 0.3548", "397.659, 351.899, 47.32, 0.432", "396.875, 352.32, 48.3888, 0.675", "396.014, 352.941, 49.2565, 0.5358", "395.243, 353.39, 49.9702, 0.4676", "394.706, 353.965, 48.7833, 0.517", "393.993, 354.681, 48.5741, 0.3544", "393.65, 355.098, 49.4161, 0.382", "393.432, 355.668, 50.68, 0.2288", "392.29, 355.67, 50.6027, 0.2288", "391.227, 355.959, 50.4, 0.2288", "390.335, 356.554, 50.2589, 0.2288", "389.635, 357.432, 50.12, 0.3006", "388.932, 358.109, 49.56, 0.3192", "388.502, 359.088, 49.56, 0.2828", "388.048, 360.014, 49.7165, 0.3386", "387.07, 360.592, 49.84, 0.2288", "386.206, 361.046, 50.3899, 0.246", "385.137, 361.316, 50.419, 0.52", "384.1, 361.541, 50.545, 0.535", "383.312, 362.156, 50.7822, 0.5062", "382.448, 362.879, 50.4608, 0.7976", "381.608, 363.628, 50.7343, 0.8242", "380.785, 364.238, 51.0527, 0.6864", "379.855, 364.76, 51.2277, 0.615", "378.913, 364.834, 52.1954, 0.517", "377.977, 365.263, 52.64, 0.4812", "376.995, 365.811, 52.7691, 0.3242", "375.987, 366.255, 53.2787, 0.297", "374.917, 366.535, 53.4615, 0.3354", "374.0, 367.087, 53.886, 0.3738", "373.095, 367.648, 54.8587, 0.2484", "372.163, 368.055, 54.04, 0.6588", "371.349, 368.603, 54.5493, 0.356", "370.483, 369.074, 53.5618, 0.2628", "369.639, 369.803, 53.48, 0.3512", "368.887, 370.57, 53.8233, 0.483", "368.023, 371.27, 54.168, 0.4434", "367.451, 372.147, 54.3234, 0.5336", "366.728, 372.729, 53.8082, 0.5138", "365.833, 373.261, 54.1923, 0.6368", "364.884, 373.173, 54.735, 0.4332", "363.893, 373.287, 55.6998, 0.2378", "362.915, 373.569, 54.9354, 0.5084", "361.991, 374.069, 55.9793, 0.583", "361.171, 374.725, 56.6908, 0.2716", "360.233, 375.264, 56.6532, 0.5756", "359.368, 375.881, 56.84, 0.4322", "359.152, 376.036, 57.2026, 0.289", "358.277, 376.638, 57.5327, 0.2288", "357.397, 377.321, 58.1392, 0.2288", "356.676, 378.131, 58.574, 0.2288", "355.871, 378.823, 59.08, 0.2288", "355.137, 379.67, 59.1391, 0.2288", "354.342, 380.462, 59.0951, 0.2288", "353.652, 381.322, 58.8742, 0.2288", "352.988, 382.201, 59.0839, 0.2604", "352.139, 382.771, 59.1657, 0.2886", "351.75, 383.782, 59.5997, 0.3426", "351.251, 384.767, 59.92, 0.2374", "350.573, 385.436, 59.92, 0.2288", "349.701, 386.108, 60.0062, 0.2288", "348.965, 386.935, 60.48, 0.2288", "348.355, 387.517, 61.5885, 0.2288", "347.776, 388.138, 62.16, 0.2288", "347.16, 389.038, 62.16, 0.2288", "346.423, 389.754, 62.16, 0.2288", "345.615, 390.345, 63.0, 0.4068" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "409.786, 343.978, 43.8704, 0.4068", "408.936, 344.194, 43.6243, 0.5078", "407.841, 344.407, 43.0447, 0.5338", "406.88, 344.894, 42.1873, 0.5758", "405.792, 345.121, 41.7133, 0.499", "404.658, 345.146, 41.9465, 0.483", "403.515, 345.151, 42.0, 0.4184", "402.372, 345.184, 42.0, 0.4498", "401.255, 345.416, 42.0, 0.501", "400.273, 345.987, 42.0, 0.5958", "399.309, 346.602, 41.9994, 0.632", "398.256, 347.043, 41.998, 0.6356", "397.178, 347.427, 41.9866, 0.6356", "396.088, 347.771, 41.9152, 0.68", "394.973, 347.914, 41.4529, 0.7312", "393.859, 348.128, 41.6674, 0.7604", "392.823, 348.605, 41.7522, 0.7392", "391.841, 349.113, 41.0715, 0.6902", "390.851, 349.672, 40.7588, 0.5922", "389.907, 350.273, 40.1904, 0.5132", "388.944, 350.869, 39.8238, 0.4606", "387.831, 351.08, 40.089, 0.4576", "386.689, 351.051, 40.0369, 0.482", "385.616, 350.778, 40.1766, 0.5164", "384.759, 350.221, 38.9827, 0.5644", "383.786, 349.937, 37.7902, 0.5908", "382.697, 349.61, 37.6169, 0.604", "381.62, 349.262, 37.9476, 0.5784", "380.577, 348.886, 38.3692, 0.5658", "379.465, 348.687, 37.9425, 0.6056", "378.376, 348.664, 37.5214, 0.6896", "377.329, 349.124, 37.5192, 0.777", "376.312, 349.65, 37.5152, 0.821", "375.309, 350.197, 37.4951, 0.8242", "374.355, 350.823, 37.4072, 0.7656", "373.459, 351.509, 37.0616, 0.6818", "372.514, 352.1, 36.4728, 0.5874", "371.52, 352.636, 36.1068, 0.5182", "370.45, 352.977, 35.6768, 0.4748", "369.471, 353.417, 35.4841, 0.4666", "368.943, 354.401, 35.2789, 0.4928", "368.615, 355.495, 35.273, 0.5386", "368.085, 356.493, 35.2453, 0.615", "367.31, 357.326, 35.1344, 0.6914", "366.387, 357.948, 34.7108, 0.7268", "365.422, 358.498, 34.2048, 0.6912", "364.557, 359.241, 34.0822, 0.6298", "363.734, 360.012, 33.7271, 0.5848", "362.805, 360.609, 33.1859, 0.5738", "361.767, 361.075, 32.9428, 0.5592", "360.834, 361.685, 32.5102, 0.5364", "360.033, 362.463, 32.0096, 0.4968", "359.32, 363.353, 31.9197, 0.4714", "358.611, 364.246, 31.9186, 0.4692", "357.815, 365.068, 31.9141, 0.5064", "356.987, 365.857, 31.8954, 0.5574", "356.1, 366.573, 31.7962, 0.5964", "355.186, 367.219, 31.3211, 0.5984", "354.282, 367.876, 30.8512, 0.5724", "353.407, 368.607, 30.8048, 0.5344", "352.62, 369.435, 30.819, 0.5084", "351.917, 370.335, 30.9014, 0.496", "351.236, 371.223, 31.3452, 0.4704", "350.578, 372.126, 31.8234, 0.4062", "349.921, 373.047, 31.7475, 0.3032", "349.474, 374.088, 31.8626, 0.3336", "348.702, 374.827, 31.9138, 0.4576", "347.952, 375.67, 31.64, 0.4658", "347.259, 376.565, 31.6532, 0.5192", "346.611, 377.497, 31.4544, 0.4324", "346.098, 378.475, 31.9707, 0.3304", "345.556, 379.477, 31.92, 0.4412", "344.905, 380.34, 31.6711, 0.5566", "344.376, 381.125, 32.3204, 0.3834", "343.656, 381.914, 32.8644, 0.3976", "342.995, 382.794, 32.4232, 0.2828", "342.392, 383.723, 31.9668, 0.2288", "341.932, 384.732, 32.0673, 0.2288", "341.704, 385.716, 31.0901, 0.2288", "341.354, 386.558, 32.2, 0.2288", "341.141, 387.655, 32.2, 0.2288", "340.928, 388.741, 32.2, 0.2288", "340.613, 389.797, 32.2, 0.2288", "339.997, 390.639, 32.2, 0.2288", "339.672, 391.668, 32.2, 0.2288", "339.075, 392.409, 32.1317, 0.2618", "338.68, 393.33, 31.2497, 0.596", "338.276, 394.353, 30.961, 0.5716", "337.707, 395.289, 30.9336, 0.4358", "337.164, 396.243, 31.0764, 0.2826", "336.608, 397.228, 31.3583, 0.2292", "336.051, 397.983, 31.5109, 0.3754", "335.379, 398.816, 31.2141, 0.3644", "334.821, 399.702, 31.579, 0.604", "334.193, 400.453, 31.08, 0.564", "333.673, 401.351, 30.9529, 0.3648", "333.259, 402.402, 31.1136, 0.245", "332.876, 403.469, 31.2631, 0.2288", "332.364, 404.481, 31.08, 0.2288", "331.752, 405.438, 31.0836, 0.2288", "331.055, 405.951, 31.0979, 0.3262", "330.021, 406.234, 31.64, 0.4306", "329.074, 406.457, 30.8599, 0.2288", "328.78, 407.271, 31.2659, 0.3452", "328.099, 408.064, 31.36, 0.6862", "327.522, 408.755, 31.08, 0.3794", "326.672, 409.461, 31.596, 0.2288", "325.738, 410.101, 31.533, 0.2506", "324.751, 410.238, 31.9791, 0.4602", "323.645, 410.356, 32.2, 0.5256", "322.669, 410.782, 31.9973, 0.3304", "322.055, 411.039, 32.3971, 0.4322", "321.233, 411.54, 33.2293, 0.483", "321.108, 412.526, 32.7911, 0.4068" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "455.664, 349.042, 52.1399, 0.5592", "455.784, 349.602, 52.08, 0.9384", "456.27, 350.462, 52.3258, 0.7988", "457.02, 350.698, 53.9582, 0.6864", "457.688, 351.538, 54.5829, 0.5444", "458.368, 352.335, 54.7666, 0.6706", "459.341, 352.81, 54.88, 0.706", "460.017, 353.279, 55.645, 0.4236", "460.988, 353.821, 55.7267, 0.2342", "461.678, 354.701, 56.0, 0.2876", "462.251, 355.648, 56.0, 0.2796", "462.303, 356.539, 57.099, 0.5084", "462.661, 357.502, 57.7724, 0.3814", "463.346, 358.373, 58.24, 0.2988", "463.549, 359.483, 58.24, 0.2288", "463.963, 360.51, 58.4234, 0.3718", "464.324, 361.569, 58.2515, 0.4576", "464.743, 362.602, 58.24, 0.3632", "464.997, 363.705, 58.1994, 0.367", "465.378, 364.747, 58.2364, 0.4068", "466.066, 365.355, 57.4921, 0.4064", "466.306, 366.447, 57.5859, 0.3972", "466.582, 367.543, 57.6724, 0.426", "467.411, 368.104, 57.7128, 0.283", "467.896, 369.045, 58.4209, 0.6388", "468.195, 370.091, 58.431, 0.6864", "468.435, 371.107, 59.08, 0.6864", "468.926, 372.08, 59.0019, 0.6216", "469.334, 373.062, 59.4611, 0.5176", "469.913, 373.659, 58.52, 0.4416", "470.144, 374.659, 58.6057, 0.2288", "470.549, 375.362, 59.9953, 0.717", "470.753, 376.427, 59.9911, 0.667", "471.127, 377.499, 59.9752, 0.564", "471.482, 378.575, 59.92, 0.483", "472.058, 379.552, 60.1308, 0.4924", "472.471, 380.291, 61.5378, 0.4576" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "455.664, 349.042, 52.1399, 0.5592", "455.714, 349.568, 52.1122, 0.6886", "455.776, 350.708, 52.0792, 0.777", "455.822, 351.851, 52.0744, 0.6946", "456.14, 352.946, 52.0145, 0.6174", "456.137, 354.068, 51.5595, 0.5868", "455.841, 355.156, 51.1202, 0.5848", "455.776, 356.268, 51.669, 0.6804", "455.795, 357.404, 51.4105, 0.7108", "455.961, 358.515, 50.8822, 0.687", "456.384, 359.539, 50.1956, 0.5592" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "435.329, 351.42, 43.8164, 0.2288", "435.124, 351.618, 43.9589, 0.3584", "434.314, 352.419, 44.1465, 0.4322", "433.519, 353.231, 43.8679, 0.4762", "432.803, 354.054, 43.0489, 0.5274", "432.32, 355.034, 42.2528, 0.601", "431.73, 356.005, 42.0176, 0.6328", "431.153, 356.991, 41.9972, 0.613", "430.528, 357.95, 41.9854, 0.5876", "429.747, 358.782, 41.9423, 0.6074", "428.904, 359.552, 41.7735, 0.6558", "427.988, 360.183, 41.1502, 0.661", "427.109, 360.91, 41.1132, 0.6382", "426.204, 361.559, 41.718, 0.6124", "425.398, 362.364, 41.7614, 0.5636", "424.806, 363.301, 41.1138, 0.5126", "424.209, 364.272, 40.9503, 0.4848", "423.441, 365.113, 41.1438, 0.601", "422.665, 365.897, 41.8757, 0.7528", "421.865, 366.709, 41.9961, 0.9058", "421.078, 367.54, 42.0028, 0.9628", "420.392, 368.455, 42.0137, 0.9422", "419.668, 369.34, 42.0616, 0.8928", "418.866, 370.153, 42.2573, 0.7938", "418.094, 370.936, 43.0046, 0.788", "417.307, 371.763, 43.1127, 0.7394", "416.601, 372.664, 43.101, 0.7614", "415.711, 373.378, 43.01, 0.6892", "414.818, 374.062, 42.5085, 0.7112", "414.111, 374.937, 42.009, 0.6868", "413.5, 375.904, 42.0003, 0.7864", "412.919, 376.89, 42.0014, 0.8134", "412.174, 377.757, 42.0056, 0.864", "411.367, 378.568, 42.0204, 0.789", "410.562, 379.381, 42.0829, 0.6876", "409.773, 380.202, 42.3548, 0.5858", "409.083, 380.949, 43.6271, 0.5348", "408.201, 381.634, 44.2327, 0.6376", "407.281, 382.312, 44.2397, 0.7404", "406.6, 383.231, 44.2389, 0.8904", "405.947, 384.171, 44.2341, 0.9168", "405.352, 385.148, 44.2086, 0.9644", "404.89, 386.19, 44.0527, 0.914", "404.565, 387.238, 43.2701, 0.887", "404.428, 388.269, 42.1498, 0.839", "404.104, 389.362, 42.2576, 0.8372", "403.764, 390.415, 42.9573, 0.8116", "403.426, 391.502, 43.23, 0.7836", "403.045, 392.574, 43.4627, 0.7372", "402.648, 393.639, 43.1494, 0.7372", "402.193, 394.687, 43.12, 0.7426", "401.633, 395.684, 43.12, 0.788", "401.064, 396.674, 43.1197, 0.785", "400.351, 397.569, 43.1186, 0.7564", "399.686, 398.499, 43.113, 0.7054", "398.947, 399.371, 43.0836, 0.6578", "398.155, 400.184, 42.8677, 0.632", "397.314, 400.885, 42.1498, 0.6136", "396.605, 401.782, 42.0168, 0.6356", "395.786, 402.579, 42.0613, 0.6862", "394.933, 403.339, 42.2355, 0.7624", "393.98, 403.92, 42.8554, 0.839" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "435.329, 351.42, 43.8164, 0.2288", "435.249, 351.662, 43.2578, 0.3722", "435.548, 352.291, 41.7962, 0.588", "436.605, 352.474, 41.0712, 0.5082", "437.648, 352.135, 40.7005, 0.483", "438.579, 351.7, 39.7194, 0.5404", "439.489, 351.675, 38.1192, 0.5848", "439.814, 352.362, 36.8015, 0.6184", "439.52, 353.43, 36.4109, 0.6178", "439.507, 354.547, 36.3404, 0.6286", "440.003, 355.545, 36.0923, 0.5988", "440.639, 356.469, 35.5617, 0.5848", "441.359, 357.347, 35.4024, 0.6036", "441.971, 358.294, 35.7602, 0.686", "442.146, 359.382, 35.5127, 0.7726", "441.703, 360.371, 34.8634, 0.7672", "441.272, 361.409, 34.3675, 0.6786", "441.273, 362.535, 34.3255, 0.552", "442.005, 363.352, 34.0004, 0.5572", "443.057, 363.519, 33.1033, 0.6066", "443.891, 364.025, 31.68, 0.7114", "444.219, 365.066, 30.8552, 0.737", "444.29, 366.207, 30.7664, 0.7106", "444.038, 367.32, 30.576, 0.6356" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "345.615, 390.345, 63.0, 0.4068", "345.339, 390.334, 63.84, 0.2288", "344.652, 391.203, 63.84, 0.2288", "344.527, 392.322, 63.84, 0.2288", "344.064, 393.358, 63.84, 0.2288", "343.777, 394.463, 63.84, 0.2288", "343.184, 395.433, 63.84, 0.2288", "342.236, 396.044, 63.84, 0.2288", "341.573, 396.935, 63.84, 0.2288", "340.938, 397.87, 63.84, 0.2288", "340.188, 398.71, 63.84, 0.2288", "339.632, 399.702, 63.84, 0.2288", "338.685, 400.282, 63.84, 0.2288", "337.879, 401.072, 63.84, 0.2288", "337.16, 401.888, 63.9534, 0.2288", "336.555, 402.734, 64.4, 0.2288", "335.59, 403.193, 64.68, 0.2288", "334.639, 403.822, 64.68, 0.2288", "333.786, 404.521, 64.939, 0.2288", "332.946, 405.205, 65.744, 0.2288", "332.118, 405.963, 66.08, 0.2288", "331.141, 406.554, 66.08, 0.2288", "330.253, 407.154, 66.1648, 0.2288", "329.444, 407.797, 67.1726, 0.2288", "328.505, 408.449, 67.2, 0.2288", "327.672, 409.228, 67.2, 0.2288", "326.884, 410.038, 67.2, 0.2288", "325.99, 410.747, 67.2, 0.2288", "325.246, 411.551, 67.2, 0.2406", "324.674, 412.126, 68.2909, 0.3394", "323.862, 412.446, 70.0473, 0.4024", "322.872, 412.809, 70.5508, 0.2288", "322.105, 413.43, 69.72, 0.2822", "321.003, 413.586, 70.0, 0.483", "320.143, 414.025, 70.2391, 0.4778", "319.358, 414.48, 70.9083, 0.5542", "318.98, 415.294, 71.1066, 0.2906", "318.516, 415.981, 72.518, 0.4064", "317.859, 416.667, 72.056, 0.2476", "317.039, 417.251, 71.7312, 0.2288", "316.191, 417.722, 72.24, 0.4788", "315.379, 418.246, 72.0549, 0.6864", "314.496, 418.625, 73.089, 0.5564", "313.591, 419.282, 73.64, 0.3426", "312.68, 419.933, 73.9402, 0.289", "311.833, 420.627, 74.48, 0.2458", "311.438, 421.672, 74.3887, 0.3548", "310.701, 422.399, 73.9488, 0.6718", "310.074, 423.16, 73.0702, 0.3498", "309.668, 423.814, 73.7027, 0.4576", "308.626, 424.115, 73.8648, 0.3486", "307.84, 424.195, 74.6774, 0.3208", "307.357, 424.72, 74.2151, 0.2288", "306.793, 425.603, 74.6788, 0.2288", "305.882, 425.97, 74.0034, 0.3022", "304.997, 426.452, 74.653, 0.4502", "304.349, 426.766, 75.0271, 0.483", "303.587, 426.941, 76.0402, 0.401", "302.709, 426.947, 76.5974, 0.443", "301.988, 427.284, 75.3393, 0.3718", "301.389, 427.589, 76.9479, 0.2712", "300.272, 427.627, 76.72, 0.2514", "299.141, 427.667, 76.3913, 0.3448", "298.056, 427.962, 76.6217, 0.5004", "297.117, 428.532, 77.2834, 0.4776", "296.058, 428.762, 77.7885, 0.3746", "295.605, 428.947, 80.0475, 0.3248", "294.802, 429.445, 80.64, 0.2288", "293.94, 430.157, 80.7663, 0.2288", "293.1, 430.905, 80.92, 0.2288", "292.292, 431.519, 80.92, 0.2288", "291.637, 432.089, 80.92, 0.2288", "290.638, 432.583, 80.92, 0.2288", "289.559, 432.788, 80.92, 0.2288" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "345.615, 390.345, 63.0, 0.4068", "345.488, 390.905, 63.0, 0.2796" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "321.108, 412.526, 32.7911, 0.4068", "320.307, 412.526, 32.2311, 0.6102" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "321.108, 412.526, 32.7911, 0.4068", "322.018, 412.069, 34.2544, 0.3686", "323.118, 412.069, 34.9507, 0.2814", "324.077, 412.069, 34.9812, 0.4264", "324.512, 412.08, 36.9572, 0.3836", "325.449, 412.183, 37.9814, 0.2288", "325.99, 412.183, 40.2212, 0.2288", "326.93, 412.389, 39.7813, 0.3788", "327.579, 412.977, 40.8775, 0.3714", "328.527, 413.343, 40.7677, 0.4228", "329.388, 413.541, 39.5315, 0.5338", "330.134, 413.294, 38.5689, 0.3604", "330.948, 413.213, 40.0896, 0.3814", "331.741, 413.442, 41.44, 0.2866", "332.849, 413.637, 41.1359, 0.3364", "333.479, 413.748, 39.6612, 0.4576", "334.21, 413.899, 39.823, 0.2914", "335.273, 414.05, 40.4426, 0.3412", "336.234, 414.141, 39.2619, 0.3558", "337.273, 414.379, 39.6127, 0.3676", "338.1, 414.716, 40.7128, 0.4576", "338.893, 415.158, 41.4627, 0.6486", "339.867, 415.048, 42.0591, 0.4656", "340.632, 414.807, 42.3072, 0.4862", "341.432, 414.423, 41.44, 0.674", "342.212, 414.684, 40.7515, 0.3896", "343.015, 414.433, 40.6658, 0.2796", "344.057, 414.633, 40.8526, 0.359", "345.178, 414.628, 41.1726, 0.453", "345.946, 414.929, 42.0, 0.4068" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "472.471, 380.291, 61.5378, 0.4576", "472.648, 380.446, 62.2392, 0.4016", "473.196, 380.927, 64.4, 0.2288", "473.324, 381.644, 64.4, 0.2288", "473.665, 382.736, 64.4, 0.2288", "474.522, 383.433, 64.4, 0.2288", "475.41, 384.095, 64.4, 0.2288", "476.138, 384.94, 64.4, 0.2288", "476.801, 385.753, 64.4, 0.2288", "477.794, 386.235, 64.4, 0.2288", "478.46, 387.1, 64.4, 0.2288", "478.853, 388.136, 64.4, 0.2288", "479.74, 388.801, 64.4, 0.2288", "480.691, 389.427, 64.4, 0.2288", "481.388, 390.255, 64.4, 0.2288", "481.52, 391.367, 64.4, 0.2288", "482.243, 392.211, 64.4, 0.2288", "482.857, 393.108, 64.4, 0.2288", "483.68, 393.862, 64.4, 0.2288", "484.555, 394.54, 64.4, 0.2288", "485.35, 395.191, 64.4, 0.2288", "485.997, 396.115, 64.4, 0.2288", "486.829, 396.898, 64.4, 0.2288", "487.518, 397.792, 64.4, 0.2288", "488.132, 398.751, 64.4, 0.2288", "488.898, 399.445, 64.4, 0.2288", "489.751, 400.18, 64.4, 0.2288", "490.148, 401.217, 64.4, 0.2288", "491.068, 401.841, 64.4, 0.2288", "492.021, 402.42, 64.4, 0.2288", "492.803, 403.253, 64.4, 0.2288", "493.607, 404.059, 64.4, 0.2288", "494.409, 404.815, 64.4, 0.2288", "495.022, 405.736, 64.4, 0.2288", "496.021, 406.244, 64.4, 0.2288", "496.582, 407.206, 64.4, 0.2288", "497.165, 408.186, 64.4, 0.2288", "497.935, 409.027, 64.4, 0.2288", "498.809, 409.624, 64.4, 0.2288", "499.803, 410.129, 64.4, 0.2288", "500.746, 410.763, 64.4, 0.2288", "501.716, 411.362, 64.4, 0.2288", "502.793, 411.703, 64.4, 0.2288", "503.861, 411.948, 64.4, 0.2288", "504.451, 412.755, 64.4, 0.2288", "505.381, 413.365, 64.4, 0.2288" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "472.471, 380.291, 61.5378, 0.4576", "472.815, 381.453, 60.683, 0.4576", "472.871, 382.062, 62.4215, 0.4272", "472.45, 382.952, 63.3114, 0.305", "472.138, 384.034, 63.56, 0.2976", "472.279, 385.061, 64.1099, 0.3518", "472.132, 386.182, 64.4216, 0.3068", "472.0, 387.181, 65.5189, 0.2288", "471.556, 388.121, 66.08, 0.2288", "470.871, 388.949, 66.08, 0.2288", "470.533, 389.887, 67.179, 0.2288", "469.69, 390.623, 67.48, 0.2288", "469.269, 391.591, 67.76, 0.305" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "456.384, 359.539, 50.1956, 0.5592", "455.716, 359.167, 52.5375, 0.5994", "455.54, 360.161, 53.5847, 0.3398", "455.003, 360.951, 54.32, 0.2288", "454.85, 361.733, 53.2997, 0.356", "454.405, 362.486, 52.08, 0.5784", "454.178, 363.58, 51.8053, 0.609", "453.939, 364.51, 52.92, 0.2472", "453.327, 365.459, 52.92, 0.2504", "452.562, 366.288, 53.1936, 0.3292", "451.79, 366.96, 53.398, 0.6834", "451.413, 367.644, 53.9311, 0.5116", "450.943, 368.53, 53.4148, 0.5084", "450.532, 369.481, 52.7106, 0.3942", "450.062, 370.436, 53.4696, 0.5596", "449.821, 371.389, 53.4766, 0.6222", "449.655, 372.242, 54.8212, 0.6356", "448.914, 373.022, 55.3725, 0.2606", "448.471, 373.545, 53.48, 0.305", "447.853, 374.381, 53.2652, 0.2834", "447.335, 375.215, 53.5889, 0.2288", "446.668, 375.583, 55.3249, 0.356", "446.046, 376.266, 56.3192, 0.4268", "445.618, 377.248, 56.5776, 0.65", "444.992, 378.062, 57.1995, 0.485", "444.243, 378.724, 57.96, 0.3882", "443.594, 379.509, 58.3047, 0.446", "442.832, 380.27, 58.24, 0.4988", "441.957, 380.864, 58.6424, 0.483", "441.577, 381.897, 58.5805, 0.4486", "440.879, 382.646, 58.2411, 0.3578", "440.172, 383.476, 58.1736, 0.2288", "439.768, 384.327, 59.08, 0.3224", "439.066, 385.112, 59.7671, 0.3116", "438.202, 385.73, 59.9239, 0.4576", "437.721, 386.119, 60.7152, 0.482", "436.756, 386.461, 61.6221, 0.2288", "435.743, 386.812, 62.16, 0.2288", "434.682, 387.236, 62.16, 0.2288", "433.6, 387.468, 62.16, 0.2288", "432.591, 387.966, 62.16, 0.2794", "431.607, 388.529, 62.44, 0.3846", "430.549, 388.928, 62.7371, 0.3814", "429.587, 389.189, 63.6126, 0.5278", "428.571, 389.458, 63.4298, 0.5084", "427.664, 389.994, 63.5362, 0.6238", "426.64, 390.456, 63.9201, 0.454", "425.562, 390.676, 63.6768, 0.3782", "424.739, 391.147, 64.1362, 0.2288", "423.819, 391.742, 64.4132, 0.2288", "422.911, 392.338, 64.96, 0.246", "421.898, 392.84, 64.9779, 0.404", "420.803, 392.918, 65.1692, 0.6584", "419.82, 393.149, 64.68, 0.7118", "419.027, 393.281, 65.52, 0.7788", "418.028, 393.757, 65.7924, 0.639", "417.004, 394.21, 65.8, 0.3574", "416.135, 394.922, 65.8, 0.234", "415.203, 395.504, 65.8, 0.244", "414.598, 396.368, 66.0296, 0.471", "413.604, 396.642, 66.7271, 0.365", "413.098, 397.545, 67.2, 0.2708", "413.083, 398.687, 67.2, 0.2288", "412.26, 399.256, 67.2, 0.2288", "411.337, 399.851, 67.2, 0.2288", "410.339, 400.383, 67.2781, 0.337", "409.908, 401.29, 67.2932, 0.6102" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "456.384, 359.539, 50.1956, 0.5592", "456.566, 359.96, 50.024, 0.5176", "457.081, 360.967, 49.674, 0.4894", "457.694, 361.894, 49.1224, 0.5338", "458.418, 362.673, 48.1622, 0.5338", "459.314, 363.319, 47.6017, 0.4996", "460.176, 364.056, 47.4793, 0.469", "460.983, 364.834, 47.04, 0.483", "461.635, 365.683, 46.3523, 0.5338", "461.833, 366.75, 45.6257, 0.5988", "462.186, 367.754, 44.9302, 0.625", "462.829, 368.661, 44.2736, 0.62", "463.542, 369.438, 43.2471, 0.6102", "463.779, 370.38, 42.1758, 0.575", "463.721, 371.474, 41.3778, 0.5226", "463.947, 372.553, 40.7672, 0.4898", "464.266, 373.583, 39.8656, 0.502", "464.709, 374.526, 38.7268, 0.5084", "464.859, 375.574, 37.7922, 0.4688", "464.924, 376.696, 37.3226, 0.4576", "465.589, 377.451, 36.3174, 0.5008", "466.285, 378.268, 35.3735, 0.6", "466.65, 379.332, 34.9871, 0.6562", "466.674, 380.387, 33.9584, 0.6378", "466.368, 381.421, 33.0543, 0.5884", "466.243, 382.484, 32.1602, 0.5084", "467.151, 383.167, 31.855, 0.5074", "467.915, 384.009, 31.6386, 0.483", "468.371, 385.011, 30.8988, 0.483", "469.053, 385.926, 30.7261, 0.4842", "469.793, 386.792, 30.5021, 0.5096", "470.289, 387.776, 29.7721, 0.531", "470.584, 388.871, 29.5299, 0.4786", "471.216, 389.781, 28.8364, 0.3998", "471.698, 390.763, 28.0728, 0.3278", "471.875, 391.876, 27.6864, 0.311", "472.147, 392.972, 27.8664, 0.3602", "472.122, 394.09, 27.3552, 0.395", "471.963, 395.191, 27.0343, 0.4576", "472.288, 396.247, 26.3906, 0.4734", "472.765, 397.286, 26.278, 0.5338", "473.145, 398.353, 26.061, 0.5338", "473.361, 399.449, 25.4806, 0.5164", "473.609, 400.553, 25.2, 0.401", "473.617, 401.697, 25.1992, 0.3346", "473.625, 402.841, 25.1947, 0.2838", "473.68, 403.984, 25.1642, 0.2562", "473.941, 405.094, 24.9844, 0.2778", "473.927, 406.192, 24.2455, 0.3272", "473.497, 407.243, 24.0853, 0.4022", "473.143, 408.331, 24.0694, 0.3828", "472.859, 409.439, 24.0078, 0.3814", "472.717, 410.538, 23.3408, 0.4316", "472.806, 411.668, 22.9608, 0.5838", "473.124, 412.767, 22.9519, 0.7624", "473.174, 413.909, 22.906, 0.839" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "393.98, 403.92, 42.8554, 0.839", "393.534, 404.29, 41.6688, 0.3304", "393.505, 405.063, 41.4719, 0.4016", "393.282, 405.786, 42.8344, 0.2634", "392.954, 406.769, 42.1789, 0.2288", "392.513, 407.378, 42.8061, 0.2558", "392.196, 408.328, 43.3614, 0.2288", "391.82, 408.823, 42.2321, 0.635", "391.497, 409.874, 42.56, 0.43", "391.105, 410.774, 41.7682, 0.481", "390.949, 411.366, 43.2558, 0.4206", "390.898, 412.444, 43.12, 0.7514", "390.905, 413.462, 42.28, 0.5692", "390.557, 414.431, 42.8252, 0.4168", "390.19, 415.468, 42.651, 0.4614", "389.768, 416.291, 42.6423, 0.6326", "389.605, 416.939, 43.0629, 0.607", "389.322, 417.823, 43.9029, 0.6022", "389.402, 418.476, 44.8078, 0.5754", "389.232, 419.497, 44.996, 0.338", "389.189, 420.033, 42.9195, 0.4972", "388.984, 421.063, 42.8688, 0.3638", "389.056, 422.031, 44.119, 0.3094", "388.618, 423.01, 44.8888, 0.381", "388.584, 424.025, 45.7495, 0.6102", "388.612, 424.998, 45.1648, 0.517", "388.357, 426.035, 45.0831, 0.5158", "387.917, 426.885, 45.92, 0.4778", "387.922, 427.982, 45.7321, 0.4578", "387.803, 428.962, 45.0178, 0.8136", "387.935, 430.031, 43.9421, 0.5398", "388.286, 430.97, 43.7382, 0.6198", "388.714, 431.937, 44.3338, 0.567", "388.96, 432.972, 44.6625, 0.483", "389.109, 433.808, 43.0049, 0.5976", "388.938, 434.442, 44.0667, 0.4576", "388.721, 435.517, 44.24, 0.3848", "388.502, 436.61, 44.091, 0.645", "388.409, 437.341, 42.56, 0.6164", "387.975, 438.225, 43.1808, 0.5748", "387.805, 439.219, 44.0885, 0.498", "387.359, 440.195, 44.52, 0.5734", "387.104, 441.285, 44.2546, 0.5968", "386.706, 442.34, 44.1846, 0.4802", "386.471, 443.435, 44.0524, 0.4514", "386.545, 444.5, 43.8444, 0.4996", "386.408, 445.48, 43.5898, 0.624", "386.387, 446.522, 43.4661, 0.4724", "386.101, 447.469, 43.0136, 0.5822", "385.986, 448.106, 43.0696, 0.5578", "385.403, 448.887, 42.56, 0.4834", "384.947, 449.763, 42.9111, 0.3386", "384.378, 450.529, 43.3292, 0.5592", "383.938, 451.465, 43.9306, 0.815", "383.121, 451.984, 43.3412, 0.8688", "382.518, 452.532, 42.8613, 0.5496", "381.991, 453.253, 42.6667, 0.788", "381.516, 453.781, 43.8502, 0.5774", "380.907, 454.525, 43.0948, 0.3238", "380.838, 455.128, 41.44, 0.2894", "380.589, 455.95, 42.3867, 0.6864", "379.855, 456.681, 42.84, 0.5088", "379.017, 457.361, 42.1324, 0.5652", "377.973, 457.678, 41.6444, 0.4068", "377.147, 458.294, 41.4193, 0.6146", "376.31, 458.992, 41.4148, 0.6864", "375.755, 459.434, 41.953, 0.4576", "375.04, 460.045, 42.1352, 0.4054", "374.31, 460.601, 41.7542, 0.6826", "373.859, 461.368, 42.8246, 0.5718", "373.467, 462.041, 41.216, 0.5682", "372.816, 462.789, 41.3767, 0.4668", "372.351, 463.644, 41.7752, 0.5972", "371.828, 464.304, 41.4176, 0.6466", "371.312, 465.264, 41.44, 0.464", "370.717, 466.053, 41.72, 0.5566", "370.415, 466.957, 41.1639, 0.607", "370.114, 467.737, 42.023, 0.5084", "370.195, 468.624, 42.3987, 0.3692", "370.449, 469.69, 42.56, 0.4938", "370.534, 470.758, 42.1641, 0.4546", "371.107, 471.503, 41.4546, 0.3814", "371.229, 472.377, 41.9054, 0.6864", "371.594, 473.317, 41.72, 0.3968", "371.924, 474.255, 41.9759, 0.3368", "372.419, 474.668, 43.12, 0.2288", "372.829, 475.318, 41.6357, 0.2496", "373.632, 475.723, 41.16, 0.2632", "374.6, 476.018, 42.0291, 0.2394", "375.176, 476.563, 41.573, 0.305", "375.546, 477.447, 41.634, 0.2796", "375.891, 478.51, 41.9838, 0.4698", "375.484, 479.477, 41.7091, 0.4412", "375.377, 480.575, 41.16, 0.5338", "375.656, 481.635, 41.6646, 0.4676", "375.915, 482.734, 41.3582, 0.3366", "376.341, 483.754, 41.4254, 0.436", "376.605, 484.799, 40.7092, 0.5054", "376.915, 485.819, 40.8699, 0.4404", "377.165, 486.909, 41.3977, 0.3852", "377.094, 487.867, 40.8523, 0.564", "377.439, 488.868, 40.2914, 0.605", "377.855, 489.809, 40.5989, 0.2922", "378.207, 490.475, 40.2284, 0.5348", "378.558, 491.374, 39.4923, 0.5074", "378.713, 492.301, 39.0463, 0.3814", "378.435, 493.289, 39.6155, 0.3954", "378.612, 493.8, 38.9192, 0.6616", "378.553, 494.92, 38.9007, 0.356", "378.549, 496.06, 38.8399, 0.346", "378.549, 497.146, 38.1262, 0.3688", "378.734, 498.082, 37.6267, 0.4904", "378.991, 498.586, 38.9592, 0.6756", "379.118, 499.635, 38.64, 0.5478", "379.178, 500.673, 38.08, 0.3814", "378.939, 501.736, 38.3289, 0.5302", "378.497, 502.766, 38.3289, 0.4794", "378.117, 503.807, 37.9061, 0.3648", "378.092, 504.818, 37.203, 0.3304", "377.863, 505.805, 36.8502, 0.4516", "377.632, 506.834, 36.6069, 0.285", "377.529, 507.962, 36.8561, 0.3608", "377.29, 509.058, 36.9978, 0.4228", "377.154, 510.129, 37.0902, 0.2896", "376.828, 511.158, 37.2327, 0.4656", "376.719, 511.991, 38.232, 0.3334", "376.683, 513.019, 37.2173, 0.6592", "376.655, 513.961, 35.933, 0.5168", "376.796, 515.031, 35.84, 0.6286", "376.797, 515.846, 36.0548, 0.33", "377.112, 516.871, 35.5219, 0.565", "377.824, 517.573, 35.607, 0.5272", "378.381, 518.331, 34.5845, 0.6864", "378.861, 519.321, 34.72, 0.426", "379.421, 520.213, 33.9125, 0.4576", "379.936, 521.153, 33.6328, 0.4412", "380.092, 522.262, 33.6, 0.3968", "379.826, 523.32, 33.0526, 0.4586", "379.696, 524.357, 33.1982, 0.3394", "379.35, 525.327, 32.7191, 0.3792", "379.139, 526.353, 33.0417, 0.2302", "378.941, 527.279, 31.8867, 0.3096", "378.184, 527.98, 32.1339, 0.4308", "377.428, 528.708, 31.4115, 0.473", "377.147, 529.71, 30.9126, 0.5848", "376.914, 530.821, 30.8, 0.483", "376.719, 531.922, 30.7068, 0.4322" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "393.98, 403.92, 42.8554, 0.839", "392.56, 404.672, 42.2005, 0.3954", "391.529, 405.153, 41.9997, 0.4048", "390.482, 405.612, 41.9983, 0.4794", "389.43, 406.063, 41.991, 0.5812", "388.411, 406.579, 41.9468, 0.6478", "387.507, 407.253, 41.6931, 0.6242", "386.724, 408.059, 41.1827, 0.5596", "386.034, 408.83, 41.6727, 0.5338", "385.069, 409.387, 41.9849, 0.5798", "383.97, 409.694, 42.0, 0.608", "382.938, 410.182, 42.0, 0.5868", "381.926, 410.715, 42.0, 0.5848", "380.954, 411.318, 42.0, 0.5848", "380.089, 412.065, 42.0, 0.655", "379.147, 412.714, 42.0, 0.6846", "378.135, 413.246, 42.0003, 0.7102", "377.13, 413.793, 42.0014, 0.6642", "376.201, 414.46, 42.009, 0.6132", "375.664, 415.462, 42.0571, 0.5366", "374.682, 416.033, 42.0176, 0.4576" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "444.038, 367.32, 30.576, 0.6356", "443.411, 368.114, 29.7926, 0.8526", "442.535, 368.823, 29.3784, 0.8162", "441.699, 369.546, 28.6521, 0.8136", "441.203, 370.569, 28.4444, 0.7886", "440.959, 371.655, 27.8029, 0.8132", "440.394, 372.612, 27.1536, 0.7636", "440.021, 373.65, 26.4121, 0.7374", "439.624, 374.722, 26.3217, 0.6614", "439.055, 375.714, 26.3256, 0.661", "438.509, 376.719, 26.3491, 0.661" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "444.038, 367.32, 30.576, 0.6356", "444.657, 367.005, 30.2842, 0.6864", "445.363, 367.682, 30.5575, 0.6636", "445.984, 368.27, 29.3406, 0.5016", "446.782, 368.813, 28.0932, 0.661", "447.717, 368.744, 29.12, 0.3674", "448.358, 368.597, 27.2406, 0.3906", "449.242, 368.597, 26.0016, 0.5674", "450.226, 368.685, 25.1782, 0.6214", "451.283, 368.648, 25.8986, 0.6216", "452.247, 368.406, 26.6319, 0.4064", "453.074, 368.068, 26.9648, 0.43", "453.775, 367.796, 25.7793, 0.661", "454.546, 367.349, 26.8066, 0.6102", "454.969, 366.454, 26.32, 0.3238", "455.548, 365.549, 26.7431, 0.5034", "456.439, 365.161, 25.5298, 0.5926", "457.25, 364.697, 26.0991, 0.6286", "458.174, 364.138, 25.5696, 0.483", "459.227, 364.009, 25.4682, 0.3814", "460.104, 363.551, 24.9194, 0.4068", "460.727, 362.763, 23.8238, 0.502", "461.28, 362.272, 22.9762, 0.6248", "461.757, 361.411, 22.7088, 0.6874", "462.368, 360.632, 23.1512, 0.412", "463.223, 360.585, 22.1071, 0.4646", "464.081, 360.703, 20.8093, 0.5508", "465.006, 360.315, 20.3126, 0.667", "465.48, 359.508, 19.8764, 0.6132", "466.258, 359.216, 18.6514, 0.4596", "465.978, 358.514, 18.4929, 0.6174", "466.75, 357.971, 19.32, 0.5926", "467.476, 357.349, 18.7382, 0.4328", "468.193, 356.601, 18.5506, 0.6212", "469.09, 356.356, 19.5496, 0.624", "470.16, 356.119, 19.3679, 0.4468", "471.214, 356.013, 18.48, 0.483" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "289.559, 432.788, 80.92, 0.2288", "288.974, 433.576, 80.36, 0.3304" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "289.559, 432.788, 80.92, 0.2288", "289.262, 432.934, 81.2045, 0.2334", "288.294, 433.412, 82.1313, 0.2488", "287.326, 433.891, 83.0584, 0.264", "286.359, 434.369, 83.9852, 0.2794", "285.292, 434.775, 84.0, 0.2288", "284.196, 435.071, 84.0983, 0.2288", "283.389, 435.851, 84.28, 0.2288", "282.364, 436.251, 84.56, 0.2288", "281.315, 436.664, 84.8372, 0.2288", "280.376, 437.135, 85.3454, 0.2288", "279.571, 437.939, 85.4, 0.2288", "278.783, 438.742, 85.4, 0.2288", "278.355, 439.793, 85.4, 0.2288", "277.592, 440.623, 85.4, 0.2288", "276.783, 441.385, 85.4, 0.2288", "276.27, 442.196, 85.4, 0.2288", "275.746, 443.18, 85.4, 0.2288", "275.075, 444.1, 85.4, 0.2288", "274.781, 445.16, 85.4, 0.2288", "274.446, 446.16, 85.4, 0.2288" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "320.307, 412.526, 32.2311, 0.6102", "319.465, 412.991, 31.8315, 0.5126", "318.928, 413.482, 31.1167, 0.4232", "318.286, 414.292, 31.6929, 0.8136", "317.414, 414.86, 32.2, 0.8084", "317.128, 415.838, 32.5158, 0.841", "316.54, 416.497, 32.0186, 0.8912", "315.618, 416.931, 31.724, 0.7452", "315.316, 417.975, 32.1152, 0.5742", "314.789, 418.966, 32.48, 0.5898", "314.42, 419.841, 33.2889, 0.5922", "313.846, 420.722, 32.76, 1.0678", "312.803, 421.002, 33.2483, 0.764", "311.757, 421.397, 33.5342, 0.5606", "310.659, 421.54, 34.1001, 0.5244", "309.59, 421.45, 33.7056, 0.6764", "308.506, 421.572, 34.2353, 0.5386", "307.714, 422.09, 33.3497, 0.395", "307.278, 423.032, 33.6196, 0.3534", "306.999, 423.725, 35.4668, 0.5848" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "320.307, 412.526, 32.2311, 0.6102", "319.803, 412.412, 33.1526, 0.6836", "319.118, 412.078, 34.9849, 0.265", "318.351, 411.631, 36.3432, 0.2288", "317.443, 411.726, 37.24, 0.2288", "316.301, 411.704, 37.24, 0.3134", "315.349, 411.451, 37.3299, 0.305", "314.217, 411.382, 37.5236, 0.308", "313.609, 411.46, 39.1913, 0.3314", "312.65, 411.154, 40.2993, 0.4216", "311.734, 411.205, 41.9605, 0.2458", "310.812, 411.586, 42.8095, 0.2288", "309.709, 411.465, 42.3024, 0.2754", "308.615, 411.41, 41.741, 0.4444", "307.743, 411.626, 41.1314, 0.504", "307.013, 411.726, 39.5713, 0.7296", "306.355, 412.085, 41.2686, 0.5618", "305.48, 412.018, 42.5426, 0.243", "304.533, 411.982, 41.902, 0.244", "304.152, 412.466, 40.32, 0.8268", "303.169, 412.346, 40.1537, 0.791", "302.299, 412.183, 40.1993, 0.764", "301.328, 412.069, 40.6672, 0.6416", "300.518, 411.726, 39.8068, 0.2542", "299.826, 411.459, 41.3678, 0.5508", "298.842, 411.585, 40.6358, 0.8752", "297.905, 411.265, 40.6031, 0.6026", "297.005, 411.261, 41.7124, 0.5338", "296.203, 410.651, 41.0959, 0.4938", "295.527, 410.102, 41.1541, 0.265", "294.739, 409.724, 41.44, 0.4402", "294.184, 410.059, 41.9989, 0.3814", "293.97, 409.845, 39.7911, 0.3814" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "505.381, 413.365, 64.4, 0.2288", "505.776, 413.442, 64.4896, 0.2288", "506.409, 413.932, 65.8, 0.2452", "507.15, 414.471, 66.6092, 0.5838", "507.987, 414.955, 67.48, 0.246", "508.523, 415.948, 67.4775, 0.5348", "509.335, 416.721, 67.2, 0.6456", "509.889, 417.52, 67.9095, 0.3318", "510.745, 418.228, 68.04, 0.2288", "511.365, 419.132, 67.5926, 0.4398", "512.12, 419.791, 66.92, 0.3304", "512.458, 420.637, 68.0918, 0.4988", "513.172, 421.442, 68.0504, 0.3474", "513.653, 422.27, 67.48, 0.2904", "514.195, 423.102, 68.32, 0.312", "515.031, 423.511, 69.44, 0.2288", "515.258, 424.574, 69.4434, 0.3158", "515.766, 425.271, 69.2356, 0.462", "516.153, 426.073, 67.9328, 0.305", "516.765, 426.973, 67.8594, 0.2356", "517.244, 427.629, 69.634, 0.4542", "517.963, 428.397, 70.5533, 0.7156", "518.422, 429.388, 70.3226, 0.9108", "518.997, 430.279, 71.2046, 0.8044", "519.628, 431.197, 71.3252, 0.7372", "520.02, 432.21, 71.4725, 0.5834", "520.958, 432.688, 71.4, 0.2288", "521.893, 433.056, 71.4, 0.2288", "521.893, 434.199, 71.4, 0.2288", "522.505, 434.995, 71.4, 0.2288", "522.96, 435.973, 71.68, 0.2288", "523.036, 437.111, 71.68, 0.2288", "523.036, 438.255, 71.68, 0.2288", "523.036, 439.264, 72.5416, 0.2726", "523.125, 440.342, 73.2046, 0.6056", "523.325, 441.243, 73.4706, 0.4576", "523.508, 442.126, 72.8913, 0.2292", "523.552, 442.728, 74.8868, 0.6004", "523.745, 443.703, 75.32, 0.6864", "524.065, 444.392, 76.9244, 0.3232", "524.127, 445.483, 76.44, 0.2676", "524.688, 446.371, 76.4604, 0.5208", "524.976, 447.463, 76.5478, 0.356", "525.63, 448.207, 76.8765, 0.585", "525.679, 449.043, 76.5346, 0.7368", "526.24, 449.796, 76.6892, 0.6864", "526.526, 450.626, 77.8683, 0.5614", "526.926, 451.238, 76.552, 0.7766", "527.555, 451.904, 76.823, 0.2636", "527.82, 452.78, 76.72, 0.3638", "528.249, 453.654, 77.406, 0.5218", "528.414, 454.742, 77.8428, 0.761", "529.163, 455.414, 78.0954, 0.4054", "529.56, 456.472, 78.4, 0.4328", "529.799, 457.504, 77.9094, 0.4666", "529.973, 458.606, 78.2748, 0.5304", "530.521, 459.549, 78.9382, 0.314", "530.823, 460.635, 79.24, 0.3", "531.044, 461.755, 79.24, 0.438", "531.143, 462.563, 80.1867, 0.4904", "531.03, 463.445, 78.8561, 0.3764", "531.007, 464.345, 78.8491, 0.2998", "531.643, 465.078, 79.52, 0.305", "532.38, 465.756, 78.7606, 0.2982", "533.086, 466.635, 78.7063, 0.2288", "533.429, 467.702, 79.1694, 0.2288", "533.882, 468.747, 79.24, 0.2288", "534.451, 469.684, 78.7856, 0.2288", "534.857, 470.737, 78.68, 0.273", "535.266, 471.708, 79.4926, 0.3528", "535.911, 472.608, 79.5542, 0.3498", "536.406, 473.623, 79.8, 0.2508", "536.906, 474.624, 79.7997, 0.2288", "537.104, 475.732, 79.5822, 0.2478", "537.336, 476.775, 79.4886, 0.326", "537.828, 477.755, 79.8, 0.3324", "538.276, 478.797, 79.6362, 0.2394", "538.366, 479.917, 79.52, 0.2288", "538.366, 481.061, 79.52, 0.2288", "538.557, 482.154, 79.52, 0.2288", "538.481, 483.284, 79.6824, 0.2288", "538.633, 484.332, 79.8, 0.2288" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "505.381, 413.365, 64.4, 0.2288", "504.131, 413.289, 64.1654, 0.2988", "503.359, 412.526, 64.12, 0.2288" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "469.269, 391.591, 67.76, 0.305", "469.45, 392.591, 68.6179, 0.2758", "469.642, 393.656, 69.531, 0.2446", "469.484, 394.699, 69.9913, 0.2288", "468.974, 395.723, 69.9913, 0.2288", "468.477, 396.753, 69.9913, 0.2288", "468.069, 397.821, 69.9913, 0.2288", "467.661, 398.891, 69.9913, 0.2288", "467.509, 399.948, 70.5698, 0.2288", "467.592, 400.994, 71.6842, 0.2288", "467.674, 402.04, 72.7989, 0.2288", "467.758, 403.086, 73.9133, 0.2288", "467.4, 404.157, 74.0034, 0.2288", "467.001, 405.23, 74.0034, 0.2288", "466.604, 406.302, 74.0034, 0.2288", "466.363, 407.35, 74.6642, 0.2314", "466.25, 408.376, 75.8694, 0.2358", "466.138, 409.402, 77.0748, 0.2404", "466.023, 410.429, 78.2799, 0.245", "465.911, 411.456, 79.4853, 0.2496", "465.799, 412.482, 80.6904, 0.2542" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "469.269, 391.591, 67.76, 0.305", "469.117, 392.125, 68.04, 0.305" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "409.908, 401.29, 67.2932, 0.6102", "409.857, 401.582, 67.48, 0.3988", "408.741, 401.681, 67.48, 0.2288", "407.643, 401.932, 67.3128, 0.2288", "406.749, 402.424, 67.2, 0.2882", "405.746, 402.95, 67.2896, 0.3336", "405.118, 403.593, 68.2189, 0.343", "404.441, 404.413, 67.48, 0.3304", "403.543, 405.076, 67.6668, 0.3254", "402.876, 405.948, 67.7692, 0.2898", "402.052, 406.268, 68.8377, 0.2288", "401.414, 406.213, 70.28, 0.2288", "400.632, 406.924, 70.56, 0.2288", "399.865, 407.44, 70.1708, 0.2288", "399.43, 408.233, 71.0881, 0.2288", "398.486, 408.63, 72.338, 0.2288", "397.542, 409.027, 73.5882, 0.2288", "396.599, 409.424, 74.8381, 0.2288", "395.724, 410.095, 75.04, 0.2288", "394.999, 410.71, 75.2618, 0.2288", "393.914, 411.011, 75.4656, 0.2288", "392.979, 411.608, 75.6305, 0.2288", "392.273, 412.183, 76.16, 0.3086", "391.141, 412.139, 76.2062, 0.394", "390.295, 412.069, 77.5527, 0.2348", "389.23, 412.267, 77.6381, 0.2288", "388.284, 412.643, 78.1894, 0.2288", "387.803, 413.315, 79.52, 0.2542" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "409.908, 401.29, 67.2932, 0.6102", "409.884, 402.018, 69.72, 0.2806", "409.859, 403.027, 70.1873, 0.2368", "409.378, 403.683, 71.8976, 0.2796", "408.773, 404.29, 72.4704, 0.2956", "407.954, 404.43, 73.0806, 0.356", "407.079, 404.755, 72.24, 0.3502", "406.257, 405.316, 72.8787, 0.3304", "405.381, 405.829, 73.5644, 0.268", "404.51, 405.962, 75.0666, 0.2288", "403.603, 406.463, 75.6, 0.6102", "402.924, 407.016, 75.8509, 0.2558", "402.345, 407.855, 75.9111, 0.2288", "401.712, 408.74, 76.5699, 0.2288", "401.315, 409.23, 77.5158, 0.2288", "400.965, 409.64, 79.52, 0.2288", "400.187, 410.436, 79.6068, 0.2288", "400.223, 411.349, 79.7614, 0.2288", "399.934, 412.139, 80.0064, 0.2288", "399.655, 412.976, 81.0211, 0.2288", "398.976, 413.614, 81.7858, 0.2288", "399.24, 414.604, 81.76, 0.2288", "399.599, 415.609, 82.3074, 0.2288", "399.484, 416.585, 83.3045, 0.2288", "398.853, 417.297, 83.97, 0.2288", "398.183, 418.086, 84.4189, 0.2288", "397.699, 418.958, 85.12, 0.2288", "397.078, 419.816, 85.517, 0.2288", "396.627, 420.518, 86.8, 0.2288", "396.167, 421.413, 86.8, 0.2288", "396.167, 422.557, 86.8, 0.2288", "396.091, 423.686, 86.8, 0.2288", "395.663, 424.746, 86.8, 0.2288", "395.141, 425.669, 86.8, 0.2288", "394.528, 426.521, 86.52, 0.2288", "394.002, 427.449, 86.52, 0.2288", "393.374, 428.237, 86.6608, 0.2288", "393.307, 429.159, 87.8388, 0.2288", "393.058, 430.21, 88.2717, 0.2288", "392.773, 431.25, 88.732, 0.3024", "392.953, 432.322, 88.0846, 0.483", "392.868, 433.363, 88.2311, 0.4576", "392.598, 433.959, 89.0683, 0.2288", "392.743, 434.834, 88.0331, 0.2288", "392.471, 435.43, 86.24, 0.2288", "392.278, 436.52, 86.2918, 0.2288", "392.255, 437.596, 86.8, 0.2288", "391.999, 438.279, 87.2668, 0.3304" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "473.174, 413.909, 22.906, 0.839", "473.502, 414.014, 24.64, 0.6102" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "473.174, 413.909, 22.906, 0.839", "473.329, 415.306, 22.4277, 0.6864", "472.906, 415.638, 23.8, 0.4068", "472.811, 416.49, 24.92, 0.4764", "472.438, 417.518, 25.1969, 0.4832", "472.129, 418.513, 24.738, 0.577", "472.065, 419.583, 25.1737, 0.367", "471.793, 420.689, 25.3266, 0.4068", "471.517, 421.768, 25.76, 0.341", "471.2, 422.81, 26.3066, 0.3194", "471.099, 423.938, 26.2903, 0.3572", "470.656, 424.888, 25.76, 0.633", "470.535, 425.821, 26.931, 0.593", "470.057, 426.317, 25.9134, 0.4494", "469.808, 426.774, 24.64, 0.6528", "469.752, 427.815, 24.962, 0.4322", "468.941, 428.375, 25.0211, 0.4404", "468.648, 429.404, 25.1342, 0.4576", "468.48, 430.449, 25.76, 0.6068", "468.538, 431.472, 25.5497, 0.2668", "467.727, 432.214, 25.3912, 0.3702", "467.392, 433.004, 26.2923, 0.2796", "466.857, 433.964, 26.8265, 0.2704", "466.305, 434.902, 26.2931, 0.3016", "466.762, 435.85, 26.32, 0.2288", "466.568, 436.581, 25.2174, 0.2288", "465.768, 436.989, 24.425, 0.305", "465.125, 437.8, 24.255, 0.3214", "465.036, 438.822, 23.21, 0.256", "465.155, 439.48, 24.3401, 0.6264", "464.721, 440.111, 24.4073, 0.2714", "464.377, 440.947, 25.013, 0.2796", "463.854, 441.722, 24.054, 0.4322", "463.434, 442.556, 23.24, 0.2416", "463.168, 443.533, 23.4161, 0.2288", "463.107, 444.406, 24.6333, 0.3032", "463.254, 445.071, 24.92, 0.4322", "462.836, 446.118, 24.8004, 0.4678", "462.635, 447.072, 25.7558, 0.2798", "462.29, 447.664, 24.3897, 0.6122", "462.046, 448.737, 24.4588, 0.51", "461.729, 449.772, 23.9988, 0.346", "461.605, 450.578, 22.7055, 0.2288", "461.837, 451.681, 22.4442, 0.2288", "461.858, 452.748, 21.6636, 0.2288", "461.76, 453.491, 22.6248, 0.2898", "461.604, 454.183, 23.5648, 0.4824", "461.684, 454.91, 24.0946, 0.3814", "461.477, 455.96, 24.0195, 0.432", "461.215, 456.876, 23.6029, 0.531", "461.065, 457.881, 24.5885, 0.5258", "460.937, 458.846, 23.6538, 0.3498", "460.208, 458.744, 22.1463, 0.2974", "460.117, 459.615, 20.8174, 0.2288", "460.117, 460.737, 20.9185, 0.2288", "459.792, 461.714, 21.504, 0.2288", "459.036, 462.298, 21.812, 0.2288", "458.289, 462.974, 22.3969, 0.2288", "458.058, 464.074, 22.4, 0.2288", "457.997, 465.208, 22.4, 0.2968", "457.353, 466.026, 23.0541, 0.3684", "456.635, 466.862, 22.4305, 0.3748", "455.979, 467.769, 22.8553, 0.2288", "455.391, 468.735, 22.5582, 0.2288", "454.853, 469.726, 22.386, 0.2288", "454.487, 470.775, 22.12, 0.2288", "453.842, 471.673, 22.12, 0.2288", "453.148, 472.427, 22.12, 0.2288", "452.795, 473.46, 21.7969, 0.2288", "452.254, 474.303, 21.6101, 0.3226", "451.953, 475.188, 22.622, 0.4622", "451.303, 476.034, 22.68, 0.429", "450.465, 476.593, 22.5131, 0.2846", "450.005, 477.523, 22.5534, 0.2922", "449.75, 478.484, 22.6741, 0.2288", "449.115, 479.396, 22.4, 0.2288", "448.448, 480.064, 22.4, 0.2288", "448.387, 481.203, 22.391, 0.2362", "447.796, 482.011, 21.84, 0.3696", "447.16, 482.958, 21.84, 0.2508", "446.621, 483.901, 21.56, 0.2288", "445.908, 484.621, 21.56, 0.2288", "445.307, 485.582, 21.56, 0.2288", "444.452, 486.297, 21.56, 0.2288", "444.275, 487.413, 21.56, 0.2288", "443.418, 488.003, 21.84, 0.2288", "443.368, 489.126, 22.12, 0.2372", "443.042, 490.014, 21.9156, 0.2618", "442.642, 491.017, 21.56, 0.2288", "442.211, 492.065, 21.56, 0.2288", "441.465, 492.908, 21.56, 0.2288", "441.126, 493.929, 21.56, 0.2288", "440.573, 494.9, 21.2831, 0.304", "440.121, 495.829, 20.5993, 0.483", "439.834, 496.712, 21.7344, 0.4392", "439.448, 497.648, 22.4, 0.2288", "438.84, 498.529, 22.3636, 0.2364", "438.102, 499.169, 21.322, 0.4152", "437.94, 499.951, 21.257, 0.2476", "438.038, 501.057, 21.28, 0.2288", "438.038, 502.201, 21.28, 0.2288", "437.915, 503.28, 20.8513, 0.2288", "436.975, 503.818, 20.72, 0.2288", "436.549, 504.671, 20.72, 0.2288", "436.549, 505.815, 20.72, 0.2288", "436.549, 506.959, 20.72, 0.2288", "436.339, 508.071, 20.72, 0.2288", "435.517, 508.737, 20.72, 0.2288", "435.178, 509.564, 21.0, 0.2288", "434.996, 510.631, 21.0, 0.2288", "434.262, 511.438, 21.086, 0.2874", "433.751, 512.315, 21.28, 0.2288", "433.224, 513.196, 21.0356, 0.2288", "432.443, 513.737, 21.4183, 0.2514", "432.302, 514.759, 20.8233, 0.4464", "431.559, 515.57, 20.5489, 0.5996", "431.238, 515.945, 19.4726, 0.635", "430.721, 516.692, 19.588, 0.3304", "430.064, 517.571, 19.2301, 0.5674", "429.424, 518.478, 18.8496, 0.5", "428.592, 519.222, 18.7594, 0.3244", "427.842, 519.9, 18.685, 0.5016", "427.837, 520.837, 19.6988, 0.338", "426.829, 521.151, 20.0693, 0.2536", "426.368, 521.741, 18.7835, 0.4576", "425.712, 522.4, 19.5832, 0.4094", "425.068, 523.237, 18.93, 0.6542", "424.526, 523.99, 18.3243, 0.661" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "473.174, 413.909, 22.906, 0.839", "473.23, 414.59, 22.7111, 0.7622", "473.545, 415.648, 22.1673, 0.6646", "474.053, 416.659, 21.8515, 0.6038", "474.32, 417.748, 21.728, 0.6176", "473.967, 418.744, 21.1506, 0.7032", "473.495, 419.761, 20.7743, 0.789", "473.482, 420.87, 20.7273, 0.8312", "473.592, 422.007, 20.7698, 0.8214", "473.616, 423.14, 21.0899, 0.7598", "473.616, 424.28, 21.3186, 0.6826", "473.615, 425.319, 20.3745, 0.6242", "473.613, 426.415, 19.7078, 0.6288", "473.59, 427.555, 19.6, 0.6356", "473.424, 428.684, 19.5997, 0.6356", "473.161, 429.797, 19.5989, 0.6356", "472.846, 430.898, 19.5924, 0.693", "472.51, 431.99, 19.5549, 0.8082", "472.257, 433.098, 19.2853, 0.8972", "472.044, 434.193, 18.6782, 0.9152", "471.74, 435.286, 18.4904, 0.8358", "471.396, 436.378, 18.48, 0.7536", "471.118, 437.486, 18.48, 0.6768", "470.883, 438.606, 18.48, 0.6206", "470.668, 439.73, 18.4792, 0.5898", "470.404, 440.843, 18.4747, 0.6258", "470.115, 441.949, 18.4439, 0.6976", "469.971, 443.079, 18.2636, 0.691", "469.932, 444.191, 17.6481, 0.5814", "469.497, 445.13, 18.48, 0.4576" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "376.719, 531.922, 30.7068, 0.4322", "376.427, 532.619, 30.9756, 0.4098", "376.156, 533.62, 30.4464, 0.3866", "376.147, 534.58, 30.6681, 0.4436", "376.04, 535.599, 30.3391, 0.4734", "375.803, 536.52, 31.589, 0.6274", "375.24, 536.883, 30.52, 0.2288", "374.885, 537.95, 30.6034, 0.2768", "373.885, 538.138, 30.8, 0.2288", "373.536, 538.94, 30.2691, 0.3276", "373.307, 539.93, 30.7303, 0.3624", "372.795, 540.895, 30.492, 0.2288", "372.302, 541.868, 30.086, 0.2498", "371.651, 542.782, 30.4889, 0.4214", "370.909, 543.616, 30.4576, 0.5562", "370.432, 544.612, 30.8952, 0.6102", "370.105, 545.552, 31.1998, 0.3632", "369.864, 546.503, 30.4013, 0.2706", "369.741, 547.618, 30.24, 0.2292", "369.631, 548.707, 30.24, 0.2402", "368.941, 549.319, 29.96, 0.2564", "368.94, 550.412, 29.68, 0.4286", "368.349, 551.312, 29.1668, 0.4576", "368.148, 552.328, 28.1487, 0.3404", "367.91, 553.429, 27.6928, 0.2316", "367.944, 554.517, 26.943, 0.3222", "368.138, 555.6, 26.5096, 0.409", "368.266, 556.454, 26.88, 0.3814" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "376.719, 531.922, 30.7068, 0.4322", "376.834, 532.074, 30.52, 0.305" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "374.682, 416.033, 42.0176, 0.4576", "374.312, 416.521, 42.2814, 0.7534", "373.492, 416.822, 41.7054, 0.7402", "372.465, 417.165, 41.9255, 0.7926", "371.469, 417.107, 42.912, 0.328", "370.478, 417.598, 43.0889, 0.3814" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "374.682, 416.033, 42.0176, 0.4576", "373.984, 416.734, 40.9858, 0.6516", "373.022, 417.333, 40.672, 0.661", "372.198, 418.06, 39.8908, 0.5858", "371.246, 418.69, 39.7676, 0.483" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "438.509, 376.719, 26.3491, 0.661", "437.893, 376.88, 25.6894, 0.5924", "436.826, 377.069, 24.8839, 0.5086", "435.713, 377.056, 24.311, 0.431", "434.743, 377.382, 23.7776, 0.3406", "433.974, 378.11, 22.8416, 0.2898", "433.296, 377.932, 21.392, 0.3302", "432.902, 376.954, 20.7547, 0.3734", "432.608, 375.851, 20.5548, 0.399", "432.417, 374.758, 19.9573, 0.389", "432.176, 373.656, 19.6364, 0.3814", "432.01, 372.528, 19.5978, 0.3814", "431.978, 371.385, 19.5829, 0.3814", "431.997, 370.242, 19.4821, 0.3998", "432.151, 369.148, 18.8518, 0.4438", "432.733, 368.286, 17.8794, 0.4576", "433.75, 368.171, 18.2011, 0.4168", "434.482, 368.914, 18.9098, 0.3212", "435.238, 369.595, 17.8976, 0.2594", "436.092, 369.398, 16.24, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "438.509, 376.719, 26.3491, 0.661", "438.253, 377.503, 26.4533, 0.6004", "437.757, 378.503, 27.0026, 0.543", "437.058, 379.389, 27.3837, 0.492", "436.259, 380.205, 27.44, 0.483", "435.433, 380.996, 27.4394, 0.546", "434.542, 381.712, 27.4378, 0.6226", "433.624, 382.396, 27.4299, 0.6566", "432.715, 383.089, 27.3935, 0.6186", "431.814, 383.791, 27.2124, 0.589", "431.049, 384.584, 26.5166, 0.6064", "430.396, 385.512, 26.3315, 0.675", "429.746, 386.453, 26.3208, 0.7082", "429.079, 387.385, 26.3239, 0.7118", "428.391, 388.298, 26.3382, 0.7118", "427.758, 389.249, 26.4124, 0.7336", "427.27, 390.262, 26.8825, 0.7594", "426.602, 391.182, 27.0998, 0.7178", "425.93, 392.057, 26.4382, 0.6422", "425.28, 392.995, 26.3726, 0.565", "424.497, 393.825, 26.5367, 0.583", "423.789, 394.67, 27.2658, 0.6562", "423.126, 395.598, 27.2317, 0.7568", "422.366, 396.394, 26.4919, 0.7868", "421.561, 397.2, 26.3206, 0.788", "420.751, 398.009, 26.297, 0.7638", "419.941, 398.818, 26.2237, 0.7626", "419.14, 399.614, 25.7928, 0.787", "418.336, 400.386, 25.1765, 0.8376", "417.463, 401.121, 24.9463, 0.938", "416.783, 402.023, 24.5308, 1.0104", "416.084, 402.913, 24.1248, 1.0168", "415.329, 403.772, 24.0758, 0.9242", "414.726, 404.741, 24.0537, 0.7988", "414.13, 405.717, 23.9263, 0.718", "413.428, 406.571, 23.2274, 0.7354", "412.818, 407.531, 22.9734, 0.7848", "412.191, 408.487, 22.96, 0.836", "411.546, 409.431, 22.96, 0.815", "411.029, 410.451, 22.96, 0.7656", "410.625, 411.521, 22.9597, 0.7626", "410.051, 412.509, 22.9589, 0.7626", "409.289, 413.36, 22.9552, 0.8114", "408.484, 414.175, 22.9407, 0.7892", "407.691, 414.999, 22.883, 0.788", "406.951, 415.865, 22.6436, 0.7638", "406.415, 416.835, 21.9612, 0.787", "405.911, 417.859, 21.8431, 0.8372", "405.403, 418.884, 21.84, 0.913", "404.871, 419.896, 21.84, 0.9646", "404.207, 420.828, 21.84, 0.966", "403.565, 421.776, 21.84, 0.8918", "402.79, 422.616, 21.84, 0.7658", "402.005, 423.448, 21.84, 0.7132", "401.315, 424.36, 21.84, 0.7616", "400.775, 425.369, 21.84, 0.8876", "400.164, 426.336, 21.84, 0.9396", "399.857, 427.437, 21.84, 0.9406", "399.493, 428.522, 21.8403, 0.9154", "399.04, 429.572, 21.8414, 0.8898" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "306.999, 423.725, 35.4668, 0.5848", "306.631, 423.828, 32.7664, 0.5306", "306.271, 423.929, 30.1204, 0.4778", "305.434, 424.081, 29.12, 0.4038", "304.462, 424.537, 29.12, 0.2288", "303.794, 425.377, 29.12, 0.2288", "302.801, 425.917, 29.12, 0.2288", "301.868, 426.472, 29.12, 0.2288", "301.129, 427.328, 29.12, 0.2588", "300.795, 428.406, 29.12, 0.3484", "300.644, 429.525, 29.12, 0.3334", "299.825, 429.899, 30.721, 0.294", "298.885, 430.371, 31.36, 0.2288", "298.339, 431.27, 31.36, 0.2288", "297.346, 431.654, 31.36, 0.2288", "296.463, 432.318, 31.36, 0.2288", "295.439, 432.661, 30.7849, 0.2288", "294.617, 433.368, 30.24, 0.2288", "293.849, 434.203, 30.24, 0.2288", "293.059, 435.029, 30.24, 0.2288", "292.366, 435.898, 30.24, 0.2288", "292.143, 436.985, 30.2173, 0.2288", "291.342, 437.351, 28.84, 0.356", "290.202, 437.349, 28.8092, 0.3048", "289.14, 437.288, 27.771, 0.2982", "288.079, 437.228, 26.7324, 0.2912", "287.019, 437.168, 25.6939, 0.2846", "285.979, 437.265, 24.9248, 0.2834", "284.98, 437.558, 25.4892, 0.2288", "284.042, 438.065, 26.04, 0.2288", "283.109, 438.384, 25.2, 0.2288", "282.213, 438.995, 25.1656, 0.2288", "281.463, 439.791, 24.64, 0.2288", "280.577, 440.392, 24.64, 0.2288", "279.568, 440.743, 24.64, 0.2288", "278.732, 441.371, 24.64, 0.2288", "277.633, 441.618, 24.64, 0.2288", "276.555, 441.959, 24.64, 0.2288", "275.543, 442.394, 24.3208, 0.2288", "274.868, 443.185, 23.3366, 0.2546", "273.751, 443.3, 22.96, 0.2288", "272.741, 443.689, 22.68, 0.2288", "271.729, 444.1, 22.4213, 0.2288", "270.586, 444.101, 22.4, 0.2288", "269.448, 444.145, 22.4, 0.2288", "268.726, 444.864, 22.3068, 0.2288" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "306.999, 423.725, 35.4668, 0.5848", "306.092, 424.331, 35.0395, 0.8068", "305.236, 424.631, 35.8324, 0.5904", "304.349, 425.198, 36.041, 0.6214", "303.641, 425.907, 35.28, 0.6864", "303.245, 426.775, 35.5729, 0.5654", "303.147, 427.271, 36.96, 0.5338" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "293.97, 409.845, 39.7911, 0.3814", "293.665, 409.315, 40.7456, 0.5338", "293.199, 408.485, 40.4886, 0.4068", "292.732, 407.735, 39.9711, 0.5726", "292.505, 406.877, 41.3725, 0.6528", "292.174, 406.138, 42.6255, 0.5948", "291.505, 405.543, 43.2704, 0.397", "290.721, 404.975, 43.5781, 0.3004", "290.895, 404.066, 44.0695, 0.252", "290.305, 403.242, 44.7465, 0.2288", "289.394, 402.875, 43.9729, 0.326", "288.596, 402.704, 42.5911, 0.6006", "287.91, 402.321, 42.2971, 0.525", "287.273, 401.737, 43.3804, 0.2448", "286.51, 401.082, 43.426, 0.3332", "286.035, 400.629, 42.3231, 0.5848", "285.26, 400.514, 43.7335, 0.3814", "284.336, 400.133, 43.3692, 0.5324", "283.777, 399.639, 44.4732, 0.4576", "283.074, 398.963, 45.0719, 0.4162", "282.31, 398.44, 44.5441, 0.4974", "281.569, 397.827, 45.1466, 0.2562", "280.528, 397.769, 46.1863, 0.2778", "279.971, 397.029, 45.6478, 0.303", "279.772, 396.625, 43.524, 0.5338", "278.803, 396.841, 43.4507, 0.481", "278.596, 396.396, 44.9952, 0.443", "277.562, 396.238, 45.2852, 0.4526", "276.951, 395.535, 43.9855, 0.4622", "276.148, 394.88, 44.6555, 0.5592", "275.473, 394.332, 44.5878, 0.536", "275.138, 393.312, 45.1654, 0.339", "274.282, 392.694, 44.9375, 0.3178", "273.321, 392.262, 44.6701, 0.3396", "272.492, 392.81, 45.8948, 0.409", "272.648, 393.779, 47.334, 0.4514", "273.319, 394.545, 48.4728, 0.446", "274.077, 395.277, 49.56, 0.4322", "274.74, 395.735, 48.27, 0.4222", "275.392, 396.462, 47.8904, 0.5058", "276.281, 396.854, 48.335, 0.483", "276.39, 397.411, 50.6064, 0.2322", "277.036, 398.194, 50.8404, 0.4088", "278.018, 398.586, 50.9314, 0.4976", "279.026, 398.805, 51.0983, 0.3438", "280.061, 399.171, 51.24, 0.4168", "280.978, 399.852, 51.2291, 0.661", "281.392, 400.426, 49.6983, 0.53", "281.767, 401.052, 49.5065, 0.4576", "282.521, 401.473, 50.8631, 0.6564", "283.352, 402.225, 51.2711, 0.4714", "283.98, 403.078, 50.6988, 0.295", "284.865, 403.359, 52.1184, 0.4764", "285.486, 403.941, 52.379, 0.6004", "285.909, 404.496, 53.3123, 0.4474", "285.917, 405.294, 52.92, 0.2288", "286.359, 405.962, 51.8311, 0.4576", "287.095, 405.998, 53.6446, 0.4136", "287.303, 406.82, 54.5261, 0.2288", "288.105, 407.425, 54.1492, 0.3464", "288.695, 408.39, 54.2228, 0.5306", "289.322, 408.956, 54.6, 0.7064", "289.982, 409.438, 54.1528, 0.5794", "290.865, 409.903, 54.6193, 0.4576", "291.428, 410.64, 55.2289, 0.4842", "291.846, 411.267, 55.7687, 0.4088", "292.702, 411.696, 55.9896, 0.5084", "293.353, 412.409, 56.66, 0.5574", "293.894, 413.186, 56.2111, 0.725", "294.57, 414.011, 56.4301, 0.6894", "295.118, 414.821, 55.9068, 0.677", "295.904, 415.363, 55.258, 0.5266", "296.492, 415.814, 56.7885, 0.2334", "296.525, 416.949, 56.84, 0.2992", "296.754, 417.851, 57.57, 0.5888", "296.911, 418.879, 58.2994, 0.775", "296.601, 419.62, 59.8259, 0.5088", "296.625, 420.417, 58.5497, 0.609", "296.42, 421.491, 59.2329, 0.9452", "296.746, 422.375, 60.2, 0.5588", "297.148, 423.366, 59.8007, 0.4424", "297.279, 424.216, 60.779, 0.4928", "297.702, 425.241, 61.04, 0.2542", "298.312, 425.849, 62.3473, 0.3814", "298.816, 426.216, 64.4, 0.392", "299.908, 425.967, 64.1628, 0.53", "300.986, 425.797, 63.56, 0.4576" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "293.97, 409.845, 39.7911, 0.3814", "293.779, 409.323, 40.32, 0.4322" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "538.633, 484.332, 79.8, 0.2288", "538.672, 484.574, 80.6036, 0.2394", "538.781, 485.25, 82.8464, 0.2684", "538.823, 486.211, 83.72, 0.2574", "538.917, 487.352, 83.72, 0.2288", "539.038, 488.488, 83.72, 0.2288", "539.24, 489.614, 83.72, 0.2288", "539.344, 490.742, 83.72, 0.2288", "539.668, 491.82, 83.72, 0.2288", "540.232, 492.781, 83.72, 0.2288", "541.01, 493.453, 83.72, 0.2288", "541.305, 494.555, 83.72, 0.2288", "541.851, 495.517, 83.72, 0.2288", "542.255, 496.443, 83.8057, 0.2288", "542.435, 497.54, 84.0, 0.2288", "542.688, 498.646, 84.0, 0.2288", "543.346, 499.456, 84.0, 0.2288", "543.513, 500.51, 84.0, 0.2288", "543.513, 501.654, 84.0, 0.2288", "543.513, 502.798, 84.0, 0.2288", "543.62, 503.935, 84.0, 0.2288", "543.805, 505.05, 84.0, 0.2288", "543.93, 506.177, 84.2419, 0.2288", "544.133, 507.287, 84.56, 0.2288", "544.315, 508.394, 84.56, 0.2288", "544.315, 509.538, 84.56, 0.2288", "544.315, 510.682, 84.56, 0.2288", "544.315, 511.826, 84.56, 0.2288", "544.315, 512.97, 84.56, 0.2288", "544.315, 514.114, 84.56, 0.2288" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "538.633, 484.332, 79.8, 0.2288", "539.052, 484.37, 79.8, 0.2288" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "465.799, 412.482, 80.6904, 0.2542", "465.728, 413.294, 80.6904, 0.2476", "465.63, 414.433, 80.6904, 0.2382", "465.53, 415.573, 80.6904, 0.2288" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "465.799, 412.482, 80.6904, 0.2542", "465.664, 413.715, 80.1318, 0.246", "465.54, 414.833, 79.6253, 0.2386", "465.418, 415.952, 79.1188, 0.231", "465.138, 417.039, 79.0852, 0.2288", "464.59, 417.785, 79.8, 0.2484", "464.392, 418.342, 81.7754, 0.633", "464.022, 419.336, 82.7112, 0.351", "463.424, 420.077, 82.9816, 0.4022", "463.091, 420.96, 83.7427, 0.3112", "462.796, 421.767, 84.6678, 0.3876", "462.409, 422.78, 85.1752, 0.3512", "461.993, 423.692, 85.3829, 0.2586", "461.604, 424.322, 87.0598, 0.5174", "461.604, 425.414, 87.4734, 0.6102", "461.688, 426.174, 89.4628, 0.2536", "462.398, 426.894, 89.6, 0.2834", "462.634, 427.654, 91.2503, 0.2288", "462.571, 428.794, 91.28, 0.2288", "462.528, 429.913, 91.4746, 0.2288", "462.595, 430.884, 92.4073, 0.2288", "462.519, 431.879, 92.4092, 0.277", "462.743, 432.883, 93.2271, 0.2288", "463.091, 433.892, 93.52, 0.2288", "463.484, 434.934, 93.52, 0.2288", "463.7, 436.034, 93.52, 0.2288", "463.995, 437.073, 93.4399, 0.3576", "464.221, 437.769, 95.3187, 0.4068", "464.359, 438.759, 96.6, 0.2984", "464.922, 439.639, 96.6, 0.2288" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "387.803, 413.315, 79.52, 0.2542", "386.319, 413.205, 79.4097, 0.3478", "385.185, 413.098, 79.52, 0.4576" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "387.803, 413.315, 79.52, 0.2542", "387.379, 414.082, 80.08, 0.2362", "386.608, 414.809, 80.08, 0.2288", "385.513, 414.933, 80.591, 0.2288", "384.956, 415.728, 81.2, 0.2288", "384.642, 416.7, 82.04, 0.2288", "383.651, 416.988, 81.76, 0.2288", "382.826, 417.628, 81.2795, 0.2288", "381.913, 418.305, 81.48, 0.2288", "381.406, 419.253, 81.7466, 0.2288", "380.34, 419.576, 81.9571, 0.2288", "380.185, 420.676, 82.04, 0.2288", "379.253, 421.085, 82.04, 0.2288", "378.504, 421.903, 82.075, 0.2288", "377.863, 422.388, 83.16, 0.3304", "377.581, 423.48, 83.16, 0.2998", "376.935, 424.354, 83.16, 0.2288", "376.49, 425.274, 83.4299, 0.4422", "376.147, 426.036, 82.0406, 0.2288", "375.853, 426.712, 83.1986, 0.305", "375.708, 426.846, 85.8206, 0.2288", "374.996, 427.467, 85.1318, 0.2288", "374.737, 428.491, 84.25, 0.2288", "374.201, 429.339, 84.1714, 0.2288", "373.523, 430.099, 84.345, 0.2894", "372.934, 431.043, 84.4693, 0.3986", "372.326, 431.99, 84.3984, 0.4538", "371.473, 432.72, 84.4024, 0.4798", "370.81, 433.42, 83.72, 0.5246", "370.092, 434.006, 84.0795, 0.412", "369.398, 434.339, 84.7468, 0.356" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "391.999, 438.279, 87.2668, 0.3304", "391.72, 439.404, 87.08, 0.2288", "391.456, 440.508, 87.08, 0.2288", "391.019, 441.505, 87.6109, 0.2288", "391.008, 442.623, 88.0953, 0.2288", "390.581, 443.52, 89.04, 0.2288", "390.252, 444.589, 88.8154, 0.2288", "389.855, 445.463, 89.2074, 0.2288", "389.101, 445.982, 88.48, 0.2288", "389.074, 447.076, 89.1654, 0.2288", "388.785, 448.018, 89.2007, 0.2288", "388.609, 449.1, 89.32, 0.2288", "388.385, 450.008, 89.4866, 0.2758", "388.452, 451.0, 90.44, 0.2288", "388.159, 451.553, 88.8286, 0.356", "388.045, 452.641, 89.2175, 0.3814", "388.159, 453.253, 90.72, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "391.999, 438.279, 87.2668, 0.3304", "392.049, 438.495, 86.8, 0.2796" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "424.526, 523.99, 18.3243, 0.661", "424.79, 524.558, 19.5838, 0.3428", "424.996, 525.06, 21.6639, 0.2288", "425.319, 526.013, 22.113, 0.256", "424.667, 526.694, 22.7573, 0.2364", "424.551, 527.555, 22.9712, 0.3142", "424.757, 528.62, 22.7822, 0.3308", "424.384, 529.256, 24.08, 0.453", "423.821, 529.69, 23.24, 0.2288", "423.646, 530.289, 22.4, 0.2288", "423.507, 530.865, 21.737, 0.2288", "422.93, 531.507, 20.8494, 0.2698", "422.135, 531.682, 19.5574, 0.47", "421.644, 532.455, 18.5732, 0.5206", "421.204, 533.191, 18.4069, 0.285", "420.77, 534.205, 18.7247, 0.2638", "420.107, 534.819, 18.095, 0.232", "419.478, 534.839, 16.2915, 0.6168", "418.933, 535.653, 17.152, 0.643", "418.453, 536.316, 18.0309, 0.3744", "417.493, 536.791, 18.121, 0.2288", "416.605, 537.109, 17.64, 0.2288", "415.948, 537.68, 18.2661, 0.3112", "415.158, 537.841, 18.8415, 0.2288", "414.852, 538.481, 16.9308, 0.2796", "414.051, 538.659, 15.3555, 0.305", "413.785, 539.396, 14.56, 0.305" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "424.526, 523.99, 18.3243, 0.661", "423.961, 524.753, 20.4714, 0.2796", "423.28, 524.295, 20.16, 0.305" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "368.266, 556.454, 26.88, 0.3814", "368.354, 556.974, 27.1499, 0.4494", "368.482, 558.08, 26.6549, 0.2892", "368.788, 558.94, 26.32, 0.292", "369.538, 559.665, 26.6, 0.3274", "369.991, 560.687, 26.7378, 0.2686", "370.114, 561.639, 26.1492, 0.517", "370.465, 562.537, 26.1282, 0.5946", "370.88, 563.413, 26.0364, 0.3274", "371.742, 564.032, 26.6, 0.5042", "372.327, 564.698, 25.2308, 0.3898", "373.197, 564.938, 25.72, 0.396", "374.16, 565.129, 25.5408, 0.3924", "374.842, 565.888, 24.9967, 0.2288", "375.491, 566.509, 25.76, 0.2288", "376.441, 566.869, 26.0184, 0.3952", "377.159, 567.737, 25.9468, 0.5342", "377.672, 568.466, 25.604, 0.3048", "378.357, 569.328, 25.8672, 0.3428", "379.062, 570.181, 25.5629, 0.4382", "379.349, 571.058, 26.122, 0.5486", "379.573, 572.112, 25.9468, 0.4048", "379.794, 573.096, 25.2087, 0.4984", "379.773, 573.995, 24.64, 0.2384", "379.579, 575.08, 24.64, 0.3036", "379.03, 575.993, 24.1604, 0.2816", "378.288, 576.817, 24.36, 0.3304", "377.851, 577.785, 24.4689, 0.3006", "377.732, 578.873, 23.9705, 0.252", "377.284, 579.918, 23.8011, 0.2288", "376.918, 580.915, 24.3079, 0.2626", "376.605, 581.718, 25.2, 0.2546", "376.932, 582.808, 25.1885, 0.4198", "376.732, 583.756, 24.36, 0.5848", "377.29, 584.685, 24.1111, 0.661", "377.406, 585.467, 25.9291, 0.2514", "377.446, 586.414, 25.3733, 0.2288", "377.978, 587.031, 24.0937, 0.243", "378.103, 587.522, 26.2301, 0.2504", "378.547, 588.304, 26.8626, 0.2288", "378.954, 588.897, 25.1216, 0.5644", "379.098, 589.786, 25.3999, 0.4032", "379.193, 590.35, 24.3107, 0.4272", "379.464, 591.148, 22.96, 0.2484", "379.79, 592.123, 23.301, 0.4322", "379.919, 593.123, 23.4024, 0.3676", "379.922, 594.075, 23.4836, 0.5986", "380.079, 594.935, 22.5204, 0.661", "380.105, 596.001, 21.84, 0.478", "379.857, 597.09, 21.84, 0.424", "380.346, 598.035, 21.6336, 0.7066", "380.38, 599.11, 21.6059, 0.839", "380.845, 600.047, 21.3788, 0.4322", "381.29, 600.881, 21.0322, 0.5348", "381.681, 601.778, 20.2594, 0.527", "382.021, 602.496, 19.6328, 0.5078", "382.767, 603.067, 19.9531, 0.6664", "383.815, 603.309, 20.5744, 0.667", "384.879, 603.422, 21.2797, 0.559", "385.286, 603.46, 18.9638, 0.5878", "385.379, 603.689, 16.7549, 0.4102", "386.214, 604.032, 17.08, 0.5848" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "368.266, 556.454, 26.88, 0.3814", "368.672, 557.635, 26.738, 0.2478", "368.621, 558.695, 26.3298, 0.329", "368.409, 559.546, 26.88, 0.2748", "367.77, 560.416, 26.88, 0.2878", "367.177, 561.135, 26.04, 0.241", "366.334, 561.828, 25.7564, 0.2638", "365.571, 562.509, 26.0968, 0.358", "364.792, 563.228, 25.76, 0.5166", "363.861, 563.847, 25.9468, 0.377", "363.049, 564.525, 25.387, 0.3686", "362.224, 565.292, 25.3128, 0.3332", "361.329, 565.925, 25.6799, 0.305", "360.818, 566.863, 25.76, 0.2288", "360.153, 567.424, 25.76, 0.2288", "359.039, 567.535, 25.5461, 0.3634", "358.095, 567.922, 25.6572, 0.3724", "357.285, 568.403, 26.1344, 0.483", "356.786, 568.706, 24.9987, 0.2288", "355.897, 569.269, 25.1656, 0.4904", "355.092, 570.021, 25.2823, 0.4276", "354.21, 570.284, 24.64, 0.3794", "353.39, 570.29, 25.9034, 0.4168", "352.458, 570.631, 25.2045, 0.5064", "351.411, 571.013, 25.4593, 0.2854", "350.558, 571.314, 25.1765, 0.5726", "349.811, 571.917, 24.3872, 0.2288", "348.814, 571.888, 24.6834, 0.4348", "347.924, 572.164, 24.4202, 0.5084", "347.1, 572.748, 24.6464, 0.6102", "346.143, 573.225, 25.0816, 0.5746", "345.361, 573.599, 25.2333, 0.4576", "344.318, 573.932, 25.0306, 0.5382", "343.531, 574.436, 23.9154, 0.334", "342.695, 575.039, 24.64, 0.5368", "341.868, 575.519, 24.3267, 0.4922", "341.141, 576.233, 24.64, 0.5084" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "370.478, 417.598, 43.0889, 0.3814", "369.874, 417.992, 42.3102, 0.521", "368.829, 418.256, 41.6727, 0.3012", "367.853, 418.546, 42.149, 0.3998", "367.052, 418.361, 43.4442, 0.681", "365.969, 418.475, 43.96, 0.602", "365.012, 418.478, 45.0075, 0.4576", "364.155, 419.022, 44.828, 0.3862", "363.109, 419.147, 44.9333, 0.345", "362.078, 419.275, 45.3597, 0.431", "361.288, 418.721, 45.1408, 0.4334", "360.367, 418.704, 45.9967, 0.3866", "359.562, 418.933, 46.6458, 0.5496", "358.708, 419.047, 46.3056, 0.5608", "357.783, 419.362, 46.2857, 0.6356", "357.108, 419.382, 47.8674, 0.3512", "356.023, 419.39, 47.3189, 0.435", "355.414, 420.077, 46.8196, 0.2792", "354.758, 420.544, 47.0946, 0.4322", "354.32, 421.085, 48.44, 0.5756", "353.507, 421.516, 48.2107, 0.339", "352.74, 422.138, 48.2793, 0.6282", "351.907, 422.701, 48.7665, 0.394", "351.056, 423.225, 49.8798, 0.2324", "350.007, 423.639, 50.12, 0.327", "349.109, 423.79, 49.1322, 0.6244", "348.337, 424.237, 49.826, 0.507", "347.776, 424.797, 49.0, 0.5206", "347.358, 425.64, 49.0, 0.3002", "346.361, 425.95, 49.28, 0.3936", "345.832, 426.737, 50.6047, 0.4576", "344.95, 427.185, 50.4098, 0.387", "344.115, 427.425, 49.84, 0.5058", "343.559, 428.328, 49.8509, 0.3126", "342.639, 428.785, 50.1206, 0.5852", "342.04, 429.548, 50.9701, 0.5176", "341.512, 430.508, 51.6155, 0.3238", "340.911, 431.186, 51.924, 0.4156", "340.121, 431.916, 51.2607, 0.3362", "339.68, 432.685, 52.0808, 0.6608", "338.936, 433.34, 52.64, 0.2288", "337.982, 433.934, 52.4471, 0.2288", "337.353, 434.865, 52.6112, 0.2288", "337.251, 435.998, 52.64, 0.2288", "337.06, 437.085, 52.64, 0.2288", "335.937, 437.126, 52.8413, 0.2288", "335.496, 438.027, 53.209, 0.3994", "334.742, 438.73, 53.2, 0.4404", "334.827, 439.704, 53.9795, 0.5592", "334.16, 440.326, 53.9193, 0.519", "333.509, 440.754, 55.097, 0.2346", "332.635, 441.323, 54.696, 0.305", "331.831, 442.073, 54.2139, 0.2542", "331.316, 442.972, 54.859, 0.4752", "331.074, 444.055, 55.3591, 0.4438", "330.558, 445.026, 55.4212, 0.3814", "329.766, 445.842, 55.47, 0.357", "328.729, 446.261, 55.72, 0.2842", "327.685, 446.703, 55.72, 0.2348", "326.674, 447.223, 55.72, 0.2288", "325.657, 447.711, 55.7166, 0.2754", "324.863, 448.425, 56.565, 0.3304", "323.863, 448.892, 56.9909, 0.2744", "322.764, 449.152, 57.4, 0.2316", "321.686, 449.462, 57.6489, 0.3962", "320.706, 449.659, 57.0578, 0.5508", "319.9, 450.173, 57.4994, 0.4322", "319.07, 450.783, 58.2235, 0.3118", "318.329, 451.442, 57.1539, 0.3398", "317.333, 451.943, 57.3894, 0.2628", "316.372, 452.429, 57.5817, 0.2288", "315.957, 453.276, 57.96, 0.2288", "315.63, 454.211, 57.68, 0.2288", "315.065, 454.969, 57.68, 0.2288", "314.378, 455.652, 57.6416, 0.2648", "313.914, 456.419, 58.3173, 0.2288", "313.352, 457.212, 58.182, 0.2288", "312.859, 458.135, 58.6648, 0.2288", "312.453, 458.998, 59.08, 0.2414", "311.842, 459.909, 58.8333, 0.3976", "311.085, 460.752, 58.8308, 0.4576", "310.355, 461.574, 59.3412, 0.4576", "309.63, 462.423, 59.8083, 0.4422", "308.902, 463.198, 60.7138, 0.2842", "308.253, 464.086, 61.3536, 0.2828", "307.557, 464.972, 61.32, 0.483" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "370.478, 417.598, 43.0889, 0.3814", "370.77, 417.56, 43.12, 0.6102" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "371.246, 418.69, 39.7676, 0.483", "370.552, 419.084, 40.0977, 0.6212", "369.484, 419.404, 39.76, 0.7372", "368.578, 419.741, 39.48, 0.3118", "367.94, 420.275, 40.2956, 0.2288", "367.598, 421.279, 39.4716, 0.3254", "367.277, 422.042, 39.76, 0.2612", "366.967, 422.826, 38.9166, 0.402", "366.232, 423.379, 39.2588, 0.5176", "365.447, 424.008, 40.5107, 0.6234", "364.492, 424.429, 40.3959, 0.4878", "363.608, 424.793, 39.8611, 0.5318", "363.045, 425.656, 39.48, 0.6178", "362.112, 426.252, 39.6029, 0.4374", "361.377, 427.082, 39.48, 0.2992", "360.536, 427.56, 39.4979, 0.5104", "359.622, 428.128, 38.7859, 0.6164", "358.948, 428.562, 37.5099, 0.4776", "358.07, 429.16, 36.9877, 0.4322", "356.999, 429.43, 37.3873, 0.305", "355.98, 429.658, 38.197, 0.5658", "355.07, 429.581, 37.6354, 0.6544", "354.48, 429.503, 38.4003, 0.3304", "353.609, 429.294, 36.8203, 0.5234", "352.853, 428.589, 37.037, 0.652", "352.191, 428.428, 38.9225, 0.7776", "351.182, 428.212, 39.4019, 0.6102", "350.431, 427.967, 38.36, 0.571", "349.42, 427.728, 38.5482, 0.5334", "348.395, 427.518, 38.6302, 0.2904", "347.894, 427.672, 36.68, 0.5756", "347.042, 428.268, 36.68, 0.6692", "346.338, 428.741, 37.4559, 0.4424", "345.803, 428.838, 35.6308, 0.3886", "345.174, 429.549, 36.0248, 0.516", "344.471, 430.193, 35.4497, 0.7534", "343.862, 430.969, 35.7448, 0.5592", "343.033, 431.606, 36.1029, 0.675", "342.257, 432.083, 35.264, 0.3608", "341.364, 432.322, 36.1379, 0.4844", "340.545, 432.775, 36.68, 0.5848", "339.515, 433.169, 36.6439, 0.5116", "338.65, 433.659, 36.6526, 0.4922", "337.582, 433.805, 36.6657, 0.4608", "336.529, 433.576, 36.1309, 0.2288", "335.841, 434.115, 36.68, 0.3318", "334.977, 434.181, 37.7591, 0.3018", "335.044, 434.898, 38.5986, 0.4576", "334.596, 435.292, 37.3523, 0.5084", "333.299, 435.81, 38.2234, 0.4452", "332.571, 436.666, 38.0568, 0.5826", "331.794, 437.058, 36.9894, 0.4576", "330.999, 437.188, 36.4848, 0.3534", "330.154, 437.351, 37.3229, 0.3134", "329.374, 437.569, 37.5466, 0.5186", "328.415, 437.823, 38.5473, 0.3814", "327.693, 437.511, 37.6183, 0.4586", "326.691, 437.499, 37.5651, 0.4562", "325.752, 437.58, 38.341, 0.3084", "324.768, 437.444, 38.0685, 0.5686", "323.726, 437.241, 37.7717, 0.3638", "323.238, 437.182, 39.3137, 0.3814", "322.169, 437.339, 39.667, 0.5084", "321.092, 437.18, 39.48, 0.5084", "320.013, 437.527, 39.3898, 0.5338", "319.002, 437.713, 39.4934, 0.54", "318.191, 438.003, 38.8984, 0.4654", "317.122, 438.113, 38.3911, 0.4408", "316.014, 437.964, 38.64, 0.3184", "314.895, 437.975, 38.8808, 0.3196", "313.997, 438.643, 38.5764, 0.292", "313.138, 438.862, 37.924, 0.3656", "312.057, 438.792, 37.7502, 0.4224", "311.069, 438.738, 38.5809, 0.5084", "309.97, 438.838, 39.0438, 0.4148", "308.84, 438.9, 39.3347, 0.3692", "307.863, 439.061, 40.0803, 0.345", "306.846, 439.494, 40.3511, 0.3892", "305.742, 439.7, 40.0618, 0.5308", "305.096, 440.097, 41.5738, 0.3544", "304.158, 440.108, 41.5626, 0.4054", "303.42, 440.014, 39.8885, 0.4576", "302.357, 439.873, 40.04, 0.305", "301.345, 440.306, 40.0786, 0.356", "300.459, 441.022, 40.04, 0.4094", "299.552, 441.656, 39.5959, 0.4428", "298.689, 442.141, 40.3189, 0.6346", "297.638, 441.911, 39.6477, 0.5134", "296.739, 441.767, 39.5872, 0.4096", "295.82, 441.477, 39.8488, 0.507", "294.78, 441.791, 39.8532, 0.5318", "293.73, 441.932, 40.3785, 0.5338", "292.762, 442.27, 40.348, 0.305", "292.06, 442.386, 41.3762, 0.4336", "291.642, 442.957, 40.243, 0.3712", "291.023, 442.629, 40.9133, 0.3744", "290.263, 442.675, 39.76, 0.356", "289.431, 442.862, 39.6844, 0.2994", "288.668, 442.391, 39.3963, 0.2288", "287.702, 442.537, 39.2966, 0.5386", "286.898, 442.728, 38.6439, 0.424", "285.997, 442.582, 39.7474, 0.3992", "284.965, 442.614, 40.5471, 0.4636", "284.212, 442.385, 39.5503, 0.5466", "283.131, 442.61, 39.48, 0.2532", "282.139, 442.576, 38.9903, 0.3922", "281.265, 442.27, 39.7172, 0.3604", "280.532, 442.037, 40.1027, 0.3892", "279.764, 441.62, 39.9848, 0.5142", "279.018, 441.986, 38.6369, 0.4446", "278.01, 442.404, 38.8794, 0.4494", "276.95, 442.686, 38.3782, 0.5798", "275.821, 442.614, 38.701, 0.4916", "274.802, 442.397, 38.92, 0.4576", "274.355, 442.69, 38.6089, 0.6864" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "371.246, 418.69, 39.7676, 0.483", "370.665, 418.842, 39.7888, 0.6048", "369.558, 418.832, 39.9288, 0.6422", "368.495, 418.488, 40.4432, 0.485", "367.565, 417.889, 40.5997, 0.3478", "366.702, 417.154, 40.2315, 0.2894", "365.765, 416.544, 40.4544, 0.312", "364.691, 416.295, 40.3886, 0.3304", "363.579, 416.115, 40.5829, 0.3652", "362.488, 415.857, 40.362, 0.4166", "361.414, 415.495, 40.3614, 0.5258", "360.353, 415.102, 40.7697, 0.598", "359.243, 414.856, 40.88, 0.5908", "358.145, 414.542, 40.8797, 0.5066", "357.036, 414.26, 40.878, 0.4042", "355.924, 413.99, 40.8668, 0.3814", "354.836, 413.645, 40.7968, 0.3814", "353.781, 413.247, 40.3603, 0.422", "352.661, 413.114, 40.0394, 0.391", "351.602, 413.135, 40.9206, 0.4024", "350.629, 413.379, 42.2495, 0.385", "349.574, 413.523, 41.6489, 0.4506", "348.475, 413.423, 40.9388, 0.4812", "347.384, 413.737, 40.9556, 0.5544", "346.315, 414.1, 41.41, 0.5834", "345.259, 414.471, 40.88, 0.6356" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "399.04, 429.572, 21.8414, 0.8898", "399.209, 430.02, 20.7077, 0.6226", "399.549, 430.724, 18.725, 0.2288", "400.259, 430.994, 17.1408, 0.2288", "401.082, 431.295, 18.4951, 0.2288", "401.575, 431.615, 20.1645, 0.2288", "402.486, 431.042, 20.8586, 0.2288", "403.447, 430.532, 20.8869, 0.2526", "404.531, 430.228, 20.9941, 0.3078", "405.167, 429.428, 21.665, 0.378", "405.486, 428.362, 22.2852, 0.3908", "405.551, 427.261, 22.0368, 0.3644", "405.12, 426.315, 21.0916, 0.3204", "404.473, 425.576, 19.6904, 0.3238", "404.736, 424.792, 18.2717, 0.3524", "404.276, 424.113, 16.5799, 0.4312", "403.146, 424.081, 16.24, 0.5592" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "399.04, 429.572, 21.8414, 0.8898", "398.191, 430.821, 21.8546, 0.8268", "397.561, 431.774, 21.9159, 0.926", "396.983, 432.748, 22.239, 0.9188", "396.44, 433.733, 22.7108, 0.8674", "395.823, 434.683, 22.7458, 0.839", "395.156, 435.588, 22.29, 0.8506", "394.534, 436.527, 21.8901, 0.876", "393.852, 437.444, 21.84, 0.9132", "393.112, 438.316, 21.84, 0.929", "392.41, 439.217, 21.84, 0.9036", "391.725, 440.131, 21.84, 0.8546", "391.027, 441.036, 21.8397, 0.8018", "390.309, 441.923, 21.8392, 0.776", "389.503, 442.734, 21.8369, 0.7626", "388.648, 443.491, 21.8252, 0.7626", "387.814, 444.269, 21.749, 0.7504", "387.079, 445.12, 21.3223, 0.7248", "386.348, 445.971, 20.9782, 0.7118", "385.6, 446.834, 20.8849, 0.7252", "384.842, 447.686, 20.746, 0.7652", "384.108, 448.562, 20.72, 0.788", "383.578, 449.563, 20.72, 0.788", "383.126, 450.612, 20.72, 0.7594", "382.678, 451.665, 20.72, 0.7228", "382.117, 452.65, 20.72, 0.6974", "381.47, 453.594, 20.72, 0.7008", "380.901, 454.583, 20.72, 0.7264", "380.335, 455.579, 20.72, 0.7518", "379.656, 456.494, 20.7203, 0.748", "378.932, 457.378, 20.7217, 0.7372", "378.263, 458.305, 20.7273, 0.752", "377.639, 459.264, 20.7564, 0.8074", "377.033, 460.231, 20.9009, 0.8538", "376.394, 461.144, 21.4662, 0.818", "375.632, 461.967, 21.8126, 0.7092", "374.898, 462.84, 21.8254, 0.5814", "374.441, 463.87, 21.7417, 0.5498", "373.749, 464.674, 21.2492, 0.5926", "372.754, 465.196, 20.8314, 0.6784", "371.799, 465.81, 20.8054, 0.7118", "370.967, 466.567, 21.2355, 0.6768", "370.182, 467.384, 21.597, 0.59", "369.474, 468.253, 21.2478, 0.5232", "368.681, 469.054, 20.841, 0.5266", "367.676, 469.556, 20.8555, 0.5708", "366.642, 470.008, 21.2828, 0.6034", "365.592, 470.391, 20.9815, 0.6478", "364.556, 470.852, 20.7466, 0.7176", "363.562, 471.417, 20.72, 0.775", "362.672, 472.129, 20.72, 0.788", "361.848, 472.923, 20.72, 0.75", "361.033, 473.725, 20.72, 0.7372", "360.193, 474.501, 20.7194, 0.7182", "359.276, 475.181, 20.7178, 0.7308", "358.409, 475.926, 20.7108, 0.7182", "357.595, 476.729, 20.6825, 0.7118", "356.794, 477.543, 20.5587, 0.7118", "356.059, 478.372, 19.9254, 0.7504", "355.489, 479.344, 19.6316, 0.782", "354.98, 480.368, 19.5964, 0.7686", "354.479, 481.396, 19.5793, 0.7038", "353.978, 482.424, 19.4858, 0.6668", "353.483, 483.43, 18.9697, 0.661", "353.043, 484.47, 18.5503, 0.6812", "352.583, 485.516, 18.4593, 0.7068", "351.941, 486.456, 18.3742, 0.7322", "351.216, 487.306, 17.8284, 0.7578", "350.693, 488.3, 17.4194, 0.7626", "350.138, 489.299, 17.36, 0.7626", "349.665, 490.339, 17.36, 0.7626", "349.031, 491.287, 17.36, 0.741", "348.408, 492.247, 17.3597, 0.694", "347.96, 493.296, 17.3589, 0.643", "347.487, 494.337, 17.355, 0.6356", "346.814, 495.258, 17.337, 0.6356", "346.039, 496.099, 17.2612, 0.6138", "345.329, 496.979, 16.8636, 0.4994", "344.656, 497.883, 16.3738, 0.4376", "343.609, 497.919, 17.0467, 0.4322", "342.622, 498.467, 17.2953, 0.5548", "341.657, 499.062, 16.9607, 0.609", "340.683, 499.585, 16.24, 0.6356" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "268.726, 444.864, 22.3068, 0.2288", "268.118, 445.388, 23.2669, 0.2574", "267.341, 446.06, 24.498, 0.2938", "266.565, 446.732, 25.7289, 0.3304", "266.021, 447.533, 25.2, 0.2288", "265.408, 447.995, 24.64, 0.2288", "264.612, 448.448, 24.64, 0.2288", "263.467, 448.448, 24.64, 0.2288", "262.47, 448.763, 24.36, 0.2288", "261.746, 449.327, 23.4702, 0.2632", "260.997, 449.871, 22.12, 0.229", "260.457, 450.393, 23.0048, 0.2288", "259.581, 451.028, 22.9804, 0.2374", "258.853, 451.663, 22.3124, 0.3438", "258.539, 452.094, 23.4665, 0.2288", "257.943, 452.829, 23.52, 0.2288", "256.893, 453.242, 23.52, 0.2288", "255.76, 453.324, 23.52, 0.2288", "254.998, 453.717, 22.8222, 0.2288", "254.24, 454.371, 22.4, 0.2288", "253.103, 454.397, 22.4, 0.2288", "252.072, 454.643, 22.4, 0.2288", "251.119, 455.245, 22.3759, 0.2738", "250.326, 455.742, 23.1479, 0.2288", "249.236, 455.935, 23.24, 0.2288", "248.592, 456.685, 23.24, 0.2288", "247.448, 456.685, 23.24, 0.2288", "246.379, 457.06, 23.24, 0.2288", "245.298, 457.371, 23.24, 0.2288", "244.154, 457.371, 23.24, 0.2498", "243.057, 457.639, 23.053, 0.3528", "242.125, 458.109, 22.0727, 0.4544", "241.266, 458.592, 22.3073, 0.432", "240.144, 458.612, 22.3, 0.293", "239.032, 458.515, 22.7699, 0.2292", "238.111, 458.178, 23.8, 0.2806", "237.266, 457.98, 22.7816, 0.308", "236.696, 457.656, 22.9788, 0.2592", "236.579, 457.613, 24.8578, 0.2372", "235.783, 457.142, 25.1782, 0.2288", "234.64, 457.142, 25.2, 0.2288", "233.636, 456.891, 24.9612, 0.2938", "232.647, 457.188, 25.7522, 0.3858", "231.798, 457.486, 26.8778, 0.2288", "230.654, 457.486, 26.88, 0.2352", "229.517, 457.486, 26.6594, 0.2942", "228.439, 457.368, 26.32, 0.3634", "227.495, 457.028, 26.6, 0.2508", "226.538, 457.137, 25.8658, 0.4576", "226.089, 456.685, 26.147, 0.2288", "225.216, 456.181, 25.76, 0.2288", "224.541, 455.384, 25.76, 0.2288", "223.525, 454.899, 25.76, 0.2288", "222.383, 454.854, 25.76, 0.2288", "221.239, 454.854, 25.76, 0.2288", "220.095, 454.854, 25.76, 0.2288", "218.951, 454.845, 25.76, 0.2288", "218.083, 454.356, 25.4912, 0.2814", "217.256, 453.598, 25.48, 0.3682", "216.546, 452.953, 24.6364, 0.3316", "215.538, 452.692, 24.08, 0.2288", "214.42, 452.675, 23.8882, 0.2288", "213.785, 452.324, 24.2903, 0.2288", "212.938, 451.88, 24.3886, 0.3006", "212.14, 451.362, 23.8, 0.4576", "211.297, 451.422, 24.36, 0.2288" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "268.726, 444.864, 22.3068, 0.2288", "268.726, 445.13, 22.12, 0.4322" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "303.147, 427.271, 36.96, 0.5338", "302.614, 427.438, 35.8548, 0.4082", "302.135, 428.063, 36.7175, 0.4162", "301.397, 428.514, 35.8977, 0.413", "300.548, 429.0, 36.3759, 0.483", "299.464, 429.153, 36.4, 0.345", "298.789, 429.733, 37.3097, 0.4734", "298.147, 430.505, 37.9602, 0.5374", "297.559, 431.445, 37.9478, 0.5052", "297.125, 431.645, 37.9884, 0.4816", "296.176, 431.686, 37.3335, 0.5158", "295.53, 432.089, 38.5725, 0.631", "295.348, 432.805, 38.64, 0.2768", "294.827, 433.533, 39.2913, 0.6196", "293.94, 433.788, 39.3114, 0.5318", "293.553, 434.656, 39.7608, 0.577", "293.221, 435.386, 38.64, 0.5848", "292.338, 435.674, 39.615, 0.7966", "291.888, 436.235, 39.9521, 0.4322", "291.361, 436.772, 38.8923, 0.4576", "290.726, 437.654, 39.4584, 0.3892", "290.341, 438.455, 38.484, 0.4026", "289.668, 439.135, 38.5577, 0.5592", "289.344, 440.143, 38.8144, 0.7118", "288.842, 440.776, 38.075, 0.5842", "288.183, 441.449, 37.938, 0.463", "287.602, 442.274, 38.6131, 0.5324", "286.984, 442.862, 39.2386, 0.6102", "286.178, 443.473, 38.8833, 0.6796", "285.239, 443.989, 39.1838, 0.625", "284.68, 444.537, 39.9143, 0.3304", "283.999, 445.07, 40.6627, 0.4448", "283.408, 445.817, 39.772, 0.4458", "282.765, 446.388, 40.88, 0.2288", "281.893, 447.035, 41.5036, 0.2288", "281.137, 447.712, 41.3174, 0.3436", "280.31, 448.407, 41.0164, 0.393", "279.351, 448.982, 41.097, 0.356", "278.785, 449.777, 40.4303, 0.4414", "278.022, 450.592, 40.32, 0.4576", "277.259, 451.428, 40.5748, 0.3652", "276.368, 452.092, 40.6515, 0.3394", "275.713, 452.823, 41.5643, 0.476", "275.107, 453.342, 40.9111, 0.6276", "274.509, 453.868, 41.1662, 0.3452", "273.818, 454.397, 41.3608, 0.364", "272.818, 454.239, 40.9004, 0.3104", "272.194, 454.968, 40.88, 0.2288", "271.586, 455.511, 41.16, 0.2288", "271.305, 456.489, 41.1894, 0.2782", "270.794, 456.844, 42.0773, 0.4068", "269.999, 456.469, 41.1617, 0.229", "269.069, 456.928, 41.4215, 0.295", "268.116, 457.464, 41.3501, 0.3786", "267.236, 457.974, 41.603, 0.4804", "266.661, 458.515, 42.0966, 0.4576", "265.831, 459.007, 41.3552, 0.483", "264.97, 459.657, 40.88, 0.5704", "264.684, 459.85, 42.8394, 0.4576", "263.915, 460.463, 43.0648, 0.5682", "263.441, 461.064, 42.6331, 0.503", "263.107, 462.014, 42.6135, 0.455", "262.496, 462.553, 42.0, 0.4492", "261.768, 463.09, 41.6324, 0.401", "261.134, 463.631, 42.3408, 0.2288", "260.365, 464.432, 42.4362, 0.2288", "259.413, 465.002, 42.28, 0.2298", "258.574, 465.696, 42.3321, 0.5704", "257.719, 466.42, 42.5734, 0.4636", "257.161, 467.297, 42.8778, 0.3166", "256.388, 468.0, 43.0858, 0.3444", "255.485, 468.505, 43.0752, 0.4634", "254.572, 468.977, 42.5205, 0.4062", "253.52, 469.28, 43.12, 0.2832", "252.453, 469.589, 42.84, 0.4078", "251.768, 470.245, 43.7559, 0.2456", "250.952, 470.894, 43.96, 0.2288", "249.992, 471.317, 43.5296, 0.2558", "249.067, 471.589, 43.477, 0.2542", "248.331, 472.243, 43.1388, 0.5338", "247.701, 473.059, 43.68, 0.536", "246.995, 473.938, 43.4, 0.2632", "246.072, 474.599, 43.4784, 0.3224", "245.04, 474.991, 43.4006, 0.458", "244.393, 475.807, 44.2151, 0.3526", "243.784, 476.72, 43.8816, 0.2904", "243.147, 477.569, 44.3864, 0.294", "242.523, 478.476, 44.0479, 0.5078", "241.618, 479.117, 44.4735, 0.5556", "240.962, 479.897, 43.8166, 0.4576", "241.041, 480.742, 43.7444, 0.5424", "240.32, 481.069, 44.982, 0.4094", "239.285, 481.206, 44.5497, 0.5928", "238.535, 481.063, 45.8441, 0.4598", "237.634, 481.542, 45.278, 0.3832", "236.673, 481.981, 45.3558, 0.461", "235.798, 482.689, 45.5185, 0.5494", "235.059, 483.501, 46.2459, 0.4164", "234.491, 484.387, 45.92, 0.5814", "233.721, 485.12, 46.5181, 0.545", "232.746, 485.522, 46.1826, 0.5176", "232.007, 486.051, 46.5276, 0.3206", "231.422, 486.389, 46.6206, 0.3304", "230.41, 486.369, 45.6604, 0.4408", "229.791, 486.741, 47.1988, 0.453", "228.991, 487.06, 46.2647, 0.4166", "228.317, 487.446, 44.9792, 0.354", "227.393, 487.517, 45.8284, 0.4948", "226.611, 487.94, 46.5472, 0.4562", "225.716, 488.419, 46.788, 0.5098", "224.741, 488.959, 46.6455, 0.5762", "224.156, 489.346, 44.7269, 0.4686", "223.501, 490.106, 43.734, 0.2396", "222.478, 490.197, 44.5855, 0.4548", "221.886, 490.383, 46.2003, 0.6864", "220.968, 490.874, 47.2517, 0.5114", "220.195, 491.392, 48.6483, 0.4576", "219.43, 491.462, 47.3948, 0.4784", "218.792, 491.234, 46.6533, 0.566", "218.046, 490.96, 47.3942, 0.5084", "217.249, 490.936, 47.04, 0.372", "216.235, 491.414, 46.9932, 0.6164", "215.311, 491.815, 47.4709, 0.5242", "214.242, 491.671, 48.3882, 0.2888", "213.206, 491.289, 49.0, 0.5294", "212.164, 490.952, 48.4604, 0.8312", "211.096, 490.614, 48.095, 0.7522", "210.518, 490.776, 46.02, 0.4576", "209.556, 490.634, 44.9064, 0.5848", "208.894, 490.433, 45.2536, 0.4006", "208.278, 490.346, 47.2346, 0.5344", "207.244, 490.206, 47.32, 0.5592", "206.498, 490.172, 48.8925, 0.4386", "205.703, 489.746, 48.0956, 0.2288", "205.282, 490.204, 48.5562, 0.5528", "204.169, 490.178, 48.8589, 0.6524", "203.783, 490.204, 48.1323, 0.3618", "202.84, 490.03, 48.5839, 0.6472", "202.046, 489.394, 48.6982, 0.545", "201.693, 488.946, 50.12, 0.5312", "200.929, 489.077, 49.8674, 0.3528", "200.06, 489.174, 50.2776, 0.2874", "199.43, 489.756, 49.1347, 0.8956", "198.544, 490.331, 49.6524, 0.5764", "197.671, 490.662, 50.2093, 0.4522", "197.109, 490.89, 51.5166, 0.6346", "196.115, 490.945, 50.8432, 0.5758", "195.143, 491.021, 49.5698, 0.5768", "195.09, 490.56, 48.2222, 0.305" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "303.147, 427.271, 36.96, 0.5338", "302.816, 427.742, 37.52, 0.4068" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "544.315, 514.114, 84.56, 0.2288", "544.201, 515.143, 84.56, 0.3304" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "544.315, 514.114, 84.56, 0.2288", "544.38, 514.632, 85.2261, 0.2546", "544.505, 515.639, 86.52, 0.305" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "369.398, 434.339, 84.7468, 0.356", "368.736, 434.642, 84.4886, 0.2288", "367.874, 435.063, 84.56, 0.2288", "366.917, 435.627, 84.84, 0.2288", "365.967, 436.262, 84.9304, 0.2288", "365.089, 436.973, 85.12, 0.2288", "364.183, 437.612, 85.1886, 0.2288", "363.809, 438.607, 85.4305, 0.2288", "363.344, 439.388, 86.52, 0.2288", "362.377, 439.914, 87.08, 0.2288", "361.236, 439.982, 87.08, 0.2288", "360.122, 440.089, 87.08, 0.2288", "359.345, 440.838, 86.882, 0.2288", "358.866, 441.584, 87.08, 0.2288", "357.842, 441.924, 86.7787, 0.2288", "357.112, 442.499, 86.24, 0.2288", "356.118, 442.595, 85.708, 0.2288", "355.476, 443.38, 85.3353, 0.2288", "354.866, 444.188, 85.1211, 0.2288", "354.285, 444.633, 85.6246, 0.2288", "353.419, 444.978, 85.68, 0.356" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "369.398, 434.339, 84.7468, 0.356", "370.018, 433.618, 85.3563, 0.4322", "370.096, 433.526, 83.2532, 0.3304" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "307.557, 464.972, 61.32, 0.483", "307.148, 465.131, 60.8966, 0.2926", "306.822, 466.106, 61.6776, 0.2796", "306.596, 467.182, 62.16, 0.2796", "306.049, 468.158, 62.2751, 0.2744", "305.569, 469.061, 62.6338, 0.2288", "305.009, 469.935, 62.44, 0.2288", "304.639, 470.956, 62.72, 0.3514", "304.723, 471.975, 63.28, 0.2712", "304.358, 472.83, 64.1567, 0.2288", "304.075, 473.388, 65.8, 0.2288", "304.075, 474.532, 65.8, 0.2288", "303.961, 475.667, 65.8, 0.2288", "303.961, 476.811, 65.8176, 0.2288", "303.892, 477.943, 66.08, 0.2288", "303.625, 478.932, 66.6546, 0.2288", "303.821, 479.751, 68.182, 0.2288", "303.296, 480.027, 69.4921, 0.2626", "302.689, 480.932, 69.7875, 0.2288", "302.301, 481.961, 70.2346, 0.2288", "302.125, 483.0, 71.1424, 0.2288", "301.6, 483.73, 72.4842, 0.2288", "300.961, 484.555, 72.9238, 0.2288", "300.329, 485.241, 73.36, 0.2288", "299.73, 486.142, 73.7568, 0.2288", "299.026, 486.883, 73.92, 0.2288", "297.99, 487.187, 73.9502, 0.2288", "297.44, 487.56, 75.7747, 0.3436", "297.144, 488.488, 76.3904, 0.2406", "296.559, 489.151, 76.5232, 0.2796", "296.076, 489.909, 77.387, 0.2288", "295.051, 490.21, 77.1137, 0.2316", "294.506, 491.04, 77.84, 0.3304", "293.612, 491.562, 78.3465, 0.2288", "292.654, 492.032, 78.9902, 0.2288", "292.207, 492.942, 79.24, 0.2288", "291.492, 493.651, 80.0386, 0.2288", "290.824, 494.194, 81.1104, 0.2288", "290.084, 494.956, 81.8152, 0.2288", "289.717, 495.993, 82.4552, 0.2288", "289.311, 496.956, 81.9294, 0.2288", "288.673, 497.709, 82.021, 0.2288", "288.233, 498.425, 83.4168, 0.2288", "287.74, 499.411, 83.6959, 0.2288", "287.223, 500.389, 83.5078, 0.2288", "287.25, 501.423, 83.2938, 0.2288", "287.168, 502.134, 82.4785, 0.2288", "287.174, 502.73, 84.3942, 0.2796", "286.915, 503.589, 85.4, 0.3814" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "307.557, 464.972, 61.32, 0.483", "307.393, 465.608, 61.32, 0.305" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "274.355, 442.69, 38.6089, 0.6864", "273.198, 442.976, 37.8092, 0.6446", "272.178, 442.959, 37.2529, 0.4788", "271.471, 442.35, 38.0358, 0.4032", "270.68, 442.149, 37.8678, 0.4776", "269.784, 441.925, 37.4231, 0.3824", "268.728, 441.562, 37.464, 0.4646", "267.678, 441.246, 37.6496, 0.5618", "266.628, 441.241, 37.6124, 0.3814", "265.566, 441.43, 36.7858, 0.3094", "264.539, 441.495, 36.3048, 0.4694", "263.467, 441.698, 36.4104, 0.4662", "262.49, 441.439, 36.2524, 0.3124", "261.482, 441.28, 36.8242, 0.3896", "260.618, 441.248, 37.6244, 0.4176", "259.63, 440.891, 38.0209, 0.4374", "258.745, 440.413, 38.36, 0.2354", "257.618, 440.326, 38.08, 0.238", "256.64, 440.315, 37.1224, 0.305", "255.661, 440.324, 37.9761, 0.4024", "254.595, 440.133, 37.7468, 0.4912", "253.55, 440.105, 37.5511, 0.3246", "252.799, 439.796, 37.2924, 0.3902", "252.233, 439.525, 36.9869, 0.273", "251.28, 439.192, 38.138, 0.234", "250.233, 439.406, 38.3152, 0.3092", "249.306, 439.134, 37.8263, 0.399", "248.313, 438.581, 37.8238, 0.311", "247.44, 438.486, 37.5292, 0.4398", "246.455, 438.304, 37.0227, 0.356", "245.55, 438.495, 37.4732, 0.2478", "244.517, 438.376, 37.1081, 0.4862", "243.754, 437.975, 37.5178, 0.395", "242.635, 437.86, 37.5903, 0.3146", "241.552, 437.599, 37.2565, 0.305", "240.484, 437.514, 36.4311, 0.348", "239.473, 437.466, 36.8469, 0.556", "238.719, 437.19, 36.8161, 0.3314", "237.715, 437.122, 37.7146, 0.297", "236.599, 437.216, 37.9565, 0.2796", "235.46, 437.237, 37.8, 0.2796", "234.339, 437.031, 37.9294, 0.2874", "233.254, 436.785, 38.3183, 0.2936", "232.186, 436.665, 38.2155, 0.4554", "231.327, 436.221, 38.9365, 0.5316", "230.598, 435.48, 38.08, 0.5608", "230.103, 435.164, 39.0216, 0.5246", "229.381, 434.614, 39.0667, 0.3814", "228.488, 434.514, 39.0463, 0.4322", "227.504, 434.272, 39.76, 0.2288", "226.36, 434.262, 39.76, 0.2288", "225.216, 434.262, 39.76, 0.2288", "224.072, 434.252, 39.76, 0.2288", "223.118, 433.812, 39.76, 0.2528", "221.984, 433.725, 39.9132, 0.3468", "220.881, 433.673, 40.5658, 0.4068", "219.784, 433.694, 40.04, 0.356", "218.908, 433.812, 40.5964, 0.4576", "217.908, 433.695, 39.9918, 0.3524", "216.953, 433.963, 39.9638, 0.404", "216.153, 434.138, 41.1888, 0.436", "215.18, 433.805, 41.2824, 0.356", "214.081, 433.526, 41.44, 0.3304", "213.246, 432.966, 41.5279, 0.4824", "212.572, 432.551, 41.4949, 0.2736", "211.523, 432.198, 41.1821, 0.6028", "210.55, 431.874, 40.9329, 0.3422", "209.481, 431.974, 41.44, 0.232", "208.349, 432.028, 41.6382, 0.2902", "207.351, 431.985, 41.3932, 0.3956", "206.314, 431.742, 41.72, 0.2288", "205.208, 431.517, 41.72, 0.2288", "204.064, 431.508, 41.72, 0.2288", "202.996, 431.466, 41.72, 0.483" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "274.355, 442.69, 38.6089, 0.6864", "273.53, 442.614, 38.64, 0.5338" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "195.09, 490.56, 48.2222, 0.305", "195.041, 490.704, 47.1094, 0.2886", "194.803, 491.012, 44.6527, 0.2992", "193.797, 490.776, 44.24, 0.2536", "193.164, 490.118, 44.9221, 0.2288", "192.375, 489.522, 45.7853, 0.2288", "191.466, 489.177, 46.48, 0.2288", "190.668, 488.703, 47.5045, 0.2288", "190.171, 488.058, 48.9938, 0.3206", "189.52, 487.242, 49.56, 0.3752", "188.689, 487.001, 48.72, 0.2288", "187.727, 486.695, 48.9286, 0.2288", "186.736, 486.407, 49.3021, 0.2288", "185.889, 485.742, 49.56, 0.2298", "184.954, 485.431, 50.353, 0.4554", "183.98, 485.399, 50.6299, 0.3584", "183.556, 484.748, 49.8686, 0.4576", "182.715, 484.245, 49.5379, 0.396", "181.877, 483.784, 50.4031, 0.5874", "180.953, 483.367, 51.4777, 0.3696", "180.037, 483.297, 52.9161, 0.375", "179.255, 483.34, 54.6549, 0.2288", "178.332, 482.995, 55.44, 0.2288", "177.588, 482.314, 55.4089, 0.3878", "176.928, 482.196, 53.4887, 0.5928", "176.7, 482.166, 51.24, 0.6184", "175.654, 482.024, 51.1039, 0.3698", "175.176, 481.395, 49.5076, 0.2288", "174.044, 481.395, 49.28, 0.2766", "173.215, 481.622, 50.4773, 0.4236", "172.147, 481.405, 50.8911, 0.4582", "171.033, 481.171, 51.1504, 0.486", "169.917, 480.938, 51.4094, 0.5138", "168.803, 480.703, 51.6687, 0.5418", "167.924, 480.625, 52.5566, 0.4094", "167.532, 480.938, 53.6752, 0.5408", "166.671, 480.546, 53.2364, 0.483", "166.169, 480.249, 54.7579, 0.5078", "165.848, 479.635, 55.7875, 0.3814", "165.766, 478.671, 55.7614, 0.6102", "165.8, 478.195, 53.606, 0.3904", "165.771, 477.903, 51.6382, 0.289", "165.048, 477.496, 52.745, 0.4508", "164.464, 476.976, 54.32, 0.822", "163.746, 476.264, 53.76, 0.6514", "163.32, 475.669, 55.1093, 0.7688", "162.815, 474.842, 54.882, 0.6356", "162.542, 474.76, 52.236, 0.4692", "161.601, 474.65, 51.13, 0.4332", "160.591, 474.76, 50.5313, 0.2288", "159.866, 474.792, 52.4157, 0.3132", "159.146, 474.198, 53.0678, 0.2396", "158.69, 473.616, 54.8881, 0.4732", "158.072, 473.55, 55.6968, 0.7436", "157.986, 473.845, 53.76, 0.305" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "195.09, 490.56, 48.2222, 0.305", "195.51, 490.547, 46.76, 0.483" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "544.505, 515.639, 86.52, 0.305", "543.971, 515.029, 87.08, 0.305" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "544.505, 515.639, 86.52, 0.305", "545.148, 516.383, 88.1272, 0.5326", "545.281, 517.318, 88.48, 0.5682", "545.69, 518.287, 87.7643, 0.6082", "546.273, 519.051, 87.9799, 0.3994", "546.578, 519.376, 86.023, 0.2288", "547.052, 519.929, 85.6892, 0.2306", "547.403, 520.701, 86.8092, 0.3", "547.184, 521.565, 88.3571, 0.4576", "547.404, 522.139, 87.6103, 0.5848", "547.56, 523.252, 87.64, 0.4086", "547.747, 524.364, 87.64, 0.3028", "547.747, 525.507, 87.572, 0.2796", "547.616, 526.512, 87.5837, 0.463", "547.404, 527.169, 89.2366, 0.513", "547.177, 527.649, 88.8437, 0.6826", "547.426, 528.442, 87.8346, 0.7562", "547.927, 528.749, 89.4309, 0.6864", "547.747, 529.124, 91.5326, 0.3362", "547.486, 529.627, 89.7786, 0.4216", "546.831, 529.924, 88.2, 0.5034", "546.992, 530.962, 89.0604, 0.702", "547.586, 531.617, 90.5234, 0.6864", "547.812, 532.501, 89.684, 0.2542", "547.938, 533.609, 90.1275, 0.457", "548.174, 534.611, 89.9111, 0.525", "548.539, 535.677, 89.7954, 0.3632", "548.935, 536.513, 90.44, 0.2288", "549.081, 536.899, 92.4011, 0.267", "549.164, 537.799, 93.256, 0.326", "549.781, 538.414, 91.84, 0.7408", "550.263, 539.412, 91.84, 0.5266", "550.497, 540.222, 92.6439, 0.3716", "550.963, 541.176, 92.9135, 0.6228", "551.302, 542.15, 92.7063, 0.7058", "551.715, 543.05, 93.52, 0.2606", "552.156, 543.774, 94.4157, 0.2896", "552.554, 544.717, 94.08, 0.3304", "552.872, 545.795, 94.194, 0.3462", "553.294, 546.656, 95.1364, 0.3494", "554.005, 547.325, 94.8114, 0.5566", "554.127, 548.305, 93.8916, 0.7366", "554.154, 549.007, 95.1608, 0.6864", "554.268, 549.911, 94.3698, 0.5512", "554.786, 550.841, 94.92, 0.5608", "554.953, 551.866, 94.36, 0.305" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "353.419, 444.978, 85.68, 0.356", "352.726, 445.198, 87.1763, 0.3618", "352.23, 445.675, 89.0249, 0.2288", "351.364, 446.35, 88.76, 0.2314", "350.497, 446.846, 88.5312, 0.2676", "349.95, 447.255, 90.16, 0.2288", "349.372, 448.059, 90.44, 0.2288", "348.766, 448.123, 89.5213, 0.2288", "347.897, 448.339, 88.6197, 0.3304", "347.09, 448.791, 89.04, 0.2542" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "353.419, 444.978, 85.68, 0.356", "353.267, 445.245, 85.4, 0.2288" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "202.996, 431.466, 41.72, 0.483", "202.792, 431.097, 42.56, 0.305", "201.692, 430.803, 42.56, 0.2642", "200.592, 430.508, 42.56, 0.2288", "199.534, 430.258, 42.56, 0.2288", "198.39, 430.258, 42.56, 0.2288", "197.246, 430.258, 42.56, 0.2288", "196.102, 430.258, 42.56, 0.2288", "195.033, 429.983, 42.56, 0.2288", "194.02, 429.526, 42.8123, 0.2288", "192.901, 429.357, 42.84, 0.2288", "191.822, 429.126, 43.346, 0.2288", "190.86, 428.556, 43.4, 0.2288", "190.071, 427.923, 43.4, 0.2288", "189.093, 427.372, 43.6545, 0.2288", "188.061, 427.053, 44.263, 0.2288", "186.946, 426.943, 44.7922, 0.2288", "185.803, 426.941, 44.7871, 0.2288", "184.666, 426.941, 44.5284, 0.2288", "183.522, 426.941, 44.52, 0.2288", "182.39, 426.858, 44.5396, 0.2288", "181.507, 426.826, 46.0292, 0.2288", "180.393, 426.826, 46.48, 0.2288", "179.249, 426.826, 46.48, 0.2288", "178.12, 426.884, 46.2, 0.2288", "176.984, 426.992, 46.2115, 0.2288", "175.897, 427.277, 46.4713, 0.2288", "174.759, 427.336, 46.48, 0.2288", "173.66, 427.627, 46.48, 0.2288", "172.516, 427.627, 46.48, 0.2288", "171.377, 427.711, 46.48, 0.2288", "170.266, 427.948, 46.48, 0.2288", "169.164, 428.199, 46.48, 0.2288", "168.077, 428.199, 47.1419, 0.2288", "167.066, 428.199, 47.88, 0.2288", "165.937, 428.37, 47.88, 0.2288", "164.807, 428.542, 47.88, 0.2288", "163.663, 428.542, 47.88, 0.2288", "162.538, 428.542, 48.2782, 0.2288", "161.624, 428.542, 49.6958, 0.2288", "160.488, 428.542, 49.84, 0.2288", "159.344, 428.542, 49.84, 0.2288", "158.208, 428.574, 49.8436, 0.2288", "157.364, 429.178, 50.12, 0.305" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "202.996, 431.466, 41.72, 0.483", "202.831, 431.059, 41.72, 0.4068" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "157.364, 429.178, 50.12, 0.305", "156.841, 429.603, 50.7819, 0.305", "156.018, 430.272, 51.826, 0.305", "155.171, 430.936, 52.36, 0.2288", "154.676, 431.901, 52.36, 0.2288", "153.873, 432.506, 51.8, 0.2288", "153.109, 433.309, 51.8, 0.2288", "152.11, 433.845, 51.8, 0.2288", "151.083, 434.336, 51.8, 0.2288", "150.256, 435.098, 51.8, 0.2288", "149.635, 435.917, 52.101, 0.2288", "149.03, 436.327, 53.48, 0.2288", "148.301, 437.008, 53.48, 0.2288", "147.162, 437.085, 53.48, 0.2288", "146.02, 437.122, 53.48, 0.2288", "144.883, 437.209, 53.48, 0.2288", "143.752, 437.351, 53.48, 0.2288", "142.608, 437.351, 53.48, 0.2288", "141.507, 437.122, 53.48, 0.2288", "140.363, 437.122, 53.48, 0.2288", "139.219, 437.122, 53.48, 0.2288", "138.075, 437.132, 53.48, 0.2288", "137.01, 437.498, 53.48, 0.2288", "136.082, 438.16, 53.48, 0.2288", "135.157, 438.82, 53.48, 0.2288", "134.139, 439.279, 53.48, 0.2288", "133.162, 439.702, 53.48, 0.2288", "132.246, 440.326, 53.48, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "157.364, 429.178, 50.12, 0.305", "157.071, 429.458, 50.12, 0.2796" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_63", "dend_29", "dend_0", "dend_79", "dend_64", "dend_48", "dend_30", "dend_8", "dend_1", "dend_81", "dend_80", "dend_66", "dend_65", "dend_54", "dend_49", "dend_37", "dend_31", "dend_24", "dend_9", "dend_3", "dend_2", "dend_83", "dend_82", "dend_70", "dend_67", "dend_56", "dend_55", "dend_51", "dend_50", "dend_41", "dend_38", "dend_36", "dend_33", "dend_32", "dend_26", "dend_25", "dend_19", "dend_10", "dend_7", "dend_4", "dend_76", "dend_71", "dend_69", "dend_68", "dend_58", "dend_57", "dend_53", "dend_52", "dend_47", "dend_42", "dend_40", "dend_39", "dend_35", "dend_34", "dend_28", "dend_27", "dend_21", "dend_20", "dend_12", "dend_11", "dend_6", "dend_5", "dend_78", "dend_77", "dend_73", "dend_72", "dend_62", "dend_59", "dend_44", "dend_43", "dend_23", "dend_22", "dend_14", "dend_13", "dend_75", "dend_74", "dend_61", "dend_60", "dend_46", "dend_45", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_993",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_80", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_62", "dend_59", "dend_59", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.47"
  }, {
    "group" : "axon",
    "value" : "2.47"
  }, {
    "group" : "dend",
    "value" : "2.47"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "99.299995"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.188557E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.048122797",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.095564E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.19128115",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.25341988",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.331664E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.5834923E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.137712E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "9.3179574E-4",
    "erev" : "-80.31951"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.384268E-4",
    "erev" : "-80.31951"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "3.0375506E-6",
    "erev" : "-80.31951"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "7.73512E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0033482937",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472299363

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_63, id: dend_63, parent: soma_0
create dend_63
public dend_63
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_79, id: dend_79, parent: dend_63
create dend_79
public dend_79
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_48, id: dend_48, parent: dend_29
create dend_48
public dend_48
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_37, id: dend_37, parent: dend_30
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_8
create dend_24
public dend_24
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_70, id: dend_70, parent: dend_66
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_31
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_76, id: dend_76, parent: dend_70
create dend_76
public dend_76
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_63, dend_29, dend_0, dend_79, dend_64, dend_48, dend_30, dend_8, dend_1, dend_81, dend_80, dend_66, dend_65, dend_54, dend_49, dend_37, dend_31, dend_24, dend_9, dend_3, dend_2, dend_83, dend_82, dend_70, dend_67, dend_56, dend_55, dend_51, dend_50, dend_41, dend_38, dend_36, dend_33, dend_32, dend_26, dend_25, dend_19, dend_10, dend_7, dend_4, dend_76, dend_71, dend_69, dend_68, dend_58, dend_57, dend_53, dend_52, dend_47, dend_42, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_21, dend_20, dend_12, dend_11, dend_6, dend_5, dend_78, dend_77, dend_73, dend_72, dend_62, dend_59, dend_44, dend_43, dend_23, dend_22, dend_14, dend_13, dend_75, dend_74, dend_61, dend_60, dend_46, dend_45, dend_16, dend_15, dend_18, dend_17]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_993, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_993
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_62, dend_59, dend_59, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.500042311923499)
    connect dend_63(0), soma_0(0.500042311923499)
    connect dend_29(0), soma_0(0.500042311923499)
    connect dend_0(0), soma_0(0.500042311923499)
    connect axon_1(0), axon_0(1.0)
    connect dend_79(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_48(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_37(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_70(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_31(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_76(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 438.421, 343.314, 48.72, 11.8176 ) }
    soma_0 { pt3dadd( 444.33, 343.314, 48.72, 11.8176 ) }
    soma_0 { pt3dadd( 450.238, 343.314, 48.72, 11.8176 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 444.329, 343.314, 48.72, 1.0 ) }
    axon_0 { pt3dadd( 450.171, 357.13, 48.72, 1.0 ) }
    axon_0 { pt3dadd( 456.012, 370.946, 48.72, 1.0 ) }
    // Section: dend_63, id: dend_63, parent: soma_0 (entry count 6/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 439.696, 343.971, 47.5558, 0.368 ) }
    dend_63 { pt3dadd( 438.621, 343.764, 47.0268, 0.3744 ) }
    dend_63 { pt3dadd( 437.516, 343.552, 46.5912, 0.4002 ) }
    dend_63 { pt3dadd( 436.379, 343.54, 46.5934, 0.4842 ) }
    dend_63 { pt3dadd( 435.503, 342.951, 47.1125, 0.5282 ) }
    dend_63 { pt3dadd( 434.578, 342.294, 47.2511, 0.5746 ) }
    dend_63 { pt3dadd( 433.591, 341.99, 46.2311, 0.5848 ) }
    dend_63 { pt3dadd( 432.493, 341.943, 45.5473, 0.6058 ) }
    dend_63 { pt3dadd( 431.355, 341.942, 45.6576, 0.5888 ) }
    dend_63 { pt3dadd( 430.217, 341.94, 45.4759, 0.5198 ) }
    dend_63 { pt3dadd( 429.088, 341.932, 45.8506, 0.4432 ) }
    dend_63 { pt3dadd( 427.966, 341.881, 46.373, 0.3882 ) }
    dend_63 { pt3dadd( 426.868, 341.593, 46.2829, 0.4256 ) }
    dend_63 { pt3dadd( 425.82, 341.26, 45.5434, 0.4992 ) }
    dend_63 { pt3dadd( 424.768, 340.951, 44.742, 0.621 ) }
    dend_63 { pt3dadd( 423.678, 340.642, 44.3643, 0.6582 ) }
    dend_63 { pt3dadd( 422.559, 340.625, 44.8148, 0.661 ) }
    dend_63 { pt3dadd( 421.467, 340.894, 45.2892, 0.5674 ) }
    dend_63 { pt3dadd( 420.387, 341.256, 45.1676, 0.5828 ) }
    dend_63 { pt3dadd( 419.385, 341.736, 44.5066, 0.6558 ) }
    dend_63 { pt3dadd( 418.345, 342.193, 44.2526, 0.8528 ) }
    dend_63 { pt3dadd( 417.243, 341.936, 44.24, 0.9124 ) }
    dend_63 { pt3dadd( 416.129, 341.681, 44.2394, 0.867 ) }
    dend_63 { pt3dadd( 415.018, 341.931, 44.2366, 0.718 ) }
    dend_63 { pt3dadd( 413.915, 342.233, 44.2196, 0.6874 ) }
    dend_63 { pt3dadd( 412.911, 342.777, 44.1291, 0.6616 ) }
    dend_63 { pt3dadd( 411.825, 343.042, 43.5394, 0.6112 ) }
    dend_63 { pt3dadd( 410.844, 343.616, 43.2715, 0.4844 ) }
    dend_63 { pt3dadd( 409.786, 343.978, 43.8704, 0.4068 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 35/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 449.026, 345.482, 47.9732, 0.5086 ) }
    dend_29 { pt3dadd( 449.854, 345.082, 49.5592, 0.4834 ) }
    dend_29 { pt3dadd( 450.812, 344.66, 50.6853, 0.5334 ) }
    dend_29 { pt3dadd( 451.853, 344.313, 51.4872, 0.61 ) }
    dend_29 { pt3dadd( 452.906, 344.028, 52.3219, 0.5848 ) }
    dend_29 { pt3dadd( 453.31, 344.131, 52.7836, 0.499 ) }
    dend_29 { pt3dadd( 454.198, 344.815, 52.5143, 0.459 ) }
    dend_29 { pt3dadd( 454.75, 345.803, 52.183, 0.4332 ) }
    dend_29 { pt3dadd( 454.966, 346.903, 52.6845, 0.457 ) }
    dend_29 { pt3dadd( 455.34, 347.983, 52.8293, 0.508 ) }
    dend_29 { pt3dadd( 455.664, 349.042, 52.1399, 0.5592 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 46/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 440.788, 346.507, 45.5602, 0.5338 ) }
    dend_0 { pt3dadd( 439.797, 347.046, 45.3653, 0.5548 ) }
    dend_0 { pt3dadd( 438.687, 346.951, 45.3337, 0.5806 ) }
    dend_0 { pt3dadd( 437.556, 346.801, 45.1556, 0.6068 ) }
    dend_0 { pt3dadd( 436.799, 347.408, 43.9648, 0.6564 ) }
    dend_0 { pt3dadd( 436.91, 348.462, 43.1648, 0.7342 ) }
    dend_0 { pt3dadd( 436.641, 349.568, 43.2191, 0.6624 ) }
    dend_0 { pt3dadd( 436.018, 350.509, 43.6615, 0.5098 ) }
    dend_0 { pt3dadd( 435.329, 351.42, 43.8164, 0.2288 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 456.012, 370.946, 48.72, 1.0 ) }
    axon_1 { pt3dadd( 461.853, 384.762, 48.72, 1.0 ) }
    axon_1 { pt3dadd( 467.695, 398.578, 48.72, 1.0 ) }
    // Section: dend_79, id: dend_79, parent: dend_63 (entry count 58/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 409.786, 343.978, 43.8704, 0.4068 ) }
    dend_79 { pt3dadd( 409.496, 343.987, 44.2607, 0.4176 ) }
    dend_79 { pt3dadd( 408.78, 344.123, 43.5856, 0.6694 ) }
    dend_79 { pt3dadd( 407.829, 344.517, 43.9796, 0.5232 ) }
    dend_79 { pt3dadd( 407.316, 345.49, 44.4203, 0.5644 ) }
    dend_79 { pt3dadd( 406.354, 345.942, 43.974, 0.431 ) }
    dend_79 { pt3dadd( 405.42, 345.84, 43.7074, 0.6356 ) }
    dend_79 { pt3dadd( 404.851, 346.379, 45.199, 0.6216 ) }
    dend_79 { pt3dadd( 403.757, 346.599, 45.2385, 0.8898 ) }
    dend_79 { pt3dadd( 402.717, 346.746, 45.3746, 0.2368 ) }
    dend_79 { pt3dadd( 401.887, 346.793, 46.3403, 0.483 ) }
    dend_79 { pt3dadd( 401.117, 347.535, 46.5091, 0.3224 ) }
    dend_79 { pt3dadd( 400.257, 348.245, 46.7029, 0.26 ) }
    dend_79 { pt3dadd( 399.664, 349.182, 46.76, 0.305 ) }
    dend_79 { pt3dadd( 398.904, 349.897, 47.0649, 0.3458 ) }
    dend_79 { pt3dadd( 398.266, 350.186, 48.72, 0.2288 ) }
    dend_79 { pt3dadd( 398.081, 350.637, 46.9364, 0.2514 ) }
    dend_79 { pt3dadd( 398.443, 351.348, 47.7988, 0.3548 ) }
    dend_79 { pt3dadd( 397.659, 351.899, 47.32, 0.432 ) }
    dend_79 { pt3dadd( 396.875, 352.32, 48.3888, 0.675 ) }
    dend_79 { pt3dadd( 396.014, 352.941, 49.2565, 0.5358 ) }
    dend_79 { pt3dadd( 395.243, 353.39, 49.9702, 0.4676 ) }
    dend_79 { pt3dadd( 394.706, 353.965, 48.7833, 0.517 ) }
    dend_79 { pt3dadd( 393.993, 354.681, 48.5741, 0.3544 ) }
    dend_79 { pt3dadd( 393.65, 355.098, 49.4161, 0.382 ) }
    dend_79 { pt3dadd( 393.432, 355.668, 50.68, 0.2288 ) }
    dend_79 { pt3dadd( 392.29, 355.67, 50.6027, 0.2288 ) }
    dend_79 { pt3dadd( 391.227, 355.959, 50.4, 0.2288 ) }
    dend_79 { pt3dadd( 390.335, 356.554, 50.2589, 0.2288 ) }
    dend_79 { pt3dadd( 389.635, 357.432, 50.12, 0.3006 ) }
    dend_79 { pt3dadd( 388.932, 358.109, 49.56, 0.3192 ) }
    dend_79 { pt3dadd( 388.502, 359.088, 49.56, 0.2828 ) }
    dend_79 { pt3dadd( 388.048, 360.014, 49.7165, 0.3386 ) }
    dend_79 { pt3dadd( 387.07, 360.592, 49.84, 0.2288 ) }
    dend_79 { pt3dadd( 386.206, 361.046, 50.3899, 0.246 ) }
    dend_79 { pt3dadd( 385.137, 361.316, 50.419, 0.52 ) }
    dend_79 { pt3dadd( 384.1, 361.541, 50.545, 0.535 ) }
    dend_79 { pt3dadd( 383.312, 362.156, 50.7822, 0.5062 ) }
    dend_79 { pt3dadd( 382.448, 362.879, 50.4608, 0.7976 ) }
    dend_79 { pt3dadd( 381.608, 363.628, 50.7343, 0.8242 ) }
    dend_79 { pt3dadd( 380.785, 364.238, 51.0527, 0.6864 ) }
    dend_79 { pt3dadd( 379.855, 364.76, 51.2277, 0.615 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_79 { pt3dadd( 378.913, 364.834, 52.1954, 0.517 ) }
    dend_79 { pt3dadd( 377.977, 365.263, 52.64, 0.4812 ) }
    dend_79 { pt3dadd( 376.995, 365.811, 52.7691, 0.3242 ) }
    dend_79 { pt3dadd( 375.987, 366.255, 53.2787, 0.297 ) }
    dend_79 { pt3dadd( 374.917, 366.535, 53.4615, 0.3354 ) }
    dend_79 { pt3dadd( 374.0, 367.087, 53.886, 0.3738 ) }
    dend_79 { pt3dadd( 373.095, 367.648, 54.8587, 0.2484 ) }
    dend_79 { pt3dadd( 372.163, 368.055, 54.04, 0.6588 ) }
    dend_79 { pt3dadd( 371.349, 368.603, 54.5493, 0.356 ) }
    dend_79 { pt3dadd( 370.483, 369.074, 53.5618, 0.2628 ) }
    dend_79 { pt3dadd( 369.639, 369.803, 53.48, 0.3512 ) }
    dend_79 { pt3dadd( 368.887, 370.57, 53.8233, 0.483 ) }
    dend_79 { pt3dadd( 368.023, 371.27, 54.168, 0.4434 ) }
    dend_79 { pt3dadd( 367.451, 372.147, 54.3234, 0.5336 ) }
    dend_79 { pt3dadd( 366.728, 372.729, 53.8082, 0.5138 ) }
    dend_79 { pt3dadd( 365.833, 373.261, 54.1923, 0.6368 ) }
    dend_79 { pt3dadd( 364.884, 373.173, 54.735, 0.4332 ) }
    dend_79 { pt3dadd( 363.893, 373.287, 55.6998, 0.2378 ) }
    dend_79 { pt3dadd( 362.915, 373.569, 54.9354, 0.5084 ) }
    dend_79 { pt3dadd( 361.991, 374.069, 55.9793, 0.583 ) }
    dend_79 { pt3dadd( 361.171, 374.725, 56.6908, 0.2716 ) }
    dend_79 { pt3dadd( 360.233, 375.264, 56.6532, 0.5756 ) }
    dend_79 { pt3dadd( 359.368, 375.881, 56.84, 0.4322 ) }
    dend_79 { pt3dadd( 359.152, 376.036, 57.2026, 0.289 ) }
    dend_79 { pt3dadd( 358.277, 376.638, 57.5327, 0.2288 ) }
    dend_79 { pt3dadd( 357.397, 377.321, 58.1392, 0.2288 ) }
    dend_79 { pt3dadd( 356.676, 378.131, 58.574, 0.2288 ) }
    dend_79 { pt3dadd( 355.871, 378.823, 59.08, 0.2288 ) }
    dend_79 { pt3dadd( 355.137, 379.67, 59.1391, 0.2288 ) }
    dend_79 { pt3dadd( 354.342, 380.462, 59.0951, 0.2288 ) }
    dend_79 { pt3dadd( 353.652, 381.322, 58.8742, 0.2288 ) }
    dend_79 { pt3dadd( 352.988, 382.201, 59.0839, 0.2604 ) }
    dend_79 { pt3dadd( 352.139, 382.771, 59.1657, 0.2886 ) }
    dend_79 { pt3dadd( 351.75, 383.782, 59.5997, 0.3426 ) }
    dend_79 { pt3dadd( 351.251, 384.767, 59.92, 0.2374 ) }
    dend_79 { pt3dadd( 350.573, 385.436, 59.92, 0.2288 ) }
    dend_79 { pt3dadd( 349.701, 386.108, 60.0062, 0.2288 ) }
    dend_79 { pt3dadd( 348.965, 386.935, 60.48, 0.2288 ) }
    dend_79 { pt3dadd( 348.355, 387.517, 61.5885, 0.2288 ) }
    dend_79 { pt3dadd( 347.776, 388.138, 62.16, 0.2288 ) }
    dend_79 { pt3dadd( 347.16, 389.038, 62.16, 0.2288 ) }
    dend_79 { pt3dadd( 346.423, 389.754, 62.16, 0.2288 ) }
    dend_79 { pt3dadd( 345.615, 390.345, 63.0, 0.4068 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 43/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 409.786, 343.978, 43.8704, 0.4068 ) }
    dend_64 { pt3dadd( 408.936, 344.194, 43.6243, 0.5078 ) }
    dend_64 { pt3dadd( 407.841, 344.407, 43.0447, 0.5338 ) }
    dend_64 { pt3dadd( 406.88, 344.894, 42.1873, 0.5758 ) }
    dend_64 { pt3dadd( 405.792, 345.121, 41.7133, 0.499 ) }
    dend_64 { pt3dadd( 404.658, 345.146, 41.9465, 0.483 ) }
    dend_64 { pt3dadd( 403.515, 345.151, 42.0, 0.4184 ) }
    dend_64 { pt3dadd( 402.372, 345.184, 42.0, 0.4498 ) }
    dend_64 { pt3dadd( 401.255, 345.416, 42.0, 0.501 ) }
    dend_64 { pt3dadd( 400.273, 345.987, 42.0, 0.5958 ) }
    dend_64 { pt3dadd( 399.309, 346.602, 41.9994, 0.632 ) }
    dend_64 { pt3dadd( 398.256, 347.043, 41.998, 0.6356 ) }
    dend_64 { pt3dadd( 397.178, 347.427, 41.9866, 0.6356 ) }
    dend_64 { pt3dadd( 396.088, 347.771, 41.9152, 0.68 ) }
    dend_64 { pt3dadd( 394.973, 347.914, 41.4529, 0.7312 ) }
    dend_64 { pt3dadd( 393.859, 348.128, 41.6674, 0.7604 ) }
    dend_64 { pt3dadd( 392.823, 348.605, 41.7522, 0.7392 ) }
    dend_64 { pt3dadd( 391.841, 349.113, 41.0715, 0.6902 ) }
    dend_64 { pt3dadd( 390.851, 349.672, 40.7588, 0.5922 ) }
    dend_64 { pt3dadd( 389.907, 350.273, 40.1904, 0.5132 ) }
    dend_64 { pt3dadd( 388.944, 350.869, 39.8238, 0.4606 ) }
    dend_64 { pt3dadd( 387.831, 351.08, 40.089, 0.4576 ) }
    dend_64 { pt3dadd( 386.689, 351.051, 40.0369, 0.482 ) }
    dend_64 { pt3dadd( 385.616, 350.778, 40.1766, 0.5164 ) }
    dend_64 { pt3dadd( 384.759, 350.221, 38.9827, 0.5644 ) }
    dend_64 { pt3dadd( 383.786, 349.937, 37.7902, 0.5908 ) }
    dend_64 { pt3dadd( 382.697, 349.61, 37.6169, 0.604 ) }
    dend_64 { pt3dadd( 381.62, 349.262, 37.9476, 0.5784 ) }
    dend_64 { pt3dadd( 380.577, 348.886, 38.3692, 0.5658 ) }
    dend_64 { pt3dadd( 379.465, 348.687, 37.9425, 0.6056 ) }
    dend_64 { pt3dadd( 378.376, 348.664, 37.5214, 0.6896 ) }
    dend_64 { pt3dadd( 377.329, 349.124, 37.5192, 0.777 ) }
    dend_64 { pt3dadd( 376.312, 349.65, 37.5152, 0.821 ) }
    dend_64 { pt3dadd( 375.309, 350.197, 37.4951, 0.8242 ) }
    dend_64 { pt3dadd( 374.355, 350.823, 37.4072, 0.7656 ) }
    dend_64 { pt3dadd( 373.459, 351.509, 37.0616, 0.6818 ) }
    dend_64 { pt3dadd( 372.514, 352.1, 36.4728, 0.5874 ) }
    dend_64 { pt3dadd( 371.52, 352.636, 36.1068, 0.5182 ) }
    dend_64 { pt3dadd( 370.45, 352.977, 35.6768, 0.4748 ) }
    dend_64 { pt3dadd( 369.471, 353.417, 35.4841, 0.4666 ) }
    dend_64 { pt3dadd( 368.943, 354.401, 35.2789, 0.4928 ) }
    dend_64 { pt3dadd( 368.615, 355.495, 35.273, 0.5386 ) }
    dend_64 { pt3dadd( 368.085, 356.493, 35.2453, 0.615 ) }
    dend_64 { pt3dadd( 367.31, 357.326, 35.1344, 0.6914 ) }
    dend_64 { pt3dadd( 366.387, 357.948, 34.7108, 0.7268 ) }
    dend_64 { pt3dadd( 365.422, 358.498, 34.2048, 0.6912 ) }
    dend_64 { pt3dadd( 364.557, 359.241, 34.0822, 0.6298 ) }
    dend_64 { pt3dadd( 363.734, 360.012, 33.7271, 0.5848 ) }
    dend_64 { pt3dadd( 362.805, 360.609, 33.1859, 0.5738 ) }
    dend_64 { pt3dadd( 361.767, 361.075, 32.9428, 0.5592 ) }
    dend_64 { pt3dadd( 360.834, 361.685, 32.5102, 0.5364 ) }
    dend_64 { pt3dadd( 360.033, 362.463, 32.0096, 0.4968 ) }
    dend_64 { pt3dadd( 359.32, 363.353, 31.9197, 0.4714 ) }
    dend_64 { pt3dadd( 358.611, 364.246, 31.9186, 0.4692 ) }
    dend_64 { pt3dadd( 357.815, 365.068, 31.9141, 0.5064 ) }
    dend_64 { pt3dadd( 356.987, 365.857, 31.8954, 0.5574 ) }
    dend_64 { pt3dadd( 356.1, 366.573, 31.7962, 0.5964 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_64 { pt3dadd( 355.186, 367.219, 31.3211, 0.5984 ) }
    dend_64 { pt3dadd( 354.282, 367.876, 30.8512, 0.5724 ) }
    dend_64 { pt3dadd( 353.407, 368.607, 30.8048, 0.5344 ) }
    dend_64 { pt3dadd( 352.62, 369.435, 30.819, 0.5084 ) }
    dend_64 { pt3dadd( 351.917, 370.335, 30.9014, 0.496 ) }
    dend_64 { pt3dadd( 351.236, 371.223, 31.3452, 0.4704 ) }
    dend_64 { pt3dadd( 350.578, 372.126, 31.8234, 0.4062 ) }
    dend_64 { pt3dadd( 349.921, 373.047, 31.7475, 0.3032 ) }
    dend_64 { pt3dadd( 349.474, 374.088, 31.8626, 0.3336 ) }
    dend_64 { pt3dadd( 348.702, 374.827, 31.9138, 0.4576 ) }
    dend_64 { pt3dadd( 347.952, 375.67, 31.64, 0.4658 ) }
    dend_64 { pt3dadd( 347.259, 376.565, 31.6532, 0.5192 ) }
    dend_64 { pt3dadd( 346.611, 377.497, 31.4544, 0.4324 ) }
    dend_64 { pt3dadd( 346.098, 378.475, 31.9707, 0.3304 ) }
    dend_64 { pt3dadd( 345.556, 379.477, 31.92, 0.4412 ) }
    dend_64 { pt3dadd( 344.905, 380.34, 31.6711, 0.5566 ) }
    dend_64 { pt3dadd( 344.376, 381.125, 32.3204, 0.3834 ) }
    dend_64 { pt3dadd( 343.656, 381.914, 32.8644, 0.3976 ) }
    dend_64 { pt3dadd( 342.995, 382.794, 32.4232, 0.2828 ) }
    dend_64 { pt3dadd( 342.392, 383.723, 31.9668, 0.2288 ) }
    dend_64 { pt3dadd( 341.932, 384.732, 32.0673, 0.2288 ) }
    dend_64 { pt3dadd( 341.704, 385.716, 31.0901, 0.2288 ) }
    dend_64 { pt3dadd( 341.354, 386.558, 32.2, 0.2288 ) }
    dend_64 { pt3dadd( 341.141, 387.655, 32.2, 0.2288 ) }
    dend_64 { pt3dadd( 340.928, 388.741, 32.2, 0.2288 ) }
    dend_64 { pt3dadd( 340.613, 389.797, 32.2, 0.2288 ) }
    dend_64 { pt3dadd( 339.997, 390.639, 32.2, 0.2288 ) }
    dend_64 { pt3dadd( 339.672, 391.668, 32.2, 0.2288 ) }
    dend_64 { pt3dadd( 339.075, 392.409, 32.1317, 0.2618 ) }
    dend_64 { pt3dadd( 338.68, 393.33, 31.2497, 0.596 ) }
    dend_64 { pt3dadd( 338.276, 394.353, 30.961, 0.5716 ) }
    dend_64 { pt3dadd( 337.707, 395.289, 30.9336, 0.4358 ) }
    dend_64 { pt3dadd( 337.164, 396.243, 31.0764, 0.2826 ) }
    dend_64 { pt3dadd( 336.608, 397.228, 31.3583, 0.2292 ) }
    dend_64 { pt3dadd( 336.051, 397.983, 31.5109, 0.3754 ) }
    dend_64 { pt3dadd( 335.379, 398.816, 31.2141, 0.3644 ) }
    dend_64 { pt3dadd( 334.821, 399.702, 31.579, 0.604 ) }
    dend_64 { pt3dadd( 334.193, 400.453, 31.08, 0.564 ) }
    dend_64 { pt3dadd( 333.673, 401.351, 30.9529, 0.3648 ) }
    dend_64 { pt3dadd( 333.259, 402.402, 31.1136, 0.245 ) }
    dend_64 { pt3dadd( 332.876, 403.469, 31.2631, 0.2288 ) }
    dend_64 { pt3dadd( 332.364, 404.481, 31.08, 0.2288 ) }
    dend_64 { pt3dadd( 331.752, 405.438, 31.0836, 0.2288 ) }
    dend_64 { pt3dadd( 331.055, 405.951, 31.0979, 0.3262 ) }
    dend_64 { pt3dadd( 330.021, 406.234, 31.64, 0.4306 ) }
    dend_64 { pt3dadd( 329.074, 406.457, 30.8599, 0.2288 ) }
    dend_64 { pt3dadd( 328.78, 407.271, 31.2659, 0.3452 ) }
    dend_64 { pt3dadd( 328.099, 408.064, 31.36, 0.6862 ) }
    dend_64 { pt3dadd( 327.522, 408.755, 31.08, 0.3794 ) }
    dend_64 { pt3dadd( 326.672, 409.461, 31.596, 0.2288 ) }
    dend_64 { pt3dadd( 325.738, 410.101, 31.533, 0.2506 ) }
    dend_64 { pt3dadd( 324.751, 410.238, 31.9791, 0.4602 ) }
    dend_64 { pt3dadd( 323.645, 410.356, 32.2, 0.5256 ) }
    dend_64 { pt3dadd( 322.669, 410.782, 31.9973, 0.3304 ) }
    dend_64 { pt3dadd( 322.055, 411.039, 32.3971, 0.4322 ) }
    dend_64 { pt3dadd( 321.233, 411.54, 33.2293, 0.483 ) }
    dend_64 { pt3dadd( 321.108, 412.526, 32.7911, 0.4068 ) }
    // Section: dend_48, id: dend_48, parent: dend_29 (entry count 57/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 455.664, 349.042, 52.1399, 0.5592 ) }
    dend_48 { pt3dadd( 455.784, 349.602, 52.08, 0.9384 ) }
    dend_48 { pt3dadd( 456.27, 350.462, 52.3258, 0.7988 ) }
    dend_48 { pt3dadd( 457.02, 350.698, 53.9582, 0.6864 ) }
    dend_48 { pt3dadd( 457.688, 351.538, 54.5829, 0.5444 ) }
    dend_48 { pt3dadd( 458.368, 352.335, 54.7666, 0.6706 ) }
    dend_48 { pt3dadd( 459.341, 352.81, 54.88, 0.706 ) }
    dend_48 { pt3dadd( 460.017, 353.279, 55.645, 0.4236 ) }
    dend_48 { pt3dadd( 460.988, 353.821, 55.7267, 0.2342 ) }
    dend_48 { pt3dadd( 461.678, 354.701, 56.0, 0.2876 ) }
    dend_48 { pt3dadd( 462.251, 355.648, 56.0, 0.2796 ) }
    dend_48 { pt3dadd( 462.303, 356.539, 57.099, 0.5084 ) }
    dend_48 { pt3dadd( 462.661, 357.502, 57.7724, 0.3814 ) }
    dend_48 { pt3dadd( 463.346, 358.373, 58.24, 0.2988 ) }
    dend_48 { pt3dadd( 463.549, 359.483, 58.24, 0.2288 ) }
    dend_48 { pt3dadd( 463.963, 360.51, 58.4234, 0.3718 ) }
    dend_48 { pt3dadd( 464.324, 361.569, 58.2515, 0.4576 ) }
    dend_48 { pt3dadd( 464.743, 362.602, 58.24, 0.3632 ) }
    dend_48 { pt3dadd( 464.997, 363.705, 58.1994, 0.367 ) }
    dend_48 { pt3dadd( 465.378, 364.747, 58.2364, 0.4068 ) }
    dend_48 { pt3dadd( 466.066, 365.355, 57.4921, 0.4064 ) }
    dend_48 { pt3dadd( 466.306, 366.447, 57.5859, 0.3972 ) }
    dend_48 { pt3dadd( 466.582, 367.543, 57.6724, 0.426 ) }
    dend_48 { pt3dadd( 467.411, 368.104, 57.7128, 0.283 ) }
    dend_48 { pt3dadd( 467.896, 369.045, 58.4209, 0.6388 ) }
    dend_48 { pt3dadd( 468.195, 370.091, 58.431, 0.6864 ) }
    dend_48 { pt3dadd( 468.435, 371.107, 59.08, 0.6864 ) }
    dend_48 { pt3dadd( 468.926, 372.08, 59.0019, 0.6216 ) }
    dend_48 { pt3dadd( 469.334, 373.062, 59.4611, 0.5176 ) }
    dend_48 { pt3dadd( 469.913, 373.659, 58.52, 0.4416 ) }
    dend_48 { pt3dadd( 470.144, 374.659, 58.6057, 0.2288 ) }
    dend_48 { pt3dadd( 470.549, 375.362, 59.9953, 0.717 ) }
    dend_48 { pt3dadd( 470.753, 376.427, 59.9911, 0.667 ) }
    dend_48 { pt3dadd( 471.127, 377.499, 59.9752, 0.564 ) }
    dend_48 { pt3dadd( 471.482, 378.575, 59.92, 0.483 ) }
    dend_48 { pt3dadd( 472.058, 379.552, 60.1308, 0.4924 ) }
    dend_48 { pt3dadd( 472.471, 380.291, 61.5378, 0.4576 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 94/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 455.664, 349.042, 52.1399, 0.5592 ) }
    dend_30 { pt3dadd( 455.714, 349.568, 52.1122, 0.6886 ) }
    dend_30 { pt3dadd( 455.776, 350.708, 52.0792, 0.777 ) }
    dend_30 { pt3dadd( 455.822, 351.851, 52.0744, 0.6946 ) }
    dend_30 { pt3dadd( 456.14, 352.946, 52.0145, 0.6174 ) }
    dend_30 { pt3dadd( 456.137, 354.068, 51.5595, 0.5868 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_30 { pt3dadd( 455.841, 355.156, 51.1202, 0.5848 ) }
    dend_30 { pt3dadd( 455.776, 356.268, 51.669, 0.6804 ) }
    dend_30 { pt3dadd( 455.795, 357.404, 51.4105, 0.7108 ) }
    dend_30 { pt3dadd( 455.961, 358.515, 50.8822, 0.687 ) }
    dend_30 { pt3dadd( 456.384, 359.539, 50.1956, 0.5592 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 5/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 435.329, 351.42, 43.8164, 0.2288 ) }
    dend_8 { pt3dadd( 435.124, 351.618, 43.9589, 0.3584 ) }
    dend_8 { pt3dadd( 434.314, 352.419, 44.1465, 0.4322 ) }
    dend_8 { pt3dadd( 433.519, 353.231, 43.8679, 0.4762 ) }
    dend_8 { pt3dadd( 432.803, 354.054, 43.0489, 0.5274 ) }
    dend_8 { pt3dadd( 432.32, 355.034, 42.2528, 0.601 ) }
    dend_8 { pt3dadd( 431.73, 356.005, 42.0176, 0.6328 ) }
    dend_8 { pt3dadd( 431.153, 356.991, 41.9972, 0.613 ) }
    dend_8 { pt3dadd( 430.528, 357.95, 41.9854, 0.5876 ) }
    dend_8 { pt3dadd( 429.747, 358.782, 41.9423, 0.6074 ) }
    dend_8 { pt3dadd( 428.904, 359.552, 41.7735, 0.6558 ) }
    dend_8 { pt3dadd( 427.988, 360.183, 41.1502, 0.661 ) }
    dend_8 { pt3dadd( 427.109, 360.91, 41.1132, 0.6382 ) }
    dend_8 { pt3dadd( 426.204, 361.559, 41.718, 0.6124 ) }
    dend_8 { pt3dadd( 425.398, 362.364, 41.7614, 0.5636 ) }
    dend_8 { pt3dadd( 424.806, 363.301, 41.1138, 0.5126 ) }
    dend_8 { pt3dadd( 424.209, 364.272, 40.9503, 0.4848 ) }
    dend_8 { pt3dadd( 423.441, 365.113, 41.1438, 0.601 ) }
    dend_8 { pt3dadd( 422.665, 365.897, 41.8757, 0.7528 ) }
    dend_8 { pt3dadd( 421.865, 366.709, 41.9961, 0.9058 ) }
    dend_8 { pt3dadd( 421.078, 367.54, 42.0028, 0.9628 ) }
    dend_8 { pt3dadd( 420.392, 368.455, 42.0137, 0.9422 ) }
    dend_8 { pt3dadd( 419.668, 369.34, 42.0616, 0.8928 ) }
    dend_8 { pt3dadd( 418.866, 370.153, 42.2573, 0.7938 ) }
    dend_8 { pt3dadd( 418.094, 370.936, 43.0046, 0.788 ) }
    dend_8 { pt3dadd( 417.307, 371.763, 43.1127, 0.7394 ) }
    dend_8 { pt3dadd( 416.601, 372.664, 43.101, 0.7614 ) }
    dend_8 { pt3dadd( 415.711, 373.378, 43.01, 0.6892 ) }
    dend_8 { pt3dadd( 414.818, 374.062, 42.5085, 0.7112 ) }
    dend_8 { pt3dadd( 414.111, 374.937, 42.009, 0.6868 ) }
    dend_8 { pt3dadd( 413.5, 375.904, 42.0003, 0.7864 ) }
    dend_8 { pt3dadd( 412.919, 376.89, 42.0014, 0.8134 ) }
    dend_8 { pt3dadd( 412.174, 377.757, 42.0056, 0.864 ) }
    dend_8 { pt3dadd( 411.367, 378.568, 42.0204, 0.789 ) }
    dend_8 { pt3dadd( 410.562, 379.381, 42.0829, 0.6876 ) }
    dend_8 { pt3dadd( 409.773, 380.202, 42.3548, 0.5858 ) }
    dend_8 { pt3dadd( 409.083, 380.949, 43.6271, 0.5348 ) }
    dend_8 { pt3dadd( 408.201, 381.634, 44.2327, 0.6376 ) }
    dend_8 { pt3dadd( 407.281, 382.312, 44.2397, 0.7404 ) }
    dend_8 { pt3dadd( 406.6, 383.231, 44.2389, 0.8904 ) }
    dend_8 { pt3dadd( 405.947, 384.171, 44.2341, 0.9168 ) }
    dend_8 { pt3dadd( 405.352, 385.148, 44.2086, 0.9644 ) }
    dend_8 { pt3dadd( 404.89, 386.19, 44.0527, 0.914 ) }
    dend_8 { pt3dadd( 404.565, 387.238, 43.2701, 0.887 ) }
    dend_8 { pt3dadd( 404.428, 388.269, 42.1498, 0.839 ) }
    dend_8 { pt3dadd( 404.104, 389.362, 42.2576, 0.8372 ) }
    dend_8 { pt3dadd( 403.764, 390.415, 42.9573, 0.8116 ) }
    dend_8 { pt3dadd( 403.426, 391.502, 43.23, 0.7836 ) }
    dend_8 { pt3dadd( 403.045, 392.574, 43.4627, 0.7372 ) }
    dend_8 { pt3dadd( 402.648, 393.639, 43.1494, 0.7372 ) }
    dend_8 { pt3dadd( 402.193, 394.687, 43.12, 0.7426 ) }
    dend_8 { pt3dadd( 401.633, 395.684, 43.12, 0.788 ) }
    dend_8 { pt3dadd( 401.064, 396.674, 43.1197, 0.785 ) }
    dend_8 { pt3dadd( 400.351, 397.569, 43.1186, 0.7564 ) }
    dend_8 { pt3dadd( 399.686, 398.499, 43.113, 0.7054 ) }
    dend_8 { pt3dadd( 398.947, 399.371, 43.0836, 0.6578 ) }
    dend_8 { pt3dadd( 398.155, 400.184, 42.8677, 0.632 ) }
    dend_8 { pt3dadd( 397.314, 400.885, 42.1498, 0.6136 ) }
    dend_8 { pt3dadd( 396.605, 401.782, 42.0168, 0.6356 ) }
    dend_8 { pt3dadd( 395.786, 402.579, 42.0613, 0.6862 ) }
    dend_8 { pt3dadd( 394.933, 403.339, 42.2355, 0.7624 ) }
    dend_8 { pt3dadd( 393.98, 403.92, 42.8554, 0.839 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 435.329, 351.42, 43.8164, 0.2288 ) }
    dend_1 { pt3dadd( 435.249, 351.662, 43.2578, 0.3722 ) }
    dend_1 { pt3dadd( 435.548, 352.291, 41.7962, 0.588 ) }
    dend_1 { pt3dadd( 436.605, 352.474, 41.0712, 0.5082 ) }
    dend_1 { pt3dadd( 437.648, 352.135, 40.7005, 0.483 ) }
    dend_1 { pt3dadd( 438.579, 351.7, 39.7194, 0.5404 ) }
    dend_1 { pt3dadd( 439.489, 351.675, 38.1192, 0.5848 ) }
    dend_1 { pt3dadd( 439.814, 352.362, 36.8015, 0.6184 ) }
    dend_1 { pt3dadd( 439.52, 353.43, 36.4109, 0.6178 ) }
    dend_1 { pt3dadd( 439.507, 354.547, 36.3404, 0.6286 ) }
    dend_1 { pt3dadd( 440.003, 355.545, 36.0923, 0.5988 ) }
    dend_1 { pt3dadd( 440.639, 356.469, 35.5617, 0.5848 ) }
    dend_1 { pt3dadd( 441.359, 357.347, 35.4024, 0.6036 ) }
    dend_1 { pt3dadd( 441.971, 358.294, 35.7602, 0.686 ) }
    dend_1 { pt3dadd( 442.146, 359.382, 35.5127, 0.7726 ) }
    dend_1 { pt3dadd( 441.703, 360.371, 34.8634, 0.7672 ) }
    dend_1 { pt3dadd( 441.272, 361.409, 34.3675, 0.6786 ) }
    dend_1 { pt3dadd( 441.273, 362.535, 34.3255, 0.552 ) }
    dend_1 { pt3dadd( 442.005, 363.352, 34.0004, 0.5572 ) }
    dend_1 { pt3dadd( 443.057, 363.519, 33.1033, 0.6066 ) }
    dend_1 { pt3dadd( 443.891, 364.025, 31.68, 0.7114 ) }
    dend_1 { pt3dadd( 444.219, 365.066, 30.8552, 0.737 ) }
    dend_1 { pt3dadd( 444.29, 366.207, 30.7664, 0.7106 ) }
    dend_1 { pt3dadd( 444.038, 367.32, 30.576, 0.6356 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 91/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 345.615, 390.345, 63.0, 0.4068 ) }
    dend_81 { pt3dadd( 345.339, 390.334, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 344.652, 391.203, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 344.527, 392.322, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 344.064, 393.358, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 343.777, 394.463, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 343.184, 395.433, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 342.236, 396.044, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 341.573, 396.935, 63.84, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_81 { pt3dadd( 340.938, 397.87, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 340.188, 398.71, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 339.632, 399.702, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 338.685, 400.282, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 337.879, 401.072, 63.84, 0.2288 ) }
    dend_81 { pt3dadd( 337.16, 401.888, 63.9534, 0.2288 ) }
    dend_81 { pt3dadd( 336.555, 402.734, 64.4, 0.2288 ) }
    dend_81 { pt3dadd( 335.59, 403.193, 64.68, 0.2288 ) }
    dend_81 { pt3dadd( 334.639, 403.822, 64.68, 0.2288 ) }
    dend_81 { pt3dadd( 333.786, 404.521, 64.939, 0.2288 ) }
    dend_81 { pt3dadd( 332.946, 405.205, 65.744, 0.2288 ) }
    dend_81 { pt3dadd( 332.118, 405.963, 66.08, 0.2288 ) }
    dend_81 { pt3dadd( 331.141, 406.554, 66.08, 0.2288 ) }
    dend_81 { pt3dadd( 330.253, 407.154, 66.1648, 0.2288 ) }
    dend_81 { pt3dadd( 329.444, 407.797, 67.1726, 0.2288 ) }
    dend_81 { pt3dadd( 328.505, 408.449, 67.2, 0.2288 ) }
    dend_81 { pt3dadd( 327.672, 409.228, 67.2, 0.2288 ) }
    dend_81 { pt3dadd( 326.884, 410.038, 67.2, 0.2288 ) }
    dend_81 { pt3dadd( 325.99, 410.747, 67.2, 0.2288 ) }
    dend_81 { pt3dadd( 325.246, 411.551, 67.2, 0.2406 ) }
    dend_81 { pt3dadd( 324.674, 412.126, 68.2909, 0.3394 ) }
    dend_81 { pt3dadd( 323.862, 412.446, 70.0473, 0.4024 ) }
    dend_81 { pt3dadd( 322.872, 412.809, 70.5508, 0.2288 ) }
    dend_81 { pt3dadd( 322.105, 413.43, 69.72, 0.2822 ) }
    dend_81 { pt3dadd( 321.003, 413.586, 70.0, 0.483 ) }
    dend_81 { pt3dadd( 320.143, 414.025, 70.2391, 0.4778 ) }
    dend_81 { pt3dadd( 319.358, 414.48, 70.9083, 0.5542 ) }
    dend_81 { pt3dadd( 318.98, 415.294, 71.1066, 0.2906 ) }
    dend_81 { pt3dadd( 318.516, 415.981, 72.518, 0.4064 ) }
    dend_81 { pt3dadd( 317.859, 416.667, 72.056, 0.2476 ) }
    dend_81 { pt3dadd( 317.039, 417.251, 71.7312, 0.2288 ) }
    dend_81 { pt3dadd( 316.191, 417.722, 72.24, 0.4788 ) }
    dend_81 { pt3dadd( 315.379, 418.246, 72.0549, 0.6864 ) }
    dend_81 { pt3dadd( 314.496, 418.625, 73.089, 0.5564 ) }
    dend_81 { pt3dadd( 313.591, 419.282, 73.64, 0.3426 ) }
    dend_81 { pt3dadd( 312.68, 419.933, 73.9402, 0.289 ) }
    dend_81 { pt3dadd( 311.833, 420.627, 74.48, 0.2458 ) }
    dend_81 { pt3dadd( 311.438, 421.672, 74.3887, 0.3548 ) }
    dend_81 { pt3dadd( 310.701, 422.399, 73.9488, 0.6718 ) }
    dend_81 { pt3dadd( 310.074, 423.16, 73.0702, 0.3498 ) }
    dend_81 { pt3dadd( 309.668, 423.814, 73.7027, 0.4576 ) }
    dend_81 { pt3dadd( 308.626, 424.115, 73.8648, 0.3486 ) }
    dend_81 { pt3dadd( 307.84, 424.195, 74.6774, 0.3208 ) }
    dend_81 { pt3dadd( 307.357, 424.72, 74.2151, 0.2288 ) }
    dend_81 { pt3dadd( 306.793, 425.603, 74.6788, 0.2288 ) }
    dend_81 { pt3dadd( 305.882, 425.97, 74.0034, 0.3022 ) }
    dend_81 { pt3dadd( 304.997, 426.452, 74.653, 0.4502 ) }
    dend_81 { pt3dadd( 304.349, 426.766, 75.0271, 0.483 ) }
    dend_81 { pt3dadd( 303.587, 426.941, 76.0402, 0.401 ) }
    dend_81 { pt3dadd( 302.709, 426.947, 76.5974, 0.443 ) }
    dend_81 { pt3dadd( 301.988, 427.284, 75.3393, 0.3718 ) }
    dend_81 { pt3dadd( 301.389, 427.589, 76.9479, 0.2712 ) }
    dend_81 { pt3dadd( 300.272, 427.627, 76.72, 0.2514 ) }
    dend_81 { pt3dadd( 299.141, 427.667, 76.3913, 0.3448 ) }
    dend_81 { pt3dadd( 298.056, 427.962, 76.6217, 0.5004 ) }
    dend_81 { pt3dadd( 297.117, 428.532, 77.2834, 0.4776 ) }
    dend_81 { pt3dadd( 296.058, 428.762, 77.7885, 0.3746 ) }
    dend_81 { pt3dadd( 295.605, 428.947, 80.0475, 0.3248 ) }
    dend_81 { pt3dadd( 294.802, 429.445, 80.64, 0.2288 ) }
    dend_81 { pt3dadd( 293.94, 430.157, 80.7663, 0.2288 ) }
    dend_81 { pt3dadd( 293.1, 430.905, 80.92, 0.2288 ) }
    dend_81 { pt3dadd( 292.292, 431.519, 80.92, 0.2288 ) }
    dend_81 { pt3dadd( 291.637, 432.089, 80.92, 0.2288 ) }
    dend_81 { pt3dadd( 290.638, 432.583, 80.92, 0.2288 ) }
    dend_81 { pt3dadd( 289.559, 432.788, 80.92, 0.2288 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 65/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 345.615, 390.345, 63.0, 0.4068 ) }
    dend_80 { pt3dadd( 345.488, 390.905, 63.0, 0.2796 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 67/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 321.108, 412.526, 32.7911, 0.4068 ) }
    dend_66 { pt3dadd( 320.307, 412.526, 32.2311, 0.6102 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 69/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 321.108, 412.526, 32.7911, 0.4068 ) }
    dend_65 { pt3dadd( 322.018, 412.069, 34.2544, 0.3686 ) }
    dend_65 { pt3dadd( 323.118, 412.069, 34.9507, 0.2814 ) }
    dend_65 { pt3dadd( 324.077, 412.069, 34.9812, 0.4264 ) }
    dend_65 { pt3dadd( 324.512, 412.08, 36.9572, 0.3836 ) }
    dend_65 { pt3dadd( 325.449, 412.183, 37.9814, 0.2288 ) }
    dend_65 { pt3dadd( 325.99, 412.183, 40.2212, 0.2288 ) }
    dend_65 { pt3dadd( 326.93, 412.389, 39.7813, 0.3788 ) }
    dend_65 { pt3dadd( 327.579, 412.977, 40.8775, 0.3714 ) }
    dend_65 { pt3dadd( 328.527, 413.343, 40.7677, 0.4228 ) }
    dend_65 { pt3dadd( 329.388, 413.541, 39.5315, 0.5338 ) }
    dend_65 { pt3dadd( 330.134, 413.294, 38.5689, 0.3604 ) }
    dend_65 { pt3dadd( 330.948, 413.213, 40.0896, 0.3814 ) }
    dend_65 { pt3dadd( 331.741, 413.442, 41.44, 0.2866 ) }
    dend_65 { pt3dadd( 332.849, 413.637, 41.1359, 0.3364 ) }
    dend_65 { pt3dadd( 333.479, 413.748, 39.6612, 0.4576 ) }
    dend_65 { pt3dadd( 334.21, 413.899, 39.823, 0.2914 ) }
    dend_65 { pt3dadd( 335.273, 414.05, 40.4426, 0.3412 ) }
    dend_65 { pt3dadd( 336.234, 414.141, 39.2619, 0.3558 ) }
    dend_65 { pt3dadd( 337.273, 414.379, 39.6127, 0.3676 ) }
    dend_65 { pt3dadd( 338.1, 414.716, 40.7128, 0.4576 ) }
    dend_65 { pt3dadd( 338.893, 415.158, 41.4627, 0.6486 ) }
    dend_65 { pt3dadd( 339.867, 415.048, 42.0591, 0.4656 ) }
    dend_65 { pt3dadd( 340.632, 414.807, 42.3072, 0.4862 ) }
    dend_65 { pt3dadd( 341.432, 414.423, 41.44, 0.674 ) }
    dend_65 { pt3dadd( 342.212, 414.684, 40.7515, 0.3896 ) }
    dend_65 { pt3dadd( 343.015, 414.433, 40.6658, 0.2796 ) }
    dend_65 { pt3dadd( 344.057, 414.633, 40.8526, 0.359 ) }
    dend_65 { pt3dadd( 345.178, 414.628, 41.1726, 0.453 ) }
    dend_65 { pt3dadd( 345.946, 414.929, 42.0, 0.4068 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 99/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 472.471, 380.291, 61.5378, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( 472.648, 380.446, 62.2392, 0.4016 ) }
    dend_54 { pt3dadd( 473.196, 380.927, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 473.324, 381.644, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 473.665, 382.736, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 474.522, 383.433, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 475.41, 384.095, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 476.138, 384.94, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 476.801, 385.753, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 477.794, 386.235, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 478.46, 387.1, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 478.853, 388.136, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 479.74, 388.801, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 480.691, 389.427, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 481.388, 390.255, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 481.52, 391.367, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 482.243, 392.211, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 482.857, 393.108, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 483.68, 393.862, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 484.555, 394.54, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 485.35, 395.191, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 485.997, 396.115, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 486.829, 396.898, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 487.518, 397.792, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 488.132, 398.751, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 488.898, 399.445, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 489.751, 400.18, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 490.148, 401.217, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 491.068, 401.841, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 492.021, 402.42, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 492.803, 403.253, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 493.607, 404.059, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 494.409, 404.815, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 495.022, 405.736, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 496.021, 406.244, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 496.582, 407.206, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 497.165, 408.186, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 497.935, 409.027, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 498.809, 409.624, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 499.803, 410.129, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 500.746, 410.763, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 501.716, 411.362, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 502.793, 411.703, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 503.861, 411.948, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 504.451, 412.755, 64.4, 0.2288 ) }
    dend_54 { pt3dadd( 505.381, 413.365, 64.4, 0.2288 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 45/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 472.471, 380.291, 61.5378, 0.4576 ) }
    dend_49 { pt3dadd( 472.815, 381.453, 60.683, 0.4576 ) }
    dend_49 { pt3dadd( 472.871, 382.062, 62.4215, 0.4272 ) }
    dend_49 { pt3dadd( 472.45, 382.952, 63.3114, 0.305 ) }
    dend_49 { pt3dadd( 472.138, 384.034, 63.56, 0.2976 ) }
    dend_49 { pt3dadd( 472.279, 385.061, 64.1099, 0.3518 ) }
    dend_49 { pt3dadd( 472.132, 386.182, 64.4216, 0.3068 ) }
    dend_49 { pt3dadd( 472.0, 387.181, 65.5189, 0.2288 ) }
    dend_49 { pt3dadd( 471.556, 388.121, 66.08, 0.2288 ) }
    dend_49 { pt3dadd( 470.871, 388.949, 66.08, 0.2288 ) }
    dend_49 { pt3dadd( 470.533, 389.887, 67.179, 0.2288 ) }
    dend_49 { pt3dadd( 469.69, 390.623, 67.48, 0.2288 ) }
    dend_49 { pt3dadd( 469.269, 391.591, 67.76, 0.305 ) }
    // Section: dend_37, id: dend_37, parent: dend_30 (entry count 58/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 456.384, 359.539, 50.1956, 0.5592 ) }
    dend_37 { pt3dadd( 455.716, 359.167, 52.5375, 0.5994 ) }
    dend_37 { pt3dadd( 455.54, 360.161, 53.5847, 0.3398 ) }
    dend_37 { pt3dadd( 455.003, 360.951, 54.32, 0.2288 ) }
    dend_37 { pt3dadd( 454.85, 361.733, 53.2997, 0.356 ) }
    dend_37 { pt3dadd( 454.405, 362.486, 52.08, 0.5784 ) }
    dend_37 { pt3dadd( 454.178, 363.58, 51.8053, 0.609 ) }
    dend_37 { pt3dadd( 453.939, 364.51, 52.92, 0.2472 ) }
    dend_37 { pt3dadd( 453.327, 365.459, 52.92, 0.2504 ) }
    dend_37 { pt3dadd( 452.562, 366.288, 53.1936, 0.3292 ) }
    dend_37 { pt3dadd( 451.79, 366.96, 53.398, 0.6834 ) }
    dend_37 { pt3dadd( 451.413, 367.644, 53.9311, 0.5116 ) }
    dend_37 { pt3dadd( 450.943, 368.53, 53.4148, 0.5084 ) }
    dend_37 { pt3dadd( 450.532, 369.481, 52.7106, 0.3942 ) }
    dend_37 { pt3dadd( 450.062, 370.436, 53.4696, 0.5596 ) }
    dend_37 { pt3dadd( 449.821, 371.389, 53.4766, 0.6222 ) }
    dend_37 { pt3dadd( 449.655, 372.242, 54.8212, 0.6356 ) }
    dend_37 { pt3dadd( 448.914, 373.022, 55.3725, 0.2606 ) }
    dend_37 { pt3dadd( 448.471, 373.545, 53.48, 0.305 ) }
    dend_37 { pt3dadd( 447.853, 374.381, 53.2652, 0.2834 ) }
    dend_37 { pt3dadd( 447.335, 375.215, 53.5889, 0.2288 ) }
    dend_37 { pt3dadd( 446.668, 375.583, 55.3249, 0.356 ) }
    dend_37 { pt3dadd( 446.046, 376.266, 56.3192, 0.4268 ) }
    dend_37 { pt3dadd( 445.618, 377.248, 56.5776, 0.65 ) }
    dend_37 { pt3dadd( 444.992, 378.062, 57.1995, 0.485 ) }
    dend_37 { pt3dadd( 444.243, 378.724, 57.96, 0.3882 ) }
    dend_37 { pt3dadd( 443.594, 379.509, 58.3047, 0.446 ) }
    dend_37 { pt3dadd( 442.832, 380.27, 58.24, 0.4988 ) }
    dend_37 { pt3dadd( 441.957, 380.864, 58.6424, 0.483 ) }
    dend_37 { pt3dadd( 441.577, 381.897, 58.5805, 0.4486 ) }
    dend_37 { pt3dadd( 440.879, 382.646, 58.2411, 0.3578 ) }
    dend_37 { pt3dadd( 440.172, 383.476, 58.1736, 0.2288 ) }
    dend_37 { pt3dadd( 439.768, 384.327, 59.08, 0.3224 ) }
    dend_37 { pt3dadd( 439.066, 385.112, 59.7671, 0.3116 ) }
    dend_37 { pt3dadd( 438.202, 385.73, 59.9239, 0.4576 ) }
    dend_37 { pt3dadd( 437.721, 386.119, 60.7152, 0.482 ) }
    dend_37 { pt3dadd( 436.756, 386.461, 61.6221, 0.2288 ) }
    dend_37 { pt3dadd( 435.743, 386.812, 62.16, 0.2288 ) }
    dend_37 { pt3dadd( 434.682, 387.236, 62.16, 0.2288 ) }
    dend_37 { pt3dadd( 433.6, 387.468, 62.16, 0.2288 ) }
    dend_37 { pt3dadd( 432.591, 387.966, 62.16, 0.2794 ) }
    dend_37 { pt3dadd( 431.607, 388.529, 62.44, 0.3846 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_37 { pt3dadd( 430.549, 388.928, 62.7371, 0.3814 ) }
    dend_37 { pt3dadd( 429.587, 389.189, 63.6126, 0.5278 ) }
    dend_37 { pt3dadd( 428.571, 389.458, 63.4298, 0.5084 ) }
    dend_37 { pt3dadd( 427.664, 389.994, 63.5362, 0.6238 ) }
    dend_37 { pt3dadd( 426.64, 390.456, 63.9201, 0.454 ) }
    dend_37 { pt3dadd( 425.562, 390.676, 63.6768, 0.3782 ) }
    dend_37 { pt3dadd( 424.739, 391.147, 64.1362, 0.2288 ) }
    dend_37 { pt3dadd( 423.819, 391.742, 64.4132, 0.2288 ) }
    dend_37 { pt3dadd( 422.911, 392.338, 64.96, 0.246 ) }
    dend_37 { pt3dadd( 421.898, 392.84, 64.9779, 0.404 ) }
    dend_37 { pt3dadd( 420.803, 392.918, 65.1692, 0.6584 ) }
    dend_37 { pt3dadd( 419.82, 393.149, 64.68, 0.7118 ) }
    dend_37 { pt3dadd( 419.027, 393.281, 65.52, 0.7788 ) }
    dend_37 { pt3dadd( 418.028, 393.757, 65.7924, 0.639 ) }
    dend_37 { pt3dadd( 417.004, 394.21, 65.8, 0.3574 ) }
    dend_37 { pt3dadd( 416.135, 394.922, 65.8, 0.234 ) }
    dend_37 { pt3dadd( 415.203, 395.504, 65.8, 0.244 ) }
    dend_37 { pt3dadd( 414.598, 396.368, 66.0296, 0.471 ) }
    dend_37 { pt3dadd( 413.604, 396.642, 66.7271, 0.365 ) }
    dend_37 { pt3dadd( 413.098, 397.545, 67.2, 0.2708 ) }
    dend_37 { pt3dadd( 413.083, 398.687, 67.2, 0.2288 ) }
    dend_37 { pt3dadd( 412.26, 399.256, 67.2, 0.2288 ) }
    dend_37 { pt3dadd( 411.337, 399.851, 67.2, 0.2288 ) }
    dend_37 { pt3dadd( 410.339, 400.383, 67.2781, 0.337 ) }
    dend_37 { pt3dadd( 409.908, 401.29, 67.2932, 0.6102 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 25/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 456.384, 359.539, 50.1956, 0.5592 ) }
    dend_31 { pt3dadd( 456.566, 359.96, 50.024, 0.5176 ) }
    dend_31 { pt3dadd( 457.081, 360.967, 49.674, 0.4894 ) }
    dend_31 { pt3dadd( 457.694, 361.894, 49.1224, 0.5338 ) }
    dend_31 { pt3dadd( 458.418, 362.673, 48.1622, 0.5338 ) }
    dend_31 { pt3dadd( 459.314, 363.319, 47.6017, 0.4996 ) }
    dend_31 { pt3dadd( 460.176, 364.056, 47.4793, 0.469 ) }
    dend_31 { pt3dadd( 460.983, 364.834, 47.04, 0.483 ) }
    dend_31 { pt3dadd( 461.635, 365.683, 46.3523, 0.5338 ) }
    dend_31 { pt3dadd( 461.833, 366.75, 45.6257, 0.5988 ) }
    dend_31 { pt3dadd( 462.186, 367.754, 44.9302, 0.625 ) }
    dend_31 { pt3dadd( 462.829, 368.661, 44.2736, 0.62 ) }
    dend_31 { pt3dadd( 463.542, 369.438, 43.2471, 0.6102 ) }
    dend_31 { pt3dadd( 463.779, 370.38, 42.1758, 0.575 ) }
    dend_31 { pt3dadd( 463.721, 371.474, 41.3778, 0.5226 ) }
    dend_31 { pt3dadd( 463.947, 372.553, 40.7672, 0.4898 ) }
    dend_31 { pt3dadd( 464.266, 373.583, 39.8656, 0.502 ) }
    dend_31 { pt3dadd( 464.709, 374.526, 38.7268, 0.5084 ) }
    dend_31 { pt3dadd( 464.859, 375.574, 37.7922, 0.4688 ) }
    dend_31 { pt3dadd( 464.924, 376.696, 37.3226, 0.4576 ) }
    dend_31 { pt3dadd( 465.589, 377.451, 36.3174, 0.5008 ) }
    dend_31 { pt3dadd( 466.285, 378.268, 35.3735, 0.6 ) }
    dend_31 { pt3dadd( 466.65, 379.332, 34.9871, 0.6562 ) }
    dend_31 { pt3dadd( 466.674, 380.387, 33.9584, 0.6378 ) }
    dend_31 { pt3dadd( 466.368, 381.421, 33.0543, 0.5884 ) }
    dend_31 { pt3dadd( 466.243, 382.484, 32.1602, 0.5084 ) }
    dend_31 { pt3dadd( 467.151, 383.167, 31.855, 0.5074 ) }
    dend_31 { pt3dadd( 467.915, 384.009, 31.6386, 0.483 ) }
    dend_31 { pt3dadd( 468.371, 385.011, 30.8988, 0.483 ) }
    dend_31 { pt3dadd( 469.053, 385.926, 30.7261, 0.4842 ) }
    dend_31 { pt3dadd( 469.793, 386.792, 30.5021, 0.5096 ) }
    dend_31 { pt3dadd( 470.289, 387.776, 29.7721, 0.531 ) }
    dend_31 { pt3dadd( 470.584, 388.871, 29.5299, 0.4786 ) }
    dend_31 { pt3dadd( 471.216, 389.781, 28.8364, 0.3998 ) }
    dend_31 { pt3dadd( 471.698, 390.763, 28.0728, 0.3278 ) }
    dend_31 { pt3dadd( 471.875, 391.876, 27.6864, 0.311 ) }
    dend_31 { pt3dadd( 472.147, 392.972, 27.8664, 0.3602 ) }
    dend_31 { pt3dadd( 472.122, 394.09, 27.3552, 0.395 ) }
    dend_31 { pt3dadd( 471.963, 395.191, 27.0343, 0.4576 ) }
    dend_31 { pt3dadd( 472.288, 396.247, 26.3906, 0.4734 ) }
    dend_31 { pt3dadd( 472.765, 397.286, 26.278, 0.5338 ) }
    dend_31 { pt3dadd( 473.145, 398.353, 26.061, 0.5338 ) }
    dend_31 { pt3dadd( 473.361, 399.449, 25.4806, 0.5164 ) }
    dend_31 { pt3dadd( 473.609, 400.553, 25.2, 0.401 ) }
    dend_31 { pt3dadd( 473.617, 401.697, 25.1992, 0.3346 ) }
    dend_31 { pt3dadd( 473.625, 402.841, 25.1947, 0.2838 ) }
    dend_31 { pt3dadd( 473.68, 403.984, 25.1642, 0.2562 ) }
    dend_31 { pt3dadd( 473.941, 405.094, 24.9844, 0.2778 ) }
    dend_31 { pt3dadd( 473.927, 406.192, 24.2455, 0.3272 ) }
    dend_31 { pt3dadd( 473.497, 407.243, 24.0853, 0.4022 ) }
    dend_31 { pt3dadd( 473.143, 408.331, 24.0694, 0.3828 ) }
    dend_31 { pt3dadd( 472.859, 409.439, 24.0078, 0.3814 ) }
    dend_31 { pt3dadd( 472.717, 410.538, 23.3408, 0.4316 ) }
    dend_31 { pt3dadd( 472.806, 411.668, 22.9608, 0.5838 ) }
    dend_31 { pt3dadd( 473.124, 412.767, 22.9519, 0.7624 ) }
    dend_31 { pt3dadd( 473.174, 413.909, 22.906, 0.839 ) }
    // Section: dend_24, id: dend_24, parent: dend_8 (entry count 81/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 393.98, 403.92, 42.8554, 0.839 ) }
    dend_24 { pt3dadd( 393.534, 404.29, 41.6688, 0.3304 ) }
    dend_24 { pt3dadd( 393.505, 405.063, 41.4719, 0.4016 ) }
    dend_24 { pt3dadd( 393.282, 405.786, 42.8344, 0.2634 ) }
    dend_24 { pt3dadd( 392.954, 406.769, 42.1789, 0.2288 ) }
    dend_24 { pt3dadd( 392.513, 407.378, 42.8061, 0.2558 ) }
    dend_24 { pt3dadd( 392.196, 408.328, 43.3614, 0.2288 ) }
    dend_24 { pt3dadd( 391.82, 408.823, 42.2321, 0.635 ) }
    dend_24 { pt3dadd( 391.497, 409.874, 42.56, 0.43 ) }
    dend_24 { pt3dadd( 391.105, 410.774, 41.7682, 0.481 ) }
    dend_24 { pt3dadd( 390.949, 411.366, 43.2558, 0.4206 ) }
    dend_24 { pt3dadd( 390.898, 412.444, 43.12, 0.7514 ) }
    dend_24 { pt3dadd( 390.905, 413.462, 42.28, 0.5692 ) }
    dend_24 { pt3dadd( 390.557, 414.431, 42.8252, 0.4168 ) }
    dend_24 { pt3dadd( 390.19, 415.468, 42.651, 0.4614 ) }
    dend_24 { pt3dadd( 389.768, 416.291, 42.6423, 0.6326 ) }
    dend_24 { pt3dadd( 389.605, 416.939, 43.0629, 0.607 ) }
    dend_24 { pt3dadd( 389.322, 417.823, 43.9029, 0.6022 ) }
    dend_24 { pt3dadd( 389.402, 418.476, 44.8078, 0.5754 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( 389.232, 419.497, 44.996, 0.338 ) }
    dend_24 { pt3dadd( 389.189, 420.033, 42.9195, 0.4972 ) }
    dend_24 { pt3dadd( 388.984, 421.063, 42.8688, 0.3638 ) }
    dend_24 { pt3dadd( 389.056, 422.031, 44.119, 0.3094 ) }
    dend_24 { pt3dadd( 388.618, 423.01, 44.8888, 0.381 ) }
    dend_24 { pt3dadd( 388.584, 424.025, 45.7495, 0.6102 ) }
    dend_24 { pt3dadd( 388.612, 424.998, 45.1648, 0.517 ) }
    dend_24 { pt3dadd( 388.357, 426.035, 45.0831, 0.5158 ) }
    dend_24 { pt3dadd( 387.917, 426.885, 45.92, 0.4778 ) }
    dend_24 { pt3dadd( 387.922, 427.982, 45.7321, 0.4578 ) }
    dend_24 { pt3dadd( 387.803, 428.962, 45.0178, 0.8136 ) }
    dend_24 { pt3dadd( 387.935, 430.031, 43.9421, 0.5398 ) }
    dend_24 { pt3dadd( 388.286, 430.97, 43.7382, 0.6198 ) }
    dend_24 { pt3dadd( 388.714, 431.937, 44.3338, 0.567 ) }
    dend_24 { pt3dadd( 388.96, 432.972, 44.6625, 0.483 ) }
    dend_24 { pt3dadd( 389.109, 433.808, 43.0049, 0.5976 ) }
    dend_24 { pt3dadd( 388.938, 434.442, 44.0667, 0.4576 ) }
    dend_24 { pt3dadd( 388.721, 435.517, 44.24, 0.3848 ) }
    dend_24 { pt3dadd( 388.502, 436.61, 44.091, 0.645 ) }
    dend_24 { pt3dadd( 388.409, 437.341, 42.56, 0.6164 ) }
    dend_24 { pt3dadd( 387.975, 438.225, 43.1808, 0.5748 ) }
    dend_24 { pt3dadd( 387.805, 439.219, 44.0885, 0.498 ) }
    dend_24 { pt3dadd( 387.359, 440.195, 44.52, 0.5734 ) }
    dend_24 { pt3dadd( 387.104, 441.285, 44.2546, 0.5968 ) }
    dend_24 { pt3dadd( 386.706, 442.34, 44.1846, 0.4802 ) }
    dend_24 { pt3dadd( 386.471, 443.435, 44.0524, 0.4514 ) }
    dend_24 { pt3dadd( 386.545, 444.5, 43.8444, 0.4996 ) }
    dend_24 { pt3dadd( 386.408, 445.48, 43.5898, 0.624 ) }
    dend_24 { pt3dadd( 386.387, 446.522, 43.4661, 0.4724 ) }
    dend_24 { pt3dadd( 386.101, 447.469, 43.0136, 0.5822 ) }
    dend_24 { pt3dadd( 385.986, 448.106, 43.0696, 0.5578 ) }
    dend_24 { pt3dadd( 385.403, 448.887, 42.56, 0.4834 ) }
    dend_24 { pt3dadd( 384.947, 449.763, 42.9111, 0.3386 ) }
    dend_24 { pt3dadd( 384.378, 450.529, 43.3292, 0.5592 ) }
    dend_24 { pt3dadd( 383.938, 451.465, 43.9306, 0.815 ) }
    dend_24 { pt3dadd( 383.121, 451.984, 43.3412, 0.8688 ) }
    dend_24 { pt3dadd( 382.518, 452.532, 42.8613, 0.5496 ) }
    dend_24 { pt3dadd( 381.991, 453.253, 42.6667, 0.788 ) }
    dend_24 { pt3dadd( 381.516, 453.781, 43.8502, 0.5774 ) }
    dend_24 { pt3dadd( 380.907, 454.525, 43.0948, 0.3238 ) }
    dend_24 { pt3dadd( 380.838, 455.128, 41.44, 0.2894 ) }
    dend_24 { pt3dadd( 380.589, 455.95, 42.3867, 0.6864 ) }
    dend_24 { pt3dadd( 379.855, 456.681, 42.84, 0.5088 ) }
    dend_24 { pt3dadd( 379.017, 457.361, 42.1324, 0.5652 ) }
    dend_24 { pt3dadd( 377.973, 457.678, 41.6444, 0.4068 ) }
    dend_24 { pt3dadd( 377.147, 458.294, 41.4193, 0.6146 ) }
    dend_24 { pt3dadd( 376.31, 458.992, 41.4148, 0.6864 ) }
    dend_24 { pt3dadd( 375.755, 459.434, 41.953, 0.4576 ) }
    dend_24 { pt3dadd( 375.04, 460.045, 42.1352, 0.4054 ) }
    dend_24 { pt3dadd( 374.31, 460.601, 41.7542, 0.6826 ) }
    dend_24 { pt3dadd( 373.859, 461.368, 42.8246, 0.5718 ) }
    dend_24 { pt3dadd( 373.467, 462.041, 41.216, 0.5682 ) }
    dend_24 { pt3dadd( 372.816, 462.789, 41.3767, 0.4668 ) }
    dend_24 { pt3dadd( 372.351, 463.644, 41.7752, 0.5972 ) }
    dend_24 { pt3dadd( 371.828, 464.304, 41.4176, 0.6466 ) }
    dend_24 { pt3dadd( 371.312, 465.264, 41.44, 0.464 ) }
    dend_24 { pt3dadd( 370.717, 466.053, 41.72, 0.5566 ) }
    dend_24 { pt3dadd( 370.415, 466.957, 41.1639, 0.607 ) }
    dend_24 { pt3dadd( 370.114, 467.737, 42.023, 0.5084 ) }
    dend_24 { pt3dadd( 370.195, 468.624, 42.3987, 0.3692 ) }
    dend_24 { pt3dadd( 370.449, 469.69, 42.56, 0.4938 ) }
    dend_24 { pt3dadd( 370.534, 470.758, 42.1641, 0.4546 ) }
    dend_24 { pt3dadd( 371.107, 471.503, 41.4546, 0.3814 ) }
    dend_24 { pt3dadd( 371.229, 472.377, 41.9054, 0.6864 ) }
    dend_24 { pt3dadd( 371.594, 473.317, 41.72, 0.3968 ) }
    dend_24 { pt3dadd( 371.924, 474.255, 41.9759, 0.3368 ) }
    dend_24 { pt3dadd( 372.419, 474.668, 43.12, 0.2288 ) }
    dend_24 { pt3dadd( 372.829, 475.318, 41.6357, 0.2496 ) }
    dend_24 { pt3dadd( 373.632, 475.723, 41.16, 0.2632 ) }
    dend_24 { pt3dadd( 374.6, 476.018, 42.0291, 0.2394 ) }
    dend_24 { pt3dadd( 375.176, 476.563, 41.573, 0.305 ) }
    dend_24 { pt3dadd( 375.546, 477.447, 41.634, 0.2796 ) }
    dend_24 { pt3dadd( 375.891, 478.51, 41.9838, 0.4698 ) }
    dend_24 { pt3dadd( 375.484, 479.477, 41.7091, 0.4412 ) }
    dend_24 { pt3dadd( 375.377, 480.575, 41.16, 0.5338 ) }
    dend_24 { pt3dadd( 375.656, 481.635, 41.6646, 0.4676 ) }
    dend_24 { pt3dadd( 375.915, 482.734, 41.3582, 0.3366 ) }
    dend_24 { pt3dadd( 376.341, 483.754, 41.4254, 0.436 ) }
    dend_24 { pt3dadd( 376.605, 484.799, 40.7092, 0.5054 ) }
    dend_24 { pt3dadd( 376.915, 485.819, 40.8699, 0.4404 ) }
    dend_24 { pt3dadd( 377.165, 486.909, 41.3977, 0.3852 ) }
    dend_24 { pt3dadd( 377.094, 487.867, 40.8523, 0.564 ) }
    dend_24 { pt3dadd( 377.439, 488.868, 40.2914, 0.605 ) }
    dend_24 { pt3dadd( 377.855, 489.809, 40.5989, 0.2922 ) }
    dend_24 { pt3dadd( 378.207, 490.475, 40.2284, 0.5348 ) }
    dend_24 { pt3dadd( 378.558, 491.374, 39.4923, 0.5074 ) }
    dend_24 { pt3dadd( 378.713, 492.301, 39.0463, 0.3814 ) }
    dend_24 { pt3dadd( 378.435, 493.289, 39.6155, 0.3954 ) }
    dend_24 { pt3dadd( 378.612, 493.8, 38.9192, 0.6616 ) }
    dend_24 { pt3dadd( 378.553, 494.92, 38.9007, 0.356 ) }
    dend_24 { pt3dadd( 378.549, 496.06, 38.8399, 0.346 ) }
    dend_24 { pt3dadd( 378.549, 497.146, 38.1262, 0.3688 ) }
    dend_24 { pt3dadd( 378.734, 498.082, 37.6267, 0.4904 ) }
    dend_24 { pt3dadd( 378.991, 498.586, 38.9592, 0.6756 ) }
    dend_24 { pt3dadd( 379.118, 499.635, 38.64, 0.5478 ) }
    dend_24 { pt3dadd( 379.178, 500.673, 38.08, 0.3814 ) }
    dend_24 { pt3dadd( 378.939, 501.736, 38.3289, 0.5302 ) }
    dend_24 { pt3dadd( 378.497, 502.766, 38.3289, 0.4794 ) }
    dend_24 { pt3dadd( 378.117, 503.807, 37.9061, 0.3648 ) }
    dend_24 { pt3dadd( 378.092, 504.818, 37.203, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( 377.863, 505.805, 36.8502, 0.4516 ) }
    dend_24 { pt3dadd( 377.632, 506.834, 36.6069, 0.285 ) }
    dend_24 { pt3dadd( 377.529, 507.962, 36.8561, 0.3608 ) }
    dend_24 { pt3dadd( 377.29, 509.058, 36.9978, 0.4228 ) }
    dend_24 { pt3dadd( 377.154, 510.129, 37.0902, 0.2896 ) }
    dend_24 { pt3dadd( 376.828, 511.158, 37.2327, 0.4656 ) }
    dend_24 { pt3dadd( 376.719, 511.991, 38.232, 0.3334 ) }
    dend_24 { pt3dadd( 376.683, 513.019, 37.2173, 0.6592 ) }
    dend_24 { pt3dadd( 376.655, 513.961, 35.933, 0.5168 ) }
    dend_24 { pt3dadd( 376.796, 515.031, 35.84, 0.6286 ) }
    dend_24 { pt3dadd( 376.797, 515.846, 36.0548, 0.33 ) }
    dend_24 { pt3dadd( 377.112, 516.871, 35.5219, 0.565 ) }
    dend_24 { pt3dadd( 377.824, 517.573, 35.607, 0.5272 ) }
    dend_24 { pt3dadd( 378.381, 518.331, 34.5845, 0.6864 ) }
    dend_24 { pt3dadd( 378.861, 519.321, 34.72, 0.426 ) }
    dend_24 { pt3dadd( 379.421, 520.213, 33.9125, 0.4576 ) }
    dend_24 { pt3dadd( 379.936, 521.153, 33.6328, 0.4412 ) }
    dend_24 { pt3dadd( 380.092, 522.262, 33.6, 0.3968 ) }
    dend_24 { pt3dadd( 379.826, 523.32, 33.0526, 0.4586 ) }
    dend_24 { pt3dadd( 379.696, 524.357, 33.1982, 0.3394 ) }
    dend_24 { pt3dadd( 379.35, 525.327, 32.7191, 0.3792 ) }
    dend_24 { pt3dadd( 379.139, 526.353, 33.0417, 0.2302 ) }
    dend_24 { pt3dadd( 378.941, 527.279, 31.8867, 0.3096 ) }
    dend_24 { pt3dadd( 378.184, 527.98, 32.1339, 0.4308 ) }
    dend_24 { pt3dadd( 377.428, 528.708, 31.4115, 0.473 ) }
    dend_24 { pt3dadd( 377.147, 529.71, 30.9126, 0.5848 ) }
    dend_24 { pt3dadd( 376.914, 530.821, 30.8, 0.483 ) }
    dend_24 { pt3dadd( 376.719, 531.922, 30.7068, 0.4322 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 28/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 393.98, 403.92, 42.8554, 0.839 ) }
    dend_9 { pt3dadd( 392.56, 404.672, 42.2005, 0.3954 ) }
    dend_9 { pt3dadd( 391.529, 405.153, 41.9997, 0.4048 ) }
    dend_9 { pt3dadd( 390.482, 405.612, 41.9983, 0.4794 ) }
    dend_9 { pt3dadd( 389.43, 406.063, 41.991, 0.5812 ) }
    dend_9 { pt3dadd( 388.411, 406.579, 41.9468, 0.6478 ) }
    dend_9 { pt3dadd( 387.507, 407.253, 41.6931, 0.6242 ) }
    dend_9 { pt3dadd( 386.724, 408.059, 41.1827, 0.5596 ) }
    dend_9 { pt3dadd( 386.034, 408.83, 41.6727, 0.5338 ) }
    dend_9 { pt3dadd( 385.069, 409.387, 41.9849, 0.5798 ) }
    dend_9 { pt3dadd( 383.97, 409.694, 42.0, 0.608 ) }
    dend_9 { pt3dadd( 382.938, 410.182, 42.0, 0.5868 ) }
    dend_9 { pt3dadd( 381.926, 410.715, 42.0, 0.5848 ) }
    dend_9 { pt3dadd( 380.954, 411.318, 42.0, 0.5848 ) }
    dend_9 { pt3dadd( 380.089, 412.065, 42.0, 0.655 ) }
    dend_9 { pt3dadd( 379.147, 412.714, 42.0, 0.6846 ) }
    dend_9 { pt3dadd( 378.135, 413.246, 42.0003, 0.7102 ) }
    dend_9 { pt3dadd( 377.13, 413.793, 42.0014, 0.6642 ) }
    dend_9 { pt3dadd( 376.201, 414.46, 42.009, 0.6132 ) }
    dend_9 { pt3dadd( 375.664, 415.462, 42.0571, 0.5366 ) }
    dend_9 { pt3dadd( 374.682, 416.033, 42.0176, 0.4576 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 49/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 444.038, 367.32, 30.576, 0.6356 ) }
    dend_3 { pt3dadd( 443.411, 368.114, 29.7926, 0.8526 ) }
    dend_3 { pt3dadd( 442.535, 368.823, 29.3784, 0.8162 ) }
    dend_3 { pt3dadd( 441.699, 369.546, 28.6521, 0.8136 ) }
    dend_3 { pt3dadd( 441.203, 370.569, 28.4444, 0.7886 ) }
    dend_3 { pt3dadd( 440.959, 371.655, 27.8029, 0.8132 ) }
    dend_3 { pt3dadd( 440.394, 372.612, 27.1536, 0.7636 ) }
    dend_3 { pt3dadd( 440.021, 373.65, 26.4121, 0.7374 ) }
    dend_3 { pt3dadd( 439.624, 374.722, 26.3217, 0.6614 ) }
    dend_3 { pt3dadd( 439.055, 375.714, 26.3256, 0.661 ) }
    dend_3 { pt3dadd( 438.509, 376.719, 26.3491, 0.661 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 60/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 444.038, 367.32, 30.576, 0.6356 ) }
    dend_2 { pt3dadd( 444.657, 367.005, 30.2842, 0.6864 ) }
    dend_2 { pt3dadd( 445.363, 367.682, 30.5575, 0.6636 ) }
    dend_2 { pt3dadd( 445.984, 368.27, 29.3406, 0.5016 ) }
    dend_2 { pt3dadd( 446.782, 368.813, 28.0932, 0.661 ) }
    dend_2 { pt3dadd( 447.717, 368.744, 29.12, 0.3674 ) }
    dend_2 { pt3dadd( 448.358, 368.597, 27.2406, 0.3906 ) }
    dend_2 { pt3dadd( 449.242, 368.597, 26.0016, 0.5674 ) }
    dend_2 { pt3dadd( 450.226, 368.685, 25.1782, 0.6214 ) }
    dend_2 { pt3dadd( 451.283, 368.648, 25.8986, 0.6216 ) }
    dend_2 { pt3dadd( 452.247, 368.406, 26.6319, 0.4064 ) }
    dend_2 { pt3dadd( 453.074, 368.068, 26.9648, 0.43 ) }
    dend_2 { pt3dadd( 453.775, 367.796, 25.7793, 0.661 ) }
    dend_2 { pt3dadd( 454.546, 367.349, 26.8066, 0.6102 ) }
    dend_2 { pt3dadd( 454.969, 366.454, 26.32, 0.3238 ) }
    dend_2 { pt3dadd( 455.548, 365.549, 26.7431, 0.5034 ) }
    dend_2 { pt3dadd( 456.439, 365.161, 25.5298, 0.5926 ) }
    dend_2 { pt3dadd( 457.25, 364.697, 26.0991, 0.6286 ) }
    dend_2 { pt3dadd( 458.174, 364.138, 25.5696, 0.483 ) }
    dend_2 { pt3dadd( 459.227, 364.009, 25.4682, 0.3814 ) }
    dend_2 { pt3dadd( 460.104, 363.551, 24.9194, 0.4068 ) }
    dend_2 { pt3dadd( 460.727, 362.763, 23.8238, 0.502 ) }
    dend_2 { pt3dadd( 461.28, 362.272, 22.9762, 0.6248 ) }
    dend_2 { pt3dadd( 461.757, 361.411, 22.7088, 0.6874 ) }
    dend_2 { pt3dadd( 462.368, 360.632, 23.1512, 0.412 ) }
    dend_2 { pt3dadd( 463.223, 360.585, 22.1071, 0.4646 ) }
    dend_2 { pt3dadd( 464.081, 360.703, 20.8093, 0.5508 ) }
    dend_2 { pt3dadd( 465.006, 360.315, 20.3126, 0.667 ) }
    dend_2 { pt3dadd( 465.48, 359.508, 19.8764, 0.6132 ) }
    dend_2 { pt3dadd( 466.258, 359.216, 18.6514, 0.4596 ) }
    dend_2 { pt3dadd( 465.978, 358.514, 18.4929, 0.6174 ) }
    dend_2 { pt3dadd( 466.75, 357.971, 19.32, 0.5926 ) }
    dend_2 { pt3dadd( 467.476, 357.349, 18.7382, 0.4328 ) }
    dend_2 { pt3dadd( 468.193, 356.601, 18.5506, 0.6212 ) }
    dend_2 { pt3dadd( 469.09, 356.356, 19.5496, 0.624 ) }
    dend_2 { pt3dadd( 470.16, 356.119, 19.3679, 0.4468 ) }
    dend_2 { pt3dadd( 471.214, 356.013, 18.48, 0.483 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 97/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 289.559, 432.788, 80.92, 0.2288 ) }
    dend_83 { pt3dadd( 288.974, 433.576, 80.36, 0.3304 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 99/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 289.559, 432.788, 80.92, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_82 { pt3dadd( 289.262, 432.934, 81.2045, 0.2334 ) }
    dend_82 { pt3dadd( 288.294, 433.412, 82.1313, 0.2488 ) }
    dend_82 { pt3dadd( 287.326, 433.891, 83.0584, 0.264 ) }
    dend_82 { pt3dadd( 286.359, 434.369, 83.9852, 0.2794 ) }
    dend_82 { pt3dadd( 285.292, 434.775, 84.0, 0.2288 ) }
    dend_82 { pt3dadd( 284.196, 435.071, 84.0983, 0.2288 ) }
    dend_82 { pt3dadd( 283.389, 435.851, 84.28, 0.2288 ) }
    dend_82 { pt3dadd( 282.364, 436.251, 84.56, 0.2288 ) }
    dend_82 { pt3dadd( 281.315, 436.664, 84.8372, 0.2288 ) }
    dend_82 { pt3dadd( 280.376, 437.135, 85.3454, 0.2288 ) }
    dend_82 { pt3dadd( 279.571, 437.939, 85.4, 0.2288 ) }
    dend_82 { pt3dadd( 278.783, 438.742, 85.4, 0.2288 ) }
    dend_82 { pt3dadd( 278.355, 439.793, 85.4, 0.2288 ) }
    dend_82 { pt3dadd( 277.592, 440.623, 85.4, 0.2288 ) }
    dend_82 { pt3dadd( 276.783, 441.385, 85.4, 0.2288 ) }
    dend_82 { pt3dadd( 276.27, 442.196, 85.4, 0.2288 ) }
    dend_82 { pt3dadd( 275.746, 443.18, 85.4, 0.2288 ) }
    dend_82 { pt3dadd( 275.075, 444.1, 85.4, 0.2288 ) }
    dend_82 { pt3dadd( 274.781, 445.16, 85.4, 0.2288 ) }
    dend_82 { pt3dadd( 274.446, 446.16, 85.4, 0.2288 ) }
    // Section: dend_70, id: dend_70, parent: dend_66 (entry count 20/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 320.307, 412.526, 32.2311, 0.6102 ) }
    dend_70 { pt3dadd( 319.465, 412.991, 31.8315, 0.5126 ) }
    dend_70 { pt3dadd( 318.928, 413.482, 31.1167, 0.4232 ) }
    dend_70 { pt3dadd( 318.286, 414.292, 31.6929, 0.8136 ) }
    dend_70 { pt3dadd( 317.414, 414.86, 32.2, 0.8084 ) }
    dend_70 { pt3dadd( 317.128, 415.838, 32.5158, 0.841 ) }
    dend_70 { pt3dadd( 316.54, 416.497, 32.0186, 0.8912 ) }
    dend_70 { pt3dadd( 315.618, 416.931, 31.724, 0.7452 ) }
    dend_70 { pt3dadd( 315.316, 417.975, 32.1152, 0.5742 ) }
    dend_70 { pt3dadd( 314.789, 418.966, 32.48, 0.5898 ) }
    dend_70 { pt3dadd( 314.42, 419.841, 33.2889, 0.5922 ) }
    dend_70 { pt3dadd( 313.846, 420.722, 32.76, 1.0678 ) }
    dend_70 { pt3dadd( 312.803, 421.002, 33.2483, 0.764 ) }
    dend_70 { pt3dadd( 311.757, 421.397, 33.5342, 0.5606 ) }
    dend_70 { pt3dadd( 310.659, 421.54, 34.1001, 0.5244 ) }
    dend_70 { pt3dadd( 309.59, 421.45, 33.7056, 0.6764 ) }
    dend_70 { pt3dadd( 308.506, 421.572, 34.2353, 0.5386 ) }
    dend_70 { pt3dadd( 307.714, 422.09, 33.3497, 0.395 ) }
    dend_70 { pt3dadd( 307.278, 423.032, 33.6196, 0.3534 ) }
    dend_70 { pt3dadd( 306.999, 423.725, 35.4668, 0.5848 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 40/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 320.307, 412.526, 32.2311, 0.6102 ) }
    dend_67 { pt3dadd( 319.803, 412.412, 33.1526, 0.6836 ) }
    dend_67 { pt3dadd( 319.118, 412.078, 34.9849, 0.265 ) }
    dend_67 { pt3dadd( 318.351, 411.631, 36.3432, 0.2288 ) }
    dend_67 { pt3dadd( 317.443, 411.726, 37.24, 0.2288 ) }
    dend_67 { pt3dadd( 316.301, 411.704, 37.24, 0.3134 ) }
    dend_67 { pt3dadd( 315.349, 411.451, 37.3299, 0.305 ) }
    dend_67 { pt3dadd( 314.217, 411.382, 37.5236, 0.308 ) }
    dend_67 { pt3dadd( 313.609, 411.46, 39.1913, 0.3314 ) }
    dend_67 { pt3dadd( 312.65, 411.154, 40.2993, 0.4216 ) }
    dend_67 { pt3dadd( 311.734, 411.205, 41.9605, 0.2458 ) }
    dend_67 { pt3dadd( 310.812, 411.586, 42.8095, 0.2288 ) }
    dend_67 { pt3dadd( 309.709, 411.465, 42.3024, 0.2754 ) }
    dend_67 { pt3dadd( 308.615, 411.41, 41.741, 0.4444 ) }
    dend_67 { pt3dadd( 307.743, 411.626, 41.1314, 0.504 ) }
    dend_67 { pt3dadd( 307.013, 411.726, 39.5713, 0.7296 ) }
    dend_67 { pt3dadd( 306.355, 412.085, 41.2686, 0.5618 ) }
    dend_67 { pt3dadd( 305.48, 412.018, 42.5426, 0.243 ) }
    dend_67 { pt3dadd( 304.533, 411.982, 41.902, 0.244 ) }
    dend_67 { pt3dadd( 304.152, 412.466, 40.32, 0.8268 ) }
    dend_67 { pt3dadd( 303.169, 412.346, 40.1537, 0.791 ) }
    dend_67 { pt3dadd( 302.299, 412.183, 40.1993, 0.764 ) }
    dend_67 { pt3dadd( 301.328, 412.069, 40.6672, 0.6416 ) }
    dend_67 { pt3dadd( 300.518, 411.726, 39.8068, 0.2542 ) }
    dend_67 { pt3dadd( 299.826, 411.459, 41.3678, 0.5508 ) }
    dend_67 { pt3dadd( 298.842, 411.585, 40.6358, 0.8752 ) }
    dend_67 { pt3dadd( 297.905, 411.265, 40.6031, 0.6026 ) }
    dend_67 { pt3dadd( 297.005, 411.261, 41.7124, 0.5338 ) }
    dend_67 { pt3dadd( 296.203, 410.651, 41.0959, 0.4938 ) }
    dend_67 { pt3dadd( 295.527, 410.102, 41.1541, 0.265 ) }
    dend_67 { pt3dadd( 294.739, 409.724, 41.44, 0.4402 ) }
    dend_67 { pt3dadd( 294.184, 410.059, 41.9989, 0.3814 ) }
    dend_67 { pt3dadd( 293.97, 409.845, 39.7911, 0.3814 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 73/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 505.381, 413.365, 64.4, 0.2288 ) }
    dend_56 { pt3dadd( 505.776, 413.442, 64.4896, 0.2288 ) }
    dend_56 { pt3dadd( 506.409, 413.932, 65.8, 0.2452 ) }
    dend_56 { pt3dadd( 507.15, 414.471, 66.6092, 0.5838 ) }
    dend_56 { pt3dadd( 507.987, 414.955, 67.48, 0.246 ) }
    dend_56 { pt3dadd( 508.523, 415.948, 67.4775, 0.5348 ) }
    dend_56 { pt3dadd( 509.335, 416.721, 67.2, 0.6456 ) }
    dend_56 { pt3dadd( 509.889, 417.52, 67.9095, 0.3318 ) }
    dend_56 { pt3dadd( 510.745, 418.228, 68.04, 0.2288 ) }
    dend_56 { pt3dadd( 511.365, 419.132, 67.5926, 0.4398 ) }
    dend_56 { pt3dadd( 512.12, 419.791, 66.92, 0.3304 ) }
    dend_56 { pt3dadd( 512.458, 420.637, 68.0918, 0.4988 ) }
    dend_56 { pt3dadd( 513.172, 421.442, 68.0504, 0.3474 ) }
    dend_56 { pt3dadd( 513.653, 422.27, 67.48, 0.2904 ) }
    dend_56 { pt3dadd( 514.195, 423.102, 68.32, 0.312 ) }
    dend_56 { pt3dadd( 515.031, 423.511, 69.44, 0.2288 ) }
    dend_56 { pt3dadd( 515.258, 424.574, 69.4434, 0.3158 ) }
    dend_56 { pt3dadd( 515.766, 425.271, 69.2356, 0.462 ) }
    dend_56 { pt3dadd( 516.153, 426.073, 67.9328, 0.305 ) }
    dend_56 { pt3dadd( 516.765, 426.973, 67.8594, 0.2356 ) }
    dend_56 { pt3dadd( 517.244, 427.629, 69.634, 0.4542 ) }
    dend_56 { pt3dadd( 517.963, 428.397, 70.5533, 0.7156 ) }
    dend_56 { pt3dadd( 518.422, 429.388, 70.3226, 0.9108 ) }
    dend_56 { pt3dadd( 518.997, 430.279, 71.2046, 0.8044 ) }
    dend_56 { pt3dadd( 519.628, 431.197, 71.3252, 0.7372 ) }
    dend_56 { pt3dadd( 520.02, 432.21, 71.4725, 0.5834 ) }
    dend_56 { pt3dadd( 520.958, 432.688, 71.4, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_56 { pt3dadd( 521.893, 433.056, 71.4, 0.2288 ) }
    dend_56 { pt3dadd( 521.893, 434.199, 71.4, 0.2288 ) }
    dend_56 { pt3dadd( 522.505, 434.995, 71.4, 0.2288 ) }
    dend_56 { pt3dadd( 522.96, 435.973, 71.68, 0.2288 ) }
    dend_56 { pt3dadd( 523.036, 437.111, 71.68, 0.2288 ) }
    dend_56 { pt3dadd( 523.036, 438.255, 71.68, 0.2288 ) }
    dend_56 { pt3dadd( 523.036, 439.264, 72.5416, 0.2726 ) }
    dend_56 { pt3dadd( 523.125, 440.342, 73.2046, 0.6056 ) }
    dend_56 { pt3dadd( 523.325, 441.243, 73.4706, 0.4576 ) }
    dend_56 { pt3dadd( 523.508, 442.126, 72.8913, 0.2292 ) }
    dend_56 { pt3dadd( 523.552, 442.728, 74.8868, 0.6004 ) }
    dend_56 { pt3dadd( 523.745, 443.703, 75.32, 0.6864 ) }
    dend_56 { pt3dadd( 524.065, 444.392, 76.9244, 0.3232 ) }
    dend_56 { pt3dadd( 524.127, 445.483, 76.44, 0.2676 ) }
    dend_56 { pt3dadd( 524.688, 446.371, 76.4604, 0.5208 ) }
    dend_56 { pt3dadd( 524.976, 447.463, 76.5478, 0.356 ) }
    dend_56 { pt3dadd( 525.63, 448.207, 76.8765, 0.585 ) }
    dend_56 { pt3dadd( 525.679, 449.043, 76.5346, 0.7368 ) }
    dend_56 { pt3dadd( 526.24, 449.796, 76.6892, 0.6864 ) }
    dend_56 { pt3dadd( 526.526, 450.626, 77.8683, 0.5614 ) }
    dend_56 { pt3dadd( 526.926, 451.238, 76.552, 0.7766 ) }
    dend_56 { pt3dadd( 527.555, 451.904, 76.823, 0.2636 ) }
    dend_56 { pt3dadd( 527.82, 452.78, 76.72, 0.3638 ) }
    dend_56 { pt3dadd( 528.249, 453.654, 77.406, 0.5218 ) }
    dend_56 { pt3dadd( 528.414, 454.742, 77.8428, 0.761 ) }
    dend_56 { pt3dadd( 529.163, 455.414, 78.0954, 0.4054 ) }
    dend_56 { pt3dadd( 529.56, 456.472, 78.4, 0.4328 ) }
    dend_56 { pt3dadd( 529.799, 457.504, 77.9094, 0.4666 ) }
    dend_56 { pt3dadd( 529.973, 458.606, 78.2748, 0.5304 ) }
    dend_56 { pt3dadd( 530.521, 459.549, 78.9382, 0.314 ) }
    dend_56 { pt3dadd( 530.823, 460.635, 79.24, 0.3 ) }
    dend_56 { pt3dadd( 531.044, 461.755, 79.24, 0.438 ) }
    dend_56 { pt3dadd( 531.143, 462.563, 80.1867, 0.4904 ) }
    dend_56 { pt3dadd( 531.03, 463.445, 78.8561, 0.3764 ) }
    dend_56 { pt3dadd( 531.007, 464.345, 78.8491, 0.2998 ) }
    dend_56 { pt3dadd( 531.643, 465.078, 79.52, 0.305 ) }
    dend_56 { pt3dadd( 532.38, 465.756, 78.7606, 0.2982 ) }
    dend_56 { pt3dadd( 533.086, 466.635, 78.7063, 0.2288 ) }
    dend_56 { pt3dadd( 533.429, 467.702, 79.1694, 0.2288 ) }
    dend_56 { pt3dadd( 533.882, 468.747, 79.24, 0.2288 ) }
    dend_56 { pt3dadd( 534.451, 469.684, 78.7856, 0.2288 ) }
    dend_56 { pt3dadd( 534.857, 470.737, 78.68, 0.273 ) }
    dend_56 { pt3dadd( 535.266, 471.708, 79.4926, 0.3528 ) }
    dend_56 { pt3dadd( 535.911, 472.608, 79.5542, 0.3498 ) }
    dend_56 { pt3dadd( 536.406, 473.623, 79.8, 0.2508 ) }
    dend_56 { pt3dadd( 536.906, 474.624, 79.7997, 0.2288 ) }
    dend_56 { pt3dadd( 537.104, 475.732, 79.5822, 0.2478 ) }
    dend_56 { pt3dadd( 537.336, 476.775, 79.4886, 0.326 ) }
    dend_56 { pt3dadd( 537.828, 477.755, 79.8, 0.3324 ) }
    dend_56 { pt3dadd( 538.276, 478.797, 79.6362, 0.2394 ) }
    dend_56 { pt3dadd( 538.366, 479.917, 79.52, 0.2288 ) }
    dend_56 { pt3dadd( 538.366, 481.061, 79.52, 0.2288 ) }
    dend_56 { pt3dadd( 538.557, 482.154, 79.52, 0.2288 ) }
    dend_56 { pt3dadd( 538.481, 483.284, 79.6824, 0.2288 ) }
    dend_56 { pt3dadd( 538.633, 484.332, 79.8, 0.2288 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 55/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 505.381, 413.365, 64.4, 0.2288 ) }
    dend_55 { pt3dadd( 504.131, 413.289, 64.1654, 0.2988 ) }
    dend_55 { pt3dadd( 503.359, 412.526, 64.12, 0.2288 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 58/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 469.269, 391.591, 67.76, 0.305 ) }
    dend_51 { pt3dadd( 469.45, 392.591, 68.6179, 0.2758 ) }
    dend_51 { pt3dadd( 469.642, 393.656, 69.531, 0.2446 ) }
    dend_51 { pt3dadd( 469.484, 394.699, 69.9913, 0.2288 ) }
    dend_51 { pt3dadd( 468.974, 395.723, 69.9913, 0.2288 ) }
    dend_51 { pt3dadd( 468.477, 396.753, 69.9913, 0.2288 ) }
    dend_51 { pt3dadd( 468.069, 397.821, 69.9913, 0.2288 ) }
    dend_51 { pt3dadd( 467.661, 398.891, 69.9913, 0.2288 ) }
    dend_51 { pt3dadd( 467.509, 399.948, 70.5698, 0.2288 ) }
    dend_51 { pt3dadd( 467.592, 400.994, 71.6842, 0.2288 ) }
    dend_51 { pt3dadd( 467.674, 402.04, 72.7989, 0.2288 ) }
    dend_51 { pt3dadd( 467.758, 403.086, 73.9133, 0.2288 ) }
    dend_51 { pt3dadd( 467.4, 404.157, 74.0034, 0.2288 ) }
    dend_51 { pt3dadd( 467.001, 405.23, 74.0034, 0.2288 ) }
    dend_51 { pt3dadd( 466.604, 406.302, 74.0034, 0.2288 ) }
    dend_51 { pt3dadd( 466.363, 407.35, 74.6642, 0.2314 ) }
    dend_51 { pt3dadd( 466.25, 408.376, 75.8694, 0.2358 ) }
    dend_51 { pt3dadd( 466.138, 409.402, 77.0748, 0.2404 ) }
    dend_51 { pt3dadd( 466.023, 410.429, 78.2799, 0.245 ) }
    dend_51 { pt3dadd( 465.911, 411.456, 79.4853, 0.2496 ) }
    dend_51 { pt3dadd( 465.799, 412.482, 80.6904, 0.2542 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 79/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 469.269, 391.591, 67.76, 0.305 ) }
    dend_50 { pt3dadd( 469.117, 392.125, 68.04, 0.305 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 81/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 409.908, 401.29, 67.2932, 0.6102 ) }
    dend_41 { pt3dadd( 409.857, 401.582, 67.48, 0.3988 ) }
    dend_41 { pt3dadd( 408.741, 401.681, 67.48, 0.2288 ) }
    dend_41 { pt3dadd( 407.643, 401.932, 67.3128, 0.2288 ) }
    dend_41 { pt3dadd( 406.749, 402.424, 67.2, 0.2882 ) }
    dend_41 { pt3dadd( 405.746, 402.95, 67.2896, 0.3336 ) }
    dend_41 { pt3dadd( 405.118, 403.593, 68.2189, 0.343 ) }
    dend_41 { pt3dadd( 404.441, 404.413, 67.48, 0.3304 ) }
    dend_41 { pt3dadd( 403.543, 405.076, 67.6668, 0.3254 ) }
    dend_41 { pt3dadd( 402.876, 405.948, 67.7692, 0.2898 ) }
    dend_41 { pt3dadd( 402.052, 406.268, 68.8377, 0.2288 ) }
    dend_41 { pt3dadd( 401.414, 406.213, 70.28, 0.2288 ) }
    dend_41 { pt3dadd( 400.632, 406.924, 70.56, 0.2288 ) }
    dend_41 { pt3dadd( 399.865, 407.44, 70.1708, 0.2288 ) }
    dend_41 { pt3dadd( 399.43, 408.233, 71.0881, 0.2288 ) }
    dend_41 { pt3dadd( 398.486, 408.63, 72.338, 0.2288 ) }
    dend_41 { pt3dadd( 397.542, 409.027, 73.5882, 0.2288 ) }
    dend_41 { pt3dadd( 396.599, 409.424, 74.8381, 0.2288 ) }
    dend_41 { pt3dadd( 395.724, 410.095, 75.04, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 394.999, 410.71, 75.2618, 0.2288 ) }
    dend_41 { pt3dadd( 393.914, 411.011, 75.4656, 0.2288 ) }
    dend_41 { pt3dadd( 392.979, 411.608, 75.6305, 0.2288 ) }
    dend_41 { pt3dadd( 392.273, 412.183, 76.16, 0.3086 ) }
    dend_41 { pt3dadd( 391.141, 412.139, 76.2062, 0.394 ) }
    dend_41 { pt3dadd( 390.295, 412.069, 77.5527, 0.2348 ) }
    dend_41 { pt3dadd( 389.23, 412.267, 77.6381, 0.2288 ) }
    dend_41 { pt3dadd( 388.284, 412.643, 78.1894, 0.2288 ) }
    dend_41 { pt3dadd( 387.803, 413.315, 79.52, 0.2542 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 9/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 409.908, 401.29, 67.2932, 0.6102 ) }
    dend_38 { pt3dadd( 409.884, 402.018, 69.72, 0.2806 ) }
    dend_38 { pt3dadd( 409.859, 403.027, 70.1873, 0.2368 ) }
    dend_38 { pt3dadd( 409.378, 403.683, 71.8976, 0.2796 ) }
    dend_38 { pt3dadd( 408.773, 404.29, 72.4704, 0.2956 ) }
    dend_38 { pt3dadd( 407.954, 404.43, 73.0806, 0.356 ) }
    dend_38 { pt3dadd( 407.079, 404.755, 72.24, 0.3502 ) }
    dend_38 { pt3dadd( 406.257, 405.316, 72.8787, 0.3304 ) }
    dend_38 { pt3dadd( 405.381, 405.829, 73.5644, 0.268 ) }
    dend_38 { pt3dadd( 404.51, 405.962, 75.0666, 0.2288 ) }
    dend_38 { pt3dadd( 403.603, 406.463, 75.6, 0.6102 ) }
    dend_38 { pt3dadd( 402.924, 407.016, 75.8509, 0.2558 ) }
    dend_38 { pt3dadd( 402.345, 407.855, 75.9111, 0.2288 ) }
    dend_38 { pt3dadd( 401.712, 408.74, 76.5699, 0.2288 ) }
    dend_38 { pt3dadd( 401.315, 409.23, 77.5158, 0.2288 ) }
    dend_38 { pt3dadd( 400.965, 409.64, 79.52, 0.2288 ) }
    dend_38 { pt3dadd( 400.187, 410.436, 79.6068, 0.2288 ) }
    dend_38 { pt3dadd( 400.223, 411.349, 79.7614, 0.2288 ) }
    dend_38 { pt3dadd( 399.934, 412.139, 80.0064, 0.2288 ) }
    dend_38 { pt3dadd( 399.655, 412.976, 81.0211, 0.2288 ) }
    dend_38 { pt3dadd( 398.976, 413.614, 81.7858, 0.2288 ) }
    dend_38 { pt3dadd( 399.24, 414.604, 81.76, 0.2288 ) }
    dend_38 { pt3dadd( 399.599, 415.609, 82.3074, 0.2288 ) }
    dend_38 { pt3dadd( 399.484, 416.585, 83.3045, 0.2288 ) }
    dend_38 { pt3dadd( 398.853, 417.297, 83.97, 0.2288 ) }
    dend_38 { pt3dadd( 398.183, 418.086, 84.4189, 0.2288 ) }
    dend_38 { pt3dadd( 397.699, 418.958, 85.12, 0.2288 ) }
    dend_38 { pt3dadd( 397.078, 419.816, 85.517, 0.2288 ) }
    dend_38 { pt3dadd( 396.627, 420.518, 86.8, 0.2288 ) }
    dend_38 { pt3dadd( 396.167, 421.413, 86.8, 0.2288 ) }
    dend_38 { pt3dadd( 396.167, 422.557, 86.8, 0.2288 ) }
    dend_38 { pt3dadd( 396.091, 423.686, 86.8, 0.2288 ) }
    dend_38 { pt3dadd( 395.663, 424.746, 86.8, 0.2288 ) }
    dend_38 { pt3dadd( 395.141, 425.669, 86.8, 0.2288 ) }
    dend_38 { pt3dadd( 394.528, 426.521, 86.52, 0.2288 ) }
    dend_38 { pt3dadd( 394.002, 427.449, 86.52, 0.2288 ) }
    dend_38 { pt3dadd( 393.374, 428.237, 86.6608, 0.2288 ) }
    dend_38 { pt3dadd( 393.307, 429.159, 87.8388, 0.2288 ) }
    dend_38 { pt3dadd( 393.058, 430.21, 88.2717, 0.2288 ) }
    dend_38 { pt3dadd( 392.773, 431.25, 88.732, 0.3024 ) }
    dend_38 { pt3dadd( 392.953, 432.322, 88.0846, 0.483 ) }
    dend_38 { pt3dadd( 392.868, 433.363, 88.2311, 0.4576 ) }
    dend_38 { pt3dadd( 392.598, 433.959, 89.0683, 0.2288 ) }
    dend_38 { pt3dadd( 392.743, 434.834, 88.0331, 0.2288 ) }
    dend_38 { pt3dadd( 392.471, 435.43, 86.24, 0.2288 ) }
    dend_38 { pt3dadd( 392.278, 436.52, 86.2918, 0.2288 ) }
    dend_38 { pt3dadd( 392.255, 437.596, 86.8, 0.2288 ) }
    dend_38 { pt3dadd( 391.999, 438.279, 87.2668, 0.3304 ) }
    // Section: dend_36, id: dend_36, parent: dend_31 (entry count 57/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 473.174, 413.909, 22.906, 0.839 ) }
    dend_36 { pt3dadd( 473.502, 414.014, 24.64, 0.6102 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 59/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 473.174, 413.909, 22.906, 0.839 ) }
    dend_33 { pt3dadd( 473.329, 415.306, 22.4277, 0.6864 ) }
    dend_33 { pt3dadd( 472.906, 415.638, 23.8, 0.4068 ) }
    dend_33 { pt3dadd( 472.811, 416.49, 24.92, 0.4764 ) }
    dend_33 { pt3dadd( 472.438, 417.518, 25.1969, 0.4832 ) }
    dend_33 { pt3dadd( 472.129, 418.513, 24.738, 0.577 ) }
    dend_33 { pt3dadd( 472.065, 419.583, 25.1737, 0.367 ) }
    dend_33 { pt3dadd( 471.793, 420.689, 25.3266, 0.4068 ) }
    dend_33 { pt3dadd( 471.517, 421.768, 25.76, 0.341 ) }
    dend_33 { pt3dadd( 471.2, 422.81, 26.3066, 0.3194 ) }
    dend_33 { pt3dadd( 471.099, 423.938, 26.2903, 0.3572 ) }
    dend_33 { pt3dadd( 470.656, 424.888, 25.76, 0.633 ) }
    dend_33 { pt3dadd( 470.535, 425.821, 26.931, 0.593 ) }
    dend_33 { pt3dadd( 470.057, 426.317, 25.9134, 0.4494 ) }
    dend_33 { pt3dadd( 469.808, 426.774, 24.64, 0.6528 ) }
    dend_33 { pt3dadd( 469.752, 427.815, 24.962, 0.4322 ) }
    dend_33 { pt3dadd( 468.941, 428.375, 25.0211, 0.4404 ) }
    dend_33 { pt3dadd( 468.648, 429.404, 25.1342, 0.4576 ) }
    dend_33 { pt3dadd( 468.48, 430.449, 25.76, 0.6068 ) }
    dend_33 { pt3dadd( 468.538, 431.472, 25.5497, 0.2668 ) }
    dend_33 { pt3dadd( 467.727, 432.214, 25.3912, 0.3702 ) }
    dend_33 { pt3dadd( 467.392, 433.004, 26.2923, 0.2796 ) }
    dend_33 { pt3dadd( 466.857, 433.964, 26.8265, 0.2704 ) }
    dend_33 { pt3dadd( 466.305, 434.902, 26.2931, 0.3016 ) }
    dend_33 { pt3dadd( 466.762, 435.85, 26.32, 0.2288 ) }
    dend_33 { pt3dadd( 466.568, 436.581, 25.2174, 0.2288 ) }
    dend_33 { pt3dadd( 465.768, 436.989, 24.425, 0.305 ) }
    dend_33 { pt3dadd( 465.125, 437.8, 24.255, 0.3214 ) }
    dend_33 { pt3dadd( 465.036, 438.822, 23.21, 0.256 ) }
    dend_33 { pt3dadd( 465.155, 439.48, 24.3401, 0.6264 ) }
    dend_33 { pt3dadd( 464.721, 440.111, 24.4073, 0.2714 ) }
    dend_33 { pt3dadd( 464.377, 440.947, 25.013, 0.2796 ) }
    dend_33 { pt3dadd( 463.854, 441.722, 24.054, 0.4322 ) }
    dend_33 { pt3dadd( 463.434, 442.556, 23.24, 0.2416 ) }
    dend_33 { pt3dadd( 463.168, 443.533, 23.4161, 0.2288 ) }
    dend_33 { pt3dadd( 463.107, 444.406, 24.6333, 0.3032 ) }
    dend_33 { pt3dadd( 463.254, 445.071, 24.92, 0.4322 ) }
    dend_33 { pt3dadd( 462.836, 446.118, 24.8004, 0.4678 ) }
    dend_33 { pt3dadd( 462.635, 447.072, 25.7558, 0.2798 ) }
    dend_33 { pt3dadd( 462.29, 447.664, 24.3897, 0.6122 ) }
    dend_33 { pt3dadd( 462.046, 448.737, 24.4588, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_33 { pt3dadd( 461.729, 449.772, 23.9988, 0.346 ) }
    dend_33 { pt3dadd( 461.605, 450.578, 22.7055, 0.2288 ) }
    dend_33 { pt3dadd( 461.837, 451.681, 22.4442, 0.2288 ) }
    dend_33 { pt3dadd( 461.858, 452.748, 21.6636, 0.2288 ) }
    dend_33 { pt3dadd( 461.76, 453.491, 22.6248, 0.2898 ) }
    dend_33 { pt3dadd( 461.604, 454.183, 23.5648, 0.4824 ) }
    dend_33 { pt3dadd( 461.684, 454.91, 24.0946, 0.3814 ) }
    dend_33 { pt3dadd( 461.477, 455.96, 24.0195, 0.432 ) }
    dend_33 { pt3dadd( 461.215, 456.876, 23.6029, 0.531 ) }
    dend_33 { pt3dadd( 461.065, 457.881, 24.5885, 0.5258 ) }
    dend_33 { pt3dadd( 460.937, 458.846, 23.6538, 0.3498 ) }
    dend_33 { pt3dadd( 460.208, 458.744, 22.1463, 0.2974 ) }
    dend_33 { pt3dadd( 460.117, 459.615, 20.8174, 0.2288 ) }
    dend_33 { pt3dadd( 460.117, 460.737, 20.9185, 0.2288 ) }
    dend_33 { pt3dadd( 459.792, 461.714, 21.504, 0.2288 ) }
    dend_33 { pt3dadd( 459.036, 462.298, 21.812, 0.2288 ) }
    dend_33 { pt3dadd( 458.289, 462.974, 22.3969, 0.2288 ) }
    dend_33 { pt3dadd( 458.058, 464.074, 22.4, 0.2288 ) }
    dend_33 { pt3dadd( 457.997, 465.208, 22.4, 0.2968 ) }
    dend_33 { pt3dadd( 457.353, 466.026, 23.0541, 0.3684 ) }
    dend_33 { pt3dadd( 456.635, 466.862, 22.4305, 0.3748 ) }
    dend_33 { pt3dadd( 455.979, 467.769, 22.8553, 0.2288 ) }
    dend_33 { pt3dadd( 455.391, 468.735, 22.5582, 0.2288 ) }
    dend_33 { pt3dadd( 454.853, 469.726, 22.386, 0.2288 ) }
    dend_33 { pt3dadd( 454.487, 470.775, 22.12, 0.2288 ) }
    dend_33 { pt3dadd( 453.842, 471.673, 22.12, 0.2288 ) }
    dend_33 { pt3dadd( 453.148, 472.427, 22.12, 0.2288 ) }
    dend_33 { pt3dadd( 452.795, 473.46, 21.7969, 0.2288 ) }
    dend_33 { pt3dadd( 452.254, 474.303, 21.6101, 0.3226 ) }
    dend_33 { pt3dadd( 451.953, 475.188, 22.622, 0.4622 ) }
    dend_33 { pt3dadd( 451.303, 476.034, 22.68, 0.429 ) }
    dend_33 { pt3dadd( 450.465, 476.593, 22.5131, 0.2846 ) }
    dend_33 { pt3dadd( 450.005, 477.523, 22.5534, 0.2922 ) }
    dend_33 { pt3dadd( 449.75, 478.484, 22.6741, 0.2288 ) }
    dend_33 { pt3dadd( 449.115, 479.396, 22.4, 0.2288 ) }
    dend_33 { pt3dadd( 448.448, 480.064, 22.4, 0.2288 ) }
    dend_33 { pt3dadd( 448.387, 481.203, 22.391, 0.2362 ) }
    dend_33 { pt3dadd( 447.796, 482.011, 21.84, 0.3696 ) }
    dend_33 { pt3dadd( 447.16, 482.958, 21.84, 0.2508 ) }
    dend_33 { pt3dadd( 446.621, 483.901, 21.56, 0.2288 ) }
    dend_33 { pt3dadd( 445.908, 484.621, 21.56, 0.2288 ) }
    dend_33 { pt3dadd( 445.307, 485.582, 21.56, 0.2288 ) }
    dend_33 { pt3dadd( 444.452, 486.297, 21.56, 0.2288 ) }
    dend_33 { pt3dadd( 444.275, 487.413, 21.56, 0.2288 ) }
    dend_33 { pt3dadd( 443.418, 488.003, 21.84, 0.2288 ) }
    dend_33 { pt3dadd( 443.368, 489.126, 22.12, 0.2372 ) }
    dend_33 { pt3dadd( 443.042, 490.014, 21.9156, 0.2618 ) }
    dend_33 { pt3dadd( 442.642, 491.017, 21.56, 0.2288 ) }
    dend_33 { pt3dadd( 442.211, 492.065, 21.56, 0.2288 ) }
    dend_33 { pt3dadd( 441.465, 492.908, 21.56, 0.2288 ) }
    dend_33 { pt3dadd( 441.126, 493.929, 21.56, 0.2288 ) }
    dend_33 { pt3dadd( 440.573, 494.9, 21.2831, 0.304 ) }
    dend_33 { pt3dadd( 440.121, 495.829, 20.5993, 0.483 ) }
    dend_33 { pt3dadd( 439.834, 496.712, 21.7344, 0.4392 ) }
    dend_33 { pt3dadd( 439.448, 497.648, 22.4, 0.2288 ) }
    dend_33 { pt3dadd( 438.84, 498.529, 22.3636, 0.2364 ) }
    dend_33 { pt3dadd( 438.102, 499.169, 21.322, 0.4152 ) }
    dend_33 { pt3dadd( 437.94, 499.951, 21.257, 0.2476 ) }
    dend_33 { pt3dadd( 438.038, 501.057, 21.28, 0.2288 ) }
    dend_33 { pt3dadd( 438.038, 502.201, 21.28, 0.2288 ) }
    dend_33 { pt3dadd( 437.915, 503.28, 20.8513, 0.2288 ) }
    dend_33 { pt3dadd( 436.975, 503.818, 20.72, 0.2288 ) }
    dend_33 { pt3dadd( 436.549, 504.671, 20.72, 0.2288 ) }
    dend_33 { pt3dadd( 436.549, 505.815, 20.72, 0.2288 ) }
    dend_33 { pt3dadd( 436.549, 506.959, 20.72, 0.2288 ) }
    dend_33 { pt3dadd( 436.339, 508.071, 20.72, 0.2288 ) }
    dend_33 { pt3dadd( 435.517, 508.737, 20.72, 0.2288 ) }
    dend_33 { pt3dadd( 435.178, 509.564, 21.0, 0.2288 ) }
    dend_33 { pt3dadd( 434.996, 510.631, 21.0, 0.2288 ) }
    dend_33 { pt3dadd( 434.262, 511.438, 21.086, 0.2874 ) }
    dend_33 { pt3dadd( 433.751, 512.315, 21.28, 0.2288 ) }
    dend_33 { pt3dadd( 433.224, 513.196, 21.0356, 0.2288 ) }
    dend_33 { pt3dadd( 432.443, 513.737, 21.4183, 0.2514 ) }
    dend_33 { pt3dadd( 432.302, 514.759, 20.8233, 0.4464 ) }
    dend_33 { pt3dadd( 431.559, 515.57, 20.5489, 0.5996 ) }
    dend_33 { pt3dadd( 431.238, 515.945, 19.4726, 0.635 ) }
    dend_33 { pt3dadd( 430.721, 516.692, 19.588, 0.3304 ) }
    dend_33 { pt3dadd( 430.064, 517.571, 19.2301, 0.5674 ) }
    dend_33 { pt3dadd( 429.424, 518.478, 18.8496, 0.5 ) }
    dend_33 { pt3dadd( 428.592, 519.222, 18.7594, 0.3244 ) }
    dend_33 { pt3dadd( 427.842, 519.9, 18.685, 0.5016 ) }
    dend_33 { pt3dadd( 427.837, 520.837, 19.6988, 0.338 ) }
    dend_33 { pt3dadd( 426.829, 521.151, 20.0693, 0.2536 ) }
    dend_33 { pt3dadd( 426.368, 521.741, 18.7835, 0.4576 ) }
    dend_33 { pt3dadd( 425.712, 522.4, 19.5832, 0.4094 ) }
    dend_33 { pt3dadd( 425.068, 523.237, 18.93, 0.6542 ) }
    dend_33 { pt3dadd( 424.526, 523.99, 18.3243, 0.661 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 473.174, 413.909, 22.906, 0.839 ) }
    dend_32 { pt3dadd( 473.23, 414.59, 22.7111, 0.7622 ) }
    dend_32 { pt3dadd( 473.545, 415.648, 22.1673, 0.6646 ) }
    dend_32 { pt3dadd( 474.053, 416.659, 21.8515, 0.6038 ) }
    dend_32 { pt3dadd( 474.32, 417.748, 21.728, 0.6176 ) }
    dend_32 { pt3dadd( 473.967, 418.744, 21.1506, 0.7032 ) }
    dend_32 { pt3dadd( 473.495, 419.761, 20.7743, 0.789 ) }
    dend_32 { pt3dadd( 473.482, 420.87, 20.7273, 0.8312 ) }
    dend_32 { pt3dadd( 473.592, 422.007, 20.7698, 0.8214 ) }
    dend_32 { pt3dadd( 473.616, 423.14, 21.0899, 0.7598 ) }
    dend_32 { pt3dadd( 473.616, 424.28, 21.3186, 0.6826 ) }
    dend_32 { pt3dadd( 473.615, 425.319, 20.3745, 0.6242 ) }
    dend_32 { pt3dadd( 473.613, 426.415, 19.7078, 0.6288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_32 { pt3dadd( 473.59, 427.555, 19.6, 0.6356 ) }
    dend_32 { pt3dadd( 473.424, 428.684, 19.5997, 0.6356 ) }
    dend_32 { pt3dadd( 473.161, 429.797, 19.5989, 0.6356 ) }
    dend_32 { pt3dadd( 472.846, 430.898, 19.5924, 0.693 ) }
    dend_32 { pt3dadd( 472.51, 431.99, 19.5549, 0.8082 ) }
    dend_32 { pt3dadd( 472.257, 433.098, 19.2853, 0.8972 ) }
    dend_32 { pt3dadd( 472.044, 434.193, 18.6782, 0.9152 ) }
    dend_32 { pt3dadd( 471.74, 435.286, 18.4904, 0.8358 ) }
    dend_32 { pt3dadd( 471.396, 436.378, 18.48, 0.7536 ) }
    dend_32 { pt3dadd( 471.118, 437.486, 18.48, 0.6768 ) }
    dend_32 { pt3dadd( 470.883, 438.606, 18.48, 0.6206 ) }
    dend_32 { pt3dadd( 470.668, 439.73, 18.4792, 0.5898 ) }
    dend_32 { pt3dadd( 470.404, 440.843, 18.4747, 0.6258 ) }
    dend_32 { pt3dadd( 470.115, 441.949, 18.4439, 0.6976 ) }
    dend_32 { pt3dadd( 469.971, 443.079, 18.2636, 0.691 ) }
    dend_32 { pt3dadd( 469.932, 444.191, 17.6481, 0.5814 ) }
    dend_32 { pt3dadd( 469.497, 445.13, 18.48, 0.4576 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 17/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 376.719, 531.922, 30.7068, 0.4322 ) }
    dend_26 { pt3dadd( 376.427, 532.619, 30.9756, 0.4098 ) }
    dend_26 { pt3dadd( 376.156, 533.62, 30.4464, 0.3866 ) }
    dend_26 { pt3dadd( 376.147, 534.58, 30.6681, 0.4436 ) }
    dend_26 { pt3dadd( 376.04, 535.599, 30.3391, 0.4734 ) }
    dend_26 { pt3dadd( 375.803, 536.52, 31.589, 0.6274 ) }
    dend_26 { pt3dadd( 375.24, 536.883, 30.52, 0.2288 ) }
    dend_26 { pt3dadd( 374.885, 537.95, 30.6034, 0.2768 ) }
    dend_26 { pt3dadd( 373.885, 538.138, 30.8, 0.2288 ) }
    dend_26 { pt3dadd( 373.536, 538.94, 30.2691, 0.3276 ) }
    dend_26 { pt3dadd( 373.307, 539.93, 30.7303, 0.3624 ) }
    dend_26 { pt3dadd( 372.795, 540.895, 30.492, 0.2288 ) }
    dend_26 { pt3dadd( 372.302, 541.868, 30.086, 0.2498 ) }
    dend_26 { pt3dadd( 371.651, 542.782, 30.4889, 0.4214 ) }
    dend_26 { pt3dadd( 370.909, 543.616, 30.4576, 0.5562 ) }
    dend_26 { pt3dadd( 370.432, 544.612, 30.8952, 0.6102 ) }
    dend_26 { pt3dadd( 370.105, 545.552, 31.1998, 0.3632 ) }
    dend_26 { pt3dadd( 369.864, 546.503, 30.4013, 0.2706 ) }
    dend_26 { pt3dadd( 369.741, 547.618, 30.24, 0.2292 ) }
    dend_26 { pt3dadd( 369.631, 548.707, 30.24, 0.2402 ) }
    dend_26 { pt3dadd( 368.941, 549.319, 29.96, 0.2564 ) }
    dend_26 { pt3dadd( 368.94, 550.412, 29.68, 0.4286 ) }
    dend_26 { pt3dadd( 368.349, 551.312, 29.1668, 0.4576 ) }
    dend_26 { pt3dadd( 368.148, 552.328, 28.1487, 0.3404 ) }
    dend_26 { pt3dadd( 367.91, 553.429, 27.6928, 0.2316 ) }
    dend_26 { pt3dadd( 367.944, 554.517, 26.943, 0.3222 ) }
    dend_26 { pt3dadd( 368.138, 555.6, 26.5096, 0.409 ) }
    dend_26 { pt3dadd( 368.266, 556.454, 26.88, 0.3814 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 45/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 376.719, 531.922, 30.7068, 0.4322 ) }
    dend_25 { pt3dadd( 376.834, 532.074, 30.52, 0.305 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 374.682, 416.033, 42.0176, 0.4576 ) }
    dend_19 { pt3dadd( 374.312, 416.521, 42.2814, 0.7534 ) }
    dend_19 { pt3dadd( 373.492, 416.822, 41.7054, 0.7402 ) }
    dend_19 { pt3dadd( 372.465, 417.165, 41.9255, 0.7926 ) }
    dend_19 { pt3dadd( 371.469, 417.107, 42.912, 0.328 ) }
    dend_19 { pt3dadd( 370.478, 417.598, 43.0889, 0.3814 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 53/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 374.682, 416.033, 42.0176, 0.4576 ) }
    dend_10 { pt3dadd( 373.984, 416.734, 40.9858, 0.6516 ) }
    dend_10 { pt3dadd( 373.022, 417.333, 40.672, 0.661 ) }
    dend_10 { pt3dadd( 372.198, 418.06, 39.8908, 0.5858 ) }
    dend_10 { pt3dadd( 371.246, 418.69, 39.7676, 0.483 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 58/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 438.509, 376.719, 26.3491, 0.661 ) }
    dend_7 { pt3dadd( 437.893, 376.88, 25.6894, 0.5924 ) }
    dend_7 { pt3dadd( 436.826, 377.069, 24.8839, 0.5086 ) }
    dend_7 { pt3dadd( 435.713, 377.056, 24.311, 0.431 ) }
    dend_7 { pt3dadd( 434.743, 377.382, 23.7776, 0.3406 ) }
    dend_7 { pt3dadd( 433.974, 378.11, 22.8416, 0.2898 ) }
    dend_7 { pt3dadd( 433.296, 377.932, 21.392, 0.3302 ) }
    dend_7 { pt3dadd( 432.902, 376.954, 20.7547, 0.3734 ) }
    dend_7 { pt3dadd( 432.608, 375.851, 20.5548, 0.399 ) }
    dend_7 { pt3dadd( 432.417, 374.758, 19.9573, 0.389 ) }
    dend_7 { pt3dadd( 432.176, 373.656, 19.6364, 0.3814 ) }
    dend_7 { pt3dadd( 432.01, 372.528, 19.5978, 0.3814 ) }
    dend_7 { pt3dadd( 431.978, 371.385, 19.5829, 0.3814 ) }
    dend_7 { pt3dadd( 431.997, 370.242, 19.4821, 0.3998 ) }
    dend_7 { pt3dadd( 432.151, 369.148, 18.8518, 0.4438 ) }
    dend_7 { pt3dadd( 432.733, 368.286, 17.8794, 0.4576 ) }
    dend_7 { pt3dadd( 433.75, 368.171, 18.2011, 0.4168 ) }
    dend_7 { pt3dadd( 434.482, 368.914, 18.9098, 0.3212 ) }
    dend_7 { pt3dadd( 435.238, 369.595, 17.8976, 0.2594 ) }
    dend_7 { pt3dadd( 436.092, 369.398, 16.24, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 78/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 438.509, 376.719, 26.3491, 0.661 ) }
    dend_4 { pt3dadd( 438.253, 377.503, 26.4533, 0.6004 ) }
    dend_4 { pt3dadd( 437.757, 378.503, 27.0026, 0.543 ) }
    dend_4 { pt3dadd( 437.058, 379.389, 27.3837, 0.492 ) }
    dend_4 { pt3dadd( 436.259, 380.205, 27.44, 0.483 ) }
    dend_4 { pt3dadd( 435.433, 380.996, 27.4394, 0.546 ) }
    dend_4 { pt3dadd( 434.542, 381.712, 27.4378, 0.6226 ) }
    dend_4 { pt3dadd( 433.624, 382.396, 27.4299, 0.6566 ) }
    dend_4 { pt3dadd( 432.715, 383.089, 27.3935, 0.6186 ) }
    dend_4 { pt3dadd( 431.814, 383.791, 27.2124, 0.589 ) }
    dend_4 { pt3dadd( 431.049, 384.584, 26.5166, 0.6064 ) }
    dend_4 { pt3dadd( 430.396, 385.512, 26.3315, 0.675 ) }
    dend_4 { pt3dadd( 429.746, 386.453, 26.3208, 0.7082 ) }
    dend_4 { pt3dadd( 429.079, 387.385, 26.3239, 0.7118 ) }
    dend_4 { pt3dadd( 428.391, 388.298, 26.3382, 0.7118 ) }
    dend_4 { pt3dadd( 427.758, 389.249, 26.4124, 0.7336 ) }
    dend_4 { pt3dadd( 427.27, 390.262, 26.8825, 0.7594 ) }
    dend_4 { pt3dadd( 426.602, 391.182, 27.0998, 0.7178 ) }
    dend_4 { pt3dadd( 425.93, 392.057, 26.4382, 0.6422 ) }
    dend_4 { pt3dadd( 425.28, 392.995, 26.3726, 0.565 ) }
    dend_4 { pt3dadd( 424.497, 393.825, 26.5367, 0.583 ) }
    dend_4 { pt3dadd( 423.789, 394.67, 27.2658, 0.6562 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_4 { pt3dadd( 423.126, 395.598, 27.2317, 0.7568 ) }
    dend_4 { pt3dadd( 422.366, 396.394, 26.4919, 0.7868 ) }
    dend_4 { pt3dadd( 421.561, 397.2, 26.3206, 0.788 ) }
    dend_4 { pt3dadd( 420.751, 398.009, 26.297, 0.7638 ) }
    dend_4 { pt3dadd( 419.941, 398.818, 26.2237, 0.7626 ) }
    dend_4 { pt3dadd( 419.14, 399.614, 25.7928, 0.787 ) }
    dend_4 { pt3dadd( 418.336, 400.386, 25.1765, 0.8376 ) }
    dend_4 { pt3dadd( 417.463, 401.121, 24.9463, 0.938 ) }
    dend_4 { pt3dadd( 416.783, 402.023, 24.5308, 1.0104 ) }
    dend_4 { pt3dadd( 416.084, 402.913, 24.1248, 1.0168 ) }
    dend_4 { pt3dadd( 415.329, 403.772, 24.0758, 0.9242 ) }
    dend_4 { pt3dadd( 414.726, 404.741, 24.0537, 0.7988 ) }
    dend_4 { pt3dadd( 414.13, 405.717, 23.9263, 0.718 ) }
    dend_4 { pt3dadd( 413.428, 406.571, 23.2274, 0.7354 ) }
    dend_4 { pt3dadd( 412.818, 407.531, 22.9734, 0.7848 ) }
    dend_4 { pt3dadd( 412.191, 408.487, 22.96, 0.836 ) }
    dend_4 { pt3dadd( 411.546, 409.431, 22.96, 0.815 ) }
    dend_4 { pt3dadd( 411.029, 410.451, 22.96, 0.7656 ) }
    dend_4 { pt3dadd( 410.625, 411.521, 22.9597, 0.7626 ) }
    dend_4 { pt3dadd( 410.051, 412.509, 22.9589, 0.7626 ) }
    dend_4 { pt3dadd( 409.289, 413.36, 22.9552, 0.8114 ) }
    dend_4 { pt3dadd( 408.484, 414.175, 22.9407, 0.7892 ) }
    dend_4 { pt3dadd( 407.691, 414.999, 22.883, 0.788 ) }
    dend_4 { pt3dadd( 406.951, 415.865, 22.6436, 0.7638 ) }
    dend_4 { pt3dadd( 406.415, 416.835, 21.9612, 0.787 ) }
    dend_4 { pt3dadd( 405.911, 417.859, 21.8431, 0.8372 ) }
    dend_4 { pt3dadd( 405.403, 418.884, 21.84, 0.913 ) }
    dend_4 { pt3dadd( 404.871, 419.896, 21.84, 0.9646 ) }
    dend_4 { pt3dadd( 404.207, 420.828, 21.84, 0.966 ) }
    dend_4 { pt3dadd( 403.565, 421.776, 21.84, 0.8918 ) }
    dend_4 { pt3dadd( 402.79, 422.616, 21.84, 0.7658 ) }
    dend_4 { pt3dadd( 402.005, 423.448, 21.84, 0.7132 ) }
    dend_4 { pt3dadd( 401.315, 424.36, 21.84, 0.7616 ) }
    dend_4 { pt3dadd( 400.775, 425.369, 21.84, 0.8876 ) }
    dend_4 { pt3dadd( 400.164, 426.336, 21.84, 0.9396 ) }
    dend_4 { pt3dadd( 399.857, 427.437, 21.84, 0.9406 ) }
    dend_4 { pt3dadd( 399.493, 428.522, 21.8403, 0.9154 ) }
    dend_4 { pt3dadd( 399.04, 429.572, 21.8414, 0.8898 ) }
    // Section: dend_76, id: dend_76, parent: dend_70 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 306.999, 423.725, 35.4668, 0.5848 ) }
    dend_76 { pt3dadd( 306.631, 423.828, 32.7664, 0.5306 ) }
    dend_76 { pt3dadd( 306.271, 423.929, 30.1204, 0.4778 ) }
    dend_76 { pt3dadd( 305.434, 424.081, 29.12, 0.4038 ) }
    dend_76 { pt3dadd( 304.462, 424.537, 29.12, 0.2288 ) }
    dend_76 { pt3dadd( 303.794, 425.377, 29.12, 0.2288 ) }
    dend_76 { pt3dadd( 302.801, 425.917, 29.12, 0.2288 ) }
    dend_76 { pt3dadd( 301.868, 426.472, 29.12, 0.2288 ) }
    dend_76 { pt3dadd( 301.129, 427.328, 29.12, 0.2588 ) }
    dend_76 { pt3dadd( 300.795, 428.406, 29.12, 0.3484 ) }
    dend_76 { pt3dadd( 300.644, 429.525, 29.12, 0.3334 ) }
    dend_76 { pt3dadd( 299.825, 429.899, 30.721, 0.294 ) }
    dend_76 { pt3dadd( 298.885, 430.371, 31.36, 0.2288 ) }
    dend_76 { pt3dadd( 298.339, 431.27, 31.36, 0.2288 ) }
    dend_76 { pt3dadd( 297.346, 431.654, 31.36, 0.2288 ) }
    dend_76 { pt3dadd( 296.463, 432.318, 31.36, 0.2288 ) }
    dend_76 { pt3dadd( 295.439, 432.661, 30.7849, 0.2288 ) }
    dend_76 { pt3dadd( 294.617, 433.368, 30.24, 0.2288 ) }
    dend_76 { pt3dadd( 293.849, 434.203, 30.24, 0.2288 ) }
    dend_76 { pt3dadd( 293.059, 435.029, 30.24, 0.2288 ) }
    dend_76 { pt3dadd( 292.366, 435.898, 30.24, 0.2288 ) }
    dend_76 { pt3dadd( 292.143, 436.985, 30.2173, 0.2288 ) }
    dend_76 { pt3dadd( 291.342, 437.351, 28.84, 0.356 ) }
    dend_76 { pt3dadd( 290.202, 437.349, 28.8092, 0.3048 ) }
    dend_76 { pt3dadd( 289.14, 437.288, 27.771, 0.2982 ) }
    dend_76 { pt3dadd( 288.079, 437.228, 26.7324, 0.2912 ) }
    dend_76 { pt3dadd( 287.019, 437.168, 25.6939, 0.2846 ) }
    dend_76 { pt3dadd( 285.979, 437.265, 24.9248, 0.2834 ) }
    dend_76 { pt3dadd( 284.98, 437.558, 25.4892, 0.2288 ) }
    dend_76 { pt3dadd( 284.042, 438.065, 26.04, 0.2288 ) }
    dend_76 { pt3dadd( 283.109, 438.384, 25.2, 0.2288 ) }
    dend_76 { pt3dadd( 282.213, 438.995, 25.1656, 0.2288 ) }
    dend_76 { pt3dadd( 281.463, 439.791, 24.64, 0.2288 ) }
    dend_76 { pt3dadd( 280.577, 440.392, 24.64, 0.2288 ) }
    dend_76 { pt3dadd( 279.568, 440.743, 24.64, 0.2288 ) }
    dend_76 { pt3dadd( 278.732, 441.371, 24.64, 0.2288 ) }
    dend_76 { pt3dadd( 277.633, 441.618, 24.64, 0.2288 ) }
    dend_76 { pt3dadd( 276.555, 441.959, 24.64, 0.2288 ) }
    dend_76 { pt3dadd( 275.543, 442.394, 24.3208, 0.2288 ) }
    dend_76 { pt3dadd( 274.868, 443.185, 23.3366, 0.2546 ) }
    dend_76 { pt3dadd( 273.751, 443.3, 22.96, 0.2288 ) }
    dend_76 { pt3dadd( 272.741, 443.689, 22.68, 0.2288 ) }
    dend_76 { pt3dadd( 271.729, 444.1, 22.4213, 0.2288 ) }
    dend_76 { pt3dadd( 270.586, 444.101, 22.4, 0.2288 ) }
    dend_76 { pt3dadd( 269.448, 444.145, 22.4, 0.2288 ) }
    dend_76 { pt3dadd( 268.726, 444.864, 22.3068, 0.2288 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 84/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 306.999, 423.725, 35.4668, 0.5848 ) }
    dend_71 { pt3dadd( 306.092, 424.331, 35.0395, 0.8068 ) }
    dend_71 { pt3dadd( 305.236, 424.631, 35.8324, 0.5904 ) }
    dend_71 { pt3dadd( 304.349, 425.198, 36.041, 0.6214 ) }
    dend_71 { pt3dadd( 303.641, 425.907, 35.28, 0.6864 ) }
    dend_71 { pt3dadd( 303.245, 426.775, 35.5729, 0.5654 ) }
    dend_71 { pt3dadd( 303.147, 427.271, 36.96, 0.5338 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 91/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 293.97, 409.845, 39.7911, 0.3814 ) }
    dend_69 { pt3dadd( 293.665, 409.315, 40.7456, 0.5338 ) }
    dend_69 { pt3dadd( 293.199, 408.485, 40.4886, 0.4068 ) }
    dend_69 { pt3dadd( 292.732, 407.735, 39.9711, 0.5726 ) }
    dend_69 { pt3dadd( 292.505, 406.877, 41.3725, 0.6528 ) }
    dend_69 { pt3dadd( 292.174, 406.138, 42.6255, 0.5948 ) }
    dend_69 { pt3dadd( 291.505, 405.543, 43.2704, 0.397 ) }
    dend_69 { pt3dadd( 290.721, 404.975, 43.5781, 0.3004 ) }
    dend_69 { pt3dadd( 290.895, 404.066, 44.0695, 0.252 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_69 { pt3dadd( 290.305, 403.242, 44.7465, 0.2288 ) }
    dend_69 { pt3dadd( 289.394, 402.875, 43.9729, 0.326 ) }
    dend_69 { pt3dadd( 288.596, 402.704, 42.5911, 0.6006 ) }
    dend_69 { pt3dadd( 287.91, 402.321, 42.2971, 0.525 ) }
    dend_69 { pt3dadd( 287.273, 401.737, 43.3804, 0.2448 ) }
    dend_69 { pt3dadd( 286.51, 401.082, 43.426, 0.3332 ) }
    dend_69 { pt3dadd( 286.035, 400.629, 42.3231, 0.5848 ) }
    dend_69 { pt3dadd( 285.26, 400.514, 43.7335, 0.3814 ) }
    dend_69 { pt3dadd( 284.336, 400.133, 43.3692, 0.5324 ) }
    dend_69 { pt3dadd( 283.777, 399.639, 44.4732, 0.4576 ) }
    dend_69 { pt3dadd( 283.074, 398.963, 45.0719, 0.4162 ) }
    dend_69 { pt3dadd( 282.31, 398.44, 44.5441, 0.4974 ) }
    dend_69 { pt3dadd( 281.569, 397.827, 45.1466, 0.2562 ) }
    dend_69 { pt3dadd( 280.528, 397.769, 46.1863, 0.2778 ) }
    dend_69 { pt3dadd( 279.971, 397.029, 45.6478, 0.303 ) }
    dend_69 { pt3dadd( 279.772, 396.625, 43.524, 0.5338 ) }
    dend_69 { pt3dadd( 278.803, 396.841, 43.4507, 0.481 ) }
    dend_69 { pt3dadd( 278.596, 396.396, 44.9952, 0.443 ) }
    dend_69 { pt3dadd( 277.562, 396.238, 45.2852, 0.4526 ) }
    dend_69 { pt3dadd( 276.951, 395.535, 43.9855, 0.4622 ) }
    dend_69 { pt3dadd( 276.148, 394.88, 44.6555, 0.5592 ) }
    dend_69 { pt3dadd( 275.473, 394.332, 44.5878, 0.536 ) }
    dend_69 { pt3dadd( 275.138, 393.312, 45.1654, 0.339 ) }
    dend_69 { pt3dadd( 274.282, 392.694, 44.9375, 0.3178 ) }
    dend_69 { pt3dadd( 273.321, 392.262, 44.6701, 0.3396 ) }
    dend_69 { pt3dadd( 272.492, 392.81, 45.8948, 0.409 ) }
    dend_69 { pt3dadd( 272.648, 393.779, 47.334, 0.4514 ) }
    dend_69 { pt3dadd( 273.319, 394.545, 48.4728, 0.446 ) }
    dend_69 { pt3dadd( 274.077, 395.277, 49.56, 0.4322 ) }
    dend_69 { pt3dadd( 274.74, 395.735, 48.27, 0.4222 ) }
    dend_69 { pt3dadd( 275.392, 396.462, 47.8904, 0.5058 ) }
    dend_69 { pt3dadd( 276.281, 396.854, 48.335, 0.483 ) }
    dend_69 { pt3dadd( 276.39, 397.411, 50.6064, 0.2322 ) }
    dend_69 { pt3dadd( 277.036, 398.194, 50.8404, 0.4088 ) }
    dend_69 { pt3dadd( 278.018, 398.586, 50.9314, 0.4976 ) }
    dend_69 { pt3dadd( 279.026, 398.805, 51.0983, 0.3438 ) }
    dend_69 { pt3dadd( 280.061, 399.171, 51.24, 0.4168 ) }
    dend_69 { pt3dadd( 280.978, 399.852, 51.2291, 0.661 ) }
    dend_69 { pt3dadd( 281.392, 400.426, 49.6983, 0.53 ) }
    dend_69 { pt3dadd( 281.767, 401.052, 49.5065, 0.4576 ) }
    dend_69 { pt3dadd( 282.521, 401.473, 50.8631, 0.6564 ) }
    dend_69 { pt3dadd( 283.352, 402.225, 51.2711, 0.4714 ) }
    dend_69 { pt3dadd( 283.98, 403.078, 50.6988, 0.295 ) }
    dend_69 { pt3dadd( 284.865, 403.359, 52.1184, 0.4764 ) }
    dend_69 { pt3dadd( 285.486, 403.941, 52.379, 0.6004 ) }
    dend_69 { pt3dadd( 285.909, 404.496, 53.3123, 0.4474 ) }
    dend_69 { pt3dadd( 285.917, 405.294, 52.92, 0.2288 ) }
    dend_69 { pt3dadd( 286.359, 405.962, 51.8311, 0.4576 ) }
    dend_69 { pt3dadd( 287.095, 405.998, 53.6446, 0.4136 ) }
    dend_69 { pt3dadd( 287.303, 406.82, 54.5261, 0.2288 ) }
    dend_69 { pt3dadd( 288.105, 407.425, 54.1492, 0.3464 ) }
    dend_69 { pt3dadd( 288.695, 408.39, 54.2228, 0.5306 ) }
    dend_69 { pt3dadd( 289.322, 408.956, 54.6, 0.7064 ) }
    dend_69 { pt3dadd( 289.982, 409.438, 54.1528, 0.5794 ) }
    dend_69 { pt3dadd( 290.865, 409.903, 54.6193, 0.4576 ) }
    dend_69 { pt3dadd( 291.428, 410.64, 55.2289, 0.4842 ) }
    dend_69 { pt3dadd( 291.846, 411.267, 55.7687, 0.4088 ) }
    dend_69 { pt3dadd( 292.702, 411.696, 55.9896, 0.5084 ) }
    dend_69 { pt3dadd( 293.353, 412.409, 56.66, 0.5574 ) }
    dend_69 { pt3dadd( 293.894, 413.186, 56.2111, 0.725 ) }
    dend_69 { pt3dadd( 294.57, 414.011, 56.4301, 0.6894 ) }
    dend_69 { pt3dadd( 295.118, 414.821, 55.9068, 0.677 ) }
    dend_69 { pt3dadd( 295.904, 415.363, 55.258, 0.5266 ) }
    dend_69 { pt3dadd( 296.492, 415.814, 56.7885, 0.2334 ) }
    dend_69 { pt3dadd( 296.525, 416.949, 56.84, 0.2992 ) }
    dend_69 { pt3dadd( 296.754, 417.851, 57.57, 0.5888 ) }
    dend_69 { pt3dadd( 296.911, 418.879, 58.2994, 0.775 ) }
    dend_69 { pt3dadd( 296.601, 419.62, 59.8259, 0.5088 ) }
    dend_69 { pt3dadd( 296.625, 420.417, 58.5497, 0.609 ) }
    dend_69 { pt3dadd( 296.42, 421.491, 59.2329, 0.9452 ) }
    dend_69 { pt3dadd( 296.746, 422.375, 60.2, 0.5588 ) }
    dend_69 { pt3dadd( 297.148, 423.366, 59.8007, 0.4424 ) }
    dend_69 { pt3dadd( 297.279, 424.216, 60.779, 0.4928 ) }
    dend_69 { pt3dadd( 297.702, 425.241, 61.04, 0.2542 ) }
    dend_69 { pt3dadd( 298.312, 425.849, 62.3473, 0.3814 ) }
    dend_69 { pt3dadd( 298.816, 426.216, 64.4, 0.392 ) }
    dend_69 { pt3dadd( 299.908, 425.967, 64.1628, 0.53 ) }
    dend_69 { pt3dadd( 300.986, 425.797, 63.56, 0.4576 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 78/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 293.97, 409.845, 39.7911, 0.3814 ) }
    dend_68 { pt3dadd( 293.779, 409.323, 40.32, 0.4322 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 538.633, 484.332, 79.8, 0.2288 ) }
    dend_58 { pt3dadd( 538.672, 484.574, 80.6036, 0.2394 ) }
    dend_58 { pt3dadd( 538.781, 485.25, 82.8464, 0.2684 ) }
    dend_58 { pt3dadd( 538.823, 486.211, 83.72, 0.2574 ) }
    dend_58 { pt3dadd( 538.917, 487.352, 83.72, 0.2288 ) }
    dend_58 { pt3dadd( 539.038, 488.488, 83.72, 0.2288 ) }
    dend_58 { pt3dadd( 539.24, 489.614, 83.72, 0.2288 ) }
    dend_58 { pt3dadd( 539.344, 490.742, 83.72, 0.2288 ) }
    dend_58 { pt3dadd( 539.668, 491.82, 83.72, 0.2288 ) }
    dend_58 { pt3dadd( 540.232, 492.781, 83.72, 0.2288 ) }
    dend_58 { pt3dadd( 541.01, 493.453, 83.72, 0.2288 ) }
    dend_58 { pt3dadd( 541.305, 494.555, 83.72, 0.2288 ) }
    dend_58 { pt3dadd( 541.851, 495.517, 83.72, 0.2288 ) }
    dend_58 { pt3dadd( 542.255, 496.443, 83.8057, 0.2288 ) }
    dend_58 { pt3dadd( 542.435, 497.54, 84.0, 0.2288 ) }
    dend_58 { pt3dadd( 542.688, 498.646, 84.0, 0.2288 ) }
    dend_58 { pt3dadd( 543.346, 499.456, 84.0, 0.2288 ) }
    dend_58 { pt3dadd( 543.513, 500.51, 84.0, 0.2288 ) }
    dend_58 { pt3dadd( 543.513, 501.654, 84.0, 0.2288 ) }
    dend_58 { pt3dadd( 543.513, 502.798, 84.0, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_58 { pt3dadd( 543.62, 503.935, 84.0, 0.2288 ) }
    dend_58 { pt3dadd( 543.805, 505.05, 84.0, 0.2288 ) }
    dend_58 { pt3dadd( 543.93, 506.177, 84.2419, 0.2288 ) }
    dend_58 { pt3dadd( 544.133, 507.287, 84.56, 0.2288 ) }
    dend_58 { pt3dadd( 544.315, 508.394, 84.56, 0.2288 ) }
    dend_58 { pt3dadd( 544.315, 509.538, 84.56, 0.2288 ) }
    dend_58 { pt3dadd( 544.315, 510.682, 84.56, 0.2288 ) }
    dend_58 { pt3dadd( 544.315, 511.826, 84.56, 0.2288 ) }
    dend_58 { pt3dadd( 544.315, 512.97, 84.56, 0.2288 ) }
    dend_58 { pt3dadd( 544.315, 514.114, 84.56, 0.2288 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 10/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 538.633, 484.332, 79.8, 0.2288 ) }
    dend_57 { pt3dadd( 539.052, 484.37, 79.8, 0.2288 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 12/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 465.799, 412.482, 80.6904, 0.2542 ) }
    dend_53 { pt3dadd( 465.728, 413.294, 80.6904, 0.2476 ) }
    dend_53 { pt3dadd( 465.63, 414.433, 80.6904, 0.2382 ) }
    dend_53 { pt3dadd( 465.53, 415.573, 80.6904, 0.2288 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 16/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 465.799, 412.482, 80.6904, 0.2542 ) }
    dend_52 { pt3dadd( 465.664, 413.715, 80.1318, 0.246 ) }
    dend_52 { pt3dadd( 465.54, 414.833, 79.6253, 0.2386 ) }
    dend_52 { pt3dadd( 465.418, 415.952, 79.1188, 0.231 ) }
    dend_52 { pt3dadd( 465.138, 417.039, 79.0852, 0.2288 ) }
    dend_52 { pt3dadd( 464.59, 417.785, 79.8, 0.2484 ) }
    dend_52 { pt3dadd( 464.392, 418.342, 81.7754, 0.633 ) }
    dend_52 { pt3dadd( 464.022, 419.336, 82.7112, 0.351 ) }
    dend_52 { pt3dadd( 463.424, 420.077, 82.9816, 0.4022 ) }
    dend_52 { pt3dadd( 463.091, 420.96, 83.7427, 0.3112 ) }
    dend_52 { pt3dadd( 462.796, 421.767, 84.6678, 0.3876 ) }
    dend_52 { pt3dadd( 462.409, 422.78, 85.1752, 0.3512 ) }
    dend_52 { pt3dadd( 461.993, 423.692, 85.3829, 0.2586 ) }
    dend_52 { pt3dadd( 461.604, 424.322, 87.0598, 0.5174 ) }
    dend_52 { pt3dadd( 461.604, 425.414, 87.4734, 0.6102 ) }
    dend_52 { pt3dadd( 461.688, 426.174, 89.4628, 0.2536 ) }
    dend_52 { pt3dadd( 462.398, 426.894, 89.6, 0.2834 ) }
    dend_52 { pt3dadd( 462.634, 427.654, 91.2503, 0.2288 ) }
    dend_52 { pt3dadd( 462.571, 428.794, 91.28, 0.2288 ) }
    dend_52 { pt3dadd( 462.528, 429.913, 91.4746, 0.2288 ) }
    dend_52 { pt3dadd( 462.595, 430.884, 92.4073, 0.2288 ) }
    dend_52 { pt3dadd( 462.519, 431.879, 92.4092, 0.277 ) }
    dend_52 { pt3dadd( 462.743, 432.883, 93.2271, 0.2288 ) }
    dend_52 { pt3dadd( 463.091, 433.892, 93.52, 0.2288 ) }
    dend_52 { pt3dadd( 463.484, 434.934, 93.52, 0.2288 ) }
    dend_52 { pt3dadd( 463.7, 436.034, 93.52, 0.2288 ) }
    dend_52 { pt3dadd( 463.995, 437.073, 93.4399, 0.3576 ) }
    dend_52 { pt3dadd( 464.221, 437.769, 95.3187, 0.4068 ) }
    dend_52 { pt3dadd( 464.359, 438.759, 96.6, 0.2984 ) }
    dend_52 { pt3dadd( 464.922, 439.639, 96.6, 0.2288 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 46/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 387.803, 413.315, 79.52, 0.2542 ) }
    dend_47 { pt3dadd( 386.319, 413.205, 79.4097, 0.3478 ) }
    dend_47 { pt3dadd( 385.185, 413.098, 79.52, 0.4576 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 49/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 387.803, 413.315, 79.52, 0.2542 ) }
    dend_42 { pt3dadd( 387.379, 414.082, 80.08, 0.2362 ) }
    dend_42 { pt3dadd( 386.608, 414.809, 80.08, 0.2288 ) }
    dend_42 { pt3dadd( 385.513, 414.933, 80.591, 0.2288 ) }
    dend_42 { pt3dadd( 384.956, 415.728, 81.2, 0.2288 ) }
    dend_42 { pt3dadd( 384.642, 416.7, 82.04, 0.2288 ) }
    dend_42 { pt3dadd( 383.651, 416.988, 81.76, 0.2288 ) }
    dend_42 { pt3dadd( 382.826, 417.628, 81.2795, 0.2288 ) }
    dend_42 { pt3dadd( 381.913, 418.305, 81.48, 0.2288 ) }
    dend_42 { pt3dadd( 381.406, 419.253, 81.7466, 0.2288 ) }
    dend_42 { pt3dadd( 380.34, 419.576, 81.9571, 0.2288 ) }
    dend_42 { pt3dadd( 380.185, 420.676, 82.04, 0.2288 ) }
    dend_42 { pt3dadd( 379.253, 421.085, 82.04, 0.2288 ) }
    dend_42 { pt3dadd( 378.504, 421.903, 82.075, 0.2288 ) }
    dend_42 { pt3dadd( 377.863, 422.388, 83.16, 0.3304 ) }
    dend_42 { pt3dadd( 377.581, 423.48, 83.16, 0.2998 ) }
    dend_42 { pt3dadd( 376.935, 424.354, 83.16, 0.2288 ) }
    dend_42 { pt3dadd( 376.49, 425.274, 83.4299, 0.4422 ) }
    dend_42 { pt3dadd( 376.147, 426.036, 82.0406, 0.2288 ) }
    dend_42 { pt3dadd( 375.853, 426.712, 83.1986, 0.305 ) }
    dend_42 { pt3dadd( 375.708, 426.846, 85.8206, 0.2288 ) }
    dend_42 { pt3dadd( 374.996, 427.467, 85.1318, 0.2288 ) }
    dend_42 { pt3dadd( 374.737, 428.491, 84.25, 0.2288 ) }
    dend_42 { pt3dadd( 374.201, 429.339, 84.1714, 0.2288 ) }
    dend_42 { pt3dadd( 373.523, 430.099, 84.345, 0.2894 ) }
    dend_42 { pt3dadd( 372.934, 431.043, 84.4693, 0.3986 ) }
    dend_42 { pt3dadd( 372.326, 431.99, 84.3984, 0.4538 ) }
    dend_42 { pt3dadd( 371.473, 432.72, 84.4024, 0.4798 ) }
    dend_42 { pt3dadd( 370.81, 433.42, 83.72, 0.5246 ) }
    dend_42 { pt3dadd( 370.092, 434.006, 84.0795, 0.412 ) }
    dend_42 { pt3dadd( 369.398, 434.339, 84.7468, 0.356 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 80/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 391.999, 438.279, 87.2668, 0.3304 ) }
    dend_40 { pt3dadd( 391.72, 439.404, 87.08, 0.2288 ) }
    dend_40 { pt3dadd( 391.456, 440.508, 87.08, 0.2288 ) }
    dend_40 { pt3dadd( 391.019, 441.505, 87.6109, 0.2288 ) }
    dend_40 { pt3dadd( 391.008, 442.623, 88.0953, 0.2288 ) }
    dend_40 { pt3dadd( 390.581, 443.52, 89.04, 0.2288 ) }
    dend_40 { pt3dadd( 390.252, 444.589, 88.8154, 0.2288 ) }
    dend_40 { pt3dadd( 389.855, 445.463, 89.2074, 0.2288 ) }
    dend_40 { pt3dadd( 389.101, 445.982, 88.48, 0.2288 ) }
    dend_40 { pt3dadd( 389.074, 447.076, 89.1654, 0.2288 ) }
    dend_40 { pt3dadd( 388.785, 448.018, 89.2007, 0.2288 ) }
    dend_40 { pt3dadd( 388.609, 449.1, 89.32, 0.2288 ) }
    dend_40 { pt3dadd( 388.385, 450.008, 89.4866, 0.2758 ) }
    dend_40 { pt3dadd( 388.452, 451.0, 90.44, 0.2288 ) }
    dend_40 { pt3dadd( 388.159, 451.553, 88.8286, 0.356 ) }
    dend_40 { pt3dadd( 388.045, 452.641, 89.2175, 0.3814 ) }
    dend_40 { pt3dadd( 388.159, 453.253, 90.72, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 97/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 391.999, 438.279, 87.2668, 0.3304 ) }
    dend_39 { pt3dadd( 392.049, 438.495, 86.8, 0.2796 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 99/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 424.526, 523.99, 18.3243, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_35 { pt3dadd( 424.79, 524.558, 19.5838, 0.3428 ) }
    dend_35 { pt3dadd( 424.996, 525.06, 21.6639, 0.2288 ) }
    dend_35 { pt3dadd( 425.319, 526.013, 22.113, 0.256 ) }
    dend_35 { pt3dadd( 424.667, 526.694, 22.7573, 0.2364 ) }
    dend_35 { pt3dadd( 424.551, 527.555, 22.9712, 0.3142 ) }
    dend_35 { pt3dadd( 424.757, 528.62, 22.7822, 0.3308 ) }
    dend_35 { pt3dadd( 424.384, 529.256, 24.08, 0.453 ) }
    dend_35 { pt3dadd( 423.821, 529.69, 23.24, 0.2288 ) }
    dend_35 { pt3dadd( 423.646, 530.289, 22.4, 0.2288 ) }
    dend_35 { pt3dadd( 423.507, 530.865, 21.737, 0.2288 ) }
    dend_35 { pt3dadd( 422.93, 531.507, 20.8494, 0.2698 ) }
    dend_35 { pt3dadd( 422.135, 531.682, 19.5574, 0.47 ) }
    dend_35 { pt3dadd( 421.644, 532.455, 18.5732, 0.5206 ) }
    dend_35 { pt3dadd( 421.204, 533.191, 18.4069, 0.285 ) }
    dend_35 { pt3dadd( 420.77, 534.205, 18.7247, 0.2638 ) }
    dend_35 { pt3dadd( 420.107, 534.819, 18.095, 0.232 ) }
    dend_35 { pt3dadd( 419.478, 534.839, 16.2915, 0.6168 ) }
    dend_35 { pt3dadd( 418.933, 535.653, 17.152, 0.643 ) }
    dend_35 { pt3dadd( 418.453, 536.316, 18.0309, 0.3744 ) }
    dend_35 { pt3dadd( 417.493, 536.791, 18.121, 0.2288 ) }
    dend_35 { pt3dadd( 416.605, 537.109, 17.64, 0.2288 ) }
    dend_35 { pt3dadd( 415.948, 537.68, 18.2661, 0.3112 ) }
    dend_35 { pt3dadd( 415.158, 537.841, 18.8415, 0.2288 ) }
    dend_35 { pt3dadd( 414.852, 538.481, 16.9308, 0.2796 ) }
    dend_35 { pt3dadd( 414.051, 538.659, 15.3555, 0.305 ) }
    dend_35 { pt3dadd( 413.785, 539.396, 14.56, 0.305 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 26/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 424.526, 523.99, 18.3243, 0.661 ) }
    dend_34 { pt3dadd( 423.961, 524.753, 20.4714, 0.2796 ) }
    dend_34 { pt3dadd( 423.28, 524.295, 20.16, 0.305 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 368.266, 556.454, 26.88, 0.3814 ) }
    dend_28 { pt3dadd( 368.354, 556.974, 27.1499, 0.4494 ) }
    dend_28 { pt3dadd( 368.482, 558.08, 26.6549, 0.2892 ) }
    dend_28 { pt3dadd( 368.788, 558.94, 26.32, 0.292 ) }
    dend_28 { pt3dadd( 369.538, 559.665, 26.6, 0.3274 ) }
    dend_28 { pt3dadd( 369.991, 560.687, 26.7378, 0.2686 ) }
    dend_28 { pt3dadd( 370.114, 561.639, 26.1492, 0.517 ) }
    dend_28 { pt3dadd( 370.465, 562.537, 26.1282, 0.5946 ) }
    dend_28 { pt3dadd( 370.88, 563.413, 26.0364, 0.3274 ) }
    dend_28 { pt3dadd( 371.742, 564.032, 26.6, 0.5042 ) }
    dend_28 { pt3dadd( 372.327, 564.698, 25.2308, 0.3898 ) }
    dend_28 { pt3dadd( 373.197, 564.938, 25.72, 0.396 ) }
    dend_28 { pt3dadd( 374.16, 565.129, 25.5408, 0.3924 ) }
    dend_28 { pt3dadd( 374.842, 565.888, 24.9967, 0.2288 ) }
    dend_28 { pt3dadd( 375.491, 566.509, 25.76, 0.2288 ) }
    dend_28 { pt3dadd( 376.441, 566.869, 26.0184, 0.3952 ) }
    dend_28 { pt3dadd( 377.159, 567.737, 25.9468, 0.5342 ) }
    dend_28 { pt3dadd( 377.672, 568.466, 25.604, 0.3048 ) }
    dend_28 { pt3dadd( 378.357, 569.328, 25.8672, 0.3428 ) }
    dend_28 { pt3dadd( 379.062, 570.181, 25.5629, 0.4382 ) }
    dend_28 { pt3dadd( 379.349, 571.058, 26.122, 0.5486 ) }
    dend_28 { pt3dadd( 379.573, 572.112, 25.9468, 0.4048 ) }
    dend_28 { pt3dadd( 379.794, 573.096, 25.2087, 0.4984 ) }
    dend_28 { pt3dadd( 379.773, 573.995, 24.64, 0.2384 ) }
    dend_28 { pt3dadd( 379.579, 575.08, 24.64, 0.3036 ) }
    dend_28 { pt3dadd( 379.03, 575.993, 24.1604, 0.2816 ) }
    dend_28 { pt3dadd( 378.288, 576.817, 24.36, 0.3304 ) }
    dend_28 { pt3dadd( 377.851, 577.785, 24.4689, 0.3006 ) }
    dend_28 { pt3dadd( 377.732, 578.873, 23.9705, 0.252 ) }
    dend_28 { pt3dadd( 377.284, 579.918, 23.8011, 0.2288 ) }
    dend_28 { pt3dadd( 376.918, 580.915, 24.3079, 0.2626 ) }
    dend_28 { pt3dadd( 376.605, 581.718, 25.2, 0.2546 ) }
    dend_28 { pt3dadd( 376.932, 582.808, 25.1885, 0.4198 ) }
    dend_28 { pt3dadd( 376.732, 583.756, 24.36, 0.5848 ) }
    dend_28 { pt3dadd( 377.29, 584.685, 24.1111, 0.661 ) }
    dend_28 { pt3dadd( 377.406, 585.467, 25.9291, 0.2514 ) }
    dend_28 { pt3dadd( 377.446, 586.414, 25.3733, 0.2288 ) }
    dend_28 { pt3dadd( 377.978, 587.031, 24.0937, 0.243 ) }
    dend_28 { pt3dadd( 378.103, 587.522, 26.2301, 0.2504 ) }
    dend_28 { pt3dadd( 378.547, 588.304, 26.8626, 0.2288 ) }
    dend_28 { pt3dadd( 378.954, 588.897, 25.1216, 0.5644 ) }
    dend_28 { pt3dadd( 379.098, 589.786, 25.3999, 0.4032 ) }
    dend_28 { pt3dadd( 379.193, 590.35, 24.3107, 0.4272 ) }
    dend_28 { pt3dadd( 379.464, 591.148, 22.96, 0.2484 ) }
    dend_28 { pt3dadd( 379.79, 592.123, 23.301, 0.4322 ) }
    dend_28 { pt3dadd( 379.919, 593.123, 23.4024, 0.3676 ) }
    dend_28 { pt3dadd( 379.922, 594.075, 23.4836, 0.5986 ) }
    dend_28 { pt3dadd( 380.079, 594.935, 22.5204, 0.661 ) }
    dend_28 { pt3dadd( 380.105, 596.001, 21.84, 0.478 ) }
    dend_28 { pt3dadd( 379.857, 597.09, 21.84, 0.424 ) }
    dend_28 { pt3dadd( 380.346, 598.035, 21.6336, 0.7066 ) }
    dend_28 { pt3dadd( 380.38, 599.11, 21.6059, 0.839 ) }
    dend_28 { pt3dadd( 380.845, 600.047, 21.3788, 0.4322 ) }
    dend_28 { pt3dadd( 381.29, 600.881, 21.0322, 0.5348 ) }
    dend_28 { pt3dadd( 381.681, 601.778, 20.2594, 0.527 ) }
    dend_28 { pt3dadd( 382.021, 602.496, 19.6328, 0.5078 ) }
    dend_28 { pt3dadd( 382.767, 603.067, 19.9531, 0.6664 ) }
    dend_28 { pt3dadd( 383.815, 603.309, 20.5744, 0.667 ) }
    dend_28 { pt3dadd( 384.879, 603.422, 21.2797, 0.559 ) }
    dend_28 { pt3dadd( 385.286, 603.46, 18.9638, 0.5878 ) }
    dend_28 { pt3dadd( 385.379, 603.689, 16.7549, 0.4102 ) }
    dend_28 { pt3dadd( 386.214, 604.032, 17.08, 0.5848 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 91/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 368.266, 556.454, 26.88, 0.3814 ) }
    dend_27 { pt3dadd( 368.672, 557.635, 26.738, 0.2478 ) }
    dend_27 { pt3dadd( 368.621, 558.695, 26.3298, 0.329 ) }
    dend_27 { pt3dadd( 368.409, 559.546, 26.88, 0.2748 ) }
    dend_27 { pt3dadd( 367.77, 560.416, 26.88, 0.2878 ) }
    dend_27 { pt3dadd( 367.177, 561.135, 26.04, 0.241 ) }
    dend_27 { pt3dadd( 366.334, 561.828, 25.7564, 0.2638 ) }
    dend_27 { pt3dadd( 365.571, 562.509, 26.0968, 0.358 ) }
    dend_27 { pt3dadd( 364.792, 563.228, 25.76, 0.5166 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 363.861, 563.847, 25.9468, 0.377 ) }
    dend_27 { pt3dadd( 363.049, 564.525, 25.387, 0.3686 ) }
    dend_27 { pt3dadd( 362.224, 565.292, 25.3128, 0.3332 ) }
    dend_27 { pt3dadd( 361.329, 565.925, 25.6799, 0.305 ) }
    dend_27 { pt3dadd( 360.818, 566.863, 25.76, 0.2288 ) }
    dend_27 { pt3dadd( 360.153, 567.424, 25.76, 0.2288 ) }
    dend_27 { pt3dadd( 359.039, 567.535, 25.5461, 0.3634 ) }
    dend_27 { pt3dadd( 358.095, 567.922, 25.6572, 0.3724 ) }
    dend_27 { pt3dadd( 357.285, 568.403, 26.1344, 0.483 ) }
    dend_27 { pt3dadd( 356.786, 568.706, 24.9987, 0.2288 ) }
    dend_27 { pt3dadd( 355.897, 569.269, 25.1656, 0.4904 ) }
    dend_27 { pt3dadd( 355.092, 570.021, 25.2823, 0.4276 ) }
    dend_27 { pt3dadd( 354.21, 570.284, 24.64, 0.3794 ) }
    dend_27 { pt3dadd( 353.39, 570.29, 25.9034, 0.4168 ) }
    dend_27 { pt3dadd( 352.458, 570.631, 25.2045, 0.5064 ) }
    dend_27 { pt3dadd( 351.411, 571.013, 25.4593, 0.2854 ) }
    dend_27 { pt3dadd( 350.558, 571.314, 25.1765, 0.5726 ) }
    dend_27 { pt3dadd( 349.811, 571.917, 24.3872, 0.2288 ) }
    dend_27 { pt3dadd( 348.814, 571.888, 24.6834, 0.4348 ) }
    dend_27 { pt3dadd( 347.924, 572.164, 24.4202, 0.5084 ) }
    dend_27 { pt3dadd( 347.1, 572.748, 24.6464, 0.6102 ) }
    dend_27 { pt3dadd( 346.143, 573.225, 25.0816, 0.5746 ) }
    dend_27 { pt3dadd( 345.361, 573.599, 25.2333, 0.4576 ) }
    dend_27 { pt3dadd( 344.318, 573.932, 25.0306, 0.5382 ) }
    dend_27 { pt3dadd( 343.531, 574.436, 23.9154, 0.334 ) }
    dend_27 { pt3dadd( 342.695, 575.039, 24.64, 0.5368 ) }
    dend_27 { pt3dadd( 341.868, 575.519, 24.3267, 0.4922 ) }
    dend_27 { pt3dadd( 341.141, 576.233, 24.64, 0.5084 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 370.478, 417.598, 43.0889, 0.3814 ) }
    dend_21 { pt3dadd( 369.874, 417.992, 42.3102, 0.521 ) }
    dend_21 { pt3dadd( 368.829, 418.256, 41.6727, 0.3012 ) }
    dend_21 { pt3dadd( 367.853, 418.546, 42.149, 0.3998 ) }
    dend_21 { pt3dadd( 367.052, 418.361, 43.4442, 0.681 ) }
    dend_21 { pt3dadd( 365.969, 418.475, 43.96, 0.602 ) }
    dend_21 { pt3dadd( 365.012, 418.478, 45.0075, 0.4576 ) }
    dend_21 { pt3dadd( 364.155, 419.022, 44.828, 0.3862 ) }
    dend_21 { pt3dadd( 363.109, 419.147, 44.9333, 0.345 ) }
    dend_21 { pt3dadd( 362.078, 419.275, 45.3597, 0.431 ) }
    dend_21 { pt3dadd( 361.288, 418.721, 45.1408, 0.4334 ) }
    dend_21 { pt3dadd( 360.367, 418.704, 45.9967, 0.3866 ) }
    dend_21 { pt3dadd( 359.562, 418.933, 46.6458, 0.5496 ) }
    dend_21 { pt3dadd( 358.708, 419.047, 46.3056, 0.5608 ) }
    dend_21 { pt3dadd( 357.783, 419.362, 46.2857, 0.6356 ) }
    dend_21 { pt3dadd( 357.108, 419.382, 47.8674, 0.3512 ) }
    dend_21 { pt3dadd( 356.023, 419.39, 47.3189, 0.435 ) }
    dend_21 { pt3dadd( 355.414, 420.077, 46.8196, 0.2792 ) }
    dend_21 { pt3dadd( 354.758, 420.544, 47.0946, 0.4322 ) }
    dend_21 { pt3dadd( 354.32, 421.085, 48.44, 0.5756 ) }
    dend_21 { pt3dadd( 353.507, 421.516, 48.2107, 0.339 ) }
    dend_21 { pt3dadd( 352.74, 422.138, 48.2793, 0.6282 ) }
    dend_21 { pt3dadd( 351.907, 422.701, 48.7665, 0.394 ) }
    dend_21 { pt3dadd( 351.056, 423.225, 49.8798, 0.2324 ) }
    dend_21 { pt3dadd( 350.007, 423.639, 50.12, 0.327 ) }
    dend_21 { pt3dadd( 349.109, 423.79, 49.1322, 0.6244 ) }
    dend_21 { pt3dadd( 348.337, 424.237, 49.826, 0.507 ) }
    dend_21 { pt3dadd( 347.776, 424.797, 49.0, 0.5206 ) }
    dend_21 { pt3dadd( 347.358, 425.64, 49.0, 0.3002 ) }
    dend_21 { pt3dadd( 346.361, 425.95, 49.28, 0.3936 ) }
    dend_21 { pt3dadd( 345.832, 426.737, 50.6047, 0.4576 ) }
    dend_21 { pt3dadd( 344.95, 427.185, 50.4098, 0.387 ) }
    dend_21 { pt3dadd( 344.115, 427.425, 49.84, 0.5058 ) }
    dend_21 { pt3dadd( 343.559, 428.328, 49.8509, 0.3126 ) }
    dend_21 { pt3dadd( 342.639, 428.785, 50.1206, 0.5852 ) }
    dend_21 { pt3dadd( 342.04, 429.548, 50.9701, 0.5176 ) }
    dend_21 { pt3dadd( 341.512, 430.508, 51.6155, 0.3238 ) }
    dend_21 { pt3dadd( 340.911, 431.186, 51.924, 0.4156 ) }
    dend_21 { pt3dadd( 340.121, 431.916, 51.2607, 0.3362 ) }
    dend_21 { pt3dadd( 339.68, 432.685, 52.0808, 0.6608 ) }
    dend_21 { pt3dadd( 338.936, 433.34, 52.64, 0.2288 ) }
    dend_21 { pt3dadd( 337.982, 433.934, 52.4471, 0.2288 ) }
    dend_21 { pt3dadd( 337.353, 434.865, 52.6112, 0.2288 ) }
    dend_21 { pt3dadd( 337.251, 435.998, 52.64, 0.2288 ) }
    dend_21 { pt3dadd( 337.06, 437.085, 52.64, 0.2288 ) }
    dend_21 { pt3dadd( 335.937, 437.126, 52.8413, 0.2288 ) }
    dend_21 { pt3dadd( 335.496, 438.027, 53.209, 0.3994 ) }
    dend_21 { pt3dadd( 334.742, 438.73, 53.2, 0.4404 ) }
    dend_21 { pt3dadd( 334.827, 439.704, 53.9795, 0.5592 ) }
    dend_21 { pt3dadd( 334.16, 440.326, 53.9193, 0.519 ) }
    dend_21 { pt3dadd( 333.509, 440.754, 55.097, 0.2346 ) }
    dend_21 { pt3dadd( 332.635, 441.323, 54.696, 0.305 ) }
    dend_21 { pt3dadd( 331.831, 442.073, 54.2139, 0.2542 ) }
    dend_21 { pt3dadd( 331.316, 442.972, 54.859, 0.4752 ) }
    dend_21 { pt3dadd( 331.074, 444.055, 55.3591, 0.4438 ) }
    dend_21 { pt3dadd( 330.558, 445.026, 55.4212, 0.3814 ) }
    dend_21 { pt3dadd( 329.766, 445.842, 55.47, 0.357 ) }
    dend_21 { pt3dadd( 328.729, 446.261, 55.72, 0.2842 ) }
    dend_21 { pt3dadd( 327.685, 446.703, 55.72, 0.2348 ) }
    dend_21 { pt3dadd( 326.674, 447.223, 55.72, 0.2288 ) }
    dend_21 { pt3dadd( 325.657, 447.711, 55.7166, 0.2754 ) }
    dend_21 { pt3dadd( 324.863, 448.425, 56.565, 0.3304 ) }
    dend_21 { pt3dadd( 323.863, 448.892, 56.9909, 0.2744 ) }
    dend_21 { pt3dadd( 322.764, 449.152, 57.4, 0.2316 ) }
    dend_21 { pt3dadd( 321.686, 449.462, 57.6489, 0.3962 ) }
    dend_21 { pt3dadd( 320.706, 449.659, 57.0578, 0.5508 ) }
    dend_21 { pt3dadd( 319.9, 450.173, 57.4994, 0.4322 ) }
    dend_21 { pt3dadd( 319.07, 450.783, 58.2235, 0.3118 ) }
    dend_21 { pt3dadd( 318.329, 451.442, 57.1539, 0.3398 ) }
    dend_21 { pt3dadd( 317.333, 451.943, 57.3894, 0.2628 ) }
    dend_21 { pt3dadd( 316.372, 452.429, 57.5817, 0.2288 ) }
    dend_21 { pt3dadd( 315.957, 453.276, 57.96, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_21 { pt3dadd( 315.63, 454.211, 57.68, 0.2288 ) }
    dend_21 { pt3dadd( 315.065, 454.969, 57.68, 0.2288 ) }
    dend_21 { pt3dadd( 314.378, 455.652, 57.6416, 0.2648 ) }
    dend_21 { pt3dadd( 313.914, 456.419, 58.3173, 0.2288 ) }
    dend_21 { pt3dadd( 313.352, 457.212, 58.182, 0.2288 ) }
    dend_21 { pt3dadd( 312.859, 458.135, 58.6648, 0.2288 ) }
    dend_21 { pt3dadd( 312.453, 458.998, 59.08, 0.2414 ) }
    dend_21 { pt3dadd( 311.842, 459.909, 58.8333, 0.3976 ) }
    dend_21 { pt3dadd( 311.085, 460.752, 58.8308, 0.4576 ) }
    dend_21 { pt3dadd( 310.355, 461.574, 59.3412, 0.4576 ) }
    dend_21 { pt3dadd( 309.63, 462.423, 59.8083, 0.4422 ) }
    dend_21 { pt3dadd( 308.902, 463.198, 60.7138, 0.2842 ) }
    dend_21 { pt3dadd( 308.253, 464.086, 61.3536, 0.2828 ) }
    dend_21 { pt3dadd( 307.557, 464.972, 61.32, 0.483 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 14/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 370.478, 417.598, 43.0889, 0.3814 ) }
    dend_20 { pt3dadd( 370.77, 417.56, 43.12, 0.6102 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 16/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 371.246, 418.69, 39.7676, 0.483 ) }
    dend_12 { pt3dadd( 370.552, 419.084, 40.0977, 0.6212 ) }
    dend_12 { pt3dadd( 369.484, 419.404, 39.76, 0.7372 ) }
    dend_12 { pt3dadd( 368.578, 419.741, 39.48, 0.3118 ) }
    dend_12 { pt3dadd( 367.94, 420.275, 40.2956, 0.2288 ) }
    dend_12 { pt3dadd( 367.598, 421.279, 39.4716, 0.3254 ) }
    dend_12 { pt3dadd( 367.277, 422.042, 39.76, 0.2612 ) }
    dend_12 { pt3dadd( 366.967, 422.826, 38.9166, 0.402 ) }
    dend_12 { pt3dadd( 366.232, 423.379, 39.2588, 0.5176 ) }
    dend_12 { pt3dadd( 365.447, 424.008, 40.5107, 0.6234 ) }
    dend_12 { pt3dadd( 364.492, 424.429, 40.3959, 0.4878 ) }
    dend_12 { pt3dadd( 363.608, 424.793, 39.8611, 0.5318 ) }
    dend_12 { pt3dadd( 363.045, 425.656, 39.48, 0.6178 ) }
    dend_12 { pt3dadd( 362.112, 426.252, 39.6029, 0.4374 ) }
    dend_12 { pt3dadd( 361.377, 427.082, 39.48, 0.2992 ) }
    dend_12 { pt3dadd( 360.536, 427.56, 39.4979, 0.5104 ) }
    dend_12 { pt3dadd( 359.622, 428.128, 38.7859, 0.6164 ) }
    dend_12 { pt3dadd( 358.948, 428.562, 37.5099, 0.4776 ) }
    dend_12 { pt3dadd( 358.07, 429.16, 36.9877, 0.4322 ) }
    dend_12 { pt3dadd( 356.999, 429.43, 37.3873, 0.305 ) }
    dend_12 { pt3dadd( 355.98, 429.658, 38.197, 0.5658 ) }
    dend_12 { pt3dadd( 355.07, 429.581, 37.6354, 0.6544 ) }
    dend_12 { pt3dadd( 354.48, 429.503, 38.4003, 0.3304 ) }
    dend_12 { pt3dadd( 353.609, 429.294, 36.8203, 0.5234 ) }
    dend_12 { pt3dadd( 352.853, 428.589, 37.037, 0.652 ) }
    dend_12 { pt3dadd( 352.191, 428.428, 38.9225, 0.7776 ) }
    dend_12 { pt3dadd( 351.182, 428.212, 39.4019, 0.6102 ) }
    dend_12 { pt3dadd( 350.431, 427.967, 38.36, 0.571 ) }
    dend_12 { pt3dadd( 349.42, 427.728, 38.5482, 0.5334 ) }
    dend_12 { pt3dadd( 348.395, 427.518, 38.6302, 0.2904 ) }
    dend_12 { pt3dadd( 347.894, 427.672, 36.68, 0.5756 ) }
    dend_12 { pt3dadd( 347.042, 428.268, 36.68, 0.6692 ) }
    dend_12 { pt3dadd( 346.338, 428.741, 37.4559, 0.4424 ) }
    dend_12 { pt3dadd( 345.803, 428.838, 35.6308, 0.3886 ) }
    dend_12 { pt3dadd( 345.174, 429.549, 36.0248, 0.516 ) }
    dend_12 { pt3dadd( 344.471, 430.193, 35.4497, 0.7534 ) }
    dend_12 { pt3dadd( 343.862, 430.969, 35.7448, 0.5592 ) }
    dend_12 { pt3dadd( 343.033, 431.606, 36.1029, 0.675 ) }
    dend_12 { pt3dadd( 342.257, 432.083, 35.264, 0.3608 ) }
    dend_12 { pt3dadd( 341.364, 432.322, 36.1379, 0.4844 ) }
    dend_12 { pt3dadd( 340.545, 432.775, 36.68, 0.5848 ) }
    dend_12 { pt3dadd( 339.515, 433.169, 36.6439, 0.5116 ) }
    dend_12 { pt3dadd( 338.65, 433.659, 36.6526, 0.4922 ) }
    dend_12 { pt3dadd( 337.582, 433.805, 36.6657, 0.4608 ) }
    dend_12 { pt3dadd( 336.529, 433.576, 36.1309, 0.2288 ) }
    dend_12 { pt3dadd( 335.841, 434.115, 36.68, 0.3318 ) }
    dend_12 { pt3dadd( 334.977, 434.181, 37.7591, 0.3018 ) }
    dend_12 { pt3dadd( 335.044, 434.898, 38.5986, 0.4576 ) }
    dend_12 { pt3dadd( 334.596, 435.292, 37.3523, 0.5084 ) }
    dend_12 { pt3dadd( 333.299, 435.81, 38.2234, 0.4452 ) }
    dend_12 { pt3dadd( 332.571, 436.666, 38.0568, 0.5826 ) }
    dend_12 { pt3dadd( 331.794, 437.058, 36.9894, 0.4576 ) }
    dend_12 { pt3dadd( 330.999, 437.188, 36.4848, 0.3534 ) }
    dend_12 { pt3dadd( 330.154, 437.351, 37.3229, 0.3134 ) }
    dend_12 { pt3dadd( 329.374, 437.569, 37.5466, 0.5186 ) }
    dend_12 { pt3dadd( 328.415, 437.823, 38.5473, 0.3814 ) }
    dend_12 { pt3dadd( 327.693, 437.511, 37.6183, 0.4586 ) }
    dend_12 { pt3dadd( 326.691, 437.499, 37.5651, 0.4562 ) }
    dend_12 { pt3dadd( 325.752, 437.58, 38.341, 0.3084 ) }
    dend_12 { pt3dadd( 324.768, 437.444, 38.0685, 0.5686 ) }
    dend_12 { pt3dadd( 323.726, 437.241, 37.7717, 0.3638 ) }
    dend_12 { pt3dadd( 323.238, 437.182, 39.3137, 0.3814 ) }
    dend_12 { pt3dadd( 322.169, 437.339, 39.667, 0.5084 ) }
    dend_12 { pt3dadd( 321.092, 437.18, 39.48, 0.5084 ) }
    dend_12 { pt3dadd( 320.013, 437.527, 39.3898, 0.5338 ) }
    dend_12 { pt3dadd( 319.002, 437.713, 39.4934, 0.54 ) }
    dend_12 { pt3dadd( 318.191, 438.003, 38.8984, 0.4654 ) }
    dend_12 { pt3dadd( 317.122, 438.113, 38.3911, 0.4408 ) }
    dend_12 { pt3dadd( 316.014, 437.964, 38.64, 0.3184 ) }
    dend_12 { pt3dadd( 314.895, 437.975, 38.8808, 0.3196 ) }
    dend_12 { pt3dadd( 313.997, 438.643, 38.5764, 0.292 ) }
    dend_12 { pt3dadd( 313.138, 438.862, 37.924, 0.3656 ) }
    dend_12 { pt3dadd( 312.057, 438.792, 37.7502, 0.4224 ) }
    dend_12 { pt3dadd( 311.069, 438.738, 38.5809, 0.5084 ) }
    dend_12 { pt3dadd( 309.97, 438.838, 39.0438, 0.4148 ) }
    dend_12 { pt3dadd( 308.84, 438.9, 39.3347, 0.3692 ) }
    dend_12 { pt3dadd( 307.863, 439.061, 40.0803, 0.345 ) }
    dend_12 { pt3dadd( 306.846, 439.494, 40.3511, 0.3892 ) }
    dend_12 { pt3dadd( 305.742, 439.7, 40.0618, 0.5308 ) }
    dend_12 { pt3dadd( 305.096, 440.097, 41.5738, 0.3544 ) }
    dend_12 { pt3dadd( 304.158, 440.108, 41.5626, 0.4054 ) }
    dend_12 { pt3dadd( 303.42, 440.014, 39.8885, 0.4576 ) }
    dend_12 { pt3dadd( 302.357, 439.873, 40.04, 0.305 ) }
    dend_12 { pt3dadd( 301.345, 440.306, 40.0786, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( 300.459, 441.022, 40.04, 0.4094 ) }
    dend_12 { pt3dadd( 299.552, 441.656, 39.5959, 0.4428 ) }
    dend_12 { pt3dadd( 298.689, 442.141, 40.3189, 0.6346 ) }
    dend_12 { pt3dadd( 297.638, 441.911, 39.6477, 0.5134 ) }
    dend_12 { pt3dadd( 296.739, 441.767, 39.5872, 0.4096 ) }
    dend_12 { pt3dadd( 295.82, 441.477, 39.8488, 0.507 ) }
    dend_12 { pt3dadd( 294.78, 441.791, 39.8532, 0.5318 ) }
    dend_12 { pt3dadd( 293.73, 441.932, 40.3785, 0.5338 ) }
    dend_12 { pt3dadd( 292.762, 442.27, 40.348, 0.305 ) }
    dend_12 { pt3dadd( 292.06, 442.386, 41.3762, 0.4336 ) }
    dend_12 { pt3dadd( 291.642, 442.957, 40.243, 0.3712 ) }
    dend_12 { pt3dadd( 291.023, 442.629, 40.9133, 0.3744 ) }
    dend_12 { pt3dadd( 290.263, 442.675, 39.76, 0.356 ) }
    dend_12 { pt3dadd( 289.431, 442.862, 39.6844, 0.2994 ) }
    dend_12 { pt3dadd( 288.668, 442.391, 39.3963, 0.2288 ) }
    dend_12 { pt3dadd( 287.702, 442.537, 39.2966, 0.5386 ) }
    dend_12 { pt3dadd( 286.898, 442.728, 38.6439, 0.424 ) }
    dend_12 { pt3dadd( 285.997, 442.582, 39.7474, 0.3992 ) }
    dend_12 { pt3dadd( 284.965, 442.614, 40.5471, 0.4636 ) }
    dend_12 { pt3dadd( 284.212, 442.385, 39.5503, 0.5466 ) }
    dend_12 { pt3dadd( 283.131, 442.61, 39.48, 0.2532 ) }
    dend_12 { pt3dadd( 282.139, 442.576, 38.9903, 0.3922 ) }
    dend_12 { pt3dadd( 281.265, 442.27, 39.7172, 0.3604 ) }
    dend_12 { pt3dadd( 280.532, 442.037, 40.1027, 0.3892 ) }
    dend_12 { pt3dadd( 279.764, 441.62, 39.9848, 0.5142 ) }
    dend_12 { pt3dadd( 279.018, 441.986, 38.6369, 0.4446 ) }
    dend_12 { pt3dadd( 278.01, 442.404, 38.8794, 0.4494 ) }
    dend_12 { pt3dadd( 276.95, 442.686, 38.3782, 0.5798 ) }
    dend_12 { pt3dadd( 275.821, 442.614, 38.701, 0.4916 ) }
    dend_12 { pt3dadd( 274.802, 442.397, 38.92, 0.4576 ) }
    dend_12 { pt3dadd( 274.355, 442.69, 38.6089, 0.6864 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 31/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 371.246, 418.69, 39.7676, 0.483 ) }
    dend_11 { pt3dadd( 370.665, 418.842, 39.7888, 0.6048 ) }
    dend_11 { pt3dadd( 369.558, 418.832, 39.9288, 0.6422 ) }
    dend_11 { pt3dadd( 368.495, 418.488, 40.4432, 0.485 ) }
    dend_11 { pt3dadd( 367.565, 417.889, 40.5997, 0.3478 ) }
    dend_11 { pt3dadd( 366.702, 417.154, 40.2315, 0.2894 ) }
    dend_11 { pt3dadd( 365.765, 416.544, 40.4544, 0.312 ) }
    dend_11 { pt3dadd( 364.691, 416.295, 40.3886, 0.3304 ) }
    dend_11 { pt3dadd( 363.579, 416.115, 40.5829, 0.3652 ) }
    dend_11 { pt3dadd( 362.488, 415.857, 40.362, 0.4166 ) }
    dend_11 { pt3dadd( 361.414, 415.495, 40.3614, 0.5258 ) }
    dend_11 { pt3dadd( 360.353, 415.102, 40.7697, 0.598 ) }
    dend_11 { pt3dadd( 359.243, 414.856, 40.88, 0.5908 ) }
    dend_11 { pt3dadd( 358.145, 414.542, 40.8797, 0.5066 ) }
    dend_11 { pt3dadd( 357.036, 414.26, 40.878, 0.4042 ) }
    dend_11 { pt3dadd( 355.924, 413.99, 40.8668, 0.3814 ) }
    dend_11 { pt3dadd( 354.836, 413.645, 40.7968, 0.3814 ) }
    dend_11 { pt3dadd( 353.781, 413.247, 40.3603, 0.422 ) }
    dend_11 { pt3dadd( 352.661, 413.114, 40.0394, 0.391 ) }
    dend_11 { pt3dadd( 351.602, 413.135, 40.9206, 0.4024 ) }
    dend_11 { pt3dadd( 350.629, 413.379, 42.2495, 0.385 ) }
    dend_11 { pt3dadd( 349.574, 413.523, 41.6489, 0.4506 ) }
    dend_11 { pt3dadd( 348.475, 413.423, 40.9388, 0.4812 ) }
    dend_11 { pt3dadd( 347.384, 413.737, 40.9556, 0.5544 ) }
    dend_11 { pt3dadd( 346.315, 414.1, 41.41, 0.5834 ) }
    dend_11 { pt3dadd( 345.259, 414.471, 40.88, 0.6356 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 399.04, 429.572, 21.8414, 0.8898 ) }
    dend_6 { pt3dadd( 399.209, 430.02, 20.7077, 0.6226 ) }
    dend_6 { pt3dadd( 399.549, 430.724, 18.725, 0.2288 ) }
    dend_6 { pt3dadd( 400.259, 430.994, 17.1408, 0.2288 ) }
    dend_6 { pt3dadd( 401.082, 431.295, 18.4951, 0.2288 ) }
    dend_6 { pt3dadd( 401.575, 431.615, 20.1645, 0.2288 ) }
    dend_6 { pt3dadd( 402.486, 431.042, 20.8586, 0.2288 ) }
    dend_6 { pt3dadd( 403.447, 430.532, 20.8869, 0.2526 ) }
    dend_6 { pt3dadd( 404.531, 430.228, 20.9941, 0.3078 ) }
    dend_6 { pt3dadd( 405.167, 429.428, 21.665, 0.378 ) }
    dend_6 { pt3dadd( 405.486, 428.362, 22.2852, 0.3908 ) }
    dend_6 { pt3dadd( 405.551, 427.261, 22.0368, 0.3644 ) }
    dend_6 { pt3dadd( 405.12, 426.315, 21.0916, 0.3204 ) }
    dend_6 { pt3dadd( 404.473, 425.576, 19.6904, 0.3238 ) }
    dend_6 { pt3dadd( 404.736, 424.792, 18.2717, 0.3524 ) }
    dend_6 { pt3dadd( 404.276, 424.113, 16.5799, 0.4312 ) }
    dend_6 { pt3dadd( 403.146, 424.081, 16.24, 0.5592 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 399.04, 429.572, 21.8414, 0.8898 ) }
    dend_5 { pt3dadd( 398.191, 430.821, 21.8546, 0.8268 ) }
    dend_5 { pt3dadd( 397.561, 431.774, 21.9159, 0.926 ) }
    dend_5 { pt3dadd( 396.983, 432.748, 22.239, 0.9188 ) }
    dend_5 { pt3dadd( 396.44, 433.733, 22.7108, 0.8674 ) }
    dend_5 { pt3dadd( 395.823, 434.683, 22.7458, 0.839 ) }
    dend_5 { pt3dadd( 395.156, 435.588, 22.29, 0.8506 ) }
    dend_5 { pt3dadd( 394.534, 436.527, 21.8901, 0.876 ) }
    dend_5 { pt3dadd( 393.852, 437.444, 21.84, 0.9132 ) }
    dend_5 { pt3dadd( 393.112, 438.316, 21.84, 0.929 ) }
    dend_5 { pt3dadd( 392.41, 439.217, 21.84, 0.9036 ) }
    dend_5 { pt3dadd( 391.725, 440.131, 21.84, 0.8546 ) }
    dend_5 { pt3dadd( 391.027, 441.036, 21.8397, 0.8018 ) }
    dend_5 { pt3dadd( 390.309, 441.923, 21.8392, 0.776 ) }
    dend_5 { pt3dadd( 389.503, 442.734, 21.8369, 0.7626 ) }
    dend_5 { pt3dadd( 388.648, 443.491, 21.8252, 0.7626 ) }
    dend_5 { pt3dadd( 387.814, 444.269, 21.749, 0.7504 ) }
    dend_5 { pt3dadd( 387.079, 445.12, 21.3223, 0.7248 ) }
    dend_5 { pt3dadd( 386.348, 445.971, 20.9782, 0.7118 ) }
    dend_5 { pt3dadd( 385.6, 446.834, 20.8849, 0.7252 ) }
    dend_5 { pt3dadd( 384.842, 447.686, 20.746, 0.7652 ) }
    dend_5 { pt3dadd( 384.108, 448.562, 20.72, 0.788 ) }
    dend_5 { pt3dadd( 383.578, 449.563, 20.72, 0.788 ) }
    dend_5 { pt3dadd( 383.126, 450.612, 20.72, 0.7594 ) }
    dend_5 { pt3dadd( 382.678, 451.665, 20.72, 0.7228 ) }
    dend_5 { pt3dadd( 382.117, 452.65, 20.72, 0.6974 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_5 { pt3dadd( 381.47, 453.594, 20.72, 0.7008 ) }
    dend_5 { pt3dadd( 380.901, 454.583, 20.72, 0.7264 ) }
    dend_5 { pt3dadd( 380.335, 455.579, 20.72, 0.7518 ) }
    dend_5 { pt3dadd( 379.656, 456.494, 20.7203, 0.748 ) }
    dend_5 { pt3dadd( 378.932, 457.378, 20.7217, 0.7372 ) }
    dend_5 { pt3dadd( 378.263, 458.305, 20.7273, 0.752 ) }
    dend_5 { pt3dadd( 377.639, 459.264, 20.7564, 0.8074 ) }
    dend_5 { pt3dadd( 377.033, 460.231, 20.9009, 0.8538 ) }
    dend_5 { pt3dadd( 376.394, 461.144, 21.4662, 0.818 ) }
    dend_5 { pt3dadd( 375.632, 461.967, 21.8126, 0.7092 ) }
    dend_5 { pt3dadd( 374.898, 462.84, 21.8254, 0.5814 ) }
    dend_5 { pt3dadd( 374.441, 463.87, 21.7417, 0.5498 ) }
    dend_5 { pt3dadd( 373.749, 464.674, 21.2492, 0.5926 ) }
    dend_5 { pt3dadd( 372.754, 465.196, 20.8314, 0.6784 ) }
    dend_5 { pt3dadd( 371.799, 465.81, 20.8054, 0.7118 ) }
    dend_5 { pt3dadd( 370.967, 466.567, 21.2355, 0.6768 ) }
    dend_5 { pt3dadd( 370.182, 467.384, 21.597, 0.59 ) }
    dend_5 { pt3dadd( 369.474, 468.253, 21.2478, 0.5232 ) }
    dend_5 { pt3dadd( 368.681, 469.054, 20.841, 0.5266 ) }
    dend_5 { pt3dadd( 367.676, 469.556, 20.8555, 0.5708 ) }
    dend_5 { pt3dadd( 366.642, 470.008, 21.2828, 0.6034 ) }
    dend_5 { pt3dadd( 365.592, 470.391, 20.9815, 0.6478 ) }
    dend_5 { pt3dadd( 364.556, 470.852, 20.7466, 0.7176 ) }
    dend_5 { pt3dadd( 363.562, 471.417, 20.72, 0.775 ) }
    dend_5 { pt3dadd( 362.672, 472.129, 20.72, 0.788 ) }
    dend_5 { pt3dadd( 361.848, 472.923, 20.72, 0.75 ) }
    dend_5 { pt3dadd( 361.033, 473.725, 20.72, 0.7372 ) }
    dend_5 { pt3dadd( 360.193, 474.501, 20.7194, 0.7182 ) }
    dend_5 { pt3dadd( 359.276, 475.181, 20.7178, 0.7308 ) }
    dend_5 { pt3dadd( 358.409, 475.926, 20.7108, 0.7182 ) }
    dend_5 { pt3dadd( 357.595, 476.729, 20.6825, 0.7118 ) }
    dend_5 { pt3dadd( 356.794, 477.543, 20.5587, 0.7118 ) }
    dend_5 { pt3dadd( 356.059, 478.372, 19.9254, 0.7504 ) }
    dend_5 { pt3dadd( 355.489, 479.344, 19.6316, 0.782 ) }
    dend_5 { pt3dadd( 354.98, 480.368, 19.5964, 0.7686 ) }
    dend_5 { pt3dadd( 354.479, 481.396, 19.5793, 0.7038 ) }
    dend_5 { pt3dadd( 353.978, 482.424, 19.4858, 0.6668 ) }
    dend_5 { pt3dadd( 353.483, 483.43, 18.9697, 0.661 ) }
    dend_5 { pt3dadd( 353.043, 484.47, 18.5503, 0.6812 ) }
    dend_5 { pt3dadd( 352.583, 485.516, 18.4593, 0.7068 ) }
    dend_5 { pt3dadd( 351.941, 486.456, 18.3742, 0.7322 ) }
    dend_5 { pt3dadd( 351.216, 487.306, 17.8284, 0.7578 ) }
    dend_5 { pt3dadd( 350.693, 488.3, 17.4194, 0.7626 ) }
    dend_5 { pt3dadd( 350.138, 489.299, 17.36, 0.7626 ) }
    dend_5 { pt3dadd( 349.665, 490.339, 17.36, 0.7626 ) }
    dend_5 { pt3dadd( 349.031, 491.287, 17.36, 0.741 ) }
    dend_5 { pt3dadd( 348.408, 492.247, 17.3597, 0.694 ) }
    dend_5 { pt3dadd( 347.96, 493.296, 17.3589, 0.643 ) }
    dend_5 { pt3dadd( 347.487, 494.337, 17.355, 0.6356 ) }
    dend_5 { pt3dadd( 346.814, 495.258, 17.337, 0.6356 ) }
    dend_5 { pt3dadd( 346.039, 496.099, 17.2612, 0.6138 ) }
    dend_5 { pt3dadd( 345.329, 496.979, 16.8636, 0.4994 ) }
    dend_5 { pt3dadd( 344.656, 497.883, 16.3738, 0.4376 ) }
    dend_5 { pt3dadd( 343.609, 497.919, 17.0467, 0.4322 ) }
    dend_5 { pt3dadd( 342.622, 498.467, 17.2953, 0.5548 ) }
    dend_5 { pt3dadd( 341.657, 499.062, 16.9607, 0.609 ) }
    dend_5 { pt3dadd( 340.683, 499.585, 16.24, 0.6356 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 57/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 268.726, 444.864, 22.3068, 0.2288 ) }
    dend_78 { pt3dadd( 268.118, 445.388, 23.2669, 0.2574 ) }
    dend_78 { pt3dadd( 267.341, 446.06, 24.498, 0.2938 ) }
    dend_78 { pt3dadd( 266.565, 446.732, 25.7289, 0.3304 ) }
    dend_78 { pt3dadd( 266.021, 447.533, 25.2, 0.2288 ) }
    dend_78 { pt3dadd( 265.408, 447.995, 24.64, 0.2288 ) }
    dend_78 { pt3dadd( 264.612, 448.448, 24.64, 0.2288 ) }
    dend_78 { pt3dadd( 263.467, 448.448, 24.64, 0.2288 ) }
    dend_78 { pt3dadd( 262.47, 448.763, 24.36, 0.2288 ) }
    dend_78 { pt3dadd( 261.746, 449.327, 23.4702, 0.2632 ) }
    dend_78 { pt3dadd( 260.997, 449.871, 22.12, 0.229 ) }
    dend_78 { pt3dadd( 260.457, 450.393, 23.0048, 0.2288 ) }
    dend_78 { pt3dadd( 259.581, 451.028, 22.9804, 0.2374 ) }
    dend_78 { pt3dadd( 258.853, 451.663, 22.3124, 0.3438 ) }
    dend_78 { pt3dadd( 258.539, 452.094, 23.4665, 0.2288 ) }
    dend_78 { pt3dadd( 257.943, 452.829, 23.52, 0.2288 ) }
    dend_78 { pt3dadd( 256.893, 453.242, 23.52, 0.2288 ) }
    dend_78 { pt3dadd( 255.76, 453.324, 23.52, 0.2288 ) }
    dend_78 { pt3dadd( 254.998, 453.717, 22.8222, 0.2288 ) }
    dend_78 { pt3dadd( 254.24, 454.371, 22.4, 0.2288 ) }
    dend_78 { pt3dadd( 253.103, 454.397, 22.4, 0.2288 ) }
    dend_78 { pt3dadd( 252.072, 454.643, 22.4, 0.2288 ) }
    dend_78 { pt3dadd( 251.119, 455.245, 22.3759, 0.2738 ) }
    dend_78 { pt3dadd( 250.326, 455.742, 23.1479, 0.2288 ) }
    dend_78 { pt3dadd( 249.236, 455.935, 23.24, 0.2288 ) }
    dend_78 { pt3dadd( 248.592, 456.685, 23.24, 0.2288 ) }
    dend_78 { pt3dadd( 247.448, 456.685, 23.24, 0.2288 ) }
    dend_78 { pt3dadd( 246.379, 457.06, 23.24, 0.2288 ) }
    dend_78 { pt3dadd( 245.298, 457.371, 23.24, 0.2288 ) }
    dend_78 { pt3dadd( 244.154, 457.371, 23.24, 0.2498 ) }
    dend_78 { pt3dadd( 243.057, 457.639, 23.053, 0.3528 ) }
    dend_78 { pt3dadd( 242.125, 458.109, 22.0727, 0.4544 ) }
    dend_78 { pt3dadd( 241.266, 458.592, 22.3073, 0.432 ) }
    dend_78 { pt3dadd( 240.144, 458.612, 22.3, 0.293 ) }
    dend_78 { pt3dadd( 239.032, 458.515, 22.7699, 0.2292 ) }
    dend_78 { pt3dadd( 238.111, 458.178, 23.8, 0.2806 ) }
    dend_78 { pt3dadd( 237.266, 457.98, 22.7816, 0.308 ) }
    dend_78 { pt3dadd( 236.696, 457.656, 22.9788, 0.2592 ) }
    dend_78 { pt3dadd( 236.579, 457.613, 24.8578, 0.2372 ) }
    dend_78 { pt3dadd( 235.783, 457.142, 25.1782, 0.2288 ) }
    dend_78 { pt3dadd( 234.64, 457.142, 25.2, 0.2288 ) }
    dend_78 { pt3dadd( 233.636, 456.891, 24.9612, 0.2938 ) }
    dend_78 { pt3dadd( 232.647, 457.188, 25.7522, 0.3858 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_78 { pt3dadd( 231.798, 457.486, 26.8778, 0.2288 ) }
    dend_78 { pt3dadd( 230.654, 457.486, 26.88, 0.2352 ) }
    dend_78 { pt3dadd( 229.517, 457.486, 26.6594, 0.2942 ) }
    dend_78 { pt3dadd( 228.439, 457.368, 26.32, 0.3634 ) }
    dend_78 { pt3dadd( 227.495, 457.028, 26.6, 0.2508 ) }
    dend_78 { pt3dadd( 226.538, 457.137, 25.8658, 0.4576 ) }
    dend_78 { pt3dadd( 226.089, 456.685, 26.147, 0.2288 ) }
    dend_78 { pt3dadd( 225.216, 456.181, 25.76, 0.2288 ) }
    dend_78 { pt3dadd( 224.541, 455.384, 25.76, 0.2288 ) }
    dend_78 { pt3dadd( 223.525, 454.899, 25.76, 0.2288 ) }
    dend_78 { pt3dadd( 222.383, 454.854, 25.76, 0.2288 ) }
    dend_78 { pt3dadd( 221.239, 454.854, 25.76, 0.2288 ) }
    dend_78 { pt3dadd( 220.095, 454.854, 25.76, 0.2288 ) }
    dend_78 { pt3dadd( 218.951, 454.845, 25.76, 0.2288 ) }
    dend_78 { pt3dadd( 218.083, 454.356, 25.4912, 0.2814 ) }
    dend_78 { pt3dadd( 217.256, 453.598, 25.48, 0.3682 ) }
    dend_78 { pt3dadd( 216.546, 452.953, 24.6364, 0.3316 ) }
    dend_78 { pt3dadd( 215.538, 452.692, 24.08, 0.2288 ) }
    dend_78 { pt3dadd( 214.42, 452.675, 23.8882, 0.2288 ) }
    dend_78 { pt3dadd( 213.785, 452.324, 24.2903, 0.2288 ) }
    dend_78 { pt3dadd( 212.938, 451.88, 24.3886, 0.3006 ) }
    dend_78 { pt3dadd( 212.14, 451.362, 23.8, 0.4576 ) }
    dend_78 { pt3dadd( 211.297, 451.422, 24.36, 0.2288 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 23/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 268.726, 444.864, 22.3068, 0.2288 ) }
    dend_77 { pt3dadd( 268.726, 445.13, 22.12, 0.4322 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 25/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 303.147, 427.271, 36.96, 0.5338 ) }
    dend_73 { pt3dadd( 302.614, 427.438, 35.8548, 0.4082 ) }
    dend_73 { pt3dadd( 302.135, 428.063, 36.7175, 0.4162 ) }
    dend_73 { pt3dadd( 301.397, 428.514, 35.8977, 0.413 ) }
    dend_73 { pt3dadd( 300.548, 429.0, 36.3759, 0.483 ) }
    dend_73 { pt3dadd( 299.464, 429.153, 36.4, 0.345 ) }
    dend_73 { pt3dadd( 298.789, 429.733, 37.3097, 0.4734 ) }
    dend_73 { pt3dadd( 298.147, 430.505, 37.9602, 0.5374 ) }
    dend_73 { pt3dadd( 297.559, 431.445, 37.9478, 0.5052 ) }
    dend_73 { pt3dadd( 297.125, 431.645, 37.9884, 0.4816 ) }
    dend_73 { pt3dadd( 296.176, 431.686, 37.3335, 0.5158 ) }
    dend_73 { pt3dadd( 295.53, 432.089, 38.5725, 0.631 ) }
    dend_73 { pt3dadd( 295.348, 432.805, 38.64, 0.2768 ) }
    dend_73 { pt3dadd( 294.827, 433.533, 39.2913, 0.6196 ) }
    dend_73 { pt3dadd( 293.94, 433.788, 39.3114, 0.5318 ) }
    dend_73 { pt3dadd( 293.553, 434.656, 39.7608, 0.577 ) }
    dend_73 { pt3dadd( 293.221, 435.386, 38.64, 0.5848 ) }
    dend_73 { pt3dadd( 292.338, 435.674, 39.615, 0.7966 ) }
    dend_73 { pt3dadd( 291.888, 436.235, 39.9521, 0.4322 ) }
    dend_73 { pt3dadd( 291.361, 436.772, 38.8923, 0.4576 ) }
    dend_73 { pt3dadd( 290.726, 437.654, 39.4584, 0.3892 ) }
    dend_73 { pt3dadd( 290.341, 438.455, 38.484, 0.4026 ) }
    dend_73 { pt3dadd( 289.668, 439.135, 38.5577, 0.5592 ) }
    dend_73 { pt3dadd( 289.344, 440.143, 38.8144, 0.7118 ) }
    dend_73 { pt3dadd( 288.842, 440.776, 38.075, 0.5842 ) }
    dend_73 { pt3dadd( 288.183, 441.449, 37.938, 0.463 ) }
    dend_73 { pt3dadd( 287.602, 442.274, 38.6131, 0.5324 ) }
    dend_73 { pt3dadd( 286.984, 442.862, 39.2386, 0.6102 ) }
    dend_73 { pt3dadd( 286.178, 443.473, 38.8833, 0.6796 ) }
    dend_73 { pt3dadd( 285.239, 443.989, 39.1838, 0.625 ) }
    dend_73 { pt3dadd( 284.68, 444.537, 39.9143, 0.3304 ) }
    dend_73 { pt3dadd( 283.999, 445.07, 40.6627, 0.4448 ) }
    dend_73 { pt3dadd( 283.408, 445.817, 39.772, 0.4458 ) }
    dend_73 { pt3dadd( 282.765, 446.388, 40.88, 0.2288 ) }
    dend_73 { pt3dadd( 281.893, 447.035, 41.5036, 0.2288 ) }
    dend_73 { pt3dadd( 281.137, 447.712, 41.3174, 0.3436 ) }
    dend_73 { pt3dadd( 280.31, 448.407, 41.0164, 0.393 ) }
    dend_73 { pt3dadd( 279.351, 448.982, 41.097, 0.356 ) }
    dend_73 { pt3dadd( 278.785, 449.777, 40.4303, 0.4414 ) }
    dend_73 { pt3dadd( 278.022, 450.592, 40.32, 0.4576 ) }
    dend_73 { pt3dadd( 277.259, 451.428, 40.5748, 0.3652 ) }
    dend_73 { pt3dadd( 276.368, 452.092, 40.6515, 0.3394 ) }
    dend_73 { pt3dadd( 275.713, 452.823, 41.5643, 0.476 ) }
    dend_73 { pt3dadd( 275.107, 453.342, 40.9111, 0.6276 ) }
    dend_73 { pt3dadd( 274.509, 453.868, 41.1662, 0.3452 ) }
    dend_73 { pt3dadd( 273.818, 454.397, 41.3608, 0.364 ) }
    dend_73 { pt3dadd( 272.818, 454.239, 40.9004, 0.3104 ) }
    dend_73 { pt3dadd( 272.194, 454.968, 40.88, 0.2288 ) }
    dend_73 { pt3dadd( 271.586, 455.511, 41.16, 0.2288 ) }
    dend_73 { pt3dadd( 271.305, 456.489, 41.1894, 0.2782 ) }
    dend_73 { pt3dadd( 270.794, 456.844, 42.0773, 0.4068 ) }
    dend_73 { pt3dadd( 269.999, 456.469, 41.1617, 0.229 ) }
    dend_73 { pt3dadd( 269.069, 456.928, 41.4215, 0.295 ) }
    dend_73 { pt3dadd( 268.116, 457.464, 41.3501, 0.3786 ) }
    dend_73 { pt3dadd( 267.236, 457.974, 41.603, 0.4804 ) }
    dend_73 { pt3dadd( 266.661, 458.515, 42.0966, 0.4576 ) }
    dend_73 { pt3dadd( 265.831, 459.007, 41.3552, 0.483 ) }
    dend_73 { pt3dadd( 264.97, 459.657, 40.88, 0.5704 ) }
    dend_73 { pt3dadd( 264.684, 459.85, 42.8394, 0.4576 ) }
    dend_73 { pt3dadd( 263.915, 460.463, 43.0648, 0.5682 ) }
    dend_73 { pt3dadd( 263.441, 461.064, 42.6331, 0.503 ) }
    dend_73 { pt3dadd( 263.107, 462.014, 42.6135, 0.455 ) }
    dend_73 { pt3dadd( 262.496, 462.553, 42.0, 0.4492 ) }
    dend_73 { pt3dadd( 261.768, 463.09, 41.6324, 0.401 ) }
    dend_73 { pt3dadd( 261.134, 463.631, 42.3408, 0.2288 ) }
    dend_73 { pt3dadd( 260.365, 464.432, 42.4362, 0.2288 ) }
    dend_73 { pt3dadd( 259.413, 465.002, 42.28, 0.2298 ) }
    dend_73 { pt3dadd( 258.574, 465.696, 42.3321, 0.5704 ) }
    dend_73 { pt3dadd( 257.719, 466.42, 42.5734, 0.4636 ) }
    dend_73 { pt3dadd( 257.161, 467.297, 42.8778, 0.3166 ) }
    dend_73 { pt3dadd( 256.388, 468.0, 43.0858, 0.3444 ) }
    dend_73 { pt3dadd( 255.485, 468.505, 43.0752, 0.4634 ) }
    dend_73 { pt3dadd( 254.572, 468.977, 42.5205, 0.4062 ) }
    dend_73 { pt3dadd( 253.52, 469.28, 43.12, 0.2832 ) }
    dend_73 { pt3dadd( 252.453, 469.589, 42.84, 0.4078 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_73 { pt3dadd( 251.768, 470.245, 43.7559, 0.2456 ) }
    dend_73 { pt3dadd( 250.952, 470.894, 43.96, 0.2288 ) }
    dend_73 { pt3dadd( 249.992, 471.317, 43.5296, 0.2558 ) }
    dend_73 { pt3dadd( 249.067, 471.589, 43.477, 0.2542 ) }
    dend_73 { pt3dadd( 248.331, 472.243, 43.1388, 0.5338 ) }
    dend_73 { pt3dadd( 247.701, 473.059, 43.68, 0.536 ) }
    dend_73 { pt3dadd( 246.995, 473.938, 43.4, 0.2632 ) }
    dend_73 { pt3dadd( 246.072, 474.599, 43.4784, 0.3224 ) }
    dend_73 { pt3dadd( 245.04, 474.991, 43.4006, 0.458 ) }
    dend_73 { pt3dadd( 244.393, 475.807, 44.2151, 0.3526 ) }
    dend_73 { pt3dadd( 243.784, 476.72, 43.8816, 0.2904 ) }
    dend_73 { pt3dadd( 243.147, 477.569, 44.3864, 0.294 ) }
    dend_73 { pt3dadd( 242.523, 478.476, 44.0479, 0.5078 ) }
    dend_73 { pt3dadd( 241.618, 479.117, 44.4735, 0.5556 ) }
    dend_73 { pt3dadd( 240.962, 479.897, 43.8166, 0.4576 ) }
    dend_73 { pt3dadd( 241.041, 480.742, 43.7444, 0.5424 ) }
    dend_73 { pt3dadd( 240.32, 481.069, 44.982, 0.4094 ) }
    dend_73 { pt3dadd( 239.285, 481.206, 44.5497, 0.5928 ) }
    dend_73 { pt3dadd( 238.535, 481.063, 45.8441, 0.4598 ) }
    dend_73 { pt3dadd( 237.634, 481.542, 45.278, 0.3832 ) }
    dend_73 { pt3dadd( 236.673, 481.981, 45.3558, 0.461 ) }
    dend_73 { pt3dadd( 235.798, 482.689, 45.5185, 0.5494 ) }
    dend_73 { pt3dadd( 235.059, 483.501, 46.2459, 0.4164 ) }
    dend_73 { pt3dadd( 234.491, 484.387, 45.92, 0.5814 ) }
    dend_73 { pt3dadd( 233.721, 485.12, 46.5181, 0.545 ) }
    dend_73 { pt3dadd( 232.746, 485.522, 46.1826, 0.5176 ) }
    dend_73 { pt3dadd( 232.007, 486.051, 46.5276, 0.3206 ) }
    dend_73 { pt3dadd( 231.422, 486.389, 46.6206, 0.3304 ) }
    dend_73 { pt3dadd( 230.41, 486.369, 45.6604, 0.4408 ) }
    dend_73 { pt3dadd( 229.791, 486.741, 47.1988, 0.453 ) }
    dend_73 { pt3dadd( 228.991, 487.06, 46.2647, 0.4166 ) }
    dend_73 { pt3dadd( 228.317, 487.446, 44.9792, 0.354 ) }
    dend_73 { pt3dadd( 227.393, 487.517, 45.8284, 0.4948 ) }
    dend_73 { pt3dadd( 226.611, 487.94, 46.5472, 0.4562 ) }
    dend_73 { pt3dadd( 225.716, 488.419, 46.788, 0.5098 ) }
    dend_73 { pt3dadd( 224.741, 488.959, 46.6455, 0.5762 ) }
    dend_73 { pt3dadd( 224.156, 489.346, 44.7269, 0.4686 ) }
    dend_73 { pt3dadd( 223.501, 490.106, 43.734, 0.2396 ) }
    dend_73 { pt3dadd( 222.478, 490.197, 44.5855, 0.4548 ) }
    dend_73 { pt3dadd( 221.886, 490.383, 46.2003, 0.6864 ) }
    dend_73 { pt3dadd( 220.968, 490.874, 47.2517, 0.5114 ) }
    dend_73 { pt3dadd( 220.195, 491.392, 48.6483, 0.4576 ) }
    dend_73 { pt3dadd( 219.43, 491.462, 47.3948, 0.4784 ) }
    dend_73 { pt3dadd( 218.792, 491.234, 46.6533, 0.566 ) }
    dend_73 { pt3dadd( 218.046, 490.96, 47.3942, 0.5084 ) }
    dend_73 { pt3dadd( 217.249, 490.936, 47.04, 0.372 ) }
    dend_73 { pt3dadd( 216.235, 491.414, 46.9932, 0.6164 ) }
    dend_73 { pt3dadd( 215.311, 491.815, 47.4709, 0.5242 ) }
    dend_73 { pt3dadd( 214.242, 491.671, 48.3882, 0.2888 ) }
    dend_73 { pt3dadd( 213.206, 491.289, 49.0, 0.5294 ) }
    dend_73 { pt3dadd( 212.164, 490.952, 48.4604, 0.8312 ) }
    dend_73 { pt3dadd( 211.096, 490.614, 48.095, 0.7522 ) }
    dend_73 { pt3dadd( 210.518, 490.776, 46.02, 0.4576 ) }
    dend_73 { pt3dadd( 209.556, 490.634, 44.9064, 0.5848 ) }
    dend_73 { pt3dadd( 208.894, 490.433, 45.2536, 0.4006 ) }
    dend_73 { pt3dadd( 208.278, 490.346, 47.2346, 0.5344 ) }
    dend_73 { pt3dadd( 207.244, 490.206, 47.32, 0.5592 ) }
    dend_73 { pt3dadd( 206.498, 490.172, 48.8925, 0.4386 ) }
    dend_73 { pt3dadd( 205.703, 489.746, 48.0956, 0.2288 ) }
    dend_73 { pt3dadd( 205.282, 490.204, 48.5562, 0.5528 ) }
    dend_73 { pt3dadd( 204.169, 490.178, 48.8589, 0.6524 ) }
    dend_73 { pt3dadd( 203.783, 490.204, 48.1323, 0.3618 ) }
    dend_73 { pt3dadd( 202.84, 490.03, 48.5839, 0.6472 ) }
    dend_73 { pt3dadd( 202.046, 489.394, 48.6982, 0.545 ) }
    dend_73 { pt3dadd( 201.693, 488.946, 50.12, 0.5312 ) }
    dend_73 { pt3dadd( 200.929, 489.077, 49.8674, 0.3528 ) }
    dend_73 { pt3dadd( 200.06, 489.174, 50.2776, 0.2874 ) }
    dend_73 { pt3dadd( 199.43, 489.756, 49.1347, 0.8956 ) }
    dend_73 { pt3dadd( 198.544, 490.331, 49.6524, 0.5764 ) }
    dend_73 { pt3dadd( 197.671, 490.662, 50.2093, 0.4522 ) }
    dend_73 { pt3dadd( 197.109, 490.89, 51.5166, 0.6346 ) }
    dend_73 { pt3dadd( 196.115, 490.945, 50.8432, 0.5758 ) }
    dend_73 { pt3dadd( 195.143, 491.021, 49.5698, 0.5768 ) }
    dend_73 { pt3dadd( 195.09, 490.56, 48.2222, 0.305 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 74/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 303.147, 427.271, 36.96, 0.5338 ) }
    dend_72 { pt3dadd( 302.816, 427.742, 37.52, 0.4068 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 76/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 544.315, 514.114, 84.56, 0.2288 ) }
    dend_62 { pt3dadd( 544.201, 515.143, 84.56, 0.3304 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 78/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 544.315, 514.114, 84.56, 0.2288 ) }
    dend_59 { pt3dadd( 544.38, 514.632, 85.2261, 0.2546 ) }
    dend_59 { pt3dadd( 544.505, 515.639, 86.52, 0.305 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 81/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 369.398, 434.339, 84.7468, 0.356 ) }
    dend_44 { pt3dadd( 368.736, 434.642, 84.4886, 0.2288 ) }
    dend_44 { pt3dadd( 367.874, 435.063, 84.56, 0.2288 ) }
    dend_44 { pt3dadd( 366.917, 435.627, 84.84, 0.2288 ) }
    dend_44 { pt3dadd( 365.967, 436.262, 84.9304, 0.2288 ) }
    dend_44 { pt3dadd( 365.089, 436.973, 85.12, 0.2288 ) }
    dend_44 { pt3dadd( 364.183, 437.612, 85.1886, 0.2288 ) }
    dend_44 { pt3dadd( 363.809, 438.607, 85.4305, 0.2288 ) }
    dend_44 { pt3dadd( 363.344, 439.388, 86.52, 0.2288 ) }
    dend_44 { pt3dadd( 362.377, 439.914, 87.08, 0.2288 ) }
    dend_44 { pt3dadd( 361.236, 439.982, 87.08, 0.2288 ) }
    dend_44 { pt3dadd( 360.122, 440.089, 87.08, 0.2288 ) }
    dend_44 { pt3dadd( 359.345, 440.838, 86.882, 0.2288 ) }
    dend_44 { pt3dadd( 358.866, 441.584, 87.08, 0.2288 ) }
    dend_44 { pt3dadd( 357.842, 441.924, 86.7787, 0.2288 ) }
    dend_44 { pt3dadd( 357.112, 442.499, 86.24, 0.2288 ) }
    dend_44 { pt3dadd( 356.118, 442.595, 85.708, 0.2288 ) }
    dend_44 { pt3dadd( 355.476, 443.38, 85.3353, 0.2288 ) }
    dend_44 { pt3dadd( 354.866, 444.188, 85.1211, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_44 { pt3dadd( 354.285, 444.633, 85.6246, 0.2288 ) }
    dend_44 { pt3dadd( 353.419, 444.978, 85.68, 0.356 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 2/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 369.398, 434.339, 84.7468, 0.356 ) }
    dend_43 { pt3dadd( 370.018, 433.618, 85.3563, 0.4322 ) }
    dend_43 { pt3dadd( 370.096, 433.526, 83.2532, 0.3304 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 5/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 307.557, 464.972, 61.32, 0.483 ) }
    dend_23 { pt3dadd( 307.148, 465.131, 60.8966, 0.2926 ) }
    dend_23 { pt3dadd( 306.822, 466.106, 61.6776, 0.2796 ) }
    dend_23 { pt3dadd( 306.596, 467.182, 62.16, 0.2796 ) }
    dend_23 { pt3dadd( 306.049, 468.158, 62.2751, 0.2744 ) }
    dend_23 { pt3dadd( 305.569, 469.061, 62.6338, 0.2288 ) }
    dend_23 { pt3dadd( 305.009, 469.935, 62.44, 0.2288 ) }
    dend_23 { pt3dadd( 304.639, 470.956, 62.72, 0.3514 ) }
    dend_23 { pt3dadd( 304.723, 471.975, 63.28, 0.2712 ) }
    dend_23 { pt3dadd( 304.358, 472.83, 64.1567, 0.2288 ) }
    dend_23 { pt3dadd( 304.075, 473.388, 65.8, 0.2288 ) }
    dend_23 { pt3dadd( 304.075, 474.532, 65.8, 0.2288 ) }
    dend_23 { pt3dadd( 303.961, 475.667, 65.8, 0.2288 ) }
    dend_23 { pt3dadd( 303.961, 476.811, 65.8176, 0.2288 ) }
    dend_23 { pt3dadd( 303.892, 477.943, 66.08, 0.2288 ) }
    dend_23 { pt3dadd( 303.625, 478.932, 66.6546, 0.2288 ) }
    dend_23 { pt3dadd( 303.821, 479.751, 68.182, 0.2288 ) }
    dend_23 { pt3dadd( 303.296, 480.027, 69.4921, 0.2626 ) }
    dend_23 { pt3dadd( 302.689, 480.932, 69.7875, 0.2288 ) }
    dend_23 { pt3dadd( 302.301, 481.961, 70.2346, 0.2288 ) }
    dend_23 { pt3dadd( 302.125, 483.0, 71.1424, 0.2288 ) }
    dend_23 { pt3dadd( 301.6, 483.73, 72.4842, 0.2288 ) }
    dend_23 { pt3dadd( 300.961, 484.555, 72.9238, 0.2288 ) }
    dend_23 { pt3dadd( 300.329, 485.241, 73.36, 0.2288 ) }
    dend_23 { pt3dadd( 299.73, 486.142, 73.7568, 0.2288 ) }
    dend_23 { pt3dadd( 299.026, 486.883, 73.92, 0.2288 ) }
    dend_23 { pt3dadd( 297.99, 487.187, 73.9502, 0.2288 ) }
    dend_23 { pt3dadd( 297.44, 487.56, 75.7747, 0.3436 ) }
    dend_23 { pt3dadd( 297.144, 488.488, 76.3904, 0.2406 ) }
    dend_23 { pt3dadd( 296.559, 489.151, 76.5232, 0.2796 ) }
    dend_23 { pt3dadd( 296.076, 489.909, 77.387, 0.2288 ) }
    dend_23 { pt3dadd( 295.051, 490.21, 77.1137, 0.2316 ) }
    dend_23 { pt3dadd( 294.506, 491.04, 77.84, 0.3304 ) }
    dend_23 { pt3dadd( 293.612, 491.562, 78.3465, 0.2288 ) }
    dend_23 { pt3dadd( 292.654, 492.032, 78.9902, 0.2288 ) }
    dend_23 { pt3dadd( 292.207, 492.942, 79.24, 0.2288 ) }
    dend_23 { pt3dadd( 291.492, 493.651, 80.0386, 0.2288 ) }
    dend_23 { pt3dadd( 290.824, 494.194, 81.1104, 0.2288 ) }
    dend_23 { pt3dadd( 290.084, 494.956, 81.8152, 0.2288 ) }
    dend_23 { pt3dadd( 289.717, 495.993, 82.4552, 0.2288 ) }
    dend_23 { pt3dadd( 289.311, 496.956, 81.9294, 0.2288 ) }
    dend_23 { pt3dadd( 288.673, 497.709, 82.021, 0.2288 ) }
    dend_23 { pt3dadd( 288.233, 498.425, 83.4168, 0.2288 ) }
    dend_23 { pt3dadd( 287.74, 499.411, 83.6959, 0.2288 ) }
    dend_23 { pt3dadd( 287.223, 500.389, 83.5078, 0.2288 ) }
    dend_23 { pt3dadd( 287.25, 501.423, 83.2938, 0.2288 ) }
    dend_23 { pt3dadd( 287.168, 502.134, 82.4785, 0.2288 ) }
    dend_23 { pt3dadd( 287.174, 502.73, 84.3942, 0.2796 ) }
    dend_23 { pt3dadd( 286.915, 503.589, 85.4, 0.3814 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 54/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 307.557, 464.972, 61.32, 0.483 ) }
    dend_22 { pt3dadd( 307.393, 465.608, 61.32, 0.305 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 56/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 274.355, 442.69, 38.6089, 0.6864 ) }
    dend_14 { pt3dadd( 273.198, 442.976, 37.8092, 0.6446 ) }
    dend_14 { pt3dadd( 272.178, 442.959, 37.2529, 0.4788 ) }
    dend_14 { pt3dadd( 271.471, 442.35, 38.0358, 0.4032 ) }
    dend_14 { pt3dadd( 270.68, 442.149, 37.8678, 0.4776 ) }
    dend_14 { pt3dadd( 269.784, 441.925, 37.4231, 0.3824 ) }
    dend_14 { pt3dadd( 268.728, 441.562, 37.464, 0.4646 ) }
    dend_14 { pt3dadd( 267.678, 441.246, 37.6496, 0.5618 ) }
    dend_14 { pt3dadd( 266.628, 441.241, 37.6124, 0.3814 ) }
    dend_14 { pt3dadd( 265.566, 441.43, 36.7858, 0.3094 ) }
    dend_14 { pt3dadd( 264.539, 441.495, 36.3048, 0.4694 ) }
    dend_14 { pt3dadd( 263.467, 441.698, 36.4104, 0.4662 ) }
    dend_14 { pt3dadd( 262.49, 441.439, 36.2524, 0.3124 ) }
    dend_14 { pt3dadd( 261.482, 441.28, 36.8242, 0.3896 ) }
    dend_14 { pt3dadd( 260.618, 441.248, 37.6244, 0.4176 ) }
    dend_14 { pt3dadd( 259.63, 440.891, 38.0209, 0.4374 ) }
    dend_14 { pt3dadd( 258.745, 440.413, 38.36, 0.2354 ) }
    dend_14 { pt3dadd( 257.618, 440.326, 38.08, 0.238 ) }
    dend_14 { pt3dadd( 256.64, 440.315, 37.1224, 0.305 ) }
    dend_14 { pt3dadd( 255.661, 440.324, 37.9761, 0.4024 ) }
    dend_14 { pt3dadd( 254.595, 440.133, 37.7468, 0.4912 ) }
    dend_14 { pt3dadd( 253.55, 440.105, 37.5511, 0.3246 ) }
    dend_14 { pt3dadd( 252.799, 439.796, 37.2924, 0.3902 ) }
    dend_14 { pt3dadd( 252.233, 439.525, 36.9869, 0.273 ) }
    dend_14 { pt3dadd( 251.28, 439.192, 38.138, 0.234 ) }
    dend_14 { pt3dadd( 250.233, 439.406, 38.3152, 0.3092 ) }
    dend_14 { pt3dadd( 249.306, 439.134, 37.8263, 0.399 ) }
    dend_14 { pt3dadd( 248.313, 438.581, 37.8238, 0.311 ) }
    dend_14 { pt3dadd( 247.44, 438.486, 37.5292, 0.4398 ) }
    dend_14 { pt3dadd( 246.455, 438.304, 37.0227, 0.356 ) }
    dend_14 { pt3dadd( 245.55, 438.495, 37.4732, 0.2478 ) }
    dend_14 { pt3dadd( 244.517, 438.376, 37.1081, 0.4862 ) }
    dend_14 { pt3dadd( 243.754, 437.975, 37.5178, 0.395 ) }
    dend_14 { pt3dadd( 242.635, 437.86, 37.5903, 0.3146 ) }
    dend_14 { pt3dadd( 241.552, 437.599, 37.2565, 0.305 ) }
    dend_14 { pt3dadd( 240.484, 437.514, 36.4311, 0.348 ) }
    dend_14 { pt3dadd( 239.473, 437.466, 36.8469, 0.556 ) }
    dend_14 { pt3dadd( 238.719, 437.19, 36.8161, 0.3314 ) }
    dend_14 { pt3dadd( 237.715, 437.122, 37.7146, 0.297 ) }
    dend_14 { pt3dadd( 236.599, 437.216, 37.9565, 0.2796 ) }
    dend_14 { pt3dadd( 235.46, 437.237, 37.8, 0.2796 ) }
    dend_14 { pt3dadd( 234.339, 437.031, 37.9294, 0.2874 ) }
    dend_14 { pt3dadd( 233.254, 436.785, 38.3183, 0.2936 ) }
    dend_14 { pt3dadd( 232.186, 436.665, 38.2155, 0.4554 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_14 { pt3dadd( 231.327, 436.221, 38.9365, 0.5316 ) }
    dend_14 { pt3dadd( 230.598, 435.48, 38.08, 0.5608 ) }
    dend_14 { pt3dadd( 230.103, 435.164, 39.0216, 0.5246 ) }
    dend_14 { pt3dadd( 229.381, 434.614, 39.0667, 0.3814 ) }
    dend_14 { pt3dadd( 228.488, 434.514, 39.0463, 0.4322 ) }
    dend_14 { pt3dadd( 227.504, 434.272, 39.76, 0.2288 ) }
    dend_14 { pt3dadd( 226.36, 434.262, 39.76, 0.2288 ) }
    dend_14 { pt3dadd( 225.216, 434.262, 39.76, 0.2288 ) }
    dend_14 { pt3dadd( 224.072, 434.252, 39.76, 0.2288 ) }
    dend_14 { pt3dadd( 223.118, 433.812, 39.76, 0.2528 ) }
    dend_14 { pt3dadd( 221.984, 433.725, 39.9132, 0.3468 ) }
    dend_14 { pt3dadd( 220.881, 433.673, 40.5658, 0.4068 ) }
    dend_14 { pt3dadd( 219.784, 433.694, 40.04, 0.356 ) }
    dend_14 { pt3dadd( 218.908, 433.812, 40.5964, 0.4576 ) }
    dend_14 { pt3dadd( 217.908, 433.695, 39.9918, 0.3524 ) }
    dend_14 { pt3dadd( 216.953, 433.963, 39.9638, 0.404 ) }
    dend_14 { pt3dadd( 216.153, 434.138, 41.1888, 0.436 ) }
    dend_14 { pt3dadd( 215.18, 433.805, 41.2824, 0.356 ) }
    dend_14 { pt3dadd( 214.081, 433.526, 41.44, 0.3304 ) }
    dend_14 { pt3dadd( 213.246, 432.966, 41.5279, 0.4824 ) }
    dend_14 { pt3dadd( 212.572, 432.551, 41.4949, 0.2736 ) }
    dend_14 { pt3dadd( 211.523, 432.198, 41.1821, 0.6028 ) }
    dend_14 { pt3dadd( 210.55, 431.874, 40.9329, 0.3422 ) }
    dend_14 { pt3dadd( 209.481, 431.974, 41.44, 0.232 ) }
    dend_14 { pt3dadd( 208.349, 432.028, 41.6382, 0.2902 ) }
    dend_14 { pt3dadd( 207.351, 431.985, 41.3932, 0.3956 ) }
    dend_14 { pt3dadd( 206.314, 431.742, 41.72, 0.2288 ) }
    dend_14 { pt3dadd( 205.208, 431.517, 41.72, 0.2288 ) }
    dend_14 { pt3dadd( 204.064, 431.508, 41.72, 0.2288 ) }
    dend_14 { pt3dadd( 202.996, 431.466, 41.72, 0.483 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 30/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 274.355, 442.69, 38.6089, 0.6864 ) }
    dend_13 { pt3dadd( 273.53, 442.614, 38.64, 0.5338 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 32/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 195.09, 490.56, 48.2222, 0.305 ) }
    dend_75 { pt3dadd( 195.041, 490.704, 47.1094, 0.2886 ) }
    dend_75 { pt3dadd( 194.803, 491.012, 44.6527, 0.2992 ) }
    dend_75 { pt3dadd( 193.797, 490.776, 44.24, 0.2536 ) }
    dend_75 { pt3dadd( 193.164, 490.118, 44.9221, 0.2288 ) }
    dend_75 { pt3dadd( 192.375, 489.522, 45.7853, 0.2288 ) }
    dend_75 { pt3dadd( 191.466, 489.177, 46.48, 0.2288 ) }
    dend_75 { pt3dadd( 190.668, 488.703, 47.5045, 0.2288 ) }
    dend_75 { pt3dadd( 190.171, 488.058, 48.9938, 0.3206 ) }
    dend_75 { pt3dadd( 189.52, 487.242, 49.56, 0.3752 ) }
    dend_75 { pt3dadd( 188.689, 487.001, 48.72, 0.2288 ) }
    dend_75 { pt3dadd( 187.727, 486.695, 48.9286, 0.2288 ) }
    dend_75 { pt3dadd( 186.736, 486.407, 49.3021, 0.2288 ) }
    dend_75 { pt3dadd( 185.889, 485.742, 49.56, 0.2298 ) }
    dend_75 { pt3dadd( 184.954, 485.431, 50.353, 0.4554 ) }
    dend_75 { pt3dadd( 183.98, 485.399, 50.6299, 0.3584 ) }
    dend_75 { pt3dadd( 183.556, 484.748, 49.8686, 0.4576 ) }
    dend_75 { pt3dadd( 182.715, 484.245, 49.5379, 0.396 ) }
    dend_75 { pt3dadd( 181.877, 483.784, 50.4031, 0.5874 ) }
    dend_75 { pt3dadd( 180.953, 483.367, 51.4777, 0.3696 ) }
    dend_75 { pt3dadd( 180.037, 483.297, 52.9161, 0.375 ) }
    dend_75 { pt3dadd( 179.255, 483.34, 54.6549, 0.2288 ) }
    dend_75 { pt3dadd( 178.332, 482.995, 55.44, 0.2288 ) }
    dend_75 { pt3dadd( 177.588, 482.314, 55.4089, 0.3878 ) }
    dend_75 { pt3dadd( 176.928, 482.196, 53.4887, 0.5928 ) }
    dend_75 { pt3dadd( 176.7, 482.166, 51.24, 0.6184 ) }
    dend_75 { pt3dadd( 175.654, 482.024, 51.1039, 0.3698 ) }
    dend_75 { pt3dadd( 175.176, 481.395, 49.5076, 0.2288 ) }
    dend_75 { pt3dadd( 174.044, 481.395, 49.28, 0.2766 ) }
    dend_75 { pt3dadd( 173.215, 481.622, 50.4773, 0.4236 ) }
    dend_75 { pt3dadd( 172.147, 481.405, 50.8911, 0.4582 ) }
    dend_75 { pt3dadd( 171.033, 481.171, 51.1504, 0.486 ) }
    dend_75 { pt3dadd( 169.917, 480.938, 51.4094, 0.5138 ) }
    dend_75 { pt3dadd( 168.803, 480.703, 51.6687, 0.5418 ) }
    dend_75 { pt3dadd( 167.924, 480.625, 52.5566, 0.4094 ) }
    dend_75 { pt3dadd( 167.532, 480.938, 53.6752, 0.5408 ) }
    dend_75 { pt3dadd( 166.671, 480.546, 53.2364, 0.483 ) }
    dend_75 { pt3dadd( 166.169, 480.249, 54.7579, 0.5078 ) }
    dend_75 { pt3dadd( 165.848, 479.635, 55.7875, 0.3814 ) }
    dend_75 { pt3dadd( 165.766, 478.671, 55.7614, 0.6102 ) }
    dend_75 { pt3dadd( 165.8, 478.195, 53.606, 0.3904 ) }
    dend_75 { pt3dadd( 165.771, 477.903, 51.6382, 0.289 ) }
    dend_75 { pt3dadd( 165.048, 477.496, 52.745, 0.4508 ) }
    dend_75 { pt3dadd( 164.464, 476.976, 54.32, 0.822 ) }
    dend_75 { pt3dadd( 163.746, 476.264, 53.76, 0.6514 ) }
    dend_75 { pt3dadd( 163.32, 475.669, 55.1093, 0.7688 ) }
    dend_75 { pt3dadd( 162.815, 474.842, 54.882, 0.6356 ) }
    dend_75 { pt3dadd( 162.542, 474.76, 52.236, 0.4692 ) }
    dend_75 { pt3dadd( 161.601, 474.65, 51.13, 0.4332 ) }
    dend_75 { pt3dadd( 160.591, 474.76, 50.5313, 0.2288 ) }
    dend_75 { pt3dadd( 159.866, 474.792, 52.4157, 0.3132 ) }
    dend_75 { pt3dadd( 159.146, 474.198, 53.0678, 0.2396 ) }
    dend_75 { pt3dadd( 158.69, 473.616, 54.8881, 0.4732 ) }
    dend_75 { pt3dadd( 158.072, 473.55, 55.6968, 0.7436 ) }
    dend_75 { pt3dadd( 157.986, 473.845, 53.76, 0.305 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 87/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 195.09, 490.56, 48.2222, 0.305 ) }
    dend_74 { pt3dadd( 195.51, 490.547, 46.76, 0.483 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 89/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 544.505, 515.639, 86.52, 0.305 ) }
    dend_61 { pt3dadd( 543.971, 515.029, 87.08, 0.305 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 91/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 544.505, 515.639, 86.52, 0.305 ) }
    dend_60 { pt3dadd( 545.148, 516.383, 88.1272, 0.5326 ) }
    dend_60 { pt3dadd( 545.281, 517.318, 88.48, 0.5682 ) }
    dend_60 { pt3dadd( 545.69, 518.287, 87.7643, 0.6082 ) }
    dend_60 { pt3dadd( 546.273, 519.051, 87.9799, 0.3994 ) }
    dend_60 { pt3dadd( 546.578, 519.376, 86.023, 0.2288 ) }
    dend_60 { pt3dadd( 547.052, 519.929, 85.6892, 0.2306 ) }
    dend_60 { pt3dadd( 547.403, 520.701, 86.8092, 0.3 ) }
    dend_60 { pt3dadd( 547.184, 521.565, 88.3571, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_60 { pt3dadd( 547.404, 522.139, 87.6103, 0.5848 ) }
    dend_60 { pt3dadd( 547.56, 523.252, 87.64, 0.4086 ) }
    dend_60 { pt3dadd( 547.747, 524.364, 87.64, 0.3028 ) }
    dend_60 { pt3dadd( 547.747, 525.507, 87.572, 0.2796 ) }
    dend_60 { pt3dadd( 547.616, 526.512, 87.5837, 0.463 ) }
    dend_60 { pt3dadd( 547.404, 527.169, 89.2366, 0.513 ) }
    dend_60 { pt3dadd( 547.177, 527.649, 88.8437, 0.6826 ) }
    dend_60 { pt3dadd( 547.426, 528.442, 87.8346, 0.7562 ) }
    dend_60 { pt3dadd( 547.927, 528.749, 89.4309, 0.6864 ) }
    dend_60 { pt3dadd( 547.747, 529.124, 91.5326, 0.3362 ) }
    dend_60 { pt3dadd( 547.486, 529.627, 89.7786, 0.4216 ) }
    dend_60 { pt3dadd( 546.831, 529.924, 88.2, 0.5034 ) }
    dend_60 { pt3dadd( 546.992, 530.962, 89.0604, 0.702 ) }
    dend_60 { pt3dadd( 547.586, 531.617, 90.5234, 0.6864 ) }
    dend_60 { pt3dadd( 547.812, 532.501, 89.684, 0.2542 ) }
    dend_60 { pt3dadd( 547.938, 533.609, 90.1275, 0.457 ) }
    dend_60 { pt3dadd( 548.174, 534.611, 89.9111, 0.525 ) }
    dend_60 { pt3dadd( 548.539, 535.677, 89.7954, 0.3632 ) }
    dend_60 { pt3dadd( 548.935, 536.513, 90.44, 0.2288 ) }
    dend_60 { pt3dadd( 549.081, 536.899, 92.4011, 0.267 ) }
    dend_60 { pt3dadd( 549.164, 537.799, 93.256, 0.326 ) }
    dend_60 { pt3dadd( 549.781, 538.414, 91.84, 0.7408 ) }
    dend_60 { pt3dadd( 550.263, 539.412, 91.84, 0.5266 ) }
    dend_60 { pt3dadd( 550.497, 540.222, 92.6439, 0.3716 ) }
    dend_60 { pt3dadd( 550.963, 541.176, 92.9135, 0.6228 ) }
    dend_60 { pt3dadd( 551.302, 542.15, 92.7063, 0.7058 ) }
    dend_60 { pt3dadd( 551.715, 543.05, 93.52, 0.2606 ) }
    dend_60 { pt3dadd( 552.156, 543.774, 94.4157, 0.2896 ) }
    dend_60 { pt3dadd( 552.554, 544.717, 94.08, 0.3304 ) }
    dend_60 { pt3dadd( 552.872, 545.795, 94.194, 0.3462 ) }
    dend_60 { pt3dadd( 553.294, 546.656, 95.1364, 0.3494 ) }
    dend_60 { pt3dadd( 554.005, 547.325, 94.8114, 0.5566 ) }
    dend_60 { pt3dadd( 554.127, 548.305, 93.8916, 0.7366 ) }
    dend_60 { pt3dadd( 554.154, 549.007, 95.1608, 0.6864 ) }
    dend_60 { pt3dadd( 554.268, 549.911, 94.3698, 0.5512 ) }
    dend_60 { pt3dadd( 554.786, 550.841, 94.92, 0.5608 ) }
    dend_60 { pt3dadd( 554.953, 551.866, 94.36, 0.305 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 37/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 353.419, 444.978, 85.68, 0.356 ) }
    dend_46 { pt3dadd( 352.726, 445.198, 87.1763, 0.3618 ) }
    dend_46 { pt3dadd( 352.23, 445.675, 89.0249, 0.2288 ) }
    dend_46 { pt3dadd( 351.364, 446.35, 88.76, 0.2314 ) }
    dend_46 { pt3dadd( 350.497, 446.846, 88.5312, 0.2676 ) }
    dend_46 { pt3dadd( 349.95, 447.255, 90.16, 0.2288 ) }
    dend_46 { pt3dadd( 349.372, 448.059, 90.44, 0.2288 ) }
    dend_46 { pt3dadd( 348.766, 448.123, 89.5213, 0.2288 ) }
    dend_46 { pt3dadd( 347.897, 448.339, 88.6197, 0.3304 ) }
    dend_46 { pt3dadd( 347.09, 448.791, 89.04, 0.2542 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 47/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 353.419, 444.978, 85.68, 0.356 ) }
    dend_45 { pt3dadd( 353.267, 445.245, 85.4, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 49/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 202.996, 431.466, 41.72, 0.483 ) }
    dend_16 { pt3dadd( 202.792, 431.097, 42.56, 0.305 ) }
    dend_16 { pt3dadd( 201.692, 430.803, 42.56, 0.2642 ) }
    dend_16 { pt3dadd( 200.592, 430.508, 42.56, 0.2288 ) }
    dend_16 { pt3dadd( 199.534, 430.258, 42.56, 0.2288 ) }
    dend_16 { pt3dadd( 198.39, 430.258, 42.56, 0.2288 ) }
    dend_16 { pt3dadd( 197.246, 430.258, 42.56, 0.2288 ) }
    dend_16 { pt3dadd( 196.102, 430.258, 42.56, 0.2288 ) }
    dend_16 { pt3dadd( 195.033, 429.983, 42.56, 0.2288 ) }
    dend_16 { pt3dadd( 194.02, 429.526, 42.8123, 0.2288 ) }
    dend_16 { pt3dadd( 192.901, 429.357, 42.84, 0.2288 ) }
    dend_16 { pt3dadd( 191.822, 429.126, 43.346, 0.2288 ) }
    dend_16 { pt3dadd( 190.86, 428.556, 43.4, 0.2288 ) }
    dend_16 { pt3dadd( 190.071, 427.923, 43.4, 0.2288 ) }
    dend_16 { pt3dadd( 189.093, 427.372, 43.6545, 0.2288 ) }
    dend_16 { pt3dadd( 188.061, 427.053, 44.263, 0.2288 ) }
    dend_16 { pt3dadd( 186.946, 426.943, 44.7922, 0.2288 ) }
    dend_16 { pt3dadd( 185.803, 426.941, 44.7871, 0.2288 ) }
    dend_16 { pt3dadd( 184.666, 426.941, 44.5284, 0.2288 ) }
    dend_16 { pt3dadd( 183.522, 426.941, 44.52, 0.2288 ) }
    dend_16 { pt3dadd( 182.39, 426.858, 44.5396, 0.2288 ) }
    dend_16 { pt3dadd( 181.507, 426.826, 46.0292, 0.2288 ) }
    dend_16 { pt3dadd( 180.393, 426.826, 46.48, 0.2288 ) }
    dend_16 { pt3dadd( 179.249, 426.826, 46.48, 0.2288 ) }
    dend_16 { pt3dadd( 178.12, 426.884, 46.2, 0.2288 ) }
    dend_16 { pt3dadd( 176.984, 426.992, 46.2115, 0.2288 ) }
    dend_16 { pt3dadd( 175.897, 427.277, 46.4713, 0.2288 ) }
    dend_16 { pt3dadd( 174.759, 427.336, 46.48, 0.2288 ) }
    dend_16 { pt3dadd( 173.66, 427.627, 46.48, 0.2288 ) }
    dend_16 { pt3dadd( 172.516, 427.627, 46.48, 0.2288 ) }
    dend_16 { pt3dadd( 171.377, 427.711, 46.48, 0.2288 ) }
    dend_16 { pt3dadd( 170.266, 427.948, 46.48, 0.2288 ) }
    dend_16 { pt3dadd( 169.164, 428.199, 46.48, 0.2288 ) }
    dend_16 { pt3dadd( 168.077, 428.199, 47.1419, 0.2288 ) }
    dend_16 { pt3dadd( 167.066, 428.199, 47.88, 0.2288 ) }
    dend_16 { pt3dadd( 165.937, 428.37, 47.88, 0.2288 ) }
    dend_16 { pt3dadd( 164.807, 428.542, 47.88, 0.2288 ) }
    dend_16 { pt3dadd( 163.663, 428.542, 47.88, 0.2288 ) }
    dend_16 { pt3dadd( 162.538, 428.542, 48.2782, 0.2288 ) }
    dend_16 { pt3dadd( 161.624, 428.542, 49.6958, 0.2288 ) }
    dend_16 { pt3dadd( 160.488, 428.542, 49.84, 0.2288 ) }
    dend_16 { pt3dadd( 159.344, 428.542, 49.84, 0.2288 ) }
    dend_16 { pt3dadd( 158.208, 428.574, 49.8436, 0.2288 ) }
    dend_16 { pt3dadd( 157.364, 429.178, 50.12, 0.305 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 93/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 202.996, 431.466, 41.72, 0.483 ) }
    dend_15 { pt3dadd( 202.831, 431.059, 41.72, 0.4068 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 157.364, 429.178, 50.12, 0.305 ) }
    dend_18 { pt3dadd( 156.841, 429.603, 50.7819, 0.305 ) }
    dend_18 { pt3dadd( 156.018, 430.272, 51.826, 0.305 ) }
    dend_18 { pt3dadd( 155.171, 430.936, 52.36, 0.2288 ) }
    dend_18 { pt3dadd( 154.676, 431.901, 52.36, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_18 { pt3dadd( 153.873, 432.506, 51.8, 0.2288 ) }
    dend_18 { pt3dadd( 153.109, 433.309, 51.8, 0.2288 ) }
    dend_18 { pt3dadd( 152.11, 433.845, 51.8, 0.2288 ) }
    dend_18 { pt3dadd( 151.083, 434.336, 51.8, 0.2288 ) }
    dend_18 { pt3dadd( 150.256, 435.098, 51.8, 0.2288 ) }
    dend_18 { pt3dadd( 149.635, 435.917, 52.101, 0.2288 ) }
    dend_18 { pt3dadd( 149.03, 436.327, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 148.301, 437.008, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 147.162, 437.085, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 146.02, 437.122, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 144.883, 437.209, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 143.752, 437.351, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 142.608, 437.351, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 141.507, 437.122, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 140.363, 437.122, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 139.219, 437.122, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 138.075, 437.132, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 137.01, 437.498, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 136.082, 438.16, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 135.157, 438.82, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 134.139, 439.279, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 133.162, 439.702, 53.48, 0.2288 ) }
    dend_18 { pt3dadd( 132.246, 440.326, 53.48, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 23/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 157.364, 429.178, 50.12, 0.305 ) }
    dend_17 { pt3dadd( 157.071, 429.458, 50.12, 0.2796 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_63, dend_29, dend_0, dend_79, dend_64, dend_48, dend_30, dend_8, dend_1, dend_81, dend_80, dend_66, dend_65, dend_54, dend_49, dend_37, dend_31, dend_24, dend_9, dend_3, dend_2, dend_83, dend_82, dend_70, dend_67, dend_56, dend_55, dend_51, dend_50, dend_41, dend_38, dend_36, dend_33, dend_32, dend_26, dend_25, dend_19, dend_10, dend_7, dend_4, dend_76, dend_71, dend_69, dend_68, dend_58, dend_57, dend_53, dend_52, dend_47, dend_42, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_21, dend_20, dend_12, dend_11, dend_6, dend_5, dend_78, dend_77, dend_73, dend_72, dend_62, dend_59, dend_44, dend_43, dend_23, dend_22, dend_14, dend_13, dend_75, dend_74, dend_61, dend_60, dend_46, dend_45, dend_16, dend_15, dend_18, dend_17]}
    dend = new SectionList()
    dend_63 dend.append()
    dend_29 dend.append()
    dend_0 dend.append()
    dend_79 dend.append()
    dend_64 dend.append()
    dend_48 dend.append()
    dend_30 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_81 dend.append()
    dend_80 dend.append()
    dend_66 dend.append()
    dend_65 dend.append()
    dend_54 dend.append()
    dend_49 dend.append()
    dend_37 dend.append()
    dend_31 dend.append()
    dend_24 dend.append()
    dend_9 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_83 dend.append()
    dend_82 dend.append()
    dend_70 dend.append()
    dend_67 dend.append()
    dend_56 dend.append()
    dend_55 dend.append()
    dend_51 dend.append()
    dend_50 dend.append()
    dend_41 dend.append()
    dend_38 dend.append()
    dend_36 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_19 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_4 dend.append()
    dend_76 dend.append()
    dend_71 dend.append()
    dend_69 dend.append()
    dend_68 dend.append()
    dend_58 dend.append()
    dend_57 dend.append()
    dend_53 dend.append()
    dend_52 dend.append()
    dend_47 dend.append()
    dend_42 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_78 dend.append()
    dend_77 dend.append()
    dend_73 dend.append()
    dend_72 dend.append()
    dend_62 dend.append()
    dend_59 dend.append()
    dend_44 dend.append()
    dend_43 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_75 dend.append()
    dend_74 dend.append()
    dend_61 dend.append()
    dend_60 dend.append()
    dend_46 dend.append()
    dend_45 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_993, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_993 = new SectionList()
    soma_0 OneSecGrp_SectionRef_993.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_62, dend_59, dend_59, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_61 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.47  // units: uF/cm2
    forsec axon cm = 2.47  // units: uF/cm2
    forsec dend cm = 2.47  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 99.299995  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 3.188557E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.048122797  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 6.095564E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.19128115  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.25341988  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 4.331664E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 2.5834923E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 6.137712E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 9.3179574E-4  // units: S cm-2
        e_pas_nml2 = -80.31951  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.384268E-4  // units: S cm-2
        e_pas_nml2 = -80.31951  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 3.0375506E-6  // units: S cm-2
        e_pas_nml2 = -80.31951  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 7.73512E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0033482937  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_79 nseg = 5
    dend_64 nseg = 7
    dend_48 nseg = 3
    dend_8 nseg = 3
    dend_81 nseg = 5
    dend_54 nseg = 3
    dend_37 nseg = 3
    dend_31 nseg = 3
    dend_24 nseg = 9
    dend_2 nseg = 3
    dend_67 nseg = 3
    dend_56 nseg = 5
    dend_38 nseg = 3
    dend_33 nseg = 7
    dend_4 nseg = 3
    dend_76 nseg = 3
    dend_69 nseg = 5
    dend_28 nseg = 3
    dend_27 nseg = 3
    dend_21 nseg = 5
    dend_12 nseg = 7
    dend_5 nseg = 5
    dend_78 nseg = 3
    dend_73 nseg = 9
    dend_23 nseg = 3
    dend_14 nseg = 5
    dend_75 nseg = 3
    dend_60 nseg = 3
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472299363


