// Cell: cIR216_L23_NBC_2ee5947bbf_0_0
/*
{
  "id" : "cIR216_L23_NBC_2ee5947bbf_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.75872, -10.4532, 0.754391, 3.47327", "-3.51208, -9.3518, 0.693156, 4.11268", "-3.26545, -8.25037, 0.631922, 5.19122", "-3.01882, -7.14893, 0.570687, 5.79177", "-2.77218, -6.04749, 0.509453, 6.43344", "-2.52555, -4.94606, 0.448218, 7.33547", "-2.27891, -3.84462, 0.386984, 7.89448", "-2.03228, -2.74319, 0.325749, 8.07665", "-1.78564, -1.64175, 0.264515, 8.19647", "-1.53901, -0.540314, 0.20328, 8.39724", "-1.29237, 0.561122, 0.142046, 8.72156", "-1.04574, 1.66256, 0.0808113, 9.67228", "-0.799104, 2.76399, 0.0195768, 10.9168", "-0.552469, 3.86543, -0.0416577, 10.7105", "-0.305834, 4.96687, -0.102892, 10.3432", "-0.0591998, 6.0683, -0.164127, 10.3014", "0.187435, 7.16974, -0.225361, 9.6708", "0.43407, 8.27117, -0.286596, 8.78455", "0.680704, 9.37261, -0.34783, 7.41865", "0.927339, 10.474, -0.409065, 4.25873", "1.17397, 11.5755, -0.470299, 2.57124" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.92645, -11.5151, 4.08428, 2.77", "-3.87828, -12.9128, 4.08428, 3.05", "-3.69659, -18.1861, 4.08428, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-5.80645, -9.97153, 7.55429, 0.55", "-6.43431, -10.8712, 9.3354, 0.55", "-7.43488, -12.305, 12.1738, 1.11", "-10.3692, -16.5096, 20.4978, 0.55", "-11.3611, -17.931, 23.3118, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.976448, 9.71593, -7.52571, 0.83", "-0.348996, 11.1596, -8.68204, 0.83", "0.315372, 13.0439, -10.6557, 0.55", "0.650714, 13.9079, -11.5363, 0.83", "0.957695, 14.7672, -12.4591, 0.55", "1.24167, 15.6274, -13.4439, 0.55", "1.6646, 17.0229, -14.9713, 0.83", "2.32972, 19.518, -17.8311, 0.55", "2.67593, 20.9134, -19.3673, 0.83", "3.52318, 23.9957, -22.7317, 0.55", "4.02331, 25.5872, -24.426, 0.55", "4.46256, 26.7662, -25.6704, 0.28", "5.23321, 28.6667, -27.5124, 0.83", "5.83833, 30.1795, -28.7687, 0.28", "6.52373, 32.0518, -30.1214, 0.83", "6.82249, 32.9165, -30.6038, 0.28", "7.56271, 35.1918, -31.6547, 0.55", "7.95555, 36.6475, -32.2186, 0.55", "8.40874, 38.8865, -32.8471, 0.55", "8.93351, 42.696, -33.8081, 0.83", "9.06374, 44.3725, -34.2688, 0.55", "9.15915, 46.2822, -34.8275, 0.83", "9.2338, 49.2019, -35.7494, 0.83", "9.26972, 51.1583, -36.4815, 0.28", "9.32749, 53.8888, -37.7879, 0.83", "9.42964, 56.9351, -39.4432, 0.55", "9.49936, 58.4575, -40.317, 0.55", "9.62955, 61.03, -41.9226, 0.55", "9.86971, 63.8122, -43.7763, 0.55", "10.169, 66.7438, -45.6468, 0.55", "10.395, 68.5594, -46.7228, 0.28", "10.5292, 69.5756, -47.2958, 0.55", "11.0091, 73.3312, -49.3994, 0.28", "11.2245, 74.9763, -50.3037, 0.55", "11.4151, 76.5167, -51.1141, 0.28", "11.7114, 78.7289, -52.276, 0.55", "12.1803, 81.8603, -54.0008, 0.28", "12.4557, 83.5831, -54.9243, 0.55", "13.077, 87.0032, -56.6905, 0.28", "13.3213, 88.2135, -57.3135, 0.55", "13.9159, 90.9247, -58.7583, 0.28", "14.1796, 92.093, -59.3618, 0.28", "14.446, 93.2173, -59.9401, 0.55", "14.9672, 95.5468, -61.2549, 0.28", "15.2143, 96.6439, -61.8766, 0.55", "15.5789, 98.4115, -62.9023, 0.55", "16.0289, 101.017, -64.3443, 0.28", "16.0989, 101.473, -64.5879, 0.55", "16.509, 104.196, -65.8747, 0.28", "16.6041, 104.963, -66.1854, 0.55", "16.7746, 106.331, -66.7183, 0.28", "16.9306, 107.445, -67.0993, 0.55", "17.4716, 110.69, -68.0795, 0.28", "17.964, 113.192, -68.7716, 0.28", "18.2277, 114.406, -69.0533, 0.55", "18.7507, 116.635, -69.5552, 0.28", "18.9324, 117.324, -69.7189, 0.55", "19.5171, 119.364, -70.2055, 0.28", "20.0171, 121.018, -70.5895, 0.55", "20.5961, 122.791, -70.9834, 0.55", "21.7972, 126.237, -71.6504, 0.28", "22.2119, 127.415, -71.8509, 0.55", "22.6496, 128.63, -72.0429, 0.28", "23.1384, 129.942, -72.2667, 0.55", "23.7043, 131.258, -72.628, 0.28", "24.0479, 131.966, -72.8848, 0.55", "24.9958, 133.734, -73.6179, 0.28", "25.7317, 135.113, -74.2069, 0.28", "26.4083, 136.396, -74.7788, 0.55", "27.902, 139.29, -76.0392, 0.28", "28.3718, 140.239, -76.5102, 0.55", "28.7474, 140.968, -76.8854, 0.28", "29.246, 141.923, -77.3546, 0.55", "29.7419, 142.85, -77.8494, 0.28", "30.1953, 143.663, -78.2694, 0.55", "32.3181, 147.359, -80.207, 0.28", "33.0134, 148.483, -80.8214, 0.28", "33.5515, 149.27, -81.3045, 0.55", "35.1866, 151.434, -82.7425, 0.28", "35.6307, 151.96, -83.1847, 0.55", "37.6006, 153.988, -85.0804, 0.28", "38.7038, 154.993, -86.0323, 0.55", "40.406, 156.468, -87.4656, 0.28", "40.7464, 156.745, -87.7244, 0.55", "44.3271, 159.599, -89.9872, 0.28", "45.9642, 160.89, -91.0776, 0.55", "47.0204, 161.682, -91.7699, 0.28", "47.3359, 161.927, -92.0282, 0.55", "48.2261, 162.68, -92.7623, 0.28", "48.8459, 163.245, -93.3205, 0.55", "50.6599, 165.063, -95.1853, 0.28", "51.1065, 165.517, -95.7616, 0.55", "53.4426, 167.832, -99.0016, 0.28", "54.1363, 168.524, -100.003, 0.55", "55.2032, 169.605, -101.547, 0.28", "55.798, 170.189, -102.341, 0.55", "56.75, 171.157, -103.415, 0.28", "57.1995, 171.63, -103.899, 0.55", "57.8904, 172.364, -104.505, 0.28", "58.7563, 173.268, -105.244, 0.55", "60.304, 174.917, -106.405, 0.28", "61.0847, 175.764, -106.879, 0.55", "62.4975, 177.31, -107.604, 0.28", "63.4132, 178.341, -108.094, 0.55", "63.6926, 178.677, -108.236, 0.28", "64.255, 179.405, -108.538, 0.55", "66.1262, 182.034, -109.657, 0.28", "66.6768, 182.822, -110.022, 0.55", "68.2229, 185.136, -111.073, 0.28", "69.4395, 186.95, -111.964, 0.28", "70.133, 187.935, -112.476, 0.55", "71.229, 189.464, -113.301, 0.28", "71.6333, 189.999, -113.57, 0.55", "72.5405, 191.019, -114.074, 0.28", "73.022, 191.474, -114.23, 0.55", "73.9341, 192.251, -114.476, 0.28", "74.5584, 192.774, -114.594, 0.55", "76.4471, 194.295, -114.827, 0.28", "78.3324, 195.812, -114.921, 0.55", "79.9239, 197.136, -114.922, 0.28", "80.7966, 197.917, -114.96, 0.55", "82.5537, 199.569, -115.131, 0.28", "84.0299, 200.999, -115.332, 0.55", "86.0686, 203.049, -115.72, 0.28", "86.8712, 203.879, -115.886, 0.28", "89.1086, 206.11, -116.494, 0.55", "90.6637, 207.654, -116.945, 0.28", "91.3357, 208.304, -117.175, 0.55", "92.5406, 209.401, -117.632, 0.28", "93.0622, 209.852, -117.828, 0.55", "94.5313, 211.038, -118.17, 0.28", "94.7803, 211.244, -118.193, 0.55", "96.0127, 212.32, -118.224, 0.28", "97.0264, 213.245, -118.192, 0.55", "98.2742, 214.454, -118.104, 0.28", "99.0408, 215.353, -118.044, 0.55", "100.53, 217.404, -117.993, 0.28", "101.484, 218.871, -117.957, 0.28", "102.946, 221.32, -117.899, 0.28", "103.521, 222.344, -117.866, 0.55", "105.452, 225.829, -117.736, 0.28", "106.301, 227.358, -117.719, 0.55", "107.347, 229.278, -117.693, 0.28", "107.925, 230.276, -117.715, 0.55", "108.578, 231.231, -117.761, 0.28", "109.009, 231.705, -117.788, 0.55", "111.105, 233.158, -117.901, 0.28", "111.105, 233.158, -117.901, 0.55", "113.262, 233.853, -118.053, 0.28", "114.368, 234.089, -118.117, 0.28", "114.814, 234.144, -118.139, 0.55", "116.165, 234.178, -118.162, 0.28", "118.395, 234.021, -118.115, 0.55", "119.495, 233.861, -118.092, 0.28", "120.664, 233.576, -118.068, 0.28", "121.338, 233.365, -118.056, 0.55", "122.664, 232.827, -118.035, 0.28", "123.482, 232.4, -118.026, 0.55", "124.612, 231.74, -118.015, 0.28", "125.467, 231.205, -118.01, 0.28", "126.318, 230.656, -118.004, 0.28", "127.389, 229.958, -117.997, 0.55", "128.335, 229.355, -117.991, 0.28", "129.311, 228.739, -117.984, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.17354, 5.13797, -1.63572, 0.55", "6.4514, 5.4926, -2.17589, 0.55", "8.46564, 6.05161, -3.02738, 0.55", "11.0378, 6.76545, -4.11473, 0.55", "12.9219, 7.28835, -4.9112, 0.83", "16.6971, 8.33606, -6.50708, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.743549, 11.4379, 3.65428, 0.55", "1.25773, 15.3163, 5.58732, 0.55", "1.63393, 18.21, 6.99934, 1.11", "2.2476, 22.4729, 8.97402, 0.55", "2.72523, 25.1882, 10.1293, 0.83", "3.43817, 28.7079, 11.4905, 0.55", "3.81189, 30.4685, 12.0977, 0.55", "4.31841, 32.5775, 12.725, 0.55", "4.82942, 34.5336, 13.1098, 0.55", "5.7269, 37.4222, 13.3306, 0.83", "6.80351, 40.6528, 13.387, 0.55", "7.81831, 43.6978, 13.2363, 0.83", "9.31065, 48.0346, 12.9298, 0.83", "10.2027, 50.6453, 12.7034, 1.11", "11.7121, 55.1669, 12.4216, 0.55", "12.8686, 58.7253, 12.2781, 1.11", "14.1231, 62.6739, 12.2053, 0.55", "14.8308, 64.9491, 12.2833, 0.55", "15.788, 68.2888, 12.5779, 0.55", "16.7929, 72.1521, 13.128, 0.28", "17.4135, 74.9731, 13.6017, 0.83", "17.9839, 78.0675, 14.157, 0.83", "18.7096, 83.1377, 15.1373, 0.55", "19.1116, 87.8165, 15.9174, 0.83", "19.3248, 91.1716, 16.4302, 0.55", "19.4444, 93.8728, 16.7598, 0.83", "19.5263, 97.8984, 17.253, 0.83", "19.4735, 101.789, 17.6947, 0.55", "19.0571, 106.852, 18.0857, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.84645, 10.1779, 4.00428, 0.83", "-5.29581, 13.3744, 4.0519, 0.83", "-7.03496, 17.2099, 4.10901, 1.11", "-8.85205, 21.2174, 4.16869, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.17397, 11.5755, -0.470299, 0.55", "4.45162, 26.213, -0.470299, 0.55", "7.72927, 40.8505, -0.470299, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.69659, -18.1861, 4.08428, 1.38", "-4.63871, -20.4973, 2.54042, 1.38" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.69659, -18.1861, 4.08428, 0.83", "-3.22829, -19.3008, 3.83284, 0.83", "-2.44349, -21.1679, 3.41052, 0.83", "-1.67822, -22.9231, 2.97238, 0.83", "-1.07208, -24.3134, 2.62534, 1.11", "-0.264075, -26.1667, 2.16273, 0.83", "0.210931, -27.2561, 1.89078, 0.55", "0.837255, -28.714, 1.51957, 0.83", "1.5721, -30.4861, 1.05788, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.3611, -17.931, 23.3118, 0.28", "-13.3918, -16.5129, 23.4337, 0.28", "-14.1105, -16.0458, 23.4853, 0.55", "-16.0216, -14.7602, 23.3672, 0.28", "-18.5204, -13.0346, 23.1086, 0.55", "-22.0747, -10.6297, 22.8181, 0.28", "-22.8162, -10.1236, 22.7464, 0.28", "-24.6765, -8.87085, 22.502, 0.55", "-28.424, -6.38814, 22.0907, 0.28", "-29.2814, -5.84077, 22.0163, 0.55", "-31.6206, -4.21916, 22.0024, 0.28", "-33.7762, -2.78134, 22.2049, 0.55", "-35.0256, -1.92674, 22.3791, 0.55", "-37.0209, -0.557367, 22.8378, 0.28", "-38.2347, 0.22453, 23.3392, 0.55", "-40.8044, 1.90337, 24.4204, 0.28", "-42.8161, 3.34514, 25.4262, 0.55", "-51.098, 10.3606, 26.3773, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-11.3611, -17.931, 23.3118, 0.55", "-12.7807, -19.3609, 23.9375, 0.55", "-14.2907, -20.8609, 24.8896, 0.55", "-16.3319, -22.5481, 26.0075, 0.55", "-18.5277, -24.0621, 27.1064, 0.55", "-20.7846, -25.3793, 28.1527, 0.55", "-23.0892, -26.4503, 29.2147, 0.28", "-25.0277, -26.9542, 30.0925, 0.55", "-28.2848, -27.5079, 31.53, 0.28", "-29.5904, -27.6706, 32.0527, 0.28", "-31.4676, -27.9823, 32.65, 0.55", "-34.0999, -28.6802, 33.2311, 0.28", "-35.9086, -29.4842, 33.5269, 0.55", "-37.875, -30.7571, 33.8116, 0.55", "-39.1479, -31.8526, 33.9687, 0.83", "-41.2003, -33.9357, 33.9977, 0.55", "-43.2844, -36.3802, 33.7989, 0.55", "-44.405, -37.8689, 33.6033, 0.55", "-45.8777, -39.8898, 33.2504, 0.55", "-47.1009, -41.5966, 32.8918, 0.55", "-48.7241, -44.0357, 32.3722, 0.28", "-49.3385, -45.0173, 32.165, 0.28", "-49.8353, -45.7676, 32.0211, 0.83", "-51.4921, -48.3864, 31.6303, 0.55", "-52.6901, -50.3943, 31.4372, 0.55", "-53.9612, -52.689, 31.4091, 0.28", "-54.987, -54.5704, 31.4512, 0.55", "-55.9362, -56.2923, 31.5093, 0.55", "-56.7085, -57.7322, 31.581, 0.28", "-57.3715, -59.0627, 31.7549, 0.55", "-58.1306, -60.397, 31.9649, 0.28", "-66.5204, -66.394, 33.3302, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "16.6971, 8.33606, -6.50708, 0.55", "18.7241, 10.1353, -7.76581, 0.55", "20.1419, 11.3444, -8.64726, 0.83", "21.2211, 12.297, -9.34484, 0.55", "22.4159, 13.3515, -10.1171, 0.55", "23.6952, 14.4807, -10.944, 0.55", "24.9729, 15.6084, -11.7699, 0.55", "27.2848, 17.5973, -13.1629, 0.83", "28.2881, 18.4826, -13.8652, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "16.6971, 8.33606, -6.50708, 0.55", "17.4675, 6.85688, -7.08587, 0.55", "18.2574, 5.23337, -7.71438, 0.83", "18.8584, 3.92339, -8.21095, 0.55", "19.3117, 2.85383, -8.72569, 0.83", "20.1368, 0.79125, -9.81696, 0.28", "20.6139, -0.36027, -10.508, 0.55", "21.2553, -1.90608, -11.5537, 0.28", "21.423, -2.33172, -11.8961, 0.55", "22.2003, -4.64713, -13.9115, 0.28", "22.377, -5.30227, -14.4883, 0.83", "22.9733, -7.90112, -16.7493, 0.28", "23.2567, -9.2489, -17.8941, 0.83", "23.7384, -11.4584, -19.6936, 0.28", "24.094, -13.3527, -21.2116, 0.28", "24.2313, -14.2847, -21.8956, 0.83", "24.3003, -15.2851, -22.7081, 0.55", "24.3039, -16.8753, -24.0165, 0.28", "24.2985, -17.5668, -24.5976, 0.83", "24.2845, -21.1785, -27.571, 0.55", "24.275, -22.4468, -28.6997, 0.83", "24.1628, -26.1022, -32.1921, 0.28", "24.0922, -26.8841, -32.9899, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "19.0571, 106.852, 18.0857, 0.55", "21.0336, 110.869, 17.832, 0.55", "21.8855, 112.651, 17.7321, 0.83", "22.784, 114.878, 17.6138, 0.55", "23.7572, 117.698, 17.341, 0.28", "24.4336, 119.791, 17.1084, 0.55", "24.9643, 121.504, 16.8641, 0.55", "25.8149, 124.606, 16.3915, 0.55", "26.7532, 127.792, 15.9398, 0.55", "27.7767, 131.183, 15.5356, 0.28", "28.4496, 133.192, 15.3332, 0.55", "29.683, 136.453, 15.1037, 0.28", "31.2499, 140.18, 14.8945, 0.55", "31.9508, 141.658, 14.8884, 0.55", "32.9498, 143.58, 14.9934, 0.55", "34.6907, 147.05, 15.377, 0.55", "35.7156, 149.508, 15.6724, 0.28", "36.1795, 150.967, 15.8316, 0.55", "36.8782, 154.148, 16.026, 0.28", "37.2066, 156.308, 16.1342, 0.55", "37.5575, 159.594, 16.1971, 0.83", "37.7508, 163.076, 16.2101, 0.55", "37.878, 165.99, 16.1906, 0.28", "37.9402, 167.439, 16.2203, 0.55", "38.1816, 171.27, 16.367, 0.28", "38.4968, 174.405, 16.6102, 0.55", "38.8021, 176.441, 16.8666, 0.55", "39.2871, 178.761, 17.2846, 0.28", "39.8338, 181.069, 17.7937, 0.55", "40.6809, 184.424, 18.5964, 0.55", "41.3011, 186.908, 19.2112, 0.55", "41.6578, 188.302, 19.5576, 0.83", "42.5291, 191.657, 20.3743, 0.55", "43.1355, 194.081, 20.9341, 0.55", "44.7501, 200.83, 22.3888, 0.28", "45.0485, 202.26, 22.6919, 0.55", "45.9244, 206.915, 23.6548, 0.28", "46.2633, 209.037, 24.1073, 0.83", "46.9765, 214.033, 25.2386, 0.28", "47.1666, 215.437, 25.5831, 0.28", "47.4135, 217.535, 26.1094, 0.55", "47.9738, 222.46, 27.3813, 0.28", "48.1879, 224.902, 28.0131, 0.55", "48.506, 228.644, 28.9591, 0.28", "48.6467, 230.049, 29.3856, 0.55", "49.9708, 243.161, 29.0732, 0.55", "51.792, 255.962, 26.6208, 0.55", "56.2456, 268.298, 26.2989, 0.55", "63.4601, 278.918, 28.2071, 0.55", "67.9827, 291.057, 30.1409, 0.55", "70.6903, 303.301, 33.932, 0.55", "72.6159, 315.625, 37.9512, 0.55", "75.8116, 327.266, 42.9034, 0.55", "77.7128, 339.426, 47.3596, 0.55", "81.1207, 351.931, 49.4466, 0.55", "84.9997, 363.884, 53.0653, 0.55", "89.8893, 374.784, 58.1694, 0.55", "95.9142, 385.748, 61.7078, 0.55", "103.99, 394.56, 66.4217, 0.55", "111.424, 404.574, 69.8403, 0.55", "118.927, 414.864, 72.2112, 0.55", "127.316, 424.04, 75.5578, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.0571, 106.852, 18.0857, 0.55", "16.2908, 108.894, 18.8927, 0.55", "13.2776, 111.383, 19.9375, 0.55", "12.0275, 112.423, 20.4018, 0.28", "11.4409, 112.931, 20.6708, 0.83", "9.29551, 114.88, 21.7306, 0.55", "8.12267, 115.975, 22.4269, 0.83", "6.95013, 117.252, 23.3817, 0.55", "6.09561, 118.314, 24.2492, 0.55", "4.92529, 119.962, 25.4936, 0.28", "4.45249, 120.669, 25.9644, 0.55", "2.82151, 123.091, 27.5386, 0.28", "2.13753, 124.128, 28.2351, 0.55", "1.21542, 125.623, 29.1787, 0.28", "0.377901, 127.125, 29.9957, 0.28", "-0.709242, 128.967, 30.7513, 0.83", "-5.49693, 135.765, 35.2059, 0.83", "-9.77112, 142.113, 40.6706, 0.83", "-13.942, 147.531, 47.0461, 0.83", "-19.3568, 151.825, 53.2607, 0.83", "-25.1836, 156.384, 58.9051, 0.83", "-31.6038, 161.65, 63.1836, 0.83", "-38.5769, 165.858, 67.6532, 0.83", "-45.2999, 170.844, 71.7666, 0.83", "-51.3638, 176.111, 76.535, 0.83", "-56.654, 180.452, 82.8269, 0.83", "-61.7138, 184.145, 89.6591, 0.83", "-66.7144, 188.56, 96.1378, 0.83", "-72.5763, 192.049, 102.402, 0.83", "-77.7603, 194.749, 109.554, 0.83", "-84.1117, 196.871, 115.894, 0.83", "-91.2689, 199.976, 120.862, 0.83", "-97.4181, 204.089, 126.475, 0.83", "-103.177, 207.014, 133.086, 0.83", "-107.364, 211.047, 140.323, 0.83", "-112.017, 215.656, 146.938, 0.83", "-114.791, 221.079, 154.03, 0.83", "-117.747, 225.933, 161.415, 0.83", "-120.385, 230.185, 169.245, 0.83", "-123.61, 233.034, 177.422, 0.83", "-126.045, 234.585, 186.168, 0.83", "-127.499, 237.367, 194.857, 0.83", "-129.317, 238.966, 203.744, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.85205, 21.2174, 4.16869, 0.83", "-7.47907, 24.5463, 4.80399, 0.83", "-5.36867, 29.8512, 5.97903, 0.83", "-4.37442, 32.3761, 6.56021, 0.83", "-3.22341, 35.3833, 7.25819, 0.83", "-2.33718, 37.7327, 7.79812, 0.55", "-1.68362, 39.6162, 8.21074, 0.83", "-0.893205, 42.1995, 8.80599, 0.55", "-0.413419, 43.9294, 9.20749, 0.83", "-0.0959794, 45.0945, 9.44371, 0.55", "0.281224, 46.6664, 9.78913, 0.83", "0.926605, 49.5764, 10.4309, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.85205, 21.2174, 4.16869, 0.55", "-9.94322, 22.327, 4.38387, 0.55", "-10.5516, 22.9457, 4.50384, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "7.72927, 40.8505, -0.470299, 0.28", "11.0069, 55.4881, -0.470299, 0.28", "14.2846, 70.1256, -0.470299, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-4.63871, -20.4973, 2.54042, 0.55", "-5.41898, -23.7333, 3.64331, 0.55", "-6.29984, -27.7942, 5.20141, 0.28", "-6.67125, -29.611, 5.9005, 0.83", "-7.07924, -31.7991, 6.71709, 0.28", "-7.41639, -33.4504, 7.32416, 0.55", "-8.11074, -37.0608, 8.83817, 0.55", "-8.48116, -39.1635, 9.74817, 0.28", "-8.81351, -40.6659, 10.3882, 0.83", "-9.26132, -42.4342, 11.1929, 0.55", "-9.65156, -43.9966, 11.9337, 0.55", "-10.7197, -47.9788, 13.8475, 0.83", "-11.4466, -50.4532, 14.8985, 0.55", "-12.3738, -53.241, 16.1175, 0.55", "-13.5081, -56.4625, 17.6235, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.63871, -20.4973, 2.54042, 1.38", "-5.66837, -22.4324, 0.958492, 1.38", "-6.76768, -24.4984, -0.730451, 1.94", "-8.63237, -28.0028, -3.59525, 1.66" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.5721, -30.4861, 1.05788, 0.83", "1.41787, -31.1759, 0.983316, 0.83", "0.971905, -33.1707, 0.767677, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.5721, -30.4861, 1.05788, 0.55", "3.38468, -31.4319, 0.0580179, 0.55", "5.76678, -32.47, -1.9131, 0.55", "7.74676, -33.2673, -3.61264, 0.55", "10.3372, -34.1796, -5.68907, 0.55", "14.9153, -35.6935, -9.16854, 0.28", "19.594, -37.1612, -12.5199, 0.55", "25.006, -38.6849, -16.3854, 0.55", "26.6006, -39.0939, -17.4809, 0.83", "30.1081, -39.946, -19.662, 0.28", "31.1262, -40.1756, -20.2524, 0.55", "33.2276, -40.6488, -21.1045, 0.28", "35.3901, -41.1941, -21.6409, 0.55", "38.5242, -42.0423, -21.8219, 0.28", "40.8198, -42.7562, -21.9037, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-51.098, 10.3606, 26.3773, 0.28", "-57.3159, 14.9637, 26.9001, 0.28", "-63.816, 18.9483, 28.1158, 0.28", "-70.286, 23.1765, 28.4267, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-51.098, 10.3606, 26.3773, 0.28", "-56.905, 14.6711, 26.9698, 0.28", "-62.4151, 19.4179, 27.2062, 0.28", "-68.0183, 24.0303, 26.8616, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "28.2881, 18.4826, -13.8652, 0.28", "30.6451, 20.6523, -13.9412, 0.28", "32.1015, 21.9864, -13.9764, 0.55", "34.0237, 23.7166, -13.9993, 0.28", "36.2409, 25.6929, -13.8931, 0.55", "38.6548, 27.7467, -13.8801, 0.28", "40.3262, 29.1558, -13.9072, 0.55", "42.4436, 30.9839, -13.9311, 0.28", "43.2356, 31.6731, -13.9351, 0.55", "45.3631, 33.4656, -13.9224, 0.28", "47.8191, 35.6369, -13.5631, 0.55", "49.8457, 37.5321, -13.1348, 0.28", "51.0391, 38.6609, -12.8054, 0.55", "53.1444, 40.5797, -12.3219, 0.28", "54.0232, 41.3307, -12.0493, 0.55", "57.228, 43.8818, -10.6665, 0.28", "58.9292, 45.2255, -9.77525, 0.28", "60.127, 46.0819, -9.13037, 0.28", "62.8626, 47.8587, -7.67697, 0.28", "66.9377, 50.2897, -5.20448, 0.28", "68.5924, 51.1225, -4.15852, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "28.2881, 18.4826, -13.8652, 0.55", "33.4012, 18.8794, -16.4715, 0.55", "41.4975, 20.1342, -19.9789, 0.55", "43.0316, 20.4744, -20.5981, 0.83", "45.2304, 21.0756, -21.3796, 0.28", "46.4246, 21.451, -21.7281, 0.55", "48.7956, 22.2525, -22.3718, 0.28", "51.1395, 23.0957, -22.8341, 0.55", "53.3935, 23.9988, -22.9274, 0.28", "55.0988, 24.5499, -22.9909, 0.55", "57.8029, 25.3252, -23.1304, 0.55", "60.4023, 25.9841, -23.2959, 0.55", "64.3131, 26.8537, -23.5833, 0.28", "66.4606, 27.2371, -23.8318, 0.55", "69.6018, 27.7676, -24.305, 0.55", "71.6963, 28.1719, -24.8319, 0.28", "72.8936, 28.4435, -25.202, 0.28", "73.9338, 28.7203, -25.5602, 0.55", "77.3924, 29.8111, -26.947, 0.28", "78.3971, 30.094, -27.3788, 0.55", "82.6647, 31.1952, -29.1407, 0.28", "84.1441, 31.5083, -29.6865, 0.55", "87.0954, 31.992, -30.6078, 0.28", "87.9985, 32.0977, -30.8399, 0.55", "91.5152, 32.4731, -31.478, 0.28", "93.0886, 32.5835, -31.6768, 0.55", "95.2687, 32.6431, -31.8862, 0.28", "97.2457, 32.6812, -32.0895, 0.28", "98.9835, 32.6828, -32.2885, 0.55", "101.23, 32.6908, -32.6027, 0.28", "102.59, 32.7091, -32.8221, 0.55", "107.033, 32.8445, -33.6495, 0.28", "107.704, 32.8566, -33.8372, 0.55", "111.104, 33.0074, -34.9693, 0.28", "112.382, 33.1329, -35.3986, 0.55", "113.521, 33.2882, -35.8091, 0.28", "115.284, 33.6057, -36.4928, 0.55", "121.19, 35.1415, -38.6009, 0.28", "122.788, 35.688, -39.1231, 0.55", "126.374, 37.1593, -40.4336, 0.28", "127.246, 37.5583, -40.796, 0.55", "129.19, 38.5718, -41.6609, 0.28", "131.12, 39.8068, -42.5847, 0.55", "132.957, 41.3371, -43.4727, 0.28", "136.355, 44.1052, -45.7777, 0.55", "137.625, 45.1519, -46.805, 0.28", "138.715, 46.1293, -47.726, 0.55", "140.15, 47.4005, -48.9492, 0.28", "141.034, 48.1776, -49.7258, 0.55", "144.669, 51.3123, -52.8278, 0.28", "145.889, 52.4247, -53.6998, 0.55", "148.021, 54.2144, -55.2524, 0.28", "149.76, 55.6513, -56.4858, 0.55", "150.966, 56.5917, -57.3485, 0.28", "152.453, 57.8786, -58.3964, 0.55", "154.244, 59.6114, -59.5564, 0.28", "156.763, 62.0708, -61.3407, 0.55", "159.254, 64.4197, -63.1675, 0.28", "161.24, 66.1892, -64.6676, 0.55", "164.326, 68.6457, -66.8951, 0.28", "165.86, 69.7556, -67.9484, 0.55", "169.435, 71.9389, -70.3686, 0.28", "170.856, 72.5582, -71.2783, 0.55", "175.352, 73.4902, -74.0521, 0.28", "176.766, 73.2816, -74.947, 0.55", "178.101, 72.7926, -75.7831, 0.28", "179.664, 72.0505, -76.7741, 0.55", "183.785, 69.5424, -79.3265, 0.28", "185.356, 68.4272, -80.3328, 0.55", "192.559, 62.239, -85.1502, 0.28", "194.234, 60.7231, -86.3661, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "24.0922, -26.8841, -32.9899, 0.28", "23.955, -28.249, -34.6431, 0.28", "23.8719, -29.0631, -35.5844, 0.55", "23.5515, -31.7356, -38.5125, 0.28", "23.4775, -32.2991, -39.1143, 0.55", "22.849, -36.5314, -43.4774, 0.28", "22.4417, -39.0054, -45.7664, 0.55", "22.1053, -40.902, -47.5272, 0.28", "21.9104, -41.9385, -48.3417, 0.55", "21.4206, -44.5728, -49.9677, 0.28", "21.2953, -45.4312, -50.4994, 0.55", "20.8746, -49.1112, -52.6072, 0.28", "20.5955, -51.9111, -54.0311, 0.55", "20.2549, -56.496, -56.3553, 0.28", "20.1772, -57.8432, -57.0423, 0.55", "19.7613, -67.602, -61.9975, 0.28", "19.7342, -68.7715, -62.6327, 0.55", "19.7197, -72.9098, -65.1105, 0.28", "19.7168, -74.0428, -65.8056, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "24.0922, -26.8841, -32.9899, 0.55", "24.7151, -26.8401, -34.623, 0.55", "26.2726, -26.3673, -39.3574, 0.55", "27.7502, -25.7485, -44.0857, 0.28", "27.9899, -25.537, -45.02, 0.55", "28.9711, -24.3508, -49.2013, 0.28", "29.2939, -23.7643, -50.6726, 0.55", "30.0849, -21.1291, -55.2994, 0.28", "30.2083, -20.4286, -56.2893, 0.55", "30.5684, -16.3751, -60.7743, 0.28", "30.5961, -15.7171, -61.3982, 0.55", "30.5422, -11.3232, -64.6606, 0.28", "30.4949, -10.0155, -65.5158, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.926605, 49.5764, 10.4309, 0.28", "0.583296, 51.6712, 10.1073, 0.28", "0.483926, 52.8209, 9.87127, 0.55", "0.266076, 55.8922, 9.39837, 0.28", "0.201494, 56.7543, 9.3048, 0.55", "0.092827, 58.1135, 9.15388, 0.28", "-0.176277, 60.0603, 8.93035, 0.55", "-1.00284, 63.4823, 8.60495, 0.28", "-1.59776, 65.3067, 8.39295, 0.55", "-2.39085, 67.1755, 8.20239, 0.28", "-3.16148, 68.873, 8.09205, 0.83", "-4.26585, 71.4104, 8.01674, 0.55", "-5.62528, 74.7517, 7.92353, 0.55", "-6.41846, 77.0423, 7.97304, 0.83", "-6.83728, 78.7118, 8.06868, 0.55", "-7.2345, 80.8969, 8.48074, 1.11", "-7.57579, 84.0207, 9.40514, 0.55", "-7.63455, 86.5653, 10.3456, 1.11", "-7.56253, 89.4067, 11.5955, 0.55", "-7.44368, 91.7281, 12.4046, 0.83", "-7.15573, 96.1469, 13.1375, 0.28", "-7.12495, 96.9344, 13.1307, 0.55", "-7.14657, 98.3552, 12.9169, 0.28", "-7.23179, 99.8812, 12.5101, 0.83", "-8.16088, 109.11, 9.27878, 0.55", "-8.53788, 111.742, 8.2903, 0.55", "-9.01239, 114.569, 7.23123, 0.83", "-9.49739, 116.82, 6.63099, 0.28", "-10.0144, 118.858, 6.32152, 0.55", "-10.6494, 121.037, 6.3104, 0.28", "-11.2503, 122.676, 6.61939, 0.55", "-11.8544, 124.228, 6.91239, 0.28", "-12.7898, 126.61, 7.30934, 0.55", "-13.3379, 127.954, 7.49251, 0.28", "-14.598, 130.643, 7.81821, 0.55", "-15.7393, 132.715, 7.99779, 0.28", "-17.1306, 134.966, 8.11303, 0.28", "-18.1449, 136.391, 8.16337, 0.55", "-19.8101, 138.281, 8.19268, 0.55", "-21.038, 139.371, 8.17452, 0.55", "-22.5906, 140.562, 8.11246, 0.28", "-23.2194, 140.994, 8.05687, 0.55", "-24.5717, 141.687, 7.92704, 0.28", "-26.8583, 142.564, 7.73356, 0.55", "-29.7345, 143.336, 7.56773, 0.55", "-34.2349, 152.254, 8.08197, 0.55", "-39.2115, 160.849, 9.02209, 0.55", "-43.6499, 169.672, 10.569, 0.55", "-47.2601, 179.042, 10.4385, 0.55", "-51.6963, 188.006, 10.7297, 0.55", "-57.6274, 195.719, 8.89265, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "0.926605, 49.5764, 10.4309, 0.55", "2.79667, 51.174, 11.2772, 0.55", "4.63847, 52.7751, 12.1609, 0.83", "6.14267, 54.1572, 12.9939, 0.55", "7.47192, 55.4476, 13.786, 0.83", "9.42418, 57.33, 14.9677, 0.55", "10.9704, 58.8137, 15.9228, 0.28", "11.7129, 59.6097, 16.44, 0.28", "12.5928, 60.674, 17.084, 0.55", "13.1877, 61.4142, 17.5283, 0.28", "13.9756, 62.4301, 18.127, 0.55", "15.2849, 64.1888, 18.9909, 0.28", "15.8146, 64.9409, 19.3608, 0.55", "16.8393, 66.5485, 20.1041, 0.28", "17.6135, 67.8491, 20.7065, 0.55", "18.1584, 68.8925, 21.2153, 0.28", "18.7008, 70.0947, 21.8078, 0.55", "20.056, 73.1218, 23.3597, 0.28", "20.7213, 74.4186, 24.1482, 0.28", "21.3305, 75.4635, 24.8219, 0.55", "22.3027, 76.8899, 25.7488, 0.55", "23.5092, 78.5209, 26.8681, 0.28", "23.898, 79.0306, 27.2287, 0.55", "25.6186, 81.1495, 28.5552, 0.55", "26.4481, 82.0117, 29.1795, 0.28", "27.3907, 82.862, 29.7821, 0.55", "30.9525, 89.3301, 34.0951, 0.55", "35.4626, 95.5526, 37.8047, 0.55", "40.3992, 101.931, 40.6199, 0.55", "44.6835, 108.319, 44.3424, 0.55", "49.004, 115.178, 47.1467, 0.55", "54.2742, 121.637, 49.0305, 0.55", "60.1948, 127.719, 49.7565, 0.55", "66.4481, 133.407, 50.5784, 0.55", "72.7335, 138.762, 52.4869, 0.55", "78.7101, 144.105, 55.2377, 0.55", "85.0946, 148.078, 58.991, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-10.5516, 22.9457, 4.50384, 0.55", "-11.2721, 25.9655, 3.58038, 0.55", "-11.9556, 28.8306, 2.70427, 0.55", "-12.6645, 31.802, 1.79564, 0.83", "-13.1288, 33.7478, 1.20062, 0.55", "-14.4984, 39.4884, -0.554798, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-10.5516, 22.9457, 4.50384, 0.55", "-12.4962, 20.9634, 2.44897, 0.55", "-13.936, 19.4812, 0.988082, 0.83", "-14.6262, 18.7754, 0.332214, 0.55", "-16.1503, 17.2037, -1.08269, 0.83", "-17.4338, 15.9165, -2.16512, 0.55", "-18.223, 15.1624, -2.79162, 0.83", "-19.5378, 13.8854, -3.67655, 0.55", "-20.2478, 13.2676, -4.04194, 0.83", "-21.0867, 12.6028, -4.36648, 0.55", "-22.4653, 11.6506, -4.74145, 0.83", "-24.1083, 10.7115, -4.86644, 0.55", "-25.9413, 9.79613, -4.73875, 0.28", "-27.1982, 9.1891, -4.40592, 0.55", "-28.6838, 8.46449, -3.84114, 0.28", "-29.8374, 7.86544, -3.16794, 0.83", "-32.7218, 6.26323, -1.14856, 0.55", "-33.2928, 5.91681, -0.70642, 0.55", "-35.066, 4.69013, 0.803447, 0.55", "-35.7992, 4.12766, 1.42404, 0.55", "-38.4342, 1.85798, 3.62578, 0.28", "-39.2513, 1.12418, 4.32498, 0.28", "-40.125, 0.270678, 5.00635, 0.55", "-42.2215, -1.73332, 6.49154, 0.55", "-42.7522, -2.22335, 6.84374, 0.55", "-43.6922, -3.09312, 7.45923, 0.55", "-45.9613, -5.22097, 8.76599, 0.55", "-46.7801, -5.97535, 9.28375, 0.28", "-48.6353, -7.51548, 10.4388, 0.28", "-54.7997, -10.4081, 11.9637, 0.28", "-60.633, -13.313, 14.4479, 0.28", "-66.3005, -16.9468, 16.3904, 0.28", "-71.6708, -20.4845, 19.1501, 0.28", "-76.6236, -24.1183, 22.5038, 0.28", "-81.9568, -28.5837, 23.6817, 0.28", "-87.6393, -32.2304, 25.5587, 0.28", "-92.9865, -36.7803, 26.3245, 0.28", "-97.1068, -42.626, 26.0579, 0.28", "-100.781, -48.6687, 24.8176, 0.28", "-103.346, -55.3283, 23.6736, 0.28", "-105.001, -62.3477, 22.897, 0.28", "-106.331, -69.4553, 23.3888, 0.28", "-106.736, -76.7075, 23.2848, 0.28", "-107.733, -83.788, 22.0154, 0.28", "-107.866, -90.7742, 20.0517, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-13.5081, -56.4625, 17.6235, 0.28", "-17.1777, -56.9418, 22.8051, 0.28", "-18.4194, -57.0841, 24.5737, 0.55", "-20.0511, -57.2831, 26.904, 0.28", "-20.5453, -57.3238, 27.5222, 0.55", "-22.6769, -57.3735, 29.9546, 0.28", "-24.1797, -57.3517, 31.3501, 0.55", "-26.5596, -57.1369, 32.8045, 0.28", "-27.8355, -56.9497, 33.2594, 0.55", "-31.0867, -56.4601, 34.0295, 0.28", "-33.4158, -56.1653, 34.2748, 0.55", "-37.6565, -55.6808, 34.294, 0.55", "-40.898, -55.3047, 34.0721, 0.28", "-45.931, -54.6718, 33.3929, 0.55", "-49.5397, -54.253, 32.8025, 0.28", "-52.5575, -54.0736, 32.3352, 0.55", "-64.511, -52.2931, 36.6671, 0.55", "-76.2654, -50.3704, 41.4628, 0.55", "-87.6237, -46.5301, 46.1408, 0.55", "-98.8869, -42.5035, 50.9039, 0.55", "-109.789, -39.9146, 57.1931, 0.55", "-120.965, -35.253, 61.6159, 0.55", "-131.98, -29.3693, 64.9614, 0.55", "-142.505, -23.4955, 69.6504, 0.55", "-154.17, -19.4381, 73.2823, 0.55", "-165.402, -13.6081, 75.9051, 0.55", "-176.885, -7.75792, 76.8149, 0.55", "-187.668, -0.607632, 75.9414, 0.55", "-198.786, 5.75622, 74.1652, 0.55", "-209.796, 11.8285, 71.1969, 0.55", "-221.511, 16.5923, 68.7605, 0.55", "-233.474, 20.5285, 66.156, 0.55", "-244.898, 26.0383, 63.7975, 0.55", "-256.533, 31.0369, 61.4106, 0.55", "-267.499, 37.7017, 59.711, 0.55", "-278.597, 43.8698, 57.3023, 0.55", "-288.575, 50.8784, 52.9262, 0.55", "-298.728, 57.6826, 48.6584, 0.55", "-307.831, 64.3768, 42.3532, 0.55", "-318.17, 69.3697, 36.5119, 0.55", "-327.772, 72.9865, 28.7725, 0.55", "-335.729, 77.3144, 19.6359, 0.55", "-342.132, 79.9239, 8.81613, 0.55", "-347.0, 83.8011, -2.43718, 0.55", "-353.518, 87.3445, -12.9319, 0.55", "-359.904, 92.7304, -22.7549, 0.55", "-366.75, 99.9722, -31.0474, 0.55", "-373.772, 108.378, -38.0908, 0.55", "-379.34, 117.709, -45.3706, 0.55", "-382.953, 127.605, -53.1945, 0.55", "-385.729, 138.507, -60.0971, 0.55", "-387.172, 149.033, -67.8903, 0.55", "-388.735, 159.427, -75.8192, 0.55", "-388.585, 169.718, -84.0322, 0.55", "-387.593, 180.438, -91.6805, 0.55", "-386.315, 190.389, -100.184, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 29
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-13.5081, -56.4625, 17.6235, 0.28", "-13.303, -58.8203, 19.7536, 0.28", "-13.2895, -60.0215, 20.8844, 0.55", "-13.4411, -64.502, 25.0184, 0.28", "-13.4698, -65.3512, 25.802, 0.55", "-13.555, -67.8691, 28.1253, 0.55", "-13.7248, -72.8882, 32.7562, 0.28", "-13.8848, -74.5285, 34.454, 0.28", "-14.0007, -75.4422, 35.4476, 0.55", "-12.8632, -83.6141, 43.9198, 0.55", "-12.531, -92.7292, 51.5518, 0.55", "-12.7019, -101.466, 59.5859, 0.55", "-13.5243, -110.865, 66.8748, 0.55", "-12.8685, -119.761, 74.7147, 0.55", "-11.935, -128.902, 82.2618, 0.55", "-12.6781, -138.229, 89.6416, 0.55", "-14.2596, -147.532, 96.9276, 0.55", "-14.9813, -157.351, 103.706, 0.55", "-12.8133, -165.84, 111.669, 0.55", "-11.741, -174.73, 119.465, 0.55", "-8.47641, -183.135, 127.121, 0.55", "-6.2942, -190.982, 135.662, 0.55", "-2.57555, -199.1, 143.391, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-8.63237, -28.0028, -3.59525, 0.83", "-8.82397, -29.6523, -6.90128, 0.83", "-9.00027, -30.6344, -8.91307, 0.83", "-9.23903, -31.5903, -11.0104, 0.83", "-9.46006, -32.4661, -13.4819, 0.83", "-9.6644, -33.007, -16.0913, 0.83", "-9.69615, -33.0235, -16.3434, 0.55", "-9.84272, -32.9662, -17.2113, 0.55", "-10.1107, -32.7916, -18.3046, 0.55", "-10.8047, -31.67, -21.0524, 0.55", "-11.2682, -30.1842, -23.3047, 0.55", "-11.5765, -28.4225, -25.4722, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-8.63237, -28.0028, -3.59525, 1.38", "-10.0425, -30.0513, -3.25276, 1.38", "-13.1191, -33.2291, -3.1541, 1.66", "-15.5919, -35.7833, -3.07481, 0.83", "-17.2537, -37.4996, -3.02153, 0.83", "-19.2394, -39.5507, -2.95785, 0.83", "-22.6358, -43.0589, -2.84895, 0.83", "-28.5076, -48.0406, -2.84111, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "0.971905, -33.1707, 0.767677, 0.55", "0.477445, -34.7013, 0.084819, 0.55", "0.15554, -35.6977, -0.359738, 0.28", "-0.336284, -37.2201, -1.03896, 0.83", "-0.823956, -38.7297, -1.71245, 0.55", "-1.81823, -41.8074, -3.08556, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.971905, -33.1707, 0.767677, 0.55", "2.40731, -34.6565, 0.00948264, 0.55", "3.79626, -36.1037, -0.708217, 0.55", "6.02232, -38.4547, -1.82812, 0.28", "7.88326, -40.5144, -2.73428, 0.55", "10.5934, -43.628, -4.03165, 0.55", "12.3663, -45.7892, -4.91847, 0.55", "13.6504, -47.4379, -5.50678, 0.55", "14.4947, -48.6042, -5.87201, 0.55", "15.6119, -50.3298, -6.29558, 0.28", "16.3132, -51.5575, -6.46781, 0.55", "17.2202, -53.3722, -6.62376, 0.28", "18.0354, -55.2249, -6.85326, 0.55", "19.2106, -57.638, -7.14641, 0.28", "20.5129, -60.204, -7.575, 0.55", "21.573, -62.236, -8.00756, 0.55", "22.9649, -64.5854, -8.56532, 0.55", "24.5952, -67.0057, -9.19012, 0.55", "26.3764, -69.4648, -9.97409, 0.28", "27.5191, -70.9154, -10.51, 0.55", "28.5949, -72.163, -11.0883, 0.55", "30.6579, -74.2588, -12.0693, 0.55", "31.5785, -75.1259, -12.4505, 0.28", "32.1379, -75.6209, -12.6748, 0.55", "33.3782, -76.7415, -13.2299, 0.28", "35.355, -78.4186, -14.0047, 0.28", "35.5502, -78.5798, -14.0918, 0.55", "37.1746, -80.1445, -15.0855, 0.28", "37.8364, -80.7496, -15.5098, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-14.4984, 39.4884, -0.554798, 0.55", "-14.9235, 42.5123, -0.404848, 0.55", "-15.3206, 45.9841, -0.600635, 0.83", "-15.5778, 49.6491, -1.1439, 0.55", "-15.7421, 53.1937, -1.97924, 0.83", "-15.8424, 56.5894, -2.89462, 0.83", "-15.9434, 60.0336, -3.76866, 0.55", "-16.0193, 64.8552, -5.2129, 0.83", "-15.9747, 69.956, -6.96936, 0.83", "-15.8525, 73.8342, -8.44971, 0.83", "-15.7602, 78.335, -10.2507, 0.55", "-15.6166, 82.3602, -11.8764, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.4984, 39.4884, -0.554798, 0.28", "-16.1245, 39.2927, 0.701494, 0.28", "-18.2772, 38.8515, 2.59099, 0.55", "-18.9978, 38.7048, 3.26919, 0.55", "-22.317, 38.0645, 6.3816, 0.28", "-22.6707, 38.0078, 6.73638, 0.55", "-25.1673, 37.5657, 9.49418, 0.55", "-26.5437, 37.2578, 11.2487, 0.55", "-28.577, 36.7277, 14.1816, 0.55", "-29.3562, 36.5094, 15.3421, 0.55", "-32.0016, 35.9254, 19.5299, 0.55", "-33.5201, 35.7522, 21.8763, 0.28", "-34.3727, 35.7361, 23.1483, 0.55", "-35.6325, 35.9222, 25.1553, 0.28", "-36.3998, 36.1676, 26.3887, 0.55", "-38.0637, 36.9414, 29.0443, 0.28", "-38.9897, 37.476, 30.4366, 0.55", "-40.6006, 38.5839, 32.6975, 0.55", "-42.0382, 39.708, 34.711, 0.28", "-42.9445, 40.4848, 36.0206, 0.55", "-44.0784, 41.4552, 37.7888, 0.28", "-45.1212, 42.1716, 39.3283, 0.55", "-54.2074, 40.8774, 48.1378, 0.55", "-62.3516, 38.796, 57.7091, 0.55", "-70.9354, 35.0878, 66.4245, 0.55", "-80.808, 32.9406, 74.1793, 0.55", "-91.0693, 30.6197, 81.3631, 0.55", "-100.182, 27.6052, 89.771, 0.55", "-109.397, 22.7115, 97.225, 0.55", "-116.567, 17.4066, 106.471, 0.55", "-122.848, 11.1579, 115.837, 0.55", "-127.283, 4.68445, 126.086, 0.55", "-131.239, -2.50861, 136.098, 0.55", "-133.629, -8.48352, 147.261, 0.55", "-137.484, -13.5126, 158.43, 0.55", "-143.929, -18.5085, 168.343, 0.55", "-152.038, -24.6526, 176.244, 0.55", "-160.351, -27.6665, 185.446, 0.55", "-168.263, -31.718, 194.651, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-11.5765, -28.4225, -25.4722, 0.55", "-11.016, -27.1073, -25.7874, 0.55", "-10.8434, -26.6999, -25.943, 0.28", "-10.323, -25.5, -26.4634, 0.55", "-9.60721, -23.8014, -27.4826, 0.55", "-9.07446, -22.5196, -28.3327, 0.28", "-8.6523, -21.2273, -29.5641, 0.83", "-8.17455, -19.5301, -31.5456, 0.28", "-8.07511, -19.1472, -32.0604, 0.55", "-7.61957, -17.2627, -34.9114, 0.28", "-7.51911, -16.7677, -35.791, 0.83", "-6.76542, -13.3985, -42.3007, 0.28", "-6.6675, -13.0371, -43.0219, 0.55", "-6.3078, -11.901, -45.2308, 0.28", "-6.12014, -11.387, -46.2093, 0.83", "-5.06646, -8.90995, -50.8601, 0.28", "-4.61027, -7.97021, -52.5803, 0.28", "-4.25472, -7.3468, -53.6414, 0.55", "-3.2442, -5.56497, -56.601, 0.28", "-2.70996, -4.63427, -58.03, 0.83", "-1.90725, -3.14149, -60.1021, 0.55", "-1.58514, -2.45193, -60.9479, 0.83", "-1.15717, -1.38425, -62.2078, 0.28", "-0.840098, -0.544269, -63.1319, 0.83", "0.399591, 2.78327, -66.5129, 0.28", "0.907635, 4.29321, -67.9445, 0.83", "1.90788, 7.47836, -70.7545, 0.28", "2.09664, 8.10528, -71.3218, 0.55", "2.32276, 8.86317, -71.9872, 0.28", "2.63106, 9.89993, -72.9389, 0.55", "3.06536, 11.1492, -74.1095, 0.28", "3.24177, 11.463, -74.4665, 0.55", "4.24935, 12.6409, -76.0382, 0.28", "4.84061, 13.1742, -76.8415, 0.55", "5.8442, 13.8501, -77.9875, 0.28", "6.70347, 14.3279, -78.7922, 0.55", "8.3827, 15.1095, -80.1584, 0.28", "9.28961, 15.5554, -80.8237, 0.55", "10.3126, 16.112, -81.5492, 0.28", "11.1467, 16.5973, -82.1678, 0.55", "11.7836, 17.0433, -82.6727, 0.55", "13.0911, 18.0457, -83.7949, 0.28", "13.9788, 18.7656, -84.6663, 0.55", "15.7715, 20.1928, -86.6506, 0.28", "16.227, 20.5258, -87.2017, 0.83", "17.8611, 21.5796, -89.2149, 0.28", "18.8275, 22.0471, -90.3885, 0.83", "20.1834, 22.4616, -91.8147, 0.28", "20.9327, 22.4685, -92.4401, 0.83", "22.5003, 22.2125, -93.4886, 0.28", "23.3003, 21.9903, -93.9592, 0.83", "25.3096, 21.2585, -94.9721, 0.28", "27.7644, 20.272, -96.0642, 0.55", "32.4941, 17.6165, -97.8659, 0.28", "33.4575, 16.9477, -98.2073, 0.55", "34.2772, 16.192, -98.4899, 0.55", "35.3128, 14.9851, -98.867, 0.28", "35.6826, 14.4151, -99.0084, 0.55", "38.6082, 8.43687, -100.36, 0.28", "38.8716, 7.75962, -100.476, 0.55", "40.2758, 3.72119, -101.127, 0.28", "40.5492, 2.83446, -101.264, 0.55", "41.1797, 0.352279, -101.635, 0.28", "41.3766, -0.557046, -101.772, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-11.5765, -28.4225, -25.4722, 0.55", "-12.1669, -28.693, -26.393, 0.55", "-15.0085, -29.8679, -30.4852, 0.28", "-15.8249, -30.243, -31.605, 0.28", "-16.5785, -30.6609, -32.6566, 0.55", "-20.2091, -32.9523, -37.7752, 0.28", "-20.9764, -33.476, -38.7859, 0.55", "-21.5571, -33.8866, -39.3973, 0.28", "-22.6827, -34.5381, -40.2321, 0.55", "-24.8103, -35.6352, -41.5904, 0.28", "-27.8539, -37.2118, -43.4612, 0.55", "-29.615, -38.1085, -44.5469, 0.55", "-32.5734, -39.5787, -46.6845, 0.55", "-36.2003, -41.2842, -49.6839, 0.55", "-37.7509, -41.9729, -51.0603, 0.28", "-39.3911, -42.7125, -52.6625, 0.55", "-42.5872, -44.296, -56.8176, 0.28", "-43.4411, -44.8338, -58.2903, 0.55", "-44.5532, -45.707, -60.6125, 0.28", "-45.1462, -46.3096, -61.9893, 0.55", "-45.8125, -47.0345, -63.5002, 0.55", "-48.8895, -50.1724, -69.6443, 0.28", "-50.2235, -51.4947, -72.0388, 0.28", "-51.8978, -52.9089, -74.6295, 0.83", "-52.714, -53.543, -75.7587, 0.28", "-53.5581, -54.0631, -76.7968, 0.83", "-57.6372, -55.6978, -80.9807, 0.28", "-58.1447, -55.8264, -81.463, 0.55", "-60.3151, -56.2305, -83.6003, 0.28", "-62.1686, -56.5388, -85.5721, 0.83", "-65.2053, -56.8517, -88.863, 0.83", "-67.9492, -56.9948, -91.7642, 0.28", "-70.405, -57.03, -94.3138, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-28.5076, -48.0406, -2.84111, 0.83", "-30.3937, -47.4389, -0.181338, 0.83", "-32.6254, -46.6688, 2.63397, 0.83", "-34.4922, -45.9089, 4.7569, 0.83", "-36.5942, -44.9149, 6.91098, 0.83", "-39.6545, -43.3212, 9.61812, 0.83", "-42.2679, -41.8606, 11.462, 0.28", "-44.0773, -40.6192, 12.2448, 0.55", "-45.8716, -39.266, 12.6374, 0.55", "-47.4541, -37.9959, 12.7047, 0.55", "-50.1672, -35.6021, 12.5032, 0.55", "-53.2563, -32.7505, 11.811, 0.55", "-55.6533, -30.4071, 11.1104, 0.55", "-56.3711, -29.6687, 10.9232, 0.83", "-57.9608, -27.9618, 10.5722, 0.55", "-58.7693, -27.0043, 10.4597, 0.83", "-61.167, -23.7505, 10.3776, 0.55", "-61.4214, -23.3638, 10.419, 0.83", "-62.8783, -21.0092, 10.8345, 0.55", "-64.2574, -18.6587, 11.4543, 0.83", "-65.5726, -16.3803, 12.032, 0.28", "-66.1314, -15.3845, 12.2945, 0.55", "-67.4022, -12.9889, 12.9113, 0.28", "-68.1986, -11.4604, 13.2244, 0.55", "-69.8365, -8.01491, 13.7136, 0.28", "-71.6373, -3.88875, 14.0729, 0.83", "-72.8176, -0.908419, 14.2556, 0.28", "-73.8363, 1.95907, 14.4219, 0.28", "-74.0875, 2.71103, 14.4731, 0.83", "-74.7657, 4.80594, 14.6219, 0.55", "-75.5795, 7.30343, 14.8154, 0.83", "-76.4664, 9.87383, 15.2045, 0.55", "-77.0378, 11.4334, 15.4423, 0.83", "-78.3144, 14.7074, 15.9653, 0.83", "-79.609, 17.7953, 16.4287, 0.55", "-80.6364, 19.9746, 16.6648, 0.83", "-81.7565, 22.1828, 16.7715, 0.28", "-82.3936, 23.357, 16.7203, 0.55", "-84.5178, 27.0855, 16.2786, 0.28", "-85.6801, 29.0246, 15.9519, 0.83", "-87.9072, 32.3084, 15.2768, 0.28", "-88.9033, 33.6246, 14.9722, 0.83", "-91.2323, 36.2418, 14.044, 0.55", "-92.7615, 37.8112, 13.4787, 0.55", "-94.5273, 39.5144, 12.8915, 0.83", "-97.4959, 42.424, 12.0662, 0.55", "-98.9796, 43.9183, 11.7831, 0.83", "-103.433, 48.5921, 11.1414, 0.28", "-105.949, 51.3795, 10.9679, 0.55", "-107.221, 52.8721, 10.8754, 0.28", "-109.255, 55.4985, 10.8354, 0.28", "-110.185, 56.8344, 10.8944, 0.28", "-112.173, 59.8148, 11.131, 0.55", "-113.557, 61.994, 11.4784, 0.28", "-115.127, 64.3785, 11.7711, 0.83", "-116.876, 67.5761, 12.2197, 0.28", "-117.611, 69.1298, 12.4, 0.55", "-119.0, 72.5582, 12.7229, 0.28", "-119.695, 74.5534, 12.9003, 0.55", "-120.01, 75.4856, 12.901, 0.55", "-122.192, 82.3556, 12.3397, 0.28", "-123.066, 85.2451, 11.7239, 0.83", "-123.724, 87.4741, 10.9808, 0.28", "-124.152, 88.9501, 10.3402, 0.55", "-125.279, 92.5937, 8.52632, 0.28", "-126.391, 96.0808, 6.68155, 0.55", "-127.216, 98.4526, 5.29221, 0.55", "-128.223, 101.587, 3.48911, 0.28", "-128.665, 102.967, 2.68443, 0.28", "-129.162, 104.574, 1.77965, 0.55", "-130.285, 108.622, -0.0532382, 0.28", "-130.952, 110.824, -0.911462, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-28.5076, -48.0406, -2.84111, 0.83", "-31.0309, -47.3456, -4.29832, 0.83", "-34.5455, -46.1544, -6.09654, 0.55", "-35.2213, -45.8784, -6.35185, 0.55", "-35.9655, -45.5881, -6.62017, 0.55", "-37.8673, -44.8673, -7.18857, 0.55", "-41.2375, -43.689, -8.16125, 0.28", "-42.7126, -43.2254, -8.74879, 0.55", "-45.0362, -42.6832, -9.71717, 0.28", "-47.0464, -42.3631, -10.7462, 0.55", "-48.9526, -42.1997, -11.7959, 0.55", "-51.7823, -42.2627, -13.3053, 0.28", "-57.4752, -42.8213, -16.2734, 0.83", "-58.9838, -43.0555, -17.0701, 0.83", "-62.5777, -43.7636, -18.9929, 0.28", "-64.0262, -44.0657, -19.6802, 0.83", "-67.8196, -44.8997, -21.3097, 0.28", "-68.7956, -45.1183, -21.6445, 0.55", "-71.6075, -45.7578, -22.2859, 0.28", "-72.6765, -45.9747, -22.5529, 0.83", "-74.8562, -46.4152, -23.0519, 0.28", "-77.6866, -46.8544, -23.9955, 0.55", "-80.0508, -47.1386, -24.9269, 0.28", "-81.2937, -47.2671, -25.6282, 0.83", "-84.3348, -47.6984, -27.6841, 0.28", "-85.3466, -47.8787, -28.4612, 0.55", "-88.66, -48.6307, -31.3919, 0.28", "-89.2965, -48.8066, -32.0148, 0.55", "-94.7018, -50.5326, -37.8771, 0.28", "-95.955, -50.9831, -39.3278, 0.28", "-96.8571, -51.3978, -40.405, 0.55", "-99.4484, -52.7653, -43.5708, 0.28", "-100.621, -53.5167, -44.9426, 0.28", "-102.243, -54.5943, -46.7082, 0.28", "-102.831, -54.9497, -47.187, 0.55", "-105.325, -56.089, -48.7838, 0.28", "-106.648, -56.6314, -49.4693, 0.55", "-108.559, -57.2794, -50.0898, 0.28", "-109.619, -57.5575, -50.2983, 0.55", "-113.342, -58.2405, -50.6414, 0.28", "-115.163, -58.437, -50.7944, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.81823, -41.8074, -3.08556, 0.55", "-2.13129, -44.6083, -2.06491, 0.55", "-2.32219, -45.7996, -1.80688, 0.83", "-2.56182, -47.3057, -1.58647, 0.28", "-2.70977, -48.2215, -1.48181, 0.55", "-2.88625, -49.3773, -1.37762, 0.55", "-3.09535, -50.7573, -1.2559, 0.55", "-3.37644, -52.4161, -1.23149, 0.55", "-3.6412, -54.1089, -1.15177, 0.55", "-3.7863, -55.0512, -1.10897, 0.28", "-3.9036, -55.7704, -1.11893, 0.55", "-4.10221, -56.8396, -1.23033, 0.28", "-4.24334, -57.7605, -1.38922, 0.55", "-4.43123, -59.3928, -1.67756, 0.55", "-4.63792, -61.2325, -2.10319, 0.55", "-4.82099, -63.8998, -2.68394, 0.55", "-4.93753, -66.3693, -3.25135, 0.55", "-4.95833, -69.2897, -3.90756, 0.28", "-4.89334, -71.0495, -4.26617, 0.83", "-4.5725, -74.6064, -4.834, 0.28", "-4.21511, -77.1067, -5.09069, 0.83", "-3.90792, -78.7689, -5.1056, 0.28", "-3.66472, -80.3426, -5.04708, 0.55", "-3.5109, -82.064, -4.97819, 0.28", "-3.45855, -83.6713, -4.95533, 0.55", "-3.44824, -85.1074, -4.913, 0.28", "-3.5025, -86.3414, -4.92102, 0.55", "-3.76748, -90.3925, -4.98538, 0.28", "-3.89444, -91.5549, -5.05709, 0.83", "-4.15793, -93.6268, -5.20953, 0.83", "-4.4203, -95.6927, -5.38609, 0.28", "-4.50047, -96.5018, -5.4405, 0.55", "-4.61017, -98.1224, -5.55907, 0.28", "-4.65042, -98.975, -5.6215, 0.55", "-4.70253, -100.452, -5.64751, 0.28", "-4.75393, -101.182, -5.59871, 0.55", "-4.94987, -102.766, -5.37823, 0.28", "-5.08828, -103.68, -5.17149, 0.83", "-5.28351, -105.158, -4.6369, 0.28", "-5.4456, -107.28, -3.57508, 0.55", "-5.51959, -108.542, -2.85422, 0.28", "-5.55088, -108.993, -2.60537, 0.55", "-5.62937, -109.888, -2.12703, 0.55", "-5.97668, -113.076, -0.56734, 0.28", "-6.13369, -114.919, 0.332333, 0.28", "-6.18328, -115.4, 0.538478, 0.55", "-6.41382, -117.884, 1.63279, 0.28", "-6.53783, -118.941, 2.06633, 0.55", "-6.79865, -120.67, 2.68845, 0.28", "-7.36334, -123.514, 3.52748, 0.28", "-7.66817, -125.105, 3.94738, 1.11", "-8.13557, -127.778, 4.69386, 0.28", "-8.34006, -129.122, 5.08571, 0.55", "-8.49885, -130.205, 5.34302, 0.28", "-8.61658, -130.878, 5.43694, 0.55", "-9.18713, -133.321, 5.55773, 0.28", "-9.45525, -134.439, 5.59057, 0.55", "-9.78648, -135.891, 5.64818, 0.28", "-10.0809, -137.233, 5.76362, 0.28", "-10.459, -138.868, 5.91951, 0.83", "-10.9717, -141.174, 6.14283, 0.83", "-11.6688, -144.556, 6.46217, 0.28", "-11.8881, -145.944, 6.66121, 0.55", "-12.1017, -147.887, 6.99376, 0.28", "-12.1748, -149.023, 7.23295, 0.55", "-12.2209, -152.285, 7.91529, 0.28", "-12.1782, -154.469, 8.3023, 0.83", "-12.0317, -157.476, 8.71935, 0.28", "-11.8981, -159.637, 8.94943, 0.28", "-11.8227, -160.684, 9.036, 0.55", "-11.5683, -164.893, 9.25179, 0.28", "-11.5097, -167.653, 9.21404, 0.28", "-11.536, -169.278, 9.09558, 0.55", "-11.6486, -171.485, 8.82977, 0.28", "-11.733, -172.617, 8.68107, 0.55", "-11.9408, -175.18, 8.37016, 0.28", "-12.1072, -176.962, 8.16606, 0.55", "-12.6321, -181.998, 7.57402, 0.28", "-12.8177, -183.591, 7.3892, 0.55", "-13.0648, -186.133, 7.05899, 0.28", "-13.1766, -187.923, 6.86255, 0.55", "-14.1821, -196.116, 7.79418, 0.55", "-16.2202, -204.102, 8.74166, 0.55", "-16.9334, -212.362, 9.33135, 0.55", "-19.0976, -220.373, 9.54985, 0.55", "-20.967, -228.456, 9.932, 0.55", "-23.0558, -236.483, 9.51833, 0.55", "-24.6609, -244.566, 10.5147, 0.55", "-24.9138, -252.621, 12.4434, 0.55", "-24.8916, -260.42, 15.1623, 0.55", "-24.0739, -268.577, 16.3908, 0.55", "-23.0974, -276.433, 18.7413, 0.55", "-23.0861, -284.374, 21.061, 0.55", "-22.0921, -291.831, 24.3798, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.81823, -41.8074, -3.08556, 0.55", "-1.01625, -43.3653, -5.20519, 0.55", "-0.367665, -44.7463, -6.91926, 0.55", "1.35247, -48.3004, -10.8699, 0.55", "2.60457, -50.6902, -13.3501, 0.28", "3.29125, -51.8935, -14.5824, 0.55", "4.73944, -54.2926, -16.9749, 0.28", "5.5372, -55.7478, -18.2977, 0.28", "6.57748, -57.3749, -19.721, 0.55", "7.3309, -58.4261, -20.4961, 0.55", "8.96152, -60.4439, -22.0425, 0.28", "9.53603, -61.1342, -22.5962, 0.55", "12.3684, -64.2534, -25.3239, 0.55", "13.8849, -65.9243, -27.0049, 0.55", "14.6492, -66.8219, -27.9903, 0.55", "16.0954, -68.5745, -30.0811, 0.55", "17.8753, -70.6247, -32.8331, 0.55", "19.6549, -72.6165, -35.6441, 0.55", "21.1069, -74.2028, -37.9542, 0.28", "22.1121, -75.4301, -39.6751, 0.55", "23.6525, -77.3251, -42.4877, 0.55", "25.2941, -79.4142, -45.6069, 0.55", "26.4989, -81.0464, -47.9736, 0.28", "26.8122, -81.487, -48.573, 0.55", "28.0318, -82.9863, -50.742, 0.28", "29.6435, -84.8302, -53.4512, 0.28", "30.5569, -85.8798, -55.0103, 0.55", "31.2939, -86.7506, -56.411, 0.55", "31.9667, -87.4563, -57.767, 0.28", "33.2258, -88.8624, -60.7531, 0.55", "33.9312, -89.6732, -62.5117, 0.28", "34.5678, -90.4844, -64.4523, 0.55", "35.4662, -91.7764, -67.583, 0.28", "36.0464, -92.9239, -70.4966, 0.55", "36.6593, -94.5873, -74.4813, 0.28", "36.8614, -95.3025, -76.1404, 0.55", "37.4046, -97.3813, -81.4548, 0.28", "37.5974, -98.2945, -83.9029, 0.55", "37.9129, -101.201, -92.3456, 0.28", "37.8993, -101.61, -93.571, 0.28", "37.8775, -102.035, -94.8724, 0.55", "37.7575, -103.806, -100.271, 0.28", "37.7212, -104.159, -101.344, 0.55", "37.527, -105.66, -106.298, 0.28", "37.4041, -106.315, -108.412, 0.55", "37.1564, -107.248, -111.636, 0.28", "36.9856, -107.832, -113.596, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "37.8364, -80.7496, -15.5098, 0.28", "36.8979, -85.3724, -16.3223, 0.28", "36.5559, -87.2348, -16.5807, 0.55", "36.1221, -91.9935, -17.0433, 0.28", "36.0313, -94.0211, -17.2957, 0.55", "35.891, -98.089, -17.5889, 0.28", "35.8234, -100.049, -17.7302, 0.28", "35.6745, -102.715, -17.9556, 0.28", "35.6529, -107.403, -18.135, 0.28", "35.9014, -111.253, -18.0142, 0.28", "36.4552, -115.697, -17.8793, 0.55", "37.8436, -127.409, -18.4615, 0.55", "38.6863, -139.132, -17.3625, 0.55", "40.0145, -150.763, -15.9696, 0.55", "42.846, -161.676, -12.8363, 0.55", "46.0634, -172.655, -10.3527, 0.55", "48.5503, -183.497, -6.73688, 0.55", "49.2872, -195.09, -4.73615, 0.55", "49.8361, -206.183, -0.947692, 0.55", "49.7728, -216.946, 3.66205, 0.55", "51.8373, -227.77, 7.58721, 0.55", "54.1828, -238.466, 11.6597, 0.55", "56.2222, -248.72, 16.7919, 0.55", "57.0953, -257.657, 24.0595, 0.55", "57.8484, -265.155, 32.6949, 0.55", "56.771, -273.424, 40.6446, 0.55", "56.019, -279.265, 50.3907, 0.55", "56.5368, -286.313, 59.3835, 0.55", "58.406, -293.373, 68.1777, 0.55", "59.4916, -299.52, 77.706, 0.55", "62.2037, -305.637, 86.9147, 0.55", "65.566, -312.063, 95.7018, 0.55", "69.4771, -316.585, 105.318, 0.55", "72.4237, -319.22, 115.891, 0.55", "76.507, -319.854, 126.388, 0.55", "82.1475, -320.948, 136.095, 0.55", "87.5891, -320.672, 145.984, 0.55", "93.0294, -321.801, 155.801, 0.55", "99.7506, -324.492, 164.457, 0.55", "106.337, -326.677, 173.352, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "37.8364, -80.7496, -15.5098, 0.28", "40.8009, -81.4054, -16.6801, 0.28", "42.5445, -81.9157, -17.4215, 0.55", "44.9296, -82.75, -18.5678, 0.28", "46.4824, -83.4545, -19.4393, 0.55", "47.0453, -83.744, -19.7997, 0.55", "49.3692, -85.0493, -21.3861, 0.28", "50.2998, -85.6961, -22.1308, 0.28", "51.0942, -86.3496, -22.8271, 0.55", "52.4458, -87.6744, -24.1634, 0.28", "54.5502, -89.7718, -26.3545, 0.28", "54.9618, -90.1853, -26.8112, 0.55", "63.004, -95.4886, -33.6713, 0.55", "69.9894, -100.741, -41.6492, 0.55", "75.6356, -107.975, -49.277, 0.55", "83.4794, -112.702, -56.7318, 0.55", "90.7051, -117.445, -64.7848, 0.55", "96.8918, -121.998, -73.7612, 0.55", "103.761, -128.063, -81.3002, 0.55", "111.353, -135.499, -86.6998, 0.55", "117.578, -143.659, -92.8677, 0.55", "125.692, -151.044, -97.5027, 0.55", "132.259, -158.959, -103.603, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-15.6166, 82.3602, -11.8764, 0.55", "-15.5552, 85.0365, -12.1648, 0.55", "-15.4819, 88.2288, -12.5625, 0.55", "-15.4277, 91.2191, -13.2269, 0.55", "-15.4256, 91.4132, -13.2773, 0.55", "-15.4097, 93.5201, -13.9585, 0.83", "-15.4075, 95.8996, -14.7616, 0.55", "-15.4147, 97.1676, -15.3376, 0.83", "-15.364, 99.8942, -16.755, 0.55", "-15.3436, 100.712, -17.1966, 0.83", "-15.3105, 103.163, -18.4384, 0.55", "-15.2555, 104.71, -19.1363, 0.83", "-15.0847, 108.062, -20.3579, 0.55", "-14.9381, 110.653, -21.0904, 0.55", "-14.8381, 112.843, -21.5099, 0.55", "-14.7947, 114.245, -21.7676, 0.83", "-14.7714, 117.746, -22.2096, 0.28", "-14.7925, 119.108, -22.4232, 0.55", "-14.8999, 121.373, -22.839, 0.28", "-14.9801, 122.807, -23.2472, 0.55", "-15.1844, 125.716, -24.3506, 0.28", "-15.3233, 127.307, -25.0834, 0.55", "-15.7834, 130.555, -26.8935, 0.28", "-16.0646, 132.417, -27.994, 0.55", "-16.4185, 134.533, -29.282, 0.28", "-16.6712, 135.824, -30.0479, 0.55", "-16.8527, 136.623, -30.467, 0.28", "-17.2404, 138.355, -31.3509, 0.55", "-17.7851, 140.687, -32.2428, 0.28", "-18.0298, 141.772, -32.5883, 0.55", "-18.2065, 142.663, -32.8165, 0.28", "-18.3687, 143.764, -33.0659, 0.83", "-18.844, 147.158, -33.4748, 0.28", "-19.02, 148.393, -33.4856, 0.55", "-19.1901, 149.579, -33.4239, 0.28", "-19.4652, 151.78, -33.2683, 0.55", "-19.5932, 152.638, -33.1659, 0.83", "-20.0026, 155.606, -32.9665, 0.28", "-20.276, 157.51, -32.8649, 0.55", "-20.4661, 159.073, -32.8536, 0.28", "-20.6405, 160.99, -32.8828, 0.55", "-20.8398, 164.928, -32.9767, 0.28", "-20.8534, 169.05, -33.0057, 0.55", "-20.6914, 172.912, -32.9967, 0.28", "-20.5063, 175.468, -32.885, 0.55", "-20.3712, 177.21, -32.708, 0.55", "-20.2061, 178.941, -32.4871, 0.55", "-19.8891, 181.609, -32.0914, 0.28", "-19.7448, 182.735, -31.9268, 0.55", "-19.4563, 184.457, -31.7805, 0.28", "-19.1667, 186.139, -31.7848, 0.55", "-18.7549, 188.76, -31.9565, 0.28", "-18.377, 191.238, -32.3526, 0.55", "-17.6776, 195.983, -33.3673, 0.28", "-17.5554, 196.842, -33.5566, 0.83", "-17.0689, 200.503, -34.3763, 0.28", "-16.8107, 202.443, -34.8365, 0.83", "-16.2648, 206.959, -35.8572, 0.28", "-16.0355, 209.132, -36.2941, 0.55", "-15.8834, 211.06, -36.641, 0.28", "-15.7949, 212.179, -36.8403, 0.55", "-15.6687, 213.81, -37.0638, 0.28", "-15.4889, 215.725, -37.3026, 0.55", "-15.1309, 220.161, -37.7062, 0.55", "-14.9108, 223.02, -37.9835, 0.28", "-14.7403, 225.009, -38.1924, 0.55", "-14.5387, 227.01, -38.3554, 0.28", "-14.2857, 229.385, -38.4634, 0.55", "-13.9008, 232.421, -38.5974, 0.55", "-13.6804, 233.785, -38.6313, 0.28", "-13.3908, 235.43, -38.6181, 0.55", "-13.0252, 237.501, -38.6029, 0.28", "-12.6747, 239.43, -38.5907, 0.55", "-12.305, 241.418, -38.6035, 0.28", "-11.6625, 245.012, -38.6354, 0.55", "-10.6949, 251.192, -38.6724, 0.28", "-10.4591, 252.857, -38.6999, 0.55", "-10.0925, 255.466, -38.7695, 0.28", "-9.8021, 257.604, -38.8279, 0.55", "-9.45434, 260.418, -38.8151, 0.28", "-9.29453, 261.935, -38.8109, 0.55", "-9.00562, 264.114, -38.7964, 0.28", "-8.7494, 265.895, -38.7439, 0.55", "-8.53483, 267.288, -38.7184, 0.55", "-7.78245, 271.253, -38.531, 0.28", "-7.30171, 273.379, -38.5098, 0.55", "-6.56233, 276.532, -38.4684, 0.55", "-6.02141, 278.936, -38.5096, 0.55", "-5.01825, 283.339, -38.6859, 0.28", "-4.07787, 287.201, -38.9028, 0.55", "-3.04403, 291.243, -39.1658, 0.28", "-2.22591, 294.384, -39.3105, 0.55", "-1.48241, 297.432, -39.4289, 0.28", "-1.14284, 298.802, -39.4754, 0.55", "-0.466071, 301.708, -39.4021, 0.28", "-0.0684935, 303.791, -39.1896, 0.55", "0.111879, 304.624, -38.988, 0.28", "0.613222, 306.454, -38.5182, 0.55", "1.17745, 308.246, -38.0163, 0.28", "1.53542, 309.435, -37.6059, 0.55", "2.3741, 312.3, -36.315, 0.55", "3.05769, 314.708, -35.1755, 0.55", "3.70879, 317.06, -34.0422, 0.28", "4.21383, 318.973, -33.1309, 0.55", "5.29184, 323.665, -30.9753, 0.28", "5.67652, 325.553, -30.1845, 0.55", "6.19723, 327.895, -29.469, 0.28", "6.59589, 329.821, -29.0573, 0.55", "7.0857, 331.968, -28.7164, 0.28", "7.50818, 333.58, -28.6006, 0.28", "8.15983, 335.759, -28.6712, 0.55", "9.62716, 340.389, -28.881, 0.28", "10.4825, 343.024, -28.9023, 0.55", "11.3108, 345.549, -28.8743, 0.28", "12.0978, 347.97, -28.8446, 0.55", "12.6575, 349.868, -28.7787, 0.28", "13.2516, 352.262, -28.6237, 0.55", "13.7642, 355.271, -28.3176, 0.28", "13.834, 355.826, -28.2729, 0.55", "14.2116, 360.893, -27.958, 0.28", "14.3262, 365.09, -27.7093, 0.28", "14.2916, 367.305, -27.6076, 0.55", "14.1113, 370.556, -27.5206, 0.28", "14.0112, 371.753, -27.4896, 0.55", "13.7593, 374.235, -27.4322, 0.28", "13.5276, 375.725, -27.3241, 0.55", "13.1701, 377.81, -27.1414, 0.28", "12.8345, 379.875, -26.8726, 0.55", "12.4853, 382.432, -26.4973, 0.28", "12.16, 384.987, -26.0644, 0.55", "11.7743, 387.912, -25.514, 0.28", "11.5253, 389.814, -25.1024, 0.55", "11.1819, 392.015, -24.5196, 0.28", "10.8467, 393.849, -24.078, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-15.6166, 82.3602, -11.8764, 0.28", "-17.088, 85.1973, -11.702, 0.28", "-18.5209, 87.9601, -11.5322, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-18.5209, 87.9601, -11.5322, 0.28", "-18.7341, 91.3082, -12.0583, 0.28", "-18.8872, 93.1776, -12.3032, 0.83", "-19.1139, 96.2555, -12.6893, 0.28", "-19.2428, 97.8281, -12.8675, 0.83", "-19.5507, 101.087, -13.2109, 0.28", "-19.8135, 103.347, -13.2594, 0.83", "-20.1389, 105.908, -13.2414, 0.28", "-20.3698, 107.354, -13.1135, 0.83", "-20.7736, 109.584, -12.7064, 0.83", "-21.2289, 112.119, -12.1192, 0.83", "-22.1829, 116.708, -10.4631, 0.28", "-22.3108, 117.357, -10.1968, 0.83", "-22.6891, 119.396, -9.3558, 0.28", "-23.0771, 121.441, -8.52407, 0.55", "-23.7265, 124.896, -7.13194, 0.55", "-24.7121, 129.96, -5.14795, 0.28", "-25.1365, 132.291, -4.39679, 0.55", "-25.4656, 134.546, -4.0525, 0.28", "-25.7398, 136.955, -4.14381, 0.28", "-25.8885, 138.534, -4.48844, 0.55", "-26.1112, 140.875, -5.36097, 0.28", "-26.3186, 142.984, -6.35956, 0.28", "-27.5642, 151.373, -10.2809, 0.28", "-27.8283, 152.802, -10.9447, 0.55", "-28.3668, 155.373, -12.1655, 0.28", "-28.796, 157.346, -13.0535, 0.83", "-29.557, 160.607, -14.3142, 0.28", "-30.2416, 163.612, -15.2932, 0.55", "-30.9959, 167.176, -16.1707, 0.55", "-31.7248, 171.508, -17.3325, 0.28", "-32.0976, 174.279, -18.0848, 0.28", "-32.5154, 179.335, -19.4629, 0.55", "-32.7645, 184.254, -20.7552, 0.28", "-32.778, 186.425, -21.3259, 0.55", "-32.7226, 189.134, -21.9637, 0.28", "-32.5772, 192.353, -22.7177, 0.55", "-32.2711, 197.919, -24.0545, 0.28", "-32.1491, 199.534, -24.4178, 0.55", "-31.931, 202.325, -24.9392, 0.28", "-31.7293, 204.863, -25.3762, 0.83", "-31.217, 210.187, -26.1664, 0.28", "-30.8624, 212.921, -26.6547, 0.55", "-30.5138, 215.848, -27.1247, 0.28", "-30.285, 217.822, -27.4466, 0.55", "-30.0137, 220.386, -27.8171, 0.55", "-29.5372, 225.053, -28.4752, 0.55", "-29.193, 230.512, -29.0586, 0.28", "-29.0279, 233.014, -29.3865, 0.55", "-28.9605, 234.644, -29.6086, 0.28", "-28.8277, 237.203, -30.0807, 0.83", "-28.6469, 239.872, -30.5733, 0.28", "-28.5081, 242.614, -31.1013, 0.55", "-28.3816, 245.842, -31.6691, 0.55", "-28.1855, 248.728, -32.4245, 0.55", "-27.8968, 253.443, -33.8118, 0.28", "-27.8161, 255.332, -34.3962, 0.55", "-27.7038, 259.224, -35.5654, 0.28", "-27.7255, 261.654, -36.2213, 0.55", "-28.1305, 266.848, -37.489, 0.28", "-28.3496, 268.848, -37.9967, 0.55", "-28.9457, 272.216, -38.7868, 0.55", "-29.2468, 273.727, -39.2397, 0.55", "-29.8316, 276.536, -40.1519, 0.55", "-30.4998, 279.488, -41.1917, 0.28", "-31.0182, 281.564, -41.9378, 0.55", "-31.5788, 283.891, -42.9053, 0.28", "-32.6291, 288.017, -44.8542, 0.55", "-33.1987, 290.35, -46.059, 0.28", "-33.4308, 291.449, -46.634, 0.55", "-33.9503, 293.65, -47.5371, 0.28", "-34.1586, 294.607, -47.8566, 0.55", "-34.502, 296.664, -48.4282, 0.28", "-35.0391, 300.487, -49.1857, 0.55", "-35.2718, 303.736, -49.8256, 0.28", "-35.42, 307.902, -50.5291, 0.55", "-35.4782, 311.349, -50.948, 0.55", "-35.4553, 314.954, -51.1012, 0.28", "-35.4242, 316.221, -51.0568, 0.55", "-35.3609, 321.956, -50.4148, 0.28", "-35.3179, 323.991, -50.2406, 0.28", "-35.2962, 326.533, -49.99, 0.55", "-35.486, 332.105, -49.0031, 0.28", "-35.5723, 334.283, -48.5879, 0.83", "-35.7068, 337.884, -47.8583, 0.55", "-35.9781, 344.148, -46.4518, 0.55", "-36.1278, 349.243, -45.4104, 0.28", "-36.1938, 352.654, -44.6826, 0.55", "-36.2401, 356.553, -43.8439, 0.55", "-36.2713, 358.809, -43.1878, 0.28", "-36.3038, 360.685, -42.4577, 0.55", "-36.3791, 362.494, -41.5104, 0.55", "-36.4644, 364.702, -40.4039, 0.28", "-36.6435, 367.001, -39.3483, 0.55", "-37.1079, 371.06, -37.474, 0.28", "-37.3625, 373.15, -36.5471, 0.55", "-37.7437, 375.903, -35.3192, 0.28", "-38.0626, 378.139, -34.2456, 0.55", "-38.7968, 383.293, -31.8177, 0.28", "-39.0393, 385.062, -30.9904, 0.55", "-39.6438, 389.773, -28.9069, 0.28", "-40.0118, 392.719, -27.6446, 0.55", "-40.7846, 399.049, -24.8233, 0.28", "-41.0537, 401.34, -23.7412, 0.28", "-41.2928, 403.679, -22.6673, 0.55", "-41.5453, 406.777, -21.4144, 0.28", "-41.6655, 408.584, -20.7838, 0.55", "-41.8586, 412.773, -19.5356, 0.28", "-41.9555, 414.637, -19.0799, 0.55", "-42.1245, 417.812, -18.1855, 0.28", "-42.2063, 420.41, -17.458, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.5209, 87.9601, -11.5322, 0.28", "-22.8958, 90.6562, -10.1197, 0.28", "-25.8658, 92.4864, -9.1608, 0.28", "-28.5963, 94.169, -8.27922, 0.55", "-29.9207, 94.9852, -7.8516, 0.55", "-34.1524, 97.593, -6.48535, 0.28", "-37.3037, 99.5352, -5.46792, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_0", "dend_39", "dend_30", "dend_26", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_10", "dend_1", "dend_47", "dend_40", "dend_32", "dend_31", "dend_28", "dend_27", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_49", "dend_48", "dend_44", "dend_41", "dend_36", "dend_33", "dend_5", "dend_4", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_0", "dend_39", "dend_30", "dend_26", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_10", "dend_1", "dend_47", "dend_40", "dend_32", "dend_31", "dend_28", "dend_27", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_49", "dend_48", "dend_44", "dend_41", "dend_36", "dend_33", "dend_5", "dend_4", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_0", "axon_0", "dend_39", "dend_30", "dend_26", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_10", "dend_1", "axon_1", "dend_47", "dend_40", "dend_32", "dend_31", "dend_28", "dend_27", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_49", "dend_48", "dend_44", "dend_41", "dend_36", "dend_33", "dend_5", "dend_4", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L23_NBC_2ee5947bbf_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_29
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, axon_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, axon_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_53
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.49999884142687223)
    connect dend_24(0), soma_0(0.49999884142687223)
    connect dend_23(0), soma_0(0.49999884142687223)
    connect dend_16(0), soma_0(0.49999884142687223)
    connect dend_13(0), soma_0(0.49999884142687223)
    connect dend_0(0), soma_0(0.49999884142687223)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.75872, -10.4532, 0.754391, 3.47327 ) }
    soma_0 { pt3dadd( -3.51208, -9.3518, 0.693156, 4.11268 ) }
    soma_0 { pt3dadd( -3.26545, -8.25037, 0.631922, 5.19122 ) }
    soma_0 { pt3dadd( -3.01882, -7.14893, 0.570687, 5.79177 ) }
    soma_0 { pt3dadd( -2.77218, -6.04749, 0.509453, 6.43344 ) }
    soma_0 { pt3dadd( -2.52555, -4.94606, 0.448218, 7.33547 ) }
    soma_0 { pt3dadd( -2.27891, -3.84462, 0.386984, 7.89448 ) }
    soma_0 { pt3dadd( -2.03228, -2.74319, 0.325749, 8.07665 ) }
    soma_0 { pt3dadd( -1.78564, -1.64175, 0.264515, 8.19647 ) }
    soma_0 { pt3dadd( -1.53901, -0.540314, 0.20328, 8.39724 ) }
    soma_0 { pt3dadd( -1.29237, 0.561122, 0.142046, 8.72156 ) }
    soma_0 { pt3dadd( -1.04574, 1.66256, 0.0808113, 9.67228 ) }
    soma_0 { pt3dadd( -0.799104, 2.76399, 0.0195768, 10.9168 ) }
    soma_0 { pt3dadd( -0.552469, 3.86543, -0.0416577, 10.7105 ) }
    soma_0 { pt3dadd( -0.305834, 4.96687, -0.102892, 10.3432 ) }
    soma_0 { pt3dadd( -0.0591998, 6.0683, -0.164127, 10.3014 ) }
    soma_0 { pt3dadd( 0.187435, 7.16974, -0.225361, 9.6708 ) }
    soma_0 { pt3dadd( 0.43407, 8.27117, -0.286596, 8.78455 ) }
    soma_0 { pt3dadd( 0.680704, 9.37261, -0.34783, 7.41865 ) }
    soma_0 { pt3dadd( 0.927339, 10.474, -0.409065, 4.25873 ) }
    soma_0 { pt3dadd( 1.17397, 11.5755, -0.470299, 2.57124 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.92645, -11.5151, 4.08428, 2.77 ) }
    dend_29 { pt3dadd( -3.87828, -12.9128, 4.08428, 3.05 ) }
    dend_29 { pt3dadd( -3.69659, -18.1861, 4.08428, 3.05 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 24/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -5.80645, -9.97153, 7.55429, 0.55 ) }
    dend_24 { pt3dadd( -6.43431, -10.8712, 9.3354, 0.55 ) }
    dend_24 { pt3dadd( -7.43488, -12.305, 12.1738, 1.11 ) }
    dend_24 { pt3dadd( -10.3692, -16.5096, 20.4978, 0.55 ) }
    dend_24 { pt3dadd( -11.3611, -17.931, 23.3118, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 29/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.976448, 9.71593, -7.52571, 0.83 ) }
    dend_23 { pt3dadd( -0.348996, 11.1596, -8.68204, 0.83 ) }
    dend_23 { pt3dadd( 0.315372, 13.0439, -10.6557, 0.55 ) }
    dend_23 { pt3dadd( 0.650714, 13.9079, -11.5363, 0.83 ) }
    dend_23 { pt3dadd( 0.957695, 14.7672, -12.4591, 0.55 ) }
    dend_23 { pt3dadd( 1.24167, 15.6274, -13.4439, 0.55 ) }
    dend_23 { pt3dadd( 1.6646, 17.0229, -14.9713, 0.83 ) }
    dend_23 { pt3dadd( 2.32972, 19.518, -17.8311, 0.55 ) }
    dend_23 { pt3dadd( 2.67593, 20.9134, -19.3673, 0.83 ) }
    dend_23 { pt3dadd( 3.52318, 23.9957, -22.7317, 0.55 ) }
    dend_23 { pt3dadd( 4.02331, 25.5872, -24.426, 0.55 ) }
    dend_23 { pt3dadd( 4.46256, 26.7662, -25.6704, 0.28 ) }
    dend_23 { pt3dadd( 5.23321, 28.6667, -27.5124, 0.83 ) }
    dend_23 { pt3dadd( 5.83833, 30.1795, -28.7687, 0.28 ) }
    dend_23 { pt3dadd( 6.52373, 32.0518, -30.1214, 0.83 ) }
    dend_23 { pt3dadd( 6.82249, 32.9165, -30.6038, 0.28 ) }
    dend_23 { pt3dadd( 7.56271, 35.1918, -31.6547, 0.55 ) }
    dend_23 { pt3dadd( 7.95555, 36.6475, -32.2186, 0.55 ) }
    dend_23 { pt3dadd( 8.40874, 38.8865, -32.8471, 0.55 ) }
    dend_23 { pt3dadd( 8.93351, 42.696, -33.8081, 0.83 ) }
    dend_23 { pt3dadd( 9.06374, 44.3725, -34.2688, 0.55 ) }
    dend_23 { pt3dadd( 9.15915, 46.2822, -34.8275, 0.83 ) }
    dend_23 { pt3dadd( 9.2338, 49.2019, -35.7494, 0.83 ) }
    dend_23 { pt3dadd( 9.26972, 51.1583, -36.4815, 0.28 ) }
    dend_23 { pt3dadd( 9.32749, 53.8888, -37.7879, 0.83 ) }
    dend_23 { pt3dadd( 9.42964, 56.9351, -39.4432, 0.55 ) }
    dend_23 { pt3dadd( 9.49936, 58.4575, -40.317, 0.55 ) }
    dend_23 { pt3dadd( 9.62955, 61.03, -41.9226, 0.55 ) }
    dend_23 { pt3dadd( 9.86971, 63.8122, -43.7763, 0.55 ) }
    dend_23 { pt3dadd( 10.169, 66.7438, -45.6468, 0.55 ) }
    dend_23 { pt3dadd( 10.395, 68.5594, -46.7228, 0.28 ) }
    dend_23 { pt3dadd( 10.5292, 69.5756, -47.2958, 0.55 ) }
    dend_23 { pt3dadd( 11.0091, 73.3312, -49.3994, 0.28 ) }
    dend_23 { pt3dadd( 11.2245, 74.9763, -50.3037, 0.55 ) }
    dend_23 { pt3dadd( 11.4151, 76.5167, -51.1141, 0.28 ) }
    dend_23 { pt3dadd( 11.7114, 78.7289, -52.276, 0.55 ) }
    dend_23 { pt3dadd( 12.1803, 81.8603, -54.0008, 0.28 ) }
    dend_23 { pt3dadd( 12.4557, 83.5831, -54.9243, 0.55 ) }
    dend_23 { pt3dadd( 13.077, 87.0032, -56.6905, 0.28 ) }
    dend_23 { pt3dadd( 13.3213, 88.2135, -57.3135, 0.55 ) }
    dend_23 { pt3dadd( 13.9159, 90.9247, -58.7583, 0.28 ) }
    dend_23 { pt3dadd( 14.1796, 92.093, -59.3618, 0.28 ) }
    dend_23 { pt3dadd( 14.446, 93.2173, -59.9401, 0.55 ) }
    dend_23 { pt3dadd( 14.9672, 95.5468, -61.2549, 0.28 ) }
    dend_23 { pt3dadd( 15.2143, 96.6439, -61.8766, 0.55 ) }
    dend_23 { pt3dadd( 15.5789, 98.4115, -62.9023, 0.55 ) }
    dend_23 { pt3dadd( 16.0289, 101.017, -64.3443, 0.28 ) }
    dend_23 { pt3dadd( 16.0989, 101.473, -64.5879, 0.55 ) }
    dend_23 { pt3dadd( 16.509, 104.196, -65.8747, 0.28 ) }
    dend_23 { pt3dadd( 16.6041, 104.963, -66.1854, 0.55 ) }
    dend_23 { pt3dadd( 16.7746, 106.331, -66.7183, 0.28 ) }
    dend_23 { pt3dadd( 16.9306, 107.445, -67.0993, 0.55 ) }
    dend_23 { pt3dadd( 17.4716, 110.69, -68.0795, 0.28 ) }
    dend_23 { pt3dadd( 17.964, 113.192, -68.7716, 0.28 ) }
    dend_23 { pt3dadd( 18.2277, 114.406, -69.0533, 0.55 ) }
    dend_23 { pt3dadd( 18.7507, 116.635, -69.5552, 0.28 ) }
    dend_23 { pt3dadd( 18.9324, 117.324, -69.7189, 0.55 ) }
    dend_23 { pt3dadd( 19.5171, 119.364, -70.2055, 0.28 ) }
    dend_23 { pt3dadd( 20.0171, 121.018, -70.5895, 0.55 ) }
    dend_23 { pt3dadd( 20.5961, 122.791, -70.9834, 0.55 ) }
    dend_23 { pt3dadd( 21.7972, 126.237, -71.6504, 0.28 ) }
    dend_23 { pt3dadd( 22.2119, 127.415, -71.8509, 0.55 ) }
    dend_23 { pt3dadd( 22.6496, 128.63, -72.0429, 0.28 ) }
    dend_23 { pt3dadd( 23.1384, 129.942, -72.2667, 0.55 ) }
    dend_23 { pt3dadd( 23.7043, 131.258, -72.628, 0.28 ) }
    dend_23 { pt3dadd( 24.0479, 131.966, -72.8848, 0.55 ) }
    dend_23 { pt3dadd( 24.9958, 133.734, -73.6179, 0.28 ) }
    dend_23 { pt3dadd( 25.7317, 135.113, -74.2069, 0.28 ) }
    dend_23 { pt3dadd( 26.4083, 136.396, -74.7788, 0.55 ) }
    dend_23 { pt3dadd( 27.902, 139.29, -76.0392, 0.28 ) }
    dend_23 { pt3dadd( 28.3718, 140.239, -76.5102, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 28.7474, 140.968, -76.8854, 0.28 ) }
    dend_23 { pt3dadd( 29.246, 141.923, -77.3546, 0.55 ) }
    dend_23 { pt3dadd( 29.7419, 142.85, -77.8494, 0.28 ) }
    dend_23 { pt3dadd( 30.1953, 143.663, -78.2694, 0.55 ) }
    dend_23 { pt3dadd( 32.3181, 147.359, -80.207, 0.28 ) }
    dend_23 { pt3dadd( 33.0134, 148.483, -80.8214, 0.28 ) }
    dend_23 { pt3dadd( 33.5515, 149.27, -81.3045, 0.55 ) }
    dend_23 { pt3dadd( 35.1866, 151.434, -82.7425, 0.28 ) }
    dend_23 { pt3dadd( 35.6307, 151.96, -83.1847, 0.55 ) }
    dend_23 { pt3dadd( 37.6006, 153.988, -85.0804, 0.28 ) }
    dend_23 { pt3dadd( 38.7038, 154.993, -86.0323, 0.55 ) }
    dend_23 { pt3dadd( 40.406, 156.468, -87.4656, 0.28 ) }
    dend_23 { pt3dadd( 40.7464, 156.745, -87.7244, 0.55 ) }
    dend_23 { pt3dadd( 44.3271, 159.599, -89.9872, 0.28 ) }
    dend_23 { pt3dadd( 45.9642, 160.89, -91.0776, 0.55 ) }
    dend_23 { pt3dadd( 47.0204, 161.682, -91.7699, 0.28 ) }
    dend_23 { pt3dadd( 47.3359, 161.927, -92.0282, 0.55 ) }
    dend_23 { pt3dadd( 48.2261, 162.68, -92.7623, 0.28 ) }
    dend_23 { pt3dadd( 48.8459, 163.245, -93.3205, 0.55 ) }
    dend_23 { pt3dadd( 50.6599, 165.063, -95.1853, 0.28 ) }
    dend_23 { pt3dadd( 51.1065, 165.517, -95.7616, 0.55 ) }
    dend_23 { pt3dadd( 53.4426, 167.832, -99.0016, 0.28 ) }
    dend_23 { pt3dadd( 54.1363, 168.524, -100.003, 0.55 ) }
    dend_23 { pt3dadd( 55.2032, 169.605, -101.547, 0.28 ) }
    dend_23 { pt3dadd( 55.798, 170.189, -102.341, 0.55 ) }
    dend_23 { pt3dadd( 56.75, 171.157, -103.415, 0.28 ) }
    dend_23 { pt3dadd( 57.1995, 171.63, -103.899, 0.55 ) }
    dend_23 { pt3dadd( 57.8904, 172.364, -104.505, 0.28 ) }
    dend_23 { pt3dadd( 58.7563, 173.268, -105.244, 0.55 ) }
    dend_23 { pt3dadd( 60.304, 174.917, -106.405, 0.28 ) }
    dend_23 { pt3dadd( 61.0847, 175.764, -106.879, 0.55 ) }
    dend_23 { pt3dadd( 62.4975, 177.31, -107.604, 0.28 ) }
    dend_23 { pt3dadd( 63.4132, 178.341, -108.094, 0.55 ) }
    dend_23 { pt3dadd( 63.6926, 178.677, -108.236, 0.28 ) }
    dend_23 { pt3dadd( 64.255, 179.405, -108.538, 0.55 ) }
    dend_23 { pt3dadd( 66.1262, 182.034, -109.657, 0.28 ) }
    dend_23 { pt3dadd( 66.6768, 182.822, -110.022, 0.55 ) }
    dend_23 { pt3dadd( 68.2229, 185.136, -111.073, 0.28 ) }
    dend_23 { pt3dadd( 69.4395, 186.95, -111.964, 0.28 ) }
    dend_23 { pt3dadd( 70.133, 187.935, -112.476, 0.55 ) }
    dend_23 { pt3dadd( 71.229, 189.464, -113.301, 0.28 ) }
    dend_23 { pt3dadd( 71.6333, 189.999, -113.57, 0.55 ) }
    dend_23 { pt3dadd( 72.5405, 191.019, -114.074, 0.28 ) }
    dend_23 { pt3dadd( 73.022, 191.474, -114.23, 0.55 ) }
    dend_23 { pt3dadd( 73.9341, 192.251, -114.476, 0.28 ) }
    dend_23 { pt3dadd( 74.5584, 192.774, -114.594, 0.55 ) }
    dend_23 { pt3dadd( 76.4471, 194.295, -114.827, 0.28 ) }
    dend_23 { pt3dadd( 78.3324, 195.812, -114.921, 0.55 ) }
    dend_23 { pt3dadd( 79.9239, 197.136, -114.922, 0.28 ) }
    dend_23 { pt3dadd( 80.7966, 197.917, -114.96, 0.55 ) }
    dend_23 { pt3dadd( 82.5537, 199.569, -115.131, 0.28 ) }
    dend_23 { pt3dadd( 84.0299, 200.999, -115.332, 0.55 ) }
    dend_23 { pt3dadd( 86.0686, 203.049, -115.72, 0.28 ) }
    dend_23 { pt3dadd( 86.8712, 203.879, -115.886, 0.28 ) }
    dend_23 { pt3dadd( 89.1086, 206.11, -116.494, 0.55 ) }
    dend_23 { pt3dadd( 90.6637, 207.654, -116.945, 0.28 ) }
    dend_23 { pt3dadd( 91.3357, 208.304, -117.175, 0.55 ) }
    dend_23 { pt3dadd( 92.5406, 209.401, -117.632, 0.28 ) }
    dend_23 { pt3dadd( 93.0622, 209.852, -117.828, 0.55 ) }
    dend_23 { pt3dadd( 94.5313, 211.038, -118.17, 0.28 ) }
    dend_23 { pt3dadd( 94.7803, 211.244, -118.193, 0.55 ) }
    dend_23 { pt3dadd( 96.0127, 212.32, -118.224, 0.28 ) }
    dend_23 { pt3dadd( 97.0264, 213.245, -118.192, 0.55 ) }
    dend_23 { pt3dadd( 98.2742, 214.454, -118.104, 0.28 ) }
    dend_23 { pt3dadd( 99.0408, 215.353, -118.044, 0.55 ) }
    dend_23 { pt3dadd( 100.53, 217.404, -117.993, 0.28 ) }
    dend_23 { pt3dadd( 101.484, 218.871, -117.957, 0.28 ) }
    dend_23 { pt3dadd( 102.946, 221.32, -117.899, 0.28 ) }
    dend_23 { pt3dadd( 103.521, 222.344, -117.866, 0.55 ) }
    dend_23 { pt3dadd( 105.452, 225.829, -117.736, 0.28 ) }
    dend_23 { pt3dadd( 106.301, 227.358, -117.719, 0.55 ) }
    dend_23 { pt3dadd( 107.347, 229.278, -117.693, 0.28 ) }
    dend_23 { pt3dadd( 107.925, 230.276, -117.715, 0.55 ) }
    dend_23 { pt3dadd( 108.578, 231.231, -117.761, 0.28 ) }
    dend_23 { pt3dadd( 109.009, 231.705, -117.788, 0.55 ) }
    dend_23 { pt3dadd( 111.105, 233.158, -117.901, 0.28 ) }
    dend_23 { pt3dadd( 111.105, 233.158, -117.901, 0.55 ) }
    dend_23 { pt3dadd( 113.262, 233.853, -118.053, 0.28 ) }
    dend_23 { pt3dadd( 114.368, 234.089, -118.117, 0.28 ) }
    dend_23 { pt3dadd( 114.814, 234.144, -118.139, 0.55 ) }
    dend_23 { pt3dadd( 116.165, 234.178, -118.162, 0.28 ) }
    dend_23 { pt3dadd( 118.395, 234.021, -118.115, 0.55 ) }
    dend_23 { pt3dadd( 119.495, 233.861, -118.092, 0.28 ) }
    dend_23 { pt3dadd( 120.664, 233.576, -118.068, 0.28 ) }
    dend_23 { pt3dadd( 121.338, 233.365, -118.056, 0.55 ) }
    dend_23 { pt3dadd( 122.664, 232.827, -118.035, 0.28 ) }
    dend_23 { pt3dadd( 123.482, 232.4, -118.026, 0.55 ) }
    dend_23 { pt3dadd( 124.612, 231.74, -118.015, 0.28 ) }
    dend_23 { pt3dadd( 125.467, 231.205, -118.01, 0.28 ) }
    dend_23 { pt3dadd( 126.318, 230.656, -118.004, 0.28 ) }
    dend_23 { pt3dadd( 127.389, 229.958, -117.997, 0.55 ) }
    dend_23 { pt3dadd( 128.335, 229.355, -117.991, 0.28 ) }
    dend_23 { pt3dadd( 129.311, 228.739, -117.984, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 93/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.17354, 5.13797, -1.63572, 0.55 ) }
    dend_16 { pt3dadd( 6.4514, 5.4926, -2.17589, 0.55 ) }
    dend_16 { pt3dadd( 8.46564, 6.05161, -3.02738, 0.55 ) }
    dend_16 { pt3dadd( 11.0378, 6.76545, -4.11473, 0.55 ) }
    dend_16 { pt3dadd( 12.9219, 7.28835, -4.9112, 0.83 ) }
    dend_16 { pt3dadd( 16.6971, 8.33606, -6.50708, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 99/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.743549, 11.4379, 3.65428, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_13 { pt3dadd( 1.25773, 15.3163, 5.58732, 0.55 ) }
    dend_13 { pt3dadd( 1.63393, 18.21, 6.99934, 1.11 ) }
    dend_13 { pt3dadd( 2.2476, 22.4729, 8.97402, 0.55 ) }
    dend_13 { pt3dadd( 2.72523, 25.1882, 10.1293, 0.83 ) }
    dend_13 { pt3dadd( 3.43817, 28.7079, 11.4905, 0.55 ) }
    dend_13 { pt3dadd( 3.81189, 30.4685, 12.0977, 0.55 ) }
    dend_13 { pt3dadd( 4.31841, 32.5775, 12.725, 0.55 ) }
    dend_13 { pt3dadd( 4.82942, 34.5336, 13.1098, 0.55 ) }
    dend_13 { pt3dadd( 5.7269, 37.4222, 13.3306, 0.83 ) }
    dend_13 { pt3dadd( 6.80351, 40.6528, 13.387, 0.55 ) }
    dend_13 { pt3dadd( 7.81831, 43.6978, 13.2363, 0.83 ) }
    dend_13 { pt3dadd( 9.31065, 48.0346, 12.9298, 0.83 ) }
    dend_13 { pt3dadd( 10.2027, 50.6453, 12.7034, 1.11 ) }
    dend_13 { pt3dadd( 11.7121, 55.1669, 12.4216, 0.55 ) }
    dend_13 { pt3dadd( 12.8686, 58.7253, 12.2781, 1.11 ) }
    dend_13 { pt3dadd( 14.1231, 62.6739, 12.2053, 0.55 ) }
    dend_13 { pt3dadd( 14.8308, 64.9491, 12.2833, 0.55 ) }
    dend_13 { pt3dadd( 15.788, 68.2888, 12.5779, 0.55 ) }
    dend_13 { pt3dadd( 16.7929, 72.1521, 13.128, 0.28 ) }
    dend_13 { pt3dadd( 17.4135, 74.9731, 13.6017, 0.83 ) }
    dend_13 { pt3dadd( 17.9839, 78.0675, 14.157, 0.83 ) }
    dend_13 { pt3dadd( 18.7096, 83.1377, 15.1373, 0.55 ) }
    dend_13 { pt3dadd( 19.1116, 87.8165, 15.9174, 0.83 ) }
    dend_13 { pt3dadd( 19.3248, 91.1716, 16.4302, 0.55 ) }
    dend_13 { pt3dadd( 19.4444, 93.8728, 16.7598, 0.83 ) }
    dend_13 { pt3dadd( 19.5263, 97.8984, 17.253, 0.83 ) }
    dend_13 { pt3dadd( 19.4735, 101.789, 17.6947, 0.55 ) }
    dend_13 { pt3dadd( 19.0571, 106.852, 18.0857, 0.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.84645, 10.1779, 4.00428, 0.83 ) }
    dend_0 { pt3dadd( -5.29581, 13.3744, 4.0519, 0.83 ) }
    dend_0 { pt3dadd( -7.03496, 17.2099, 4.10901, 1.11 ) }
    dend_0 { pt3dadd( -8.85205, 21.2174, 4.16869, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.17397, 11.5755, -0.470299, 0.55 ) }
    axon_0 { pt3dadd( 4.45162, 26.213, -0.470299, 0.55 ) }
    axon_0 { pt3dadd( 7.72927, 40.8505, -0.470299, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_29 (entry count 35/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.69659, -18.1861, 4.08428, 1.38 ) }
    dend_39 { pt3dadd( -4.63871, -20.4973, 2.54042, 1.38 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 37/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.69659, -18.1861, 4.08428, 0.83 ) }
    dend_30 { pt3dadd( -3.22829, -19.3008, 3.83284, 0.83 ) }
    dend_30 { pt3dadd( -2.44349, -21.1679, 3.41052, 0.83 ) }
    dend_30 { pt3dadd( -1.67822, -22.9231, 2.97238, 0.83 ) }
    dend_30 { pt3dadd( -1.07208, -24.3134, 2.62534, 1.11 ) }
    dend_30 { pt3dadd( -0.264075, -26.1667, 2.16273, 0.83 ) }
    dend_30 { pt3dadd( 0.210931, -27.2561, 1.89078, 0.55 ) }
    dend_30 { pt3dadd( 0.837255, -28.714, 1.51957, 0.83 ) }
    dend_30 { pt3dadd( 1.5721, -30.4861, 1.05788, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 46/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.3611, -17.931, 23.3118, 0.28 ) }
    dend_26 { pt3dadd( -13.3918, -16.5129, 23.4337, 0.28 ) }
    dend_26 { pt3dadd( -14.1105, -16.0458, 23.4853, 0.55 ) }
    dend_26 { pt3dadd( -16.0216, -14.7602, 23.3672, 0.28 ) }
    dend_26 { pt3dadd( -18.5204, -13.0346, 23.1086, 0.55 ) }
    dend_26 { pt3dadd( -22.0747, -10.6297, 22.8181, 0.28 ) }
    dend_26 { pt3dadd( -22.8162, -10.1236, 22.7464, 0.28 ) }
    dend_26 { pt3dadd( -24.6765, -8.87085, 22.502, 0.55 ) }
    dend_26 { pt3dadd( -28.424, -6.38814, 22.0907, 0.28 ) }
    dend_26 { pt3dadd( -29.2814, -5.84077, 22.0163, 0.55 ) }
    dend_26 { pt3dadd( -31.6206, -4.21916, 22.0024, 0.28 ) }
    dend_26 { pt3dadd( -33.7762, -2.78134, 22.2049, 0.55 ) }
    dend_26 { pt3dadd( -35.0256, -1.92674, 22.3791, 0.55 ) }
    dend_26 { pt3dadd( -37.0209, -0.557367, 22.8378, 0.28 ) }
    dend_26 { pt3dadd( -38.2347, 0.22453, 23.3392, 0.55 ) }
    dend_26 { pt3dadd( -40.8044, 1.90337, 24.4204, 0.28 ) }
    dend_26 { pt3dadd( -42.8161, 3.34514, 25.4262, 0.55 ) }
    dend_26 { pt3dadd( -51.098, 10.3606, 26.3773, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 64/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -11.3611, -17.931, 23.3118, 0.55 ) }
    dend_25 { pt3dadd( -12.7807, -19.3609, 23.9375, 0.55 ) }
    dend_25 { pt3dadd( -14.2907, -20.8609, 24.8896, 0.55 ) }
    dend_25 { pt3dadd( -16.3319, -22.5481, 26.0075, 0.55 ) }
    dend_25 { pt3dadd( -18.5277, -24.0621, 27.1064, 0.55 ) }
    dend_25 { pt3dadd( -20.7846, -25.3793, 28.1527, 0.55 ) }
    dend_25 { pt3dadd( -23.0892, -26.4503, 29.2147, 0.28 ) }
    dend_25 { pt3dadd( -25.0277, -26.9542, 30.0925, 0.55 ) }
    dend_25 { pt3dadd( -28.2848, -27.5079, 31.53, 0.28 ) }
    dend_25 { pt3dadd( -29.5904, -27.6706, 32.0527, 0.28 ) }
    dend_25 { pt3dadd( -31.4676, -27.9823, 32.65, 0.55 ) }
    dend_25 { pt3dadd( -34.0999, -28.6802, 33.2311, 0.28 ) }
    dend_25 { pt3dadd( -35.9086, -29.4842, 33.5269, 0.55 ) }
    dend_25 { pt3dadd( -37.875, -30.7571, 33.8116, 0.55 ) }
    dend_25 { pt3dadd( -39.1479, -31.8526, 33.9687, 0.83 ) }
    dend_25 { pt3dadd( -41.2003, -33.9357, 33.9977, 0.55 ) }
    dend_25 { pt3dadd( -43.2844, -36.3802, 33.7989, 0.55 ) }
    dend_25 { pt3dadd( -44.405, -37.8689, 33.6033, 0.55 ) }
    dend_25 { pt3dadd( -45.8777, -39.8898, 33.2504, 0.55 ) }
    dend_25 { pt3dadd( -47.1009, -41.5966, 32.8918, 0.55 ) }
    dend_25 { pt3dadd( -48.7241, -44.0357, 32.3722, 0.28 ) }
    dend_25 { pt3dadd( -49.3385, -45.0173, 32.165, 0.28 ) }
    dend_25 { pt3dadd( -49.8353, -45.7676, 32.0211, 0.83 ) }
    dend_25 { pt3dadd( -51.4921, -48.3864, 31.6303, 0.55 ) }
    dend_25 { pt3dadd( -52.6901, -50.3943, 31.4372, 0.55 ) }
    dend_25 { pt3dadd( -53.9612, -52.689, 31.4091, 0.28 ) }
    dend_25 { pt3dadd( -54.987, -54.5704, 31.4512, 0.55 ) }
    dend_25 { pt3dadd( -55.9362, -56.2923, 31.5093, 0.55 ) }
    dend_25 { pt3dadd( -56.7085, -57.7322, 31.581, 0.28 ) }
    dend_25 { pt3dadd( -57.3715, -59.0627, 31.7549, 0.55 ) }
    dend_25 { pt3dadd( -58.1306, -60.397, 31.9649, 0.28 ) }
    dend_25 { pt3dadd( -66.5204, -66.394, 33.3302, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 96/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 16.6971, 8.33606, -6.50708, 0.55 ) }
    dend_20 { pt3dadd( 18.7241, 10.1353, -7.76581, 0.55 ) }
    dend_20 { pt3dadd( 20.1419, 11.3444, -8.64726, 0.83 ) }
    dend_20 { pt3dadd( 21.2211, 12.297, -9.34484, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 22.4159, 13.3515, -10.1171, 0.55 ) }
    dend_20 { pt3dadd( 23.6952, 14.4807, -10.944, 0.55 ) }
    dend_20 { pt3dadd( 24.9729, 15.6084, -11.7699, 0.55 ) }
    dend_20 { pt3dadd( 27.2848, 17.5973, -13.1629, 0.83 ) }
    dend_20 { pt3dadd( 28.2881, 18.4826, -13.8652, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 16.6971, 8.33606, -6.50708, 0.55 ) }
    dend_17 { pt3dadd( 17.4675, 6.85688, -7.08587, 0.55 ) }
    dend_17 { pt3dadd( 18.2574, 5.23337, -7.71438, 0.83 ) }
    dend_17 { pt3dadd( 18.8584, 3.92339, -8.21095, 0.55 ) }
    dend_17 { pt3dadd( 19.3117, 2.85383, -8.72569, 0.83 ) }
    dend_17 { pt3dadd( 20.1368, 0.79125, -9.81696, 0.28 ) }
    dend_17 { pt3dadd( 20.6139, -0.36027, -10.508, 0.55 ) }
    dend_17 { pt3dadd( 21.2553, -1.90608, -11.5537, 0.28 ) }
    dend_17 { pt3dadd( 21.423, -2.33172, -11.8961, 0.55 ) }
    dend_17 { pt3dadd( 22.2003, -4.64713, -13.9115, 0.28 ) }
    dend_17 { pt3dadd( 22.377, -5.30227, -14.4883, 0.83 ) }
    dend_17 { pt3dadd( 22.9733, -7.90112, -16.7493, 0.28 ) }
    dend_17 { pt3dadd( 23.2567, -9.2489, -17.8941, 0.83 ) }
    dend_17 { pt3dadd( 23.7384, -11.4584, -19.6936, 0.28 ) }
    dend_17 { pt3dadd( 24.094, -13.3527, -21.2116, 0.28 ) }
    dend_17 { pt3dadd( 24.2313, -14.2847, -21.8956, 0.83 ) }
    dend_17 { pt3dadd( 24.3003, -15.2851, -22.7081, 0.55 ) }
    dend_17 { pt3dadd( 24.3039, -16.8753, -24.0165, 0.28 ) }
    dend_17 { pt3dadd( 24.2985, -17.5668, -24.5976, 0.83 ) }
    dend_17 { pt3dadd( 24.2845, -21.1785, -27.571, 0.55 ) }
    dend_17 { pt3dadd( 24.275, -22.4468, -28.6997, 0.83 ) }
    dend_17 { pt3dadd( 24.1628, -26.1022, -32.1921, 0.28 ) }
    dend_17 { pt3dadd( 24.0922, -26.8841, -32.9899, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 28/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 19.0571, 106.852, 18.0857, 0.55 ) }
    dend_15 { pt3dadd( 21.0336, 110.869, 17.832, 0.55 ) }
    dend_15 { pt3dadd( 21.8855, 112.651, 17.7321, 0.83 ) }
    dend_15 { pt3dadd( 22.784, 114.878, 17.6138, 0.55 ) }
    dend_15 { pt3dadd( 23.7572, 117.698, 17.341, 0.28 ) }
    dend_15 { pt3dadd( 24.4336, 119.791, 17.1084, 0.55 ) }
    dend_15 { pt3dadd( 24.9643, 121.504, 16.8641, 0.55 ) }
    dend_15 { pt3dadd( 25.8149, 124.606, 16.3915, 0.55 ) }
    dend_15 { pt3dadd( 26.7532, 127.792, 15.9398, 0.55 ) }
    dend_15 { pt3dadd( 27.7767, 131.183, 15.5356, 0.28 ) }
    dend_15 { pt3dadd( 28.4496, 133.192, 15.3332, 0.55 ) }
    dend_15 { pt3dadd( 29.683, 136.453, 15.1037, 0.28 ) }
    dend_15 { pt3dadd( 31.2499, 140.18, 14.8945, 0.55 ) }
    dend_15 { pt3dadd( 31.9508, 141.658, 14.8884, 0.55 ) }
    dend_15 { pt3dadd( 32.9498, 143.58, 14.9934, 0.55 ) }
    dend_15 { pt3dadd( 34.6907, 147.05, 15.377, 0.55 ) }
    dend_15 { pt3dadd( 35.7156, 149.508, 15.6724, 0.28 ) }
    dend_15 { pt3dadd( 36.1795, 150.967, 15.8316, 0.55 ) }
    dend_15 { pt3dadd( 36.8782, 154.148, 16.026, 0.28 ) }
    dend_15 { pt3dadd( 37.2066, 156.308, 16.1342, 0.55 ) }
    dend_15 { pt3dadd( 37.5575, 159.594, 16.1971, 0.83 ) }
    dend_15 { pt3dadd( 37.7508, 163.076, 16.2101, 0.55 ) }
    dend_15 { pt3dadd( 37.878, 165.99, 16.1906, 0.28 ) }
    dend_15 { pt3dadd( 37.9402, 167.439, 16.2203, 0.55 ) }
    dend_15 { pt3dadd( 38.1816, 171.27, 16.367, 0.28 ) }
    dend_15 { pt3dadd( 38.4968, 174.405, 16.6102, 0.55 ) }
    dend_15 { pt3dadd( 38.8021, 176.441, 16.8666, 0.55 ) }
    dend_15 { pt3dadd( 39.2871, 178.761, 17.2846, 0.28 ) }
    dend_15 { pt3dadd( 39.8338, 181.069, 17.7937, 0.55 ) }
    dend_15 { pt3dadd( 40.6809, 184.424, 18.5964, 0.55 ) }
    dend_15 { pt3dadd( 41.3011, 186.908, 19.2112, 0.55 ) }
    dend_15 { pt3dadd( 41.6578, 188.302, 19.5576, 0.83 ) }
    dend_15 { pt3dadd( 42.5291, 191.657, 20.3743, 0.55 ) }
    dend_15 { pt3dadd( 43.1355, 194.081, 20.9341, 0.55 ) }
    dend_15 { pt3dadd( 44.7501, 200.83, 22.3888, 0.28 ) }
    dend_15 { pt3dadd( 45.0485, 202.26, 22.6919, 0.55 ) }
    dend_15 { pt3dadd( 45.9244, 206.915, 23.6548, 0.28 ) }
    dend_15 { pt3dadd( 46.2633, 209.037, 24.1073, 0.83 ) }
    dend_15 { pt3dadd( 46.9765, 214.033, 25.2386, 0.28 ) }
    dend_15 { pt3dadd( 47.1666, 215.437, 25.5831, 0.28 ) }
    dend_15 { pt3dadd( 47.4135, 217.535, 26.1094, 0.55 ) }
    dend_15 { pt3dadd( 47.9738, 222.46, 27.3813, 0.28 ) }
    dend_15 { pt3dadd( 48.1879, 224.902, 28.0131, 0.55 ) }
    dend_15 { pt3dadd( 48.506, 228.644, 28.9591, 0.28 ) }
    dend_15 { pt3dadd( 48.6467, 230.049, 29.3856, 0.55 ) }
    dend_15 { pt3dadd( 49.9708, 243.161, 29.0732, 0.55 ) }
    dend_15 { pt3dadd( 51.792, 255.962, 26.6208, 0.55 ) }
    dend_15 { pt3dadd( 56.2456, 268.298, 26.2989, 0.55 ) }
    dend_15 { pt3dadd( 63.4601, 278.918, 28.2071, 0.55 ) }
    dend_15 { pt3dadd( 67.9827, 291.057, 30.1409, 0.55 ) }
    dend_15 { pt3dadd( 70.6903, 303.301, 33.932, 0.55 ) }
    dend_15 { pt3dadd( 72.6159, 315.625, 37.9512, 0.55 ) }
    dend_15 { pt3dadd( 75.8116, 327.266, 42.9034, 0.55 ) }
    dend_15 { pt3dadd( 77.7128, 339.426, 47.3596, 0.55 ) }
    dend_15 { pt3dadd( 81.1207, 351.931, 49.4466, 0.55 ) }
    dend_15 { pt3dadd( 84.9997, 363.884, 53.0653, 0.55 ) }
    dend_15 { pt3dadd( 89.8893, 374.784, 58.1694, 0.55 ) }
    dend_15 { pt3dadd( 95.9142, 385.748, 61.7078, 0.55 ) }
    dend_15 { pt3dadd( 103.99, 394.56, 66.4217, 0.55 ) }
    dend_15 { pt3dadd( 111.424, 404.574, 69.8403, 0.55 ) }
    dend_15 { pt3dadd( 118.927, 414.864, 72.2112, 0.55 ) }
    dend_15 { pt3dadd( 127.316, 424.04, 75.5578, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.0571, 106.852, 18.0857, 0.55 ) }
    dend_14 { pt3dadd( 16.2908, 108.894, 18.8927, 0.55 ) }
    dend_14 { pt3dadd( 13.2776, 111.383, 19.9375, 0.55 ) }
    dend_14 { pt3dadd( 12.0275, 112.423, 20.4018, 0.28 ) }
    dend_14 { pt3dadd( 11.4409, 112.931, 20.6708, 0.83 ) }
    dend_14 { pt3dadd( 9.29551, 114.88, 21.7306, 0.55 ) }
    dend_14 { pt3dadd( 8.12267, 115.975, 22.4269, 0.83 ) }
    dend_14 { pt3dadd( 6.95013, 117.252, 23.3817, 0.55 ) }
    dend_14 { pt3dadd( 6.09561, 118.314, 24.2492, 0.55 ) }
    dend_14 { pt3dadd( 4.92529, 119.962, 25.4936, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_14 { pt3dadd( 4.45249, 120.669, 25.9644, 0.55 ) }
    dend_14 { pt3dadd( 2.82151, 123.091, 27.5386, 0.28 ) }
    dend_14 { pt3dadd( 2.13753, 124.128, 28.2351, 0.55 ) }
    dend_14 { pt3dadd( 1.21542, 125.623, 29.1787, 0.28 ) }
    dend_14 { pt3dadd( 0.377901, 127.125, 29.9957, 0.28 ) }
    dend_14 { pt3dadd( -0.709242, 128.967, 30.7513, 0.83 ) }
    dend_14 { pt3dadd( -5.49693, 135.765, 35.2059, 0.83 ) }
    dend_14 { pt3dadd( -9.77112, 142.113, 40.6706, 0.83 ) }
    dend_14 { pt3dadd( -13.942, 147.531, 47.0461, 0.83 ) }
    dend_14 { pt3dadd( -19.3568, 151.825, 53.2607, 0.83 ) }
    dend_14 { pt3dadd( -25.1836, 156.384, 58.9051, 0.83 ) }
    dend_14 { pt3dadd( -31.6038, 161.65, 63.1836, 0.83 ) }
    dend_14 { pt3dadd( -38.5769, 165.858, 67.6532, 0.83 ) }
    dend_14 { pt3dadd( -45.2999, 170.844, 71.7666, 0.83 ) }
    dend_14 { pt3dadd( -51.3638, 176.111, 76.535, 0.83 ) }
    dend_14 { pt3dadd( -56.654, 180.452, 82.8269, 0.83 ) }
    dend_14 { pt3dadd( -61.7138, 184.145, 89.6591, 0.83 ) }
    dend_14 { pt3dadd( -66.7144, 188.56, 96.1378, 0.83 ) }
    dend_14 { pt3dadd( -72.5763, 192.049, 102.402, 0.83 ) }
    dend_14 { pt3dadd( -77.7603, 194.749, 109.554, 0.83 ) }
    dend_14 { pt3dadd( -84.1117, 196.871, 115.894, 0.83 ) }
    dend_14 { pt3dadd( -91.2689, 199.976, 120.862, 0.83 ) }
    dend_14 { pt3dadd( -97.4181, 204.089, 126.475, 0.83 ) }
    dend_14 { pt3dadd( -103.177, 207.014, 133.086, 0.83 ) }
    dend_14 { pt3dadd( -107.364, 211.047, 140.323, 0.83 ) }
    dend_14 { pt3dadd( -112.017, 215.656, 146.938, 0.83 ) }
    dend_14 { pt3dadd( -114.791, 221.079, 154.03, 0.83 ) }
    dend_14 { pt3dadd( -117.747, 225.933, 161.415, 0.83 ) }
    dend_14 { pt3dadd( -120.385, 230.185, 169.245, 0.83 ) }
    dend_14 { pt3dadd( -123.61, 233.034, 177.422, 0.83 ) }
    dend_14 { pt3dadd( -126.045, 234.585, 186.168, 0.83 ) }
    dend_14 { pt3dadd( -127.499, 237.367, 194.857, 0.83 ) }
    dend_14 { pt3dadd( -129.317, 238.966, 203.744, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.85205, 21.2174, 4.16869, 0.83 ) }
    dend_10 { pt3dadd( -7.47907, 24.5463, 4.80399, 0.83 ) }
    dend_10 { pt3dadd( -5.36867, 29.8512, 5.97903, 0.83 ) }
    dend_10 { pt3dadd( -4.37442, 32.3761, 6.56021, 0.83 ) }
    dend_10 { pt3dadd( -3.22341, 35.3833, 7.25819, 0.83 ) }
    dend_10 { pt3dadd( -2.33718, 37.7327, 7.79812, 0.55 ) }
    dend_10 { pt3dadd( -1.68362, 39.6162, 8.21074, 0.83 ) }
    dend_10 { pt3dadd( -0.893205, 42.1995, 8.80599, 0.55 ) }
    dend_10 { pt3dadd( -0.413419, 43.9294, 9.20749, 0.83 ) }
    dend_10 { pt3dadd( -0.0959794, 45.0945, 9.44371, 0.55 ) }
    dend_10 { pt3dadd( 0.281224, 46.6664, 9.78913, 0.83 ) }
    dend_10 { pt3dadd( 0.926605, 49.5764, 10.4309, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.85205, 21.2174, 4.16869, 0.55 ) }
    dend_1 { pt3dadd( -9.94322, 22.327, 4.38387, 0.55 ) }
    dend_1 { pt3dadd( -10.5516, 22.9457, 4.50384, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 48/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 7.72927, 40.8505, -0.470299, 0.28 ) }
    axon_1 { pt3dadd( 11.0069, 55.4881, -0.470299, 0.28 ) }
    axon_1 { pt3dadd( 14.2846, 70.1256, -0.470299, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 51/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -4.63871, -20.4973, 2.54042, 0.55 ) }
    dend_47 { pt3dadd( -5.41898, -23.7333, 3.64331, 0.55 ) }
    dend_47 { pt3dadd( -6.29984, -27.7942, 5.20141, 0.28 ) }
    dend_47 { pt3dadd( -6.67125, -29.611, 5.9005, 0.83 ) }
    dend_47 { pt3dadd( -7.07924, -31.7991, 6.71709, 0.28 ) }
    dend_47 { pt3dadd( -7.41639, -33.4504, 7.32416, 0.55 ) }
    dend_47 { pt3dadd( -8.11074, -37.0608, 8.83817, 0.55 ) }
    dend_47 { pt3dadd( -8.48116, -39.1635, 9.74817, 0.28 ) }
    dend_47 { pt3dadd( -8.81351, -40.6659, 10.3882, 0.83 ) }
    dend_47 { pt3dadd( -9.26132, -42.4342, 11.1929, 0.55 ) }
    dend_47 { pt3dadd( -9.65156, -43.9966, 11.9337, 0.55 ) }
    dend_47 { pt3dadd( -10.7197, -47.9788, 13.8475, 0.83 ) }
    dend_47 { pt3dadd( -11.4466, -50.4532, 14.8985, 0.55 ) }
    dend_47 { pt3dadd( -12.3738, -53.241, 16.1175, 0.55 ) }
    dend_47 { pt3dadd( -13.5081, -56.4625, 17.6235, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.63871, -20.4973, 2.54042, 1.38 ) }
    dend_40 { pt3dadd( -5.66837, -22.4324, 0.958492, 1.38 ) }
    dend_40 { pt3dadd( -6.76768, -24.4984, -0.730451, 1.94 ) }
    dend_40 { pt3dadd( -8.63237, -28.0028, -3.59525, 1.66 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 70/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.5721, -30.4861, 1.05788, 0.83 ) }
    dend_32 { pt3dadd( 1.41787, -31.1759, 0.983316, 0.83 ) }
    dend_32 { pt3dadd( 0.971905, -33.1707, 0.767677, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.5721, -30.4861, 1.05788, 0.55 ) }
    dend_31 { pt3dadd( 3.38468, -31.4319, 0.0580179, 0.55 ) }
    dend_31 { pt3dadd( 5.76678, -32.47, -1.9131, 0.55 ) }
    dend_31 { pt3dadd( 7.74676, -33.2673, -3.61264, 0.55 ) }
    dend_31 { pt3dadd( 10.3372, -34.1796, -5.68907, 0.55 ) }
    dend_31 { pt3dadd( 14.9153, -35.6935, -9.16854, 0.28 ) }
    dend_31 { pt3dadd( 19.594, -37.1612, -12.5199, 0.55 ) }
    dend_31 { pt3dadd( 25.006, -38.6849, -16.3854, 0.55 ) }
    dend_31 { pt3dadd( 26.6006, -39.0939, -17.4809, 0.83 ) }
    dend_31 { pt3dadd( 30.1081, -39.946, -19.662, 0.28 ) }
    dend_31 { pt3dadd( 31.1262, -40.1756, -20.2524, 0.55 ) }
    dend_31 { pt3dadd( 33.2276, -40.6488, -21.1045, 0.28 ) }
    dend_31 { pt3dadd( 35.3901, -41.1941, -21.6409, 0.55 ) }
    dend_31 { pt3dadd( 38.5242, -42.0423, -21.8219, 0.28 ) }
    dend_31 { pt3dadd( 40.8198, -42.7562, -21.9037, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 88/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -51.098, 10.3606, 26.3773, 0.28 ) }
    dend_28 { pt3dadd( -57.3159, 14.9637, 26.9001, 0.28 ) }
    dend_28 { pt3dadd( -63.816, 18.9483, 28.1158, 0.28 ) }
    dend_28 { pt3dadd( -70.286, 23.1765, 28.4267, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -51.098, 10.3606, 26.3773, 0.28 ) }
    dend_27 { pt3dadd( -56.905, 14.6711, 26.9698, 0.28 ) }
    dend_27 { pt3dadd( -62.4151, 19.4179, 27.2062, 0.28 ) }
    dend_27 { pt3dadd( -68.0183, 24.0303, 26.8616, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 96/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 28.2881, 18.4826, -13.8652, 0.28 ) }
    dend_22 { pt3dadd( 30.6451, 20.6523, -13.9412, 0.28 ) }
    dend_22 { pt3dadd( 32.1015, 21.9864, -13.9764, 0.55 ) }
    dend_22 { pt3dadd( 34.0237, 23.7166, -13.9993, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 36.2409, 25.6929, -13.8931, 0.55 ) }
    dend_22 { pt3dadd( 38.6548, 27.7467, -13.8801, 0.28 ) }
    dend_22 { pt3dadd( 40.3262, 29.1558, -13.9072, 0.55 ) }
    dend_22 { pt3dadd( 42.4436, 30.9839, -13.9311, 0.28 ) }
    dend_22 { pt3dadd( 43.2356, 31.6731, -13.9351, 0.55 ) }
    dend_22 { pt3dadd( 45.3631, 33.4656, -13.9224, 0.28 ) }
    dend_22 { pt3dadd( 47.8191, 35.6369, -13.5631, 0.55 ) }
    dend_22 { pt3dadd( 49.8457, 37.5321, -13.1348, 0.28 ) }
    dend_22 { pt3dadd( 51.0391, 38.6609, -12.8054, 0.55 ) }
    dend_22 { pt3dadd( 53.1444, 40.5797, -12.3219, 0.28 ) }
    dend_22 { pt3dadd( 54.0232, 41.3307, -12.0493, 0.55 ) }
    dend_22 { pt3dadd( 57.228, 43.8818, -10.6665, 0.28 ) }
    dend_22 { pt3dadd( 58.9292, 45.2255, -9.77525, 0.28 ) }
    dend_22 { pt3dadd( 60.127, 46.0819, -9.13037, 0.28 ) }
    dend_22 { pt3dadd( 62.8626, 47.8587, -7.67697, 0.28 ) }
    dend_22 { pt3dadd( 66.9377, 50.2897, -5.20448, 0.28 ) }
    dend_22 { pt3dadd( 68.5924, 51.1225, -4.15852, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 17/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 28.2881, 18.4826, -13.8652, 0.55 ) }
    dend_21 { pt3dadd( 33.4012, 18.8794, -16.4715, 0.55 ) }
    dend_21 { pt3dadd( 41.4975, 20.1342, -19.9789, 0.55 ) }
    dend_21 { pt3dadd( 43.0316, 20.4744, -20.5981, 0.83 ) }
    dend_21 { pt3dadd( 45.2304, 21.0756, -21.3796, 0.28 ) }
    dend_21 { pt3dadd( 46.4246, 21.451, -21.7281, 0.55 ) }
    dend_21 { pt3dadd( 48.7956, 22.2525, -22.3718, 0.28 ) }
    dend_21 { pt3dadd( 51.1395, 23.0957, -22.8341, 0.55 ) }
    dend_21 { pt3dadd( 53.3935, 23.9988, -22.9274, 0.28 ) }
    dend_21 { pt3dadd( 55.0988, 24.5499, -22.9909, 0.55 ) }
    dend_21 { pt3dadd( 57.8029, 25.3252, -23.1304, 0.55 ) }
    dend_21 { pt3dadd( 60.4023, 25.9841, -23.2959, 0.55 ) }
    dend_21 { pt3dadd( 64.3131, 26.8537, -23.5833, 0.28 ) }
    dend_21 { pt3dadd( 66.4606, 27.2371, -23.8318, 0.55 ) }
    dend_21 { pt3dadd( 69.6018, 27.7676, -24.305, 0.55 ) }
    dend_21 { pt3dadd( 71.6963, 28.1719, -24.8319, 0.28 ) }
    dend_21 { pt3dadd( 72.8936, 28.4435, -25.202, 0.28 ) }
    dend_21 { pt3dadd( 73.9338, 28.7203, -25.5602, 0.55 ) }
    dend_21 { pt3dadd( 77.3924, 29.8111, -26.947, 0.28 ) }
    dend_21 { pt3dadd( 78.3971, 30.094, -27.3788, 0.55 ) }
    dend_21 { pt3dadd( 82.6647, 31.1952, -29.1407, 0.28 ) }
    dend_21 { pt3dadd( 84.1441, 31.5083, -29.6865, 0.55 ) }
    dend_21 { pt3dadd( 87.0954, 31.992, -30.6078, 0.28 ) }
    dend_21 { pt3dadd( 87.9985, 32.0977, -30.8399, 0.55 ) }
    dend_21 { pt3dadd( 91.5152, 32.4731, -31.478, 0.28 ) }
    dend_21 { pt3dadd( 93.0886, 32.5835, -31.6768, 0.55 ) }
    dend_21 { pt3dadd( 95.2687, 32.6431, -31.8862, 0.28 ) }
    dend_21 { pt3dadd( 97.2457, 32.6812, -32.0895, 0.28 ) }
    dend_21 { pt3dadd( 98.9835, 32.6828, -32.2885, 0.55 ) }
    dend_21 { pt3dadd( 101.23, 32.6908, -32.6027, 0.28 ) }
    dend_21 { pt3dadd( 102.59, 32.7091, -32.8221, 0.55 ) }
    dend_21 { pt3dadd( 107.033, 32.8445, -33.6495, 0.28 ) }
    dend_21 { pt3dadd( 107.704, 32.8566, -33.8372, 0.55 ) }
    dend_21 { pt3dadd( 111.104, 33.0074, -34.9693, 0.28 ) }
    dend_21 { pt3dadd( 112.382, 33.1329, -35.3986, 0.55 ) }
    dend_21 { pt3dadd( 113.521, 33.2882, -35.8091, 0.28 ) }
    dend_21 { pt3dadd( 115.284, 33.6057, -36.4928, 0.55 ) }
    dend_21 { pt3dadd( 121.19, 35.1415, -38.6009, 0.28 ) }
    dend_21 { pt3dadd( 122.788, 35.688, -39.1231, 0.55 ) }
    dend_21 { pt3dadd( 126.374, 37.1593, -40.4336, 0.28 ) }
    dend_21 { pt3dadd( 127.246, 37.5583, -40.796, 0.55 ) }
    dend_21 { pt3dadd( 129.19, 38.5718, -41.6609, 0.28 ) }
    dend_21 { pt3dadd( 131.12, 39.8068, -42.5847, 0.55 ) }
    dend_21 { pt3dadd( 132.957, 41.3371, -43.4727, 0.28 ) }
    dend_21 { pt3dadd( 136.355, 44.1052, -45.7777, 0.55 ) }
    dend_21 { pt3dadd( 137.625, 45.1519, -46.805, 0.28 ) }
    dend_21 { pt3dadd( 138.715, 46.1293, -47.726, 0.55 ) }
    dend_21 { pt3dadd( 140.15, 47.4005, -48.9492, 0.28 ) }
    dend_21 { pt3dadd( 141.034, 48.1776, -49.7258, 0.55 ) }
    dend_21 { pt3dadd( 144.669, 51.3123, -52.8278, 0.28 ) }
    dend_21 { pt3dadd( 145.889, 52.4247, -53.6998, 0.55 ) }
    dend_21 { pt3dadd( 148.021, 54.2144, -55.2524, 0.28 ) }
    dend_21 { pt3dadd( 149.76, 55.6513, -56.4858, 0.55 ) }
    dend_21 { pt3dadd( 150.966, 56.5917, -57.3485, 0.28 ) }
    dend_21 { pt3dadd( 152.453, 57.8786, -58.3964, 0.55 ) }
    dend_21 { pt3dadd( 154.244, 59.6114, -59.5564, 0.28 ) }
    dend_21 { pt3dadd( 156.763, 62.0708, -61.3407, 0.55 ) }
    dend_21 { pt3dadd( 159.254, 64.4197, -63.1675, 0.28 ) }
    dend_21 { pt3dadd( 161.24, 66.1892, -64.6676, 0.55 ) }
    dend_21 { pt3dadd( 164.326, 68.6457, -66.8951, 0.28 ) }
    dend_21 { pt3dadd( 165.86, 69.7556, -67.9484, 0.55 ) }
    dend_21 { pt3dadd( 169.435, 71.9389, -70.3686, 0.28 ) }
    dend_21 { pt3dadd( 170.856, 72.5582, -71.2783, 0.55 ) }
    dend_21 { pt3dadd( 175.352, 73.4902, -74.0521, 0.28 ) }
    dend_21 { pt3dadd( 176.766, 73.2816, -74.947, 0.55 ) }
    dend_21 { pt3dadd( 178.101, 72.7926, -75.7831, 0.28 ) }
    dend_21 { pt3dadd( 179.664, 72.0505, -76.7741, 0.55 ) }
    dend_21 { pt3dadd( 183.785, 69.5424, -79.3265, 0.28 ) }
    dend_21 { pt3dadd( 185.356, 68.4272, -80.3328, 0.55 ) }
    dend_21 { pt3dadd( 192.559, 62.239, -85.1502, 0.28 ) }
    dend_21 { pt3dadd( 194.234, 60.7231, -86.3661, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 24.0922, -26.8841, -32.9899, 0.28 ) }
    dend_19 { pt3dadd( 23.955, -28.249, -34.6431, 0.28 ) }
    dend_19 { pt3dadd( 23.8719, -29.0631, -35.5844, 0.55 ) }
    dend_19 { pt3dadd( 23.5515, -31.7356, -38.5125, 0.28 ) }
    dend_19 { pt3dadd( 23.4775, -32.2991, -39.1143, 0.55 ) }
    dend_19 { pt3dadd( 22.849, -36.5314, -43.4774, 0.28 ) }
    dend_19 { pt3dadd( 22.4417, -39.0054, -45.7664, 0.55 ) }
    dend_19 { pt3dadd( 22.1053, -40.902, -47.5272, 0.28 ) }
    dend_19 { pt3dadd( 21.9104, -41.9385, -48.3417, 0.55 ) }
    dend_19 { pt3dadd( 21.4206, -44.5728, -49.9677, 0.28 ) }
    dend_19 { pt3dadd( 21.2953, -45.4312, -50.4994, 0.55 ) }
    dend_19 { pt3dadd( 20.8746, -49.1112, -52.6072, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_19 { pt3dadd( 20.5955, -51.9111, -54.0311, 0.55 ) }
    dend_19 { pt3dadd( 20.2549, -56.496, -56.3553, 0.28 ) }
    dend_19 { pt3dadd( 20.1772, -57.8432, -57.0423, 0.55 ) }
    dend_19 { pt3dadd( 19.7613, -67.602, -61.9975, 0.28 ) }
    dend_19 { pt3dadd( 19.7342, -68.7715, -62.6327, 0.55 ) }
    dend_19 { pt3dadd( 19.7197, -72.9098, -65.1105, 0.28 ) }
    dend_19 { pt3dadd( 19.7168, -74.0428, -65.8056, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 7/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 24.0922, -26.8841, -32.9899, 0.55 ) }
    dend_18 { pt3dadd( 24.7151, -26.8401, -34.623, 0.55 ) }
    dend_18 { pt3dadd( 26.2726, -26.3673, -39.3574, 0.55 ) }
    dend_18 { pt3dadd( 27.7502, -25.7485, -44.0857, 0.28 ) }
    dend_18 { pt3dadd( 27.9899, -25.537, -45.02, 0.55 ) }
    dend_18 { pt3dadd( 28.9711, -24.3508, -49.2013, 0.28 ) }
    dend_18 { pt3dadd( 29.2939, -23.7643, -50.6726, 0.55 ) }
    dend_18 { pt3dadd( 30.0849, -21.1291, -55.2994, 0.28 ) }
    dend_18 { pt3dadd( 30.2083, -20.4286, -56.2893, 0.55 ) }
    dend_18 { pt3dadd( 30.5684, -16.3751, -60.7743, 0.28 ) }
    dend_18 { pt3dadd( 30.5961, -15.7171, -61.3982, 0.55 ) }
    dend_18 { pt3dadd( 30.5422, -11.3232, -64.6606, 0.28 ) }
    dend_18 { pt3dadd( 30.4949, -10.0155, -65.5158, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 20/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.926605, 49.5764, 10.4309, 0.28 ) }
    dend_12 { pt3dadd( 0.583296, 51.6712, 10.1073, 0.28 ) }
    dend_12 { pt3dadd( 0.483926, 52.8209, 9.87127, 0.55 ) }
    dend_12 { pt3dadd( 0.266076, 55.8922, 9.39837, 0.28 ) }
    dend_12 { pt3dadd( 0.201494, 56.7543, 9.3048, 0.55 ) }
    dend_12 { pt3dadd( 0.092827, 58.1135, 9.15388, 0.28 ) }
    dend_12 { pt3dadd( -0.176277, 60.0603, 8.93035, 0.55 ) }
    dend_12 { pt3dadd( -1.00284, 63.4823, 8.60495, 0.28 ) }
    dend_12 { pt3dadd( -1.59776, 65.3067, 8.39295, 0.55 ) }
    dend_12 { pt3dadd( -2.39085, 67.1755, 8.20239, 0.28 ) }
    dend_12 { pt3dadd( -3.16148, 68.873, 8.09205, 0.83 ) }
    dend_12 { pt3dadd( -4.26585, 71.4104, 8.01674, 0.55 ) }
    dend_12 { pt3dadd( -5.62528, 74.7517, 7.92353, 0.55 ) }
    dend_12 { pt3dadd( -6.41846, 77.0423, 7.97304, 0.83 ) }
    dend_12 { pt3dadd( -6.83728, 78.7118, 8.06868, 0.55 ) }
    dend_12 { pt3dadd( -7.2345, 80.8969, 8.48074, 1.11 ) }
    dend_12 { pt3dadd( -7.57579, 84.0207, 9.40514, 0.55 ) }
    dend_12 { pt3dadd( -7.63455, 86.5653, 10.3456, 1.11 ) }
    dend_12 { pt3dadd( -7.56253, 89.4067, 11.5955, 0.55 ) }
    dend_12 { pt3dadd( -7.44368, 91.7281, 12.4046, 0.83 ) }
    dend_12 { pt3dadd( -7.15573, 96.1469, 13.1375, 0.28 ) }
    dend_12 { pt3dadd( -7.12495, 96.9344, 13.1307, 0.55 ) }
    dend_12 { pt3dadd( -7.14657, 98.3552, 12.9169, 0.28 ) }
    dend_12 { pt3dadd( -7.23179, 99.8812, 12.5101, 0.83 ) }
    dend_12 { pt3dadd( -8.16088, 109.11, 9.27878, 0.55 ) }
    dend_12 { pt3dadd( -8.53788, 111.742, 8.2903, 0.55 ) }
    dend_12 { pt3dadd( -9.01239, 114.569, 7.23123, 0.83 ) }
    dend_12 { pt3dadd( -9.49739, 116.82, 6.63099, 0.28 ) }
    dend_12 { pt3dadd( -10.0144, 118.858, 6.32152, 0.55 ) }
    dend_12 { pt3dadd( -10.6494, 121.037, 6.3104, 0.28 ) }
    dend_12 { pt3dadd( -11.2503, 122.676, 6.61939, 0.55 ) }
    dend_12 { pt3dadd( -11.8544, 124.228, 6.91239, 0.28 ) }
    dend_12 { pt3dadd( -12.7898, 126.61, 7.30934, 0.55 ) }
    dend_12 { pt3dadd( -13.3379, 127.954, 7.49251, 0.28 ) }
    dend_12 { pt3dadd( -14.598, 130.643, 7.81821, 0.55 ) }
    dend_12 { pt3dadd( -15.7393, 132.715, 7.99779, 0.28 ) }
    dend_12 { pt3dadd( -17.1306, 134.966, 8.11303, 0.28 ) }
    dend_12 { pt3dadd( -18.1449, 136.391, 8.16337, 0.55 ) }
    dend_12 { pt3dadd( -19.8101, 138.281, 8.19268, 0.55 ) }
    dend_12 { pt3dadd( -21.038, 139.371, 8.17452, 0.55 ) }
    dend_12 { pt3dadd( -22.5906, 140.562, 8.11246, 0.28 ) }
    dend_12 { pt3dadd( -23.2194, 140.994, 8.05687, 0.55 ) }
    dend_12 { pt3dadd( -24.5717, 141.687, 7.92704, 0.28 ) }
    dend_12 { pt3dadd( -26.8583, 142.564, 7.73356, 0.55 ) }
    dend_12 { pt3dadd( -29.7345, 143.336, 7.56773, 0.55 ) }
    dend_12 { pt3dadd( -34.2349, 152.254, 8.08197, 0.55 ) }
    dend_12 { pt3dadd( -39.2115, 160.849, 9.02209, 0.55 ) }
    dend_12 { pt3dadd( -43.6499, 169.672, 10.569, 0.55 ) }
    dend_12 { pt3dadd( -47.2601, 179.042, 10.4385, 0.55 ) }
    dend_12 { pt3dadd( -51.6963, 188.006, 10.7297, 0.55 ) }
    dend_12 { pt3dadd( -57.6274, 195.719, 8.89265, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 0.926605, 49.5764, 10.4309, 0.55 ) }
    dend_11 { pt3dadd( 2.79667, 51.174, 11.2772, 0.55 ) }
    dend_11 { pt3dadd( 4.63847, 52.7751, 12.1609, 0.83 ) }
    dend_11 { pt3dadd( 6.14267, 54.1572, 12.9939, 0.55 ) }
    dend_11 { pt3dadd( 7.47192, 55.4476, 13.786, 0.83 ) }
    dend_11 { pt3dadd( 9.42418, 57.33, 14.9677, 0.55 ) }
    dend_11 { pt3dadd( 10.9704, 58.8137, 15.9228, 0.28 ) }
    dend_11 { pt3dadd( 11.7129, 59.6097, 16.44, 0.28 ) }
    dend_11 { pt3dadd( 12.5928, 60.674, 17.084, 0.55 ) }
    dend_11 { pt3dadd( 13.1877, 61.4142, 17.5283, 0.28 ) }
    dend_11 { pt3dadd( 13.9756, 62.4301, 18.127, 0.55 ) }
    dend_11 { pt3dadd( 15.2849, 64.1888, 18.9909, 0.28 ) }
    dend_11 { pt3dadd( 15.8146, 64.9409, 19.3608, 0.55 ) }
    dend_11 { pt3dadd( 16.8393, 66.5485, 20.1041, 0.28 ) }
    dend_11 { pt3dadd( 17.6135, 67.8491, 20.7065, 0.55 ) }
    dend_11 { pt3dadd( 18.1584, 68.8925, 21.2153, 0.28 ) }
    dend_11 { pt3dadd( 18.7008, 70.0947, 21.8078, 0.55 ) }
    dend_11 { pt3dadd( 20.056, 73.1218, 23.3597, 0.28 ) }
    dend_11 { pt3dadd( 20.7213, 74.4186, 24.1482, 0.28 ) }
    dend_11 { pt3dadd( 21.3305, 75.4635, 24.8219, 0.55 ) }
    dend_11 { pt3dadd( 22.3027, 76.8899, 25.7488, 0.55 ) }
    dend_11 { pt3dadd( 23.5092, 78.5209, 26.8681, 0.28 ) }
    dend_11 { pt3dadd( 23.898, 79.0306, 27.2287, 0.55 ) }
    dend_11 { pt3dadd( 25.6186, 81.1495, 28.5552, 0.55 ) }
    dend_11 { pt3dadd( 26.4481, 82.0117, 29.1795, 0.28 ) }
    dend_11 { pt3dadd( 27.3907, 82.862, 29.7821, 0.55 ) }
    dend_11 { pt3dadd( 30.9525, 89.3301, 34.0951, 0.55 ) }
    dend_11 { pt3dadd( 35.4626, 95.5526, 37.8047, 0.55 ) }
    dend_11 { pt3dadd( 40.3992, 101.931, 40.6199, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 44.6835, 108.319, 44.3424, 0.55 ) }
    dend_11 { pt3dadd( 49.004, 115.178, 47.1467, 0.55 ) }
    dend_11 { pt3dadd( 54.2742, 121.637, 49.0305, 0.55 ) }
    dend_11 { pt3dadd( 60.1948, 127.719, 49.7565, 0.55 ) }
    dend_11 { pt3dadd( 66.4481, 133.407, 50.5784, 0.55 ) }
    dend_11 { pt3dadd( 72.7335, 138.762, 52.4869, 0.55 ) }
    dend_11 { pt3dadd( 78.7101, 144.105, 55.2377, 0.55 ) }
    dend_11 { pt3dadd( 85.0946, 148.078, 58.991, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -10.5516, 22.9457, 4.50384, 0.55 ) }
    dend_3 { pt3dadd( -11.2721, 25.9655, 3.58038, 0.55 ) }
    dend_3 { pt3dadd( -11.9556, 28.8306, 2.70427, 0.55 ) }
    dend_3 { pt3dadd( -12.6645, 31.802, 1.79564, 0.83 ) }
    dend_3 { pt3dadd( -13.1288, 33.7478, 1.20062, 0.55 ) }
    dend_3 { pt3dadd( -14.4984, 39.4884, -0.554798, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 14/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -10.5516, 22.9457, 4.50384, 0.55 ) }
    dend_2 { pt3dadd( -12.4962, 20.9634, 2.44897, 0.55 ) }
    dend_2 { pt3dadd( -13.936, 19.4812, 0.988082, 0.83 ) }
    dend_2 { pt3dadd( -14.6262, 18.7754, 0.332214, 0.55 ) }
    dend_2 { pt3dadd( -16.1503, 17.2037, -1.08269, 0.83 ) }
    dend_2 { pt3dadd( -17.4338, 15.9165, -2.16512, 0.55 ) }
    dend_2 { pt3dadd( -18.223, 15.1624, -2.79162, 0.83 ) }
    dend_2 { pt3dadd( -19.5378, 13.8854, -3.67655, 0.55 ) }
    dend_2 { pt3dadd( -20.2478, 13.2676, -4.04194, 0.83 ) }
    dend_2 { pt3dadd( -21.0867, 12.6028, -4.36648, 0.55 ) }
    dend_2 { pt3dadd( -22.4653, 11.6506, -4.74145, 0.83 ) }
    dend_2 { pt3dadd( -24.1083, 10.7115, -4.86644, 0.55 ) }
    dend_2 { pt3dadd( -25.9413, 9.79613, -4.73875, 0.28 ) }
    dend_2 { pt3dadd( -27.1982, 9.1891, -4.40592, 0.55 ) }
    dend_2 { pt3dadd( -28.6838, 8.46449, -3.84114, 0.28 ) }
    dend_2 { pt3dadd( -29.8374, 7.86544, -3.16794, 0.83 ) }
    dend_2 { pt3dadd( -32.7218, 6.26323, -1.14856, 0.55 ) }
    dend_2 { pt3dadd( -33.2928, 5.91681, -0.70642, 0.55 ) }
    dend_2 { pt3dadd( -35.066, 4.69013, 0.803447, 0.55 ) }
    dend_2 { pt3dadd( -35.7992, 4.12766, 1.42404, 0.55 ) }
    dend_2 { pt3dadd( -38.4342, 1.85798, 3.62578, 0.28 ) }
    dend_2 { pt3dadd( -39.2513, 1.12418, 4.32498, 0.28 ) }
    dend_2 { pt3dadd( -40.125, 0.270678, 5.00635, 0.55 ) }
    dend_2 { pt3dadd( -42.2215, -1.73332, 6.49154, 0.55 ) }
    dend_2 { pt3dadd( -42.7522, -2.22335, 6.84374, 0.55 ) }
    dend_2 { pt3dadd( -43.6922, -3.09312, 7.45923, 0.55 ) }
    dend_2 { pt3dadd( -45.9613, -5.22097, 8.76599, 0.55 ) }
    dend_2 { pt3dadd( -46.7801, -5.97535, 9.28375, 0.28 ) }
    dend_2 { pt3dadd( -48.6353, -7.51548, 10.4388, 0.28 ) }
    dend_2 { pt3dadd( -54.7997, -10.4081, 11.9637, 0.28 ) }
    dend_2 { pt3dadd( -60.633, -13.313, 14.4479, 0.28 ) }
    dend_2 { pt3dadd( -66.3005, -16.9468, 16.3904, 0.28 ) }
    dend_2 { pt3dadd( -71.6708, -20.4845, 19.1501, 0.28 ) }
    dend_2 { pt3dadd( -76.6236, -24.1183, 22.5038, 0.28 ) }
    dend_2 { pt3dadd( -81.9568, -28.5837, 23.6817, 0.28 ) }
    dend_2 { pt3dadd( -87.6393, -32.2304, 25.5587, 0.28 ) }
    dend_2 { pt3dadd( -92.9865, -36.7803, 26.3245, 0.28 ) }
    dend_2 { pt3dadd( -97.1068, -42.626, 26.0579, 0.28 ) }
    dend_2 { pt3dadd( -100.781, -48.6687, 24.8176, 0.28 ) }
    dend_2 { pt3dadd( -103.346, -55.3283, 23.6736, 0.28 ) }
    dend_2 { pt3dadd( -105.001, -62.3477, 22.897, 0.28 ) }
    dend_2 { pt3dadd( -106.331, -69.4553, 23.3888, 0.28 ) }
    dend_2 { pt3dadd( -106.736, -76.7075, 23.2848, 0.28 ) }
    dend_2 { pt3dadd( -107.733, -83.788, 22.0154, 0.28 ) }
    dend_2 { pt3dadd( -107.866, -90.7742, 20.0517, 0.28 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -13.5081, -56.4625, 17.6235, 0.28 ) }
    dend_49 { pt3dadd( -17.1777, -56.9418, 22.8051, 0.28 ) }
    dend_49 { pt3dadd( -18.4194, -57.0841, 24.5737, 0.55 ) }
    dend_49 { pt3dadd( -20.0511, -57.2831, 26.904, 0.28 ) }
    dend_49 { pt3dadd( -20.5453, -57.3238, 27.5222, 0.55 ) }
    dend_49 { pt3dadd( -22.6769, -57.3735, 29.9546, 0.28 ) }
    dend_49 { pt3dadd( -24.1797, -57.3517, 31.3501, 0.55 ) }
    dend_49 { pt3dadd( -26.5596, -57.1369, 32.8045, 0.28 ) }
    dend_49 { pt3dadd( -27.8355, -56.9497, 33.2594, 0.55 ) }
    dend_49 { pt3dadd( -31.0867, -56.4601, 34.0295, 0.28 ) }
    dend_49 { pt3dadd( -33.4158, -56.1653, 34.2748, 0.55 ) }
    dend_49 { pt3dadd( -37.6565, -55.6808, 34.294, 0.55 ) }
    dend_49 { pt3dadd( -40.898, -55.3047, 34.0721, 0.28 ) }
    dend_49 { pt3dadd( -45.931, -54.6718, 33.3929, 0.55 ) }
    dend_49 { pt3dadd( -49.5397, -54.253, 32.8025, 0.28 ) }
    dend_49 { pt3dadd( -52.5575, -54.0736, 32.3352, 0.55 ) }
    dend_49 { pt3dadd( -64.511, -52.2931, 36.6671, 0.55 ) }
    dend_49 { pt3dadd( -76.2654, -50.3704, 41.4628, 0.55 ) }
    dend_49 { pt3dadd( -87.6237, -46.5301, 46.1408, 0.55 ) }
    dend_49 { pt3dadd( -98.8869, -42.5035, 50.9039, 0.55 ) }
    dend_49 { pt3dadd( -109.789, -39.9146, 57.1931, 0.55 ) }
    dend_49 { pt3dadd( -120.965, -35.253, 61.6159, 0.55 ) }
    dend_49 { pt3dadd( -131.98, -29.3693, 64.9614, 0.55 ) }
    dend_49 { pt3dadd( -142.505, -23.4955, 69.6504, 0.55 ) }
    dend_49 { pt3dadd( -154.17, -19.4381, 73.2823, 0.55 ) }
    dend_49 { pt3dadd( -165.402, -13.6081, 75.9051, 0.55 ) }
    dend_49 { pt3dadd( -176.885, -7.75792, 76.8149, 0.55 ) }
    dend_49 { pt3dadd( -187.668, -0.607632, 75.9414, 0.55 ) }
    dend_49 { pt3dadd( -198.786, 5.75622, 74.1652, 0.55 ) }
    dend_49 { pt3dadd( -209.796, 11.8285, 71.1969, 0.55 ) }
    dend_49 { pt3dadd( -221.511, 16.5923, 68.7605, 0.55 ) }
    dend_49 { pt3dadd( -233.474, 20.5285, 66.156, 0.55 ) }
    dend_49 { pt3dadd( -244.898, 26.0383, 63.7975, 0.55 ) }
    dend_49 { pt3dadd( -256.533, 31.0369, 61.4106, 0.55 ) }
    dend_49 { pt3dadd( -267.499, 37.7017, 59.711, 0.55 ) }
    dend_49 { pt3dadd( -278.597, 43.8698, 57.3023, 0.55 ) }
    dend_49 { pt3dadd( -288.575, 50.8784, 52.9262, 0.55 ) }
    dend_49 { pt3dadd( -298.728, 57.6826, 48.6584, 0.55 ) }
    dend_49 { pt3dadd( -307.831, 64.3768, 42.3532, 0.55 ) }
    dend_49 { pt3dadd( -318.17, 69.3697, 36.5119, 0.55 ) }
    dend_49 { pt3dadd( -327.772, 72.9865, 28.7725, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_49 { pt3dadd( -335.729, 77.3144, 19.6359, 0.55 ) }
    dend_49 { pt3dadd( -342.132, 79.9239, 8.81613, 0.55 ) }
    dend_49 { pt3dadd( -347.0, 83.8011, -2.43718, 0.55 ) }
    dend_49 { pt3dadd( -353.518, 87.3445, -12.9319, 0.55 ) }
    dend_49 { pt3dadd( -359.904, 92.7304, -22.7549, 0.55 ) }
    dend_49 { pt3dadd( -366.75, 99.9722, -31.0474, 0.55 ) }
    dend_49 { pt3dadd( -373.772, 108.378, -38.0908, 0.55 ) }
    dend_49 { pt3dadd( -379.34, 117.709, -45.3706, 0.55 ) }
    dend_49 { pt3dadd( -382.953, 127.605, -53.1945, 0.55 ) }
    dend_49 { pt3dadd( -385.729, 138.507, -60.0971, 0.55 ) }
    dend_49 { pt3dadd( -387.172, 149.033, -67.8903, 0.55 ) }
    dend_49 { pt3dadd( -388.735, 159.427, -75.8192, 0.55 ) }
    dend_49 { pt3dadd( -388.585, 169.718, -84.0322, 0.55 ) }
    dend_49 { pt3dadd( -387.593, 180.438, -91.6805, 0.55 ) }
    dend_49 { pt3dadd( -386.315, 190.389, -100.184, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 15/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -13.5081, -56.4625, 17.6235, 0.28 ) }
    dend_48 { pt3dadd( -13.303, -58.8203, 19.7536, 0.28 ) }
    dend_48 { pt3dadd( -13.2895, -60.0215, 20.8844, 0.55 ) }
    dend_48 { pt3dadd( -13.4411, -64.502, 25.0184, 0.28 ) }
    dend_48 { pt3dadd( -13.4698, -65.3512, 25.802, 0.55 ) }
    dend_48 { pt3dadd( -13.555, -67.8691, 28.1253, 0.55 ) }
    dend_48 { pt3dadd( -13.7248, -72.8882, 32.7562, 0.28 ) }
    dend_48 { pt3dadd( -13.8848, -74.5285, 34.454, 0.28 ) }
    dend_48 { pt3dadd( -14.0007, -75.4422, 35.4476, 0.55 ) }
    dend_48 { pt3dadd( -12.8632, -83.6141, 43.9198, 0.55 ) }
    dend_48 { pt3dadd( -12.531, -92.7292, 51.5518, 0.55 ) }
    dend_48 { pt3dadd( -12.7019, -101.466, 59.5859, 0.55 ) }
    dend_48 { pt3dadd( -13.5243, -110.865, 66.8748, 0.55 ) }
    dend_48 { pt3dadd( -12.8685, -119.761, 74.7147, 0.55 ) }
    dend_48 { pt3dadd( -11.935, -128.902, 82.2618, 0.55 ) }
    dend_48 { pt3dadd( -12.6781, -138.229, 89.6416, 0.55 ) }
    dend_48 { pt3dadd( -14.2596, -147.532, 96.9276, 0.55 ) }
    dend_48 { pt3dadd( -14.9813, -157.351, 103.706, 0.55 ) }
    dend_48 { pt3dadd( -12.8133, -165.84, 111.669, 0.55 ) }
    dend_48 { pt3dadd( -11.741, -174.73, 119.465, 0.55 ) }
    dend_48 { pt3dadd( -8.47641, -183.135, 127.121, 0.55 ) }
    dend_48 { pt3dadd( -6.2942, -190.982, 135.662, 0.55 ) }
    dend_48 { pt3dadd( -2.57555, -199.1, 143.391, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 38/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -8.63237, -28.0028, -3.59525, 0.83 ) }
    dend_44 { pt3dadd( -8.82397, -29.6523, -6.90128, 0.83 ) }
    dend_44 { pt3dadd( -9.00027, -30.6344, -8.91307, 0.83 ) }
    dend_44 { pt3dadd( -9.23903, -31.5903, -11.0104, 0.83 ) }
    dend_44 { pt3dadd( -9.46006, -32.4661, -13.4819, 0.83 ) }
    dend_44 { pt3dadd( -9.6644, -33.007, -16.0913, 0.83 ) }
    dend_44 { pt3dadd( -9.69615, -33.0235, -16.3434, 0.55 ) }
    dend_44 { pt3dadd( -9.84272, -32.9662, -17.2113, 0.55 ) }
    dend_44 { pt3dadd( -10.1107, -32.7916, -18.3046, 0.55 ) }
    dend_44 { pt3dadd( -10.8047, -31.67, -21.0524, 0.55 ) }
    dend_44 { pt3dadd( -11.2682, -30.1842, -23.3047, 0.55 ) }
    dend_44 { pt3dadd( -11.5765, -28.4225, -25.4722, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 50/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -8.63237, -28.0028, -3.59525, 1.38 ) }
    dend_41 { pt3dadd( -10.0425, -30.0513, -3.25276, 1.38 ) }
    dend_41 { pt3dadd( -13.1191, -33.2291, -3.1541, 1.66 ) }
    dend_41 { pt3dadd( -15.5919, -35.7833, -3.07481, 0.83 ) }
    dend_41 { pt3dadd( -17.2537, -37.4996, -3.02153, 0.83 ) }
    dend_41 { pt3dadd( -19.2394, -39.5507, -2.95785, 0.83 ) }
    dend_41 { pt3dadd( -22.6358, -43.0589, -2.84895, 0.83 ) }
    dend_41 { pt3dadd( -28.5076, -48.0406, -2.84111, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 0.971905, -33.1707, 0.767677, 0.55 ) }
    dend_36 { pt3dadd( 0.477445, -34.7013, 0.084819, 0.55 ) }
    dend_36 { pt3dadd( 0.15554, -35.6977, -0.359738, 0.28 ) }
    dend_36 { pt3dadd( -0.336284, -37.2201, -1.03896, 0.83 ) }
    dend_36 { pt3dadd( -0.823956, -38.7297, -1.71245, 0.55 ) }
    dend_36 { pt3dadd( -1.81823, -41.8074, -3.08556, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.971905, -33.1707, 0.767677, 0.55 ) }
    dend_33 { pt3dadd( 2.40731, -34.6565, 0.00948264, 0.55 ) }
    dend_33 { pt3dadd( 3.79626, -36.1037, -0.708217, 0.55 ) }
    dend_33 { pt3dadd( 6.02232, -38.4547, -1.82812, 0.28 ) }
    dend_33 { pt3dadd( 7.88326, -40.5144, -2.73428, 0.55 ) }
    dend_33 { pt3dadd( 10.5934, -43.628, -4.03165, 0.55 ) }
    dend_33 { pt3dadd( 12.3663, -45.7892, -4.91847, 0.55 ) }
    dend_33 { pt3dadd( 13.6504, -47.4379, -5.50678, 0.55 ) }
    dend_33 { pt3dadd( 14.4947, -48.6042, -5.87201, 0.55 ) }
    dend_33 { pt3dadd( 15.6119, -50.3298, -6.29558, 0.28 ) }
    dend_33 { pt3dadd( 16.3132, -51.5575, -6.46781, 0.55 ) }
    dend_33 { pt3dadd( 17.2202, -53.3722, -6.62376, 0.28 ) }
    dend_33 { pt3dadd( 18.0354, -55.2249, -6.85326, 0.55 ) }
    dend_33 { pt3dadd( 19.2106, -57.638, -7.14641, 0.28 ) }
    dend_33 { pt3dadd( 20.5129, -60.204, -7.575, 0.55 ) }
    dend_33 { pt3dadd( 21.573, -62.236, -8.00756, 0.55 ) }
    dend_33 { pt3dadd( 22.9649, -64.5854, -8.56532, 0.55 ) }
    dend_33 { pt3dadd( 24.5952, -67.0057, -9.19012, 0.55 ) }
    dend_33 { pt3dadd( 26.3764, -69.4648, -9.97409, 0.28 ) }
    dend_33 { pt3dadd( 27.5191, -70.9154, -10.51, 0.55 ) }
    dend_33 { pt3dadd( 28.5949, -72.163, -11.0883, 0.55 ) }
    dend_33 { pt3dadd( 30.6579, -74.2588, -12.0693, 0.55 ) }
    dend_33 { pt3dadd( 31.5785, -75.1259, -12.4505, 0.28 ) }
    dend_33 { pt3dadd( 32.1379, -75.6209, -12.6748, 0.55 ) }
    dend_33 { pt3dadd( 33.3782, -76.7415, -13.2299, 0.28 ) }
    dend_33 { pt3dadd( 35.355, -78.4186, -14.0047, 0.28 ) }
    dend_33 { pt3dadd( 35.5502, -78.5798, -14.0918, 0.55 ) }
    dend_33 { pt3dadd( 37.1746, -80.1445, -15.0855, 0.28 ) }
    dend_33 { pt3dadd( 37.8364, -80.7496, -15.5098, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 93/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -14.4984, 39.4884, -0.554798, 0.55 ) }
    dend_5 { pt3dadd( -14.9235, 42.5123, -0.404848, 0.55 ) }
    dend_5 { pt3dadd( -15.3206, 45.9841, -0.600635, 0.83 ) }
    dend_5 { pt3dadd( -15.5778, 49.6491, -1.1439, 0.55 ) }
    dend_5 { pt3dadd( -15.7421, 53.1937, -1.97924, 0.83 ) }
    dend_5 { pt3dadd( -15.8424, 56.5894, -2.89462, 0.83 ) }
    dend_5 { pt3dadd( -15.9434, 60.0336, -3.76866, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( -16.0193, 64.8552, -5.2129, 0.83 ) }
    dend_5 { pt3dadd( -15.9747, 69.956, -6.96936, 0.83 ) }
    dend_5 { pt3dadd( -15.8525, 73.8342, -8.44971, 0.83 ) }
    dend_5 { pt3dadd( -15.7602, 78.335, -10.2507, 0.55 ) }
    dend_5 { pt3dadd( -15.6166, 82.3602, -11.8764, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.4984, 39.4884, -0.554798, 0.28 ) }
    dend_4 { pt3dadd( -16.1245, 39.2927, 0.701494, 0.28 ) }
    dend_4 { pt3dadd( -18.2772, 38.8515, 2.59099, 0.55 ) }
    dend_4 { pt3dadd( -18.9978, 38.7048, 3.26919, 0.55 ) }
    dend_4 { pt3dadd( -22.317, 38.0645, 6.3816, 0.28 ) }
    dend_4 { pt3dadd( -22.6707, 38.0078, 6.73638, 0.55 ) }
    dend_4 { pt3dadd( -25.1673, 37.5657, 9.49418, 0.55 ) }
    dend_4 { pt3dadd( -26.5437, 37.2578, 11.2487, 0.55 ) }
    dend_4 { pt3dadd( -28.577, 36.7277, 14.1816, 0.55 ) }
    dend_4 { pt3dadd( -29.3562, 36.5094, 15.3421, 0.55 ) }
    dend_4 { pt3dadd( -32.0016, 35.9254, 19.5299, 0.55 ) }
    dend_4 { pt3dadd( -33.5201, 35.7522, 21.8763, 0.28 ) }
    dend_4 { pt3dadd( -34.3727, 35.7361, 23.1483, 0.55 ) }
    dend_4 { pt3dadd( -35.6325, 35.9222, 25.1553, 0.28 ) }
    dend_4 { pt3dadd( -36.3998, 36.1676, 26.3887, 0.55 ) }
    dend_4 { pt3dadd( -38.0637, 36.9414, 29.0443, 0.28 ) }
    dend_4 { pt3dadd( -38.9897, 37.476, 30.4366, 0.55 ) }
    dend_4 { pt3dadd( -40.6006, 38.5839, 32.6975, 0.55 ) }
    dend_4 { pt3dadd( -42.0382, 39.708, 34.711, 0.28 ) }
    dend_4 { pt3dadd( -42.9445, 40.4848, 36.0206, 0.55 ) }
    dend_4 { pt3dadd( -44.0784, 41.4552, 37.7888, 0.28 ) }
    dend_4 { pt3dadd( -45.1212, 42.1716, 39.3283, 0.55 ) }
    dend_4 { pt3dadd( -54.2074, 40.8774, 48.1378, 0.55 ) }
    dend_4 { pt3dadd( -62.3516, 38.796, 57.7091, 0.55 ) }
    dend_4 { pt3dadd( -70.9354, 35.0878, 66.4245, 0.55 ) }
    dend_4 { pt3dadd( -80.808, 32.9406, 74.1793, 0.55 ) }
    dend_4 { pt3dadd( -91.0693, 30.6197, 81.3631, 0.55 ) }
    dend_4 { pt3dadd( -100.182, 27.6052, 89.771, 0.55 ) }
    dend_4 { pt3dadd( -109.397, 22.7115, 97.225, 0.55 ) }
    dend_4 { pt3dadd( -116.567, 17.4066, 106.471, 0.55 ) }
    dend_4 { pt3dadd( -122.848, 11.1579, 115.837, 0.55 ) }
    dend_4 { pt3dadd( -127.283, 4.68445, 126.086, 0.55 ) }
    dend_4 { pt3dadd( -131.239, -2.50861, 136.098, 0.55 ) }
    dend_4 { pt3dadd( -133.629, -8.48352, 147.261, 0.55 ) }
    dend_4 { pt3dadd( -137.484, -13.5126, 158.43, 0.55 ) }
    dend_4 { pt3dadd( -143.929, -18.5085, 168.343, 0.55 ) }
    dend_4 { pt3dadd( -152.038, -24.6526, 176.244, 0.55 ) }
    dend_4 { pt3dadd( -160.351, -27.6665, 185.446, 0.55 ) }
    dend_4 { pt3dadd( -168.263, -31.718, 194.651, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 44/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -11.5765, -28.4225, -25.4722, 0.55 ) }
    dend_46 { pt3dadd( -11.016, -27.1073, -25.7874, 0.55 ) }
    dend_46 { pt3dadd( -10.8434, -26.6999, -25.943, 0.28 ) }
    dend_46 { pt3dadd( -10.323, -25.5, -26.4634, 0.55 ) }
    dend_46 { pt3dadd( -9.60721, -23.8014, -27.4826, 0.55 ) }
    dend_46 { pt3dadd( -9.07446, -22.5196, -28.3327, 0.28 ) }
    dend_46 { pt3dadd( -8.6523, -21.2273, -29.5641, 0.83 ) }
    dend_46 { pt3dadd( -8.17455, -19.5301, -31.5456, 0.28 ) }
    dend_46 { pt3dadd( -8.07511, -19.1472, -32.0604, 0.55 ) }
    dend_46 { pt3dadd( -7.61957, -17.2627, -34.9114, 0.28 ) }
    dend_46 { pt3dadd( -7.51911, -16.7677, -35.791, 0.83 ) }
    dend_46 { pt3dadd( -6.76542, -13.3985, -42.3007, 0.28 ) }
    dend_46 { pt3dadd( -6.6675, -13.0371, -43.0219, 0.55 ) }
    dend_46 { pt3dadd( -6.3078, -11.901, -45.2308, 0.28 ) }
    dend_46 { pt3dadd( -6.12014, -11.387, -46.2093, 0.83 ) }
    dend_46 { pt3dadd( -5.06646, -8.90995, -50.8601, 0.28 ) }
    dend_46 { pt3dadd( -4.61027, -7.97021, -52.5803, 0.28 ) }
    dend_46 { pt3dadd( -4.25472, -7.3468, -53.6414, 0.55 ) }
    dend_46 { pt3dadd( -3.2442, -5.56497, -56.601, 0.28 ) }
    dend_46 { pt3dadd( -2.70996, -4.63427, -58.03, 0.83 ) }
    dend_46 { pt3dadd( -1.90725, -3.14149, -60.1021, 0.55 ) }
    dend_46 { pt3dadd( -1.58514, -2.45193, -60.9479, 0.83 ) }
    dend_46 { pt3dadd( -1.15717, -1.38425, -62.2078, 0.28 ) }
    dend_46 { pt3dadd( -0.840098, -0.544269, -63.1319, 0.83 ) }
    dend_46 { pt3dadd( 0.399591, 2.78327, -66.5129, 0.28 ) }
    dend_46 { pt3dadd( 0.907635, 4.29321, -67.9445, 0.83 ) }
    dend_46 { pt3dadd( 1.90788, 7.47836, -70.7545, 0.28 ) }
    dend_46 { pt3dadd( 2.09664, 8.10528, -71.3218, 0.55 ) }
    dend_46 { pt3dadd( 2.32276, 8.86317, -71.9872, 0.28 ) }
    dend_46 { pt3dadd( 2.63106, 9.89993, -72.9389, 0.55 ) }
    dend_46 { pt3dadd( 3.06536, 11.1492, -74.1095, 0.28 ) }
    dend_46 { pt3dadd( 3.24177, 11.463, -74.4665, 0.55 ) }
    dend_46 { pt3dadd( 4.24935, 12.6409, -76.0382, 0.28 ) }
    dend_46 { pt3dadd( 4.84061, 13.1742, -76.8415, 0.55 ) }
    dend_46 { pt3dadd( 5.8442, 13.8501, -77.9875, 0.28 ) }
    dend_46 { pt3dadd( 6.70347, 14.3279, -78.7922, 0.55 ) }
    dend_46 { pt3dadd( 8.3827, 15.1095, -80.1584, 0.28 ) }
    dend_46 { pt3dadd( 9.28961, 15.5554, -80.8237, 0.55 ) }
    dend_46 { pt3dadd( 10.3126, 16.112, -81.5492, 0.28 ) }
    dend_46 { pt3dadd( 11.1467, 16.5973, -82.1678, 0.55 ) }
    dend_46 { pt3dadd( 11.7836, 17.0433, -82.6727, 0.55 ) }
    dend_46 { pt3dadd( 13.0911, 18.0457, -83.7949, 0.28 ) }
    dend_46 { pt3dadd( 13.9788, 18.7656, -84.6663, 0.55 ) }
    dend_46 { pt3dadd( 15.7715, 20.1928, -86.6506, 0.28 ) }
    dend_46 { pt3dadd( 16.227, 20.5258, -87.2017, 0.83 ) }
    dend_46 { pt3dadd( 17.8611, 21.5796, -89.2149, 0.28 ) }
    dend_46 { pt3dadd( 18.8275, 22.0471, -90.3885, 0.83 ) }
    dend_46 { pt3dadd( 20.1834, 22.4616, -91.8147, 0.28 ) }
    dend_46 { pt3dadd( 20.9327, 22.4685, -92.4401, 0.83 ) }
    dend_46 { pt3dadd( 22.5003, 22.2125, -93.4886, 0.28 ) }
    dend_46 { pt3dadd( 23.3003, 21.9903, -93.9592, 0.83 ) }
    dend_46 { pt3dadd( 25.3096, 21.2585, -94.9721, 0.28 ) }
    dend_46 { pt3dadd( 27.7644, 20.272, -96.0642, 0.55 ) }
    dend_46 { pt3dadd( 32.4941, 17.6165, -97.8659, 0.28 ) }
    dend_46 { pt3dadd( 33.4575, 16.9477, -98.2073, 0.55 ) }
    dend_46 { pt3dadd( 34.2772, 16.192, -98.4899, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_46 { pt3dadd( 35.3128, 14.9851, -98.867, 0.28 ) }
    dend_46 { pt3dadd( 35.6826, 14.4151, -99.0084, 0.55 ) }
    dend_46 { pt3dadd( 38.6082, 8.43687, -100.36, 0.28 ) }
    dend_46 { pt3dadd( 38.8716, 7.75962, -100.476, 0.55 ) }
    dend_46 { pt3dadd( 40.2758, 3.72119, -101.127, 0.28 ) }
    dend_46 { pt3dadd( 40.5492, 2.83446, -101.264, 0.55 ) }
    dend_46 { pt3dadd( 41.1797, 0.352279, -101.635, 0.28 ) }
    dend_46 { pt3dadd( 41.3766, -0.557046, -101.772, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 8/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -11.5765, -28.4225, -25.4722, 0.55 ) }
    dend_45 { pt3dadd( -12.1669, -28.693, -26.393, 0.55 ) }
    dend_45 { pt3dadd( -15.0085, -29.8679, -30.4852, 0.28 ) }
    dend_45 { pt3dadd( -15.8249, -30.243, -31.605, 0.28 ) }
    dend_45 { pt3dadd( -16.5785, -30.6609, -32.6566, 0.55 ) }
    dend_45 { pt3dadd( -20.2091, -32.9523, -37.7752, 0.28 ) }
    dend_45 { pt3dadd( -20.9764, -33.476, -38.7859, 0.55 ) }
    dend_45 { pt3dadd( -21.5571, -33.8866, -39.3973, 0.28 ) }
    dend_45 { pt3dadd( -22.6827, -34.5381, -40.2321, 0.55 ) }
    dend_45 { pt3dadd( -24.8103, -35.6352, -41.5904, 0.28 ) }
    dend_45 { pt3dadd( -27.8539, -37.2118, -43.4612, 0.55 ) }
    dend_45 { pt3dadd( -29.615, -38.1085, -44.5469, 0.55 ) }
    dend_45 { pt3dadd( -32.5734, -39.5787, -46.6845, 0.55 ) }
    dend_45 { pt3dadd( -36.2003, -41.2842, -49.6839, 0.55 ) }
    dend_45 { pt3dadd( -37.7509, -41.9729, -51.0603, 0.28 ) }
    dend_45 { pt3dadd( -39.3911, -42.7125, -52.6625, 0.55 ) }
    dend_45 { pt3dadd( -42.5872, -44.296, -56.8176, 0.28 ) }
    dend_45 { pt3dadd( -43.4411, -44.8338, -58.2903, 0.55 ) }
    dend_45 { pt3dadd( -44.5532, -45.707, -60.6125, 0.28 ) }
    dend_45 { pt3dadd( -45.1462, -46.3096, -61.9893, 0.55 ) }
    dend_45 { pt3dadd( -45.8125, -47.0345, -63.5002, 0.55 ) }
    dend_45 { pt3dadd( -48.8895, -50.1724, -69.6443, 0.28 ) }
    dend_45 { pt3dadd( -50.2235, -51.4947, -72.0388, 0.28 ) }
    dend_45 { pt3dadd( -51.8978, -52.9089, -74.6295, 0.83 ) }
    dend_45 { pt3dadd( -52.714, -53.543, -75.7587, 0.28 ) }
    dend_45 { pt3dadd( -53.5581, -54.0631, -76.7968, 0.83 ) }
    dend_45 { pt3dadd( -57.6372, -55.6978, -80.9807, 0.28 ) }
    dend_45 { pt3dadd( -58.1447, -55.8264, -81.463, 0.55 ) }
    dend_45 { pt3dadd( -60.3151, -56.2305, -83.6003, 0.28 ) }
    dend_45 { pt3dadd( -62.1686, -56.5388, -85.5721, 0.83 ) }
    dend_45 { pt3dadd( -65.2053, -56.8517, -88.863, 0.83 ) }
    dend_45 { pt3dadd( -67.9492, -56.9948, -91.7642, 0.28 ) }
    dend_45 { pt3dadd( -70.405, -57.03, -94.3138, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 41/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -28.5076, -48.0406, -2.84111, 0.83 ) }
    dend_43 { pt3dadd( -30.3937, -47.4389, -0.181338, 0.83 ) }
    dend_43 { pt3dadd( -32.6254, -46.6688, 2.63397, 0.83 ) }
    dend_43 { pt3dadd( -34.4922, -45.9089, 4.7569, 0.83 ) }
    dend_43 { pt3dadd( -36.5942, -44.9149, 6.91098, 0.83 ) }
    dend_43 { pt3dadd( -39.6545, -43.3212, 9.61812, 0.83 ) }
    dend_43 { pt3dadd( -42.2679, -41.8606, 11.462, 0.28 ) }
    dend_43 { pt3dadd( -44.0773, -40.6192, 12.2448, 0.55 ) }
    dend_43 { pt3dadd( -45.8716, -39.266, 12.6374, 0.55 ) }
    dend_43 { pt3dadd( -47.4541, -37.9959, 12.7047, 0.55 ) }
    dend_43 { pt3dadd( -50.1672, -35.6021, 12.5032, 0.55 ) }
    dend_43 { pt3dadd( -53.2563, -32.7505, 11.811, 0.55 ) }
    dend_43 { pt3dadd( -55.6533, -30.4071, 11.1104, 0.55 ) }
    dend_43 { pt3dadd( -56.3711, -29.6687, 10.9232, 0.83 ) }
    dend_43 { pt3dadd( -57.9608, -27.9618, 10.5722, 0.55 ) }
    dend_43 { pt3dadd( -58.7693, -27.0043, 10.4597, 0.83 ) }
    dend_43 { pt3dadd( -61.167, -23.7505, 10.3776, 0.55 ) }
    dend_43 { pt3dadd( -61.4214, -23.3638, 10.419, 0.83 ) }
    dend_43 { pt3dadd( -62.8783, -21.0092, 10.8345, 0.55 ) }
    dend_43 { pt3dadd( -64.2574, -18.6587, 11.4543, 0.83 ) }
    dend_43 { pt3dadd( -65.5726, -16.3803, 12.032, 0.28 ) }
    dend_43 { pt3dadd( -66.1314, -15.3845, 12.2945, 0.55 ) }
    dend_43 { pt3dadd( -67.4022, -12.9889, 12.9113, 0.28 ) }
    dend_43 { pt3dadd( -68.1986, -11.4604, 13.2244, 0.55 ) }
    dend_43 { pt3dadd( -69.8365, -8.01491, 13.7136, 0.28 ) }
    dend_43 { pt3dadd( -71.6373, -3.88875, 14.0729, 0.83 ) }
    dend_43 { pt3dadd( -72.8176, -0.908419, 14.2556, 0.28 ) }
    dend_43 { pt3dadd( -73.8363, 1.95907, 14.4219, 0.28 ) }
    dend_43 { pt3dadd( -74.0875, 2.71103, 14.4731, 0.83 ) }
    dend_43 { pt3dadd( -74.7657, 4.80594, 14.6219, 0.55 ) }
    dend_43 { pt3dadd( -75.5795, 7.30343, 14.8154, 0.83 ) }
    dend_43 { pt3dadd( -76.4664, 9.87383, 15.2045, 0.55 ) }
    dend_43 { pt3dadd( -77.0378, 11.4334, 15.4423, 0.83 ) }
    dend_43 { pt3dadd( -78.3144, 14.7074, 15.9653, 0.83 ) }
    dend_43 { pt3dadd( -79.609, 17.7953, 16.4287, 0.55 ) }
    dend_43 { pt3dadd( -80.6364, 19.9746, 16.6648, 0.83 ) }
    dend_43 { pt3dadd( -81.7565, 22.1828, 16.7715, 0.28 ) }
    dend_43 { pt3dadd( -82.3936, 23.357, 16.7203, 0.55 ) }
    dend_43 { pt3dadd( -84.5178, 27.0855, 16.2786, 0.28 ) }
    dend_43 { pt3dadd( -85.6801, 29.0246, 15.9519, 0.83 ) }
    dend_43 { pt3dadd( -87.9072, 32.3084, 15.2768, 0.28 ) }
    dend_43 { pt3dadd( -88.9033, 33.6246, 14.9722, 0.83 ) }
    dend_43 { pt3dadd( -91.2323, 36.2418, 14.044, 0.55 ) }
    dend_43 { pt3dadd( -92.7615, 37.8112, 13.4787, 0.55 ) }
    dend_43 { pt3dadd( -94.5273, 39.5144, 12.8915, 0.83 ) }
    dend_43 { pt3dadd( -97.4959, 42.424, 12.0662, 0.55 ) }
    dend_43 { pt3dadd( -98.9796, 43.9183, 11.7831, 0.83 ) }
    dend_43 { pt3dadd( -103.433, 48.5921, 11.1414, 0.28 ) }
    dend_43 { pt3dadd( -105.949, 51.3795, 10.9679, 0.55 ) }
    dend_43 { pt3dadd( -107.221, 52.8721, 10.8754, 0.28 ) }
    dend_43 { pt3dadd( -109.255, 55.4985, 10.8354, 0.28 ) }
    dend_43 { pt3dadd( -110.185, 56.8344, 10.8944, 0.28 ) }
    dend_43 { pt3dadd( -112.173, 59.8148, 11.131, 0.55 ) }
    dend_43 { pt3dadd( -113.557, 61.994, 11.4784, 0.28 ) }
    dend_43 { pt3dadd( -115.127, 64.3785, 11.7711, 0.83 ) }
    dend_43 { pt3dadd( -116.876, 67.5761, 12.2197, 0.28 ) }
    dend_43 { pt3dadd( -117.611, 69.1298, 12.4, 0.55 ) }
    dend_43 { pt3dadd( -119.0, 72.5582, 12.7229, 0.28 ) }
    dend_43 { pt3dadd( -119.695, 74.5534, 12.9003, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_43 { pt3dadd( -120.01, 75.4856, 12.901, 0.55 ) }
    dend_43 { pt3dadd( -122.192, 82.3556, 12.3397, 0.28 ) }
    dend_43 { pt3dadd( -123.066, 85.2451, 11.7239, 0.83 ) }
    dend_43 { pt3dadd( -123.724, 87.4741, 10.9808, 0.28 ) }
    dend_43 { pt3dadd( -124.152, 88.9501, 10.3402, 0.55 ) }
    dend_43 { pt3dadd( -125.279, 92.5937, 8.52632, 0.28 ) }
    dend_43 { pt3dadd( -126.391, 96.0808, 6.68155, 0.55 ) }
    dend_43 { pt3dadd( -127.216, 98.4526, 5.29221, 0.55 ) }
    dend_43 { pt3dadd( -128.223, 101.587, 3.48911, 0.28 ) }
    dend_43 { pt3dadd( -128.665, 102.967, 2.68443, 0.28 ) }
    dend_43 { pt3dadd( -129.162, 104.574, 1.77965, 0.55 ) }
    dend_43 { pt3dadd( -130.285, 108.622, -0.0532382, 0.28 ) }
    dend_43 { pt3dadd( -130.952, 110.824, -0.911462, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 13/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -28.5076, -48.0406, -2.84111, 0.83 ) }
    dend_42 { pt3dadd( -31.0309, -47.3456, -4.29832, 0.83 ) }
    dend_42 { pt3dadd( -34.5455, -46.1544, -6.09654, 0.55 ) }
    dend_42 { pt3dadd( -35.2213, -45.8784, -6.35185, 0.55 ) }
    dend_42 { pt3dadd( -35.9655, -45.5881, -6.62017, 0.55 ) }
    dend_42 { pt3dadd( -37.8673, -44.8673, -7.18857, 0.55 ) }
    dend_42 { pt3dadd( -41.2375, -43.689, -8.16125, 0.28 ) }
    dend_42 { pt3dadd( -42.7126, -43.2254, -8.74879, 0.55 ) }
    dend_42 { pt3dadd( -45.0362, -42.6832, -9.71717, 0.28 ) }
    dend_42 { pt3dadd( -47.0464, -42.3631, -10.7462, 0.55 ) }
    dend_42 { pt3dadd( -48.9526, -42.1997, -11.7959, 0.55 ) }
    dend_42 { pt3dadd( -51.7823, -42.2627, -13.3053, 0.28 ) }
    dend_42 { pt3dadd( -57.4752, -42.8213, -16.2734, 0.83 ) }
    dend_42 { pt3dadd( -58.9838, -43.0555, -17.0701, 0.83 ) }
    dend_42 { pt3dadd( -62.5777, -43.7636, -18.9929, 0.28 ) }
    dend_42 { pt3dadd( -64.0262, -44.0657, -19.6802, 0.83 ) }
    dend_42 { pt3dadd( -67.8196, -44.8997, -21.3097, 0.28 ) }
    dend_42 { pt3dadd( -68.7956, -45.1183, -21.6445, 0.55 ) }
    dend_42 { pt3dadd( -71.6075, -45.7578, -22.2859, 0.28 ) }
    dend_42 { pt3dadd( -72.6765, -45.9747, -22.5529, 0.83 ) }
    dend_42 { pt3dadd( -74.8562, -46.4152, -23.0519, 0.28 ) }
    dend_42 { pt3dadd( -77.6866, -46.8544, -23.9955, 0.55 ) }
    dend_42 { pt3dadd( -80.0508, -47.1386, -24.9269, 0.28 ) }
    dend_42 { pt3dadd( -81.2937, -47.2671, -25.6282, 0.83 ) }
    dend_42 { pt3dadd( -84.3348, -47.6984, -27.6841, 0.28 ) }
    dend_42 { pt3dadd( -85.3466, -47.8787, -28.4612, 0.55 ) }
    dend_42 { pt3dadd( -88.66, -48.6307, -31.3919, 0.28 ) }
    dend_42 { pt3dadd( -89.2965, -48.8066, -32.0148, 0.55 ) }
    dend_42 { pt3dadd( -94.7018, -50.5326, -37.8771, 0.28 ) }
    dend_42 { pt3dadd( -95.955, -50.9831, -39.3278, 0.28 ) }
    dend_42 { pt3dadd( -96.8571, -51.3978, -40.405, 0.55 ) }
    dend_42 { pt3dadd( -99.4484, -52.7653, -43.5708, 0.28 ) }
    dend_42 { pt3dadd( -100.621, -53.5167, -44.9426, 0.28 ) }
    dend_42 { pt3dadd( -102.243, -54.5943, -46.7082, 0.28 ) }
    dend_42 { pt3dadd( -102.831, -54.9497, -47.187, 0.55 ) }
    dend_42 { pt3dadd( -105.325, -56.089, -48.7838, 0.28 ) }
    dend_42 { pt3dadd( -106.648, -56.6314, -49.4693, 0.55 ) }
    dend_42 { pt3dadd( -108.559, -57.2794, -50.0898, 0.28 ) }
    dend_42 { pt3dadd( -109.619, -57.5575, -50.2983, 0.55 ) }
    dend_42 { pt3dadd( -113.342, -58.2405, -50.6414, 0.28 ) }
    dend_42 { pt3dadd( -115.163, -58.437, -50.7944, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 54/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.81823, -41.8074, -3.08556, 0.55 ) }
    dend_38 { pt3dadd( -2.13129, -44.6083, -2.06491, 0.55 ) }
    dend_38 { pt3dadd( -2.32219, -45.7996, -1.80688, 0.83 ) }
    dend_38 { pt3dadd( -2.56182, -47.3057, -1.58647, 0.28 ) }
    dend_38 { pt3dadd( -2.70977, -48.2215, -1.48181, 0.55 ) }
    dend_38 { pt3dadd( -2.88625, -49.3773, -1.37762, 0.55 ) }
    dend_38 { pt3dadd( -3.09535, -50.7573, -1.2559, 0.55 ) }
    dend_38 { pt3dadd( -3.37644, -52.4161, -1.23149, 0.55 ) }
    dend_38 { pt3dadd( -3.6412, -54.1089, -1.15177, 0.55 ) }
    dend_38 { pt3dadd( -3.7863, -55.0512, -1.10897, 0.28 ) }
    dend_38 { pt3dadd( -3.9036, -55.7704, -1.11893, 0.55 ) }
    dend_38 { pt3dadd( -4.10221, -56.8396, -1.23033, 0.28 ) }
    dend_38 { pt3dadd( -4.24334, -57.7605, -1.38922, 0.55 ) }
    dend_38 { pt3dadd( -4.43123, -59.3928, -1.67756, 0.55 ) }
    dend_38 { pt3dadd( -4.63792, -61.2325, -2.10319, 0.55 ) }
    dend_38 { pt3dadd( -4.82099, -63.8998, -2.68394, 0.55 ) }
    dend_38 { pt3dadd( -4.93753, -66.3693, -3.25135, 0.55 ) }
    dend_38 { pt3dadd( -4.95833, -69.2897, -3.90756, 0.28 ) }
    dend_38 { pt3dadd( -4.89334, -71.0495, -4.26617, 0.83 ) }
    dend_38 { pt3dadd( -4.5725, -74.6064, -4.834, 0.28 ) }
    dend_38 { pt3dadd( -4.21511, -77.1067, -5.09069, 0.83 ) }
    dend_38 { pt3dadd( -3.90792, -78.7689, -5.1056, 0.28 ) }
    dend_38 { pt3dadd( -3.66472, -80.3426, -5.04708, 0.55 ) }
    dend_38 { pt3dadd( -3.5109, -82.064, -4.97819, 0.28 ) }
    dend_38 { pt3dadd( -3.45855, -83.6713, -4.95533, 0.55 ) }
    dend_38 { pt3dadd( -3.44824, -85.1074, -4.913, 0.28 ) }
    dend_38 { pt3dadd( -3.5025, -86.3414, -4.92102, 0.55 ) }
    dend_38 { pt3dadd( -3.76748, -90.3925, -4.98538, 0.28 ) }
    dend_38 { pt3dadd( -3.89444, -91.5549, -5.05709, 0.83 ) }
    dend_38 { pt3dadd( -4.15793, -93.6268, -5.20953, 0.83 ) }
    dend_38 { pt3dadd( -4.4203, -95.6927, -5.38609, 0.28 ) }
    dend_38 { pt3dadd( -4.50047, -96.5018, -5.4405, 0.55 ) }
    dend_38 { pt3dadd( -4.61017, -98.1224, -5.55907, 0.28 ) }
    dend_38 { pt3dadd( -4.65042, -98.975, -5.6215, 0.55 ) }
    dend_38 { pt3dadd( -4.70253, -100.452, -5.64751, 0.28 ) }
    dend_38 { pt3dadd( -4.75393, -101.182, -5.59871, 0.55 ) }
    dend_38 { pt3dadd( -4.94987, -102.766, -5.37823, 0.28 ) }
    dend_38 { pt3dadd( -5.08828, -103.68, -5.17149, 0.83 ) }
    dend_38 { pt3dadd( -5.28351, -105.158, -4.6369, 0.28 ) }
    dend_38 { pt3dadd( -5.4456, -107.28, -3.57508, 0.55 ) }
    dend_38 { pt3dadd( -5.51959, -108.542, -2.85422, 0.28 ) }
    dend_38 { pt3dadd( -5.55088, -108.993, -2.60537, 0.55 ) }
    dend_38 { pt3dadd( -5.62937, -109.888, -2.12703, 0.55 ) }
    dend_38 { pt3dadd( -5.97668, -113.076, -0.56734, 0.28 ) }
    dend_38 { pt3dadd( -6.13369, -114.919, 0.332333, 0.28 ) }
    dend_38 { pt3dadd( -6.18328, -115.4, 0.538478, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_38 { pt3dadd( -6.41382, -117.884, 1.63279, 0.28 ) }
    dend_38 { pt3dadd( -6.53783, -118.941, 2.06633, 0.55 ) }
    dend_38 { pt3dadd( -6.79865, -120.67, 2.68845, 0.28 ) }
    dend_38 { pt3dadd( -7.36334, -123.514, 3.52748, 0.28 ) }
    dend_38 { pt3dadd( -7.66817, -125.105, 3.94738, 1.11 ) }
    dend_38 { pt3dadd( -8.13557, -127.778, 4.69386, 0.28 ) }
    dend_38 { pt3dadd( -8.34006, -129.122, 5.08571, 0.55 ) }
    dend_38 { pt3dadd( -8.49885, -130.205, 5.34302, 0.28 ) }
    dend_38 { pt3dadd( -8.61658, -130.878, 5.43694, 0.55 ) }
    dend_38 { pt3dadd( -9.18713, -133.321, 5.55773, 0.28 ) }
    dend_38 { pt3dadd( -9.45525, -134.439, 5.59057, 0.55 ) }
    dend_38 { pt3dadd( -9.78648, -135.891, 5.64818, 0.28 ) }
    dend_38 { pt3dadd( -10.0809, -137.233, 5.76362, 0.28 ) }
    dend_38 { pt3dadd( -10.459, -138.868, 5.91951, 0.83 ) }
    dend_38 { pt3dadd( -10.9717, -141.174, 6.14283, 0.83 ) }
    dend_38 { pt3dadd( -11.6688, -144.556, 6.46217, 0.28 ) }
    dend_38 { pt3dadd( -11.8881, -145.944, 6.66121, 0.55 ) }
    dend_38 { pt3dadd( -12.1017, -147.887, 6.99376, 0.28 ) }
    dend_38 { pt3dadd( -12.1748, -149.023, 7.23295, 0.55 ) }
    dend_38 { pt3dadd( -12.2209, -152.285, 7.91529, 0.28 ) }
    dend_38 { pt3dadd( -12.1782, -154.469, 8.3023, 0.83 ) }
    dend_38 { pt3dadd( -12.0317, -157.476, 8.71935, 0.28 ) }
    dend_38 { pt3dadd( -11.8981, -159.637, 8.94943, 0.28 ) }
    dend_38 { pt3dadd( -11.8227, -160.684, 9.036, 0.55 ) }
    dend_38 { pt3dadd( -11.5683, -164.893, 9.25179, 0.28 ) }
    dend_38 { pt3dadd( -11.5097, -167.653, 9.21404, 0.28 ) }
    dend_38 { pt3dadd( -11.536, -169.278, 9.09558, 0.55 ) }
    dend_38 { pt3dadd( -11.6486, -171.485, 8.82977, 0.28 ) }
    dend_38 { pt3dadd( -11.733, -172.617, 8.68107, 0.55 ) }
    dend_38 { pt3dadd( -11.9408, -175.18, 8.37016, 0.28 ) }
    dend_38 { pt3dadd( -12.1072, -176.962, 8.16606, 0.55 ) }
    dend_38 { pt3dadd( -12.6321, -181.998, 7.57402, 0.28 ) }
    dend_38 { pt3dadd( -12.8177, -183.591, 7.3892, 0.55 ) }
    dend_38 { pt3dadd( -13.0648, -186.133, 7.05899, 0.28 ) }
    dend_38 { pt3dadd( -13.1766, -187.923, 6.86255, 0.55 ) }
    dend_38 { pt3dadd( -14.1821, -196.116, 7.79418, 0.55 ) }
    dend_38 { pt3dadd( -16.2202, -204.102, 8.74166, 0.55 ) }
    dend_38 { pt3dadd( -16.9334, -212.362, 9.33135, 0.55 ) }
    dend_38 { pt3dadd( -19.0976, -220.373, 9.54985, 0.55 ) }
    dend_38 { pt3dadd( -20.967, -228.456, 9.932, 0.55 ) }
    dend_38 { pt3dadd( -23.0558, -236.483, 9.51833, 0.55 ) }
    dend_38 { pt3dadd( -24.6609, -244.566, 10.5147, 0.55 ) }
    dend_38 { pt3dadd( -24.9138, -252.621, 12.4434, 0.55 ) }
    dend_38 { pt3dadd( -24.8916, -260.42, 15.1623, 0.55 ) }
    dend_38 { pt3dadd( -24.0739, -268.577, 16.3908, 0.55 ) }
    dend_38 { pt3dadd( -23.0974, -276.433, 18.7413, 0.55 ) }
    dend_38 { pt3dadd( -23.0861, -284.374, 21.061, 0.55 ) }
    dend_38 { pt3dadd( -22.0921, -291.831, 24.3798, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 48/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.81823, -41.8074, -3.08556, 0.55 ) }
    dend_37 { pt3dadd( -1.01625, -43.3653, -5.20519, 0.55 ) }
    dend_37 { pt3dadd( -0.367665, -44.7463, -6.91926, 0.55 ) }
    dend_37 { pt3dadd( 1.35247, -48.3004, -10.8699, 0.55 ) }
    dend_37 { pt3dadd( 2.60457, -50.6902, -13.3501, 0.28 ) }
    dend_37 { pt3dadd( 3.29125, -51.8935, -14.5824, 0.55 ) }
    dend_37 { pt3dadd( 4.73944, -54.2926, -16.9749, 0.28 ) }
    dend_37 { pt3dadd( 5.5372, -55.7478, -18.2977, 0.28 ) }
    dend_37 { pt3dadd( 6.57748, -57.3749, -19.721, 0.55 ) }
    dend_37 { pt3dadd( 7.3309, -58.4261, -20.4961, 0.55 ) }
    dend_37 { pt3dadd( 8.96152, -60.4439, -22.0425, 0.28 ) }
    dend_37 { pt3dadd( 9.53603, -61.1342, -22.5962, 0.55 ) }
    dend_37 { pt3dadd( 12.3684, -64.2534, -25.3239, 0.55 ) }
    dend_37 { pt3dadd( 13.8849, -65.9243, -27.0049, 0.55 ) }
    dend_37 { pt3dadd( 14.6492, -66.8219, -27.9903, 0.55 ) }
    dend_37 { pt3dadd( 16.0954, -68.5745, -30.0811, 0.55 ) }
    dend_37 { pt3dadd( 17.8753, -70.6247, -32.8331, 0.55 ) }
    dend_37 { pt3dadd( 19.6549, -72.6165, -35.6441, 0.55 ) }
    dend_37 { pt3dadd( 21.1069, -74.2028, -37.9542, 0.28 ) }
    dend_37 { pt3dadd( 22.1121, -75.4301, -39.6751, 0.55 ) }
    dend_37 { pt3dadd( 23.6525, -77.3251, -42.4877, 0.55 ) }
    dend_37 { pt3dadd( 25.2941, -79.4142, -45.6069, 0.55 ) }
    dend_37 { pt3dadd( 26.4989, -81.0464, -47.9736, 0.28 ) }
    dend_37 { pt3dadd( 26.8122, -81.487, -48.573, 0.55 ) }
    dend_37 { pt3dadd( 28.0318, -82.9863, -50.742, 0.28 ) }
    dend_37 { pt3dadd( 29.6435, -84.8302, -53.4512, 0.28 ) }
    dend_37 { pt3dadd( 30.5569, -85.8798, -55.0103, 0.55 ) }
    dend_37 { pt3dadd( 31.2939, -86.7506, -56.411, 0.55 ) }
    dend_37 { pt3dadd( 31.9667, -87.4563, -57.767, 0.28 ) }
    dend_37 { pt3dadd( 33.2258, -88.8624, -60.7531, 0.55 ) }
    dend_37 { pt3dadd( 33.9312, -89.6732, -62.5117, 0.28 ) }
    dend_37 { pt3dadd( 34.5678, -90.4844, -64.4523, 0.55 ) }
    dend_37 { pt3dadd( 35.4662, -91.7764, -67.583, 0.28 ) }
    dend_37 { pt3dadd( 36.0464, -92.9239, -70.4966, 0.55 ) }
    dend_37 { pt3dadd( 36.6593, -94.5873, -74.4813, 0.28 ) }
    dend_37 { pt3dadd( 36.8614, -95.3025, -76.1404, 0.55 ) }
    dend_37 { pt3dadd( 37.4046, -97.3813, -81.4548, 0.28 ) }
    dend_37 { pt3dadd( 37.5974, -98.2945, -83.9029, 0.55 ) }
    dend_37 { pt3dadd( 37.9129, -101.201, -92.3456, 0.28 ) }
    dend_37 { pt3dadd( 37.8993, -101.61, -93.571, 0.28 ) }
    dend_37 { pt3dadd( 37.8775, -102.035, -94.8724, 0.55 ) }
    dend_37 { pt3dadd( 37.7575, -103.806, -100.271, 0.28 ) }
    dend_37 { pt3dadd( 37.7212, -104.159, -101.344, 0.55 ) }
    dend_37 { pt3dadd( 37.527, -105.66, -106.298, 0.28 ) }
    dend_37 { pt3dadd( 37.4041, -106.315, -108.412, 0.55 ) }
    dend_37 { pt3dadd( 37.1564, -107.248, -111.636, 0.28 ) }
    dend_37 { pt3dadd( 36.9856, -107.832, -113.596, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 95/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 37.8364, -80.7496, -15.5098, 0.28 ) }
    dend_35 { pt3dadd( 36.8979, -85.3724, -16.3223, 0.28 ) }
    dend_35 { pt3dadd( 36.5559, -87.2348, -16.5807, 0.55 ) }
    dend_35 { pt3dadd( 36.1221, -91.9935, -17.0433, 0.28 ) }
    dend_35 { pt3dadd( 36.0313, -94.0211, -17.2957, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( 35.891, -98.089, -17.5889, 0.28 ) }
    dend_35 { pt3dadd( 35.8234, -100.049, -17.7302, 0.28 ) }
    dend_35 { pt3dadd( 35.6745, -102.715, -17.9556, 0.28 ) }
    dend_35 { pt3dadd( 35.6529, -107.403, -18.135, 0.28 ) }
    dend_35 { pt3dadd( 35.9014, -111.253, -18.0142, 0.28 ) }
    dend_35 { pt3dadd( 36.4552, -115.697, -17.8793, 0.55 ) }
    dend_35 { pt3dadd( 37.8436, -127.409, -18.4615, 0.55 ) }
    dend_35 { pt3dadd( 38.6863, -139.132, -17.3625, 0.55 ) }
    dend_35 { pt3dadd( 40.0145, -150.763, -15.9696, 0.55 ) }
    dend_35 { pt3dadd( 42.846, -161.676, -12.8363, 0.55 ) }
    dend_35 { pt3dadd( 46.0634, -172.655, -10.3527, 0.55 ) }
    dend_35 { pt3dadd( 48.5503, -183.497, -6.73688, 0.55 ) }
    dend_35 { pt3dadd( 49.2872, -195.09, -4.73615, 0.55 ) }
    dend_35 { pt3dadd( 49.8361, -206.183, -0.947692, 0.55 ) }
    dend_35 { pt3dadd( 49.7728, -216.946, 3.66205, 0.55 ) }
    dend_35 { pt3dadd( 51.8373, -227.77, 7.58721, 0.55 ) }
    dend_35 { pt3dadd( 54.1828, -238.466, 11.6597, 0.55 ) }
    dend_35 { pt3dadd( 56.2222, -248.72, 16.7919, 0.55 ) }
    dend_35 { pt3dadd( 57.0953, -257.657, 24.0595, 0.55 ) }
    dend_35 { pt3dadd( 57.8484, -265.155, 32.6949, 0.55 ) }
    dend_35 { pt3dadd( 56.771, -273.424, 40.6446, 0.55 ) }
    dend_35 { pt3dadd( 56.019, -279.265, 50.3907, 0.55 ) }
    dend_35 { pt3dadd( 56.5368, -286.313, 59.3835, 0.55 ) }
    dend_35 { pt3dadd( 58.406, -293.373, 68.1777, 0.55 ) }
    dend_35 { pt3dadd( 59.4916, -299.52, 77.706, 0.55 ) }
    dend_35 { pt3dadd( 62.2037, -305.637, 86.9147, 0.55 ) }
    dend_35 { pt3dadd( 65.566, -312.063, 95.7018, 0.55 ) }
    dend_35 { pt3dadd( 69.4771, -316.585, 105.318, 0.55 ) }
    dend_35 { pt3dadd( 72.4237, -319.22, 115.891, 0.55 ) }
    dend_35 { pt3dadd( 76.507, -319.854, 126.388, 0.55 ) }
    dend_35 { pt3dadd( 82.1475, -320.948, 136.095, 0.55 ) }
    dend_35 { pt3dadd( 87.5891, -320.672, 145.984, 0.55 ) }
    dend_35 { pt3dadd( 93.0294, -321.801, 155.801, 0.55 ) }
    dend_35 { pt3dadd( 99.7506, -324.492, 164.457, 0.55 ) }
    dend_35 { pt3dadd( 106.337, -326.677, 173.352, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 37.8364, -80.7496, -15.5098, 0.28 ) }
    dend_34 { pt3dadd( 40.8009, -81.4054, -16.6801, 0.28 ) }
    dend_34 { pt3dadd( 42.5445, -81.9157, -17.4215, 0.55 ) }
    dend_34 { pt3dadd( 44.9296, -82.75, -18.5678, 0.28 ) }
    dend_34 { pt3dadd( 46.4824, -83.4545, -19.4393, 0.55 ) }
    dend_34 { pt3dadd( 47.0453, -83.744, -19.7997, 0.55 ) }
    dend_34 { pt3dadd( 49.3692, -85.0493, -21.3861, 0.28 ) }
    dend_34 { pt3dadd( 50.2998, -85.6961, -22.1308, 0.28 ) }
    dend_34 { pt3dadd( 51.0942, -86.3496, -22.8271, 0.55 ) }
    dend_34 { pt3dadd( 52.4458, -87.6744, -24.1634, 0.28 ) }
    dend_34 { pt3dadd( 54.5502, -89.7718, -26.3545, 0.28 ) }
    dend_34 { pt3dadd( 54.9618, -90.1853, -26.8112, 0.55 ) }
    dend_34 { pt3dadd( 63.004, -95.4886, -33.6713, 0.55 ) }
    dend_34 { pt3dadd( 69.9894, -100.741, -41.6492, 0.55 ) }
    dend_34 { pt3dadd( 75.6356, -107.975, -49.277, 0.55 ) }
    dend_34 { pt3dadd( 83.4794, -112.702, -56.7318, 0.55 ) }
    dend_34 { pt3dadd( 90.7051, -117.445, -64.7848, 0.55 ) }
    dend_34 { pt3dadd( 96.8918, -121.998, -73.7612, 0.55 ) }
    dend_34 { pt3dadd( 103.761, -128.063, -81.3002, 0.55 ) }
    dend_34 { pt3dadd( 111.353, -135.499, -86.6998, 0.55 ) }
    dend_34 { pt3dadd( 117.578, -143.659, -92.8677, 0.55 ) }
    dend_34 { pt3dadd( 125.692, -151.044, -97.5027, 0.55 ) }
    dend_34 { pt3dadd( 132.259, -158.959, -103.603, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 58/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -15.6166, 82.3602, -11.8764, 0.55 ) }
    dend_9 { pt3dadd( -15.5552, 85.0365, -12.1648, 0.55 ) }
    dend_9 { pt3dadd( -15.4819, 88.2288, -12.5625, 0.55 ) }
    dend_9 { pt3dadd( -15.4277, 91.2191, -13.2269, 0.55 ) }
    dend_9 { pt3dadd( -15.4256, 91.4132, -13.2773, 0.55 ) }
    dend_9 { pt3dadd( -15.4097, 93.5201, -13.9585, 0.83 ) }
    dend_9 { pt3dadd( -15.4075, 95.8996, -14.7616, 0.55 ) }
    dend_9 { pt3dadd( -15.4147, 97.1676, -15.3376, 0.83 ) }
    dend_9 { pt3dadd( -15.364, 99.8942, -16.755, 0.55 ) }
    dend_9 { pt3dadd( -15.3436, 100.712, -17.1966, 0.83 ) }
    dend_9 { pt3dadd( -15.3105, 103.163, -18.4384, 0.55 ) }
    dend_9 { pt3dadd( -15.2555, 104.71, -19.1363, 0.83 ) }
    dend_9 { pt3dadd( -15.0847, 108.062, -20.3579, 0.55 ) }
    dend_9 { pt3dadd( -14.9381, 110.653, -21.0904, 0.55 ) }
    dend_9 { pt3dadd( -14.8381, 112.843, -21.5099, 0.55 ) }
    dend_9 { pt3dadd( -14.7947, 114.245, -21.7676, 0.83 ) }
    dend_9 { pt3dadd( -14.7714, 117.746, -22.2096, 0.28 ) }
    dend_9 { pt3dadd( -14.7925, 119.108, -22.4232, 0.55 ) }
    dend_9 { pt3dadd( -14.8999, 121.373, -22.839, 0.28 ) }
    dend_9 { pt3dadd( -14.9801, 122.807, -23.2472, 0.55 ) }
    dend_9 { pt3dadd( -15.1844, 125.716, -24.3506, 0.28 ) }
    dend_9 { pt3dadd( -15.3233, 127.307, -25.0834, 0.55 ) }
    dend_9 { pt3dadd( -15.7834, 130.555, -26.8935, 0.28 ) }
    dend_9 { pt3dadd( -16.0646, 132.417, -27.994, 0.55 ) }
    dend_9 { pt3dadd( -16.4185, 134.533, -29.282, 0.28 ) }
    dend_9 { pt3dadd( -16.6712, 135.824, -30.0479, 0.55 ) }
    dend_9 { pt3dadd( -16.8527, 136.623, -30.467, 0.28 ) }
    dend_9 { pt3dadd( -17.2404, 138.355, -31.3509, 0.55 ) }
    dend_9 { pt3dadd( -17.7851, 140.687, -32.2428, 0.28 ) }
    dend_9 { pt3dadd( -18.0298, 141.772, -32.5883, 0.55 ) }
    dend_9 { pt3dadd( -18.2065, 142.663, -32.8165, 0.28 ) }
    dend_9 { pt3dadd( -18.3687, 143.764, -33.0659, 0.83 ) }
    dend_9 { pt3dadd( -18.844, 147.158, -33.4748, 0.28 ) }
    dend_9 { pt3dadd( -19.02, 148.393, -33.4856, 0.55 ) }
    dend_9 { pt3dadd( -19.1901, 149.579, -33.4239, 0.28 ) }
    dend_9 { pt3dadd( -19.4652, 151.78, -33.2683, 0.55 ) }
    dend_9 { pt3dadd( -19.5932, 152.638, -33.1659, 0.83 ) }
    dend_9 { pt3dadd( -20.0026, 155.606, -32.9665, 0.28 ) }
    dend_9 { pt3dadd( -20.276, 157.51, -32.8649, 0.55 ) }
    dend_9 { pt3dadd( -20.4661, 159.073, -32.8536, 0.28 ) }
    dend_9 { pt3dadd( -20.6405, 160.99, -32.8828, 0.55 ) }
    dend_9 { pt3dadd( -20.8398, 164.928, -32.9767, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_9 { pt3dadd( -20.8534, 169.05, -33.0057, 0.55 ) }
    dend_9 { pt3dadd( -20.6914, 172.912, -32.9967, 0.28 ) }
    dend_9 { pt3dadd( -20.5063, 175.468, -32.885, 0.55 ) }
    dend_9 { pt3dadd( -20.3712, 177.21, -32.708, 0.55 ) }
    dend_9 { pt3dadd( -20.2061, 178.941, -32.4871, 0.55 ) }
    dend_9 { pt3dadd( -19.8891, 181.609, -32.0914, 0.28 ) }
    dend_9 { pt3dadd( -19.7448, 182.735, -31.9268, 0.55 ) }
    dend_9 { pt3dadd( -19.4563, 184.457, -31.7805, 0.28 ) }
    dend_9 { pt3dadd( -19.1667, 186.139, -31.7848, 0.55 ) }
    dend_9 { pt3dadd( -18.7549, 188.76, -31.9565, 0.28 ) }
    dend_9 { pt3dadd( -18.377, 191.238, -32.3526, 0.55 ) }
    dend_9 { pt3dadd( -17.6776, 195.983, -33.3673, 0.28 ) }
    dend_9 { pt3dadd( -17.5554, 196.842, -33.5566, 0.83 ) }
    dend_9 { pt3dadd( -17.0689, 200.503, -34.3763, 0.28 ) }
    dend_9 { pt3dadd( -16.8107, 202.443, -34.8365, 0.83 ) }
    dend_9 { pt3dadd( -16.2648, 206.959, -35.8572, 0.28 ) }
    dend_9 { pt3dadd( -16.0355, 209.132, -36.2941, 0.55 ) }
    dend_9 { pt3dadd( -15.8834, 211.06, -36.641, 0.28 ) }
    dend_9 { pt3dadd( -15.7949, 212.179, -36.8403, 0.55 ) }
    dend_9 { pt3dadd( -15.6687, 213.81, -37.0638, 0.28 ) }
    dend_9 { pt3dadd( -15.4889, 215.725, -37.3026, 0.55 ) }
    dend_9 { pt3dadd( -15.1309, 220.161, -37.7062, 0.55 ) }
    dend_9 { pt3dadd( -14.9108, 223.02, -37.9835, 0.28 ) }
    dend_9 { pt3dadd( -14.7403, 225.009, -38.1924, 0.55 ) }
    dend_9 { pt3dadd( -14.5387, 227.01, -38.3554, 0.28 ) }
    dend_9 { pt3dadd( -14.2857, 229.385, -38.4634, 0.55 ) }
    dend_9 { pt3dadd( -13.9008, 232.421, -38.5974, 0.55 ) }
    dend_9 { pt3dadd( -13.6804, 233.785, -38.6313, 0.28 ) }
    dend_9 { pt3dadd( -13.3908, 235.43, -38.6181, 0.55 ) }
    dend_9 { pt3dadd( -13.0252, 237.501, -38.6029, 0.28 ) }
    dend_9 { pt3dadd( -12.6747, 239.43, -38.5907, 0.55 ) }
    dend_9 { pt3dadd( -12.305, 241.418, -38.6035, 0.28 ) }
    dend_9 { pt3dadd( -11.6625, 245.012, -38.6354, 0.55 ) }
    dend_9 { pt3dadd( -10.6949, 251.192, -38.6724, 0.28 ) }
    dend_9 { pt3dadd( -10.4591, 252.857, -38.6999, 0.55 ) }
    dend_9 { pt3dadd( -10.0925, 255.466, -38.7695, 0.28 ) }
    dend_9 { pt3dadd( -9.8021, 257.604, -38.8279, 0.55 ) }
    dend_9 { pt3dadd( -9.45434, 260.418, -38.8151, 0.28 ) }
    dend_9 { pt3dadd( -9.29453, 261.935, -38.8109, 0.55 ) }
    dend_9 { pt3dadd( -9.00562, 264.114, -38.7964, 0.28 ) }
    dend_9 { pt3dadd( -8.7494, 265.895, -38.7439, 0.55 ) }
    dend_9 { pt3dadd( -8.53483, 267.288, -38.7184, 0.55 ) }
    dend_9 { pt3dadd( -7.78245, 271.253, -38.531, 0.28 ) }
    dend_9 { pt3dadd( -7.30171, 273.379, -38.5098, 0.55 ) }
    dend_9 { pt3dadd( -6.56233, 276.532, -38.4684, 0.55 ) }
    dend_9 { pt3dadd( -6.02141, 278.936, -38.5096, 0.55 ) }
    dend_9 { pt3dadd( -5.01825, 283.339, -38.6859, 0.28 ) }
    dend_9 { pt3dadd( -4.07787, 287.201, -38.9028, 0.55 ) }
    dend_9 { pt3dadd( -3.04403, 291.243, -39.1658, 0.28 ) }
    dend_9 { pt3dadd( -2.22591, 294.384, -39.3105, 0.55 ) }
    dend_9 { pt3dadd( -1.48241, 297.432, -39.4289, 0.28 ) }
    dend_9 { pt3dadd( -1.14284, 298.802, -39.4754, 0.55 ) }
    dend_9 { pt3dadd( -0.466071, 301.708, -39.4021, 0.28 ) }
    dend_9 { pt3dadd( -0.0684935, 303.791, -39.1896, 0.55 ) }
    dend_9 { pt3dadd( 0.111879, 304.624, -38.988, 0.28 ) }
    dend_9 { pt3dadd( 0.613222, 306.454, -38.5182, 0.55 ) }
    dend_9 { pt3dadd( 1.17745, 308.246, -38.0163, 0.28 ) }
    dend_9 { pt3dadd( 1.53542, 309.435, -37.6059, 0.55 ) }
    dend_9 { pt3dadd( 2.3741, 312.3, -36.315, 0.55 ) }
    dend_9 { pt3dadd( 3.05769, 314.708, -35.1755, 0.55 ) }
    dend_9 { pt3dadd( 3.70879, 317.06, -34.0422, 0.28 ) }
    dend_9 { pt3dadd( 4.21383, 318.973, -33.1309, 0.55 ) }
    dend_9 { pt3dadd( 5.29184, 323.665, -30.9753, 0.28 ) }
    dend_9 { pt3dadd( 5.67652, 325.553, -30.1845, 0.55 ) }
    dend_9 { pt3dadd( 6.19723, 327.895, -29.469, 0.28 ) }
    dend_9 { pt3dadd( 6.59589, 329.821, -29.0573, 0.55 ) }
    dend_9 { pt3dadd( 7.0857, 331.968, -28.7164, 0.28 ) }
    dend_9 { pt3dadd( 7.50818, 333.58, -28.6006, 0.28 ) }
    dend_9 { pt3dadd( 8.15983, 335.759, -28.6712, 0.55 ) }
    dend_9 { pt3dadd( 9.62716, 340.389, -28.881, 0.28 ) }
    dend_9 { pt3dadd( 10.4825, 343.024, -28.9023, 0.55 ) }
    dend_9 { pt3dadd( 11.3108, 345.549, -28.8743, 0.28 ) }
    dend_9 { pt3dadd( 12.0978, 347.97, -28.8446, 0.55 ) }
    dend_9 { pt3dadd( 12.6575, 349.868, -28.7787, 0.28 ) }
    dend_9 { pt3dadd( 13.2516, 352.262, -28.6237, 0.55 ) }
    dend_9 { pt3dadd( 13.7642, 355.271, -28.3176, 0.28 ) }
    dend_9 { pt3dadd( 13.834, 355.826, -28.2729, 0.55 ) }
    dend_9 { pt3dadd( 14.2116, 360.893, -27.958, 0.28 ) }
    dend_9 { pt3dadd( 14.3262, 365.09, -27.7093, 0.28 ) }
    dend_9 { pt3dadd( 14.2916, 367.305, -27.6076, 0.55 ) }
    dend_9 { pt3dadd( 14.1113, 370.556, -27.5206, 0.28 ) }
    dend_9 { pt3dadd( 14.0112, 371.753, -27.4896, 0.55 ) }
    dend_9 { pt3dadd( 13.7593, 374.235, -27.4322, 0.28 ) }
    dend_9 { pt3dadd( 13.5276, 375.725, -27.3241, 0.55 ) }
    dend_9 { pt3dadd( 13.1701, 377.81, -27.1414, 0.28 ) }
    dend_9 { pt3dadd( 12.8345, 379.875, -26.8726, 0.55 ) }
    dend_9 { pt3dadd( 12.4853, 382.432, -26.4973, 0.28 ) }
    dend_9 { pt3dadd( 12.16, 384.987, -26.0644, 0.55 ) }
    dend_9 { pt3dadd( 11.7743, 387.912, -25.514, 0.28 ) }
    dend_9 { pt3dadd( 11.5253, 389.814, -25.1024, 0.55 ) }
    dend_9 { pt3dadd( 11.1819, 392.015, -24.5196, 0.28 ) }
    dend_9 { pt3dadd( 10.8467, 393.849, -24.078, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 92/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -15.6166, 82.3602, -11.8764, 0.28 ) }
    dend_6 { pt3dadd( -17.088, 85.1973, -11.702, 0.28 ) }
    dend_6 { pt3dadd( -18.5209, 87.9601, -11.5322, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 95/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -18.5209, 87.9601, -11.5322, 0.28 ) }
    dend_8 { pt3dadd( -18.7341, 91.3082, -12.0583, 0.28 ) }
    dend_8 { pt3dadd( -18.8872, 93.1776, -12.3032, 0.83 ) }
    dend_8 { pt3dadd( -19.1139, 96.2555, -12.6893, 0.28 ) }
    dend_8 { pt3dadd( -19.2428, 97.8281, -12.8675, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_8 { pt3dadd( -19.5507, 101.087, -13.2109, 0.28 ) }
    dend_8 { pt3dadd( -19.8135, 103.347, -13.2594, 0.83 ) }
    dend_8 { pt3dadd( -20.1389, 105.908, -13.2414, 0.28 ) }
    dend_8 { pt3dadd( -20.3698, 107.354, -13.1135, 0.83 ) }
    dend_8 { pt3dadd( -20.7736, 109.584, -12.7064, 0.83 ) }
    dend_8 { pt3dadd( -21.2289, 112.119, -12.1192, 0.83 ) }
    dend_8 { pt3dadd( -22.1829, 116.708, -10.4631, 0.28 ) }
    dend_8 { pt3dadd( -22.3108, 117.357, -10.1968, 0.83 ) }
    dend_8 { pt3dadd( -22.6891, 119.396, -9.3558, 0.28 ) }
    dend_8 { pt3dadd( -23.0771, 121.441, -8.52407, 0.55 ) }
    dend_8 { pt3dadd( -23.7265, 124.896, -7.13194, 0.55 ) }
    dend_8 { pt3dadd( -24.7121, 129.96, -5.14795, 0.28 ) }
    dend_8 { pt3dadd( -25.1365, 132.291, -4.39679, 0.55 ) }
    dend_8 { pt3dadd( -25.4656, 134.546, -4.0525, 0.28 ) }
    dend_8 { pt3dadd( -25.7398, 136.955, -4.14381, 0.28 ) }
    dend_8 { pt3dadd( -25.8885, 138.534, -4.48844, 0.55 ) }
    dend_8 { pt3dadd( -26.1112, 140.875, -5.36097, 0.28 ) }
    dend_8 { pt3dadd( -26.3186, 142.984, -6.35956, 0.28 ) }
    dend_8 { pt3dadd( -27.5642, 151.373, -10.2809, 0.28 ) }
    dend_8 { pt3dadd( -27.8283, 152.802, -10.9447, 0.55 ) }
    dend_8 { pt3dadd( -28.3668, 155.373, -12.1655, 0.28 ) }
    dend_8 { pt3dadd( -28.796, 157.346, -13.0535, 0.83 ) }
    dend_8 { pt3dadd( -29.557, 160.607, -14.3142, 0.28 ) }
    dend_8 { pt3dadd( -30.2416, 163.612, -15.2932, 0.55 ) }
    dend_8 { pt3dadd( -30.9959, 167.176, -16.1707, 0.55 ) }
    dend_8 { pt3dadd( -31.7248, 171.508, -17.3325, 0.28 ) }
    dend_8 { pt3dadd( -32.0976, 174.279, -18.0848, 0.28 ) }
    dend_8 { pt3dadd( -32.5154, 179.335, -19.4629, 0.55 ) }
    dend_8 { pt3dadd( -32.7645, 184.254, -20.7552, 0.28 ) }
    dend_8 { pt3dadd( -32.778, 186.425, -21.3259, 0.55 ) }
    dend_8 { pt3dadd( -32.7226, 189.134, -21.9637, 0.28 ) }
    dend_8 { pt3dadd( -32.5772, 192.353, -22.7177, 0.55 ) }
    dend_8 { pt3dadd( -32.2711, 197.919, -24.0545, 0.28 ) }
    dend_8 { pt3dadd( -32.1491, 199.534, -24.4178, 0.55 ) }
    dend_8 { pt3dadd( -31.931, 202.325, -24.9392, 0.28 ) }
    dend_8 { pt3dadd( -31.7293, 204.863, -25.3762, 0.83 ) }
    dend_8 { pt3dadd( -31.217, 210.187, -26.1664, 0.28 ) }
    dend_8 { pt3dadd( -30.8624, 212.921, -26.6547, 0.55 ) }
    dend_8 { pt3dadd( -30.5138, 215.848, -27.1247, 0.28 ) }
    dend_8 { pt3dadd( -30.285, 217.822, -27.4466, 0.55 ) }
    dend_8 { pt3dadd( -30.0137, 220.386, -27.8171, 0.55 ) }
    dend_8 { pt3dadd( -29.5372, 225.053, -28.4752, 0.55 ) }
    dend_8 { pt3dadd( -29.193, 230.512, -29.0586, 0.28 ) }
    dend_8 { pt3dadd( -29.0279, 233.014, -29.3865, 0.55 ) }
    dend_8 { pt3dadd( -28.9605, 234.644, -29.6086, 0.28 ) }
    dend_8 { pt3dadd( -28.8277, 237.203, -30.0807, 0.83 ) }
    dend_8 { pt3dadd( -28.6469, 239.872, -30.5733, 0.28 ) }
    dend_8 { pt3dadd( -28.5081, 242.614, -31.1013, 0.55 ) }
    dend_8 { pt3dadd( -28.3816, 245.842, -31.6691, 0.55 ) }
    dend_8 { pt3dadd( -28.1855, 248.728, -32.4245, 0.55 ) }
    dend_8 { pt3dadd( -27.8968, 253.443, -33.8118, 0.28 ) }
    dend_8 { pt3dadd( -27.8161, 255.332, -34.3962, 0.55 ) }
    dend_8 { pt3dadd( -27.7038, 259.224, -35.5654, 0.28 ) }
    dend_8 { pt3dadd( -27.7255, 261.654, -36.2213, 0.55 ) }
    dend_8 { pt3dadd( -28.1305, 266.848, -37.489, 0.28 ) }
    dend_8 { pt3dadd( -28.3496, 268.848, -37.9967, 0.55 ) }
    dend_8 { pt3dadd( -28.9457, 272.216, -38.7868, 0.55 ) }
    dend_8 { pt3dadd( -29.2468, 273.727, -39.2397, 0.55 ) }
    dend_8 { pt3dadd( -29.8316, 276.536, -40.1519, 0.55 ) }
    dend_8 { pt3dadd( -30.4998, 279.488, -41.1917, 0.28 ) }
    dend_8 { pt3dadd( -31.0182, 281.564, -41.9378, 0.55 ) }
    dend_8 { pt3dadd( -31.5788, 283.891, -42.9053, 0.28 ) }
    dend_8 { pt3dadd( -32.6291, 288.017, -44.8542, 0.55 ) }
    dend_8 { pt3dadd( -33.1987, 290.35, -46.059, 0.28 ) }
    dend_8 { pt3dadd( -33.4308, 291.449, -46.634, 0.55 ) }
    dend_8 { pt3dadd( -33.9503, 293.65, -47.5371, 0.28 ) }
    dend_8 { pt3dadd( -34.1586, 294.607, -47.8566, 0.55 ) }
    dend_8 { pt3dadd( -34.502, 296.664, -48.4282, 0.28 ) }
    dend_8 { pt3dadd( -35.0391, 300.487, -49.1857, 0.55 ) }
    dend_8 { pt3dadd( -35.2718, 303.736, -49.8256, 0.28 ) }
    dend_8 { pt3dadd( -35.42, 307.902, -50.5291, 0.55 ) }
    dend_8 { pt3dadd( -35.4782, 311.349, -50.948, 0.55 ) }
    dend_8 { pt3dadd( -35.4553, 314.954, -51.1012, 0.28 ) }
    dend_8 { pt3dadd( -35.4242, 316.221, -51.0568, 0.55 ) }
    dend_8 { pt3dadd( -35.3609, 321.956, -50.4148, 0.28 ) }
    dend_8 { pt3dadd( -35.3179, 323.991, -50.2406, 0.28 ) }
    dend_8 { pt3dadd( -35.2962, 326.533, -49.99, 0.55 ) }
    dend_8 { pt3dadd( -35.486, 332.105, -49.0031, 0.28 ) }
    dend_8 { pt3dadd( -35.5723, 334.283, -48.5879, 0.83 ) }
    dend_8 { pt3dadd( -35.7068, 337.884, -47.8583, 0.55 ) }
    dend_8 { pt3dadd( -35.9781, 344.148, -46.4518, 0.55 ) }
    dend_8 { pt3dadd( -36.1278, 349.243, -45.4104, 0.28 ) }
    dend_8 { pt3dadd( -36.1938, 352.654, -44.6826, 0.55 ) }
    dend_8 { pt3dadd( -36.2401, 356.553, -43.8439, 0.55 ) }
    dend_8 { pt3dadd( -36.2713, 358.809, -43.1878, 0.28 ) }
    dend_8 { pt3dadd( -36.3038, 360.685, -42.4577, 0.55 ) }
    dend_8 { pt3dadd( -36.3791, 362.494, -41.5104, 0.55 ) }
    dend_8 { pt3dadd( -36.4644, 364.702, -40.4039, 0.28 ) }
    dend_8 { pt3dadd( -36.6435, 367.001, -39.3483, 0.55 ) }
    dend_8 { pt3dadd( -37.1079, 371.06, -37.474, 0.28 ) }
    dend_8 { pt3dadd( -37.3625, 373.15, -36.5471, 0.55 ) }
    dend_8 { pt3dadd( -37.7437, 375.903, -35.3192, 0.28 ) }
    dend_8 { pt3dadd( -38.0626, 378.139, -34.2456, 0.55 ) }
    dend_8 { pt3dadd( -38.7968, 383.293, -31.8177, 0.28 ) }
    dend_8 { pt3dadd( -39.0393, 385.062, -30.9904, 0.55 ) }
    dend_8 { pt3dadd( -39.6438, 389.773, -28.9069, 0.28 ) }
    dend_8 { pt3dadd( -40.0118, 392.719, -27.6446, 0.55 ) }
    dend_8 { pt3dadd( -40.7846, 399.049, -24.8233, 0.28 ) }
    dend_8 { pt3dadd( -41.0537, 401.34, -23.7412, 0.28 ) }
    dend_8 { pt3dadd( -41.2928, 403.679, -22.6673, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_8 { pt3dadd( -41.5453, 406.777, -21.4144, 0.28 ) }
    dend_8 { pt3dadd( -41.6655, 408.584, -20.7838, 0.55 ) }
    dend_8 { pt3dadd( -41.8586, 412.773, -19.5356, 0.28 ) }
    dend_8 { pt3dadd( -41.9555, 414.637, -19.0799, 0.55 ) }
    dend_8 { pt3dadd( -42.1245, 417.812, -18.1855, 0.28 ) }
    dend_8 { pt3dadd( -42.2063, 420.41, -17.458, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 6/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.5209, 87.9601, -11.5322, 0.28 ) }
    dend_7 { pt3dadd( -22.8958, 90.6562, -10.1197, 0.28 ) }
    dend_7 { pt3dadd( -25.8658, 92.4864, -9.1608, 0.28 ) }
    dend_7 { pt3dadd( -28.5963, 94.169, -8.27922, 0.55 ) }
    dend_7 { pt3dadd( -29.9207, 94.9852, -7.8516, 0.55 ) }
    dend_7 { pt3dadd( -34.1524, 97.593, -6.48535, 0.28 ) }
    dend_7 { pt3dadd( -37.3037, 99.5352, -5.46792, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, axon_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, axon_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_5 = new SectionList()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_23 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_25 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_17 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_21 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_12 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_49 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_48 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_45 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_42 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_38 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_34 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_8 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_16 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_30 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_32 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_20 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_36 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_10 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_41 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_27 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_28 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_7 OneSecGrp_SectionRef_53.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 15
    dend_13 nseg = 5
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_17 nseg = 3
    dend_15 nseg = 17
    dend_14 nseg = 15
    dend_47 nseg = 3
    dend_31 nseg = 3
    dend_22 nseg = 3
    dend_21 nseg = 11
    dend_19 nseg = 3
    dend_12 nseg = 9
    dend_11 nseg = 7
    dend_2 nseg = 9
    dend_49 nseg = 29
    dend_48 nseg = 9
    dend_33 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 13
    dend_46 nseg = 7
    dend_45 nseg = 5
    dend_43 nseg = 11
    dend_42 nseg = 5
    dend_38 nseg = 13
    dend_37 nseg = 7
    dend_35 nseg = 19
    dend_34 nseg = 7
    dend_9 nseg = 17
    dend_8 nseg = 17
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L23_NBC_2ee5947bbf_0_0


