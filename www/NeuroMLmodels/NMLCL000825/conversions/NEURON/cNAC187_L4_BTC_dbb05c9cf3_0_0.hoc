// Cell: cNAC187_L4_BTC_dbb05c9cf3_0_0
/*
{
  "id" : "cNAC187_L4_BTC_dbb05c9cf3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.465097, 8.04727, -0.0175891, 2.59198", "0.424424, 7.2054, -0.0170165, 4.38773", "0.383751, 6.36352, -0.0164438, 5.44399", "0.343077, 5.52165, -0.0158711, 6.50025", "0.302404, 4.67978, -0.0152984, 7.50099", "0.261731, 3.83791, -0.0147257, 8.3937", "0.221058, 2.99604, -0.014153, 9.3444", "0.180384, 2.15416, -0.0135803, 10.2953", "0.139711, 1.31229, -0.0130077, 10.7907", "0.0990378, 0.470419, -0.012435, 10.75", "0.0583646, -0.371454, -0.0118623, 10.6053", "0.0176913, -1.21333, -0.0112896, 10.4607", "-0.0229819, -2.0552, -0.0107169, 10.316", "-0.0636552, -2.89707, -0.0101442, 9.78436", "-0.104328, -3.73894, -0.00957155, 9.07182", "-0.145002, -4.58081, -0.00899886, 8.12082", "-0.185675, -5.42269, -0.00842618, 7.10426", "-0.226348, -6.26456, -0.00785349, 5.9023", "-0.267021, -7.10643, -0.0072808, 4.68096", "-0.307695, -7.9483, -0.00670812, 3.08046", "-0.348368, -8.79018, -0.00613543, 1.81235" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.46257, 6.57366, -0.101719, 1.82", "-1.5609, 7.06846, 0.816246, 1.82", "-1.62739, 7.31987, 1.239, 1.82", "-1.79952, 7.90025, 2.09138, 1.68", "-1.98207, 8.48594, 2.89245, 1.82", "-1.98207, 8.48594, 2.89245, 1.96", "-2.17165, 9.0942, 3.72439, 1.4", "-2.29571, 9.38082, 4.09765, 1.26", "-2.45197, 9.67549, 4.46689, 1.4", "-2.45197, 9.67549, 4.46689, 1.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.682563, -7.97334, 0.898281, 2.1", "-0.206632, -8.87226, 1.63249, 2.1", "0.23834, -10.0332, 2.3122, 1.96", "0.443033, -10.6998, 2.60225, 2.1", "0.526173, -11.0047, 2.71068, 1.96", "0.653972, -11.6388, 2.89928, 1.82", "0.752882, -12.3524, 3.08124, 1.68", "0.786841, -13.1002, 3.14536, 1.54", "0.767131, -13.7684, 3.14536, 1.4", "0.748629, -14.0924, 3.14536, 1.4", "0.698608, -14.842, 3.14536, 2.38", "0.668792, -15.3057, 3.14536, 2.24", "0.651633, -15.9741, 3.14536, 2.38", "0.664296, -16.6458, 3.14536, 2.24", "0.684905, -17.314, 3.14536, 2.1", "0.717815, -17.788, 3.14536, 1.96", "0.76066, -18.1213, 3.14536, 1.82", "0.843401, -18.7734, 3.14536, 1.54", "0.918804, -19.4379, 3.14536, 1.68", "0.962031, -19.9094, 3.18725, 1.82", "1.00627, -20.5724, 3.28908, 1.68", "1.04579, -21.2167, 3.41559, 1.68", "1.06372, -21.9362, 3.63607, 1.82", "1.06613, -22.5602, 3.88225, 1.82", "1.04482, -23.8039, 4.54891, 1.82", "1.03696, -24.4483, 4.94889, 1.68", "1.03172, -24.7277, 5.14017, 1.68", "1.01345, -25.7663, 5.90756, 1.12", "0.9948, -26.3036, 6.31523, 0.98", "0.913825, -27.4626, 7.13423, 1.12", "0.856629, -28.0417, 7.472, 0.98", "0.821842, -28.3418, 7.62286, 1.12", "0.821842, -28.3418, 7.62286, 1.26", "0.753596, -29.0709, 7.75328, 1.26", "0.702658, -29.8194, 7.82349, 1.12", "0.696996, -30.284, 7.82349, 0.98", "0.732455, -30.9517, 7.82349, 1.12", "0.809033, -31.6193, 7.82349, 1.26", "0.916335, -32.2797, 7.82349, 1.4", "1.07864, -32.9208, 7.82349, 1.26", "1.28391, -33.5587, 7.82349, 1.4", "1.45266, -34.0044, 7.82349, 1.4", "1.45266, -34.0044, 7.82349, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.348368, -8.79018, -0.00613543, 0.28", "-1.07222, -23.7727, -0.00613543, 0.28", "-1.79606, -38.7552, -0.00613543, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.45197, 9.67549, 4.46689, 0.84", "-2.57961, 10.1101, 4.1274, 0.84", "-2.82179, 10.9519, 3.56663, 0.7", "-2.94372, 11.3827, 3.322, 0.84", "-3.17365, 12.2816, 2.85765, 0.98", "-3.29104, 12.7312, 2.64907, 1.12", "-3.40523, 13.1675, 2.43698, 1.26", "-3.52473, 13.6181, 2.23169, 1.4", "-3.65948, 14.0759, 2.06228, 1.54", "-3.7344, 14.311, 2.00125, 1.68", "-3.91985, 14.8473, 1.97997, 1.68", "-4.27134, 15.8154, 2.07413, 1.54", "-4.46654, 16.3306, 2.18734, 1.4", "-4.65301, 16.7806, 2.33597, 1.4", "-5.0683, 17.6836, 2.63216, 1.26", "-5.48889, 18.5038, 2.80406, 1.12", "-5.7386, 18.9448, 2.78487, 0.98", "-5.7386, 18.9448, 2.78487, 0.98", "-5.94503, 19.2018, 2.31016, 0.7", "-6.26237, 19.6332, 1.48132, 0.56", "-6.57349, 20.1215, 0.564392, 0.42", "-6.82115, 20.5867, -0.266927, 0.56", "-7.19784, 21.51, -1.84811, 0.56", "-7.2735, 21.78, -2.27805, 1.26", "-7.33529, 22.1073, -2.73673, 1.12", "-7.37911, 22.5047, -3.15063, 0.98", "-7.40822, 22.9905, -3.44783, 0.84", "-7.49582, 23.9475, -3.54044, 0.7", "-7.53132, 24.1894, -3.47269, 0.84", "-7.81547, 25.1863, -2.97069, 0.1", "-8.2217, 25.8159, -2.33291, 0.1", "-8.39532, 25.9759, -2.06469, 0.14", "-8.39532, 25.9759, -2.06469, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.45197, 9.67549, 4.46689, 3.22", "-2.16202, 9.90328, 4.35042, 3.22", "-1.73834, 10.2973, 4.15396, 3.08", "-0.998117, 11.0964, 3.80559, 2.94", "-0.774744, 11.3793, 3.69804, 2.8", "-0.429283, 11.8312, 3.50148, 2.66", "0.204146, 12.7021, 3.1204, 2.52", "0.479974, 13.1322, 2.93516, 2.38", "0.755, 13.6275, 2.74024, 2.24", "0.979787, 14.0995, 2.598, 2.1", "1.38818, 14.9603, 2.29435, 1.96", "1.63645, 15.4782, 2.09421, 0.28", "1.89125, 15.9889, 1.92026, 0.42", "2.07088, 16.3052, 1.79771, 0.56", "2.36554, 16.7845, 1.58978, 0.7", "2.86727, 17.5451, 1.27199, 0.84", "2.99262, 17.7758, 1.21703, 0.84" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.45266, -34.0044, 7.82349, 1.4", "1.54499, -34.3269, 7.82226, 1.4", "1.69399, -34.9773, 7.82034, 1.54", "1.79065, -35.6017, 7.60209, 1.68", "1.82142, -35.8538, 7.37818, 1.54", "1.85873, -36.3538, 6.92783, 1.4", "1.85873, -36.3538, 6.92783, 1.54", "1.87613, -36.7517, 6.65428, 1.4", "1.91015, -37.9406, 5.96798, 1.26", "1.95919, -39.1884, 5.4219, 1.12", "1.98971, -39.9066, 5.207, 0.98", "2.02857, -40.5608, 5.08301, 0.84", "2.13589, -41.9362, 4.84413, 0.7", "2.1625, -42.2675, 4.80208, 0.56", "2.19741, -42.9324, 4.77191, 0.56", "2.23097, -43.6799, 4.74422, 0.7", "2.25259, -44.3222, 4.61478, 0.84", "2.28456, -45.6181, 4.18263, 0.98", "2.30032, -46.0546, 3.9948, 0.56", "2.31604, -46.7572, 3.73013, 0.7", "2.33034, -47.3934, 3.57115, 0.84", "2.39213, -48.7924, 3.45199, 0.84", "2.43546, -49.4545, 3.51636, 0.98", "2.498, -50.1, 3.68805, 1.12", "2.66527, -51.3025, 4.09989, 0.56", "2.88324, -52.5518, 4.6192, 0.42", "3.00146, -53.1492, 4.89805, 0.42", "3.13832, -53.7503, 5.16808, 0.56", "3.2124, -54.0598, 5.26537, 0.7", "3.29652, -54.3832, 5.2949, 1.12", "3.47647, -55.0074, 5.17829, 1.26", "3.65068, -55.6185, 4.96836, 1.12", "3.98376, -56.7778, 4.68448, 1.12", "3.98376, -56.7778, 4.68448, 1.12", "4.04976, -57.1031, 4.68301, 1.12", "4.1417, -57.7643, 4.74122, 0.98", "4.20183, -58.419, 4.85395, 1.12", "4.28467, -59.7082, 5.28729, 1.12", "4.32484, -60.3962, 5.59317, 1.26", "4.36746, -61.079, 5.90525, 1.26", "4.39687, -61.5014, 6.09769, 1.4", "4.41372, -61.802, 6.24043, 1.4", "4.47178, -62.9245, 6.76621, 1.26", "4.5156, -63.5454, 7.01029, 1.26", "4.60342, -64.1487, 7.29533, 1.26", "4.73618, -64.7269, 7.60805, 1.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.45266, -34.0044, 7.82349, 2.24", "1.10181, -34.3367, 6.83657, 2.24", "0.820317, -34.6852, 5.8349, 2.38", "0.53849, -35.0342, 4.83204, 2.52", "0.46934, -35.1198, 4.58598, 2.38", "0.180435, -35.4775, 3.55794, 2.24", "-0.0843249, -35.8053, 2.61582, 2.1", "-0.278237, -36.1627, 1.70908, 1.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.79606, -38.7552, -0.00613543, 0.28", "-2.51991, -53.7378, -0.00613543, 0.28", "-3.24376, -68.7203, -0.00613543, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-8.39532, 25.9759, -2.06469, 0.28", "-8.69518, 27.1419, -2.73335, 0.28", "-9.0299, 28.4167, -3.08733, 0.42", "-9.20041, 29.0601, -3.18302, 0.56", "-9.37234, 29.7055, -3.22092, 0.56", "-9.45927, 30.0301, -3.2227, 0.56", "-9.81339, 31.3513, -3.19149, 0.56", "-9.97038, 31.9934, -3.06732, 0.7", "-9.97038, 31.9934, -3.06732, 0.7", "-10.1018, 32.6244, -2.93727, 0.56", "-10.2151, 33.2849, -2.89414, 0.42", "-10.3111, 33.9444, -2.94213, 0.28", "-10.4051, 34.6753, -3.0878, 0.14", "-10.4819, 35.2987, -3.28358, 0.1", "-10.5615, 35.9198, -3.52196, 0.1", "-10.6878, 37.0573, -4.11602, 0.14", "-10.7454, 37.627, -4.47495, 0.84", "-10.8018, 38.176, -4.86068, 0.7", "-10.9263, 39.2551, -5.70342, 0.56", "-10.9817, 39.768, -6.13839, 0.7", "-11.0988, 40.8291, -7.08192, 0.84", "-11.0988, 40.8291, -7.08192, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-8.39532, 25.9759, -2.06469, 0.56", "-8.37456, 26.2586, -3.25784, 0.56", "-8.34246, 26.538, -4.33525, 0.42", "-8.23255, 27.0835, -6.37651, 0.28", "-8.15772, 27.3783, -7.451, 0.14", "-8.02537, 27.9678, -9.4774, 0.28", "-7.965, 28.29, -10.5038, 0.42", "-7.89499, 28.6775, -11.6199, 0.56", "-7.78396, 29.4691, -13.5534, 0.42", "-7.73994, 29.9501, -14.5137, 0.56", "-7.7191, 30.2728, -15.0703, 0.84", "-7.72702, 30.6151, -15.5393, 0.7", "-7.77317, 30.9865, -15.9783, 0.56", "-7.86102, 31.3709, -16.4029, 0.42", "-8.12181, 32.1101, -17.1264, 0.56", "-8.18905, 32.2938, -17.3366, 0.7", "-8.32771, 32.655, -17.8498, 1.12", "-8.59765, 33.2305, -18.889, 0.98", "-8.81927, 33.6197, -19.9106, 0.84", "-8.96046, 33.7892, -20.518, 0.7", "-9.21959, 34.0037, -21.5425, 0.84", "-9.32961, 34.0752, -21.925, 0.56", "-9.5127, 34.1606, -22.5488, 0.42", "-9.918, 34.3222, -23.6577, 0.56", "-10.2492, 34.4691, -24.3964, 0.28", "-10.7566, 34.748, -25.3512, 0.14", "-11.1893, 35.0333, -25.9817, 0.1", "-11.8039, 35.5449, -26.7558, 0.14", "-12.1687, 35.9097, -27.1513, 0.28", "-12.411, 36.1605, -27.367, 0.14", "-12.7862, 36.5731, -27.6825, 0.1", "-13.0398, 36.8567, -27.8321, 0.14", "-13.3856, 37.2833, -28.0002, 0.84", "-13.64, 37.599, -28.0385, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "2.99262, 17.7758, 1.21703, 1.4", "3.08466, 18.6285, 1.30479, 1.4", "3.15045, 19.0751, 1.28206, 1.4", "3.2675, 19.5093, 1.17828, 1.26", "3.38108, 19.8878, 1.06178, 1.12", "3.43579, 20.0747, 1.0005, 0.98", "3.64612, 20.8472, 0.746908, 0.84", "3.7591, 21.2047, 0.597477, 0.7", "3.99282, 21.9706, 0.267214, 0.56", "4.10149, 22.3385, 0.120898, 0.56", "4.21031, 22.7179, 0.0025351, 0.42", "4.31238, 23.0997, -0.073079, 0.56", "4.35874, 23.2996, -0.0816738, 0.7", "4.45293, 23.6988, -0.0621992, 0.56", "4.55486, 24.1429, 0.00413713, 0.56", "4.65927, 24.5675, 0.119787, 0.7", "4.72756, 24.8368, 0.217385, 0.56", "4.83265, 25.2424, 0.389697, 0.56", "4.93576, 25.6524, 0.575203, 0.56", "5.0011, 25.9019, 0.696344, 0.42", "5.25587, 26.7198, 1.07096, 0.56", "5.39911, 27.1189, 1.23468, 0.7", "5.50713, 27.3729, 1.32772, 0.56", "5.70419, 27.7612, 1.45422, 0.42", "5.9552, 28.1426, 1.52851, 0.28", "6.42444, 28.7415, 1.57319, 0.14", "6.73051, 29.0788, 1.56128, 0.56", "7.03768, 29.4246, 1.57135, 0.42", "7.22379, 29.6453, 1.59446, 0.56", "7.75121, 30.388, 1.79759, 0.7", "7.88094, 30.6263, 1.90502, 0.56", "7.96961, 30.8665, 2.04501, 0.42", "8.165, 31.5781, 2.49239, 0.98", "8.22488, 31.8268, 2.6323, 0.98", "8.39639, 32.5732, 3.02579, 0.84", "8.46641, 32.8366, 3.13777, 0.84", "8.6208, 33.2561, 3.24545, 0.98", "8.79189, 33.6725, 3.30341, 0.84", "9.12285, 34.4665, 3.37133, 0.7", "9.20651, 34.7347, 3.4139, 0.56", "9.40406, 35.5528, 3.60409, 0.7", "9.40406, 35.5528, 3.60409, 0.84", "9.33098, 36.2514, 4.06899, 0.84", "9.20176, 36.9102, 4.61711, 0.7", "9.0487, 37.433, 5.15695, 0.56", "9.01075, 37.568, 5.31072, 0.56", "8.9377, 37.8449, 5.67836, 0.98", "8.91185, 38.118, 6.04747, 0.84", "8.92871, 38.2397, 6.21565, 0.98", "9.08901, 38.6831, 6.85447, 0.42", "9.21193, 38.9429, 7.22094, 0.56", "9.43754, 39.4425, 7.89786, 0.7", "9.55599, 39.7168, 8.24793, 0.56", "9.61058, 39.8544, 8.3934, 0.7", "9.71758, 40.1762, 8.62996, 0.84", "9.81802, 40.5367, 8.77829, 0.56", "9.89894, 40.9279, 8.87438, 0.42", "9.97088, 41.3275, 8.91966, 0.28", "10.0349, 41.7804, 8.95819, 0.42", "10.1093, 42.1749, 8.96576, 0.56", "10.2065, 42.5739, 8.95627, 0.7", "10.2719, 42.7686, 8.95079, 0.56", "10.45, 43.194, 8.94125, 0.84", "10.655, 43.598, 8.94311, 0.84", "11.0589, 44.275, 8.97704, 0.7", "11.3158, 44.6472, 9.01823, 0.56", "11.5827, 45.0196, 9.07444, 0.7", "11.744, 45.2556, 9.11716, 0.7", "11.9915, 45.6346, 9.20568, 0.84", "12.24, 46.0086, 9.28729, 0.7", "12.334, 46.1856, 9.33479, 0.56", "12.4755, 46.5557, 9.44547, 0.42", "12.5633, 46.9823, 9.57284, 0.28", "12.5867, 47.4241, 9.69685, 0.14", "12.5265, 48.1836, 9.88533, 0.28", "12.4046, 49.0192, 10.0782, 0.1", "12.277, 49.8228, 10.2623, 0.1", "12.219, 50.2186, 10.3585, 0.1", "12.1948, 50.4152, 10.4063, 0.14", "12.1575, 50.8136, 10.5011, 0.84", "12.1407, 51.2609, 10.6109, 0.7", "12.19, 51.7041, 10.6844, 0.7", "12.2783, 52.1524, 10.7407, 0.56", "12.3702, 52.5909, 10.7998, 0.56", "12.4128, 52.7898, 10.8273, 0.7", "12.4564, 52.9885, 10.8555, 0.84", "12.5325, 53.387, 10.9039, 0.56", "12.61, 53.8295, 10.9524, 0.42", "12.6802, 54.2295, 10.9964, 0.56", "12.763, 54.678, 11.0488, 0.42", "12.8441, 55.1209, 11.0999, 0.28", "12.9108, 55.5239, 11.1413, 0.42", "12.9812, 55.9767, 11.1846, 0.28", "13.0213, 56.2568, 11.2087, 0.42", "13.0794, 56.7121, 11.2429, 0.56", "13.1213, 57.1198, 11.2662, 0.56", "13.1454, 57.5205, 11.2766, 0.42", "13.1536, 57.9312, 11.2752, 0.56", "13.1372, 58.3912, 11.255, 0.7", "13.1249, 58.7981, 11.1969, 0.84", "13.1249, 58.7981, 11.1969, 0.7", "13.1351, 59.2386, 11.0822, 0.28", "13.1617, 59.6334, 10.9759, 0.14", "13.1978, 60.0226, 10.8713, 0.1", "13.3151, 60.8118, 10.6136, 0.14", "13.3882, 61.1953, 10.4815, 0.28", "13.5044, 61.6114, 10.316, 0.42", "13.6321, 62.019, 10.1623, 0.56", "13.7466, 62.3908, 10.032, 0.56", "13.9578, 63.1687, 9.79751, 0.56", "14.0353, 63.5608, 9.70885, 0.56", "14.1476, 64.2939, 9.55115, 0.7", "14.2642, 65.0954, 9.33304, 1.12", "14.306, 65.4849, 9.21245, 0.98", "14.3303, 65.8786, 9.09382, 0.84", "14.3189, 66.2734, 8.98446, 0.7", "14.2933, 66.6578, 8.86536, 0.56", "14.2594, 67.3381, 8.59507, 0.42", "14.2708, 67.7504, 8.3746, 0.28", "14.2705, 68.1102, 8.19001, 0.14", "14.2624, 68.537, 8.00046, 0.1", "14.231, 68.926, 7.90016, 0.1", "14.1267, 69.7561, 7.87248, 0.14", "14.1267, 69.7561, 7.87248, 0.28", "14.0235, 70.5604, 8.08556, 0.28", "13.9826, 70.9943, 8.23759, 0.42", "13.9442, 71.7892, 8.56426, 0.56", "13.9385, 72.2122, 8.74933, 0.56", "13.9391, 72.4011, 8.83116, 0.7", "13.9688, 72.8272, 8.98086, 0.7", "14.0296, 73.2706, 9.08969, 0.56", "14.119, 73.7096, 9.14877, 0.42", "14.2366, 74.1548, 9.1547, 0.28", "14.3424, 74.5515, 9.13779, 0.42", "14.4721, 74.9816, 9.07235, 0.28", "14.5965, 75.3629, 8.97949, 0.14", "14.8339, 76.0812, 8.75531, 0.1", "14.9561, 76.4469, 8.63035, 0.1", "15.081, 76.8175, 8.50622, 0.14", "15.3299, 77.5844, 8.27178, 0.28", "15.4571, 78.0146, 8.1627, 0.14", "15.5549, 78.4007, 8.09339, 0.28", "15.6434, 78.8511, 8.05432, 0.42", "15.7288, 79.3018, 8.03577, 0.42", "15.7973, 79.6974, 8.04292, 0.28", "15.8636, 80.1498, 8.0831, 0.42", "15.9267, 80.5516, 8.12193, 0.56", "16.0061, 80.9936, 8.17188, 0.56", "16.0413, 81.1926, 8.19398, 0.7", "16.1176, 81.6427, 8.24151, 0.56", "16.1884, 82.0882, 8.28512, 0.42", "16.2669, 82.5404, 8.29349, 0.56", "16.3471, 82.9861, 8.27125, 0.7", "16.4157, 83.3886, 8.22529, 0.84", "16.4834, 83.7873, 8.16389, 0.7", "16.5478, 84.1853, 8.08305, 0.84", "16.6791, 84.9914, 7.89783, 0.7", "16.7485, 85.3868, 7.8082, 0.56", "16.7889, 85.5828, 7.77036, 0.56", "16.9069, 86.0174, 7.72786, 0.7", "16.9069, 86.0174, 7.72786, 0.56", "17.0185, 86.4579, 7.80324, 0.14", "17.0924, 86.8828, 7.93967, 0.1", "17.1225, 87.1562, 8.03397, 0.1", "17.1406, 87.7055, 8.21519, 0.1", "17.1309, 87.9026, 8.27288, 0.14", "17.0816, 88.725, 8.41755, 0.28", "17.0641, 88.9295, 8.42833, 0.42", "17.0457, 89.3794, 8.36394, 0.56", "17.0778, 89.7651, 8.22203, 0.7", "17.1315, 90.1251, 8.04675, 0.56", "17.3069, 90.8523, 7.65916, 0.42", "17.4273, 91.1924, 7.46039, 0.28", "17.6966, 91.89, 7.0706, 0.42", "17.9646, 92.5536, 6.73539, 0.56", "18.224, 93.2904, 6.42562, 0.56", "18.3382, 93.6991, 6.26411, 0.42", "18.3682, 93.8936, 6.20355, 0.28", "18.4032, 94.3286, 6.0729, 0.1", "18.4027, 94.7266, 5.96742, 0.1", "18.3913, 95.12, 5.85274, 0.1", "18.4019, 95.9225, 5.52795, 0.1", "18.3949, 96.2959, 5.35617, 0.1", "18.3792, 96.6628, 5.18245, 0.14", "18.3645, 97.0373, 5.0136, 0.28", "18.3646, 97.2217, 4.92021, 0.42", "18.3711, 97.5841, 4.74135, 0.56", "18.3761, 98.006, 4.56735, 0.84", "18.3877, 98.3799, 4.41044, 0.7", "18.4005, 98.7614, 4.25939, 0.56", "18.4201, 99.5512, 3.9763, 0.42", "18.4263, 99.9432, 3.84957, 0.28", "18.4137, 100.342, 3.75684, 0.14", "18.3916, 100.749, 3.70386, 0.28", "18.3584, 101.149, 3.69441, 0.42", "18.3178, 101.557, 3.73127, 0.56", "18.2936, 101.756, 3.76868, 0.56", "18.2229, 102.57, 3.95313, 0.56", "18.2062, 103.016, 4.06692, 0.42", "18.2349, 103.458, 4.15995, 0.56", "18.3039, 103.907, 4.2344, 0.42", "18.3854, 104.298, 4.29051, 0.28", "18.4627, 104.577, 4.31519, 0.14", "18.6317, 105.006, 4.30414, 0.14", "18.9737, 105.792, 4.23753, 0.28", "18.9737, 105.792, 4.23753, 0.42" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "2.99262, 17.7758, 1.21703, 1.26", "3.99981, 18.187, 0.967657, 1.26", "4.34377, 18.303, 0.868376, 1.4", "4.86326, 18.4942, 0.668495, 1.54", "5.32345, 18.6815, 0.486165, 1.4", "6.18139, 19.0372, 0.170927, 1.26", "7.12177, 19.4651, -0.148286, 1.12", "7.58086, 19.674, -0.315456, 0.98", "8.60351, 20.1701, -0.701621, 0.84", "8.91967, 20.3348, -0.818903, 0.7", "9.35363, 20.5996, -0.958832, 0.56", "9.82833, 20.9375, -1.05721, 0.7", "10.2801, 21.3139, -1.10781, 0.56", "11.096, 22.0517, -1.17209, 0.7", "11.2893, 22.2303, -1.17522, 0.7", "11.7184, 22.6326, -1.19703, 0.1", "11.976, 22.8887, -1.219, 0.1", "12.5062, 23.4159, -1.25497, 0.1", "12.5062, 23.4159, -1.25497, 0.14", "12.8956, 24.0292, -1.0907, 0.1", "13.0814, 24.3297, -1.012, 0.1", "13.2817, 24.6297, -0.928163, 0.1", "13.4329, 24.8346, -0.865822, 0.1", "13.823, 25.27, -0.810869, 0.7", "14.0852, 25.5221, -0.801951, 0.56", "14.6597, 26.004, -0.790854, 0.42", "14.9442, 26.2321, -0.783302, 0.28", "15.4114, 26.5916, -0.762609, 0.42", "16.1964, 27.1646, -0.713593, 0.98", "16.6953, 27.4793, -0.671875, 0.84", "17.1465, 27.7462, -0.622263, 0.7", "17.4696, 27.9287, -0.573188, 0.56", "17.9688, 28.2155, -0.466587, 0.42", "18.4526, 28.5133, -0.326734, 0.28", "18.8715, 28.7929, -0.166288, 0.42", "19.1642, 28.9962, -0.0538563, 0.28", "19.6218, 29.3142, 0.121962, 0.14", "20.0955, 29.6195, 0.302888, 0.28", "20.3981, 29.8068, 0.418174, 0.14", "20.8747, 30.0942, 0.59939, 0.1", "21.3553, 30.3869, 0.78223, 0.14", "21.7857, 30.6426, 0.945736, 0.28", "22.2188, 30.8936, 1.10998, 0.42", "22.7124, 31.1865, 1.25383, 0.28", "23.2091, 31.4897, 1.31467, 0.14", "23.5207, 31.6915, 1.2697, 0.1", "23.9585, 31.9823, 1.00931, 0.1", "24.1403, 32.1061, 0.860721, 0.14", "24.862, 32.6076, 0.181465, 0.84", "25.5108, 33.0554, -0.459083, 0.98", "26.1631, 33.5022, -1.09657, 0.84", "27.4163, 34.3628, -2.27294, 0.84", "27.8114, 34.6346, -2.62323, 0.7", "28.0676, 34.8096, -2.81926, 0.56", "28.5331, 35.1071, -3.0525, 0.42", "29.0294, 35.4056, -3.13917, 0.28", "29.3574, 35.58, -3.09089, 0.14", "29.5919, 35.6813, -3.02872, 0.28", "29.8382, 35.7702, -2.98407, 0.7", "30.3377, 35.9332, -2.9208, 0.56", "30.8333, 36.0934, -2.87534, 0.42", "31.3317, 36.2667, -2.83827, 0.28", "32.341, 36.6585, -2.84261, 0.28", "32.6755, 36.8087, -2.85865, 0.56", "33.2011, 37.0725, -2.93422, 0.42", "33.7063, 37.3525, -3.0343, 0.28", "34.0246, 37.5457, -3.10511, 0.42", "34.939, 38.1399, -3.29469, 0.56", "35.4193, 38.4657, -3.36609, 0.56", "36.3307, 39.0856, -3.49129, 0.56", "36.8143, 39.4102, -3.54343, 0.56", "37.1205, 39.6237, -3.55951, 0.7", "37.5903, 39.9698, -3.54087, 0.56", "38.0477, 40.3399, -3.49661, 0.42", "38.328, 40.584, -3.47226, 0.28", "38.7203, 40.9354, -3.46797, 0.28", "39.1546, 41.317, -3.5147, 0.1", "39.4376, 41.5484, -3.58985, 0.1", "40.3375, 42.2616, -3.92913, 0.14", "40.6189, 42.4768, -4.04901, 0.28", "41.4716, 43.0844, -4.40879, 0.42", "41.9349, 43.3785, -4.61506, 0.28", "42.7487, 43.8084, -4.94903, 0.28", "43.0761, 43.955, -5.06079, 0.56", "43.6162, 44.1527, -5.18413, 0.42", "44.1176, 44.3069, -5.2571, 0.28", "45.1569, 44.6153, -5.28429, 0.14", "45.6623, 44.7718, -5.26479, 0.28", "46.1606, 44.9444, -5.19792, 0.14", "46.6401, 45.1282, -5.11888, 0.1", "47.1213, 45.3424, -5.05542, 0.14", "47.7748, 45.6914, -4.97194, 0.28", "48.0934, 45.8812, -4.92214, 0.14", "48.5846, 46.1931, -4.86386, 0.1", "48.899, 46.393, -4.83289, 0.1", "49.8338, 46.978, -4.74372, 0.14", "50.3386, 47.2694, -4.68957, 0.28", "50.8062, 47.5105, -4.62647, 0.42", "51.3261, 47.7658, -4.53472, 0.56", "51.7942, 47.986, -4.43003, 0.42", "52.3243, 48.2276, -4.319, 0.28", "52.7932, 48.4459, -4.21361, 0.14", "53.3257, 48.7022, -4.16677, 0.28", "53.8471, 48.97, -4.17609, 0.42", "54.0766, 49.1002, -4.1989, 0.56", "55.006, 49.6852, -4.33768, 0.7", "55.4889, 50.0037, -4.42531, 0.84", "56.3042, 50.5816, -4.58409, 0.7", "56.7753, 50.918, -4.66506, 0.7", "57.2575, 51.2556, -4.71543, 0.56", "57.7438, 51.5799, -4.70843, 0.42", "57.9684, 51.7131, -4.66595, 0.28", "58.292, 51.8795, -4.57616, 0.1", "58.7511, 52.077, -4.405, 0.1", "59.2231, 52.2403, -4.2307, 0.1", "59.6886, 52.3817, -4.01519, 0.1", "60.1375, 52.5238, -3.77311, 0.14", "60.63, 52.6865, -3.48202, 0.28", "61.0424, 52.8253, -3.18028, 0.28", "61.4342, 52.9643, -2.84823, 0.28", "62.2252, 53.2464, -2.11736, 0.28", "62.635, 53.3969, -1.72253, 0.42", "63.0008, 53.5389, -1.36317, 0.28", "63.7478, 53.8426, -0.647415, 0.14", "64.124, 54.0128, -0.312752, 0.1", "64.5139, 54.204, -0.011892, 0.14", "64.9699, 54.4423, 0.269766, 0.28", "65.2614, 54.6123, 0.432396, 0.42", "65.7207, 54.914, 0.652275, 0.28", "66.1936, 55.2409, 0.788062, 0.28", "66.663, 55.5735, 0.888598, 0.42", "66.9691, 55.7823, 0.93702, 0.56", "67.4574, 56.0987, 0.99353, 0.7", "67.9537, 56.4051, 1.03946, 0.7", "68.9025, 56.9764, 1.1157, 0.84", "69.1273, 57.1096, 1.13564, 0.98", "69.5808, 57.3771, 1.18857, 0.7", "69.9032, 57.5601, 1.24053, 0.56", "70.4085, 57.8352, 1.35076, 0.42", "70.9135, 58.0939, 1.49768, 0.28", "71.4059, 58.3461, 1.7293, 0.14", "71.8732, 58.592, 1.98405, 0.1", "72.2849, 58.8069, 2.23479, 0.14", "72.6816, 59.0189, 2.49838, 0.28", "73.0687, 59.242, 2.77887, 0.42", "73.8958, 59.7522, 3.31789, 0.56", "74.1726, 59.9423, 3.4742, 0.56", "74.3709, 60.0905, 3.5351, 0.56", "74.8321, 60.4444, 3.57161, 0.56", "75.1294, 60.6689, 3.54917, 0.42", "76.0287, 61.2953, 3.40259, 0.28", "76.3404, 61.4926, 3.33922, 0.14", "77.298, 62.0381, 3.19211, 0.1", "77.7612, 62.2734, 3.15092, 0.1", "78.3016, 62.5032, 3.14721, 0.14", "78.7934, 62.6873, 3.22779, 0.28", "79.3211, 62.8586, 3.42304, 0.42", "79.7826, 62.9864, 3.64963, 0.56", "80.2234, 63.1028, 3.92491, 0.42", "80.6716, 63.2258, 4.1792, 0.28", "81.6087, 63.4989, 4.65187, 0.14", "82.0858, 63.6589, 4.81549, 0.28", "82.5649, 63.8438, 4.91018, 0.42", "82.9018, 63.9985, 4.93465, 0.56", "83.8864, 64.5148, 4.91347, 0.42", "84.394, 64.795, 4.82773, 0.28", "85.3271, 65.3352, 4.56974, 0.14", "85.6372, 65.5245, 4.47857, 0.1", "86.1205, 65.8286, 4.34868, 0.1", "86.6143, 66.1402, 4.25268, 0.1", "87.4251, 66.677, 4.1861, 0.14", "87.7355, 66.8835, 4.15764, 0.1", "88.2163, 67.2264, 4.13014, 0.1", "88.6907, 67.5762, 4.09837, 0.1", "89.1509, 67.9293, 4.03149, 0.1", "89.4344, 68.1663, 3.98023, 0.14", "90.2508, 68.8955, 3.84992, 0.28", "90.6755, 69.2889, 3.73045, 0.14", "91.0785, 69.6823, 3.57989, 0.1", "91.744, 70.382, 3.29469, 0.1", "92.1191, 70.7831, 3.1084, 0.1", "92.4924, 71.1984, 2.9193, 0.1", "93.1761, 72.0023, 2.59382, 0.14", "93.4069, 72.2681, 2.47256, 0.28", "93.7629, 72.6864, 2.28247, 0.42", "94.445, 73.4971, 1.97212, 0.28", "94.8073, 73.9215, 1.8173, 0.14", "95.0465, 74.1863, 1.71113, 0.1", "95.8376, 75.0242, 1.40152, 0.14", "96.0883, 75.2815, 1.3033, 0.28", "96.5861, 75.7944, 1.12471, 0.42", "96.8401, 76.0646, 1.05916, 0.56", "97.5167, 76.7928, 0.918767, 0.56", "97.9036, 77.2344, 0.871054, 0.84", "98.1514, 77.5104, 0.84959, 0.7", "98.5581, 77.9202, 0.805688, 0.56", "98.9982, 78.3107, 0.767277, 0.42", "99.4584, 78.6791, 0.751371, 0.56", "99.7627, 78.8951, 0.766524, 0.7", "100.713, 79.4022, 0.819999, 0.7", "101.202, 79.5995, 0.85852, 0.7", "101.71, 79.746, 0.915928, 0.84", "101.969, 79.8063, 0.934998, 1.26", "102.48, 79.9039, 0.970409, 1.12", "103.0, 80.0103, 1.01635, 0.98", "103.509, 80.1393, 1.08315, 0.84", "104.016, 80.2835, 1.14189, 0.7", "105.07, 80.6265, 1.26374, 0.56", "105.563, 80.8084, 1.32687, 0.42", "106.108, 81.03, 1.40452, 0.28", "106.643, 81.2552, 1.49068, 0.14", "107.114, 81.4744, 1.58405, 0.1", "107.635, 81.7408, 1.67919, 0.1", "108.139, 82.0351, 1.72591, 0.14", "108.357, 82.1829, 1.70173, 0.28", "108.56, 82.3423, 1.64566, 0.42", "108.974, 82.7153, 1.48419, 0.7", "109.644, 83.3819, 1.1329, 0.56", "110.352, 84.1266, 0.719193, 0.56", "110.587, 84.3723, 0.58734, 0.42", "111.08, 84.8754, 0.353629, 0.28", "111.339, 85.1279, 0.262398, 0.14", "112.207, 85.921, 0.0735346, 0.1", "112.487, 86.1666, 0.0662442, 0.1", "112.886, 86.5041, 0.108262, 0.1", "113.335, 86.8804, 0.174754, 0.1", "113.778, 87.2476, 0.267566, 0.1", "114.061, 87.4833, 0.349615, 0.14", "114.497, 87.849, 0.47689, 0.28", "115.053, 88.3176, 0.596498, 0.14", "115.337, 88.5541, 0.640965, 0.1", "115.794, 88.9132, 0.694137, 0.14", "116.272, 89.2679, 0.740993, 0.1", "117.095, 89.8415, 0.822632, 0.1", "117.588, 90.1629, 0.873348, 0.1", "118.039, 90.4301, 0.926303, 0.1", "118.543, 90.7194, 1.00034, 0.1", "119.048, 91.0098, 1.10039, 0.1", "119.54, 91.2969, 1.23668, 0.14", "119.755, 91.4271, 1.31854, 0.28", "119.967, 91.5636, 1.39937, 0.42", "120.253, 91.7624, 1.50932, 0.56", "120.716, 92.1061, 1.63535, 0.42", "121.167, 92.4663, 1.71773, 0.28", "121.604, 92.8487, 1.76978, 0.14", "121.872, 93.1119, 1.7915, 0.1", "122.269, 93.5358, 1.81256, 0.1", "122.983, 94.3741, 1.83518, 0.1", "123.199, 94.665, 1.83881, 0.1", "123.63, 95.2729, 1.80117, 0.1", "123.966, 95.7392, 1.75536, 0.1", "124.195, 96.0297, 1.72674, 0.1", "124.578, 96.46, 1.65515, 0.1", "124.999, 96.8532, 1.53193, 0.1", "125.723, 97.3962, 1.16583, 0.1", "126.114, 97.6278, 0.894815, 0.1", "126.508, 97.8298, 0.600806, 0.1", "127.274, 98.1776, 0.0334715, 0.1", "128.061, 98.5052, -0.521564, 0.14", "128.952, 98.8568, -1.09127, 0.1", "129.768, 99.202, -1.51233, 0.1", "130.281, 99.4244, -1.71703, 0.1", "130.756, 99.6297, -1.78061, 0.1", "131.276, 99.8407, -1.60713, 0.1", "131.689, 100.007, -1.31647, 0.1", "132.468, 100.314, -0.583707, 0.1", "132.822, 100.449, -0.213565, 0.1", "133.558, 100.701, 0.542315, 0.1", "133.74, 100.76, 0.724235, 0.1", "134.153, 100.883, 1.13497, 0.1", "134.535, 100.993, 1.48554, 0.1", "134.965, 101.1, 1.78219, 0.1", "135.409, 101.214, 2.04732, 0.1", "135.409, 101.214, 2.04732, 0.14" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.73618, -64.7269, 7.60805, 0.98", "4.95177, -65.1503, 7.56599, 0.98", "5.17838, -65.6344, 7.52225, 0.84", "5.37066, -66.0778, 7.48552, 0.98", "5.57141, -66.573, 7.44758, 1.12", "5.65788, -66.7986, 7.43138, 1.68", "5.82301, -67.2501, 7.4007, 1.54", "5.96637, -67.7089, 7.37488, 1.4", "6.08696, -68.1765, 7.35414, 1.26", "6.19361, -68.645, 7.33647, 1.12", "6.28606, -69.1186, 7.35831, 1.26", "6.37304, -69.5803, 7.40744, 1.12", "6.47686, -70.0972, 7.52687, 0.98", "6.573, -70.546, 7.67258, 0.84", "6.67223, -70.9861, 7.84943, 0.7", "6.88739, -71.8844, 8.26749, 0.84", "6.9961, -72.3067, 8.48051, 0.84", "7.22799, -73.1808, 8.87628, 0.7", "7.35028, -73.6199, 9.0333, 0.84", "7.35028, -73.6199, 9.0333, 0.98", "7.41603, -73.8441, 9.03397, 1.12", "7.56199, -74.3032, 8.98996, 0.98", "7.86651, -75.2354, 8.89795, 0.84", "8.01553, -75.6904, 8.84673, 0.7", "8.19973, -76.1985, 8.81851, 0.56", "8.36555, -76.6492, 8.78047, 0.7", "8.67251, -77.5573, 8.54337, 0.84", "8.81789, -77.9952, 8.40246, 0.98", "8.96932, -78.4334, 8.29329, 0.84", "9.14451, -78.9385, 8.20452, 0.98", "9.42534, -79.7797, 8.12389, 1.12", "9.98414, -81.4213, 8.07298, 0.98", "10.2592, -82.2664, 7.99029, 0.84", "10.593, -83.1843, 8.12106, 0.84", "10.9374, -83.9613, 8.63391, 0.98", "11.0973, -84.2808, 8.96472, 0.84", "11.2572, -84.5858, 9.31309, 0.98" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.73618, -64.7269, 7.60805, 1.82", "4.28907, -65.4873, 8.18053, 1.82", "4.07414, -65.9011, 8.48258, 1.68", "3.95926, -66.1564, 8.70177, 1.54", "3.7536, -66.671, 9.14142, 1.4", "3.6787, -66.8557, 9.29447, 1.26", "3.33304, -67.6248, 9.92243, 0.1", "3.13888, -68.0453, 10.24, 0.1", "2.7798, -68.7482, 10.79, 0.1", "2.55601, -69.1463, 11.1026, 0.14", "2.29485, -69.5345, 11.4039, 0.28", "2.00688, -69.8713, 11.6433, 0.42", "1.76588, -70.0998, 11.7729, 0.28", "1.38744, -70.3909, 11.9301, 0.14", "1.1879, -70.5252, 12.0082, 0.28", "0.829003, -70.7661, 12.2675, 0.56", "0.543298, -71.0166, 12.6021, 0.56", "0.543298, -71.0166, 12.6021, 0.56", "0.543298, -71.0166, 12.6021, 0.56", "0.262172, -71.5603, 13.4661, 0.56", "0.0293616, -72.0794, 14.2476, 0.42", "-0.083994, -72.4082, 14.6833, 0.28", "-0.285259, -73.1009, 15.4566, 0.42", "-0.356892, -73.3543, 15.6835, 0.28", "-0.410458, -73.5566, 15.8213, 0.42", "-0.489689, -73.8763, 15.9602, 0.7", "-0.597644, -74.3843, 16.1376, 0.56", "-0.669447, -74.9103, 16.312, 0.42", "-0.673464, -75.4237, 16.5056, 0.28", "-0.650061, -75.6475, 16.6138, 0.14", "-0.650061, -75.6475, 16.6138, 0.28", "-0.43265, -76.4316, 17.049, 0.1", "-0.278583, -76.8508, 17.2756, 0.14", "0.0834026, -77.7021, 17.7046, 0.1", "0.281835, -78.1252, 17.8847, 0.1", "0.48451, -78.5582, 18.0236, 0.1", "0.692863, -78.9951, 18.1088, 0.1", "0.931582, -79.5002, 18.1341, 0.1", "1.04343, -79.7237, 18.1279, 0.28", "1.29186, -80.2146, 18.0711, 0.14", "1.52222, -80.6432, 18.0182, 0.1", "1.79179, -81.1371, 17.9561, 0.1", "2.02779, -81.5625, 17.9016, 0.1", "2.2927, -82.0523, 17.7988, 0.14", "2.50942, -82.4767, 17.6863, 0.1", "2.72636, -82.9643, 17.5398, 0.14", "2.90041, -83.4101, 17.395, 0.1", "3.05367, -83.9151, 17.2315, 0.1", "3.28703, -84.893, 16.9258, 0.1", "3.34483, -85.2242, 16.8313, 0.28", "3.41515, -85.7582, 16.6882, 0.14", "3.45265, -86.2384, 16.5714, 0.1", "3.479, -86.7754, 16.4656, 0.1", "3.49033, -87.267, 16.409, 0.1", "3.51807, -87.7635, 16.4091, 0.14", "3.5499, -88.0102, 16.4045, 0.28", "3.59644, -88.2545, 16.3961, 0.28", "3.70466, -88.7401, 16.3754, 0.42", "3.76573, -88.9789, 16.3632, 0.42", "3.88691, -89.4527, 16.339, 0.28", "3.99704, -89.9354, 16.3177, 0.14", "4.10081, -90.422, 16.2982, 0.1", "4.18963, -90.909, 16.2825, 0.14", "4.26744, -91.4003, 16.2697, 0.1", "4.31912, -91.8909, 16.2271, 0.1", "4.35399, -92.4324, 16.1531, 0.1", "4.37252, -92.9198, 16.0676, 0.1", "4.38642, -93.4665, 15.9557, 0.1", "4.39612, -93.9494, 15.8782, 0.1", "4.40715, -94.9878, 15.7656, 0.1", "4.40772, -95.4844, 15.7402, 0.1", "4.40437, -95.9791, 15.7448, 0.1", "4.38924, -96.4663, 15.7812, 0.14", "4.3556, -97.4076, 15.9088, 0.1", "4.33528, -97.9548, 16.0153, 0.1", "4.32425, -98.4754, 16.1872, 0.14", "4.31013, -99.0001, 16.3792, 0.1", "4.30436, -99.5004, 16.6059, 0.1", "4.30897, -99.7229, 16.7138, 0.14", "4.34086, -100.176, 16.9227, 0.28", "4.44888, -101.022, 17.3521, 0.1", "4.52282, -101.446, 17.5842, 0.1", "4.71718, -102.349, 18.083, 0.1", "4.82116, -102.782, 18.3055, 0.1", "4.92793, -103.223, 18.5085, 0.1", "4.98711, -103.444, 18.6084, 0.14", "4.98711, -103.444, 18.6084, 0.28", "5.13735, -103.868, 18.8084, 0.28", "5.3052, -104.287, 19.0201, 0.28", "5.3052, -104.287, 19.0201, 0.42", "5.66352, -105.001, 19.4879, 0.1", "5.85913, -105.378, 19.7523, 0.1", "6.26449, -106.132, 20.3154, 0.1", "6.46638, -106.484, 20.6098, 0.1", "6.61274, -106.727, 20.825, 0.1", "6.61274, -106.727, 20.825, 0.1" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.278237, -36.1627, 1.70908, 0.56", "-0.609093, -36.4231, 1.35948, 0.56", "-0.995807, -36.7045, 0.972593, 0.42", "-1.3883, -36.9627, 0.585093, 0.28", "-2.15443, -37.4019, -0.156009, 0.7", "-2.86581, -37.6905, -0.879999, 0.84", "-3.56689, -37.7689, -1.66732, 0.98", "-4.17436, -37.5961, -2.60036, 1.12", "-4.4795, -37.4267, -3.11176, 1.26", "-4.75307, -37.237, -3.55151, 1.12", "-5.30821, -36.8378, -4.30363, 0.98", "-6.00542, -36.4651, -5.14453, 0.84", "-6.6163, -36.2353, -5.87678, 0.7", "-6.96868, -36.149, -6.29398, 0.56", "-7.32857, -36.0894, -6.70606, 0.56", "-7.68293, -36.0242, -7.11311, 0.56", "-8.34691, -35.8354, -7.91105, 0.7", "-8.49673, -35.7739, -8.1316, 0.84", "-8.82608, -35.6062, -8.6269, 1.26", "-9.40629, -35.2918, -9.53249, 1.12", "-10.0029, -34.9514, -10.4655, 0.98", "-10.533, -34.6427, -11.2749, 1.12", "-11.0973, -34.3483, -12.0202, 0.98", "-11.8015, -34.0994, -12.8548, 0.84", "-12.3675, -34.3086, -12.9852, 0.7", "-13.3744, -34.8703, -12.9426, 0.56", "-13.7126, -35.0392, -12.9867, 0.42", "-14.1918, -35.1186, -13.3692, 0.56", "-14.3581, -35.113, -13.5902, 0.56", "-14.9857, -35.0452, -14.5642, 0.56", "-15.4692, -34.9377, -15.4965, 0.42", "-15.884, -34.8059, -16.4596, 0.28", "-16.2536, -34.6627, -17.4359, 0.14", "-16.5857, -34.5282, -18.35, 0.1", "-16.9525, -34.3951, -19.3322, 0.84", "-17.662, -34.204, -21.1746, 0.7", "-18.4218, -34.0595, -23.0013, 0.56", "-18.8271, -34.0233, -23.8953, 0.7", "-19.0648, -34.0204, -24.3813, 0.56", "-19.3371, -34.0272, -24.8628, 0.56", "-19.9759, -34.0622, -25.7894, 0.42", "-20.3739, -34.0796, -26.1732, 0.28", "-21.2755, -34.0181, -26.7158, 0.42", "-21.5076, -33.9463, -26.8413, 0.56", "-21.9885, -33.6838, -27.1236, 0.28", "-22.4451, -33.3573, -27.3725, 0.14", "-22.892, -33.0185, -27.6047, 0.28", "-23.3602, -32.7009, -27.8438, 0.42", "-24.252, -32.2279, -28.3309, 0.56", "-24.252, -32.2279, -28.3309, 0.7", "-24.6923, -32.2091, -28.6653, 2.1", "-25.5406, -32.3694, -29.3873, 1.96", "-25.9097, -32.5295, -29.7513, 1.82", "-26.5752, -32.8965, -30.4261, 1.68", "-26.9754, -33.1605, -30.8235, 0.7", "-27.6846, -33.6662, -31.5742, 0.56", "-27.9028, -33.8493, -31.839, 0.56", "-28.4789, -34.4714, -32.6127, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.278237, -36.1627, 1.70908, 0.7", "-0.285471, -36.5914, 1.70973, 0.7", "-0.290703, -36.8917, 1.71015, 0.56", "-0.289545, -37.3711, 1.71302, 0.42", "-0.271479, -37.7959, 1.67583, 0.28", "-0.247269, -38.2665, 1.64912, 0.14", "-0.226156, -38.6923, 1.66682, 0.1", "-0.195913, -39.167, 1.72869, 0.1", "-0.163607, -39.5769, 1.81341, 0.1", "-0.0961481, -40.3389, 2.01988, 0.14", "-0.0250617, -41.0922, 2.25645, 0.42", "0.0707393, -41.9153, 2.53782, 0.28", "0.114326, -42.3184, 2.67463, 0.14", "0.165989, -42.7657, 2.81963, 0.1", "0.220896, -43.1798, 2.90949, 0.14", "0.290735, -43.6025, 2.93351, 0.1", "0.375018, -44.0131, 2.84949, 0.1", "0.467359, -44.4462, 2.68079, 0.1", "0.548278, -44.8276, 2.50188, 0.1", "0.701038, -45.5973, 2.106, 0.1", "0.815472, -46.2639, 1.7463, 0.14", "0.855042, -46.528, 1.59872, 0.56", "0.912301, -46.946, 1.37798, 0.42", "0.962219, -47.332, 1.19816, 0.28", "1.00388, -47.7872, 1.04967, 0.42", "1.01834, -48.0003, 1.03034, 0.56", "1.01834, -48.0003, 1.03034, 0.42", "1.09255, -48.4129, 1.04973, 0.84", "1.09255, -48.4129, 1.04973, 0.7", "1.16004, -48.6167, 1.03995, 0.28", "1.3185, -49.0118, 0.992897, 0.14", "1.48504, -49.4037, 0.92897, 0.1", "1.65442, -49.7909, 0.857456, 0.1", "1.82662, -50.1783, 0.780973, 0.1", "2.18419, -50.9911, 0.627526, 0.14", "2.27113, -51.1815, 0.576146, 0.28", "2.35832, -51.3661, 0.513015, 0.1", "2.52891, -51.7361, 0.395409, 0.1", "2.70257, -52.1171, 0.302365, 0.1", "2.87034, -52.511, 0.257396, 0.1", "3.17021, -53.244, 0.30051, 0.14", "3.17021, -53.244, 0.30051, 0.1", "3.4812, -53.9668, 0.408608, 0.28", "3.66028, -54.4001, 0.491873, 0.14", "3.81233, -54.793, 0.580198, 0.1", "3.96744, -55.2304, 0.686081, 0.1", "4.02696, -55.4315, 0.733892, 0.14", "4.09721, -55.7239, 0.776392, 0.28", "4.17878, -56.1351, 0.797476, 0.14", "4.23123, -56.5606, 0.811909, 0.1", "4.25991, -56.9862, 0.820846, 0.14", "4.26684, -57.4656, 0.825046, 0.1", "4.26665, -57.9389, 0.827568, 0.1", "4.26923, -58.3677, 0.830489, 0.1", "4.26103, -58.8475, 0.861329, 0.1", "4.25082, -59.3155, 0.922473, 0.1", "4.25097, -59.7871, 1.01833, 0.14", "4.26269, -59.9938, 1.07552, 0.28", "4.28606, -60.1967, 1.14239, 0.42", "4.40827, -60.9356, 1.40259, 0.56", "4.50979, -61.3405, 1.5056, 0.42", "4.63329, -61.7383, 1.56299, 0.28", "4.77907, -62.1421, 1.53885, 0.14", "4.92192, -62.5428, 1.49207, 0.28", "5.05688, -62.9493, 1.45458, 0.14", "5.33226, -63.7761, 1.37622, 0.1", "5.4698, -64.1833, 1.36883, 0.1", "5.74855, -65.0072, 1.4226, 0.1", "5.99784, -65.7517, 1.5349, 0.1", "6.26368, -66.5643, 1.72413, 0.1", "6.3964, -66.9552, 1.84675, 0.1", "6.52251, -67.3722, 2.04077, 0.14", "6.62845, -67.7431, 2.22926, 0.28", "6.72984, -68.1157, 2.42175, 0.14", "6.83991, -68.5014, 2.57286, 0.1", "6.9548, -68.9461, 2.71569, 0.14", "7.12062, -69.7126, 2.95854, 0.1", "7.19336, -70.1187, 3.07934, 0.1", "7.25482, -70.5277, 3.18762, 0.1", "7.31011, -70.9435, 3.27955, 0.1", "7.36919, -71.4071, 3.3573, 0.14", "7.41725, -71.8312, 3.40038, 0.1", "7.47418, -72.254, 3.41583, 0.1", "7.54116, -72.7287, 3.4009, 0.1", "7.60465, -73.1419, 3.36405, 0.14", "7.67829, -73.5588, 3.30646, 0.28", "7.7768, -74.0218, 3.22583, 0.28", "7.87198, -74.4307, 3.14469, 0.14", "8.06795, -75.1834, 2.9906, 0.28", "8.12543, -75.3794, 2.95298, 0.56", "8.263, -75.7732, 2.85566, 0.42", "8.41692, -76.1619, 2.75183, 0.28", "8.58237, -76.5453, 2.65435, 0.14", "8.7498, -76.9334, 2.57088, 0.1", "8.91394, -77.3246, 2.51121, 0.1", "9.26262, -78.1442, 2.37717, 0.14", "9.43105, -78.5348, 2.30946, 0.28", "9.59466, -78.9175, 2.24539, 0.14", "9.77089, -79.3014, 2.15994, 0.28", "9.94966, -79.6801, 2.06659, 0.42", "9.94966, -79.6801, 2.06659, 0.56", "10.0439, -79.8611, 1.99603, 0.56", "10.2342, -80.2076, 1.82558, 0.42", "10.6331, -80.9257, 1.43828, 0.28", "10.8189, -81.2682, 1.2549, 0.14", "11.1649, -81.9185, 0.87827, 0.1", "11.2946, -82.1492, 0.723643, 0.56", "11.4742, -82.4719, 0.515693, 0.42", "11.6543, -82.8112, 0.320685, 0.56", "11.8261, -83.1753, 0.164434, 0.7", "12.1951, -83.9095, -0.148671, 0.56", "12.5703, -84.5769, -0.460412, 0.42", "12.9632, -85.1867, -0.795825, 0.42", "13.1716, -85.4971, -1.01214, 0.56", "13.3745, -85.801, -1.24279, 0.56", "13.774, -86.4568, -1.73223, 0.42", "14.1422, -87.1467, -2.19069, 0.28", "14.2225, -87.3177, -2.29633, 0.98", "14.5421, -88.0374, -2.74188, 0.84", "14.6841, -88.3976, -2.93366, 0.7", "14.8259, -88.8276, -3.10273, 0.56", "14.9297, -89.2363, -3.18622, 0.42", "15.0078, -89.6486, -3.19081, 0.28", "15.0806, -90.0691, -3.14539, 0.14", "15.1487, -90.4805, -3.05139, 0.28", "15.2164, -90.8909, -2.94362, 0.14", "15.2872, -91.2965, -2.82773, 0.1", "15.4328, -92.1471, -2.57975, 0.1", "15.5111, -92.5509, -2.4621, 0.1", "15.6073, -92.9519, -2.34811, 0.1", "15.7215, -93.3526, -2.24105, 0.1", "15.8466, -93.7513, -2.14868, 0.1", "15.9844, -94.1452, -2.07994, 0.1", "16.1592, -94.5918, -2.03711, 0.1", "16.3285, -95.0344, -1.99556, 0.1", "16.4025, -95.2355, -1.97737, 0.1", "16.5059, -95.5132, -1.95196, 0.84", "16.6529, -95.9135, -1.91581, 0.7", "16.8046, -96.3143, -1.87857, 0.56", "16.9552, -96.7133, -1.84161, 0.42", "17.1079, -97.1058, -1.80416, 0.28", "17.2904, -97.5514, -1.79651, 0.14", "17.4526, -97.9363, -1.84935, 0.1", "17.6239, -98.3633, -2.01163, 0.14", "17.6843, -98.537, -2.11033, 0.7", "17.7801, -98.8686, -2.36873, 0.56", "17.9446, -99.5022, -3.00417, 0.42", "18.0709, -100.103, -3.67388, 0.28", "18.1656, -100.627, -4.31363, 0.14", "18.2094, -100.936, -4.68915, 0.1", "18.2865, -101.529, -5.37339, 0.1", "18.3495, -102.088, -5.94405, 0.1", "18.3898, -102.477, -6.23193, 0.14", "18.461, -103.308, -6.56623, 0.28", "18.5388, -104.081, -6.71728, 0.1", "18.5995, -104.5, -6.79043, 0.1", "18.7599, -105.342, -6.9636, 0.1", "18.8545, -105.745, -7.07926, 0.1", "18.9734, -106.165, -7.26763, 0.14", "19.2041, -106.905, -7.6852, 0.28", "19.437, -107.608, -8.16219, 0.42", "19.6365, -108.232, -8.61876, 0.56", "19.6886, -108.399, -8.7434, 0.7", "19.7594, -108.644, -8.8989, 0.28", "19.8645, -109.015, -9.09321, 0.14", "19.9508, -109.411, -9.23253, 0.1", "20.0246, -109.865, -9.34366, 0.1", "20.0752, -110.28, -9.42745, 0.1", "20.1141, -110.698, -9.51823, 0.1", "20.1794, -111.534, -9.76815, 0.14", "20.196, -111.82, -9.86972, 0.1", "20.2181, -112.262, -10.0416, 0.1", "20.2353, -112.71, -10.2181, 0.1", "20.2462, -113.154, -10.3839, 0.1", "20.2672, -113.994, -10.714, 0.1", "20.2846, -114.396, -10.8608, 0.14", "20.3031, -114.59, -10.9339, 0.1", "20.3671, -115.038, -11.1006, 0.1", "20.4378, -115.43, -11.2635, 0.1", "20.6074, -116.247, -11.6024, 0.1", "20.6968, -116.629, -11.7804, 0.14", "20.7911, -116.996, -11.9838, 0.28", "20.9005, -117.355, -12.1987, 0.28", "21.165, -118.09, -12.6525, 0.14", "21.3047, -118.432, -12.8793, 0.1", "21.5786, -119.037, -13.2652, 0.14", "21.6539, -119.206, -13.3738, 0.56", "21.8226, -119.596, -13.6054, 0.56", "21.9637, -119.96, -13.7845, 0.42", "22.215, -120.756, -14.0561, 0.56", "22.3164, -121.157, -14.1644, 0.42", "22.3981, -121.615, -14.2467, 0.28", "22.4517, -122.034, -14.3109, 0.14", "22.488, -122.509, -14.3683, 0.1", "22.5141, -122.981, -14.3982, 0.1", "22.5283, -123.195, -14.3937, 0.1", "22.5825, -123.672, -14.3786, 0.1", "22.667, -124.093, -14.3568, 0.14", "22.723, -124.297, -14.3427, 0.56", "22.8623, -124.695, -14.3084, 0.42", "23.0458, -125.134, -14.3025, 0.28", "23.2154, -125.529, -14.3219, 0.14", "23.4068, -125.963, -14.3652, 0.1", "23.5634, -126.358, -14.4218, 0.1", "23.7045, -126.758, -14.4894, 0.1", "23.9638, -127.567, -14.7037, 0.1", "24.0437, -127.846, -14.7951, 0.84", "24.1485, -128.233, -14.9324, 0.7", "24.2612, -128.675, -15.0892, 0.56", "24.3648, -129.073, -15.2177, 0.42", "24.5999, -129.889, -15.4303, 0.28", "24.7244, -130.285, -15.4971, 0.14", "24.867, -130.687, -15.5519, 0.1", "25.0238, -131.084, -15.5895, 0.1", "25.195, -131.478, -15.606, 0.1", "25.3796, -131.917, -15.5984, 0.1", "25.5377, -132.315, -15.5597, 0.1", "25.6827, -132.716, -15.524, 0.1", "25.828, -133.167, -15.488, 0.14", "25.8898, -133.373, -15.491, 0.28", "25.9683, -133.658, -15.518, 0.28", "26.0699, -134.069, -15.583, 0.14", "26.1825, -134.527, -15.6736, 0.1", "26.2828, -134.933, -15.7611, 0.1", "26.4856, -135.761, -15.9498, 0.14", "26.536, -135.962, -15.9956, 0.28", "26.6439, -136.369, -16.0814, 0.1", "26.7502, -136.777, -16.1546, 0.1", "26.8654, -137.182, -16.2425, 0.14", "26.8654, -137.182, -16.2425, 0.28", "26.9275, -137.471, -16.2983, 0.28", "27.0147, -137.881, -16.3918, 0.28", "27.1091, -138.277, -16.5275, 0.42", "27.3178, -139.067, -16.8463, 0.42", "27.4056, -139.328, -16.9782, 0.1", "27.5413, -139.679, -17.1716, 0.1", "27.6932, -140.028, -17.3724, 0.1", "28.0314, -140.735, -17.7752, 0.1", "28.2084, -141.084, -17.9552, 0.1", "28.6177, -141.833, -18.2621, 0.1", "28.7208, -142.01, -18.3245, 0.1", "28.941, -142.36, -18.4489, 0.1", "29.1907, -142.75, -18.5697, 0.14", "29.4155, -143.11, -18.6485, 0.1", "29.66, -143.507, -18.7566, 0.1", "29.8717, -143.866, -18.8591, 0.1", "30.3247, -144.609, -19.1146, 0.1", "30.5446, -144.955, -19.248, 0.1", "30.7665, -145.292, -19.3826, 0.1", "31.2527, -145.977, -19.648, 0.14", "31.3785, -146.145, -19.7035, 0.28", "31.5626, -146.369, -19.7778, 0.1", "31.8693, -146.731, -19.876, 0.1", "32.1911, -147.082, -19.9721, 0.1", "32.401, -147.301, -20.0215, 0.1", "32.7337, -147.644, -20.0662, 0.1", "33.292, -148.213, -20.1403, 0.1", "33.4393, -148.371, -20.1596, 0.1", "33.7526, -148.732, -20.1959, 0.1", "34.0478, -149.108, -20.2179, 0.1", "34.323, -149.505, -20.2193, 0.1", "34.4763, -149.759, -20.1815, 0.14", "34.6695, -150.129, -20.0742, 0.56", "34.8377, -150.505, -19.952, 0.42", "34.9691, -150.893, -19.8212, 0.28", "35.0698, -151.288, -19.6896, 0.14", "35.2339, -152.04, -19.5072, 0.1", "35.3274, -152.456, -19.4751, 0.1", "35.423, -152.873, -19.5075, 0.1", "35.5229, -153.333, -19.6093, 0.1", "35.6065, -153.727, -19.7396, 0.1", "35.762, -154.526, -20.0653, 0.1", "35.9107, -155.312, -20.4238, 0.1", "35.9571, -155.581, -20.5596, 0.56", "36.0261, -155.999, -20.7732, 0.42", "36.0899, -156.382, -20.9551, 0.28", "36.1577, -156.825, -21.1309, 0.14", "36.2038, -157.241, -21.2185, 0.1", "36.2937, -158.13, -21.2913, 0.14", "36.3383, -158.554, -21.302, 0.28", "36.3828, -158.978, -21.2895, 0.14", "36.4174, -159.404, -21.2557, 0.1", "36.4783, -160.297, -21.202, 0.1", "36.4907, -160.725, -21.1803, 0.1", "36.4933, -161.205, -21.1523, 0.1", "36.4844, -161.627, -21.162, 0.1", "36.4633, -162.105, -21.2122, 0.1", "36.41, -162.909, -21.3632, 0.14", "36.3884, -163.196, -21.4389, 0.28", "36.333, -163.607, -21.5424, 0.14", "36.2576, -164.07, -21.6464, 0.28", "36.1684, -164.528, -21.7288, 0.42", "36.1127, -164.824, -21.7621, 0.28", "36.0274, -165.289, -21.7793, 0.14", "35.9331, -165.892, -21.7978, 0.1", "35.905, -166.097, -21.8032, 0.1", "35.8608, -166.574, -21.8108, 0.1", "35.8472, -167.001, -21.8117, 0.1", "35.8653, -167.472, -21.8049, 0.1", "35.9123, -167.896, -21.7918, 0.1", "35.9454, -168.108, -21.783, 0.1", "35.9808, -168.317, -21.7736, 0.1", "36.0621, -168.738, -21.7526, 0.1", "36.1453, -169.157, -21.7677, 0.14", "36.2343, -169.575, -21.8092, 0.28", "36.3317, -170.034, -21.8751, 0.14", "36.421, -170.449, -21.9441, 0.1", "36.5107, -170.859, -22.0217, 0.1", "36.6777, -171.73, -22.1563, 0.1", "36.7494, -172.149, -22.1996, 0.1", "36.8171, -172.573, -22.2137, 0.1", "36.8753, -172.995, -22.1923, 0.1", "36.8753, -172.995, -22.1923, 0.1", "36.9249, -173.793, -22.0221, 0.1", "36.9433, -174.205, -21.9065, 0.1", "36.9615, -174.621, -21.8035, 0.1", "36.9892, -175.098, -21.7472, 0.1", "37.026, -175.518, -21.745, 0.14", "37.0855, -175.994, -21.7845, 0.28", "37.1561, -176.411, -21.8547, 0.42", "37.225, -176.826, -21.9325, 0.28", "37.3765, -177.694, -22.1, 0.14", "37.4567, -178.107, -22.1758, 0.1", "37.5403, -178.521, -22.2432, 0.1", "37.6311, -178.937, -22.2962, 0.1", "37.723, -179.4, -22.3371, 0.1", "37.8011, -179.822, -22.3498, 0.14", "37.8767, -180.242, -22.33, 0.1", "37.9439, -180.665, -22.3122, 0.14", "38.0066, -181.087, -22.2954, 0.28", "38.0506, -181.38, -22.2837, 0.1", "38.1196, -181.801, -22.2654, 0.1", "38.1892, -182.224, -22.2471, 0.1", "38.27, -182.69, -22.2259, 0.1", "38.3498, -183.111, -22.2051, 0.1", "38.4304, -183.53, -22.1842, 0.1", "38.5169, -183.95, -22.162, 0.1", "38.5948, -184.369, -22.1417, 0.1", "38.6691, -184.79, -22.1222, 0.1", "38.7497, -185.204, -22.1321, 0.1", "38.8427, -185.674, -22.1716, 0.1", "38.9283, -186.091, -22.2256, 0.1", "39.0273, -186.549, -22.2988, 0.1", "39.1229, -186.962, -22.3718, 0.1", "39.3304, -187.796, -22.5318, 0.1", "39.4412, -188.204, -22.6126, 0.1", "39.5643, -188.606, -22.6877, 0.1", "39.6912, -189.005, -22.75, 0.1", "39.8319, -189.402, -22.8255, 0.1", "39.8319, -189.402, -22.8255, 0.1", "39.9014, -189.603, -22.8567, 0.1", "40.0418, -190.0, -22.933, 0.1", "40.1786, -190.391, -23.0516, 0.1", "40.4481, -191.176, -23.3355, 0.1", "40.5769, -191.559, -23.4805, 0.1", "40.7017, -191.939, -23.6195, 0.1", "40.8257, -192.327, -23.7533, 0.1", "41.0819, -193.154, -24.0085, 0.1", "41.2002, -193.554, -24.1061, 0.1", "41.3132, -193.957, -24.1663, 0.1", "41.4287, -194.366, -24.2137, 0.1", "41.5462, -194.778, -24.2415, 0.1", "41.6648, -195.188, -24.2432, 0.1", "41.7849, -195.598, -24.2132, 0.1", "41.9056, -196.009, -24.1831, 0.1", "42.0233, -196.411, -24.1537, 0.1", "42.1439, -196.823, -24.1236, 0.1", "42.2638, -197.232, -24.0936, 0.1", "42.3844, -197.643, -24.0635, 0.1", "42.5046, -198.052, -24.0335, 0.14", "42.6312, -198.461, -24.0338, 0.1", "42.7704, -198.859, -24.0593, 0.14", "42.9227, -199.256, -24.1062, 0.1", "43.0035, -199.453, -24.137, 0.1", "43.0869, -199.649, -24.1718, 0.1", "43.4313, -200.442, -24.3158, 0.1", "43.6296, -200.875, -24.3868, 0.1", "43.8103, -201.26, -24.4403, 0.14", "43.9911, -201.647, -24.4784, 0.1", "44.165, -202.033, -24.4959, 0.1", "44.333, -202.426, -24.4888, 0.1", "44.5152, -202.872, -24.4818, 0.14", "44.5939, -203.069, -24.493, 0.56", "44.7542, -203.466, -24.5363, 0.42", "44.9077, -203.856, -24.6276, 0.28", "45.0535, -204.242, -24.7511, 0.28", "45.3321, -205.023, -25.039, 0.42", "45.4479, -205.41, -25.165, 0.42", "45.5544, -205.81, -25.2715, 0.28", "45.7567, -206.672, -25.4426, 0.14", "45.8348, -207.089, -25.4909, 0.1", "45.897, -207.512, -25.4981, 0.1", "45.9829, -208.4, -25.4188, 0.14", "46.008, -208.823, -25.3682, 0.28", "46.0247, -209.247, -25.3031, 0.14", "46.0415, -209.712, -25.2142, 0.28", "46.0535, -210.136, -25.1536, 0.14", "46.0726, -210.615, -25.1122, 0.1", "46.1056, -211.086, -25.1021, 0.1", "46.1395, -211.511, -25.0919, 0.1", "46.1835, -211.938, -25.0794, 0.1", "46.2409, -212.407, -25.0636, 0.1", "46.2974, -212.832, -25.0482, 0.1", "46.357, -213.255, -25.0322, 0.1", "46.4173, -213.677, -25.016, 0.1", "46.4752, -214.102, -25.0003, 0.1", "46.5317, -214.572, -24.9847, 0.1", "46.5573, -214.784, -24.9776, 0.1", "46.6104, -215.261, -24.9627, 0.1", "46.659, -215.685, -24.9492, 0.1", "46.7046, -216.104, -24.9364, 0.1", "46.7608, -216.581, -24.9208, 0.1", "46.8208, -217.005, -24.9046, 0.1", "46.8863, -217.427, -24.8872, 0.1", "46.9587, -217.84, -24.8988, 0.1", "47.0436, -218.311, -24.9398, 0.1", "47.1224, -218.727, -24.9972, 0.1", "47.2015, -219.142, -25.0748, 0.1", "47.2739, -219.552, -25.1691, 0.1", "47.421, -220.41, -25.388, 0.1", "47.4572, -220.613, -25.4403, 0.1", "47.4572, -220.613, -25.4403, 0.1", "47.5156, -220.907, -25.4937, 0.1", "47.601, -221.318, -25.5387, 0.1", "47.694, -221.734, -25.5487, 0.1", "47.7759, -222.152, -25.4887, 0.1", "47.8511, -222.564, -25.4059, 0.1", "47.9247, -222.974, -25.3083, 0.1", "47.9985, -223.382, -25.1962, 0.1", "48.0563, -223.781, -25.0767, 0.1", "48.1397, -224.639, -24.8125, 0.1", "48.1723, -225.054, -24.717, 0.1", "48.1948, -225.479, -24.6626, 0.1", "48.1948, -225.479, -24.6626, 0.1", "48.22, -225.774, -24.7174, 0.1", "48.2799, -226.223, -24.8763, 0.1", "48.406, -227.005, -25.2548, 0.1", "48.4752, -227.424, -25.4671, 0.1", "48.5351, -227.805, -25.6542, 0.1", "48.6659, -228.6, -26.0031, 0.14", "48.7005, -228.793, -26.0909, 0.1", "48.7435, -229.067, -26.2095, 0.1", "48.793, -229.469, -26.3553, 0.1", "48.8399, -229.923, -26.5116, 0.1", "48.864, -230.334, -26.6351, 0.1", "48.8937, -231.208, -26.837, 0.1", "48.9043, -231.676, -26.9411, 0.1", "48.9157, -232.095, -27.0258, 0.1", "48.9278, -232.56, -27.1068, 0.1", "48.9376, -233.037, -27.1707, 0.1", "48.9435, -233.457, -27.2017, 0.14", "48.9523, -233.76, -27.198, 0.1", "48.9705, -234.186, -27.1915, 0.1", "48.9944, -234.612, -27.1836, 0.14", "49.0212, -234.908, -27.1759, 0.1", "49.0689, -235.334, -27.1625, 0.1", "49.1126, -235.758, -27.1501, 0.1", "49.1564, -236.235, -27.1374, 0.1", "49.1764, -236.654, -27.1305, 0.1", "49.1764, -237.081, -27.1282, 0.1", "49.1764, -237.081, -27.1282, 0.14", "49.1373, -237.381, -27.1067, 0.84", "49.0466, -237.841, -27.046, 0.7", "48.9463, -238.305, -26.9635, 0.56", "48.8788, -238.595, -26.906, 0.42", "48.7821, -239.048, -26.8119, 0.28", "48.6366, -239.92, -26.6289, 0.14", "48.587, -240.379, -26.5306, 0.1", "48.5602, -240.797, -26.4453, 0.1", "48.5439, -241.269, -26.3598, 0.1", "48.5385, -241.684, -26.3014, 0.1", "48.5442, -242.109, -26.265, 0.1", "48.5559, -242.538, -26.26, 0.1", "48.5733, -243.018, -26.2882, 0.1", "48.5789, -243.312, -26.3257, 0.1", "48.58, -243.783, -26.4138, 0.1", "48.5659, -244.199, -26.5111, 0.1", "48.5366, -244.656, -26.6306, 0.1", "48.4874, -245.419, -26.8345, 0.1", "48.4714, -245.713, -26.9087, 0.1", "48.4429, -246.173, -27.0148, 0.1", "48.4111, -246.644, -27.1078, 0.1", "48.3811, -247.104, -27.2121, 0.1", "48.3655, -247.521, -27.3046, 0.1", "48.3546, -247.992, -27.3938, 0.1", "48.3576, -248.283, -27.4561, 0.1", "48.3766, -248.696, -27.5647, 0.1", "48.4426, -249.417, -27.8063, 0.1", "48.4985, -249.805, -27.98, 0.56", "48.4985, -249.805, -27.98, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-11.0988, 40.8291, -7.08192, 0.84", "-11.4491, 41.9665, -6.83752, 0.84", "-11.5939, 42.5221, -6.7387, 0.7", "-11.7312, 43.0936, -6.64292, 0.56", "-11.8607, 43.6653, -6.55704, 0.42", "-11.9716, 44.245, -6.48063, 0.28", "-12.0719, 44.8248, -6.4147, 0.42", "-12.1158, 45.2336, -6.40757, 0.56", "-12.1337, 45.5201, -6.40121, 0.7", "-12.1556, 46.1039, -6.3867, 0.84", "-12.1689, 46.7638, -6.29228, 0.7", "-12.1701, 47.3438, -6.15944, 0.56", "-12.1646, 47.6276, -6.07995, 0.7", "-12.1401, 48.1929, -5.90392, 0.56", "-12.1067, 48.7588, -5.72117, 0.7", "-12.0117, 49.9653, -5.40854, 0.84", "-11.9636, 50.6156, -5.35437, 0.7", "-11.9384, 51.0382, -5.39879, 0.56", "-11.9242, 51.3264, -5.47216, 0.7", "-11.8824, 51.8711, -5.68595, 0.98", "-11.8077, 52.989, -6.15626, 0.98", "-11.7544, 54.1054, -6.63722, 0.84", "-11.7407, 54.681, -6.77729, 0.84", "-11.7311, 55.1011, -6.78876, 0.7", "-11.7087, 55.5052, -6.71535, 0.56", "-11.6479, 56.6308, -6.26612, 0.7", "-11.6468, 57.212, -5.93642, 0.84", "-11.7149, 58.295, -5.31646, 0.98", "-11.7772, 58.6736, -5.14033, 0.84", "-11.8692, 58.9452, -5.06914, 0.7", "-12.2422, 59.6932, -5.16379, 0.1", "-12.557, 60.235, -5.40308, 0.14", "-13.1569, 61.1968, -5.94693, 0.28", "-13.3557, 61.513, -6.15035, 0.42", "-13.6738, 62.0261, -6.4282, 0.56", "-14.241, 63.0248, -6.84595, 0.56", "-14.4841, 63.5488, -6.98891, 0.42", "-14.703, 64.0977, -7.04869, 0.56", "-14.8019, 64.3784, -7.03355, 0.56", "-15.1916, 65.5219, -6.90593, 0.56", "-15.3788, 66.0665, -6.81383, 0.56", "-15.5775, 66.6129, -6.69371, 0.56", "-15.7812, 67.1646, -6.59417, 0.7", "-15.9846, 67.7176, -6.52309, 0.84", "-16.2105, 68.3434, -6.48145, 0.98", "-16.4065, 68.9033, -6.4861, 1.12", "-16.5922, 69.4695, -6.48948, 0.98", "-16.7749, 70.0337, -6.4926, 0.84", "-16.9488, 70.5899, -6.49501, 0.7", "-17.1144, 71.1621, -6.49609, 0.84", "-17.2529, 71.738, -6.49417, 0.7", "-17.3194, 72.0281, -6.49287, 0.84" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-11.0988, 40.8291, -7.08192, 0.7", "-11.1718, 40.8564, -7.8402, 0.7", "-11.3047, 40.9198, -9.24887, 0.56", "-11.4315, 40.9849, -10.686, 0.42", "-11.5624, 41.0548, -12.0945, 0.28", "-11.6943, 41.133, -13.5025, 0.14", "-11.8271, 41.2218, -14.9365, 0.1", "-11.9483, 41.3133, -16.3586, 0.1", "-12.0726, 41.4135, -17.7658, 0.1", "-12.1384, 41.472, -18.5241, 0.1", "-12.266, 41.5964, -19.9419, 0.1", "-12.3922, 41.7331, -21.3597, 0.1", "-12.5091, 41.8757, -22.7637, 0.1", "-12.6272, 42.0319, -24.1948, 0.1", "-12.7396, 42.1993, -25.6094, 0.1", "-12.7921, 42.284, -26.3376, 0.1", "-12.9104, 42.4625, -27.7512, 0.1", "-13.0514, 42.6625, -29.1597, 0.1", "-13.1399, 42.7816, -29.8793, 0.1", "-13.3434, 43.0458, -31.2689, 0.14", "-13.3815, 43.0872, -31.46, 0.28", "-13.6005, 43.2914, -32.3154, 0.1", "-13.6799, 43.3596, -32.5702, 0.1", "-14.347, 43.6891, -32.1935, 0.1", "-14.6812, 43.8495, -31.9568, 0.1", "-15.002, 44.0016, -31.6867, 0.14", "-15.002, 44.0016, -31.6867, 0.28" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-13.64, 37.599, -28.0385, 0.7", "-14.026, 38.1394, -28.5474, 0.7", "-14.6144, 39.0099, -29.2305, 0.56", "-14.8066, 39.3106, -29.4379, 0.42", "-15.3858, 40.2441, -30.037, 0.28", "-15.6712, 40.695, -30.2964, 0.14", "-15.989, 41.1954, -30.6017, 0.1", "-16.2921, 41.7021, -30.8948, 0.1", "-16.433, 41.9398, -31.0056, 0.14", "-16.433, 41.9398, -31.0056, 0.28", "-16.8029, 42.6243, -31.315, 0.42", "-17.2666, 43.494, -31.7993, 0.42", "-17.516, 44.0137, -32.1171, 0.28", "-17.7376, 44.5422, -32.4399, 0.14", "-17.9266, 45.0214, -32.7367, 0.14", "-18.277, 46.0001, -33.3451, 0.28", "-18.277, 46.0001, -33.3451, 0.42", "-18.4229, 46.5222, -33.5845, 0.56", "-18.5463, 47.0506, -33.8139, 0.42", "-18.7079, 47.5901, -33.9868, 0.28", "-18.8215, 47.8604, -34.0298, 0.42", "-19.1247, 48.4516, -34.0479, 0.28", "-19.4132, 48.9595, -34.0626, 0.28", "-19.7285, 49.4606, -34.0761, 0.42", "-20.1872, 50.1569, -34.1596, 0.42", "-20.5504, 50.7054, -34.2622, 0.28", "-20.7778, 51.0395, -34.3424, 0.14", "-21.1497, 51.5523, -34.5508, 0.1", "-21.3841, 51.8516, -34.7124, 0.1", "-21.9512, 52.5638, -35.2588, 0.1", "-22.267, 52.9995, -35.6558, 0.28", "-22.5546, 53.4186, -36.0793, 0.42", "-23.0701, 54.2222, -36.8941, 0.28", "-23.2337, 54.5035, -37.1635, 0.14", "-23.6364, 55.2614, -37.8535, 0.28", "-23.8415, 55.6904, -38.1908, 1.12", "-23.8415, 55.6904, -38.1908, 0.98", "-24.0594, 56.2457, -38.5001, 0.1", "-24.241, 56.7682, -38.673, 0.1", "-24.6227, 57.9217, -38.9325, 0.1", "-24.803, 58.468, -39.0183, 0.1", "-24.9999, 59.082, -39.1306, 0.1", "-25.3191, 60.2222, -39.3542, 0.14", "-25.3749, 60.4927, -39.4515, 0.28", "-25.4115, 60.7525, -39.5821, 0.42", "-25.529, 61.8405, -40.1691, 0.28", "-25.5864, 62.3329, -40.4943, 0.28", "-25.6336, 62.7946, -40.8601, 0.14", "-25.737, 63.697, -41.6599, 0.1", "-25.7989, 64.1573, -42.0305, 0.1", "-25.883, 64.6961, -42.3953, 0.1", "-25.9348, 64.9577, -42.5239, 0.1" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-13.64, 37.599, -28.0385, 0.84", "-13.2249, 37.7803, -28.8204, 0.84", "-12.3107, 38.1002, -30.2915, 0.98", "-11.2716, 38.3796, -31.686, 0.84", "-11.1139, 38.4209, -31.8697, 0.28", "-10.7476, 38.5266, -32.267, 0.14", "-10.3958, 38.6376, -32.662, 0.1", "-10.1496, 38.7063, -32.897, 0.1", "-9.72094, 38.8183, -33.2239, 0.14", "-8.92647, 39.0655, -33.8312, 0.28", "-8.2737, 39.315, -34.4528, 0.42", "-7.20915, 39.8476, -35.7488, 0.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "18.9737, 105.792, 4.23753, 0.1", "18.5768, 106.739, 4.26614, 0.1", "18.392, 107.191, 4.25749, 0.1", "18.1819, 107.697, 4.22066, 0.1", "17.9974, 108.147, 4.17559, 0.14", "17.8107, 108.599, 4.1244, 0.28", "17.8107, 108.599, 4.1244, 0.42", "17.6176, 109.091, 3.99921, 0.1", "17.4449, 109.575, 3.81819, 0.14", "17.3762, 109.788, 3.71602, 0.28", "17.332, 109.991, 3.58318, 0.42", "17.2714, 110.427, 3.25066, 0.56", "17.2158, 110.871, 2.93731, 0.42", "17.1527, 111.717, 2.40433, 0.28", "17.1385, 112.206, 2.15336, 0.14", "17.0992, 113.158, 1.85994, 0.28", "17.0992, 113.158, 1.85994, 0.42", "17.0921, 114.145, 1.98506, 0.1", "17.0987, 114.666, 2.15449, 0.1", "17.1006, 115.149, 2.3933, 0.1", "17.1128, 116.033, 2.92179, 0.1", "17.1107, 116.312, 3.1162, 0.1", "17.127, 116.766, 3.42439, 0.14", "17.1705, 117.054, 3.60563, 0.28", "17.1976, 117.246, 3.73904, 0.42" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "18.9737, 105.792, 4.23753, 0.28", "19.2937, 106.978, 4.82469, 0.28", "19.4467, 107.625, 5.08188, 0.14", "19.5321, 108.059, 5.21876, 0.1", "19.6687, 108.927, 5.43342, 0.14", "19.7321, 109.37, 5.52529, 0.1", "19.8206, 109.996, 5.6407, 0.1", "19.9141, 110.633, 5.6975, 0.14", "19.9878, 111.259, 5.73931, 0.1", "20.0427, 111.902, 5.76634, 0.1", "20.0937, 112.625, 5.78852, 0.1", "20.1571, 113.332, 5.82058, 0.1", "20.2389, 113.968, 5.86837, 0.1", "20.3572, 114.677, 5.9425, 0.1", "20.4853, 115.29, 6.02642, 0.14", "20.646, 115.987, 6.13337, 0.1", "20.747, 116.433, 6.20038, 0.1", "20.8937, 117.122, 6.29678, 0.14", "21.03, 117.828, 6.38482, 0.28", "21.0905, 118.131, 6.39116, 0.28", "21.2132, 118.761, 6.34554, 0.1", "21.3148, 119.389, 6.24385, 0.1", "21.3934, 120.016, 6.10294, 0.1", "21.451, 120.636, 5.93687, 0.1", "21.5512, 121.906, 5.58896, 0.14", "21.6014, 122.518, 5.43635, 0.28", "21.6709, 123.148, 5.30534, 0.14", "21.7581, 123.779, 5.21246, 0.1", "21.8517, 124.414, 5.16079, 0.1", "21.9488, 125.13, 5.15126, 0.1", "22.0332, 125.836, 5.19947, 0.1", "22.1226, 126.284, 5.21854, 0.1", "22.2714, 126.978, 5.26478, 0.1", "22.4113, 127.603, 5.32091, 0.1", "22.5518, 128.23, 5.38887, 0.1", "22.6874, 128.926, 5.46225, 0.1", "22.8911, 130.094, 5.59017, 0.1", "23.0833, 131.389, 5.72976, 0.14", "23.172, 132.104, 5.80635, 0.1", "23.2426, 132.807, 5.88049, 0.1", "23.2725, 133.448, 5.93149, 0.1", "23.294, 134.159, 5.9273, 0.1", "23.3225, 134.794, 5.82907, 0.1", "23.4222, 135.382, 5.57112, 0.1", "23.5581, 135.894, 5.19509, 0.14", "23.7306, 136.407, 4.71342, 0.1", "24.023, 137.205, 3.85301, 0.1", "24.3452, 138.08, 2.84438, 0.1", "24.6706, 138.896, 1.83486, 0.1", "25.0063, 139.726, 0.791186, 0.14", "25.0868, 139.93, 0.547533, 0.28", "25.2605, 140.431, 0.0536194, 0.42", "25.3757, 140.976, -0.285969, 0.56", "25.4134, 141.285, -0.37555, 0.7", "25.4533, 141.925, -0.428889, 0.84", "25.4887, 142.635, -0.418389, 0.7", "25.5674, 143.354, -0.453631, 0.56", "25.6715, 144.055, -0.521413, 0.42", "25.7662, 144.685, -0.612389, 0.28", "25.8878, 145.305, -0.753941, 0.14", "26.0249, 145.908, -0.937857, 0.1", "26.3611, 147.082, -1.44843, 0.1", "26.5401, 147.633, -1.73826, 0.1", "26.7432, 148.145, -2.06651, 0.14", "27.2445, 149.158, -2.84459, 0.28", "27.4956, 149.623, -3.23064, 0.28", "27.9704, 150.477, -3.93692, 0.14", "28.2178, 150.968, -4.28996, 0.1", "28.7264, 151.987, -4.96315, 0.1", "29.2241, 153.068, -5.55047, 0.1", "29.4371, 153.645, -5.74719, 0.1", "29.6644, 154.324, -5.85517, 0.14", "30.0161, 155.626, -5.77499, 0.28", "30.0939, 155.933, -5.71044, 0.42", "30.2391, 156.593, -5.4841, 0.14", "30.38, 157.255, -5.22269, 0.1", "30.4842, 157.675, -5.07354, 0.1", "30.6653, 158.338, -4.8843, 0.1", "30.8605, 159.023, -4.75063, 0.1", "31.0637, 159.701, -4.67706, 0.1", "31.1574, 160.007, -4.6667, 0.1", "31.4023, 160.685, -4.72711, 0.1", "31.6695, 161.339, -4.83976, 0.1", "31.9316, 161.917, -4.97162, 0.1", "32.5102, 163.114, -5.27338, 0.1", "32.7817, 163.673, -5.41872, 0.1", "33.343, 164.877, -5.72113, 0.1", "33.5175, 165.289, -5.82052, 0.1", "33.7534, 165.948, -5.95804, 0.1", "33.9516, 166.639, -6.0525, 0.1", "34.0734, 167.274, -6.07986, 0.1", "34.1645, 167.899, -6.08251, 0.1", "34.2205, 168.539, -6.05461, 0.1", "34.2669, 169.183, -6.03408, 0.1", "34.3107, 169.906, -6.01747, 0.1", "34.3269, 170.614, -5.95397, 0.1", "34.3259, 170.934, -5.90651, 0.1", "34.3024, 171.647, -5.7744, 0.1", "34.2732, 172.266, -5.63494, 0.1", "34.1834, 172.88, -5.46017, 0.1", "33.7524, 174.096, -5.01182, 0.14", "33.4403, 174.625, -4.79212, 0.1", "33.0398, 175.1, -4.59528, 0.1", "32.8019, 175.308, -4.51689, 0.14", "31.7071, 176.135, -4.34324, 0.1", "30.5611, 176.908, -4.38735, 0.1", "29.9948, 177.31, -4.60516, 0.14", "29.5439, 177.706, -5.03452, 0.14", "29.3536, 177.942, -5.37513, 0.1", "29.0523, 178.614, -6.54821, 0.1", "29.0285, 178.82, -6.96166, 0.1", "29.0766, 179.408, -8.21577, 0.1", "29.2106, 179.977, -9.46559, 0.1", "29.3212, 180.27, -10.1345, 0.1", "29.5306, 180.708, -11.2025, 0.1", "29.6185, 180.871, -11.632, 0.14" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "11.2572, -84.5858, 9.31309, 1.12", "11.3308, -85.107, 9.30362, 1.12", "11.4215, -85.7019, 9.29155, 1.26", "11.5108, -86.2301, 9.27917, 1.4", "11.6297, -86.7553, 9.26116, 1.54", "11.6972, -87.0133, 9.2506, 1.4", "11.6972, -87.0133, 9.2506, 1.26", "11.7791, -87.2532, 9.18839, 1.12", "11.9615, -87.7342, 9.03007, 0.98", "12.1629, -88.2508, 8.78563, 0.84", "12.3368, -88.6997, 8.54154, 0.7", "12.6933, -89.6426, 8.013, 0.84", "12.8661, -90.0892, 7.76376, 0.98", "13.0489, -90.5437, 7.5376, 1.12", "13.4651, -91.5125, 7.112, 1.12", "13.6601, -91.9757, 6.91676, 1.12", "13.8675, -92.4457, 6.74534, 0.98", "14.1157, -92.9794, 6.638, 1.12", "14.5659, -93.8616, 6.51321, 0.98", "14.7525, -94.1859, 6.5289, 1.12" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "11.2572, -84.5858, 9.31309, 0.28", "11.6882, -84.7429, 9.31526, 0.28", "12.3863, -84.994, 9.31882, 0.42", "12.8228, -85.155, 9.38007, 0.56", "13.4891, -85.4258, 9.51627, 0.42", "13.9102, -85.6075, 9.61381, 0.28", "14.7356, -85.9936, 9.81185, 0.14", "15.3729, -86.3305, 9.97965, 0.28", "16.4276, -86.9542, 10.2744, 0.28", "17.0366, -87.3392, 10.4388, 0.14", "17.4121, -87.5922, 10.5336, 0.1", "18.0052, -88.0124, 10.6611, 0.1", "18.5893, -88.4461, 10.713, 0.1", "18.9581, -88.7304, 10.6921, 0.1", "19.688, -89.2845, 10.5887, 0.1", "20.0647, -89.5489, 10.546, 0.1", "20.682, -89.9534, 10.5669, 0.14", "21.692, -90.5179, 10.7703, 0.28", "21.692, -90.5179, 10.7703, 0.42", "22.7807, -90.9683, 11.2286, 0.42", "23.3788, -91.2068, 11.5976, 0.56", "24.3587, -91.622, 12.292, 0.42", "24.8995, -91.8841, 12.7066, 0.28", "25.4437, -92.1841, 13.1144, 0.14", "25.7865, -92.3929, 13.3346, 0.28", "26.7212, -93.0214, 13.802, 0.56", "27.2808, -93.4311, 14.0305, 0.7", "27.7764, -93.8217, 14.2227, 0.56", "28.4297, -94.4022, 14.5151, 0.42", "28.7428, -94.7134, 14.6622, 0.28", "29.0379, -95.0333, 14.7934, 0.14", "29.6355, -95.7175, 15.0106, 0.14", "30.3773, -96.6279, 15.2993, 0.28", "30.7611, -97.1246, 15.4453, 0.14", "31.1334, -97.6424, 15.5795, 0.14", "31.4936, -98.1656, 15.7388, 0.1", "31.8879, -98.7443, 15.9239, 0.1", "32.2911, -99.3198, 16.0997, 0.1", "32.7219, -99.8776, 16.3021, 0.1", "33.0021, -100.206, 16.463, 0.1", "33.7421, -101.039, 16.9426, 0.1", "34.1849, -101.531, 17.2455, 0.1", "34.6307, -102.026, 17.5571, 0.1", "35.4344, -102.938, 18.2028, 0.1", "35.6957, -103.252, 18.4259, 0.1", "36.0509, -103.714, 18.7227, 0.14", "36.438, -104.243, 19.0548, 0.28", "36.6651, -104.57, 19.2731, 0.42", "37.2656, -105.447, 19.8545, 0.1", "37.5999, -105.93, 20.1414, 0.1", "37.9353, -106.418, 20.423, 0.14", "38.642, -107.456, 20.9772, 0.1", "39.0103, -108.022, 21.2406, 0.1", "39.2434, -108.399, 21.375, 0.1", "39.6087, -109.008, 21.5084, 0.14", "39.9433, -109.567, 21.5542, 0.28", "40.2652, -110.131, 21.5631, 0.28", "40.4128, -110.421, 21.5421, 0.42", "40.692, -111.006, 21.5684, 0.28", "40.9583, -111.595, 21.6544, 0.14", "41.4683, -112.671, 22.0315, 0.1", "41.9887, -113.645, 22.5178, 0.28", "42.2884, -114.148, 22.8123, 0.14", "42.9311, -115.173, 23.4615, 0.1", "43.2489, -115.649, 23.7763, 0.1", "43.948, -116.637, 24.4368, 0.1", "44.3114, -117.151, 24.8007, 0.1", "44.7086, -117.682, 25.1165, 0.1", "44.8938, -117.915, 25.2476, 0.1", "45.3406, -118.459, 25.454, 0.1", "45.6348, -118.789, 25.5574, 0.1" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-28.4789, -34.4714, -32.6127, 0.28", "-28.7009, -34.8965, -32.5645, 0.28", "-29.1214, -35.7464, -32.4698, 0.14", "-29.3328, -36.1767, -32.422, 0.28", "-29.652, -36.8534, -32.3478, 0.14", "-29.9597, -37.5458, -32.2734, 0.1", "-30.1396, -37.996, -32.2266, 0.1", "-30.3474, -38.7116, -32.1582, 0.14", "-30.4231, -39.1843, -32.1177, 0.28", "-30.4304, -39.5198, -32.0926, 0.42", "-30.3944, -39.8573, -32.0707, 0.98", "-30.2588, -40.5117, -32.0332, 0.84", "-30.0414, -41.2424, -31.9966, 0.7", "-29.8197, -41.8714, -31.9676, 0.56", "-29.5514, -42.5948, -31.9354, 0.42", "-29.3219, -43.2172, -31.8594, 0.28", "-29.0959, -43.8509, -31.7434, 0.14", "-28.8614, -44.5497, -31.5804, 0.1", "-28.6708, -45.1789, -31.4108, 0.1", "-28.4927, -45.8113, -31.2269, 0.1", "-28.1651, -47.1016, -30.8334, 0.1", "-28.0112, -47.7361, -30.6365, 0.1", "-27.8836, -48.3627, -30.4482, 0.1", "-27.7802, -49.0123, -30.2717, 0.1", "-27.7038, -49.6691, -30.1257, 0.14", "-27.6775, -50.0042, -30.0745, 0.28", "-27.6606, -50.3396, -30.0512, 0.7", "-27.6343, -51.0854, -29.9987, 0.56", "-27.6132, -51.7598, -29.951, 0.42", "-27.6043, -52.5176, -29.8962, 0.28", "-27.5998, -53.1921, -29.8472, 0.14", "-27.5886, -53.8699, -29.7984, 0.1", "-27.5769, -54.1939, -29.7756, 0.1", "-27.5469, -54.8713, -29.7284, 0.1", "-27.5376, -55.3506, -29.694, 0.1", "-27.5288, -56.0251, -29.6453, 0.1", "-27.5442, -56.7025, -29.5946, 0.1", "-27.5705, -57.3646, -29.5441, 0.1", "-27.6148, -58.1207, -29.4853, 0.1", "-27.6775, -58.8775, -29.4251, 0.1", "-27.7463, -59.5396, -29.3713, 0.1", "-27.842, -60.2927, -29.3088, 0.1", "-27.9334, -60.9603, -29.2529, 0.1", "-28.026, -61.6997, -29.1917, 0.14", "-28.0946, -62.4537, -29.1312, 0.28", "-28.1543, -63.199, -29.072, 0.42", "-28.2145, -63.8702, -29.0183, 0.56", "-28.2393, -64.208, -28.9916, 0.42", "-28.2823, -64.8861, -28.9932, 0.42", "-28.3061, -65.5605, -29.0421, 0.56", "-28.3103, -66.027, -29.1029, 0.1", "-28.3014, -66.7794, -29.2302, 0.1", "-28.2874, -67.4485, -29.3554, 0.1", "-28.2327, -68.8095, -29.6112, 0.1", "-28.2186, -69.144, -29.673, 0.1", "-28.1807, -69.7998, -29.7816, 0.7", "-28.1223, -70.4723, -29.8692, 0.56", "-28.0527, -71.1438, -29.9232, 0.42", "-27.9829, -71.8204, -29.9319, 0.42", "-27.9291, -72.2829, -29.8644, 0.56", "-27.8464, -72.9408, -29.727, 0.56", "-27.7643, -73.5952, -29.573, 0.42", "-27.6801, -74.2476, -29.3974, 0.28", "-27.59, -74.889, -29.1978, 0.14", "-27.3782, -76.1796, -28.7299, 0.1", "-27.2511, -76.7838, -28.4766, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-28.4789, -34.4714, -32.6127, 0.1", "-28.9904, -33.1451, -32.2766, 0.1", "-29.2814, -32.5275, -32.1432, 0.1", "-29.6094, -31.9338, -32.0286, 0.1", "-30.0053, -31.2684, -31.908, 0.1", "-30.3727, -30.6935, -31.8135, 0.1", "-30.3727, -30.6935, -31.8135, 0.1", "-30.9188, -29.8729, -31.7938, 0.1", "-31.201, -29.4656, -31.7828, 0.1", "-31.201, -29.4656, -31.7828, 0.1", "-31.5957, -28.8001, -31.7722, 0.1", "-31.9302, -28.1901, -31.7655, 0.1", "-32.2301, -27.5595, -31.7636, 0.1", "-32.5077, -26.8402, -31.7686, 0.1", "-32.7309, -26.1804, -31.7766, 0.1", "-32.9225, -25.5306, -31.8437, 0.1", "-32.9225, -25.5306, -31.8437, 0.1", "-33.0524, -24.8698, -32.0039, 0.1", "-33.1531, -24.2071, -32.1898, 0.1", "-33.2144, -23.5468, -32.3873, 0.1", "-33.3106, -22.1519, -32.8029, 0.1", "-33.3488, -21.4986, -32.9868, 0.1", "-33.3809, -20.7611, -33.2302, 0.1", "-33.4025, -20.1107, -33.466, 0.1", "-33.4266, -19.3923, -33.7294, 0.1", "-33.4576, -18.7379, -33.9523, 0.1", "-33.4935, -18.0699, -34.1409, 0.1", "-33.5726, -16.7939, -34.5103, 0.1", "-33.6278, -16.1382, -34.6944, 0.1", "-33.6921, -15.4713, -34.8662, 0.1", "-33.7617, -14.8085, -35.0647, 0.1", "-33.8382, -14.0676, -35.2954, 0.1", "-33.9092, -13.4152, -35.4868, 0.1", "-33.9776, -12.7476, -35.6538, 0.1", "-34.0391, -12.0791, -35.8343, 0.1", "-34.1662, -10.6774, -36.2216, 0.1", "-34.231, -10.0206, -36.3987, 0.1", "-34.2993, -9.36533, -36.611, 0.1", "-34.3713, -8.63241, -36.8682, 0.1", "-34.4368, -7.97883, -37.0975, 0.1", "-34.496, -7.32298, -37.3104, 0.1", "-34.5564, -6.66589, -37.4878, 0.1", "-34.6841, -5.2642, -37.8751, 0.1", "-34.7507, -4.59607, -38.0551, 0.1", "-34.8199, -3.9409, -38.2673, 0.1", "-34.8915, -3.22161, -38.5199, 0.1", "-34.9571, -2.5713, -38.7481, 0.1", "-35.0143, -1.91426, -38.9691, 0.1", "-35.071, -1.25165, -39.1596, 0.1", "-35.1824, 0.133978, -39.5806, 0.1", "-35.2399, 0.793819, -39.7807, 0.1", "-35.3097, 1.45598, -39.9687, 0.1", "-35.3464, 1.79156, -40.0513, 0.1", "-35.4267, 2.45806, -40.1773, 0.1", "-35.5221, 3.13832, -40.2557, 0.1", "-35.6253, 3.82078, -40.3359, 0.1", "-35.7301, 4.49352, -40.4577, 0.1", "-35.8414, 5.16347, -40.6069, 0.1", "-35.9603, 5.8252, -40.7712, 0.1", "-36.0743, 6.47559, -40.949, 0.1", "-36.3155, 7.8615, -41.3433, 0.1", "-36.4301, 8.51881, -41.5279, 0.1", "-36.5338, 9.18395, -41.7026, 0.1", "-36.5804, 9.50815, -41.7765, 0.1", "-36.6591, 10.1838, -41.9005, 0.1", "-36.7263, 10.8701, -41.9827, 0.1", "-36.7889, 11.5578, -42.0099, 0.1", "-36.8508, 12.3332, -42.0415, 0.1", "-36.8892, 13.014, -42.0711, 0.1", "-36.9121, 13.5038, -42.0928, 0.1", "-36.9431, 14.1933, -42.1236, 0.1", "-36.9815, 14.8858, -42.1537, 0.1", "-37.0168, 15.5632, -42.1834, 0.1", "-37.0667, 16.3372, -42.2163, 0.1", "-37.1139, 17.0258, -42.2453, 0.1", "-37.1732, 17.7138, -42.2728, 0.1", "-37.2407, 18.3999, -42.3565, 0.1", "-37.2807, 18.7356, -42.4209, 0.1", "-37.3793, 19.4008, -42.5835, 0.1", "-37.5001, 20.061, -42.7668, 0.1", "-37.6284, 20.7142, -42.9577, 0.1", "-37.9102, 22.0496, -43.3437, 0.1", "-38.0549, 22.6917, -43.5175, 0.1", "-38.2163, 23.3378, -43.7213, 0.1", "-38.3778, 23.9756, -43.94, 0.1", "-38.5394, 24.6133, -44.1588, 0.1", "-38.7009, 25.2594, -44.3626, 0.1", "-38.8592, 25.9122, -44.5322, 0.1", "-39.1827, 27.2412, -44.8859, 0.1", "-39.341, 27.8939, -45.0554, 0.1", "-39.5026, 28.54, -45.2592, 0.1", "-39.6642, 29.1768, -45.481, 0.1", "-39.8258, 29.8125, -45.7057, 0.1", "-39.9873, 30.4562, -45.9173, 0.1", "-40.1433, 31.0959, -46.0908, 0.1", "-40.4454, 32.3993, -46.5655, 0.1", "-40.514, 32.7108, -46.6977, 0.1", "-40.6464, 33.3139, -47.0232, 0.1", "-40.774, 33.8996, -47.3753, 0.1", "-40.8872, 34.4644, -47.7723, 0.1", "-41.101, 35.6151, -48.651, 0.1", "-41.2177, 36.164, -49.0696, 0.1", "-41.5095, 37.2607, -49.9332, 0.1", "-41.6862, 37.7888, -50.3592, 0.1", "-42.1791, 38.8836, -51.2017, 0.1", "-42.1791, 38.8836, -51.2017, 0.1", "-42.7312, 39.5704, -51.6528, 0.1", "-43.2321, 40.0901, -51.9679, 0.1", "-43.5752, 40.404, -52.1146, 0.1", "-44.3075, 41.0029, -52.4336, 0.1", "-45.3322, 41.7788, -52.8341, 0.1", "-45.9338, 42.24, -53.0869, 0.1", "-46.2985, 42.5209, -53.2505, 0.1", "-46.895, 42.9738, -53.5018, 0.1", "-47.9067, 43.7334, -53.9631, 0.1", "-48.6596, 44.306, -54.3033, 0.1", "-49.2531, 44.757, -54.5378, 0.1", "-49.6342, 45.0397, -54.6944, 0.1", "-50.3772, 45.615, -54.9995, 0.1", "-51.3635, 46.4451, -55.382, 0.1", "-51.9135, 46.9931, -55.5593, 0.1", "-52.2123, 47.3598, -55.6699, 0.1", "-52.2123, 47.3598, -55.6699, 0.1", "-52.5373, 47.9687, -55.7803, 0.1", "-52.7973, 48.5964, -55.8406, 0.1", "-53.0253, 49.2547, -55.848, 0.1", "-53.2516, 49.9063, -55.9174, 0.1", "-53.3664, 50.2306, -55.9728, 0.1", "-53.6329, 50.9235, -56.1833, 0.1", "-53.9081, 51.5143, -56.4368, 0.1", "-54.2308, 52.0299, -56.7805, 0.1", "-54.986, 52.8847, -57.7176, 0.1", "-55.3812, 53.2114, -58.2058, 0.1", "-56.1752, 53.7082, -59.1191, 0.1", "-56.6282, 53.9266, -59.603, 0.1", "-57.6264, 54.2957, -60.5827, 0.1", "-58.5947, 54.597, -61.4143, 0.1", "-59.3911, 54.8439, -61.9558, 0.1", "-60.0589, 55.0871, -62.3155, 0.1", "-60.4898, 55.2967, -62.4636, 0.1", "-60.4898, 55.2967, -62.4636, 0.1", "-61.0832, 55.8027, -62.483, 0.1", "-61.6438, 56.3426, -62.4478, 0.1", "-62.2005, 56.8982, -62.4138, 0.1", "-62.5552, 57.2404, -62.3916, 0.1", "-63.1537, 57.7525, -62.3508, 0.1", "-63.7753, 58.2237, -62.3054, 0.1", "-63.7753, 58.2237, -62.3054, 0.1", "-64.4697, 58.6008, -62.2473, 0.1", "-65.1668, 58.9519, -62.1876, 0.1", "-65.8767, 59.3, -62.1264, 0.1", "-66.3136, 59.5195, -62.0889, 0.1", "-66.6212, 59.6885, -62.0918, 0.1", "-67.4628, 60.205, -62.1626, 0.1", "-68.1031, 60.6395, -62.3248, 0.1", "-68.4824, 60.913, -62.4675, 0.1", "-69.0672, 61.3526, -62.7901, 0.1", "-70.1055, 62.1593, -63.4664, 0.1", "-70.4472, 62.4307, -63.71, 0.1", "-71.5208, 63.2948, -64.5183, 0.1", "-71.8487, 63.5542, -64.7925, 0.1", "-72.8239, 64.3165, -65.612, 0.1", "-73.3463, 64.7256, -66.0259, 0.1", "-73.6914, 65.0015, -66.2595, 0.1", "-74.244, 65.4505, -66.5808, 0.1", "-75.1484, 66.1786, -67.0549, 0.1", "-75.8772, 66.7558, -67.4203, 0.1", "-76.479, 67.203, -67.6721, 0.1", "-76.8644, 67.4816, -67.8261, 0.1", "-77.6353, 68.0348, -68.1036, 0.1", "-78.6863, 68.7851, -68.5013, 0.1", "-79.3014, 69.2186, -68.7135, 0.1", "-79.9107, 69.6473, -68.9461, 0.1", "-80.5299, 70.0776, -69.1839, 0.1", "-80.9063, 70.339, -69.3548, 0.1", "-82.0276, 71.1389, -69.9063, 0.1", "-82.6127, 71.5766, -70.1795, 0.1", "-83.1904, 72.029, -70.4718, 0.1", "-83.5282, 72.3144, -70.6791, 0.1", "-84.356, 73.0734, -71.2343, 0.1", "-84.8431, 73.554, -71.6265, 0.1", "-85.2781, 74.0574, -72.032, 0.1", "-85.6472, 74.5812, -72.4736, 0.1", "-86.2759, 75.6148, -73.3259, 0.1", "-86.5365, 76.127, -73.7009, 0.1", "-86.9598, 77.1317, -74.2977, 0.1", "-87.1807, 77.7892, -74.6577, 0.1", "-87.2972, 78.2286, -74.8645, 0.1", "-87.4493, 78.9512, -75.1112, 0.1", "-87.5719, 79.6218, -75.2294, 0.1", "-87.7021, 80.2892, -75.2971, 0.1", "-87.8432, 80.9663, -75.3151, 0.1", "-87.9229, 81.3047, -75.3231, 0.1", "-88.0988, 81.9742, -75.3368, 0.1", "-88.2934, 82.6389, -75.4062, 0.1", "-88.5152, 83.2857, -75.5215, 0.1", "-88.7713, 83.8884, -75.7272, 0.1", "-88.7713, 83.8884, -75.7272, 0.1", "-89.1055, 84.4863, -76.1107, 0.1", "-89.7705, 85.5249, -76.9111, 0.1", "-90.0949, 85.9705, -77.3301, 0.1", "-90.7922, 86.8877, -78.2578, 0.1", "-91.1142, 87.3174, -78.6898, 0.1", "-91.7221, 88.1437, -79.5665, 0.1", "-92.0671, 88.6199, -80.0784, 0.1", "-92.7196, 89.5644, -81.0091, 0.1", "-93.0262, 90.0288, -81.4343, 0.1", "-93.3278, 90.5148, -81.843, 0.1", "-93.8489, 91.4037, -82.5464, 0.1", "-94.1534, 91.9984, -82.9401, 0.1", "-94.4063, 92.5451, -83.2662, 0.1", "-94.6637, 93.1112, -83.5877, 0.1", "-95.2072, 94.2905, -84.2654, 0.1", "-95.4639, 94.8647, -84.572, 0.1", "-95.7206, 95.4358, -84.8768, 0.1", "-95.9736, 96.0002, -85.205, 0.1", "-96.5044, 97.1768, -85.8972, 0.1", "-96.7526, 97.7457, -86.2129, 0.1", "-96.9905, 98.3211, -86.5322, 0.1", "-97.4829, 99.4981, -87.2511, 0.1", "-97.7231, 100.056, -87.6001, 0.1", "-97.9573, 100.609, -87.9276, 0.1", "-98.1876, 101.197, -88.2198, 0.1", "-98.6829, 102.411, -88.7748, 0.1", "-98.6829, 102.411, -88.7748, 0.1", "-98.9663, 103.107, -88.9504, 0.1", "-99.2369, 103.737, -89.0803, 0.1", "-99.5268, 104.352, -89.2253, 0.1", "-99.8574, 105.032, -89.383, 0.1", "-100.153, 105.653, -89.5066, 0.1", "-100.481, 106.335, -89.659, 0.1", "-100.773, 106.951, -89.8098, 0.1", "-101.386, 108.236, -90.1408, 0.1", "-101.669, 108.85, -90.299, 0.1", "-101.935, 109.477, -90.4514, 0.1", "-102.213, 110.182, -90.5999, 0.1", "-102.435, 110.821, -90.7039, 0.1", "-102.539, 111.148, -90.7373, 0.1", "-102.737, 111.816, -90.7485, 0.1", "-102.953, 112.474, -90.7573, 0.1", "-103.196, 113.127, -90.7628, 0.1", "-103.468, 113.766, -90.7644, 0.1", "-103.468, 113.766, -90.7644, 0.1", "-103.864, 114.431, -90.7536, 0.1", "-104.309, 115.076, -90.7365, 0.1", "-104.769, 115.7, -90.7165, 0.1", "-105.247, 116.322, -90.6945, 0.1", "-105.726, 116.932, -90.6718, 0.1", "-106.022, 117.33, -90.6588, 0.1", "-106.464, 117.978, -90.6421, 0.1", "-106.832, 118.553, -90.6873, 0.1", "-106.832, 118.553, -90.6873, 0.1", "-107.189, 119.222, -90.9141, 0.1", "-107.465, 119.793, -91.1714, 0.1", "-107.717, 120.352, -91.5103, 0.1", "-108.203, 121.479, -92.3125, 0.1", "-108.412, 122.009, -92.7138, 0.1", "-108.762, 123.108, -93.5565, 0.1", "-108.882, 123.648, -93.9802, 0.1", "-109.003, 124.776, -94.844, 0.1", "-108.992, 125.06, -95.0412, 0.1", "-108.839, 125.717, -95.4079, 0.1", "-108.61, 126.384, -95.7185, 0.1", "-108.445, 126.816, -95.889, 0.1", "-108.219, 127.51, -96.162, 0.1", "-108.158, 127.953, -96.3678, 0.1", "-108.186, 128.251, -96.5489, 0.1", "-108.401, 128.87, -96.9763, 0.1", "-108.996, 129.978, -97.7335, 0.1", "-109.37, 130.524, -98.1417, 0.1", "-110.162, 131.521, -98.8894, 0.1", "-110.357, 131.743, -99.0739, 0.1", "-110.812, 132.237, -99.4881, 0.1", "-111.258, 132.709, -99.9197, 0.1", "-112.1, 133.62, -100.725, 0.1", "-112.549, 134.103, -101.159, 0.1", "-113.315, 134.954, -101.869, 0.1", "-113.744, 135.432, -102.312, 0.1", "-114.529, 136.361, -103.144, 0.1", "-114.89, 136.837, -103.516, 0.1", "-115.124, 137.209, -103.722, 0.1", "-115.409, 137.802, -103.957, 0.1", "-115.8, 138.956, -104.177, 0.1", "-116.135, 140.325, -104.311, 0.1", "-116.274, 141.006, -104.304, 0.1", "-116.42, 141.67, -104.287, 0.1", "-116.614, 142.423, -104.257, 0.1", "-116.828, 143.081, -104.218, 0.1", "-116.95, 143.407, -104.194, 0.1", "-117.261, 144.113, -104.195, 0.1", "-117.61, 144.802, -104.19, 0.1", "-117.991, 145.485, -104.182, 0.1", "-118.381, 146.153, -104.172, 0.1", "-118.72, 146.765, -104.165, 0.1", "-118.72, 146.765, -104.165, 0.1", "-119.035, 147.469, -104.165, 0.1", "-119.279, 148.119, -104.17, 0.1", "-119.489, 148.782, -104.18, 0.1", "-119.673, 149.45, -104.193, 0.1", "-119.673, 149.45, -104.193, 0.1", "-119.831, 150.115, -104.208, 0.1", "-119.976, 150.791, -104.226, 0.1", "-120.106, 151.471, -104.245, 0.1", "-120.225, 152.155, -104.266, 0.1", "-120.336, 152.837, -104.288, 0.1", "-120.443, 153.523, -104.31, 0.1", "-120.543, 154.195, -104.332, 0.1", "-120.652, 154.964, -104.358, 0.1", "-120.744, 155.648, -104.382, 0.1", "-120.83, 156.337, -104.407, 0.1", "-120.909, 157.012, -104.431, 0.1", "-120.948, 157.356, -104.444, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "48.4985, -249.805, -27.98, 0.1", "48.5483, -250.132, -28.0958, 0.1", "48.6118, -250.596, -28.2559, 0.1", "48.6668, -251.114, -28.4227, 0.1", "48.7136, -251.587, -28.56, 0.1", "48.7944, -252.589, -28.8239, 0.1", "48.8305, -253.061, -28.9352, 0.1", "48.8826, -253.594, -29.0833, 0.1", "48.9365, -254.112, -29.2429, 0.1", "48.9851, -254.58, -29.3894, 0.1", "49.0254, -255.109, -29.5474, 0.1", "49.0546, -255.586, -29.6655, 0.1", "49.127, -256.586, -29.9179, 0.1", "49.1508, -256.823, -29.9741, 0.14", "49.2061, -257.361, -30.0893, 0.14", "49.2592, -257.896, -30.1844, 0.1", "49.3024, -258.385, -30.2472, 0.1", "49.338, -258.874, -30.2811, 0.1", "49.3719, -259.367, -30.2783, 0.1", "49.4196, -259.911, -30.2707, 0.1", "49.4771, -260.402, -30.2578, 0.1", "49.5627, -260.949, -30.2341, 0.1", "49.6398, -261.429, -30.2125, 0.1", "49.7235, -261.913, -30.1882, 0.1", "49.8168, -262.396, -30.1597, 0.1", "49.9292, -262.877, -30.1636, 0.1", "50.0641, -263.407, -30.2009, 0.1", "50.1576, -263.742, -30.24, 0.1", "50.289, -264.211, -30.3122, 0.1", "50.3972, -264.683, -30.3651, 0.1", "50.587, -265.702, -30.4323, 0.1", "50.6515, -266.192, -30.4446, 0.14", "50.6963, -266.682, -30.4357, 0.1", "50.7276, -267.166, -30.4052, 0.1", "50.7423, -268.199, -30.3047, 0.1", "50.7303, -268.689, -30.237, 0.1", "50.6962, -269.225, -30.1413, 0.1", "50.6606, -269.713, -30.0721, 0.1", "50.6184, -270.264, -30.0225, 0.1", "50.5883, -270.807, -30.004, 0.14", "50.5868, -271.051, -30.0105, 0.1", "50.5833, -271.604, -30.0251, 0.1", "50.5727, -272.095, -30.0413, 0.1", "50.5438, -272.638, -30.0666, 0.1", "50.5295, -273.126, -30.1227, 0.1", "50.5161, -273.616, -30.1853, 0.14", "50.4972, -274.156, -30.2641, 0.28", "50.4701, -274.844, -30.3838, 0.14", "50.4486, -275.178, -30.4571, 0.1", "50.3762, -276.146, -30.7261, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "48.4985, -249.805, -27.98, 0.1", "48.092, -250.09, -28.1946, 0.1", "47.7039, -250.364, -28.3098, 0.1", "47.2611, -250.663, -28.4083, 0.1", "46.812, -250.966, -28.5003, 0.1", "46.5291, -251.152, -28.5306, 0.1", "46.0671, -251.448, -28.5622, 0.1", "45.2094, -252.02, -28.5731, 0.1", "44.8092, -252.291, -28.5636, 0.1", "44.3524, -252.597, -28.5495, 0.1", "43.514, -253.19, -28.5318, 0.1", "43.3242, -253.344, -28.5446, 0.1", "42.917, -253.699, -28.5905, 0.1", "42.6781, -253.941, -28.6531, 0.1", "42.3363, -254.344, -28.7636, 0.1", "42.0427, -254.773, -28.9251, 0.1", "41.6881, -255.573, -29.3901, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-17.3194, 72.0281, -6.49287, 0.28", "-18.4981, 72.6632, -6.18106, 0.28", "-19.0592, 73.0046, -6.06107, 0.14", "-19.4151, 73.2325, -5.99666, 0.28", "-20.1078, 73.7043, -5.88962, 0.42", "-20.4518, 73.9528, -5.84375, 0.42", "-20.9866, 74.3603, -5.78139, 0.28", "-21.4878, 74.7989, -5.76935, 0.14", "-21.7931, 75.0949, -5.76221, 0.1", "-22.2468, 75.5802, -5.75189, 0.1", "-22.6823, 76.0903, -5.74227, 0.14", "-23.1005, 76.6051, -5.73321, 0.28", "-23.485, 77.0655, -5.72479, 0.14", "-23.7569, 77.3789, -5.71875, 0.1", "-24.1701, 77.8151, -5.70932, 0.14", "-24.6553, 78.2705, -5.69786, 0.28", "-25.166, 78.6974, -5.73077, 0.42", "-25.7061, 79.1039, -5.75642, 0.56", "-26.0489, 79.3423, -5.76591, 0.42", "-26.6037, 79.7271, -5.77055, 0.28", "-26.9588, 79.9735, -5.76653, 0.28", "-27.8142, 80.6179, -5.73968, 0.42", "-28.7738, 81.4334, -5.68987, 0.1", "-29.2478, 81.8988, -5.65539, 0.1", "-29.6951, 82.3977, -5.61386, 0.1", "-30.1106, 82.9125, -5.56709, 0.1", "-30.5185, 83.4351, -5.56513, 0.14", "-30.7035, 83.6706, -5.57794, 0.28", "-31.1207, 84.1754, -5.68476, 0.42", "-31.5092, 84.6182, -5.80171, 0.56", "-31.9491, 85.0937, -5.95056, 0.7", "-32.8069, 85.9694, -6.25093, 0.56", "-33.0979, 86.2506, -6.34825, 0.42", "-33.7131, 86.8188, -6.52874, 0.42", "-34.0125, 87.0982, -6.60373, 0.56", "-34.0125, 87.0982, -6.60373, 0.7", "-34.4825, 87.5768, -6.6452, 0.56", "-34.9202, 88.0741, -6.68904, 0.42", "-35.3313, 88.5878, -6.77283, 0.28", "-35.6816, 89.0624, -6.87797, 0.14", "-36.0614, 89.5888, -7.01151, 0.1", "-36.4319, 90.1192, -7.15429, 0.1", "-37.077, 91.0876, -7.52429, 0.14", "-37.077, 91.0876, -7.52429, 0.28", "-37.45, 91.6059, -7.7026, 0.56", "-37.8648, 92.1157, -7.79317, 0.42", "-38.2673, 92.5612, -7.78428, 0.56", "-39.0481, 93.3294, -7.60662, 0.7", "-40.0447, 94.1904, -7.24484, 0.14", "-40.3652, 94.4446, -7.1234, 0.1", "-41.409, 95.2051, -6.67996, 0.1", "-41.7369, 95.4212, -6.53608, 0.14", "-42.0828, 95.6359, -6.38806, 0.28", "-42.7578, 96.0662, -6.11413, 0.42", "-43.1054, 96.3003, -6.03115, 0.56", "-43.4476, 96.5502, -5.97958, 0.42", "-44.1105, 97.0861, -5.96336, 0.7", "-44.6143, 97.5305, -6.01734, 0.56", "-45.0967, 97.9781, -6.1182, 0.42", "-45.0967, 97.9781, -6.1182, 0.28", "-45.5592, 98.4245, -6.31803, 0.1", "-46.032, 98.8545, -6.50683, 0.1", "-46.9726, 99.6471, -6.78443, 0.1", "-47.3182, 99.8968, -6.80445, 0.1", "-47.8852, 100.24, -6.71572, 0.14", "-48.8623, 100.769, -6.39194, 0.28", "-49.8507, 101.246, -5.74437, 0.84", "-50.6832, 101.65, -4.87689, 0.7", "-51.4144, 102.057, -3.91441, 0.84", "-51.5667, 102.159, -3.6726, 0.98", "-51.6994, 102.262, -3.41981, 1.12", "-52.1947, 102.708, -2.33952, 0.56", "-52.6862, 103.224, -1.29042, 0.42", "-52.9292, 103.506, -0.812716, 0.28", "-53.4743, 104.146, 0.132763, 0.28", "-54.0227, 104.763, 0.94138, 0.42", "-54.0227, 104.763, 0.94138, 0.56", "-54.544, 105.289, 1.3557, 0.7", "-54.9866, 105.733, 1.58015, 0.56", "-55.273, 106.032, 1.67465, 0.42", "-55.7018, 106.536, 1.72801, 0.28", "-56.0982, 107.073, 1.78493, 0.14", "-56.4197, 107.567, 1.86686, 0.1", "-56.7207, 108.131, 2.03783, 0.1", "-56.9518, 108.642, 2.2445, 0.1", "-57.1506, 109.146, 2.49044, 0.1", "-57.5009, 110.15, 3.08763, 0.14", "-57.5742, 110.388, 3.25361, 0.28", "-57.8518, 111.276, 4.03921, 0.42", "-57.9779, 111.69, 4.45295, 0.56", "-58.0491, 111.878, 4.67302, 0.56", "-58.2112, 112.249, 5.12007, 0.7", "-58.3995, 112.612, 5.56361, 0.98", "-58.8422, 113.372, 6.46873, 0.84", "-59.0723, 113.75, 6.87273, 0.7", "-59.5869, 114.536, 7.7208, 0.56", "-59.7175, 114.724, 7.91601, 0.42", "-60.3029, 115.519, 8.70101, 0.1", "-60.6539, 115.935, 9.09984, 0.1", "-60.9945, 116.301, 9.41798, 0.14", "-61.8851, 117.141, 10.0258, 0.1", "-62.1991, 117.408, 10.1342, 0.1", "-62.5205, 117.662, 10.2113, 0.1", "-63.2101, 118.158, 10.2219, 0.14", "-63.2101, 118.158, 10.2219, 0.28", "-64.3424, 118.793, 9.77048, 0.84", "-65.0946, 119.205, 9.11931, 0.84" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-17.3194, 72.0281, -6.49287, 0.84", "-17.3378, 72.649, -6.47012, 0.84", "-17.3705, 73.3339, -6.44693, 0.98", "-17.3971, 74.0278, -6.42243, 0.84", "-17.4255, 74.6347, -6.40179, 0.84", "-17.4635, 75.2548, -6.38209, 0.84", "-17.5173, 75.9494, -6.36176, 0.7", "-17.58, 76.5677, -6.34593, 0.56", "-17.6706, 77.2479, -6.33184, 0.56", "-17.7617, 77.8629, -6.32051, 0.56", "-17.8521, 78.475, -6.3092, 0.7", "-17.9493, 79.0861, -6.29898, 0.84", "-18.0712, 79.6961, -6.2926, 0.84", "-18.0712, 79.6961, -6.2926, 0.98" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-25.9348, 64.9577, -42.5239, 1.12", "-25.7285, 65.4041, -42.5336, 1.12", "-25.4766, 65.907, -42.5443, 0.98", "-25.201, 66.3896, -42.554, 0.84", "-25.0144, 66.6931, -42.56, 0.7", "-24.6993, 67.1604, -42.5687, 0.56", "-24.3676, 67.6092, -42.5766, 0.7", "-23.9984, 68.0391, -42.5835, 0.1", "-23.608, 68.4402, -42.5893, 0.14", "-23.3447, 68.6815, -42.6186, 0.1", "-22.929, 69.0499, -42.6966, 0.1", "-22.5117, 69.4104, -42.8001, 0.1", "-22.2472, 69.6465, -42.8783, 0.1", "-21.8432, 70.0129, -43.0097, 0.1", "-21.1032, 70.7339, -43.2612, 0.14", "-20.7247, 71.1226, -43.389, 0.42", "-20.4893, 71.3808, -43.4665, 0.28", "-20.0322, 71.91, -43.598, 0.14", "-19.8051, 72.1812, -43.6489, 0.1", "-19.3634, 72.7291, -43.7102, 0.1", "-19.135, 73.0094, -43.7149, 0.1", "-18.9138, 73.2797, -43.7194, 0.1", "-18.4836, 73.8395, -43.729, 0.1", "-18.2816, 74.1309, -43.7674, 0.14", "-18.0978, 74.4336, -43.8365, 0.28", "-17.9879, 74.648, -43.9016, 0.42", "-17.7908, 75.0678, -44.0937, 0.1", "-17.5923, 75.5248, -44.3396, 0.14", "-17.2301, 76.3864, -44.8414, 0.1", "-17.0394, 76.84, -45.1001, 0.1", "-16.9463, 77.044, -45.2107, 0.1", "-16.496, 77.9556, -45.7308, 0.14", "-16.2528, 78.3943, -45.9915, 0.1", "-16.0844, 78.6733, -46.1487, 0.1", "-15.8035, 79.1051, -46.3586, 0.1", "-15.4962, 79.5352, -46.5587, 0.1", "-14.8951, 80.3418, -46.8824, 0.1", "-14.6807, 80.6151, -46.9663, 0.14", "-14.2399, 81.1461, -47.1202, 0.28", "-14.0089, 81.4167, -47.1865, 0.42", "-13.6432, 81.8325, -47.2649, 0.56", "-13.2723, 82.2563, -47.3123, 0.42", "-12.8996, 82.6731, -47.3188, 0.28", "-12.6662, 82.9438, -47.3231, 0.14", "-12.2114, 83.4902, -47.332, 0.1", "-11.9968, 83.7641, -47.3616, 0.1", "-11.787, 84.0482, -47.4133, 0.1", "-11.3932, 84.6087, -47.6026, 0.1", "-11.1036, 85.0505, -47.8025, 0.1", "-10.9306, 85.3195, -47.9437, 0.1", "-10.4182, 86.1251, -48.4093, 0.1", "-10.2434, 86.3952, -48.5654, 0.1", "-9.71555, 87.1916, -49.0169, 0.1", "-9.53153, 87.4672, -49.1623, 0.1", "-9.14708, 88.0085, -49.4052, 0.1", "-8.94553, 88.2888, -49.4966, 0.1", "-8.53247, 88.8476, -49.6455, 0.1", "-8.3201, 89.1247, -49.7206, 0.1", "-7.99073, 89.5602, -49.8245, 0.1", "-7.67267, 90.0087, -49.9519, 0.1", "-7.38641, 90.45, -50.1365, 0.1", "-6.92629, 91.2071, -50.5208, 0.1", "-6.82076, 91.3961, -50.6472, 0.1", "-6.62618, 91.7701, -50.9232, 0.1", "-6.40884, 92.1847, -51.2421, 0.1", "-6.00032, 92.9991, -51.7792, 0.1", "-5.85258, 93.2861, -51.932, 0.1", "-5.38474, 94.1987, -52.188, 0.1", "-5.12725, 94.6877, -52.2457, 0.1", "-4.84484, 95.1672, -52.2191, 0.1", "-4.30829, 96.0673, -52.0765, 0.1", "-4.13006, 96.3648, -51.9933, 0.1", "-3.58998, 97.2327, -51.7316, 0.1", "-3.39244, 97.5138, -51.6335, 0.14", "-3.23465, 97.7067, -51.5909, 0.14", "-2.52619, 98.4482, -51.5726, 0.28", "-2.25173, 98.6751, -51.6173, 0.28", "-1.79649, 98.9938, -51.7041, 0.14", "-1.3717, 99.2592, -51.7962, 0.1", "-0.887864, 99.5387, -51.8703, 0.1", "-0.3892, 99.7995, -51.9103, 0.1", "0.072458, 100.018, -51.9098, 0.1", "0.588799, 100.247, -51.9088, 0.1", "0.919374, 100.393, -51.9081, 0.14", "1.15403, 100.494, -51.9076, 0.28", "1.62307, 100.686, -51.9505, 0.7", "1.95685, 100.814, -52.0056, 0.56", "2.42305, 100.992, -52.1059, 0.42", "2.94339, 101.177, -52.2307, 0.28", "3.41577, 101.336, -52.349, 0.14", "4.40155, 101.665, -52.609, 0.1", "4.86734, 101.834, -52.7374, 0.1", "5.3791, 102.033, -52.8738, 0.1", "5.82332, 102.235, -53.0252, 0.1", "6.0358, 102.345, -53.1066, 0.1", "6.0358, 102.345, -53.1066, 0.1", "6.44484, 102.655, -53.353, 0.1", "6.80343, 102.992, -53.6246, 0.1", "7.36254, 103.623, -54.1052, 0.1", "7.66774, 104.015, -54.3794, 0.1", "8.16565, 104.691, -54.8621, 0.14", "8.44905, 105.084, -55.1389, 0.1", "8.72275, 105.48, -55.4409, 0.1", "8.97893, 105.877, -55.7374, 0.14", "9.14867, 106.138, -55.9142, 0.28", "9.70061, 106.975, -56.4721, 0.14", "9.88601, 107.238, -56.6296, 0.1", "10.4782, 107.988, -57.0837, 0.1", "10.6945, 108.24, -57.2295, 0.1", "11.0418, 108.634, -57.4245, 0.1", "11.2694, 108.893, -57.5201, 0.1", "11.7297, 109.42, -57.6206, 0.1", "12.0969, 109.856, -57.6678, 0.1", "12.3184, 110.126, -57.6723, 0.1", "12.6588, 110.573, -57.72, 0.1", "12.8582, 110.864, -57.7715, 0.1", "13.236, 111.45, -57.9058, 0.1", "13.5119, 111.915, -58.0303, 0.1", "13.6772, 112.219, -58.1161, 0.1", "14.1673, 113.119, -58.3812, 0.1", "14.4308, 113.594, -58.4902, 0.1", "14.6103, 113.904, -58.535, 0.1", "14.9106, 114.37, -58.5529, 0.1", "15.2529, 114.819, -58.5137, 0.1", "15.4101, 115.002, -58.4745, 0.14", "16.0725, 115.667, -58.2412, 0.28", "16.4884, 116.021, -58.1099, 0.14", "16.9102, 116.365, -57.9477, 0.1", "17.3093, 116.698, -57.7317, 0.1", "17.5403, 116.906, -57.5498, 0.1", "17.8635, 117.243, -57.2359, 0.1", "18.1127, 117.553, -56.9183, 0.14", "18.5436, 118.179, -56.2182, 0.1", "18.9527, 118.854, -55.4994, 0.1", "19.3033, 119.5, -54.8629, 0.1", "19.4973, 119.888, -54.5078, 0.1", "19.8061, 120.607, -53.7816, 0.1", "19.914, 120.789, -54.0702, 0.14", "20.496, 121.778, -55.4944, 0.28", "20.8001, 122.28, -56.2738, 0.14", "21.1144, 122.778, -57.0519, 0.28", "21.2002, 122.905, -57.2568, 0.42", "21.3993, 123.193, -57.6956, 0.14", "21.6314, 123.547, -58.0782, 0.1", "21.7949, 123.812, -58.2373, 0.1", "22.1244, 124.402, -58.4789, 0.1", "22.5464, 125.226, -58.7334, 0.1", "22.7775, 125.709, -58.9099, 0.1", "22.994, 126.184, -59.1032, 0.1", "23.0863, 126.401, -59.1925, 0.1", "23.288, 126.889, -59.3884, 0.1", "23.4754, 127.381, -59.5675, 0.1", "23.8286, 128.336, -59.8446, 0.1", "24.0068, 128.842, -59.9895, 0.1", "24.1822, 129.359, -60.1258, 0.1", "24.2599, 129.592, -60.178, 0.1", "24.4002, 130.065, -60.2591, 0.1", "24.5426, 130.596, -60.3139, 0.1", "24.6636, 131.081, -60.326, 0.1", "24.7874, 131.619, -60.3395, 0.1", "24.8988, 132.171, -60.3536, 0.1", "24.9833, 132.666, -60.3665, 0.1", "25.0759, 133.212, -60.3807, 0.1", "25.1678, 133.766, -60.3952, 0.1", "25.2129, 134.01, -60.4015, 0.1", "25.3099, 134.5, -60.4521, 0.14", "25.4083, 134.984, -60.534, 0.1", "25.5276, 135.511, -60.65, 0.1", "25.6443, 136.046, -60.7857, 0.1", "25.7186, 136.374, -60.874, 0.1", "25.9455, 137.369, -61.1412, 0.1", "26.0568, 137.841, -61.2638, 0.1", "26.1803, 138.366, -61.3882, 0.1", "26.282, 138.845, -61.4875, 0.1", "26.3905, 139.382, -61.6137, 0.1", "26.4772, 139.853, -61.7241, 0.1", "26.5688, 140.397, -61.8366, 0.1", "26.6505, 140.929, -61.9657, 0.1", "26.6844, 141.173, -62.0125, 0.1", "26.8334, 142.208, -62.1515, 0.1", "26.8964, 142.705, -62.1897, 0.1", "26.9667, 143.2, -62.2025, 0.1", "27.0322, 143.689, -62.1857, 0.14", "27.1633, 144.73, -62.0825, 0.1", "27.2302, 145.286, -62.0374, 0.1", "27.2789, 145.773, -61.9973, 0.1", "27.3177, 146.123, -62.0418, 0.1", "27.3775, 146.598, -62.196, 0.1", "27.4402, 147.031, -62.4446, 0.1", "27.5584, 147.855, -63.0524, 0.1", "27.6201, 148.251, -63.3585, 0.1", "27.7721, 149.086, -63.99, 0.1", "27.8647, 149.556, -64.2924, 0.1", "28.0931, 150.459, -64.7861, 0.1", "28.1578, 150.683, -64.8748, 0.1", "28.3252, 151.216, -64.9297, 0.1", "28.4952, 151.741, -64.8705, 0.1", "28.784, 152.714, -64.5794, 0.1", "28.8721, 153.02, -64.4361, 0.1", "28.9979, 153.437, -64.1834, 0.1", "29.2445, 154.306, -63.6262, 0.1", "29.3554, 154.766, -63.3285, 0.1", "29.4399, 155.204, -63.0919, 0.1", "29.5587, 156.107, -62.7775, 0.14", "29.5748, 156.345, -62.7485, 0.28", "29.5788, 156.902, -62.8331, 0.1", "29.5536, 157.319, -63.0975, 0.1", "29.4793, 158.106, -63.765, 0.1", "29.4484, 158.469, -64.1156, 0.1", "29.387, 159.195, -64.852, 0.1", "29.366, 159.556, -65.2063, 0.14", "29.3467, 160.919, -66.4921, 0.28", "29.3552, 161.298, -66.812, 0.28", "29.3715, 161.591, -67.0175, 0.14", "29.4066, 162.024, -67.2696, 0.1", "29.4667, 162.541, -67.4589, 0.1", "29.5415, 163.025, -67.5594, 0.1", "29.6362, 163.578, -67.5738, 0.1", "29.6362, 163.578, -67.5738, 0.1", "29.7187, 164.071, -67.5867, 0.1", "29.8219, 164.614, -67.6007, 0.1", "29.9251, 165.167, -67.6149, 0.1" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-25.9348, 64.9577, -42.5239, 0.7", "-26.4774, 65.2884, -42.8272, 0.7", "-26.8977, 65.5754, -43.0668, 0.56", "-27.1607, 65.7637, -43.2059, 0.42", "-27.5823, 66.0711, -43.4144, 0.28", "-28.3687, 66.667, -43.7758, 0.14", "-28.6326, 66.876, -43.8885, 0.1", "-29.0403, 67.2232, -44.0569, 0.1", "-29.5431, 67.686, -44.2443, 0.14", "-29.786, 67.921, -44.3194, 0.1", "-30.1678, 68.3098, -44.4458, 0.1", "-30.5385, 68.7035, -44.5618, 0.1", "-30.766, 68.9647, -44.6509, 0.1", "-31.1008, 69.3763, -44.8047, 0.1", "-31.4182, 69.7981, -44.9658, 0.1", "-31.9602, 70.5306, -45.2476, 0.1", "-32.235, 70.9041, -45.4261, 0.14", "-32.532, 71.3187, -45.6537, 0.28", "-32.8174, 71.7268, -45.8932, 0.14", "-33.0947, 72.138, -46.1364, 0.1", "-33.2725, 72.4065, -46.2808, 0.14", "-33.7541, 73.1675, -46.5961, 0.28", "-33.9202, 73.4477, -46.7421, 0.42", "-34.1448, 73.8887, -46.9848, 0.7", "-34.3241, 74.3002, -47.1997, 0.56", "-34.5006, 74.7544, -47.456, 0.42", "-34.6495, 75.1718, -47.682, 0.28", "-34.9548, 76.0656, -48.1164, 0.14", "-35.0949, 76.4802, -48.3477, 0.1", "-35.2229, 76.891, -48.5978, 0.1", "-35.4775, 77.7478, -49.1319, 0.1", "-35.5992, 78.1607, -49.3815, 0.1", "-35.7265, 78.5776, -49.6158, 0.1", "-36.0232, 79.4785, -50.0407, 0.1", "-36.1765, 79.9092, -50.2351, 0.1", "-36.3477, 80.3414, -50.4034, 0.1", "-36.5582, 80.8372, -50.5361, 0.1", "-36.6567, 81.0572, -50.584, 0.1", "-36.883, 81.5587, -50.653, 0.1", "-36.883, 81.5587, -50.653, 0.1", "-37.0932, 82.0543, -50.7582, 0.1", "-37.26, 82.4914, -50.917, 0.1", "-37.4172, 82.9079, -51.1186, 0.1", "-37.5826, 83.3159, -51.3458, 0.1", "-37.9486, 84.1508, -51.858, 0.14", "-38.1297, 84.5258, -52.1288, 0.28", "-38.4728, 85.1625, -52.6432, 0.42", "-38.758, 85.6273, -53.0899, 0.1", "-38.999, 85.98, -53.4528, 0.1", "-39.1561, 86.1832, -53.6864, 0.1", "-39.634, 86.769, -54.4211, 0.1", "-39.8864, 87.0639, -54.8192, 0.1", "-40.3303, 87.5807, -55.4964, 0.1", "-40.5805, 87.8796, -55.8927, 0.1", "-41.0681, 88.4599, -56.6269, 0.14", "-41.5814, 89.0611, -57.3187, 0.1", "-41.7607, 89.2711, -57.5418, 0.1", "-42.0503, 89.6075, -57.8747, 0.1", "-42.345, 89.9509, -58.1957, 0.1", "-42.627, 90.2935, -58.5495, 0.1", "-42.7968, 90.5051, -58.7658, 0.14", "-43.2323, 91.0314, -59.3916, 0.28", "-43.5483, 91.4057, -59.8959, 0.28", "-43.9864, 91.8823, -60.6069, 0.14", "-44.4832, 92.3901, -61.3839, 0.1", "-44.667, 92.5611, -61.6423, 0.1", "-45.307, 93.1093, -62.4066, 0.1", "-45.5246, 93.2846, -62.6269, 0.1", "-45.8759, 93.5696, -62.9489, 0.1", "-46.2591, 93.8732, -63.2261, 0.14", "-46.6505, 94.1855, -63.4607, 0.1", "-46.8892, 94.3949, -63.6193, 0.1", "-47.5343, 95.0398, -64.1452, 0.1", "-47.8429, 95.3844, -64.4625, 0.14", "-48.0159, 95.6005, -64.6713, 0.1", "-48.2811, 95.9548, -65.0154, 0.1", "-48.7475, 96.6516, -65.6434, 0.14", "-49.2162, 97.3807, -66.2298, 0.28", "-49.2162, 97.3807, -66.2298, 0.42", "-49.455, 97.8022, -66.5071, 0.28", "-49.6782, 98.235, -66.7659, 0.14", "-49.8711, 98.6431, -66.9702, 0.1", "-50.0824, 99.1266, -67.1434, 0.1", "-50.2583, 99.5705, -67.2688, 0.1", "-50.6139, 100.513, -67.5267, 0.1", "-50.7699, 100.966, -67.6446, 0.1", "-50.9092, 101.418, -67.7842, 0.1", "-51.0401, 101.871, -67.9369, 0.1", "-51.1671, 102.323, -68.0908, 0.1", "-51.3245, 102.828, -68.254, 0.1", "-51.4658, 103.275, -68.4102, 0.1", "-51.7714, 104.155, -68.791, 0.1", "-51.849, 104.368, -68.8932, 0.1", "-52.022, 104.825, -69.1588, 0.1", "-52.2015, 105.272, -69.441, 0.1", "-52.5312, 106.073, -69.9608, 0.1", "-52.7327, 106.519, -70.2402, 0.1", "-52.9266, 106.91, -70.457, 0.1", "-53.3802, 107.739, -70.8976, 0.1", "-53.6475, 108.184, -71.1192, 0.1", "-53.7749, 108.372, -71.1994, 0.1", "-54.1088, 108.798, -71.3366, 0.1", "-54.4588, 109.21, -71.4511, 0.1", "-54.9199, 109.721, -71.6098, 0.1", "-55.1511, 109.968, -71.6838, 0.1", "-55.5227, 110.36, -71.828, 0.1", "-55.7451, 110.601, -71.951, 0.1", "-56.0871, 110.969, -72.1848, 0.1", "-56.7097, 111.657, -72.6793, 0.1", "-56.9029, 111.883, -72.858, 0.1", "-57.2123, 112.242, -73.1565, 0.14", "-57.8146, 112.891, -73.7199, 0.1", "-58.1571, 113.23, -74.0096, 0.1", "-58.3269, 113.372, -74.1235, 0.14", "-58.6028, 113.556, -74.2422, 0.28", "-59.1682, 113.891, -74.5065, 0.7", "-59.6354, 114.125, -74.7177, 0.56", "-59.9396, 114.258, -74.8387, 0.42", "-60.4266, 114.458, -75.0413, 0.28", "-60.9104, 114.647, -75.242, 0.14", "-61.7524, 114.972, -75.5825, 0.14", "-62.249, 115.152, -75.7808, 0.1", "-62.7395, 115.34, -75.9657, 0.1", "-63.2407, 115.536, -76.1349, 0.1", "-63.5523, 115.665, -76.225, 0.1", "-64.0574, 115.892, -76.3381, 0.14", "-64.5417, 116.139, -76.4465, 0.28", "-65.0106, 116.417, -76.5856, 0.14", "-65.4346, 116.715, -76.7829, 0.1", "-65.6878, 116.909, -76.9404, 0.14", "-66.0703, 117.197, -77.2235, 0.14", "-66.784, 117.7, -77.8178, 0.1", "-67.0278, 117.844, -78.0288, 0.1", "-67.7345, 118.128, -78.5608, 0.14", "-68.1645, 118.208, -78.8091, 0.1", "-68.6387, 118.175, -78.9727, 0.1", "-69.1107, 118.044, -79.0467, 0.1", "-69.5711, 117.851, -79.0129, 0.1", "-70.5072, 117.397, -78.8445, 0.1", "-70.9878, 117.152, -78.6851, 0.1", "-71.4491, 116.905, -78.4991, 0.1", "-71.7409, 116.746, -78.3728, 0.1", "-72.6112, 116.288, -78.0024, 0.1", "-73.035, 116.072, -77.841, 0.1", "-73.9318, 115.654, -77.5792, 0.1", "-74.4386, 115.431, -77.4833, 0.1", "-74.9002, 115.239, -77.4565, 0.1", "-75.3568, 115.062, -77.4997, 0.1", "-75.8643, 114.86, -77.6347, 0.1", "-76.3037, 114.68, -77.7917, 0.1", "-77.2057, 114.31, -78.1966, 0.14", "-77.6339, 114.135, -78.3876, 0.1", "-78.0639, 113.956, -78.5709, 0.1", "-78.5367, 113.753, -78.7977, 0.1", "-78.745, 113.66, -78.9029, 0.1", "-79.1611, 113.468, -79.1033, 0.1", "-79.6345, 113.25, -79.297, 0.1", "-80.0499, 113.045, -79.491, 0.1", "-80.8883, 112.606, -79.9474, 0.14", "-81.1614, 112.462, -80.1229, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-7.20915, 39.8476, -35.7488, 1.12", "-8.08803, 40.8476, -37.705, 1.12", "-8.19677, 40.9755, -37.9754, 1.12", "-8.47355, 41.3156, -38.7503, 0.14", "-8.84472, 41.81, -39.8001, 0.1", "-9.19797, 42.3238, -40.8397, 0.1", "-9.59705, 42.9535, -42.076, 0.1", "-9.88478, 43.4606, -43.1389, 0.1", "-10.1764, 43.9781, -44.2021, 0.1", "-10.3281, 44.253, -44.739, 0.1", "-10.7116, 44.8898, -45.8514, 0.1", "-11.146, 45.5846, -46.8965, 0.1", "-11.146, 45.5846, -46.8965, 0.14", "-11.4858, 46.1046, -47.529, 0.1", "-11.6543, 46.3714, -47.8472, 0.1", "-12.1894, 47.2294, -48.8663, 0.1", "-12.4242, 47.6341, -49.2924, 0.1", "-12.8329, 48.4291, -50.1008, 0.1", "-13.0235, 48.8596, -50.5225, 0.14", "-13.3129, 49.6569, -51.3178, 0.28", "-13.4737, 50.1578, -51.7895, 0.7", "-13.597, 50.6059, -52.1955, 0.56", "-13.8248, 51.5513, -53.1014, 0.42", "-13.9198, 51.9926, -53.5224, 0.28", "-14.1395, 52.9209, -54.4362, 0.14", "-14.2691, 53.3641, -54.867, 0.1", "-14.5682, 54.2429, -55.7573, 0.1", "-14.9398, 55.1063, -56.6384, 0.14", "-14.9398, 55.1063, -56.6384, 0.28", "-15.2828, 55.6744, -57.2241, 0.1", "-15.5865, 56.106, -57.6996, 0.1", "-15.7885, 56.3585, -57.9957, 0.1", "-16.0221, 56.615, -58.2797, 0.14", "-16.1926, 56.8016, -58.4709, 0.28", "-16.8208, 57.551, -59.1842, 0.84", "-17.4325, 58.376, -60.0206, 0.7", "-17.7355, 58.8157, -60.4735, 0.56", "-17.9355, 59.1045, -60.7596, 0.42", "-18.2439, 59.55, -61.2028, 0.28", "-18.5538, 59.9861, -61.6668, 0.14", "-19.0429, 60.7099, -62.5002, 0.28", "-19.0429, 60.7099, -62.5002, 0.42", "-19.2675, 61.1012, -63.0476, 0.1", "-19.6411, 61.847, -64.0792, 0.1", "-19.9061, 62.5453, -65.0334, 0.1", "-20.1232, 63.3697, -66.0527, 0.1", "-20.1232, 63.3697, -66.0527, 0.14", "-20.1624, 63.8225, -66.4697, 0.1", "-20.1509, 64.3134, -66.8635, 0.1", "-20.0108, 65.4009, -67.5968, 0.14", "-19.8964, 65.9837, -67.9491, 0.1", "-19.7729, 66.5148, -68.2529, 0.1", "-19.5146, 67.6353, -68.893, 0.1", "-19.431, 67.9958, -69.1199, 0.1", "-19.2114, 69.0927, -69.8176, 0.14", "-19.2114, 69.0927, -69.8176, 0.28", "-19.1436, 69.6086, -70.1696, 0.28", "-19.0861, 70.1234, -70.4993, 0.14", "-18.9758, 71.2025, -71.1739, 0.1", "-18.9149, 71.7351, -71.5001, 0.1", "-18.7575, 72.8794, -72.1314, 0.14", "-18.6601, 73.4304, -72.413, 0.1", "-18.5193, 74.0431, -72.7002, 0.1", "-18.2249, 75.1248, -73.1146, 0.14", "-18.0435, 75.7669, -73.2786, 0.1", "-17.8641, 76.4322, -73.3981, 0.1", "-17.7052, 77.0922, -73.4967, 0.1", "-17.6082, 77.5163, -73.568, 0.14", "-17.4624, 78.1812, -73.7292, 0.28", "-17.3357, 78.7432, -73.9337, 0.42", "-17.1935, 79.2854, -74.2139, 0.56", "-16.9062, 80.2081, -74.8549, 0.42", "-16.7206, 80.7118, -75.3152, 0.14", "-16.3872, 81.4906, -76.1714, 0.1", "-16.0071, 82.2919, -77.1615, 0.1", "-15.8738, 82.5493, -77.4897, 0.1", "-15.4498, 83.3491, -78.4615, 0.14", "-15.0847, 84.0922, -79.2182, 0.28", "-14.986, 84.3141, -79.4193, 0.42", "-14.8055, 84.8102, -79.7609, 1.26", "-14.6164, 85.3904, -80.1117, 1.12", "-14.4299, 85.947, -80.4772, 0.98", "-14.2322, 86.4993, -80.8686, 0.84", "-13.8417, 87.466, -81.672, 0.7", "-13.7445, 87.6742, -81.8844, 0.84", "-13.317, 88.4661, -82.8613, 1.12", "-12.9392, 89.149, -83.7825, 0.98", "-12.5276, 89.8928, -84.8064, 0.84", "-12.1647, 90.5829, -85.7281, 0.7", "-11.8094, 91.3086, -86.6284, 0.56", "-11.4273, 92.1352, -87.5956, 0.42", "-11.2633, 92.5555, -88.022, 0.28", "-11.0991, 93.0888, -88.4546, 0.14", "-10.9736, 93.6159, -88.7711, 0.1", "-10.7565, 94.8154, -89.2431, 0.1", "-10.7565, 94.8154, -89.2431, 0.14", "-10.6547, 95.4251, -89.3199, 0.56", "-10.5211, 96.1019, -89.4317, 0.42", "-10.3938, 96.7653, -89.5511, 0.28", "-10.2748, 97.4446, -89.6635, 0.14", "-10.1752, 98.1094, -89.801, 0.1", "-10.1126, 98.53, -89.9185, 0.1", "-9.90914, 99.687, -90.4094, 0.1", "-9.80121, 100.211, -90.7313, 0.1", "-9.67599, 100.687, -91.1245, 0.1", "-9.43964, 101.514, -91.9037, 0.14", "-9.29687, 101.991, -92.4068, 0.28", "-9.03799, 102.762, -93.3011, 0.14", "-8.73882, 103.593, -94.2852, 0.1", "-8.46807, 104.352, -95.187, 0.1", "-8.33515, 104.762, -95.6497, 0.14", "-8.10872, 105.657, -96.5353, 0.1", "-7.95738, 106.555, -97.3228, 0.1", "-7.91992, 107.069, -97.6777, 0.1", "-7.92897, 107.627, -97.9603, 0.1", "-7.9711, 108.202, -98.1968, 0.1", "-8.02809, 108.777, -98.4047, 0.1", "-8.11365, 109.373, -98.5575, 0.1", "-8.11365, 109.373, -98.5575, 0.14", "-8.21712, 109.969, -98.6967, 0.1", "-8.42779, 111.19, -98.985, 0.1", "-8.50745, 111.78, -99.1633, 0.1", "-8.57182, 112.37, -99.3604, 0.1", "-8.6158, 112.948, -99.5518, 0.1", "-8.6509, 113.545, -99.7316, 0.1", "-8.66766, 114.147, -99.8842, 0.1", "-8.63928, 115.303, -100.172, 0.1", "-8.58839, 115.898, -100.343, 0.1", "-8.49851, 116.535, -100.585, 0.1", "-8.39321, 117.1, -100.826, 0.1", "-8.25177, 117.701, -101.132, 0.1", "-7.95295, 118.833, -101.734, 0.1", "-7.77932, 119.419, -102.079, 0.1", "-7.45468, 120.343, -102.694, 0.1", "-7.24005, 120.882, -103.095, 0.1", "-6.81988, 121.839, -103.905, 0.1", "-6.59753, 122.335, -104.341, 0.1", "-6.1989, 123.206, -105.07, 0.1", "-6.04987, 123.528, -105.323, 0.14", "-5.93864, 123.778, -105.479, 0.28", "-5.48009, 124.832, -106.035, 0.7", "-5.23304, 125.453, -106.241, 0.56", "-5.07087, 125.837, -106.358, 0.42", "-4.81464, 126.457, -106.562, 0.28", "-4.57435, 127.052, -106.844, 0.14", "-4.43182, 127.401, -107.061, 0.1", "-4.21361, 127.947, -107.45, 0.1", "-3.85562, 128.939, -108.239, 0.14", "-3.53765, 129.893, -109.035, 0.28", "-3.25512, 130.846, -109.848, 0.14", "-3.01265, 131.843, -110.672, 0.1", "-2.91681, 132.331, -111.058, 0.1", "-2.84692, 132.839, -111.415, 0.1", "-2.81961, 133.227, -111.629, 0.1", "-2.81521, 133.795, -111.864, 0.1", "-2.86011, 134.373, -112.09, 0.14", "-3.07879, 135.564, -112.601, 0.28", "-3.21793, 136.087, -112.921, 0.42", "-3.21793, 136.087, -112.921, 0.56", "-3.44779, 136.666, -113.549, 0.28", "-3.75029, 137.434, -114.592, 0.14", "-3.82874, 137.653, -114.965, 0.1", "-4.0123, 138.245, -116.146, 0.1", "-4.1439, 138.796, -117.355, 0.1", "-4.24612, 139.27, -118.421, 0.1", "-4.33241, 139.735, -119.494, 0.1", "-4.55534, 140.691, -121.653, 0.14", "-4.69811, 141.175, -122.709, 0.28", "-4.69811, 141.175, -122.709, 0.42", "-4.9602, 141.573, -123.478, 0.7", "-5.15232, 141.757, -123.828, 0.56", "-5.63312, 142.078, -124.519, 0.42", "-5.88669, 142.193, -124.869, 0.56", "-6.05612, 142.254, -125.132, 0.7", "-6.67856, 142.462, -126.299, 1.68", "-7.20091, 142.604, -127.473, 1.54", "-7.61751, 142.695, -128.57, 1.4", "-8.00238, 142.748, -129.809, 1.26", "-8.00238, 142.748, -129.809, 1.12", "-8.07497, 142.754, -130.12, 0.98" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-7.20915, 39.8476, -35.7488, 1.4", "-6.93178, 40.2169, -36.4629, 1.4", "-6.67591, 40.5461, -37.1415, 1.26", "-6.38806, 40.8879, -37.8967, 1.12", "-6.12017, 41.1838, -38.591, 0.98", "-5.84172, 41.4473, -39.2905, 0.84", "-5.55409, 41.6716, -40.003, 0.7", "-4.95304, 41.9673, -41.4103, 0.56", "-4.64134, 42.0619, -42.1119, 0.56", "-4.55145, 42.075, -42.3009, 0.1", "-4.14861, 42.1047, -43.0797, 0.1", "-3.73274, 42.1281, -43.826, 0.1", "-3.26575, 42.1555, -44.5682, 0.14", "-3.09259, 42.1774, -44.8079, 0.84", "-2.57132, 42.3183, -45.5026, 0.7", "-2.0504, 42.5445, -46.1734, 0.56", "-1.57953, 42.8429, -46.7426, 0.42", "-1.33402, 43.039, -47.0172, 0.28", "-0.846522, 43.5025, -47.5713, 0.14", "-0.413359, 43.9348, -48.0805, 0.28", "-0.177798, 44.2089, -48.3613, 0.42", "0.0299978, 44.5147, -48.6442, 0.28", "0.133892, 44.7125, -48.8242, 0.14", "0.337393, 45.2601, -49.3176, 0.1", "0.380777, 45.4088, -49.4554, 0.14", "0.460287, 45.7059, -49.7303, 0.1", "0.648308, 46.2839, -50.3185, 0.1", "0.870531, 46.8492, -50.9451, 0.1", "0.996082, 47.0986, -51.2439, 0.14", "1.28004, 47.5575, -51.8286, 0.28", "1.4665, 47.807, -52.177, 1.4", "1.84889, 48.226, -52.8406, 1.26", "2.23128, 48.5694, -53.4516, 1.12", "2.66968, 48.9022, -54.1005, 0.98", "3.10754, 49.1839, -54.7073, 1.12", "3.61998, 49.4696, -55.3569, 0.98", "4.11281, 49.6937, -55.9481, 0.84", "4.66783, 49.9151, -56.5511, 0.7", "4.95776, 50.0197, -56.8316, 0.56", "5.16818, 50.0956, -57.0257, 0.42", "5.46797, 50.2052, -57.2968, 0.28", "6.01405, 50.4307, -57.8328, 0.42", "6.20271, 50.5224, -58.0375, 0.56", "6.74127, 50.832, -58.6574, 0.42", "7.21219, 51.1389, -59.2219, 0.28", "7.71621, 51.502, -59.8366, 0.14", "8.17149, 51.8568, -60.3877, 0.1", "8.68409, 52.2806, -60.9524, 0.1", "8.96376, 52.5169, -61.2408, 0.1", "9.14647, 52.6747, -61.4045, 0.1", "9.70564, 53.1896, -61.8327, 0.1", "9.88395, 53.3734, -61.9625, 0.1", "10.1469, 53.6876, -62.1793, 0.1", "10.6108, 54.3251, -62.6865, 0.14", "10.6987, 54.4662, -62.8105, 0.14", "10.8574, 54.7409, -63.0752, 0.1", "11.1586, 55.3274, -63.6382, 0.1", "11.4373, 55.8823, -64.2119, 0.1", "11.6847, 56.3893, -64.7711, 0.1", "11.8117, 56.6401, -65.0651, 0.1", "12.0963, 57.1689, -65.6987, 0.14", "12.2565, 57.4391, -66.0321, 0.28", "12.5456, 57.9089, -66.6069, 0.14", "12.8639, 58.437, -67.2248, 0.1", "13.1405, 58.924, -67.7855, 0.1", "13.2371, 59.1079, -67.9935, 0.1", "13.5033, 59.6723, -68.5977, 0.1", "13.767, 60.2536, -69.1907, 0.1", "13.8961, 60.5423, -69.4559, 0.1", "14.1863, 61.1499, -70.0009, 0.14", "14.3402, 61.4292, -70.2633, 0.14", "14.4298, 61.5614, -70.3962, 0.28", "14.5782, 61.7363, -70.5696, 0.56", "15.1071, 62.23, -71.0584, 0.42", "15.6427, 62.6411, -71.476, 0.28", "16.2813, 63.0636, -71.8992, 0.14", "16.5901, 63.2426, -72.1117, 0.28", "16.9274, 63.4182, -72.3832, 0.14", "17.2106, 63.518, -72.6724, 0.28", "17.3258, 63.5213, -72.8476, 0.42", "17.3258, 63.5213, -72.8476, 0.56", "17.6289, 63.3454, -73.5668, 0.84", "17.9386, 63.1703, -74.2833, 0.7", "18.2952, 62.9751, -75.028, 0.56", "18.6637, 62.819, -75.6887, 0.42", "18.7788, 62.7882, -75.8586, 0.56", "19.0732, 62.7435, -76.211, 0.42", "19.6916, 62.7248, -76.7992, 0.28", "20.0425, 62.7435, -77.1096, 0.14", "20.6864, 62.8303, -77.6629, 0.1", "21.3136, 62.9487, -78.2256, 0.1", "21.4601, 62.9821, -78.3717, 0.1", "22.0192, 63.1337, -78.9982, 0.1", "22.4889, 63.2927, -79.5528, 0.14", "22.6648, 63.3678, -79.779, 0.28", "23.1423, 63.6255, -80.4359, 0.14", "23.5879, 63.9173, -81.1004, 0.1", "23.966, 64.2018, -81.7097, 0.1", "24.1841, 64.3814, -82.0822, 0.42", "24.5408, 64.7087, -82.7162, 0.42", "24.9022, 65.0935, -83.416, 0.28", "25.1938, 65.4907, -84.0429, 0.14", "25.4528, 65.9232, -84.6582, 0.28", "25.6736, 66.3621, -85.2463, 0.42", "25.7761, 66.6012, -85.5689, 0.1", "25.8597, 66.8467, -85.892, 0.1", "25.9184, 67.0885, -86.217, 0.1", "25.9941, 67.5542, -86.858, 0.14", "26.0345, 68.0531, -87.5421, 0.7", "26.0556, 68.538, -88.2389, 0.56", "26.0649, 68.9506, -88.8875, 0.42", "26.0658, 69.4013, -89.6382, 0.28", "26.0542, 69.8299, -90.3716, 0.14", "26.0431, 70.0634, -90.7697, 0.1", "26.0424, 70.4476, -91.4371, 0.1", "26.091, 70.8769, -92.196, 0.1", "26.2026, 71.2776, -92.9385, 0.1", "26.2026, 71.2776, -92.9385, 0.14", "26.4568, 71.6, -93.6213, 0.56", "26.7655, 71.9113, -94.2894, 0.42", "27.1608, 72.251, -94.9955, 0.28", "27.5574, 72.5509, -95.5849, 0.14", "28.0387, 72.8875, -96.2329, 0.1", "28.5416, 73.2289, -96.8653, 0.1", "28.7153, 73.3482, -97.0629, 0.1", "29.2714, 73.7409, -97.614, 0.1", "29.5743, 73.9656, -97.8795, 0.1", "30.0935, 74.3765, -98.2689, 0.14", "30.237, 74.4945, -98.3578, 0.28", "30.5641, 74.7672, -98.5439, 0.7", "30.8955, 75.039, -98.725, 0.56", "31.5294, 75.5543, -99.0299, 0.42", "31.7465, 75.7171, -99.125, 0.28", "32.1186, 75.9522, -99.2773, 0.14", "32.8497, 76.3124, -99.5908, 0.1", "33.0316, 76.3678, -99.6782, 0.1", "33.2133, 76.4086, -99.7697, 0.1", "33.6266, 76.4822, -99.9606, 0.1", "34.3947, 76.6247, -100.366, 0.1", "34.6497, 76.6813, -100.506, 0.1", "35.3805, 76.9055, -100.931, 0.1", "35.7495, 77.0583, -101.162, 0.56", "36.11, 77.2499, -101.389, 0.42", "36.6836, 77.6381, -101.778, 0.28", "37.0083, 77.8932, -101.992, 0.14", "37.5995, 78.3992, -102.381, 0.1", "37.7964, 78.5735, -102.512, 0.1", "38.1113, 78.8237, -102.748, 0.1", "38.6336, 79.2206, -103.2, 0.1", "38.7678, 79.3136, -103.327, 0.14", "38.9492, 79.4328, -103.527, 0.28", "39.463, 79.7474, -104.161, 0.14", "39.9454, 80.0459, -104.798, 0.1", "40.3827, 80.3358, -105.398, 0.14", "40.8484, 80.6679, -106.029, 0.1", "41.2741, 81.0089, -106.609, 0.14", "41.688, 81.3745, -107.145, 0.28", "41.9336, 81.6385, -107.439, 0.1", "42.1725, 81.9418, -107.686, 0.1", "42.3299, 82.1463, -107.824, 0.1", "42.5846, 82.457, -108.044, 0.1", "42.8727, 82.7146, -108.303, 0.1", "43.4338, 83.0312, -108.893, 0.1", "43.5662, 83.0754, -109.049, 0.14", "44.0698, 83.1824, -109.663, 0.56", "44.5665, 83.2614, -110.284, 0.42", "45.1017, 83.3354, -110.98, 0.28", "45.5803, 83.4128, -111.618, 0.14", "46.0859, 83.5107, -112.294, 0.28", "46.2098, 83.5425, -112.46, 0.42", "46.7424, 83.7189, -113.134, 0.28", "47.2493, 83.9182, -113.723, 0.14", "47.8218, 84.1666, -114.337, 0.1", "48.3573, 84.4018, -114.841, 0.1", "48.5126, 84.4652, -114.966, 0.42", "48.8328, 84.58, -115.194, 0.28", "49.1858, 84.6852, -115.393, 0.14", "49.9343, 84.9016, -115.738, 0.1", "50.2955, 85.0252, -115.909, 0.1", "50.6325, 85.1832, -116.094, 0.1", "51.1773, 85.5873, -116.605, 0.14", "51.2554, 85.7053, -116.748, 0.28", "51.3157, 86.0007, -117.095, 0.1", "51.298, 86.5673, -117.754, 0.1", "51.2575, 86.877, -118.106, 0.1", "51.1679, 87.385, -118.707, 0.1", "51.1182, 87.6577, -119.017, 0.1", "51.0494, 88.2176, -119.643, 0.1", "51.0265, 88.7787, -120.277, 0.1", "51.036, 89.0502, -120.589, 0.1", "51.082, 89.5157, -121.16, 0.14", "51.125, 89.7838, -121.539, 0.14", "51.1552, 89.9359, -121.786, 0.1", "51.2504, 90.3577, -122.548, 0.1", "51.3404, 90.6878, -123.239, 0.1", "51.4402, 91.0356, -124.01, 0.1", "51.6073, 91.6309, -125.377, 0.1", "51.6991, 91.9441, -126.163, 0.1", "51.783, 92.2136, -126.882, 0.1", "51.9778, 92.7166, -128.283, 0.1" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "14.7525, -94.1859, 6.5289, 0.84", "15.1927, -95.1879, 7.03205, 0.84", "15.3923, -95.7194, 7.27823, 0.98", "15.5778, -96.2725, 7.50504, 1.12", "15.7397, -96.8415, 7.71672, 0.98", "16.0482, -98.0583, 8.12057, 0.84", "16.1754, -98.6433, 8.2983, 0.7", "16.2816, -99.3084, 8.44796, 0.7", "16.3289, -99.9226, 8.54548, 0.84", "16.3335, -100.61, 8.60062, 0.84", "16.303, -101.232, 8.59575, 0.84", "16.2316, -101.927, 8.53323, 0.84", "16.1518, -102.543, 8.47342, 0.7", "15.9275, -103.818, 8.2664, 0.56", "15.8131, -104.425, 8.17801, 0.7", "15.6974, -105.037, 8.10645, 0.84", "15.5672, -105.716, 8.06567, 0.7", "15.4923, -106.153, 8.06328, 0.84", "15.3196, -107.414, 8.13633, 0.98", "15.2063, -108.59, 8.32913, 0.98", "15.1226, -109.26, 8.46944, 0.84", "14.9958, -109.942, 8.58023, 0.98", "14.9495, -110.247, 8.63537, 0.84", "14.9195, -110.553, 8.69414, 0.84", "14.894, -111.232, 8.83181, 0.98", "14.8736, -111.931, 8.88611, 1.12", "14.9218, -113.084, 8.94552, 1.26", "15.0017, -114.235, 9.00667, 1.12", "15.0425, -114.845, 9.05014, 0.98", "15.0911, -115.468, 9.09761, 1.12", "15.1535, -116.086, 9.14353, 0.98", "15.2166, -116.707, 9.19847, 1.12", "15.2595, -117.151, 9.24414, 1.12", "15.2689, -117.838, 9.2955, 0.98", "15.2502, -118.458, 9.36254, 1.12", "15.1682, -119.14, 9.41938, 0.98", "15.0471, -119.75, 9.45728, 0.84", "14.8926, -120.358, 9.48115, 0.98", "14.6984, -121.024, 9.48398, 0.7", "14.4689, -121.689, 9.46067, 0.84", "13.9849, -122.787, 9.40247, 0.98", "13.6628, -123.402, 9.3605, 0.84", "13.6628, -123.402, 9.3605, 0.98", "13.266, -123.974, 9.35122, 0.84", "13.0932, -124.238, 9.33808, 0.84", "12.7208, -124.823, 9.40747, 0.98", "12.4393, -125.414, 9.67288, 0.84", "12.2633, -125.776, 9.83828, 0.7", "12.1558, -126.04, 9.94291, 0.7", "11.9681, -126.687, 10.1414, 0.84", "11.8903, -127.108, 10.2368, 0.7", "11.9268, -127.775, 10.4206, 0.7", "12.0242, -128.429, 10.6285, 0.84", "12.1524, -129.084, 10.844, 0.7", "12.2783, -129.667, 11.028, 0.7", "12.4079, -130.253, 11.2015, 0.56", "12.712, -131.451, 11.5082, 0.7", "12.712, -131.451, 11.5082, 0.84", "12.838, -131.728, 11.5881, 0.84", "13.0733, -132.293, 11.7213, 0.98", "13.2492, -132.886, 11.8073, 0.84", "13.2259, -133.506, 11.7149, 0.84", "12.6216, -134.424, 11.0351, 0.98", "12.2636, -134.802, 10.6667, 0.98", "11.5249, -135.458, 9.95769, 0.84", "10.7845, -136.063, 9.26946, 0.7", "9.33259, -137.226, 7.9323, 0.56", "8.58516, -137.82, 7.24359, 0.56", "8.30747, -138.046, 6.98404, 0.84", "7.88421, -138.455, 6.58214, 0.84", "7.60621, -138.94, 6.28963, 0.84", "7.50079, -139.53, 6.14412, 0.98", "7.51272, -139.84, 6.13004, 1.12", "7.54596, -140.152, 6.13119, 0.98", "7.62737, -140.773, 6.12196, 0.98", "7.70486, -141.392, 6.11549, 0.98", "7.77896, -142.08, 6.11749, 0.84", "7.82902, -142.704, 6.13245, 0.84", "7.87012, -143.326, 6.15404, 0.84", "7.88259, -143.638, 6.17114, 0.98", "7.88994, -144.08, 6.20317, 0.84", "7.88167, -144.689, 6.26144, 0.84", "7.80974, -145.385, 6.29321, 0.98", "7.6558, -145.988, 6.2382, 1.12", "7.5267, -146.4, 6.19414, 0.98", "7.5267, -146.4, 6.19414, 1.12", "7.39386, -146.821, 6.14236, 0.84", "7.01701, -148.077, 5.99949, 0.84", "6.71555, -149.307, 5.86867, 0.84", "6.55101, -150.493, 5.87092, 0.56", "6.53741, -151.114, 5.92387, 0.56", "6.58797, -151.794, 6.02761, 0.56", "6.69231, -152.395, 6.15449, 0.56", "6.85906, -152.965, 6.3508, 0.7", "7.26009, -154.134, 6.81291, 0.84", "7.4413, -154.698, 7.01493, 0.98", "7.62328, -155.25, 7.22453, 1.12", "7.8113, -155.808, 7.4372, 1.12", "8.1517, -157.022, 7.8181, 1.12", "8.26178, -157.631, 7.90229, 0.98", "8.30247, -158.316, 7.83371, 0.84", "8.29973, -158.618, 7.7607, 0.7", "8.2722, -158.903, 7.62963, 0.56", "8.15299, -160.024, 7.0093, 0.7", "8.03856, -161.143, 6.3141, 0.84", "8.02693, -161.691, 6.00662, 0.98", "8.07523, -162.262, 5.74341, 0.84", "8.26973, -163.514, 5.39212, 0.84", "8.45382, -164.645, 5.22516, 0.98", "8.54029, -165.252, 5.19263, 0.98", "8.71359, -166.515, 5.26437, 0.98", "8.76962, -167.134, 5.30898, 0.98", "8.81338, -168.006, 5.37778, 0.98", "8.85428, -169.2, 5.4598, 0.84", "8.84766, -170.352, 5.37578, 0.98", "8.89755, -171.493, 5.19045, 0.84", "8.96112, -172.096, 5.03972, 0.84", "9.1164, -172.675, 4.88627, 0.84", "9.28656, -173.08, 4.78119, 1.12", "9.60568, -173.685, 4.64568, 0.98", "9.90796, -174.286, 4.4576, 0.84", "10.0965, -174.823, 4.18243, 0.98", "10.2163, -175.192, 3.9815, 1.12", "10.3994, -175.737, 3.71955, 0.98", "10.6037, -176.358, 3.47586, 0.84", "11.0153, -177.551, 3.09365, 0.84", "11.4423, -178.726, 2.80507, 0.98", "11.8542, -179.795, 2.61745, 0.84", "12.3176, -180.983, 2.49864, 0.84", "12.5529, -181.555, 2.48045, 0.84", "12.8163, -182.197, 2.51802, 0.98", "13.0461, -182.773, 2.60321, 1.12", "13.2374, -183.364, 2.69439, 0.98", "13.3174, -183.982, 2.69371, 0.98", "13.3136, -184.294, 2.66548, 0.98", "13.2624, -184.733, 2.6239, 0.98", "13.1225, -185.408, 2.55874, 1.12", "12.9556, -186.085, 2.48175, 1.26", "12.6829, -187.2, 2.33926, 1.12", "12.6829, -187.2, 2.33926, 0.98", "12.5816, -187.616, 2.26701, 0.56", "12.4154, -188.199, 2.09599, 0.7", "12.2174, -188.763, 1.90746, 0.84", "11.953, -189.298, 1.70127, 0.84", "11.5783, -189.839, 1.46572, 0.98", "10.7668, -190.778, 0.982074, 0.84", "9.92975, -191.629, 0.483312, 0.98", "9.48773, -192.007, 0.231344, 1.12", "8.52382, -192.698, -0.297568, 1.26", "7.47564, -193.323, -0.853167, 1.12", "7.47564, -193.323, -0.853167, 0.98" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "14.7525, -94.1859, 6.5289, 0.98", "15.0856, -94.9605, 6.04219, 0.98", "15.2785, -95.3549, 5.74739, 1.12", "15.4895, -95.7416, 5.45917, 1.26", "15.7454, -96.1718, 5.15614, 1.12", "16.2538, -96.9606, 4.62517, 0.98", "16.8097, -97.7705, 4.11517, 1.12", "17.007, -98.0337, 3.93591, 0.98", "17.3449, -98.4348, 3.67398, 0.84", "17.7122, -98.8326, 3.44875, 0.7", "17.9634, -99.0896, 3.34249, 0.56", "18.383, -99.4893, 3.2531, 0.42", "18.818, -99.8996, 3.20504, 0.28", "19.0821, -100.152, 3.17585, 0.42", "19.5079, -100.561, 3.12877, 0.28", "19.9368, -100.959, 3.08142, 0.14", "20.2131, -101.21, 3.05093, 0.1", "20.653, -101.596, 3.00245, 0.1", "21.0946, -101.979, 2.95381, 0.1", "21.5415, -102.366, 2.90458, 0.14", "21.9875, -102.743, 2.85548, 0.1", "22.4435, -103.12, 2.80533, 0.14", "22.7261, -103.352, 2.77424, 0.28", "22.9353, -103.515, 2.75128, 0.42" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-27.2511, -76.7838, -28.4766, 0.1", "-27.3392, -77.3614, -28.405, 0.1", "-27.4311, -77.8585, -28.2664, 0.1", "-27.5298, -78.3976, -28.0763, 0.1", "-27.6239, -78.8584, -27.8422, 0.1", "-27.7248, -79.3643, -27.5543, 0.1", "-27.8167, -79.812, -27.2942, 0.1", "-27.9879, -80.6486, -26.7591, 0.1", "-28.0795, -81.0753, -26.4643, 0.1", "-28.2589, -81.9265, -25.7711, 0.1", "-28.3366, -82.3105, -25.4307, 0.1", "-28.4075, -82.75, -25.0385, 0.1", "-28.4319, -82.9531, -24.8738, 0.1", "-28.4319, -82.9531, -24.8738, 0.1", "-28.4136, -83.8056, -24.4, 0.1", "-28.3651, -84.2897, -24.1939, 0.1", "-28.2991, -84.7681, -24.0099, 0.1", "-28.2129, -85.2725, -23.8897, 0.1", "-28.1231, -85.7894, -23.8293, 0.1", "-28.0237, -86.3649, -23.8174, 0.1", "-27.935, -86.8846, -23.854, 0.1", "-27.8594, -87.4029, -23.9003, 0.1", "-27.7299, -88.4666, -24.0023, 0.1", "-27.6892, -88.9882, -24.0497, 0.1", "-27.6703, -89.5025, -24.0875, 0.1", "-27.671, -90.0293, -24.1102, 0.1", "-27.6887, -90.6188, -24.1518, 0.1", "-27.7145, -91.144, -24.1892, 0.1", "-27.7489, -91.7242, -24.2157, 0.14", "-27.7879, -92.2483, -24.2559, 0.28", "-27.8276, -92.7691, -24.3051, 0.42", "-27.9001, -93.8627, -24.4151, 0.28", "-27.9217, -94.3805, -24.5007, 0.14", "-27.9465, -94.8965, -24.6101, 0.1", "-27.9697, -95.4727, -24.7454, 0.1", "-27.9916, -95.9782, -24.8623, 0.1", "-28.0093, -96.4935, -24.9632, 0.1", "-28.0217, -97.4593, -25.0826, 0.1", "-28.022, -97.8299, -25.1258, 0.1", "-28.0121, -98.3526, -25.1739, 0.1", "-27.9768, -98.8669, -25.2001, 0.1", "-27.9266, -99.3921, -25.1981, 0.1", "-27.8639, -99.9126, -25.1626, 0.1", "-27.7901, -100.43, -25.0915, 0.1", "-27.7048, -100.944, -25.0204, 0.1", "-27.6088, -101.515, -24.9414, 0.1", "-27.5228, -102.031, -24.87, 0.14", "-27.4522, -102.54, -24.7626, 0.28", "-27.4076, -103.039, -24.6274, 0.14", "-27.3854, -103.539, -24.4687, 0.1", "-27.384, -104.036, -24.2928, 0.1", "-27.4039, -104.525, -24.1039, 0.1", "-27.4664, -105.542, -23.6824, 0.1", "-27.4953, -106.085, -23.4488, 0.14", "-27.5002, -106.57, -23.2419, 0.28", "-27.4884, -106.814, -23.1464, 0.42", "-27.4884, -106.814, -23.1464, 0.56", "-27.441, -107.066, -23.0861, 0.56", "-27.303, -107.629, -23.0062, 0.56", "-27.1538, -108.201, -22.9804, 0.7", "-27.0301, -108.712, -22.9907, 0.56", "-26.9176, -109.228, -23.0195, 0.42", "-26.8202, -109.734, -23.0575, 0.28", "-26.7342, -110.251, -23.108, 0.14", "-26.6128, -111.313, -23.236, 0.1", "-26.5737, -111.833, -23.3032, 0.1", "-26.5424, -112.356, -23.366, 0.1", "-26.5184, -112.878, -23.4128, 0.14", "-26.5184, -112.878, -23.4128, 0.28", "-26.5071, -113.242, -23.3978, 0.56", "-26.4909, -113.762, -23.3291, 0.56", "-26.4698, -114.284, -23.2598, 0.42", "-26.4426, -114.804, -23.1906, 0.28", "-26.4079, -115.316, -23.1219, 0.14", "-26.3548, -115.834, -23.0518, 0.28", "-26.2947, -116.347, -22.9464, 0.28", "-26.2411, -116.839, -22.7691, 0.14", "-26.2061, -117.308, -22.5328, 0.1", "-26.1899, -117.735, -22.2194, 0.1", "-26.1873, -118.015, -21.9694, 0.1", "-26.2121, -118.741, -21.2607, 0.84", "-26.2608, -119.525, -20.5152, 0.7", "-26.3026, -119.978, -20.1323, 0.56", "-26.4107, -120.854, -19.5117, 0.42", "-26.4678, -121.155, -19.9377, 0.28", "-26.5285, -121.465, -20.4491, 0.14", "-26.6214, -121.941, -21.3144, 0.1", "-26.7894, -122.804, -23.0541, 0.1", "-26.9208, -123.618, -24.8196, 0.1", "-26.9778, -124.037, -25.7583, 0.1", "-27.0189, -124.431, -26.6291, 0.14", "-27.0189, -124.431, -26.6291, 0.28", "-27.0215, -124.58, -26.8526, 0.84", "-27.0018, -125.084, -27.1555, 0.7", "-26.9917, -125.607, -27.1952, 0.56", "-26.9975, -126.133, -27.1592, 0.42", "-27.0296, -126.643, -27.0939, 0.28", "-27.0988, -127.223, -27.021, 0.14", "-27.2049, -127.79, -26.9516, 0.1", "-27.3428, -128.362, -26.9241, 0.1", "-27.4147, -128.612, -26.9102, 0.1", "-27.5946, -129.162, -26.8742, 0.1", "-27.7819, -129.713, -26.7849, 0.1", "-27.9648, -130.258, -26.6456, 0.1", "-28.2421, -131.139, -26.3512, 0.14", "-28.4965, -132.048, -25.9972, 0.56", "-28.6238, -132.58, -25.7733, 0.42", "-28.7983, -133.55, -25.3432, 0.28", "-28.8515, -134.079, -25.1061, 0.14", "-28.8665, -134.561, -24.8976, 0.28", "-28.8561, -135.051, -24.7012, 0.42", "-28.8131, -135.556, -24.5644, 0.28", "-28.7489, -136.06, -24.4561, 0.28", "-28.6621, -136.631, -24.3773, 0.28", "-28.5704, -137.147, -24.3058, 0.42", "-28.4808, -137.66, -24.2346, 0.28", "-28.3962, -138.173, -24.1636, 0.42", "-28.3962, -138.173, -24.1636, 0.56", "-28.3577, -138.427, -24.1037, 0.56", "-28.2847, -138.926, -23.9463, 0.42", "-28.2069, -139.414, -23.7657, 0.28", "-28.1274, -139.889, -23.5764, 0.14", "-28.0457, -140.373, -23.3804, 0.1", "-27.8563, -141.387, -22.9803, 0.1", "-27.7594, -141.872, -22.7946, 0.1", "-27.6587, -142.358, -22.6187, 0.1", "-27.5462, -142.849, -22.4576, 0.1", "-27.425, -143.35, -22.3509, 0.1", "-27.2975, -143.913, -22.2606, 0.1", "-27.1938, -144.429, -22.2147, 0.1", "-27.1087, -144.936, -22.164, 0.14", "-27.0318, -145.524, -22.0975, 0.28", "-26.9445, -146.482, -21.9756, 0.42", "-26.8935, -147.479, -21.8342, 0.84", "-26.8865, -147.999, -21.7531, 0.7", "-26.8841, -148.573, -21.6558, 0.56", "-26.8949, -149.089, -21.5624, 0.42", "-26.9134, -149.606, -21.4636, 0.28", "-26.9234, -150.12, -21.3607, 0.14", "-26.9191, -150.642, -21.2922, 0.1", "-26.9077, -151.166, -21.2606, 0.14", "-26.8841, -151.746, -21.259, 0.1", "-26.8651, -152.27, -21.2695, 0.1", "-26.8483, -152.797, -21.2957, 0.1", "-26.8321, -153.319, -21.3421, 0.1", "-26.7938, -154.378, -21.4924, 0.14", "-26.779, -154.636, -21.5482, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-27.2511, -76.7838, -28.4766, 0.1", "-27.2731, -76.923, -28.7893, 0.1", "-27.323, -77.1446, -29.4342, 0.1", "-27.4456, -77.5175, -30.7795, 0.1", "-27.5064, -77.6805, -31.4417, 0.1", "-27.7491, -78.2418, -33.8572, 0.1", "-27.888, -78.5236, -35.1304, 0.1", "-28.0277, -78.7831, -36.3645, 0.1", "-28.3068, -79.3085, -38.8571, 0.1", "-28.4376, -79.5999, -40.1289, 0.14", "-28.5548, -79.9162, -41.3522, 0.1", "-28.7298, -80.7398, -43.765, 0.14", "-28.7601, -81.0188, -44.3909, 0.1", "-28.7573, -81.3723, -44.9725, 0.1", "-28.6855, -81.819, -45.4655, 0.1", "-28.6037, -82.0767, -45.6648, 0.1", "-28.3251, -82.6243, -45.9492, 0.1", "-27.9365, -83.146, -46.1276, 0.1", "-26.9897, -84.1369, -46.5238, 0.14", "-26.0782, -84.9339, -46.9944, 0.1", "-25.6052, -85.3345, -47.4453, 0.1", "-25.3496, -85.5462, -47.7832, 0.1", "-24.9327, -85.9156, -48.5776, 0.1", "-24.7563, -86.0821, -48.9928, 0.1", "-24.3757, -86.5188, -50.1706, 0.1", "-23.7616, -87.353, -52.5059, 0.1", "-23.6606, -87.5105, -52.9541, 0.1", "-23.3595, -87.954, -54.2877, 0.1", "-23.2603, -88.0943, -54.7424, 0.1", "-22.9102, -88.4811, -56.0827, 0.1", "-22.7586, -88.5994, -56.5359, 0.1", "-22.1703, -88.923, -57.9389, 0.1", "-21.8906, -89.043, -58.5526, 0.1", "-21.2679, -89.2275, -59.6974, 0.1", "-20.9111, -89.312, -60.2805, 0.1", "-20.0471, -89.4637, -61.4227, 0.14", "-19.7242, -89.5156, -61.7836, 0.28", "-19.1878, -89.6082, -62.3144, 0.14", "-18.6335, -89.731, -62.8342, 0.1", "-18.2689, -89.8138, -63.1289, 0.1", "-17.6725, -89.9694, -63.593, 0.1", "-17.0495, -90.131, -64.0144, 0.1", "-16.0211, -90.3979, -64.7828, 0.1", "-15.6601, -90.5024, -65.101, 0.14" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-65.0946, 119.205, 9.11931, 0.1", "-65.1693, 120.129, 10.0662, 0.1", "-65.2859, 121.097, 10.9632, 0.1", "-65.3615, 121.587, 11.3598, 0.1", "-65.585, 122.651, 12.1065, 0.1", "-65.7357, 123.258, 12.4706, 0.1", "-65.7357, 123.258, 12.4706, 0.1", "-65.9268, 123.884, 12.7584, 0.1", "-66.1199, 124.461, 12.9728, 0.1", "-66.3297, 125.108, 13.1893, 0.1", "-66.5048, 125.709, 13.3454, 0.1", "-66.814, 126.961, 13.5751, 0.1", "-66.8676, 127.262, 13.6278, 0.14", "-66.9359, 127.89, 13.7275, 0.1", "-66.9876, 128.6, 13.8207, 0.1", "-67.0075, 129.306, 13.882, 0.1", "-67.0102, 130.533, 13.9203, 0.14", "-67.0109, 131.839, 13.8803, 0.28", "-67.0028, 132.48, 13.8681, 0.14", "-67.0061, 133.107, 13.9131, 0.1", "-67.0378, 133.816, 14.0231, 0.1", "-67.0955, 134.518, 14.1782, 0.1", "-67.1586, 135.113, 14.384, 0.14", "-67.208, 135.527, 14.5693, 0.1", "-67.3672, 136.695, 15.2332, 0.1", "-67.453, 137.229, 15.5826, 0.1", "-67.5556, 137.754, 15.9491, 0.1", "-67.7698, 138.823, 16.691, 0.1", "-67.9569, 139.904, 17.4158, 0.1", "-68.0456, 140.435, 17.7703, 0.1", "-68.0894, 140.709, 17.9364, 0.1", "-68.1868, 141.258, 18.258, 0.1", "-68.3447, 141.885, 18.5811, 0.1", "-68.4464, 142.168, 18.6906, 0.1", "-69.0112, 143.336, 19.0728, 0.28", "-69.3945, 143.927, 19.2748, 0.14", "-69.7681, 144.398, 19.4812, 0.28", "-70.3473, 145.032, 19.7991, 0.14", "-70.6443, 145.331, 19.9865, 0.1", "-70.9367, 145.629, 20.182, 0.1", "-71.4986, 146.24, 20.5703, 0.1", "-72.2802, 147.154, 21.2106, 0.1", "-72.4586, 147.37, 21.3773, 0.1", "-73.1266, 148.287, 22.1329, 0.1", "-73.416, 148.73, 22.5116, 0.1", "-73.664, 149.172, 22.8972, 0.14", "-73.664, 149.172, 22.8972, 0.28" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-65.0946, 119.205, 9.11931, 0.1", "-65.8079, 119.11, 9.72771, 0.1", "-66.1795, 119.048, 10.0654, 0.1", "-66.4946, 118.978, 10.3803, 0.1", "-67.1354, 118.817, 11.012, 0.1", "-67.793, 118.642, 11.6278, 0.1", "-68.1225, 118.553, 11.922, 0.1", "-68.8068, 118.337, 12.4935, 0.14", "-69.5238, 118.095, 13.0598, 0.28", "-69.8767, 117.969, 13.3059, 0.14", "-70.251, 117.84, 13.5199, 0.1", "-70.4458, 117.779, 13.6101, 0.1", "-70.8361, 117.683, 13.7964, 0.14", "-71.2437, 117.608, 13.9684, 0.28", "-71.5403, 117.568, 14.0893, 0.42", "-72.4024, 117.482, 14.4623, 0.1", "-72.8648, 117.445, 14.6606, 0.1", "-73.7186, 117.4, 15.059, 0.14", "-74.126, 117.385, 15.2526, 0.1", "-74.5358, 117.377, 15.4359, 0.1", "-74.999, 117.372, 15.6151, 0.1", "-75.4285, 117.357, 15.7452, 0.1", "-76.3391, 117.314, 16.0008, 0.1", "-76.7779, 117.304, 16.0955, 0.14", "-77.2631, 117.318, 16.2009, 0.1", "-77.7015, 117.365, 16.2854, 0.14", "-77.9208, 117.407, 16.3174, 0.1", "-78.1369, 117.468, 16.332, 0.1", "-78.7356, 117.663, 16.3134, 0.1", "-79.0397, 117.768, 16.3347, 0.1", "-79.6291, 117.973, 16.4181, 0.1", "-79.926, 118.074, 16.4722, 0.1", "-80.3907, 118.222, 16.5684, 0.1", "-80.8154, 118.341, 16.6607, 0.1", "-81.714, 118.555, 16.8677, 0.1", "-82.0132, 118.613, 16.9341, 0.1", "-82.5018, 118.684, 17.0364, 0.14", "-82.5018, 118.684, 17.0364, 0.28", "-82.9954, 118.716, 17.0948, 0.28", "-83.4994, 118.726, 17.1168, 0.14", "-83.9474, 118.703, 17.0974, 0.1", "-84.1713, 118.678, 17.0873, 0.14", "-84.6139, 118.607, 17.0666, 0.1", "-85.0468, 118.515, 17.0791, 0.1", "-85.4775, 118.397, 17.1184, 0.1", "-85.9041, 118.266, 17.1771, 0.1", "-86.3259, 118.133, 17.2473, 0.14", "-86.7375, 117.992, 17.3528, 0.28", "-87.5866, 117.683, 17.6264, 0.42", "-87.981, 117.527, 17.7689, 0.28", "-88.3635, 117.359, 17.9129, 0.14", "-88.7452, 117.173, 18.0528, 0.1", "-89.5398, 116.756, 18.3292, 0.1", "-89.9146, 116.551, 18.467, 0.1", "-90.3284, 116.316, 18.6069, 0.1", "-90.7403, 116.073, 18.7563, 0.1", "-91.1469, 115.819, 18.9045, 0.14", "-91.1469, 115.819, 18.9045, 0.28", "-91.8872, 115.325, 19.0822, 0.1", "-92.2923, 115.038, 19.1796, 0.1", "-92.6401, 114.784, 19.2546, 0.14", "-92.8922, 114.592, 19.2965, 0.28", "-93.2828, 114.292, 19.3356, 0.14", "-93.6761, 113.984, 19.3452, 0.1", "-93.9162, 113.791, 19.3289, 0.14", "-94.3099, 113.485, 19.3026, 0.1", "-94.708, 113.193, 19.2766, 0.1", "-95.0803, 112.95, 19.2533, 0.1", "-95.5136, 112.699, 19.2271, 0.1", "-95.9561, 112.476, 19.2015, 0.1", "-96.3683, 112.305, 19.1788, 0.1", "-96.7927, 112.157, 19.1564, 0.1", "-97.2223, 112.032, 19.1344, 0.1", "-97.6609, 111.932, 19.1129, 0.1", "-98.0953, 111.859, 19.0925, 0.1", "-98.5949, 111.795, 19.0697, 0.1", "-98.8171, 111.774, 19.0597, 0.1", "-99.2673, 111.751, 19.0403, 0.1", "-99.7648, 111.739, 19.0192, 0.1", "-100.215, 111.743, 19.0005, 0.14", "-100.215, 111.743, 19.0005, 0.28", "-100.72, 111.773, 18.9805, 0.1", "-101.215, 111.812, 18.9612, 0.1", "-101.661, 111.857, 18.9441, 0.1", "-102.162, 111.913, 18.9251, 0.1", "-102.655, 111.979, 18.9067, 0.1", "-103.156, 112.042, 18.8879, 0.1", "-103.379, 112.068, 18.8795, 0.1", "-103.873, 112.133, 18.861, 0.1", "-104.371, 112.208, 18.8427, 0.1", "-104.864, 112.276, 18.8244, 0.1", "-105.311, 112.335, 18.8077, 0.1", "-105.812, 112.402, 18.7891, 0.1", "-106.121, 112.446, 18.7776, 0.1", "-106.622, 112.513, 18.7589, 0.1", "-107.069, 112.571, 18.7422, 0.14", "-107.562, 112.639, 18.7239, 0.28", "-107.782, 112.675, 18.7159, 0.14" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-18.0712, 79.6961, -6.2926, 0.98", "-17.8676, 80.8101, -5.99438, 0.98", "-17.7684, 81.4148, -5.86695, 0.84", "-17.6916, 82.0188, -5.76346, 0.7", "-17.6479, 82.4079, -5.70764, 0.56", "-17.5949, 83.0165, -5.63317, 0.7", "-17.5523, 83.5682, -5.57424, 0.56", "-17.5235, 84.1923, -5.55496, 0.42", "-17.518, 84.7483, -5.53969, 0.28", "-17.5529, 85.3602, -5.48401, 0.14", "-17.6196, 85.9071, -5.40405, 0.1", "-17.7273, 86.5123, -5.28627, 0.14", "-17.8538, 87.032, -5.16673, 0.28", "-17.9358, 87.2921, -5.1015, 0.14", "-18.3245, 88.3653, -4.82681, 0.1", "-18.5311, 88.8725, -4.70251, 0.1", "-18.7339, 89.3808, -4.59024, 0.1", "-18.944, 89.955, -4.48501, 0.1", "-19.0977, 90.4925, -4.44855, 0.1", "-19.2028, 91.0389, -4.47159, 0.1", "-19.2592, 91.5929, -4.52447, 0.1", "-19.295, 92.209, -4.51755, 0.1", "-19.3114, 92.8293, -4.44186, 0.14", "-19.3215, 93.8703, -4.21146, 0.28", "-19.3312, 94.1382, -4.13079, 0.42", "-19.4436, 95.2074, -3.74882, 0.1", "-19.6382, 96.2579, -3.34198, 0.14", "-19.7745, 96.7624, -3.14464, 0.1", "-19.9367, 97.2523, -2.95605, 0.1", "-20.1207, 97.752, -2.77717, 0.1", "-20.3358, 98.3193, -2.6457, 0.1", "-20.5266, 98.8452, -2.60628, 0.1", "-20.7102, 99.372, -2.60964, 0.1", "-20.7951, 99.639, -2.61056, 0.14", "-20.9623, 100.169, -2.56898, 0.7", "-21.125, 100.699, -2.48933, 0.7", "-21.2763, 101.215, -2.38327, 0.84", "-21.4339, 101.739, -2.25716, 0.98", "-21.5483, 102.111, -2.16106, 0.98", "-21.8645, 103.209, -1.87813, 0.84", "-22.0071, 103.732, -1.74773, 0.84", "-22.145, 104.262, -1.62823, 0.7", "-22.2691, 104.787, -1.48749, 0.56", "-22.3715, 105.306, -1.3425, 0.56", "-22.4615, 105.904, -1.18196, 0.56", "-22.4976, 106.445, -1.05522, 0.42", "-22.5094, 106.986, -0.910223, 0.42", "-22.5154, 108.054, -0.424325, 0.56", "-22.5163, 108.589, -0.0948312, 0.56", "-22.5149, 108.904, 0.135008, 0.7", "-22.5099, 109.4, 0.527296, 0.7", "-22.5099, 109.4, 0.527296, 0.84", "-22.3472, 111.108, 1.69893, 1.12", "-22.3112, 111.353, 1.82587, 1.12", "-22.2247, 111.919, 2.05741, 0.98", "-22.1508, 112.523, 2.21027, 0.84", "-22.1151, 112.907, 2.23657, 0.84", "-22.0724, 114.171, 2.11755, 0.84", "-22.08, 114.439, 2.04928, 0.7", "-22.1477, 115.037, 1.90182, 0.56", "-22.2862, 115.641, 1.76759, 0.42", "-22.4581, 116.155, 1.68007, 0.28", "-22.6774, 116.732, 1.62377, 0.14", "-22.8878, 117.253, 1.61771, 0.28", "-22.8878, 117.253, 1.61771, 0.42", "-23.0216, 117.794, 1.61943, 0.1", "-23.1238, 118.344, 1.62437, 0.1", "-23.2203, 118.963, 1.6317, 0.1", "-23.2805, 119.51, 1.64051, 0.1", "-23.327, 120.135, 1.6527, 0.14", "-23.3511, 120.691, 1.70717, 0.28", "-23.3503, 120.964, 1.75453, 0.42", "-23.3215, 121.498, 1.88226, 0.56", "-23.2633, 122.099, 2.05549, 0.56", "-23.2232, 122.363, 2.13873, 0.42", "-23.0187, 123.481, 2.41726, 0.56", "-22.8809, 124.089, 2.4889, 0.42", "-22.7875, 124.461, 2.54055, 0.28", "-22.6196, 125.059, 2.62236, 0.42", "-22.4638, 125.664, 2.68123, 0.56", "-22.2705, 126.675, 2.69017, 0.7", "-22.1562, 127.647, 2.51683, 0.7", "-22.1408, 129.649, 2.42094, 0.56", "-22.1615, 129.911, 2.51761, 0.7", "-22.1964, 130.391, 2.7888, 0.7", "-22.215, 130.838, 3.12773, 0.7", "-22.2137, 131.278, 3.48106, 0.56", "-22.217, 131.786, 3.85643, 0.42", "-22.2307, 132.812, 4.42652, 0.28", "-22.2488, 133.162, 4.61469, 0.14", "-22.3361, 134.197, 5.16309, 0.1", "-22.3897, 134.55, 5.33575, 0.14", "-22.533, 135.11, 5.56242, 0.56", "-22.7226, 135.62, 5.70341, 0.42", "-22.9781, 136.174, 5.82143, 0.28", "-23.2343, 136.664, 5.92502, 0.14", "-23.5239, 137.205, 6.02322, 0.1", "-23.7861, 137.755, 6.14768, 0.1", "-23.9705, 138.266, 6.28784, 0.1", "-24.1917, 139.335, 6.62216, 0.14", "-24.1917, 139.335, 6.62216, 0.28", "-24.0909, 139.913, 6.81124, 0.84", "-23.8889, 140.479, 6.99344, 0.7", "-23.7218, 140.822, 7.08989, 0.56", "-23.4306, 141.368, 7.19691, 0.42", "-23.1579, 141.922, 7.23734, 0.56", "-23.0588, 142.183, 7.25364, 0.56", "-22.9859, 142.453, 7.26768, 0.7", "-22.8972, 143.005, 7.2907, 0.84", "-22.8604, 143.56, 7.30889, 0.7", "-22.8891, 144.115, 7.32092, 0.56", "-22.9604, 144.727, 7.33041, 0.7", "-22.9604, 144.727, 7.33041, 0.84" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-18.0712, 79.6961, -6.2926, 0.84", "-18.1828, 80.0589, -6.82327, 0.84", "-18.3946, 80.7471, -7.83005, 0.7", "-18.6001, 81.4148, -8.80668, 0.56", "-18.793, 82.0416, -9.7237, 0.42", "-18.9046, 82.4044, -10.2544, 0.56", "-19.005, 82.7308, -10.7319, 0.42" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "29.9251, 165.167, -67.6149, 0.14", "30.109, 166.432, -67.4427, 0.14", "30.1809, 167.034, -67.3375, 0.28", "30.2647, 167.709, -67.2193, 0.42", "30.3059, 168.008, -67.1704, 0.42", "30.4717, 169.275, -66.9856, 0.28", "30.5633, 169.955, -66.8973, 0.14", "30.6349, 170.549, -66.7901, 0.1", "30.7268, 171.227, -66.6873, 0.1", "30.8134, 171.909, -66.6168, 0.1", "30.8753, 172.506, -66.5492, 0.1", "30.9223, 173.191, -66.4859, 0.1", "30.9352, 173.497, -66.4439, 0.1", "30.9622, 174.169, -66.3293, 0.1", "30.9867, 174.772, -66.212, 0.1", "31.0614, 176.004, -65.9591, 0.1", "31.1289, 176.609, -65.8788, 0.1", "31.2344, 177.28, -65.8434, 0.1", "31.3821, 177.956, -65.8573, 0.1", "31.4993, 178.374, -65.8989, 0.1", "31.7192, 179.009, -66.0085, 0.14", "32.1851, 180.187, -66.2933, 0.14", "32.4333, 180.813, -66.3916, 0.1", "32.5844, 181.222, -66.4254, 0.1", "32.8025, 181.868, -66.4265, 0.1", "32.9926, 182.524, -66.3231, 0.1", "33.1448, 183.173, -66.1298, 0.1", "33.3707, 184.354, -65.6503, 0.1", "33.413, 184.635, -65.5326, 0.1", "33.4809, 185.273, -65.273, 0.1", "33.5792, 186.482, -64.8166, 0.1", "33.6116, 187.07, -64.6271, 0.1", "33.6314, 187.734, -64.4697, 0.1", "33.6516, 188.346, -64.3883, 0.1", "33.6736, 188.957, -64.3272, 0.1", "33.6837, 189.643, -64.2533, 0.1", "33.6959, 190.255, -64.1985, 0.1", "33.7214, 190.855, -64.1032, 0.1", "33.7396, 191.287, -64.0126, 0.1", "33.7617, 191.584, -63.9412, 0.1", "33.8899, 192.8, -63.6425, 0.1", "33.977, 193.458, -63.4921, 0.1", "34.0814, 194.129, -63.3564, 0.1", "34.1855, 194.731, -63.2606, 0.1", "34.2935, 195.4, -63.1907, 0.1", "34.4174, 196.079, -63.2057, 0.1", "34.5679, 196.726, -63.3586, 0.1", "34.635, 197.01, -63.4601, 0.1", "34.7873, 197.63, -63.7335, 0.1", "34.9235, 198.171, -64.0047, 0.1", "35.2263, 199.249, -64.6619, 0.14", "35.5505, 200.301, -65.3604, 0.28", "35.7185, 200.793, -65.696, 0.14", "35.9227, 201.339, -66.0534, 0.1", "36.0225, 201.592, -66.2038, 0.1", "36.5136, 202.778, -66.7757, 0.1", "36.757, 203.394, -66.9781, 0.1", "36.9116, 203.793, -67.0684, 0.1", "37.1734, 204.411, -67.1923, 0.1", "37.4343, 205.044, -67.2924, 0.14", "37.6807, 205.677, -67.35, 0.1", "37.7737, 205.972, -67.3506, 0.1", "37.9639, 206.638, -67.3553, 0.1", "38.0712, 207.051, -67.3599, 0.1", "38.2229, 207.636, -67.3665, 0.1", "38.4094, 208.297, -67.4357, 0.1", "38.5906, 208.876, -67.5354, 0.1", "38.8044, 209.507, -67.6706, 0.1", "39.0142, 210.149, -67.8272, 0.1", "39.1322, 210.548, -67.9288, 0.1", "39.4754, 211.757, -68.2514, 0.1", "39.5821, 212.166, -68.3652, 0.1", "39.7322, 212.805, -68.5436, 0.14", "39.85, 213.385, -68.7098, 0.1", "39.9409, 213.975, -68.8701, 0.1", "39.991, 214.574, -68.9969, 0.1", "39.991, 214.574, -68.9969, 0.14", "39.964, 214.882, -69.0179, 0.56" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "29.9251, 165.167, -67.6149, 0.1", "28.8521, 164.23, -67.5969, 0.1", "28.2943, 163.728, -67.623, 0.1", "27.9571, 163.389, -67.7089, 0.1", "27.474, 162.849, -67.9009, 0.1", "27.0198, 162.293, -68.1149, 0.1", "26.751, 161.922, -68.2542, 0.1", "26.3936, 161.305, -68.4779, 0.1", "25.8724, 160.162, -68.7578, 0.1", "25.5919, 159.265, -68.8607, 0.1", "25.5156, 158.94, -68.828, 0.1", "25.3922, 158.307, -68.6524, 0.1", "25.1468, 157.055, -68.1537, 0.1", "25.0129, 156.462, -67.8731, 0.1", "24.8383, 155.818, -67.5223, 0.14", "24.5004, 154.624, -66.8528, 0.84", "24.2962, 153.98, -66.5144, 0.7", "24.168, 153.573, -66.3283, 0.56", "23.9467, 152.685, -66.0515, 0.42", "23.9467, 152.685, -66.0514, 0.28", "23.9639, 152.357, -65.9801, 0.42", "24.0505, 152.037, -65.9261, 0.56", "24.2985, 151.349, -65.7886, 0.42", "24.5413, 150.734, -65.6583, 0.28", "24.8128, 150.055, -65.5132, 0.42", "25.067, 149.437, -65.4296, 0.28", "25.3012, 148.828, -65.3439, 0.14", "25.5319, 148.202, -65.2514, 0.1", "25.7577, 147.579, -65.1517, 0.1", "25.9856, 146.959, -65.041, 0.1", "26.3957, 145.808, -64.8181, 0.1", "26.7662, 144.677, -64.4625, 0.28", "26.9418, 144.079, -64.217, 0.14", "27.0832, 143.437, -63.8461, 0.1", "27.1727, 142.885, -63.4732, 0.1", "27.2381, 142.338, -63.0822, 0.1", "27.3363, 141.221, -62.2865, 0.1", "27.402, 140.652, -61.9533, 0.1", "27.5833, 139.431, -61.3582, 0.1", "27.7591, 138.793, -61.2553, 0.1", "28.0574, 138.224, -61.4664, 0.1", "28.3961, 137.732, -61.7842, 0.1", "29.0709, 136.912, -62.4573, 0.1", "29.8175, 136.125, -63.181, 0.1", "31.3728, 134.681, -64.5781, 0.1", "31.3728, 134.681, -64.5781, 0.14", "32.3519, 133.93, -65.004, 0.42", "32.7192, 133.641, -64.9421, 0.28", "33.2025, 133.176, -64.5801, 0.14", "33.9545, 132.309, -63.7368, 0.1", "34.3369, 131.835, -63.2809, 0.1", "34.6037, 131.518, -63.0583, 0.1", "35.1004, 130.993, -62.8231, 0.1", "35.6393, 130.478, -62.659, 0.14", "35.8877, 130.254, -62.5964, 0.1", "36.8036, 129.385, -62.3027, 0.1", "37.2785, 128.879, -61.985, 0.1", "37.6181, 128.429, -61.6048, 0.1", "37.8031, 128.118, -61.3053, 0.1", "38.2063, 127.264, -60.4817, 0.1", "38.5415, 126.262, -59.592, 0.1", "38.6549, 125.743, -59.1778, 0.1", "38.7389, 125.18, -58.8222, 0.14", "38.8297, 124.567, -58.5592, 0.1", "38.9354, 123.936, -58.4101, 0.1", "39.0626, 123.277, -58.3891, 0.1", "39.1786, 122.622, -58.4537, 0.1", "39.2443, 121.956, -58.4992, 0.1", "39.2823, 120.72, -58.5333, 0.1", "39.2727, 120.257, -58.5233, 0.1", "39.2328, 119.511, -58.4667, 0.1", "39.1687, 118.779, -58.3746, 0.1", "39.0319, 117.4, -58.1306, 0.1", "38.9679, 116.752, -57.9816, 0.1", "38.9169, 116.108, -57.799, 0.1", "38.9053, 115.464, -57.6244, 0.1", "38.9363, 114.746, -57.4502, 0.1", "38.9864, 114.103, -57.2754, 0.1", "39.0218, 113.781, -57.1892, 0.1", "39.0872, 113.147, -56.9864, 0.1", "39.1525, 112.528, -56.7643, 0.1", "39.2232, 111.908, -56.5232, 0.1", "39.3621, 110.645, -56.0138, 0.1", "39.4211, 110.022, -55.7681, 0.1", "39.4636, 109.394, -55.5421, 0.1", "39.4821, 108.752, -55.3451, 0.1", "39.4842, 108.429, -55.2676, 0.1", "39.4762, 107.971, -55.1967, 0.7", "39.4489, 107.302, -55.1564, 0.56", "39.3992, 106.553, -55.118, 0.42", "39.3522, 105.817, -55.1402, 0.28", "39.318, 105.153, -55.197, 0.14", "39.2691, 104.418, -55.2451, 0.1", "39.2088, 103.669, -55.2787, 0.1", "39.1165, 103.005, -55.2507, 0.1", "38.8587, 101.639, -55.0695, 0.1", "38.7787, 101.32, -55.0034, 0.1", "38.4273, 100.128, -54.6797, 0.1", "38.213, 99.443, -54.4489, 0.1", "37.7759, 98.208, -53.9377, 0.1", "37.5151, 97.5745, -53.618, 0.1", "37.3464, 97.2052, -53.3869, 0.1", "37.1065, 96.6612, -53.0745, 0.1", "37.0064, 96.3629, -52.955, 0.14" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "7.47564, -193.323, -0.853167, 0.98", "8.16545, -193.697, -0.689459, 0.98", "8.46575, -193.889, -0.625251, 1.12", "9.51554, -194.683, -0.421804, 1.82", "10.6067, -195.649, -0.24911, 1.68", "11.5992, -196.719, -0.143577, 1.54", "11.9846, -197.323, -0.146672, 1.4", "12.1821, -197.985, -0.249461, 1.26", "12.0917, -199.255, -0.591363, 1.12", "11.5424, -200.427, -1.05168, 1.12", "11.3412, -200.693, -1.18067, 1.12", "10.3677, -201.657, -1.72884, 1.12", "9.37562, -202.47, -2.25543, 1.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.47564, -193.323, -0.853167, 0.98", "7.28461, -193.548, -0.40658, 0.98", "7.2103, -193.648, -0.199024, 1.12", "6.88919, -194.048, 0.643407, 1.4", "6.70905, -194.281, 1.0899, 1.26", "6.34298, -194.751, 1.90694, 1.12", "6.1368, -195.016, 2.32969, 0.98", "5.76682, -195.504, 3.01804, 0.84", "5.55887, -195.777, 3.34396, 0.7", "5.32528, -196.118, 3.67633, 0.56", "5.09572, -196.48, 4.00058, 0.1", "4.94708, -196.715, 4.18141, 0.1", "4.64627, -197.204, 4.53533, 0.1", "4.47502, -197.459, 4.6779, 0.1", "3.90993, -198.288, 5.0844, 0.14", "3.90993, -198.288, 5.0844, 0.28", "3.5891, -198.713, 5.13768, 0.28", "3.3941, -198.98, 5.12337, 0.14", "2.84742, -199.806, 4.94114, 0.1", "2.69186, -200.084, 4.85127, 0.1", "2.30687, -200.946, 4.51092, 0.14", "2.24187, -201.16, 4.43546, 0.56", "2.17583, -201.6, 4.26314, 0.42", "2.16498, -202.036, 4.09784, 0.28", "2.19729, -202.488, 3.95027, 0.14", "2.23856, -202.941, 3.81435, 0.1", "2.27971, -203.403, 3.70484, 0.14", "2.31416, -204.375, 3.49446, 0.28", "2.30952, -204.84, 3.4028, 0.42", "2.29428, -205.171, 3.34586, 0.1", "2.25952, -205.688, 3.27727, 0.1", "2.23295, -206.218, 3.2309, 0.1", "2.22558, -206.741, 3.21674, 0.1", "2.24068, -206.978, 3.225, 0.1", "2.27455, -207.211, 3.22589, 0.84", "2.39198, -207.672, 3.2085, 0.7", "2.56181, -208.17, 3.17336, 0.56", "2.73726, -208.609, 3.13263, 0.42", "2.94394, -209.099, 3.08299, 0.28", "3.13156, -209.533, 3.03732, 0.14", "3.34113, -210.021, 2.98651, 0.28", "3.43098, -210.239, 2.96521, 0.28", "3.59995, -210.683, 2.92724, 0.14", "3.75631, -211.122, 2.89369, 0.1", "3.92134, -211.634, 2.86122, 0.1", "4.05594, -212.079, 2.83637, 0.1", "4.18185, -212.536, 2.81548, 0.14", "4.29187, -212.996, 2.7646, 0.28", "4.38519, -213.455, 2.69055, 0.28", "4.46395, -213.915, 2.59929, 0.14", "4.52603, -214.366, 2.49721, 0.1", "4.57624, -214.825, 2.3821, 0.1", "4.63851, -215.763, 2.14299, 0.14", "4.65347, -216.222, 2.03004, 0.28", "4.6588, -216.687, 1.92778, 0.42", "4.6588, -216.687, 1.92778, 0.56", "4.66487, -217.014, 1.88876, 0.56", "4.69006, -217.545, 1.86247, 0.56", "4.73304, -218.018, 1.8741, 0.56", "4.78527, -218.488, 1.88202, 0.7", "4.85805, -218.95, 1.88164, 0.56", "4.95112, -219.414, 1.87369, 0.42", "5.07249, -219.872, 1.85459, 0.56", "5.21361, -220.326, 1.8278, 0.42", "5.36127, -220.776, 1.79824, 0.28", "5.52037, -221.28, 1.72923, 0.14", "5.65639, -221.726, 1.64115, 0.1", "5.79171, -222.221, 1.51918, 0.1", "5.88693, -222.671, 1.39443, 0.1", "5.95157, -223.123, 1.26297, 0.1", "5.99423, -223.967, 1.03306, 0.1", "5.99423, -223.967, 1.03306, 0.1", "5.98027, -224.303, 1.03494, 0.1", "5.94625, -224.83, 1.10611, 0.1", "5.92678, -225.285, 1.20791, 0.1", "5.91365, -225.797, 1.35481, 0.1", "5.89835, -226.743, 1.67282, 0.14", "5.88611, -227.185, 1.81506, 0.1", "5.8653, -227.694, 1.96917, 0.14", "5.83205, -228.148, 2.09662, 0.1", "5.77798, -228.653, 2.22175, 0.14", "5.73885, -228.981, 2.28327, 0.28", "5.65903, -229.495, 2.34404, 0.14", "5.57785, -230.017, 2.40573, 0.1", "5.51146, -230.542, 2.46203, 0.14", "5.4883, -230.774, 2.50554, 0.28", "5.45834, -231.224, 2.61747, 0.42", "5.44097, -231.546, 2.71333, 0.1", "5.41418, -231.993, 2.8658, 0.1", "5.38821, -232.44, 3.02712, 0.1", "5.32996, -233.447, 3.39929, 0.14", "5.3126, -233.929, 3.61012, 0.1", "5.31167, -234.232, 3.756, 0.14", "5.33396, -234.713, 3.98797, 0.28", "5.36976, -235.137, 4.18358, 0.42", "5.40469, -235.357, 4.26866, 0.56", "5.58822, -236.185, 4.49344, 0.56", "5.7086, -236.633, 4.60013, 0.42", "5.82891, -237.082, 4.69094, 0.28", "5.93418, -237.54, 4.76833, 0.14", "6.02557, -238.053, 4.83488, 0.1", "6.09555, -238.572, 4.87786, 0.1", "6.15011, -239.042, 4.9188, 0.1", "6.21449, -239.565, 4.99848, 0.1", "6.28335, -240.073, 5.10316, 0.1", "6.35565, -240.517, 5.25219, 0.1", "6.39722, -240.732, 5.34476, 0.1", "6.5711, -241.509, 5.72055, 0.1", "6.66052, -241.924, 5.93271, 0.14", "6.74193, -242.344, 6.14478, 0.1", "6.86909, -243.236, 6.56957, 0.14", "6.90606, -243.672, 6.75804, 0.1", "6.91601, -244.174, 6.93955, 0.1", "6.87581, -244.684, 7.04526, 0.1", "6.79634, -245.207, 7.10729, 0.1", "6.69479, -245.72, 7.11814, 0.1", "6.64172, -245.949, 7.10093, 0.1", "6.51138, -246.462, 7.05411, 0.1", "6.26422, -247.421, 6.95789, 0.14", "6.13082, -247.934, 6.91005, 0.1", "6.02896, -248.395, 6.90371, 0.14", "5.94281, -248.91, 6.93858, 0.1", "5.90756, -249.24, 6.98689, 0.1", "5.88525, -249.751, 7.1038, 0.1", "5.88496, -250.258, 7.26414, 0.1", "5.87955, -251.195, 7.50311, 0.14", "5.85655, -251.66, 7.59757, 0.28", "5.81597, -252.118, 7.66443, 0.42", "5.73151, -252.64, 7.71199, 0.56", "5.6357, -252.967, 7.6975, 0.42", "5.28138, -253.854, 7.54741, 0.28", "5.06305, -254.325, 7.42256, 0.42", "4.92382, -254.614, 7.34463, 0.28", "4.65203, -255.217, 7.18794, 0.14", "4.33046, -256.03, 6.93588, 0.1", "4.18255, -256.46, 6.8007, 0.1", "4.06173, -256.904, 6.67512, 0.1", "3.96626, -257.407, 6.52097, 0.1", "3.91465, -257.86, 6.41676, 0.1", "3.86954, -258.819, 6.29637, 0.1", "3.86405, -259.155, 6.30021, 0.1", "3.8556, -259.626, 6.33519, 0.1", "3.84573, -260.088, 6.39816, 0.1", "3.8425, -261.069, 6.58103, 0.1", "3.83789, -261.585, 6.70674, 0.1", "3.84065, -262.089, 6.85299, 0.1", "3.83799, -262.549, 6.97182, 0.1", "3.81569, -263.069, 7.08745, 0.1", "3.77922, -263.528, 7.16562, 0.1", "3.74223, -263.86, 7.19932, 0.1", "3.66873, -264.326, 7.21863, 0.1", "3.562, -264.838, 7.21583, 0.1", "3.43674, -265.356, 7.19388, 0.1", "3.30561, -265.862, 7.15886, 0.1", "3.16369, -266.374, 7.11874, 0.1", "2.91495, -267.246, 7.0477, 0.1", "2.76316, -267.747, 7.01182, 0.1", "2.61765, -268.197, 6.95606, 0.1", "2.44557, -268.697, 6.88066, 0.1", "2.26214, -269.177, 6.773, 0.14", "2.13165, -269.479, 6.69769, 0.28", "1.91715, -269.948, 6.58906, 0.14", "1.48123, -270.819, 6.35194, 0.14", "1.32808, -271.1, 6.2701, 0.28", "0.858597, -271.953, 6.0225, 0.14", "0.615983, -272.407, 5.90591, 0.1", "0.384758, -272.872, 5.77955, 0.14", "0.283848, -273.08, 5.72922, 0.28", "0.152755, -273.379, 5.68609, 0.1", "-0.0423212, -273.872, 5.62719, 0.1", "-0.206494, -274.379, 5.61275, 0.1", "-0.458751, -275.305, 5.51297, 0.14" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "22.9353, -103.515, 2.75128, 0.84", "22.4711, -104.177, 1.6804, 0.84", "21.9632, -104.901, 0.508915, 0.98", "21.5151, -105.54, -0.524668, 0.84", "21.0054, -106.266, -1.70037, 0.7", "20.8851, -106.438, -1.97786, 0.84", "20.8851, -106.438, -1.97786, 0.98" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "22.9353, -103.515, 2.75128, 0.56", "23.0077, -103.679, 2.5913, 0.56", "23.3542, -104.377, 1.95531, 0.7", "23.535, -104.735, 1.60525, 0.56", "23.6972, -105.06, 1.28864, 0.42", "24.0505, -105.738, 0.633564, 0.28", "24.1771, -105.966, 0.415797, 0.14", "24.3904, -106.309, 0.058158, 0.1", "24.8311, -106.925, -0.613542, 0.1", "24.932, -107.057, -0.785051, 0.14", "25.0811, -107.238, -1.0339, 0.28", "25.2401, -107.422, -1.27427, 0.14", "25.7194, -107.977, -1.96714, 0.1", "25.8892, -108.173, -2.19555, 0.14", "26.4092, -108.792, -2.79924, 0.28", "26.6781, -109.144, -3.09419, 0.14", "26.9359, -109.537, -3.35385, 0.1", "27.1684, -109.969, -3.55329, 0.1", "27.2567, -110.179, -3.62511, 0.28", "27.4003, -110.611, -3.75897, 0.14", "27.5167, -111.058, -3.87132, 0.1", "27.5837, -111.5, -4.02945, 0.14", "27.6221, -111.98, -4.2372, 0.1", "27.6381, -112.746, -4.67071, 0.1", "27.6394, -112.947, -4.79978, 0.1", "27.6414, -113.342, -5.06963, 0.14", "27.6571, -114.146, -5.61895, 0.1", "27.6724, -114.534, -5.88056, 0.1", "27.6985, -115.332, -6.44047, 0.14", "27.6744, -115.697, -6.74733, 0.28", "27.607, -116.011, -7.10553, 0.42", "27.5098, -116.282, -7.4902, 0.56", "27.5098, -116.282, -7.4902, 0.56", "27.2845, -116.677, -8.25841, 0.56", "26.8725, -117.411, -9.79789, 0.42", "26.6949, -117.759, -10.6023, 0.56", "26.6949, -117.759, -10.6023, 0.56", "26.6747, -117.862, -10.8205, 0.28", "26.6986, -118.377, -11.6911, 0.42", "26.8154, -118.721, -12.0806, 0.28", "27.2049, -119.411, -12.5426, 0.14", "27.4692, -119.826, -12.7402, 0.1", "27.7215, -120.208, -12.8799, 0.14", "28.2438, -121.025, -13.1303, 0.1", "28.4849, -121.428, -13.2032, 0.1", "28.6306, -121.72, -13.2898, 0.1", "28.6306, -121.72, -13.2898, 0.1", "28.6951, -121.924, -13.3959, 0.1", "28.9039, -122.738, -13.8876, 0.1", "28.9867, -123.136, -14.1402, 0.14", "29.1649, -124.014, -14.5815, 0.28", "29.2532, -124.453, -14.7374, 0.42", "29.3533, -124.907, -14.8367, 0.56", "29.4636, -125.365, -14.8744, 0.42", "29.5831, -125.815, -14.8418, 0.28", "29.8383, -126.769, -14.7001, 0.42", "29.9591, -127.218, -14.601, 0.56", "30.0798, -127.667, -14.511, 0.42", "30.1405, -127.893, -14.4737, 0.42", "30.2594, -128.34, -14.4242, 0.56", "30.3809, -128.799, -14.4048, 0.42", "30.501, -129.256, -14.4225, 0.28", "30.6401, -129.71, -14.4103, 0.14", "30.7934, -130.156, -14.3737, 0.28", "30.9665, -130.594, -14.3202, 0.42", "31.1625, -131.014, -14.2566, 0.42", "31.3799, -131.43, -14.1866, 0.28", "31.8368, -132.21, -14.0585, 0.14", "31.9627, -132.412, -14.0481, 0.84", "32.2431, -132.859, -14.0762, 0.7", "32.5287, -133.305, -14.1545, 0.56", "32.7769, -133.689, -14.2637, 0.42", "33.0498, -134.114, -14.4241, 0.28", "33.5513, -134.912, -14.7835, 0.14", "33.7732, -135.278, -14.9741, 0.1", "33.9261, -135.546, -15.1254, 0.1", "34.145, -135.963, -15.3677, 0.1", "34.3499, -136.389, -15.6064, 0.1", "34.5093, -136.834, -15.8563, 0.1", "34.7293, -137.677, -16.2886, 0.1", "34.7655, -137.886, -16.3974, 0.14", "34.7881, -138.183, -16.5401, 0.1", "34.7926, -138.618, -16.7283, 0.1", "34.7561, -139.532, -17.1328, 0.14", "34.7323, -139.967, -17.3192, 0.1", "34.7215, -140.402, -17.4856, 0.1", "34.7227, -140.899, -17.6759, 0.14", "34.7331, -141.333, -17.8665, 0.1", "34.7848, -142.233, -18.2257, 0.1", "34.8138, -142.449, -18.2973, 0.56", "34.9002, -142.893, -18.4396, 0.56", "35.026, -143.331, -18.5701, 0.42", "35.344, -144.221, -18.7933, 0.56", "35.6677, -145.026, -18.9295, 0.56", "35.8549, -145.513, -19.0009, 0.42", "36.0209, -146.004, -19.0946, 0.28", "36.1686, -146.503, -19.2043, 0.14", "36.2404, -146.821, -19.3056, 0.1", "36.3122, -147.259, -19.4772, 0.1", "36.3972, -148.15, -19.9173, 0.1", "36.4033, -148.57, -20.145, 0.1", "36.3784, -148.976, -20.39, 0.1", "36.2957, -149.704, -20.8821, 0.1", "36.2957, -149.704, -20.8821, 0.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-26.779, -154.636, -21.5482, 0.84", "-26.1293, -155.112, -20.7647, 0.84", "-25.8945, -155.284, -20.4816, 0.7", "-25.1824, -155.805, -19.6229, 0.56", "-24.9477, -155.977, -19.3399, 0.42", "-24.7077, -156.153, -19.0505, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-26.779, -154.636, -21.5482, 0.56", "-26.8511, -154.999, -21.3622, 0.56", "-26.9574, -155.512, -21.1075, 0.42", "-27.0669, -156.088, -20.8404, 0.28", "-27.1541, -156.616, -20.6133, 0.14", "-27.3119, -157.747, -20.164, 0.1", "-27.3743, -158.29, -19.9638, 0.1", "-27.4198, -158.896, -19.7535, 0.1", "-27.4557, -159.45, -19.58, 0.1", "-27.4893, -160.014, -19.4305, 0.1", "-27.5241, -160.582, -19.3135, 0.14", "-27.5631, -161.16, -19.2386, 0.1", "-27.6107, -161.724, -19.1659, 0.1", "-27.6665, -162.37, -19.0829, 0.1", "-27.7413, -163.005, -19.0024, 0.1", "-27.7856, -163.291, -18.9667, 0.1", "-27.8948, -163.931, -18.8874, 0.1", "-27.9875, -164.507, -18.8595, 0.14", "-28.0642, -165.083, -18.8655, 0.28", "-28.1213, -165.723, -18.8991, 0.42", "-28.1562, -166.376, -18.9505, 0.28", "-28.1829, -166.947, -19.0029, 0.14", "-28.2196, -168.131, -19.1242, 0.1", "-28.2367, -168.715, -19.1465, 0.1", "-28.2456, -169.296, -19.1241, 0.1", "-28.2407, -169.876, -19.0853, 0.1", "-28.2278, -170.514, -19.0062, 0.1", "-28.2278, -170.798, -18.9388, 0.1", "-28.2554, -171.886, -18.4532, 0.1", "-28.2793, -172.4, -18.1733, 0.14" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-22.9604, 144.727, 7.33041, 0.42", "-22.504, 145.736, 8.12318, 0.42", "-22.3437, 146.078, 8.36547, 0.28", "-21.9786, 146.786, 8.81822, 0.14", "-21.4452, 147.758, 9.35928, 0.1", "-21.0333, 148.485, 9.72198, 0.1", "-20.8147, 148.852, 9.88797, 0.1", "-20.5688, 149.217, 10.0136, 0.14", "-20.1708, 149.785, 10.1919, 0.28", "-19.6399, 150.504, 10.373, 0.14", "-19.3561, 150.86, 10.4208, 0.1", "-18.9031, 151.4, 10.5556, 0.14", "-18.6973, 151.632, 10.6533, 0.28", "-18.2436, 152.107, 10.9472, 0.56", "-18.2436, 152.107, 10.9472, 0.42", "-18.0386, 152.301, 11.1036, 0.56", "-17.2316, 153.074, 11.6535, 0.56", "-16.7561, 153.537, 11.9319, 0.42", "-16.2753, 153.991, 12.2375, 0.28", "-15.7838, 154.423, 12.5405, 0.14", "-15.4596, 154.69, 12.7313, 0.1", "-14.9409, 155.117, 13.017, 0.1", "-14.4124, 155.54, 13.266, 0.1", "-13.456, 156.322, 13.7424, 0.14", "-13.0074, 156.701, 14.0192, 0.28", "-12.7956, 156.897, 14.1696, 0.42", "-12.3317, 157.345, 14.5138, 0.56", "-11.8896, 157.797, 14.8596, 0.42", "-11.6177, 158.099, 15.0746, 0.56", "-10.8473, 159.071, 15.6298, 0.42", "-10.4747, 159.593, 15.9486, 0.28", "-10.1548, 160.051, 16.258, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-22.9604, 144.727, 7.33041, 0.98", "-23.379, 146.059, 7.60779, 0.98", "-23.581, 146.721, 7.71183, 0.84", "-23.7442, 147.397, 7.71084, 0.7", "-23.8854, 148.066, 7.65475, 0.56", "-24.0191, 148.744, 7.57172, 0.42", "-24.1506, 149.423, 7.477, 0.28", "-24.2671, 150.093, 7.3268, 0.42", "-24.5076, 151.498, 7.00344, 0.28", "-24.6247, 152.171, 6.85256, 0.14", "-24.7506, 152.83, 6.6664, 0.1", "-24.8901, 153.485, 6.46037, 0.1", "-25.0448, 154.132, 6.25271, 0.1", "-25.2207, 154.781, 6.05748, 0.1", "-25.4142, 155.426, 5.93639, 0.1", "-25.8239, 156.823, 5.74573, 0.1", "-26.002, 157.485, 5.68776, 0.1", "-26.1864, 158.154, 5.7232, 0.1", "-26.3727, 158.814, 5.86265, 0.1", "-26.753, 160.023, 6.2933, 0.1", "-26.9588, 160.627, 6.57651, 0.1", "-27.0629, 160.919, 6.73538, 0.1", "-27.5329, 162.147, 7.39194, 0.1", "-27.7714, 162.729, 7.7043, 0.1", "-28.0597, 163.378, 8.01993, 0.1", "-28.3545, 163.981, 8.22535, 0.1", "-28.6652, 164.578, 8.41487, 0.1", "-28.6652, 164.578, 8.41487, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-19.005, 82.7308, -10.7319, 0.28", "-19.3577, 83.1808, -10.0228, 0.28", "-19.6262, 83.6778, -9.42592, 0.42", "-19.6262, 83.6778, -9.42592, 0.56", "-19.8688, 84.3652, -8.90135, 0.28", "-19.9865, 84.7858, -8.67086, 0.28", "-20.0903, 85.2292, -8.49993, 0.14", "-20.1302, 85.7189, -8.48314, 0.1", "-20.137, 86.1517, -8.55065, 0.1", "-20.1332, 86.5787, -8.66019, 0.1", "-20.0891, 87.4028, -9.00975, 0.1", "-20.0653, 87.7924, -9.21452, 0.1", "-20.0348, 88.6086, -9.65854, 0.1", "-20.0252, 88.9998, -9.86121, 0.1", "-20.0203, 89.2027, -9.94881, 0.14", "-20.0094, 90.0635, -10.19, 0.1", "-20.0094, 90.0635, -10.19, 0.1", "-20.0226, 90.9583, -10.1481, 0.1", "-20.0452, 91.4431, -10.0615, 0.1", "-20.0653, 91.9157, -9.95924, 0.1", "-20.0843, 92.3943, -9.84196, 0.1", "-20.11, 92.8614, -9.71743, 0.14", "-20.1218, 93.0699, -9.67867, 0.28", "-20.1387, 93.4997, -9.63807, 0.28", "-20.1753, 93.9344, -9.60517, 0.14", "-20.2368, 94.4213, -9.57686, 0.1", "-20.2833, 94.8564, -9.5874, 0.1", "-20.3235, 95.2856, -9.62208, 0.1", "-20.3647, 95.7742, -9.67749, 0.1", "-20.398, 96.2086, -9.74006, 0.14", "-20.4339, 96.6393, -9.81241, 0.28", "-20.5373, 97.5475, -9.91825, 0.42", "-20.5973, 97.9826, -9.94308, 0.28", "-20.6719, 98.4139, -9.9426, 0.14", "-20.7663, 98.843, -9.9181, 0.1", "-20.8646, 99.2587, -9.86588, 0.14", "-21.0719, 100.152, -9.75877, 0.1", "-21.1652, 100.578, -9.72606, 0.1", "-21.2333, 101.012, -9.7398, 0.1", "-21.2727, 101.443, -9.81206, 0.1", "-21.2891, 101.906, -9.95627, 0.1", "-21.2897, 102.731, -10.3161, 0.1", "-21.2826, 103.426, -10.6851, 0.14", "-21.2826, 103.426, -10.6851, 0.28", "-21.3341, 103.843, -10.8121, 0.7", "-21.4344, 104.269, -10.8628, 0.56", "-21.5734, 104.676, -10.8406, 0.42", "-21.7349, 105.079, -10.7665, 0.28", "-22.0739, 105.89, -10.5856, 0.14", "-22.2384, 106.291, -10.5032, 0.28", "-22.3995, 106.692, -10.4284, 0.14", "-22.5561, 107.097, -10.366, 0.1", "-22.7043, 107.502, -10.3219, 0.1", "-22.8454, 107.916, -10.3008, 0.1", "-22.971, 108.337, -10.3407, 0.1", "-23.0916, 108.753, -10.4068, 0.1", "-23.2093, 109.17, -10.4931, 0.1", "-23.3235, 109.581, -10.5942, 0.1", "-23.4331, 109.985, -10.709, 0.14", "-23.6612, 110.839, -10.977, 0.28", "-23.7448, 111.242, -11.1339, 0.42", "-23.8074, 111.643, -11.3096, 0.28", "-23.8309, 111.841, -11.3989, 0.42", "-23.8536, 112.04, -11.4879, 0.56", "-23.9293, 112.451, -11.6239, 0.84", "-24.1977, 113.324, -11.7737, 0.7", "-24.3555, 113.722, -11.8247, 0.56", "-24.5637, 114.112, -11.811, 0.56", "-24.7259, 114.367, -11.7666, 0.42", "-25.2272, 115.123, -11.5539, 0.28", "-25.4968, 115.504, -11.4035, 0.14", "-25.4968, 115.504, -11.4035, 0.14", "-25.9306, 116.24, -11.13, 0.1", "-26.1019, 116.635, -11.0343, 0.1", "-26.227, 117.109, -10.9797, 0.1", "-26.2882, 117.545, -10.9831, 0.1", "-26.3206, 117.973, -11.0026, 0.1", "-26.3429, 118.893, -11.0788, 0.1", "-26.3259, 119.326, -11.1419, 0.1", "-26.3036, 119.805, -11.2128, 0.14", "-26.2925, 120.238, -11.274, 0.14", "-26.3041, 120.727, -11.3299, 0.1", "-26.33, 120.945, -11.3441, 0.14", "-26.3749, 121.159, -11.3662, 0.28", "-26.4705, 121.628, -11.4604, 0.84", "-26.5493, 122.049, -11.5661, 0.7", "-26.6174, 122.517, -11.6837, 0.56", "-26.6706, 122.934, -11.7888, 0.42", "-26.7676, 123.803, -11.9897, 0.28", "-26.8093, 124.286, -12.0862, 0.14", "-26.8339, 124.763, -12.1655, 0.1", "-26.8488, 125.252, -12.2241, 0.1", "-26.8488, 125.252, -12.2241, 0.14", "-26.8553, 125.689, -12.2162, 0.1", "-26.8521, 126.126, -12.2041, 0.1", "-26.8406, 126.558, -12.2193, 0.1", "-26.8328, 127.049, -12.2639, 0.1", "-26.8322, 127.538, -12.3263, 0.1", "-26.8601, 128.02, -12.3703, 0.1", "-26.9571, 128.854, -12.4198, 0.14", "-27.0391, 129.286, -12.4313, 0.28", "-27.1652, 129.756, -12.4298, 0.42", "-27.3171, 130.168, -12.4152, 0.28", "-27.7001, 131.008, -12.3499, 0.14", "-27.8965, 131.389, -12.3016, 0.1", "-28.0863, 131.785, -12.2581, 0.1", "-28.0863, 131.785, -12.2581, 0.1", "-28.1985, 132.208, -12.2875, 0.1", "-28.2806, 132.636, -12.354, 0.1", "-28.3373, 133.06, -12.4488, 0.1", "-28.4582, 133.952, -12.6467, 0.1", "-28.5171, 134.378, -12.7401, 0.1", "-28.5815, 134.803, -12.8266, 0.14", "-28.6542, 135.231, -12.9045, 0.28", "-28.717, 135.656, -12.993, 0.14", "-28.7785, 136.075, -13.081, 0.1", "-28.7785, 136.075, -13.081, 0.14", "-28.8229, 136.503, -13.164, 0.84", "-28.8714, 136.937, -13.2207, 0.7", "-28.9892, 137.851, -13.2834, 0.56", "-29.0427, 138.286, -13.29, 0.42", "-29.1198, 138.76, -13.2348, 0.28", "-29.2098, 139.177, -13.1343, 0.14", "-29.4374, 139.991, -12.8301, 0.1", "-29.5694, 140.369, -12.6483, 0.14", "-29.6766, 140.623, -12.5074, 0.28", "-29.9995, 141.365, -12.1136, 0.56", "-30.1664, 141.727, -11.9219, 0.7", "-30.3295, 142.094, -11.7433, 0.56", "-30.4831, 142.483, -11.6102, 0.42", "-30.6429, 142.877, -11.4915, 0.28", "-30.7221, 143.071, -11.4519, 0.14" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-19.005, 82.7308, -10.7319, 0.1", "-19.4828, 82.5068, -10.9396, 0.1", "-19.9583, 82.2839, -11.1463, 0.14", "-20.1971, 82.172, -11.2502, 0.28" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "9.37562, -202.47, -2.25543, 1.12", "9.81861, -203.043, -1.85052, 1.12", "9.94849, -203.249, -1.71296, 0.98", "10.0135, -203.414, -1.62547, 0.84", "10.1035, -204.123, -1.39179, 1.12", "10.1367, -204.542, -1.29017, 0.98", "10.2049, -204.966, -1.19762, 0.84", "10.2353, -205.238, -1.16922, 0.84", "10.3595, -206.029, -1.15718, 0.7", "10.5021, -206.838, -1.20287, 0.84", "10.6244, -207.548, -1.28864, 0.84", "10.8265, -208.316, -1.39539, 0.84", "10.9529, -208.686, -1.446, 0.7", "11.1132, -209.088, -1.49209, 0.56", "11.1916, -209.269, -1.49974, 0.7", "11.2851, -209.525, -1.50246, 0.56", "11.3539, -209.91, -1.50321, 0.7", "11.3832, -210.299, -1.48648, 0.84", "11.3763, -210.691, -1.45807, 0.84", "11.333, -211.126, -1.40957, 0.98", "11.2758, -211.506, -1.36715, 0.84", "11.1746, -212.054, -1.3141, 0.84", "11.1368, -212.321, -1.28185, 0.98", "11.0794, -213.038, -1.19258, 0.84", "11.0786, -213.314, -1.16731, 1.12", "11.1171, -213.703, -1.15575, 1.12", "11.1924, -214.082, -1.16515, 0.98", "11.4149, -214.849, -1.23289, 0.84", "11.5415, -215.218, -1.26487, 0.7", "11.6419, -215.477, -1.28321, 0.56", "11.7457, -215.855, -1.32746, 0.98", "11.8305, -216.235, -1.3633, 0.98", "11.9216, -216.615, -1.381, 0.98", "11.982, -216.88, -1.38515, 0.84", "12.0908, -217.258, -1.37072, 0.7", "12.3427, -218.016, -1.31194, 0.84", "12.5538, -218.736, -1.27183, 0.84", "12.7483, -219.512, -1.2566, 0.98", "12.7927, -219.895, -1.28003, 0.98", "12.793, -220.088, -1.30742, 0.98", "12.7564, -220.473, -1.38228, 0.84", "12.6391, -221.242, -1.58103, 0.98", "12.5523, -221.608, -1.69939, 0.98", "12.353, -222.345, -1.95472, 0.84", "12.2714, -222.704, -2.07687, 0.84", "12.2145, -223.073, -2.20193, 0.84", "12.2113, -223.489, -2.33107, 0.84", "12.2816, -223.863, -2.43585, 0.84", "12.3974, -224.223, -2.53923, 0.98", "12.5557, -224.57, -2.64341, 0.84", "12.7187, -224.953, -2.77796, 0.98", "12.9651, -225.598, -3.01518, 0.56", "13.0582, -225.995, -3.17179, 0.7", "13.0894, -226.4, -3.34469, 0.84", "13.0578, -226.804, -3.50968, 0.7", "12.9791, -227.487, -3.74805, 0.84", "12.9388, -227.758, -3.81811, 0.84", "12.8536, -228.543, -3.9566, 0.7", "12.8636, -228.927, -3.96475, 0.84", "12.937, -229.357, -3.91181, 0.84", "13.0996, -230.129, -3.77727, 0.7", "13.2078, -230.538, -3.68955, 0.56", "13.3885, -231.225, -3.54323, 0.42", "13.5016, -231.639, -3.44779, 0.42", "13.5951, -232.051, -3.35488, 0.56", "13.6915, -232.831, -3.21318, 0.56", "13.6682, -233.107, -3.18237, 0.84", "13.5869, -233.489, -3.16518, 0.84", "13.5152, -233.673, -3.17034, 0.98" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "9.37562, -202.47, -2.25543, 0.14", "9.441, -202.716, -2.4742, 0.14", "9.54747, -203.106, -2.83469, 0.28", "9.65406, -203.344, -3.04512, 0.42", "9.86082, -203.727, -3.36857, 0.28", "10.08, -204.118, -3.67287, 0.14", "10.2192, -204.37, -3.85826, 0.14", "10.3591, -204.621, -4.02936, 0.28", "10.7376, -205.295, -4.47499, 0.28", "10.9579, -205.704, -4.73913, 0.14", "11.1485, -206.07, -4.99143, 0.1", "11.3404, -206.474, -5.28596, 0.1", "11.5089, -206.875, -5.59751, 0.14", "11.5987, -207.128, -5.81101, 0.28", "11.7045, -207.51, -6.17224, 0.14", "11.8138, -207.879, -6.55721, 0.1", "11.9235, -208.221, -6.9567, 0.1", "11.9677, -208.434, -7.22357, 0.1", "11.9893, -208.641, -7.49783, 0.1", "11.9949, -208.843, -7.77246, 0.1", "11.9884, -209.044, -8.0525, 0.1", "11.9658, -209.441, -8.60555, 0.14", "11.9338, -209.974, -9.3685, 0.28", "11.9227, -210.367, -9.93021, 0.14", "11.9223, -210.565, -10.2124, 0.1", "11.928, -210.758, -10.4882, 0.1", "11.9612, -211.163, -11.0498, 0.14", "11.9974, -211.37, -11.3125, 0.28", "12.1343, -211.824, -11.7986, 0.14", "12.1343, -211.824, -11.7986, 0.28", "12.1343, -211.824, -11.7986, 0.42", "12.1754, -212.034, -11.9101, 0.56", "12.249, -212.478, -12.078, 0.42", "12.3199, -212.925, -12.2303, 0.28", "12.3547, -213.152, -12.3016, 0.28", "12.3547, -213.152, -12.3016, 0.28", "12.3924, -213.368, -12.3926, 0.28", "12.4816, -213.846, -12.6246, 0.14", "12.5723, -214.31, -12.8701, 0.1", "12.6552, -214.726, -13.0977, 0.1", "12.746, -215.19, -13.344, 0.1", "12.8349, -215.66, -13.5779, 0.14", "12.9222, -216.143, -13.7971, 0.28", "12.959, -216.362, -13.8821, 0.42", "12.9746, -216.589, -13.9593, 0.28", "12.9708, -217.047, -14.1018, 0.14", "12.9351, -217.499, -14.2214, 0.1", "12.8744, -217.961, -14.3264, 0.1", "12.8006, -218.425, -14.4227, 0.1", "12.65, -219.369, -14.619, 0.14", "12.65, -219.369, -14.619, 0.28", "12.6245, -219.599, -14.6817, 0.56", "12.5999, -220.052, -14.8304, 0.42", "12.6025, -220.495, -14.9942, 0.28", "12.6348, -220.94, -15.167, 0.14", "12.7184, -221.433, -15.3623, 0.1", "12.8031, -221.924, -15.5648, 0.14", "12.8891, -222.404, -15.7791, 0.1", "12.8891, -222.404, -15.7791, 0.14", "12.8878, -222.856, -16.0628, 0.1", "12.7786, -223.303, -16.3467, 0.14", "12.7786, -223.303, -16.3467, 0.28", "12.7235, -223.502, -16.4664, 0.56", "12.6278, -223.964, -16.7292, 0.42", "12.3921, -224.806, -17.2416, 0.28", "12.2731, -225.193, -17.4856, 0.14", "12.1346, -225.634, -17.7665, 0.1", "11.9936, -226.077, -18.0434, 0.1", "11.8727, -226.471, -18.2778, 0.1", "11.6744, -227.24, -18.678, 0.1", "11.6744, -227.24, -18.678, 0.1", "11.6526, -227.456, -18.7759, 0.1", "11.6333, -227.894, -18.9538, 0.1", "11.6467, -228.338, -19.1301, 0.1", "11.6941, -228.78, -19.313, 0.1", "11.7792, -229.262, -19.5213, 0.1", "11.8673, -229.734, -19.7499, 0.14", "11.9504, -230.15, -19.9792, 0.1", "12.0112, -230.596, -20.2669, 0.1", "12.0448, -231.022, -20.5885, 0.1", "12.0503, -231.279, -20.8207, 0.1", "12.0376, -231.642, -21.2169, 0.1", "11.9925, -231.846, -21.4905, 0.14", "11.8053, -232.33, -22.2655, 0.28", "11.7452, -232.445, -22.4724, 0.7", "11.6072, -232.678, -22.9392, 0.56", "11.4809, -232.9, -23.4224, 0.42", "11.3041, -233.265, -24.2634, 0.28", "11.265, -233.401, -24.5792, 0.7", "11.2626, -233.536, -24.8974, 0.7", "11.2786, -233.752, -25.3899, 0.56", "11.2793, -233.971, -25.8926, 0.42", "11.2798, -234.105, -26.203, 0.28", "11.3089, -234.316, -26.7082, 0.14", "11.3238, -234.52, -27.2065, 0.1", "11.3212, -234.649, -27.5273, 0.1", "11.2555, -235.043, -28.4737, 0.1", "11.2094, -235.173, -28.7824, 0.14" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "36.2957, -149.704, -20.8821, 0.1", "36.852, -150.703, -20.7778, 0.1", "37.1354, -151.251, -20.7444, 0.1", "37.4327, -151.871, -20.7234, 0.1", "37.687, -152.437, -20.7139, 0.1", "37.9711, -153.062, -20.714, 0.1", "38.2232, -153.618, -20.7198, 0.1", "38.4646, -154.185, -20.7685, 0.1", "38.6995, -154.758, -20.8152, 0.1", "38.9173, -155.334, -20.8568, 0.1", "39.0458, -155.749, -20.9164, 0.1", "39.1166, -156.042, -20.9748, 0.7", "39.2367, -156.633, -21.1184, 0.7", "39.339, -157.221, -21.2758, 0.56", "39.4288, -157.812, -21.4382, 0.7", "39.5958, -159.052, -21.7759, 0.56", "39.6692, -159.649, -21.928, 0.42", "39.7498, -160.243, -22.0689, 0.28", "39.8414, -160.843, -22.1942, 0.14", "39.9588, -161.429, -22.2956, 0.28", "40.0349, -161.727, -22.3315, 0.28", "40.2199, -162.315, -22.3634, 0.28", "40.4232, -162.899, -22.4005, 0.14", "40.6375, -163.477, -22.4411, 0.1", "40.8835, -164.116, -22.4886, 0.1", "41.1068, -164.688, -22.5791, 0.1", "41.3252, -165.253, -22.7037, 0.1", "41.5669, -165.881, -22.8764, 0.1", "41.7755, -166.435, -23.0544, 0.14", "41.9689, -166.979, -23.246, 0.28", "42.3471, -168.153, -23.6718, 0.42", "42.5311, -168.707, -23.8756, 0.84", "42.5311, -168.707, -23.8756, 0.7", "42.6385, -168.992, -23.9359, 0.28", "42.9164, -169.544, -23.9158, 0.14", "43.2373, -170.043, -23.7219, 0.1", "43.6088, -170.51, -23.3698, 0.1", "43.9481, -170.902, -23.0167, 0.1", "44.6482, -171.66, -22.2031, 0.1", "45.3522, -172.378, -21.354, 0.1", "45.9871, -173.004, -20.6115, 0.1", "46.7171, -173.736, -19.7991, 0.1", "47.0705, -174.105, -19.4332, 0.1", "47.7442, -174.885, -18.9108, 0.1", "48.0496, -175.458, -19.1431, 0.1", "48.4048, -176.387, -19.9967, 0.1", "48.6964, -177.227, -20.9163, 0.1", "48.9465, -177.975, -21.8178, 0.1", "49.0879, -178.361, -22.2934, 0.1", "49.3707, -179.109, -23.1844, 0.1", "49.4538, -179.312, -23.4094, 0.1", "49.6711, -179.776, -23.8766, 0.1", "49.9167, -180.264, -24.3164, 0.1", "50.1489, -180.745, -24.7587, 0.1", "50.3444, -181.176, -25.1697, 0.1", "50.6767, -181.988, -25.9818, 0.1", "50.9974, -182.86, -26.9212, 0.1", "51.1105, -183.251, -27.3815, 0.1", "51.2942, -184.049, -28.4109, 0.1", "51.3669, -184.423, -28.9111, 0.14", "51.5296, -185.216, -29.9476, 0.28", "51.5735, -185.419, -30.1833, 0.14", "51.7876, -186.282, -31.0993, 0.1", "52.038, -187.173, -32.036, 0.1", "52.1064, -187.393, -32.2439, 0.1", "52.2916, -187.913, -32.6731, 0.1", "52.5147, -188.42, -32.9544, 0.1", "52.8199, -189.009, -33.1385, 0.1", "53.5005, -190.124, -33.177, 0.14", "53.8313, -190.644, -33.1096, 0.28", "54.4228, -191.624, -33.0148, 0.84", "55.012, -192.783, -33.0158, 0.7", "55.2565, -193.351, -33.0674, 0.56", "55.4311, -193.992, -33.2419, 0.42", "55.5143, -194.559, -33.4817, 0.28", "55.5134, -195.616, -34.1835, 0.14", "55.4314, -196.643, -34.9845, 0.1", "55.396, -196.872, -35.1905, 0.1", "55.2229, -197.828, -36.0743, 0.1", "55.1299, -198.289, -36.4834, 0.1", "54.9496, -199.292, -37.2989, 0.1", "54.8868, -199.805, -37.643, 0.1", "54.8168, -200.907, -38.2676, 0.1", "54.8024, -201.461, -38.543, 0.1", "54.8273, -202.099, -38.7849, 0.1", "54.8755, -202.689, -38.9594, 0.1", "54.9488, -203.283, -39.1081, 0.1", "54.9879, -203.58, -39.1848, 0.1", "55.0411, -203.882, -39.2306, 0.56", "55.1639, -204.481, -39.3088, 0.42", "55.3204, -205.066, -39.3747, 0.28", "55.649, -206.156, -39.4646, 0.14", "55.8411, -206.745, -39.4949, 0.1", "56.2371, -207.818, -39.5282, 0.1", "56.4662, -208.391, -39.5338, 0.1", "56.7464, -209.018, -39.5296, 0.1", "57.0133, -209.579, -39.5163, 0.1", "57.2847, -210.134, -39.4936, 0.1", "57.5793, -210.763, -39.5072, 0.1", "57.8243, -211.328, -39.557, 0.1", "58.0853, -211.961, -39.609, 0.14", "58.3165, -212.535, -39.6546, 0.28", "58.5428, -213.097, -39.6992, 0.14", "58.7679, -213.674, -39.7429, 0.1", "58.9783, -214.252, -39.7824, 0.1", "59.1858, -214.836, -39.8208, 0.1", "59.3239, -215.241, -39.8458, 0.1", "59.5291, -215.825, -39.8835, 0.84", "59.7392, -216.404, -39.9229, 0.7", "59.9544, -216.981, -39.9637, 0.56", "59.9544, -216.981, -39.9637, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "36.2957, -149.704, -20.8821, 0.28", "37.9257, -149.997, -19.1155, 0.28", "38.7905, -150.156, -18.1933, 0.14", "39.6746, -150.33, -17.2871, 0.1", "40.5602, -150.504, -16.3794, 0.1", "41.6058, -150.71, -15.3077, 0.1", "42.4873, -150.883, -14.4042, 0.14", "43.4044, -151.085, -13.538, 0.28", "43.7525, -151.165, -13.2196, 0.42" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-28.2793, -172.4, -18.1733, 0.14", "-28.0121, -172.564, -18.397, 0.14", "-27.567, -172.823, -18.7498, 0.28", "-26.778, -173.259, -19.3105, 0.14", "-26.3028, -173.517, -19.6185, 0.1", "-25.9984, -173.682, -19.8063, 0.1", "-25.0953, -174.184, -20.3423, 0.1", "-24.6122, -174.469, -20.612, 0.1", "-24.1359, -174.784, -20.8371, 0.1", "-23.8274, -175.007, -20.9333, 0.1", "-23.8274, -175.007, -20.9333, 0.1", "-23.6323, -175.201, -20.9562, 0.1", "-23.2279, -175.658, -20.9436, 0.1", "-22.8344, -176.118, -20.8709, 0.1", "-22.5857, -176.41, -20.8002, 0.1", "-22.185, -176.861, -20.6685, 0.1", "-21.7785, -177.304, -20.5281, 0.1", "-21.5242, -177.574, -20.4378, 0.1", "-20.6848, -178.447, -20.1339, 0.1", "-20.27, -178.88, -19.9867, 0.1", "-20.0101, -179.153, -19.9002, 0.1", "-19.5928, -179.587, -19.763, 0.1", "-19.1806, -180.02, -19.6376, 0.1", "-18.9219, -180.305, -19.5768, 0.1", "-18.5309, -180.773, -19.5618, 0.1", "-18.279, -181.071, -19.5525, 0.1" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-28.2793, -172.4, -18.1733, 0.1", "-28.1419, -173.102, -18.0165, 0.1", "-28.0721, -173.467, -17.9543, 0.1", "-28.0021, -173.837, -17.9035, 0.1", "-27.932, -174.211, -17.8614, 0.1", "-27.8713, -174.584, -17.8229, 0.1", "-27.8223, -174.962, -17.7851, 0.1", "-27.7848, -175.34, -17.7708, 0.1", "-27.7555, -175.712, -17.7541, 0.1", "-27.7306, -176.093, -17.7352, 0.1", "-27.7055, -176.52, -17.713, 0.1", "-27.6808, -176.939, -17.6913, 0.1", "-27.656, -177.318, -17.6725, 0.1", "-27.6329, -177.698, -17.6529, 0.1", "-27.6082, -178.077, -17.6341, 0.1", "-27.5775, -178.458, -17.6173, 0.1", "-27.5385, -178.829, -17.604, 0.14", "-27.4923, -179.205, -17.5643, 0.28", "-27.44, -179.623, -17.4923, 0.14", "-27.3908, -179.983, -17.3795, 0.1", "-27.3384, -180.332, -17.2322, 0.1", "-27.3114, -180.497, -17.1512, 0.1", "-27.1847, -181.2, -16.7791, 0.1", "-27.119, -181.533, -16.6008, 0.1", "-26.9681, -182.234, -16.2422, 0.1", "-26.9082, -182.583, -16.1007, 0.1", "-26.8674, -182.95, -15.9989, 0.1", "-26.8446, -183.325, -15.9461, 0.1", "-26.8398, -183.707, -15.9526, 0.14", "-26.8486, -184.079, -15.9904, 0.1", "-26.8868, -184.866, -16.1434, 0.14", "-26.9102, -185.286, -16.2257, 0.1", "-26.9189, -185.474, -16.2601, 0.14", "-26.9275, -185.654, -16.3029, 0.28", "-26.9323, -185.837, -16.3509, 0.28", "-26.9261, -186.209, -16.4456, 0.14", "-26.8979, -186.58, -16.5271, 0.1", "-26.8635, -186.951, -16.6141, 0.1", "-26.7911, -187.708, -16.7846, 0.1", "-26.7484, -188.074, -16.8656, 0.1", "-26.6971, -188.443, -16.943, 0.1", "-26.6386, -188.813, -17.0154, 0.1", "-26.5678, -189.187, -17.0526, 0.1", "-26.4904, -189.56, -17.0349, 0.1", "-26.4247, -189.81, -16.9538, 0.1", "-26.3415, -190.144, -16.7898, 1.12", "-26.3415, -190.144, -16.7898, 0.98", "-26.2141, -190.751, -16.4006, 0.28", "-26.1465, -191.109, -16.1729, 0.14", "-26.0344, -191.775, -15.7802, 0.1", "-25.9795, -192.145, -15.5849, 0.1", "-25.9207, -192.491, -15.4361, 0.1", "-25.846, -192.851, -15.3288, 0.1", "-25.7507, -193.216, -15.2773, 0.1", "-25.6334, -193.576, -15.2289, 0.1", "-25.5726, -193.757, -15.2086, 0.1", "-25.4342, -194.156, -15.1386, 0.1", "-25.314, -194.551, -15.0423, 0.1", "-25.2516, -194.798, -14.9695, 0.1", "-25.117, -195.483, -14.7498, 0.1", "-25.0606, -195.88, -14.6224, 0.1", "-25.022, -196.289, -14.5007, 0.1", "-25.0098, -196.545, -14.4333, 0.1", "-24.998, -196.918, -14.3556, 0.1", "-24.9818, -197.295, -14.3048, 0.1", "-24.9513, -197.671, -14.2588, 0.1", "-24.9012, -198.044, -14.1945, 0.1", "-24.8361, -198.404, -14.0864, 0.1", "-24.765, -198.747, -13.9496, 0.1", "-24.693, -199.086, -13.7889, 0.1", "-24.5561, -199.702, -13.4142, 0.1", "-24.4854, -200.012, -13.2019, 0.1", "-24.3509, -200.656, -12.7405, 0.1", "-24.2975, -200.965, -12.5211, 0.1", "-24.2522, -201.281, -12.3074, 0.1", "-24.1851, -201.968, -11.8981, 0.1", "-24.1651, -202.315, -11.7379, 0.1", "-24.1435, -202.705, -11.5596, 0.1", "-24.1217, -203.095, -11.4027, 0.1", "-24.1092, -203.272, -11.3319, 0.1", "-24.0732, -203.674, -11.1863, 0.1", "-24.0312, -204.037, -11.0806, 0.1", "-23.918, -204.779, -10.8697, 0.1", "-23.8485, -205.135, -10.7747, 0.1", "-23.7683, -205.499, -10.6879, 0.1", "-23.6931, -205.864, -10.6127, 0.1", "-23.6212, -206.235, -10.554, 0.1", "-23.5696, -206.61, -10.5136, 0.1", "-23.5534, -206.8, -10.5054, 0.1", "-23.5361, -207.173, -10.4845, 0.1", "-23.5274, -207.599, -10.4567, 0.1", "-23.5322, -207.977, -10.4277, 0.1", "-23.5448, -208.396, -10.393, 0.1", "-23.557, -208.774, -10.3614, 0.1", "-23.5738, -209.199, -10.3248, 0.1", "-23.587, -209.578, -10.2929, 0.1", "-23.6037, -209.997, -10.2862, 0.14", "-23.6237, -210.377, -10.3011, 0.1", "-23.6431, -210.757, -10.3382, 0.1", "-23.6653, -211.173, -10.4007, 0.1", "-23.6775, -211.547, -10.475, 0.1", "-23.6886, -212.235, -10.631, 0.14", "-23.6886, -212.235, -10.631, 0.28", "-23.6908, -212.419, -10.6861, 0.28", "-23.6976, -212.782, -10.8035, 0.14", "-23.6985, -213.148, -10.9174, 0.1", "-23.7063, -213.502, -11.0406, 0.1", "-23.729, -213.866, -11.1592, 0.1", "-23.8173, -214.624, -11.4136, 0.1", "-23.8809, -214.982, -11.5352, 0.1", "-23.9663, -215.336, -11.6504, 0.1", "-24.1663, -216.056, -11.8618, 0.1", "-24.2781, -216.457, -11.9645, 0.1", "-24.378, -216.859, -12.0407, 0.1", "-24.4197, -217.125, -12.0658, 0.1", "-24.4557, -217.544, -12.0924, 0.1", "-24.4514, -217.926, -12.1, 0.1", "-24.4192, -218.188, -12.0922, 0.1", "-24.3495, -218.564, -12.0892, 0.1", "-24.2616, -218.978, -12.0898, 0.1", "-24.1862, -219.353, -12.0889, 0.1", "-24.1194, -219.728, -12.085, 0.1", "-24.06, -220.102, -12.0506, 0.1", "-24.0039, -220.514, -11.9827, 0.1", "-23.9384, -220.873, -11.874, 0.1", "-23.8514, -221.26, -11.7129, 0.1", "-23.8045, -221.427, -11.6311, 0.1", "-23.58, -222.002, -11.2806, 0.1", "-23.4413, -222.294, -11.084, 0.1", "-23.1158, -222.907, -10.6672, 0.1", "-22.9582, -223.196, -10.4794, 0.1", "-22.7967, -223.498, -10.3056, 0.1", "-22.4743, -224.165, -9.99069, 0.1", "-22.3339, -224.503, -9.87636, 0.1", "-22.214, -224.858, -9.80549, 0.1", "-22.123, -225.23, -9.79068, 0.1", "-22.0562, -225.604, -9.80595, 0.1", "-22.0128, -225.98, -9.85022, 0.1", "-21.9924, -226.349, -9.92092, 0.1", "-21.9641, -227.111, -10.0793, 0.14", "-21.9618, -227.486, -10.1585, 0.28", "-21.9688, -227.906, -10.2428, 0.14", "-21.9785, -228.277, -10.3055, 0.1", "-21.9818, -228.465, -10.3272, 0.14", "-21.9818, -228.465, -10.3272, 0.28", "-21.9494, -228.727, -10.2674, 0.1", "-21.8776, -229.09, -10.1709, 0.1", "-21.7849, -229.446, -10.0727, 0.1", "-21.6848, -229.797, -9.97811, 0.1", "-21.4672, -230.524, -9.79744, 0.1", "-21.3573, -230.88, -9.71853, 0.1", "-21.2293, -231.282, -9.64147, 0.1", "-21.1195, -231.642, -9.58354, 0.1", "-21.0158, -232.008, -9.54057, 0.1", "-20.9295, -232.378, -9.51499, 0.1", "-20.8616, -232.755, -9.51137, 0.1", "-20.8116, -233.125, -9.50195, 0.1", "-20.7847, -233.504, -9.4839, 0.1", "-20.7781, -233.885, -9.45861, 0.1", "-20.7882, -234.312, -9.42426, 0.14", "-20.8064, -234.685, -9.39093, 0.1", "-20.8224, -234.953, -9.36597, 0.1", "-20.8541, -235.378, -9.32421, 0.1", "-20.8839, -235.795, -9.28369, 0.1", "-20.9031, -236.173, -9.24968, 0.1", "-20.9149, -236.553, -9.21806, 0.1", "-20.9201, -236.932, -9.18886, 0.1", "-20.9115, -237.353, -9.16141, 0.1", "-20.9005, -237.734, -9.13767, 0.14", "-20.8882, -238.113, -9.1145, 0.1", "-20.8767, -238.532, -9.08818, 0.14", "-20.8712, -238.911, -9.06266, 0.1", "-20.8725, -239.292, -9.03465, 0.1", "-20.876, -239.719, -9.00257, 0.1", "-20.8829, -240.093, -8.97311, 0.1", "-20.8815, -240.469, -8.91912, 0.1", "-20.8646, -240.888, -8.83561, 0.1", "-20.8367, -241.296, -8.73402, 0.1", "-20.8175, -241.479, -8.68255, 0.1", "-20.7628, -241.841, -8.57657, 0.14", "-20.644, -242.509, -8.38164, 0.42", "-20.5692, -242.869, -8.28411, 0.28", "-20.4829, -243.233, -8.20003, 0.14", "-20.4029, -243.592, -8.13144, 0.1", "-20.3325, -243.964, -8.07717, 0.1", "-20.2741, -244.338, -8.04302, 0.1", "-20.2265, -244.717, -8.03212, 0.1", "-20.1812, -245.095, -8.02057, 0.1", "-20.1319, -245.512, -8.00751, 0.1", "-20.0855, -245.888, -7.96908, 0.1", "-20.0364, -246.26, -7.90776, 0.1", "-19.9902, -246.63, -7.82595, 1.26", "-19.9454, -246.996, -7.73061, 1.12", "-19.9062, -247.361, -7.62485, 0.98", "-19.8355, -248.056, -7.41714, 0.84", "-19.8124, -248.42, -7.30721, 0.7", "-19.7976, -248.83, -7.18934, 0.56", "-19.7907, -249.192, -7.09729, 0.42", "-19.7852, -249.612, -7.01166, 0.28", "-19.772, -249.99, -6.96135, 0.14", "-19.7455, -250.411, -6.94017, 0.1", "-19.7089, -250.791, -6.954, 0.1", "-19.6494, -251.166, -6.97222, 0.1", "-19.5725, -251.541, -6.9922, 0.1", "-19.4576, -251.948, -6.98634, 0.1", "-19.3372, -252.311, -6.95549, 0.1", "-19.0587, -253.056, -6.84716, 0.1", "-18.8113, -253.706, -6.71651, 0.56", "-18.6812, -254.054, -6.63193, 0.42", "-18.4331, -254.748, -6.38245, 0.28", "-18.3169, -255.072, -6.21119, 0.14", "-18.2044, -255.382, -6.01641, 0.1", "-18.0966, -255.688, -5.80928, 0.1", "-17.995, -256.003, -5.61709, 0.1", "-17.7868, -256.671, -5.22306, 0.1", "-17.5931, -257.342, -4.87196, 0.1", "-17.5044, -257.674, -4.70273, 0.14", "-17.4226, -258.013, -4.54676, 0.28", "-17.3819, -258.184, -4.46931, 0.98", "-17.3031, -258.53, -4.33165, 1.12", "-17.2289, -258.875, -4.20018, 0.98", "-17.1493, -259.267, -4.04112, 0.84", "-17.0687, -259.595, -3.85922, 0.7", "-16.8916, -260.237, -3.44815, 0.56", "-16.8033, -260.528, -3.22632, 0.42", "-16.6086, -261.131, -2.72344, 0.28", "-16.5136, -261.413, -2.48177, 0.14", "-16.3125, -261.998, -1.99666, 0.1", "-16.2188, -262.286, -1.77314, 0.1", "-16.026, -262.924, -1.3167, 0.14", "-15.9339, -263.228, -1.10301, 0.1", "-15.8409, -263.548, -0.910913, 0.1", "-15.7544, -263.864, -0.727837, 0.14", "-15.718, -264.038, -0.656723, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-20.1971, 82.172, -11.2502, 0.28", "-20.1986, 81.7514, -11.1045, 0.28", "-20.1294, 81.1196, -10.8489, 0.14", "-20.0053, 80.5609, -10.6108, 0.1", "-19.9176, 80.2863, -10.4926, 0.1", "-19.5489, 79.2826, -10.0697, 0.1", "-19.3278, 78.6808, -9.81618, 0.1", "-19.0749, 78.1022, -9.53681, 0.1", "-18.7863, 77.5434, -9.23166, 0.1", "-18.4723, 77.0056, -8.92985, 0.1", "-18.3108, 76.7663, -8.80917, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-20.1971, 82.172, -11.2502, 0.1", "-20.5146, 82.4767, -11.6715, 0.1", "-20.6648, 82.6332, -11.881, 0.1", "-20.983, 82.9563, -12.2871, 0.1", "-21.4194, 83.406, -12.8157, 0.1", "-21.6992, 83.6836, -13.0905, 0.1", "-22.2211, 84.1799, -13.4786, 0.1", "-22.5463, 84.4911, -13.659, 0.1", "-22.9852, 84.8829, -13.772, 0.1", "-23.1502, 85.0192, -13.7646, 0.1", "-23.8544, 85.5495, -13.5996, 0.1", "-24.4862, 85.9911, -13.4194, 0.1", "-24.4862, 85.9911, -13.4194, 0.1", "-24.9789, 86.3138, -13.3019, 0.1", "-25.3687, 86.5841, -13.2835, 0.1", "-25.6119, 86.765, -13.3333, 0.1", "-26.0565, 87.1116, -13.5408, 0.1", "-26.2722, 87.2843, -13.6671, 0.1", "-26.6039, 87.5546, -13.8741, 0.1", "-27.1555, 88.0219, -14.267, 0.1", "-27.4629, 88.2857, -14.5162, 0.1", "-27.7542, 88.5535, -14.7893, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "13.5152, -233.673, -3.17034, 0.84", "13.6157, -233.83, -3.23798, 0.84", "13.8012, -234.143, -3.3766, 0.98", "13.9756, -234.468, -3.51692, 0.84", "14.2542, -235.183, -3.84156, 0.7", "14.3672, -235.571, -4.01099, 0.56", "14.4546, -235.977, -4.17825, 0.42", "14.4766, -236.152, -4.247, 0.56", "14.4868, -236.525, -4.38112, 0.7", "14.4316, -237.241, -4.61115, 0.56", "14.4014, -237.509, -4.68104, 0.84", "14.3953, -237.895, -4.76573, 0.84", "14.4371, -238.278, -4.84125, 0.84", "14.5253, -238.652, -4.92688, 0.84", "14.5253, -238.652, -4.92688, 0.98", "14.8118, -239.293, -5.12762, 0.1", "14.9836, -239.679, -5.26113, 0.14", "15.1265, -240.02, -5.37893, 0.1", "15.272, -240.417, -5.51066, 0.14", "15.3908, -240.825, -5.63444, 0.28", "15.4298, -241.01, -5.6843, 0.42", "15.4621, -241.273, -5.75276, 0.84", "15.5079, -241.655, -5.84125, 0.84", "15.553, -242.036, -5.92472, 0.84", "15.5973, -242.419, -5.99963, 0.7", "15.6426, -242.802, -6.08326, 0.56", "15.6756, -243.071, -6.15232, 0.56", "15.6992, -243.258, -6.20636, 0.84", "15.7142, -243.627, -6.32671, 0.84", "15.7043, -243.999, -6.45606, 0.7", "15.6733, -244.408, -6.6104, 0.84", "15.6341, -244.776, -6.75184, 0.7", "15.5914, -245.14, -6.89593, 0.84", "15.5017, -245.905, -7.21061, 0.7", "15.4956, -246.085, -7.28837, 0.84", "15.5184, -246.491, -7.46374, 0.7", "15.5718, -246.853, -7.61132, 0.84", "15.6674, -247.255, -7.76827, 0.7", "15.7819, -247.61, -7.896, 0.56", "16.0911, -248.34, -8.13846, 0.7", "16.2468, -248.687, -8.24984, 0.84", "16.4126, -249.031, -8.34959, 0.98", "16.5892, -249.372, -8.44484, 0.84", "16.6785, -249.542, -8.48411, 0.84" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "13.5152, -233.673, -3.17034, 1.26", "13.5256, -234.147, -2.93168, 1.26", "13.5408, -234.639, -2.71505, 1.12", "13.5537, -234.95, -2.60134, 0.98", "13.58, -235.463, -2.44932, 0.84", "13.6097, -235.975, -2.32157, 0.7", "13.6549, -236.303, -2.24799, 0.56", "13.7579, -236.764, -2.18543, 0.1", "13.8951, -237.223, -2.1652, 0.1", "14.0514, -237.665, -2.18419, 0.1", "14.1391, -237.887, -2.21586, 0.1", "14.4758, -238.689, -2.3906, 0.1", "14.6895, -239.107, -2.48663, 0.1", "14.9495, -239.562, -2.5854, 0.1", "15.1889, -239.974, -2.65793, 0.1", "15.4426, -240.437, -2.72295, 0.1", "15.5447, -240.654, -2.74189, 0.1", "15.8638, -241.514, -2.78087, 0.28", "16.0177, -241.957, -2.77056, 0.14", "16.1756, -242.467, -2.73222, 0.28", "16.299, -242.926, -2.68924, 0.42", "16.412, -243.438, -2.63737, 0.56", "16.4897, -243.908, -2.61377, 0.42", "16.542, -244.441, -2.63248, 0.28", "16.5939, -244.912, -2.68894, 0.14", "16.6233, -245.144, -2.74352, 0.28", "16.6533, -245.364, -2.81056, 0.98", "16.7251, -245.868, -2.98547, 0.84", "16.7964, -246.366, -3.16102, 0.7", "16.8668, -246.873, -3.32359, 0.56", "16.907, -247.195, -3.39638, 0.42", "16.9721, -247.526, -3.43188, 0.1", "17.1002, -248.037, -3.41727, 0.14", "17.233, -248.49, -3.34684, 0.28", "17.3988, -248.986, -3.22966, 0.42", "17.574, -249.464, -3.08355, 0.28", "17.8322, -250.305, -2.82638, 0.14", "17.9512, -250.806, -2.7043, 0.1", "17.9512, -250.806, -2.7043, 0.14", "18.0406, -251.024, -2.67087, 0.14", "18.2322, -251.296, -2.64695, 0.14", "18.9587, -251.963, -2.61034, 0.28", "19.3293, -252.272, -2.59339, 0.28", "20.071, -252.921, -2.54422, 0.42", "20.707, -253.545, -2.4912, 0.56", "21.3777, -254.258, -2.4218, 0.42", "21.9666, -254.924, -2.36563, 0.28", "22.3016, -255.345, -2.32924, 0.14", "22.6469, -256.286, -2.29466, 0.1", "22.4854, -257.156, -2.31511, 0.14", "22.4017, -257.382, -2.32735, 0.56", "22.1764, -257.804, -2.36572, 0.42", "21.931, -258.217, -2.41519, 0.28", "21.6961, -258.633, -2.4681, 0.28", "21.2721, -259.541, -2.57468, 0.14", "21.0933, -259.984, -2.60968, 0.1", "20.7383, -260.896, -2.66242, 0.1", "20.6699, -261.126, -2.66575, 0.14", "20.6156, -261.461, -2.65807, 0.28", "20.62, -261.928, -2.62552, 0.14", "20.7186, -262.452, -2.57536, 0.1", "20.8408, -262.91, -2.52614, 0.14", "21.1565, -263.856, -2.42977, 0.1", "21.3024, -264.309, -2.39744, 0.1", "21.4583, -264.822, -2.38179, 0.1", "21.5848, -265.273, -2.38019, 0.1", "21.6976, -265.739, -2.38862, 0.1", "21.7828, -266.208, -2.40443, 0.1", "21.8302, -266.684, -2.42511, 0.1", "21.8765, -267.159, -2.44012, 0.1", "21.8991, -267.397, -2.44231, 0.14", "21.9288, -267.727, -2.43521, 0.1", "21.9689, -268.201, -2.40634, 0.14", "22.0126, -268.734, -2.36393, 0.1", "22.0516, -269.21, -2.32551, 0.1", "22.0566, -269.738, -2.29692, 0.1", "22.0367, -270.216, -2.2858, 0.1", "22.0261, -270.745, -2.27875, 0.1", "22.0266, -271.224, -2.27402, 0.1", "22.039, -271.7, -2.26902, 0.1", "22.0916, -272.675, -2.25198, 0.14", "22.1114, -272.911, -2.24502, 0.28", "22.2116, -273.819, -2.18187, 0.7", "22.276, -274.283, -2.14164, 0.56", "22.3603, -274.809, -2.07482, 0.42", "22.445, -275.276, -2.008, 0.28", "22.5488, -275.789, -1.93649, 0.14", "22.6268, -276.316, -1.87766, 0.1", "22.6664, -276.789, -1.84511, 0.1", "22.7121, -277.314, -1.82206, 0.1", "22.7562, -277.789, -1.82144, 0.1", "22.8027, -278.263, -1.8375, 0.1", "22.8283, -278.5, -1.86216, 0.56", "22.8827, -278.971, -1.93577, 0.42", "22.9365, -279.431, -2.0132, 0.28", "22.9909, -279.899, -2.08925, 0.14", "23.044, -280.371, -2.15337, 0.14", "23.0996, -280.896, -2.19976, 0.28", "23.1235, -281.134, -2.21211, 0.42", "23.1559, -281.471, -2.21864, 0.1", "23.2045, -281.998, -2.21499, 0.1", "23.2474, -282.475, -2.20399, 0.1", "23.2952, -283.009, -2.18918, 0.1", "23.3399, -283.486, -2.19099, 0.1", "23.3632, -283.714, -2.20615, 0.14", "23.3898, -283.95, -2.23799, 0.56", "23.4858, -284.413, -2.31863, 0.42", "23.6131, -284.866, -2.40457, 0.28", "23.7783, -285.361, -2.50661, 0.14", "23.9387, -285.805, -2.59449, 0.1", "24.1341, -286.236, -2.67155, 0.1", "24.5833, -287.097, -2.80961, 0.14", "24.8143, -287.503, -2.867, 0.1", "25.0559, -287.917, -2.91726, 0.1", "25.2907, -288.333, -2.95054, 0.1", "25.6976, -289.12, -3.00348, 0.56", "25.8605, -289.568, -3.03593, 0.7", "25.9847, -290.03, -3.06947, 0.56", "26.0986, -290.492, -3.10149, 0.42", "26.2059, -291.007, -3.13855, 0.28", "26.2781, -291.478, -3.16694, 0.14", "26.3662, -292.448, -3.22364, 0.28", "26.3861, -293.331, -3.26028, 0.7", "26.3725, -293.801, -3.27669, 0.56", "26.3423, -294.277, -3.29493, 0.42", "26.2575, -294.806, -3.32788, 0.28", "26.1828, -295.277, -3.34634, 0.14", "26.0414, -296.269, -3.35156, 0.1", "25.9538, -296.741, -3.341, 0.1", "25.8752, -297.211, -3.31695, 0.1", "25.7373, -298.175, -3.24776, 0.1", "25.6501, -299.08, -3.15779, 0.1", "25.6431, -299.612, -3.08409, 0.1", "25.6987, -300.127, -2.99015, 0.1", "25.7276, -300.358, -2.94294, 0.1", "25.7276, -300.358, -2.94294, 0.1", "25.7177, -300.692, -2.88805, 0.1", "25.6459, -301.164, -2.84591, 0.1", "25.5561, -301.685, -2.82567, 0.1", "25.471, -302.157, -2.81334, 0.1", "25.3028, -303.15, -2.79667, 0.1", "25.2325, -303.622, -2.79734, 0.1", "25.1742, -304.09, -2.81033, 0.1", "25.131, -304.564, -2.83061, 0.1", "25.1177, -304.903, -2.85381, 0.1", "25.1303, -305.38, -2.89207, 0.1", "25.1822, -305.851, -2.94837, 0.1", "25.2672, -306.309, -3.00125, 0.1", "25.3836, -306.772, -3.05493, 0.14", "25.5216, -307.226, -3.111, 0.28", "25.6748, -307.677, -3.17217, 0.28", "25.8531, -308.174, -3.2253, 0.42", "26.1649, -309.034, -3.29773, 0.56", "26.3203, -309.476, -3.32779, 0.42", "26.4687, -309.932, -3.35399, 0.28", "26.6021, -310.389, -3.37751, 0.14", "26.7633, -310.901, -3.37605, 0.1", "26.9009, -311.348, -3.34737, 0.1", "27.0625, -311.796, -3.2937, 0.1", "27.2643, -312.22, -3.20106, 0.14", "27.3771, -312.423, -3.13843, 0.28", "27.8733, -313.239, -2.81982, 0.1", "28.1468, -313.666, -2.63191, 0.1", "28.611, -314.382, -2.28431, 0.1", "28.8678, -314.799, -2.08205, 0.1", "29.0831, -315.257, -1.89671, 0.1", "29.1638, -315.569, -1.8187, 0.1", "29.1694, -315.808, -1.80603, 0.14", "29.1492, -316.044, -1.82196, 0.56", "29.0696, -316.513, -1.89338, 0.42", "28.8969, -317.485, -2.07892, 0.28", "28.8194, -317.949, -2.1652, 0.14", "28.7536, -318.42, -2.23149, 0.1", "28.6656, -318.888, -2.27562, 0.14", "28.6156, -319.122, -2.28722, 0.28", "28.547, -319.447, -2.28747, 0.7", "28.4574, -319.977, -2.26413, 0.56", "28.3137, -320.486, -2.26878, 0.42", "28.0225, -321.322, -2.32351, 0.28", "27.9404, -321.544, -2.35025, 0.1", "27.7822, -321.993, -2.4272, 0.1", "27.6416, -322.438, -2.53656, 0.1", "27.4399, -323.393, -2.79627, 0.1", "27.4044, -323.855, -2.91206, 0.1", "27.4375, -324.324, -2.99613, 0.1", "27.5007, -324.789, -3.04364, 0.1", "27.6062, -325.308, -3.05909, 0.14", "27.8461, -326.191, -3.02881, 0.1", "28.0192, -326.697, -2.98117, 0.1", "28.1845, -327.198, -2.9366, 0.1", "28.3375, -327.71, -2.90116, 0.1", "28.454, -328.173, -2.8964, 0.1", "28.4965, -328.4, -2.91043, 0.1", "28.5051, -328.633, -2.95671, 0.1", "28.4932, -329.153, -3.11656, 0.1", "28.4567, -329.593, -3.28053, 0.1", "28.3905, -330.089, -3.47983, 0.1", "28.3173, -330.532, -3.64859, 0.1", "28.1711, -331.392, -3.94218, 0.1", "28.1711, -331.392, -3.94218, 0.14", "28.1261, -331.724, -4.01851, 0.28", "28.0855, -332.195, -4.10774, 0.28", "28.0742, -332.667, -4.17798, 0.14", "28.0957, -333.142, -4.24177, 0.1", "28.1468, -333.604, -4.29825, 0.1", "28.2319, -334.074, -4.34913, 0.1", "28.3425, -334.536, -4.38782, 0.1", "28.474, -334.997, -4.40834, 0.1", "28.6177, -335.452, -4.40574, 0.1", "28.7683, -335.905, -4.38646, 0.1", "29.0591, -336.769, -4.33103, 0.1", "29.2253, -337.277, -4.29437, 0.1", "29.3644, -337.733, -4.26434, 0.1", "29.4639, -338.25, -4.2361, 0.1", "29.5026, -338.725, -4.22295, 0.1", "29.4932, -339.204, -4.22864, 0.1", "29.4432, -339.677, -4.25664, 0.1", "29.3531, -340.136, -4.29929, 0.1", "29.1447, -341.118, -4.38463, 0.1", "29.0459, -341.584, -4.42606, 0.1", "28.9548, -342.054, -4.46103, 0.1", "28.8841, -342.525, -4.49134, 0.1", "28.8161, -343.373, -4.52393, 0.1", "28.8301, -344.286, -4.54496, 0.1", "28.8899, -344.759, -4.55497, 0.1", "28.9548, -345.233, -4.55271, 0.1", "29.0222, -345.705, -4.53532, 0.1", "29.1412, -346.218, -4.50465, 0.1", "29.2753, -346.675, -4.47638, 0.1", "29.3989, -347.137, -4.4561, 0.1", "29.5509, -347.644, -4.43275, 0.1", "29.7171, -348.153, -4.41141, 0.1", "30.0337, -349.075, -4.369, 0.1", "30.1902, -349.528, -4.34567, 0.1", "30.3347, -349.973, -4.30922, 0.1", "30.4678, -350.43, -4.25612, 0.1", "30.5043, -350.663, -4.23017, 0.1", "30.5344, -350.997, -4.18103, 0.1", "30.5394, -351.515, -4.08823, 0.1", "30.5517, -352.042, -3.984, 0.1", "30.5954, -352.371, -3.91739, 0.1", "30.809, -353.304, -3.75299, 0.1", "31.1505, -354.148, -3.63844, 0.1", "31.3779, -354.57, -3.6055, 0.1", "31.6338, -354.975, -3.59422, 0.1", "32.1847, -355.787, -3.60659, 0.1", "32.4557, -356.175, -3.61591, 0.1", "33.0139, -356.982, -3.61971, 0.1", "33.2474, -357.403, -3.61745, 0.1", "33.4556, -357.832, -3.59172, 0.1", "33.5905, -358.29, -3.54254, 0.14", "33.6405, -358.616, -3.48627, 0.1", "33.6877, -359.137, -3.37102, 0.1", "33.6972, -359.651, -3.24757, 0.1", "33.7081, -359.98, -3.16744, 0.1", "33.759, -360.96, -2.95312, 0.1", "33.8262, -361.858, -2.80426, 0.1", "33.8387, -362.333, -2.77343, 0.1", "33.8678, -362.809, -2.77039, 0.1", "33.9152, -363.285, -2.7949, 0.1", "34.019, -363.75, -2.82376, 0.1", "34.1687, -364.197, -2.85253, 0.1", "34.4422, -365.07, -2.89426, 0.1", "34.7672, -365.924, -2.91339, 0.28", "34.9578, -366.365, -2.91489, 0.28", "35.382, -367.28, -2.90979, 0.14", "35.549, -367.722, -2.90331, 0.1", "35.6946, -368.239, -2.8981, 0.14", "35.7382, -368.475, -2.89968, 0.7", "35.6956, -368.948, -2.93801, 0.56", "35.5809, -369.413, -2.98211, 0.56", "35.2407, -370.356, -3.06907, 0.42", "35.0702, -370.805, -3.09209, 0.28", "34.9004, -371.253, -3.09426, 0.14", "34.5769, -372.176, -3.03541, 0.1", "34.4769, -372.498, -2.99417, 0.1", "34.3575, -373.004, -2.89619, 0.1", "34.2924, -373.52, -2.76542, 0.1", "34.2644, -373.839, -2.66484, 0.14", "34.2111, -374.345, -2.49333, 0.1", "34.1665, -374.842, -2.31745, 0.1", "34.0929, -375.342, -2.13872, 0.14", "33.9921, -375.829, -1.95446, 0.14", "33.9147, -376.134, -1.82564, 0.28", "33.621, -376.898, -1.48041, 0.42", "33.621, -376.898, -1.48041, 0.56", "33.3969, -377.331, -1.2627, 0.56", "33.2555, -377.606, -1.11896, 0.42", "32.993, -378.163, -0.832208, 0.28", "32.6905, -378.931, -0.423748, 0.42", "32.562, -379.383, -0.178519, 0.28", "32.4108, -379.848, 0.0503488, 0.14", "32.3098, -380.148, 0.174391, 0.1", "32.2404, -380.365, 0.249496, 0.14", "32.1006, -380.859, 0.387587, 0.7", "31.9895, -381.359, 0.524435, 0.56", "31.7633, -382.3, 0.803195, 0.42", "31.6554, -382.743, 0.946657, 0.28", "31.5215, -383.175, 1.10214, 0.14", "31.4474, -383.387, 1.18852, 0.28", "31.2816, -383.851, 1.38977, 0.28", "31.1238, -384.305, 1.62012, 0.14", "31.04, -384.591, 1.78413, 0.1", "30.7671, -385.483, 2.35187, 0.1", "30.6866, -385.761, 2.53269, 0.1", "30.573, -386.201, 2.80436, 0.1", "30.5076, -386.497, 2.96905, 0.1", "30.425, -386.968, 3.21374, 0.1", "30.3764, -387.439, 3.45535, 0.1", "30.3867, -387.912, 3.69404, 0.14", "30.3923, -388.128, 3.79748, 0.28", "30.3923, -388.128, 3.79748, 0.84", "30.3923, -388.128, 3.79748, 0.84", "30.4056, -388.447, 3.91322, 0.28", "30.43, -388.958, 4.07689, 0.14", "30.4543, -389.46, 4.23638, 0.1", "30.477, -389.968, 4.41018, 0.14", "30.498, -390.464, 4.58873, 0.1", "30.5068, -390.688, 4.67383, 0.1", "30.524, -391.184, 4.8797, 0.14", "30.5371, -391.663, 5.10205, 0.28", "30.5484, -392.262, 5.41643, 0.14", "30.5515, -392.555, 5.58758, 0.1", "30.5531, -392.844, 5.76665, 0.1", "30.5538, -393.409, 6.13303, 0.1", "30.5541, -393.697, 6.32114, 0.1", "30.5566, -394.267, 6.67837, 0.1", "30.5602, -394.562, 6.84735, 0.1", "30.568, -395.028, 7.09915, 0.1", "30.5748, -395.332, 7.25085, 0.1", "30.5876, -395.81, 7.47508, 0.1", "30.6026, -396.302, 7.69336, 0.1", "30.6191, -396.788, 7.89715, 0.1", "30.6304, -397.106, 8.02621, 0.1", "30.6488, -397.604, 8.22438, 0.1", "30.6611, -397.914, 8.34136, 0.1", "30.6821, -398.419, 8.52531, 0.1", "30.704, -398.916, 8.69867, 0.14", "30.6882, -399.428, 8.86137, 0.1", "30.6505, -399.939, 8.98817, 0.1", "30.6285, -400.172, 9.03882, 0.1", "30.5734, -400.696, 9.1466, 0.1", "30.5159, -401.209, 9.25131, 0.1", "30.4032, -402.188, 9.45731, 0.1", "30.1887, -404.097, 9.87845, 0.1", "30.1326, -404.606, 10.0076, 0.1", "30.0988, -404.932, 10.1082, 0.1", "30.0542, -405.424, 10.2959, 0.1", "30.0352, -405.727, 10.4478, 0.14", "30.0003, -406.175, 10.7467, 0.14", "29.9209, -406.528, 11.0636, 0.28", "29.8171, -406.905, 11.4287, 0.14", "29.6957, -407.273, 11.8061, 0.1", "29.5532, -407.619, 12.1904, 0.1", "29.2657, -408.198, 12.8552, 0.1", "29.1743, -408.344, 13.0263, 0.1" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-27.7542, 88.5535, -14.7893, 0.14", "-28.6552, 88.9234, -14.2711, 0.14", "-29.1172, 89.0832, -13.9516, 0.1", "-29.4175, 89.1944, -13.7513, 0.14", "-29.887, 89.39, -13.4655, 0.28", "-30.7063, 89.7734, -13.023, 0.14", "-32.2662, 90.5858, -12.2884, 0.1", "-32.2662, 90.5858, -12.2884, 0.14", "-32.7427, 90.8474, -12.0808, 0.28", "-33.2218, 91.1438, -11.9385, 0.14", "-33.6922, 91.4926, -11.9719, 0.1", "-33.9756, 91.8154, -12.3754, 0.1", "-34.0621, 91.9628, -12.7079, 0.1", "-34.092, 92.12, -13.2713, 0.14", "-34.116, 92.3193, -14.2278, 0.1", "-34.1267, 92.4776, -15.2946, 0.1", "-34.0843, 92.6797, -17.1836, 0.1", "-34.0124, 92.7569, -18.1554, 0.1", "-33.7234, 92.9026, -20.0262, 0.1", "-33.0727, 93.1359, -21.8549, 0.1", "-33.7836, 92.8565, -21.1884, 0.1", "-35.38, 92.229, -20.2624, 0.14", "-35.5991, 92.1436, -20.1468, 0.28", "-36.0853, 91.9669, -19.8751, 0.84", "-36.5231, 91.8247, -19.6134, 0.7", "-37.0474, 91.7708, -19.5962, 0.56", "-37.7976, 92.129, -20.1046, 0.42", "-37.9341, 92.2685, -20.2815, 0.28", "-38.2258, 92.6488, -20.609, 0.1", "-38.494, 93.0608, -20.7843, 0.1", "-38.8231, 93.5325, -20.7665, 0.1", "-39.137, 93.9025, -20.5817, 0.1", "-39.7349, 94.4221, -20.0928, 0.14", "-40.485, 94.9488, -19.4799, 0.56", "-41.232, 95.3638, -18.8327, 0.42", "-42.0077, 95.7149, -18.1841, 0.28", "-42.7423, 95.9942, -17.6105, 0.42", "-43.6228, 96.2691, -16.9943, 0.56", "-44.2402, 96.4277, -16.6199, 0.42", "-45.1567, 96.6269, -16.2432, 0.56", "-45.7268, 96.7195, -16.1559, 0.7", "-46.3107, 96.7823, -16.2317, 0.84", "-46.7849, 96.8138, -16.4601, 0.7", "-47.1955, 96.8166, -16.7951, 0.84", "-47.8419, 96.7712, -17.5713, 0.7", "-48.1344, 96.7345, -18.0114, 0.56", "-48.3781, 96.6821, -18.4756, 0.42", "-48.8336, 96.5653, -19.4466, 0.28", "-49.039, 96.5083, -19.9283, 0.14", "-49.4349, 96.3808, -20.9188, 0.1", "-49.6324, 96.2991, -21.4, 0.1", "-49.9497, 96.1539, -22.3492, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-27.7542, 88.5535, -14.7893, 0.1", "-28.1652, 88.3287, -13.1593, 0.1", "-28.3484, 88.2017, -12.2229, 0.1", "-28.4721, 88.0805, -11.3679, 0.1", "-28.6282, 87.7975, -9.63698, 0.1", "-28.645, 87.7129, -9.18253, 0.1", "-28.637, 87.6626, -8.95163, 0.1", "-28.4991, 87.5182, -8.46066, 0.1", "-28.3504, 87.407, -8.19202, 0.28", "-28.0056, 87.2011, -7.85063, 0.14", "-27.7533, 87.0579, -7.70315, 0.1", "-27.2494, 86.7212, -7.42102, 0.1", "-27.2494, 86.7212, -7.42102, 0.14", "-27.2494, 86.7212, -7.42102, 0.28", "-27.0129, 86.5389, -7.29444, 0.14", "-26.6217, 86.263, -7.07888, 0.1", "-26.3579, 86.1115, -6.96421, 0.1", "-25.9039, 85.9074, -6.79313, 0.1", "-25.4255, 85.7454, -6.668, 0.1", "-24.9361, 85.5945, -6.54307, 0.1", "-24.5126, 85.4605, -6.41043, 0.1", "-23.6623, 85.1317, -6.02457, 0.1", "-23.3138, 84.9301, -5.78493, 0.1", "-22.7896, 84.4622, -5.22899, 0.1", "-22.4156, 83.9341, -4.65352, 0.1", "-22.0229, 83.292, -4.01998, 0.1", "-21.6578, 82.6239, -3.44705, 0.1", "-21.4428, 82.2472, -3.16565, 0.1", "-21.2889, 82.0053, -3.00142, 0.1", "-20.9973, 81.6525, -2.76017, 0.1", "-20.348, 81.145, -2.40747, 0.1", "-19.9196, 80.9254, -2.20962, 0.1", "-19.2146, 80.6765, -1.70178, 0.1", "-18.6752, 80.5193, -1.03478, 0.1", "-18.4324, 80.4499, -0.634961, 0.1", "-17.9965, 80.3278, 0.210129, 0.1", "-17.7945, 80.2659, 0.633293, 0.1", "-17.3719, 80.1353, 1.48825, 0.1", "-17.0664, 80.024, 2.0642, 0.1", "-16.8923, 79.9532, 2.3456, 0.1", "-16.6107, 79.8273, 2.77462, 0.1", "-16.3022, 79.6952, 3.17392, 0.1", "-16.0984, 79.615, 3.4263, 0.14", "-15.8847, 79.5547, 3.66629, 0.28", "-15.3254, 79.442, 4.32613, 0.28", "-15.0265, 79.3971, 4.68684, 0.14", "-14.6912, 79.3651, 5.0945, 0.1", "-14.3846, 79.3601, 5.45146, 0.1", "-14.0654, 79.3818, 5.78865, 0.1", "-13.8173, 79.4153, 6.01636, 0.14", "-13.8173, 79.4153, 6.01636, 0.28", "-13.6291, 79.4379, 6.15766, 0.28", "-13.255, 79.485, 6.43904, 0.28", "-12.8766, 79.5197, 6.72052, 0.14", "-12.5064, 79.5529, 6.99572, 0.1", "-12.0841, 79.5953, 7.31081, 0.1", "-11.6593, 79.6314, 7.62611, 0.1", "-11.2851, 79.6521, 7.90116, 0.1", "-10.8555, 79.6558, 8.21209, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "16.6785, -249.542, -8.48411, 0.84", "17.1158, -250.477, -7.91, 0.84", "17.5268, -251.533, -7.35957, 0.84", "17.7416, -252.144, -7.11564, 0.98", "17.94, -252.766, -6.93163, 0.84", "18.0695, -253.179, -6.84513, 0.7", "18.2507, -253.76, -6.75169, 0.7", "18.2957, -254.054, -6.76971, 0.56", "18.2623, -254.713, -6.97221, 0.56", "18.037, -255.165, -7.31278, 0.7", "17.8418, -255.46, -7.58647, 0.84", "17.8418, -255.46, -7.58647, 0.98", "17.3431, -256.23, -8.28392, 1.12", "16.8575, -257.027, -8.95112, 0.98", "15.7729, -258.586, -10.2548, 0.84", "16.4068, -259.464, -9.88318, 0.84", "17.0625, -260.436, -9.41561, 0.7", "17.6992, -261.413, -8.93163, 0.56", "17.86, -261.646, -8.805, 0.42", "18.4911, -262.509, -8.29646, 0.1", "18.8491, -263.024, -8.00016, 0.14", "19.0801, -263.644, -7.79636, 0.28", "19.1103, -264.243, -7.75588, 0.42", "19.0552, -264.543, -7.80256, 0.56", "18.9719, -264.828, -7.88787, 0.84", "18.5026, -265.882, -8.40092, 0.84", "18.2505, -266.37, -8.69204, 0.84", "17.785, -267.208, -9.24304, 0.84", "17.644, -267.435, -9.40319, 0.84", "17.3528, -267.877, -9.727, 0.84", "16.7593, -268.777, -10.3864, 0.7", "16.6298, -269.015, -10.5405, 0.56", "16.127, -270.002, -11.1532, 0.56", "15.9044, -270.512, -11.4026, 0.7", "15.6639, -271.029, -11.6382, 0.84", "15.6639, -271.029, -11.6382, 0.84", "15.582, -271.313, -11.7291, 0.98", "15.3953, -271.865, -11.9297, 1.12", "15.0062, -273.027, -12.3432, 0.98", "14.8264, -273.585, -12.5391, 0.84", "14.6532, -274.143, -12.7325, 0.84", "14.4735, -274.701, -12.931, 0.7", "14.1196, -275.716, -13.3128, 0.56" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "16.6785, -249.542, -8.48411, 1.26", "16.574, -249.709, -8.9169, 1.26", "16.2639, -250.204, -10.2012, 1.4", "16.1617, -250.367, -10.6244, 1.26", "15.8514, -250.861, -11.9097, 1.12", "15.7492, -251.024, -12.333, 0.7", "15.6447, -251.191, -12.7658, 0.84" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "29.1743, -408.344, 13.0263, 0.1", "29.6156, -407.376, 13.5081, 0.1", "29.8743, -406.34, 13.9723, 0.1", "29.9955, -405.855, 14.1897, 0.1", "30.1334, -405.303, 14.4372, 0.1", "30.254, -404.82, 14.6535, 0.1", "30.3772, -404.326, 14.8747, 0.1", "30.2845, -403.368, 15.2105, 0.1" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "29.1743, -408.344, 13.0263, 0.1", "28.9376, -408.873, 13.2301, 0.1", "28.7389, -409.415, 13.4387, 0.1", "28.4593, -410.355, 13.7962, 0.1", "28.3167, -410.907, 14.0262, 0.1", "28.1968, -411.449, 14.2611, 0.1", "28.1037, -411.797, 14.4041, 0.1", "27.9509, -412.343, 14.6149, 0.1", "27.8018, -412.897, 14.8312, 0.1", "27.6796, -413.449, 15.0474, 0.1", "27.5868, -414.013, 15.2719, 0.1", "27.4867, -414.942, 15.6521, 0.1", "27.4721, -415.292, 15.7953, 0.1", "27.5341, -415.849, 16.0447, 0.1", "27.6709, -416.383, 16.3103, 0.1", "28.0231, -417.351, 16.8144, 0.14", "28.1656, -417.667, 16.9888, 0.28", "28.4139, -418.151, 17.2545, 0.14", "28.8434, -419.004, 17.6889, 0.1", "29.1083, -419.646, 18.0143, 0.1", "29.2695, -420.184, 18.2636, 0.1", "29.3204, -420.434, 18.3616, 0.14", "29.3958, -420.939, 18.5287, 0.28", "29.4274, -421.196, 18.6065, 0.42", "29.5866, -422.759, 19.0327, 0.83", "29.8324, -424.802, 19.5204, 0.28", "30.006, -426.124, 19.7966, 0.55", "30.4883, -429.517, 20.4831, 0.55", "30.7165, -430.922, 20.7506, 0.28", "30.9533, -432.256, 20.9677, 0.55", "31.2738, -434.165, 21.2076, 0.28", "31.4745, -435.486, 21.3218, 0.55", "31.6267, -436.66, 21.3828, 0.28", "31.8216, -438.398, 21.4031, 0.55", "32.0399, -440.537, 21.4172, 0.55", "32.208, -442.457, 21.4644, 0.28", "32.3549, -444.624, 21.5094, 0.55", "32.4692, -446.595, 21.5593, 0.28", "32.5701, -448.762, 21.6327, 0.55", "32.61, -449.873, 21.7123, 0.28", "32.7147, -452.241, 22.0555, 0.55", "32.82, -453.686, 22.398, 0.28", "32.862, -454.957, 22.7986, 0.55", "32.864, -456.018, 23.2355, 0.28", "32.8424, -456.91, 23.636, 0.55", "32.7858, -458.162, 24.2228, 0.28", "32.6305, -460.989, 25.6654, 0.55", "32.4246, -464.436, 27.5599, 0.55", "32.2985, -466.366, 28.5772, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "14.1196, -275.716, -13.3128, 0.7", "14.0559, -276.185, -13.0741, 0.7", "14.02, -276.49, -12.9316, 0.84", "13.9663, -277.111, -12.6872, 0.7", "13.9109, -277.425, -12.5983, 0.56", "13.8104, -277.881, -12.5033, 0.7", "13.7572, -278.112, -12.4706, 0.56", "13.6844, -278.442, -12.4697, 0.56", "13.5498, -278.895, -12.5335, 0.56", "13.2586, -279.707, -12.7364, 0.7", "13.1879, -279.919, -12.7898, 0.84", "13.0536, -280.37, -12.8827, 0.7", "12.9522, -280.831, -12.9548, 0.56", "12.832, -281.795, -13.037, 0.42", "12.832, -281.795, -13.037, 0.56", "12.9134, -282.702, -12.9771, 0.56", "13.0125, -283.215, -12.9029, 0.7", "13.1363, -283.663, -12.8025, 0.56", "13.3033, -284.156, -12.6737, 0.7", "13.4615, -284.58, -12.5528, 0.84", "13.6018, -285.022, -12.4367, 0.84", "13.821, -285.889, -12.2479, 0.84", "13.9473, -286.392, -12.1455, 0.7", "14.0552, -286.85, -12.0606, 0.56", "14.1665, -287.369, -11.9853, 0.56", "14.2588, -287.884, -11.9324, 0.56", "14.3241, -288.354, -11.912, 0.56", "14.4003, -288.826, -11.9141, 0.7", "14.5362, -289.282, -11.9001, 0.84", "14.7191, -289.722, -11.87, 0.7", "14.9328, -290.139, -11.8251, 0.56", "15.1694, -290.551, -11.7657, 0.56", "15.6616, -291.38, -11.6001, 0.42", "16.1165, -292.157, -11.4205, 0.56", "16.3381, -292.567, -11.3156, 0.7", "16.4724, -292.86, -11.2365, 0.56", "16.6224, -293.297, -11.1188, 0.42", "16.7287, -293.804, -10.9872, 0.56", "16.7235, -294.262, -10.8957, 0.7", "16.6523, -294.785, -10.8093, 0.56", "16.5558, -295.296, -10.7185, 0.56", "16.4425, -295.811, -10.6302, 0.56", "16.3612, -296.134, -10.5743, 0.7", "16.1545, -297.097, -10.398, 0.56", "16.0724, -297.616, -10.3006, 0.7", "16.0829, -298.135, -10.2101, 0.56", "16.1403, -298.365, -10.1757, 0.7", "16.2426, -298.581, -10.156, 0.7", "16.7191, -299.328, -10.1469, 0.56", "17.0088, -299.713, -10.1648, 0.56", "17.5669, -300.542, -10.2902, 0.42", "17.7935, -300.953, -10.3849, 0.56", "17.9938, -301.433, -10.5182, 0.56", "18.1233, -301.928, -10.6589, 0.56", "18.1623, -302.389, -10.7867, 0.42", "18.1276, -303.341, -10.9898, 0.56", "18.0805, -303.812, -11.0384, 0.42", "18.066, -304.042, -11.0246, 0.56", "18.0627, -304.565, -10.913, 0.56", "18.0846, -304.88, -10.8158, 0.7", "18.1637, -305.379, -10.6362, 0.56", "18.3737, -306.21, -10.3148, 0.56", "18.5018, -306.694, -10.1518, 0.42", "18.6218, -307.142, -10.0424, 0.28", "18.7446, -307.601, -9.98553, 0.28", "18.8, -307.831, -9.97875, 0.42", "18.8459, -308.065, -9.99229, 0.56", "18.9099, -308.533, -10.0526, 0.56", "18.9772, -308.993, -10.1216, 0.56", "19.0453, -309.459, -10.1918, 0.56", "19.1138, -309.928, -10.2624, 0.7", "19.182, -310.394, -10.3325, 0.56", "19.2505, -310.862, -10.4029, 0.56", "19.2914, -311.32, -10.4921, 0.7", "19.3065, -311.788, -10.5925, 0.7", "19.2601, -312.249, -10.7043, 0.7", "19.1642, -312.702, -10.8229, 0.56", "19.0347, -313.148, -10.9452, 0.56", "18.7525, -313.987, -11.1779, 0.56", "18.6605, -314.304, -11.2565, 0.84", "18.4496, -315.262, -11.4605, 0.84", "18.3802, -315.726, -11.5435, 0.7", "18.361, -316.2, -11.607, 0.7", "18.407, -316.672, -11.6474, 0.7", "18.6305, -317.62, -11.6882, 0.84", "18.768, -318.067, -11.7142, 0.7", "18.768, -318.067, -11.7142, 0.84", "18.9331, -318.513, -11.74, 0.56", "19.0828, -318.966, -11.7858, 0.56", "19.2019, -319.422, -11.8568, 0.42", "19.2863, -319.881, -11.9664, 0.56", "19.2863, -319.881, -11.9664, 0.56", "19.3515, -320.102, -12.0235, 0.56", "19.5408, -320.59, -12.1424, 0.56", "19.7349, -321.017, -12.2369, 0.56", "19.9616, -321.497, -12.3178, 0.56", "20.0623, -321.711, -12.3446, 0.7", "20.4321, -322.508, -12.4347, 0.7", "20.6298, -322.939, -12.4857, 0.56", "20.8258, -323.373, -12.5444, 0.42", "21.0374, -323.858, -12.6441, 0.28", "21.1229, -324.075, -12.7016, 0.14", "21.2249, -324.384, -12.7999, 0.7", "21.3371, -324.875, -12.9682, 0.7", "21.4035, -325.194, -13.0625, 0.56", "21.4929, -325.704, -13.1738, 0.42", "21.5233, -325.94, -13.1997, 0.56", "21.5463, -326.277, -13.1891, 0.84", "21.6001, -326.792, -13.0876, 0.7", "21.6692, -327.3, -12.9372, 0.7", "21.7213, -327.62, -12.8274, 0.7", "21.8191, -328.111, -12.6624, 0.56", "21.9398, -328.614, -12.5205, 0.7", "22.2133, -329.556, -12.3326, 0.84", "22.3638, -330.005, -12.2794, 0.7", "22.4464, -330.23, -12.2722, 0.56", "22.6356, -330.723, -12.3143, 0.42", "22.8038, -331.161, -12.4151, 0.28", "22.8846, -331.465, -12.5441, 0.28", "22.9102, -331.668, -12.6676, 1.12", "22.9424, -331.871, -12.7945, 0.7", "23.0273, -332.323, -13.0639, 0.56", "23.1194, -332.797, -13.302, 0.42", "23.292, -333.63, -13.6416, 0.28", "23.3592, -333.948, -13.7377, 0.42", "23.5425, -334.828, -13.9135, 0.56", "23.637, -335.292, -13.9645, 0.56", "23.6996, -335.813, -13.9959, 0.42", "23.7623, -336.284, -13.9847, 0.42", "23.8311, -336.755, -13.9418, 0.28", "23.8749, -337.286, -13.8825, 0.28", "23.8854, -337.761, -13.841, 0.28", "23.9138, -338.635, -13.7527, 0.42", "23.9604, -339.542, -13.6666, 0.42", "23.9924, -340.072, -13.6077, 0.28", "24.0326, -340.595, -13.5514, 0.42", "24.0761, -341.068, -13.5024, 0.28", "24.1254, -341.539, -13.4555, 0.42", "24.1834, -342.009, -13.4161, 0.56", "24.2169, -342.533, -13.3943, 0.56", "24.2494, -343.007, -13.3795, 0.42", "24.2832, -343.54, -13.3565, 0.28", "24.3091, -344.005, -13.3279, 0.28", "24.3222, -344.243, -13.313, 0.14", "24.3429, -344.58, -13.297, 0.56", "24.3785, -345.054, -13.2893, 0.42", "24.423, -345.578, -13.293, 0.56", "24.4658, -346.052, -13.3027, 0.56", "24.506, -346.528, -13.3055, 0.42", "24.5461, -347.002, -13.3084, 0.28", "24.5585, -347.479, -13.3283, 0.14", "24.5448, -347.954, -13.356, 0.1", "24.5352, -348.479, -13.3862, 0.14", "24.5316, -349.014, -13.4078, 0.1", "24.5391, -349.481, -13.4218, 0.1", "24.5848, -350.361, -13.4479, 0.1", "24.5848, -350.361, -13.4479, 0.14", "24.7173, -351.232, -13.5053, 0.1", "24.8126, -351.696, -13.5515, 0.14", "24.9237, -352.158, -13.6034, 0.1", "25.0417, -352.618, -13.6515, 0.14", "25.1663, -353.078, -13.6968, 0.28", "25.2614, -353.533, -13.7437, 0.42", "25.3197, -354.006, -13.7895, 0.28", "25.3677, -354.479, -13.8111, 0.28", "25.4029, -354.953, -13.8028, 0.42", "25.4155, -355.191, -13.7866, 0.56", "25.4264, -355.519, -13.7495, 0.42", "25.4315, -356.047, -13.6602, 0.28", "25.4283, -356.57, -13.5526, 0.14", "25.4215, -357.085, -13.4381, 0.1", "25.439, -357.316, -13.3796, 0.14", "25.439, -357.316, -13.3796, 0.28", "25.5315, -357.635, -13.3154, 0.56", "25.695, -358.066, -13.2353, 0.56", "25.7987, -358.279, -13.1987, 0.7", "26.246, -359.034, -13.0729, 0.56", "26.5056, -359.43, -13.0026, 0.42", "26.645, -359.623, -12.9696, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "14.1196, -275.716, -13.3128, 2.38", "14.2681, -275.79, -13.4824, 2.38", "14.5735, -275.976, -13.873, 2.24", "14.8558, -276.209, -14.257, 2.1", "15.119, -276.486, -14.6091, 1.96", "15.5325, -277.03, -15.1457, 1.82", "15.5325, -277.03, -15.1457, 1.68", "15.6034, -277.201, -15.2861, 0.1", "15.7141, -277.573, -15.5479, 0.1", "15.8296, -278.002, -15.8108, 0.1", "15.9479, -278.398, -16.0282, 0.1", "16.2614, -279.225, -16.4446, 0.1", "16.446, -279.653, -16.6679, 0.1", "16.6334, -280.031, -16.8711, 0.1", "16.8671, -280.435, -17.0952, 0.1", "17.0337, -280.688, -17.2304, 0.14", "17.2167, -280.928, -17.3484, 0.28", "17.4094, -281.174, -17.4726, 0.7", "17.6901, -281.55, -17.6938, 0.56", "17.8394, -281.79, -17.868, 0.42", "18.0021, -282.153, -18.2029, 0.28", "18.1147, -282.506, -18.5755, 0.14", "18.282, -283.167, -19.2833, 0.1", "18.3123, -283.328, -19.452, 0.14", "18.4107, -283.986, -20.1386, 0.1", "18.4826, -284.611, -20.7786, 0.14", "18.4826, -284.611, -20.7786, 0.28", "18.5911, -285.277, -21.3185, 0.28", "18.6928, -285.67, -21.5456, 0.42", "18.785, -285.952, -21.6898, 0.56", "18.785, -285.952, -21.6898, 0.7", "18.8379, -286.141, -21.8133, 0.84", "18.9415, -286.547, -22.1269, 0.7", "19.1149, -287.249, -22.7503, 0.56", "19.2019, -287.614, -23.1178, 0.42", "19.3843, -288.27, -23.827, 0.28", "19.4377, -288.424, -23.9969, 0.42", "19.5158, -288.623, -24.2422, 0.7", "19.6117, -288.821, -24.4987, 0.56", "19.9661, -289.38, -25.2305, 0.42", "20.1816, -289.671, -25.6137, 0.28", "20.4285, -289.958, -25.973, 0.14", "20.8801, -290.458, -26.5724, 0.28", "21.2379, -290.828, -26.9921, 0.42", "21.4329, -291.018, -27.185, 0.28", "21.8571, -291.4, -27.516, 0.14", "22.0827, -291.595, -27.6739, 0.28", "22.4661, -291.895, -27.8618, 0.42", "22.8696, -292.196, -27.986, 0.28", "23.2843, -292.506, -28.0867, 0.14", "23.5457, -292.7, -28.1403, 0.28", "23.9655, -293.01, -28.2146, 0.14", "24.7605, -293.577, -28.355, 0.14", "25.1931, -293.867, -28.4376, 0.1", "25.4617, -294.044, -28.4948, 0.1", "26.0137, -294.4, -28.6347, 0.1", "26.278, -294.574, -28.716, 0.14", "26.6952, -294.856, -28.8778, 0.1", "27.0936, -295.127, -29.0738, 0.14", "27.3482, -295.303, -29.1989, 0.28", "27.7369, -295.594, -29.3896, 0.14", "27.9793, -295.79, -29.5081, 0.1", "28.4657, -296.201, -29.6914, 0.14", "28.707, -296.42, -29.7595, 0.14", "29.0829, -296.77, -29.8396, 0.28", "29.4625, -297.128, -29.9036, 0.14", "29.6988, -297.355, -29.9363, 0.1", "30.408, -298.033, -30.0306, 0.14", "30.7902, -298.385, -30.0487, 0.28", "31.0342, -298.61, -30.0487, 0.14", "31.425, -298.951, -30.009, 0.1", "31.8171, -299.288, -29.9487, 0.1", "32.2146, -299.621, -29.8534, 0.1", "32.9523, -300.242, -29.6539, 0.14", "33.3054, -300.532, -29.5405, 0.28", "33.9735, -301.086, -29.3145, 0.28", "34.3631, -301.415, -29.1862, 0.14", "35.0874, -302.046, -28.9739, 0.1", "35.4623, -302.397, -28.8956, 0.1", "35.6974, -302.632, -28.8867, 0.14", "36.061, -303.001, -28.9181, 0.28", "36.414, -303.388, -29.0048, 0.14", "36.6205, -303.628, -29.0738, 0.1", "36.9319, -304.023, -29.2233, 0.1", "37.2404, -304.425, -29.3309, 0.1", "37.4295, -304.694, -29.3646, 0.1", "37.4295, -304.694, -29.3646, 0.14", "37.635, -305.105, -29.302, 0.84", "37.635, -305.105, -29.302, 0.7", "37.9087, -305.921, -29.0814, 0.1", "38.0272, -306.345, -28.9696, 0.1", "38.135, -306.786, -28.8738, 0.1", "38.249, -307.229, -28.8118, 0.1", "38.3128, -307.452, -28.7995, 0.1", "38.3848, -307.673, -28.8098, 0.56", "38.5467, -308.1, -28.8831, 0.42", "38.7309, -308.517, -28.9679, 0.28", "38.954, -308.977, -29.0715, 0.28", "39.0956, -309.259, -29.1374, 0.56", "39.3202, -309.718, -29.2418, 0.42", "39.4589, -310.002, -29.3062, 0.28", "39.5574, -310.208, -29.3519, 0.56", "39.7432, -310.626, -29.4374, 0.42", "39.9148, -311.05, -29.5157, 0.28", "40.0821, -311.475, -29.5918, 0.42", "40.266, -311.954, -29.6752, 0.56", "40.3507, -312.165, -29.7138, 0.7", "40.4453, -312.374, -29.7574, 0.84", "40.6792, -312.827, -29.8666, 0.7", "40.9381, -313.257, -29.9888, 0.56", "41.1774, -313.64, -30.1022, 0.42", "41.4417, -314.073, -30.2271, 0.28", "41.6005, -314.344, -30.3019, 0.14", "41.8426, -314.793, -30.4153, 0.1", "42.0925, -315.37, -30.5866, 0.1", "42.1942, -315.667, -30.685, 0.84", "42.3067, -316.091, -30.8362, 0.7", "42.3721, -316.511, -31.0263, 0.56", "42.4033, -316.923, -31.2373, 0.42", "42.4374, -317.745, -31.7016, 0.28", "42.4441, -317.946, -31.8194, 0.42", "42.4699, -318.15, -31.9297, 0.56", "42.6455, -319.019, -32.3351, 0.42", "42.7632, -319.443, -32.4876, 0.28", "42.9273, -319.918, -32.5976, 0.14", "43.1065, -320.343, -32.6454, 0.1", "43.5046, -321.233, -32.7023, 0.1", "43.6987, -321.653, -32.7043, 0.1", "43.8947, -322.075, -32.6755, 0.1", "44.0776, -322.5, -32.6554, 0.1", "44.1978, -322.806, -32.6542, 0.1", "44.2758, -323.024, -32.6676, 0.56", "44.3988, -323.466, -32.7209, 0.42", "44.5138, -323.911, -32.7702, 0.28", "44.6188, -324.353, -32.8145, 0.14", "44.7354, -324.85, -32.8635, 0.1", "44.8448, -325.299, -32.9098, 0.1", "44.977, -325.799, -32.9666, 0.14", "45.0945, -326.24, -33.0553, 0.1", "45.1515, -326.455, -33.1151, 0.1", "45.2741, -326.933, -33.2792, 0.1", "45.3874, -327.402, -33.461, 0.1", "45.4992, -327.815, -33.6405, 0.1", "45.7296, -328.598, -33.9967, 0.1", "45.8018, -328.807, -34.0729, 0.56", "45.9695, -329.223, -34.1867, 0.42", "46.1493, -329.638, -34.2583, 0.28", "46.376, -330.106, -34.3015, 0.42", "46.5974, -330.504, -34.3154, 0.28", "47.1102, -331.339, -34.3035, 0.14", "47.4009, -331.773, -34.3097, 0.1", "47.6761, -332.141, -34.3347, 0.1", "47.9938, -332.549, -34.4197, 0.1", "48.1864, -332.804, -34.5092, 0.42", "48.4637, -333.197, -34.7026, 0.28", "48.6331, -333.448, -34.8361, 0.14", "48.995, -333.96, -35.0278, 0.1", "49.5488, -334.657, -35.1059, 0.1", "49.8406, -335.011, -35.0631, 0.14", "50.1368, -335.357, -34.9646, 0.28", "50.7735, -336.027, -34.6224, 0.28", "51.3939, -336.639, -34.2277, 0.14", "52.036, -337.242, -33.7884, 0.1", "52.1939, -337.38, -33.6822, 0.14", "52.4252, -337.568, -33.5327, 0.28", "53.056, -338.062, -33.1238, 0.7", "53.4182, -338.356, -32.8786, 0.56", "53.767, -338.657, -32.6352, 0.42", "53.9836, -338.854, -32.4773, 0.56", "54.5424, -339.372, -32.0618, 0.1", "55.1418, -339.938, -31.5723, 0.1", "55.7182, -340.522, -31.0788, 0.1", "55.9925, -340.807, -30.8385, 0.1", "56.1836, -341.019, -30.6757, 0.14", "56.3741, -341.253, -30.5384, 0.28", "56.8606, -341.928, -30.3091, 0.28", "57.1123, -342.307, -30.2121, 0.14", "57.3779, -342.745, -30.1127, 0.1", "57.6068, -343.127, -29.9778, 0.1", "57.8415, -343.552, -29.8022, 0.14", "57.9405, -343.746, -29.7185, 0.28", "58.2828, -344.501, -29.3995, 0.1", "58.4414, -344.904, -29.2354, 0.1", "58.6964, -345.772, -28.9536, 0.1", "58.8127, -346.195, -28.808, 0.1", "58.8613, -346.411, -28.7377, 0.1", "58.9109, -346.723, -28.6832, 0.1", "58.8786, -347.638, -28.9148, 0.1", "58.677, -348.333, -29.3826, 0.1" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "26.645, -359.623, -12.9696, 0.28", "27.4822, -359.666, -13.455, 0.28", "27.9832, -359.691, -13.7456, 0.14", "28.437, -359.714, -14.0088, 0.1", "28.9459, -359.74, -14.3039, 0.1", "29.1728, -359.752, -14.4355, 0.1" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "26.645, -359.623, -12.9696, 0.42", "26.8725, -360.216, -12.8459, 0.42", "27.0759, -360.813, -12.6908, 0.28", "27.2507, -361.409, -12.5138, 0.14", "27.3937, -362.002, -12.3273, 0.1", "27.6173, -363.163, -11.9538, 0.14", "27.7222, -363.846, -11.7266, 0.14", "27.7877, -364.511, -11.4762, 0.28", "27.8037, -364.943, -11.3045, 0.28", "27.8247, -365.591, -11.0057, 0.14", "27.8327, -366.245, -10.684, 0.1", "27.8262, -366.65, -10.4898, 0.14", "27.8389, -367.302, -10.1705, 0.28", "27.873, -367.957, -9.85328, 0.28", "27.9692, -369.279, -9.22259, 0.14", "28.007, -369.686, -9.03775, 0.28", "28.0729, -370.356, -8.76056, 0.42", "28.1337, -370.967, -8.55038, 0.56", "28.1622, -371.276, -8.47049, 0.7", "28.1954, -371.718, -8.4044, 0.56", "28.2281, -372.365, -8.3826, 0.42", "28.2847, -373.089, -8.3878, 0.56", "28.3484, -373.733, -8.41226, 0.42", "28.4183, -374.362, -8.44762, 0.28", "28.4992, -375.001, -8.49836, 0.28", "28.5917, -375.639, -8.5662, 0.42", "28.6892, -376.273, -8.64205, 0.56", "28.7943, -376.907, -8.72899, 0.56", "28.8987, -377.538, -8.81527, 0.56", "29.0019, -378.162, -8.90072, 0.56", "29.1065, -378.793, -8.98726, 0.56", "29.211, -379.425, -9.07388, 0.56", "29.3162, -380.059, -9.16095, 0.7", "29.4209, -380.69, -9.24765, 0.56", "29.526, -381.325, -9.33482, 0.56", "29.6287, -381.945, -9.41976, 0.42", "29.7339, -382.58, -9.50693, 0.56", "29.8386, -383.211, -9.59364, 0.42", "29.9436, -383.845, -9.6806, 0.56", "30.0482, -384.477, -9.76718, 0.7", "30.1526, -385.108, -9.85345, 0.7", "30.2556, -385.732, -9.93859, 0.56", "30.3597, -386.363, -10.0245, 0.7" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "30.3597, -386.363, -10.0245, 1.12", "30.6779, -386.239, -10.6139, 1.12", "30.8201, -386.186, -11.2823, 0.98", "30.8201, -386.186, -11.2823, 0.84", "30.8066, -386.195, -11.9644, 0.28", "30.8066, -386.195, -11.9644, 0.28", "30.8441, -386.165, -12.3036, 0.28", "31.1619, -385.947, -13.6823, 0.14", "31.6664, -385.64, -14.9909, 0.1", "32.2541, -385.276, -16.0947, 0.42", "32.6547, -385.029, -16.6962, 0.28", "33.0449, -384.793, -17.1998, 0.14", "33.9512, -384.255, -18.1689, 0.1", "34.4297, -383.978, -18.5632, 0.1", "34.9851, -383.661, -18.9632, 0.1", "35.4505, -383.389, -19.3815, 0.1", "35.6882, -383.259, -19.5893, 0.1" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "30.3597, -386.363, -10.0245, 0.56", "30.6517, -387.433, -9.94717, 0.56", "30.7663, -388.0, -9.89843, 0.56", "30.8616, -388.569, -9.85457, 0.7", "30.9373, -389.13, -9.80724, 0.56", "31.0056, -389.705, -9.76222, 0.56", "31.0777, -390.351, -9.71943, 0.56", "31.1108, -390.988, -9.69769, 0.56", "31.1365, -391.565, -9.67157, 0.56", "31.1589, -392.213, -9.63219, 0.56", "31.1722, -392.779, -9.58818, 0.42", "31.1857, -393.357, -9.54299, 0.28", "31.1705, -394.008, -9.52449, 0.42", "31.1333, -394.588, -9.53371, 0.56", "31.0682, -395.225, -9.56439, 0.56", "31.0048, -395.87, -9.59891, 0.56", "30.9431, -396.445, -9.6271, 0.42", "30.8259, -397.509, -9.68665, 0.56", "30.7816, -398.073, -9.73463, 0.7", "30.7832, -398.362, -9.76978, 0.84", "30.977, -399.513, -9.97092, 0.84", "30.977, -399.513, -9.97092, 0.84", "31.0861, -399.775, -10.0282, 0.84", "31.3234, -400.294, -10.1533, 0.7", "31.5601, -400.867, -10.3361, 0.7", "31.7481, -401.386, -10.5185, 0.56", "31.9312, -401.975, -10.7335, 0.56", "32.0912, -402.502, -10.9201, 0.7", "32.2404, -403.092, -11.1576, 0.56", "32.3873, -403.679, -11.3841, 0.7", "32.5487, -404.212, -11.5471, 0.84", "32.7365, -404.753, -11.6578, 0.7", "32.9825, -405.279, -11.6692, 0.84", "33.5126, -406.209, -11.5556, 0.98", "34.09, -407.142, -11.3419, 0.84", "34.7107, -408.111, -11.0393, 0.7", "35.0453, -408.632, -10.8619, 0.7", "35.5935, -409.638, -10.544, 0.56", "35.818, -410.158, -10.4068, 0.7", "35.9804, -410.702, -10.2957, 0.84", "36.0164, -411.102, -10.2719, 0.56", "36.0262, -411.682, -10.2506, 0.56", "36.04, -412.9, -10.2088, 0.56", "36.0742, -413.466, -10.1686, 0.7", "36.1976, -414.101, -10.1085, 0.56", "36.3408, -414.658, -10.0466, 0.56", "36.6884, -415.815, -9.91728, 0.56", "36.868, -416.361, -9.84559, 0.56", "37.2572, -417.469, -9.67949, 0.7", "38.0416, -419.92, -9.31006, 0.56", "38.2181, -420.541, -9.22648, 0.7", "38.3437, -421.101, -9.1576, 0.7", "38.3992, -421.497, -9.11803, 0.56", "38.4543, -422.14, -9.04926, 0.42", "38.4609, -422.778, -8.98672, 0.28", "38.4867, -423.349, -8.8887, 0.42", "38.5613, -423.987, -8.77827, 0.56", "38.6725, -424.608, -8.67455, 0.7", "38.8062, -425.166, -8.59816, 0.56", "38.974, -425.717, -8.54468, 0.7", "39.3345, -426.727, -8.48426, 0.84", "39.5072, -427.283, -8.48402, 0.7", "39.6491, -427.842, -8.52941, 0.56", "39.7448, -428.397, -8.61331, 0.42", "39.7766, -428.804, -8.69448, 0.56", "39.7745, -429.077, -8.76067, 0.7", "39.6621, -430.256, -9.06829, 0.56", "39.594, -430.821, -9.18976, 0.56", "39.5245, -431.388, -9.28332, 0.56", "39.455, -431.963, -9.33868, 0.56", "39.4286, -432.239, -9.34762, 0.56", "39.3784, -432.647, -9.35566, 0.98", "39.3053, -433.292, -9.35862, 0.84", "39.1689, -433.843, -9.39505, 0.84", "39.0361, -434.23, -9.44604, 0.28", "38.828, -434.763, -9.54778, 0.28", "38.3681, -435.861, -9.81655, 0.28", "38.1397, -436.372, -9.97487, 0.28", "37.8279, -437.318, -10.2622, 0.42", "37.7465, -437.881, -10.386, 0.84", "37.7314, -438.454, -10.4642, 0.84", "37.7314, -438.454, -10.4642, 0.7", "37.7314, -438.454, -10.4642, 0.84", "37.8803, -440.99, -10.5524, 0.55", "38.0863, -443.567, -10.5927, 0.83", "38.3071, -446.477, -10.6207, 0.83", "38.3531, -447.113, -10.6235, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "38.3531, -447.113, -10.6235, 0.55", "37.6566, -449.502, -9.31381, 0.55", "36.9574, -451.509, -8.26295, 0.83", "36.1295, -453.635, -7.31437, 0.83", "34.9537, -456.654, -5.96726, 0.55", "34.2325, -458.506, -5.14085, 0.28", "33.3375, -460.804, -4.11552, 0.55", "32.5828, -462.707, -3.49036, 0.28", "31.6389, -464.669, -2.97641, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "38.3531, -447.113, -10.6235, 0.83", "38.4943, -449.571, -10.3858, 0.83", "38.6618, -451.327, -10.2502, 0.55", "38.8098, -452.827, -10.1361, 0.83", "38.9332, -453.751, -10.0729, 0.55", "39.234, -455.762, -9.95186, 0.83", "39.5256, -457.806, -9.82532, 0.83", "39.857, -459.888, -9.71086, 0.83", "40.3205, -462.701, -9.57035, 0.83", "40.6274, -464.503, -9.45805, 0.83", "40.9113, -466.294, -9.34232, 0.83", "41.653, -470.711, -9.0691, 0.83", "41.9185, -472.203, -9.00717, 0.55", "42.3506, -474.513, -8.98358, 0.83", "42.6284, -475.844, -9.01079, 0.83", "43.0536, -477.802, -9.11319, 0.55", "43.703, -480.531, -9.35182, 0.55", "44.3405, -482.918, -9.66415, 0.55", "44.6862, -484.376, -9.89739, 0.55", "44.9228, -485.501, -10.1027, 0.55", "45.3094, -487.693, -10.5026, 0.83", "45.633, -489.948, -10.8763, 0.55", "45.8342, -491.983, -11.1984, 0.55", "45.9991, -494.053, -11.5065, 0.55", "46.2279, -497.85, -12.0359, 0.55", "46.283, -499.047, -12.2061, 0.55", "46.337, -500.606, -12.4237, 0.55", "46.4612, -503.964, -12.9155, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "46.4612, -503.964, -12.9155, 0.28", "45.8222, -504.556, -13.6495, 0.28", "44.556, -505.425, -14.5214, 0.55", "43.9272, -505.792, -14.9333, 0.28", "43.0681, -506.275, -15.5463, 0.55", "39.6059, -508.185, -18.1148, 0.28", "38.617, -508.752, -18.8943, 0.55", "35.4807, -510.352, -21.1107, 0.28", "34.3281, -510.868, -21.8473, 0.55", "33.0988, -511.363, -22.6124, 0.55", "31.9251, -511.795, -23.3637, 0.28", "30.8066, -512.339, -24.3238, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "46.4612, -503.964, -12.9155, 0.55", "46.6024, -506.684, -13.2899, 0.55", "46.8427, -511.314, -13.927, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_66", "dend_66", "dend_66", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_BTC_dbb05c9cf3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_51
create dend_61
public dend_61
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_63
create dend_75
public dend_75
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_64
create dend_72
public dend_72
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_65
create dend_71
public dend_71
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_70, id: dend_70, parent: dend_66
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_80
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.49999994045921775)
    connect dend_0(0), soma_0(0.49999994045921775)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_70(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.465097, 8.04727, -0.0175891, 2.59198 ) }
    soma_0 { pt3dadd( 0.424424, 7.2054, -0.0170165, 4.38773 ) }
    soma_0 { pt3dadd( 0.383751, 6.36352, -0.0164438, 5.44399 ) }
    soma_0 { pt3dadd( 0.343077, 5.52165, -0.0158711, 6.50025 ) }
    soma_0 { pt3dadd( 0.302404, 4.67978, -0.0152984, 7.50099 ) }
    soma_0 { pt3dadd( 0.261731, 3.83791, -0.0147257, 8.3937 ) }
    soma_0 { pt3dadd( 0.221058, 2.99604, -0.014153, 9.3444 ) }
    soma_0 { pt3dadd( 0.180384, 2.15416, -0.0135803, 10.2953 ) }
    soma_0 { pt3dadd( 0.139711, 1.31229, -0.0130077, 10.7907 ) }
    soma_0 { pt3dadd( 0.0990378, 0.470419, -0.012435, 10.75 ) }
    soma_0 { pt3dadd( 0.0583646, -0.371454, -0.0118623, 10.6053 ) }
    soma_0 { pt3dadd( 0.0176913, -1.21333, -0.0112896, 10.4607 ) }
    soma_0 { pt3dadd( -0.0229819, -2.0552, -0.0107169, 10.316 ) }
    soma_0 { pt3dadd( -0.0636552, -2.89707, -0.0101442, 9.78436 ) }
    soma_0 { pt3dadd( -0.104328, -3.73894, -0.00957155, 9.07182 ) }
    soma_0 { pt3dadd( -0.145002, -4.58081, -0.00899886, 8.12082 ) }
    soma_0 { pt3dadd( -0.185675, -5.42269, -0.00842618, 7.10426 ) }
    soma_0 { pt3dadd( -0.226348, -6.26456, -0.00785349, 5.9023 ) }
    soma_0 { pt3dadd( -0.267021, -7.10643, -0.0072808, 4.68096 ) }
    soma_0 { pt3dadd( -0.307695, -7.9483, -0.00670812, 3.08046 ) }
    soma_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 1.81235 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.46257, 6.57366, -0.101719, 1.82 ) }
    dend_45 { pt3dadd( -1.5609, 7.06846, 0.816246, 1.82 ) }
    dend_45 { pt3dadd( -1.62739, 7.31987, 1.239, 1.82 ) }
    dend_45 { pt3dadd( -1.79952, 7.90025, 2.09138, 1.68 ) }
    dend_45 { pt3dadd( -1.98207, 8.48594, 2.89245, 1.82 ) }
    dend_45 { pt3dadd( -1.98207, 8.48594, 2.89245, 1.96 ) }
    dend_45 { pt3dadd( -2.17165, 9.0942, 3.72439, 1.4 ) }
    dend_45 { pt3dadd( -2.29571, 9.38082, 4.09765, 1.26 ) }
    dend_45 { pt3dadd( -2.45197, 9.67549, 4.46689, 1.4 ) }
    dend_45 { pt3dadd( -2.45197, 9.67549, 4.46689, 1.26 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.682563, -7.97334, 0.898281, 2.1 ) }
    dend_0 { pt3dadd( -0.206632, -8.87226, 1.63249, 2.1 ) }
    dend_0 { pt3dadd( 0.23834, -10.0332, 2.3122, 1.96 ) }
    dend_0 { pt3dadd( 0.443033, -10.6998, 2.60225, 2.1 ) }
    dend_0 { pt3dadd( 0.526173, -11.0047, 2.71068, 1.96 ) }
    dend_0 { pt3dadd( 0.653972, -11.6388, 2.89928, 1.82 ) }
    dend_0 { pt3dadd( 0.752882, -12.3524, 3.08124, 1.68 ) }
    dend_0 { pt3dadd( 0.786841, -13.1002, 3.14536, 1.54 ) }
    dend_0 { pt3dadd( 0.767131, -13.7684, 3.14536, 1.4 ) }
    dend_0 { pt3dadd( 0.748629, -14.0924, 3.14536, 1.4 ) }
    dend_0 { pt3dadd( 0.698608, -14.842, 3.14536, 2.38 ) }
    dend_0 { pt3dadd( 0.668792, -15.3057, 3.14536, 2.24 ) }
    dend_0 { pt3dadd( 0.651633, -15.9741, 3.14536, 2.38 ) }
    dend_0 { pt3dadd( 0.664296, -16.6458, 3.14536, 2.24 ) }
    dend_0 { pt3dadd( 0.684905, -17.314, 3.14536, 2.1 ) }
    dend_0 { pt3dadd( 0.717815, -17.788, 3.14536, 1.96 ) }
    dend_0 { pt3dadd( 0.76066, -18.1213, 3.14536, 1.82 ) }
    dend_0 { pt3dadd( 0.843401, -18.7734, 3.14536, 1.54 ) }
    dend_0 { pt3dadd( 0.918804, -19.4379, 3.14536, 1.68 ) }
    dend_0 { pt3dadd( 0.962031, -19.9094, 3.18725, 1.82 ) }
    dend_0 { pt3dadd( 1.00627, -20.5724, 3.28908, 1.68 ) }
    dend_0 { pt3dadd( 1.04579, -21.2167, 3.41559, 1.68 ) }
    dend_0 { pt3dadd( 1.06372, -21.9362, 3.63607, 1.82 ) }
    dend_0 { pt3dadd( 1.06613, -22.5602, 3.88225, 1.82 ) }
    dend_0 { pt3dadd( 1.04482, -23.8039, 4.54891, 1.82 ) }
    dend_0 { pt3dadd( 1.03696, -24.4483, 4.94889, 1.68 ) }
    dend_0 { pt3dadd( 1.03172, -24.7277, 5.14017, 1.68 ) }
    dend_0 { pt3dadd( 1.01345, -25.7663, 5.90756, 1.12 ) }
    dend_0 { pt3dadd( 0.9948, -26.3036, 6.31523, 0.98 ) }
    dend_0 { pt3dadd( 0.913825, -27.4626, 7.13423, 1.12 ) }
    dend_0 { pt3dadd( 0.856629, -28.0417, 7.472, 0.98 ) }
    dend_0 { pt3dadd( 0.821842, -28.3418, 7.62286, 1.12 ) }
    dend_0 { pt3dadd( 0.821842, -28.3418, 7.62286, 1.26 ) }
    dend_0 { pt3dadd( 0.753596, -29.0709, 7.75328, 1.26 ) }
    dend_0 { pt3dadd( 0.702658, -29.8194, 7.82349, 1.12 ) }
    dend_0 { pt3dadd( 0.696996, -30.284, 7.82349, 0.98 ) }
    dend_0 { pt3dadd( 0.732455, -30.9517, 7.82349, 1.12 ) }
    dend_0 { pt3dadd( 0.809033, -31.6193, 7.82349, 1.26 ) }
    dend_0 { pt3dadd( 0.916335, -32.2797, 7.82349, 1.4 ) }
    dend_0 { pt3dadd( 1.07864, -32.9208, 7.82349, 1.26 ) }
    dend_0 { pt3dadd( 1.28391, -33.5587, 7.82349, 1.4 ) }
    dend_0 { pt3dadd( 1.45266, -34.0044, 7.82349, 1.4 ) }
    dend_0 { pt3dadd( 1.45266, -34.0044, 7.82349, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.07222, -23.7727, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.45197, 9.67549, 4.46689, 0.84 ) }
    dend_51 { pt3dadd( -2.57961, 10.1101, 4.1274, 0.84 ) }
    dend_51 { pt3dadd( -2.82179, 10.9519, 3.56663, 0.7 ) }
    dend_51 { pt3dadd( -2.94372, 11.3827, 3.322, 0.84 ) }
    dend_51 { pt3dadd( -3.17365, 12.2816, 2.85765, 0.98 ) }
    dend_51 { pt3dadd( -3.29104, 12.7312, 2.64907, 1.12 ) }
    dend_51 { pt3dadd( -3.40523, 13.1675, 2.43698, 1.26 ) }
    dend_51 { pt3dadd( -3.52473, 13.6181, 2.23169, 1.4 ) }
    dend_51 { pt3dadd( -3.65948, 14.0759, 2.06228, 1.54 ) }
    dend_51 { pt3dadd( -3.7344, 14.311, 2.00125, 1.68 ) }
    dend_51 { pt3dadd( -3.91985, 14.8473, 1.97997, 1.68 ) }
    dend_51 { pt3dadd( -4.27134, 15.8154, 2.07413, 1.54 ) }
    dend_51 { pt3dadd( -4.46654, 16.3306, 2.18734, 1.4 ) }
    dend_51 { pt3dadd( -4.65301, 16.7806, 2.33597, 1.4 ) }
    dend_51 { pt3dadd( -5.0683, 17.6836, 2.63216, 1.26 ) }
    dend_51 { pt3dadd( -5.48889, 18.5038, 2.80406, 1.12 ) }
    dend_51 { pt3dadd( -5.7386, 18.9448, 2.78487, 0.98 ) }
    dend_51 { pt3dadd( -5.7386, 18.9448, 2.78487, 0.98 ) }
    dend_51 { pt3dadd( -5.94503, 19.2018, 2.31016, 0.7 ) }
    dend_51 { pt3dadd( -6.26237, 19.6332, 1.48132, 0.56 ) }
    dend_51 { pt3dadd( -6.57349, 20.1215, 0.564392, 0.42 ) }
    dend_51 { pt3dadd( -6.82115, 20.5867, -0.266927, 0.56 ) }
    dend_51 { pt3dadd( -7.19784, 21.51, -1.84811, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_51 { pt3dadd( -7.2735, 21.78, -2.27805, 1.26 ) }
    dend_51 { pt3dadd( -7.33529, 22.1073, -2.73673, 1.12 ) }
    dend_51 { pt3dadd( -7.37911, 22.5047, -3.15063, 0.98 ) }
    dend_51 { pt3dadd( -7.40822, 22.9905, -3.44783, 0.84 ) }
    dend_51 { pt3dadd( -7.49582, 23.9475, -3.54044, 0.7 ) }
    dend_51 { pt3dadd( -7.53132, 24.1894, -3.47269, 0.84 ) }
    dend_51 { pt3dadd( -7.81547, 25.1863, -2.97069, 0.1 ) }
    dend_51 { pt3dadd( -8.2217, 25.8159, -2.33291, 0.1 ) }
    dend_51 { pt3dadd( -8.39532, 25.9759, -2.06469, 0.14 ) }
    dend_51 { pt3dadd( -8.39532, 25.9759, -2.06469, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 10/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.45197, 9.67549, 4.46689, 3.22 ) }
    dend_46 { pt3dadd( -2.16202, 9.90328, 4.35042, 3.22 ) }
    dend_46 { pt3dadd( -1.73834, 10.2973, 4.15396, 3.08 ) }
    dend_46 { pt3dadd( -0.998117, 11.0964, 3.80559, 2.94 ) }
    dend_46 { pt3dadd( -0.774744, 11.3793, 3.69804, 2.8 ) }
    dend_46 { pt3dadd( -0.429283, 11.8312, 3.50148, 2.66 ) }
    dend_46 { pt3dadd( 0.204146, 12.7021, 3.1204, 2.52 ) }
    dend_46 { pt3dadd( 0.479974, 13.1322, 2.93516, 2.38 ) }
    dend_46 { pt3dadd( 0.755, 13.6275, 2.74024, 2.24 ) }
    dend_46 { pt3dadd( 0.979787, 14.0995, 2.598, 2.1 ) }
    dend_46 { pt3dadd( 1.38818, 14.9603, 2.29435, 1.96 ) }
    dend_46 { pt3dadd( 1.63645, 15.4782, 2.09421, 0.28 ) }
    dend_46 { pt3dadd( 1.89125, 15.9889, 1.92026, 0.42 ) }
    dend_46 { pt3dadd( 2.07088, 16.3052, 1.79771, 0.56 ) }
    dend_46 { pt3dadd( 2.36554, 16.7845, 1.58978, 0.7 ) }
    dend_46 { pt3dadd( 2.86727, 17.5451, 1.27199, 0.84 ) }
    dend_46 { pt3dadd( 2.99262, 17.7758, 1.21703, 0.84 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 27/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.45266, -34.0044, 7.82349, 1.4 ) }
    dend_14 { pt3dadd( 1.54499, -34.3269, 7.82226, 1.4 ) }
    dend_14 { pt3dadd( 1.69399, -34.9773, 7.82034, 1.54 ) }
    dend_14 { pt3dadd( 1.79065, -35.6017, 7.60209, 1.68 ) }
    dend_14 { pt3dadd( 1.82142, -35.8538, 7.37818, 1.54 ) }
    dend_14 { pt3dadd( 1.85873, -36.3538, 6.92783, 1.4 ) }
    dend_14 { pt3dadd( 1.85873, -36.3538, 6.92783, 1.54 ) }
    dend_14 { pt3dadd( 1.87613, -36.7517, 6.65428, 1.4 ) }
    dend_14 { pt3dadd( 1.91015, -37.9406, 5.96798, 1.26 ) }
    dend_14 { pt3dadd( 1.95919, -39.1884, 5.4219, 1.12 ) }
    dend_14 { pt3dadd( 1.98971, -39.9066, 5.207, 0.98 ) }
    dend_14 { pt3dadd( 2.02857, -40.5608, 5.08301, 0.84 ) }
    dend_14 { pt3dadd( 2.13589, -41.9362, 4.84413, 0.7 ) }
    dend_14 { pt3dadd( 2.1625, -42.2675, 4.80208, 0.56 ) }
    dend_14 { pt3dadd( 2.19741, -42.9324, 4.77191, 0.56 ) }
    dend_14 { pt3dadd( 2.23097, -43.6799, 4.74422, 0.7 ) }
    dend_14 { pt3dadd( 2.25259, -44.3222, 4.61478, 0.84 ) }
    dend_14 { pt3dadd( 2.28456, -45.6181, 4.18263, 0.98 ) }
    dend_14 { pt3dadd( 2.30032, -46.0546, 3.9948, 0.56 ) }
    dend_14 { pt3dadd( 2.31604, -46.7572, 3.73013, 0.7 ) }
    dend_14 { pt3dadd( 2.33034, -47.3934, 3.57115, 0.84 ) }
    dend_14 { pt3dadd( 2.39213, -48.7924, 3.45199, 0.84 ) }
    dend_14 { pt3dadd( 2.43546, -49.4545, 3.51636, 0.98 ) }
    dend_14 { pt3dadd( 2.498, -50.1, 3.68805, 1.12 ) }
    dend_14 { pt3dadd( 2.66527, -51.3025, 4.09989, 0.56 ) }
    dend_14 { pt3dadd( 2.88324, -52.5518, 4.6192, 0.42 ) }
    dend_14 { pt3dadd( 3.00146, -53.1492, 4.89805, 0.42 ) }
    dend_14 { pt3dadd( 3.13832, -53.7503, 5.16808, 0.56 ) }
    dend_14 { pt3dadd( 3.2124, -54.0598, 5.26537, 0.7 ) }
    dend_14 { pt3dadd( 3.29652, -54.3832, 5.2949, 1.12 ) }
    dend_14 { pt3dadd( 3.47647, -55.0074, 5.17829, 1.26 ) }
    dend_14 { pt3dadd( 3.65068, -55.6185, 4.96836, 1.12 ) }
    dend_14 { pt3dadd( 3.98376, -56.7778, 4.68448, 1.12 ) }
    dend_14 { pt3dadd( 3.98376, -56.7778, 4.68448, 1.12 ) }
    dend_14 { pt3dadd( 4.04976, -57.1031, 4.68301, 1.12 ) }
    dend_14 { pt3dadd( 4.1417, -57.7643, 4.74122, 0.98 ) }
    dend_14 { pt3dadd( 4.20183, -58.419, 4.85395, 1.12 ) }
    dend_14 { pt3dadd( 4.28467, -59.7082, 5.28729, 1.12 ) }
    dend_14 { pt3dadd( 4.32484, -60.3962, 5.59317, 1.26 ) }
    dend_14 { pt3dadd( 4.36746, -61.079, 5.90525, 1.26 ) }
    dend_14 { pt3dadd( 4.39687, -61.5014, 6.09769, 1.4 ) }
    dend_14 { pt3dadd( 4.41372, -61.802, 6.24043, 1.4 ) }
    dend_14 { pt3dadd( 4.47178, -62.9245, 6.76621, 1.26 ) }
    dend_14 { pt3dadd( 4.5156, -63.5454, 7.01029, 1.26 ) }
    dend_14 { pt3dadd( 4.60342, -64.1487, 7.29533, 1.26 ) }
    dend_14 { pt3dadd( 4.73618, -64.7269, 7.60805, 1.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.45266, -34.0044, 7.82349, 2.24 ) }
    dend_1 { pt3dadd( 1.10181, -34.3367, 6.83657, 2.24 ) }
    dend_1 { pt3dadd( 0.820317, -34.6852, 5.8349, 2.38 ) }
    dend_1 { pt3dadd( 0.53849, -35.0342, 4.83204, 2.52 ) }
    dend_1 { pt3dadd( 0.46934, -35.1198, 4.58598, 2.38 ) }
    dend_1 { pt3dadd( 0.180435, -35.4775, 3.55794, 2.24 ) }
    dend_1 { pt3dadd( -0.0843249, -35.8053, 2.61582, 2.1 ) }
    dend_1 { pt3dadd( -0.278237, -36.1627, 1.70908, 1.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 81/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -2.51991, -53.7378, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -3.24376, -68.7203, -0.00613543, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_51 (entry count 84/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -8.39532, 25.9759, -2.06469, 0.28 ) }
    dend_61 { pt3dadd( -8.69518, 27.1419, -2.73335, 0.28 ) }
    dend_61 { pt3dadd( -9.0299, 28.4167, -3.08733, 0.42 ) }
    dend_61 { pt3dadd( -9.20041, 29.0601, -3.18302, 0.56 ) }
    dend_61 { pt3dadd( -9.37234, 29.7055, -3.22092, 0.56 ) }
    dend_61 { pt3dadd( -9.45927, 30.0301, -3.2227, 0.56 ) }
    dend_61 { pt3dadd( -9.81339, 31.3513, -3.19149, 0.56 ) }
    dend_61 { pt3dadd( -9.97038, 31.9934, -3.06732, 0.7 ) }
    dend_61 { pt3dadd( -9.97038, 31.9934, -3.06732, 0.7 ) }
    dend_61 { pt3dadd( -10.1018, 32.6244, -2.93727, 0.56 ) }
    dend_61 { pt3dadd( -10.2151, 33.2849, -2.89414, 0.42 ) }
    dend_61 { pt3dadd( -10.3111, 33.9444, -2.94213, 0.28 ) }
    dend_61 { pt3dadd( -10.4051, 34.6753, -3.0878, 0.14 ) }
    dend_61 { pt3dadd( -10.4819, 35.2987, -3.28358, 0.1 ) }
    dend_61 { pt3dadd( -10.5615, 35.9198, -3.52196, 0.1 ) }
    dend_61 { pt3dadd( -10.6878, 37.0573, -4.11602, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( -10.7454, 37.627, -4.47495, 0.84 ) }
    dend_61 { pt3dadd( -10.8018, 38.176, -4.86068, 0.7 ) }
    dend_61 { pt3dadd( -10.9263, 39.2551, -5.70342, 0.56 ) }
    dend_61 { pt3dadd( -10.9817, 39.768, -6.13839, 0.7 ) }
    dend_61 { pt3dadd( -11.0988, 40.8291, -7.08192, 0.84 ) }
    dend_61 { pt3dadd( -11.0988, 40.8291, -7.08192, 0.98 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 6/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -8.39532, 25.9759, -2.06469, 0.56 ) }
    dend_52 { pt3dadd( -8.37456, 26.2586, -3.25784, 0.56 ) }
    dend_52 { pt3dadd( -8.34246, 26.538, -4.33525, 0.42 ) }
    dend_52 { pt3dadd( -8.23255, 27.0835, -6.37651, 0.28 ) }
    dend_52 { pt3dadd( -8.15772, 27.3783, -7.451, 0.14 ) }
    dend_52 { pt3dadd( -8.02537, 27.9678, -9.4774, 0.28 ) }
    dend_52 { pt3dadd( -7.965, 28.29, -10.5038, 0.42 ) }
    dend_52 { pt3dadd( -7.89499, 28.6775, -11.6199, 0.56 ) }
    dend_52 { pt3dadd( -7.78396, 29.4691, -13.5534, 0.42 ) }
    dend_52 { pt3dadd( -7.73994, 29.9501, -14.5137, 0.56 ) }
    dend_52 { pt3dadd( -7.7191, 30.2728, -15.0703, 0.84 ) }
    dend_52 { pt3dadd( -7.72702, 30.6151, -15.5393, 0.7 ) }
    dend_52 { pt3dadd( -7.77317, 30.9865, -15.9783, 0.56 ) }
    dend_52 { pt3dadd( -7.86102, 31.3709, -16.4029, 0.42 ) }
    dend_52 { pt3dadd( -8.12181, 32.1101, -17.1264, 0.56 ) }
    dend_52 { pt3dadd( -8.18905, 32.2938, -17.3366, 0.7 ) }
    dend_52 { pt3dadd( -8.32771, 32.655, -17.8498, 1.12 ) }
    dend_52 { pt3dadd( -8.59765, 33.2305, -18.889, 0.98 ) }
    dend_52 { pt3dadd( -8.81927, 33.6197, -19.9106, 0.84 ) }
    dend_52 { pt3dadd( -8.96046, 33.7892, -20.518, 0.7 ) }
    dend_52 { pt3dadd( -9.21959, 34.0037, -21.5425, 0.84 ) }
    dend_52 { pt3dadd( -9.32961, 34.0752, -21.925, 0.56 ) }
    dend_52 { pt3dadd( -9.5127, 34.1606, -22.5488, 0.42 ) }
    dend_52 { pt3dadd( -9.918, 34.3222, -23.6577, 0.56 ) }
    dend_52 { pt3dadd( -10.2492, 34.4691, -24.3964, 0.28 ) }
    dend_52 { pt3dadd( -10.7566, 34.748, -25.3512, 0.14 ) }
    dend_52 { pt3dadd( -11.1893, 35.0333, -25.9817, 0.1 ) }
    dend_52 { pt3dadd( -11.8039, 35.5449, -26.7558, 0.14 ) }
    dend_52 { pt3dadd( -12.1687, 35.9097, -27.1513, 0.28 ) }
    dend_52 { pt3dadd( -12.411, 36.1605, -27.367, 0.14 ) }
    dend_52 { pt3dadd( -12.7862, 36.5731, -27.6825, 0.1 ) }
    dend_52 { pt3dadd( -13.0398, 36.8567, -27.8321, 0.14 ) }
    dend_52 { pt3dadd( -13.3856, 37.2833, -28.0002, 0.84 ) }
    dend_52 { pt3dadd( -13.64, 37.599, -28.0385, 0.98 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 2.99262, 17.7758, 1.21703, 1.4 ) }
    dend_48 { pt3dadd( 3.08466, 18.6285, 1.30479, 1.4 ) }
    dend_48 { pt3dadd( 3.15045, 19.0751, 1.28206, 1.4 ) }
    dend_48 { pt3dadd( 3.2675, 19.5093, 1.17828, 1.26 ) }
    dend_48 { pt3dadd( 3.38108, 19.8878, 1.06178, 1.12 ) }
    dend_48 { pt3dadd( 3.43579, 20.0747, 1.0005, 0.98 ) }
    dend_48 { pt3dadd( 3.64612, 20.8472, 0.746908, 0.84 ) }
    dend_48 { pt3dadd( 3.7591, 21.2047, 0.597477, 0.7 ) }
    dend_48 { pt3dadd( 3.99282, 21.9706, 0.267214, 0.56 ) }
    dend_48 { pt3dadd( 4.10149, 22.3385, 0.120898, 0.56 ) }
    dend_48 { pt3dadd( 4.21031, 22.7179, 0.0025351, 0.42 ) }
    dend_48 { pt3dadd( 4.31238, 23.0997, -0.073079, 0.56 ) }
    dend_48 { pt3dadd( 4.35874, 23.2996, -0.0816738, 0.7 ) }
    dend_48 { pt3dadd( 4.45293, 23.6988, -0.0621992, 0.56 ) }
    dend_48 { pt3dadd( 4.55486, 24.1429, 0.00413713, 0.56 ) }
    dend_48 { pt3dadd( 4.65927, 24.5675, 0.119787, 0.7 ) }
    dend_48 { pt3dadd( 4.72756, 24.8368, 0.217385, 0.56 ) }
    dend_48 { pt3dadd( 4.83265, 25.2424, 0.389697, 0.56 ) }
    dend_48 { pt3dadd( 4.93576, 25.6524, 0.575203, 0.56 ) }
    dend_48 { pt3dadd( 5.0011, 25.9019, 0.696344, 0.42 ) }
    dend_48 { pt3dadd( 5.25587, 26.7198, 1.07096, 0.56 ) }
    dend_48 { pt3dadd( 5.39911, 27.1189, 1.23468, 0.7 ) }
    dend_48 { pt3dadd( 5.50713, 27.3729, 1.32772, 0.56 ) }
    dend_48 { pt3dadd( 5.70419, 27.7612, 1.45422, 0.42 ) }
    dend_48 { pt3dadd( 5.9552, 28.1426, 1.52851, 0.28 ) }
    dend_48 { pt3dadd( 6.42444, 28.7415, 1.57319, 0.14 ) }
    dend_48 { pt3dadd( 6.73051, 29.0788, 1.56128, 0.56 ) }
    dend_48 { pt3dadd( 7.03768, 29.4246, 1.57135, 0.42 ) }
    dend_48 { pt3dadd( 7.22379, 29.6453, 1.59446, 0.56 ) }
    dend_48 { pt3dadd( 7.75121, 30.388, 1.79759, 0.7 ) }
    dend_48 { pt3dadd( 7.88094, 30.6263, 1.90502, 0.56 ) }
    dend_48 { pt3dadd( 7.96961, 30.8665, 2.04501, 0.42 ) }
    dend_48 { pt3dadd( 8.165, 31.5781, 2.49239, 0.98 ) }
    dend_48 { pt3dadd( 8.22488, 31.8268, 2.6323, 0.98 ) }
    dend_48 { pt3dadd( 8.39639, 32.5732, 3.02579, 0.84 ) }
    dend_48 { pt3dadd( 8.46641, 32.8366, 3.13777, 0.84 ) }
    dend_48 { pt3dadd( 8.6208, 33.2561, 3.24545, 0.98 ) }
    dend_48 { pt3dadd( 8.79189, 33.6725, 3.30341, 0.84 ) }
    dend_48 { pt3dadd( 9.12285, 34.4665, 3.37133, 0.7 ) }
    dend_48 { pt3dadd( 9.20651, 34.7347, 3.4139, 0.56 ) }
    dend_48 { pt3dadd( 9.40406, 35.5528, 3.60409, 0.7 ) }
    dend_48 { pt3dadd( 9.40406, 35.5528, 3.60409, 0.84 ) }
    dend_48 { pt3dadd( 9.33098, 36.2514, 4.06899, 0.84 ) }
    dend_48 { pt3dadd( 9.20176, 36.9102, 4.61711, 0.7 ) }
    dend_48 { pt3dadd( 9.0487, 37.433, 5.15695, 0.56 ) }
    dend_48 { pt3dadd( 9.01075, 37.568, 5.31072, 0.56 ) }
    dend_48 { pt3dadd( 8.9377, 37.8449, 5.67836, 0.98 ) }
    dend_48 { pt3dadd( 8.91185, 38.118, 6.04747, 0.84 ) }
    dend_48 { pt3dadd( 8.92871, 38.2397, 6.21565, 0.98 ) }
    dend_48 { pt3dadd( 9.08901, 38.6831, 6.85447, 0.42 ) }
    dend_48 { pt3dadd( 9.21193, 38.9429, 7.22094, 0.56 ) }
    dend_48 { pt3dadd( 9.43754, 39.4425, 7.89786, 0.7 ) }
    dend_48 { pt3dadd( 9.55599, 39.7168, 8.24793, 0.56 ) }
    dend_48 { pt3dadd( 9.61058, 39.8544, 8.3934, 0.7 ) }
    dend_48 { pt3dadd( 9.71758, 40.1762, 8.62996, 0.84 ) }
    dend_48 { pt3dadd( 9.81802, 40.5367, 8.77829, 0.56 ) }
    dend_48 { pt3dadd( 9.89894, 40.9279, 8.87438, 0.42 ) }
    dend_48 { pt3dadd( 9.97088, 41.3275, 8.91966, 0.28 ) }
    dend_48 { pt3dadd( 10.0349, 41.7804, 8.95819, 0.42 ) }
    dend_48 { pt3dadd( 10.1093, 42.1749, 8.96576, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_48 { pt3dadd( 10.2065, 42.5739, 8.95627, 0.7 ) }
    dend_48 { pt3dadd( 10.2719, 42.7686, 8.95079, 0.56 ) }
    dend_48 { pt3dadd( 10.45, 43.194, 8.94125, 0.84 ) }
    dend_48 { pt3dadd( 10.655, 43.598, 8.94311, 0.84 ) }
    dend_48 { pt3dadd( 11.0589, 44.275, 8.97704, 0.7 ) }
    dend_48 { pt3dadd( 11.3158, 44.6472, 9.01823, 0.56 ) }
    dend_48 { pt3dadd( 11.5827, 45.0196, 9.07444, 0.7 ) }
    dend_48 { pt3dadd( 11.744, 45.2556, 9.11716, 0.7 ) }
    dend_48 { pt3dadd( 11.9915, 45.6346, 9.20568, 0.84 ) }
    dend_48 { pt3dadd( 12.24, 46.0086, 9.28729, 0.7 ) }
    dend_48 { pt3dadd( 12.334, 46.1856, 9.33479, 0.56 ) }
    dend_48 { pt3dadd( 12.4755, 46.5557, 9.44547, 0.42 ) }
    dend_48 { pt3dadd( 12.5633, 46.9823, 9.57284, 0.28 ) }
    dend_48 { pt3dadd( 12.5867, 47.4241, 9.69685, 0.14 ) }
    dend_48 { pt3dadd( 12.5265, 48.1836, 9.88533, 0.28 ) }
    dend_48 { pt3dadd( 12.4046, 49.0192, 10.0782, 0.1 ) }
    dend_48 { pt3dadd( 12.277, 49.8228, 10.2623, 0.1 ) }
    dend_48 { pt3dadd( 12.219, 50.2186, 10.3585, 0.1 ) }
    dend_48 { pt3dadd( 12.1948, 50.4152, 10.4063, 0.14 ) }
    dend_48 { pt3dadd( 12.1575, 50.8136, 10.5011, 0.84 ) }
    dend_48 { pt3dadd( 12.1407, 51.2609, 10.6109, 0.7 ) }
    dend_48 { pt3dadd( 12.19, 51.7041, 10.6844, 0.7 ) }
    dend_48 { pt3dadd( 12.2783, 52.1524, 10.7407, 0.56 ) }
    dend_48 { pt3dadd( 12.3702, 52.5909, 10.7998, 0.56 ) }
    dend_48 { pt3dadd( 12.4128, 52.7898, 10.8273, 0.7 ) }
    dend_48 { pt3dadd( 12.4564, 52.9885, 10.8555, 0.84 ) }
    dend_48 { pt3dadd( 12.5325, 53.387, 10.9039, 0.56 ) }
    dend_48 { pt3dadd( 12.61, 53.8295, 10.9524, 0.42 ) }
    dend_48 { pt3dadd( 12.6802, 54.2295, 10.9964, 0.56 ) }
    dend_48 { pt3dadd( 12.763, 54.678, 11.0488, 0.42 ) }
    dend_48 { pt3dadd( 12.8441, 55.1209, 11.0999, 0.28 ) }
    dend_48 { pt3dadd( 12.9108, 55.5239, 11.1413, 0.42 ) }
    dend_48 { pt3dadd( 12.9812, 55.9767, 11.1846, 0.28 ) }
    dend_48 { pt3dadd( 13.0213, 56.2568, 11.2087, 0.42 ) }
    dend_48 { pt3dadd( 13.0794, 56.7121, 11.2429, 0.56 ) }
    dend_48 { pt3dadd( 13.1213, 57.1198, 11.2662, 0.56 ) }
    dend_48 { pt3dadd( 13.1454, 57.5205, 11.2766, 0.42 ) }
    dend_48 { pt3dadd( 13.1536, 57.9312, 11.2752, 0.56 ) }
    dend_48 { pt3dadd( 13.1372, 58.3912, 11.255, 0.7 ) }
    dend_48 { pt3dadd( 13.1249, 58.7981, 11.1969, 0.84 ) }
    dend_48 { pt3dadd( 13.1249, 58.7981, 11.1969, 0.7 ) }
    dend_48 { pt3dadd( 13.1351, 59.2386, 11.0822, 0.28 ) }
    dend_48 { pt3dadd( 13.1617, 59.6334, 10.9759, 0.14 ) }
    dend_48 { pt3dadd( 13.1978, 60.0226, 10.8713, 0.1 ) }
    dend_48 { pt3dadd( 13.3151, 60.8118, 10.6136, 0.14 ) }
    dend_48 { pt3dadd( 13.3882, 61.1953, 10.4815, 0.28 ) }
    dend_48 { pt3dadd( 13.5044, 61.6114, 10.316, 0.42 ) }
    dend_48 { pt3dadd( 13.6321, 62.019, 10.1623, 0.56 ) }
    dend_48 { pt3dadd( 13.7466, 62.3908, 10.032, 0.56 ) }
    dend_48 { pt3dadd( 13.9578, 63.1687, 9.79751, 0.56 ) }
    dend_48 { pt3dadd( 14.0353, 63.5608, 9.70885, 0.56 ) }
    dend_48 { pt3dadd( 14.1476, 64.2939, 9.55115, 0.7 ) }
    dend_48 { pt3dadd( 14.2642, 65.0954, 9.33304, 1.12 ) }
    dend_48 { pt3dadd( 14.306, 65.4849, 9.21245, 0.98 ) }
    dend_48 { pt3dadd( 14.3303, 65.8786, 9.09382, 0.84 ) }
    dend_48 { pt3dadd( 14.3189, 66.2734, 8.98446, 0.7 ) }
    dend_48 { pt3dadd( 14.2933, 66.6578, 8.86536, 0.56 ) }
    dend_48 { pt3dadd( 14.2594, 67.3381, 8.59507, 0.42 ) }
    dend_48 { pt3dadd( 14.2708, 67.7504, 8.3746, 0.28 ) }
    dend_48 { pt3dadd( 14.2705, 68.1102, 8.19001, 0.14 ) }
    dend_48 { pt3dadd( 14.2624, 68.537, 8.00046, 0.1 ) }
    dend_48 { pt3dadd( 14.231, 68.926, 7.90016, 0.1 ) }
    dend_48 { pt3dadd( 14.1267, 69.7561, 7.87248, 0.14 ) }
    dend_48 { pt3dadd( 14.1267, 69.7561, 7.87248, 0.28 ) }
    dend_48 { pt3dadd( 14.0235, 70.5604, 8.08556, 0.28 ) }
    dend_48 { pt3dadd( 13.9826, 70.9943, 8.23759, 0.42 ) }
    dend_48 { pt3dadd( 13.9442, 71.7892, 8.56426, 0.56 ) }
    dend_48 { pt3dadd( 13.9385, 72.2122, 8.74933, 0.56 ) }
    dend_48 { pt3dadd( 13.9391, 72.4011, 8.83116, 0.7 ) }
    dend_48 { pt3dadd( 13.9688, 72.8272, 8.98086, 0.7 ) }
    dend_48 { pt3dadd( 14.0296, 73.2706, 9.08969, 0.56 ) }
    dend_48 { pt3dadd( 14.119, 73.7096, 9.14877, 0.42 ) }
    dend_48 { pt3dadd( 14.2366, 74.1548, 9.1547, 0.28 ) }
    dend_48 { pt3dadd( 14.3424, 74.5515, 9.13779, 0.42 ) }
    dend_48 { pt3dadd( 14.4721, 74.9816, 9.07235, 0.28 ) }
    dend_48 { pt3dadd( 14.5965, 75.3629, 8.97949, 0.14 ) }
    dend_48 { pt3dadd( 14.8339, 76.0812, 8.75531, 0.1 ) }
    dend_48 { pt3dadd( 14.9561, 76.4469, 8.63035, 0.1 ) }
    dend_48 { pt3dadd( 15.081, 76.8175, 8.50622, 0.14 ) }
    dend_48 { pt3dadd( 15.3299, 77.5844, 8.27178, 0.28 ) }
    dend_48 { pt3dadd( 15.4571, 78.0146, 8.1627, 0.14 ) }
    dend_48 { pt3dadd( 15.5549, 78.4007, 8.09339, 0.28 ) }
    dend_48 { pt3dadd( 15.6434, 78.8511, 8.05432, 0.42 ) }
    dend_48 { pt3dadd( 15.7288, 79.3018, 8.03577, 0.42 ) }
    dend_48 { pt3dadd( 15.7973, 79.6974, 8.04292, 0.28 ) }
    dend_48 { pt3dadd( 15.8636, 80.1498, 8.0831, 0.42 ) }
    dend_48 { pt3dadd( 15.9267, 80.5516, 8.12193, 0.56 ) }
    dend_48 { pt3dadd( 16.0061, 80.9936, 8.17188, 0.56 ) }
    dend_48 { pt3dadd( 16.0413, 81.1926, 8.19398, 0.7 ) }
    dend_48 { pt3dadd( 16.1176, 81.6427, 8.24151, 0.56 ) }
    dend_48 { pt3dadd( 16.1884, 82.0882, 8.28512, 0.42 ) }
    dend_48 { pt3dadd( 16.2669, 82.5404, 8.29349, 0.56 ) }
    dend_48 { pt3dadd( 16.3471, 82.9861, 8.27125, 0.7 ) }
    dend_48 { pt3dadd( 16.4157, 83.3886, 8.22529, 0.84 ) }
    dend_48 { pt3dadd( 16.4834, 83.7873, 8.16389, 0.7 ) }
    dend_48 { pt3dadd( 16.5478, 84.1853, 8.08305, 0.84 ) }
    dend_48 { pt3dadd( 16.6791, 84.9914, 7.89783, 0.7 ) }
    dend_48 { pt3dadd( 16.7485, 85.3868, 7.8082, 0.56 ) }
    dend_48 { pt3dadd( 16.7889, 85.5828, 7.77036, 0.56 ) }
    dend_48 { pt3dadd( 16.9069, 86.0174, 7.72786, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( 16.9069, 86.0174, 7.72786, 0.56 ) }
    dend_48 { pt3dadd( 17.0185, 86.4579, 7.80324, 0.14 ) }
    dend_48 { pt3dadd( 17.0924, 86.8828, 7.93967, 0.1 ) }
    dend_48 { pt3dadd( 17.1225, 87.1562, 8.03397, 0.1 ) }
    dend_48 { pt3dadd( 17.1406, 87.7055, 8.21519, 0.1 ) }
    dend_48 { pt3dadd( 17.1309, 87.9026, 8.27288, 0.14 ) }
    dend_48 { pt3dadd( 17.0816, 88.725, 8.41755, 0.28 ) }
    dend_48 { pt3dadd( 17.0641, 88.9295, 8.42833, 0.42 ) }
    dend_48 { pt3dadd( 17.0457, 89.3794, 8.36394, 0.56 ) }
    dend_48 { pt3dadd( 17.0778, 89.7651, 8.22203, 0.7 ) }
    dend_48 { pt3dadd( 17.1315, 90.1251, 8.04675, 0.56 ) }
    dend_48 { pt3dadd( 17.3069, 90.8523, 7.65916, 0.42 ) }
    dend_48 { pt3dadd( 17.4273, 91.1924, 7.46039, 0.28 ) }
    dend_48 { pt3dadd( 17.6966, 91.89, 7.0706, 0.42 ) }
    dend_48 { pt3dadd( 17.9646, 92.5536, 6.73539, 0.56 ) }
    dend_48 { pt3dadd( 18.224, 93.2904, 6.42562, 0.56 ) }
    dend_48 { pt3dadd( 18.3382, 93.6991, 6.26411, 0.42 ) }
    dend_48 { pt3dadd( 18.3682, 93.8936, 6.20355, 0.28 ) }
    dend_48 { pt3dadd( 18.4032, 94.3286, 6.0729, 0.1 ) }
    dend_48 { pt3dadd( 18.4027, 94.7266, 5.96742, 0.1 ) }
    dend_48 { pt3dadd( 18.3913, 95.12, 5.85274, 0.1 ) }
    dend_48 { pt3dadd( 18.4019, 95.9225, 5.52795, 0.1 ) }
    dend_48 { pt3dadd( 18.3949, 96.2959, 5.35617, 0.1 ) }
    dend_48 { pt3dadd( 18.3792, 96.6628, 5.18245, 0.14 ) }
    dend_48 { pt3dadd( 18.3645, 97.0373, 5.0136, 0.28 ) }
    dend_48 { pt3dadd( 18.3646, 97.2217, 4.92021, 0.42 ) }
    dend_48 { pt3dadd( 18.3711, 97.5841, 4.74135, 0.56 ) }
    dend_48 { pt3dadd( 18.3761, 98.006, 4.56735, 0.84 ) }
    dend_48 { pt3dadd( 18.3877, 98.3799, 4.41044, 0.7 ) }
    dend_48 { pt3dadd( 18.4005, 98.7614, 4.25939, 0.56 ) }
    dend_48 { pt3dadd( 18.4201, 99.5512, 3.9763, 0.42 ) }
    dend_48 { pt3dadd( 18.4263, 99.9432, 3.84957, 0.28 ) }
    dend_48 { pt3dadd( 18.4137, 100.342, 3.75684, 0.14 ) }
    dend_48 { pt3dadd( 18.3916, 100.749, 3.70386, 0.28 ) }
    dend_48 { pt3dadd( 18.3584, 101.149, 3.69441, 0.42 ) }
    dend_48 { pt3dadd( 18.3178, 101.557, 3.73127, 0.56 ) }
    dend_48 { pt3dadd( 18.2936, 101.756, 3.76868, 0.56 ) }
    dend_48 { pt3dadd( 18.2229, 102.57, 3.95313, 0.56 ) }
    dend_48 { pt3dadd( 18.2062, 103.016, 4.06692, 0.42 ) }
    dend_48 { pt3dadd( 18.2349, 103.458, 4.15995, 0.56 ) }
    dend_48 { pt3dadd( 18.3039, 103.907, 4.2344, 0.42 ) }
    dend_48 { pt3dadd( 18.3854, 104.298, 4.29051, 0.28 ) }
    dend_48 { pt3dadd( 18.4627, 104.577, 4.31519, 0.14 ) }
    dend_48 { pt3dadd( 18.6317, 105.006, 4.30414, 0.14 ) }
    dend_48 { pt3dadd( 18.9737, 105.792, 4.23753, 0.28 ) }
    dend_48 { pt3dadd( 18.9737, 105.792, 4.23753, 0.42 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 46/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 2.99262, 17.7758, 1.21703, 1.26 ) }
    dend_47 { pt3dadd( 3.99981, 18.187, 0.967657, 1.26 ) }
    dend_47 { pt3dadd( 4.34377, 18.303, 0.868376, 1.4 ) }
    dend_47 { pt3dadd( 4.86326, 18.4942, 0.668495, 1.54 ) }
    dend_47 { pt3dadd( 5.32345, 18.6815, 0.486165, 1.4 ) }
    dend_47 { pt3dadd( 6.18139, 19.0372, 0.170927, 1.26 ) }
    dend_47 { pt3dadd( 7.12177, 19.4651, -0.148286, 1.12 ) }
    dend_47 { pt3dadd( 7.58086, 19.674, -0.315456, 0.98 ) }
    dend_47 { pt3dadd( 8.60351, 20.1701, -0.701621, 0.84 ) }
    dend_47 { pt3dadd( 8.91967, 20.3348, -0.818903, 0.7 ) }
    dend_47 { pt3dadd( 9.35363, 20.5996, -0.958832, 0.56 ) }
    dend_47 { pt3dadd( 9.82833, 20.9375, -1.05721, 0.7 ) }
    dend_47 { pt3dadd( 10.2801, 21.3139, -1.10781, 0.56 ) }
    dend_47 { pt3dadd( 11.096, 22.0517, -1.17209, 0.7 ) }
    dend_47 { pt3dadd( 11.2893, 22.2303, -1.17522, 0.7 ) }
    dend_47 { pt3dadd( 11.7184, 22.6326, -1.19703, 0.1 ) }
    dend_47 { pt3dadd( 11.976, 22.8887, -1.219, 0.1 ) }
    dend_47 { pt3dadd( 12.5062, 23.4159, -1.25497, 0.1 ) }
    dend_47 { pt3dadd( 12.5062, 23.4159, -1.25497, 0.14 ) }
    dend_47 { pt3dadd( 12.8956, 24.0292, -1.0907, 0.1 ) }
    dend_47 { pt3dadd( 13.0814, 24.3297, -1.012, 0.1 ) }
    dend_47 { pt3dadd( 13.2817, 24.6297, -0.928163, 0.1 ) }
    dend_47 { pt3dadd( 13.4329, 24.8346, -0.865822, 0.1 ) }
    dend_47 { pt3dadd( 13.823, 25.27, -0.810869, 0.7 ) }
    dend_47 { pt3dadd( 14.0852, 25.5221, -0.801951, 0.56 ) }
    dend_47 { pt3dadd( 14.6597, 26.004, -0.790854, 0.42 ) }
    dend_47 { pt3dadd( 14.9442, 26.2321, -0.783302, 0.28 ) }
    dend_47 { pt3dadd( 15.4114, 26.5916, -0.762609, 0.42 ) }
    dend_47 { pt3dadd( 16.1964, 27.1646, -0.713593, 0.98 ) }
    dend_47 { pt3dadd( 16.6953, 27.4793, -0.671875, 0.84 ) }
    dend_47 { pt3dadd( 17.1465, 27.7462, -0.622263, 0.7 ) }
    dend_47 { pt3dadd( 17.4696, 27.9287, -0.573188, 0.56 ) }
    dend_47 { pt3dadd( 17.9688, 28.2155, -0.466587, 0.42 ) }
    dend_47 { pt3dadd( 18.4526, 28.5133, -0.326734, 0.28 ) }
    dend_47 { pt3dadd( 18.8715, 28.7929, -0.166288, 0.42 ) }
    dend_47 { pt3dadd( 19.1642, 28.9962, -0.0538563, 0.28 ) }
    dend_47 { pt3dadd( 19.6218, 29.3142, 0.121962, 0.14 ) }
    dend_47 { pt3dadd( 20.0955, 29.6195, 0.302888, 0.28 ) }
    dend_47 { pt3dadd( 20.3981, 29.8068, 0.418174, 0.14 ) }
    dend_47 { pt3dadd( 20.8747, 30.0942, 0.59939, 0.1 ) }
    dend_47 { pt3dadd( 21.3553, 30.3869, 0.78223, 0.14 ) }
    dend_47 { pt3dadd( 21.7857, 30.6426, 0.945736, 0.28 ) }
    dend_47 { pt3dadd( 22.2188, 30.8936, 1.10998, 0.42 ) }
    dend_47 { pt3dadd( 22.7124, 31.1865, 1.25383, 0.28 ) }
    dend_47 { pt3dadd( 23.2091, 31.4897, 1.31467, 0.14 ) }
    dend_47 { pt3dadd( 23.5207, 31.6915, 1.2697, 0.1 ) }
    dend_47 { pt3dadd( 23.9585, 31.9823, 1.00931, 0.1 ) }
    dend_47 { pt3dadd( 24.1403, 32.1061, 0.860721, 0.14 ) }
    dend_47 { pt3dadd( 24.862, 32.6076, 0.181465, 0.84 ) }
    dend_47 { pt3dadd( 25.5108, 33.0554, -0.459083, 0.98 ) }
    dend_47 { pt3dadd( 26.1631, 33.5022, -1.09657, 0.84 ) }
    dend_47 { pt3dadd( 27.4163, 34.3628, -2.27294, 0.84 ) }
    dend_47 { pt3dadd( 27.8114, 34.6346, -2.62323, 0.7 ) }
    dend_47 { pt3dadd( 28.0676, 34.8096, -2.81926, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_47 { pt3dadd( 28.5331, 35.1071, -3.0525, 0.42 ) }
    dend_47 { pt3dadd( 29.0294, 35.4056, -3.13917, 0.28 ) }
    dend_47 { pt3dadd( 29.3574, 35.58, -3.09089, 0.14 ) }
    dend_47 { pt3dadd( 29.5919, 35.6813, -3.02872, 0.28 ) }
    dend_47 { pt3dadd( 29.8382, 35.7702, -2.98407, 0.7 ) }
    dend_47 { pt3dadd( 30.3377, 35.9332, -2.9208, 0.56 ) }
    dend_47 { pt3dadd( 30.8333, 36.0934, -2.87534, 0.42 ) }
    dend_47 { pt3dadd( 31.3317, 36.2667, -2.83827, 0.28 ) }
    dend_47 { pt3dadd( 32.341, 36.6585, -2.84261, 0.28 ) }
    dend_47 { pt3dadd( 32.6755, 36.8087, -2.85865, 0.56 ) }
    dend_47 { pt3dadd( 33.2011, 37.0725, -2.93422, 0.42 ) }
    dend_47 { pt3dadd( 33.7063, 37.3525, -3.0343, 0.28 ) }
    dend_47 { pt3dadd( 34.0246, 37.5457, -3.10511, 0.42 ) }
    dend_47 { pt3dadd( 34.939, 38.1399, -3.29469, 0.56 ) }
    dend_47 { pt3dadd( 35.4193, 38.4657, -3.36609, 0.56 ) }
    dend_47 { pt3dadd( 36.3307, 39.0856, -3.49129, 0.56 ) }
    dend_47 { pt3dadd( 36.8143, 39.4102, -3.54343, 0.56 ) }
    dend_47 { pt3dadd( 37.1205, 39.6237, -3.55951, 0.7 ) }
    dend_47 { pt3dadd( 37.5903, 39.9698, -3.54087, 0.56 ) }
    dend_47 { pt3dadd( 38.0477, 40.3399, -3.49661, 0.42 ) }
    dend_47 { pt3dadd( 38.328, 40.584, -3.47226, 0.28 ) }
    dend_47 { pt3dadd( 38.7203, 40.9354, -3.46797, 0.28 ) }
    dend_47 { pt3dadd( 39.1546, 41.317, -3.5147, 0.1 ) }
    dend_47 { pt3dadd( 39.4376, 41.5484, -3.58985, 0.1 ) }
    dend_47 { pt3dadd( 40.3375, 42.2616, -3.92913, 0.14 ) }
    dend_47 { pt3dadd( 40.6189, 42.4768, -4.04901, 0.28 ) }
    dend_47 { pt3dadd( 41.4716, 43.0844, -4.40879, 0.42 ) }
    dend_47 { pt3dadd( 41.9349, 43.3785, -4.61506, 0.28 ) }
    dend_47 { pt3dadd( 42.7487, 43.8084, -4.94903, 0.28 ) }
    dend_47 { pt3dadd( 43.0761, 43.955, -5.06079, 0.56 ) }
    dend_47 { pt3dadd( 43.6162, 44.1527, -5.18413, 0.42 ) }
    dend_47 { pt3dadd( 44.1176, 44.3069, -5.2571, 0.28 ) }
    dend_47 { pt3dadd( 45.1569, 44.6153, -5.28429, 0.14 ) }
    dend_47 { pt3dadd( 45.6623, 44.7718, -5.26479, 0.28 ) }
    dend_47 { pt3dadd( 46.1606, 44.9444, -5.19792, 0.14 ) }
    dend_47 { pt3dadd( 46.6401, 45.1282, -5.11888, 0.1 ) }
    dend_47 { pt3dadd( 47.1213, 45.3424, -5.05542, 0.14 ) }
    dend_47 { pt3dadd( 47.7748, 45.6914, -4.97194, 0.28 ) }
    dend_47 { pt3dadd( 48.0934, 45.8812, -4.92214, 0.14 ) }
    dend_47 { pt3dadd( 48.5846, 46.1931, -4.86386, 0.1 ) }
    dend_47 { pt3dadd( 48.899, 46.393, -4.83289, 0.1 ) }
    dend_47 { pt3dadd( 49.8338, 46.978, -4.74372, 0.14 ) }
    dend_47 { pt3dadd( 50.3386, 47.2694, -4.68957, 0.28 ) }
    dend_47 { pt3dadd( 50.8062, 47.5105, -4.62647, 0.42 ) }
    dend_47 { pt3dadd( 51.3261, 47.7658, -4.53472, 0.56 ) }
    dend_47 { pt3dadd( 51.7942, 47.986, -4.43003, 0.42 ) }
    dend_47 { pt3dadd( 52.3243, 48.2276, -4.319, 0.28 ) }
    dend_47 { pt3dadd( 52.7932, 48.4459, -4.21361, 0.14 ) }
    dend_47 { pt3dadd( 53.3257, 48.7022, -4.16677, 0.28 ) }
    dend_47 { pt3dadd( 53.8471, 48.97, -4.17609, 0.42 ) }
    dend_47 { pt3dadd( 54.0766, 49.1002, -4.1989, 0.56 ) }
    dend_47 { pt3dadd( 55.006, 49.6852, -4.33768, 0.7 ) }
    dend_47 { pt3dadd( 55.4889, 50.0037, -4.42531, 0.84 ) }
    dend_47 { pt3dadd( 56.3042, 50.5816, -4.58409, 0.7 ) }
    dend_47 { pt3dadd( 56.7753, 50.918, -4.66506, 0.7 ) }
    dend_47 { pt3dadd( 57.2575, 51.2556, -4.71543, 0.56 ) }
    dend_47 { pt3dadd( 57.7438, 51.5799, -4.70843, 0.42 ) }
    dend_47 { pt3dadd( 57.9684, 51.7131, -4.66595, 0.28 ) }
    dend_47 { pt3dadd( 58.292, 51.8795, -4.57616, 0.1 ) }
    dend_47 { pt3dadd( 58.7511, 52.077, -4.405, 0.1 ) }
    dend_47 { pt3dadd( 59.2231, 52.2403, -4.2307, 0.1 ) }
    dend_47 { pt3dadd( 59.6886, 52.3817, -4.01519, 0.1 ) }
    dend_47 { pt3dadd( 60.1375, 52.5238, -3.77311, 0.14 ) }
    dend_47 { pt3dadd( 60.63, 52.6865, -3.48202, 0.28 ) }
    dend_47 { pt3dadd( 61.0424, 52.8253, -3.18028, 0.28 ) }
    dend_47 { pt3dadd( 61.4342, 52.9643, -2.84823, 0.28 ) }
    dend_47 { pt3dadd( 62.2252, 53.2464, -2.11736, 0.28 ) }
    dend_47 { pt3dadd( 62.635, 53.3969, -1.72253, 0.42 ) }
    dend_47 { pt3dadd( 63.0008, 53.5389, -1.36317, 0.28 ) }
    dend_47 { pt3dadd( 63.7478, 53.8426, -0.647415, 0.14 ) }
    dend_47 { pt3dadd( 64.124, 54.0128, -0.312752, 0.1 ) }
    dend_47 { pt3dadd( 64.5139, 54.204, -0.011892, 0.14 ) }
    dend_47 { pt3dadd( 64.9699, 54.4423, 0.269766, 0.28 ) }
    dend_47 { pt3dadd( 65.2614, 54.6123, 0.432396, 0.42 ) }
    dend_47 { pt3dadd( 65.7207, 54.914, 0.652275, 0.28 ) }
    dend_47 { pt3dadd( 66.1936, 55.2409, 0.788062, 0.28 ) }
    dend_47 { pt3dadd( 66.663, 55.5735, 0.888598, 0.42 ) }
    dend_47 { pt3dadd( 66.9691, 55.7823, 0.93702, 0.56 ) }
    dend_47 { pt3dadd( 67.4574, 56.0987, 0.99353, 0.7 ) }
    dend_47 { pt3dadd( 67.9537, 56.4051, 1.03946, 0.7 ) }
    dend_47 { pt3dadd( 68.9025, 56.9764, 1.1157, 0.84 ) }
    dend_47 { pt3dadd( 69.1273, 57.1096, 1.13564, 0.98 ) }
    dend_47 { pt3dadd( 69.5808, 57.3771, 1.18857, 0.7 ) }
    dend_47 { pt3dadd( 69.9032, 57.5601, 1.24053, 0.56 ) }
    dend_47 { pt3dadd( 70.4085, 57.8352, 1.35076, 0.42 ) }
    dend_47 { pt3dadd( 70.9135, 58.0939, 1.49768, 0.28 ) }
    dend_47 { pt3dadd( 71.4059, 58.3461, 1.7293, 0.14 ) }
    dend_47 { pt3dadd( 71.8732, 58.592, 1.98405, 0.1 ) }
    dend_47 { pt3dadd( 72.2849, 58.8069, 2.23479, 0.14 ) }
    dend_47 { pt3dadd( 72.6816, 59.0189, 2.49838, 0.28 ) }
    dend_47 { pt3dadd( 73.0687, 59.242, 2.77887, 0.42 ) }
    dend_47 { pt3dadd( 73.8958, 59.7522, 3.31789, 0.56 ) }
    dend_47 { pt3dadd( 74.1726, 59.9423, 3.4742, 0.56 ) }
    dend_47 { pt3dadd( 74.3709, 60.0905, 3.5351, 0.56 ) }
    dend_47 { pt3dadd( 74.8321, 60.4444, 3.57161, 0.56 ) }
    dend_47 { pt3dadd( 75.1294, 60.6689, 3.54917, 0.42 ) }
    dend_47 { pt3dadd( 76.0287, 61.2953, 3.40259, 0.28 ) }
    dend_47 { pt3dadd( 76.3404, 61.4926, 3.33922, 0.14 ) }
    dend_47 { pt3dadd( 77.298, 62.0381, 3.19211, 0.1 ) }
    dend_47 { pt3dadd( 77.7612, 62.2734, 3.15092, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( 78.3016, 62.5032, 3.14721, 0.14 ) }
    dend_47 { pt3dadd( 78.7934, 62.6873, 3.22779, 0.28 ) }
    dend_47 { pt3dadd( 79.3211, 62.8586, 3.42304, 0.42 ) }
    dend_47 { pt3dadd( 79.7826, 62.9864, 3.64963, 0.56 ) }
    dend_47 { pt3dadd( 80.2234, 63.1028, 3.92491, 0.42 ) }
    dend_47 { pt3dadd( 80.6716, 63.2258, 4.1792, 0.28 ) }
    dend_47 { pt3dadd( 81.6087, 63.4989, 4.65187, 0.14 ) }
    dend_47 { pt3dadd( 82.0858, 63.6589, 4.81549, 0.28 ) }
    dend_47 { pt3dadd( 82.5649, 63.8438, 4.91018, 0.42 ) }
    dend_47 { pt3dadd( 82.9018, 63.9985, 4.93465, 0.56 ) }
    dend_47 { pt3dadd( 83.8864, 64.5148, 4.91347, 0.42 ) }
    dend_47 { pt3dadd( 84.394, 64.795, 4.82773, 0.28 ) }
    dend_47 { pt3dadd( 85.3271, 65.3352, 4.56974, 0.14 ) }
    dend_47 { pt3dadd( 85.6372, 65.5245, 4.47857, 0.1 ) }
    dend_47 { pt3dadd( 86.1205, 65.8286, 4.34868, 0.1 ) }
    dend_47 { pt3dadd( 86.6143, 66.1402, 4.25268, 0.1 ) }
    dend_47 { pt3dadd( 87.4251, 66.677, 4.1861, 0.14 ) }
    dend_47 { pt3dadd( 87.7355, 66.8835, 4.15764, 0.1 ) }
    dend_47 { pt3dadd( 88.2163, 67.2264, 4.13014, 0.1 ) }
    dend_47 { pt3dadd( 88.6907, 67.5762, 4.09837, 0.1 ) }
    dend_47 { pt3dadd( 89.1509, 67.9293, 4.03149, 0.1 ) }
    dend_47 { pt3dadd( 89.4344, 68.1663, 3.98023, 0.14 ) }
    dend_47 { pt3dadd( 90.2508, 68.8955, 3.84992, 0.28 ) }
    dend_47 { pt3dadd( 90.6755, 69.2889, 3.73045, 0.14 ) }
    dend_47 { pt3dadd( 91.0785, 69.6823, 3.57989, 0.1 ) }
    dend_47 { pt3dadd( 91.744, 70.382, 3.29469, 0.1 ) }
    dend_47 { pt3dadd( 92.1191, 70.7831, 3.1084, 0.1 ) }
    dend_47 { pt3dadd( 92.4924, 71.1984, 2.9193, 0.1 ) }
    dend_47 { pt3dadd( 93.1761, 72.0023, 2.59382, 0.14 ) }
    dend_47 { pt3dadd( 93.4069, 72.2681, 2.47256, 0.28 ) }
    dend_47 { pt3dadd( 93.7629, 72.6864, 2.28247, 0.42 ) }
    dend_47 { pt3dadd( 94.445, 73.4971, 1.97212, 0.28 ) }
    dend_47 { pt3dadd( 94.8073, 73.9215, 1.8173, 0.14 ) }
    dend_47 { pt3dadd( 95.0465, 74.1863, 1.71113, 0.1 ) }
    dend_47 { pt3dadd( 95.8376, 75.0242, 1.40152, 0.14 ) }
    dend_47 { pt3dadd( 96.0883, 75.2815, 1.3033, 0.28 ) }
    dend_47 { pt3dadd( 96.5861, 75.7944, 1.12471, 0.42 ) }
    dend_47 { pt3dadd( 96.8401, 76.0646, 1.05916, 0.56 ) }
    dend_47 { pt3dadd( 97.5167, 76.7928, 0.918767, 0.56 ) }
    dend_47 { pt3dadd( 97.9036, 77.2344, 0.871054, 0.84 ) }
    dend_47 { pt3dadd( 98.1514, 77.5104, 0.84959, 0.7 ) }
    dend_47 { pt3dadd( 98.5581, 77.9202, 0.805688, 0.56 ) }
    dend_47 { pt3dadd( 98.9982, 78.3107, 0.767277, 0.42 ) }
    dend_47 { pt3dadd( 99.4584, 78.6791, 0.751371, 0.56 ) }
    dend_47 { pt3dadd( 99.7627, 78.8951, 0.766524, 0.7 ) }
    dend_47 { pt3dadd( 100.713, 79.4022, 0.819999, 0.7 ) }
    dend_47 { pt3dadd( 101.202, 79.5995, 0.85852, 0.7 ) }
    dend_47 { pt3dadd( 101.71, 79.746, 0.915928, 0.84 ) }
    dend_47 { pt3dadd( 101.969, 79.8063, 0.934998, 1.26 ) }
    dend_47 { pt3dadd( 102.48, 79.9039, 0.970409, 1.12 ) }
    dend_47 { pt3dadd( 103.0, 80.0103, 1.01635, 0.98 ) }
    dend_47 { pt3dadd( 103.509, 80.1393, 1.08315, 0.84 ) }
    dend_47 { pt3dadd( 104.016, 80.2835, 1.14189, 0.7 ) }
    dend_47 { pt3dadd( 105.07, 80.6265, 1.26374, 0.56 ) }
    dend_47 { pt3dadd( 105.563, 80.8084, 1.32687, 0.42 ) }
    dend_47 { pt3dadd( 106.108, 81.03, 1.40452, 0.28 ) }
    dend_47 { pt3dadd( 106.643, 81.2552, 1.49068, 0.14 ) }
    dend_47 { pt3dadd( 107.114, 81.4744, 1.58405, 0.1 ) }
    dend_47 { pt3dadd( 107.635, 81.7408, 1.67919, 0.1 ) }
    dend_47 { pt3dadd( 108.139, 82.0351, 1.72591, 0.14 ) }
    dend_47 { pt3dadd( 108.357, 82.1829, 1.70173, 0.28 ) }
    dend_47 { pt3dadd( 108.56, 82.3423, 1.64566, 0.42 ) }
    dend_47 { pt3dadd( 108.974, 82.7153, 1.48419, 0.7 ) }
    dend_47 { pt3dadd( 109.644, 83.3819, 1.1329, 0.56 ) }
    dend_47 { pt3dadd( 110.352, 84.1266, 0.719193, 0.56 ) }
    dend_47 { pt3dadd( 110.587, 84.3723, 0.58734, 0.42 ) }
    dend_47 { pt3dadd( 111.08, 84.8754, 0.353629, 0.28 ) }
    dend_47 { pt3dadd( 111.339, 85.1279, 0.262398, 0.14 ) }
    dend_47 { pt3dadd( 112.207, 85.921, 0.0735346, 0.1 ) }
    dend_47 { pt3dadd( 112.487, 86.1666, 0.0662442, 0.1 ) }
    dend_47 { pt3dadd( 112.886, 86.5041, 0.108262, 0.1 ) }
    dend_47 { pt3dadd( 113.335, 86.8804, 0.174754, 0.1 ) }
    dend_47 { pt3dadd( 113.778, 87.2476, 0.267566, 0.1 ) }
    dend_47 { pt3dadd( 114.061, 87.4833, 0.349615, 0.14 ) }
    dend_47 { pt3dadd( 114.497, 87.849, 0.47689, 0.28 ) }
    dend_47 { pt3dadd( 115.053, 88.3176, 0.596498, 0.14 ) }
    dend_47 { pt3dadd( 115.337, 88.5541, 0.640965, 0.1 ) }
    dend_47 { pt3dadd( 115.794, 88.9132, 0.694137, 0.14 ) }
    dend_47 { pt3dadd( 116.272, 89.2679, 0.740993, 0.1 ) }
    dend_47 { pt3dadd( 117.095, 89.8415, 0.822632, 0.1 ) }
    dend_47 { pt3dadd( 117.588, 90.1629, 0.873348, 0.1 ) }
    dend_47 { pt3dadd( 118.039, 90.4301, 0.926303, 0.1 ) }
    dend_47 { pt3dadd( 118.543, 90.7194, 1.00034, 0.1 ) }
    dend_47 { pt3dadd( 119.048, 91.0098, 1.10039, 0.1 ) }
    dend_47 { pt3dadd( 119.54, 91.2969, 1.23668, 0.14 ) }
    dend_47 { pt3dadd( 119.755, 91.4271, 1.31854, 0.28 ) }
    dend_47 { pt3dadd( 119.967, 91.5636, 1.39937, 0.42 ) }
    dend_47 { pt3dadd( 120.253, 91.7624, 1.50932, 0.56 ) }
    dend_47 { pt3dadd( 120.716, 92.1061, 1.63535, 0.42 ) }
    dend_47 { pt3dadd( 121.167, 92.4663, 1.71773, 0.28 ) }
    dend_47 { pt3dadd( 121.604, 92.8487, 1.76978, 0.14 ) }
    dend_47 { pt3dadd( 121.872, 93.1119, 1.7915, 0.1 ) }
    dend_47 { pt3dadd( 122.269, 93.5358, 1.81256, 0.1 ) }
    dend_47 { pt3dadd( 122.983, 94.3741, 1.83518, 0.1 ) }
    dend_47 { pt3dadd( 123.199, 94.665, 1.83881, 0.1 ) }
    dend_47 { pt3dadd( 123.63, 95.2729, 1.80117, 0.1 ) }
    dend_47 { pt3dadd( 123.966, 95.7392, 1.75536, 0.1 ) }
    dend_47 { pt3dadd( 124.195, 96.0297, 1.72674, 0.1 ) }
    dend_47 { pt3dadd( 124.578, 96.46, 1.65515, 0.1 ) }
    dend_47 { pt3dadd( 124.999, 96.8532, 1.53193, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_47 { pt3dadd( 125.723, 97.3962, 1.16583, 0.1 ) }
    dend_47 { pt3dadd( 126.114, 97.6278, 0.894815, 0.1 ) }
    dend_47 { pt3dadd( 126.508, 97.8298, 0.600806, 0.1 ) }
    dend_47 { pt3dadd( 127.274, 98.1776, 0.0334715, 0.1 ) }
    dend_47 { pt3dadd( 128.061, 98.5052, -0.521564, 0.14 ) }
    dend_47 { pt3dadd( 128.952, 98.8568, -1.09127, 0.1 ) }
    dend_47 { pt3dadd( 129.768, 99.202, -1.51233, 0.1 ) }
    dend_47 { pt3dadd( 130.281, 99.4244, -1.71703, 0.1 ) }
    dend_47 { pt3dadd( 130.756, 99.6297, -1.78061, 0.1 ) }
    dend_47 { pt3dadd( 131.276, 99.8407, -1.60713, 0.1 ) }
    dend_47 { pt3dadd( 131.689, 100.007, -1.31647, 0.1 ) }
    dend_47 { pt3dadd( 132.468, 100.314, -0.583707, 0.1 ) }
    dend_47 { pt3dadd( 132.822, 100.449, -0.213565, 0.1 ) }
    dend_47 { pt3dadd( 133.558, 100.701, 0.542315, 0.1 ) }
    dend_47 { pt3dadd( 133.74, 100.76, 0.724235, 0.1 ) }
    dend_47 { pt3dadd( 134.153, 100.883, 1.13497, 0.1 ) }
    dend_47 { pt3dadd( 134.535, 100.993, 1.48554, 0.1 ) }
    dend_47 { pt3dadd( 134.965, 101.1, 1.78219, 0.1 ) }
    dend_47 { pt3dadd( 135.409, 101.214, 2.04732, 0.1 ) }
    dend_47 { pt3dadd( 135.409, 101.214, 2.04732, 0.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.73618, -64.7269, 7.60805, 0.98 ) }
    dend_16 { pt3dadd( 4.95177, -65.1503, 7.56599, 0.98 ) }
    dend_16 { pt3dadd( 5.17838, -65.6344, 7.52225, 0.84 ) }
    dend_16 { pt3dadd( 5.37066, -66.0778, 7.48552, 0.98 ) }
    dend_16 { pt3dadd( 5.57141, -66.573, 7.44758, 1.12 ) }
    dend_16 { pt3dadd( 5.65788, -66.7986, 7.43138, 1.68 ) }
    dend_16 { pt3dadd( 5.82301, -67.2501, 7.4007, 1.54 ) }
    dend_16 { pt3dadd( 5.96637, -67.7089, 7.37488, 1.4 ) }
    dend_16 { pt3dadd( 6.08696, -68.1765, 7.35414, 1.26 ) }
    dend_16 { pt3dadd( 6.19361, -68.645, 7.33647, 1.12 ) }
    dend_16 { pt3dadd( 6.28606, -69.1186, 7.35831, 1.26 ) }
    dend_16 { pt3dadd( 6.37304, -69.5803, 7.40744, 1.12 ) }
    dend_16 { pt3dadd( 6.47686, -70.0972, 7.52687, 0.98 ) }
    dend_16 { pt3dadd( 6.573, -70.546, 7.67258, 0.84 ) }
    dend_16 { pt3dadd( 6.67223, -70.9861, 7.84943, 0.7 ) }
    dend_16 { pt3dadd( 6.88739, -71.8844, 8.26749, 0.84 ) }
    dend_16 { pt3dadd( 6.9961, -72.3067, 8.48051, 0.84 ) }
    dend_16 { pt3dadd( 7.22799, -73.1808, 8.87628, 0.7 ) }
    dend_16 { pt3dadd( 7.35028, -73.6199, 9.0333, 0.84 ) }
    dend_16 { pt3dadd( 7.35028, -73.6199, 9.0333, 0.98 ) }
    dend_16 { pt3dadd( 7.41603, -73.8441, 9.03397, 1.12 ) }
    dend_16 { pt3dadd( 7.56199, -74.3032, 8.98996, 0.98 ) }
    dend_16 { pt3dadd( 7.86651, -75.2354, 8.89795, 0.84 ) }
    dend_16 { pt3dadd( 8.01553, -75.6904, 8.84673, 0.7 ) }
    dend_16 { pt3dadd( 8.19973, -76.1985, 8.81851, 0.56 ) }
    dend_16 { pt3dadd( 8.36555, -76.6492, 8.78047, 0.7 ) }
    dend_16 { pt3dadd( 8.67251, -77.5573, 8.54337, 0.84 ) }
    dend_16 { pt3dadd( 8.81789, -77.9952, 8.40246, 0.98 ) }
    dend_16 { pt3dadd( 8.96932, -78.4334, 8.29329, 0.84 ) }
    dend_16 { pt3dadd( 9.14451, -78.9385, 8.20452, 0.98 ) }
    dend_16 { pt3dadd( 9.42534, -79.7797, 8.12389, 1.12 ) }
    dend_16 { pt3dadd( 9.98414, -81.4213, 8.07298, 0.98 ) }
    dend_16 { pt3dadd( 10.2592, -82.2664, 7.99029, 0.84 ) }
    dend_16 { pt3dadd( 10.593, -83.1843, 8.12106, 0.84 ) }
    dend_16 { pt3dadd( 10.9374, -83.9613, 8.63391, 0.98 ) }
    dend_16 { pt3dadd( 11.0973, -84.2808, 8.96472, 0.84 ) }
    dend_16 { pt3dadd( 11.2572, -84.5858, 9.31309, 0.98 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 57/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.73618, -64.7269, 7.60805, 1.82 ) }
    dend_15 { pt3dadd( 4.28907, -65.4873, 8.18053, 1.82 ) }
    dend_15 { pt3dadd( 4.07414, -65.9011, 8.48258, 1.68 ) }
    dend_15 { pt3dadd( 3.95926, -66.1564, 8.70177, 1.54 ) }
    dend_15 { pt3dadd( 3.7536, -66.671, 9.14142, 1.4 ) }
    dend_15 { pt3dadd( 3.6787, -66.8557, 9.29447, 1.26 ) }
    dend_15 { pt3dadd( 3.33304, -67.6248, 9.92243, 0.1 ) }
    dend_15 { pt3dadd( 3.13888, -68.0453, 10.24, 0.1 ) }
    dend_15 { pt3dadd( 2.7798, -68.7482, 10.79, 0.1 ) }
    dend_15 { pt3dadd( 2.55601, -69.1463, 11.1026, 0.14 ) }
    dend_15 { pt3dadd( 2.29485, -69.5345, 11.4039, 0.28 ) }
    dend_15 { pt3dadd( 2.00688, -69.8713, 11.6433, 0.42 ) }
    dend_15 { pt3dadd( 1.76588, -70.0998, 11.7729, 0.28 ) }
    dend_15 { pt3dadd( 1.38744, -70.3909, 11.9301, 0.14 ) }
    dend_15 { pt3dadd( 1.1879, -70.5252, 12.0082, 0.28 ) }
    dend_15 { pt3dadd( 0.829003, -70.7661, 12.2675, 0.56 ) }
    dend_15 { pt3dadd( 0.543298, -71.0166, 12.6021, 0.56 ) }
    dend_15 { pt3dadd( 0.543298, -71.0166, 12.6021, 0.56 ) }
    dend_15 { pt3dadd( 0.543298, -71.0166, 12.6021, 0.56 ) }
    dend_15 { pt3dadd( 0.262172, -71.5603, 13.4661, 0.56 ) }
    dend_15 { pt3dadd( 0.0293616, -72.0794, 14.2476, 0.42 ) }
    dend_15 { pt3dadd( -0.083994, -72.4082, 14.6833, 0.28 ) }
    dend_15 { pt3dadd( -0.285259, -73.1009, 15.4566, 0.42 ) }
    dend_15 { pt3dadd( -0.356892, -73.3543, 15.6835, 0.28 ) }
    dend_15 { pt3dadd( -0.410458, -73.5566, 15.8213, 0.42 ) }
    dend_15 { pt3dadd( -0.489689, -73.8763, 15.9602, 0.7 ) }
    dend_15 { pt3dadd( -0.597644, -74.3843, 16.1376, 0.56 ) }
    dend_15 { pt3dadd( -0.669447, -74.9103, 16.312, 0.42 ) }
    dend_15 { pt3dadd( -0.673464, -75.4237, 16.5056, 0.28 ) }
    dend_15 { pt3dadd( -0.650061, -75.6475, 16.6138, 0.14 ) }
    dend_15 { pt3dadd( -0.650061, -75.6475, 16.6138, 0.28 ) }
    dend_15 { pt3dadd( -0.43265, -76.4316, 17.049, 0.1 ) }
    dend_15 { pt3dadd( -0.278583, -76.8508, 17.2756, 0.14 ) }
    dend_15 { pt3dadd( 0.0834026, -77.7021, 17.7046, 0.1 ) }
    dend_15 { pt3dadd( 0.281835, -78.1252, 17.8847, 0.1 ) }
    dend_15 { pt3dadd( 0.48451, -78.5582, 18.0236, 0.1 ) }
    dend_15 { pt3dadd( 0.692863, -78.9951, 18.1088, 0.1 ) }
    dend_15 { pt3dadd( 0.931582, -79.5002, 18.1341, 0.1 ) }
    dend_15 { pt3dadd( 1.04343, -79.7237, 18.1279, 0.28 ) }
    dend_15 { pt3dadd( 1.29186, -80.2146, 18.0711, 0.14 ) }
    dend_15 { pt3dadd( 1.52222, -80.6432, 18.0182, 0.1 ) }
    dend_15 { pt3dadd( 1.79179, -81.1371, 17.9561, 0.1 ) }
    dend_15 { pt3dadd( 2.02779, -81.5625, 17.9016, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( 2.2927, -82.0523, 17.7988, 0.14 ) }
    dend_15 { pt3dadd( 2.50942, -82.4767, 17.6863, 0.1 ) }
    dend_15 { pt3dadd( 2.72636, -82.9643, 17.5398, 0.14 ) }
    dend_15 { pt3dadd( 2.90041, -83.4101, 17.395, 0.1 ) }
    dend_15 { pt3dadd( 3.05367, -83.9151, 17.2315, 0.1 ) }
    dend_15 { pt3dadd( 3.28703, -84.893, 16.9258, 0.1 ) }
    dend_15 { pt3dadd( 3.34483, -85.2242, 16.8313, 0.28 ) }
    dend_15 { pt3dadd( 3.41515, -85.7582, 16.6882, 0.14 ) }
    dend_15 { pt3dadd( 3.45265, -86.2384, 16.5714, 0.1 ) }
    dend_15 { pt3dadd( 3.479, -86.7754, 16.4656, 0.1 ) }
    dend_15 { pt3dadd( 3.49033, -87.267, 16.409, 0.1 ) }
    dend_15 { pt3dadd( 3.51807, -87.7635, 16.4091, 0.14 ) }
    dend_15 { pt3dadd( 3.5499, -88.0102, 16.4045, 0.28 ) }
    dend_15 { pt3dadd( 3.59644, -88.2545, 16.3961, 0.28 ) }
    dend_15 { pt3dadd( 3.70466, -88.7401, 16.3754, 0.42 ) }
    dend_15 { pt3dadd( 3.76573, -88.9789, 16.3632, 0.42 ) }
    dend_15 { pt3dadd( 3.88691, -89.4527, 16.339, 0.28 ) }
    dend_15 { pt3dadd( 3.99704, -89.9354, 16.3177, 0.14 ) }
    dend_15 { pt3dadd( 4.10081, -90.422, 16.2982, 0.1 ) }
    dend_15 { pt3dadd( 4.18963, -90.909, 16.2825, 0.14 ) }
    dend_15 { pt3dadd( 4.26744, -91.4003, 16.2697, 0.1 ) }
    dend_15 { pt3dadd( 4.31912, -91.8909, 16.2271, 0.1 ) }
    dend_15 { pt3dadd( 4.35399, -92.4324, 16.1531, 0.1 ) }
    dend_15 { pt3dadd( 4.37252, -92.9198, 16.0676, 0.1 ) }
    dend_15 { pt3dadd( 4.38642, -93.4665, 15.9557, 0.1 ) }
    dend_15 { pt3dadd( 4.39612, -93.9494, 15.8782, 0.1 ) }
    dend_15 { pt3dadd( 4.40715, -94.9878, 15.7656, 0.1 ) }
    dend_15 { pt3dadd( 4.40772, -95.4844, 15.7402, 0.1 ) }
    dend_15 { pt3dadd( 4.40437, -95.9791, 15.7448, 0.1 ) }
    dend_15 { pt3dadd( 4.38924, -96.4663, 15.7812, 0.14 ) }
    dend_15 { pt3dadd( 4.3556, -97.4076, 15.9088, 0.1 ) }
    dend_15 { pt3dadd( 4.33528, -97.9548, 16.0153, 0.1 ) }
    dend_15 { pt3dadd( 4.32425, -98.4754, 16.1872, 0.14 ) }
    dend_15 { pt3dadd( 4.31013, -99.0001, 16.3792, 0.1 ) }
    dend_15 { pt3dadd( 4.30436, -99.5004, 16.6059, 0.1 ) }
    dend_15 { pt3dadd( 4.30897, -99.7229, 16.7138, 0.14 ) }
    dend_15 { pt3dadd( 4.34086, -100.176, 16.9227, 0.28 ) }
    dend_15 { pt3dadd( 4.44888, -101.022, 17.3521, 0.1 ) }
    dend_15 { pt3dadd( 4.52282, -101.446, 17.5842, 0.1 ) }
    dend_15 { pt3dadd( 4.71718, -102.349, 18.083, 0.1 ) }
    dend_15 { pt3dadd( 4.82116, -102.782, 18.3055, 0.1 ) }
    dend_15 { pt3dadd( 4.92793, -103.223, 18.5085, 0.1 ) }
    dend_15 { pt3dadd( 4.98711, -103.444, 18.6084, 0.14 ) }
    dend_15 { pt3dadd( 4.98711, -103.444, 18.6084, 0.28 ) }
    dend_15 { pt3dadd( 5.13735, -103.868, 18.8084, 0.28 ) }
    dend_15 { pt3dadd( 5.3052, -104.287, 19.0201, 0.28 ) }
    dend_15 { pt3dadd( 5.3052, -104.287, 19.0201, 0.42 ) }
    dend_15 { pt3dadd( 5.66352, -105.001, 19.4879, 0.1 ) }
    dend_15 { pt3dadd( 5.85913, -105.378, 19.7523, 0.1 ) }
    dend_15 { pt3dadd( 6.26449, -106.132, 20.3154, 0.1 ) }
    dend_15 { pt3dadd( 6.46638, -106.484, 20.6098, 0.1 ) }
    dend_15 { pt3dadd( 6.61274, -106.727, 20.825, 0.1 ) }
    dend_15 { pt3dadd( 6.61274, -106.727, 20.825, 0.1 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 53/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.278237, -36.1627, 1.70908, 0.56 ) }
    dend_5 { pt3dadd( -0.609093, -36.4231, 1.35948, 0.56 ) }
    dend_5 { pt3dadd( -0.995807, -36.7045, 0.972593, 0.42 ) }
    dend_5 { pt3dadd( -1.3883, -36.9627, 0.585093, 0.28 ) }
    dend_5 { pt3dadd( -2.15443, -37.4019, -0.156009, 0.7 ) }
    dend_5 { pt3dadd( -2.86581, -37.6905, -0.879999, 0.84 ) }
    dend_5 { pt3dadd( -3.56689, -37.7689, -1.66732, 0.98 ) }
    dend_5 { pt3dadd( -4.17436, -37.5961, -2.60036, 1.12 ) }
    dend_5 { pt3dadd( -4.4795, -37.4267, -3.11176, 1.26 ) }
    dend_5 { pt3dadd( -4.75307, -37.237, -3.55151, 1.12 ) }
    dend_5 { pt3dadd( -5.30821, -36.8378, -4.30363, 0.98 ) }
    dend_5 { pt3dadd( -6.00542, -36.4651, -5.14453, 0.84 ) }
    dend_5 { pt3dadd( -6.6163, -36.2353, -5.87678, 0.7 ) }
    dend_5 { pt3dadd( -6.96868, -36.149, -6.29398, 0.56 ) }
    dend_5 { pt3dadd( -7.32857, -36.0894, -6.70606, 0.56 ) }
    dend_5 { pt3dadd( -7.68293, -36.0242, -7.11311, 0.56 ) }
    dend_5 { pt3dadd( -8.34691, -35.8354, -7.91105, 0.7 ) }
    dend_5 { pt3dadd( -8.49673, -35.7739, -8.1316, 0.84 ) }
    dend_5 { pt3dadd( -8.82608, -35.6062, -8.6269, 1.26 ) }
    dend_5 { pt3dadd( -9.40629, -35.2918, -9.53249, 1.12 ) }
    dend_5 { pt3dadd( -10.0029, -34.9514, -10.4655, 0.98 ) }
    dend_5 { pt3dadd( -10.533, -34.6427, -11.2749, 1.12 ) }
    dend_5 { pt3dadd( -11.0973, -34.3483, -12.0202, 0.98 ) }
    dend_5 { pt3dadd( -11.8015, -34.0994, -12.8548, 0.84 ) }
    dend_5 { pt3dadd( -12.3675, -34.3086, -12.9852, 0.7 ) }
    dend_5 { pt3dadd( -13.3744, -34.8703, -12.9426, 0.56 ) }
    dend_5 { pt3dadd( -13.7126, -35.0392, -12.9867, 0.42 ) }
    dend_5 { pt3dadd( -14.1918, -35.1186, -13.3692, 0.56 ) }
    dend_5 { pt3dadd( -14.3581, -35.113, -13.5902, 0.56 ) }
    dend_5 { pt3dadd( -14.9857, -35.0452, -14.5642, 0.56 ) }
    dend_5 { pt3dadd( -15.4692, -34.9377, -15.4965, 0.42 ) }
    dend_5 { pt3dadd( -15.884, -34.8059, -16.4596, 0.28 ) }
    dend_5 { pt3dadd( -16.2536, -34.6627, -17.4359, 0.14 ) }
    dend_5 { pt3dadd( -16.5857, -34.5282, -18.35, 0.1 ) }
    dend_5 { pt3dadd( -16.9525, -34.3951, -19.3322, 0.84 ) }
    dend_5 { pt3dadd( -17.662, -34.204, -21.1746, 0.7 ) }
    dend_5 { pt3dadd( -18.4218, -34.0595, -23.0013, 0.56 ) }
    dend_5 { pt3dadd( -18.8271, -34.0233, -23.8953, 0.7 ) }
    dend_5 { pt3dadd( -19.0648, -34.0204, -24.3813, 0.56 ) }
    dend_5 { pt3dadd( -19.3371, -34.0272, -24.8628, 0.56 ) }
    dend_5 { pt3dadd( -19.9759, -34.0622, -25.7894, 0.42 ) }
    dend_5 { pt3dadd( -20.3739, -34.0796, -26.1732, 0.28 ) }
    dend_5 { pt3dadd( -21.2755, -34.0181, -26.7158, 0.42 ) }
    dend_5 { pt3dadd( -21.5076, -33.9463, -26.8413, 0.56 ) }
    dend_5 { pt3dadd( -21.9885, -33.6838, -27.1236, 0.28 ) }
    dend_5 { pt3dadd( -22.4451, -33.3573, -27.3725, 0.14 ) }
    dend_5 { pt3dadd( -22.892, -33.0185, -27.6047, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( -23.3602, -32.7009, -27.8438, 0.42 ) }
    dend_5 { pt3dadd( -24.252, -32.2279, -28.3309, 0.56 ) }
    dend_5 { pt3dadd( -24.252, -32.2279, -28.3309, 0.7 ) }
    dend_5 { pt3dadd( -24.6923, -32.2091, -28.6653, 2.1 ) }
    dend_5 { pt3dadd( -25.5406, -32.3694, -29.3873, 1.96 ) }
    dend_5 { pt3dadd( -25.9097, -32.5295, -29.7513, 1.82 ) }
    dend_5 { pt3dadd( -26.5752, -32.8965, -30.4261, 1.68 ) }
    dend_5 { pt3dadd( -26.9754, -33.1605, -30.8235, 0.7 ) }
    dend_5 { pt3dadd( -27.6846, -33.6662, -31.5742, 0.56 ) }
    dend_5 { pt3dadd( -27.9028, -33.8493, -31.839, 0.56 ) }
    dend_5 { pt3dadd( -28.4789, -34.4714, -32.6127, 0.42 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 11/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.278237, -36.1627, 1.70908, 0.7 ) }
    dend_2 { pt3dadd( -0.285471, -36.5914, 1.70973, 0.7 ) }
    dend_2 { pt3dadd( -0.290703, -36.8917, 1.71015, 0.56 ) }
    dend_2 { pt3dadd( -0.289545, -37.3711, 1.71302, 0.42 ) }
    dend_2 { pt3dadd( -0.271479, -37.7959, 1.67583, 0.28 ) }
    dend_2 { pt3dadd( -0.247269, -38.2665, 1.64912, 0.14 ) }
    dend_2 { pt3dadd( -0.226156, -38.6923, 1.66682, 0.1 ) }
    dend_2 { pt3dadd( -0.195913, -39.167, 1.72869, 0.1 ) }
    dend_2 { pt3dadd( -0.163607, -39.5769, 1.81341, 0.1 ) }
    dend_2 { pt3dadd( -0.0961481, -40.3389, 2.01988, 0.14 ) }
    dend_2 { pt3dadd( -0.0250617, -41.0922, 2.25645, 0.42 ) }
    dend_2 { pt3dadd( 0.0707393, -41.9153, 2.53782, 0.28 ) }
    dend_2 { pt3dadd( 0.114326, -42.3184, 2.67463, 0.14 ) }
    dend_2 { pt3dadd( 0.165989, -42.7657, 2.81963, 0.1 ) }
    dend_2 { pt3dadd( 0.220896, -43.1798, 2.90949, 0.14 ) }
    dend_2 { pt3dadd( 0.290735, -43.6025, 2.93351, 0.1 ) }
    dend_2 { pt3dadd( 0.375018, -44.0131, 2.84949, 0.1 ) }
    dend_2 { pt3dadd( 0.467359, -44.4462, 2.68079, 0.1 ) }
    dend_2 { pt3dadd( 0.548278, -44.8276, 2.50188, 0.1 ) }
    dend_2 { pt3dadd( 0.701038, -45.5973, 2.106, 0.1 ) }
    dend_2 { pt3dadd( 0.815472, -46.2639, 1.7463, 0.14 ) }
    dend_2 { pt3dadd( 0.855042, -46.528, 1.59872, 0.56 ) }
    dend_2 { pt3dadd( 0.912301, -46.946, 1.37798, 0.42 ) }
    dend_2 { pt3dadd( 0.962219, -47.332, 1.19816, 0.28 ) }
    dend_2 { pt3dadd( 1.00388, -47.7872, 1.04967, 0.42 ) }
    dend_2 { pt3dadd( 1.01834, -48.0003, 1.03034, 0.56 ) }
    dend_2 { pt3dadd( 1.01834, -48.0003, 1.03034, 0.42 ) }
    dend_2 { pt3dadd( 1.09255, -48.4129, 1.04973, 0.84 ) }
    dend_2 { pt3dadd( 1.09255, -48.4129, 1.04973, 0.7 ) }
    dend_2 { pt3dadd( 1.16004, -48.6167, 1.03995, 0.28 ) }
    dend_2 { pt3dadd( 1.3185, -49.0118, 0.992897, 0.14 ) }
    dend_2 { pt3dadd( 1.48504, -49.4037, 0.92897, 0.1 ) }
    dend_2 { pt3dadd( 1.65442, -49.7909, 0.857456, 0.1 ) }
    dend_2 { pt3dadd( 1.82662, -50.1783, 0.780973, 0.1 ) }
    dend_2 { pt3dadd( 2.18419, -50.9911, 0.627526, 0.14 ) }
    dend_2 { pt3dadd( 2.27113, -51.1815, 0.576146, 0.28 ) }
    dend_2 { pt3dadd( 2.35832, -51.3661, 0.513015, 0.1 ) }
    dend_2 { pt3dadd( 2.52891, -51.7361, 0.395409, 0.1 ) }
    dend_2 { pt3dadd( 2.70257, -52.1171, 0.302365, 0.1 ) }
    dend_2 { pt3dadd( 2.87034, -52.511, 0.257396, 0.1 ) }
    dend_2 { pt3dadd( 3.17021, -53.244, 0.30051, 0.14 ) }
    dend_2 { pt3dadd( 3.17021, -53.244, 0.30051, 0.1 ) }
    dend_2 { pt3dadd( 3.4812, -53.9668, 0.408608, 0.28 ) }
    dend_2 { pt3dadd( 3.66028, -54.4001, 0.491873, 0.14 ) }
    dend_2 { pt3dadd( 3.81233, -54.793, 0.580198, 0.1 ) }
    dend_2 { pt3dadd( 3.96744, -55.2304, 0.686081, 0.1 ) }
    dend_2 { pt3dadd( 4.02696, -55.4315, 0.733892, 0.14 ) }
    dend_2 { pt3dadd( 4.09721, -55.7239, 0.776392, 0.28 ) }
    dend_2 { pt3dadd( 4.17878, -56.1351, 0.797476, 0.14 ) }
    dend_2 { pt3dadd( 4.23123, -56.5606, 0.811909, 0.1 ) }
    dend_2 { pt3dadd( 4.25991, -56.9862, 0.820846, 0.14 ) }
    dend_2 { pt3dadd( 4.26684, -57.4656, 0.825046, 0.1 ) }
    dend_2 { pt3dadd( 4.26665, -57.9389, 0.827568, 0.1 ) }
    dend_2 { pt3dadd( 4.26923, -58.3677, 0.830489, 0.1 ) }
    dend_2 { pt3dadd( 4.26103, -58.8475, 0.861329, 0.1 ) }
    dend_2 { pt3dadd( 4.25082, -59.3155, 0.922473, 0.1 ) }
    dend_2 { pt3dadd( 4.25097, -59.7871, 1.01833, 0.14 ) }
    dend_2 { pt3dadd( 4.26269, -59.9938, 1.07552, 0.28 ) }
    dend_2 { pt3dadd( 4.28606, -60.1967, 1.14239, 0.42 ) }
    dend_2 { pt3dadd( 4.40827, -60.9356, 1.40259, 0.56 ) }
    dend_2 { pt3dadd( 4.50979, -61.3405, 1.5056, 0.42 ) }
    dend_2 { pt3dadd( 4.63329, -61.7383, 1.56299, 0.28 ) }
    dend_2 { pt3dadd( 4.77907, -62.1421, 1.53885, 0.14 ) }
    dend_2 { pt3dadd( 4.92192, -62.5428, 1.49207, 0.28 ) }
    dend_2 { pt3dadd( 5.05688, -62.9493, 1.45458, 0.14 ) }
    dend_2 { pt3dadd( 5.33226, -63.7761, 1.37622, 0.1 ) }
    dend_2 { pt3dadd( 5.4698, -64.1833, 1.36883, 0.1 ) }
    dend_2 { pt3dadd( 5.74855, -65.0072, 1.4226, 0.1 ) }
    dend_2 { pt3dadd( 5.99784, -65.7517, 1.5349, 0.1 ) }
    dend_2 { pt3dadd( 6.26368, -66.5643, 1.72413, 0.1 ) }
    dend_2 { pt3dadd( 6.3964, -66.9552, 1.84675, 0.1 ) }
    dend_2 { pt3dadd( 6.52251, -67.3722, 2.04077, 0.14 ) }
    dend_2 { pt3dadd( 6.62845, -67.7431, 2.22926, 0.28 ) }
    dend_2 { pt3dadd( 6.72984, -68.1157, 2.42175, 0.14 ) }
    dend_2 { pt3dadd( 6.83991, -68.5014, 2.57286, 0.1 ) }
    dend_2 { pt3dadd( 6.9548, -68.9461, 2.71569, 0.14 ) }
    dend_2 { pt3dadd( 7.12062, -69.7126, 2.95854, 0.1 ) }
    dend_2 { pt3dadd( 7.19336, -70.1187, 3.07934, 0.1 ) }
    dend_2 { pt3dadd( 7.25482, -70.5277, 3.18762, 0.1 ) }
    dend_2 { pt3dadd( 7.31011, -70.9435, 3.27955, 0.1 ) }
    dend_2 { pt3dadd( 7.36919, -71.4071, 3.3573, 0.14 ) }
    dend_2 { pt3dadd( 7.41725, -71.8312, 3.40038, 0.1 ) }
    dend_2 { pt3dadd( 7.47418, -72.254, 3.41583, 0.1 ) }
    dend_2 { pt3dadd( 7.54116, -72.7287, 3.4009, 0.1 ) }
    dend_2 { pt3dadd( 7.60465, -73.1419, 3.36405, 0.14 ) }
    dend_2 { pt3dadd( 7.67829, -73.5588, 3.30646, 0.28 ) }
    dend_2 { pt3dadd( 7.7768, -74.0218, 3.22583, 0.28 ) }
    dend_2 { pt3dadd( 7.87198, -74.4307, 3.14469, 0.14 ) }
    dend_2 { pt3dadd( 8.06795, -75.1834, 2.9906, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_2 { pt3dadd( 8.12543, -75.3794, 2.95298, 0.56 ) }
    dend_2 { pt3dadd( 8.263, -75.7732, 2.85566, 0.42 ) }
    dend_2 { pt3dadd( 8.41692, -76.1619, 2.75183, 0.28 ) }
    dend_2 { pt3dadd( 8.58237, -76.5453, 2.65435, 0.14 ) }
    dend_2 { pt3dadd( 8.7498, -76.9334, 2.57088, 0.1 ) }
    dend_2 { pt3dadd( 8.91394, -77.3246, 2.51121, 0.1 ) }
    dend_2 { pt3dadd( 9.26262, -78.1442, 2.37717, 0.14 ) }
    dend_2 { pt3dadd( 9.43105, -78.5348, 2.30946, 0.28 ) }
    dend_2 { pt3dadd( 9.59466, -78.9175, 2.24539, 0.14 ) }
    dend_2 { pt3dadd( 9.77089, -79.3014, 2.15994, 0.28 ) }
    dend_2 { pt3dadd( 9.94966, -79.6801, 2.06659, 0.42 ) }
    dend_2 { pt3dadd( 9.94966, -79.6801, 2.06659, 0.56 ) }
    dend_2 { pt3dadd( 10.0439, -79.8611, 1.99603, 0.56 ) }
    dend_2 { pt3dadd( 10.2342, -80.2076, 1.82558, 0.42 ) }
    dend_2 { pt3dadd( 10.6331, -80.9257, 1.43828, 0.28 ) }
    dend_2 { pt3dadd( 10.8189, -81.2682, 1.2549, 0.14 ) }
    dend_2 { pt3dadd( 11.1649, -81.9185, 0.87827, 0.1 ) }
    dend_2 { pt3dadd( 11.2946, -82.1492, 0.723643, 0.56 ) }
    dend_2 { pt3dadd( 11.4742, -82.4719, 0.515693, 0.42 ) }
    dend_2 { pt3dadd( 11.6543, -82.8112, 0.320685, 0.56 ) }
    dend_2 { pt3dadd( 11.8261, -83.1753, 0.164434, 0.7 ) }
    dend_2 { pt3dadd( 12.1951, -83.9095, -0.148671, 0.56 ) }
    dend_2 { pt3dadd( 12.5703, -84.5769, -0.460412, 0.42 ) }
    dend_2 { pt3dadd( 12.9632, -85.1867, -0.795825, 0.42 ) }
    dend_2 { pt3dadd( 13.1716, -85.4971, -1.01214, 0.56 ) }
    dend_2 { pt3dadd( 13.3745, -85.801, -1.24279, 0.56 ) }
    dend_2 { pt3dadd( 13.774, -86.4568, -1.73223, 0.42 ) }
    dend_2 { pt3dadd( 14.1422, -87.1467, -2.19069, 0.28 ) }
    dend_2 { pt3dadd( 14.2225, -87.3177, -2.29633, 0.98 ) }
    dend_2 { pt3dadd( 14.5421, -88.0374, -2.74188, 0.84 ) }
    dend_2 { pt3dadd( 14.6841, -88.3976, -2.93366, 0.7 ) }
    dend_2 { pt3dadd( 14.8259, -88.8276, -3.10273, 0.56 ) }
    dend_2 { pt3dadd( 14.9297, -89.2363, -3.18622, 0.42 ) }
    dend_2 { pt3dadd( 15.0078, -89.6486, -3.19081, 0.28 ) }
    dend_2 { pt3dadd( 15.0806, -90.0691, -3.14539, 0.14 ) }
    dend_2 { pt3dadd( 15.1487, -90.4805, -3.05139, 0.28 ) }
    dend_2 { pt3dadd( 15.2164, -90.8909, -2.94362, 0.14 ) }
    dend_2 { pt3dadd( 15.2872, -91.2965, -2.82773, 0.1 ) }
    dend_2 { pt3dadd( 15.4328, -92.1471, -2.57975, 0.1 ) }
    dend_2 { pt3dadd( 15.5111, -92.5509, -2.4621, 0.1 ) }
    dend_2 { pt3dadd( 15.6073, -92.9519, -2.34811, 0.1 ) }
    dend_2 { pt3dadd( 15.7215, -93.3526, -2.24105, 0.1 ) }
    dend_2 { pt3dadd( 15.8466, -93.7513, -2.14868, 0.1 ) }
    dend_2 { pt3dadd( 15.9844, -94.1452, -2.07994, 0.1 ) }
    dend_2 { pt3dadd( 16.1592, -94.5918, -2.03711, 0.1 ) }
    dend_2 { pt3dadd( 16.3285, -95.0344, -1.99556, 0.1 ) }
    dend_2 { pt3dadd( 16.4025, -95.2355, -1.97737, 0.1 ) }
    dend_2 { pt3dadd( 16.5059, -95.5132, -1.95196, 0.84 ) }
    dend_2 { pt3dadd( 16.6529, -95.9135, -1.91581, 0.7 ) }
    dend_2 { pt3dadd( 16.8046, -96.3143, -1.87857, 0.56 ) }
    dend_2 { pt3dadd( 16.9552, -96.7133, -1.84161, 0.42 ) }
    dend_2 { pt3dadd( 17.1079, -97.1058, -1.80416, 0.28 ) }
    dend_2 { pt3dadd( 17.2904, -97.5514, -1.79651, 0.14 ) }
    dend_2 { pt3dadd( 17.4526, -97.9363, -1.84935, 0.1 ) }
    dend_2 { pt3dadd( 17.6239, -98.3633, -2.01163, 0.14 ) }
    dend_2 { pt3dadd( 17.6843, -98.537, -2.11033, 0.7 ) }
    dend_2 { pt3dadd( 17.7801, -98.8686, -2.36873, 0.56 ) }
    dend_2 { pt3dadd( 17.9446, -99.5022, -3.00417, 0.42 ) }
    dend_2 { pt3dadd( 18.0709, -100.103, -3.67388, 0.28 ) }
    dend_2 { pt3dadd( 18.1656, -100.627, -4.31363, 0.14 ) }
    dend_2 { pt3dadd( 18.2094, -100.936, -4.68915, 0.1 ) }
    dend_2 { pt3dadd( 18.2865, -101.529, -5.37339, 0.1 ) }
    dend_2 { pt3dadd( 18.3495, -102.088, -5.94405, 0.1 ) }
    dend_2 { pt3dadd( 18.3898, -102.477, -6.23193, 0.14 ) }
    dend_2 { pt3dadd( 18.461, -103.308, -6.56623, 0.28 ) }
    dend_2 { pt3dadd( 18.5388, -104.081, -6.71728, 0.1 ) }
    dend_2 { pt3dadd( 18.5995, -104.5, -6.79043, 0.1 ) }
    dend_2 { pt3dadd( 18.7599, -105.342, -6.9636, 0.1 ) }
    dend_2 { pt3dadd( 18.8545, -105.745, -7.07926, 0.1 ) }
    dend_2 { pt3dadd( 18.9734, -106.165, -7.26763, 0.14 ) }
    dend_2 { pt3dadd( 19.2041, -106.905, -7.6852, 0.28 ) }
    dend_2 { pt3dadd( 19.437, -107.608, -8.16219, 0.42 ) }
    dend_2 { pt3dadd( 19.6365, -108.232, -8.61876, 0.56 ) }
    dend_2 { pt3dadd( 19.6886, -108.399, -8.7434, 0.7 ) }
    dend_2 { pt3dadd( 19.7594, -108.644, -8.8989, 0.28 ) }
    dend_2 { pt3dadd( 19.8645, -109.015, -9.09321, 0.14 ) }
    dend_2 { pt3dadd( 19.9508, -109.411, -9.23253, 0.1 ) }
    dend_2 { pt3dadd( 20.0246, -109.865, -9.34366, 0.1 ) }
    dend_2 { pt3dadd( 20.0752, -110.28, -9.42745, 0.1 ) }
    dend_2 { pt3dadd( 20.1141, -110.698, -9.51823, 0.1 ) }
    dend_2 { pt3dadd( 20.1794, -111.534, -9.76815, 0.14 ) }
    dend_2 { pt3dadd( 20.196, -111.82, -9.86972, 0.1 ) }
    dend_2 { pt3dadd( 20.2181, -112.262, -10.0416, 0.1 ) }
    dend_2 { pt3dadd( 20.2353, -112.71, -10.2181, 0.1 ) }
    dend_2 { pt3dadd( 20.2462, -113.154, -10.3839, 0.1 ) }
    dend_2 { pt3dadd( 20.2672, -113.994, -10.714, 0.1 ) }
    dend_2 { pt3dadd( 20.2846, -114.396, -10.8608, 0.14 ) }
    dend_2 { pt3dadd( 20.3031, -114.59, -10.9339, 0.1 ) }
    dend_2 { pt3dadd( 20.3671, -115.038, -11.1006, 0.1 ) }
    dend_2 { pt3dadd( 20.4378, -115.43, -11.2635, 0.1 ) }
    dend_2 { pt3dadd( 20.6074, -116.247, -11.6024, 0.1 ) }
    dend_2 { pt3dadd( 20.6968, -116.629, -11.7804, 0.14 ) }
    dend_2 { pt3dadd( 20.7911, -116.996, -11.9838, 0.28 ) }
    dend_2 { pt3dadd( 20.9005, -117.355, -12.1987, 0.28 ) }
    dend_2 { pt3dadd( 21.165, -118.09, -12.6525, 0.14 ) }
    dend_2 { pt3dadd( 21.3047, -118.432, -12.8793, 0.1 ) }
    dend_2 { pt3dadd( 21.5786, -119.037, -13.2652, 0.14 ) }
    dend_2 { pt3dadd( 21.6539, -119.206, -13.3738, 0.56 ) }
    dend_2 { pt3dadd( 21.8226, -119.596, -13.6054, 0.56 ) }
    dend_2 { pt3dadd( 21.9637, -119.96, -13.7845, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 22.215, -120.756, -14.0561, 0.56 ) }
    dend_2 { pt3dadd( 22.3164, -121.157, -14.1644, 0.42 ) }
    dend_2 { pt3dadd( 22.3981, -121.615, -14.2467, 0.28 ) }
    dend_2 { pt3dadd( 22.4517, -122.034, -14.3109, 0.14 ) }
    dend_2 { pt3dadd( 22.488, -122.509, -14.3683, 0.1 ) }
    dend_2 { pt3dadd( 22.5141, -122.981, -14.3982, 0.1 ) }
    dend_2 { pt3dadd( 22.5283, -123.195, -14.3937, 0.1 ) }
    dend_2 { pt3dadd( 22.5825, -123.672, -14.3786, 0.1 ) }
    dend_2 { pt3dadd( 22.667, -124.093, -14.3568, 0.14 ) }
    dend_2 { pt3dadd( 22.723, -124.297, -14.3427, 0.56 ) }
    dend_2 { pt3dadd( 22.8623, -124.695, -14.3084, 0.42 ) }
    dend_2 { pt3dadd( 23.0458, -125.134, -14.3025, 0.28 ) }
    dend_2 { pt3dadd( 23.2154, -125.529, -14.3219, 0.14 ) }
    dend_2 { pt3dadd( 23.4068, -125.963, -14.3652, 0.1 ) }
    dend_2 { pt3dadd( 23.5634, -126.358, -14.4218, 0.1 ) }
    dend_2 { pt3dadd( 23.7045, -126.758, -14.4894, 0.1 ) }
    dend_2 { pt3dadd( 23.9638, -127.567, -14.7037, 0.1 ) }
    dend_2 { pt3dadd( 24.0437, -127.846, -14.7951, 0.84 ) }
    dend_2 { pt3dadd( 24.1485, -128.233, -14.9324, 0.7 ) }
    dend_2 { pt3dadd( 24.2612, -128.675, -15.0892, 0.56 ) }
    dend_2 { pt3dadd( 24.3648, -129.073, -15.2177, 0.42 ) }
    dend_2 { pt3dadd( 24.5999, -129.889, -15.4303, 0.28 ) }
    dend_2 { pt3dadd( 24.7244, -130.285, -15.4971, 0.14 ) }
    dend_2 { pt3dadd( 24.867, -130.687, -15.5519, 0.1 ) }
    dend_2 { pt3dadd( 25.0238, -131.084, -15.5895, 0.1 ) }
    dend_2 { pt3dadd( 25.195, -131.478, -15.606, 0.1 ) }
    dend_2 { pt3dadd( 25.3796, -131.917, -15.5984, 0.1 ) }
    dend_2 { pt3dadd( 25.5377, -132.315, -15.5597, 0.1 ) }
    dend_2 { pt3dadd( 25.6827, -132.716, -15.524, 0.1 ) }
    dend_2 { pt3dadd( 25.828, -133.167, -15.488, 0.14 ) }
    dend_2 { pt3dadd( 25.8898, -133.373, -15.491, 0.28 ) }
    dend_2 { pt3dadd( 25.9683, -133.658, -15.518, 0.28 ) }
    dend_2 { pt3dadd( 26.0699, -134.069, -15.583, 0.14 ) }
    dend_2 { pt3dadd( 26.1825, -134.527, -15.6736, 0.1 ) }
    dend_2 { pt3dadd( 26.2828, -134.933, -15.7611, 0.1 ) }
    dend_2 { pt3dadd( 26.4856, -135.761, -15.9498, 0.14 ) }
    dend_2 { pt3dadd( 26.536, -135.962, -15.9956, 0.28 ) }
    dend_2 { pt3dadd( 26.6439, -136.369, -16.0814, 0.1 ) }
    dend_2 { pt3dadd( 26.7502, -136.777, -16.1546, 0.1 ) }
    dend_2 { pt3dadd( 26.8654, -137.182, -16.2425, 0.14 ) }
    dend_2 { pt3dadd( 26.8654, -137.182, -16.2425, 0.28 ) }
    dend_2 { pt3dadd( 26.9275, -137.471, -16.2983, 0.28 ) }
    dend_2 { pt3dadd( 27.0147, -137.881, -16.3918, 0.28 ) }
    dend_2 { pt3dadd( 27.1091, -138.277, -16.5275, 0.42 ) }
    dend_2 { pt3dadd( 27.3178, -139.067, -16.8463, 0.42 ) }
    dend_2 { pt3dadd( 27.4056, -139.328, -16.9782, 0.1 ) }
    dend_2 { pt3dadd( 27.5413, -139.679, -17.1716, 0.1 ) }
    dend_2 { pt3dadd( 27.6932, -140.028, -17.3724, 0.1 ) }
    dend_2 { pt3dadd( 28.0314, -140.735, -17.7752, 0.1 ) }
    dend_2 { pt3dadd( 28.2084, -141.084, -17.9552, 0.1 ) }
    dend_2 { pt3dadd( 28.6177, -141.833, -18.2621, 0.1 ) }
    dend_2 { pt3dadd( 28.7208, -142.01, -18.3245, 0.1 ) }
    dend_2 { pt3dadd( 28.941, -142.36, -18.4489, 0.1 ) }
    dend_2 { pt3dadd( 29.1907, -142.75, -18.5697, 0.14 ) }
    dend_2 { pt3dadd( 29.4155, -143.11, -18.6485, 0.1 ) }
    dend_2 { pt3dadd( 29.66, -143.507, -18.7566, 0.1 ) }
    dend_2 { pt3dadd( 29.8717, -143.866, -18.8591, 0.1 ) }
    dend_2 { pt3dadd( 30.3247, -144.609, -19.1146, 0.1 ) }
    dend_2 { pt3dadd( 30.5446, -144.955, -19.248, 0.1 ) }
    dend_2 { pt3dadd( 30.7665, -145.292, -19.3826, 0.1 ) }
    dend_2 { pt3dadd( 31.2527, -145.977, -19.648, 0.14 ) }
    dend_2 { pt3dadd( 31.3785, -146.145, -19.7035, 0.28 ) }
    dend_2 { pt3dadd( 31.5626, -146.369, -19.7778, 0.1 ) }
    dend_2 { pt3dadd( 31.8693, -146.731, -19.876, 0.1 ) }
    dend_2 { pt3dadd( 32.1911, -147.082, -19.9721, 0.1 ) }
    dend_2 { pt3dadd( 32.401, -147.301, -20.0215, 0.1 ) }
    dend_2 { pt3dadd( 32.7337, -147.644, -20.0662, 0.1 ) }
    dend_2 { pt3dadd( 33.292, -148.213, -20.1403, 0.1 ) }
    dend_2 { pt3dadd( 33.4393, -148.371, -20.1596, 0.1 ) }
    dend_2 { pt3dadd( 33.7526, -148.732, -20.1959, 0.1 ) }
    dend_2 { pt3dadd( 34.0478, -149.108, -20.2179, 0.1 ) }
    dend_2 { pt3dadd( 34.323, -149.505, -20.2193, 0.1 ) }
    dend_2 { pt3dadd( 34.4763, -149.759, -20.1815, 0.14 ) }
    dend_2 { pt3dadd( 34.6695, -150.129, -20.0742, 0.56 ) }
    dend_2 { pt3dadd( 34.8377, -150.505, -19.952, 0.42 ) }
    dend_2 { pt3dadd( 34.9691, -150.893, -19.8212, 0.28 ) }
    dend_2 { pt3dadd( 35.0698, -151.288, -19.6896, 0.14 ) }
    dend_2 { pt3dadd( 35.2339, -152.04, -19.5072, 0.1 ) }
    dend_2 { pt3dadd( 35.3274, -152.456, -19.4751, 0.1 ) }
    dend_2 { pt3dadd( 35.423, -152.873, -19.5075, 0.1 ) }
    dend_2 { pt3dadd( 35.5229, -153.333, -19.6093, 0.1 ) }
    dend_2 { pt3dadd( 35.6065, -153.727, -19.7396, 0.1 ) }
    dend_2 { pt3dadd( 35.762, -154.526, -20.0653, 0.1 ) }
    dend_2 { pt3dadd( 35.9107, -155.312, -20.4238, 0.1 ) }
    dend_2 { pt3dadd( 35.9571, -155.581, -20.5596, 0.56 ) }
    dend_2 { pt3dadd( 36.0261, -155.999, -20.7732, 0.42 ) }
    dend_2 { pt3dadd( 36.0899, -156.382, -20.9551, 0.28 ) }
    dend_2 { pt3dadd( 36.1577, -156.825, -21.1309, 0.14 ) }
    dend_2 { pt3dadd( 36.2038, -157.241, -21.2185, 0.1 ) }
    dend_2 { pt3dadd( 36.2937, -158.13, -21.2913, 0.14 ) }
    dend_2 { pt3dadd( 36.3383, -158.554, -21.302, 0.28 ) }
    dend_2 { pt3dadd( 36.3828, -158.978, -21.2895, 0.14 ) }
    dend_2 { pt3dadd( 36.4174, -159.404, -21.2557, 0.1 ) }
    dend_2 { pt3dadd( 36.4783, -160.297, -21.202, 0.1 ) }
    dend_2 { pt3dadd( 36.4907, -160.725, -21.1803, 0.1 ) }
    dend_2 { pt3dadd( 36.4933, -161.205, -21.1523, 0.1 ) }
    dend_2 { pt3dadd( 36.4844, -161.627, -21.162, 0.1 ) }
    dend_2 { pt3dadd( 36.4633, -162.105, -21.2122, 0.1 ) }
    dend_2 { pt3dadd( 36.41, -162.909, -21.3632, 0.14 ) }
    dend_2 { pt3dadd( 36.3884, -163.196, -21.4389, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 36.333, -163.607, -21.5424, 0.14 ) }
    dend_2 { pt3dadd( 36.2576, -164.07, -21.6464, 0.28 ) }
    dend_2 { pt3dadd( 36.1684, -164.528, -21.7288, 0.42 ) }
    dend_2 { pt3dadd( 36.1127, -164.824, -21.7621, 0.28 ) }
    dend_2 { pt3dadd( 36.0274, -165.289, -21.7793, 0.14 ) }
    dend_2 { pt3dadd( 35.9331, -165.892, -21.7978, 0.1 ) }
    dend_2 { pt3dadd( 35.905, -166.097, -21.8032, 0.1 ) }
    dend_2 { pt3dadd( 35.8608, -166.574, -21.8108, 0.1 ) }
    dend_2 { pt3dadd( 35.8472, -167.001, -21.8117, 0.1 ) }
    dend_2 { pt3dadd( 35.8653, -167.472, -21.8049, 0.1 ) }
    dend_2 { pt3dadd( 35.9123, -167.896, -21.7918, 0.1 ) }
    dend_2 { pt3dadd( 35.9454, -168.108, -21.783, 0.1 ) }
    dend_2 { pt3dadd( 35.9808, -168.317, -21.7736, 0.1 ) }
    dend_2 { pt3dadd( 36.0621, -168.738, -21.7526, 0.1 ) }
    dend_2 { pt3dadd( 36.1453, -169.157, -21.7677, 0.14 ) }
    dend_2 { pt3dadd( 36.2343, -169.575, -21.8092, 0.28 ) }
    dend_2 { pt3dadd( 36.3317, -170.034, -21.8751, 0.14 ) }
    dend_2 { pt3dadd( 36.421, -170.449, -21.9441, 0.1 ) }
    dend_2 { pt3dadd( 36.5107, -170.859, -22.0217, 0.1 ) }
    dend_2 { pt3dadd( 36.6777, -171.73, -22.1563, 0.1 ) }
    dend_2 { pt3dadd( 36.7494, -172.149, -22.1996, 0.1 ) }
    dend_2 { pt3dadd( 36.8171, -172.573, -22.2137, 0.1 ) }
    dend_2 { pt3dadd( 36.8753, -172.995, -22.1923, 0.1 ) }
    dend_2 { pt3dadd( 36.8753, -172.995, -22.1923, 0.1 ) }
    dend_2 { pt3dadd( 36.9249, -173.793, -22.0221, 0.1 ) }
    dend_2 { pt3dadd( 36.9433, -174.205, -21.9065, 0.1 ) }
    dend_2 { pt3dadd( 36.9615, -174.621, -21.8035, 0.1 ) }
    dend_2 { pt3dadd( 36.9892, -175.098, -21.7472, 0.1 ) }
    dend_2 { pt3dadd( 37.026, -175.518, -21.745, 0.14 ) }
    dend_2 { pt3dadd( 37.0855, -175.994, -21.7845, 0.28 ) }
    dend_2 { pt3dadd( 37.1561, -176.411, -21.8547, 0.42 ) }
    dend_2 { pt3dadd( 37.225, -176.826, -21.9325, 0.28 ) }
    dend_2 { pt3dadd( 37.3765, -177.694, -22.1, 0.14 ) }
    dend_2 { pt3dadd( 37.4567, -178.107, -22.1758, 0.1 ) }
    dend_2 { pt3dadd( 37.5403, -178.521, -22.2432, 0.1 ) }
    dend_2 { pt3dadd( 37.6311, -178.937, -22.2962, 0.1 ) }
    dend_2 { pt3dadd( 37.723, -179.4, -22.3371, 0.1 ) }
    dend_2 { pt3dadd( 37.8011, -179.822, -22.3498, 0.14 ) }
    dend_2 { pt3dadd( 37.8767, -180.242, -22.33, 0.1 ) }
    dend_2 { pt3dadd( 37.9439, -180.665, -22.3122, 0.14 ) }
    dend_2 { pt3dadd( 38.0066, -181.087, -22.2954, 0.28 ) }
    dend_2 { pt3dadd( 38.0506, -181.38, -22.2837, 0.1 ) }
    dend_2 { pt3dadd( 38.1196, -181.801, -22.2654, 0.1 ) }
    dend_2 { pt3dadd( 38.1892, -182.224, -22.2471, 0.1 ) }
    dend_2 { pt3dadd( 38.27, -182.69, -22.2259, 0.1 ) }
    dend_2 { pt3dadd( 38.3498, -183.111, -22.2051, 0.1 ) }
    dend_2 { pt3dadd( 38.4304, -183.53, -22.1842, 0.1 ) }
    dend_2 { pt3dadd( 38.5169, -183.95, -22.162, 0.1 ) }
    dend_2 { pt3dadd( 38.5948, -184.369, -22.1417, 0.1 ) }
    dend_2 { pt3dadd( 38.6691, -184.79, -22.1222, 0.1 ) }
    dend_2 { pt3dadd( 38.7497, -185.204, -22.1321, 0.1 ) }
    dend_2 { pt3dadd( 38.8427, -185.674, -22.1716, 0.1 ) }
    dend_2 { pt3dadd( 38.9283, -186.091, -22.2256, 0.1 ) }
    dend_2 { pt3dadd( 39.0273, -186.549, -22.2988, 0.1 ) }
    dend_2 { pt3dadd( 39.1229, -186.962, -22.3718, 0.1 ) }
    dend_2 { pt3dadd( 39.3304, -187.796, -22.5318, 0.1 ) }
    dend_2 { pt3dadd( 39.4412, -188.204, -22.6126, 0.1 ) }
    dend_2 { pt3dadd( 39.5643, -188.606, -22.6877, 0.1 ) }
    dend_2 { pt3dadd( 39.6912, -189.005, -22.75, 0.1 ) }
    dend_2 { pt3dadd( 39.8319, -189.402, -22.8255, 0.1 ) }
    dend_2 { pt3dadd( 39.8319, -189.402, -22.8255, 0.1 ) }
    dend_2 { pt3dadd( 39.9014, -189.603, -22.8567, 0.1 ) }
    dend_2 { pt3dadd( 40.0418, -190.0, -22.933, 0.1 ) }
    dend_2 { pt3dadd( 40.1786, -190.391, -23.0516, 0.1 ) }
    dend_2 { pt3dadd( 40.4481, -191.176, -23.3355, 0.1 ) }
    dend_2 { pt3dadd( 40.5769, -191.559, -23.4805, 0.1 ) }
    dend_2 { pt3dadd( 40.7017, -191.939, -23.6195, 0.1 ) }
    dend_2 { pt3dadd( 40.8257, -192.327, -23.7533, 0.1 ) }
    dend_2 { pt3dadd( 41.0819, -193.154, -24.0085, 0.1 ) }
    dend_2 { pt3dadd( 41.2002, -193.554, -24.1061, 0.1 ) }
    dend_2 { pt3dadd( 41.3132, -193.957, -24.1663, 0.1 ) }
    dend_2 { pt3dadd( 41.4287, -194.366, -24.2137, 0.1 ) }
    dend_2 { pt3dadd( 41.5462, -194.778, -24.2415, 0.1 ) }
    dend_2 { pt3dadd( 41.6648, -195.188, -24.2432, 0.1 ) }
    dend_2 { pt3dadd( 41.7849, -195.598, -24.2132, 0.1 ) }
    dend_2 { pt3dadd( 41.9056, -196.009, -24.1831, 0.1 ) }
    dend_2 { pt3dadd( 42.0233, -196.411, -24.1537, 0.1 ) }
    dend_2 { pt3dadd( 42.1439, -196.823, -24.1236, 0.1 ) }
    dend_2 { pt3dadd( 42.2638, -197.232, -24.0936, 0.1 ) }
    dend_2 { pt3dadd( 42.3844, -197.643, -24.0635, 0.1 ) }
    dend_2 { pt3dadd( 42.5046, -198.052, -24.0335, 0.14 ) }
    dend_2 { pt3dadd( 42.6312, -198.461, -24.0338, 0.1 ) }
    dend_2 { pt3dadd( 42.7704, -198.859, -24.0593, 0.14 ) }
    dend_2 { pt3dadd( 42.9227, -199.256, -24.1062, 0.1 ) }
    dend_2 { pt3dadd( 43.0035, -199.453, -24.137, 0.1 ) }
    dend_2 { pt3dadd( 43.0869, -199.649, -24.1718, 0.1 ) }
    dend_2 { pt3dadd( 43.4313, -200.442, -24.3158, 0.1 ) }
    dend_2 { pt3dadd( 43.6296, -200.875, -24.3868, 0.1 ) }
    dend_2 { pt3dadd( 43.8103, -201.26, -24.4403, 0.14 ) }
    dend_2 { pt3dadd( 43.9911, -201.647, -24.4784, 0.1 ) }
    dend_2 { pt3dadd( 44.165, -202.033, -24.4959, 0.1 ) }
    dend_2 { pt3dadd( 44.333, -202.426, -24.4888, 0.1 ) }
    dend_2 { pt3dadd( 44.5152, -202.872, -24.4818, 0.14 ) }
    dend_2 { pt3dadd( 44.5939, -203.069, -24.493, 0.56 ) }
    dend_2 { pt3dadd( 44.7542, -203.466, -24.5363, 0.42 ) }
    dend_2 { pt3dadd( 44.9077, -203.856, -24.6276, 0.28 ) }
    dend_2 { pt3dadd( 45.0535, -204.242, -24.7511, 0.28 ) }
    dend_2 { pt3dadd( 45.3321, -205.023, -25.039, 0.42 ) }
    dend_2 { pt3dadd( 45.4479, -205.41, -25.165, 0.42 ) }
    dend_2 { pt3dadd( 45.5544, -205.81, -25.2715, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 45.7567, -206.672, -25.4426, 0.14 ) }
    dend_2 { pt3dadd( 45.8348, -207.089, -25.4909, 0.1 ) }
    dend_2 { pt3dadd( 45.897, -207.512, -25.4981, 0.1 ) }
    dend_2 { pt3dadd( 45.9829, -208.4, -25.4188, 0.14 ) }
    dend_2 { pt3dadd( 46.008, -208.823, -25.3682, 0.28 ) }
    dend_2 { pt3dadd( 46.0247, -209.247, -25.3031, 0.14 ) }
    dend_2 { pt3dadd( 46.0415, -209.712, -25.2142, 0.28 ) }
    dend_2 { pt3dadd( 46.0535, -210.136, -25.1536, 0.14 ) }
    dend_2 { pt3dadd( 46.0726, -210.615, -25.1122, 0.1 ) }
    dend_2 { pt3dadd( 46.1056, -211.086, -25.1021, 0.1 ) }
    dend_2 { pt3dadd( 46.1395, -211.511, -25.0919, 0.1 ) }
    dend_2 { pt3dadd( 46.1835, -211.938, -25.0794, 0.1 ) }
    dend_2 { pt3dadd( 46.2409, -212.407, -25.0636, 0.1 ) }
    dend_2 { pt3dadd( 46.2974, -212.832, -25.0482, 0.1 ) }
    dend_2 { pt3dadd( 46.357, -213.255, -25.0322, 0.1 ) }
    dend_2 { pt3dadd( 46.4173, -213.677, -25.016, 0.1 ) }
    dend_2 { pt3dadd( 46.4752, -214.102, -25.0003, 0.1 ) }
    dend_2 { pt3dadd( 46.5317, -214.572, -24.9847, 0.1 ) }
    dend_2 { pt3dadd( 46.5573, -214.784, -24.9776, 0.1 ) }
    dend_2 { pt3dadd( 46.6104, -215.261, -24.9627, 0.1 ) }
    dend_2 { pt3dadd( 46.659, -215.685, -24.9492, 0.1 ) }
    dend_2 { pt3dadd( 46.7046, -216.104, -24.9364, 0.1 ) }
    dend_2 { pt3dadd( 46.7608, -216.581, -24.9208, 0.1 ) }
    dend_2 { pt3dadd( 46.8208, -217.005, -24.9046, 0.1 ) }
    dend_2 { pt3dadd( 46.8863, -217.427, -24.8872, 0.1 ) }
    dend_2 { pt3dadd( 46.9587, -217.84, -24.8988, 0.1 ) }
    dend_2 { pt3dadd( 47.0436, -218.311, -24.9398, 0.1 ) }
    dend_2 { pt3dadd( 47.1224, -218.727, -24.9972, 0.1 ) }
    dend_2 { pt3dadd( 47.2015, -219.142, -25.0748, 0.1 ) }
    dend_2 { pt3dadd( 47.2739, -219.552, -25.1691, 0.1 ) }
    dend_2 { pt3dadd( 47.421, -220.41, -25.388, 0.1 ) }
    dend_2 { pt3dadd( 47.4572, -220.613, -25.4403, 0.1 ) }
    dend_2 { pt3dadd( 47.4572, -220.613, -25.4403, 0.1 ) }
    dend_2 { pt3dadd( 47.5156, -220.907, -25.4937, 0.1 ) }
    dend_2 { pt3dadd( 47.601, -221.318, -25.5387, 0.1 ) }
    dend_2 { pt3dadd( 47.694, -221.734, -25.5487, 0.1 ) }
    dend_2 { pt3dadd( 47.7759, -222.152, -25.4887, 0.1 ) }
    dend_2 { pt3dadd( 47.8511, -222.564, -25.4059, 0.1 ) }
    dend_2 { pt3dadd( 47.9247, -222.974, -25.3083, 0.1 ) }
    dend_2 { pt3dadd( 47.9985, -223.382, -25.1962, 0.1 ) }
    dend_2 { pt3dadd( 48.0563, -223.781, -25.0767, 0.1 ) }
    dend_2 { pt3dadd( 48.1397, -224.639, -24.8125, 0.1 ) }
    dend_2 { pt3dadd( 48.1723, -225.054, -24.717, 0.1 ) }
    dend_2 { pt3dadd( 48.1948, -225.479, -24.6626, 0.1 ) }
    dend_2 { pt3dadd( 48.1948, -225.479, -24.6626, 0.1 ) }
    dend_2 { pt3dadd( 48.22, -225.774, -24.7174, 0.1 ) }
    dend_2 { pt3dadd( 48.2799, -226.223, -24.8763, 0.1 ) }
    dend_2 { pt3dadd( 48.406, -227.005, -25.2548, 0.1 ) }
    dend_2 { pt3dadd( 48.4752, -227.424, -25.4671, 0.1 ) }
    dend_2 { pt3dadd( 48.5351, -227.805, -25.6542, 0.1 ) }
    dend_2 { pt3dadd( 48.6659, -228.6, -26.0031, 0.14 ) }
    dend_2 { pt3dadd( 48.7005, -228.793, -26.0909, 0.1 ) }
    dend_2 { pt3dadd( 48.7435, -229.067, -26.2095, 0.1 ) }
    dend_2 { pt3dadd( 48.793, -229.469, -26.3553, 0.1 ) }
    dend_2 { pt3dadd( 48.8399, -229.923, -26.5116, 0.1 ) }
    dend_2 { pt3dadd( 48.864, -230.334, -26.6351, 0.1 ) }
    dend_2 { pt3dadd( 48.8937, -231.208, -26.837, 0.1 ) }
    dend_2 { pt3dadd( 48.9043, -231.676, -26.9411, 0.1 ) }
    dend_2 { pt3dadd( 48.9157, -232.095, -27.0258, 0.1 ) }
    dend_2 { pt3dadd( 48.9278, -232.56, -27.1068, 0.1 ) }
    dend_2 { pt3dadd( 48.9376, -233.037, -27.1707, 0.1 ) }
    dend_2 { pt3dadd( 48.9435, -233.457, -27.2017, 0.14 ) }
    dend_2 { pt3dadd( 48.9523, -233.76, -27.198, 0.1 ) }
    dend_2 { pt3dadd( 48.9705, -234.186, -27.1915, 0.1 ) }
    dend_2 { pt3dadd( 48.9944, -234.612, -27.1836, 0.14 ) }
    dend_2 { pt3dadd( 49.0212, -234.908, -27.1759, 0.1 ) }
    dend_2 { pt3dadd( 49.0689, -235.334, -27.1625, 0.1 ) }
    dend_2 { pt3dadd( 49.1126, -235.758, -27.1501, 0.1 ) }
    dend_2 { pt3dadd( 49.1564, -236.235, -27.1374, 0.1 ) }
    dend_2 { pt3dadd( 49.1764, -236.654, -27.1305, 0.1 ) }
    dend_2 { pt3dadd( 49.1764, -237.081, -27.1282, 0.1 ) }
    dend_2 { pt3dadd( 49.1764, -237.081, -27.1282, 0.14 ) }
    dend_2 { pt3dadd( 49.1373, -237.381, -27.1067, 0.84 ) }
    dend_2 { pt3dadd( 49.0466, -237.841, -27.046, 0.7 ) }
    dend_2 { pt3dadd( 48.9463, -238.305, -26.9635, 0.56 ) }
    dend_2 { pt3dadd( 48.8788, -238.595, -26.906, 0.42 ) }
    dend_2 { pt3dadd( 48.7821, -239.048, -26.8119, 0.28 ) }
    dend_2 { pt3dadd( 48.6366, -239.92, -26.6289, 0.14 ) }
    dend_2 { pt3dadd( 48.587, -240.379, -26.5306, 0.1 ) }
    dend_2 { pt3dadd( 48.5602, -240.797, -26.4453, 0.1 ) }
    dend_2 { pt3dadd( 48.5439, -241.269, -26.3598, 0.1 ) }
    dend_2 { pt3dadd( 48.5385, -241.684, -26.3014, 0.1 ) }
    dend_2 { pt3dadd( 48.5442, -242.109, -26.265, 0.1 ) }
    dend_2 { pt3dadd( 48.5559, -242.538, -26.26, 0.1 ) }
    dend_2 { pt3dadd( 48.5733, -243.018, -26.2882, 0.1 ) }
    dend_2 { pt3dadd( 48.5789, -243.312, -26.3257, 0.1 ) }
    dend_2 { pt3dadd( 48.58, -243.783, -26.4138, 0.1 ) }
    dend_2 { pt3dadd( 48.5659, -244.199, -26.5111, 0.1 ) }
    dend_2 { pt3dadd( 48.5366, -244.656, -26.6306, 0.1 ) }
    dend_2 { pt3dadd( 48.4874, -245.419, -26.8345, 0.1 ) }
    dend_2 { pt3dadd( 48.4714, -245.713, -26.9087, 0.1 ) }
    dend_2 { pt3dadd( 48.4429, -246.173, -27.0148, 0.1 ) }
    dend_2 { pt3dadd( 48.4111, -246.644, -27.1078, 0.1 ) }
    dend_2 { pt3dadd( 48.3811, -247.104, -27.2121, 0.1 ) }
    dend_2 { pt3dadd( 48.3655, -247.521, -27.3046, 0.1 ) }
    dend_2 { pt3dadd( 48.3546, -247.992, -27.3938, 0.1 ) }
    dend_2 { pt3dadd( 48.3576, -248.283, -27.4561, 0.1 ) }
    dend_2 { pt3dadd( 48.3766, -248.696, -27.5647, 0.1 ) }
    dend_2 { pt3dadd( 48.4426, -249.417, -27.8063, 0.1 ) }
    dend_2 { pt3dadd( 48.4985, -249.805, -27.98, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 48.4985, -249.805, -27.98, 0.42 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 1/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -11.0988, 40.8291, -7.08192, 0.84 ) }
    dend_63 { pt3dadd( -11.4491, 41.9665, -6.83752, 0.84 ) }
    dend_63 { pt3dadd( -11.5939, 42.5221, -6.7387, 0.7 ) }
    dend_63 { pt3dadd( -11.7312, 43.0936, -6.64292, 0.56 ) }
    dend_63 { pt3dadd( -11.8607, 43.6653, -6.55704, 0.42 ) }
    dend_63 { pt3dadd( -11.9716, 44.245, -6.48063, 0.28 ) }
    dend_63 { pt3dadd( -12.0719, 44.8248, -6.4147, 0.42 ) }
    dend_63 { pt3dadd( -12.1158, 45.2336, -6.40757, 0.56 ) }
    dend_63 { pt3dadd( -12.1337, 45.5201, -6.40121, 0.7 ) }
    dend_63 { pt3dadd( -12.1556, 46.1039, -6.3867, 0.84 ) }
    dend_63 { pt3dadd( -12.1689, 46.7638, -6.29228, 0.7 ) }
    dend_63 { pt3dadd( -12.1701, 47.3438, -6.15944, 0.56 ) }
    dend_63 { pt3dadd( -12.1646, 47.6276, -6.07995, 0.7 ) }
    dend_63 { pt3dadd( -12.1401, 48.1929, -5.90392, 0.56 ) }
    dend_63 { pt3dadd( -12.1067, 48.7588, -5.72117, 0.7 ) }
    dend_63 { pt3dadd( -12.0117, 49.9653, -5.40854, 0.84 ) }
    dend_63 { pt3dadd( -11.9636, 50.6156, -5.35437, 0.7 ) }
    dend_63 { pt3dadd( -11.9384, 51.0382, -5.39879, 0.56 ) }
    dend_63 { pt3dadd( -11.9242, 51.3264, -5.47216, 0.7 ) }
    dend_63 { pt3dadd( -11.8824, 51.8711, -5.68595, 0.98 ) }
    dend_63 { pt3dadd( -11.8077, 52.989, -6.15626, 0.98 ) }
    dend_63 { pt3dadd( -11.7544, 54.1054, -6.63722, 0.84 ) }
    dend_63 { pt3dadd( -11.7407, 54.681, -6.77729, 0.84 ) }
    dend_63 { pt3dadd( -11.7311, 55.1011, -6.78876, 0.7 ) }
    dend_63 { pt3dadd( -11.7087, 55.5052, -6.71535, 0.56 ) }
    dend_63 { pt3dadd( -11.6479, 56.6308, -6.26612, 0.7 ) }
    dend_63 { pt3dadd( -11.6468, 57.212, -5.93642, 0.84 ) }
    dend_63 { pt3dadd( -11.7149, 58.295, -5.31646, 0.98 ) }
    dend_63 { pt3dadd( -11.7772, 58.6736, -5.14033, 0.84 ) }
    dend_63 { pt3dadd( -11.8692, 58.9452, -5.06914, 0.7 ) }
    dend_63 { pt3dadd( -12.2422, 59.6932, -5.16379, 0.1 ) }
    dend_63 { pt3dadd( -12.557, 60.235, -5.40308, 0.14 ) }
    dend_63 { pt3dadd( -13.1569, 61.1968, -5.94693, 0.28 ) }
    dend_63 { pt3dadd( -13.3557, 61.513, -6.15035, 0.42 ) }
    dend_63 { pt3dadd( -13.6738, 62.0261, -6.4282, 0.56 ) }
    dend_63 { pt3dadd( -14.241, 63.0248, -6.84595, 0.56 ) }
    dend_63 { pt3dadd( -14.4841, 63.5488, -6.98891, 0.42 ) }
    dend_63 { pt3dadd( -14.703, 64.0977, -7.04869, 0.56 ) }
    dend_63 { pt3dadd( -14.8019, 64.3784, -7.03355, 0.56 ) }
    dend_63 { pt3dadd( -15.1916, 65.5219, -6.90593, 0.56 ) }
    dend_63 { pt3dadd( -15.3788, 66.0665, -6.81383, 0.56 ) }
    dend_63 { pt3dadd( -15.5775, 66.6129, -6.69371, 0.56 ) }
    dend_63 { pt3dadd( -15.7812, 67.1646, -6.59417, 0.7 ) }
    dend_63 { pt3dadd( -15.9846, 67.7176, -6.52309, 0.84 ) }
    dend_63 { pt3dadd( -16.2105, 68.3434, -6.48145, 0.98 ) }
    dend_63 { pt3dadd( -16.4065, 68.9033, -6.4861, 1.12 ) }
    dend_63 { pt3dadd( -16.5922, 69.4695, -6.48948, 0.98 ) }
    dend_63 { pt3dadd( -16.7749, 70.0337, -6.4926, 0.84 ) }
    dend_63 { pt3dadd( -16.9488, 70.5899, -6.49501, 0.7 ) }
    dend_63 { pt3dadd( -17.1144, 71.1621, -6.49609, 0.84 ) }
    dend_63 { pt3dadd( -17.2529, 71.738, -6.49417, 0.7 ) }
    dend_63 { pt3dadd( -17.3194, 72.0281, -6.49287, 0.84 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 53/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -11.0988, 40.8291, -7.08192, 0.7 ) }
    dend_62 { pt3dadd( -11.1718, 40.8564, -7.8402, 0.7 ) }
    dend_62 { pt3dadd( -11.3047, 40.9198, -9.24887, 0.56 ) }
    dend_62 { pt3dadd( -11.4315, 40.9849, -10.686, 0.42 ) }
    dend_62 { pt3dadd( -11.5624, 41.0548, -12.0945, 0.28 ) }
    dend_62 { pt3dadd( -11.6943, 41.133, -13.5025, 0.14 ) }
    dend_62 { pt3dadd( -11.8271, 41.2218, -14.9365, 0.1 ) }
    dend_62 { pt3dadd( -11.9483, 41.3133, -16.3586, 0.1 ) }
    dend_62 { pt3dadd( -12.0726, 41.4135, -17.7658, 0.1 ) }
    dend_62 { pt3dadd( -12.1384, 41.472, -18.5241, 0.1 ) }
    dend_62 { pt3dadd( -12.266, 41.5964, -19.9419, 0.1 ) }
    dend_62 { pt3dadd( -12.3922, 41.7331, -21.3597, 0.1 ) }
    dend_62 { pt3dadd( -12.5091, 41.8757, -22.7637, 0.1 ) }
    dend_62 { pt3dadd( -12.6272, 42.0319, -24.1948, 0.1 ) }
    dend_62 { pt3dadd( -12.7396, 42.1993, -25.6094, 0.1 ) }
    dend_62 { pt3dadd( -12.7921, 42.284, -26.3376, 0.1 ) }
    dend_62 { pt3dadd( -12.9104, 42.4625, -27.7512, 0.1 ) }
    dend_62 { pt3dadd( -13.0514, 42.6625, -29.1597, 0.1 ) }
    dend_62 { pt3dadd( -13.1399, 42.7816, -29.8793, 0.1 ) }
    dend_62 { pt3dadd( -13.3434, 43.0458, -31.2689, 0.14 ) }
    dend_62 { pt3dadd( -13.3815, 43.0872, -31.46, 0.28 ) }
    dend_62 { pt3dadd( -13.6005, 43.2914, -32.3154, 0.1 ) }
    dend_62 { pt3dadd( -13.6799, 43.3596, -32.5702, 0.1 ) }
    dend_62 { pt3dadd( -14.347, 43.6891, -32.1935, 0.1 ) }
    dend_62 { pt3dadd( -14.6812, 43.8495, -31.9568, 0.1 ) }
    dend_62 { pt3dadd( -15.002, 44.0016, -31.6867, 0.14 ) }
    dend_62 { pt3dadd( -15.002, 44.0016, -31.6867, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 80/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -13.64, 37.599, -28.0385, 0.7 ) }
    dend_56 { pt3dadd( -14.026, 38.1394, -28.5474, 0.7 ) }
    dend_56 { pt3dadd( -14.6144, 39.0099, -29.2305, 0.56 ) }
    dend_56 { pt3dadd( -14.8066, 39.3106, -29.4379, 0.42 ) }
    dend_56 { pt3dadd( -15.3858, 40.2441, -30.037, 0.28 ) }
    dend_56 { pt3dadd( -15.6712, 40.695, -30.2964, 0.14 ) }
    dend_56 { pt3dadd( -15.989, 41.1954, -30.6017, 0.1 ) }
    dend_56 { pt3dadd( -16.2921, 41.7021, -30.8948, 0.1 ) }
    dend_56 { pt3dadd( -16.433, 41.9398, -31.0056, 0.14 ) }
    dend_56 { pt3dadd( -16.433, 41.9398, -31.0056, 0.28 ) }
    dend_56 { pt3dadd( -16.8029, 42.6243, -31.315, 0.42 ) }
    dend_56 { pt3dadd( -17.2666, 43.494, -31.7993, 0.42 ) }
    dend_56 { pt3dadd( -17.516, 44.0137, -32.1171, 0.28 ) }
    dend_56 { pt3dadd( -17.7376, 44.5422, -32.4399, 0.14 ) }
    dend_56 { pt3dadd( -17.9266, 45.0214, -32.7367, 0.14 ) }
    dend_56 { pt3dadd( -18.277, 46.0001, -33.3451, 0.28 ) }
    dend_56 { pt3dadd( -18.277, 46.0001, -33.3451, 0.42 ) }
    dend_56 { pt3dadd( -18.4229, 46.5222, -33.5845, 0.56 ) }
    dend_56 { pt3dadd( -18.5463, 47.0506, -33.8139, 0.42 ) }
    dend_56 { pt3dadd( -18.7079, 47.5901, -33.9868, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_56 { pt3dadd( -18.8215, 47.8604, -34.0298, 0.42 ) }
    dend_56 { pt3dadd( -19.1247, 48.4516, -34.0479, 0.28 ) }
    dend_56 { pt3dadd( -19.4132, 48.9595, -34.0626, 0.28 ) }
    dend_56 { pt3dadd( -19.7285, 49.4606, -34.0761, 0.42 ) }
    dend_56 { pt3dadd( -20.1872, 50.1569, -34.1596, 0.42 ) }
    dend_56 { pt3dadd( -20.5504, 50.7054, -34.2622, 0.28 ) }
    dend_56 { pt3dadd( -20.7778, 51.0395, -34.3424, 0.14 ) }
    dend_56 { pt3dadd( -21.1497, 51.5523, -34.5508, 0.1 ) }
    dend_56 { pt3dadd( -21.3841, 51.8516, -34.7124, 0.1 ) }
    dend_56 { pt3dadd( -21.9512, 52.5638, -35.2588, 0.1 ) }
    dend_56 { pt3dadd( -22.267, 52.9995, -35.6558, 0.28 ) }
    dend_56 { pt3dadd( -22.5546, 53.4186, -36.0793, 0.42 ) }
    dend_56 { pt3dadd( -23.0701, 54.2222, -36.8941, 0.28 ) }
    dend_56 { pt3dadd( -23.2337, 54.5035, -37.1635, 0.14 ) }
    dend_56 { pt3dadd( -23.6364, 55.2614, -37.8535, 0.28 ) }
    dend_56 { pt3dadd( -23.8415, 55.6904, -38.1908, 1.12 ) }
    dend_56 { pt3dadd( -23.8415, 55.6904, -38.1908, 0.98 ) }
    dend_56 { pt3dadd( -24.0594, 56.2457, -38.5001, 0.1 ) }
    dend_56 { pt3dadd( -24.241, 56.7682, -38.673, 0.1 ) }
    dend_56 { pt3dadd( -24.6227, 57.9217, -38.9325, 0.1 ) }
    dend_56 { pt3dadd( -24.803, 58.468, -39.0183, 0.1 ) }
    dend_56 { pt3dadd( -24.9999, 59.082, -39.1306, 0.1 ) }
    dend_56 { pt3dadd( -25.3191, 60.2222, -39.3542, 0.14 ) }
    dend_56 { pt3dadd( -25.3749, 60.4927, -39.4515, 0.28 ) }
    dend_56 { pt3dadd( -25.4115, 60.7525, -39.5821, 0.42 ) }
    dend_56 { pt3dadd( -25.529, 61.8405, -40.1691, 0.28 ) }
    dend_56 { pt3dadd( -25.5864, 62.3329, -40.4943, 0.28 ) }
    dend_56 { pt3dadd( -25.6336, 62.7946, -40.8601, 0.14 ) }
    dend_56 { pt3dadd( -25.737, 63.697, -41.6599, 0.1 ) }
    dend_56 { pt3dadd( -25.7989, 64.1573, -42.0305, 0.1 ) }
    dend_56 { pt3dadd( -25.883, 64.6961, -42.3953, 0.1 ) }
    dend_56 { pt3dadd( -25.9348, 64.9577, -42.5239, 0.1 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -13.64, 37.599, -28.0385, 0.84 ) }
    dend_53 { pt3dadd( -13.2249, 37.7803, -28.8204, 0.84 ) }
    dend_53 { pt3dadd( -12.3107, 38.1002, -30.2915, 0.98 ) }
    dend_53 { pt3dadd( -11.2716, 38.3796, -31.686, 0.84 ) }
    dend_53 { pt3dadd( -11.1139, 38.4209, -31.8697, 0.28 ) }
    dend_53 { pt3dadd( -10.7476, 38.5266, -32.267, 0.14 ) }
    dend_53 { pt3dadd( -10.3958, 38.6376, -32.662, 0.1 ) }
    dend_53 { pt3dadd( -10.1496, 38.7063, -32.897, 0.1 ) }
    dend_53 { pt3dadd( -9.72094, 38.8183, -33.2239, 0.14 ) }
    dend_53 { pt3dadd( -8.92647, 39.0655, -33.8312, 0.28 ) }
    dend_53 { pt3dadd( -8.2737, 39.315, -34.4528, 0.42 ) }
    dend_53 { pt3dadd( -7.20915, 39.8476, -35.7488, 0.56 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 44/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 18.9737, 105.792, 4.23753, 0.1 ) }
    dend_50 { pt3dadd( 18.5768, 106.739, 4.26614, 0.1 ) }
    dend_50 { pt3dadd( 18.392, 107.191, 4.25749, 0.1 ) }
    dend_50 { pt3dadd( 18.1819, 107.697, 4.22066, 0.1 ) }
    dend_50 { pt3dadd( 17.9974, 108.147, 4.17559, 0.14 ) }
    dend_50 { pt3dadd( 17.8107, 108.599, 4.1244, 0.28 ) }
    dend_50 { pt3dadd( 17.8107, 108.599, 4.1244, 0.42 ) }
    dend_50 { pt3dadd( 17.6176, 109.091, 3.99921, 0.1 ) }
    dend_50 { pt3dadd( 17.4449, 109.575, 3.81819, 0.14 ) }
    dend_50 { pt3dadd( 17.3762, 109.788, 3.71602, 0.28 ) }
    dend_50 { pt3dadd( 17.332, 109.991, 3.58318, 0.42 ) }
    dend_50 { pt3dadd( 17.2714, 110.427, 3.25066, 0.56 ) }
    dend_50 { pt3dadd( 17.2158, 110.871, 2.93731, 0.42 ) }
    dend_50 { pt3dadd( 17.1527, 111.717, 2.40433, 0.28 ) }
    dend_50 { pt3dadd( 17.1385, 112.206, 2.15336, 0.14 ) }
    dend_50 { pt3dadd( 17.0992, 113.158, 1.85994, 0.28 ) }
    dend_50 { pt3dadd( 17.0992, 113.158, 1.85994, 0.42 ) }
    dend_50 { pt3dadd( 17.0921, 114.145, 1.98506, 0.1 ) }
    dend_50 { pt3dadd( 17.0987, 114.666, 2.15449, 0.1 ) }
    dend_50 { pt3dadd( 17.1006, 115.149, 2.3933, 0.1 ) }
    dend_50 { pt3dadd( 17.1128, 116.033, 2.92179, 0.1 ) }
    dend_50 { pt3dadd( 17.1107, 116.312, 3.1162, 0.1 ) }
    dend_50 { pt3dadd( 17.127, 116.766, 3.42439, 0.14 ) }
    dend_50 { pt3dadd( 17.1705, 117.054, 3.60563, 0.28 ) }
    dend_50 { pt3dadd( 17.1976, 117.246, 3.73904, 0.42 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 69/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 18.9737, 105.792, 4.23753, 0.28 ) }
    dend_49 { pt3dadd( 19.2937, 106.978, 4.82469, 0.28 ) }
    dend_49 { pt3dadd( 19.4467, 107.625, 5.08188, 0.14 ) }
    dend_49 { pt3dadd( 19.5321, 108.059, 5.21876, 0.1 ) }
    dend_49 { pt3dadd( 19.6687, 108.927, 5.43342, 0.14 ) }
    dend_49 { pt3dadd( 19.7321, 109.37, 5.52529, 0.1 ) }
    dend_49 { pt3dadd( 19.8206, 109.996, 5.6407, 0.1 ) }
    dend_49 { pt3dadd( 19.9141, 110.633, 5.6975, 0.14 ) }
    dend_49 { pt3dadd( 19.9878, 111.259, 5.73931, 0.1 ) }
    dend_49 { pt3dadd( 20.0427, 111.902, 5.76634, 0.1 ) }
    dend_49 { pt3dadd( 20.0937, 112.625, 5.78852, 0.1 ) }
    dend_49 { pt3dadd( 20.1571, 113.332, 5.82058, 0.1 ) }
    dend_49 { pt3dadd( 20.2389, 113.968, 5.86837, 0.1 ) }
    dend_49 { pt3dadd( 20.3572, 114.677, 5.9425, 0.1 ) }
    dend_49 { pt3dadd( 20.4853, 115.29, 6.02642, 0.14 ) }
    dend_49 { pt3dadd( 20.646, 115.987, 6.13337, 0.1 ) }
    dend_49 { pt3dadd( 20.747, 116.433, 6.20038, 0.1 ) }
    dend_49 { pt3dadd( 20.8937, 117.122, 6.29678, 0.14 ) }
    dend_49 { pt3dadd( 21.03, 117.828, 6.38482, 0.28 ) }
    dend_49 { pt3dadd( 21.0905, 118.131, 6.39116, 0.28 ) }
    dend_49 { pt3dadd( 21.2132, 118.761, 6.34554, 0.1 ) }
    dend_49 { pt3dadd( 21.3148, 119.389, 6.24385, 0.1 ) }
    dend_49 { pt3dadd( 21.3934, 120.016, 6.10294, 0.1 ) }
    dend_49 { pt3dadd( 21.451, 120.636, 5.93687, 0.1 ) }
    dend_49 { pt3dadd( 21.5512, 121.906, 5.58896, 0.14 ) }
    dend_49 { pt3dadd( 21.6014, 122.518, 5.43635, 0.28 ) }
    dend_49 { pt3dadd( 21.6709, 123.148, 5.30534, 0.14 ) }
    dend_49 { pt3dadd( 21.7581, 123.779, 5.21246, 0.1 ) }
    dend_49 { pt3dadd( 21.8517, 124.414, 5.16079, 0.1 ) }
    dend_49 { pt3dadd( 21.9488, 125.13, 5.15126, 0.1 ) }
    dend_49 { pt3dadd( 22.0332, 125.836, 5.19947, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_49 { pt3dadd( 22.1226, 126.284, 5.21854, 0.1 ) }
    dend_49 { pt3dadd( 22.2714, 126.978, 5.26478, 0.1 ) }
    dend_49 { pt3dadd( 22.4113, 127.603, 5.32091, 0.1 ) }
    dend_49 { pt3dadd( 22.5518, 128.23, 5.38887, 0.1 ) }
    dend_49 { pt3dadd( 22.6874, 128.926, 5.46225, 0.1 ) }
    dend_49 { pt3dadd( 22.8911, 130.094, 5.59017, 0.1 ) }
    dend_49 { pt3dadd( 23.0833, 131.389, 5.72976, 0.14 ) }
    dend_49 { pt3dadd( 23.172, 132.104, 5.80635, 0.1 ) }
    dend_49 { pt3dadd( 23.2426, 132.807, 5.88049, 0.1 ) }
    dend_49 { pt3dadd( 23.2725, 133.448, 5.93149, 0.1 ) }
    dend_49 { pt3dadd( 23.294, 134.159, 5.9273, 0.1 ) }
    dend_49 { pt3dadd( 23.3225, 134.794, 5.82907, 0.1 ) }
    dend_49 { pt3dadd( 23.4222, 135.382, 5.57112, 0.1 ) }
    dend_49 { pt3dadd( 23.5581, 135.894, 5.19509, 0.14 ) }
    dend_49 { pt3dadd( 23.7306, 136.407, 4.71342, 0.1 ) }
    dend_49 { pt3dadd( 24.023, 137.205, 3.85301, 0.1 ) }
    dend_49 { pt3dadd( 24.3452, 138.08, 2.84438, 0.1 ) }
    dend_49 { pt3dadd( 24.6706, 138.896, 1.83486, 0.1 ) }
    dend_49 { pt3dadd( 25.0063, 139.726, 0.791186, 0.14 ) }
    dend_49 { pt3dadd( 25.0868, 139.93, 0.547533, 0.28 ) }
    dend_49 { pt3dadd( 25.2605, 140.431, 0.0536194, 0.42 ) }
    dend_49 { pt3dadd( 25.3757, 140.976, -0.285969, 0.56 ) }
    dend_49 { pt3dadd( 25.4134, 141.285, -0.37555, 0.7 ) }
    dend_49 { pt3dadd( 25.4533, 141.925, -0.428889, 0.84 ) }
    dend_49 { pt3dadd( 25.4887, 142.635, -0.418389, 0.7 ) }
    dend_49 { pt3dadd( 25.5674, 143.354, -0.453631, 0.56 ) }
    dend_49 { pt3dadd( 25.6715, 144.055, -0.521413, 0.42 ) }
    dend_49 { pt3dadd( 25.7662, 144.685, -0.612389, 0.28 ) }
    dend_49 { pt3dadd( 25.8878, 145.305, -0.753941, 0.14 ) }
    dend_49 { pt3dadd( 26.0249, 145.908, -0.937857, 0.1 ) }
    dend_49 { pt3dadd( 26.3611, 147.082, -1.44843, 0.1 ) }
    dend_49 { pt3dadd( 26.5401, 147.633, -1.73826, 0.1 ) }
    dend_49 { pt3dadd( 26.7432, 148.145, -2.06651, 0.14 ) }
    dend_49 { pt3dadd( 27.2445, 149.158, -2.84459, 0.28 ) }
    dend_49 { pt3dadd( 27.4956, 149.623, -3.23064, 0.28 ) }
    dend_49 { pt3dadd( 27.9704, 150.477, -3.93692, 0.14 ) }
    dend_49 { pt3dadd( 28.2178, 150.968, -4.28996, 0.1 ) }
    dend_49 { pt3dadd( 28.7264, 151.987, -4.96315, 0.1 ) }
    dend_49 { pt3dadd( 29.2241, 153.068, -5.55047, 0.1 ) }
    dend_49 { pt3dadd( 29.4371, 153.645, -5.74719, 0.1 ) }
    dend_49 { pt3dadd( 29.6644, 154.324, -5.85517, 0.14 ) }
    dend_49 { pt3dadd( 30.0161, 155.626, -5.77499, 0.28 ) }
    dend_49 { pt3dadd( 30.0939, 155.933, -5.71044, 0.42 ) }
    dend_49 { pt3dadd( 30.2391, 156.593, -5.4841, 0.14 ) }
    dend_49 { pt3dadd( 30.38, 157.255, -5.22269, 0.1 ) }
    dend_49 { pt3dadd( 30.4842, 157.675, -5.07354, 0.1 ) }
    dend_49 { pt3dadd( 30.6653, 158.338, -4.8843, 0.1 ) }
    dend_49 { pt3dadd( 30.8605, 159.023, -4.75063, 0.1 ) }
    dend_49 { pt3dadd( 31.0637, 159.701, -4.67706, 0.1 ) }
    dend_49 { pt3dadd( 31.1574, 160.007, -4.6667, 0.1 ) }
    dend_49 { pt3dadd( 31.4023, 160.685, -4.72711, 0.1 ) }
    dend_49 { pt3dadd( 31.6695, 161.339, -4.83976, 0.1 ) }
    dend_49 { pt3dadd( 31.9316, 161.917, -4.97162, 0.1 ) }
    dend_49 { pt3dadd( 32.5102, 163.114, -5.27338, 0.1 ) }
    dend_49 { pt3dadd( 32.7817, 163.673, -5.41872, 0.1 ) }
    dend_49 { pt3dadd( 33.343, 164.877, -5.72113, 0.1 ) }
    dend_49 { pt3dadd( 33.5175, 165.289, -5.82052, 0.1 ) }
    dend_49 { pt3dadd( 33.7534, 165.948, -5.95804, 0.1 ) }
    dend_49 { pt3dadd( 33.9516, 166.639, -6.0525, 0.1 ) }
    dend_49 { pt3dadd( 34.0734, 167.274, -6.07986, 0.1 ) }
    dend_49 { pt3dadd( 34.1645, 167.899, -6.08251, 0.1 ) }
    dend_49 { pt3dadd( 34.2205, 168.539, -6.05461, 0.1 ) }
    dend_49 { pt3dadd( 34.2669, 169.183, -6.03408, 0.1 ) }
    dend_49 { pt3dadd( 34.3107, 169.906, -6.01747, 0.1 ) }
    dend_49 { pt3dadd( 34.3269, 170.614, -5.95397, 0.1 ) }
    dend_49 { pt3dadd( 34.3259, 170.934, -5.90651, 0.1 ) }
    dend_49 { pt3dadd( 34.3024, 171.647, -5.7744, 0.1 ) }
    dend_49 { pt3dadd( 34.2732, 172.266, -5.63494, 0.1 ) }
    dend_49 { pt3dadd( 34.1834, 172.88, -5.46017, 0.1 ) }
    dend_49 { pt3dadd( 33.7524, 174.096, -5.01182, 0.14 ) }
    dend_49 { pt3dadd( 33.4403, 174.625, -4.79212, 0.1 ) }
    dend_49 { pt3dadd( 33.0398, 175.1, -4.59528, 0.1 ) }
    dend_49 { pt3dadd( 32.8019, 175.308, -4.51689, 0.14 ) }
    dend_49 { pt3dadd( 31.7071, 176.135, -4.34324, 0.1 ) }
    dend_49 { pt3dadd( 30.5611, 176.908, -4.38735, 0.1 ) }
    dend_49 { pt3dadd( 29.9948, 177.31, -4.60516, 0.14 ) }
    dend_49 { pt3dadd( 29.5439, 177.706, -5.03452, 0.14 ) }
    dend_49 { pt3dadd( 29.3536, 177.942, -5.37513, 0.1 ) }
    dend_49 { pt3dadd( 29.0523, 178.614, -6.54821, 0.1 ) }
    dend_49 { pt3dadd( 29.0285, 178.82, -6.96166, 0.1 ) }
    dend_49 { pt3dadd( 29.0766, 179.408, -8.21577, 0.1 ) }
    dend_49 { pt3dadd( 29.2106, 179.977, -9.46559, 0.1 ) }
    dend_49 { pt3dadd( 29.3212, 180.27, -10.1345, 0.1 ) }
    dend_49 { pt3dadd( 29.5306, 180.708, -11.2025, 0.1 ) }
    dend_49 { pt3dadd( 29.6185, 180.871, -11.632, 0.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 85/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 11.2572, -84.5858, 9.31309, 1.12 ) }
    dend_18 { pt3dadd( 11.3308, -85.107, 9.30362, 1.12 ) }
    dend_18 { pt3dadd( 11.4215, -85.7019, 9.29155, 1.26 ) }
    dend_18 { pt3dadd( 11.5108, -86.2301, 9.27917, 1.4 ) }
    dend_18 { pt3dadd( 11.6297, -86.7553, 9.26116, 1.54 ) }
    dend_18 { pt3dadd( 11.6972, -87.0133, 9.2506, 1.4 ) }
    dend_18 { pt3dadd( 11.6972, -87.0133, 9.2506, 1.26 ) }
    dend_18 { pt3dadd( 11.7791, -87.2532, 9.18839, 1.12 ) }
    dend_18 { pt3dadd( 11.9615, -87.7342, 9.03007, 0.98 ) }
    dend_18 { pt3dadd( 12.1629, -88.2508, 8.78563, 0.84 ) }
    dend_18 { pt3dadd( 12.3368, -88.6997, 8.54154, 0.7 ) }
    dend_18 { pt3dadd( 12.6933, -89.6426, 8.013, 0.84 ) }
    dend_18 { pt3dadd( 12.8661, -90.0892, 7.76376, 0.98 ) }
    dend_18 { pt3dadd( 13.0489, -90.5437, 7.5376, 1.12 ) }
    dend_18 { pt3dadd( 13.4651, -91.5125, 7.112, 1.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_18 { pt3dadd( 13.6601, -91.9757, 6.91676, 1.12 ) }
    dend_18 { pt3dadd( 13.8675, -92.4457, 6.74534, 0.98 ) }
    dend_18 { pt3dadd( 14.1157, -92.9794, 6.638, 1.12 ) }
    dend_18 { pt3dadd( 14.5659, -93.8616, 6.51321, 0.98 ) }
    dend_18 { pt3dadd( 14.7525, -94.1859, 6.5289, 1.12 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 11.2572, -84.5858, 9.31309, 0.28 ) }
    dend_17 { pt3dadd( 11.6882, -84.7429, 9.31526, 0.28 ) }
    dend_17 { pt3dadd( 12.3863, -84.994, 9.31882, 0.42 ) }
    dend_17 { pt3dadd( 12.8228, -85.155, 9.38007, 0.56 ) }
    dend_17 { pt3dadd( 13.4891, -85.4258, 9.51627, 0.42 ) }
    dend_17 { pt3dadd( 13.9102, -85.6075, 9.61381, 0.28 ) }
    dend_17 { pt3dadd( 14.7356, -85.9936, 9.81185, 0.14 ) }
    dend_17 { pt3dadd( 15.3729, -86.3305, 9.97965, 0.28 ) }
    dend_17 { pt3dadd( 16.4276, -86.9542, 10.2744, 0.28 ) }
    dend_17 { pt3dadd( 17.0366, -87.3392, 10.4388, 0.14 ) }
    dend_17 { pt3dadd( 17.4121, -87.5922, 10.5336, 0.1 ) }
    dend_17 { pt3dadd( 18.0052, -88.0124, 10.6611, 0.1 ) }
    dend_17 { pt3dadd( 18.5893, -88.4461, 10.713, 0.1 ) }
    dend_17 { pt3dadd( 18.9581, -88.7304, 10.6921, 0.1 ) }
    dend_17 { pt3dadd( 19.688, -89.2845, 10.5887, 0.1 ) }
    dend_17 { pt3dadd( 20.0647, -89.5489, 10.546, 0.1 ) }
    dend_17 { pt3dadd( 20.682, -89.9534, 10.5669, 0.14 ) }
    dend_17 { pt3dadd( 21.692, -90.5179, 10.7703, 0.28 ) }
    dend_17 { pt3dadd( 21.692, -90.5179, 10.7703, 0.42 ) }
    dend_17 { pt3dadd( 22.7807, -90.9683, 11.2286, 0.42 ) }
    dend_17 { pt3dadd( 23.3788, -91.2068, 11.5976, 0.56 ) }
    dend_17 { pt3dadd( 24.3587, -91.622, 12.292, 0.42 ) }
    dend_17 { pt3dadd( 24.8995, -91.8841, 12.7066, 0.28 ) }
    dend_17 { pt3dadd( 25.4437, -92.1841, 13.1144, 0.14 ) }
    dend_17 { pt3dadd( 25.7865, -92.3929, 13.3346, 0.28 ) }
    dend_17 { pt3dadd( 26.7212, -93.0214, 13.802, 0.56 ) }
    dend_17 { pt3dadd( 27.2808, -93.4311, 14.0305, 0.7 ) }
    dend_17 { pt3dadd( 27.7764, -93.8217, 14.2227, 0.56 ) }
    dend_17 { pt3dadd( 28.4297, -94.4022, 14.5151, 0.42 ) }
    dend_17 { pt3dadd( 28.7428, -94.7134, 14.6622, 0.28 ) }
    dend_17 { pt3dadd( 29.0379, -95.0333, 14.7934, 0.14 ) }
    dend_17 { pt3dadd( 29.6355, -95.7175, 15.0106, 0.14 ) }
    dend_17 { pt3dadd( 30.3773, -96.6279, 15.2993, 0.28 ) }
    dend_17 { pt3dadd( 30.7611, -97.1246, 15.4453, 0.14 ) }
    dend_17 { pt3dadd( 31.1334, -97.6424, 15.5795, 0.14 ) }
    dend_17 { pt3dadd( 31.4936, -98.1656, 15.7388, 0.1 ) }
    dend_17 { pt3dadd( 31.8879, -98.7443, 15.9239, 0.1 ) }
    dend_17 { pt3dadd( 32.2911, -99.3198, 16.0997, 0.1 ) }
    dend_17 { pt3dadd( 32.7219, -99.8776, 16.3021, 0.1 ) }
    dend_17 { pt3dadd( 33.0021, -100.206, 16.463, 0.1 ) }
    dend_17 { pt3dadd( 33.7421, -101.039, 16.9426, 0.1 ) }
    dend_17 { pt3dadd( 34.1849, -101.531, 17.2455, 0.1 ) }
    dend_17 { pt3dadd( 34.6307, -102.026, 17.5571, 0.1 ) }
    dend_17 { pt3dadd( 35.4344, -102.938, 18.2028, 0.1 ) }
    dend_17 { pt3dadd( 35.6957, -103.252, 18.4259, 0.1 ) }
    dend_17 { pt3dadd( 36.0509, -103.714, 18.7227, 0.14 ) }
    dend_17 { pt3dadd( 36.438, -104.243, 19.0548, 0.28 ) }
    dend_17 { pt3dadd( 36.6651, -104.57, 19.2731, 0.42 ) }
    dend_17 { pt3dadd( 37.2656, -105.447, 19.8545, 0.1 ) }
    dend_17 { pt3dadd( 37.5999, -105.93, 20.1414, 0.1 ) }
    dend_17 { pt3dadd( 37.9353, -106.418, 20.423, 0.14 ) }
    dend_17 { pt3dadd( 38.642, -107.456, 20.9772, 0.1 ) }
    dend_17 { pt3dadd( 39.0103, -108.022, 21.2406, 0.1 ) }
    dend_17 { pt3dadd( 39.2434, -108.399, 21.375, 0.1 ) }
    dend_17 { pt3dadd( 39.6087, -109.008, 21.5084, 0.14 ) }
    dend_17 { pt3dadd( 39.9433, -109.567, 21.5542, 0.28 ) }
    dend_17 { pt3dadd( 40.2652, -110.131, 21.5631, 0.28 ) }
    dend_17 { pt3dadd( 40.4128, -110.421, 21.5421, 0.42 ) }
    dend_17 { pt3dadd( 40.692, -111.006, 21.5684, 0.28 ) }
    dend_17 { pt3dadd( 40.9583, -111.595, 21.6544, 0.14 ) }
    dend_17 { pt3dadd( 41.4683, -112.671, 22.0315, 0.1 ) }
    dend_17 { pt3dadd( 41.9887, -113.645, 22.5178, 0.28 ) }
    dend_17 { pt3dadd( 42.2884, -114.148, 22.8123, 0.14 ) }
    dend_17 { pt3dadd( 42.9311, -115.173, 23.4615, 0.1 ) }
    dend_17 { pt3dadd( 43.2489, -115.649, 23.7763, 0.1 ) }
    dend_17 { pt3dadd( 43.948, -116.637, 24.4368, 0.1 ) }
    dend_17 { pt3dadd( 44.3114, -117.151, 24.8007, 0.1 ) }
    dend_17 { pt3dadd( 44.7086, -117.682, 25.1165, 0.1 ) }
    dend_17 { pt3dadd( 44.8938, -117.915, 25.2476, 0.1 ) }
    dend_17 { pt3dadd( 45.3406, -118.459, 25.454, 0.1 ) }
    dend_17 { pt3dadd( 45.6348, -118.789, 25.5574, 0.1 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -28.4789, -34.4714, -32.6127, 0.28 ) }
    dend_7 { pt3dadd( -28.7009, -34.8965, -32.5645, 0.28 ) }
    dend_7 { pt3dadd( -29.1214, -35.7464, -32.4698, 0.14 ) }
    dend_7 { pt3dadd( -29.3328, -36.1767, -32.422, 0.28 ) }
    dend_7 { pt3dadd( -29.652, -36.8534, -32.3478, 0.14 ) }
    dend_7 { pt3dadd( -29.9597, -37.5458, -32.2734, 0.1 ) }
    dend_7 { pt3dadd( -30.1396, -37.996, -32.2266, 0.1 ) }
    dend_7 { pt3dadd( -30.3474, -38.7116, -32.1582, 0.14 ) }
    dend_7 { pt3dadd( -30.4231, -39.1843, -32.1177, 0.28 ) }
    dend_7 { pt3dadd( -30.4304, -39.5198, -32.0926, 0.42 ) }
    dend_7 { pt3dadd( -30.3944, -39.8573, -32.0707, 0.98 ) }
    dend_7 { pt3dadd( -30.2588, -40.5117, -32.0332, 0.84 ) }
    dend_7 { pt3dadd( -30.0414, -41.2424, -31.9966, 0.7 ) }
    dend_7 { pt3dadd( -29.8197, -41.8714, -31.9676, 0.56 ) }
    dend_7 { pt3dadd( -29.5514, -42.5948, -31.9354, 0.42 ) }
    dend_7 { pt3dadd( -29.3219, -43.2172, -31.8594, 0.28 ) }
    dend_7 { pt3dadd( -29.0959, -43.8509, -31.7434, 0.14 ) }
    dend_7 { pt3dadd( -28.8614, -44.5497, -31.5804, 0.1 ) }
    dend_7 { pt3dadd( -28.6708, -45.1789, -31.4108, 0.1 ) }
    dend_7 { pt3dadd( -28.4927, -45.8113, -31.2269, 0.1 ) }
    dend_7 { pt3dadd( -28.1651, -47.1016, -30.8334, 0.1 ) }
    dend_7 { pt3dadd( -28.0112, -47.7361, -30.6365, 0.1 ) }
    dend_7 { pt3dadd( -27.8836, -48.3627, -30.4482, 0.1 ) }
    dend_7 { pt3dadd( -27.7802, -49.0123, -30.2717, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_7 { pt3dadd( -27.7038, -49.6691, -30.1257, 0.14 ) }
    dend_7 { pt3dadd( -27.6775, -50.0042, -30.0745, 0.28 ) }
    dend_7 { pt3dadd( -27.6606, -50.3396, -30.0512, 0.7 ) }
    dend_7 { pt3dadd( -27.6343, -51.0854, -29.9987, 0.56 ) }
    dend_7 { pt3dadd( -27.6132, -51.7598, -29.951, 0.42 ) }
    dend_7 { pt3dadd( -27.6043, -52.5176, -29.8962, 0.28 ) }
    dend_7 { pt3dadd( -27.5998, -53.1921, -29.8472, 0.14 ) }
    dend_7 { pt3dadd( -27.5886, -53.8699, -29.7984, 0.1 ) }
    dend_7 { pt3dadd( -27.5769, -54.1939, -29.7756, 0.1 ) }
    dend_7 { pt3dadd( -27.5469, -54.8713, -29.7284, 0.1 ) }
    dend_7 { pt3dadd( -27.5376, -55.3506, -29.694, 0.1 ) }
    dend_7 { pt3dadd( -27.5288, -56.0251, -29.6453, 0.1 ) }
    dend_7 { pt3dadd( -27.5442, -56.7025, -29.5946, 0.1 ) }
    dend_7 { pt3dadd( -27.5705, -57.3646, -29.5441, 0.1 ) }
    dend_7 { pt3dadd( -27.6148, -58.1207, -29.4853, 0.1 ) }
    dend_7 { pt3dadd( -27.6775, -58.8775, -29.4251, 0.1 ) }
    dend_7 { pt3dadd( -27.7463, -59.5396, -29.3713, 0.1 ) }
    dend_7 { pt3dadd( -27.842, -60.2927, -29.3088, 0.1 ) }
    dend_7 { pt3dadd( -27.9334, -60.9603, -29.2529, 0.1 ) }
    dend_7 { pt3dadd( -28.026, -61.6997, -29.1917, 0.14 ) }
    dend_7 { pt3dadd( -28.0946, -62.4537, -29.1312, 0.28 ) }
    dend_7 { pt3dadd( -28.1543, -63.199, -29.072, 0.42 ) }
    dend_7 { pt3dadd( -28.2145, -63.8702, -29.0183, 0.56 ) }
    dend_7 { pt3dadd( -28.2393, -64.208, -28.9916, 0.42 ) }
    dend_7 { pt3dadd( -28.2823, -64.8861, -28.9932, 0.42 ) }
    dend_7 { pt3dadd( -28.3061, -65.5605, -29.0421, 0.56 ) }
    dend_7 { pt3dadd( -28.3103, -66.027, -29.1029, 0.1 ) }
    dend_7 { pt3dadd( -28.3014, -66.7794, -29.2302, 0.1 ) }
    dend_7 { pt3dadd( -28.2874, -67.4485, -29.3554, 0.1 ) }
    dend_7 { pt3dadd( -28.2327, -68.8095, -29.6112, 0.1 ) }
    dend_7 { pt3dadd( -28.2186, -69.144, -29.673, 0.1 ) }
    dend_7 { pt3dadd( -28.1807, -69.7998, -29.7816, 0.7 ) }
    dend_7 { pt3dadd( -28.1223, -70.4723, -29.8692, 0.56 ) }
    dend_7 { pt3dadd( -28.0527, -71.1438, -29.9232, 0.42 ) }
    dend_7 { pt3dadd( -27.9829, -71.8204, -29.9319, 0.42 ) }
    dend_7 { pt3dadd( -27.9291, -72.2829, -29.8644, 0.56 ) }
    dend_7 { pt3dadd( -27.8464, -72.9408, -29.727, 0.56 ) }
    dend_7 { pt3dadd( -27.7643, -73.5952, -29.573, 0.42 ) }
    dend_7 { pt3dadd( -27.6801, -74.2476, -29.3974, 0.28 ) }
    dend_7 { pt3dadd( -27.59, -74.889, -29.1978, 0.14 ) }
    dend_7 { pt3dadd( -27.3782, -76.1796, -28.7299, 0.1 ) }
    dend_7 { pt3dadd( -27.2511, -76.7838, -28.4766, 0.1 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 42/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -28.4789, -34.4714, -32.6127, 0.1 ) }
    dend_6 { pt3dadd( -28.9904, -33.1451, -32.2766, 0.1 ) }
    dend_6 { pt3dadd( -29.2814, -32.5275, -32.1432, 0.1 ) }
    dend_6 { pt3dadd( -29.6094, -31.9338, -32.0286, 0.1 ) }
    dend_6 { pt3dadd( -30.0053, -31.2684, -31.908, 0.1 ) }
    dend_6 { pt3dadd( -30.3727, -30.6935, -31.8135, 0.1 ) }
    dend_6 { pt3dadd( -30.3727, -30.6935, -31.8135, 0.1 ) }
    dend_6 { pt3dadd( -30.9188, -29.8729, -31.7938, 0.1 ) }
    dend_6 { pt3dadd( -31.201, -29.4656, -31.7828, 0.1 ) }
    dend_6 { pt3dadd( -31.201, -29.4656, -31.7828, 0.1 ) }
    dend_6 { pt3dadd( -31.5957, -28.8001, -31.7722, 0.1 ) }
    dend_6 { pt3dadd( -31.9302, -28.1901, -31.7655, 0.1 ) }
    dend_6 { pt3dadd( -32.2301, -27.5595, -31.7636, 0.1 ) }
    dend_6 { pt3dadd( -32.5077, -26.8402, -31.7686, 0.1 ) }
    dend_6 { pt3dadd( -32.7309, -26.1804, -31.7766, 0.1 ) }
    dend_6 { pt3dadd( -32.9225, -25.5306, -31.8437, 0.1 ) }
    dend_6 { pt3dadd( -32.9225, -25.5306, -31.8437, 0.1 ) }
    dend_6 { pt3dadd( -33.0524, -24.8698, -32.0039, 0.1 ) }
    dend_6 { pt3dadd( -33.1531, -24.2071, -32.1898, 0.1 ) }
    dend_6 { pt3dadd( -33.2144, -23.5468, -32.3873, 0.1 ) }
    dend_6 { pt3dadd( -33.3106, -22.1519, -32.8029, 0.1 ) }
    dend_6 { pt3dadd( -33.3488, -21.4986, -32.9868, 0.1 ) }
    dend_6 { pt3dadd( -33.3809, -20.7611, -33.2302, 0.1 ) }
    dend_6 { pt3dadd( -33.4025, -20.1107, -33.466, 0.1 ) }
    dend_6 { pt3dadd( -33.4266, -19.3923, -33.7294, 0.1 ) }
    dend_6 { pt3dadd( -33.4576, -18.7379, -33.9523, 0.1 ) }
    dend_6 { pt3dadd( -33.4935, -18.0699, -34.1409, 0.1 ) }
    dend_6 { pt3dadd( -33.5726, -16.7939, -34.5103, 0.1 ) }
    dend_6 { pt3dadd( -33.6278, -16.1382, -34.6944, 0.1 ) }
    dend_6 { pt3dadd( -33.6921, -15.4713, -34.8662, 0.1 ) }
    dend_6 { pt3dadd( -33.7617, -14.8085, -35.0647, 0.1 ) }
    dend_6 { pt3dadd( -33.8382, -14.0676, -35.2954, 0.1 ) }
    dend_6 { pt3dadd( -33.9092, -13.4152, -35.4868, 0.1 ) }
    dend_6 { pt3dadd( -33.9776, -12.7476, -35.6538, 0.1 ) }
    dend_6 { pt3dadd( -34.0391, -12.0791, -35.8343, 0.1 ) }
    dend_6 { pt3dadd( -34.1662, -10.6774, -36.2216, 0.1 ) }
    dend_6 { pt3dadd( -34.231, -10.0206, -36.3987, 0.1 ) }
    dend_6 { pt3dadd( -34.2993, -9.36533, -36.611, 0.1 ) }
    dend_6 { pt3dadd( -34.3713, -8.63241, -36.8682, 0.1 ) }
    dend_6 { pt3dadd( -34.4368, -7.97883, -37.0975, 0.1 ) }
    dend_6 { pt3dadd( -34.496, -7.32298, -37.3104, 0.1 ) }
    dend_6 { pt3dadd( -34.5564, -6.66589, -37.4878, 0.1 ) }
    dend_6 { pt3dadd( -34.6841, -5.2642, -37.8751, 0.1 ) }
    dend_6 { pt3dadd( -34.7507, -4.59607, -38.0551, 0.1 ) }
    dend_6 { pt3dadd( -34.8199, -3.9409, -38.2673, 0.1 ) }
    dend_6 { pt3dadd( -34.8915, -3.22161, -38.5199, 0.1 ) }
    dend_6 { pt3dadd( -34.9571, -2.5713, -38.7481, 0.1 ) }
    dend_6 { pt3dadd( -35.0143, -1.91426, -38.9691, 0.1 ) }
    dend_6 { pt3dadd( -35.071, -1.25165, -39.1596, 0.1 ) }
    dend_6 { pt3dadd( -35.1824, 0.133978, -39.5806, 0.1 ) }
    dend_6 { pt3dadd( -35.2399, 0.793819, -39.7807, 0.1 ) }
    dend_6 { pt3dadd( -35.3097, 1.45598, -39.9687, 0.1 ) }
    dend_6 { pt3dadd( -35.3464, 1.79156, -40.0513, 0.1 ) }
    dend_6 { pt3dadd( -35.4267, 2.45806, -40.1773, 0.1 ) }
    dend_6 { pt3dadd( -35.5221, 3.13832, -40.2557, 0.1 ) }
    dend_6 { pt3dadd( -35.6253, 3.82078, -40.3359, 0.1 ) }
    dend_6 { pt3dadd( -35.7301, 4.49352, -40.4577, 0.1 ) }
    dend_6 { pt3dadd( -35.8414, 5.16347, -40.6069, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( -35.9603, 5.8252, -40.7712, 0.1 ) }
    dend_6 { pt3dadd( -36.0743, 6.47559, -40.949, 0.1 ) }
    dend_6 { pt3dadd( -36.3155, 7.8615, -41.3433, 0.1 ) }
    dend_6 { pt3dadd( -36.4301, 8.51881, -41.5279, 0.1 ) }
    dend_6 { pt3dadd( -36.5338, 9.18395, -41.7026, 0.1 ) }
    dend_6 { pt3dadd( -36.5804, 9.50815, -41.7765, 0.1 ) }
    dend_6 { pt3dadd( -36.6591, 10.1838, -41.9005, 0.1 ) }
    dend_6 { pt3dadd( -36.7263, 10.8701, -41.9827, 0.1 ) }
    dend_6 { pt3dadd( -36.7889, 11.5578, -42.0099, 0.1 ) }
    dend_6 { pt3dadd( -36.8508, 12.3332, -42.0415, 0.1 ) }
    dend_6 { pt3dadd( -36.8892, 13.014, -42.0711, 0.1 ) }
    dend_6 { pt3dadd( -36.9121, 13.5038, -42.0928, 0.1 ) }
    dend_6 { pt3dadd( -36.9431, 14.1933, -42.1236, 0.1 ) }
    dend_6 { pt3dadd( -36.9815, 14.8858, -42.1537, 0.1 ) }
    dend_6 { pt3dadd( -37.0168, 15.5632, -42.1834, 0.1 ) }
    dend_6 { pt3dadd( -37.0667, 16.3372, -42.2163, 0.1 ) }
    dend_6 { pt3dadd( -37.1139, 17.0258, -42.2453, 0.1 ) }
    dend_6 { pt3dadd( -37.1732, 17.7138, -42.2728, 0.1 ) }
    dend_6 { pt3dadd( -37.2407, 18.3999, -42.3565, 0.1 ) }
    dend_6 { pt3dadd( -37.2807, 18.7356, -42.4209, 0.1 ) }
    dend_6 { pt3dadd( -37.3793, 19.4008, -42.5835, 0.1 ) }
    dend_6 { pt3dadd( -37.5001, 20.061, -42.7668, 0.1 ) }
    dend_6 { pt3dadd( -37.6284, 20.7142, -42.9577, 0.1 ) }
    dend_6 { pt3dadd( -37.9102, 22.0496, -43.3437, 0.1 ) }
    dend_6 { pt3dadd( -38.0549, 22.6917, -43.5175, 0.1 ) }
    dend_6 { pt3dadd( -38.2163, 23.3378, -43.7213, 0.1 ) }
    dend_6 { pt3dadd( -38.3778, 23.9756, -43.94, 0.1 ) }
    dend_6 { pt3dadd( -38.5394, 24.6133, -44.1588, 0.1 ) }
    dend_6 { pt3dadd( -38.7009, 25.2594, -44.3626, 0.1 ) }
    dend_6 { pt3dadd( -38.8592, 25.9122, -44.5322, 0.1 ) }
    dend_6 { pt3dadd( -39.1827, 27.2412, -44.8859, 0.1 ) }
    dend_6 { pt3dadd( -39.341, 27.8939, -45.0554, 0.1 ) }
    dend_6 { pt3dadd( -39.5026, 28.54, -45.2592, 0.1 ) }
    dend_6 { pt3dadd( -39.6642, 29.1768, -45.481, 0.1 ) }
    dend_6 { pt3dadd( -39.8258, 29.8125, -45.7057, 0.1 ) }
    dend_6 { pt3dadd( -39.9873, 30.4562, -45.9173, 0.1 ) }
    dend_6 { pt3dadd( -40.1433, 31.0959, -46.0908, 0.1 ) }
    dend_6 { pt3dadd( -40.4454, 32.3993, -46.5655, 0.1 ) }
    dend_6 { pt3dadd( -40.514, 32.7108, -46.6977, 0.1 ) }
    dend_6 { pt3dadd( -40.6464, 33.3139, -47.0232, 0.1 ) }
    dend_6 { pt3dadd( -40.774, 33.8996, -47.3753, 0.1 ) }
    dend_6 { pt3dadd( -40.8872, 34.4644, -47.7723, 0.1 ) }
    dend_6 { pt3dadd( -41.101, 35.6151, -48.651, 0.1 ) }
    dend_6 { pt3dadd( -41.2177, 36.164, -49.0696, 0.1 ) }
    dend_6 { pt3dadd( -41.5095, 37.2607, -49.9332, 0.1 ) }
    dend_6 { pt3dadd( -41.6862, 37.7888, -50.3592, 0.1 ) }
    dend_6 { pt3dadd( -42.1791, 38.8836, -51.2017, 0.1 ) }
    dend_6 { pt3dadd( -42.1791, 38.8836, -51.2017, 0.1 ) }
    dend_6 { pt3dadd( -42.7312, 39.5704, -51.6528, 0.1 ) }
    dend_6 { pt3dadd( -43.2321, 40.0901, -51.9679, 0.1 ) }
    dend_6 { pt3dadd( -43.5752, 40.404, -52.1146, 0.1 ) }
    dend_6 { pt3dadd( -44.3075, 41.0029, -52.4336, 0.1 ) }
    dend_6 { pt3dadd( -45.3322, 41.7788, -52.8341, 0.1 ) }
    dend_6 { pt3dadd( -45.9338, 42.24, -53.0869, 0.1 ) }
    dend_6 { pt3dadd( -46.2985, 42.5209, -53.2505, 0.1 ) }
    dend_6 { pt3dadd( -46.895, 42.9738, -53.5018, 0.1 ) }
    dend_6 { pt3dadd( -47.9067, 43.7334, -53.9631, 0.1 ) }
    dend_6 { pt3dadd( -48.6596, 44.306, -54.3033, 0.1 ) }
    dend_6 { pt3dadd( -49.2531, 44.757, -54.5378, 0.1 ) }
    dend_6 { pt3dadd( -49.6342, 45.0397, -54.6944, 0.1 ) }
    dend_6 { pt3dadd( -50.3772, 45.615, -54.9995, 0.1 ) }
    dend_6 { pt3dadd( -51.3635, 46.4451, -55.382, 0.1 ) }
    dend_6 { pt3dadd( -51.9135, 46.9931, -55.5593, 0.1 ) }
    dend_6 { pt3dadd( -52.2123, 47.3598, -55.6699, 0.1 ) }
    dend_6 { pt3dadd( -52.2123, 47.3598, -55.6699, 0.1 ) }
    dend_6 { pt3dadd( -52.5373, 47.9687, -55.7803, 0.1 ) }
    dend_6 { pt3dadd( -52.7973, 48.5964, -55.8406, 0.1 ) }
    dend_6 { pt3dadd( -53.0253, 49.2547, -55.848, 0.1 ) }
    dend_6 { pt3dadd( -53.2516, 49.9063, -55.9174, 0.1 ) }
    dend_6 { pt3dadd( -53.3664, 50.2306, -55.9728, 0.1 ) }
    dend_6 { pt3dadd( -53.6329, 50.9235, -56.1833, 0.1 ) }
    dend_6 { pt3dadd( -53.9081, 51.5143, -56.4368, 0.1 ) }
    dend_6 { pt3dadd( -54.2308, 52.0299, -56.7805, 0.1 ) }
    dend_6 { pt3dadd( -54.986, 52.8847, -57.7176, 0.1 ) }
    dend_6 { pt3dadd( -55.3812, 53.2114, -58.2058, 0.1 ) }
    dend_6 { pt3dadd( -56.1752, 53.7082, -59.1191, 0.1 ) }
    dend_6 { pt3dadd( -56.6282, 53.9266, -59.603, 0.1 ) }
    dend_6 { pt3dadd( -57.6264, 54.2957, -60.5827, 0.1 ) }
    dend_6 { pt3dadd( -58.5947, 54.597, -61.4143, 0.1 ) }
    dend_6 { pt3dadd( -59.3911, 54.8439, -61.9558, 0.1 ) }
    dend_6 { pt3dadd( -60.0589, 55.0871, -62.3155, 0.1 ) }
    dend_6 { pt3dadd( -60.4898, 55.2967, -62.4636, 0.1 ) }
    dend_6 { pt3dadd( -60.4898, 55.2967, -62.4636, 0.1 ) }
    dend_6 { pt3dadd( -61.0832, 55.8027, -62.483, 0.1 ) }
    dend_6 { pt3dadd( -61.6438, 56.3426, -62.4478, 0.1 ) }
    dend_6 { pt3dadd( -62.2005, 56.8982, -62.4138, 0.1 ) }
    dend_6 { pt3dadd( -62.5552, 57.2404, -62.3916, 0.1 ) }
    dend_6 { pt3dadd( -63.1537, 57.7525, -62.3508, 0.1 ) }
    dend_6 { pt3dadd( -63.7753, 58.2237, -62.3054, 0.1 ) }
    dend_6 { pt3dadd( -63.7753, 58.2237, -62.3054, 0.1 ) }
    dend_6 { pt3dadd( -64.4697, 58.6008, -62.2473, 0.1 ) }
    dend_6 { pt3dadd( -65.1668, 58.9519, -62.1876, 0.1 ) }
    dend_6 { pt3dadd( -65.8767, 59.3, -62.1264, 0.1 ) }
    dend_6 { pt3dadd( -66.3136, 59.5195, -62.0889, 0.1 ) }
    dend_6 { pt3dadd( -66.6212, 59.6885, -62.0918, 0.1 ) }
    dend_6 { pt3dadd( -67.4628, 60.205, -62.1626, 0.1 ) }
    dend_6 { pt3dadd( -68.1031, 60.6395, -62.3248, 0.1 ) }
    dend_6 { pt3dadd( -68.4824, 60.913, -62.4675, 0.1 ) }
    dend_6 { pt3dadd( -69.0672, 61.3526, -62.7901, 0.1 ) }
    dend_6 { pt3dadd( -70.1055, 62.1593, -63.4664, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -70.4472, 62.4307, -63.71, 0.1 ) }
    dend_6 { pt3dadd( -71.5208, 63.2948, -64.5183, 0.1 ) }
    dend_6 { pt3dadd( -71.8487, 63.5542, -64.7925, 0.1 ) }
    dend_6 { pt3dadd( -72.8239, 64.3165, -65.612, 0.1 ) }
    dend_6 { pt3dadd( -73.3463, 64.7256, -66.0259, 0.1 ) }
    dend_6 { pt3dadd( -73.6914, 65.0015, -66.2595, 0.1 ) }
    dend_6 { pt3dadd( -74.244, 65.4505, -66.5808, 0.1 ) }
    dend_6 { pt3dadd( -75.1484, 66.1786, -67.0549, 0.1 ) }
    dend_6 { pt3dadd( -75.8772, 66.7558, -67.4203, 0.1 ) }
    dend_6 { pt3dadd( -76.479, 67.203, -67.6721, 0.1 ) }
    dend_6 { pt3dadd( -76.8644, 67.4816, -67.8261, 0.1 ) }
    dend_6 { pt3dadd( -77.6353, 68.0348, -68.1036, 0.1 ) }
    dend_6 { pt3dadd( -78.6863, 68.7851, -68.5013, 0.1 ) }
    dend_6 { pt3dadd( -79.3014, 69.2186, -68.7135, 0.1 ) }
    dend_6 { pt3dadd( -79.9107, 69.6473, -68.9461, 0.1 ) }
    dend_6 { pt3dadd( -80.5299, 70.0776, -69.1839, 0.1 ) }
    dend_6 { pt3dadd( -80.9063, 70.339, -69.3548, 0.1 ) }
    dend_6 { pt3dadd( -82.0276, 71.1389, -69.9063, 0.1 ) }
    dend_6 { pt3dadd( -82.6127, 71.5766, -70.1795, 0.1 ) }
    dend_6 { pt3dadd( -83.1904, 72.029, -70.4718, 0.1 ) }
    dend_6 { pt3dadd( -83.5282, 72.3144, -70.6791, 0.1 ) }
    dend_6 { pt3dadd( -84.356, 73.0734, -71.2343, 0.1 ) }
    dend_6 { pt3dadd( -84.8431, 73.554, -71.6265, 0.1 ) }
    dend_6 { pt3dadd( -85.2781, 74.0574, -72.032, 0.1 ) }
    dend_6 { pt3dadd( -85.6472, 74.5812, -72.4736, 0.1 ) }
    dend_6 { pt3dadd( -86.2759, 75.6148, -73.3259, 0.1 ) }
    dend_6 { pt3dadd( -86.5365, 76.127, -73.7009, 0.1 ) }
    dend_6 { pt3dadd( -86.9598, 77.1317, -74.2977, 0.1 ) }
    dend_6 { pt3dadd( -87.1807, 77.7892, -74.6577, 0.1 ) }
    dend_6 { pt3dadd( -87.2972, 78.2286, -74.8645, 0.1 ) }
    dend_6 { pt3dadd( -87.4493, 78.9512, -75.1112, 0.1 ) }
    dend_6 { pt3dadd( -87.5719, 79.6218, -75.2294, 0.1 ) }
    dend_6 { pt3dadd( -87.7021, 80.2892, -75.2971, 0.1 ) }
    dend_6 { pt3dadd( -87.8432, 80.9663, -75.3151, 0.1 ) }
    dend_6 { pt3dadd( -87.9229, 81.3047, -75.3231, 0.1 ) }
    dend_6 { pt3dadd( -88.0988, 81.9742, -75.3368, 0.1 ) }
    dend_6 { pt3dadd( -88.2934, 82.6389, -75.4062, 0.1 ) }
    dend_6 { pt3dadd( -88.5152, 83.2857, -75.5215, 0.1 ) }
    dend_6 { pt3dadd( -88.7713, 83.8884, -75.7272, 0.1 ) }
    dend_6 { pt3dadd( -88.7713, 83.8884, -75.7272, 0.1 ) }
    dend_6 { pt3dadd( -89.1055, 84.4863, -76.1107, 0.1 ) }
    dend_6 { pt3dadd( -89.7705, 85.5249, -76.9111, 0.1 ) }
    dend_6 { pt3dadd( -90.0949, 85.9705, -77.3301, 0.1 ) }
    dend_6 { pt3dadd( -90.7922, 86.8877, -78.2578, 0.1 ) }
    dend_6 { pt3dadd( -91.1142, 87.3174, -78.6898, 0.1 ) }
    dend_6 { pt3dadd( -91.7221, 88.1437, -79.5665, 0.1 ) }
    dend_6 { pt3dadd( -92.0671, 88.6199, -80.0784, 0.1 ) }
    dend_6 { pt3dadd( -92.7196, 89.5644, -81.0091, 0.1 ) }
    dend_6 { pt3dadd( -93.0262, 90.0288, -81.4343, 0.1 ) }
    dend_6 { pt3dadd( -93.3278, 90.5148, -81.843, 0.1 ) }
    dend_6 { pt3dadd( -93.8489, 91.4037, -82.5464, 0.1 ) }
    dend_6 { pt3dadd( -94.1534, 91.9984, -82.9401, 0.1 ) }
    dend_6 { pt3dadd( -94.4063, 92.5451, -83.2662, 0.1 ) }
    dend_6 { pt3dadd( -94.6637, 93.1112, -83.5877, 0.1 ) }
    dend_6 { pt3dadd( -95.2072, 94.2905, -84.2654, 0.1 ) }
    dend_6 { pt3dadd( -95.4639, 94.8647, -84.572, 0.1 ) }
    dend_6 { pt3dadd( -95.7206, 95.4358, -84.8768, 0.1 ) }
    dend_6 { pt3dadd( -95.9736, 96.0002, -85.205, 0.1 ) }
    dend_6 { pt3dadd( -96.5044, 97.1768, -85.8972, 0.1 ) }
    dend_6 { pt3dadd( -96.7526, 97.7457, -86.2129, 0.1 ) }
    dend_6 { pt3dadd( -96.9905, 98.3211, -86.5322, 0.1 ) }
    dend_6 { pt3dadd( -97.4829, 99.4981, -87.2511, 0.1 ) }
    dend_6 { pt3dadd( -97.7231, 100.056, -87.6001, 0.1 ) }
    dend_6 { pt3dadd( -97.9573, 100.609, -87.9276, 0.1 ) }
    dend_6 { pt3dadd( -98.1876, 101.197, -88.2198, 0.1 ) }
    dend_6 { pt3dadd( -98.6829, 102.411, -88.7748, 0.1 ) }
    dend_6 { pt3dadd( -98.6829, 102.411, -88.7748, 0.1 ) }
    dend_6 { pt3dadd( -98.9663, 103.107, -88.9504, 0.1 ) }
    dend_6 { pt3dadd( -99.2369, 103.737, -89.0803, 0.1 ) }
    dend_6 { pt3dadd( -99.5268, 104.352, -89.2253, 0.1 ) }
    dend_6 { pt3dadd( -99.8574, 105.032, -89.383, 0.1 ) }
    dend_6 { pt3dadd( -100.153, 105.653, -89.5066, 0.1 ) }
    dend_6 { pt3dadd( -100.481, 106.335, -89.659, 0.1 ) }
    dend_6 { pt3dadd( -100.773, 106.951, -89.8098, 0.1 ) }
    dend_6 { pt3dadd( -101.386, 108.236, -90.1408, 0.1 ) }
    dend_6 { pt3dadd( -101.669, 108.85, -90.299, 0.1 ) }
    dend_6 { pt3dadd( -101.935, 109.477, -90.4514, 0.1 ) }
    dend_6 { pt3dadd( -102.213, 110.182, -90.5999, 0.1 ) }
    dend_6 { pt3dadd( -102.435, 110.821, -90.7039, 0.1 ) }
    dend_6 { pt3dadd( -102.539, 111.148, -90.7373, 0.1 ) }
    dend_6 { pt3dadd( -102.737, 111.816, -90.7485, 0.1 ) }
    dend_6 { pt3dadd( -102.953, 112.474, -90.7573, 0.1 ) }
    dend_6 { pt3dadd( -103.196, 113.127, -90.7628, 0.1 ) }
    dend_6 { pt3dadd( -103.468, 113.766, -90.7644, 0.1 ) }
    dend_6 { pt3dadd( -103.468, 113.766, -90.7644, 0.1 ) }
    dend_6 { pt3dadd( -103.864, 114.431, -90.7536, 0.1 ) }
    dend_6 { pt3dadd( -104.309, 115.076, -90.7365, 0.1 ) }
    dend_6 { pt3dadd( -104.769, 115.7, -90.7165, 0.1 ) }
    dend_6 { pt3dadd( -105.247, 116.322, -90.6945, 0.1 ) }
    dend_6 { pt3dadd( -105.726, 116.932, -90.6718, 0.1 ) }
    dend_6 { pt3dadd( -106.022, 117.33, -90.6588, 0.1 ) }
    dend_6 { pt3dadd( -106.464, 117.978, -90.6421, 0.1 ) }
    dend_6 { pt3dadd( -106.832, 118.553, -90.6873, 0.1 ) }
    dend_6 { pt3dadd( -106.832, 118.553, -90.6873, 0.1 ) }
    dend_6 { pt3dadd( -107.189, 119.222, -90.9141, 0.1 ) }
    dend_6 { pt3dadd( -107.465, 119.793, -91.1714, 0.1 ) }
    dend_6 { pt3dadd( -107.717, 120.352, -91.5103, 0.1 ) }
    dend_6 { pt3dadd( -108.203, 121.479, -92.3125, 0.1 ) }
    dend_6 { pt3dadd( -108.412, 122.009, -92.7138, 0.1 ) }
    dend_6 { pt3dadd( -108.762, 123.108, -93.5565, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -108.882, 123.648, -93.9802, 0.1 ) }
    dend_6 { pt3dadd( -109.003, 124.776, -94.844, 0.1 ) }
    dend_6 { pt3dadd( -108.992, 125.06, -95.0412, 0.1 ) }
    dend_6 { pt3dadd( -108.839, 125.717, -95.4079, 0.1 ) }
    dend_6 { pt3dadd( -108.61, 126.384, -95.7185, 0.1 ) }
    dend_6 { pt3dadd( -108.445, 126.816, -95.889, 0.1 ) }
    dend_6 { pt3dadd( -108.219, 127.51, -96.162, 0.1 ) }
    dend_6 { pt3dadd( -108.158, 127.953, -96.3678, 0.1 ) }
    dend_6 { pt3dadd( -108.186, 128.251, -96.5489, 0.1 ) }
    dend_6 { pt3dadd( -108.401, 128.87, -96.9763, 0.1 ) }
    dend_6 { pt3dadd( -108.996, 129.978, -97.7335, 0.1 ) }
    dend_6 { pt3dadd( -109.37, 130.524, -98.1417, 0.1 ) }
    dend_6 { pt3dadd( -110.162, 131.521, -98.8894, 0.1 ) }
    dend_6 { pt3dadd( -110.357, 131.743, -99.0739, 0.1 ) }
    dend_6 { pt3dadd( -110.812, 132.237, -99.4881, 0.1 ) }
    dend_6 { pt3dadd( -111.258, 132.709, -99.9197, 0.1 ) }
    dend_6 { pt3dadd( -112.1, 133.62, -100.725, 0.1 ) }
    dend_6 { pt3dadd( -112.549, 134.103, -101.159, 0.1 ) }
    dend_6 { pt3dadd( -113.315, 134.954, -101.869, 0.1 ) }
    dend_6 { pt3dadd( -113.744, 135.432, -102.312, 0.1 ) }
    dend_6 { pt3dadd( -114.529, 136.361, -103.144, 0.1 ) }
    dend_6 { pt3dadd( -114.89, 136.837, -103.516, 0.1 ) }
    dend_6 { pt3dadd( -115.124, 137.209, -103.722, 0.1 ) }
    dend_6 { pt3dadd( -115.409, 137.802, -103.957, 0.1 ) }
    dend_6 { pt3dadd( -115.8, 138.956, -104.177, 0.1 ) }
    dend_6 { pt3dadd( -116.135, 140.325, -104.311, 0.1 ) }
    dend_6 { pt3dadd( -116.274, 141.006, -104.304, 0.1 ) }
    dend_6 { pt3dadd( -116.42, 141.67, -104.287, 0.1 ) }
    dend_6 { pt3dadd( -116.614, 142.423, -104.257, 0.1 ) }
    dend_6 { pt3dadd( -116.828, 143.081, -104.218, 0.1 ) }
    dend_6 { pt3dadd( -116.95, 143.407, -104.194, 0.1 ) }
    dend_6 { pt3dadd( -117.261, 144.113, -104.195, 0.1 ) }
    dend_6 { pt3dadd( -117.61, 144.802, -104.19, 0.1 ) }
    dend_6 { pt3dadd( -117.991, 145.485, -104.182, 0.1 ) }
    dend_6 { pt3dadd( -118.381, 146.153, -104.172, 0.1 ) }
    dend_6 { pt3dadd( -118.72, 146.765, -104.165, 0.1 ) }
    dend_6 { pt3dadd( -118.72, 146.765, -104.165, 0.1 ) }
    dend_6 { pt3dadd( -119.035, 147.469, -104.165, 0.1 ) }
    dend_6 { pt3dadd( -119.279, 148.119, -104.17, 0.1 ) }
    dend_6 { pt3dadd( -119.489, 148.782, -104.18, 0.1 ) }
    dend_6 { pt3dadd( -119.673, 149.45, -104.193, 0.1 ) }
    dend_6 { pt3dadd( -119.673, 149.45, -104.193, 0.1 ) }
    dend_6 { pt3dadd( -119.831, 150.115, -104.208, 0.1 ) }
    dend_6 { pt3dadd( -119.976, 150.791, -104.226, 0.1 ) }
    dend_6 { pt3dadd( -120.106, 151.471, -104.245, 0.1 ) }
    dend_6 { pt3dadd( -120.225, 152.155, -104.266, 0.1 ) }
    dend_6 { pt3dadd( -120.336, 152.837, -104.288, 0.1 ) }
    dend_6 { pt3dadd( -120.443, 153.523, -104.31, 0.1 ) }
    dend_6 { pt3dadd( -120.543, 154.195, -104.332, 0.1 ) }
    dend_6 { pt3dadd( -120.652, 154.964, -104.358, 0.1 ) }
    dend_6 { pt3dadd( -120.744, 155.648, -104.382, 0.1 ) }
    dend_6 { pt3dadd( -120.83, 156.337, -104.407, 0.1 ) }
    dend_6 { pt3dadd( -120.909, 157.012, -104.431, 0.1 ) }
    dend_6 { pt3dadd( -120.948, 157.356, -104.444, 0.1 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 48.4985, -249.805, -27.98, 0.1 ) }
    dend_4 { pt3dadd( 48.5483, -250.132, -28.0958, 0.1 ) }
    dend_4 { pt3dadd( 48.6118, -250.596, -28.2559, 0.1 ) }
    dend_4 { pt3dadd( 48.6668, -251.114, -28.4227, 0.1 ) }
    dend_4 { pt3dadd( 48.7136, -251.587, -28.56, 0.1 ) }
    dend_4 { pt3dadd( 48.7944, -252.589, -28.8239, 0.1 ) }
    dend_4 { pt3dadd( 48.8305, -253.061, -28.9352, 0.1 ) }
    dend_4 { pt3dadd( 48.8826, -253.594, -29.0833, 0.1 ) }
    dend_4 { pt3dadd( 48.9365, -254.112, -29.2429, 0.1 ) }
    dend_4 { pt3dadd( 48.9851, -254.58, -29.3894, 0.1 ) }
    dend_4 { pt3dadd( 49.0254, -255.109, -29.5474, 0.1 ) }
    dend_4 { pt3dadd( 49.0546, -255.586, -29.6655, 0.1 ) }
    dend_4 { pt3dadd( 49.127, -256.586, -29.9179, 0.1 ) }
    dend_4 { pt3dadd( 49.1508, -256.823, -29.9741, 0.14 ) }
    dend_4 { pt3dadd( 49.2061, -257.361, -30.0893, 0.14 ) }
    dend_4 { pt3dadd( 49.2592, -257.896, -30.1844, 0.1 ) }
    dend_4 { pt3dadd( 49.3024, -258.385, -30.2472, 0.1 ) }
    dend_4 { pt3dadd( 49.338, -258.874, -30.2811, 0.1 ) }
    dend_4 { pt3dadd( 49.3719, -259.367, -30.2783, 0.1 ) }
    dend_4 { pt3dadd( 49.4196, -259.911, -30.2707, 0.1 ) }
    dend_4 { pt3dadd( 49.4771, -260.402, -30.2578, 0.1 ) }
    dend_4 { pt3dadd( 49.5627, -260.949, -30.2341, 0.1 ) }
    dend_4 { pt3dadd( 49.6398, -261.429, -30.2125, 0.1 ) }
    dend_4 { pt3dadd( 49.7235, -261.913, -30.1882, 0.1 ) }
    dend_4 { pt3dadd( 49.8168, -262.396, -30.1597, 0.1 ) }
    dend_4 { pt3dadd( 49.9292, -262.877, -30.1636, 0.1 ) }
    dend_4 { pt3dadd( 50.0641, -263.407, -30.2009, 0.1 ) }
    dend_4 { pt3dadd( 50.1576, -263.742, -30.24, 0.1 ) }
    dend_4 { pt3dadd( 50.289, -264.211, -30.3122, 0.1 ) }
    dend_4 { pt3dadd( 50.3972, -264.683, -30.3651, 0.1 ) }
    dend_4 { pt3dadd( 50.587, -265.702, -30.4323, 0.1 ) }
    dend_4 { pt3dadd( 50.6515, -266.192, -30.4446, 0.14 ) }
    dend_4 { pt3dadd( 50.6963, -266.682, -30.4357, 0.1 ) }
    dend_4 { pt3dadd( 50.7276, -267.166, -30.4052, 0.1 ) }
    dend_4 { pt3dadd( 50.7423, -268.199, -30.3047, 0.1 ) }
    dend_4 { pt3dadd( 50.7303, -268.689, -30.237, 0.1 ) }
    dend_4 { pt3dadd( 50.6962, -269.225, -30.1413, 0.1 ) }
    dend_4 { pt3dadd( 50.6606, -269.713, -30.0721, 0.1 ) }
    dend_4 { pt3dadd( 50.6184, -270.264, -30.0225, 0.1 ) }
    dend_4 { pt3dadd( 50.5883, -270.807, -30.004, 0.14 ) }
    dend_4 { pt3dadd( 50.5868, -271.051, -30.0105, 0.1 ) }
    dend_4 { pt3dadd( 50.5833, -271.604, -30.0251, 0.1 ) }
    dend_4 { pt3dadd( 50.5727, -272.095, -30.0413, 0.1 ) }
    dend_4 { pt3dadd( 50.5438, -272.638, -30.0666, 0.1 ) }
    dend_4 { pt3dadd( 50.5295, -273.126, -30.1227, 0.1 ) }
    dend_4 { pt3dadd( 50.5161, -273.616, -30.1853, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_4 { pt3dadd( 50.4972, -274.156, -30.2641, 0.28 ) }
    dend_4 { pt3dadd( 50.4701, -274.844, -30.3838, 0.14 ) }
    dend_4 { pt3dadd( 50.4486, -275.178, -30.4571, 0.1 ) }
    dend_4 { pt3dadd( 50.3762, -276.146, -30.7261, 0.1 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 4/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 48.4985, -249.805, -27.98, 0.1 ) }
    dend_3 { pt3dadd( 48.092, -250.09, -28.1946, 0.1 ) }
    dend_3 { pt3dadd( 47.7039, -250.364, -28.3098, 0.1 ) }
    dend_3 { pt3dadd( 47.2611, -250.663, -28.4083, 0.1 ) }
    dend_3 { pt3dadd( 46.812, -250.966, -28.5003, 0.1 ) }
    dend_3 { pt3dadd( 46.5291, -251.152, -28.5306, 0.1 ) }
    dend_3 { pt3dadd( 46.0671, -251.448, -28.5622, 0.1 ) }
    dend_3 { pt3dadd( 45.2094, -252.02, -28.5731, 0.1 ) }
    dend_3 { pt3dadd( 44.8092, -252.291, -28.5636, 0.1 ) }
    dend_3 { pt3dadd( 44.3524, -252.597, -28.5495, 0.1 ) }
    dend_3 { pt3dadd( 43.514, -253.19, -28.5318, 0.1 ) }
    dend_3 { pt3dadd( 43.3242, -253.344, -28.5446, 0.1 ) }
    dend_3 { pt3dadd( 42.917, -253.699, -28.5905, 0.1 ) }
    dend_3 { pt3dadd( 42.6781, -253.941, -28.6531, 0.1 ) }
    dend_3 { pt3dadd( 42.3363, -254.344, -28.7636, 0.1 ) }
    dend_3 { pt3dadd( 42.0427, -254.773, -28.9251, 0.1 ) }
    dend_3 { pt3dadd( 41.6881, -255.573, -29.3901, 0.1 ) }
    // Section: dend_75, id: dend_75, parent: dend_63 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -17.3194, 72.0281, -6.49287, 0.28 ) }
    dend_75 { pt3dadd( -18.4981, 72.6632, -6.18106, 0.28 ) }
    dend_75 { pt3dadd( -19.0592, 73.0046, -6.06107, 0.14 ) }
    dend_75 { pt3dadd( -19.4151, 73.2325, -5.99666, 0.28 ) }
    dend_75 { pt3dadd( -20.1078, 73.7043, -5.88962, 0.42 ) }
    dend_75 { pt3dadd( -20.4518, 73.9528, -5.84375, 0.42 ) }
    dend_75 { pt3dadd( -20.9866, 74.3603, -5.78139, 0.28 ) }
    dend_75 { pt3dadd( -21.4878, 74.7989, -5.76935, 0.14 ) }
    dend_75 { pt3dadd( -21.7931, 75.0949, -5.76221, 0.1 ) }
    dend_75 { pt3dadd( -22.2468, 75.5802, -5.75189, 0.1 ) }
    dend_75 { pt3dadd( -22.6823, 76.0903, -5.74227, 0.14 ) }
    dend_75 { pt3dadd( -23.1005, 76.6051, -5.73321, 0.28 ) }
    dend_75 { pt3dadd( -23.485, 77.0655, -5.72479, 0.14 ) }
    dend_75 { pt3dadd( -23.7569, 77.3789, -5.71875, 0.1 ) }
    dend_75 { pt3dadd( -24.1701, 77.8151, -5.70932, 0.14 ) }
    dend_75 { pt3dadd( -24.6553, 78.2705, -5.69786, 0.28 ) }
    dend_75 { pt3dadd( -25.166, 78.6974, -5.73077, 0.42 ) }
    dend_75 { pt3dadd( -25.7061, 79.1039, -5.75642, 0.56 ) }
    dend_75 { pt3dadd( -26.0489, 79.3423, -5.76591, 0.42 ) }
    dend_75 { pt3dadd( -26.6037, 79.7271, -5.77055, 0.28 ) }
    dend_75 { pt3dadd( -26.9588, 79.9735, -5.76653, 0.28 ) }
    dend_75 { pt3dadd( -27.8142, 80.6179, -5.73968, 0.42 ) }
    dend_75 { pt3dadd( -28.7738, 81.4334, -5.68987, 0.1 ) }
    dend_75 { pt3dadd( -29.2478, 81.8988, -5.65539, 0.1 ) }
    dend_75 { pt3dadd( -29.6951, 82.3977, -5.61386, 0.1 ) }
    dend_75 { pt3dadd( -30.1106, 82.9125, -5.56709, 0.1 ) }
    dend_75 { pt3dadd( -30.5185, 83.4351, -5.56513, 0.14 ) }
    dend_75 { pt3dadd( -30.7035, 83.6706, -5.57794, 0.28 ) }
    dend_75 { pt3dadd( -31.1207, 84.1754, -5.68476, 0.42 ) }
    dend_75 { pt3dadd( -31.5092, 84.6182, -5.80171, 0.56 ) }
    dend_75 { pt3dadd( -31.9491, 85.0937, -5.95056, 0.7 ) }
    dend_75 { pt3dadd( -32.8069, 85.9694, -6.25093, 0.56 ) }
    dend_75 { pt3dadd( -33.0979, 86.2506, -6.34825, 0.42 ) }
    dend_75 { pt3dadd( -33.7131, 86.8188, -6.52874, 0.42 ) }
    dend_75 { pt3dadd( -34.0125, 87.0982, -6.60373, 0.56 ) }
    dend_75 { pt3dadd( -34.0125, 87.0982, -6.60373, 0.7 ) }
    dend_75 { pt3dadd( -34.4825, 87.5768, -6.6452, 0.56 ) }
    dend_75 { pt3dadd( -34.9202, 88.0741, -6.68904, 0.42 ) }
    dend_75 { pt3dadd( -35.3313, 88.5878, -6.77283, 0.28 ) }
    dend_75 { pt3dadd( -35.6816, 89.0624, -6.87797, 0.14 ) }
    dend_75 { pt3dadd( -36.0614, 89.5888, -7.01151, 0.1 ) }
    dend_75 { pt3dadd( -36.4319, 90.1192, -7.15429, 0.1 ) }
    dend_75 { pt3dadd( -37.077, 91.0876, -7.52429, 0.14 ) }
    dend_75 { pt3dadd( -37.077, 91.0876, -7.52429, 0.28 ) }
    dend_75 { pt3dadd( -37.45, 91.6059, -7.7026, 0.56 ) }
    dend_75 { pt3dadd( -37.8648, 92.1157, -7.79317, 0.42 ) }
    dend_75 { pt3dadd( -38.2673, 92.5612, -7.78428, 0.56 ) }
    dend_75 { pt3dadd( -39.0481, 93.3294, -7.60662, 0.7 ) }
    dend_75 { pt3dadd( -40.0447, 94.1904, -7.24484, 0.14 ) }
    dend_75 { pt3dadd( -40.3652, 94.4446, -7.1234, 0.1 ) }
    dend_75 { pt3dadd( -41.409, 95.2051, -6.67996, 0.1 ) }
    dend_75 { pt3dadd( -41.7369, 95.4212, -6.53608, 0.14 ) }
    dend_75 { pt3dadd( -42.0828, 95.6359, -6.38806, 0.28 ) }
    dend_75 { pt3dadd( -42.7578, 96.0662, -6.11413, 0.42 ) }
    dend_75 { pt3dadd( -43.1054, 96.3003, -6.03115, 0.56 ) }
    dend_75 { pt3dadd( -43.4476, 96.5502, -5.97958, 0.42 ) }
    dend_75 { pt3dadd( -44.1105, 97.0861, -5.96336, 0.7 ) }
    dend_75 { pt3dadd( -44.6143, 97.5305, -6.01734, 0.56 ) }
    dend_75 { pt3dadd( -45.0967, 97.9781, -6.1182, 0.42 ) }
    dend_75 { pt3dadd( -45.0967, 97.9781, -6.1182, 0.28 ) }
    dend_75 { pt3dadd( -45.5592, 98.4245, -6.31803, 0.1 ) }
    dend_75 { pt3dadd( -46.032, 98.8545, -6.50683, 0.1 ) }
    dend_75 { pt3dadd( -46.9726, 99.6471, -6.78443, 0.1 ) }
    dend_75 { pt3dadd( -47.3182, 99.8968, -6.80445, 0.1 ) }
    dend_75 { pt3dadd( -47.8852, 100.24, -6.71572, 0.14 ) }
    dend_75 { pt3dadd( -48.8623, 100.769, -6.39194, 0.28 ) }
    dend_75 { pt3dadd( -49.8507, 101.246, -5.74437, 0.84 ) }
    dend_75 { pt3dadd( -50.6832, 101.65, -4.87689, 0.7 ) }
    dend_75 { pt3dadd( -51.4144, 102.057, -3.91441, 0.84 ) }
    dend_75 { pt3dadd( -51.5667, 102.159, -3.6726, 0.98 ) }
    dend_75 { pt3dadd( -51.6994, 102.262, -3.41981, 1.12 ) }
    dend_75 { pt3dadd( -52.1947, 102.708, -2.33952, 0.56 ) }
    dend_75 { pt3dadd( -52.6862, 103.224, -1.29042, 0.42 ) }
    dend_75 { pt3dadd( -52.9292, 103.506, -0.812716, 0.28 ) }
    dend_75 { pt3dadd( -53.4743, 104.146, 0.132763, 0.28 ) }
    dend_75 { pt3dadd( -54.0227, 104.763, 0.94138, 0.42 ) }
    dend_75 { pt3dadd( -54.0227, 104.763, 0.94138, 0.56 ) }
    dend_75 { pt3dadd( -54.544, 105.289, 1.3557, 0.7 ) }
    dend_75 { pt3dadd( -54.9866, 105.733, 1.58015, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_75 { pt3dadd( -55.273, 106.032, 1.67465, 0.42 ) }
    dend_75 { pt3dadd( -55.7018, 106.536, 1.72801, 0.28 ) }
    dend_75 { pt3dadd( -56.0982, 107.073, 1.78493, 0.14 ) }
    dend_75 { pt3dadd( -56.4197, 107.567, 1.86686, 0.1 ) }
    dend_75 { pt3dadd( -56.7207, 108.131, 2.03783, 0.1 ) }
    dend_75 { pt3dadd( -56.9518, 108.642, 2.2445, 0.1 ) }
    dend_75 { pt3dadd( -57.1506, 109.146, 2.49044, 0.1 ) }
    dend_75 { pt3dadd( -57.5009, 110.15, 3.08763, 0.14 ) }
    dend_75 { pt3dadd( -57.5742, 110.388, 3.25361, 0.28 ) }
    dend_75 { pt3dadd( -57.8518, 111.276, 4.03921, 0.42 ) }
    dend_75 { pt3dadd( -57.9779, 111.69, 4.45295, 0.56 ) }
    dend_75 { pt3dadd( -58.0491, 111.878, 4.67302, 0.56 ) }
    dend_75 { pt3dadd( -58.2112, 112.249, 5.12007, 0.7 ) }
    dend_75 { pt3dadd( -58.3995, 112.612, 5.56361, 0.98 ) }
    dend_75 { pt3dadd( -58.8422, 113.372, 6.46873, 0.84 ) }
    dend_75 { pt3dadd( -59.0723, 113.75, 6.87273, 0.7 ) }
    dend_75 { pt3dadd( -59.5869, 114.536, 7.7208, 0.56 ) }
    dend_75 { pt3dadd( -59.7175, 114.724, 7.91601, 0.42 ) }
    dend_75 { pt3dadd( -60.3029, 115.519, 8.70101, 0.1 ) }
    dend_75 { pt3dadd( -60.6539, 115.935, 9.09984, 0.1 ) }
    dend_75 { pt3dadd( -60.9945, 116.301, 9.41798, 0.14 ) }
    dend_75 { pt3dadd( -61.8851, 117.141, 10.0258, 0.1 ) }
    dend_75 { pt3dadd( -62.1991, 117.408, 10.1342, 0.1 ) }
    dend_75 { pt3dadd( -62.5205, 117.662, 10.2113, 0.1 ) }
    dend_75 { pt3dadd( -63.2101, 118.158, 10.2219, 0.14 ) }
    dend_75 { pt3dadd( -63.2101, 118.158, 10.2219, 0.28 ) }
    dend_75 { pt3dadd( -64.3424, 118.793, 9.77048, 0.84 ) }
    dend_75 { pt3dadd( -65.0946, 119.205, 9.11931, 0.84 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 28/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -17.3194, 72.0281, -6.49287, 0.84 ) }
    dend_64 { pt3dadd( -17.3378, 72.649, -6.47012, 0.84 ) }
    dend_64 { pt3dadd( -17.3705, 73.3339, -6.44693, 0.98 ) }
    dend_64 { pt3dadd( -17.3971, 74.0278, -6.42243, 0.84 ) }
    dend_64 { pt3dadd( -17.4255, 74.6347, -6.40179, 0.84 ) }
    dend_64 { pt3dadd( -17.4635, 75.2548, -6.38209, 0.84 ) }
    dend_64 { pt3dadd( -17.5173, 75.9494, -6.36176, 0.7 ) }
    dend_64 { pt3dadd( -17.58, 76.5677, -6.34593, 0.56 ) }
    dend_64 { pt3dadd( -17.6706, 77.2479, -6.33184, 0.56 ) }
    dend_64 { pt3dadd( -17.7617, 77.8629, -6.32051, 0.56 ) }
    dend_64 { pt3dadd( -17.8521, 78.475, -6.3092, 0.7 ) }
    dend_64 { pt3dadd( -17.9493, 79.0861, -6.29898, 0.84 ) }
    dend_64 { pt3dadd( -18.0712, 79.6961, -6.2926, 0.84 ) }
    dend_64 { pt3dadd( -18.0712, 79.6961, -6.2926, 0.98 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 42/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -25.9348, 64.9577, -42.5239, 1.12 ) }
    dend_58 { pt3dadd( -25.7285, 65.4041, -42.5336, 1.12 ) }
    dend_58 { pt3dadd( -25.4766, 65.907, -42.5443, 0.98 ) }
    dend_58 { pt3dadd( -25.201, 66.3896, -42.554, 0.84 ) }
    dend_58 { pt3dadd( -25.0144, 66.6931, -42.56, 0.7 ) }
    dend_58 { pt3dadd( -24.6993, 67.1604, -42.5687, 0.56 ) }
    dend_58 { pt3dadd( -24.3676, 67.6092, -42.5766, 0.7 ) }
    dend_58 { pt3dadd( -23.9984, 68.0391, -42.5835, 0.1 ) }
    dend_58 { pt3dadd( -23.608, 68.4402, -42.5893, 0.14 ) }
    dend_58 { pt3dadd( -23.3447, 68.6815, -42.6186, 0.1 ) }
    dend_58 { pt3dadd( -22.929, 69.0499, -42.6966, 0.1 ) }
    dend_58 { pt3dadd( -22.5117, 69.4104, -42.8001, 0.1 ) }
    dend_58 { pt3dadd( -22.2472, 69.6465, -42.8783, 0.1 ) }
    dend_58 { pt3dadd( -21.8432, 70.0129, -43.0097, 0.1 ) }
    dend_58 { pt3dadd( -21.1032, 70.7339, -43.2612, 0.14 ) }
    dend_58 { pt3dadd( -20.7247, 71.1226, -43.389, 0.42 ) }
    dend_58 { pt3dadd( -20.4893, 71.3808, -43.4665, 0.28 ) }
    dend_58 { pt3dadd( -20.0322, 71.91, -43.598, 0.14 ) }
    dend_58 { pt3dadd( -19.8051, 72.1812, -43.6489, 0.1 ) }
    dend_58 { pt3dadd( -19.3634, 72.7291, -43.7102, 0.1 ) }
    dend_58 { pt3dadd( -19.135, 73.0094, -43.7149, 0.1 ) }
    dend_58 { pt3dadd( -18.9138, 73.2797, -43.7194, 0.1 ) }
    dend_58 { pt3dadd( -18.4836, 73.8395, -43.729, 0.1 ) }
    dend_58 { pt3dadd( -18.2816, 74.1309, -43.7674, 0.14 ) }
    dend_58 { pt3dadd( -18.0978, 74.4336, -43.8365, 0.28 ) }
    dend_58 { pt3dadd( -17.9879, 74.648, -43.9016, 0.42 ) }
    dend_58 { pt3dadd( -17.7908, 75.0678, -44.0937, 0.1 ) }
    dend_58 { pt3dadd( -17.5923, 75.5248, -44.3396, 0.14 ) }
    dend_58 { pt3dadd( -17.2301, 76.3864, -44.8414, 0.1 ) }
    dend_58 { pt3dadd( -17.0394, 76.84, -45.1001, 0.1 ) }
    dend_58 { pt3dadd( -16.9463, 77.044, -45.2107, 0.1 ) }
    dend_58 { pt3dadd( -16.496, 77.9556, -45.7308, 0.14 ) }
    dend_58 { pt3dadd( -16.2528, 78.3943, -45.9915, 0.1 ) }
    dend_58 { pt3dadd( -16.0844, 78.6733, -46.1487, 0.1 ) }
    dend_58 { pt3dadd( -15.8035, 79.1051, -46.3586, 0.1 ) }
    dend_58 { pt3dadd( -15.4962, 79.5352, -46.5587, 0.1 ) }
    dend_58 { pt3dadd( -14.8951, 80.3418, -46.8824, 0.1 ) }
    dend_58 { pt3dadd( -14.6807, 80.6151, -46.9663, 0.14 ) }
    dend_58 { pt3dadd( -14.2399, 81.1461, -47.1202, 0.28 ) }
    dend_58 { pt3dadd( -14.0089, 81.4167, -47.1865, 0.42 ) }
    dend_58 { pt3dadd( -13.6432, 81.8325, -47.2649, 0.56 ) }
    dend_58 { pt3dadd( -13.2723, 82.2563, -47.3123, 0.42 ) }
    dend_58 { pt3dadd( -12.8996, 82.6731, -47.3188, 0.28 ) }
    dend_58 { pt3dadd( -12.6662, 82.9438, -47.3231, 0.14 ) }
    dend_58 { pt3dadd( -12.2114, 83.4902, -47.332, 0.1 ) }
    dend_58 { pt3dadd( -11.9968, 83.7641, -47.3616, 0.1 ) }
    dend_58 { pt3dadd( -11.787, 84.0482, -47.4133, 0.1 ) }
    dend_58 { pt3dadd( -11.3932, 84.6087, -47.6026, 0.1 ) }
    dend_58 { pt3dadd( -11.1036, 85.0505, -47.8025, 0.1 ) }
    dend_58 { pt3dadd( -10.9306, 85.3195, -47.9437, 0.1 ) }
    dend_58 { pt3dadd( -10.4182, 86.1251, -48.4093, 0.1 ) }
    dend_58 { pt3dadd( -10.2434, 86.3952, -48.5654, 0.1 ) }
    dend_58 { pt3dadd( -9.71555, 87.1916, -49.0169, 0.1 ) }
    dend_58 { pt3dadd( -9.53153, 87.4672, -49.1623, 0.1 ) }
    dend_58 { pt3dadd( -9.14708, 88.0085, -49.4052, 0.1 ) }
    dend_58 { pt3dadd( -8.94553, 88.2888, -49.4966, 0.1 ) }
    dend_58 { pt3dadd( -8.53247, 88.8476, -49.6455, 0.1 ) }
    dend_58 { pt3dadd( -8.3201, 89.1247, -49.7206, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_58 { pt3dadd( -7.99073, 89.5602, -49.8245, 0.1 ) }
    dend_58 { pt3dadd( -7.67267, 90.0087, -49.9519, 0.1 ) }
    dend_58 { pt3dadd( -7.38641, 90.45, -50.1365, 0.1 ) }
    dend_58 { pt3dadd( -6.92629, 91.2071, -50.5208, 0.1 ) }
    dend_58 { pt3dadd( -6.82076, 91.3961, -50.6472, 0.1 ) }
    dend_58 { pt3dadd( -6.62618, 91.7701, -50.9232, 0.1 ) }
    dend_58 { pt3dadd( -6.40884, 92.1847, -51.2421, 0.1 ) }
    dend_58 { pt3dadd( -6.00032, 92.9991, -51.7792, 0.1 ) }
    dend_58 { pt3dadd( -5.85258, 93.2861, -51.932, 0.1 ) }
    dend_58 { pt3dadd( -5.38474, 94.1987, -52.188, 0.1 ) }
    dend_58 { pt3dadd( -5.12725, 94.6877, -52.2457, 0.1 ) }
    dend_58 { pt3dadd( -4.84484, 95.1672, -52.2191, 0.1 ) }
    dend_58 { pt3dadd( -4.30829, 96.0673, -52.0765, 0.1 ) }
    dend_58 { pt3dadd( -4.13006, 96.3648, -51.9933, 0.1 ) }
    dend_58 { pt3dadd( -3.58998, 97.2327, -51.7316, 0.1 ) }
    dend_58 { pt3dadd( -3.39244, 97.5138, -51.6335, 0.14 ) }
    dend_58 { pt3dadd( -3.23465, 97.7067, -51.5909, 0.14 ) }
    dend_58 { pt3dadd( -2.52619, 98.4482, -51.5726, 0.28 ) }
    dend_58 { pt3dadd( -2.25173, 98.6751, -51.6173, 0.28 ) }
    dend_58 { pt3dadd( -1.79649, 98.9938, -51.7041, 0.14 ) }
    dend_58 { pt3dadd( -1.3717, 99.2592, -51.7962, 0.1 ) }
    dend_58 { pt3dadd( -0.887864, 99.5387, -51.8703, 0.1 ) }
    dend_58 { pt3dadd( -0.3892, 99.7995, -51.9103, 0.1 ) }
    dend_58 { pt3dadd( 0.072458, 100.018, -51.9098, 0.1 ) }
    dend_58 { pt3dadd( 0.588799, 100.247, -51.9088, 0.1 ) }
    dend_58 { pt3dadd( 0.919374, 100.393, -51.9081, 0.14 ) }
    dend_58 { pt3dadd( 1.15403, 100.494, -51.9076, 0.28 ) }
    dend_58 { pt3dadd( 1.62307, 100.686, -51.9505, 0.7 ) }
    dend_58 { pt3dadd( 1.95685, 100.814, -52.0056, 0.56 ) }
    dend_58 { pt3dadd( 2.42305, 100.992, -52.1059, 0.42 ) }
    dend_58 { pt3dadd( 2.94339, 101.177, -52.2307, 0.28 ) }
    dend_58 { pt3dadd( 3.41577, 101.336, -52.349, 0.14 ) }
    dend_58 { pt3dadd( 4.40155, 101.665, -52.609, 0.1 ) }
    dend_58 { pt3dadd( 4.86734, 101.834, -52.7374, 0.1 ) }
    dend_58 { pt3dadd( 5.3791, 102.033, -52.8738, 0.1 ) }
    dend_58 { pt3dadd( 5.82332, 102.235, -53.0252, 0.1 ) }
    dend_58 { pt3dadd( 6.0358, 102.345, -53.1066, 0.1 ) }
    dend_58 { pt3dadd( 6.0358, 102.345, -53.1066, 0.1 ) }
    dend_58 { pt3dadd( 6.44484, 102.655, -53.353, 0.1 ) }
    dend_58 { pt3dadd( 6.80343, 102.992, -53.6246, 0.1 ) }
    dend_58 { pt3dadd( 7.36254, 103.623, -54.1052, 0.1 ) }
    dend_58 { pt3dadd( 7.66774, 104.015, -54.3794, 0.1 ) }
    dend_58 { pt3dadd( 8.16565, 104.691, -54.8621, 0.14 ) }
    dend_58 { pt3dadd( 8.44905, 105.084, -55.1389, 0.1 ) }
    dend_58 { pt3dadd( 8.72275, 105.48, -55.4409, 0.1 ) }
    dend_58 { pt3dadd( 8.97893, 105.877, -55.7374, 0.14 ) }
    dend_58 { pt3dadd( 9.14867, 106.138, -55.9142, 0.28 ) }
    dend_58 { pt3dadd( 9.70061, 106.975, -56.4721, 0.14 ) }
    dend_58 { pt3dadd( 9.88601, 107.238, -56.6296, 0.1 ) }
    dend_58 { pt3dadd( 10.4782, 107.988, -57.0837, 0.1 ) }
    dend_58 { pt3dadd( 10.6945, 108.24, -57.2295, 0.1 ) }
    dend_58 { pt3dadd( 11.0418, 108.634, -57.4245, 0.1 ) }
    dend_58 { pt3dadd( 11.2694, 108.893, -57.5201, 0.1 ) }
    dend_58 { pt3dadd( 11.7297, 109.42, -57.6206, 0.1 ) }
    dend_58 { pt3dadd( 12.0969, 109.856, -57.6678, 0.1 ) }
    dend_58 { pt3dadd( 12.3184, 110.126, -57.6723, 0.1 ) }
    dend_58 { pt3dadd( 12.6588, 110.573, -57.72, 0.1 ) }
    dend_58 { pt3dadd( 12.8582, 110.864, -57.7715, 0.1 ) }
    dend_58 { pt3dadd( 13.236, 111.45, -57.9058, 0.1 ) }
    dend_58 { pt3dadd( 13.5119, 111.915, -58.0303, 0.1 ) }
    dend_58 { pt3dadd( 13.6772, 112.219, -58.1161, 0.1 ) }
    dend_58 { pt3dadd( 14.1673, 113.119, -58.3812, 0.1 ) }
    dend_58 { pt3dadd( 14.4308, 113.594, -58.4902, 0.1 ) }
    dend_58 { pt3dadd( 14.6103, 113.904, -58.535, 0.1 ) }
    dend_58 { pt3dadd( 14.9106, 114.37, -58.5529, 0.1 ) }
    dend_58 { pt3dadd( 15.2529, 114.819, -58.5137, 0.1 ) }
    dend_58 { pt3dadd( 15.4101, 115.002, -58.4745, 0.14 ) }
    dend_58 { pt3dadd( 16.0725, 115.667, -58.2412, 0.28 ) }
    dend_58 { pt3dadd( 16.4884, 116.021, -58.1099, 0.14 ) }
    dend_58 { pt3dadd( 16.9102, 116.365, -57.9477, 0.1 ) }
    dend_58 { pt3dadd( 17.3093, 116.698, -57.7317, 0.1 ) }
    dend_58 { pt3dadd( 17.5403, 116.906, -57.5498, 0.1 ) }
    dend_58 { pt3dadd( 17.8635, 117.243, -57.2359, 0.1 ) }
    dend_58 { pt3dadd( 18.1127, 117.553, -56.9183, 0.14 ) }
    dend_58 { pt3dadd( 18.5436, 118.179, -56.2182, 0.1 ) }
    dend_58 { pt3dadd( 18.9527, 118.854, -55.4994, 0.1 ) }
    dend_58 { pt3dadd( 19.3033, 119.5, -54.8629, 0.1 ) }
    dend_58 { pt3dadd( 19.4973, 119.888, -54.5078, 0.1 ) }
    dend_58 { pt3dadd( 19.8061, 120.607, -53.7816, 0.1 ) }
    dend_58 { pt3dadd( 19.914, 120.789, -54.0702, 0.14 ) }
    dend_58 { pt3dadd( 20.496, 121.778, -55.4944, 0.28 ) }
    dend_58 { pt3dadd( 20.8001, 122.28, -56.2738, 0.14 ) }
    dend_58 { pt3dadd( 21.1144, 122.778, -57.0519, 0.28 ) }
    dend_58 { pt3dadd( 21.2002, 122.905, -57.2568, 0.42 ) }
    dend_58 { pt3dadd( 21.3993, 123.193, -57.6956, 0.14 ) }
    dend_58 { pt3dadd( 21.6314, 123.547, -58.0782, 0.1 ) }
    dend_58 { pt3dadd( 21.7949, 123.812, -58.2373, 0.1 ) }
    dend_58 { pt3dadd( 22.1244, 124.402, -58.4789, 0.1 ) }
    dend_58 { pt3dadd( 22.5464, 125.226, -58.7334, 0.1 ) }
    dend_58 { pt3dadd( 22.7775, 125.709, -58.9099, 0.1 ) }
    dend_58 { pt3dadd( 22.994, 126.184, -59.1032, 0.1 ) }
    dend_58 { pt3dadd( 23.0863, 126.401, -59.1925, 0.1 ) }
    dend_58 { pt3dadd( 23.288, 126.889, -59.3884, 0.1 ) }
    dend_58 { pt3dadd( 23.4754, 127.381, -59.5675, 0.1 ) }
    dend_58 { pt3dadd( 23.8286, 128.336, -59.8446, 0.1 ) }
    dend_58 { pt3dadd( 24.0068, 128.842, -59.9895, 0.1 ) }
    dend_58 { pt3dadd( 24.1822, 129.359, -60.1258, 0.1 ) }
    dend_58 { pt3dadd( 24.2599, 129.592, -60.178, 0.1 ) }
    dend_58 { pt3dadd( 24.4002, 130.065, -60.2591, 0.1 ) }
    dend_58 { pt3dadd( 24.5426, 130.596, -60.3139, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_58 { pt3dadd( 24.6636, 131.081, -60.326, 0.1 ) }
    dend_58 { pt3dadd( 24.7874, 131.619, -60.3395, 0.1 ) }
    dend_58 { pt3dadd( 24.8988, 132.171, -60.3536, 0.1 ) }
    dend_58 { pt3dadd( 24.9833, 132.666, -60.3665, 0.1 ) }
    dend_58 { pt3dadd( 25.0759, 133.212, -60.3807, 0.1 ) }
    dend_58 { pt3dadd( 25.1678, 133.766, -60.3952, 0.1 ) }
    dend_58 { pt3dadd( 25.2129, 134.01, -60.4015, 0.1 ) }
    dend_58 { pt3dadd( 25.3099, 134.5, -60.4521, 0.14 ) }
    dend_58 { pt3dadd( 25.4083, 134.984, -60.534, 0.1 ) }
    dend_58 { pt3dadd( 25.5276, 135.511, -60.65, 0.1 ) }
    dend_58 { pt3dadd( 25.6443, 136.046, -60.7857, 0.1 ) }
    dend_58 { pt3dadd( 25.7186, 136.374, -60.874, 0.1 ) }
    dend_58 { pt3dadd( 25.9455, 137.369, -61.1412, 0.1 ) }
    dend_58 { pt3dadd( 26.0568, 137.841, -61.2638, 0.1 ) }
    dend_58 { pt3dadd( 26.1803, 138.366, -61.3882, 0.1 ) }
    dend_58 { pt3dadd( 26.282, 138.845, -61.4875, 0.1 ) }
    dend_58 { pt3dadd( 26.3905, 139.382, -61.6137, 0.1 ) }
    dend_58 { pt3dadd( 26.4772, 139.853, -61.7241, 0.1 ) }
    dend_58 { pt3dadd( 26.5688, 140.397, -61.8366, 0.1 ) }
    dend_58 { pt3dadd( 26.6505, 140.929, -61.9657, 0.1 ) }
    dend_58 { pt3dadd( 26.6844, 141.173, -62.0125, 0.1 ) }
    dend_58 { pt3dadd( 26.8334, 142.208, -62.1515, 0.1 ) }
    dend_58 { pt3dadd( 26.8964, 142.705, -62.1897, 0.1 ) }
    dend_58 { pt3dadd( 26.9667, 143.2, -62.2025, 0.1 ) }
    dend_58 { pt3dadd( 27.0322, 143.689, -62.1857, 0.14 ) }
    dend_58 { pt3dadd( 27.1633, 144.73, -62.0825, 0.1 ) }
    dend_58 { pt3dadd( 27.2302, 145.286, -62.0374, 0.1 ) }
    dend_58 { pt3dadd( 27.2789, 145.773, -61.9973, 0.1 ) }
    dend_58 { pt3dadd( 27.3177, 146.123, -62.0418, 0.1 ) }
    dend_58 { pt3dadd( 27.3775, 146.598, -62.196, 0.1 ) }
    dend_58 { pt3dadd( 27.4402, 147.031, -62.4446, 0.1 ) }
    dend_58 { pt3dadd( 27.5584, 147.855, -63.0524, 0.1 ) }
    dend_58 { pt3dadd( 27.6201, 148.251, -63.3585, 0.1 ) }
    dend_58 { pt3dadd( 27.7721, 149.086, -63.99, 0.1 ) }
    dend_58 { pt3dadd( 27.8647, 149.556, -64.2924, 0.1 ) }
    dend_58 { pt3dadd( 28.0931, 150.459, -64.7861, 0.1 ) }
    dend_58 { pt3dadd( 28.1578, 150.683, -64.8748, 0.1 ) }
    dend_58 { pt3dadd( 28.3252, 151.216, -64.9297, 0.1 ) }
    dend_58 { pt3dadd( 28.4952, 151.741, -64.8705, 0.1 ) }
    dend_58 { pt3dadd( 28.784, 152.714, -64.5794, 0.1 ) }
    dend_58 { pt3dadd( 28.8721, 153.02, -64.4361, 0.1 ) }
    dend_58 { pt3dadd( 28.9979, 153.437, -64.1834, 0.1 ) }
    dend_58 { pt3dadd( 29.2445, 154.306, -63.6262, 0.1 ) }
    dend_58 { pt3dadd( 29.3554, 154.766, -63.3285, 0.1 ) }
    dend_58 { pt3dadd( 29.4399, 155.204, -63.0919, 0.1 ) }
    dend_58 { pt3dadd( 29.5587, 156.107, -62.7775, 0.14 ) }
    dend_58 { pt3dadd( 29.5748, 156.345, -62.7485, 0.28 ) }
    dend_58 { pt3dadd( 29.5788, 156.902, -62.8331, 0.1 ) }
    dend_58 { pt3dadd( 29.5536, 157.319, -63.0975, 0.1 ) }
    dend_58 { pt3dadd( 29.4793, 158.106, -63.765, 0.1 ) }
    dend_58 { pt3dadd( 29.4484, 158.469, -64.1156, 0.1 ) }
    dend_58 { pt3dadd( 29.387, 159.195, -64.852, 0.1 ) }
    dend_58 { pt3dadd( 29.366, 159.556, -65.2063, 0.14 ) }
    dend_58 { pt3dadd( 29.3467, 160.919, -66.4921, 0.28 ) }
    dend_58 { pt3dadd( 29.3552, 161.298, -66.812, 0.28 ) }
    dend_58 { pt3dadd( 29.3715, 161.591, -67.0175, 0.14 ) }
    dend_58 { pt3dadd( 29.4066, 162.024, -67.2696, 0.1 ) }
    dend_58 { pt3dadd( 29.4667, 162.541, -67.4589, 0.1 ) }
    dend_58 { pt3dadd( 29.5415, 163.025, -67.5594, 0.1 ) }
    dend_58 { pt3dadd( 29.6362, 163.578, -67.5738, 0.1 ) }
    dend_58 { pt3dadd( 29.6362, 163.578, -67.5738, 0.1 ) }
    dend_58 { pt3dadd( 29.7187, 164.071, -67.5867, 0.1 ) }
    dend_58 { pt3dadd( 29.8219, 164.614, -67.6007, 0.1 ) }
    dend_58 { pt3dadd( 29.9251, 165.167, -67.6149, 0.1 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 64/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -25.9348, 64.9577, -42.5239, 0.7 ) }
    dend_57 { pt3dadd( -26.4774, 65.2884, -42.8272, 0.7 ) }
    dend_57 { pt3dadd( -26.8977, 65.5754, -43.0668, 0.56 ) }
    dend_57 { pt3dadd( -27.1607, 65.7637, -43.2059, 0.42 ) }
    dend_57 { pt3dadd( -27.5823, 66.0711, -43.4144, 0.28 ) }
    dend_57 { pt3dadd( -28.3687, 66.667, -43.7758, 0.14 ) }
    dend_57 { pt3dadd( -28.6326, 66.876, -43.8885, 0.1 ) }
    dend_57 { pt3dadd( -29.0403, 67.2232, -44.0569, 0.1 ) }
    dend_57 { pt3dadd( -29.5431, 67.686, -44.2443, 0.14 ) }
    dend_57 { pt3dadd( -29.786, 67.921, -44.3194, 0.1 ) }
    dend_57 { pt3dadd( -30.1678, 68.3098, -44.4458, 0.1 ) }
    dend_57 { pt3dadd( -30.5385, 68.7035, -44.5618, 0.1 ) }
    dend_57 { pt3dadd( -30.766, 68.9647, -44.6509, 0.1 ) }
    dend_57 { pt3dadd( -31.1008, 69.3763, -44.8047, 0.1 ) }
    dend_57 { pt3dadd( -31.4182, 69.7981, -44.9658, 0.1 ) }
    dend_57 { pt3dadd( -31.9602, 70.5306, -45.2476, 0.1 ) }
    dend_57 { pt3dadd( -32.235, 70.9041, -45.4261, 0.14 ) }
    dend_57 { pt3dadd( -32.532, 71.3187, -45.6537, 0.28 ) }
    dend_57 { pt3dadd( -32.8174, 71.7268, -45.8932, 0.14 ) }
    dend_57 { pt3dadd( -33.0947, 72.138, -46.1364, 0.1 ) }
    dend_57 { pt3dadd( -33.2725, 72.4065, -46.2808, 0.14 ) }
    dend_57 { pt3dadd( -33.7541, 73.1675, -46.5961, 0.28 ) }
    dend_57 { pt3dadd( -33.9202, 73.4477, -46.7421, 0.42 ) }
    dend_57 { pt3dadd( -34.1448, 73.8887, -46.9848, 0.7 ) }
    dend_57 { pt3dadd( -34.3241, 74.3002, -47.1997, 0.56 ) }
    dend_57 { pt3dadd( -34.5006, 74.7544, -47.456, 0.42 ) }
    dend_57 { pt3dadd( -34.6495, 75.1718, -47.682, 0.28 ) }
    dend_57 { pt3dadd( -34.9548, 76.0656, -48.1164, 0.14 ) }
    dend_57 { pt3dadd( -35.0949, 76.4802, -48.3477, 0.1 ) }
    dend_57 { pt3dadd( -35.2229, 76.891, -48.5978, 0.1 ) }
    dend_57 { pt3dadd( -35.4775, 77.7478, -49.1319, 0.1 ) }
    dend_57 { pt3dadd( -35.5992, 78.1607, -49.3815, 0.1 ) }
    dend_57 { pt3dadd( -35.7265, 78.5776, -49.6158, 0.1 ) }
    dend_57 { pt3dadd( -36.0232, 79.4785, -50.0407, 0.1 ) }
    dend_57 { pt3dadd( -36.1765, 79.9092, -50.2351, 0.1 ) }
    dend_57 { pt3dadd( -36.3477, 80.3414, -50.4034, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_57 { pt3dadd( -36.5582, 80.8372, -50.5361, 0.1 ) }
    dend_57 { pt3dadd( -36.6567, 81.0572, -50.584, 0.1 ) }
    dend_57 { pt3dadd( -36.883, 81.5587, -50.653, 0.1 ) }
    dend_57 { pt3dadd( -36.883, 81.5587, -50.653, 0.1 ) }
    dend_57 { pt3dadd( -37.0932, 82.0543, -50.7582, 0.1 ) }
    dend_57 { pt3dadd( -37.26, 82.4914, -50.917, 0.1 ) }
    dend_57 { pt3dadd( -37.4172, 82.9079, -51.1186, 0.1 ) }
    dend_57 { pt3dadd( -37.5826, 83.3159, -51.3458, 0.1 ) }
    dend_57 { pt3dadd( -37.9486, 84.1508, -51.858, 0.14 ) }
    dend_57 { pt3dadd( -38.1297, 84.5258, -52.1288, 0.28 ) }
    dend_57 { pt3dadd( -38.4728, 85.1625, -52.6432, 0.42 ) }
    dend_57 { pt3dadd( -38.758, 85.6273, -53.0899, 0.1 ) }
    dend_57 { pt3dadd( -38.999, 85.98, -53.4528, 0.1 ) }
    dend_57 { pt3dadd( -39.1561, 86.1832, -53.6864, 0.1 ) }
    dend_57 { pt3dadd( -39.634, 86.769, -54.4211, 0.1 ) }
    dend_57 { pt3dadd( -39.8864, 87.0639, -54.8192, 0.1 ) }
    dend_57 { pt3dadd( -40.3303, 87.5807, -55.4964, 0.1 ) }
    dend_57 { pt3dadd( -40.5805, 87.8796, -55.8927, 0.1 ) }
    dend_57 { pt3dadd( -41.0681, 88.4599, -56.6269, 0.14 ) }
    dend_57 { pt3dadd( -41.5814, 89.0611, -57.3187, 0.1 ) }
    dend_57 { pt3dadd( -41.7607, 89.2711, -57.5418, 0.1 ) }
    dend_57 { pt3dadd( -42.0503, 89.6075, -57.8747, 0.1 ) }
    dend_57 { pt3dadd( -42.345, 89.9509, -58.1957, 0.1 ) }
    dend_57 { pt3dadd( -42.627, 90.2935, -58.5495, 0.1 ) }
    dend_57 { pt3dadd( -42.7968, 90.5051, -58.7658, 0.14 ) }
    dend_57 { pt3dadd( -43.2323, 91.0314, -59.3916, 0.28 ) }
    dend_57 { pt3dadd( -43.5483, 91.4057, -59.8959, 0.28 ) }
    dend_57 { pt3dadd( -43.9864, 91.8823, -60.6069, 0.14 ) }
    dend_57 { pt3dadd( -44.4832, 92.3901, -61.3839, 0.1 ) }
    dend_57 { pt3dadd( -44.667, 92.5611, -61.6423, 0.1 ) }
    dend_57 { pt3dadd( -45.307, 93.1093, -62.4066, 0.1 ) }
    dend_57 { pt3dadd( -45.5246, 93.2846, -62.6269, 0.1 ) }
    dend_57 { pt3dadd( -45.8759, 93.5696, -62.9489, 0.1 ) }
    dend_57 { pt3dadd( -46.2591, 93.8732, -63.2261, 0.14 ) }
    dend_57 { pt3dadd( -46.6505, 94.1855, -63.4607, 0.1 ) }
    dend_57 { pt3dadd( -46.8892, 94.3949, -63.6193, 0.1 ) }
    dend_57 { pt3dadd( -47.5343, 95.0398, -64.1452, 0.1 ) }
    dend_57 { pt3dadd( -47.8429, 95.3844, -64.4625, 0.14 ) }
    dend_57 { pt3dadd( -48.0159, 95.6005, -64.6713, 0.1 ) }
    dend_57 { pt3dadd( -48.2811, 95.9548, -65.0154, 0.1 ) }
    dend_57 { pt3dadd( -48.7475, 96.6516, -65.6434, 0.14 ) }
    dend_57 { pt3dadd( -49.2162, 97.3807, -66.2298, 0.28 ) }
    dend_57 { pt3dadd( -49.2162, 97.3807, -66.2298, 0.42 ) }
    dend_57 { pt3dadd( -49.455, 97.8022, -66.5071, 0.28 ) }
    dend_57 { pt3dadd( -49.6782, 98.235, -66.7659, 0.14 ) }
    dend_57 { pt3dadd( -49.8711, 98.6431, -66.9702, 0.1 ) }
    dend_57 { pt3dadd( -50.0824, 99.1266, -67.1434, 0.1 ) }
    dend_57 { pt3dadd( -50.2583, 99.5705, -67.2688, 0.1 ) }
    dend_57 { pt3dadd( -50.6139, 100.513, -67.5267, 0.1 ) }
    dend_57 { pt3dadd( -50.7699, 100.966, -67.6446, 0.1 ) }
    dend_57 { pt3dadd( -50.9092, 101.418, -67.7842, 0.1 ) }
    dend_57 { pt3dadd( -51.0401, 101.871, -67.9369, 0.1 ) }
    dend_57 { pt3dadd( -51.1671, 102.323, -68.0908, 0.1 ) }
    dend_57 { pt3dadd( -51.3245, 102.828, -68.254, 0.1 ) }
    dend_57 { pt3dadd( -51.4658, 103.275, -68.4102, 0.1 ) }
    dend_57 { pt3dadd( -51.7714, 104.155, -68.791, 0.1 ) }
    dend_57 { pt3dadd( -51.849, 104.368, -68.8932, 0.1 ) }
    dend_57 { pt3dadd( -52.022, 104.825, -69.1588, 0.1 ) }
    dend_57 { pt3dadd( -52.2015, 105.272, -69.441, 0.1 ) }
    dend_57 { pt3dadd( -52.5312, 106.073, -69.9608, 0.1 ) }
    dend_57 { pt3dadd( -52.7327, 106.519, -70.2402, 0.1 ) }
    dend_57 { pt3dadd( -52.9266, 106.91, -70.457, 0.1 ) }
    dend_57 { pt3dadd( -53.3802, 107.739, -70.8976, 0.1 ) }
    dend_57 { pt3dadd( -53.6475, 108.184, -71.1192, 0.1 ) }
    dend_57 { pt3dadd( -53.7749, 108.372, -71.1994, 0.1 ) }
    dend_57 { pt3dadd( -54.1088, 108.798, -71.3366, 0.1 ) }
    dend_57 { pt3dadd( -54.4588, 109.21, -71.4511, 0.1 ) }
    dend_57 { pt3dadd( -54.9199, 109.721, -71.6098, 0.1 ) }
    dend_57 { pt3dadd( -55.1511, 109.968, -71.6838, 0.1 ) }
    dend_57 { pt3dadd( -55.5227, 110.36, -71.828, 0.1 ) }
    dend_57 { pt3dadd( -55.7451, 110.601, -71.951, 0.1 ) }
    dend_57 { pt3dadd( -56.0871, 110.969, -72.1848, 0.1 ) }
    dend_57 { pt3dadd( -56.7097, 111.657, -72.6793, 0.1 ) }
    dend_57 { pt3dadd( -56.9029, 111.883, -72.858, 0.1 ) }
    dend_57 { pt3dadd( -57.2123, 112.242, -73.1565, 0.14 ) }
    dend_57 { pt3dadd( -57.8146, 112.891, -73.7199, 0.1 ) }
    dend_57 { pt3dadd( -58.1571, 113.23, -74.0096, 0.1 ) }
    dend_57 { pt3dadd( -58.3269, 113.372, -74.1235, 0.14 ) }
    dend_57 { pt3dadd( -58.6028, 113.556, -74.2422, 0.28 ) }
    dend_57 { pt3dadd( -59.1682, 113.891, -74.5065, 0.7 ) }
    dend_57 { pt3dadd( -59.6354, 114.125, -74.7177, 0.56 ) }
    dend_57 { pt3dadd( -59.9396, 114.258, -74.8387, 0.42 ) }
    dend_57 { pt3dadd( -60.4266, 114.458, -75.0413, 0.28 ) }
    dend_57 { pt3dadd( -60.9104, 114.647, -75.242, 0.14 ) }
    dend_57 { pt3dadd( -61.7524, 114.972, -75.5825, 0.14 ) }
    dend_57 { pt3dadd( -62.249, 115.152, -75.7808, 0.1 ) }
    dend_57 { pt3dadd( -62.7395, 115.34, -75.9657, 0.1 ) }
    dend_57 { pt3dadd( -63.2407, 115.536, -76.1349, 0.1 ) }
    dend_57 { pt3dadd( -63.5523, 115.665, -76.225, 0.1 ) }
    dend_57 { pt3dadd( -64.0574, 115.892, -76.3381, 0.14 ) }
    dend_57 { pt3dadd( -64.5417, 116.139, -76.4465, 0.28 ) }
    dend_57 { pt3dadd( -65.0106, 116.417, -76.5856, 0.14 ) }
    dend_57 { pt3dadd( -65.4346, 116.715, -76.7829, 0.1 ) }
    dend_57 { pt3dadd( -65.6878, 116.909, -76.9404, 0.14 ) }
    dend_57 { pt3dadd( -66.0703, 117.197, -77.2235, 0.14 ) }
    dend_57 { pt3dadd( -66.784, 117.7, -77.8178, 0.1 ) }
    dend_57 { pt3dadd( -67.0278, 117.844, -78.0288, 0.1 ) }
    dend_57 { pt3dadd( -67.7345, 118.128, -78.5608, 0.14 ) }
    dend_57 { pt3dadd( -68.1645, 118.208, -78.8091, 0.1 ) }
    dend_57 { pt3dadd( -68.6387, 118.175, -78.9727, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_57 { pt3dadd( -69.1107, 118.044, -79.0467, 0.1 ) }
    dend_57 { pt3dadd( -69.5711, 117.851, -79.0129, 0.1 ) }
    dend_57 { pt3dadd( -70.5072, 117.397, -78.8445, 0.1 ) }
    dend_57 { pt3dadd( -70.9878, 117.152, -78.6851, 0.1 ) }
    dend_57 { pt3dadd( -71.4491, 116.905, -78.4991, 0.1 ) }
    dend_57 { pt3dadd( -71.7409, 116.746, -78.3728, 0.1 ) }
    dend_57 { pt3dadd( -72.6112, 116.288, -78.0024, 0.1 ) }
    dend_57 { pt3dadd( -73.035, 116.072, -77.841, 0.1 ) }
    dend_57 { pt3dadd( -73.9318, 115.654, -77.5792, 0.1 ) }
    dend_57 { pt3dadd( -74.4386, 115.431, -77.4833, 0.1 ) }
    dend_57 { pt3dadd( -74.9002, 115.239, -77.4565, 0.1 ) }
    dend_57 { pt3dadd( -75.3568, 115.062, -77.4997, 0.1 ) }
    dend_57 { pt3dadd( -75.8643, 114.86, -77.6347, 0.1 ) }
    dend_57 { pt3dadd( -76.3037, 114.68, -77.7917, 0.1 ) }
    dend_57 { pt3dadd( -77.2057, 114.31, -78.1966, 0.14 ) }
    dend_57 { pt3dadd( -77.6339, 114.135, -78.3876, 0.1 ) }
    dend_57 { pt3dadd( -78.0639, 113.956, -78.5709, 0.1 ) }
    dend_57 { pt3dadd( -78.5367, 113.753, -78.7977, 0.1 ) }
    dend_57 { pt3dadd( -78.745, 113.66, -78.9029, 0.1 ) }
    dend_57 { pt3dadd( -79.1611, 113.468, -79.1033, 0.1 ) }
    dend_57 { pt3dadd( -79.6345, 113.25, -79.297, 0.1 ) }
    dend_57 { pt3dadd( -80.0499, 113.045, -79.491, 0.1 ) }
    dend_57 { pt3dadd( -80.8883, 112.606, -79.9474, 0.14 ) }
    dend_57 { pt3dadd( -81.1614, 112.462, -80.1229, 0.28 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 24/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -7.20915, 39.8476, -35.7488, 1.12 ) }
    dend_55 { pt3dadd( -8.08803, 40.8476, -37.705, 1.12 ) }
    dend_55 { pt3dadd( -8.19677, 40.9755, -37.9754, 1.12 ) }
    dend_55 { pt3dadd( -8.47355, 41.3156, -38.7503, 0.14 ) }
    dend_55 { pt3dadd( -8.84472, 41.81, -39.8001, 0.1 ) }
    dend_55 { pt3dadd( -9.19797, 42.3238, -40.8397, 0.1 ) }
    dend_55 { pt3dadd( -9.59705, 42.9535, -42.076, 0.1 ) }
    dend_55 { pt3dadd( -9.88478, 43.4606, -43.1389, 0.1 ) }
    dend_55 { pt3dadd( -10.1764, 43.9781, -44.2021, 0.1 ) }
    dend_55 { pt3dadd( -10.3281, 44.253, -44.739, 0.1 ) }
    dend_55 { pt3dadd( -10.7116, 44.8898, -45.8514, 0.1 ) }
    dend_55 { pt3dadd( -11.146, 45.5846, -46.8965, 0.1 ) }
    dend_55 { pt3dadd( -11.146, 45.5846, -46.8965, 0.14 ) }
    dend_55 { pt3dadd( -11.4858, 46.1046, -47.529, 0.1 ) }
    dend_55 { pt3dadd( -11.6543, 46.3714, -47.8472, 0.1 ) }
    dend_55 { pt3dadd( -12.1894, 47.2294, -48.8663, 0.1 ) }
    dend_55 { pt3dadd( -12.4242, 47.6341, -49.2924, 0.1 ) }
    dend_55 { pt3dadd( -12.8329, 48.4291, -50.1008, 0.1 ) }
    dend_55 { pt3dadd( -13.0235, 48.8596, -50.5225, 0.14 ) }
    dend_55 { pt3dadd( -13.3129, 49.6569, -51.3178, 0.28 ) }
    dend_55 { pt3dadd( -13.4737, 50.1578, -51.7895, 0.7 ) }
    dend_55 { pt3dadd( -13.597, 50.6059, -52.1955, 0.56 ) }
    dend_55 { pt3dadd( -13.8248, 51.5513, -53.1014, 0.42 ) }
    dend_55 { pt3dadd( -13.9198, 51.9926, -53.5224, 0.28 ) }
    dend_55 { pt3dadd( -14.1395, 52.9209, -54.4362, 0.14 ) }
    dend_55 { pt3dadd( -14.2691, 53.3641, -54.867, 0.1 ) }
    dend_55 { pt3dadd( -14.5682, 54.2429, -55.7573, 0.1 ) }
    dend_55 { pt3dadd( -14.9398, 55.1063, -56.6384, 0.14 ) }
    dend_55 { pt3dadd( -14.9398, 55.1063, -56.6384, 0.28 ) }
    dend_55 { pt3dadd( -15.2828, 55.6744, -57.2241, 0.1 ) }
    dend_55 { pt3dadd( -15.5865, 56.106, -57.6996, 0.1 ) }
    dend_55 { pt3dadd( -15.7885, 56.3585, -57.9957, 0.1 ) }
    dend_55 { pt3dadd( -16.0221, 56.615, -58.2797, 0.14 ) }
    dend_55 { pt3dadd( -16.1926, 56.8016, -58.4709, 0.28 ) }
    dend_55 { pt3dadd( -16.8208, 57.551, -59.1842, 0.84 ) }
    dend_55 { pt3dadd( -17.4325, 58.376, -60.0206, 0.7 ) }
    dend_55 { pt3dadd( -17.7355, 58.8157, -60.4735, 0.56 ) }
    dend_55 { pt3dadd( -17.9355, 59.1045, -60.7596, 0.42 ) }
    dend_55 { pt3dadd( -18.2439, 59.55, -61.2028, 0.28 ) }
    dend_55 { pt3dadd( -18.5538, 59.9861, -61.6668, 0.14 ) }
    dend_55 { pt3dadd( -19.0429, 60.7099, -62.5002, 0.28 ) }
    dend_55 { pt3dadd( -19.0429, 60.7099, -62.5002, 0.42 ) }
    dend_55 { pt3dadd( -19.2675, 61.1012, -63.0476, 0.1 ) }
    dend_55 { pt3dadd( -19.6411, 61.847, -64.0792, 0.1 ) }
    dend_55 { pt3dadd( -19.9061, 62.5453, -65.0334, 0.1 ) }
    dend_55 { pt3dadd( -20.1232, 63.3697, -66.0527, 0.1 ) }
    dend_55 { pt3dadd( -20.1232, 63.3697, -66.0527, 0.14 ) }
    dend_55 { pt3dadd( -20.1624, 63.8225, -66.4697, 0.1 ) }
    dend_55 { pt3dadd( -20.1509, 64.3134, -66.8635, 0.1 ) }
    dend_55 { pt3dadd( -20.0108, 65.4009, -67.5968, 0.14 ) }
    dend_55 { pt3dadd( -19.8964, 65.9837, -67.9491, 0.1 ) }
    dend_55 { pt3dadd( -19.7729, 66.5148, -68.2529, 0.1 ) }
    dend_55 { pt3dadd( -19.5146, 67.6353, -68.893, 0.1 ) }
    dend_55 { pt3dadd( -19.431, 67.9958, -69.1199, 0.1 ) }
    dend_55 { pt3dadd( -19.2114, 69.0927, -69.8176, 0.14 ) }
    dend_55 { pt3dadd( -19.2114, 69.0927, -69.8176, 0.28 ) }
    dend_55 { pt3dadd( -19.1436, 69.6086, -70.1696, 0.28 ) }
    dend_55 { pt3dadd( -19.0861, 70.1234, -70.4993, 0.14 ) }
    dend_55 { pt3dadd( -18.9758, 71.2025, -71.1739, 0.1 ) }
    dend_55 { pt3dadd( -18.9149, 71.7351, -71.5001, 0.1 ) }
    dend_55 { pt3dadd( -18.7575, 72.8794, -72.1314, 0.14 ) }
    dend_55 { pt3dadd( -18.6601, 73.4304, -72.413, 0.1 ) }
    dend_55 { pt3dadd( -18.5193, 74.0431, -72.7002, 0.1 ) }
    dend_55 { pt3dadd( -18.2249, 75.1248, -73.1146, 0.14 ) }
    dend_55 { pt3dadd( -18.0435, 75.7669, -73.2786, 0.1 ) }
    dend_55 { pt3dadd( -17.8641, 76.4322, -73.3981, 0.1 ) }
    dend_55 { pt3dadd( -17.7052, 77.0922, -73.4967, 0.1 ) }
    dend_55 { pt3dadd( -17.6082, 77.5163, -73.568, 0.14 ) }
    dend_55 { pt3dadd( -17.4624, 78.1812, -73.7292, 0.28 ) }
    dend_55 { pt3dadd( -17.3357, 78.7432, -73.9337, 0.42 ) }
    dend_55 { pt3dadd( -17.1935, 79.2854, -74.2139, 0.56 ) }
    dend_55 { pt3dadd( -16.9062, 80.2081, -74.8549, 0.42 ) }
    dend_55 { pt3dadd( -16.7206, 80.7118, -75.3152, 0.14 ) }
    dend_55 { pt3dadd( -16.3872, 81.4906, -76.1714, 0.1 ) }
    dend_55 { pt3dadd( -16.0071, 82.2919, -77.1615, 0.1 ) }
    dend_55 { pt3dadd( -15.8738, 82.5493, -77.4897, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_55 { pt3dadd( -15.4498, 83.3491, -78.4615, 0.14 ) }
    dend_55 { pt3dadd( -15.0847, 84.0922, -79.2182, 0.28 ) }
    dend_55 { pt3dadd( -14.986, 84.3141, -79.4193, 0.42 ) }
    dend_55 { pt3dadd( -14.8055, 84.8102, -79.7609, 1.26 ) }
    dend_55 { pt3dadd( -14.6164, 85.3904, -80.1117, 1.12 ) }
    dend_55 { pt3dadd( -14.4299, 85.947, -80.4772, 0.98 ) }
    dend_55 { pt3dadd( -14.2322, 86.4993, -80.8686, 0.84 ) }
    dend_55 { pt3dadd( -13.8417, 87.466, -81.672, 0.7 ) }
    dend_55 { pt3dadd( -13.7445, 87.6742, -81.8844, 0.84 ) }
    dend_55 { pt3dadd( -13.317, 88.4661, -82.8613, 1.12 ) }
    dend_55 { pt3dadd( -12.9392, 89.149, -83.7825, 0.98 ) }
    dend_55 { pt3dadd( -12.5276, 89.8928, -84.8064, 0.84 ) }
    dend_55 { pt3dadd( -12.1647, 90.5829, -85.7281, 0.7 ) }
    dend_55 { pt3dadd( -11.8094, 91.3086, -86.6284, 0.56 ) }
    dend_55 { pt3dadd( -11.4273, 92.1352, -87.5956, 0.42 ) }
    dend_55 { pt3dadd( -11.2633, 92.5555, -88.022, 0.28 ) }
    dend_55 { pt3dadd( -11.0991, 93.0888, -88.4546, 0.14 ) }
    dend_55 { pt3dadd( -10.9736, 93.6159, -88.7711, 0.1 ) }
    dend_55 { pt3dadd( -10.7565, 94.8154, -89.2431, 0.1 ) }
    dend_55 { pt3dadd( -10.7565, 94.8154, -89.2431, 0.14 ) }
    dend_55 { pt3dadd( -10.6547, 95.4251, -89.3199, 0.56 ) }
    dend_55 { pt3dadd( -10.5211, 96.1019, -89.4317, 0.42 ) }
    dend_55 { pt3dadd( -10.3938, 96.7653, -89.5511, 0.28 ) }
    dend_55 { pt3dadd( -10.2748, 97.4446, -89.6635, 0.14 ) }
    dend_55 { pt3dadd( -10.1752, 98.1094, -89.801, 0.1 ) }
    dend_55 { pt3dadd( -10.1126, 98.53, -89.9185, 0.1 ) }
    dend_55 { pt3dadd( -9.90914, 99.687, -90.4094, 0.1 ) }
    dend_55 { pt3dadd( -9.80121, 100.211, -90.7313, 0.1 ) }
    dend_55 { pt3dadd( -9.67599, 100.687, -91.1245, 0.1 ) }
    dend_55 { pt3dadd( -9.43964, 101.514, -91.9037, 0.14 ) }
    dend_55 { pt3dadd( -9.29687, 101.991, -92.4068, 0.28 ) }
    dend_55 { pt3dadd( -9.03799, 102.762, -93.3011, 0.14 ) }
    dend_55 { pt3dadd( -8.73882, 103.593, -94.2852, 0.1 ) }
    dend_55 { pt3dadd( -8.46807, 104.352, -95.187, 0.1 ) }
    dend_55 { pt3dadd( -8.33515, 104.762, -95.6497, 0.14 ) }
    dend_55 { pt3dadd( -8.10872, 105.657, -96.5353, 0.1 ) }
    dend_55 { pt3dadd( -7.95738, 106.555, -97.3228, 0.1 ) }
    dend_55 { pt3dadd( -7.91992, 107.069, -97.6777, 0.1 ) }
    dend_55 { pt3dadd( -7.92897, 107.627, -97.9603, 0.1 ) }
    dend_55 { pt3dadd( -7.9711, 108.202, -98.1968, 0.1 ) }
    dend_55 { pt3dadd( -8.02809, 108.777, -98.4047, 0.1 ) }
    dend_55 { pt3dadd( -8.11365, 109.373, -98.5575, 0.1 ) }
    dend_55 { pt3dadd( -8.11365, 109.373, -98.5575, 0.14 ) }
    dend_55 { pt3dadd( -8.21712, 109.969, -98.6967, 0.1 ) }
    dend_55 { pt3dadd( -8.42779, 111.19, -98.985, 0.1 ) }
    dend_55 { pt3dadd( -8.50745, 111.78, -99.1633, 0.1 ) }
    dend_55 { pt3dadd( -8.57182, 112.37, -99.3604, 0.1 ) }
    dend_55 { pt3dadd( -8.6158, 112.948, -99.5518, 0.1 ) }
    dend_55 { pt3dadd( -8.6509, 113.545, -99.7316, 0.1 ) }
    dend_55 { pt3dadd( -8.66766, 114.147, -99.8842, 0.1 ) }
    dend_55 { pt3dadd( -8.63928, 115.303, -100.172, 0.1 ) }
    dend_55 { pt3dadd( -8.58839, 115.898, -100.343, 0.1 ) }
    dend_55 { pt3dadd( -8.49851, 116.535, -100.585, 0.1 ) }
    dend_55 { pt3dadd( -8.39321, 117.1, -100.826, 0.1 ) }
    dend_55 { pt3dadd( -8.25177, 117.701, -101.132, 0.1 ) }
    dend_55 { pt3dadd( -7.95295, 118.833, -101.734, 0.1 ) }
    dend_55 { pt3dadd( -7.77932, 119.419, -102.079, 0.1 ) }
    dend_55 { pt3dadd( -7.45468, 120.343, -102.694, 0.1 ) }
    dend_55 { pt3dadd( -7.24005, 120.882, -103.095, 0.1 ) }
    dend_55 { pt3dadd( -6.81988, 121.839, -103.905, 0.1 ) }
    dend_55 { pt3dadd( -6.59753, 122.335, -104.341, 0.1 ) }
    dend_55 { pt3dadd( -6.1989, 123.206, -105.07, 0.1 ) }
    dend_55 { pt3dadd( -6.04987, 123.528, -105.323, 0.14 ) }
    dend_55 { pt3dadd( -5.93864, 123.778, -105.479, 0.28 ) }
    dend_55 { pt3dadd( -5.48009, 124.832, -106.035, 0.7 ) }
    dend_55 { pt3dadd( -5.23304, 125.453, -106.241, 0.56 ) }
    dend_55 { pt3dadd( -5.07087, 125.837, -106.358, 0.42 ) }
    dend_55 { pt3dadd( -4.81464, 126.457, -106.562, 0.28 ) }
    dend_55 { pt3dadd( -4.57435, 127.052, -106.844, 0.14 ) }
    dend_55 { pt3dadd( -4.43182, 127.401, -107.061, 0.1 ) }
    dend_55 { pt3dadd( -4.21361, 127.947, -107.45, 0.1 ) }
    dend_55 { pt3dadd( -3.85562, 128.939, -108.239, 0.14 ) }
    dend_55 { pt3dadd( -3.53765, 129.893, -109.035, 0.28 ) }
    dend_55 { pt3dadd( -3.25512, 130.846, -109.848, 0.14 ) }
    dend_55 { pt3dadd( -3.01265, 131.843, -110.672, 0.1 ) }
    dend_55 { pt3dadd( -2.91681, 132.331, -111.058, 0.1 ) }
    dend_55 { pt3dadd( -2.84692, 132.839, -111.415, 0.1 ) }
    dend_55 { pt3dadd( -2.81961, 133.227, -111.629, 0.1 ) }
    dend_55 { pt3dadd( -2.81521, 133.795, -111.864, 0.1 ) }
    dend_55 { pt3dadd( -2.86011, 134.373, -112.09, 0.14 ) }
    dend_55 { pt3dadd( -3.07879, 135.564, -112.601, 0.28 ) }
    dend_55 { pt3dadd( -3.21793, 136.087, -112.921, 0.42 ) }
    dend_55 { pt3dadd( -3.21793, 136.087, -112.921, 0.56 ) }
    dend_55 { pt3dadd( -3.44779, 136.666, -113.549, 0.28 ) }
    dend_55 { pt3dadd( -3.75029, 137.434, -114.592, 0.14 ) }
    dend_55 { pt3dadd( -3.82874, 137.653, -114.965, 0.1 ) }
    dend_55 { pt3dadd( -4.0123, 138.245, -116.146, 0.1 ) }
    dend_55 { pt3dadd( -4.1439, 138.796, -117.355, 0.1 ) }
    dend_55 { pt3dadd( -4.24612, 139.27, -118.421, 0.1 ) }
    dend_55 { pt3dadd( -4.33241, 139.735, -119.494, 0.1 ) }
    dend_55 { pt3dadd( -4.55534, 140.691, -121.653, 0.14 ) }
    dend_55 { pt3dadd( -4.69811, 141.175, -122.709, 0.28 ) }
    dend_55 { pt3dadd( -4.69811, 141.175, -122.709, 0.42 ) }
    dend_55 { pt3dadd( -4.9602, 141.573, -123.478, 0.7 ) }
    dend_55 { pt3dadd( -5.15232, 141.757, -123.828, 0.56 ) }
    dend_55 { pt3dadd( -5.63312, 142.078, -124.519, 0.42 ) }
    dend_55 { pt3dadd( -5.88669, 142.193, -124.869, 0.56 ) }
    dend_55 { pt3dadd( -6.05612, 142.254, -125.132, 0.7 ) }
    dend_55 { pt3dadd( -6.67856, 142.462, -126.299, 1.68 ) }
    dend_55 { pt3dadd( -7.20091, 142.604, -127.473, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_55 { pt3dadd( -7.61751, 142.695, -128.57, 1.4 ) }
    dend_55 { pt3dadd( -8.00238, 142.748, -129.809, 1.26 ) }
    dend_55 { pt3dadd( -8.00238, 142.748, -129.809, 1.12 ) }
    dend_55 { pt3dadd( -8.07497, 142.754, -130.12, 0.98 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -7.20915, 39.8476, -35.7488, 1.4 ) }
    dend_54 { pt3dadd( -6.93178, 40.2169, -36.4629, 1.4 ) }
    dend_54 { pt3dadd( -6.67591, 40.5461, -37.1415, 1.26 ) }
    dend_54 { pt3dadd( -6.38806, 40.8879, -37.8967, 1.12 ) }
    dend_54 { pt3dadd( -6.12017, 41.1838, -38.591, 0.98 ) }
    dend_54 { pt3dadd( -5.84172, 41.4473, -39.2905, 0.84 ) }
    dend_54 { pt3dadd( -5.55409, 41.6716, -40.003, 0.7 ) }
    dend_54 { pt3dadd( -4.95304, 41.9673, -41.4103, 0.56 ) }
    dend_54 { pt3dadd( -4.64134, 42.0619, -42.1119, 0.56 ) }
    dend_54 { pt3dadd( -4.55145, 42.075, -42.3009, 0.1 ) }
    dend_54 { pt3dadd( -4.14861, 42.1047, -43.0797, 0.1 ) }
    dend_54 { pt3dadd( -3.73274, 42.1281, -43.826, 0.1 ) }
    dend_54 { pt3dadd( -3.26575, 42.1555, -44.5682, 0.14 ) }
    dend_54 { pt3dadd( -3.09259, 42.1774, -44.8079, 0.84 ) }
    dend_54 { pt3dadd( -2.57132, 42.3183, -45.5026, 0.7 ) }
    dend_54 { pt3dadd( -2.0504, 42.5445, -46.1734, 0.56 ) }
    dend_54 { pt3dadd( -1.57953, 42.8429, -46.7426, 0.42 ) }
    dend_54 { pt3dadd( -1.33402, 43.039, -47.0172, 0.28 ) }
    dend_54 { pt3dadd( -0.846522, 43.5025, -47.5713, 0.14 ) }
    dend_54 { pt3dadd( -0.413359, 43.9348, -48.0805, 0.28 ) }
    dend_54 { pt3dadd( -0.177798, 44.2089, -48.3613, 0.42 ) }
    dend_54 { pt3dadd( 0.0299978, 44.5147, -48.6442, 0.28 ) }
    dend_54 { pt3dadd( 0.133892, 44.7125, -48.8242, 0.14 ) }
    dend_54 { pt3dadd( 0.337393, 45.2601, -49.3176, 0.1 ) }
    dend_54 { pt3dadd( 0.380777, 45.4088, -49.4554, 0.14 ) }
    dend_54 { pt3dadd( 0.460287, 45.7059, -49.7303, 0.1 ) }
    dend_54 { pt3dadd( 0.648308, 46.2839, -50.3185, 0.1 ) }
    dend_54 { pt3dadd( 0.870531, 46.8492, -50.9451, 0.1 ) }
    dend_54 { pt3dadd( 0.996082, 47.0986, -51.2439, 0.14 ) }
    dend_54 { pt3dadd( 1.28004, 47.5575, -51.8286, 0.28 ) }
    dend_54 { pt3dadd( 1.4665, 47.807, -52.177, 1.4 ) }
    dend_54 { pt3dadd( 1.84889, 48.226, -52.8406, 1.26 ) }
    dend_54 { pt3dadd( 2.23128, 48.5694, -53.4516, 1.12 ) }
    dend_54 { pt3dadd( 2.66968, 48.9022, -54.1005, 0.98 ) }
    dend_54 { pt3dadd( 3.10754, 49.1839, -54.7073, 1.12 ) }
    dend_54 { pt3dadd( 3.61998, 49.4696, -55.3569, 0.98 ) }
    dend_54 { pt3dadd( 4.11281, 49.6937, -55.9481, 0.84 ) }
    dend_54 { pt3dadd( 4.66783, 49.9151, -56.5511, 0.7 ) }
    dend_54 { pt3dadd( 4.95776, 50.0197, -56.8316, 0.56 ) }
    dend_54 { pt3dadd( 5.16818, 50.0956, -57.0257, 0.42 ) }
    dend_54 { pt3dadd( 5.46797, 50.2052, -57.2968, 0.28 ) }
    dend_54 { pt3dadd( 6.01405, 50.4307, -57.8328, 0.42 ) }
    dend_54 { pt3dadd( 6.20271, 50.5224, -58.0375, 0.56 ) }
    dend_54 { pt3dadd( 6.74127, 50.832, -58.6574, 0.42 ) }
    dend_54 { pt3dadd( 7.21219, 51.1389, -59.2219, 0.28 ) }
    dend_54 { pt3dadd( 7.71621, 51.502, -59.8366, 0.14 ) }
    dend_54 { pt3dadd( 8.17149, 51.8568, -60.3877, 0.1 ) }
    dend_54 { pt3dadd( 8.68409, 52.2806, -60.9524, 0.1 ) }
    dend_54 { pt3dadd( 8.96376, 52.5169, -61.2408, 0.1 ) }
    dend_54 { pt3dadd( 9.14647, 52.6747, -61.4045, 0.1 ) }
    dend_54 { pt3dadd( 9.70564, 53.1896, -61.8327, 0.1 ) }
    dend_54 { pt3dadd( 9.88395, 53.3734, -61.9625, 0.1 ) }
    dend_54 { pt3dadd( 10.1469, 53.6876, -62.1793, 0.1 ) }
    dend_54 { pt3dadd( 10.6108, 54.3251, -62.6865, 0.14 ) }
    dend_54 { pt3dadd( 10.6987, 54.4662, -62.8105, 0.14 ) }
    dend_54 { pt3dadd( 10.8574, 54.7409, -63.0752, 0.1 ) }
    dend_54 { pt3dadd( 11.1586, 55.3274, -63.6382, 0.1 ) }
    dend_54 { pt3dadd( 11.4373, 55.8823, -64.2119, 0.1 ) }
    dend_54 { pt3dadd( 11.6847, 56.3893, -64.7711, 0.1 ) }
    dend_54 { pt3dadd( 11.8117, 56.6401, -65.0651, 0.1 ) }
    dend_54 { pt3dadd( 12.0963, 57.1689, -65.6987, 0.14 ) }
    dend_54 { pt3dadd( 12.2565, 57.4391, -66.0321, 0.28 ) }
    dend_54 { pt3dadd( 12.5456, 57.9089, -66.6069, 0.14 ) }
    dend_54 { pt3dadd( 12.8639, 58.437, -67.2248, 0.1 ) }
    dend_54 { pt3dadd( 13.1405, 58.924, -67.7855, 0.1 ) }
    dend_54 { pt3dadd( 13.2371, 59.1079, -67.9935, 0.1 ) }
    dend_54 { pt3dadd( 13.5033, 59.6723, -68.5977, 0.1 ) }
    dend_54 { pt3dadd( 13.767, 60.2536, -69.1907, 0.1 ) }
    dend_54 { pt3dadd( 13.8961, 60.5423, -69.4559, 0.1 ) }
    dend_54 { pt3dadd( 14.1863, 61.1499, -70.0009, 0.14 ) }
    dend_54 { pt3dadd( 14.3402, 61.4292, -70.2633, 0.14 ) }
    dend_54 { pt3dadd( 14.4298, 61.5614, -70.3962, 0.28 ) }
    dend_54 { pt3dadd( 14.5782, 61.7363, -70.5696, 0.56 ) }
    dend_54 { pt3dadd( 15.1071, 62.23, -71.0584, 0.42 ) }
    dend_54 { pt3dadd( 15.6427, 62.6411, -71.476, 0.28 ) }
    dend_54 { pt3dadd( 16.2813, 63.0636, -71.8992, 0.14 ) }
    dend_54 { pt3dadd( 16.5901, 63.2426, -72.1117, 0.28 ) }
    dend_54 { pt3dadd( 16.9274, 63.4182, -72.3832, 0.14 ) }
    dend_54 { pt3dadd( 17.2106, 63.518, -72.6724, 0.28 ) }
    dend_54 { pt3dadd( 17.3258, 63.5213, -72.8476, 0.42 ) }
    dend_54 { pt3dadd( 17.3258, 63.5213, -72.8476, 0.56 ) }
    dend_54 { pt3dadd( 17.6289, 63.3454, -73.5668, 0.84 ) }
    dend_54 { pt3dadd( 17.9386, 63.1703, -74.2833, 0.7 ) }
    dend_54 { pt3dadd( 18.2952, 62.9751, -75.028, 0.56 ) }
    dend_54 { pt3dadd( 18.6637, 62.819, -75.6887, 0.42 ) }
    dend_54 { pt3dadd( 18.7788, 62.7882, -75.8586, 0.56 ) }
    dend_54 { pt3dadd( 19.0732, 62.7435, -76.211, 0.42 ) }
    dend_54 { pt3dadd( 19.6916, 62.7248, -76.7992, 0.28 ) }
    dend_54 { pt3dadd( 20.0425, 62.7435, -77.1096, 0.14 ) }
    dend_54 { pt3dadd( 20.6864, 62.8303, -77.6629, 0.1 ) }
    dend_54 { pt3dadd( 21.3136, 62.9487, -78.2256, 0.1 ) }
    dend_54 { pt3dadd( 21.4601, 62.9821, -78.3717, 0.1 ) }
    dend_54 { pt3dadd( 22.0192, 63.1337, -78.9982, 0.1 ) }
    dend_54 { pt3dadd( 22.4889, 63.2927, -79.5528, 0.14 ) }
    dend_54 { pt3dadd( 22.6648, 63.3678, -79.779, 0.28 ) }
    dend_54 { pt3dadd( 23.1423, 63.6255, -80.4359, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_54 { pt3dadd( 23.5879, 63.9173, -81.1004, 0.1 ) }
    dend_54 { pt3dadd( 23.966, 64.2018, -81.7097, 0.1 ) }
    dend_54 { pt3dadd( 24.1841, 64.3814, -82.0822, 0.42 ) }
    dend_54 { pt3dadd( 24.5408, 64.7087, -82.7162, 0.42 ) }
    dend_54 { pt3dadd( 24.9022, 65.0935, -83.416, 0.28 ) }
    dend_54 { pt3dadd( 25.1938, 65.4907, -84.0429, 0.14 ) }
    dend_54 { pt3dadd( 25.4528, 65.9232, -84.6582, 0.28 ) }
    dend_54 { pt3dadd( 25.6736, 66.3621, -85.2463, 0.42 ) }
    dend_54 { pt3dadd( 25.7761, 66.6012, -85.5689, 0.1 ) }
    dend_54 { pt3dadd( 25.8597, 66.8467, -85.892, 0.1 ) }
    dend_54 { pt3dadd( 25.9184, 67.0885, -86.217, 0.1 ) }
    dend_54 { pt3dadd( 25.9941, 67.5542, -86.858, 0.14 ) }
    dend_54 { pt3dadd( 26.0345, 68.0531, -87.5421, 0.7 ) }
    dend_54 { pt3dadd( 26.0556, 68.538, -88.2389, 0.56 ) }
    dend_54 { pt3dadd( 26.0649, 68.9506, -88.8875, 0.42 ) }
    dend_54 { pt3dadd( 26.0658, 69.4013, -89.6382, 0.28 ) }
    dend_54 { pt3dadd( 26.0542, 69.8299, -90.3716, 0.14 ) }
    dend_54 { pt3dadd( 26.0431, 70.0634, -90.7697, 0.1 ) }
    dend_54 { pt3dadd( 26.0424, 70.4476, -91.4371, 0.1 ) }
    dend_54 { pt3dadd( 26.091, 70.8769, -92.196, 0.1 ) }
    dend_54 { pt3dadd( 26.2026, 71.2776, -92.9385, 0.1 ) }
    dend_54 { pt3dadd( 26.2026, 71.2776, -92.9385, 0.14 ) }
    dend_54 { pt3dadd( 26.4568, 71.6, -93.6213, 0.56 ) }
    dend_54 { pt3dadd( 26.7655, 71.9113, -94.2894, 0.42 ) }
    dend_54 { pt3dadd( 27.1608, 72.251, -94.9955, 0.28 ) }
    dend_54 { pt3dadd( 27.5574, 72.5509, -95.5849, 0.14 ) }
    dend_54 { pt3dadd( 28.0387, 72.8875, -96.2329, 0.1 ) }
    dend_54 { pt3dadd( 28.5416, 73.2289, -96.8653, 0.1 ) }
    dend_54 { pt3dadd( 28.7153, 73.3482, -97.0629, 0.1 ) }
    dend_54 { pt3dadd( 29.2714, 73.7409, -97.614, 0.1 ) }
    dend_54 { pt3dadd( 29.5743, 73.9656, -97.8795, 0.1 ) }
    dend_54 { pt3dadd( 30.0935, 74.3765, -98.2689, 0.14 ) }
    dend_54 { pt3dadd( 30.237, 74.4945, -98.3578, 0.28 ) }
    dend_54 { pt3dadd( 30.5641, 74.7672, -98.5439, 0.7 ) }
    dend_54 { pt3dadd( 30.8955, 75.039, -98.725, 0.56 ) }
    dend_54 { pt3dadd( 31.5294, 75.5543, -99.0299, 0.42 ) }
    dend_54 { pt3dadd( 31.7465, 75.7171, -99.125, 0.28 ) }
    dend_54 { pt3dadd( 32.1186, 75.9522, -99.2773, 0.14 ) }
    dend_54 { pt3dadd( 32.8497, 76.3124, -99.5908, 0.1 ) }
    dend_54 { pt3dadd( 33.0316, 76.3678, -99.6782, 0.1 ) }
    dend_54 { pt3dadd( 33.2133, 76.4086, -99.7697, 0.1 ) }
    dend_54 { pt3dadd( 33.6266, 76.4822, -99.9606, 0.1 ) }
    dend_54 { pt3dadd( 34.3947, 76.6247, -100.366, 0.1 ) }
    dend_54 { pt3dadd( 34.6497, 76.6813, -100.506, 0.1 ) }
    dend_54 { pt3dadd( 35.3805, 76.9055, -100.931, 0.1 ) }
    dend_54 { pt3dadd( 35.7495, 77.0583, -101.162, 0.56 ) }
    dend_54 { pt3dadd( 36.11, 77.2499, -101.389, 0.42 ) }
    dend_54 { pt3dadd( 36.6836, 77.6381, -101.778, 0.28 ) }
    dend_54 { pt3dadd( 37.0083, 77.8932, -101.992, 0.14 ) }
    dend_54 { pt3dadd( 37.5995, 78.3992, -102.381, 0.1 ) }
    dend_54 { pt3dadd( 37.7964, 78.5735, -102.512, 0.1 ) }
    dend_54 { pt3dadd( 38.1113, 78.8237, -102.748, 0.1 ) }
    dend_54 { pt3dadd( 38.6336, 79.2206, -103.2, 0.1 ) }
    dend_54 { pt3dadd( 38.7678, 79.3136, -103.327, 0.14 ) }
    dend_54 { pt3dadd( 38.9492, 79.4328, -103.527, 0.28 ) }
    dend_54 { pt3dadd( 39.463, 79.7474, -104.161, 0.14 ) }
    dend_54 { pt3dadd( 39.9454, 80.0459, -104.798, 0.1 ) }
    dend_54 { pt3dadd( 40.3827, 80.3358, -105.398, 0.14 ) }
    dend_54 { pt3dadd( 40.8484, 80.6679, -106.029, 0.1 ) }
    dend_54 { pt3dadd( 41.2741, 81.0089, -106.609, 0.14 ) }
    dend_54 { pt3dadd( 41.688, 81.3745, -107.145, 0.28 ) }
    dend_54 { pt3dadd( 41.9336, 81.6385, -107.439, 0.1 ) }
    dend_54 { pt3dadd( 42.1725, 81.9418, -107.686, 0.1 ) }
    dend_54 { pt3dadd( 42.3299, 82.1463, -107.824, 0.1 ) }
    dend_54 { pt3dadd( 42.5846, 82.457, -108.044, 0.1 ) }
    dend_54 { pt3dadd( 42.8727, 82.7146, -108.303, 0.1 ) }
    dend_54 { pt3dadd( 43.4338, 83.0312, -108.893, 0.1 ) }
    dend_54 { pt3dadd( 43.5662, 83.0754, -109.049, 0.14 ) }
    dend_54 { pt3dadd( 44.0698, 83.1824, -109.663, 0.56 ) }
    dend_54 { pt3dadd( 44.5665, 83.2614, -110.284, 0.42 ) }
    dend_54 { pt3dadd( 45.1017, 83.3354, -110.98, 0.28 ) }
    dend_54 { pt3dadd( 45.5803, 83.4128, -111.618, 0.14 ) }
    dend_54 { pt3dadd( 46.0859, 83.5107, -112.294, 0.28 ) }
    dend_54 { pt3dadd( 46.2098, 83.5425, -112.46, 0.42 ) }
    dend_54 { pt3dadd( 46.7424, 83.7189, -113.134, 0.28 ) }
    dend_54 { pt3dadd( 47.2493, 83.9182, -113.723, 0.14 ) }
    dend_54 { pt3dadd( 47.8218, 84.1666, -114.337, 0.1 ) }
    dend_54 { pt3dadd( 48.3573, 84.4018, -114.841, 0.1 ) }
    dend_54 { pt3dadd( 48.5126, 84.4652, -114.966, 0.42 ) }
    dend_54 { pt3dadd( 48.8328, 84.58, -115.194, 0.28 ) }
    dend_54 { pt3dadd( 49.1858, 84.6852, -115.393, 0.14 ) }
    dend_54 { pt3dadd( 49.9343, 84.9016, -115.738, 0.1 ) }
    dend_54 { pt3dadd( 50.2955, 85.0252, -115.909, 0.1 ) }
    dend_54 { pt3dadd( 50.6325, 85.1832, -116.094, 0.1 ) }
    dend_54 { pt3dadd( 51.1773, 85.5873, -116.605, 0.14 ) }
    dend_54 { pt3dadd( 51.2554, 85.7053, -116.748, 0.28 ) }
    dend_54 { pt3dadd( 51.3157, 86.0007, -117.095, 0.1 ) }
    dend_54 { pt3dadd( 51.298, 86.5673, -117.754, 0.1 ) }
    dend_54 { pt3dadd( 51.2575, 86.877, -118.106, 0.1 ) }
    dend_54 { pt3dadd( 51.1679, 87.385, -118.707, 0.1 ) }
    dend_54 { pt3dadd( 51.1182, 87.6577, -119.017, 0.1 ) }
    dend_54 { pt3dadd( 51.0494, 88.2176, -119.643, 0.1 ) }
    dend_54 { pt3dadd( 51.0265, 88.7787, -120.277, 0.1 ) }
    dend_54 { pt3dadd( 51.036, 89.0502, -120.589, 0.1 ) }
    dend_54 { pt3dadd( 51.082, 89.5157, -121.16, 0.14 ) }
    dend_54 { pt3dadd( 51.125, 89.7838, -121.539, 0.14 ) }
    dend_54 { pt3dadd( 51.1552, 89.9359, -121.786, 0.1 ) }
    dend_54 { pt3dadd( 51.2504, 90.3577, -122.548, 0.1 ) }
    dend_54 { pt3dadd( 51.3404, 90.6878, -123.239, 0.1 ) }
    dend_54 { pt3dadd( 51.4402, 91.0356, -124.01, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( 51.6073, 91.6309, -125.377, 0.1 ) }
    dend_54 { pt3dadd( 51.6991, 91.9441, -126.163, 0.1 ) }
    dend_54 { pt3dadd( 51.783, 92.2136, -126.882, 0.1 ) }
    dend_54 { pt3dadd( 51.9778, 92.7166, -128.283, 0.1 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 14.7525, -94.1859, 6.5289, 0.84 ) }
    dend_24 { pt3dadd( 15.1927, -95.1879, 7.03205, 0.84 ) }
    dend_24 { pt3dadd( 15.3923, -95.7194, 7.27823, 0.98 ) }
    dend_24 { pt3dadd( 15.5778, -96.2725, 7.50504, 1.12 ) }
    dend_24 { pt3dadd( 15.7397, -96.8415, 7.71672, 0.98 ) }
    dend_24 { pt3dadd( 16.0482, -98.0583, 8.12057, 0.84 ) }
    dend_24 { pt3dadd( 16.1754, -98.6433, 8.2983, 0.7 ) }
    dend_24 { pt3dadd( 16.2816, -99.3084, 8.44796, 0.7 ) }
    dend_24 { pt3dadd( 16.3289, -99.9226, 8.54548, 0.84 ) }
    dend_24 { pt3dadd( 16.3335, -100.61, 8.60062, 0.84 ) }
    dend_24 { pt3dadd( 16.303, -101.232, 8.59575, 0.84 ) }
    dend_24 { pt3dadd( 16.2316, -101.927, 8.53323, 0.84 ) }
    dend_24 { pt3dadd( 16.1518, -102.543, 8.47342, 0.7 ) }
    dend_24 { pt3dadd( 15.9275, -103.818, 8.2664, 0.56 ) }
    dend_24 { pt3dadd( 15.8131, -104.425, 8.17801, 0.7 ) }
    dend_24 { pt3dadd( 15.6974, -105.037, 8.10645, 0.84 ) }
    dend_24 { pt3dadd( 15.5672, -105.716, 8.06567, 0.7 ) }
    dend_24 { pt3dadd( 15.4923, -106.153, 8.06328, 0.84 ) }
    dend_24 { pt3dadd( 15.3196, -107.414, 8.13633, 0.98 ) }
    dend_24 { pt3dadd( 15.2063, -108.59, 8.32913, 0.98 ) }
    dend_24 { pt3dadd( 15.1226, -109.26, 8.46944, 0.84 ) }
    dend_24 { pt3dadd( 14.9958, -109.942, 8.58023, 0.98 ) }
    dend_24 { pt3dadd( 14.9495, -110.247, 8.63537, 0.84 ) }
    dend_24 { pt3dadd( 14.9195, -110.553, 8.69414, 0.84 ) }
    dend_24 { pt3dadd( 14.894, -111.232, 8.83181, 0.98 ) }
    dend_24 { pt3dadd( 14.8736, -111.931, 8.88611, 1.12 ) }
    dend_24 { pt3dadd( 14.9218, -113.084, 8.94552, 1.26 ) }
    dend_24 { pt3dadd( 15.0017, -114.235, 9.00667, 1.12 ) }
    dend_24 { pt3dadd( 15.0425, -114.845, 9.05014, 0.98 ) }
    dend_24 { pt3dadd( 15.0911, -115.468, 9.09761, 1.12 ) }
    dend_24 { pt3dadd( 15.1535, -116.086, 9.14353, 0.98 ) }
    dend_24 { pt3dadd( 15.2166, -116.707, 9.19847, 1.12 ) }
    dend_24 { pt3dadd( 15.2595, -117.151, 9.24414, 1.12 ) }
    dend_24 { pt3dadd( 15.2689, -117.838, 9.2955, 0.98 ) }
    dend_24 { pt3dadd( 15.2502, -118.458, 9.36254, 1.12 ) }
    dend_24 { pt3dadd( 15.1682, -119.14, 9.41938, 0.98 ) }
    dend_24 { pt3dadd( 15.0471, -119.75, 9.45728, 0.84 ) }
    dend_24 { pt3dadd( 14.8926, -120.358, 9.48115, 0.98 ) }
    dend_24 { pt3dadd( 14.6984, -121.024, 9.48398, 0.7 ) }
    dend_24 { pt3dadd( 14.4689, -121.689, 9.46067, 0.84 ) }
    dend_24 { pt3dadd( 13.9849, -122.787, 9.40247, 0.98 ) }
    dend_24 { pt3dadd( 13.6628, -123.402, 9.3605, 0.84 ) }
    dend_24 { pt3dadd( 13.6628, -123.402, 9.3605, 0.98 ) }
    dend_24 { pt3dadd( 13.266, -123.974, 9.35122, 0.84 ) }
    dend_24 { pt3dadd( 13.0932, -124.238, 9.33808, 0.84 ) }
    dend_24 { pt3dadd( 12.7208, -124.823, 9.40747, 0.98 ) }
    dend_24 { pt3dadd( 12.4393, -125.414, 9.67288, 0.84 ) }
    dend_24 { pt3dadd( 12.2633, -125.776, 9.83828, 0.7 ) }
    dend_24 { pt3dadd( 12.1558, -126.04, 9.94291, 0.7 ) }
    dend_24 { pt3dadd( 11.9681, -126.687, 10.1414, 0.84 ) }
    dend_24 { pt3dadd( 11.8903, -127.108, 10.2368, 0.7 ) }
    dend_24 { pt3dadd( 11.9268, -127.775, 10.4206, 0.7 ) }
    dend_24 { pt3dadd( 12.0242, -128.429, 10.6285, 0.84 ) }
    dend_24 { pt3dadd( 12.1524, -129.084, 10.844, 0.7 ) }
    dend_24 { pt3dadd( 12.2783, -129.667, 11.028, 0.7 ) }
    dend_24 { pt3dadd( 12.4079, -130.253, 11.2015, 0.56 ) }
    dend_24 { pt3dadd( 12.712, -131.451, 11.5082, 0.7 ) }
    dend_24 { pt3dadd( 12.712, -131.451, 11.5082, 0.84 ) }
    dend_24 { pt3dadd( 12.838, -131.728, 11.5881, 0.84 ) }
    dend_24 { pt3dadd( 13.0733, -132.293, 11.7213, 0.98 ) }
    dend_24 { pt3dadd( 13.2492, -132.886, 11.8073, 0.84 ) }
    dend_24 { pt3dadd( 13.2259, -133.506, 11.7149, 0.84 ) }
    dend_24 { pt3dadd( 12.6216, -134.424, 11.0351, 0.98 ) }
    dend_24 { pt3dadd( 12.2636, -134.802, 10.6667, 0.98 ) }
    dend_24 { pt3dadd( 11.5249, -135.458, 9.95769, 0.84 ) }
    dend_24 { pt3dadd( 10.7845, -136.063, 9.26946, 0.7 ) }
    dend_24 { pt3dadd( 9.33259, -137.226, 7.9323, 0.56 ) }
    dend_24 { pt3dadd( 8.58516, -137.82, 7.24359, 0.56 ) }
    dend_24 { pt3dadd( 8.30747, -138.046, 6.98404, 0.84 ) }
    dend_24 { pt3dadd( 7.88421, -138.455, 6.58214, 0.84 ) }
    dend_24 { pt3dadd( 7.60621, -138.94, 6.28963, 0.84 ) }
    dend_24 { pt3dadd( 7.50079, -139.53, 6.14412, 0.98 ) }
    dend_24 { pt3dadd( 7.51272, -139.84, 6.13004, 1.12 ) }
    dend_24 { pt3dadd( 7.54596, -140.152, 6.13119, 0.98 ) }
    dend_24 { pt3dadd( 7.62737, -140.773, 6.12196, 0.98 ) }
    dend_24 { pt3dadd( 7.70486, -141.392, 6.11549, 0.98 ) }
    dend_24 { pt3dadd( 7.77896, -142.08, 6.11749, 0.84 ) }
    dend_24 { pt3dadd( 7.82902, -142.704, 6.13245, 0.84 ) }
    dend_24 { pt3dadd( 7.87012, -143.326, 6.15404, 0.84 ) }
    dend_24 { pt3dadd( 7.88259, -143.638, 6.17114, 0.98 ) }
    dend_24 { pt3dadd( 7.88994, -144.08, 6.20317, 0.84 ) }
    dend_24 { pt3dadd( 7.88167, -144.689, 6.26144, 0.84 ) }
    dend_24 { pt3dadd( 7.80974, -145.385, 6.29321, 0.98 ) }
    dend_24 { pt3dadd( 7.6558, -145.988, 6.2382, 1.12 ) }
    dend_24 { pt3dadd( 7.5267, -146.4, 6.19414, 0.98 ) }
    dend_24 { pt3dadd( 7.5267, -146.4, 6.19414, 1.12 ) }
    dend_24 { pt3dadd( 7.39386, -146.821, 6.14236, 0.84 ) }
    dend_24 { pt3dadd( 7.01701, -148.077, 5.99949, 0.84 ) }
    dend_24 { pt3dadd( 6.71555, -149.307, 5.86867, 0.84 ) }
    dend_24 { pt3dadd( 6.55101, -150.493, 5.87092, 0.56 ) }
    dend_24 { pt3dadd( 6.53741, -151.114, 5.92387, 0.56 ) }
    dend_24 { pt3dadd( 6.58797, -151.794, 6.02761, 0.56 ) }
    dend_24 { pt3dadd( 6.69231, -152.395, 6.15449, 0.56 ) }
    dend_24 { pt3dadd( 6.85906, -152.965, 6.3508, 0.7 ) }
    dend_24 { pt3dadd( 7.26009, -154.134, 6.81291, 0.84 ) }
    dend_24 { pt3dadd( 7.4413, -154.698, 7.01493, 0.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_24 { pt3dadd( 7.62328, -155.25, 7.22453, 1.12 ) }
    dend_24 { pt3dadd( 7.8113, -155.808, 7.4372, 1.12 ) }
    dend_24 { pt3dadd( 8.1517, -157.022, 7.8181, 1.12 ) }
    dend_24 { pt3dadd( 8.26178, -157.631, 7.90229, 0.98 ) }
    dend_24 { pt3dadd( 8.30247, -158.316, 7.83371, 0.84 ) }
    dend_24 { pt3dadd( 8.29973, -158.618, 7.7607, 0.7 ) }
    dend_24 { pt3dadd( 8.2722, -158.903, 7.62963, 0.56 ) }
    dend_24 { pt3dadd( 8.15299, -160.024, 7.0093, 0.7 ) }
    dend_24 { pt3dadd( 8.03856, -161.143, 6.3141, 0.84 ) }
    dend_24 { pt3dadd( 8.02693, -161.691, 6.00662, 0.98 ) }
    dend_24 { pt3dadd( 8.07523, -162.262, 5.74341, 0.84 ) }
    dend_24 { pt3dadd( 8.26973, -163.514, 5.39212, 0.84 ) }
    dend_24 { pt3dadd( 8.45382, -164.645, 5.22516, 0.98 ) }
    dend_24 { pt3dadd( 8.54029, -165.252, 5.19263, 0.98 ) }
    dend_24 { pt3dadd( 8.71359, -166.515, 5.26437, 0.98 ) }
    dend_24 { pt3dadd( 8.76962, -167.134, 5.30898, 0.98 ) }
    dend_24 { pt3dadd( 8.81338, -168.006, 5.37778, 0.98 ) }
    dend_24 { pt3dadd( 8.85428, -169.2, 5.4598, 0.84 ) }
    dend_24 { pt3dadd( 8.84766, -170.352, 5.37578, 0.98 ) }
    dend_24 { pt3dadd( 8.89755, -171.493, 5.19045, 0.84 ) }
    dend_24 { pt3dadd( 8.96112, -172.096, 5.03972, 0.84 ) }
    dend_24 { pt3dadd( 9.1164, -172.675, 4.88627, 0.84 ) }
    dend_24 { pt3dadd( 9.28656, -173.08, 4.78119, 1.12 ) }
    dend_24 { pt3dadd( 9.60568, -173.685, 4.64568, 0.98 ) }
    dend_24 { pt3dadd( 9.90796, -174.286, 4.4576, 0.84 ) }
    dend_24 { pt3dadd( 10.0965, -174.823, 4.18243, 0.98 ) }
    dend_24 { pt3dadd( 10.2163, -175.192, 3.9815, 1.12 ) }
    dend_24 { pt3dadd( 10.3994, -175.737, 3.71955, 0.98 ) }
    dend_24 { pt3dadd( 10.6037, -176.358, 3.47586, 0.84 ) }
    dend_24 { pt3dadd( 11.0153, -177.551, 3.09365, 0.84 ) }
    dend_24 { pt3dadd( 11.4423, -178.726, 2.80507, 0.98 ) }
    dend_24 { pt3dadd( 11.8542, -179.795, 2.61745, 0.84 ) }
    dend_24 { pt3dadd( 12.3176, -180.983, 2.49864, 0.84 ) }
    dend_24 { pt3dadd( 12.5529, -181.555, 2.48045, 0.84 ) }
    dend_24 { pt3dadd( 12.8163, -182.197, 2.51802, 0.98 ) }
    dend_24 { pt3dadd( 13.0461, -182.773, 2.60321, 1.12 ) }
    dend_24 { pt3dadd( 13.2374, -183.364, 2.69439, 0.98 ) }
    dend_24 { pt3dadd( 13.3174, -183.982, 2.69371, 0.98 ) }
    dend_24 { pt3dadd( 13.3136, -184.294, 2.66548, 0.98 ) }
    dend_24 { pt3dadd( 13.2624, -184.733, 2.6239, 0.98 ) }
    dend_24 { pt3dadd( 13.1225, -185.408, 2.55874, 1.12 ) }
    dend_24 { pt3dadd( 12.9556, -186.085, 2.48175, 1.26 ) }
    dend_24 { pt3dadd( 12.6829, -187.2, 2.33926, 1.12 ) }
    dend_24 { pt3dadd( 12.6829, -187.2, 2.33926, 0.98 ) }
    dend_24 { pt3dadd( 12.5816, -187.616, 2.26701, 0.56 ) }
    dend_24 { pt3dadd( 12.4154, -188.199, 2.09599, 0.7 ) }
    dend_24 { pt3dadd( 12.2174, -188.763, 1.90746, 0.84 ) }
    dend_24 { pt3dadd( 11.953, -189.298, 1.70127, 0.84 ) }
    dend_24 { pt3dadd( 11.5783, -189.839, 1.46572, 0.98 ) }
    dend_24 { pt3dadd( 10.7668, -190.778, 0.982074, 0.84 ) }
    dend_24 { pt3dadd( 9.92975, -191.629, 0.483312, 0.98 ) }
    dend_24 { pt3dadd( 9.48773, -192.007, 0.231344, 1.12 ) }
    dend_24 { pt3dadd( 8.52382, -192.698, -0.297568, 1.26 ) }
    dend_24 { pt3dadd( 7.47564, -193.323, -0.853167, 1.12 ) }
    dend_24 { pt3dadd( 7.47564, -193.323, -0.853167, 0.98 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 55/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 14.7525, -94.1859, 6.5289, 0.98 ) }
    dend_19 { pt3dadd( 15.0856, -94.9605, 6.04219, 0.98 ) }
    dend_19 { pt3dadd( 15.2785, -95.3549, 5.74739, 1.12 ) }
    dend_19 { pt3dadd( 15.4895, -95.7416, 5.45917, 1.26 ) }
    dend_19 { pt3dadd( 15.7454, -96.1718, 5.15614, 1.12 ) }
    dend_19 { pt3dadd( 16.2538, -96.9606, 4.62517, 0.98 ) }
    dend_19 { pt3dadd( 16.8097, -97.7705, 4.11517, 1.12 ) }
    dend_19 { pt3dadd( 17.007, -98.0337, 3.93591, 0.98 ) }
    dend_19 { pt3dadd( 17.3449, -98.4348, 3.67398, 0.84 ) }
    dend_19 { pt3dadd( 17.7122, -98.8326, 3.44875, 0.7 ) }
    dend_19 { pt3dadd( 17.9634, -99.0896, 3.34249, 0.56 ) }
    dend_19 { pt3dadd( 18.383, -99.4893, 3.2531, 0.42 ) }
    dend_19 { pt3dadd( 18.818, -99.8996, 3.20504, 0.28 ) }
    dend_19 { pt3dadd( 19.0821, -100.152, 3.17585, 0.42 ) }
    dend_19 { pt3dadd( 19.5079, -100.561, 3.12877, 0.28 ) }
    dend_19 { pt3dadd( 19.9368, -100.959, 3.08142, 0.14 ) }
    dend_19 { pt3dadd( 20.2131, -101.21, 3.05093, 0.1 ) }
    dend_19 { pt3dadd( 20.653, -101.596, 3.00245, 0.1 ) }
    dend_19 { pt3dadd( 21.0946, -101.979, 2.95381, 0.1 ) }
    dend_19 { pt3dadd( 21.5415, -102.366, 2.90458, 0.14 ) }
    dend_19 { pt3dadd( 21.9875, -102.743, 2.85548, 0.1 ) }
    dend_19 { pt3dadd( 22.4435, -103.12, 2.80533, 0.14 ) }
    dend_19 { pt3dadd( 22.7261, -103.352, 2.77424, 0.28 ) }
    dend_19 { pt3dadd( 22.9353, -103.515, 2.75128, 0.42 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -27.2511, -76.7838, -28.4766, 0.1 ) }
    dend_9 { pt3dadd( -27.3392, -77.3614, -28.405, 0.1 ) }
    dend_9 { pt3dadd( -27.4311, -77.8585, -28.2664, 0.1 ) }
    dend_9 { pt3dadd( -27.5298, -78.3976, -28.0763, 0.1 ) }
    dend_9 { pt3dadd( -27.6239, -78.8584, -27.8422, 0.1 ) }
    dend_9 { pt3dadd( -27.7248, -79.3643, -27.5543, 0.1 ) }
    dend_9 { pt3dadd( -27.8167, -79.812, -27.2942, 0.1 ) }
    dend_9 { pt3dadd( -27.9879, -80.6486, -26.7591, 0.1 ) }
    dend_9 { pt3dadd( -28.0795, -81.0753, -26.4643, 0.1 ) }
    dend_9 { pt3dadd( -28.2589, -81.9265, -25.7711, 0.1 ) }
    dend_9 { pt3dadd( -28.3366, -82.3105, -25.4307, 0.1 ) }
    dend_9 { pt3dadd( -28.4075, -82.75, -25.0385, 0.1 ) }
    dend_9 { pt3dadd( -28.4319, -82.9531, -24.8738, 0.1 ) }
    dend_9 { pt3dadd( -28.4319, -82.9531, -24.8738, 0.1 ) }
    dend_9 { pt3dadd( -28.4136, -83.8056, -24.4, 0.1 ) }
    dend_9 { pt3dadd( -28.3651, -84.2897, -24.1939, 0.1 ) }
    dend_9 { pt3dadd( -28.2991, -84.7681, -24.0099, 0.1 ) }
    dend_9 { pt3dadd( -28.2129, -85.2725, -23.8897, 0.1 ) }
    dend_9 { pt3dadd( -28.1231, -85.7894, -23.8293, 0.1 ) }
    dend_9 { pt3dadd( -28.0237, -86.3649, -23.8174, 0.1 ) }
    dend_9 { pt3dadd( -27.935, -86.8846, -23.854, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( -27.8594, -87.4029, -23.9003, 0.1 ) }
    dend_9 { pt3dadd( -27.7299, -88.4666, -24.0023, 0.1 ) }
    dend_9 { pt3dadd( -27.6892, -88.9882, -24.0497, 0.1 ) }
    dend_9 { pt3dadd( -27.6703, -89.5025, -24.0875, 0.1 ) }
    dend_9 { pt3dadd( -27.671, -90.0293, -24.1102, 0.1 ) }
    dend_9 { pt3dadd( -27.6887, -90.6188, -24.1518, 0.1 ) }
    dend_9 { pt3dadd( -27.7145, -91.144, -24.1892, 0.1 ) }
    dend_9 { pt3dadd( -27.7489, -91.7242, -24.2157, 0.14 ) }
    dend_9 { pt3dadd( -27.7879, -92.2483, -24.2559, 0.28 ) }
    dend_9 { pt3dadd( -27.8276, -92.7691, -24.3051, 0.42 ) }
    dend_9 { pt3dadd( -27.9001, -93.8627, -24.4151, 0.28 ) }
    dend_9 { pt3dadd( -27.9217, -94.3805, -24.5007, 0.14 ) }
    dend_9 { pt3dadd( -27.9465, -94.8965, -24.6101, 0.1 ) }
    dend_9 { pt3dadd( -27.9697, -95.4727, -24.7454, 0.1 ) }
    dend_9 { pt3dadd( -27.9916, -95.9782, -24.8623, 0.1 ) }
    dend_9 { pt3dadd( -28.0093, -96.4935, -24.9632, 0.1 ) }
    dend_9 { pt3dadd( -28.0217, -97.4593, -25.0826, 0.1 ) }
    dend_9 { pt3dadd( -28.022, -97.8299, -25.1258, 0.1 ) }
    dend_9 { pt3dadd( -28.0121, -98.3526, -25.1739, 0.1 ) }
    dend_9 { pt3dadd( -27.9768, -98.8669, -25.2001, 0.1 ) }
    dend_9 { pt3dadd( -27.9266, -99.3921, -25.1981, 0.1 ) }
    dend_9 { pt3dadd( -27.8639, -99.9126, -25.1626, 0.1 ) }
    dend_9 { pt3dadd( -27.7901, -100.43, -25.0915, 0.1 ) }
    dend_9 { pt3dadd( -27.7048, -100.944, -25.0204, 0.1 ) }
    dend_9 { pt3dadd( -27.6088, -101.515, -24.9414, 0.1 ) }
    dend_9 { pt3dadd( -27.5228, -102.031, -24.87, 0.14 ) }
    dend_9 { pt3dadd( -27.4522, -102.54, -24.7626, 0.28 ) }
    dend_9 { pt3dadd( -27.4076, -103.039, -24.6274, 0.14 ) }
    dend_9 { pt3dadd( -27.3854, -103.539, -24.4687, 0.1 ) }
    dend_9 { pt3dadd( -27.384, -104.036, -24.2928, 0.1 ) }
    dend_9 { pt3dadd( -27.4039, -104.525, -24.1039, 0.1 ) }
    dend_9 { pt3dadd( -27.4664, -105.542, -23.6824, 0.1 ) }
    dend_9 { pt3dadd( -27.4953, -106.085, -23.4488, 0.14 ) }
    dend_9 { pt3dadd( -27.5002, -106.57, -23.2419, 0.28 ) }
    dend_9 { pt3dadd( -27.4884, -106.814, -23.1464, 0.42 ) }
    dend_9 { pt3dadd( -27.4884, -106.814, -23.1464, 0.56 ) }
    dend_9 { pt3dadd( -27.441, -107.066, -23.0861, 0.56 ) }
    dend_9 { pt3dadd( -27.303, -107.629, -23.0062, 0.56 ) }
    dend_9 { pt3dadd( -27.1538, -108.201, -22.9804, 0.7 ) }
    dend_9 { pt3dadd( -27.0301, -108.712, -22.9907, 0.56 ) }
    dend_9 { pt3dadd( -26.9176, -109.228, -23.0195, 0.42 ) }
    dend_9 { pt3dadd( -26.8202, -109.734, -23.0575, 0.28 ) }
    dend_9 { pt3dadd( -26.7342, -110.251, -23.108, 0.14 ) }
    dend_9 { pt3dadd( -26.6128, -111.313, -23.236, 0.1 ) }
    dend_9 { pt3dadd( -26.5737, -111.833, -23.3032, 0.1 ) }
    dend_9 { pt3dadd( -26.5424, -112.356, -23.366, 0.1 ) }
    dend_9 { pt3dadd( -26.5184, -112.878, -23.4128, 0.14 ) }
    dend_9 { pt3dadd( -26.5184, -112.878, -23.4128, 0.28 ) }
    dend_9 { pt3dadd( -26.5071, -113.242, -23.3978, 0.56 ) }
    dend_9 { pt3dadd( -26.4909, -113.762, -23.3291, 0.56 ) }
    dend_9 { pt3dadd( -26.4698, -114.284, -23.2598, 0.42 ) }
    dend_9 { pt3dadd( -26.4426, -114.804, -23.1906, 0.28 ) }
    dend_9 { pt3dadd( -26.4079, -115.316, -23.1219, 0.14 ) }
    dend_9 { pt3dadd( -26.3548, -115.834, -23.0518, 0.28 ) }
    dend_9 { pt3dadd( -26.2947, -116.347, -22.9464, 0.28 ) }
    dend_9 { pt3dadd( -26.2411, -116.839, -22.7691, 0.14 ) }
    dend_9 { pt3dadd( -26.2061, -117.308, -22.5328, 0.1 ) }
    dend_9 { pt3dadd( -26.1899, -117.735, -22.2194, 0.1 ) }
    dend_9 { pt3dadd( -26.1873, -118.015, -21.9694, 0.1 ) }
    dend_9 { pt3dadd( -26.2121, -118.741, -21.2607, 0.84 ) }
    dend_9 { pt3dadd( -26.2608, -119.525, -20.5152, 0.7 ) }
    dend_9 { pt3dadd( -26.3026, -119.978, -20.1323, 0.56 ) }
    dend_9 { pt3dadd( -26.4107, -120.854, -19.5117, 0.42 ) }
    dend_9 { pt3dadd( -26.4678, -121.155, -19.9377, 0.28 ) }
    dend_9 { pt3dadd( -26.5285, -121.465, -20.4491, 0.14 ) }
    dend_9 { pt3dadd( -26.6214, -121.941, -21.3144, 0.1 ) }
    dend_9 { pt3dadd( -26.7894, -122.804, -23.0541, 0.1 ) }
    dend_9 { pt3dadd( -26.9208, -123.618, -24.8196, 0.1 ) }
    dend_9 { pt3dadd( -26.9778, -124.037, -25.7583, 0.1 ) }
    dend_9 { pt3dadd( -27.0189, -124.431, -26.6291, 0.14 ) }
    dend_9 { pt3dadd( -27.0189, -124.431, -26.6291, 0.28 ) }
    dend_9 { pt3dadd( -27.0215, -124.58, -26.8526, 0.84 ) }
    dend_9 { pt3dadd( -27.0018, -125.084, -27.1555, 0.7 ) }
    dend_9 { pt3dadd( -26.9917, -125.607, -27.1952, 0.56 ) }
    dend_9 { pt3dadd( -26.9975, -126.133, -27.1592, 0.42 ) }
    dend_9 { pt3dadd( -27.0296, -126.643, -27.0939, 0.28 ) }
    dend_9 { pt3dadd( -27.0988, -127.223, -27.021, 0.14 ) }
    dend_9 { pt3dadd( -27.2049, -127.79, -26.9516, 0.1 ) }
    dend_9 { pt3dadd( -27.3428, -128.362, -26.9241, 0.1 ) }
    dend_9 { pt3dadd( -27.4147, -128.612, -26.9102, 0.1 ) }
    dend_9 { pt3dadd( -27.5946, -129.162, -26.8742, 0.1 ) }
    dend_9 { pt3dadd( -27.7819, -129.713, -26.7849, 0.1 ) }
    dend_9 { pt3dadd( -27.9648, -130.258, -26.6456, 0.1 ) }
    dend_9 { pt3dadd( -28.2421, -131.139, -26.3512, 0.14 ) }
    dend_9 { pt3dadd( -28.4965, -132.048, -25.9972, 0.56 ) }
    dend_9 { pt3dadd( -28.6238, -132.58, -25.7733, 0.42 ) }
    dend_9 { pt3dadd( -28.7983, -133.55, -25.3432, 0.28 ) }
    dend_9 { pt3dadd( -28.8515, -134.079, -25.1061, 0.14 ) }
    dend_9 { pt3dadd( -28.8665, -134.561, -24.8976, 0.28 ) }
    dend_9 { pt3dadd( -28.8561, -135.051, -24.7012, 0.42 ) }
    dend_9 { pt3dadd( -28.8131, -135.556, -24.5644, 0.28 ) }
    dend_9 { pt3dadd( -28.7489, -136.06, -24.4561, 0.28 ) }
    dend_9 { pt3dadd( -28.6621, -136.631, -24.3773, 0.28 ) }
    dend_9 { pt3dadd( -28.5704, -137.147, -24.3058, 0.42 ) }
    dend_9 { pt3dadd( -28.4808, -137.66, -24.2346, 0.28 ) }
    dend_9 { pt3dadd( -28.3962, -138.173, -24.1636, 0.42 ) }
    dend_9 { pt3dadd( -28.3962, -138.173, -24.1636, 0.56 ) }
    dend_9 { pt3dadd( -28.3577, -138.427, -24.1037, 0.56 ) }
    dend_9 { pt3dadd( -28.2847, -138.926, -23.9463, 0.42 ) }
    dend_9 { pt3dadd( -28.2069, -139.414, -23.7657, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_9 { pt3dadd( -28.1274, -139.889, -23.5764, 0.14 ) }
    dend_9 { pt3dadd( -28.0457, -140.373, -23.3804, 0.1 ) }
    dend_9 { pt3dadd( -27.8563, -141.387, -22.9803, 0.1 ) }
    dend_9 { pt3dadd( -27.7594, -141.872, -22.7946, 0.1 ) }
    dend_9 { pt3dadd( -27.6587, -142.358, -22.6187, 0.1 ) }
    dend_9 { pt3dadd( -27.5462, -142.849, -22.4576, 0.1 ) }
    dend_9 { pt3dadd( -27.425, -143.35, -22.3509, 0.1 ) }
    dend_9 { pt3dadd( -27.2975, -143.913, -22.2606, 0.1 ) }
    dend_9 { pt3dadd( -27.1938, -144.429, -22.2147, 0.1 ) }
    dend_9 { pt3dadd( -27.1087, -144.936, -22.164, 0.14 ) }
    dend_9 { pt3dadd( -27.0318, -145.524, -22.0975, 0.28 ) }
    dend_9 { pt3dadd( -26.9445, -146.482, -21.9756, 0.42 ) }
    dend_9 { pt3dadd( -26.8935, -147.479, -21.8342, 0.84 ) }
    dend_9 { pt3dadd( -26.8865, -147.999, -21.7531, 0.7 ) }
    dend_9 { pt3dadd( -26.8841, -148.573, -21.6558, 0.56 ) }
    dend_9 { pt3dadd( -26.8949, -149.089, -21.5624, 0.42 ) }
    dend_9 { pt3dadd( -26.9134, -149.606, -21.4636, 0.28 ) }
    dend_9 { pt3dadd( -26.9234, -150.12, -21.3607, 0.14 ) }
    dend_9 { pt3dadd( -26.9191, -150.642, -21.2922, 0.1 ) }
    dend_9 { pt3dadd( -26.9077, -151.166, -21.2606, 0.14 ) }
    dend_9 { pt3dadd( -26.8841, -151.746, -21.259, 0.1 ) }
    dend_9 { pt3dadd( -26.8651, -152.27, -21.2695, 0.1 ) }
    dend_9 { pt3dadd( -26.8483, -152.797, -21.2957, 0.1 ) }
    dend_9 { pt3dadd( -26.8321, -153.319, -21.3421, 0.1 ) }
    dend_9 { pt3dadd( -26.7938, -154.378, -21.4924, 0.14 ) }
    dend_9 { pt3dadd( -26.779, -154.636, -21.5482, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 26/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -27.2511, -76.7838, -28.4766, 0.1 ) }
    dend_8 { pt3dadd( -27.2731, -76.923, -28.7893, 0.1 ) }
    dend_8 { pt3dadd( -27.323, -77.1446, -29.4342, 0.1 ) }
    dend_8 { pt3dadd( -27.4456, -77.5175, -30.7795, 0.1 ) }
    dend_8 { pt3dadd( -27.5064, -77.6805, -31.4417, 0.1 ) }
    dend_8 { pt3dadd( -27.7491, -78.2418, -33.8572, 0.1 ) }
    dend_8 { pt3dadd( -27.888, -78.5236, -35.1304, 0.1 ) }
    dend_8 { pt3dadd( -28.0277, -78.7831, -36.3645, 0.1 ) }
    dend_8 { pt3dadd( -28.3068, -79.3085, -38.8571, 0.1 ) }
    dend_8 { pt3dadd( -28.4376, -79.5999, -40.1289, 0.14 ) }
    dend_8 { pt3dadd( -28.5548, -79.9162, -41.3522, 0.1 ) }
    dend_8 { pt3dadd( -28.7298, -80.7398, -43.765, 0.14 ) }
    dend_8 { pt3dadd( -28.7601, -81.0188, -44.3909, 0.1 ) }
    dend_8 { pt3dadd( -28.7573, -81.3723, -44.9725, 0.1 ) }
    dend_8 { pt3dadd( -28.6855, -81.819, -45.4655, 0.1 ) }
    dend_8 { pt3dadd( -28.6037, -82.0767, -45.6648, 0.1 ) }
    dend_8 { pt3dadd( -28.3251, -82.6243, -45.9492, 0.1 ) }
    dend_8 { pt3dadd( -27.9365, -83.146, -46.1276, 0.1 ) }
    dend_8 { pt3dadd( -26.9897, -84.1369, -46.5238, 0.14 ) }
    dend_8 { pt3dadd( -26.0782, -84.9339, -46.9944, 0.1 ) }
    dend_8 { pt3dadd( -25.6052, -85.3345, -47.4453, 0.1 ) }
    dend_8 { pt3dadd( -25.3496, -85.5462, -47.7832, 0.1 ) }
    dend_8 { pt3dadd( -24.9327, -85.9156, -48.5776, 0.1 ) }
    dend_8 { pt3dadd( -24.7563, -86.0821, -48.9928, 0.1 ) }
    dend_8 { pt3dadd( -24.3757, -86.5188, -50.1706, 0.1 ) }
    dend_8 { pt3dadd( -23.7616, -87.353, -52.5059, 0.1 ) }
    dend_8 { pt3dadd( -23.6606, -87.5105, -52.9541, 0.1 ) }
    dend_8 { pt3dadd( -23.3595, -87.954, -54.2877, 0.1 ) }
    dend_8 { pt3dadd( -23.2603, -88.0943, -54.7424, 0.1 ) }
    dend_8 { pt3dadd( -22.9102, -88.4811, -56.0827, 0.1 ) }
    dend_8 { pt3dadd( -22.7586, -88.5994, -56.5359, 0.1 ) }
    dend_8 { pt3dadd( -22.1703, -88.923, -57.9389, 0.1 ) }
    dend_8 { pt3dadd( -21.8906, -89.043, -58.5526, 0.1 ) }
    dend_8 { pt3dadd( -21.2679, -89.2275, -59.6974, 0.1 ) }
    dend_8 { pt3dadd( -20.9111, -89.312, -60.2805, 0.1 ) }
    dend_8 { pt3dadd( -20.0471, -89.4637, -61.4227, 0.14 ) }
    dend_8 { pt3dadd( -19.7242, -89.5156, -61.7836, 0.28 ) }
    dend_8 { pt3dadd( -19.1878, -89.6082, -62.3144, 0.14 ) }
    dend_8 { pt3dadd( -18.6335, -89.731, -62.8342, 0.1 ) }
    dend_8 { pt3dadd( -18.2689, -89.8138, -63.1289, 0.1 ) }
    dend_8 { pt3dadd( -17.6725, -89.9694, -63.593, 0.1 ) }
    dend_8 { pt3dadd( -17.0495, -90.131, -64.0144, 0.1 ) }
    dend_8 { pt3dadd( -16.0211, -90.3979, -64.7828, 0.1 ) }
    dend_8 { pt3dadd( -15.6601, -90.5024, -65.101, 0.14 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 70/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -65.0946, 119.205, 9.11931, 0.1 ) }
    dend_77 { pt3dadd( -65.1693, 120.129, 10.0662, 0.1 ) }
    dend_77 { pt3dadd( -65.2859, 121.097, 10.9632, 0.1 ) }
    dend_77 { pt3dadd( -65.3615, 121.587, 11.3598, 0.1 ) }
    dend_77 { pt3dadd( -65.585, 122.651, 12.1065, 0.1 ) }
    dend_77 { pt3dadd( -65.7357, 123.258, 12.4706, 0.1 ) }
    dend_77 { pt3dadd( -65.7357, 123.258, 12.4706, 0.1 ) }
    dend_77 { pt3dadd( -65.9268, 123.884, 12.7584, 0.1 ) }
    dend_77 { pt3dadd( -66.1199, 124.461, 12.9728, 0.1 ) }
    dend_77 { pt3dadd( -66.3297, 125.108, 13.1893, 0.1 ) }
    dend_77 { pt3dadd( -66.5048, 125.709, 13.3454, 0.1 ) }
    dend_77 { pt3dadd( -66.814, 126.961, 13.5751, 0.1 ) }
    dend_77 { pt3dadd( -66.8676, 127.262, 13.6278, 0.14 ) }
    dend_77 { pt3dadd( -66.9359, 127.89, 13.7275, 0.1 ) }
    dend_77 { pt3dadd( -66.9876, 128.6, 13.8207, 0.1 ) }
    dend_77 { pt3dadd( -67.0075, 129.306, 13.882, 0.1 ) }
    dend_77 { pt3dadd( -67.0102, 130.533, 13.9203, 0.14 ) }
    dend_77 { pt3dadd( -67.0109, 131.839, 13.8803, 0.28 ) }
    dend_77 { pt3dadd( -67.0028, 132.48, 13.8681, 0.14 ) }
    dend_77 { pt3dadd( -67.0061, 133.107, 13.9131, 0.1 ) }
    dend_77 { pt3dadd( -67.0378, 133.816, 14.0231, 0.1 ) }
    dend_77 { pt3dadd( -67.0955, 134.518, 14.1782, 0.1 ) }
    dend_77 { pt3dadd( -67.1586, 135.113, 14.384, 0.14 ) }
    dend_77 { pt3dadd( -67.208, 135.527, 14.5693, 0.1 ) }
    dend_77 { pt3dadd( -67.3672, 136.695, 15.2332, 0.1 ) }
    dend_77 { pt3dadd( -67.453, 137.229, 15.5826, 0.1 ) }
    dend_77 { pt3dadd( -67.5556, 137.754, 15.9491, 0.1 ) }
    dend_77 { pt3dadd( -67.7698, 138.823, 16.691, 0.1 ) }
    dend_77 { pt3dadd( -67.9569, 139.904, 17.4158, 0.1 ) }
    dend_77 { pt3dadd( -68.0456, 140.435, 17.7703, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_77 { pt3dadd( -68.0894, 140.709, 17.9364, 0.1 ) }
    dend_77 { pt3dadd( -68.1868, 141.258, 18.258, 0.1 ) }
    dend_77 { pt3dadd( -68.3447, 141.885, 18.5811, 0.1 ) }
    dend_77 { pt3dadd( -68.4464, 142.168, 18.6906, 0.1 ) }
    dend_77 { pt3dadd( -69.0112, 143.336, 19.0728, 0.28 ) }
    dend_77 { pt3dadd( -69.3945, 143.927, 19.2748, 0.14 ) }
    dend_77 { pt3dadd( -69.7681, 144.398, 19.4812, 0.28 ) }
    dend_77 { pt3dadd( -70.3473, 145.032, 19.7991, 0.14 ) }
    dend_77 { pt3dadd( -70.6443, 145.331, 19.9865, 0.1 ) }
    dend_77 { pt3dadd( -70.9367, 145.629, 20.182, 0.1 ) }
    dend_77 { pt3dadd( -71.4986, 146.24, 20.5703, 0.1 ) }
    dend_77 { pt3dadd( -72.2802, 147.154, 21.2106, 0.1 ) }
    dend_77 { pt3dadd( -72.4586, 147.37, 21.3773, 0.1 ) }
    dend_77 { pt3dadd( -73.1266, 148.287, 22.1329, 0.1 ) }
    dend_77 { pt3dadd( -73.416, 148.73, 22.5116, 0.1 ) }
    dend_77 { pt3dadd( -73.664, 149.172, 22.8972, 0.14 ) }
    dend_77 { pt3dadd( -73.664, 149.172, 22.8972, 0.28 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 17/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -65.0946, 119.205, 9.11931, 0.1 ) }
    dend_76 { pt3dadd( -65.8079, 119.11, 9.72771, 0.1 ) }
    dend_76 { pt3dadd( -66.1795, 119.048, 10.0654, 0.1 ) }
    dend_76 { pt3dadd( -66.4946, 118.978, 10.3803, 0.1 ) }
    dend_76 { pt3dadd( -67.1354, 118.817, 11.012, 0.1 ) }
    dend_76 { pt3dadd( -67.793, 118.642, 11.6278, 0.1 ) }
    dend_76 { pt3dadd( -68.1225, 118.553, 11.922, 0.1 ) }
    dend_76 { pt3dadd( -68.8068, 118.337, 12.4935, 0.14 ) }
    dend_76 { pt3dadd( -69.5238, 118.095, 13.0598, 0.28 ) }
    dend_76 { pt3dadd( -69.8767, 117.969, 13.3059, 0.14 ) }
    dend_76 { pt3dadd( -70.251, 117.84, 13.5199, 0.1 ) }
    dend_76 { pt3dadd( -70.4458, 117.779, 13.6101, 0.1 ) }
    dend_76 { pt3dadd( -70.8361, 117.683, 13.7964, 0.14 ) }
    dend_76 { pt3dadd( -71.2437, 117.608, 13.9684, 0.28 ) }
    dend_76 { pt3dadd( -71.5403, 117.568, 14.0893, 0.42 ) }
    dend_76 { pt3dadd( -72.4024, 117.482, 14.4623, 0.1 ) }
    dend_76 { pt3dadd( -72.8648, 117.445, 14.6606, 0.1 ) }
    dend_76 { pt3dadd( -73.7186, 117.4, 15.059, 0.14 ) }
    dend_76 { pt3dadd( -74.126, 117.385, 15.2526, 0.1 ) }
    dend_76 { pt3dadd( -74.5358, 117.377, 15.4359, 0.1 ) }
    dend_76 { pt3dadd( -74.999, 117.372, 15.6151, 0.1 ) }
    dend_76 { pt3dadd( -75.4285, 117.357, 15.7452, 0.1 ) }
    dend_76 { pt3dadd( -76.3391, 117.314, 16.0008, 0.1 ) }
    dend_76 { pt3dadd( -76.7779, 117.304, 16.0955, 0.14 ) }
    dend_76 { pt3dadd( -77.2631, 117.318, 16.2009, 0.1 ) }
    dend_76 { pt3dadd( -77.7015, 117.365, 16.2854, 0.14 ) }
    dend_76 { pt3dadd( -77.9208, 117.407, 16.3174, 0.1 ) }
    dend_76 { pt3dadd( -78.1369, 117.468, 16.332, 0.1 ) }
    dend_76 { pt3dadd( -78.7356, 117.663, 16.3134, 0.1 ) }
    dend_76 { pt3dadd( -79.0397, 117.768, 16.3347, 0.1 ) }
    dend_76 { pt3dadd( -79.6291, 117.973, 16.4181, 0.1 ) }
    dend_76 { pt3dadd( -79.926, 118.074, 16.4722, 0.1 ) }
    dend_76 { pt3dadd( -80.3907, 118.222, 16.5684, 0.1 ) }
    dend_76 { pt3dadd( -80.8154, 118.341, 16.6607, 0.1 ) }
    dend_76 { pt3dadd( -81.714, 118.555, 16.8677, 0.1 ) }
    dend_76 { pt3dadd( -82.0132, 118.613, 16.9341, 0.1 ) }
    dend_76 { pt3dadd( -82.5018, 118.684, 17.0364, 0.14 ) }
    dend_76 { pt3dadd( -82.5018, 118.684, 17.0364, 0.28 ) }
    dend_76 { pt3dadd( -82.9954, 118.716, 17.0948, 0.28 ) }
    dend_76 { pt3dadd( -83.4994, 118.726, 17.1168, 0.14 ) }
    dend_76 { pt3dadd( -83.9474, 118.703, 17.0974, 0.1 ) }
    dend_76 { pt3dadd( -84.1713, 118.678, 17.0873, 0.14 ) }
    dend_76 { pt3dadd( -84.6139, 118.607, 17.0666, 0.1 ) }
    dend_76 { pt3dadd( -85.0468, 118.515, 17.0791, 0.1 ) }
    dend_76 { pt3dadd( -85.4775, 118.397, 17.1184, 0.1 ) }
    dend_76 { pt3dadd( -85.9041, 118.266, 17.1771, 0.1 ) }
    dend_76 { pt3dadd( -86.3259, 118.133, 17.2473, 0.14 ) }
    dend_76 { pt3dadd( -86.7375, 117.992, 17.3528, 0.28 ) }
    dend_76 { pt3dadd( -87.5866, 117.683, 17.6264, 0.42 ) }
    dend_76 { pt3dadd( -87.981, 117.527, 17.7689, 0.28 ) }
    dend_76 { pt3dadd( -88.3635, 117.359, 17.9129, 0.14 ) }
    dend_76 { pt3dadd( -88.7452, 117.173, 18.0528, 0.1 ) }
    dend_76 { pt3dadd( -89.5398, 116.756, 18.3292, 0.1 ) }
    dend_76 { pt3dadd( -89.9146, 116.551, 18.467, 0.1 ) }
    dend_76 { pt3dadd( -90.3284, 116.316, 18.6069, 0.1 ) }
    dend_76 { pt3dadd( -90.7403, 116.073, 18.7563, 0.1 ) }
    dend_76 { pt3dadd( -91.1469, 115.819, 18.9045, 0.14 ) }
    dend_76 { pt3dadd( -91.1469, 115.819, 18.9045, 0.28 ) }
    dend_76 { pt3dadd( -91.8872, 115.325, 19.0822, 0.1 ) }
    dend_76 { pt3dadd( -92.2923, 115.038, 19.1796, 0.1 ) }
    dend_76 { pt3dadd( -92.6401, 114.784, 19.2546, 0.14 ) }
    dend_76 { pt3dadd( -92.8922, 114.592, 19.2965, 0.28 ) }
    dend_76 { pt3dadd( -93.2828, 114.292, 19.3356, 0.14 ) }
    dend_76 { pt3dadd( -93.6761, 113.984, 19.3452, 0.1 ) }
    dend_76 { pt3dadd( -93.9162, 113.791, 19.3289, 0.14 ) }
    dend_76 { pt3dadd( -94.3099, 113.485, 19.3026, 0.1 ) }
    dend_76 { pt3dadd( -94.708, 113.193, 19.2766, 0.1 ) }
    dend_76 { pt3dadd( -95.0803, 112.95, 19.2533, 0.1 ) }
    dend_76 { pt3dadd( -95.5136, 112.699, 19.2271, 0.1 ) }
    dend_76 { pt3dadd( -95.9561, 112.476, 19.2015, 0.1 ) }
    dend_76 { pt3dadd( -96.3683, 112.305, 19.1788, 0.1 ) }
    dend_76 { pt3dadd( -96.7927, 112.157, 19.1564, 0.1 ) }
    dend_76 { pt3dadd( -97.2223, 112.032, 19.1344, 0.1 ) }
    dend_76 { pt3dadd( -97.6609, 111.932, 19.1129, 0.1 ) }
    dend_76 { pt3dadd( -98.0953, 111.859, 19.0925, 0.1 ) }
    dend_76 { pt3dadd( -98.5949, 111.795, 19.0697, 0.1 ) }
    dend_76 { pt3dadd( -98.8171, 111.774, 19.0597, 0.1 ) }
    dend_76 { pt3dadd( -99.2673, 111.751, 19.0403, 0.1 ) }
    dend_76 { pt3dadd( -99.7648, 111.739, 19.0192, 0.1 ) }
    dend_76 { pt3dadd( -100.215, 111.743, 19.0005, 0.14 ) }
    dend_76 { pt3dadd( -100.215, 111.743, 19.0005, 0.28 ) }
    dend_76 { pt3dadd( -100.72, 111.773, 18.9805, 0.1 ) }
    dend_76 { pt3dadd( -101.215, 111.812, 18.9612, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_76 { pt3dadd( -101.661, 111.857, 18.9441, 0.1 ) }
    dend_76 { pt3dadd( -102.162, 111.913, 18.9251, 0.1 ) }
    dend_76 { pt3dadd( -102.655, 111.979, 18.9067, 0.1 ) }
    dend_76 { pt3dadd( -103.156, 112.042, 18.8879, 0.1 ) }
    dend_76 { pt3dadd( -103.379, 112.068, 18.8795, 0.1 ) }
    dend_76 { pt3dadd( -103.873, 112.133, 18.861, 0.1 ) }
    dend_76 { pt3dadd( -104.371, 112.208, 18.8427, 0.1 ) }
    dend_76 { pt3dadd( -104.864, 112.276, 18.8244, 0.1 ) }
    dend_76 { pt3dadd( -105.311, 112.335, 18.8077, 0.1 ) }
    dend_76 { pt3dadd( -105.812, 112.402, 18.7891, 0.1 ) }
    dend_76 { pt3dadd( -106.121, 112.446, 18.7776, 0.1 ) }
    dend_76 { pt3dadd( -106.622, 112.513, 18.7589, 0.1 ) }
    dend_76 { pt3dadd( -107.069, 112.571, 18.7422, 0.14 ) }
    dend_76 { pt3dadd( -107.562, 112.639, 18.7239, 0.28 ) }
    dend_76 { pt3dadd( -107.782, 112.675, 18.7159, 0.14 ) }
    // Section: dend_72, id: dend_72, parent: dend_64 (entry count 15/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -18.0712, 79.6961, -6.2926, 0.98 ) }
    dend_72 { pt3dadd( -17.8676, 80.8101, -5.99438, 0.98 ) }
    dend_72 { pt3dadd( -17.7684, 81.4148, -5.86695, 0.84 ) }
    dend_72 { pt3dadd( -17.6916, 82.0188, -5.76346, 0.7 ) }
    dend_72 { pt3dadd( -17.6479, 82.4079, -5.70764, 0.56 ) }
    dend_72 { pt3dadd( -17.5949, 83.0165, -5.63317, 0.7 ) }
    dend_72 { pt3dadd( -17.5523, 83.5682, -5.57424, 0.56 ) }
    dend_72 { pt3dadd( -17.5235, 84.1923, -5.55496, 0.42 ) }
    dend_72 { pt3dadd( -17.518, 84.7483, -5.53969, 0.28 ) }
    dend_72 { pt3dadd( -17.5529, 85.3602, -5.48401, 0.14 ) }
    dend_72 { pt3dadd( -17.6196, 85.9071, -5.40405, 0.1 ) }
    dend_72 { pt3dadd( -17.7273, 86.5123, -5.28627, 0.14 ) }
    dend_72 { pt3dadd( -17.8538, 87.032, -5.16673, 0.28 ) }
    dend_72 { pt3dadd( -17.9358, 87.2921, -5.1015, 0.14 ) }
    dend_72 { pt3dadd( -18.3245, 88.3653, -4.82681, 0.1 ) }
    dend_72 { pt3dadd( -18.5311, 88.8725, -4.70251, 0.1 ) }
    dend_72 { pt3dadd( -18.7339, 89.3808, -4.59024, 0.1 ) }
    dend_72 { pt3dadd( -18.944, 89.955, -4.48501, 0.1 ) }
    dend_72 { pt3dadd( -19.0977, 90.4925, -4.44855, 0.1 ) }
    dend_72 { pt3dadd( -19.2028, 91.0389, -4.47159, 0.1 ) }
    dend_72 { pt3dadd( -19.2592, 91.5929, -4.52447, 0.1 ) }
    dend_72 { pt3dadd( -19.295, 92.209, -4.51755, 0.1 ) }
    dend_72 { pt3dadd( -19.3114, 92.8293, -4.44186, 0.14 ) }
    dend_72 { pt3dadd( -19.3215, 93.8703, -4.21146, 0.28 ) }
    dend_72 { pt3dadd( -19.3312, 94.1382, -4.13079, 0.42 ) }
    dend_72 { pt3dadd( -19.4436, 95.2074, -3.74882, 0.1 ) }
    dend_72 { pt3dadd( -19.6382, 96.2579, -3.34198, 0.14 ) }
    dend_72 { pt3dadd( -19.7745, 96.7624, -3.14464, 0.1 ) }
    dend_72 { pt3dadd( -19.9367, 97.2523, -2.95605, 0.1 ) }
    dend_72 { pt3dadd( -20.1207, 97.752, -2.77717, 0.1 ) }
    dend_72 { pt3dadd( -20.3358, 98.3193, -2.6457, 0.1 ) }
    dend_72 { pt3dadd( -20.5266, 98.8452, -2.60628, 0.1 ) }
    dend_72 { pt3dadd( -20.7102, 99.372, -2.60964, 0.1 ) }
    dend_72 { pt3dadd( -20.7951, 99.639, -2.61056, 0.14 ) }
    dend_72 { pt3dadd( -20.9623, 100.169, -2.56898, 0.7 ) }
    dend_72 { pt3dadd( -21.125, 100.699, -2.48933, 0.7 ) }
    dend_72 { pt3dadd( -21.2763, 101.215, -2.38327, 0.84 ) }
    dend_72 { pt3dadd( -21.4339, 101.739, -2.25716, 0.98 ) }
    dend_72 { pt3dadd( -21.5483, 102.111, -2.16106, 0.98 ) }
    dend_72 { pt3dadd( -21.8645, 103.209, -1.87813, 0.84 ) }
    dend_72 { pt3dadd( -22.0071, 103.732, -1.74773, 0.84 ) }
    dend_72 { pt3dadd( -22.145, 104.262, -1.62823, 0.7 ) }
    dend_72 { pt3dadd( -22.2691, 104.787, -1.48749, 0.56 ) }
    dend_72 { pt3dadd( -22.3715, 105.306, -1.3425, 0.56 ) }
    dend_72 { pt3dadd( -22.4615, 105.904, -1.18196, 0.56 ) }
    dend_72 { pt3dadd( -22.4976, 106.445, -1.05522, 0.42 ) }
    dend_72 { pt3dadd( -22.5094, 106.986, -0.910223, 0.42 ) }
    dend_72 { pt3dadd( -22.5154, 108.054, -0.424325, 0.56 ) }
    dend_72 { pt3dadd( -22.5163, 108.589, -0.0948312, 0.56 ) }
    dend_72 { pt3dadd( -22.5149, 108.904, 0.135008, 0.7 ) }
    dend_72 { pt3dadd( -22.5099, 109.4, 0.527296, 0.7 ) }
    dend_72 { pt3dadd( -22.5099, 109.4, 0.527296, 0.84 ) }
    dend_72 { pt3dadd( -22.3472, 111.108, 1.69893, 1.12 ) }
    dend_72 { pt3dadd( -22.3112, 111.353, 1.82587, 1.12 ) }
    dend_72 { pt3dadd( -22.2247, 111.919, 2.05741, 0.98 ) }
    dend_72 { pt3dadd( -22.1508, 112.523, 2.21027, 0.84 ) }
    dend_72 { pt3dadd( -22.1151, 112.907, 2.23657, 0.84 ) }
    dend_72 { pt3dadd( -22.0724, 114.171, 2.11755, 0.84 ) }
    dend_72 { pt3dadd( -22.08, 114.439, 2.04928, 0.7 ) }
    dend_72 { pt3dadd( -22.1477, 115.037, 1.90182, 0.56 ) }
    dend_72 { pt3dadd( -22.2862, 115.641, 1.76759, 0.42 ) }
    dend_72 { pt3dadd( -22.4581, 116.155, 1.68007, 0.28 ) }
    dend_72 { pt3dadd( -22.6774, 116.732, 1.62377, 0.14 ) }
    dend_72 { pt3dadd( -22.8878, 117.253, 1.61771, 0.28 ) }
    dend_72 { pt3dadd( -22.8878, 117.253, 1.61771, 0.42 ) }
    dend_72 { pt3dadd( -23.0216, 117.794, 1.61943, 0.1 ) }
    dend_72 { pt3dadd( -23.1238, 118.344, 1.62437, 0.1 ) }
    dend_72 { pt3dadd( -23.2203, 118.963, 1.6317, 0.1 ) }
    dend_72 { pt3dadd( -23.2805, 119.51, 1.64051, 0.1 ) }
    dend_72 { pt3dadd( -23.327, 120.135, 1.6527, 0.14 ) }
    dend_72 { pt3dadd( -23.3511, 120.691, 1.70717, 0.28 ) }
    dend_72 { pt3dadd( -23.3503, 120.964, 1.75453, 0.42 ) }
    dend_72 { pt3dadd( -23.3215, 121.498, 1.88226, 0.56 ) }
    dend_72 { pt3dadd( -23.2633, 122.099, 2.05549, 0.56 ) }
    dend_72 { pt3dadd( -23.2232, 122.363, 2.13873, 0.42 ) }
    dend_72 { pt3dadd( -23.0187, 123.481, 2.41726, 0.56 ) }
    dend_72 { pt3dadd( -22.8809, 124.089, 2.4889, 0.42 ) }
    dend_72 { pt3dadd( -22.7875, 124.461, 2.54055, 0.28 ) }
    dend_72 { pt3dadd( -22.6196, 125.059, 2.62236, 0.42 ) }
    dend_72 { pt3dadd( -22.4638, 125.664, 2.68123, 0.56 ) }
    dend_72 { pt3dadd( -22.2705, 126.675, 2.69017, 0.7 ) }
    dend_72 { pt3dadd( -22.1562, 127.647, 2.51683, 0.7 ) }
    dend_72 { pt3dadd( -22.1408, 129.649, 2.42094, 0.56 ) }
    dend_72 { pt3dadd( -22.1615, 129.911, 2.51761, 0.7 ) }
    dend_72 { pt3dadd( -22.1964, 130.391, 2.7888, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_72 { pt3dadd( -22.215, 130.838, 3.12773, 0.7 ) }
    dend_72 { pt3dadd( -22.2137, 131.278, 3.48106, 0.56 ) }
    dend_72 { pt3dadd( -22.217, 131.786, 3.85643, 0.42 ) }
    dend_72 { pt3dadd( -22.2307, 132.812, 4.42652, 0.28 ) }
    dend_72 { pt3dadd( -22.2488, 133.162, 4.61469, 0.14 ) }
    dend_72 { pt3dadd( -22.3361, 134.197, 5.16309, 0.1 ) }
    dend_72 { pt3dadd( -22.3897, 134.55, 5.33575, 0.14 ) }
    dend_72 { pt3dadd( -22.533, 135.11, 5.56242, 0.56 ) }
    dend_72 { pt3dadd( -22.7226, 135.62, 5.70341, 0.42 ) }
    dend_72 { pt3dadd( -22.9781, 136.174, 5.82143, 0.28 ) }
    dend_72 { pt3dadd( -23.2343, 136.664, 5.92502, 0.14 ) }
    dend_72 { pt3dadd( -23.5239, 137.205, 6.02322, 0.1 ) }
    dend_72 { pt3dadd( -23.7861, 137.755, 6.14768, 0.1 ) }
    dend_72 { pt3dadd( -23.9705, 138.266, 6.28784, 0.1 ) }
    dend_72 { pt3dadd( -24.1917, 139.335, 6.62216, 0.14 ) }
    dend_72 { pt3dadd( -24.1917, 139.335, 6.62216, 0.28 ) }
    dend_72 { pt3dadd( -24.0909, 139.913, 6.81124, 0.84 ) }
    dend_72 { pt3dadd( -23.8889, 140.479, 6.99344, 0.7 ) }
    dend_72 { pt3dadd( -23.7218, 140.822, 7.08989, 0.56 ) }
    dend_72 { pt3dadd( -23.4306, 141.368, 7.19691, 0.42 ) }
    dend_72 { pt3dadd( -23.1579, 141.922, 7.23734, 0.56 ) }
    dend_72 { pt3dadd( -23.0588, 142.183, 7.25364, 0.56 ) }
    dend_72 { pt3dadd( -22.9859, 142.453, 7.26768, 0.7 ) }
    dend_72 { pt3dadd( -22.8972, 143.005, 7.2907, 0.84 ) }
    dend_72 { pt3dadd( -22.8604, 143.56, 7.30889, 0.7 ) }
    dend_72 { pt3dadd( -22.8891, 144.115, 7.32092, 0.56 ) }
    dend_72 { pt3dadd( -22.9604, 144.727, 7.33041, 0.7 ) }
    dend_72 { pt3dadd( -22.9604, 144.727, 7.33041, 0.84 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 28/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -18.0712, 79.6961, -6.2926, 0.84 ) }
    dend_65 { pt3dadd( -18.1828, 80.0589, -6.82327, 0.84 ) }
    dend_65 { pt3dadd( -18.3946, 80.7471, -7.83005, 0.7 ) }
    dend_65 { pt3dadd( -18.6001, 81.4148, -8.80668, 0.56 ) }
    dend_65 { pt3dadd( -18.793, 82.0416, -9.7237, 0.42 ) }
    dend_65 { pt3dadd( -18.9046, 82.4044, -10.2544, 0.56 ) }
    dend_65 { pt3dadd( -19.005, 82.7308, -10.7319, 0.42 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 29.9251, 165.167, -67.6149, 0.14 ) }
    dend_60 { pt3dadd( 30.109, 166.432, -67.4427, 0.14 ) }
    dend_60 { pt3dadd( 30.1809, 167.034, -67.3375, 0.28 ) }
    dend_60 { pt3dadd( 30.2647, 167.709, -67.2193, 0.42 ) }
    dend_60 { pt3dadd( 30.3059, 168.008, -67.1704, 0.42 ) }
    dend_60 { pt3dadd( 30.4717, 169.275, -66.9856, 0.28 ) }
    dend_60 { pt3dadd( 30.5633, 169.955, -66.8973, 0.14 ) }
    dend_60 { pt3dadd( 30.6349, 170.549, -66.7901, 0.1 ) }
    dend_60 { pt3dadd( 30.7268, 171.227, -66.6873, 0.1 ) }
    dend_60 { pt3dadd( 30.8134, 171.909, -66.6168, 0.1 ) }
    dend_60 { pt3dadd( 30.8753, 172.506, -66.5492, 0.1 ) }
    dend_60 { pt3dadd( 30.9223, 173.191, -66.4859, 0.1 ) }
    dend_60 { pt3dadd( 30.9352, 173.497, -66.4439, 0.1 ) }
    dend_60 { pt3dadd( 30.9622, 174.169, -66.3293, 0.1 ) }
    dend_60 { pt3dadd( 30.9867, 174.772, -66.212, 0.1 ) }
    dend_60 { pt3dadd( 31.0614, 176.004, -65.9591, 0.1 ) }
    dend_60 { pt3dadd( 31.1289, 176.609, -65.8788, 0.1 ) }
    dend_60 { pt3dadd( 31.2344, 177.28, -65.8434, 0.1 ) }
    dend_60 { pt3dadd( 31.3821, 177.956, -65.8573, 0.1 ) }
    dend_60 { pt3dadd( 31.4993, 178.374, -65.8989, 0.1 ) }
    dend_60 { pt3dadd( 31.7192, 179.009, -66.0085, 0.14 ) }
    dend_60 { pt3dadd( 32.1851, 180.187, -66.2933, 0.14 ) }
    dend_60 { pt3dadd( 32.4333, 180.813, -66.3916, 0.1 ) }
    dend_60 { pt3dadd( 32.5844, 181.222, -66.4254, 0.1 ) }
    dend_60 { pt3dadd( 32.8025, 181.868, -66.4265, 0.1 ) }
    dend_60 { pt3dadd( 32.9926, 182.524, -66.3231, 0.1 ) }
    dend_60 { pt3dadd( 33.1448, 183.173, -66.1298, 0.1 ) }
    dend_60 { pt3dadd( 33.3707, 184.354, -65.6503, 0.1 ) }
    dend_60 { pt3dadd( 33.413, 184.635, -65.5326, 0.1 ) }
    dend_60 { pt3dadd( 33.4809, 185.273, -65.273, 0.1 ) }
    dend_60 { pt3dadd( 33.5792, 186.482, -64.8166, 0.1 ) }
    dend_60 { pt3dadd( 33.6116, 187.07, -64.6271, 0.1 ) }
    dend_60 { pt3dadd( 33.6314, 187.734, -64.4697, 0.1 ) }
    dend_60 { pt3dadd( 33.6516, 188.346, -64.3883, 0.1 ) }
    dend_60 { pt3dadd( 33.6736, 188.957, -64.3272, 0.1 ) }
    dend_60 { pt3dadd( 33.6837, 189.643, -64.2533, 0.1 ) }
    dend_60 { pt3dadd( 33.6959, 190.255, -64.1985, 0.1 ) }
    dend_60 { pt3dadd( 33.7214, 190.855, -64.1032, 0.1 ) }
    dend_60 { pt3dadd( 33.7396, 191.287, -64.0126, 0.1 ) }
    dend_60 { pt3dadd( 33.7617, 191.584, -63.9412, 0.1 ) }
    dend_60 { pt3dadd( 33.8899, 192.8, -63.6425, 0.1 ) }
    dend_60 { pt3dadd( 33.977, 193.458, -63.4921, 0.1 ) }
    dend_60 { pt3dadd( 34.0814, 194.129, -63.3564, 0.1 ) }
    dend_60 { pt3dadd( 34.1855, 194.731, -63.2606, 0.1 ) }
    dend_60 { pt3dadd( 34.2935, 195.4, -63.1907, 0.1 ) }
    dend_60 { pt3dadd( 34.4174, 196.079, -63.2057, 0.1 ) }
    dend_60 { pt3dadd( 34.5679, 196.726, -63.3586, 0.1 ) }
    dend_60 { pt3dadd( 34.635, 197.01, -63.4601, 0.1 ) }
    dend_60 { pt3dadd( 34.7873, 197.63, -63.7335, 0.1 ) }
    dend_60 { pt3dadd( 34.9235, 198.171, -64.0047, 0.1 ) }
    dend_60 { pt3dadd( 35.2263, 199.249, -64.6619, 0.14 ) }
    dend_60 { pt3dadd( 35.5505, 200.301, -65.3604, 0.28 ) }
    dend_60 { pt3dadd( 35.7185, 200.793, -65.696, 0.14 ) }
    dend_60 { pt3dadd( 35.9227, 201.339, -66.0534, 0.1 ) }
    dend_60 { pt3dadd( 36.0225, 201.592, -66.2038, 0.1 ) }
    dend_60 { pt3dadd( 36.5136, 202.778, -66.7757, 0.1 ) }
    dend_60 { pt3dadd( 36.757, 203.394, -66.9781, 0.1 ) }
    dend_60 { pt3dadd( 36.9116, 203.793, -67.0684, 0.1 ) }
    dend_60 { pt3dadd( 37.1734, 204.411, -67.1923, 0.1 ) }
    dend_60 { pt3dadd( 37.4343, 205.044, -67.2924, 0.14 ) }
    dend_60 { pt3dadd( 37.6807, 205.677, -67.35, 0.1 ) }
    dend_60 { pt3dadd( 37.7737, 205.972, -67.3506, 0.1 ) }
    dend_60 { pt3dadd( 37.9639, 206.638, -67.3553, 0.1 ) }
    dend_60 { pt3dadd( 38.0712, 207.051, -67.3599, 0.1 ) }
    dend_60 { pt3dadd( 38.2229, 207.636, -67.3665, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_60 { pt3dadd( 38.4094, 208.297, -67.4357, 0.1 ) }
    dend_60 { pt3dadd( 38.5906, 208.876, -67.5354, 0.1 ) }
    dend_60 { pt3dadd( 38.8044, 209.507, -67.6706, 0.1 ) }
    dend_60 { pt3dadd( 39.0142, 210.149, -67.8272, 0.1 ) }
    dend_60 { pt3dadd( 39.1322, 210.548, -67.9288, 0.1 ) }
    dend_60 { pt3dadd( 39.4754, 211.757, -68.2514, 0.1 ) }
    dend_60 { pt3dadd( 39.5821, 212.166, -68.3652, 0.1 ) }
    dend_60 { pt3dadd( 39.7322, 212.805, -68.5436, 0.14 ) }
    dend_60 { pt3dadd( 39.85, 213.385, -68.7098, 0.1 ) }
    dend_60 { pt3dadd( 39.9409, 213.975, -68.8701, 0.1 ) }
    dend_60 { pt3dadd( 39.991, 214.574, -68.9969, 0.1 ) }
    dend_60 { pt3dadd( 39.991, 214.574, -68.9969, 0.14 ) }
    dend_60 { pt3dadd( 39.964, 214.882, -69.0179, 0.56 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 13/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 29.9251, 165.167, -67.6149, 0.1 ) }
    dend_59 { pt3dadd( 28.8521, 164.23, -67.5969, 0.1 ) }
    dend_59 { pt3dadd( 28.2943, 163.728, -67.623, 0.1 ) }
    dend_59 { pt3dadd( 27.9571, 163.389, -67.7089, 0.1 ) }
    dend_59 { pt3dadd( 27.474, 162.849, -67.9009, 0.1 ) }
    dend_59 { pt3dadd( 27.0198, 162.293, -68.1149, 0.1 ) }
    dend_59 { pt3dadd( 26.751, 161.922, -68.2542, 0.1 ) }
    dend_59 { pt3dadd( 26.3936, 161.305, -68.4779, 0.1 ) }
    dend_59 { pt3dadd( 25.8724, 160.162, -68.7578, 0.1 ) }
    dend_59 { pt3dadd( 25.5919, 159.265, -68.8607, 0.1 ) }
    dend_59 { pt3dadd( 25.5156, 158.94, -68.828, 0.1 ) }
    dend_59 { pt3dadd( 25.3922, 158.307, -68.6524, 0.1 ) }
    dend_59 { pt3dadd( 25.1468, 157.055, -68.1537, 0.1 ) }
    dend_59 { pt3dadd( 25.0129, 156.462, -67.8731, 0.1 ) }
    dend_59 { pt3dadd( 24.8383, 155.818, -67.5223, 0.14 ) }
    dend_59 { pt3dadd( 24.5004, 154.624, -66.8528, 0.84 ) }
    dend_59 { pt3dadd( 24.2962, 153.98, -66.5144, 0.7 ) }
    dend_59 { pt3dadd( 24.168, 153.573, -66.3283, 0.56 ) }
    dend_59 { pt3dadd( 23.9467, 152.685, -66.0515, 0.42 ) }
    dend_59 { pt3dadd( 23.9467, 152.685, -66.0514, 0.28 ) }
    dend_59 { pt3dadd( 23.9639, 152.357, -65.9801, 0.42 ) }
    dend_59 { pt3dadd( 24.0505, 152.037, -65.9261, 0.56 ) }
    dend_59 { pt3dadd( 24.2985, 151.349, -65.7886, 0.42 ) }
    dend_59 { pt3dadd( 24.5413, 150.734, -65.6583, 0.28 ) }
    dend_59 { pt3dadd( 24.8128, 150.055, -65.5132, 0.42 ) }
    dend_59 { pt3dadd( 25.067, 149.437, -65.4296, 0.28 ) }
    dend_59 { pt3dadd( 25.3012, 148.828, -65.3439, 0.14 ) }
    dend_59 { pt3dadd( 25.5319, 148.202, -65.2514, 0.1 ) }
    dend_59 { pt3dadd( 25.7577, 147.579, -65.1517, 0.1 ) }
    dend_59 { pt3dadd( 25.9856, 146.959, -65.041, 0.1 ) }
    dend_59 { pt3dadd( 26.3957, 145.808, -64.8181, 0.1 ) }
    dend_59 { pt3dadd( 26.7662, 144.677, -64.4625, 0.28 ) }
    dend_59 { pt3dadd( 26.9418, 144.079, -64.217, 0.14 ) }
    dend_59 { pt3dadd( 27.0832, 143.437, -63.8461, 0.1 ) }
    dend_59 { pt3dadd( 27.1727, 142.885, -63.4732, 0.1 ) }
    dend_59 { pt3dadd( 27.2381, 142.338, -63.0822, 0.1 ) }
    dend_59 { pt3dadd( 27.3363, 141.221, -62.2865, 0.1 ) }
    dend_59 { pt3dadd( 27.402, 140.652, -61.9533, 0.1 ) }
    dend_59 { pt3dadd( 27.5833, 139.431, -61.3582, 0.1 ) }
    dend_59 { pt3dadd( 27.7591, 138.793, -61.2553, 0.1 ) }
    dend_59 { pt3dadd( 28.0574, 138.224, -61.4664, 0.1 ) }
    dend_59 { pt3dadd( 28.3961, 137.732, -61.7842, 0.1 ) }
    dend_59 { pt3dadd( 29.0709, 136.912, -62.4573, 0.1 ) }
    dend_59 { pt3dadd( 29.8175, 136.125, -63.181, 0.1 ) }
    dend_59 { pt3dadd( 31.3728, 134.681, -64.5781, 0.1 ) }
    dend_59 { pt3dadd( 31.3728, 134.681, -64.5781, 0.14 ) }
    dend_59 { pt3dadd( 32.3519, 133.93, -65.004, 0.42 ) }
    dend_59 { pt3dadd( 32.7192, 133.641, -64.9421, 0.28 ) }
    dend_59 { pt3dadd( 33.2025, 133.176, -64.5801, 0.14 ) }
    dend_59 { pt3dadd( 33.9545, 132.309, -63.7368, 0.1 ) }
    dend_59 { pt3dadd( 34.3369, 131.835, -63.2809, 0.1 ) }
    dend_59 { pt3dadd( 34.6037, 131.518, -63.0583, 0.1 ) }
    dend_59 { pt3dadd( 35.1004, 130.993, -62.8231, 0.1 ) }
    dend_59 { pt3dadd( 35.6393, 130.478, -62.659, 0.14 ) }
    dend_59 { pt3dadd( 35.8877, 130.254, -62.5964, 0.1 ) }
    dend_59 { pt3dadd( 36.8036, 129.385, -62.3027, 0.1 ) }
    dend_59 { pt3dadd( 37.2785, 128.879, -61.985, 0.1 ) }
    dend_59 { pt3dadd( 37.6181, 128.429, -61.6048, 0.1 ) }
    dend_59 { pt3dadd( 37.8031, 128.118, -61.3053, 0.1 ) }
    dend_59 { pt3dadd( 38.2063, 127.264, -60.4817, 0.1 ) }
    dend_59 { pt3dadd( 38.5415, 126.262, -59.592, 0.1 ) }
    dend_59 { pt3dadd( 38.6549, 125.743, -59.1778, 0.1 ) }
    dend_59 { pt3dadd( 38.7389, 125.18, -58.8222, 0.14 ) }
    dend_59 { pt3dadd( 38.8297, 124.567, -58.5592, 0.1 ) }
    dend_59 { pt3dadd( 38.9354, 123.936, -58.4101, 0.1 ) }
    dend_59 { pt3dadd( 39.0626, 123.277, -58.3891, 0.1 ) }
    dend_59 { pt3dadd( 39.1786, 122.622, -58.4537, 0.1 ) }
    dend_59 { pt3dadd( 39.2443, 121.956, -58.4992, 0.1 ) }
    dend_59 { pt3dadd( 39.2823, 120.72, -58.5333, 0.1 ) }
    dend_59 { pt3dadd( 39.2727, 120.257, -58.5233, 0.1 ) }
    dend_59 { pt3dadd( 39.2328, 119.511, -58.4667, 0.1 ) }
    dend_59 { pt3dadd( 39.1687, 118.779, -58.3746, 0.1 ) }
    dend_59 { pt3dadd( 39.0319, 117.4, -58.1306, 0.1 ) }
    dend_59 { pt3dadd( 38.9679, 116.752, -57.9816, 0.1 ) }
    dend_59 { pt3dadd( 38.9169, 116.108, -57.799, 0.1 ) }
    dend_59 { pt3dadd( 38.9053, 115.464, -57.6244, 0.1 ) }
    dend_59 { pt3dadd( 38.9363, 114.746, -57.4502, 0.1 ) }
    dend_59 { pt3dadd( 38.9864, 114.103, -57.2754, 0.1 ) }
    dend_59 { pt3dadd( 39.0218, 113.781, -57.1892, 0.1 ) }
    dend_59 { pt3dadd( 39.0872, 113.147, -56.9864, 0.1 ) }
    dend_59 { pt3dadd( 39.1525, 112.528, -56.7643, 0.1 ) }
    dend_59 { pt3dadd( 39.2232, 111.908, -56.5232, 0.1 ) }
    dend_59 { pt3dadd( 39.3621, 110.645, -56.0138, 0.1 ) }
    dend_59 { pt3dadd( 39.4211, 110.022, -55.7681, 0.1 ) }
    dend_59 { pt3dadd( 39.4636, 109.394, -55.5421, 0.1 ) }
    dend_59 { pt3dadd( 39.4821, 108.752, -55.3451, 0.1 ) }
    dend_59 { pt3dadd( 39.4842, 108.429, -55.2676, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_59 { pt3dadd( 39.4762, 107.971, -55.1967, 0.7 ) }
    dend_59 { pt3dadd( 39.4489, 107.302, -55.1564, 0.56 ) }
    dend_59 { pt3dadd( 39.3992, 106.553, -55.118, 0.42 ) }
    dend_59 { pt3dadd( 39.3522, 105.817, -55.1402, 0.28 ) }
    dend_59 { pt3dadd( 39.318, 105.153, -55.197, 0.14 ) }
    dend_59 { pt3dadd( 39.2691, 104.418, -55.2451, 0.1 ) }
    dend_59 { pt3dadd( 39.2088, 103.669, -55.2787, 0.1 ) }
    dend_59 { pt3dadd( 39.1165, 103.005, -55.2507, 0.1 ) }
    dend_59 { pt3dadd( 38.8587, 101.639, -55.0695, 0.1 ) }
    dend_59 { pt3dadd( 38.7787, 101.32, -55.0034, 0.1 ) }
    dend_59 { pt3dadd( 38.4273, 100.128, -54.6797, 0.1 ) }
    dend_59 { pt3dadd( 38.213, 99.443, -54.4489, 0.1 ) }
    dend_59 { pt3dadd( 37.7759, 98.208, -53.9377, 0.1 ) }
    dend_59 { pt3dadd( 37.5151, 97.5745, -53.618, 0.1 ) }
    dend_59 { pt3dadd( 37.3464, 97.2052, -53.3869, 0.1 ) }
    dend_59 { pt3dadd( 37.1065, 96.6612, -53.0745, 0.1 ) }
    dend_59 { pt3dadd( 37.0064, 96.3629, -52.955, 0.14 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 17/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 7.47564, -193.323, -0.853167, 0.98 ) }
    dend_26 { pt3dadd( 8.16545, -193.697, -0.689459, 0.98 ) }
    dend_26 { pt3dadd( 8.46575, -193.889, -0.625251, 1.12 ) }
    dend_26 { pt3dadd( 9.51554, -194.683, -0.421804, 1.82 ) }
    dend_26 { pt3dadd( 10.6067, -195.649, -0.24911, 1.68 ) }
    dend_26 { pt3dadd( 11.5992, -196.719, -0.143577, 1.54 ) }
    dend_26 { pt3dadd( 11.9846, -197.323, -0.146672, 1.4 ) }
    dend_26 { pt3dadd( 12.1821, -197.985, -0.249461, 1.26 ) }
    dend_26 { pt3dadd( 12.0917, -199.255, -0.591363, 1.12 ) }
    dend_26 { pt3dadd( 11.5424, -200.427, -1.05168, 1.12 ) }
    dend_26 { pt3dadd( 11.3412, -200.693, -1.18067, 1.12 ) }
    dend_26 { pt3dadd( 10.3677, -201.657, -1.72884, 1.12 ) }
    dend_26 { pt3dadd( 9.37562, -202.47, -2.25543, 1.12 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.47564, -193.323, -0.853167, 0.98 ) }
    dend_25 { pt3dadd( 7.28461, -193.548, -0.40658, 0.98 ) }
    dend_25 { pt3dadd( 7.2103, -193.648, -0.199024, 1.12 ) }
    dend_25 { pt3dadd( 6.88919, -194.048, 0.643407, 1.4 ) }
    dend_25 { pt3dadd( 6.70905, -194.281, 1.0899, 1.26 ) }
    dend_25 { pt3dadd( 6.34298, -194.751, 1.90694, 1.12 ) }
    dend_25 { pt3dadd( 6.1368, -195.016, 2.32969, 0.98 ) }
    dend_25 { pt3dadd( 5.76682, -195.504, 3.01804, 0.84 ) }
    dend_25 { pt3dadd( 5.55887, -195.777, 3.34396, 0.7 ) }
    dend_25 { pt3dadd( 5.32528, -196.118, 3.67633, 0.56 ) }
    dend_25 { pt3dadd( 5.09572, -196.48, 4.00058, 0.1 ) }
    dend_25 { pt3dadd( 4.94708, -196.715, 4.18141, 0.1 ) }
    dend_25 { pt3dadd( 4.64627, -197.204, 4.53533, 0.1 ) }
    dend_25 { pt3dadd( 4.47502, -197.459, 4.6779, 0.1 ) }
    dend_25 { pt3dadd( 3.90993, -198.288, 5.0844, 0.14 ) }
    dend_25 { pt3dadd( 3.90993, -198.288, 5.0844, 0.28 ) }
    dend_25 { pt3dadd( 3.5891, -198.713, 5.13768, 0.28 ) }
    dend_25 { pt3dadd( 3.3941, -198.98, 5.12337, 0.14 ) }
    dend_25 { pt3dadd( 2.84742, -199.806, 4.94114, 0.1 ) }
    dend_25 { pt3dadd( 2.69186, -200.084, 4.85127, 0.1 ) }
    dend_25 { pt3dadd( 2.30687, -200.946, 4.51092, 0.14 ) }
    dend_25 { pt3dadd( 2.24187, -201.16, 4.43546, 0.56 ) }
    dend_25 { pt3dadd( 2.17583, -201.6, 4.26314, 0.42 ) }
    dend_25 { pt3dadd( 2.16498, -202.036, 4.09784, 0.28 ) }
    dend_25 { pt3dadd( 2.19729, -202.488, 3.95027, 0.14 ) }
    dend_25 { pt3dadd( 2.23856, -202.941, 3.81435, 0.1 ) }
    dend_25 { pt3dadd( 2.27971, -203.403, 3.70484, 0.14 ) }
    dend_25 { pt3dadd( 2.31416, -204.375, 3.49446, 0.28 ) }
    dend_25 { pt3dadd( 2.30952, -204.84, 3.4028, 0.42 ) }
    dend_25 { pt3dadd( 2.29428, -205.171, 3.34586, 0.1 ) }
    dend_25 { pt3dadd( 2.25952, -205.688, 3.27727, 0.1 ) }
    dend_25 { pt3dadd( 2.23295, -206.218, 3.2309, 0.1 ) }
    dend_25 { pt3dadd( 2.22558, -206.741, 3.21674, 0.1 ) }
    dend_25 { pt3dadd( 2.24068, -206.978, 3.225, 0.1 ) }
    dend_25 { pt3dadd( 2.27455, -207.211, 3.22589, 0.84 ) }
    dend_25 { pt3dadd( 2.39198, -207.672, 3.2085, 0.7 ) }
    dend_25 { pt3dadd( 2.56181, -208.17, 3.17336, 0.56 ) }
    dend_25 { pt3dadd( 2.73726, -208.609, 3.13263, 0.42 ) }
    dend_25 { pt3dadd( 2.94394, -209.099, 3.08299, 0.28 ) }
    dend_25 { pt3dadd( 3.13156, -209.533, 3.03732, 0.14 ) }
    dend_25 { pt3dadd( 3.34113, -210.021, 2.98651, 0.28 ) }
    dend_25 { pt3dadd( 3.43098, -210.239, 2.96521, 0.28 ) }
    dend_25 { pt3dadd( 3.59995, -210.683, 2.92724, 0.14 ) }
    dend_25 { pt3dadd( 3.75631, -211.122, 2.89369, 0.1 ) }
    dend_25 { pt3dadd( 3.92134, -211.634, 2.86122, 0.1 ) }
    dend_25 { pt3dadd( 4.05594, -212.079, 2.83637, 0.1 ) }
    dend_25 { pt3dadd( 4.18185, -212.536, 2.81548, 0.14 ) }
    dend_25 { pt3dadd( 4.29187, -212.996, 2.7646, 0.28 ) }
    dend_25 { pt3dadd( 4.38519, -213.455, 2.69055, 0.28 ) }
    dend_25 { pt3dadd( 4.46395, -213.915, 2.59929, 0.14 ) }
    dend_25 { pt3dadd( 4.52603, -214.366, 2.49721, 0.1 ) }
    dend_25 { pt3dadd( 4.57624, -214.825, 2.3821, 0.1 ) }
    dend_25 { pt3dadd( 4.63851, -215.763, 2.14299, 0.14 ) }
    dend_25 { pt3dadd( 4.65347, -216.222, 2.03004, 0.28 ) }
    dend_25 { pt3dadd( 4.6588, -216.687, 1.92778, 0.42 ) }
    dend_25 { pt3dadd( 4.6588, -216.687, 1.92778, 0.56 ) }
    dend_25 { pt3dadd( 4.66487, -217.014, 1.88876, 0.56 ) }
    dend_25 { pt3dadd( 4.69006, -217.545, 1.86247, 0.56 ) }
    dend_25 { pt3dadd( 4.73304, -218.018, 1.8741, 0.56 ) }
    dend_25 { pt3dadd( 4.78527, -218.488, 1.88202, 0.7 ) }
    dend_25 { pt3dadd( 4.85805, -218.95, 1.88164, 0.56 ) }
    dend_25 { pt3dadd( 4.95112, -219.414, 1.87369, 0.42 ) }
    dend_25 { pt3dadd( 5.07249, -219.872, 1.85459, 0.56 ) }
    dend_25 { pt3dadd( 5.21361, -220.326, 1.8278, 0.42 ) }
    dend_25 { pt3dadd( 5.36127, -220.776, 1.79824, 0.28 ) }
    dend_25 { pt3dadd( 5.52037, -221.28, 1.72923, 0.14 ) }
    dend_25 { pt3dadd( 5.65639, -221.726, 1.64115, 0.1 ) }
    dend_25 { pt3dadd( 5.79171, -222.221, 1.51918, 0.1 ) }
    dend_25 { pt3dadd( 5.88693, -222.671, 1.39443, 0.1 ) }
    dend_25 { pt3dadd( 5.95157, -223.123, 1.26297, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_25 { pt3dadd( 5.99423, -223.967, 1.03306, 0.1 ) }
    dend_25 { pt3dadd( 5.99423, -223.967, 1.03306, 0.1 ) }
    dend_25 { pt3dadd( 5.98027, -224.303, 1.03494, 0.1 ) }
    dend_25 { pt3dadd( 5.94625, -224.83, 1.10611, 0.1 ) }
    dend_25 { pt3dadd( 5.92678, -225.285, 1.20791, 0.1 ) }
    dend_25 { pt3dadd( 5.91365, -225.797, 1.35481, 0.1 ) }
    dend_25 { pt3dadd( 5.89835, -226.743, 1.67282, 0.14 ) }
    dend_25 { pt3dadd( 5.88611, -227.185, 1.81506, 0.1 ) }
    dend_25 { pt3dadd( 5.8653, -227.694, 1.96917, 0.14 ) }
    dend_25 { pt3dadd( 5.83205, -228.148, 2.09662, 0.1 ) }
    dend_25 { pt3dadd( 5.77798, -228.653, 2.22175, 0.14 ) }
    dend_25 { pt3dadd( 5.73885, -228.981, 2.28327, 0.28 ) }
    dend_25 { pt3dadd( 5.65903, -229.495, 2.34404, 0.14 ) }
    dend_25 { pt3dadd( 5.57785, -230.017, 2.40573, 0.1 ) }
    dend_25 { pt3dadd( 5.51146, -230.542, 2.46203, 0.14 ) }
    dend_25 { pt3dadd( 5.4883, -230.774, 2.50554, 0.28 ) }
    dend_25 { pt3dadd( 5.45834, -231.224, 2.61747, 0.42 ) }
    dend_25 { pt3dadd( 5.44097, -231.546, 2.71333, 0.1 ) }
    dend_25 { pt3dadd( 5.41418, -231.993, 2.8658, 0.1 ) }
    dend_25 { pt3dadd( 5.38821, -232.44, 3.02712, 0.1 ) }
    dend_25 { pt3dadd( 5.32996, -233.447, 3.39929, 0.14 ) }
    dend_25 { pt3dadd( 5.3126, -233.929, 3.61012, 0.1 ) }
    dend_25 { pt3dadd( 5.31167, -234.232, 3.756, 0.14 ) }
    dend_25 { pt3dadd( 5.33396, -234.713, 3.98797, 0.28 ) }
    dend_25 { pt3dadd( 5.36976, -235.137, 4.18358, 0.42 ) }
    dend_25 { pt3dadd( 5.40469, -235.357, 4.26866, 0.56 ) }
    dend_25 { pt3dadd( 5.58822, -236.185, 4.49344, 0.56 ) }
    dend_25 { pt3dadd( 5.7086, -236.633, 4.60013, 0.42 ) }
    dend_25 { pt3dadd( 5.82891, -237.082, 4.69094, 0.28 ) }
    dend_25 { pt3dadd( 5.93418, -237.54, 4.76833, 0.14 ) }
    dend_25 { pt3dadd( 6.02557, -238.053, 4.83488, 0.1 ) }
    dend_25 { pt3dadd( 6.09555, -238.572, 4.87786, 0.1 ) }
    dend_25 { pt3dadd( 6.15011, -239.042, 4.9188, 0.1 ) }
    dend_25 { pt3dadd( 6.21449, -239.565, 4.99848, 0.1 ) }
    dend_25 { pt3dadd( 6.28335, -240.073, 5.10316, 0.1 ) }
    dend_25 { pt3dadd( 6.35565, -240.517, 5.25219, 0.1 ) }
    dend_25 { pt3dadd( 6.39722, -240.732, 5.34476, 0.1 ) }
    dend_25 { pt3dadd( 6.5711, -241.509, 5.72055, 0.1 ) }
    dend_25 { pt3dadd( 6.66052, -241.924, 5.93271, 0.14 ) }
    dend_25 { pt3dadd( 6.74193, -242.344, 6.14478, 0.1 ) }
    dend_25 { pt3dadd( 6.86909, -243.236, 6.56957, 0.14 ) }
    dend_25 { pt3dadd( 6.90606, -243.672, 6.75804, 0.1 ) }
    dend_25 { pt3dadd( 6.91601, -244.174, 6.93955, 0.1 ) }
    dend_25 { pt3dadd( 6.87581, -244.684, 7.04526, 0.1 ) }
    dend_25 { pt3dadd( 6.79634, -245.207, 7.10729, 0.1 ) }
    dend_25 { pt3dadd( 6.69479, -245.72, 7.11814, 0.1 ) }
    dend_25 { pt3dadd( 6.64172, -245.949, 7.10093, 0.1 ) }
    dend_25 { pt3dadd( 6.51138, -246.462, 7.05411, 0.1 ) }
    dend_25 { pt3dadd( 6.26422, -247.421, 6.95789, 0.14 ) }
    dend_25 { pt3dadd( 6.13082, -247.934, 6.91005, 0.1 ) }
    dend_25 { pt3dadd( 6.02896, -248.395, 6.90371, 0.14 ) }
    dend_25 { pt3dadd( 5.94281, -248.91, 6.93858, 0.1 ) }
    dend_25 { pt3dadd( 5.90756, -249.24, 6.98689, 0.1 ) }
    dend_25 { pt3dadd( 5.88525, -249.751, 7.1038, 0.1 ) }
    dend_25 { pt3dadd( 5.88496, -250.258, 7.26414, 0.1 ) }
    dend_25 { pt3dadd( 5.87955, -251.195, 7.50311, 0.14 ) }
    dend_25 { pt3dadd( 5.85655, -251.66, 7.59757, 0.28 ) }
    dend_25 { pt3dadd( 5.81597, -252.118, 7.66443, 0.42 ) }
    dend_25 { pt3dadd( 5.73151, -252.64, 7.71199, 0.56 ) }
    dend_25 { pt3dadd( 5.6357, -252.967, 7.6975, 0.42 ) }
    dend_25 { pt3dadd( 5.28138, -253.854, 7.54741, 0.28 ) }
    dend_25 { pt3dadd( 5.06305, -254.325, 7.42256, 0.42 ) }
    dend_25 { pt3dadd( 4.92382, -254.614, 7.34463, 0.28 ) }
    dend_25 { pt3dadd( 4.65203, -255.217, 7.18794, 0.14 ) }
    dend_25 { pt3dadd( 4.33046, -256.03, 6.93588, 0.1 ) }
    dend_25 { pt3dadd( 4.18255, -256.46, 6.8007, 0.1 ) }
    dend_25 { pt3dadd( 4.06173, -256.904, 6.67512, 0.1 ) }
    dend_25 { pt3dadd( 3.96626, -257.407, 6.52097, 0.1 ) }
    dend_25 { pt3dadd( 3.91465, -257.86, 6.41676, 0.1 ) }
    dend_25 { pt3dadd( 3.86954, -258.819, 6.29637, 0.1 ) }
    dend_25 { pt3dadd( 3.86405, -259.155, 6.30021, 0.1 ) }
    dend_25 { pt3dadd( 3.8556, -259.626, 6.33519, 0.1 ) }
    dend_25 { pt3dadd( 3.84573, -260.088, 6.39816, 0.1 ) }
    dend_25 { pt3dadd( 3.8425, -261.069, 6.58103, 0.1 ) }
    dend_25 { pt3dadd( 3.83789, -261.585, 6.70674, 0.1 ) }
    dend_25 { pt3dadd( 3.84065, -262.089, 6.85299, 0.1 ) }
    dend_25 { pt3dadd( 3.83799, -262.549, 6.97182, 0.1 ) }
    dend_25 { pt3dadd( 3.81569, -263.069, 7.08745, 0.1 ) }
    dend_25 { pt3dadd( 3.77922, -263.528, 7.16562, 0.1 ) }
    dend_25 { pt3dadd( 3.74223, -263.86, 7.19932, 0.1 ) }
    dend_25 { pt3dadd( 3.66873, -264.326, 7.21863, 0.1 ) }
    dend_25 { pt3dadd( 3.562, -264.838, 7.21583, 0.1 ) }
    dend_25 { pt3dadd( 3.43674, -265.356, 7.19388, 0.1 ) }
    dend_25 { pt3dadd( 3.30561, -265.862, 7.15886, 0.1 ) }
    dend_25 { pt3dadd( 3.16369, -266.374, 7.11874, 0.1 ) }
    dend_25 { pt3dadd( 2.91495, -267.246, 7.0477, 0.1 ) }
    dend_25 { pt3dadd( 2.76316, -267.747, 7.01182, 0.1 ) }
    dend_25 { pt3dadd( 2.61765, -268.197, 6.95606, 0.1 ) }
    dend_25 { pt3dadd( 2.44557, -268.697, 6.88066, 0.1 ) }
    dend_25 { pt3dadd( 2.26214, -269.177, 6.773, 0.14 ) }
    dend_25 { pt3dadd( 2.13165, -269.479, 6.69769, 0.28 ) }
    dend_25 { pt3dadd( 1.91715, -269.948, 6.58906, 0.14 ) }
    dend_25 { pt3dadd( 1.48123, -270.819, 6.35194, 0.14 ) }
    dend_25 { pt3dadd( 1.32808, -271.1, 6.2701, 0.28 ) }
    dend_25 { pt3dadd( 0.858597, -271.953, 6.0225, 0.14 ) }
    dend_25 { pt3dadd( 0.615983, -272.407, 5.90591, 0.1 ) }
    dend_25 { pt3dadd( 0.384758, -272.872, 5.77955, 0.14 ) }
    dend_25 { pt3dadd( 0.283848, -273.08, 5.72922, 0.28 ) }
    dend_25 { pt3dadd( 0.152755, -273.379, 5.68609, 0.1 ) }
    dend_25 { pt3dadd( -0.0423212, -273.872, 5.62719, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_25 { pt3dadd( -0.206494, -274.379, 5.61275, 0.1 ) }
    dend_25 { pt3dadd( -0.458751, -275.305, 5.51297, 0.14 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 22.9353, -103.515, 2.75128, 0.84 ) }
    dend_23 { pt3dadd( 22.4711, -104.177, 1.6804, 0.84 ) }
    dend_23 { pt3dadd( 21.9632, -104.901, 0.508915, 0.98 ) }
    dend_23 { pt3dadd( 21.5151, -105.54, -0.524668, 0.84 ) }
    dend_23 { pt3dadd( 21.0054, -106.266, -1.70037, 0.7 ) }
    dend_23 { pt3dadd( 20.8851, -106.438, -1.97786, 0.84 ) }
    dend_23 { pt3dadd( 20.8851, -106.438, -1.97786, 0.98 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 9/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 22.9353, -103.515, 2.75128, 0.56 ) }
    dend_20 { pt3dadd( 23.0077, -103.679, 2.5913, 0.56 ) }
    dend_20 { pt3dadd( 23.3542, -104.377, 1.95531, 0.7 ) }
    dend_20 { pt3dadd( 23.535, -104.735, 1.60525, 0.56 ) }
    dend_20 { pt3dadd( 23.6972, -105.06, 1.28864, 0.42 ) }
    dend_20 { pt3dadd( 24.0505, -105.738, 0.633564, 0.28 ) }
    dend_20 { pt3dadd( 24.1771, -105.966, 0.415797, 0.14 ) }
    dend_20 { pt3dadd( 24.3904, -106.309, 0.058158, 0.1 ) }
    dend_20 { pt3dadd( 24.8311, -106.925, -0.613542, 0.1 ) }
    dend_20 { pt3dadd( 24.932, -107.057, -0.785051, 0.14 ) }
    dend_20 { pt3dadd( 25.0811, -107.238, -1.0339, 0.28 ) }
    dend_20 { pt3dadd( 25.2401, -107.422, -1.27427, 0.14 ) }
    dend_20 { pt3dadd( 25.7194, -107.977, -1.96714, 0.1 ) }
    dend_20 { pt3dadd( 25.8892, -108.173, -2.19555, 0.14 ) }
    dend_20 { pt3dadd( 26.4092, -108.792, -2.79924, 0.28 ) }
    dend_20 { pt3dadd( 26.6781, -109.144, -3.09419, 0.14 ) }
    dend_20 { pt3dadd( 26.9359, -109.537, -3.35385, 0.1 ) }
    dend_20 { pt3dadd( 27.1684, -109.969, -3.55329, 0.1 ) }
    dend_20 { pt3dadd( 27.2567, -110.179, -3.62511, 0.28 ) }
    dend_20 { pt3dadd( 27.4003, -110.611, -3.75897, 0.14 ) }
    dend_20 { pt3dadd( 27.5167, -111.058, -3.87132, 0.1 ) }
    dend_20 { pt3dadd( 27.5837, -111.5, -4.02945, 0.14 ) }
    dend_20 { pt3dadd( 27.6221, -111.98, -4.2372, 0.1 ) }
    dend_20 { pt3dadd( 27.6381, -112.746, -4.67071, 0.1 ) }
    dend_20 { pt3dadd( 27.6394, -112.947, -4.79978, 0.1 ) }
    dend_20 { pt3dadd( 27.6414, -113.342, -5.06963, 0.14 ) }
    dend_20 { pt3dadd( 27.6571, -114.146, -5.61895, 0.1 ) }
    dend_20 { pt3dadd( 27.6724, -114.534, -5.88056, 0.1 ) }
    dend_20 { pt3dadd( 27.6985, -115.332, -6.44047, 0.14 ) }
    dend_20 { pt3dadd( 27.6744, -115.697, -6.74733, 0.28 ) }
    dend_20 { pt3dadd( 27.607, -116.011, -7.10553, 0.42 ) }
    dend_20 { pt3dadd( 27.5098, -116.282, -7.4902, 0.56 ) }
    dend_20 { pt3dadd( 27.5098, -116.282, -7.4902, 0.56 ) }
    dend_20 { pt3dadd( 27.2845, -116.677, -8.25841, 0.56 ) }
    dend_20 { pt3dadd( 26.8725, -117.411, -9.79789, 0.42 ) }
    dend_20 { pt3dadd( 26.6949, -117.759, -10.6023, 0.56 ) }
    dend_20 { pt3dadd( 26.6949, -117.759, -10.6023, 0.56 ) }
    dend_20 { pt3dadd( 26.6747, -117.862, -10.8205, 0.28 ) }
    dend_20 { pt3dadd( 26.6986, -118.377, -11.6911, 0.42 ) }
    dend_20 { pt3dadd( 26.8154, -118.721, -12.0806, 0.28 ) }
    dend_20 { pt3dadd( 27.2049, -119.411, -12.5426, 0.14 ) }
    dend_20 { pt3dadd( 27.4692, -119.826, -12.7402, 0.1 ) }
    dend_20 { pt3dadd( 27.7215, -120.208, -12.8799, 0.14 ) }
    dend_20 { pt3dadd( 28.2438, -121.025, -13.1303, 0.1 ) }
    dend_20 { pt3dadd( 28.4849, -121.428, -13.2032, 0.1 ) }
    dend_20 { pt3dadd( 28.6306, -121.72, -13.2898, 0.1 ) }
    dend_20 { pt3dadd( 28.6306, -121.72, -13.2898, 0.1 ) }
    dend_20 { pt3dadd( 28.6951, -121.924, -13.3959, 0.1 ) }
    dend_20 { pt3dadd( 28.9039, -122.738, -13.8876, 0.1 ) }
    dend_20 { pt3dadd( 28.9867, -123.136, -14.1402, 0.14 ) }
    dend_20 { pt3dadd( 29.1649, -124.014, -14.5815, 0.28 ) }
    dend_20 { pt3dadd( 29.2532, -124.453, -14.7374, 0.42 ) }
    dend_20 { pt3dadd( 29.3533, -124.907, -14.8367, 0.56 ) }
    dend_20 { pt3dadd( 29.4636, -125.365, -14.8744, 0.42 ) }
    dend_20 { pt3dadd( 29.5831, -125.815, -14.8418, 0.28 ) }
    dend_20 { pt3dadd( 29.8383, -126.769, -14.7001, 0.42 ) }
    dend_20 { pt3dadd( 29.9591, -127.218, -14.601, 0.56 ) }
    dend_20 { pt3dadd( 30.0798, -127.667, -14.511, 0.42 ) }
    dend_20 { pt3dadd( 30.1405, -127.893, -14.4737, 0.42 ) }
    dend_20 { pt3dadd( 30.2594, -128.34, -14.4242, 0.56 ) }
    dend_20 { pt3dadd( 30.3809, -128.799, -14.4048, 0.42 ) }
    dend_20 { pt3dadd( 30.501, -129.256, -14.4225, 0.28 ) }
    dend_20 { pt3dadd( 30.6401, -129.71, -14.4103, 0.14 ) }
    dend_20 { pt3dadd( 30.7934, -130.156, -14.3737, 0.28 ) }
    dend_20 { pt3dadd( 30.9665, -130.594, -14.3202, 0.42 ) }
    dend_20 { pt3dadd( 31.1625, -131.014, -14.2566, 0.42 ) }
    dend_20 { pt3dadd( 31.3799, -131.43, -14.1866, 0.28 ) }
    dend_20 { pt3dadd( 31.8368, -132.21, -14.0585, 0.14 ) }
    dend_20 { pt3dadd( 31.9627, -132.412, -14.0481, 0.84 ) }
    dend_20 { pt3dadd( 32.2431, -132.859, -14.0762, 0.7 ) }
    dend_20 { pt3dadd( 32.5287, -133.305, -14.1545, 0.56 ) }
    dend_20 { pt3dadd( 32.7769, -133.689, -14.2637, 0.42 ) }
    dend_20 { pt3dadd( 33.0498, -134.114, -14.4241, 0.28 ) }
    dend_20 { pt3dadd( 33.5513, -134.912, -14.7835, 0.14 ) }
    dend_20 { pt3dadd( 33.7732, -135.278, -14.9741, 0.1 ) }
    dend_20 { pt3dadd( 33.9261, -135.546, -15.1254, 0.1 ) }
    dend_20 { pt3dadd( 34.145, -135.963, -15.3677, 0.1 ) }
    dend_20 { pt3dadd( 34.3499, -136.389, -15.6064, 0.1 ) }
    dend_20 { pt3dadd( 34.5093, -136.834, -15.8563, 0.1 ) }
    dend_20 { pt3dadd( 34.7293, -137.677, -16.2886, 0.1 ) }
    dend_20 { pt3dadd( 34.7655, -137.886, -16.3974, 0.14 ) }
    dend_20 { pt3dadd( 34.7881, -138.183, -16.5401, 0.1 ) }
    dend_20 { pt3dadd( 34.7926, -138.618, -16.7283, 0.1 ) }
    dend_20 { pt3dadd( 34.7561, -139.532, -17.1328, 0.14 ) }
    dend_20 { pt3dadd( 34.7323, -139.967, -17.3192, 0.1 ) }
    dend_20 { pt3dadd( 34.7215, -140.402, -17.4856, 0.1 ) }
    dend_20 { pt3dadd( 34.7227, -140.899, -17.6759, 0.14 ) }
    dend_20 { pt3dadd( 34.7331, -141.333, -17.8665, 0.1 ) }
    dend_20 { pt3dadd( 34.7848, -142.233, -18.2257, 0.1 ) }
    dend_20 { pt3dadd( 34.8138, -142.449, -18.2973, 0.56 ) }
    dend_20 { pt3dadd( 34.9002, -142.893, -18.4396, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_20 { pt3dadd( 35.026, -143.331, -18.5701, 0.42 ) }
    dend_20 { pt3dadd( 35.344, -144.221, -18.7933, 0.56 ) }
    dend_20 { pt3dadd( 35.6677, -145.026, -18.9295, 0.56 ) }
    dend_20 { pt3dadd( 35.8549, -145.513, -19.0009, 0.42 ) }
    dend_20 { pt3dadd( 36.0209, -146.004, -19.0946, 0.28 ) }
    dend_20 { pt3dadd( 36.1686, -146.503, -19.2043, 0.14 ) }
    dend_20 { pt3dadd( 36.2404, -146.821, -19.3056, 0.1 ) }
    dend_20 { pt3dadd( 36.3122, -147.259, -19.4772, 0.1 ) }
    dend_20 { pt3dadd( 36.3972, -148.15, -19.9173, 0.1 ) }
    dend_20 { pt3dadd( 36.4033, -148.57, -20.145, 0.1 ) }
    dend_20 { pt3dadd( 36.3784, -148.976, -20.39, 0.1 ) }
    dend_20 { pt3dadd( 36.2957, -149.704, -20.8821, 0.1 ) }
    dend_20 { pt3dadd( 36.2957, -149.704, -20.8821, 0.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -26.779, -154.636, -21.5482, 0.84 ) }
    dend_13 { pt3dadd( -26.1293, -155.112, -20.7647, 0.84 ) }
    dend_13 { pt3dadd( -25.8945, -155.284, -20.4816, 0.7 ) }
    dend_13 { pt3dadd( -25.1824, -155.805, -19.6229, 0.56 ) }
    dend_13 { pt3dadd( -24.9477, -155.977, -19.3399, 0.42 ) }
    dend_13 { pt3dadd( -24.7077, -156.153, -19.0505, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 19/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -26.779, -154.636, -21.5482, 0.56 ) }
    dend_10 { pt3dadd( -26.8511, -154.999, -21.3622, 0.56 ) }
    dend_10 { pt3dadd( -26.9574, -155.512, -21.1075, 0.42 ) }
    dend_10 { pt3dadd( -27.0669, -156.088, -20.8404, 0.28 ) }
    dend_10 { pt3dadd( -27.1541, -156.616, -20.6133, 0.14 ) }
    dend_10 { pt3dadd( -27.3119, -157.747, -20.164, 0.1 ) }
    dend_10 { pt3dadd( -27.3743, -158.29, -19.9638, 0.1 ) }
    dend_10 { pt3dadd( -27.4198, -158.896, -19.7535, 0.1 ) }
    dend_10 { pt3dadd( -27.4557, -159.45, -19.58, 0.1 ) }
    dend_10 { pt3dadd( -27.4893, -160.014, -19.4305, 0.1 ) }
    dend_10 { pt3dadd( -27.5241, -160.582, -19.3135, 0.14 ) }
    dend_10 { pt3dadd( -27.5631, -161.16, -19.2386, 0.1 ) }
    dend_10 { pt3dadd( -27.6107, -161.724, -19.1659, 0.1 ) }
    dend_10 { pt3dadd( -27.6665, -162.37, -19.0829, 0.1 ) }
    dend_10 { pt3dadd( -27.7413, -163.005, -19.0024, 0.1 ) }
    dend_10 { pt3dadd( -27.7856, -163.291, -18.9667, 0.1 ) }
    dend_10 { pt3dadd( -27.8948, -163.931, -18.8874, 0.1 ) }
    dend_10 { pt3dadd( -27.9875, -164.507, -18.8595, 0.14 ) }
    dend_10 { pt3dadd( -28.0642, -165.083, -18.8655, 0.28 ) }
    dend_10 { pt3dadd( -28.1213, -165.723, -18.8991, 0.42 ) }
    dend_10 { pt3dadd( -28.1562, -166.376, -18.9505, 0.28 ) }
    dend_10 { pt3dadd( -28.1829, -166.947, -19.0029, 0.14 ) }
    dend_10 { pt3dadd( -28.2196, -168.131, -19.1242, 0.1 ) }
    dend_10 { pt3dadd( -28.2367, -168.715, -19.1465, 0.1 ) }
    dend_10 { pt3dadd( -28.2456, -169.296, -19.1241, 0.1 ) }
    dend_10 { pt3dadd( -28.2407, -169.876, -19.0853, 0.1 ) }
    dend_10 { pt3dadd( -28.2278, -170.514, -19.0062, 0.1 ) }
    dend_10 { pt3dadd( -28.2278, -170.798, -18.9388, 0.1 ) }
    dend_10 { pt3dadd( -28.2554, -171.886, -18.4532, 0.1 ) }
    dend_10 { pt3dadd( -28.2793, -172.4, -18.1733, 0.14 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 49/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -22.9604, 144.727, 7.33041, 0.42 ) }
    dend_74 { pt3dadd( -22.504, 145.736, 8.12318, 0.42 ) }
    dend_74 { pt3dadd( -22.3437, 146.078, 8.36547, 0.28 ) }
    dend_74 { pt3dadd( -21.9786, 146.786, 8.81822, 0.14 ) }
    dend_74 { pt3dadd( -21.4452, 147.758, 9.35928, 0.1 ) }
    dend_74 { pt3dadd( -21.0333, 148.485, 9.72198, 0.1 ) }
    dend_74 { pt3dadd( -20.8147, 148.852, 9.88797, 0.1 ) }
    dend_74 { pt3dadd( -20.5688, 149.217, 10.0136, 0.14 ) }
    dend_74 { pt3dadd( -20.1708, 149.785, 10.1919, 0.28 ) }
    dend_74 { pt3dadd( -19.6399, 150.504, 10.373, 0.14 ) }
    dend_74 { pt3dadd( -19.3561, 150.86, 10.4208, 0.1 ) }
    dend_74 { pt3dadd( -18.9031, 151.4, 10.5556, 0.14 ) }
    dend_74 { pt3dadd( -18.6973, 151.632, 10.6533, 0.28 ) }
    dend_74 { pt3dadd( -18.2436, 152.107, 10.9472, 0.56 ) }
    dend_74 { pt3dadd( -18.2436, 152.107, 10.9472, 0.42 ) }
    dend_74 { pt3dadd( -18.0386, 152.301, 11.1036, 0.56 ) }
    dend_74 { pt3dadd( -17.2316, 153.074, 11.6535, 0.56 ) }
    dend_74 { pt3dadd( -16.7561, 153.537, 11.9319, 0.42 ) }
    dend_74 { pt3dadd( -16.2753, 153.991, 12.2375, 0.28 ) }
    dend_74 { pt3dadd( -15.7838, 154.423, 12.5405, 0.14 ) }
    dend_74 { pt3dadd( -15.4596, 154.69, 12.7313, 0.1 ) }
    dend_74 { pt3dadd( -14.9409, 155.117, 13.017, 0.1 ) }
    dend_74 { pt3dadd( -14.4124, 155.54, 13.266, 0.1 ) }
    dend_74 { pt3dadd( -13.456, 156.322, 13.7424, 0.14 ) }
    dend_74 { pt3dadd( -13.0074, 156.701, 14.0192, 0.28 ) }
    dend_74 { pt3dadd( -12.7956, 156.897, 14.1696, 0.42 ) }
    dend_74 { pt3dadd( -12.3317, 157.345, 14.5138, 0.56 ) }
    dend_74 { pt3dadd( -11.8896, 157.797, 14.8596, 0.42 ) }
    dend_74 { pt3dadd( -11.6177, 158.099, 15.0746, 0.56 ) }
    dend_74 { pt3dadd( -10.8473, 159.071, 15.6298, 0.42 ) }
    dend_74 { pt3dadd( -10.4747, 159.593, 15.9486, 0.28 ) }
    dend_74 { pt3dadd( -10.1548, 160.051, 16.258, 0.14 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -22.9604, 144.727, 7.33041, 0.98 ) }
    dend_73 { pt3dadd( -23.379, 146.059, 7.60779, 0.98 ) }
    dend_73 { pt3dadd( -23.581, 146.721, 7.71183, 0.84 ) }
    dend_73 { pt3dadd( -23.7442, 147.397, 7.71084, 0.7 ) }
    dend_73 { pt3dadd( -23.8854, 148.066, 7.65475, 0.56 ) }
    dend_73 { pt3dadd( -24.0191, 148.744, 7.57172, 0.42 ) }
    dend_73 { pt3dadd( -24.1506, 149.423, 7.477, 0.28 ) }
    dend_73 { pt3dadd( -24.2671, 150.093, 7.3268, 0.42 ) }
    dend_73 { pt3dadd( -24.5076, 151.498, 7.00344, 0.28 ) }
    dend_73 { pt3dadd( -24.6247, 152.171, 6.85256, 0.14 ) }
    dend_73 { pt3dadd( -24.7506, 152.83, 6.6664, 0.1 ) }
    dend_73 { pt3dadd( -24.8901, 153.485, 6.46037, 0.1 ) }
    dend_73 { pt3dadd( -25.0448, 154.132, 6.25271, 0.1 ) }
    dend_73 { pt3dadd( -25.2207, 154.781, 6.05748, 0.1 ) }
    dend_73 { pt3dadd( -25.4142, 155.426, 5.93639, 0.1 ) }
    dend_73 { pt3dadd( -25.8239, 156.823, 5.74573, 0.1 ) }
    dend_73 { pt3dadd( -26.002, 157.485, 5.68776, 0.1 ) }
    dend_73 { pt3dadd( -26.1864, 158.154, 5.7232, 0.1 ) }
    dend_73 { pt3dadd( -26.3727, 158.814, 5.86265, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_73 { pt3dadd( -26.753, 160.023, 6.2933, 0.1 ) }
    dend_73 { pt3dadd( -26.9588, 160.627, 6.57651, 0.1 ) }
    dend_73 { pt3dadd( -27.0629, 160.919, 6.73538, 0.1 ) }
    dend_73 { pt3dadd( -27.5329, 162.147, 7.39194, 0.1 ) }
    dend_73 { pt3dadd( -27.7714, 162.729, 7.7043, 0.1 ) }
    dend_73 { pt3dadd( -28.0597, 163.378, 8.01993, 0.1 ) }
    dend_73 { pt3dadd( -28.3545, 163.981, 8.22535, 0.1 ) }
    dend_73 { pt3dadd( -28.6652, 164.578, 8.41487, 0.1 ) }
    dend_73 { pt3dadd( -28.6652, 164.578, 8.41487, 0.14 ) }
    // Section: dend_71, id: dend_71, parent: dend_65 (entry count 9/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -19.005, 82.7308, -10.7319, 0.28 ) }
    dend_71 { pt3dadd( -19.3577, 83.1808, -10.0228, 0.28 ) }
    dend_71 { pt3dadd( -19.6262, 83.6778, -9.42592, 0.42 ) }
    dend_71 { pt3dadd( -19.6262, 83.6778, -9.42592, 0.56 ) }
    dend_71 { pt3dadd( -19.8688, 84.3652, -8.90135, 0.28 ) }
    dend_71 { pt3dadd( -19.9865, 84.7858, -8.67086, 0.28 ) }
    dend_71 { pt3dadd( -20.0903, 85.2292, -8.49993, 0.14 ) }
    dend_71 { pt3dadd( -20.1302, 85.7189, -8.48314, 0.1 ) }
    dend_71 { pt3dadd( -20.137, 86.1517, -8.55065, 0.1 ) }
    dend_71 { pt3dadd( -20.1332, 86.5787, -8.66019, 0.1 ) }
    dend_71 { pt3dadd( -20.0891, 87.4028, -9.00975, 0.1 ) }
    dend_71 { pt3dadd( -20.0653, 87.7924, -9.21452, 0.1 ) }
    dend_71 { pt3dadd( -20.0348, 88.6086, -9.65854, 0.1 ) }
    dend_71 { pt3dadd( -20.0252, 88.9998, -9.86121, 0.1 ) }
    dend_71 { pt3dadd( -20.0203, 89.2027, -9.94881, 0.14 ) }
    dend_71 { pt3dadd( -20.0094, 90.0635, -10.19, 0.1 ) }
    dend_71 { pt3dadd( -20.0094, 90.0635, -10.19, 0.1 ) }
    dend_71 { pt3dadd( -20.0226, 90.9583, -10.1481, 0.1 ) }
    dend_71 { pt3dadd( -20.0452, 91.4431, -10.0615, 0.1 ) }
    dend_71 { pt3dadd( -20.0653, 91.9157, -9.95924, 0.1 ) }
    dend_71 { pt3dadd( -20.0843, 92.3943, -9.84196, 0.1 ) }
    dend_71 { pt3dadd( -20.11, 92.8614, -9.71743, 0.14 ) }
    dend_71 { pt3dadd( -20.1218, 93.0699, -9.67867, 0.28 ) }
    dend_71 { pt3dadd( -20.1387, 93.4997, -9.63807, 0.28 ) }
    dend_71 { pt3dadd( -20.1753, 93.9344, -9.60517, 0.14 ) }
    dend_71 { pt3dadd( -20.2368, 94.4213, -9.57686, 0.1 ) }
    dend_71 { pt3dadd( -20.2833, 94.8564, -9.5874, 0.1 ) }
    dend_71 { pt3dadd( -20.3235, 95.2856, -9.62208, 0.1 ) }
    dend_71 { pt3dadd( -20.3647, 95.7742, -9.67749, 0.1 ) }
    dend_71 { pt3dadd( -20.398, 96.2086, -9.74006, 0.14 ) }
    dend_71 { pt3dadd( -20.4339, 96.6393, -9.81241, 0.28 ) }
    dend_71 { pt3dadd( -20.5373, 97.5475, -9.91825, 0.42 ) }
    dend_71 { pt3dadd( -20.5973, 97.9826, -9.94308, 0.28 ) }
    dend_71 { pt3dadd( -20.6719, 98.4139, -9.9426, 0.14 ) }
    dend_71 { pt3dadd( -20.7663, 98.843, -9.9181, 0.1 ) }
    dend_71 { pt3dadd( -20.8646, 99.2587, -9.86588, 0.14 ) }
    dend_71 { pt3dadd( -21.0719, 100.152, -9.75877, 0.1 ) }
    dend_71 { pt3dadd( -21.1652, 100.578, -9.72606, 0.1 ) }
    dend_71 { pt3dadd( -21.2333, 101.012, -9.7398, 0.1 ) }
    dend_71 { pt3dadd( -21.2727, 101.443, -9.81206, 0.1 ) }
    dend_71 { pt3dadd( -21.2891, 101.906, -9.95627, 0.1 ) }
    dend_71 { pt3dadd( -21.2897, 102.731, -10.3161, 0.1 ) }
    dend_71 { pt3dadd( -21.2826, 103.426, -10.6851, 0.14 ) }
    dend_71 { pt3dadd( -21.2826, 103.426, -10.6851, 0.28 ) }
    dend_71 { pt3dadd( -21.3341, 103.843, -10.8121, 0.7 ) }
    dend_71 { pt3dadd( -21.4344, 104.269, -10.8628, 0.56 ) }
    dend_71 { pt3dadd( -21.5734, 104.676, -10.8406, 0.42 ) }
    dend_71 { pt3dadd( -21.7349, 105.079, -10.7665, 0.28 ) }
    dend_71 { pt3dadd( -22.0739, 105.89, -10.5856, 0.14 ) }
    dend_71 { pt3dadd( -22.2384, 106.291, -10.5032, 0.28 ) }
    dend_71 { pt3dadd( -22.3995, 106.692, -10.4284, 0.14 ) }
    dend_71 { pt3dadd( -22.5561, 107.097, -10.366, 0.1 ) }
    dend_71 { pt3dadd( -22.7043, 107.502, -10.3219, 0.1 ) }
    dend_71 { pt3dadd( -22.8454, 107.916, -10.3008, 0.1 ) }
    dend_71 { pt3dadd( -22.971, 108.337, -10.3407, 0.1 ) }
    dend_71 { pt3dadd( -23.0916, 108.753, -10.4068, 0.1 ) }
    dend_71 { pt3dadd( -23.2093, 109.17, -10.4931, 0.1 ) }
    dend_71 { pt3dadd( -23.3235, 109.581, -10.5942, 0.1 ) }
    dend_71 { pt3dadd( -23.4331, 109.985, -10.709, 0.14 ) }
    dend_71 { pt3dadd( -23.6612, 110.839, -10.977, 0.28 ) }
    dend_71 { pt3dadd( -23.7448, 111.242, -11.1339, 0.42 ) }
    dend_71 { pt3dadd( -23.8074, 111.643, -11.3096, 0.28 ) }
    dend_71 { pt3dadd( -23.8309, 111.841, -11.3989, 0.42 ) }
    dend_71 { pt3dadd( -23.8536, 112.04, -11.4879, 0.56 ) }
    dend_71 { pt3dadd( -23.9293, 112.451, -11.6239, 0.84 ) }
    dend_71 { pt3dadd( -24.1977, 113.324, -11.7737, 0.7 ) }
    dend_71 { pt3dadd( -24.3555, 113.722, -11.8247, 0.56 ) }
    dend_71 { pt3dadd( -24.5637, 114.112, -11.811, 0.56 ) }
    dend_71 { pt3dadd( -24.7259, 114.367, -11.7666, 0.42 ) }
    dend_71 { pt3dadd( -25.2272, 115.123, -11.5539, 0.28 ) }
    dend_71 { pt3dadd( -25.4968, 115.504, -11.4035, 0.14 ) }
    dend_71 { pt3dadd( -25.4968, 115.504, -11.4035, 0.14 ) }
    dend_71 { pt3dadd( -25.9306, 116.24, -11.13, 0.1 ) }
    dend_71 { pt3dadd( -26.1019, 116.635, -11.0343, 0.1 ) }
    dend_71 { pt3dadd( -26.227, 117.109, -10.9797, 0.1 ) }
    dend_71 { pt3dadd( -26.2882, 117.545, -10.9831, 0.1 ) }
    dend_71 { pt3dadd( -26.3206, 117.973, -11.0026, 0.1 ) }
    dend_71 { pt3dadd( -26.3429, 118.893, -11.0788, 0.1 ) }
    dend_71 { pt3dadd( -26.3259, 119.326, -11.1419, 0.1 ) }
    dend_71 { pt3dadd( -26.3036, 119.805, -11.2128, 0.14 ) }
    dend_71 { pt3dadd( -26.2925, 120.238, -11.274, 0.14 ) }
    dend_71 { pt3dadd( -26.3041, 120.727, -11.3299, 0.1 ) }
    dend_71 { pt3dadd( -26.33, 120.945, -11.3441, 0.14 ) }
    dend_71 { pt3dadd( -26.3749, 121.159, -11.3662, 0.28 ) }
    dend_71 { pt3dadd( -26.4705, 121.628, -11.4604, 0.84 ) }
    dend_71 { pt3dadd( -26.5493, 122.049, -11.5661, 0.7 ) }
    dend_71 { pt3dadd( -26.6174, 122.517, -11.6837, 0.56 ) }
    dend_71 { pt3dadd( -26.6706, 122.934, -11.7888, 0.42 ) }
    dend_71 { pt3dadd( -26.7676, 123.803, -11.9897, 0.28 ) }
    dend_71 { pt3dadd( -26.8093, 124.286, -12.0862, 0.14 ) }
    dend_71 { pt3dadd( -26.8339, 124.763, -12.1655, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_71 { pt3dadd( -26.8488, 125.252, -12.2241, 0.1 ) }
    dend_71 { pt3dadd( -26.8488, 125.252, -12.2241, 0.14 ) }
    dend_71 { pt3dadd( -26.8553, 125.689, -12.2162, 0.1 ) }
    dend_71 { pt3dadd( -26.8521, 126.126, -12.2041, 0.1 ) }
    dend_71 { pt3dadd( -26.8406, 126.558, -12.2193, 0.1 ) }
    dend_71 { pt3dadd( -26.8328, 127.049, -12.2639, 0.1 ) }
    dend_71 { pt3dadd( -26.8322, 127.538, -12.3263, 0.1 ) }
    dend_71 { pt3dadd( -26.8601, 128.02, -12.3703, 0.1 ) }
    dend_71 { pt3dadd( -26.9571, 128.854, -12.4198, 0.14 ) }
    dend_71 { pt3dadd( -27.0391, 129.286, -12.4313, 0.28 ) }
    dend_71 { pt3dadd( -27.1652, 129.756, -12.4298, 0.42 ) }
    dend_71 { pt3dadd( -27.3171, 130.168, -12.4152, 0.28 ) }
    dend_71 { pt3dadd( -27.7001, 131.008, -12.3499, 0.14 ) }
    dend_71 { pt3dadd( -27.8965, 131.389, -12.3016, 0.1 ) }
    dend_71 { pt3dadd( -28.0863, 131.785, -12.2581, 0.1 ) }
    dend_71 { pt3dadd( -28.0863, 131.785, -12.2581, 0.1 ) }
    dend_71 { pt3dadd( -28.1985, 132.208, -12.2875, 0.1 ) }
    dend_71 { pt3dadd( -28.2806, 132.636, -12.354, 0.1 ) }
    dend_71 { pt3dadd( -28.3373, 133.06, -12.4488, 0.1 ) }
    dend_71 { pt3dadd( -28.4582, 133.952, -12.6467, 0.1 ) }
    dend_71 { pt3dadd( -28.5171, 134.378, -12.7401, 0.1 ) }
    dend_71 { pt3dadd( -28.5815, 134.803, -12.8266, 0.14 ) }
    dend_71 { pt3dadd( -28.6542, 135.231, -12.9045, 0.28 ) }
    dend_71 { pt3dadd( -28.717, 135.656, -12.993, 0.14 ) }
    dend_71 { pt3dadd( -28.7785, 136.075, -13.081, 0.1 ) }
    dend_71 { pt3dadd( -28.7785, 136.075, -13.081, 0.14 ) }
    dend_71 { pt3dadd( -28.8229, 136.503, -13.164, 0.84 ) }
    dend_71 { pt3dadd( -28.8714, 136.937, -13.2207, 0.7 ) }
    dend_71 { pt3dadd( -28.9892, 137.851, -13.2834, 0.56 ) }
    dend_71 { pt3dadd( -29.0427, 138.286, -13.29, 0.42 ) }
    dend_71 { pt3dadd( -29.1198, 138.76, -13.2348, 0.28 ) }
    dend_71 { pt3dadd( -29.2098, 139.177, -13.1343, 0.14 ) }
    dend_71 { pt3dadd( -29.4374, 139.991, -12.8301, 0.1 ) }
    dend_71 { pt3dadd( -29.5694, 140.369, -12.6483, 0.14 ) }
    dend_71 { pt3dadd( -29.6766, 140.623, -12.5074, 0.28 ) }
    dend_71 { pt3dadd( -29.9995, 141.365, -12.1136, 0.56 ) }
    dend_71 { pt3dadd( -30.1664, 141.727, -11.9219, 0.7 ) }
    dend_71 { pt3dadd( -30.3295, 142.094, -11.7433, 0.56 ) }
    dend_71 { pt3dadd( -30.4831, 142.483, -11.6102, 0.42 ) }
    dend_71 { pt3dadd( -30.6429, 142.877, -11.4915, 0.28 ) }
    dend_71 { pt3dadd( -30.7221, 143.071, -11.4519, 0.14 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 41/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -19.005, 82.7308, -10.7319, 0.1 ) }
    dend_66 { pt3dadd( -19.4828, 82.5068, -10.9396, 0.1 ) }
    dend_66 { pt3dadd( -19.9583, 82.2839, -11.1463, 0.14 ) }
    dend_66 { pt3dadd( -20.1971, 82.172, -11.2502, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 45/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 9.37562, -202.47, -2.25543, 1.12 ) }
    dend_28 { pt3dadd( 9.81861, -203.043, -1.85052, 1.12 ) }
    dend_28 { pt3dadd( 9.94849, -203.249, -1.71296, 0.98 ) }
    dend_28 { pt3dadd( 10.0135, -203.414, -1.62547, 0.84 ) }
    dend_28 { pt3dadd( 10.1035, -204.123, -1.39179, 1.12 ) }
    dend_28 { pt3dadd( 10.1367, -204.542, -1.29017, 0.98 ) }
    dend_28 { pt3dadd( 10.2049, -204.966, -1.19762, 0.84 ) }
    dend_28 { pt3dadd( 10.2353, -205.238, -1.16922, 0.84 ) }
    dend_28 { pt3dadd( 10.3595, -206.029, -1.15718, 0.7 ) }
    dend_28 { pt3dadd( 10.5021, -206.838, -1.20287, 0.84 ) }
    dend_28 { pt3dadd( 10.6244, -207.548, -1.28864, 0.84 ) }
    dend_28 { pt3dadd( 10.8265, -208.316, -1.39539, 0.84 ) }
    dend_28 { pt3dadd( 10.9529, -208.686, -1.446, 0.7 ) }
    dend_28 { pt3dadd( 11.1132, -209.088, -1.49209, 0.56 ) }
    dend_28 { pt3dadd( 11.1916, -209.269, -1.49974, 0.7 ) }
    dend_28 { pt3dadd( 11.2851, -209.525, -1.50246, 0.56 ) }
    dend_28 { pt3dadd( 11.3539, -209.91, -1.50321, 0.7 ) }
    dend_28 { pt3dadd( 11.3832, -210.299, -1.48648, 0.84 ) }
    dend_28 { pt3dadd( 11.3763, -210.691, -1.45807, 0.84 ) }
    dend_28 { pt3dadd( 11.333, -211.126, -1.40957, 0.98 ) }
    dend_28 { pt3dadd( 11.2758, -211.506, -1.36715, 0.84 ) }
    dend_28 { pt3dadd( 11.1746, -212.054, -1.3141, 0.84 ) }
    dend_28 { pt3dadd( 11.1368, -212.321, -1.28185, 0.98 ) }
    dend_28 { pt3dadd( 11.0794, -213.038, -1.19258, 0.84 ) }
    dend_28 { pt3dadd( 11.0786, -213.314, -1.16731, 1.12 ) }
    dend_28 { pt3dadd( 11.1171, -213.703, -1.15575, 1.12 ) }
    dend_28 { pt3dadd( 11.1924, -214.082, -1.16515, 0.98 ) }
    dend_28 { pt3dadd( 11.4149, -214.849, -1.23289, 0.84 ) }
    dend_28 { pt3dadd( 11.5415, -215.218, -1.26487, 0.7 ) }
    dend_28 { pt3dadd( 11.6419, -215.477, -1.28321, 0.56 ) }
    dend_28 { pt3dadd( 11.7457, -215.855, -1.32746, 0.98 ) }
    dend_28 { pt3dadd( 11.8305, -216.235, -1.3633, 0.98 ) }
    dend_28 { pt3dadd( 11.9216, -216.615, -1.381, 0.98 ) }
    dend_28 { pt3dadd( 11.982, -216.88, -1.38515, 0.84 ) }
    dend_28 { pt3dadd( 12.0908, -217.258, -1.37072, 0.7 ) }
    dend_28 { pt3dadd( 12.3427, -218.016, -1.31194, 0.84 ) }
    dend_28 { pt3dadd( 12.5538, -218.736, -1.27183, 0.84 ) }
    dend_28 { pt3dadd( 12.7483, -219.512, -1.2566, 0.98 ) }
    dend_28 { pt3dadd( 12.7927, -219.895, -1.28003, 0.98 ) }
    dend_28 { pt3dadd( 12.793, -220.088, -1.30742, 0.98 ) }
    dend_28 { pt3dadd( 12.7564, -220.473, -1.38228, 0.84 ) }
    dend_28 { pt3dadd( 12.6391, -221.242, -1.58103, 0.98 ) }
    dend_28 { pt3dadd( 12.5523, -221.608, -1.69939, 0.98 ) }
    dend_28 { pt3dadd( 12.353, -222.345, -1.95472, 0.84 ) }
    dend_28 { pt3dadd( 12.2714, -222.704, -2.07687, 0.84 ) }
    dend_28 { pt3dadd( 12.2145, -223.073, -2.20193, 0.84 ) }
    dend_28 { pt3dadd( 12.2113, -223.489, -2.33107, 0.84 ) }
    dend_28 { pt3dadd( 12.2816, -223.863, -2.43585, 0.84 ) }
    dend_28 { pt3dadd( 12.3974, -224.223, -2.53923, 0.98 ) }
    dend_28 { pt3dadd( 12.5557, -224.57, -2.64341, 0.84 ) }
    dend_28 { pt3dadd( 12.7187, -224.953, -2.77796, 0.98 ) }
    dend_28 { pt3dadd( 12.9651, -225.598, -3.01518, 0.56 ) }
    dend_28 { pt3dadd( 13.0582, -225.995, -3.17179, 0.7 ) }
    dend_28 { pt3dadd( 13.0894, -226.4, -3.34469, 0.84 ) }
    dend_28 { pt3dadd( 13.0578, -226.804, -3.50968, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_28 { pt3dadd( 12.9791, -227.487, -3.74805, 0.84 ) }
    dend_28 { pt3dadd( 12.9388, -227.758, -3.81811, 0.84 ) }
    dend_28 { pt3dadd( 12.8536, -228.543, -3.9566, 0.7 ) }
    dend_28 { pt3dadd( 12.8636, -228.927, -3.96475, 0.84 ) }
    dend_28 { pt3dadd( 12.937, -229.357, -3.91181, 0.84 ) }
    dend_28 { pt3dadd( 13.0996, -230.129, -3.77727, 0.7 ) }
    dend_28 { pt3dadd( 13.2078, -230.538, -3.68955, 0.56 ) }
    dend_28 { pt3dadd( 13.3885, -231.225, -3.54323, 0.42 ) }
    dend_28 { pt3dadd( 13.5016, -231.639, -3.44779, 0.42 ) }
    dend_28 { pt3dadd( 13.5951, -232.051, -3.35488, 0.56 ) }
    dend_28 { pt3dadd( 13.6915, -232.831, -3.21318, 0.56 ) }
    dend_28 { pt3dadd( 13.6682, -233.107, -3.18237, 0.84 ) }
    dend_28 { pt3dadd( 13.5869, -233.489, -3.16518, 0.84 ) }
    dend_28 { pt3dadd( 13.5152, -233.673, -3.17034, 0.98 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 14/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 9.37562, -202.47, -2.25543, 0.14 ) }
    dend_27 { pt3dadd( 9.441, -202.716, -2.4742, 0.14 ) }
    dend_27 { pt3dadd( 9.54747, -203.106, -2.83469, 0.28 ) }
    dend_27 { pt3dadd( 9.65406, -203.344, -3.04512, 0.42 ) }
    dend_27 { pt3dadd( 9.86082, -203.727, -3.36857, 0.28 ) }
    dend_27 { pt3dadd( 10.08, -204.118, -3.67287, 0.14 ) }
    dend_27 { pt3dadd( 10.2192, -204.37, -3.85826, 0.14 ) }
    dend_27 { pt3dadd( 10.3591, -204.621, -4.02936, 0.28 ) }
    dend_27 { pt3dadd( 10.7376, -205.295, -4.47499, 0.28 ) }
    dend_27 { pt3dadd( 10.9579, -205.704, -4.73913, 0.14 ) }
    dend_27 { pt3dadd( 11.1485, -206.07, -4.99143, 0.1 ) }
    dend_27 { pt3dadd( 11.3404, -206.474, -5.28596, 0.1 ) }
    dend_27 { pt3dadd( 11.5089, -206.875, -5.59751, 0.14 ) }
    dend_27 { pt3dadd( 11.5987, -207.128, -5.81101, 0.28 ) }
    dend_27 { pt3dadd( 11.7045, -207.51, -6.17224, 0.14 ) }
    dend_27 { pt3dadd( 11.8138, -207.879, -6.55721, 0.1 ) }
    dend_27 { pt3dadd( 11.9235, -208.221, -6.9567, 0.1 ) }
    dend_27 { pt3dadd( 11.9677, -208.434, -7.22357, 0.1 ) }
    dend_27 { pt3dadd( 11.9893, -208.641, -7.49783, 0.1 ) }
    dend_27 { pt3dadd( 11.9949, -208.843, -7.77246, 0.1 ) }
    dend_27 { pt3dadd( 11.9884, -209.044, -8.0525, 0.1 ) }
    dend_27 { pt3dadd( 11.9658, -209.441, -8.60555, 0.14 ) }
    dend_27 { pt3dadd( 11.9338, -209.974, -9.3685, 0.28 ) }
    dend_27 { pt3dadd( 11.9227, -210.367, -9.93021, 0.14 ) }
    dend_27 { pt3dadd( 11.9223, -210.565, -10.2124, 0.1 ) }
    dend_27 { pt3dadd( 11.928, -210.758, -10.4882, 0.1 ) }
    dend_27 { pt3dadd( 11.9612, -211.163, -11.0498, 0.14 ) }
    dend_27 { pt3dadd( 11.9974, -211.37, -11.3125, 0.28 ) }
    dend_27 { pt3dadd( 12.1343, -211.824, -11.7986, 0.14 ) }
    dend_27 { pt3dadd( 12.1343, -211.824, -11.7986, 0.28 ) }
    dend_27 { pt3dadd( 12.1343, -211.824, -11.7986, 0.42 ) }
    dend_27 { pt3dadd( 12.1754, -212.034, -11.9101, 0.56 ) }
    dend_27 { pt3dadd( 12.249, -212.478, -12.078, 0.42 ) }
    dend_27 { pt3dadd( 12.3199, -212.925, -12.2303, 0.28 ) }
    dend_27 { pt3dadd( 12.3547, -213.152, -12.3016, 0.28 ) }
    dend_27 { pt3dadd( 12.3547, -213.152, -12.3016, 0.28 ) }
    dend_27 { pt3dadd( 12.3924, -213.368, -12.3926, 0.28 ) }
    dend_27 { pt3dadd( 12.4816, -213.846, -12.6246, 0.14 ) }
    dend_27 { pt3dadd( 12.5723, -214.31, -12.8701, 0.1 ) }
    dend_27 { pt3dadd( 12.6552, -214.726, -13.0977, 0.1 ) }
    dend_27 { pt3dadd( 12.746, -215.19, -13.344, 0.1 ) }
    dend_27 { pt3dadd( 12.8349, -215.66, -13.5779, 0.14 ) }
    dend_27 { pt3dadd( 12.9222, -216.143, -13.7971, 0.28 ) }
    dend_27 { pt3dadd( 12.959, -216.362, -13.8821, 0.42 ) }
    dend_27 { pt3dadd( 12.9746, -216.589, -13.9593, 0.28 ) }
    dend_27 { pt3dadd( 12.9708, -217.047, -14.1018, 0.14 ) }
    dend_27 { pt3dadd( 12.9351, -217.499, -14.2214, 0.1 ) }
    dend_27 { pt3dadd( 12.8744, -217.961, -14.3264, 0.1 ) }
    dend_27 { pt3dadd( 12.8006, -218.425, -14.4227, 0.1 ) }
    dend_27 { pt3dadd( 12.65, -219.369, -14.619, 0.14 ) }
    dend_27 { pt3dadd( 12.65, -219.369, -14.619, 0.28 ) }
    dend_27 { pt3dadd( 12.6245, -219.599, -14.6817, 0.56 ) }
    dend_27 { pt3dadd( 12.5999, -220.052, -14.8304, 0.42 ) }
    dend_27 { pt3dadd( 12.6025, -220.495, -14.9942, 0.28 ) }
    dend_27 { pt3dadd( 12.6348, -220.94, -15.167, 0.14 ) }
    dend_27 { pt3dadd( 12.7184, -221.433, -15.3623, 0.1 ) }
    dend_27 { pt3dadd( 12.8031, -221.924, -15.5648, 0.14 ) }
    dend_27 { pt3dadd( 12.8891, -222.404, -15.7791, 0.1 ) }
    dend_27 { pt3dadd( 12.8891, -222.404, -15.7791, 0.14 ) }
    dend_27 { pt3dadd( 12.8878, -222.856, -16.0628, 0.1 ) }
    dend_27 { pt3dadd( 12.7786, -223.303, -16.3467, 0.14 ) }
    dend_27 { pt3dadd( 12.7786, -223.303, -16.3467, 0.28 ) }
    dend_27 { pt3dadd( 12.7235, -223.502, -16.4664, 0.56 ) }
    dend_27 { pt3dadd( 12.6278, -223.964, -16.7292, 0.42 ) }
    dend_27 { pt3dadd( 12.3921, -224.806, -17.2416, 0.28 ) }
    dend_27 { pt3dadd( 12.2731, -225.193, -17.4856, 0.14 ) }
    dend_27 { pt3dadd( 12.1346, -225.634, -17.7665, 0.1 ) }
    dend_27 { pt3dadd( 11.9936, -226.077, -18.0434, 0.1 ) }
    dend_27 { pt3dadd( 11.8727, -226.471, -18.2778, 0.1 ) }
    dend_27 { pt3dadd( 11.6744, -227.24, -18.678, 0.1 ) }
    dend_27 { pt3dadd( 11.6744, -227.24, -18.678, 0.1 ) }
    dend_27 { pt3dadd( 11.6526, -227.456, -18.7759, 0.1 ) }
    dend_27 { pt3dadd( 11.6333, -227.894, -18.9538, 0.1 ) }
    dend_27 { pt3dadd( 11.6467, -228.338, -19.1301, 0.1 ) }
    dend_27 { pt3dadd( 11.6941, -228.78, -19.313, 0.1 ) }
    dend_27 { pt3dadd( 11.7792, -229.262, -19.5213, 0.1 ) }
    dend_27 { pt3dadd( 11.8673, -229.734, -19.7499, 0.14 ) }
    dend_27 { pt3dadd( 11.9504, -230.15, -19.9792, 0.1 ) }
    dend_27 { pt3dadd( 12.0112, -230.596, -20.2669, 0.1 ) }
    dend_27 { pt3dadd( 12.0448, -231.022, -20.5885, 0.1 ) }
    dend_27 { pt3dadd( 12.0503, -231.279, -20.8207, 0.1 ) }
    dend_27 { pt3dadd( 12.0376, -231.642, -21.2169, 0.1 ) }
    dend_27 { pt3dadd( 11.9925, -231.846, -21.4905, 0.14 ) }
    dend_27 { pt3dadd( 11.8053, -232.33, -22.2655, 0.28 ) }
    dend_27 { pt3dadd( 11.7452, -232.445, -22.4724, 0.7 ) }
    dend_27 { pt3dadd( 11.6072, -232.678, -22.9392, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_27 { pt3dadd( 11.4809, -232.9, -23.4224, 0.42 ) }
    dend_27 { pt3dadd( 11.3041, -233.265, -24.2634, 0.28 ) }
    dend_27 { pt3dadd( 11.265, -233.401, -24.5792, 0.7 ) }
    dend_27 { pt3dadd( 11.2626, -233.536, -24.8974, 0.7 ) }
    dend_27 { pt3dadd( 11.2786, -233.752, -25.3899, 0.56 ) }
    dend_27 { pt3dadd( 11.2793, -233.971, -25.8926, 0.42 ) }
    dend_27 { pt3dadd( 11.2798, -234.105, -26.203, 0.28 ) }
    dend_27 { pt3dadd( 11.3089, -234.316, -26.7082, 0.14 ) }
    dend_27 { pt3dadd( 11.3238, -234.52, -27.2065, 0.1 ) }
    dend_27 { pt3dadd( 11.3212, -234.649, -27.5273, 0.1 ) }
    dend_27 { pt3dadd( 11.2555, -235.043, -28.4737, 0.1 ) }
    dend_27 { pt3dadd( 11.2094, -235.173, -28.7824, 0.14 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 36.2957, -149.704, -20.8821, 0.1 ) }
    dend_22 { pt3dadd( 36.852, -150.703, -20.7778, 0.1 ) }
    dend_22 { pt3dadd( 37.1354, -151.251, -20.7444, 0.1 ) }
    dend_22 { pt3dadd( 37.4327, -151.871, -20.7234, 0.1 ) }
    dend_22 { pt3dadd( 37.687, -152.437, -20.7139, 0.1 ) }
    dend_22 { pt3dadd( 37.9711, -153.062, -20.714, 0.1 ) }
    dend_22 { pt3dadd( 38.2232, -153.618, -20.7198, 0.1 ) }
    dend_22 { pt3dadd( 38.4646, -154.185, -20.7685, 0.1 ) }
    dend_22 { pt3dadd( 38.6995, -154.758, -20.8152, 0.1 ) }
    dend_22 { pt3dadd( 38.9173, -155.334, -20.8568, 0.1 ) }
    dend_22 { pt3dadd( 39.0458, -155.749, -20.9164, 0.1 ) }
    dend_22 { pt3dadd( 39.1166, -156.042, -20.9748, 0.7 ) }
    dend_22 { pt3dadd( 39.2367, -156.633, -21.1184, 0.7 ) }
    dend_22 { pt3dadd( 39.339, -157.221, -21.2758, 0.56 ) }
    dend_22 { pt3dadd( 39.4288, -157.812, -21.4382, 0.7 ) }
    dend_22 { pt3dadd( 39.5958, -159.052, -21.7759, 0.56 ) }
    dend_22 { pt3dadd( 39.6692, -159.649, -21.928, 0.42 ) }
    dend_22 { pt3dadd( 39.7498, -160.243, -22.0689, 0.28 ) }
    dend_22 { pt3dadd( 39.8414, -160.843, -22.1942, 0.14 ) }
    dend_22 { pt3dadd( 39.9588, -161.429, -22.2956, 0.28 ) }
    dend_22 { pt3dadd( 40.0349, -161.727, -22.3315, 0.28 ) }
    dend_22 { pt3dadd( 40.2199, -162.315, -22.3634, 0.28 ) }
    dend_22 { pt3dadd( 40.4232, -162.899, -22.4005, 0.14 ) }
    dend_22 { pt3dadd( 40.6375, -163.477, -22.4411, 0.1 ) }
    dend_22 { pt3dadd( 40.8835, -164.116, -22.4886, 0.1 ) }
    dend_22 { pt3dadd( 41.1068, -164.688, -22.5791, 0.1 ) }
    dend_22 { pt3dadd( 41.3252, -165.253, -22.7037, 0.1 ) }
    dend_22 { pt3dadd( 41.5669, -165.881, -22.8764, 0.1 ) }
    dend_22 { pt3dadd( 41.7755, -166.435, -23.0544, 0.14 ) }
    dend_22 { pt3dadd( 41.9689, -166.979, -23.246, 0.28 ) }
    dend_22 { pt3dadd( 42.3471, -168.153, -23.6718, 0.42 ) }
    dend_22 { pt3dadd( 42.5311, -168.707, -23.8756, 0.84 ) }
    dend_22 { pt3dadd( 42.5311, -168.707, -23.8756, 0.7 ) }
    dend_22 { pt3dadd( 42.6385, -168.992, -23.9359, 0.28 ) }
    dend_22 { pt3dadd( 42.9164, -169.544, -23.9158, 0.14 ) }
    dend_22 { pt3dadd( 43.2373, -170.043, -23.7219, 0.1 ) }
    dend_22 { pt3dadd( 43.6088, -170.51, -23.3698, 0.1 ) }
    dend_22 { pt3dadd( 43.9481, -170.902, -23.0167, 0.1 ) }
    dend_22 { pt3dadd( 44.6482, -171.66, -22.2031, 0.1 ) }
    dend_22 { pt3dadd( 45.3522, -172.378, -21.354, 0.1 ) }
    dend_22 { pt3dadd( 45.9871, -173.004, -20.6115, 0.1 ) }
    dend_22 { pt3dadd( 46.7171, -173.736, -19.7991, 0.1 ) }
    dend_22 { pt3dadd( 47.0705, -174.105, -19.4332, 0.1 ) }
    dend_22 { pt3dadd( 47.7442, -174.885, -18.9108, 0.1 ) }
    dend_22 { pt3dadd( 48.0496, -175.458, -19.1431, 0.1 ) }
    dend_22 { pt3dadd( 48.4048, -176.387, -19.9967, 0.1 ) }
    dend_22 { pt3dadd( 48.6964, -177.227, -20.9163, 0.1 ) }
    dend_22 { pt3dadd( 48.9465, -177.975, -21.8178, 0.1 ) }
    dend_22 { pt3dadd( 49.0879, -178.361, -22.2934, 0.1 ) }
    dend_22 { pt3dadd( 49.3707, -179.109, -23.1844, 0.1 ) }
    dend_22 { pt3dadd( 49.4538, -179.312, -23.4094, 0.1 ) }
    dend_22 { pt3dadd( 49.6711, -179.776, -23.8766, 0.1 ) }
    dend_22 { pt3dadd( 49.9167, -180.264, -24.3164, 0.1 ) }
    dend_22 { pt3dadd( 50.1489, -180.745, -24.7587, 0.1 ) }
    dend_22 { pt3dadd( 50.3444, -181.176, -25.1697, 0.1 ) }
    dend_22 { pt3dadd( 50.6767, -181.988, -25.9818, 0.1 ) }
    dend_22 { pt3dadd( 50.9974, -182.86, -26.9212, 0.1 ) }
    dend_22 { pt3dadd( 51.1105, -183.251, -27.3815, 0.1 ) }
    dend_22 { pt3dadd( 51.2942, -184.049, -28.4109, 0.1 ) }
    dend_22 { pt3dadd( 51.3669, -184.423, -28.9111, 0.14 ) }
    dend_22 { pt3dadd( 51.5296, -185.216, -29.9476, 0.28 ) }
    dend_22 { pt3dadd( 51.5735, -185.419, -30.1833, 0.14 ) }
    dend_22 { pt3dadd( 51.7876, -186.282, -31.0993, 0.1 ) }
    dend_22 { pt3dadd( 52.038, -187.173, -32.036, 0.1 ) }
    dend_22 { pt3dadd( 52.1064, -187.393, -32.2439, 0.1 ) }
    dend_22 { pt3dadd( 52.2916, -187.913, -32.6731, 0.1 ) }
    dend_22 { pt3dadd( 52.5147, -188.42, -32.9544, 0.1 ) }
    dend_22 { pt3dadd( 52.8199, -189.009, -33.1385, 0.1 ) }
    dend_22 { pt3dadd( 53.5005, -190.124, -33.177, 0.14 ) }
    dend_22 { pt3dadd( 53.8313, -190.644, -33.1096, 0.28 ) }
    dend_22 { pt3dadd( 54.4228, -191.624, -33.0148, 0.84 ) }
    dend_22 { pt3dadd( 55.012, -192.783, -33.0158, 0.7 ) }
    dend_22 { pt3dadd( 55.2565, -193.351, -33.0674, 0.56 ) }
    dend_22 { pt3dadd( 55.4311, -193.992, -33.2419, 0.42 ) }
    dend_22 { pt3dadd( 55.5143, -194.559, -33.4817, 0.28 ) }
    dend_22 { pt3dadd( 55.5134, -195.616, -34.1835, 0.14 ) }
    dend_22 { pt3dadd( 55.4314, -196.643, -34.9845, 0.1 ) }
    dend_22 { pt3dadd( 55.396, -196.872, -35.1905, 0.1 ) }
    dend_22 { pt3dadd( 55.2229, -197.828, -36.0743, 0.1 ) }
    dend_22 { pt3dadd( 55.1299, -198.289, -36.4834, 0.1 ) }
    dend_22 { pt3dadd( 54.9496, -199.292, -37.2989, 0.1 ) }
    dend_22 { pt3dadd( 54.8868, -199.805, -37.643, 0.1 ) }
    dend_22 { pt3dadd( 54.8168, -200.907, -38.2676, 0.1 ) }
    dend_22 { pt3dadd( 54.8024, -201.461, -38.543, 0.1 ) }
    dend_22 { pt3dadd( 54.8273, -202.099, -38.7849, 0.1 ) }
    dend_22 { pt3dadd( 54.8755, -202.689, -38.9594, 0.1 ) }
    dend_22 { pt3dadd( 54.9488, -203.283, -39.1081, 0.1 ) }
    dend_22 { pt3dadd( 54.9879, -203.58, -39.1848, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_22 { pt3dadd( 55.0411, -203.882, -39.2306, 0.56 ) }
    dend_22 { pt3dadd( 55.1639, -204.481, -39.3088, 0.42 ) }
    dend_22 { pt3dadd( 55.3204, -205.066, -39.3747, 0.28 ) }
    dend_22 { pt3dadd( 55.649, -206.156, -39.4646, 0.14 ) }
    dend_22 { pt3dadd( 55.8411, -206.745, -39.4949, 0.1 ) }
    dend_22 { pt3dadd( 56.2371, -207.818, -39.5282, 0.1 ) }
    dend_22 { pt3dadd( 56.4662, -208.391, -39.5338, 0.1 ) }
    dend_22 { pt3dadd( 56.7464, -209.018, -39.5296, 0.1 ) }
    dend_22 { pt3dadd( 57.0133, -209.579, -39.5163, 0.1 ) }
    dend_22 { pt3dadd( 57.2847, -210.134, -39.4936, 0.1 ) }
    dend_22 { pt3dadd( 57.5793, -210.763, -39.5072, 0.1 ) }
    dend_22 { pt3dadd( 57.8243, -211.328, -39.557, 0.1 ) }
    dend_22 { pt3dadd( 58.0853, -211.961, -39.609, 0.14 ) }
    dend_22 { pt3dadd( 58.3165, -212.535, -39.6546, 0.28 ) }
    dend_22 { pt3dadd( 58.5428, -213.097, -39.6992, 0.14 ) }
    dend_22 { pt3dadd( 58.7679, -213.674, -39.7429, 0.1 ) }
    dend_22 { pt3dadd( 58.9783, -214.252, -39.7824, 0.1 ) }
    dend_22 { pt3dadd( 59.1858, -214.836, -39.8208, 0.1 ) }
    dend_22 { pt3dadd( 59.3239, -215.241, -39.8458, 0.1 ) }
    dend_22 { pt3dadd( 59.5291, -215.825, -39.8835, 0.84 ) }
    dend_22 { pt3dadd( 59.7392, -216.404, -39.9229, 0.7 ) }
    dend_22 { pt3dadd( 59.9544, -216.981, -39.9637, 0.56 ) }
    dend_22 { pt3dadd( 59.9544, -216.981, -39.9637, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 23/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 36.2957, -149.704, -20.8821, 0.28 ) }
    dend_21 { pt3dadd( 37.9257, -149.997, -19.1155, 0.28 ) }
    dend_21 { pt3dadd( 38.7905, -150.156, -18.1933, 0.14 ) }
    dend_21 { pt3dadd( 39.6746, -150.33, -17.2871, 0.1 ) }
    dend_21 { pt3dadd( 40.5602, -150.504, -16.3794, 0.1 ) }
    dend_21 { pt3dadd( 41.6058, -150.71, -15.3077, 0.1 ) }
    dend_21 { pt3dadd( 42.4873, -150.883, -14.4042, 0.14 ) }
    dend_21 { pt3dadd( 43.4044, -151.085, -13.538, 0.28 ) }
    dend_21 { pt3dadd( 43.7525, -151.165, -13.2196, 0.42 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 32/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -28.2793, -172.4, -18.1733, 0.14 ) }
    dend_12 { pt3dadd( -28.0121, -172.564, -18.397, 0.14 ) }
    dend_12 { pt3dadd( -27.567, -172.823, -18.7498, 0.28 ) }
    dend_12 { pt3dadd( -26.778, -173.259, -19.3105, 0.14 ) }
    dend_12 { pt3dadd( -26.3028, -173.517, -19.6185, 0.1 ) }
    dend_12 { pt3dadd( -25.9984, -173.682, -19.8063, 0.1 ) }
    dend_12 { pt3dadd( -25.0953, -174.184, -20.3423, 0.1 ) }
    dend_12 { pt3dadd( -24.6122, -174.469, -20.612, 0.1 ) }
    dend_12 { pt3dadd( -24.1359, -174.784, -20.8371, 0.1 ) }
    dend_12 { pt3dadd( -23.8274, -175.007, -20.9333, 0.1 ) }
    dend_12 { pt3dadd( -23.8274, -175.007, -20.9333, 0.1 ) }
    dend_12 { pt3dadd( -23.6323, -175.201, -20.9562, 0.1 ) }
    dend_12 { pt3dadd( -23.2279, -175.658, -20.9436, 0.1 ) }
    dend_12 { pt3dadd( -22.8344, -176.118, -20.8709, 0.1 ) }
    dend_12 { pt3dadd( -22.5857, -176.41, -20.8002, 0.1 ) }
    dend_12 { pt3dadd( -22.185, -176.861, -20.6685, 0.1 ) }
    dend_12 { pt3dadd( -21.7785, -177.304, -20.5281, 0.1 ) }
    dend_12 { pt3dadd( -21.5242, -177.574, -20.4378, 0.1 ) }
    dend_12 { pt3dadd( -20.6848, -178.447, -20.1339, 0.1 ) }
    dend_12 { pt3dadd( -20.27, -178.88, -19.9867, 0.1 ) }
    dend_12 { pt3dadd( -20.0101, -179.153, -19.9002, 0.1 ) }
    dend_12 { pt3dadd( -19.5928, -179.587, -19.763, 0.1 ) }
    dend_12 { pt3dadd( -19.1806, -180.02, -19.6376, 0.1 ) }
    dend_12 { pt3dadd( -18.9219, -180.305, -19.5768, 0.1 ) }
    dend_12 { pt3dadd( -18.5309, -180.773, -19.5618, 0.1 ) }
    dend_12 { pt3dadd( -18.279, -181.071, -19.5525, 0.1 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -28.2793, -172.4, -18.1733, 0.1 ) }
    dend_11 { pt3dadd( -28.1419, -173.102, -18.0165, 0.1 ) }
    dend_11 { pt3dadd( -28.0721, -173.467, -17.9543, 0.1 ) }
    dend_11 { pt3dadd( -28.0021, -173.837, -17.9035, 0.1 ) }
    dend_11 { pt3dadd( -27.932, -174.211, -17.8614, 0.1 ) }
    dend_11 { pt3dadd( -27.8713, -174.584, -17.8229, 0.1 ) }
    dend_11 { pt3dadd( -27.8223, -174.962, -17.7851, 0.1 ) }
    dend_11 { pt3dadd( -27.7848, -175.34, -17.7708, 0.1 ) }
    dend_11 { pt3dadd( -27.7555, -175.712, -17.7541, 0.1 ) }
    dend_11 { pt3dadd( -27.7306, -176.093, -17.7352, 0.1 ) }
    dend_11 { pt3dadd( -27.7055, -176.52, -17.713, 0.1 ) }
    dend_11 { pt3dadd( -27.6808, -176.939, -17.6913, 0.1 ) }
    dend_11 { pt3dadd( -27.656, -177.318, -17.6725, 0.1 ) }
    dend_11 { pt3dadd( -27.6329, -177.698, -17.6529, 0.1 ) }
    dend_11 { pt3dadd( -27.6082, -178.077, -17.6341, 0.1 ) }
    dend_11 { pt3dadd( -27.5775, -178.458, -17.6173, 0.1 ) }
    dend_11 { pt3dadd( -27.5385, -178.829, -17.604, 0.14 ) }
    dend_11 { pt3dadd( -27.4923, -179.205, -17.5643, 0.28 ) }
    dend_11 { pt3dadd( -27.44, -179.623, -17.4923, 0.14 ) }
    dend_11 { pt3dadd( -27.3908, -179.983, -17.3795, 0.1 ) }
    dend_11 { pt3dadd( -27.3384, -180.332, -17.2322, 0.1 ) }
    dend_11 { pt3dadd( -27.3114, -180.497, -17.1512, 0.1 ) }
    dend_11 { pt3dadd( -27.1847, -181.2, -16.7791, 0.1 ) }
    dend_11 { pt3dadd( -27.119, -181.533, -16.6008, 0.1 ) }
    dend_11 { pt3dadd( -26.9681, -182.234, -16.2422, 0.1 ) }
    dend_11 { pt3dadd( -26.9082, -182.583, -16.1007, 0.1 ) }
    dend_11 { pt3dadd( -26.8674, -182.95, -15.9989, 0.1 ) }
    dend_11 { pt3dadd( -26.8446, -183.325, -15.9461, 0.1 ) }
    dend_11 { pt3dadd( -26.8398, -183.707, -15.9526, 0.14 ) }
    dend_11 { pt3dadd( -26.8486, -184.079, -15.9904, 0.1 ) }
    dend_11 { pt3dadd( -26.8868, -184.866, -16.1434, 0.14 ) }
    dend_11 { pt3dadd( -26.9102, -185.286, -16.2257, 0.1 ) }
    dend_11 { pt3dadd( -26.9189, -185.474, -16.2601, 0.14 ) }
    dend_11 { pt3dadd( -26.9275, -185.654, -16.3029, 0.28 ) }
    dend_11 { pt3dadd( -26.9323, -185.837, -16.3509, 0.28 ) }
    dend_11 { pt3dadd( -26.9261, -186.209, -16.4456, 0.14 ) }
    dend_11 { pt3dadd( -26.8979, -186.58, -16.5271, 0.1 ) }
    dend_11 { pt3dadd( -26.8635, -186.951, -16.6141, 0.1 ) }
    dend_11 { pt3dadd( -26.7911, -187.708, -16.7846, 0.1 ) }
    dend_11 { pt3dadd( -26.7484, -188.074, -16.8656, 0.1 ) }
    dend_11 { pt3dadd( -26.6971, -188.443, -16.943, 0.1 ) }
    dend_11 { pt3dadd( -26.6386, -188.813, -17.0154, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_11 { pt3dadd( -26.5678, -189.187, -17.0526, 0.1 ) }
    dend_11 { pt3dadd( -26.4904, -189.56, -17.0349, 0.1 ) }
    dend_11 { pt3dadd( -26.4247, -189.81, -16.9538, 0.1 ) }
    dend_11 { pt3dadd( -26.3415, -190.144, -16.7898, 1.12 ) }
    dend_11 { pt3dadd( -26.3415, -190.144, -16.7898, 0.98 ) }
    dend_11 { pt3dadd( -26.2141, -190.751, -16.4006, 0.28 ) }
    dend_11 { pt3dadd( -26.1465, -191.109, -16.1729, 0.14 ) }
    dend_11 { pt3dadd( -26.0344, -191.775, -15.7802, 0.1 ) }
    dend_11 { pt3dadd( -25.9795, -192.145, -15.5849, 0.1 ) }
    dend_11 { pt3dadd( -25.9207, -192.491, -15.4361, 0.1 ) }
    dend_11 { pt3dadd( -25.846, -192.851, -15.3288, 0.1 ) }
    dend_11 { pt3dadd( -25.7507, -193.216, -15.2773, 0.1 ) }
    dend_11 { pt3dadd( -25.6334, -193.576, -15.2289, 0.1 ) }
    dend_11 { pt3dadd( -25.5726, -193.757, -15.2086, 0.1 ) }
    dend_11 { pt3dadd( -25.4342, -194.156, -15.1386, 0.1 ) }
    dend_11 { pt3dadd( -25.314, -194.551, -15.0423, 0.1 ) }
    dend_11 { pt3dadd( -25.2516, -194.798, -14.9695, 0.1 ) }
    dend_11 { pt3dadd( -25.117, -195.483, -14.7498, 0.1 ) }
    dend_11 { pt3dadd( -25.0606, -195.88, -14.6224, 0.1 ) }
    dend_11 { pt3dadd( -25.022, -196.289, -14.5007, 0.1 ) }
    dend_11 { pt3dadd( -25.0098, -196.545, -14.4333, 0.1 ) }
    dend_11 { pt3dadd( -24.998, -196.918, -14.3556, 0.1 ) }
    dend_11 { pt3dadd( -24.9818, -197.295, -14.3048, 0.1 ) }
    dend_11 { pt3dadd( -24.9513, -197.671, -14.2588, 0.1 ) }
    dend_11 { pt3dadd( -24.9012, -198.044, -14.1945, 0.1 ) }
    dend_11 { pt3dadd( -24.8361, -198.404, -14.0864, 0.1 ) }
    dend_11 { pt3dadd( -24.765, -198.747, -13.9496, 0.1 ) }
    dend_11 { pt3dadd( -24.693, -199.086, -13.7889, 0.1 ) }
    dend_11 { pt3dadd( -24.5561, -199.702, -13.4142, 0.1 ) }
    dend_11 { pt3dadd( -24.4854, -200.012, -13.2019, 0.1 ) }
    dend_11 { pt3dadd( -24.3509, -200.656, -12.7405, 0.1 ) }
    dend_11 { pt3dadd( -24.2975, -200.965, -12.5211, 0.1 ) }
    dend_11 { pt3dadd( -24.2522, -201.281, -12.3074, 0.1 ) }
    dend_11 { pt3dadd( -24.1851, -201.968, -11.8981, 0.1 ) }
    dend_11 { pt3dadd( -24.1651, -202.315, -11.7379, 0.1 ) }
    dend_11 { pt3dadd( -24.1435, -202.705, -11.5596, 0.1 ) }
    dend_11 { pt3dadd( -24.1217, -203.095, -11.4027, 0.1 ) }
    dend_11 { pt3dadd( -24.1092, -203.272, -11.3319, 0.1 ) }
    dend_11 { pt3dadd( -24.0732, -203.674, -11.1863, 0.1 ) }
    dend_11 { pt3dadd( -24.0312, -204.037, -11.0806, 0.1 ) }
    dend_11 { pt3dadd( -23.918, -204.779, -10.8697, 0.1 ) }
    dend_11 { pt3dadd( -23.8485, -205.135, -10.7747, 0.1 ) }
    dend_11 { pt3dadd( -23.7683, -205.499, -10.6879, 0.1 ) }
    dend_11 { pt3dadd( -23.6931, -205.864, -10.6127, 0.1 ) }
    dend_11 { pt3dadd( -23.6212, -206.235, -10.554, 0.1 ) }
    dend_11 { pt3dadd( -23.5696, -206.61, -10.5136, 0.1 ) }
    dend_11 { pt3dadd( -23.5534, -206.8, -10.5054, 0.1 ) }
    dend_11 { pt3dadd( -23.5361, -207.173, -10.4845, 0.1 ) }
    dend_11 { pt3dadd( -23.5274, -207.599, -10.4567, 0.1 ) }
    dend_11 { pt3dadd( -23.5322, -207.977, -10.4277, 0.1 ) }
    dend_11 { pt3dadd( -23.5448, -208.396, -10.393, 0.1 ) }
    dend_11 { pt3dadd( -23.557, -208.774, -10.3614, 0.1 ) }
    dend_11 { pt3dadd( -23.5738, -209.199, -10.3248, 0.1 ) }
    dend_11 { pt3dadd( -23.587, -209.578, -10.2929, 0.1 ) }
    dend_11 { pt3dadd( -23.6037, -209.997, -10.2862, 0.14 ) }
    dend_11 { pt3dadd( -23.6237, -210.377, -10.3011, 0.1 ) }
    dend_11 { pt3dadd( -23.6431, -210.757, -10.3382, 0.1 ) }
    dend_11 { pt3dadd( -23.6653, -211.173, -10.4007, 0.1 ) }
    dend_11 { pt3dadd( -23.6775, -211.547, -10.475, 0.1 ) }
    dend_11 { pt3dadd( -23.6886, -212.235, -10.631, 0.14 ) }
    dend_11 { pt3dadd( -23.6886, -212.235, -10.631, 0.28 ) }
    dend_11 { pt3dadd( -23.6908, -212.419, -10.6861, 0.28 ) }
    dend_11 { pt3dadd( -23.6976, -212.782, -10.8035, 0.14 ) }
    dend_11 { pt3dadd( -23.6985, -213.148, -10.9174, 0.1 ) }
    dend_11 { pt3dadd( -23.7063, -213.502, -11.0406, 0.1 ) }
    dend_11 { pt3dadd( -23.729, -213.866, -11.1592, 0.1 ) }
    dend_11 { pt3dadd( -23.8173, -214.624, -11.4136, 0.1 ) }
    dend_11 { pt3dadd( -23.8809, -214.982, -11.5352, 0.1 ) }
    dend_11 { pt3dadd( -23.9663, -215.336, -11.6504, 0.1 ) }
    dend_11 { pt3dadd( -24.1663, -216.056, -11.8618, 0.1 ) }
    dend_11 { pt3dadd( -24.2781, -216.457, -11.9645, 0.1 ) }
    dend_11 { pt3dadd( -24.378, -216.859, -12.0407, 0.1 ) }
    dend_11 { pt3dadd( -24.4197, -217.125, -12.0658, 0.1 ) }
    dend_11 { pt3dadd( -24.4557, -217.544, -12.0924, 0.1 ) }
    dend_11 { pt3dadd( -24.4514, -217.926, -12.1, 0.1 ) }
    dend_11 { pt3dadd( -24.4192, -218.188, -12.0922, 0.1 ) }
    dend_11 { pt3dadd( -24.3495, -218.564, -12.0892, 0.1 ) }
    dend_11 { pt3dadd( -24.2616, -218.978, -12.0898, 0.1 ) }
    dend_11 { pt3dadd( -24.1862, -219.353, -12.0889, 0.1 ) }
    dend_11 { pt3dadd( -24.1194, -219.728, -12.085, 0.1 ) }
    dend_11 { pt3dadd( -24.06, -220.102, -12.0506, 0.1 ) }
    dend_11 { pt3dadd( -24.0039, -220.514, -11.9827, 0.1 ) }
    dend_11 { pt3dadd( -23.9384, -220.873, -11.874, 0.1 ) }
    dend_11 { pt3dadd( -23.8514, -221.26, -11.7129, 0.1 ) }
    dend_11 { pt3dadd( -23.8045, -221.427, -11.6311, 0.1 ) }
    dend_11 { pt3dadd( -23.58, -222.002, -11.2806, 0.1 ) }
    dend_11 { pt3dadd( -23.4413, -222.294, -11.084, 0.1 ) }
    dend_11 { pt3dadd( -23.1158, -222.907, -10.6672, 0.1 ) }
    dend_11 { pt3dadd( -22.9582, -223.196, -10.4794, 0.1 ) }
    dend_11 { pt3dadd( -22.7967, -223.498, -10.3056, 0.1 ) }
    dend_11 { pt3dadd( -22.4743, -224.165, -9.99069, 0.1 ) }
    dend_11 { pt3dadd( -22.3339, -224.503, -9.87636, 0.1 ) }
    dend_11 { pt3dadd( -22.214, -224.858, -9.80549, 0.1 ) }
    dend_11 { pt3dadd( -22.123, -225.23, -9.79068, 0.1 ) }
    dend_11 { pt3dadd( -22.0562, -225.604, -9.80595, 0.1 ) }
    dend_11 { pt3dadd( -22.0128, -225.98, -9.85022, 0.1 ) }
    dend_11 { pt3dadd( -21.9924, -226.349, -9.92092, 0.1 ) }
    dend_11 { pt3dadd( -21.9641, -227.111, -10.0793, 0.14 ) }
    dend_11 { pt3dadd( -21.9618, -227.486, -10.1585, 0.28 ) }
    dend_11 { pt3dadd( -21.9688, -227.906, -10.2428, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_11 { pt3dadd( -21.9785, -228.277, -10.3055, 0.1 ) }
    dend_11 { pt3dadd( -21.9818, -228.465, -10.3272, 0.14 ) }
    dend_11 { pt3dadd( -21.9818, -228.465, -10.3272, 0.28 ) }
    dend_11 { pt3dadd( -21.9494, -228.727, -10.2674, 0.1 ) }
    dend_11 { pt3dadd( -21.8776, -229.09, -10.1709, 0.1 ) }
    dend_11 { pt3dadd( -21.7849, -229.446, -10.0727, 0.1 ) }
    dend_11 { pt3dadd( -21.6848, -229.797, -9.97811, 0.1 ) }
    dend_11 { pt3dadd( -21.4672, -230.524, -9.79744, 0.1 ) }
    dend_11 { pt3dadd( -21.3573, -230.88, -9.71853, 0.1 ) }
    dend_11 { pt3dadd( -21.2293, -231.282, -9.64147, 0.1 ) }
    dend_11 { pt3dadd( -21.1195, -231.642, -9.58354, 0.1 ) }
    dend_11 { pt3dadd( -21.0158, -232.008, -9.54057, 0.1 ) }
    dend_11 { pt3dadd( -20.9295, -232.378, -9.51499, 0.1 ) }
    dend_11 { pt3dadd( -20.8616, -232.755, -9.51137, 0.1 ) }
    dend_11 { pt3dadd( -20.8116, -233.125, -9.50195, 0.1 ) }
    dend_11 { pt3dadd( -20.7847, -233.504, -9.4839, 0.1 ) }
    dend_11 { pt3dadd( -20.7781, -233.885, -9.45861, 0.1 ) }
    dend_11 { pt3dadd( -20.7882, -234.312, -9.42426, 0.14 ) }
    dend_11 { pt3dadd( -20.8064, -234.685, -9.39093, 0.1 ) }
    dend_11 { pt3dadd( -20.8224, -234.953, -9.36597, 0.1 ) }
    dend_11 { pt3dadd( -20.8541, -235.378, -9.32421, 0.1 ) }
    dend_11 { pt3dadd( -20.8839, -235.795, -9.28369, 0.1 ) }
    dend_11 { pt3dadd( -20.9031, -236.173, -9.24968, 0.1 ) }
    dend_11 { pt3dadd( -20.9149, -236.553, -9.21806, 0.1 ) }
    dend_11 { pt3dadd( -20.9201, -236.932, -9.18886, 0.1 ) }
    dend_11 { pt3dadd( -20.9115, -237.353, -9.16141, 0.1 ) }
    dend_11 { pt3dadd( -20.9005, -237.734, -9.13767, 0.14 ) }
    dend_11 { pt3dadd( -20.8882, -238.113, -9.1145, 0.1 ) }
    dend_11 { pt3dadd( -20.8767, -238.532, -9.08818, 0.14 ) }
    dend_11 { pt3dadd( -20.8712, -238.911, -9.06266, 0.1 ) }
    dend_11 { pt3dadd( -20.8725, -239.292, -9.03465, 0.1 ) }
    dend_11 { pt3dadd( -20.876, -239.719, -9.00257, 0.1 ) }
    dend_11 { pt3dadd( -20.8829, -240.093, -8.97311, 0.1 ) }
    dend_11 { pt3dadd( -20.8815, -240.469, -8.91912, 0.1 ) }
    dend_11 { pt3dadd( -20.8646, -240.888, -8.83561, 0.1 ) }
    dend_11 { pt3dadd( -20.8367, -241.296, -8.73402, 0.1 ) }
    dend_11 { pt3dadd( -20.8175, -241.479, -8.68255, 0.1 ) }
    dend_11 { pt3dadd( -20.7628, -241.841, -8.57657, 0.14 ) }
    dend_11 { pt3dadd( -20.644, -242.509, -8.38164, 0.42 ) }
    dend_11 { pt3dadd( -20.5692, -242.869, -8.28411, 0.28 ) }
    dend_11 { pt3dadd( -20.4829, -243.233, -8.20003, 0.14 ) }
    dend_11 { pt3dadd( -20.4029, -243.592, -8.13144, 0.1 ) }
    dend_11 { pt3dadd( -20.3325, -243.964, -8.07717, 0.1 ) }
    dend_11 { pt3dadd( -20.2741, -244.338, -8.04302, 0.1 ) }
    dend_11 { pt3dadd( -20.2265, -244.717, -8.03212, 0.1 ) }
    dend_11 { pt3dadd( -20.1812, -245.095, -8.02057, 0.1 ) }
    dend_11 { pt3dadd( -20.1319, -245.512, -8.00751, 0.1 ) }
    dend_11 { pt3dadd( -20.0855, -245.888, -7.96908, 0.1 ) }
    dend_11 { pt3dadd( -20.0364, -246.26, -7.90776, 0.1 ) }
    dend_11 { pt3dadd( -19.9902, -246.63, -7.82595, 1.26 ) }
    dend_11 { pt3dadd( -19.9454, -246.996, -7.73061, 1.12 ) }
    dend_11 { pt3dadd( -19.9062, -247.361, -7.62485, 0.98 ) }
    dend_11 { pt3dadd( -19.8355, -248.056, -7.41714, 0.84 ) }
    dend_11 { pt3dadd( -19.8124, -248.42, -7.30721, 0.7 ) }
    dend_11 { pt3dadd( -19.7976, -248.83, -7.18934, 0.56 ) }
    dend_11 { pt3dadd( -19.7907, -249.192, -7.09729, 0.42 ) }
    dend_11 { pt3dadd( -19.7852, -249.612, -7.01166, 0.28 ) }
    dend_11 { pt3dadd( -19.772, -249.99, -6.96135, 0.14 ) }
    dend_11 { pt3dadd( -19.7455, -250.411, -6.94017, 0.1 ) }
    dend_11 { pt3dadd( -19.7089, -250.791, -6.954, 0.1 ) }
    dend_11 { pt3dadd( -19.6494, -251.166, -6.97222, 0.1 ) }
    dend_11 { pt3dadd( -19.5725, -251.541, -6.9922, 0.1 ) }
    dend_11 { pt3dadd( -19.4576, -251.948, -6.98634, 0.1 ) }
    dend_11 { pt3dadd( -19.3372, -252.311, -6.95549, 0.1 ) }
    dend_11 { pt3dadd( -19.0587, -253.056, -6.84716, 0.1 ) }
    dend_11 { pt3dadd( -18.8113, -253.706, -6.71651, 0.56 ) }
    dend_11 { pt3dadd( -18.6812, -254.054, -6.63193, 0.42 ) }
    dend_11 { pt3dadd( -18.4331, -254.748, -6.38245, 0.28 ) }
    dend_11 { pt3dadd( -18.3169, -255.072, -6.21119, 0.14 ) }
    dend_11 { pt3dadd( -18.2044, -255.382, -6.01641, 0.1 ) }
    dend_11 { pt3dadd( -18.0966, -255.688, -5.80928, 0.1 ) }
    dend_11 { pt3dadd( -17.995, -256.003, -5.61709, 0.1 ) }
    dend_11 { pt3dadd( -17.7868, -256.671, -5.22306, 0.1 ) }
    dend_11 { pt3dadd( -17.5931, -257.342, -4.87196, 0.1 ) }
    dend_11 { pt3dadd( -17.5044, -257.674, -4.70273, 0.14 ) }
    dend_11 { pt3dadd( -17.4226, -258.013, -4.54676, 0.28 ) }
    dend_11 { pt3dadd( -17.3819, -258.184, -4.46931, 0.98 ) }
    dend_11 { pt3dadd( -17.3031, -258.53, -4.33165, 1.12 ) }
    dend_11 { pt3dadd( -17.2289, -258.875, -4.20018, 0.98 ) }
    dend_11 { pt3dadd( -17.1493, -259.267, -4.04112, 0.84 ) }
    dend_11 { pt3dadd( -17.0687, -259.595, -3.85922, 0.7 ) }
    dend_11 { pt3dadd( -16.8916, -260.237, -3.44815, 0.56 ) }
    dend_11 { pt3dadd( -16.8033, -260.528, -3.22632, 0.42 ) }
    dend_11 { pt3dadd( -16.6086, -261.131, -2.72344, 0.28 ) }
    dend_11 { pt3dadd( -16.5136, -261.413, -2.48177, 0.14 ) }
    dend_11 { pt3dadd( -16.3125, -261.998, -1.99666, 0.1 ) }
    dend_11 { pt3dadd( -16.2188, -262.286, -1.77314, 0.1 ) }
    dend_11 { pt3dadd( -16.026, -262.924, -1.3167, 0.14 ) }
    dend_11 { pt3dadd( -15.9339, -263.228, -1.10301, 0.1 ) }
    dend_11 { pt3dadd( -15.8409, -263.548, -0.910913, 0.1 ) }
    dend_11 { pt3dadd( -15.7544, -263.864, -0.727837, 0.14 ) }
    dend_11 { pt3dadd( -15.718, -264.038, -0.656723, 0.28 ) }
    // Section: dend_70, id: dend_70, parent: dend_66 (entry count 92/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -20.1971, 82.172, -11.2502, 0.28 ) }
    dend_70 { pt3dadd( -20.1986, 81.7514, -11.1045, 0.28 ) }
    dend_70 { pt3dadd( -20.1294, 81.1196, -10.8489, 0.14 ) }
    dend_70 { pt3dadd( -20.0053, 80.5609, -10.6108, 0.1 ) }
    dend_70 { pt3dadd( -19.9176, 80.2863, -10.4926, 0.1 ) }
    dend_70 { pt3dadd( -19.5489, 79.2826, -10.0697, 0.1 ) }
    dend_70 { pt3dadd( -19.3278, 78.6808, -9.81618, 0.1 ) }
    dend_70 { pt3dadd( -19.0749, 78.1022, -9.53681, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_70 { pt3dadd( -18.7863, 77.5434, -9.23166, 0.1 ) }
    dend_70 { pt3dadd( -18.4723, 77.0056, -8.92985, 0.1 ) }
    dend_70 { pt3dadd( -18.3108, 76.7663, -8.80917, 0.1 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 3/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -20.1971, 82.172, -11.2502, 0.1 ) }
    dend_67 { pt3dadd( -20.5146, 82.4767, -11.6715, 0.1 ) }
    dend_67 { pt3dadd( -20.6648, 82.6332, -11.881, 0.1 ) }
    dend_67 { pt3dadd( -20.983, 82.9563, -12.2871, 0.1 ) }
    dend_67 { pt3dadd( -21.4194, 83.406, -12.8157, 0.1 ) }
    dend_67 { pt3dadd( -21.6992, 83.6836, -13.0905, 0.1 ) }
    dend_67 { pt3dadd( -22.2211, 84.1799, -13.4786, 0.1 ) }
    dend_67 { pt3dadd( -22.5463, 84.4911, -13.659, 0.1 ) }
    dend_67 { pt3dadd( -22.9852, 84.8829, -13.772, 0.1 ) }
    dend_67 { pt3dadd( -23.1502, 85.0192, -13.7646, 0.1 ) }
    dend_67 { pt3dadd( -23.8544, 85.5495, -13.5996, 0.1 ) }
    dend_67 { pt3dadd( -24.4862, 85.9911, -13.4194, 0.1 ) }
    dend_67 { pt3dadd( -24.4862, 85.9911, -13.4194, 0.1 ) }
    dend_67 { pt3dadd( -24.9789, 86.3138, -13.3019, 0.1 ) }
    dend_67 { pt3dadd( -25.3687, 86.5841, -13.2835, 0.1 ) }
    dend_67 { pt3dadd( -25.6119, 86.765, -13.3333, 0.1 ) }
    dend_67 { pt3dadd( -26.0565, 87.1116, -13.5408, 0.1 ) }
    dend_67 { pt3dadd( -26.2722, 87.2843, -13.6671, 0.1 ) }
    dend_67 { pt3dadd( -26.6039, 87.5546, -13.8741, 0.1 ) }
    dend_67 { pt3dadd( -27.1555, 88.0219, -14.267, 0.1 ) }
    dend_67 { pt3dadd( -27.4629, 88.2857, -14.5162, 0.1 ) }
    dend_67 { pt3dadd( -27.7542, 88.5535, -14.7893, 0.1 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 25/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 13.5152, -233.673, -3.17034, 0.84 ) }
    dend_32 { pt3dadd( 13.6157, -233.83, -3.23798, 0.84 ) }
    dend_32 { pt3dadd( 13.8012, -234.143, -3.3766, 0.98 ) }
    dend_32 { pt3dadd( 13.9756, -234.468, -3.51692, 0.84 ) }
    dend_32 { pt3dadd( 14.2542, -235.183, -3.84156, 0.7 ) }
    dend_32 { pt3dadd( 14.3672, -235.571, -4.01099, 0.56 ) }
    dend_32 { pt3dadd( 14.4546, -235.977, -4.17825, 0.42 ) }
    dend_32 { pt3dadd( 14.4766, -236.152, -4.247, 0.56 ) }
    dend_32 { pt3dadd( 14.4868, -236.525, -4.38112, 0.7 ) }
    dend_32 { pt3dadd( 14.4316, -237.241, -4.61115, 0.56 ) }
    dend_32 { pt3dadd( 14.4014, -237.509, -4.68104, 0.84 ) }
    dend_32 { pt3dadd( 14.3953, -237.895, -4.76573, 0.84 ) }
    dend_32 { pt3dadd( 14.4371, -238.278, -4.84125, 0.84 ) }
    dend_32 { pt3dadd( 14.5253, -238.652, -4.92688, 0.84 ) }
    dend_32 { pt3dadd( 14.5253, -238.652, -4.92688, 0.98 ) }
    dend_32 { pt3dadd( 14.8118, -239.293, -5.12762, 0.1 ) }
    dend_32 { pt3dadd( 14.9836, -239.679, -5.26113, 0.14 ) }
    dend_32 { pt3dadd( 15.1265, -240.02, -5.37893, 0.1 ) }
    dend_32 { pt3dadd( 15.272, -240.417, -5.51066, 0.14 ) }
    dend_32 { pt3dadd( 15.3908, -240.825, -5.63444, 0.28 ) }
    dend_32 { pt3dadd( 15.4298, -241.01, -5.6843, 0.42 ) }
    dend_32 { pt3dadd( 15.4621, -241.273, -5.75276, 0.84 ) }
    dend_32 { pt3dadd( 15.5079, -241.655, -5.84125, 0.84 ) }
    dend_32 { pt3dadd( 15.553, -242.036, -5.92472, 0.84 ) }
    dend_32 { pt3dadd( 15.5973, -242.419, -5.99963, 0.7 ) }
    dend_32 { pt3dadd( 15.6426, -242.802, -6.08326, 0.56 ) }
    dend_32 { pt3dadd( 15.6756, -243.071, -6.15232, 0.56 ) }
    dend_32 { pt3dadd( 15.6992, -243.258, -6.20636, 0.84 ) }
    dend_32 { pt3dadd( 15.7142, -243.627, -6.32671, 0.84 ) }
    dend_32 { pt3dadd( 15.7043, -243.999, -6.45606, 0.7 ) }
    dend_32 { pt3dadd( 15.6733, -244.408, -6.6104, 0.84 ) }
    dend_32 { pt3dadd( 15.6341, -244.776, -6.75184, 0.7 ) }
    dend_32 { pt3dadd( 15.5914, -245.14, -6.89593, 0.84 ) }
    dend_32 { pt3dadd( 15.5017, -245.905, -7.21061, 0.7 ) }
    dend_32 { pt3dadd( 15.4956, -246.085, -7.28837, 0.84 ) }
    dend_32 { pt3dadd( 15.5184, -246.491, -7.46374, 0.7 ) }
    dend_32 { pt3dadd( 15.5718, -246.853, -7.61132, 0.84 ) }
    dend_32 { pt3dadd( 15.6674, -247.255, -7.76827, 0.7 ) }
    dend_32 { pt3dadd( 15.7819, -247.61, -7.896, 0.56 ) }
    dend_32 { pt3dadd( 16.0911, -248.34, -8.13846, 0.7 ) }
    dend_32 { pt3dadd( 16.2468, -248.687, -8.24984, 0.84 ) }
    dend_32 { pt3dadd( 16.4126, -249.031, -8.34959, 0.98 ) }
    dend_32 { pt3dadd( 16.5892, -249.372, -8.44484, 0.84 ) }
    dend_32 { pt3dadd( 16.6785, -249.542, -8.48411, 0.84 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 69/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 13.5152, -233.673, -3.17034, 1.26 ) }
    dend_29 { pt3dadd( 13.5256, -234.147, -2.93168, 1.26 ) }
    dend_29 { pt3dadd( 13.5408, -234.639, -2.71505, 1.12 ) }
    dend_29 { pt3dadd( 13.5537, -234.95, -2.60134, 0.98 ) }
    dend_29 { pt3dadd( 13.58, -235.463, -2.44932, 0.84 ) }
    dend_29 { pt3dadd( 13.6097, -235.975, -2.32157, 0.7 ) }
    dend_29 { pt3dadd( 13.6549, -236.303, -2.24799, 0.56 ) }
    dend_29 { pt3dadd( 13.7579, -236.764, -2.18543, 0.1 ) }
    dend_29 { pt3dadd( 13.8951, -237.223, -2.1652, 0.1 ) }
    dend_29 { pt3dadd( 14.0514, -237.665, -2.18419, 0.1 ) }
    dend_29 { pt3dadd( 14.1391, -237.887, -2.21586, 0.1 ) }
    dend_29 { pt3dadd( 14.4758, -238.689, -2.3906, 0.1 ) }
    dend_29 { pt3dadd( 14.6895, -239.107, -2.48663, 0.1 ) }
    dend_29 { pt3dadd( 14.9495, -239.562, -2.5854, 0.1 ) }
    dend_29 { pt3dadd( 15.1889, -239.974, -2.65793, 0.1 ) }
    dend_29 { pt3dadd( 15.4426, -240.437, -2.72295, 0.1 ) }
    dend_29 { pt3dadd( 15.5447, -240.654, -2.74189, 0.1 ) }
    dend_29 { pt3dadd( 15.8638, -241.514, -2.78087, 0.28 ) }
    dend_29 { pt3dadd( 16.0177, -241.957, -2.77056, 0.14 ) }
    dend_29 { pt3dadd( 16.1756, -242.467, -2.73222, 0.28 ) }
    dend_29 { pt3dadd( 16.299, -242.926, -2.68924, 0.42 ) }
    dend_29 { pt3dadd( 16.412, -243.438, -2.63737, 0.56 ) }
    dend_29 { pt3dadd( 16.4897, -243.908, -2.61377, 0.42 ) }
    dend_29 { pt3dadd( 16.542, -244.441, -2.63248, 0.28 ) }
    dend_29 { pt3dadd( 16.5939, -244.912, -2.68894, 0.14 ) }
    dend_29 { pt3dadd( 16.6233, -245.144, -2.74352, 0.28 ) }
    dend_29 { pt3dadd( 16.6533, -245.364, -2.81056, 0.98 ) }
    dend_29 { pt3dadd( 16.7251, -245.868, -2.98547, 0.84 ) }
    dend_29 { pt3dadd( 16.7964, -246.366, -3.16102, 0.7 ) }
    dend_29 { pt3dadd( 16.8668, -246.873, -3.32359, 0.56 ) }
    dend_29 { pt3dadd( 16.907, -247.195, -3.39638, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_29 { pt3dadd( 16.9721, -247.526, -3.43188, 0.1 ) }
    dend_29 { pt3dadd( 17.1002, -248.037, -3.41727, 0.14 ) }
    dend_29 { pt3dadd( 17.233, -248.49, -3.34684, 0.28 ) }
    dend_29 { pt3dadd( 17.3988, -248.986, -3.22966, 0.42 ) }
    dend_29 { pt3dadd( 17.574, -249.464, -3.08355, 0.28 ) }
    dend_29 { pt3dadd( 17.8322, -250.305, -2.82638, 0.14 ) }
    dend_29 { pt3dadd( 17.9512, -250.806, -2.7043, 0.1 ) }
    dend_29 { pt3dadd( 17.9512, -250.806, -2.7043, 0.14 ) }
    dend_29 { pt3dadd( 18.0406, -251.024, -2.67087, 0.14 ) }
    dend_29 { pt3dadd( 18.2322, -251.296, -2.64695, 0.14 ) }
    dend_29 { pt3dadd( 18.9587, -251.963, -2.61034, 0.28 ) }
    dend_29 { pt3dadd( 19.3293, -252.272, -2.59339, 0.28 ) }
    dend_29 { pt3dadd( 20.071, -252.921, -2.54422, 0.42 ) }
    dend_29 { pt3dadd( 20.707, -253.545, -2.4912, 0.56 ) }
    dend_29 { pt3dadd( 21.3777, -254.258, -2.4218, 0.42 ) }
    dend_29 { pt3dadd( 21.9666, -254.924, -2.36563, 0.28 ) }
    dend_29 { pt3dadd( 22.3016, -255.345, -2.32924, 0.14 ) }
    dend_29 { pt3dadd( 22.6469, -256.286, -2.29466, 0.1 ) }
    dend_29 { pt3dadd( 22.4854, -257.156, -2.31511, 0.14 ) }
    dend_29 { pt3dadd( 22.4017, -257.382, -2.32735, 0.56 ) }
    dend_29 { pt3dadd( 22.1764, -257.804, -2.36572, 0.42 ) }
    dend_29 { pt3dadd( 21.931, -258.217, -2.41519, 0.28 ) }
    dend_29 { pt3dadd( 21.6961, -258.633, -2.4681, 0.28 ) }
    dend_29 { pt3dadd( 21.2721, -259.541, -2.57468, 0.14 ) }
    dend_29 { pt3dadd( 21.0933, -259.984, -2.60968, 0.1 ) }
    dend_29 { pt3dadd( 20.7383, -260.896, -2.66242, 0.1 ) }
    dend_29 { pt3dadd( 20.6699, -261.126, -2.66575, 0.14 ) }
    dend_29 { pt3dadd( 20.6156, -261.461, -2.65807, 0.28 ) }
    dend_29 { pt3dadd( 20.62, -261.928, -2.62552, 0.14 ) }
    dend_29 { pt3dadd( 20.7186, -262.452, -2.57536, 0.1 ) }
    dend_29 { pt3dadd( 20.8408, -262.91, -2.52614, 0.14 ) }
    dend_29 { pt3dadd( 21.1565, -263.856, -2.42977, 0.1 ) }
    dend_29 { pt3dadd( 21.3024, -264.309, -2.39744, 0.1 ) }
    dend_29 { pt3dadd( 21.4583, -264.822, -2.38179, 0.1 ) }
    dend_29 { pt3dadd( 21.5848, -265.273, -2.38019, 0.1 ) }
    dend_29 { pt3dadd( 21.6976, -265.739, -2.38862, 0.1 ) }
    dend_29 { pt3dadd( 21.7828, -266.208, -2.40443, 0.1 ) }
    dend_29 { pt3dadd( 21.8302, -266.684, -2.42511, 0.1 ) }
    dend_29 { pt3dadd( 21.8765, -267.159, -2.44012, 0.1 ) }
    dend_29 { pt3dadd( 21.8991, -267.397, -2.44231, 0.14 ) }
    dend_29 { pt3dadd( 21.9288, -267.727, -2.43521, 0.1 ) }
    dend_29 { pt3dadd( 21.9689, -268.201, -2.40634, 0.14 ) }
    dend_29 { pt3dadd( 22.0126, -268.734, -2.36393, 0.1 ) }
    dend_29 { pt3dadd( 22.0516, -269.21, -2.32551, 0.1 ) }
    dend_29 { pt3dadd( 22.0566, -269.738, -2.29692, 0.1 ) }
    dend_29 { pt3dadd( 22.0367, -270.216, -2.2858, 0.1 ) }
    dend_29 { pt3dadd( 22.0261, -270.745, -2.27875, 0.1 ) }
    dend_29 { pt3dadd( 22.0266, -271.224, -2.27402, 0.1 ) }
    dend_29 { pt3dadd( 22.039, -271.7, -2.26902, 0.1 ) }
    dend_29 { pt3dadd( 22.0916, -272.675, -2.25198, 0.14 ) }
    dend_29 { pt3dadd( 22.1114, -272.911, -2.24502, 0.28 ) }
    dend_29 { pt3dadd( 22.2116, -273.819, -2.18187, 0.7 ) }
    dend_29 { pt3dadd( 22.276, -274.283, -2.14164, 0.56 ) }
    dend_29 { pt3dadd( 22.3603, -274.809, -2.07482, 0.42 ) }
    dend_29 { pt3dadd( 22.445, -275.276, -2.008, 0.28 ) }
    dend_29 { pt3dadd( 22.5488, -275.789, -1.93649, 0.14 ) }
    dend_29 { pt3dadd( 22.6268, -276.316, -1.87766, 0.1 ) }
    dend_29 { pt3dadd( 22.6664, -276.789, -1.84511, 0.1 ) }
    dend_29 { pt3dadd( 22.7121, -277.314, -1.82206, 0.1 ) }
    dend_29 { pt3dadd( 22.7562, -277.789, -1.82144, 0.1 ) }
    dend_29 { pt3dadd( 22.8027, -278.263, -1.8375, 0.1 ) }
    dend_29 { pt3dadd( 22.8283, -278.5, -1.86216, 0.56 ) }
    dend_29 { pt3dadd( 22.8827, -278.971, -1.93577, 0.42 ) }
    dend_29 { pt3dadd( 22.9365, -279.431, -2.0132, 0.28 ) }
    dend_29 { pt3dadd( 22.9909, -279.899, -2.08925, 0.14 ) }
    dend_29 { pt3dadd( 23.044, -280.371, -2.15337, 0.14 ) }
    dend_29 { pt3dadd( 23.0996, -280.896, -2.19976, 0.28 ) }
    dend_29 { pt3dadd( 23.1235, -281.134, -2.21211, 0.42 ) }
    dend_29 { pt3dadd( 23.1559, -281.471, -2.21864, 0.1 ) }
    dend_29 { pt3dadd( 23.2045, -281.998, -2.21499, 0.1 ) }
    dend_29 { pt3dadd( 23.2474, -282.475, -2.20399, 0.1 ) }
    dend_29 { pt3dadd( 23.2952, -283.009, -2.18918, 0.1 ) }
    dend_29 { pt3dadd( 23.3399, -283.486, -2.19099, 0.1 ) }
    dend_29 { pt3dadd( 23.3632, -283.714, -2.20615, 0.14 ) }
    dend_29 { pt3dadd( 23.3898, -283.95, -2.23799, 0.56 ) }
    dend_29 { pt3dadd( 23.4858, -284.413, -2.31863, 0.42 ) }
    dend_29 { pt3dadd( 23.6131, -284.866, -2.40457, 0.28 ) }
    dend_29 { pt3dadd( 23.7783, -285.361, -2.50661, 0.14 ) }
    dend_29 { pt3dadd( 23.9387, -285.805, -2.59449, 0.1 ) }
    dend_29 { pt3dadd( 24.1341, -286.236, -2.67155, 0.1 ) }
    dend_29 { pt3dadd( 24.5833, -287.097, -2.80961, 0.14 ) }
    dend_29 { pt3dadd( 24.8143, -287.503, -2.867, 0.1 ) }
    dend_29 { pt3dadd( 25.0559, -287.917, -2.91726, 0.1 ) }
    dend_29 { pt3dadd( 25.2907, -288.333, -2.95054, 0.1 ) }
    dend_29 { pt3dadd( 25.6976, -289.12, -3.00348, 0.56 ) }
    dend_29 { pt3dadd( 25.8605, -289.568, -3.03593, 0.7 ) }
    dend_29 { pt3dadd( 25.9847, -290.03, -3.06947, 0.56 ) }
    dend_29 { pt3dadd( 26.0986, -290.492, -3.10149, 0.42 ) }
    dend_29 { pt3dadd( 26.2059, -291.007, -3.13855, 0.28 ) }
    dend_29 { pt3dadd( 26.2781, -291.478, -3.16694, 0.14 ) }
    dend_29 { pt3dadd( 26.3662, -292.448, -3.22364, 0.28 ) }
    dend_29 { pt3dadd( 26.3861, -293.331, -3.26028, 0.7 ) }
    dend_29 { pt3dadd( 26.3725, -293.801, -3.27669, 0.56 ) }
    dend_29 { pt3dadd( 26.3423, -294.277, -3.29493, 0.42 ) }
    dend_29 { pt3dadd( 26.2575, -294.806, -3.32788, 0.28 ) }
    dend_29 { pt3dadd( 26.1828, -295.277, -3.34634, 0.14 ) }
    dend_29 { pt3dadd( 26.0414, -296.269, -3.35156, 0.1 ) }
    dend_29 { pt3dadd( 25.9538, -296.741, -3.341, 0.1 ) }
    dend_29 { pt3dadd( 25.8752, -297.211, -3.31695, 0.1 ) }
    dend_29 { pt3dadd( 25.7373, -298.175, -3.24776, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_29 { pt3dadd( 25.6501, -299.08, -3.15779, 0.1 ) }
    dend_29 { pt3dadd( 25.6431, -299.612, -3.08409, 0.1 ) }
    dend_29 { pt3dadd( 25.6987, -300.127, -2.99015, 0.1 ) }
    dend_29 { pt3dadd( 25.7276, -300.358, -2.94294, 0.1 ) }
    dend_29 { pt3dadd( 25.7276, -300.358, -2.94294, 0.1 ) }
    dend_29 { pt3dadd( 25.7177, -300.692, -2.88805, 0.1 ) }
    dend_29 { pt3dadd( 25.6459, -301.164, -2.84591, 0.1 ) }
    dend_29 { pt3dadd( 25.5561, -301.685, -2.82567, 0.1 ) }
    dend_29 { pt3dadd( 25.471, -302.157, -2.81334, 0.1 ) }
    dend_29 { pt3dadd( 25.3028, -303.15, -2.79667, 0.1 ) }
    dend_29 { pt3dadd( 25.2325, -303.622, -2.79734, 0.1 ) }
    dend_29 { pt3dadd( 25.1742, -304.09, -2.81033, 0.1 ) }
    dend_29 { pt3dadd( 25.131, -304.564, -2.83061, 0.1 ) }
    dend_29 { pt3dadd( 25.1177, -304.903, -2.85381, 0.1 ) }
    dend_29 { pt3dadd( 25.1303, -305.38, -2.89207, 0.1 ) }
    dend_29 { pt3dadd( 25.1822, -305.851, -2.94837, 0.1 ) }
    dend_29 { pt3dadd( 25.2672, -306.309, -3.00125, 0.1 ) }
    dend_29 { pt3dadd( 25.3836, -306.772, -3.05493, 0.14 ) }
    dend_29 { pt3dadd( 25.5216, -307.226, -3.111, 0.28 ) }
    dend_29 { pt3dadd( 25.6748, -307.677, -3.17217, 0.28 ) }
    dend_29 { pt3dadd( 25.8531, -308.174, -3.2253, 0.42 ) }
    dend_29 { pt3dadd( 26.1649, -309.034, -3.29773, 0.56 ) }
    dend_29 { pt3dadd( 26.3203, -309.476, -3.32779, 0.42 ) }
    dend_29 { pt3dadd( 26.4687, -309.932, -3.35399, 0.28 ) }
    dend_29 { pt3dadd( 26.6021, -310.389, -3.37751, 0.14 ) }
    dend_29 { pt3dadd( 26.7633, -310.901, -3.37605, 0.1 ) }
    dend_29 { pt3dadd( 26.9009, -311.348, -3.34737, 0.1 ) }
    dend_29 { pt3dadd( 27.0625, -311.796, -3.2937, 0.1 ) }
    dend_29 { pt3dadd( 27.2643, -312.22, -3.20106, 0.14 ) }
    dend_29 { pt3dadd( 27.3771, -312.423, -3.13843, 0.28 ) }
    dend_29 { pt3dadd( 27.8733, -313.239, -2.81982, 0.1 ) }
    dend_29 { pt3dadd( 28.1468, -313.666, -2.63191, 0.1 ) }
    dend_29 { pt3dadd( 28.611, -314.382, -2.28431, 0.1 ) }
    dend_29 { pt3dadd( 28.8678, -314.799, -2.08205, 0.1 ) }
    dend_29 { pt3dadd( 29.0831, -315.257, -1.89671, 0.1 ) }
    dend_29 { pt3dadd( 29.1638, -315.569, -1.8187, 0.1 ) }
    dend_29 { pt3dadd( 29.1694, -315.808, -1.80603, 0.14 ) }
    dend_29 { pt3dadd( 29.1492, -316.044, -1.82196, 0.56 ) }
    dend_29 { pt3dadd( 29.0696, -316.513, -1.89338, 0.42 ) }
    dend_29 { pt3dadd( 28.8969, -317.485, -2.07892, 0.28 ) }
    dend_29 { pt3dadd( 28.8194, -317.949, -2.1652, 0.14 ) }
    dend_29 { pt3dadd( 28.7536, -318.42, -2.23149, 0.1 ) }
    dend_29 { pt3dadd( 28.6656, -318.888, -2.27562, 0.14 ) }
    dend_29 { pt3dadd( 28.6156, -319.122, -2.28722, 0.28 ) }
    dend_29 { pt3dadd( 28.547, -319.447, -2.28747, 0.7 ) }
    dend_29 { pt3dadd( 28.4574, -319.977, -2.26413, 0.56 ) }
    dend_29 { pt3dadd( 28.3137, -320.486, -2.26878, 0.42 ) }
    dend_29 { pt3dadd( 28.0225, -321.322, -2.32351, 0.28 ) }
    dend_29 { pt3dadd( 27.9404, -321.544, -2.35025, 0.1 ) }
    dend_29 { pt3dadd( 27.7822, -321.993, -2.4272, 0.1 ) }
    dend_29 { pt3dadd( 27.6416, -322.438, -2.53656, 0.1 ) }
    dend_29 { pt3dadd( 27.4399, -323.393, -2.79627, 0.1 ) }
    dend_29 { pt3dadd( 27.4044, -323.855, -2.91206, 0.1 ) }
    dend_29 { pt3dadd( 27.4375, -324.324, -2.99613, 0.1 ) }
    dend_29 { pt3dadd( 27.5007, -324.789, -3.04364, 0.1 ) }
    dend_29 { pt3dadd( 27.6062, -325.308, -3.05909, 0.14 ) }
    dend_29 { pt3dadd( 27.8461, -326.191, -3.02881, 0.1 ) }
    dend_29 { pt3dadd( 28.0192, -326.697, -2.98117, 0.1 ) }
    dend_29 { pt3dadd( 28.1845, -327.198, -2.9366, 0.1 ) }
    dend_29 { pt3dadd( 28.3375, -327.71, -2.90116, 0.1 ) }
    dend_29 { pt3dadd( 28.454, -328.173, -2.8964, 0.1 ) }
    dend_29 { pt3dadd( 28.4965, -328.4, -2.91043, 0.1 ) }
    dend_29 { pt3dadd( 28.5051, -328.633, -2.95671, 0.1 ) }
    dend_29 { pt3dadd( 28.4932, -329.153, -3.11656, 0.1 ) }
    dend_29 { pt3dadd( 28.4567, -329.593, -3.28053, 0.1 ) }
    dend_29 { pt3dadd( 28.3905, -330.089, -3.47983, 0.1 ) }
    dend_29 { pt3dadd( 28.3173, -330.532, -3.64859, 0.1 ) }
    dend_29 { pt3dadd( 28.1711, -331.392, -3.94218, 0.1 ) }
    dend_29 { pt3dadd( 28.1711, -331.392, -3.94218, 0.14 ) }
    dend_29 { pt3dadd( 28.1261, -331.724, -4.01851, 0.28 ) }
    dend_29 { pt3dadd( 28.0855, -332.195, -4.10774, 0.28 ) }
    dend_29 { pt3dadd( 28.0742, -332.667, -4.17798, 0.14 ) }
    dend_29 { pt3dadd( 28.0957, -333.142, -4.24177, 0.1 ) }
    dend_29 { pt3dadd( 28.1468, -333.604, -4.29825, 0.1 ) }
    dend_29 { pt3dadd( 28.2319, -334.074, -4.34913, 0.1 ) }
    dend_29 { pt3dadd( 28.3425, -334.536, -4.38782, 0.1 ) }
    dend_29 { pt3dadd( 28.474, -334.997, -4.40834, 0.1 ) }
    dend_29 { pt3dadd( 28.6177, -335.452, -4.40574, 0.1 ) }
    dend_29 { pt3dadd( 28.7683, -335.905, -4.38646, 0.1 ) }
    dend_29 { pt3dadd( 29.0591, -336.769, -4.33103, 0.1 ) }
    dend_29 { pt3dadd( 29.2253, -337.277, -4.29437, 0.1 ) }
    dend_29 { pt3dadd( 29.3644, -337.733, -4.26434, 0.1 ) }
    dend_29 { pt3dadd( 29.4639, -338.25, -4.2361, 0.1 ) }
    dend_29 { pt3dadd( 29.5026, -338.725, -4.22295, 0.1 ) }
    dend_29 { pt3dadd( 29.4932, -339.204, -4.22864, 0.1 ) }
    dend_29 { pt3dadd( 29.4432, -339.677, -4.25664, 0.1 ) }
    dend_29 { pt3dadd( 29.3531, -340.136, -4.29929, 0.1 ) }
    dend_29 { pt3dadd( 29.1447, -341.118, -4.38463, 0.1 ) }
    dend_29 { pt3dadd( 29.0459, -341.584, -4.42606, 0.1 ) }
    dend_29 { pt3dadd( 28.9548, -342.054, -4.46103, 0.1 ) }
    dend_29 { pt3dadd( 28.8841, -342.525, -4.49134, 0.1 ) }
    dend_29 { pt3dadd( 28.8161, -343.373, -4.52393, 0.1 ) }
    dend_29 { pt3dadd( 28.8301, -344.286, -4.54496, 0.1 ) }
    dend_29 { pt3dadd( 28.8899, -344.759, -4.55497, 0.1 ) }
    dend_29 { pt3dadd( 28.9548, -345.233, -4.55271, 0.1 ) }
    dend_29 { pt3dadd( 29.0222, -345.705, -4.53532, 0.1 ) }
    dend_29 { pt3dadd( 29.1412, -346.218, -4.50465, 0.1 ) }
    dend_29 { pt3dadd( 29.2753, -346.675, -4.47638, 0.1 ) }
    dend_29 { pt3dadd( 29.3989, -347.137, -4.4561, 0.1 ) }
    dend_29 { pt3dadd( 29.5509, -347.644, -4.43275, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_29 { pt3dadd( 29.7171, -348.153, -4.41141, 0.1 ) }
    dend_29 { pt3dadd( 30.0337, -349.075, -4.369, 0.1 ) }
    dend_29 { pt3dadd( 30.1902, -349.528, -4.34567, 0.1 ) }
    dend_29 { pt3dadd( 30.3347, -349.973, -4.30922, 0.1 ) }
    dend_29 { pt3dadd( 30.4678, -350.43, -4.25612, 0.1 ) }
    dend_29 { pt3dadd( 30.5043, -350.663, -4.23017, 0.1 ) }
    dend_29 { pt3dadd( 30.5344, -350.997, -4.18103, 0.1 ) }
    dend_29 { pt3dadd( 30.5394, -351.515, -4.08823, 0.1 ) }
    dend_29 { pt3dadd( 30.5517, -352.042, -3.984, 0.1 ) }
    dend_29 { pt3dadd( 30.5954, -352.371, -3.91739, 0.1 ) }
    dend_29 { pt3dadd( 30.809, -353.304, -3.75299, 0.1 ) }
    dend_29 { pt3dadd( 31.1505, -354.148, -3.63844, 0.1 ) }
    dend_29 { pt3dadd( 31.3779, -354.57, -3.6055, 0.1 ) }
    dend_29 { pt3dadd( 31.6338, -354.975, -3.59422, 0.1 ) }
    dend_29 { pt3dadd( 32.1847, -355.787, -3.60659, 0.1 ) }
    dend_29 { pt3dadd( 32.4557, -356.175, -3.61591, 0.1 ) }
    dend_29 { pt3dadd( 33.0139, -356.982, -3.61971, 0.1 ) }
    dend_29 { pt3dadd( 33.2474, -357.403, -3.61745, 0.1 ) }
    dend_29 { pt3dadd( 33.4556, -357.832, -3.59172, 0.1 ) }
    dend_29 { pt3dadd( 33.5905, -358.29, -3.54254, 0.14 ) }
    dend_29 { pt3dadd( 33.6405, -358.616, -3.48627, 0.1 ) }
    dend_29 { pt3dadd( 33.6877, -359.137, -3.37102, 0.1 ) }
    dend_29 { pt3dadd( 33.6972, -359.651, -3.24757, 0.1 ) }
    dend_29 { pt3dadd( 33.7081, -359.98, -3.16744, 0.1 ) }
    dend_29 { pt3dadd( 33.759, -360.96, -2.95312, 0.1 ) }
    dend_29 { pt3dadd( 33.8262, -361.858, -2.80426, 0.1 ) }
    dend_29 { pt3dadd( 33.8387, -362.333, -2.77343, 0.1 ) }
    dend_29 { pt3dadd( 33.8678, -362.809, -2.77039, 0.1 ) }
    dend_29 { pt3dadd( 33.9152, -363.285, -2.7949, 0.1 ) }
    dend_29 { pt3dadd( 34.019, -363.75, -2.82376, 0.1 ) }
    dend_29 { pt3dadd( 34.1687, -364.197, -2.85253, 0.1 ) }
    dend_29 { pt3dadd( 34.4422, -365.07, -2.89426, 0.1 ) }
    dend_29 { pt3dadd( 34.7672, -365.924, -2.91339, 0.28 ) }
    dend_29 { pt3dadd( 34.9578, -366.365, -2.91489, 0.28 ) }
    dend_29 { pt3dadd( 35.382, -367.28, -2.90979, 0.14 ) }
    dend_29 { pt3dadd( 35.549, -367.722, -2.90331, 0.1 ) }
    dend_29 { pt3dadd( 35.6946, -368.239, -2.8981, 0.14 ) }
    dend_29 { pt3dadd( 35.7382, -368.475, -2.89968, 0.7 ) }
    dend_29 { pt3dadd( 35.6956, -368.948, -2.93801, 0.56 ) }
    dend_29 { pt3dadd( 35.5809, -369.413, -2.98211, 0.56 ) }
    dend_29 { pt3dadd( 35.2407, -370.356, -3.06907, 0.42 ) }
    dend_29 { pt3dadd( 35.0702, -370.805, -3.09209, 0.28 ) }
    dend_29 { pt3dadd( 34.9004, -371.253, -3.09426, 0.14 ) }
    dend_29 { pt3dadd( 34.5769, -372.176, -3.03541, 0.1 ) }
    dend_29 { pt3dadd( 34.4769, -372.498, -2.99417, 0.1 ) }
    dend_29 { pt3dadd( 34.3575, -373.004, -2.89619, 0.1 ) }
    dend_29 { pt3dadd( 34.2924, -373.52, -2.76542, 0.1 ) }
    dend_29 { pt3dadd( 34.2644, -373.839, -2.66484, 0.14 ) }
    dend_29 { pt3dadd( 34.2111, -374.345, -2.49333, 0.1 ) }
    dend_29 { pt3dadd( 34.1665, -374.842, -2.31745, 0.1 ) }
    dend_29 { pt3dadd( 34.0929, -375.342, -2.13872, 0.14 ) }
    dend_29 { pt3dadd( 33.9921, -375.829, -1.95446, 0.14 ) }
    dend_29 { pt3dadd( 33.9147, -376.134, -1.82564, 0.28 ) }
    dend_29 { pt3dadd( 33.621, -376.898, -1.48041, 0.42 ) }
    dend_29 { pt3dadd( 33.621, -376.898, -1.48041, 0.56 ) }
    dend_29 { pt3dadd( 33.3969, -377.331, -1.2627, 0.56 ) }
    dend_29 { pt3dadd( 33.2555, -377.606, -1.11896, 0.42 ) }
    dend_29 { pt3dadd( 32.993, -378.163, -0.832208, 0.28 ) }
    dend_29 { pt3dadd( 32.6905, -378.931, -0.423748, 0.42 ) }
    dend_29 { pt3dadd( 32.562, -379.383, -0.178519, 0.28 ) }
    dend_29 { pt3dadd( 32.4108, -379.848, 0.0503488, 0.14 ) }
    dend_29 { pt3dadd( 32.3098, -380.148, 0.174391, 0.1 ) }
    dend_29 { pt3dadd( 32.2404, -380.365, 0.249496, 0.14 ) }
    dend_29 { pt3dadd( 32.1006, -380.859, 0.387587, 0.7 ) }
    dend_29 { pt3dadd( 31.9895, -381.359, 0.524435, 0.56 ) }
    dend_29 { pt3dadd( 31.7633, -382.3, 0.803195, 0.42 ) }
    dend_29 { pt3dadd( 31.6554, -382.743, 0.946657, 0.28 ) }
    dend_29 { pt3dadd( 31.5215, -383.175, 1.10214, 0.14 ) }
    dend_29 { pt3dadd( 31.4474, -383.387, 1.18852, 0.28 ) }
    dend_29 { pt3dadd( 31.2816, -383.851, 1.38977, 0.28 ) }
    dend_29 { pt3dadd( 31.1238, -384.305, 1.62012, 0.14 ) }
    dend_29 { pt3dadd( 31.04, -384.591, 1.78413, 0.1 ) }
    dend_29 { pt3dadd( 30.7671, -385.483, 2.35187, 0.1 ) }
    dend_29 { pt3dadd( 30.6866, -385.761, 2.53269, 0.1 ) }
    dend_29 { pt3dadd( 30.573, -386.201, 2.80436, 0.1 ) }
    dend_29 { pt3dadd( 30.5076, -386.497, 2.96905, 0.1 ) }
    dend_29 { pt3dadd( 30.425, -386.968, 3.21374, 0.1 ) }
    dend_29 { pt3dadd( 30.3764, -387.439, 3.45535, 0.1 ) }
    dend_29 { pt3dadd( 30.3867, -387.912, 3.69404, 0.14 ) }
    dend_29 { pt3dadd( 30.3923, -388.128, 3.79748, 0.28 ) }
    dend_29 { pt3dadd( 30.3923, -388.128, 3.79748, 0.84 ) }
    dend_29 { pt3dadd( 30.3923, -388.128, 3.79748, 0.84 ) }
    dend_29 { pt3dadd( 30.4056, -388.447, 3.91322, 0.28 ) }
    dend_29 { pt3dadd( 30.43, -388.958, 4.07689, 0.14 ) }
    dend_29 { pt3dadd( 30.4543, -389.46, 4.23638, 0.1 ) }
    dend_29 { pt3dadd( 30.477, -389.968, 4.41018, 0.14 ) }
    dend_29 { pt3dadd( 30.498, -390.464, 4.58873, 0.1 ) }
    dend_29 { pt3dadd( 30.5068, -390.688, 4.67383, 0.1 ) }
    dend_29 { pt3dadd( 30.524, -391.184, 4.8797, 0.14 ) }
    dend_29 { pt3dadd( 30.5371, -391.663, 5.10205, 0.28 ) }
    dend_29 { pt3dadd( 30.5484, -392.262, 5.41643, 0.14 ) }
    dend_29 { pt3dadd( 30.5515, -392.555, 5.58758, 0.1 ) }
    dend_29 { pt3dadd( 30.5531, -392.844, 5.76665, 0.1 ) }
    dend_29 { pt3dadd( 30.5538, -393.409, 6.13303, 0.1 ) }
    dend_29 { pt3dadd( 30.5541, -393.697, 6.32114, 0.1 ) }
    dend_29 { pt3dadd( 30.5566, -394.267, 6.67837, 0.1 ) }
    dend_29 { pt3dadd( 30.5602, -394.562, 6.84735, 0.1 ) }
    dend_29 { pt3dadd( 30.568, -395.028, 7.09915, 0.1 ) }
    dend_29 { pt3dadd( 30.5748, -395.332, 7.25085, 0.1 ) }
    dend_29 { pt3dadd( 30.5876, -395.81, 7.47508, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_29 { pt3dadd( 30.6026, -396.302, 7.69336, 0.1 ) }
    dend_29 { pt3dadd( 30.6191, -396.788, 7.89715, 0.1 ) }
    dend_29 { pt3dadd( 30.6304, -397.106, 8.02621, 0.1 ) }
    dend_29 { pt3dadd( 30.6488, -397.604, 8.22438, 0.1 ) }
    dend_29 { pt3dadd( 30.6611, -397.914, 8.34136, 0.1 ) }
    dend_29 { pt3dadd( 30.6821, -398.419, 8.52531, 0.1 ) }
    dend_29 { pt3dadd( 30.704, -398.916, 8.69867, 0.14 ) }
    dend_29 { pt3dadd( 30.6882, -399.428, 8.86137, 0.1 ) }
    dend_29 { pt3dadd( 30.6505, -399.939, 8.98817, 0.1 ) }
    dend_29 { pt3dadd( 30.6285, -400.172, 9.03882, 0.1 ) }
    dend_29 { pt3dadd( 30.5734, -400.696, 9.1466, 0.1 ) }
    dend_29 { pt3dadd( 30.5159, -401.209, 9.25131, 0.1 ) }
    dend_29 { pt3dadd( 30.4032, -402.188, 9.45731, 0.1 ) }
    dend_29 { pt3dadd( 30.1887, -404.097, 9.87845, 0.1 ) }
    dend_29 { pt3dadd( 30.1326, -404.606, 10.0076, 0.1 ) }
    dend_29 { pt3dadd( 30.0988, -404.932, 10.1082, 0.1 ) }
    dend_29 { pt3dadd( 30.0542, -405.424, 10.2959, 0.1 ) }
    dend_29 { pt3dadd( 30.0352, -405.727, 10.4478, 0.14 ) }
    dend_29 { pt3dadd( 30.0003, -406.175, 10.7467, 0.14 ) }
    dend_29 { pt3dadd( 29.9209, -406.528, 11.0636, 0.28 ) }
    dend_29 { pt3dadd( 29.8171, -406.905, 11.4287, 0.14 ) }
    dend_29 { pt3dadd( 29.6957, -407.273, 11.8061, 0.1 ) }
    dend_29 { pt3dadd( 29.5532, -407.619, 12.1904, 0.1 ) }
    dend_29 { pt3dadd( 29.2657, -408.198, 12.8552, 0.1 ) }
    dend_29 { pt3dadd( 29.1743, -408.344, 13.0263, 0.1 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 25/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -27.7542, 88.5535, -14.7893, 0.14 ) }
    dend_69 { pt3dadd( -28.6552, 88.9234, -14.2711, 0.14 ) }
    dend_69 { pt3dadd( -29.1172, 89.0832, -13.9516, 0.1 ) }
    dend_69 { pt3dadd( -29.4175, 89.1944, -13.7513, 0.14 ) }
    dend_69 { pt3dadd( -29.887, 89.39, -13.4655, 0.28 ) }
    dend_69 { pt3dadd( -30.7063, 89.7734, -13.023, 0.14 ) }
    dend_69 { pt3dadd( -32.2662, 90.5858, -12.2884, 0.1 ) }
    dend_69 { pt3dadd( -32.2662, 90.5858, -12.2884, 0.14 ) }
    dend_69 { pt3dadd( -32.7427, 90.8474, -12.0808, 0.28 ) }
    dend_69 { pt3dadd( -33.2218, 91.1438, -11.9385, 0.14 ) }
    dend_69 { pt3dadd( -33.6922, 91.4926, -11.9719, 0.1 ) }
    dend_69 { pt3dadd( -33.9756, 91.8154, -12.3754, 0.1 ) }
    dend_69 { pt3dadd( -34.0621, 91.9628, -12.7079, 0.1 ) }
    dend_69 { pt3dadd( -34.092, 92.12, -13.2713, 0.14 ) }
    dend_69 { pt3dadd( -34.116, 92.3193, -14.2278, 0.1 ) }
    dend_69 { pt3dadd( -34.1267, 92.4776, -15.2946, 0.1 ) }
    dend_69 { pt3dadd( -34.0843, 92.6797, -17.1836, 0.1 ) }
    dend_69 { pt3dadd( -34.0124, 92.7569, -18.1554, 0.1 ) }
    dend_69 { pt3dadd( -33.7234, 92.9026, -20.0262, 0.1 ) }
    dend_69 { pt3dadd( -33.0727, 93.1359, -21.8549, 0.1 ) }
    dend_69 { pt3dadd( -33.7836, 92.8565, -21.1884, 0.1 ) }
    dend_69 { pt3dadd( -35.38, 92.229, -20.2624, 0.14 ) }
    dend_69 { pt3dadd( -35.5991, 92.1436, -20.1468, 0.28 ) }
    dend_69 { pt3dadd( -36.0853, 91.9669, -19.8751, 0.84 ) }
    dend_69 { pt3dadd( -36.5231, 91.8247, -19.6134, 0.7 ) }
    dend_69 { pt3dadd( -37.0474, 91.7708, -19.5962, 0.56 ) }
    dend_69 { pt3dadd( -37.7976, 92.129, -20.1046, 0.42 ) }
    dend_69 { pt3dadd( -37.9341, 92.2685, -20.2815, 0.28 ) }
    dend_69 { pt3dadd( -38.2258, 92.6488, -20.609, 0.1 ) }
    dend_69 { pt3dadd( -38.494, 93.0608, -20.7843, 0.1 ) }
    dend_69 { pt3dadd( -38.8231, 93.5325, -20.7665, 0.1 ) }
    dend_69 { pt3dadd( -39.137, 93.9025, -20.5817, 0.1 ) }
    dend_69 { pt3dadd( -39.7349, 94.4221, -20.0928, 0.14 ) }
    dend_69 { pt3dadd( -40.485, 94.9488, -19.4799, 0.56 ) }
    dend_69 { pt3dadd( -41.232, 95.3638, -18.8327, 0.42 ) }
    dend_69 { pt3dadd( -42.0077, 95.7149, -18.1841, 0.28 ) }
    dend_69 { pt3dadd( -42.7423, 95.9942, -17.6105, 0.42 ) }
    dend_69 { pt3dadd( -43.6228, 96.2691, -16.9943, 0.56 ) }
    dend_69 { pt3dadd( -44.2402, 96.4277, -16.6199, 0.42 ) }
    dend_69 { pt3dadd( -45.1567, 96.6269, -16.2432, 0.56 ) }
    dend_69 { pt3dadd( -45.7268, 96.7195, -16.1559, 0.7 ) }
    dend_69 { pt3dadd( -46.3107, 96.7823, -16.2317, 0.84 ) }
    dend_69 { pt3dadd( -46.7849, 96.8138, -16.4601, 0.7 ) }
    dend_69 { pt3dadd( -47.1955, 96.8166, -16.7951, 0.84 ) }
    dend_69 { pt3dadd( -47.8419, 96.7712, -17.5713, 0.7 ) }
    dend_69 { pt3dadd( -48.1344, 96.7345, -18.0114, 0.56 ) }
    dend_69 { pt3dadd( -48.3781, 96.6821, -18.4756, 0.42 ) }
    dend_69 { pt3dadd( -48.8336, 96.5653, -19.4466, 0.28 ) }
    dend_69 { pt3dadd( -49.039, 96.5083, -19.9283, 0.14 ) }
    dend_69 { pt3dadd( -49.4349, 96.3808, -20.9188, 0.1 ) }
    dend_69 { pt3dadd( -49.6324, 96.2991, -21.4, 0.1 ) }
    dend_69 { pt3dadd( -49.9497, 96.1539, -22.3492, 0.14 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 77/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -27.7542, 88.5535, -14.7893, 0.1 ) }
    dend_68 { pt3dadd( -28.1652, 88.3287, -13.1593, 0.1 ) }
    dend_68 { pt3dadd( -28.3484, 88.2017, -12.2229, 0.1 ) }
    dend_68 { pt3dadd( -28.4721, 88.0805, -11.3679, 0.1 ) }
    dend_68 { pt3dadd( -28.6282, 87.7975, -9.63698, 0.1 ) }
    dend_68 { pt3dadd( -28.645, 87.7129, -9.18253, 0.1 ) }
    dend_68 { pt3dadd( -28.637, 87.6626, -8.95163, 0.1 ) }
    dend_68 { pt3dadd( -28.4991, 87.5182, -8.46066, 0.1 ) }
    dend_68 { pt3dadd( -28.3504, 87.407, -8.19202, 0.28 ) }
    dend_68 { pt3dadd( -28.0056, 87.2011, -7.85063, 0.14 ) }
    dend_68 { pt3dadd( -27.7533, 87.0579, -7.70315, 0.1 ) }
    dend_68 { pt3dadd( -27.2494, 86.7212, -7.42102, 0.1 ) }
    dend_68 { pt3dadd( -27.2494, 86.7212, -7.42102, 0.14 ) }
    dend_68 { pt3dadd( -27.2494, 86.7212, -7.42102, 0.28 ) }
    dend_68 { pt3dadd( -27.0129, 86.5389, -7.29444, 0.14 ) }
    dend_68 { pt3dadd( -26.6217, 86.263, -7.07888, 0.1 ) }
    dend_68 { pt3dadd( -26.3579, 86.1115, -6.96421, 0.1 ) }
    dend_68 { pt3dadd( -25.9039, 85.9074, -6.79313, 0.1 ) }
    dend_68 { pt3dadd( -25.4255, 85.7454, -6.668, 0.1 ) }
    dend_68 { pt3dadd( -24.9361, 85.5945, -6.54307, 0.1 ) }
    dend_68 { pt3dadd( -24.5126, 85.4605, -6.41043, 0.1 ) }
    dend_68 { pt3dadd( -23.6623, 85.1317, -6.02457, 0.1 ) }
    dend_68 { pt3dadd( -23.3138, 84.9301, -5.78493, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_68 { pt3dadd( -22.7896, 84.4622, -5.22899, 0.1 ) }
    dend_68 { pt3dadd( -22.4156, 83.9341, -4.65352, 0.1 ) }
    dend_68 { pt3dadd( -22.0229, 83.292, -4.01998, 0.1 ) }
    dend_68 { pt3dadd( -21.6578, 82.6239, -3.44705, 0.1 ) }
    dend_68 { pt3dadd( -21.4428, 82.2472, -3.16565, 0.1 ) }
    dend_68 { pt3dadd( -21.2889, 82.0053, -3.00142, 0.1 ) }
    dend_68 { pt3dadd( -20.9973, 81.6525, -2.76017, 0.1 ) }
    dend_68 { pt3dadd( -20.348, 81.145, -2.40747, 0.1 ) }
    dend_68 { pt3dadd( -19.9196, 80.9254, -2.20962, 0.1 ) }
    dend_68 { pt3dadd( -19.2146, 80.6765, -1.70178, 0.1 ) }
    dend_68 { pt3dadd( -18.6752, 80.5193, -1.03478, 0.1 ) }
    dend_68 { pt3dadd( -18.4324, 80.4499, -0.634961, 0.1 ) }
    dend_68 { pt3dadd( -17.9965, 80.3278, 0.210129, 0.1 ) }
    dend_68 { pt3dadd( -17.7945, 80.2659, 0.633293, 0.1 ) }
    dend_68 { pt3dadd( -17.3719, 80.1353, 1.48825, 0.1 ) }
    dend_68 { pt3dadd( -17.0664, 80.024, 2.0642, 0.1 ) }
    dend_68 { pt3dadd( -16.8923, 79.9532, 2.3456, 0.1 ) }
    dend_68 { pt3dadd( -16.6107, 79.8273, 2.77462, 0.1 ) }
    dend_68 { pt3dadd( -16.3022, 79.6952, 3.17392, 0.1 ) }
    dend_68 { pt3dadd( -16.0984, 79.615, 3.4263, 0.14 ) }
    dend_68 { pt3dadd( -15.8847, 79.5547, 3.66629, 0.28 ) }
    dend_68 { pt3dadd( -15.3254, 79.442, 4.32613, 0.28 ) }
    dend_68 { pt3dadd( -15.0265, 79.3971, 4.68684, 0.14 ) }
    dend_68 { pt3dadd( -14.6912, 79.3651, 5.0945, 0.1 ) }
    dend_68 { pt3dadd( -14.3846, 79.3601, 5.45146, 0.1 ) }
    dend_68 { pt3dadd( -14.0654, 79.3818, 5.78865, 0.1 ) }
    dend_68 { pt3dadd( -13.8173, 79.4153, 6.01636, 0.14 ) }
    dend_68 { pt3dadd( -13.8173, 79.4153, 6.01636, 0.28 ) }
    dend_68 { pt3dadd( -13.6291, 79.4379, 6.15766, 0.28 ) }
    dend_68 { pt3dadd( -13.255, 79.485, 6.43904, 0.28 ) }
    dend_68 { pt3dadd( -12.8766, 79.5197, 6.72052, 0.14 ) }
    dend_68 { pt3dadd( -12.5064, 79.5529, 6.99572, 0.1 ) }
    dend_68 { pt3dadd( -12.0841, 79.5953, 7.31081, 0.1 ) }
    dend_68 { pt3dadd( -11.6593, 79.6314, 7.62611, 0.1 ) }
    dend_68 { pt3dadd( -11.2851, 79.6521, 7.90116, 0.1 ) }
    dend_68 { pt3dadd( -10.8555, 79.6558, 8.21209, 0.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 16.6785, -249.542, -8.48411, 0.84 ) }
    dend_34 { pt3dadd( 17.1158, -250.477, -7.91, 0.84 ) }
    dend_34 { pt3dadd( 17.5268, -251.533, -7.35957, 0.84 ) }
    dend_34 { pt3dadd( 17.7416, -252.144, -7.11564, 0.98 ) }
    dend_34 { pt3dadd( 17.94, -252.766, -6.93163, 0.84 ) }
    dend_34 { pt3dadd( 18.0695, -253.179, -6.84513, 0.7 ) }
    dend_34 { pt3dadd( 18.2507, -253.76, -6.75169, 0.7 ) }
    dend_34 { pt3dadd( 18.2957, -254.054, -6.76971, 0.56 ) }
    dend_34 { pt3dadd( 18.2623, -254.713, -6.97221, 0.56 ) }
    dend_34 { pt3dadd( 18.037, -255.165, -7.31278, 0.7 ) }
    dend_34 { pt3dadd( 17.8418, -255.46, -7.58647, 0.84 ) }
    dend_34 { pt3dadd( 17.8418, -255.46, -7.58647, 0.98 ) }
    dend_34 { pt3dadd( 17.3431, -256.23, -8.28392, 1.12 ) }
    dend_34 { pt3dadd( 16.8575, -257.027, -8.95112, 0.98 ) }
    dend_34 { pt3dadd( 15.7729, -258.586, -10.2548, 0.84 ) }
    dend_34 { pt3dadd( 16.4068, -259.464, -9.88318, 0.84 ) }
    dend_34 { pt3dadd( 17.0625, -260.436, -9.41561, 0.7 ) }
    dend_34 { pt3dadd( 17.6992, -261.413, -8.93163, 0.56 ) }
    dend_34 { pt3dadd( 17.86, -261.646, -8.805, 0.42 ) }
    dend_34 { pt3dadd( 18.4911, -262.509, -8.29646, 0.1 ) }
    dend_34 { pt3dadd( 18.8491, -263.024, -8.00016, 0.14 ) }
    dend_34 { pt3dadd( 19.0801, -263.644, -7.79636, 0.28 ) }
    dend_34 { pt3dadd( 19.1103, -264.243, -7.75588, 0.42 ) }
    dend_34 { pt3dadd( 19.0552, -264.543, -7.80256, 0.56 ) }
    dend_34 { pt3dadd( 18.9719, -264.828, -7.88787, 0.84 ) }
    dend_34 { pt3dadd( 18.5026, -265.882, -8.40092, 0.84 ) }
    dend_34 { pt3dadd( 18.2505, -266.37, -8.69204, 0.84 ) }
    dend_34 { pt3dadd( 17.785, -267.208, -9.24304, 0.84 ) }
    dend_34 { pt3dadd( 17.644, -267.435, -9.40319, 0.84 ) }
    dend_34 { pt3dadd( 17.3528, -267.877, -9.727, 0.84 ) }
    dend_34 { pt3dadd( 16.7593, -268.777, -10.3864, 0.7 ) }
    dend_34 { pt3dadd( 16.6298, -269.015, -10.5405, 0.56 ) }
    dend_34 { pt3dadd( 16.127, -270.002, -11.1532, 0.56 ) }
    dend_34 { pt3dadd( 15.9044, -270.512, -11.4026, 0.7 ) }
    dend_34 { pt3dadd( 15.6639, -271.029, -11.6382, 0.84 ) }
    dend_34 { pt3dadd( 15.6639, -271.029, -11.6382, 0.84 ) }
    dend_34 { pt3dadd( 15.582, -271.313, -11.7291, 0.98 ) }
    dend_34 { pt3dadd( 15.3953, -271.865, -11.9297, 1.12 ) }
    dend_34 { pt3dadd( 15.0062, -273.027, -12.3432, 0.98 ) }
    dend_34 { pt3dadd( 14.8264, -273.585, -12.5391, 0.84 ) }
    dend_34 { pt3dadd( 14.6532, -274.143, -12.7325, 0.84 ) }
    dend_34 { pt3dadd( 14.4735, -274.701, -12.931, 0.7 ) }
    dend_34 { pt3dadd( 14.1196, -275.716, -13.3128, 0.56 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 16.6785, -249.542, -8.48411, 1.26 ) }
    dend_33 { pt3dadd( 16.574, -249.709, -8.9169, 1.26 ) }
    dend_33 { pt3dadd( 16.2639, -250.204, -10.2012, 1.4 ) }
    dend_33 { pt3dadd( 16.1617, -250.367, -10.6244, 1.26 ) }
    dend_33 { pt3dadd( 15.8514, -250.861, -11.9097, 1.12 ) }
    dend_33 { pt3dadd( 15.7492, -251.024, -12.333, 0.7 ) }
    dend_33 { pt3dadd( 15.6447, -251.191, -12.7658, 0.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 86/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 29.1743, -408.344, 13.0263, 0.1 ) }
    dend_31 { pt3dadd( 29.6156, -407.376, 13.5081, 0.1 ) }
    dend_31 { pt3dadd( 29.8743, -406.34, 13.9723, 0.1 ) }
    dend_31 { pt3dadd( 29.9955, -405.855, 14.1897, 0.1 ) }
    dend_31 { pt3dadd( 30.1334, -405.303, 14.4372, 0.1 ) }
    dend_31 { pt3dadd( 30.254, -404.82, 14.6535, 0.1 ) }
    dend_31 { pt3dadd( 30.3772, -404.326, 14.8747, 0.1 ) }
    dend_31 { pt3dadd( 30.2845, -403.368, 15.2105, 0.1 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 94/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 29.1743, -408.344, 13.0263, 0.1 ) }
    dend_30 { pt3dadd( 28.9376, -408.873, 13.2301, 0.1 ) }
    dend_30 { pt3dadd( 28.7389, -409.415, 13.4387, 0.1 ) }
    dend_30 { pt3dadd( 28.4593, -410.355, 13.7962, 0.1 ) }
    dend_30 { pt3dadd( 28.3167, -410.907, 14.0262, 0.1 ) }
    dend_30 { pt3dadd( 28.1968, -411.449, 14.2611, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_30 { pt3dadd( 28.1037, -411.797, 14.4041, 0.1 ) }
    dend_30 { pt3dadd( 27.9509, -412.343, 14.6149, 0.1 ) }
    dend_30 { pt3dadd( 27.8018, -412.897, 14.8312, 0.1 ) }
    dend_30 { pt3dadd( 27.6796, -413.449, 15.0474, 0.1 ) }
    dend_30 { pt3dadd( 27.5868, -414.013, 15.2719, 0.1 ) }
    dend_30 { pt3dadd( 27.4867, -414.942, 15.6521, 0.1 ) }
    dend_30 { pt3dadd( 27.4721, -415.292, 15.7953, 0.1 ) }
    dend_30 { pt3dadd( 27.5341, -415.849, 16.0447, 0.1 ) }
    dend_30 { pt3dadd( 27.6709, -416.383, 16.3103, 0.1 ) }
    dend_30 { pt3dadd( 28.0231, -417.351, 16.8144, 0.14 ) }
    dend_30 { pt3dadd( 28.1656, -417.667, 16.9888, 0.28 ) }
    dend_30 { pt3dadd( 28.4139, -418.151, 17.2545, 0.14 ) }
    dend_30 { pt3dadd( 28.8434, -419.004, 17.6889, 0.1 ) }
    dend_30 { pt3dadd( 29.1083, -419.646, 18.0143, 0.1 ) }
    dend_30 { pt3dadd( 29.2695, -420.184, 18.2636, 0.1 ) }
    dend_30 { pt3dadd( 29.3204, -420.434, 18.3616, 0.14 ) }
    dend_30 { pt3dadd( 29.3958, -420.939, 18.5287, 0.28 ) }
    dend_30 { pt3dadd( 29.4274, -421.196, 18.6065, 0.42 ) }
    dend_30 { pt3dadd( 29.5866, -422.759, 19.0327, 0.83 ) }
    dend_30 { pt3dadd( 29.8324, -424.802, 19.5204, 0.28 ) }
    dend_30 { pt3dadd( 30.006, -426.124, 19.7966, 0.55 ) }
    dend_30 { pt3dadd( 30.4883, -429.517, 20.4831, 0.55 ) }
    dend_30 { pt3dadd( 30.7165, -430.922, 20.7506, 0.28 ) }
    dend_30 { pt3dadd( 30.9533, -432.256, 20.9677, 0.55 ) }
    dend_30 { pt3dadd( 31.2738, -434.165, 21.2076, 0.28 ) }
    dend_30 { pt3dadd( 31.4745, -435.486, 21.3218, 0.55 ) }
    dend_30 { pt3dadd( 31.6267, -436.66, 21.3828, 0.28 ) }
    dend_30 { pt3dadd( 31.8216, -438.398, 21.4031, 0.55 ) }
    dend_30 { pt3dadd( 32.0399, -440.537, 21.4172, 0.55 ) }
    dend_30 { pt3dadd( 32.208, -442.457, 21.4644, 0.28 ) }
    dend_30 { pt3dadd( 32.3549, -444.624, 21.5094, 0.55 ) }
    dend_30 { pt3dadd( 32.4692, -446.595, 21.5593, 0.28 ) }
    dend_30 { pt3dadd( 32.5701, -448.762, 21.6327, 0.55 ) }
    dend_30 { pt3dadd( 32.61, -449.873, 21.7123, 0.28 ) }
    dend_30 { pt3dadd( 32.7147, -452.241, 22.0555, 0.55 ) }
    dend_30 { pt3dadd( 32.82, -453.686, 22.398, 0.28 ) }
    dend_30 { pt3dadd( 32.862, -454.957, 22.7986, 0.55 ) }
    dend_30 { pt3dadd( 32.864, -456.018, 23.2355, 0.28 ) }
    dend_30 { pt3dadd( 32.8424, -456.91, 23.636, 0.55 ) }
    dend_30 { pt3dadd( 32.7858, -458.162, 24.2228, 0.28 ) }
    dend_30 { pt3dadd( 32.6305, -460.989, 25.6654, 0.55 ) }
    dend_30 { pt3dadd( 32.4246, -464.436, 27.5599, 0.55 ) }
    dend_30 { pt3dadd( 32.2985, -466.366, 28.5772, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 14.1196, -275.716, -13.3128, 0.7 ) }
    dend_36 { pt3dadd( 14.0559, -276.185, -13.0741, 0.7 ) }
    dend_36 { pt3dadd( 14.02, -276.49, -12.9316, 0.84 ) }
    dend_36 { pt3dadd( 13.9663, -277.111, -12.6872, 0.7 ) }
    dend_36 { pt3dadd( 13.9109, -277.425, -12.5983, 0.56 ) }
    dend_36 { pt3dadd( 13.8104, -277.881, -12.5033, 0.7 ) }
    dend_36 { pt3dadd( 13.7572, -278.112, -12.4706, 0.56 ) }
    dend_36 { pt3dadd( 13.6844, -278.442, -12.4697, 0.56 ) }
    dend_36 { pt3dadd( 13.5498, -278.895, -12.5335, 0.56 ) }
    dend_36 { pt3dadd( 13.2586, -279.707, -12.7364, 0.7 ) }
    dend_36 { pt3dadd( 13.1879, -279.919, -12.7898, 0.84 ) }
    dend_36 { pt3dadd( 13.0536, -280.37, -12.8827, 0.7 ) }
    dend_36 { pt3dadd( 12.9522, -280.831, -12.9548, 0.56 ) }
    dend_36 { pt3dadd( 12.832, -281.795, -13.037, 0.42 ) }
    dend_36 { pt3dadd( 12.832, -281.795, -13.037, 0.56 ) }
    dend_36 { pt3dadd( 12.9134, -282.702, -12.9771, 0.56 ) }
    dend_36 { pt3dadd( 13.0125, -283.215, -12.9029, 0.7 ) }
    dend_36 { pt3dadd( 13.1363, -283.663, -12.8025, 0.56 ) }
    dend_36 { pt3dadd( 13.3033, -284.156, -12.6737, 0.7 ) }
    dend_36 { pt3dadd( 13.4615, -284.58, -12.5528, 0.84 ) }
    dend_36 { pt3dadd( 13.6018, -285.022, -12.4367, 0.84 ) }
    dend_36 { pt3dadd( 13.821, -285.889, -12.2479, 0.84 ) }
    dend_36 { pt3dadd( 13.9473, -286.392, -12.1455, 0.7 ) }
    dend_36 { pt3dadd( 14.0552, -286.85, -12.0606, 0.56 ) }
    dend_36 { pt3dadd( 14.1665, -287.369, -11.9853, 0.56 ) }
    dend_36 { pt3dadd( 14.2588, -287.884, -11.9324, 0.56 ) }
    dend_36 { pt3dadd( 14.3241, -288.354, -11.912, 0.56 ) }
    dend_36 { pt3dadd( 14.4003, -288.826, -11.9141, 0.7 ) }
    dend_36 { pt3dadd( 14.5362, -289.282, -11.9001, 0.84 ) }
    dend_36 { pt3dadd( 14.7191, -289.722, -11.87, 0.7 ) }
    dend_36 { pt3dadd( 14.9328, -290.139, -11.8251, 0.56 ) }
    dend_36 { pt3dadd( 15.1694, -290.551, -11.7657, 0.56 ) }
    dend_36 { pt3dadd( 15.6616, -291.38, -11.6001, 0.42 ) }
    dend_36 { pt3dadd( 16.1165, -292.157, -11.4205, 0.56 ) }
    dend_36 { pt3dadd( 16.3381, -292.567, -11.3156, 0.7 ) }
    dend_36 { pt3dadd( 16.4724, -292.86, -11.2365, 0.56 ) }
    dend_36 { pt3dadd( 16.6224, -293.297, -11.1188, 0.42 ) }
    dend_36 { pt3dadd( 16.7287, -293.804, -10.9872, 0.56 ) }
    dend_36 { pt3dadd( 16.7235, -294.262, -10.8957, 0.7 ) }
    dend_36 { pt3dadd( 16.6523, -294.785, -10.8093, 0.56 ) }
    dend_36 { pt3dadd( 16.5558, -295.296, -10.7185, 0.56 ) }
    dend_36 { pt3dadd( 16.4425, -295.811, -10.6302, 0.56 ) }
    dend_36 { pt3dadd( 16.3612, -296.134, -10.5743, 0.7 ) }
    dend_36 { pt3dadd( 16.1545, -297.097, -10.398, 0.56 ) }
    dend_36 { pt3dadd( 16.0724, -297.616, -10.3006, 0.7 ) }
    dend_36 { pt3dadd( 16.0829, -298.135, -10.2101, 0.56 ) }
    dend_36 { pt3dadd( 16.1403, -298.365, -10.1757, 0.7 ) }
    dend_36 { pt3dadd( 16.2426, -298.581, -10.156, 0.7 ) }
    dend_36 { pt3dadd( 16.7191, -299.328, -10.1469, 0.56 ) }
    dend_36 { pt3dadd( 17.0088, -299.713, -10.1648, 0.56 ) }
    dend_36 { pt3dadd( 17.5669, -300.542, -10.2902, 0.42 ) }
    dend_36 { pt3dadd( 17.7935, -300.953, -10.3849, 0.56 ) }
    dend_36 { pt3dadd( 17.9938, -301.433, -10.5182, 0.56 ) }
    dend_36 { pt3dadd( 18.1233, -301.928, -10.6589, 0.56 ) }
    dend_36 { pt3dadd( 18.1623, -302.389, -10.7867, 0.42 ) }
    dend_36 { pt3dadd( 18.1276, -303.341, -10.9898, 0.56 ) }
    dend_36 { pt3dadd( 18.0805, -303.812, -11.0384, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_36 { pt3dadd( 18.066, -304.042, -11.0246, 0.56 ) }
    dend_36 { pt3dadd( 18.0627, -304.565, -10.913, 0.56 ) }
    dend_36 { pt3dadd( 18.0846, -304.88, -10.8158, 0.7 ) }
    dend_36 { pt3dadd( 18.1637, -305.379, -10.6362, 0.56 ) }
    dend_36 { pt3dadd( 18.3737, -306.21, -10.3148, 0.56 ) }
    dend_36 { pt3dadd( 18.5018, -306.694, -10.1518, 0.42 ) }
    dend_36 { pt3dadd( 18.6218, -307.142, -10.0424, 0.28 ) }
    dend_36 { pt3dadd( 18.7446, -307.601, -9.98553, 0.28 ) }
    dend_36 { pt3dadd( 18.8, -307.831, -9.97875, 0.42 ) }
    dend_36 { pt3dadd( 18.8459, -308.065, -9.99229, 0.56 ) }
    dend_36 { pt3dadd( 18.9099, -308.533, -10.0526, 0.56 ) }
    dend_36 { pt3dadd( 18.9772, -308.993, -10.1216, 0.56 ) }
    dend_36 { pt3dadd( 19.0453, -309.459, -10.1918, 0.56 ) }
    dend_36 { pt3dadd( 19.1138, -309.928, -10.2624, 0.7 ) }
    dend_36 { pt3dadd( 19.182, -310.394, -10.3325, 0.56 ) }
    dend_36 { pt3dadd( 19.2505, -310.862, -10.4029, 0.56 ) }
    dend_36 { pt3dadd( 19.2914, -311.32, -10.4921, 0.7 ) }
    dend_36 { pt3dadd( 19.3065, -311.788, -10.5925, 0.7 ) }
    dend_36 { pt3dadd( 19.2601, -312.249, -10.7043, 0.7 ) }
    dend_36 { pt3dadd( 19.1642, -312.702, -10.8229, 0.56 ) }
    dend_36 { pt3dadd( 19.0347, -313.148, -10.9452, 0.56 ) }
    dend_36 { pt3dadd( 18.7525, -313.987, -11.1779, 0.56 ) }
    dend_36 { pt3dadd( 18.6605, -314.304, -11.2565, 0.84 ) }
    dend_36 { pt3dadd( 18.4496, -315.262, -11.4605, 0.84 ) }
    dend_36 { pt3dadd( 18.3802, -315.726, -11.5435, 0.7 ) }
    dend_36 { pt3dadd( 18.361, -316.2, -11.607, 0.7 ) }
    dend_36 { pt3dadd( 18.407, -316.672, -11.6474, 0.7 ) }
    dend_36 { pt3dadd( 18.6305, -317.62, -11.6882, 0.84 ) }
    dend_36 { pt3dadd( 18.768, -318.067, -11.7142, 0.7 ) }
    dend_36 { pt3dadd( 18.768, -318.067, -11.7142, 0.84 ) }
    dend_36 { pt3dadd( 18.9331, -318.513, -11.74, 0.56 ) }
    dend_36 { pt3dadd( 19.0828, -318.966, -11.7858, 0.56 ) }
    dend_36 { pt3dadd( 19.2019, -319.422, -11.8568, 0.42 ) }
    dend_36 { pt3dadd( 19.2863, -319.881, -11.9664, 0.56 ) }
    dend_36 { pt3dadd( 19.2863, -319.881, -11.9664, 0.56 ) }
    dend_36 { pt3dadd( 19.3515, -320.102, -12.0235, 0.56 ) }
    dend_36 { pt3dadd( 19.5408, -320.59, -12.1424, 0.56 ) }
    dend_36 { pt3dadd( 19.7349, -321.017, -12.2369, 0.56 ) }
    dend_36 { pt3dadd( 19.9616, -321.497, -12.3178, 0.56 ) }
    dend_36 { pt3dadd( 20.0623, -321.711, -12.3446, 0.7 ) }
    dend_36 { pt3dadd( 20.4321, -322.508, -12.4347, 0.7 ) }
    dend_36 { pt3dadd( 20.6298, -322.939, -12.4857, 0.56 ) }
    dend_36 { pt3dadd( 20.8258, -323.373, -12.5444, 0.42 ) }
    dend_36 { pt3dadd( 21.0374, -323.858, -12.6441, 0.28 ) }
    dend_36 { pt3dadd( 21.1229, -324.075, -12.7016, 0.14 ) }
    dend_36 { pt3dadd( 21.2249, -324.384, -12.7999, 0.7 ) }
    dend_36 { pt3dadd( 21.3371, -324.875, -12.9682, 0.7 ) }
    dend_36 { pt3dadd( 21.4035, -325.194, -13.0625, 0.56 ) }
    dend_36 { pt3dadd( 21.4929, -325.704, -13.1738, 0.42 ) }
    dend_36 { pt3dadd( 21.5233, -325.94, -13.1997, 0.56 ) }
    dend_36 { pt3dadd( 21.5463, -326.277, -13.1891, 0.84 ) }
    dend_36 { pt3dadd( 21.6001, -326.792, -13.0876, 0.7 ) }
    dend_36 { pt3dadd( 21.6692, -327.3, -12.9372, 0.7 ) }
    dend_36 { pt3dadd( 21.7213, -327.62, -12.8274, 0.7 ) }
    dend_36 { pt3dadd( 21.8191, -328.111, -12.6624, 0.56 ) }
    dend_36 { pt3dadd( 21.9398, -328.614, -12.5205, 0.7 ) }
    dend_36 { pt3dadd( 22.2133, -329.556, -12.3326, 0.84 ) }
    dend_36 { pt3dadd( 22.3638, -330.005, -12.2794, 0.7 ) }
    dend_36 { pt3dadd( 22.4464, -330.23, -12.2722, 0.56 ) }
    dend_36 { pt3dadd( 22.6356, -330.723, -12.3143, 0.42 ) }
    dend_36 { pt3dadd( 22.8038, -331.161, -12.4151, 0.28 ) }
    dend_36 { pt3dadd( 22.8846, -331.465, -12.5441, 0.28 ) }
    dend_36 { pt3dadd( 22.9102, -331.668, -12.6676, 1.12 ) }
    dend_36 { pt3dadd( 22.9424, -331.871, -12.7945, 0.7 ) }
    dend_36 { pt3dadd( 23.0273, -332.323, -13.0639, 0.56 ) }
    dend_36 { pt3dadd( 23.1194, -332.797, -13.302, 0.42 ) }
    dend_36 { pt3dadd( 23.292, -333.63, -13.6416, 0.28 ) }
    dend_36 { pt3dadd( 23.3592, -333.948, -13.7377, 0.42 ) }
    dend_36 { pt3dadd( 23.5425, -334.828, -13.9135, 0.56 ) }
    dend_36 { pt3dadd( 23.637, -335.292, -13.9645, 0.56 ) }
    dend_36 { pt3dadd( 23.6996, -335.813, -13.9959, 0.42 ) }
    dend_36 { pt3dadd( 23.7623, -336.284, -13.9847, 0.42 ) }
    dend_36 { pt3dadd( 23.8311, -336.755, -13.9418, 0.28 ) }
    dend_36 { pt3dadd( 23.8749, -337.286, -13.8825, 0.28 ) }
    dend_36 { pt3dadd( 23.8854, -337.761, -13.841, 0.28 ) }
    dend_36 { pt3dadd( 23.9138, -338.635, -13.7527, 0.42 ) }
    dend_36 { pt3dadd( 23.9604, -339.542, -13.6666, 0.42 ) }
    dend_36 { pt3dadd( 23.9924, -340.072, -13.6077, 0.28 ) }
    dend_36 { pt3dadd( 24.0326, -340.595, -13.5514, 0.42 ) }
    dend_36 { pt3dadd( 24.0761, -341.068, -13.5024, 0.28 ) }
    dend_36 { pt3dadd( 24.1254, -341.539, -13.4555, 0.42 ) }
    dend_36 { pt3dadd( 24.1834, -342.009, -13.4161, 0.56 ) }
    dend_36 { pt3dadd( 24.2169, -342.533, -13.3943, 0.56 ) }
    dend_36 { pt3dadd( 24.2494, -343.007, -13.3795, 0.42 ) }
    dend_36 { pt3dadd( 24.2832, -343.54, -13.3565, 0.28 ) }
    dend_36 { pt3dadd( 24.3091, -344.005, -13.3279, 0.28 ) }
    dend_36 { pt3dadd( 24.3222, -344.243, -13.313, 0.14 ) }
    dend_36 { pt3dadd( 24.3429, -344.58, -13.297, 0.56 ) }
    dend_36 { pt3dadd( 24.3785, -345.054, -13.2893, 0.42 ) }
    dend_36 { pt3dadd( 24.423, -345.578, -13.293, 0.56 ) }
    dend_36 { pt3dadd( 24.4658, -346.052, -13.3027, 0.56 ) }
    dend_36 { pt3dadd( 24.506, -346.528, -13.3055, 0.42 ) }
    dend_36 { pt3dadd( 24.5461, -347.002, -13.3084, 0.28 ) }
    dend_36 { pt3dadd( 24.5585, -347.479, -13.3283, 0.14 ) }
    dend_36 { pt3dadd( 24.5448, -347.954, -13.356, 0.1 ) }
    dend_36 { pt3dadd( 24.5352, -348.479, -13.3862, 0.14 ) }
    dend_36 { pt3dadd( 24.5316, -349.014, -13.4078, 0.1 ) }
    dend_36 { pt3dadd( 24.5391, -349.481, -13.4218, 0.1 ) }
    dend_36 { pt3dadd( 24.5848, -350.361, -13.4479, 0.1 ) }
    dend_36 { pt3dadd( 24.5848, -350.361, -13.4479, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_36 { pt3dadd( 24.7173, -351.232, -13.5053, 0.1 ) }
    dend_36 { pt3dadd( 24.8126, -351.696, -13.5515, 0.14 ) }
    dend_36 { pt3dadd( 24.9237, -352.158, -13.6034, 0.1 ) }
    dend_36 { pt3dadd( 25.0417, -352.618, -13.6515, 0.14 ) }
    dend_36 { pt3dadd( 25.1663, -353.078, -13.6968, 0.28 ) }
    dend_36 { pt3dadd( 25.2614, -353.533, -13.7437, 0.42 ) }
    dend_36 { pt3dadd( 25.3197, -354.006, -13.7895, 0.28 ) }
    dend_36 { pt3dadd( 25.3677, -354.479, -13.8111, 0.28 ) }
    dend_36 { pt3dadd( 25.4029, -354.953, -13.8028, 0.42 ) }
    dend_36 { pt3dadd( 25.4155, -355.191, -13.7866, 0.56 ) }
    dend_36 { pt3dadd( 25.4264, -355.519, -13.7495, 0.42 ) }
    dend_36 { pt3dadd( 25.4315, -356.047, -13.6602, 0.28 ) }
    dend_36 { pt3dadd( 25.4283, -356.57, -13.5526, 0.14 ) }
    dend_36 { pt3dadd( 25.4215, -357.085, -13.4381, 0.1 ) }
    dend_36 { pt3dadd( 25.439, -357.316, -13.3796, 0.14 ) }
    dend_36 { pt3dadd( 25.439, -357.316, -13.3796, 0.28 ) }
    dend_36 { pt3dadd( 25.5315, -357.635, -13.3154, 0.56 ) }
    dend_36 { pt3dadd( 25.695, -358.066, -13.2353, 0.56 ) }
    dend_36 { pt3dadd( 25.7987, -358.279, -13.1987, 0.7 ) }
    dend_36 { pt3dadd( 26.246, -359.034, -13.0729, 0.56 ) }
    dend_36 { pt3dadd( 26.5056, -359.43, -13.0026, 0.42 ) }
    dend_36 { pt3dadd( 26.645, -359.623, -12.9696, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 22/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 14.1196, -275.716, -13.3128, 2.38 ) }
    dend_35 { pt3dadd( 14.2681, -275.79, -13.4824, 2.38 ) }
    dend_35 { pt3dadd( 14.5735, -275.976, -13.873, 2.24 ) }
    dend_35 { pt3dadd( 14.8558, -276.209, -14.257, 2.1 ) }
    dend_35 { pt3dadd( 15.119, -276.486, -14.6091, 1.96 ) }
    dend_35 { pt3dadd( 15.5325, -277.03, -15.1457, 1.82 ) }
    dend_35 { pt3dadd( 15.5325, -277.03, -15.1457, 1.68 ) }
    dend_35 { pt3dadd( 15.6034, -277.201, -15.2861, 0.1 ) }
    dend_35 { pt3dadd( 15.7141, -277.573, -15.5479, 0.1 ) }
    dend_35 { pt3dadd( 15.8296, -278.002, -15.8108, 0.1 ) }
    dend_35 { pt3dadd( 15.9479, -278.398, -16.0282, 0.1 ) }
    dend_35 { pt3dadd( 16.2614, -279.225, -16.4446, 0.1 ) }
    dend_35 { pt3dadd( 16.446, -279.653, -16.6679, 0.1 ) }
    dend_35 { pt3dadd( 16.6334, -280.031, -16.8711, 0.1 ) }
    dend_35 { pt3dadd( 16.8671, -280.435, -17.0952, 0.1 ) }
    dend_35 { pt3dadd( 17.0337, -280.688, -17.2304, 0.14 ) }
    dend_35 { pt3dadd( 17.2167, -280.928, -17.3484, 0.28 ) }
    dend_35 { pt3dadd( 17.4094, -281.174, -17.4726, 0.7 ) }
    dend_35 { pt3dadd( 17.6901, -281.55, -17.6938, 0.56 ) }
    dend_35 { pt3dadd( 17.8394, -281.79, -17.868, 0.42 ) }
    dend_35 { pt3dadd( 18.0021, -282.153, -18.2029, 0.28 ) }
    dend_35 { pt3dadd( 18.1147, -282.506, -18.5755, 0.14 ) }
    dend_35 { pt3dadd( 18.282, -283.167, -19.2833, 0.1 ) }
    dend_35 { pt3dadd( 18.3123, -283.328, -19.452, 0.14 ) }
    dend_35 { pt3dadd( 18.4107, -283.986, -20.1386, 0.1 ) }
    dend_35 { pt3dadd( 18.4826, -284.611, -20.7786, 0.14 ) }
    dend_35 { pt3dadd( 18.4826, -284.611, -20.7786, 0.28 ) }
    dend_35 { pt3dadd( 18.5911, -285.277, -21.3185, 0.28 ) }
    dend_35 { pt3dadd( 18.6928, -285.67, -21.5456, 0.42 ) }
    dend_35 { pt3dadd( 18.785, -285.952, -21.6898, 0.56 ) }
    dend_35 { pt3dadd( 18.785, -285.952, -21.6898, 0.7 ) }
    dend_35 { pt3dadd( 18.8379, -286.141, -21.8133, 0.84 ) }
    dend_35 { pt3dadd( 18.9415, -286.547, -22.1269, 0.7 ) }
    dend_35 { pt3dadd( 19.1149, -287.249, -22.7503, 0.56 ) }
    dend_35 { pt3dadd( 19.2019, -287.614, -23.1178, 0.42 ) }
    dend_35 { pt3dadd( 19.3843, -288.27, -23.827, 0.28 ) }
    dend_35 { pt3dadd( 19.4377, -288.424, -23.9969, 0.42 ) }
    dend_35 { pt3dadd( 19.5158, -288.623, -24.2422, 0.7 ) }
    dend_35 { pt3dadd( 19.6117, -288.821, -24.4987, 0.56 ) }
    dend_35 { pt3dadd( 19.9661, -289.38, -25.2305, 0.42 ) }
    dend_35 { pt3dadd( 20.1816, -289.671, -25.6137, 0.28 ) }
    dend_35 { pt3dadd( 20.4285, -289.958, -25.973, 0.14 ) }
    dend_35 { pt3dadd( 20.8801, -290.458, -26.5724, 0.28 ) }
    dend_35 { pt3dadd( 21.2379, -290.828, -26.9921, 0.42 ) }
    dend_35 { pt3dadd( 21.4329, -291.018, -27.185, 0.28 ) }
    dend_35 { pt3dadd( 21.8571, -291.4, -27.516, 0.14 ) }
    dend_35 { pt3dadd( 22.0827, -291.595, -27.6739, 0.28 ) }
    dend_35 { pt3dadd( 22.4661, -291.895, -27.8618, 0.42 ) }
    dend_35 { pt3dadd( 22.8696, -292.196, -27.986, 0.28 ) }
    dend_35 { pt3dadd( 23.2843, -292.506, -28.0867, 0.14 ) }
    dend_35 { pt3dadd( 23.5457, -292.7, -28.1403, 0.28 ) }
    dend_35 { pt3dadd( 23.9655, -293.01, -28.2146, 0.14 ) }
    dend_35 { pt3dadd( 24.7605, -293.577, -28.355, 0.14 ) }
    dend_35 { pt3dadd( 25.1931, -293.867, -28.4376, 0.1 ) }
    dend_35 { pt3dadd( 25.4617, -294.044, -28.4948, 0.1 ) }
    dend_35 { pt3dadd( 26.0137, -294.4, -28.6347, 0.1 ) }
    dend_35 { pt3dadd( 26.278, -294.574, -28.716, 0.14 ) }
    dend_35 { pt3dadd( 26.6952, -294.856, -28.8778, 0.1 ) }
    dend_35 { pt3dadd( 27.0936, -295.127, -29.0738, 0.14 ) }
    dend_35 { pt3dadd( 27.3482, -295.303, -29.1989, 0.28 ) }
    dend_35 { pt3dadd( 27.7369, -295.594, -29.3896, 0.14 ) }
    dend_35 { pt3dadd( 27.9793, -295.79, -29.5081, 0.1 ) }
    dend_35 { pt3dadd( 28.4657, -296.201, -29.6914, 0.14 ) }
    dend_35 { pt3dadd( 28.707, -296.42, -29.7595, 0.14 ) }
    dend_35 { pt3dadd( 29.0829, -296.77, -29.8396, 0.28 ) }
    dend_35 { pt3dadd( 29.4625, -297.128, -29.9036, 0.14 ) }
    dend_35 { pt3dadd( 29.6988, -297.355, -29.9363, 0.1 ) }
    dend_35 { pt3dadd( 30.408, -298.033, -30.0306, 0.14 ) }
    dend_35 { pt3dadd( 30.7902, -298.385, -30.0487, 0.28 ) }
    dend_35 { pt3dadd( 31.0342, -298.61, -30.0487, 0.14 ) }
    dend_35 { pt3dadd( 31.425, -298.951, -30.009, 0.1 ) }
    dend_35 { pt3dadd( 31.8171, -299.288, -29.9487, 0.1 ) }
    dend_35 { pt3dadd( 32.2146, -299.621, -29.8534, 0.1 ) }
    dend_35 { pt3dadd( 32.9523, -300.242, -29.6539, 0.14 ) }
    dend_35 { pt3dadd( 33.3054, -300.532, -29.5405, 0.28 ) }
    dend_35 { pt3dadd( 33.9735, -301.086, -29.3145, 0.28 ) }
    dend_35 { pt3dadd( 34.3631, -301.415, -29.1862, 0.14 ) }
    dend_35 { pt3dadd( 35.0874, -302.046, -28.9739, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_35 { pt3dadd( 35.4623, -302.397, -28.8956, 0.1 ) }
    dend_35 { pt3dadd( 35.6974, -302.632, -28.8867, 0.14 ) }
    dend_35 { pt3dadd( 36.061, -303.001, -28.9181, 0.28 ) }
    dend_35 { pt3dadd( 36.414, -303.388, -29.0048, 0.14 ) }
    dend_35 { pt3dadd( 36.6205, -303.628, -29.0738, 0.1 ) }
    dend_35 { pt3dadd( 36.9319, -304.023, -29.2233, 0.1 ) }
    dend_35 { pt3dadd( 37.2404, -304.425, -29.3309, 0.1 ) }
    dend_35 { pt3dadd( 37.4295, -304.694, -29.3646, 0.1 ) }
    dend_35 { pt3dadd( 37.4295, -304.694, -29.3646, 0.14 ) }
    dend_35 { pt3dadd( 37.635, -305.105, -29.302, 0.84 ) }
    dend_35 { pt3dadd( 37.635, -305.105, -29.302, 0.7 ) }
    dend_35 { pt3dadd( 37.9087, -305.921, -29.0814, 0.1 ) }
    dend_35 { pt3dadd( 38.0272, -306.345, -28.9696, 0.1 ) }
    dend_35 { pt3dadd( 38.135, -306.786, -28.8738, 0.1 ) }
    dend_35 { pt3dadd( 38.249, -307.229, -28.8118, 0.1 ) }
    dend_35 { pt3dadd( 38.3128, -307.452, -28.7995, 0.1 ) }
    dend_35 { pt3dadd( 38.3848, -307.673, -28.8098, 0.56 ) }
    dend_35 { pt3dadd( 38.5467, -308.1, -28.8831, 0.42 ) }
    dend_35 { pt3dadd( 38.7309, -308.517, -28.9679, 0.28 ) }
    dend_35 { pt3dadd( 38.954, -308.977, -29.0715, 0.28 ) }
    dend_35 { pt3dadd( 39.0956, -309.259, -29.1374, 0.56 ) }
    dend_35 { pt3dadd( 39.3202, -309.718, -29.2418, 0.42 ) }
    dend_35 { pt3dadd( 39.4589, -310.002, -29.3062, 0.28 ) }
    dend_35 { pt3dadd( 39.5574, -310.208, -29.3519, 0.56 ) }
    dend_35 { pt3dadd( 39.7432, -310.626, -29.4374, 0.42 ) }
    dend_35 { pt3dadd( 39.9148, -311.05, -29.5157, 0.28 ) }
    dend_35 { pt3dadd( 40.0821, -311.475, -29.5918, 0.42 ) }
    dend_35 { pt3dadd( 40.266, -311.954, -29.6752, 0.56 ) }
    dend_35 { pt3dadd( 40.3507, -312.165, -29.7138, 0.7 ) }
    dend_35 { pt3dadd( 40.4453, -312.374, -29.7574, 0.84 ) }
    dend_35 { pt3dadd( 40.6792, -312.827, -29.8666, 0.7 ) }
    dend_35 { pt3dadd( 40.9381, -313.257, -29.9888, 0.56 ) }
    dend_35 { pt3dadd( 41.1774, -313.64, -30.1022, 0.42 ) }
    dend_35 { pt3dadd( 41.4417, -314.073, -30.2271, 0.28 ) }
    dend_35 { pt3dadd( 41.6005, -314.344, -30.3019, 0.14 ) }
    dend_35 { pt3dadd( 41.8426, -314.793, -30.4153, 0.1 ) }
    dend_35 { pt3dadd( 42.0925, -315.37, -30.5866, 0.1 ) }
    dend_35 { pt3dadd( 42.1942, -315.667, -30.685, 0.84 ) }
    dend_35 { pt3dadd( 42.3067, -316.091, -30.8362, 0.7 ) }
    dend_35 { pt3dadd( 42.3721, -316.511, -31.0263, 0.56 ) }
    dend_35 { pt3dadd( 42.4033, -316.923, -31.2373, 0.42 ) }
    dend_35 { pt3dadd( 42.4374, -317.745, -31.7016, 0.28 ) }
    dend_35 { pt3dadd( 42.4441, -317.946, -31.8194, 0.42 ) }
    dend_35 { pt3dadd( 42.4699, -318.15, -31.9297, 0.56 ) }
    dend_35 { pt3dadd( 42.6455, -319.019, -32.3351, 0.42 ) }
    dend_35 { pt3dadd( 42.7632, -319.443, -32.4876, 0.28 ) }
    dend_35 { pt3dadd( 42.9273, -319.918, -32.5976, 0.14 ) }
    dend_35 { pt3dadd( 43.1065, -320.343, -32.6454, 0.1 ) }
    dend_35 { pt3dadd( 43.5046, -321.233, -32.7023, 0.1 ) }
    dend_35 { pt3dadd( 43.6987, -321.653, -32.7043, 0.1 ) }
    dend_35 { pt3dadd( 43.8947, -322.075, -32.6755, 0.1 ) }
    dend_35 { pt3dadd( 44.0776, -322.5, -32.6554, 0.1 ) }
    dend_35 { pt3dadd( 44.1978, -322.806, -32.6542, 0.1 ) }
    dend_35 { pt3dadd( 44.2758, -323.024, -32.6676, 0.56 ) }
    dend_35 { pt3dadd( 44.3988, -323.466, -32.7209, 0.42 ) }
    dend_35 { pt3dadd( 44.5138, -323.911, -32.7702, 0.28 ) }
    dend_35 { pt3dadd( 44.6188, -324.353, -32.8145, 0.14 ) }
    dend_35 { pt3dadd( 44.7354, -324.85, -32.8635, 0.1 ) }
    dend_35 { pt3dadd( 44.8448, -325.299, -32.9098, 0.1 ) }
    dend_35 { pt3dadd( 44.977, -325.799, -32.9666, 0.14 ) }
    dend_35 { pt3dadd( 45.0945, -326.24, -33.0553, 0.1 ) }
    dend_35 { pt3dadd( 45.1515, -326.455, -33.1151, 0.1 ) }
    dend_35 { pt3dadd( 45.2741, -326.933, -33.2792, 0.1 ) }
    dend_35 { pt3dadd( 45.3874, -327.402, -33.461, 0.1 ) }
    dend_35 { pt3dadd( 45.4992, -327.815, -33.6405, 0.1 ) }
    dend_35 { pt3dadd( 45.7296, -328.598, -33.9967, 0.1 ) }
    dend_35 { pt3dadd( 45.8018, -328.807, -34.0729, 0.56 ) }
    dend_35 { pt3dadd( 45.9695, -329.223, -34.1867, 0.42 ) }
    dend_35 { pt3dadd( 46.1493, -329.638, -34.2583, 0.28 ) }
    dend_35 { pt3dadd( 46.376, -330.106, -34.3015, 0.42 ) }
    dend_35 { pt3dadd( 46.5974, -330.504, -34.3154, 0.28 ) }
    dend_35 { pt3dadd( 47.1102, -331.339, -34.3035, 0.14 ) }
    dend_35 { pt3dadd( 47.4009, -331.773, -34.3097, 0.1 ) }
    dend_35 { pt3dadd( 47.6761, -332.141, -34.3347, 0.1 ) }
    dend_35 { pt3dadd( 47.9938, -332.549, -34.4197, 0.1 ) }
    dend_35 { pt3dadd( 48.1864, -332.804, -34.5092, 0.42 ) }
    dend_35 { pt3dadd( 48.4637, -333.197, -34.7026, 0.28 ) }
    dend_35 { pt3dadd( 48.6331, -333.448, -34.8361, 0.14 ) }
    dend_35 { pt3dadd( 48.995, -333.96, -35.0278, 0.1 ) }
    dend_35 { pt3dadd( 49.5488, -334.657, -35.1059, 0.1 ) }
    dend_35 { pt3dadd( 49.8406, -335.011, -35.0631, 0.14 ) }
    dend_35 { pt3dadd( 50.1368, -335.357, -34.9646, 0.28 ) }
    dend_35 { pt3dadd( 50.7735, -336.027, -34.6224, 0.28 ) }
    dend_35 { pt3dadd( 51.3939, -336.639, -34.2277, 0.14 ) }
    dend_35 { pt3dadd( 52.036, -337.242, -33.7884, 0.1 ) }
    dend_35 { pt3dadd( 52.1939, -337.38, -33.6822, 0.14 ) }
    dend_35 { pt3dadd( 52.4252, -337.568, -33.5327, 0.28 ) }
    dend_35 { pt3dadd( 53.056, -338.062, -33.1238, 0.7 ) }
    dend_35 { pt3dadd( 53.4182, -338.356, -32.8786, 0.56 ) }
    dend_35 { pt3dadd( 53.767, -338.657, -32.6352, 0.42 ) }
    dend_35 { pt3dadd( 53.9836, -338.854, -32.4773, 0.56 ) }
    dend_35 { pt3dadd( 54.5424, -339.372, -32.0618, 0.1 ) }
    dend_35 { pt3dadd( 55.1418, -339.938, -31.5723, 0.1 ) }
    dend_35 { pt3dadd( 55.7182, -340.522, -31.0788, 0.1 ) }
    dend_35 { pt3dadd( 55.9925, -340.807, -30.8385, 0.1 ) }
    dend_35 { pt3dadd( 56.1836, -341.019, -30.6757, 0.14 ) }
    dend_35 { pt3dadd( 56.3741, -341.253, -30.5384, 0.28 ) }
    dend_35 { pt3dadd( 56.8606, -341.928, -30.3091, 0.28 ) }
    dend_35 { pt3dadd( 57.1123, -342.307, -30.2121, 0.14 ) }
    dend_35 { pt3dadd( 57.3779, -342.745, -30.1127, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_59()
}

proc basic_shape_59() {
    dend_35 { pt3dadd( 57.6068, -343.127, -29.9778, 0.1 ) }
    dend_35 { pt3dadd( 57.8415, -343.552, -29.8022, 0.14 ) }
    dend_35 { pt3dadd( 57.9405, -343.746, -29.7185, 0.28 ) }
    dend_35 { pt3dadd( 58.2828, -344.501, -29.3995, 0.1 ) }
    dend_35 { pt3dadd( 58.4414, -344.904, -29.2354, 0.1 ) }
    dend_35 { pt3dadd( 58.6964, -345.772, -28.9536, 0.1 ) }
    dend_35 { pt3dadd( 58.8127, -346.195, -28.808, 0.1 ) }
    dend_35 { pt3dadd( 58.8613, -346.411, -28.7377, 0.1 ) }
    dend_35 { pt3dadd( 58.9109, -346.723, -28.6832, 0.1 ) }
    dend_35 { pt3dadd( 58.8786, -347.638, -28.9148, 0.1 ) }
    dend_35 { pt3dadd( 58.677, -348.333, -29.3826, 0.1 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 11/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 26.645, -359.623, -12.9696, 0.28 ) }
    dend_44 { pt3dadd( 27.4822, -359.666, -13.455, 0.28 ) }
    dend_44 { pt3dadd( 27.9832, -359.691, -13.7456, 0.14 ) }
    dend_44 { pt3dadd( 28.437, -359.714, -14.0088, 0.1 ) }
    dend_44 { pt3dadd( 28.9459, -359.74, -14.3039, 0.1 ) }
    dend_44 { pt3dadd( 29.1728, -359.752, -14.4355, 0.1 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 17/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 26.645, -359.623, -12.9696, 0.42 ) }
    dend_37 { pt3dadd( 26.8725, -360.216, -12.8459, 0.42 ) }
    dend_37 { pt3dadd( 27.0759, -360.813, -12.6908, 0.28 ) }
    dend_37 { pt3dadd( 27.2507, -361.409, -12.5138, 0.14 ) }
    dend_37 { pt3dadd( 27.3937, -362.002, -12.3273, 0.1 ) }
    dend_37 { pt3dadd( 27.6173, -363.163, -11.9538, 0.14 ) }
    dend_37 { pt3dadd( 27.7222, -363.846, -11.7266, 0.14 ) }
    dend_37 { pt3dadd( 27.7877, -364.511, -11.4762, 0.28 ) }
    dend_37 { pt3dadd( 27.8037, -364.943, -11.3045, 0.28 ) }
    dend_37 { pt3dadd( 27.8247, -365.591, -11.0057, 0.14 ) }
    dend_37 { pt3dadd( 27.8327, -366.245, -10.684, 0.1 ) }
    dend_37 { pt3dadd( 27.8262, -366.65, -10.4898, 0.14 ) }
    dend_37 { pt3dadd( 27.8389, -367.302, -10.1705, 0.28 ) }
    dend_37 { pt3dadd( 27.873, -367.957, -9.85328, 0.28 ) }
    dend_37 { pt3dadd( 27.9692, -369.279, -9.22259, 0.14 ) }
    dend_37 { pt3dadd( 28.007, -369.686, -9.03775, 0.28 ) }
    dend_37 { pt3dadd( 28.0729, -370.356, -8.76056, 0.42 ) }
    dend_37 { pt3dadd( 28.1337, -370.967, -8.55038, 0.56 ) }
    dend_37 { pt3dadd( 28.1622, -371.276, -8.47049, 0.7 ) }
    dend_37 { pt3dadd( 28.1954, -371.718, -8.4044, 0.56 ) }
    dend_37 { pt3dadd( 28.2281, -372.365, -8.3826, 0.42 ) }
    dend_37 { pt3dadd( 28.2847, -373.089, -8.3878, 0.56 ) }
    dend_37 { pt3dadd( 28.3484, -373.733, -8.41226, 0.42 ) }
    dend_37 { pt3dadd( 28.4183, -374.362, -8.44762, 0.28 ) }
    dend_37 { pt3dadd( 28.4992, -375.001, -8.49836, 0.28 ) }
    dend_37 { pt3dadd( 28.5917, -375.639, -8.5662, 0.42 ) }
    dend_37 { pt3dadd( 28.6892, -376.273, -8.64205, 0.56 ) }
    dend_37 { pt3dadd( 28.7943, -376.907, -8.72899, 0.56 ) }
    dend_37 { pt3dadd( 28.8987, -377.538, -8.81527, 0.56 ) }
    dend_37 { pt3dadd( 29.0019, -378.162, -8.90072, 0.56 ) }
    dend_37 { pt3dadd( 29.1065, -378.793, -8.98726, 0.56 ) }
    dend_37 { pt3dadd( 29.211, -379.425, -9.07388, 0.56 ) }
    dend_37 { pt3dadd( 29.3162, -380.059, -9.16095, 0.7 ) }
    dend_37 { pt3dadd( 29.4209, -380.69, -9.24765, 0.56 ) }
    dend_37 { pt3dadd( 29.526, -381.325, -9.33482, 0.56 ) }
    dend_37 { pt3dadd( 29.6287, -381.945, -9.41976, 0.42 ) }
    dend_37 { pt3dadd( 29.7339, -382.58, -9.50693, 0.56 ) }
    dend_37 { pt3dadd( 29.8386, -383.211, -9.59364, 0.42 ) }
    dend_37 { pt3dadd( 29.9436, -383.845, -9.6806, 0.56 ) }
    dend_37 { pt3dadd( 30.0482, -384.477, -9.76718, 0.7 ) }
    dend_37 { pt3dadd( 30.1526, -385.108, -9.85345, 0.7 ) }
    dend_37 { pt3dadd( 30.2556, -385.732, -9.93859, 0.56 ) }
    dend_37 { pt3dadd( 30.3597, -386.363, -10.0245, 0.7 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 60/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 30.3597, -386.363, -10.0245, 1.12 ) }
    dend_43 { pt3dadd( 30.6779, -386.239, -10.6139, 1.12 ) }
    dend_43 { pt3dadd( 30.8201, -386.186, -11.2823, 0.98 ) }
    dend_43 { pt3dadd( 30.8201, -386.186, -11.2823, 0.84 ) }
    dend_43 { pt3dadd( 30.8066, -386.195, -11.9644, 0.28 ) }
    dend_43 { pt3dadd( 30.8066, -386.195, -11.9644, 0.28 ) }
    dend_43 { pt3dadd( 30.8441, -386.165, -12.3036, 0.28 ) }
    dend_43 { pt3dadd( 31.1619, -385.947, -13.6823, 0.14 ) }
    dend_43 { pt3dadd( 31.6664, -385.64, -14.9909, 0.1 ) }
    dend_43 { pt3dadd( 32.2541, -385.276, -16.0947, 0.42 ) }
    dend_43 { pt3dadd( 32.6547, -385.029, -16.6962, 0.28 ) }
    dend_43 { pt3dadd( 33.0449, -384.793, -17.1998, 0.14 ) }
    dend_43 { pt3dadd( 33.9512, -384.255, -18.1689, 0.1 ) }
    dend_43 { pt3dadd( 34.4297, -383.978, -18.5632, 0.1 ) }
    dend_43 { pt3dadd( 34.9851, -383.661, -18.9632, 0.1 ) }
    dend_43 { pt3dadd( 35.4505, -383.389, -19.3815, 0.1 ) }
    dend_43 { pt3dadd( 35.6882, -383.259, -19.5893, 0.1 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 77/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 30.3597, -386.363, -10.0245, 0.56 ) }
    dend_38 { pt3dadd( 30.6517, -387.433, -9.94717, 0.56 ) }
    dend_38 { pt3dadd( 30.7663, -388.0, -9.89843, 0.56 ) }
    dend_38 { pt3dadd( 30.8616, -388.569, -9.85457, 0.7 ) }
    dend_38 { pt3dadd( 30.9373, -389.13, -9.80724, 0.56 ) }
    dend_38 { pt3dadd( 31.0056, -389.705, -9.76222, 0.56 ) }
    dend_38 { pt3dadd( 31.0777, -390.351, -9.71943, 0.56 ) }
    dend_38 { pt3dadd( 31.1108, -390.988, -9.69769, 0.56 ) }
    dend_38 { pt3dadd( 31.1365, -391.565, -9.67157, 0.56 ) }
    dend_38 { pt3dadd( 31.1589, -392.213, -9.63219, 0.56 ) }
    dend_38 { pt3dadd( 31.1722, -392.779, -9.58818, 0.42 ) }
    dend_38 { pt3dadd( 31.1857, -393.357, -9.54299, 0.28 ) }
    dend_38 { pt3dadd( 31.1705, -394.008, -9.52449, 0.42 ) }
    dend_38 { pt3dadd( 31.1333, -394.588, -9.53371, 0.56 ) }
    dend_38 { pt3dadd( 31.0682, -395.225, -9.56439, 0.56 ) }
    dend_38 { pt3dadd( 31.0048, -395.87, -9.59891, 0.56 ) }
    dend_38 { pt3dadd( 30.9431, -396.445, -9.6271, 0.42 ) }
    dend_38 { pt3dadd( 30.8259, -397.509, -9.68665, 0.56 ) }
    dend_38 { pt3dadd( 30.7816, -398.073, -9.73463, 0.7 ) }
    dend_38 { pt3dadd( 30.7832, -398.362, -9.76978, 0.84 ) }
    dend_38 { pt3dadd( 30.977, -399.513, -9.97092, 0.84 ) }
    dend_38 { pt3dadd( 30.977, -399.513, -9.97092, 0.84 ) }
    dend_38 { pt3dadd( 31.0861, -399.775, -10.0282, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_60()
}

proc basic_shape_60() {
    dend_38 { pt3dadd( 31.3234, -400.294, -10.1533, 0.7 ) }
    dend_38 { pt3dadd( 31.5601, -400.867, -10.3361, 0.7 ) }
    dend_38 { pt3dadd( 31.7481, -401.386, -10.5185, 0.56 ) }
    dend_38 { pt3dadd( 31.9312, -401.975, -10.7335, 0.56 ) }
    dend_38 { pt3dadd( 32.0912, -402.502, -10.9201, 0.7 ) }
    dend_38 { pt3dadd( 32.2404, -403.092, -11.1576, 0.56 ) }
    dend_38 { pt3dadd( 32.3873, -403.679, -11.3841, 0.7 ) }
    dend_38 { pt3dadd( 32.5487, -404.212, -11.5471, 0.84 ) }
    dend_38 { pt3dadd( 32.7365, -404.753, -11.6578, 0.7 ) }
    dend_38 { pt3dadd( 32.9825, -405.279, -11.6692, 0.84 ) }
    dend_38 { pt3dadd( 33.5126, -406.209, -11.5556, 0.98 ) }
    dend_38 { pt3dadd( 34.09, -407.142, -11.3419, 0.84 ) }
    dend_38 { pt3dadd( 34.7107, -408.111, -11.0393, 0.7 ) }
    dend_38 { pt3dadd( 35.0453, -408.632, -10.8619, 0.7 ) }
    dend_38 { pt3dadd( 35.5935, -409.638, -10.544, 0.56 ) }
    dend_38 { pt3dadd( 35.818, -410.158, -10.4068, 0.7 ) }
    dend_38 { pt3dadd( 35.9804, -410.702, -10.2957, 0.84 ) }
    dend_38 { pt3dadd( 36.0164, -411.102, -10.2719, 0.56 ) }
    dend_38 { pt3dadd( 36.0262, -411.682, -10.2506, 0.56 ) }
    dend_38 { pt3dadd( 36.04, -412.9, -10.2088, 0.56 ) }
    dend_38 { pt3dadd( 36.0742, -413.466, -10.1686, 0.7 ) }
    dend_38 { pt3dadd( 36.1976, -414.101, -10.1085, 0.56 ) }
    dend_38 { pt3dadd( 36.3408, -414.658, -10.0466, 0.56 ) }
    dend_38 { pt3dadd( 36.6884, -415.815, -9.91728, 0.56 ) }
    dend_38 { pt3dadd( 36.868, -416.361, -9.84559, 0.56 ) }
    dend_38 { pt3dadd( 37.2572, -417.469, -9.67949, 0.7 ) }
    dend_38 { pt3dadd( 38.0416, -419.92, -9.31006, 0.56 ) }
    dend_38 { pt3dadd( 38.2181, -420.541, -9.22648, 0.7 ) }
    dend_38 { pt3dadd( 38.3437, -421.101, -9.1576, 0.7 ) }
    dend_38 { pt3dadd( 38.3992, -421.497, -9.11803, 0.56 ) }
    dend_38 { pt3dadd( 38.4543, -422.14, -9.04926, 0.42 ) }
    dend_38 { pt3dadd( 38.4609, -422.778, -8.98672, 0.28 ) }
    dend_38 { pt3dadd( 38.4867, -423.349, -8.8887, 0.42 ) }
    dend_38 { pt3dadd( 38.5613, -423.987, -8.77827, 0.56 ) }
    dend_38 { pt3dadd( 38.6725, -424.608, -8.67455, 0.7 ) }
    dend_38 { pt3dadd( 38.8062, -425.166, -8.59816, 0.56 ) }
    dend_38 { pt3dadd( 38.974, -425.717, -8.54468, 0.7 ) }
    dend_38 { pt3dadd( 39.3345, -426.727, -8.48426, 0.84 ) }
    dend_38 { pt3dadd( 39.5072, -427.283, -8.48402, 0.7 ) }
    dend_38 { pt3dadd( 39.6491, -427.842, -8.52941, 0.56 ) }
    dend_38 { pt3dadd( 39.7448, -428.397, -8.61331, 0.42 ) }
    dend_38 { pt3dadd( 39.7766, -428.804, -8.69448, 0.56 ) }
    dend_38 { pt3dadd( 39.7745, -429.077, -8.76067, 0.7 ) }
    dend_38 { pt3dadd( 39.6621, -430.256, -9.06829, 0.56 ) }
    dend_38 { pt3dadd( 39.594, -430.821, -9.18976, 0.56 ) }
    dend_38 { pt3dadd( 39.5245, -431.388, -9.28332, 0.56 ) }
    dend_38 { pt3dadd( 39.455, -431.963, -9.33868, 0.56 ) }
    dend_38 { pt3dadd( 39.4286, -432.239, -9.34762, 0.56 ) }
    dend_38 { pt3dadd( 39.3784, -432.647, -9.35566, 0.98 ) }
    dend_38 { pt3dadd( 39.3053, -433.292, -9.35862, 0.84 ) }
    dend_38 { pt3dadd( 39.1689, -433.843, -9.39505, 0.84 ) }
    dend_38 { pt3dadd( 39.0361, -434.23, -9.44604, 0.28 ) }
    dend_38 { pt3dadd( 38.828, -434.763, -9.54778, 0.28 ) }
    dend_38 { pt3dadd( 38.3681, -435.861, -9.81655, 0.28 ) }
    dend_38 { pt3dadd( 38.1397, -436.372, -9.97487, 0.28 ) }
    dend_38 { pt3dadd( 37.8279, -437.318, -10.2622, 0.42 ) }
    dend_38 { pt3dadd( 37.7465, -437.881, -10.386, 0.84 ) }
    dend_38 { pt3dadd( 37.7314, -438.454, -10.4642, 0.84 ) }
    dend_38 { pt3dadd( 37.7314, -438.454, -10.4642, 0.7 ) }
    dend_38 { pt3dadd( 37.7314, -438.454, -10.4642, 0.84 ) }
    dend_38 { pt3dadd( 37.8803, -440.99, -10.5524, 0.55 ) }
    dend_38 { pt3dadd( 38.0863, -443.567, -10.5927, 0.83 ) }
    dend_38 { pt3dadd( 38.3071, -446.477, -10.6207, 0.83 ) }
    dend_38 { pt3dadd( 38.3531, -447.113, -10.6235, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 64/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 38.3531, -447.113, -10.6235, 0.55 ) }
    dend_42 { pt3dadd( 37.6566, -449.502, -9.31381, 0.55 ) }
    dend_42 { pt3dadd( 36.9574, -451.509, -8.26295, 0.83 ) }
    dend_42 { pt3dadd( 36.1295, -453.635, -7.31437, 0.83 ) }
    dend_42 { pt3dadd( 34.9537, -456.654, -5.96726, 0.55 ) }
    dend_42 { pt3dadd( 34.2325, -458.506, -5.14085, 0.28 ) }
    dend_42 { pt3dadd( 33.3375, -460.804, -4.11552, 0.55 ) }
    dend_42 { pt3dadd( 32.5828, -462.707, -3.49036, 0.28 ) }
    dend_42 { pt3dadd( 31.6389, -464.669, -2.97641, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 38.3531, -447.113, -10.6235, 0.83 ) }
    dend_39 { pt3dadd( 38.4943, -449.571, -10.3858, 0.83 ) }
    dend_39 { pt3dadd( 38.6618, -451.327, -10.2502, 0.55 ) }
    dend_39 { pt3dadd( 38.8098, -452.827, -10.1361, 0.83 ) }
    dend_39 { pt3dadd( 38.9332, -453.751, -10.0729, 0.55 ) }
    dend_39 { pt3dadd( 39.234, -455.762, -9.95186, 0.83 ) }
    dend_39 { pt3dadd( 39.5256, -457.806, -9.82532, 0.83 ) }
    dend_39 { pt3dadd( 39.857, -459.888, -9.71086, 0.83 ) }
    dend_39 { pt3dadd( 40.3205, -462.701, -9.57035, 0.83 ) }
    dend_39 { pt3dadd( 40.6274, -464.503, -9.45805, 0.83 ) }
    dend_39 { pt3dadd( 40.9113, -466.294, -9.34232, 0.83 ) }
    dend_39 { pt3dadd( 41.653, -470.711, -9.0691, 0.83 ) }
    dend_39 { pt3dadd( 41.9185, -472.203, -9.00717, 0.55 ) }
    dend_39 { pt3dadd( 42.3506, -474.513, -8.98358, 0.83 ) }
    dend_39 { pt3dadd( 42.6284, -475.844, -9.01079, 0.83 ) }
    dend_39 { pt3dadd( 43.0536, -477.802, -9.11319, 0.55 ) }
    dend_39 { pt3dadd( 43.703, -480.531, -9.35182, 0.55 ) }
    dend_39 { pt3dadd( 44.3405, -482.918, -9.66415, 0.55 ) }
    dend_39 { pt3dadd( 44.6862, -484.376, -9.89739, 0.55 ) }
    dend_39 { pt3dadd( 44.9228, -485.501, -10.1027, 0.55 ) }
    dend_39 { pt3dadd( 45.3094, -487.693, -10.5026, 0.83 ) }
    dend_39 { pt3dadd( 45.633, -489.948, -10.8763, 0.55 ) }
    dend_39 { pt3dadd( 45.8342, -491.983, -11.1984, 0.55 ) }
    dend_39 { pt3dadd( 45.9991, -494.053, -11.5065, 0.55 ) }
    dend_39 { pt3dadd( 46.2279, -497.85, -12.0359, 0.55 ) }
    dend_39 { pt3dadd( 46.283, -499.047, -12.2061, 0.55 ) }
    dend_39 { pt3dadd( 46.337, -500.606, -12.4237, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_61()
}

proc basic_shape_61() {
    dend_39 { pt3dadd( 46.4612, -503.964, -12.9155, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 46.4612, -503.964, -12.9155, 0.28 ) }
    dend_41 { pt3dadd( 45.8222, -504.556, -13.6495, 0.28 ) }
    dend_41 { pt3dadd( 44.556, -505.425, -14.5214, 0.55 ) }
    dend_41 { pt3dadd( 43.9272, -505.792, -14.9333, 0.28 ) }
    dend_41 { pt3dadd( 43.0681, -506.275, -15.5463, 0.55 ) }
    dend_41 { pt3dadd( 39.6059, -508.185, -18.1148, 0.28 ) }
    dend_41 { pt3dadd( 38.617, -508.752, -18.8943, 0.55 ) }
    dend_41 { pt3dadd( 35.4807, -510.352, -21.1107, 0.28 ) }
    dend_41 { pt3dadd( 34.3281, -510.868, -21.8473, 0.55 ) }
    dend_41 { pt3dadd( 33.0988, -511.363, -22.6124, 0.55 ) }
    dend_41 { pt3dadd( 31.9251, -511.795, -23.3637, 0.28 ) }
    dend_41 { pt3dadd( 30.8066, -512.339, -24.3238, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 46.4612, -503.964, -12.9155, 0.55 ) }
    dend_40 { pt3dadd( 46.6024, -506.684, -13.2899, 0.55 ) }
    dend_40 { pt3dadd( 46.8427, -511.314, -13.927, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_48 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_5 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_7 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_75 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_58 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_57 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_55 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_24 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_76 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_72 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_60 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_59 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_25 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_71 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_27 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_29 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_36 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_35 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_38 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_39 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_51 OneSecGrp_SectionRef_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_61 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_52 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_14 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_53 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_62 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_63 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_64 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_65 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_66 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_18 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_70 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_67 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_23 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_50 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_68 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_21 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_73 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_74 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_77 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_26 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_32 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_33 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_34 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_44 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_37 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_43 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_31 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_42 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_40 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_41 OneSecGrp_SectionRef_80.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_63()
}

proc subsets_63() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 5
    dend_47 nseg = 9
    dend_15 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 11
    dend_49 nseg = 5
    dend_17 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 13
    dend_75 nseg = 3
    dend_58 nseg = 7
    dend_57 nseg = 5
    dend_55 nseg = 7
    dend_54 nseg = 7
    dend_24 nseg = 5
    dend_9 nseg = 5
    dend_8 nseg = 3
    dend_76 nseg = 3
    dend_72 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 5
    dend_25 nseg = 5
    dend_20 nseg = 3
    dend_71 nseg = 3
    dend_27 nseg = 3
    dend_22 nseg = 5
    dend_11 nseg = 5
    dend_29 nseg = 9
    dend_69 nseg = 3
    dend_30 nseg = 3
    dend_36 nseg = 5
    dend_35 nseg = 5
    dend_38 nseg = 3
    dend_39 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_BTC_dbb05c9cf3_0_0


