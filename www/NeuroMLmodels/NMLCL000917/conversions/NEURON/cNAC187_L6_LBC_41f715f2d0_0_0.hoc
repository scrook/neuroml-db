// Cell: cNAC187_L6_LBC_41f715f2d0_0_0
/*
{
  "id" : "cNAC187_L6_LBC_41f715f2d0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.56354, -2.32023, 0.0, 4.89867", "-7.66852, -2.09843, 0.0, 8.85912", "-6.77349, -1.87663, 0.0, 12.5371", "-5.87847, -1.65483, 0.0, 13.9982", "-4.98344, -1.43303, 0.0, 14.8266", "-4.08842, -1.21123, 0.0, 15.6937", "-3.1934, -0.989429, 0.0, 16.4025", "-2.29837, -0.767629, 0.0, 16.5748", "-1.40335, -0.545828, 0.0, 16.6806", "-0.508322, -0.324028, 0.0, 16.6604", "0.386703, -0.102228, 0.0, 16.5142", "1.28173, 0.119572, 0.0, 16.311", "2.17675, 0.341372, 0.0, 16.1002", "3.07178, 0.563173, 0.0, 15.6503", "3.9668, 0.784973, 0.0, 14.9085", "4.86183, 1.00677, 0.0, 14.1259", "5.75685, 1.22857, 0.0, 12.5788", "6.65188, 1.45037, 0.0, 10.8169", "7.5469, 1.67217, 0.0, 8.79928", "8.44192, 1.89397, 0.0, 6.39095", "9.33695, 2.11577, 0.0, 3.65543" ]
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-6.88458, 2.01569, -2.55, 2.95", "-8.06335, 2.79028, -2.55, 2.95", "-10.1821, 4.18256, -2.55, 2.04", "-12.9056, 5.97221, -2.55, 2.04", "-13.1874, 6.15737, -2.55, 2.04" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "7.40542, -0.346809, -5.45, 1.81", "8.76566, 0.393304, -6.12186, 1.81", "10.3593, 1.57504, -6.89084, 2.04", "11.6498, 2.6651, -7.46151, 2.04", "12.7593, 3.66921, -7.91724, 1.59", "13.4839, 4.33607, -8.19974, 1.59", "14.9138, 5.70521, -8.73043, 1.59", "16.2176, 7.13625, -9.20914, 2.04", "17.1067, 8.24228, -9.52437, 1.13", "17.8843, 9.26722, -9.75734, 1.81", "18.7291, 10.3265, -9.94177, 2.27", "19.5253, 11.2989, -10.0821, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.59542, 0.556191, 5.69, 1.81", "7.73247, 1.11494, 6.67506, 1.81", "9.23295, 1.50726, 7.3667, 1.81", "10.9694, 1.96127, 8.16712, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.93458, 2.05769, 5.69, 1.81", "-5.40125, 3.35452, 6.15687, 1.81", "-7.12948, 4.88262, 6.707, 1.81", "-8.52244, 6.11427, 7.15041, 1.81", "-10.2016, 7.59897, 7.68491, 2.04" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.69542, -4.31581, -3.89, 2.72", "7.48715, -6.45528, -4.15736, 2.04", "8.76632, -9.91191, -4.58932, 2.04", "9.76712, -12.6164, -4.92729, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.08458, -9.11431, -0.13, 3.18", "-3.17112, -10.6274, -0.0334648, 2.5", "-3.41549, -14.8995, 0.239106, 2.27", "-3.60646, -18.2383, 0.452125, 2.72", "-3.73821, -20.5418, 0.59909, 3.18", "-3.80803, -21.7624, 0.676969, 3.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.33695, 2.11577, 0.0, 1.23063", "23.8965, 5.72385, 0.0, 1.23063", "38.4561, 9.33193, 0.0, 1.23063" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.1874, 6.15737, -2.55, 0.91", "-14.9818, 6.04175, -1.33726, 0.91", "-16.7708, 6.02742, -0.125795, 0.91", "-18.4942, 6.01775, 1.02699, 0.91", "-19.6824, 5.98818, 1.80075, 0.45", "-21.0904, 5.92736, 2.68702, 1.36", "-23.0129, 5.83838, 3.84967, 0.68", "-24.3321, 5.80614, 4.5855, 0.68", "-25.9628, 5.73162, 5.55785, 1.36", "-27.0917, 5.68018, 6.23213, 0.45", "-27.7273, 5.64343, 6.60802, 1.13", "-28.9741, 5.51889, 7.34398, 0.23", "-30.1065, 5.31699, 8.02822, 0.91", "-32.844, 4.78931, 9.73362, 0.23" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-13.1874, 6.15737, -2.55, 2.04", "-15.1754, 7.50042, -2.86521, 2.04", "-16.842, 8.62628, -3.12945, 2.04" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "19.5253, 11.2989, -10.0821, 0.68", "20.6486, 11.0923, -11.7358, 0.68", "22.6359, 10.7609, -14.2696, 2.27", "24.1276, 10.5465, -15.8681, 1.59", "25.7124, 10.3339, -17.3203, 0.68", "26.4977, 10.254, -17.9525, 1.59", "27.0323, 10.2056, -18.3702, 1.81", "29.2843, 10.0062, -20.1194, 0.91", "30.7263, 9.88098, -21.2069, 0.45", "32.2848, 9.74033, -22.3782, 2.04", "33.6362, 9.6125, -23.4895, 0.91", "35.0885, 9.58119, -24.812, 2.5", "38.012, 9.77331, -27.863, 0.23", "38.7462, 9.86098, -28.7168, 2.27", "40.095, 10.031, -30.3756, 0.68", "41.8528, 10.2803, -32.5254, 0.68", "43.5001, 10.5193, -34.4775, 1.59", "45.3043, 10.8134, -36.3179, 0.45", "46.5853, 11.01, -37.4507, 1.36", "48.4223, 11.254, -38.9713, 0.23", "49.1869, 11.33, -39.5391, 0.91", "49.7002, 11.3458, -39.842, 0.23", "51.5422, 11.3713, -40.7347, 1.81", "53.7186, 11.5924, -41.7695, 0.68", "54.3408, 11.7323, -42.1197, 1.13", "55.4542, 12.1019, -42.9277, 0.23", "56.4895, 12.4736, -43.8272, 2.04", "58.7008, 13.2717, -45.9263, 0.23", "60.721, 13.9357, -48.1207, 2.04", "61.9245, 14.266, -49.5647, 2.5", "63.8025, 14.664, -52.063, 0.23", "64.8491, 14.8317, -53.5442, 0.68", "65.4492, 14.9046, -54.4217, 0.23", "66.5116, 14.9267, -55.9277, 1.81", "67.9202, 14.8712, -57.565, 0.23", "68.974, 14.809, -58.6266, 0.23", "70.0118, 14.7731, -59.5515, 1.59", "71.1762, 14.7965, -60.5423, 0.45", "71.8979, 14.8571, -61.1651, 1.81", "73.0465, 15.028, -62.1282, 0.23", "75.2362, 15.384, -63.9769, 2.04", "77.2957, 15.7682, -65.8788, 0.23", "77.608, 15.846, -66.1943, 0.91", "78.4629, 16.0982, -67.0535, 0.23", "78.8651, 16.2067, -67.4683, 1.13", "79.8159, 16.3776, -68.3884, 1.59", "81.3039, 16.501, -69.5581, 0.23", "82.2068, 16.4506, -70.1315, 0.91", "83.2459, 16.3567, -70.6756, 0.23", "84.7125, 16.1342, -71.2964, 1.59", "86.3937, 15.7505, -71.9825, 0.68", "88.1256, 15.2599, -72.6302, 1.13", "90.3867, 14.5779, -73.5017, 0.23", "91.5293, 14.2655, -73.9637, 1.13", "92.6481, 13.9763, -74.4536, 0.23", "94.9085, 13.4564, -75.577, 1.59", "96.1004, 13.1772, -76.2715, 0.23", "98.0804, 12.713, -77.5727, 1.81", "99.931, 12.2888, -78.8564, 0.23", "101.424, 12.0148, -79.9934, 1.59", "103.365, 11.8306, -81.5347, 0.23", "104.591, 11.8806, -82.5267, 0.91", "105.143, 12.0147, -83.0013, 0.23", "105.659, 12.2587, -83.4772, 1.36", "107.277, 13.372, -84.9756, 0.23", "107.62, 13.6727, -85.2659, 0.23", "108.777, 14.8438, -86.2335, 1.81", "110.404, 16.6276, -87.7419, 0.23", "111.057, 17.3502, -88.3809, 0.23", "111.795, 18.0776, -89.0817, 0.68", "113.043, 19.0471, -90.255, 0.23", "114.206, 19.7581, -91.4042, 1.81", "115.501, 20.2777, -92.7378, 2.27", "116.221, 20.4276, -93.5953, 2.27", "117.791, 20.5538, -95.6802, 0.23", "119.066, 20.4665, -97.7058, 0.23", "119.475, 20.3629, -98.4561, 1.13", "120.061, 20.1282, -99.7141, 1.13", "121.111, 19.6913, -102.337, 0.23", "121.445, 19.684, -103.284, 0.23", "121.778, 20.0471, -104.052, 0.23", "122.382, 20.9707, -104.841, 0.23", "123.078, 21.9572, -105.419, 0.23", "124.424, 23.627, -106.148, 0.23", "125.963, 25.3231, -106.713, 0.91", "127.734, 26.9625, -107.274, 0.23", "128.686, 27.6587, -107.553, 0.23", "130.403, 28.6112, -108.047, 1.36", "132.083, 29.3977, -108.502, 0.23", "133.384, 29.8694, -108.853, 0.23", "135.089, 30.2049, -109.316, 0.23", "136.857, 30.2405, -109.855, 0.23", "137.672, 30.1559, -110.118, 0.68" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "19.5253, 11.2989, -10.0821, 1.36", "21.4597, 13.7038, -10.2227, 1.36", "22.4494, 14.865, -10.3592, 1.36", "23.2758, 15.8332, -10.4912, 1.36", "24.941, 17.7473, -10.8235, 0.68", "25.8976, 18.8398, -11.0295, 1.59", "26.6725, 19.6899, -11.1741, 1.59", "28.2769, 21.2711, -11.4354, 0.68", "29.7898, 22.7198, -11.6428, 1.59", "31.201, 24.1155, -11.8054, 0.91", "31.7104, 24.6567, -11.8527, 1.36", "33.1414, 26.3061, -11.989, 1.81", "34.3368, 27.7557, -12.087, 2.04", "34.8139, 28.3404, -12.1224, 2.04", "36.8741, 30.9372, -12.312, 1.13", "37.793, 32.1738, -12.4386, 0.23", "39.2145, 34.154, -12.7195, 1.59", "40.6753, 36.2547, -13.0857, 1.36", "41.7864, 37.8371, -13.38, 1.36", "42.4355, 38.746, -13.557, 2.04", "44.5081, 41.5569, -14.1289, 0.23", "46.2231, 43.7127, -14.6135, 0.45", "46.8466, 44.426, -14.7597, 1.36", "47.7151, 45.3531, -14.9434, 1.81", "48.3782, 45.9788, -15.053, 1.36", "49.4889, 46.9036, -15.1689, 0.68", "50.9272, 47.9235, -15.2393, 0.68", "52.8312, 49.1425, -15.2918, 2.04", "53.5998, 49.6079, -15.3045, 2.04", "54.6036, 50.1757, -15.298, 1.59", "55.5461, 50.6786, -15.248, 2.04" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "10.9694, 1.96127, 8.16712, 0.91", "12.1766, 2.33373, 8.39697, 0.91", "14.5633, 3.16872, 8.84699, 0.91", "15.6107, 3.55697, 9.05571, 1.81", "17.9929, 4.47714, 9.52795, 1.36", "19.963, 5.20939, 9.89301, 1.81", "22.9358, 6.28677, 10.4337, 0.68", "24.6236, 6.91429, 10.7387, 1.81", "26.2827, 7.59614, 11.012, 1.81", "27.4417, 8.08937, 11.2068, 2.27", "29.7242, 9.08291, 11.5871, 1.13", "32.1925, 10.1567, 12.0742, 0.23", "34.1145, 10.9578, 12.5117, 0.23", "36.2648, 11.8375, 12.9126, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "10.9694, 1.96127, 8.16712, 0.45", "12.5365, 0.388945, 9.0501, 0.45", "14.2751, -1.33973, 10.0034, 0.45", "15.0948, -2.0815, 10.4395, 0.45", "16.3044, -3.20189, 11.1254, 0.91", "17.0005, -3.8648, 11.5079, 0.91", "18.3355, -5.13618, 12.2415, 1.59", "19.7793, -6.51737, 13.084, 0.68", "21.3391, -8.05542, 14.001, 1.36", "22.5301, -9.23779, 14.658, 1.36", "24.1591, -10.7736, 15.4714, 0.45" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-10.2016, 7.59897, 7.68491, 2.72", "-11.7916, 8.50197, 9.55491, 2.72" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.2016, 7.59897, 7.68491, 1.13", "-12.0105, 8.97307, 9.44025, 1.13", "-13.0341, 9.77535, 10.3656, 0.68", "-14.4379, 10.973, 11.571, 1.13", "-15.4483, 11.9768, 12.4444, 0.23", "-16.3554, 12.8781, 13.2286, 0.23", "-17.1436, 13.6612, 13.91, 0.23", "-17.5729, 14.0646, 14.1882, 0.23", "-18.3641, 14.9888, 14.6567, 0.23", "-19.0866, 16.0959, 15.0451, 0.68" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "9.76712, -12.6164, -4.92729, 1.13", "11.8593, -11.774, -5.59742, 1.13", "13.3558, -11.1688, -6.07352, 0.68", "15.1357, -10.5493, -6.5761, 1.36", "16.5643, -10.1053, -6.95324, 1.81", "18.6002, -9.51075, -7.45776, 1.36", "19.5986, -9.21916, -7.70518, 1.13", "20.6736, -8.89857, -7.96548, 1.59", "23.0384, -8.21751, -8.48596, 0.91", "24.6474, -7.84573, -8.78893, 1.59", "25.5753, -7.69057, -8.94236, 2.5" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "9.76712, -12.6164, -4.92729, 1.36", "9.15017, -15.7796, -4.92729, 1.36", "8.7445, -17.8596, -4.92729, 1.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-3.80803, -21.7624, 0.676969, 2.04", "-5.16803, -23.5684, -0.173031, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.80803, -21.7624, 0.676969, 0.68", "-3.24587, -25.1995, 1.22033, 0.68", "-2.90979, -27.2544, 1.54518, 1.13", "-2.45106, -30.0591, 1.98857, 1.13" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "38.4561, 9.33193, 0.0, 0.847747", "53.0157, 12.94, 0.0, 0.847747", "67.5753, 16.5481, 0.0, 0.847747" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-16.842, 8.62628, -3.12945, 0.45", "-16.3294, 10.4335, -4.341, 0.45", "-16.1256, 11.456, -4.99699, 1.13", "-15.8868, 13.6935, -6.41009, 0.23", "-15.8175, 15.0388, -7.28029, 0.68", "-15.7005, 17.2729, -8.82535, 0.23", "-15.6276, 18.3138, -9.54405, 0.91", "-15.5805, 19.1744, -10.151, 0.91", "-15.4844, 20.7773, -11.3155, 0.23", "-15.3428, 22.185, -12.3728, 1.13", "-15.0635, 23.4331, -13.3869, 0.23", "-14.4164, 24.9756, -14.8457, 1.36", "-13.6099, 26.2621, -16.2047, 0.45", "-13.3453, 26.5638, -16.583, 0.45", "-12.3196, 27.4269, -17.9392, 0.45", "-11.8663, 27.7598, -18.5945, 0.45", "-11.2954, 28.2139, -19.7061, 0.45", "-10.9636, 28.4553, -20.6416, 0.45", "-10.7101, 28.7494, -21.7158, 0.45", "-10.4241, 29.2232, -23.1496, 0.45", "-10.2672, 29.8596, -24.6589, 0.45", "-10.19, 30.4552, -25.788, 0.45", "-10.1582, 31.0598, -26.7296, 1.13", "-10.0023, 32.8017, -29.001, 0.23", "-9.83458, 33.6249, -29.9873, 1.13", "-9.40047, 34.909, -31.522, 0.23", "-9.1436, 35.4417, -32.1671, 1.13", "-8.49536, 36.4852, -33.4151, 0.23", "-7.90801, 37.2557, -34.2423, 1.13", "-6.63957, 38.426, -35.4736, 0.23", "-6.15527, 38.8038, -35.8918, 0.91", "-4.91581, 39.6696, -36.9188, 0.23", "-4.31155, 40.0761, -37.4783, 0.23", "-3.15123, 40.879, -38.5924, 0.91", "-2.16916, 41.7467, -39.7295, 0.23", "-1.29249, 42.6878, -40.8645, 1.13", "-0.518142, 43.624, -41.9179, 0.23", "0.450068, 44.9098, -43.3068, 0.23", "0.885716, 45.5865, -44.0794, 1.13", "1.79398, 47.3399, -46.1129, 0.23", "2.02644, 47.9201, -46.7472, 0.91", "2.26974, 48.6288, -47.4642, 0.23", "2.33602, 48.8965, -47.7129, 0.91", "2.58133, 51.232, -49.7767, 0.23", "2.6495, 52.0151, -50.5775, 1.13", "2.73944, 53.1808, -51.9102, 0.23", "2.79019, 53.988, -52.8633, 1.13", "2.86412, 55.8522, -55.2254, 0.23", "2.88663, 57.4626, -57.284, 1.13", "2.86094, 59.3038, -59.5811, 0.23", "2.7852, 60.0271, -60.5286, 0.23", "2.66747, 60.5778, -61.2382, 0.91", "2.32037, 61.9059, -62.8743, 0.23", "2.13693, 62.6116, -63.6984, 0.91", "1.69735, 64.6106, -65.8211, 0.23", "1.41755, 65.9811, -67.078, 0.23", "1.30126, 66.8465, -67.8569, 1.59", "1.14705, 68.6504, -69.4798, 0.23", "1.063, 70.3505, -70.9896, 1.13", "1.05339, 71.3914, -71.9646, 0.23", "1.0773, 72.2386, -72.7696, 0.68", "1.34873, 74.4388, -74.9706, 0.23", "1.43358, 74.811, -75.3741, 0.68", "1.70383, 76.0237, -76.7095, 0.23", "1.98558, 77.1228, -77.8985, 0.23", "2.16292, 77.5974, -78.4574, 1.13", "3.07052, 79.2649, -80.6226, 0.23", "4.01733, 80.3104, -81.9962, 0.91" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-16.842, 8.62628, -3.12945, 2.04", "-19.112, 10.1278, -3.12945, 2.04" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "55.5461, 50.6786, -15.248, 0.23", "56.9266, 51.3867, -16.5722, 0.23", "58.414, 52.1744, -18.0106, 0.23", "59.0665, 52.5306, -18.6439, 1.81", "60.6964, 53.4277, -20.1739, 0.23", "61.875, 54.0097, -21.2673, 0.91", "62.9655, 54.4827, -22.2398, 0.23", "63.8977, 54.7903, -22.9673, 1.36", "65.0185, 55.0309, -23.7195, 0.23", "65.6614, 55.1078, -24.0957, 0.91", "67.1334, 55.1773, -24.7738, 0.23", "68.0435, 55.1473, -25.0623, 0.23", "68.7042, 55.1278, -25.222, 1.13", "70.2905, 55.1128, -25.522, 0.23", "71.6335, 55.1407, -25.7348, 1.59", "73.5226, 55.2529, -26.0392, 0.23", "74.8672, 55.3902, -26.267, 1.13", "76.6953, 55.6515, -26.6187, 0.23", "78.3275, 55.9494, -26.9478, 1.13", "79.213, 56.1435, -27.1362, 0.23", "81.2879, 56.6218, -27.6277, 0.23", "82.1512, 56.8167, -27.8346, 1.13", "83.3447, 57.056, -28.1365, 1.13", "85.3614, 57.4368, -28.6733, 0.23", "87.369, 57.8522, -29.2288, 1.13", "88.9728, 58.2362, -29.7034, 0.23", "90.4506, 58.6473, -30.1406, 1.81", "92.2346, 59.1536, -30.6477, 0.23", "93.5214, 59.4966, -31.0151, 1.13", "95.2219, 59.9559, -31.4847, 0.23", "96.6296, 60.3664, -31.8489, 1.13", "98.5077, 60.9458, -32.2778, 0.23", "100.421, 61.5713, -32.711, 1.13", "102.596, 62.3355, -33.1614, 0.23", "103.688, 62.7316, -33.3718, 0.23", "105.274, 63.3379, -33.6905, 1.36", "107.002, 64.0515, -34.0791, 0.23", "107.791, 64.4021, -34.2899, 0.91", "109.168, 65.0515, -34.7235, 0.23", "110.759, 65.8064, -35.3132, 0.91", "112.779, 66.6113, -36.1433, 0.23", "114.198, 67.0775, -36.8156, 0.91", "114.981, 67.2867, -37.2343, 0.91", "116.02, 67.4937, -37.8351, 0.23", "116.956, 67.6156, -38.4037, 0.23", "118.294, 67.8271, -39.2804, 1.13", "119.577, 68.1613, -40.1114, 0.23", "120.184, 68.382, -40.478, 0.91", "121.215, 68.8646, -41.0427, 0.23", "122.491, 69.6491, -41.6961, 1.13", "124.47, 71.07, -42.6471, 0.23", "126.145, 72.4168, -43.4238, 1.36", "127.545, 73.5867, -44.0188, 0.45", "128.974, 74.846, -44.5993, 1.13", "130.473, 76.1998, -45.2185, 0.23", "131.288, 76.9114, -45.5474, 0.23", "133.033, 78.2288, -46.2028, 1.13", "133.616, 78.6203, -46.4223, 0.23", "134.522, 79.1034, -46.7865, 1.13", "136.719, 79.9694, -47.7038, 0.23", "138.803, 80.5684, -48.5779, 1.13", "140.333, 80.9557, -49.2206, 0.23", "141.77, 81.3119, -49.8493, 0.91", "143.614, 81.7807, -50.6738, 0.23", "144.087, 81.8992, -50.8859, 0.91", "145.718, 82.3348, -51.5844, 0.23", "147.123, 82.7711, -52.2503, 1.13", "148.955, 83.4697, -53.113, 0.23", "150.837, 84.2334, -54.0234, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "55.5461, 50.6786, -15.248, 0.23", "56.1606, 53.0452, -15.7471, 0.23", "56.6026, 54.2819, -16.0556, 0.23", "57.2849, 55.8862, -16.5057, 1.13", "57.8054, 56.9062, -16.7971, 1.81", "59.0371, 59.0851, -17.3931, 0.68", "59.5916, 60.0101, -17.6437, 0.23", "60.7174, 61.6798, -18.1033, 1.81", "61.4241, 62.65, -18.3491, 1.81", "62.6183, 64.2236, -18.7719, 0.91", "63.6905, 65.5478, -19.1363, 0.23", "64.8583, 66.9118, -19.495, 0.23", "65.681, 67.8469, -19.7479, 1.81", "66.4143, 68.6625, -19.9576, 1.81", "68.2068, 70.5396, -20.4562, 0.23", "69.1171, 71.4257, -20.7029, 1.81", "70.0758, 72.278, -20.9438, 1.81", "71.7053, 73.6245, -21.2981, 0.23", "72.8512, 74.5394, -21.5333, 0.23", "73.9903, 75.4301, -21.7418, 1.36", "75.284, 76.4268, -21.9466, 1.36", "77.7133, 78.3661, -22.3839, 0.68", "78.9596, 79.4189, -22.6249, 0.23", "79.9591, 80.3057, -22.8225, 2.27", "81.9364, 82.1775, -23.2268, 0.23", "83.093, 83.3659, -23.4844, 0.68", "84.0863, 84.5323, -23.7278, 2.04", "84.7962, 85.4909, -23.9105, 2.04", "85.1687, 86.1434, -24.0186, 2.04", "86.2716, 88.6547, -24.4144, 0.23", "86.6824, 89.8904, -24.5951, 0.23", "87.1844, 91.616, -24.8349, 0.45", "87.3522, 92.2301, -24.9223, 2.27", "88.4196, 96.2801, -25.5394, 0.23", "88.8286, 97.908, -25.7982, 1.59", "89.3411, 100.036, -26.1247, 0.45", "89.6992, 101.403, -26.3096, 1.36", "90.4275, 103.859, -26.6663, 0.23", "90.628, 104.458, -26.7545, 0.91", "91.1139, 105.645, -26.9277, 0.23", "91.7769, 107.087, -27.1208, 1.81", "92.6348, 108.763, -27.3771, 0.91", "93.9142, 111.126, -27.7547, 0.23", "94.4912, 112.081, -27.9129, 0.23", "95.3166, 113.281, -28.1177, 1.81", "96.3858, 114.648, -28.3566, 1.81", "98.1666, 116.746, -28.6307, 0.23", "99.7698, 118.485, -28.7692, 1.13", "100.784, 119.494, -28.7984, 1.13", "102.906, 121.525, -28.8009, 0.23", "104.377, 122.897, -28.7428, 0.91", "106.275, 124.59, -28.6143, 0.23", "106.963, 125.197, -28.5651, 2.04", "107.433, 125.647, -28.5427, 2.5", "108.295, 126.601, -28.5382, 2.04", "110.773, 129.833, -28.7145, 0.23", "111.6, 131.076, -28.8402, 0.23", "112.599, 132.843, -29.1174, 2.04", "113.791, 135.31, -29.5388, 0.23", "114.159, 136.175, -29.7072, 1.13", "114.925, 138.221, -30.1597, 0.23", "115.369, 139.621, -30.5099, 1.59", "115.987, 141.69, -31.0513, 0.45", "116.599, 143.718, -31.613, 1.81", "117.251, 145.754, -32.2283, 0.23", "117.486, 146.441, -32.4367, 0.68", "118.023, 147.905, -32.9176, 0.23", "118.476, 149.14, -33.3421, 1.59", "119.014, 150.695, -33.8561, 0.68", "119.428, 152.12, -34.2836, 1.81", "119.614, 152.825, -34.4882, 1.81", "120.12, 154.809, -35.0449, 0.68", "120.405, 155.953, -35.336, 1.13", "120.778, 157.36, -35.668, 0.23", "121.263, 159.108, -36.061, 0.91", "121.823, 161.004, -36.4679, 0.23", "122.207, 162.21, -36.7265, 1.36", "122.712, 163.6, -37.0184, 1.36", "123.468, 165.4, -37.4306, 0.23", "124.107, 166.804, -37.7763, 0.91", "124.375, 167.367, -37.9122, 1.36", "125.648, 169.813, -38.4458, 0.23", "126.275, 170.96, -38.7258, 1.13", "127.235, 172.712, -39.1503, 0.23", "128.133, 174.467, -39.5334, 0.91", "128.99, 176.237, -39.9303, 0.91", "129.889, 178.222, -40.4322, 0.23", "130.42, 179.492, -40.7965, 0.23", "130.883, 180.684, -41.1725, 1.59", "131.389, 182.03, -41.6504, 2.5", "132.795, 185.909, -43.1012, 0.23", "133.345, 187.568, -43.7519, 0.68", "133.952, 189.536, -44.5261, 0.23", "134.132, 190.107, -44.7391, 0.91", "134.507, 191.347, -45.1535, 0.23", "134.997, 193.058, -45.643, 2.04", "135.916, 196.791, -46.475, 0.23", "135.981, 197.082, -46.5268, 1.13", "136.265, 198.552, -46.7669, 1.81", "136.867, 202.122, -47.3295, 0.23", "137.119, 203.868, -47.6054, 0.23", "137.327, 205.487, -47.899, 0.91", "137.478, 206.948, -48.1916, 1.81", "137.694, 210.323, -48.922, 0.23", "137.745, 211.777, -49.2764, 0.23", "137.769, 213.971, -49.9204, 1.81", "137.743, 216.512, -50.6995, 0.23", "137.696, 218.386, -51.2949, 1.81", "137.613, 221.358, -52.2815, 0.23", "137.557, 223.312, -52.9532, 1.59", "137.5, 225.616, -53.7753, 0.23", "137.473, 226.216, -53.9991, 1.36", "137.414, 227.082, -54.3311, 1.36", "137.327, 228.861, -54.9803, 0.45", "137.268, 230.737, -55.6365, 2.04", "137.213, 233.24, -56.39, 0.23", "137.202, 234.686, -56.7693, 1.13", "137.211, 235.67, -57.0198, 1.81", "137.262, 239.288, -57.8685, 0.23", "137.3, 240.877, -58.1849, 1.13", "137.37, 241.997, -58.3919, 1.13", "137.586, 244.172, -58.7901, 0.23", "137.879, 246.249, -59.2238, 0.23", "138.137, 247.997, -59.6411, 0.23", "138.42, 250.042, -60.2155, 1.81", "138.935, 253.902, -61.348, 0.23", "139.085, 255.14, -61.75, 1.13", "139.305, 256.858, -62.3846, 0.23", "139.474, 258.287, -62.9968, 1.59", "139.611, 259.65, -63.6392, 0.45", "139.678, 260.976, -64.3062, 1.13", "139.686, 262.983, -65.3297, 0.23", "139.679, 265.259, -66.5081, 1.13", "139.682, 266.476, -67.117, 0.23", "139.702, 267.537, -67.6447, 0.91", "139.776, 269.397, -68.5353, 0.23", "139.878, 270.981, -69.2509, 1.36", "140.014, 272.5, -69.8383, 0.23", "140.14, 273.974, -70.3484, 0.91", "140.221, 274.942, -70.6396, 0.91", "140.332, 276.819, -71.1424, 0.23", "140.388, 278.299, -71.4708, 1.59", "140.398, 281.07, -71.9927, 0.23", "140.323, 282.794, -72.2627, 1.59", "140.106, 285.45, -72.6654, 0.23", "139.945, 287.086, -72.8909, 0.23", "139.75, 288.562, -73.0672, 1.81", "139.689, 288.937, -73.1102, 1.81", "138.857, 293.413, -73.5598, 0.23", "138.601, 294.774, -73.6987, 0.91", "138.302, 296.251, -73.864, 0.23", "138.001, 297.798, -74.0393, 0.91", "137.538, 300.059, -74.2877, 0.23", "137.228, 301.543, -74.4733, 1.59", "136.718, 303.939, -74.7879, 0.45", "136.337, 305.812, -75.0309, 1.36", "136.106, 307.008, -75.1892, 1.36", "135.878, 308.369, -75.3614, 0.23", "135.713, 309.934, -75.5385, 0.91", "135.561, 312.457, -75.7958, 0.23", "135.549, 313.649, -75.8948, 1.13", "135.655, 315.449, -76.0162, 0.23", "135.852, 316.953, -76.1002, 2.5", "136.433, 319.844, -76.2147, 0.23", "136.603, 320.464, -76.2325, 1.13", "137.122, 321.882, -76.2971, 1.13", "138.171, 324.215, -76.4881, 0.23", "138.879, 325.588, -76.6434, 1.81", "139.291, 326.372, -76.7625, 1.81", "140.257, 328.315, -77.1583, 0.68", "140.908, 329.615, -77.4461, 0.23", "141.844, 331.48, -77.9079, 1.59", "142.216, 332.262, -78.1234, 1.59", "143.481, 335.28, -78.9682, 0.23", "144.115, 336.862, -79.4336, 1.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.7916, 8.50197, 9.55491, 0.91", "-13.367, 10.0398, 9.89253, 0.91", "-14.7809, 11.42, 10.1955, 0.91", "-16.5029, 13.1008, 10.5646, 0.91", "-18.1156, 14.6751, 10.9102, 1.36", "-19.5434, 16.0689, 11.2162, 2.04" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-11.7916, 8.50197, 9.55491, 1.13", "-14.0296, 8.59017, 9.98037, 1.13", "-15.5843, 8.65821, 10.2547, 0.68", "-17.612, 8.64798, 10.673, 1.59", "-20.5366, 8.49009, 11.3729, 0.68", "-22.6513, 8.27416, 11.9056, 0.68", "-23.5804, 8.14841, 12.1398, 0.68", "-26.178, 7.69072, 12.8589, 0.23", "-28.4059, 7.13637, 13.5478, 0.23", "-29.7754, 6.67324, 13.9974, 0.23", "-31.2012, 6.03629, 14.4616, 0.68", "-32.5864, 5.33373, 14.9181, 1.36", "-35.0348, 4.01072, 15.7251, 0.23", "-36.2344, 3.31407, 16.1249, 0.23", "-37.4628, 2.65405, 16.4604, 0.91", "-39.0536, 1.81781, 16.8563, 0.23" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "25.5753, -7.69057, -8.94236, 0.23", "27.4765, -8.5264, -9.24227, 0.23", "29.3941, -9.43985, -9.50046, 0.23", "30.2498, -9.85063, -9.59496, 1.13", "31.3071, -10.3761, -9.6934, 0.23", "32.5753, -11.0375, -9.79956, 1.81", "34.1916, -11.9518, -9.89907, 0.23", "35.3821, -12.7063, -9.89074, 0.91", "36.9718, -13.7898, -9.79442, 0.91", "38.1592, -14.6161, -9.69491, 0.23", "38.6593, -14.9795, -9.63586, 0.23", "40.1973, -16.1023, -9.41452, 0.45", "41.6291, -17.1545, -9.17708, 0.23", "43.0637, -18.3052, -8.92656, 1.13", "43.7683, -18.8967, -8.80701, 1.13", "45.6728, -20.3995, -8.62866, 0.23", "46.708, -21.1638, -8.60834, 0.68", "47.1572, -21.4685, -8.63232, 0.23", "48.5141, -22.3121, -8.77589, 0.91", "49.9585, -23.0585, -8.93325, 0.91", "52.0962, -24.0387, -9.16789, 0.23", "53.6066, -24.5964, -9.32901, 0.23", "54.6932, -24.9449, -9.42195, 0.91", "56.7284, -25.5464, -9.54997, 0.23", "58.1132, -25.921, -9.59958, 0.23", "59.1459, -26.2178, -9.60163, 0.91", "60.8977, -26.8094, -9.53347, 0.23", "61.9981, -27.2128, -9.48431, 0.91", "63.1533, -27.7125, -9.40236, 0.91", "64.4874, -28.3657, -9.31397, 0.23", "65.4463, -28.87, -9.26062, 0.68", "67.8778, -30.1948, -9.12623, 0.23", "68.6137, -30.6128, -9.09755, 0.91", "70.9259, -31.9288, -9.04687, 0.23", "72.6282, -32.8603, -9.05724, 1.13", "74.139, -33.6595, -9.108, 1.13", "75.4253, -34.2916, -9.18017, 0.23", "76.6919, -34.8894, -9.27975, 0.23", "78.5291, -35.7334, -9.45481, 0.91", "80.5222, -36.5979, -9.65076, 0.23", "82.7648, -37.5702, -9.79289, 0.91", "84.2203, -38.2122, -9.85553, 0.91", "85.3761, -38.717, -9.88185, 0.23", "86.8556, -39.3666, -9.9089, 1.13", "89.4869, -40.5207, -9.98697, 0.23", "91.5104, -41.4004, -10.067, 0.23", "93.1821, -42.1134, -10.1761, 1.13", "93.8137, -42.3717, -10.2306, 1.13", "96.2552, -43.2268, -10.4771, 0.23", "97.6199, -43.6676, -10.5858, 0.23", "99.1762, -44.1562, -10.6357, 0.68", "100.642, -44.5961, -10.6066, 0.23", "102.878, -45.2973, -10.427, 1.13", "106.114, -46.3542, -9.99456, 0.23", "107.984, -47.0468, -9.63179, 0.68", "110.649, -48.1719, -9.01565, 0.23", "112.155, -48.9212, -8.6151, 1.13", "113.219, -49.5297, -8.30405, 0.23", "113.959, -50.0316, -8.07607, 0.91", "115.616, -51.4679, -7.61936, 0.91", "116.271, -52.0841, -7.49766, 0.23", "117.062, -52.9554, -7.41189, 0.91", "117.966, -54.0616, -7.36777, 0.23", "118.114, -54.2457, -7.36777, 0.91", "119.864, -56.5248, -7.36777, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "25.5753, -7.69057, -8.94236, 0.23", "27.5334, -7.53439, -9.75847, 0.23", "29.5642, -7.47056, -10.5721, 0.91", "31.5162, -7.41708, -11.3524, 0.23", "33.2535, -7.31469, -12.0635, 0.91", "33.8777, -7.25361, -12.327, 0.91", "34.9333, -7.0891, -12.7983, 0.23", "35.8934, -6.91529, -13.216, 0.91", "37.1795, -6.62954, -13.7807, 0.23", "38.4034, -6.33049, -14.3914, 2.04", "40.0187, -5.95732, -15.2717, 0.45", "41.2668, -5.66458, -15.9507, 0.23", "42.0903, -5.45963, -16.3933, 0.23", "43.7689, -5.04127, -17.2468, 1.81", "45.3896, -4.70325, -18.0568, 0.23", "47.286, -4.42716, -18.9706, 1.59", "48.425, -4.31574, -19.5122, 0.45", "49.6662, -4.22893, -20.1373, 1.36", "50.3307, -4.16345, -20.5001, 1.81", "52.0053, -3.93651, -21.5879, 0.23", "52.8942, -3.79861, -22.216, 0.23", "54.2054, -3.57112, -23.185, 1.59", "55.7882, -3.28744, -24.3687, 0.23", "56.9166, -3.10175, -25.1866, 1.36", "59.4624, -2.6976, -26.9494, 0.23", "60.8865, -2.45361, -27.8274, 2.04", "62.6564, -2.17562, -28.7758, 0.23", "63.9735, -2.01171, -29.4154, 1.36", "65.8685, -1.86102, -30.2187, 0.23", "67.493, -1.80778, -30.8323, 1.59", "69.7146, -1.83144, -31.5685, 0.23", "71.5236, -1.90555, -32.1682, 0.23", "74.2676, -2.08124, -33.0985, 1.81", "75.7902, -2.18677, -33.6372, 0.23", "76.8618, -2.24135, -34.0955, 0.91", "78.1759, -2.25824, -34.8443, 0.23", "79.6228, -2.16302, -35.9822, 1.13", "80.7179, -1.95254, -37.0371, 0.23", "81.7372, -1.63825, -38.1165, 1.13", "83.3433, -0.932279, -40.0121, 0.23", "84.8629, -0.0938575, -41.8955, 2.04", "86.1803, 0.758425, -43.518, 0.23", "86.8611, 1.2263, -44.327, 1.36", "88.2948, 2.23971, -45.8527, 0.45", "89.1118, 2.77781, -46.6107, 1.13", "90.7938, 3.75418, -47.8491, 0.23", "92.1276, 4.47702, -48.6693, 1.59", "93.5896, 5.2741, -49.4633, 0.23", "94.4907, 5.74152, -49.9166, 0.91", "95.979, 6.50498, -50.6907, 0.68", "96.948, 6.97992, -51.1807, 0.23", "98.7669, 7.90626, -52.075, 1.13", "100.276, 8.66373, -52.8025, 0.23", "101.169, 9.10442, -53.2779, 1.13", "103.373, 10.04, -54.5044, 0.23", "104.44, 10.395, -55.1064, 1.59", "106.482, 10.8432, -56.2588, 0.23", "107.895, 10.9532, -57.0159, 1.59", "110.753, 10.9373, -58.4564, 0.68", "112.378, 10.8841, -59.2468, 1.36", "114.22, 10.7563, -60.1366, 0.23", "115.153, 10.6692, -60.6544, 1.13", "117.268, 10.4134, -61.9261, 0.23", "119.211, 10.2117, -63.14, 1.13", "120.155, 10.1577, -63.7307, 1.13", "121.641, 10.228, -64.7954, 0.23", "122.755, 10.4164, -65.7738, 0.23", "123.439, 10.6003, -66.4168, 1.13", "124.048, 10.8734, -67.1012, 1.13", "125.492, 11.732, -68.8473, 0.23", "126.314, 12.4105, -69.968, 0.23", "127.87, 14.1118, -72.3372, 0.23", "128.611, 15.2453, -73.6912, 2.27", "129.6, 17.5491, -76.1853, 0.23", "129.787, 18.3311, -76.9678, 0.91", "130.027, 20.7755, -79.2655, 0.23", "130.058, 21.684, -80.1056, 0.91", "130.047, 22.6451, -80.9608, 0.23", "129.976, 23.9967, -82.2552, 0.91", "129.828, 25.7023, -83.8659, 0.23", "129.78, 26.2547, -84.4105, 1.13", "129.773, 27.4806, -85.7219, 0.23", "129.885, 28.2168, -86.6405, 0.91", "130.359, 29.5318, -88.4112, 0.91", "130.91, 30.5049, -89.8285, 0.23", "131.595, 31.3859, -91.1768, 0.91", "132.584, 32.4269, -92.8239, 0.91", "134.349, 34.0339, -95.5172, 0.23", "135.212, 34.6896, -96.723, 0.68", "135.997, 35.167, -97.6448, 0.68", "136.9, 35.6374, -98.6025, 0.23", "138.104, 36.223, -99.773, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "8.7445, -17.8596, -4.92729, 0.45", "7.09678, -18.3765, -5.58995, 0.45", "6.11669, -18.7023, -5.9733, 1.36", "5.0263, -19.0622, -6.40243, 0.45", "4.04893, -19.3268, -6.76884, 0.68", "2.58824, -19.6818, -7.35094, 0.23", "1.4364, -19.9623, -7.80233, 0.91", "-0.416992, -20.4314, -8.53409, 0.23", "-0.909463, -20.549, -8.73567, 1.36", "-2.20084, -20.8066, -9.27295, 1.36", "-3.2993, -20.9863, -9.71904, 0.23", "-4.96566, -21.2085, -10.3628, 0.91", "-6.67829, -21.4394, -11.0758, 0.23", "-8.20249, -21.6823, -11.7062, 0.91", "-9.03387, -21.8406, -12.0441, 0.91", "-10.0962, -22.0967, -12.48, 0.23", "-10.9687, -22.3047, -12.8336, 0.91", "-12.3714, -22.6312, -13.4329, 0.23", "-13.2295, -22.8794, -13.7795, 0.68", "-13.8852, -23.0903, -14.045, 0.23", "-14.8091, -23.3847, -14.3862, 1.36", "-15.891, -23.7306, -14.7422, 1.36", "-16.7297, -24.0128, -14.9715, 0.23", "-17.7419, -24.3393, -15.2235, 0.91", "-19.4998, -24.8963, -15.6711, 0.23", "-20.9725, -25.3599, -16.0765, 0.23", "-21.3165, -25.464, -16.1705, 1.36", "-23.9564, -26.2631, -16.8977, 0.23", "-25.2215, -26.6554, -17.2882, 1.59", "-25.8977, -26.8637, -17.5114, 1.36", "-27.7075, -27.4395, -18.1532, 0.23", "-28.7379, -27.7677, -18.5274, 1.13", "-28.9482, -27.8319, -18.5978, 1.13", "-30.6039, -28.3493, -19.1245, 0.23", "-31.2806, -28.5782, -19.3272, 0.91", "-32.6304, -29.0752, -19.7315, 0.23", "-33.6963, -29.4527, -20.0313, 0.91", "-35.0377, -29.9477, -20.4224, 0.23", "-36.0362, -30.3211, -20.7351, 1.81", "-37.8202, -31.0131, -21.3229, 0.23", "-39.9544, -31.9051, -22.1273, 1.13", "-41.7315, -32.7045, -22.9132, 0.23", "-42.7073, -33.1604, -23.4008, 0.68", "-44.2236, -33.8693, -24.2079, 1.36", "-46.2504, -34.7537, -25.2919, 0.23", "-47.9979, -35.4749, -26.2476, 1.59", "-49.6542, -36.1076, -27.1683, 0.23", "-50.8047, -36.5239, -27.7719, 0.23", "-51.5912, -36.7657, -28.1441, 1.13", "-53.087, -37.1756, -28.7617, 0.23", "-53.7128, -37.325, -28.9868, 0.68", "-54.7433, -37.5711, -29.2902, 0.23", "-56.5433, -37.9959, -29.7344, 1.13", "-58.9933, -38.5017, -30.3095, 0.23", "-59.7037, -38.6251, -30.477, 0.23", "-61.0784, -38.8585, -30.8661, 0.23", "-61.9194, -38.9793, -31.1245, 1.13", "-63.2118, -39.1281, -31.6178, 1.13", "-65.5655, -39.3614, -32.6933, 0.23", "-67.4806, -39.5243, -33.6556, 0.91", "-69.7319, -39.7353, -34.8834, 0.23", "-70.3176, -39.8047, -35.2225, 0.91", "-72.7487, -40.19, -36.6679, 0.23", "-74.061, -40.5027, -37.4841, 0.68", "-75.2566, -40.8797, -38.2266, 0.23", "-75.7031, -41.0436, -38.4774, 0.91", "-76.8251, -41.4818, -38.9862, 0.23", "-77.9313, -41.9293, -39.4295, 0.68", "-79.3632, -42.5403, -39.8939, 0.23", "-79.9684, -42.7965, -40.0853, 1.13", "-82.6716, -43.9739, -40.9061, 0.23", "-84.1067, -44.5781, -41.3517, 0.68", "-86.0765, -45.3744, -41.9789, 0.23", "-87.3492, -45.8871, -42.4042, 1.13", "-90.4296, -47.1247, -43.421, 0.23", "-91.7023, -47.641, -43.8425, 0.91", "-92.9802, -48.1532, -44.2673, 0.23", "-93.7063, -48.4395, -44.5189, 0.91", "-95.0205, -49.046, -44.9614, 0.23", "-95.8272, -49.4912, -45.2369, 0.23", "-97.0208, -50.326, -45.5966, 0.91", "-98.2843, -51.3614, -45.9277, 0.23", "-98.7913, -51.8225, -46.0399, 0.91", "-100.692, -53.7455, -46.4162, 0.23", "-102.402, -55.6129, -46.7175, 1.13", "-104.751, -58.3938, -47.1166, 0.23", "-106.231, -60.2306, -47.3433, 0.91", "-106.574, -60.6723, -47.381, 0.23", "-107.46, -61.8486, -47.4532, 0.23", "-108.002, -62.5861, -47.4722, 0.45", "-108.644, -63.5268, -47.4519, 0.23", "-109.269, -64.5602, -47.5037, 0.91", "-109.883, -65.5991, -47.6216, 0.23", "-110.486, -66.6298, -47.7786, 0.68", "-111.695, -68.649, -48.1446, 0.23", "-112.012, -69.1998, -48.2628, 0.91", "-113.607, -71.9924, -48.9364, 0.23", "-113.973, -72.6277, -49.1021, 1.13", "-114.739, -73.8758, -49.4587, 1.13", "-115.411, -74.9283, -49.7658, 1.13", "-116.299, -76.4085, -50.1731, 0.68", "-116.654, -77.0804, -50.3319, 0.23", "-117.055, -77.8914, -50.5052, 0.91", "-117.966, -79.8457, -50.9524, 0.23", "-118.581, -81.2346, -51.3023, 2.04", "-119.637, -83.7074, -51.9491, 0.23", "-120.151, -84.9412, -52.2912, 0.68", "-121.089, -87.3198, -52.9756, 0.23", "-121.482, -88.3405, -53.2959, 0.91", "-122.26, -90.2837, -53.9375, 0.23", "-122.413, -90.6106, -54.0661, 0.68", "-122.913, -91.6322, -54.5013, 0.23", "-123.468, -92.9097, -55.0535, 0.91", "-124.003, -94.2998, -55.6499, 0.23", "-124.365, -95.2851, -56.0857, 1.13", "-125.445, -98.311, -57.4294, 0.23", "-125.999, -99.8726, -58.1281, 0.91", "-126.803, -102.111, -59.1222, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.7445, -17.8596, -4.92729, 0.68", "8.34537, -20.1588, -5.15156, 0.68", "7.97669, -21.9797, -5.31459, 1.36", "7.85073, -22.5614, -5.36051, 1.36", "7.19439, -25.2738, -5.55357, 0.68", "6.61506, -27.3319, -5.67459, 1.13", "5.7741, -29.9831, -5.87219, 0.45", "5.23758, -31.3891, -5.98328, 1.13", "4.41695, -33.3501, -6.20718, 1.81", "3.81467, -34.7223, -6.40465, 1.81", "2.07335, -38.6201, -7.04698, 0.68", "1.27042, -40.4504, -7.36852, 1.36", "0.417418, -42.4361, -7.76647, 1.81", "-0.947523, -45.7957, -8.50226, 0.91", "-2.15452, -48.9562, -9.21427, 0.68", "-2.43846, -49.7856, -9.40144, 2.27", "-2.86556, -51.2014, -9.71316, 1.59", "-3.56081, -53.9286, -10.2172, 0.45", "-4.0909, -56.3535, -10.6139, 1.36", "-4.57667, -58.9634, -10.9404, 0.68", "-4.90514, -60.8713, -11.1489, 1.81", "-5.0552, -61.7535, -11.2542, 2.27", "-5.53106, -64.699, -11.6302, 0.23", "-5.67029, -65.5719, -11.7397, 0.23", "-5.90502, -67.21, -11.956, 1.59", "-6.03019, -68.2038, -12.1066, 1.59", "-6.438, -71.4732, -12.6354, 0.23", "-6.59099, -72.6894, -12.8441, 1.13", "-6.67313, -73.4287, -13.002, 1.13", "-6.82669, -75.176, -13.4089, 1.13", "-6.95758, -76.9848, -13.8406, 0.23", "-6.9875, -77.363, -13.9206, 1.13", "-7.1251, -78.8535, -14.1734, 1.13", "-7.39012, -81.4267, -14.5821, 0.23", "-7.42148, -81.7257, -14.6273, 1.81", "-7.65502, -83.3547, -14.8411, 1.81", "-8.1434, -86.3323, -15.1604, 0.23", "-8.4627, -87.7901, -15.2846, 0.23", "-9.13655, -90.185, -15.3884, 2.5", "-9.4019, -91.0439, -15.3893, 2.5", "-10.3769, -94.2075, -15.3584, 0.45", "-10.709, -95.3633, -15.3358, 1.13", "-11.4457, -98.2602, -15.252, 0.23", "-12.0165, -100.841, -15.1993, 2.04", "-12.5191, -103.817, -15.1624, 0.23", "-12.7051, -105.602, -15.1702, 1.59", "-12.7147, -107.542, -15.2567, 0.68", "-12.5766, -109.744, -15.4624, 0.23", "-12.3612, -111.296, -15.6826, 0.23", "-12.1525, -112.496, -15.9091, 0.68", "-11.9476, -113.741, -16.1871, 1.59", "-11.5507, -116.571, -16.8297, 0.23", "-11.436, -117.931, -17.1573, 0.91", "-11.3885, -119.407, -17.5047, 0.23", "-11.3895, -120.598, -17.7588, 0.68", "-11.4679, -121.88, -18.0159, 0.23", "-11.6797, -123.663, -18.3293, 2.04", "-12.2123, -126.643, -18.7601, 0.23", "-12.4663, -127.905, -18.9176, 0.45", "-12.7312, -129.065, -19.0523, 0.23", "-13.1754, -130.766, -19.2348, 1.81", "-13.8966, -133.147, -19.451, 0.23", "-14.674, -135.333, -19.6218, 1.59", "-15.3385, -136.985, -19.7092, 1.59", "-16.222, -139.014, -19.8413, 0.23", "-16.8281, -140.271, -19.9349, 1.59", "-17.8775, -142.285, -20.1054, 0.23", "-18.998, -144.254, -20.3597, 0.23", "-19.4673, -145.033, -20.4876, 0.91", "-20.4103, -146.502, -20.7772, 0.23", "-20.9827, -147.422, -20.9764, 1.36", "-21.1662, -147.75, -21.0502, 1.36", "-22.3286, -150.149, -21.5639, 0.23", "-22.8354, -151.31, -21.7963, 1.13", "-22.9426, -151.6, -21.8408, 0.23", "-23.5368, -153.288, -22.0339, 0.23", "-23.8367, -154.131, -22.1112, 1.81", "-24.8039, -156.728, -22.3072, 0.23", "-25.3252, -158.098, -22.376, 1.59", "-26.5965, -161.121, -22.6376, 0.23", "-27.1124, -162.303, -22.7689, 2.04", "-27.5864, -163.305, -22.9, 2.04", "-28.391, -165.094, -23.1391, 0.23", "-28.952, -166.483, -23.319, 0.91", "-29.9891, -169.305, -23.6501, 0.23", "-30.4371, -170.723, -23.7931, 1.36", "-30.6316, -171.47, -23.849, 1.36", "-31.4789, -175.268, -24.0227, 0.45", "-31.9243, -177.339, -24.0968, 1.36", "-32.1152, -178.208, -24.1221, 1.36", "-33.0238, -182.37, -24.1965, 0.23", "-33.5003, -184.182, -24.2373, 2.04", "-34.8775, -188.92, -24.3607, 0.23", "-35.3933, -190.397, -24.4178, 0.23", "-35.8562, -191.609, -24.4742, 1.59", "-36.3502, -192.801, -24.5225, 1.59", "-37.9397, -196.368, -24.651, 0.23", "-38.5612, -197.719, -24.691, 1.81", "-40.3519, -201.377, -24.7507, 0.23", "-41.345, -203.334, -24.7517, 1.81", "-42.9964, -206.371, -24.742, 0.23", "-43.6551, -207.461, -24.7333, 1.81", "-44.0947, -208.068, -24.7242, 1.81", "-45.3155, -209.467, -24.692, 0.23", "-46.2457, -210.374, -24.6596, 0.91", "-47.8805, -211.822, -24.6573, 0.23", "-49.4312, -213.103, -24.7037, 1.13", "-51.2761, -214.613, -24.7767, 0.23", "-52.2369, -215.453, -24.8457, 1.36", "-52.8923, -216.078, -24.9099, 1.36", "-55.4961, -218.696, -25.2199, 0.23", "-55.8162, -219.033, -25.2686, 1.81", "-56.4204, -219.717, -25.3621, 1.36", "-59.0721, -222.949, -25.9317, 0.23", "-60.1437, -224.296, -26.2129, 1.13", "-60.2794, -224.473, -26.2523, 1.13", "-62.0195, -226.882, -26.7964, 0.23", "-63.3541, -228.763, -27.2204, 1.13", "-65.2894, -231.609, -27.8369, 0.23", "-66.2159, -233.008, -28.1414, 1.36", "-67.2884, -234.672, -28.497, 0.68", "-68.019, -235.811, -28.7252, 1.36", "-68.5439, -236.623, -28.8658, 1.36", "-69.9065, -238.659, -29.165, 0.45", "-70.8776, -240.196, -29.2957, 0.91", "-71.7032, -241.613, -29.3723, 0.23", "-72.2989, -242.79, -29.4147, 1.59", "-73.2912, -245.262, -29.4549, 0.68", "-73.689, -246.591, -29.4526, 1.36", "-74.2309, -249.274, -29.3936, 0.45", "-74.3941, -250.921, -29.2832, 0.91", "-74.4302, -252.488, -29.1462, 0.91", "-74.3593, -254.884, -28.8586, 0.23", "-74.307, -255.89, -28.7112, 1.13", "-74.2816, -257.088, -28.4876, 1.13", "-74.3551, -259.448, -27.9751, 0.23", "-74.5712, -261.489, -27.4995, 0.91", "-74.8009, -262.773, -27.1579, 0.23", "-75.2359, -264.578, -26.633, 1.59", "-76.1641, -267.569, -25.6882, 0.23", "-76.4121, -268.253, -25.4626, 0.91", "-77.1109, -269.921, -24.9168, 0.23", "-77.84, -271.4, -24.406, 1.36", "-78.0137, -271.717, -24.2983, 1.36", "-79.3068, -273.803, -23.5681, 0.45", "-79.6308, -274.273, -23.4267, 1.36", "-80.2618, -275.179, -23.1848, 1.36", "-81.3459, -276.726, -22.8336, 0.45", "-81.942, -277.571, -22.6861, 0.45", "-82.5065, -278.392, -22.5781, 1.13", "-84.4849, -281.297, -22.3249, 0.23", "-84.9017, -281.92, -22.2759, 1.36", "-85.0604, -282.161, -22.2597, 1.36", "-86.925, -285.002, -22.1207, 0.45", "-87.8536, -286.347, -22.0448, 1.13", "-88.3855, -287.091, -21.9956, 1.13", "-89.7883, -289.041, -21.8625, 0.23", "-90.5356, -290.083, -21.7829, 0.68", "-91.7789, -291.944, -21.6234, 0.91", "-92.8922, -293.759, -21.4539, 0.23", "-93.5892, -294.948, -21.3279, 1.59", "-95.2179, -297.908, -21.0015, 0.23", "-95.7552, -298.931, -20.8904, 0.91", "-97.1825, -301.923, -20.585, 0.23", "-97.5331, -302.731, -20.501, 1.13", "-98.6466, -305.404, -20.2188, 0.23", "-99.5317, -307.504, -19.9799, 0.23", "-100.386, -309.451, -19.721, 0.91", "-101.688, -312.136, -19.3391, 0.23", "-102.37, -313.271, -19.1529, 1.59", "-103.464, -314.822, -18.8722, 0.23", "-104.308, -315.774, -18.6918, 0.91", "-105.418, -316.745, -18.4798, 0.23", "-106.56, -317.55, -18.2896, 1.36", "-109.656, -319.464, -17.8524, 0.23", "-110.652, -320.081, -17.7167, 0.91", "-113.59, -322.008, -17.3203, 0.23", "-115.41, -323.361, -17.0363, 1.81", "-116.703, -324.479, -16.8178, 0.23", "-118.056, -325.913, -16.5146, 0.68", "-119.128, -327.264, -16.1999, 0.23", "-120.266, -328.861, -15.7774, 1.13", "-121.716, -331.189, -15.0525, 0.23", "-122.458, -332.47, -14.5966, 1.36", "-123.607, -334.494, -13.8095, 0.23", "-124.737, -336.341, -13.0282, 0.91", "-126.026, -338.318, -12.1562, 0.23", "-127.212, -340.084, -11.3388, 0.23", "-128.43, -341.833, -10.5312, 0.91", "-128.965, -342.59, -10.1887, 0.23", "-129.603, -343.538, -9.79261, 0.91", "-130.594, -345.162, -9.14631, 0.23", "-131.223, -346.169, -8.71272, 0.91", "-133.725, -349.842, -6.87949, 0.23", "-134.788, -351.232, -6.02892, 1.13", "-136.293, -352.887, -4.79072, 0.45", "-137.635, -354.088, -3.67633, 1.13", "-139.418, -355.14, -2.18348, 0.23", "-140.789, -355.513, -0.983434, 0.23", "-142.392, -355.36, 0.324402, 0.91", "-144.403, -354.789, 1.80209, 0.23", "-145.502, -354.362, 2.45777, 0.23", "-147.324, -353.593, 3.27507, 0.91", "-149.19, -352.86, 3.79194, 0.23", "-151.598, -351.944, 4.24538, 0.23", "-152.101, -351.753, 4.3013, 0.68", "-154.032, -351.077, 4.38424, 0.23", "-155.124, -350.791, 4.27768, 0.23", "-156.947, -350.533, 3.76291, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-5.16803, -23.5684, -0.173031, 0.45", "-7.35078, -26.2677, 0.198928, 0.45", "-7.83504, -26.8456, 0.237286, 1.59", "-8.77595, -27.9536, 0.263453, 1.59", "-10.0773, -29.4725, 0.24218, 1.36", "-11.0589, -30.6274, 0.207652, 0.91", "-12.2813, -32.0551, 0.153241, 0.91", "-13.8579, -33.8344, -0.0123387, 1.13", "-16.4166, -36.7629, -0.334345, 1.59", "-17.7914, -38.3264, -0.527034, 0.91", "-18.4616, -39.0564, -0.624894, 0.23", "-19.2052, -39.8604, -0.74239, 0.91", "-20.3336, -41.0331, -0.918182, 2.04", "-22.2526, -42.8227, -1.12607, 0.23", "-23.153, -43.5987, -1.18913, 1.36", "-24.2359, -44.5108, -1.21652, 1.36", "-25.7078, -45.7525, -1.19546, 0.45", "-27.3532, -47.1829, -1.1132, 1.13", "-29.3412, -48.9324, -0.944781, 0.45", "-30.011, -49.5388, -0.873327, 1.81", "-32.0387, -51.4048, -0.657672, 0.45", "-33.2081, -52.4471, -0.535874, 0.45", "-34.6025, -53.6689, -0.383208, 1.81", "-35.6982, -54.6247, -0.282074, 1.13", "-38.7031, -57.2469, -0.118634, 0.23", "-39.449, -57.8719, -0.0807061, 0.23", "-41.4153, -59.375, -0.00194072, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-5.16803, -23.5684, -0.173031, 0.91", "-6.26897, -24.4656, -1.74503, 0.91", "-7.7921, -25.7069, -3.91989, 0.68", "-8.89298, -26.6041, -5.4918, 1.59", "-10.1094, -27.5954, -7.22866, 0.45", "-10.7945, -28.1537, -8.20694, 0.45", "-11.8491, -29.0132, -9.71281, 1.81" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.45106, -30.0591, 1.98857, 0.23", "-2.76709, -32.4671, 2.73901, 0.23", "-3.00871, -34.1053, 3.2014, 1.36", "-3.31103, -35.9629, 3.66935, 1.36", "-3.52466, -37.2, 3.95944, 0.68", "-3.74041, -38.3691, 4.25018, 1.36", "-3.96079, -39.5731, 4.54737, 1.36", "-4.27419, -41.1716, 4.91361, 1.36", "-4.6913, -43.2502, 5.347, 0.45", "-5.19699, -45.6607, 5.81956, 1.81", "-5.85206, -48.6604, 6.3642, 0.45", "-6.14638, -50.0919, 6.68254, 0.45", "-6.3782, -51.2298, 6.94073, 1.81", "-6.65103, -52.6592, 7.28361, 2.27", "-7.04771, -54.7977, 7.81402, 1.36", "-7.30815, -56.2628, 8.17818, 2.27", "-7.80966, -59.3669, 8.93867, 2.27" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.45106, -30.0591, 1.98857, 0.45", "-1.3246, -31.9194, 2.134, 0.45", "-0.332104, -33.6561, 2.29151, 0.45", "0.70959, -35.4009, 2.51066, 1.13", "2.10159, -37.7543, 2.8522, 0.23", "2.72324, -38.8009, 3.00894, 1.36", "3.54478, -40.2064, 3.21014, 1.36", "4.95891, -42.7197, 3.62917, 0.23", "6.14974, -44.9376, 3.98999, 0.68", "7.30888, -47.2325, 4.31193, 0.23", "7.9624, -48.6052, 4.43199, 1.36", "9.19475, -51.2606, 4.57082, 0.45", "10.1901, -53.5444, 4.65681, 0.45", "10.5125, -54.3699, 4.67664, 1.36", "10.7174, -54.9887, 4.67704, 1.36", "11.2829, -57.0007, 4.6831, 0.23", "11.6156, -58.2674, 4.72335, 0.91", "12.0234, -59.8109, 4.82081, 0.23", "12.243, -60.5806, 4.89924, 0.91", "12.705, -62.0634, 5.12028, 1.59", "13.8134, -65.4459, 5.73134, 0.23", "14.6621, -67.8432, 6.22957, 0.23", "15.0288, -68.8086, 6.42539, 1.81", "16.2917, -71.8019, 6.98282, 0.68", "17.1144, -73.6463, 7.28386, 0.68", "17.6585, -74.7869, 7.44532, 1.36", "18.2414, -75.9429, 7.57054, 1.81", "19.1407, -77.7491, 7.70703, 0.23", "19.7671, -78.9967, 7.75318, 0.91", "20.4813, -80.3903, 7.70636, 0.23", "21.3295, -82.0901, 7.54212, 0.91", "21.8563, -83.1692, 7.42223, 0.91" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-19.112, 10.1278, -3.12945, 0.23", "-20.0542, 11.7861, -3.80398, 0.23", "-20.9972, 13.4784, -4.44075, 1.13", "-21.6463, 14.6154, -4.83539, 0.68", "-22.7532, 16.5105, -5.44203, 1.36", "-23.3801, 17.6019, -5.74903, 1.36", "-24.3388, 19.3178, -6.15202, 1.13", "-25.1633, 20.8304, -6.42976, 0.91", "-25.7701, 21.9727, -6.55604, 0.91", "-26.2777, 22.9926, -6.58771, 0.91", "-27.2237, 24.975, -6.53566, 0.23", "-27.9903, 26.7782, -6.45433, 1.13", "-28.3737, 27.7125, -6.3964, 1.59", "-29.1989, 29.6918, -6.24215, 0.23", "-30.1666, 31.9796, -6.0665, 1.36", "-30.5651, 32.9117, -6.00021, 1.59", "-31.6498, 35.3978, -5.84248, 0.45", "-32.2352, 36.7552, -5.79149, 0.45", "-33.01, 38.6726, -5.75579, 1.59", "-33.4967, 39.979, -5.75707, 0.68", "-34.1617, 42.0138, -5.82691, 0.23", "-34.3904, 42.915, -5.88579, 0.68", "-34.8257, 45.4032, -6.19443, 0.23", "-34.9937, 47.4653, -6.53298, 2.04", "-34.9833, 48.6429, -6.78716, 2.04", "-34.7947, 50.7802, -7.32818, 0.23", "-34.4754, 52.6663, -7.87808, 0.23", "-34.0625, 54.4744, -8.46947, 0.68", "-33.5302, 56.4222, -9.1608, 0.23", "-33.1066, 57.8896, -9.69145, 1.59", "-32.7855, 59.0837, -10.1053, 1.59", "-32.3952, 60.6877, -10.6167, 0.45", "-32.0506, 62.6122, -11.1214, 0.45", "-31.9172, 63.5951, -11.3404, 1.36", "-31.7272, 65.4136, -11.6941, 1.59", "-31.5298, 67.5871, -11.993, 0.23", "-31.3515, 69.5294, -12.1964, 1.59", "-30.8499, 74.0329, -12.5305, 0.23", "-30.7568, 74.67, -12.5622, 1.13", "-30.1883, 77.9991, -12.6566, 0.23", "-29.7701, 80.2775, -12.673, 1.81", "-29.2787, 82.6958, -12.6183, 0.23", "-28.9979, 84.0688, -12.5671, 0.91", "-28.1746, 88.0013, -12.397, 0.23", "-27.768, 90.1519, -12.3191, 2.04", "-27.6192, 91.0413, -12.3158, 2.72", "-27.2132, 94.1119, -12.4404, 0.23", "-26.8703, 97.718, -12.6587, 0.23", "-26.8171, 98.6157, -12.7352, 0.91", "-26.7984, 99.5308, -12.8398, 1.36", "-26.8258, 102.565, -13.2823, 0.45", "-26.9013, 105.081, -13.6369, 1.13", "-26.9735, 106.092, -13.768, 1.13", "-27.1876, 108.186, -13.9845, 0.23", "-27.2769, 108.949, -14.045, 0.91", "-27.5844, 111.372, -14.1693, 0.23", "-27.8366, 113.137, -14.1892, 1.36", "-28.2103, 115.9, -14.2098, 0.45", "-28.283, 116.466, -14.2183, 1.13", "-28.7066, 119.487, -14.3253, 0.23", "-28.8296, 120.38, -14.3738, 2.04", "-29.2679, 123.678, -14.6454, 0.23", "-29.4267, 124.901, -14.7849, 0.91", "-29.524, 125.788, -14.9141, 0.91", "-29.7188, 127.622, -15.2294, 0.23", "-29.9569, 129.968, -15.7285, 2.04", "-30.1421, 131.788, -16.1802, 0.23", "-30.2303, 132.682, -16.4255, 0.91", "-30.5562, 136.369, -17.4587, 0.23", "-30.6746, 137.989, -17.9145, 1.81", "-30.8697, 141.99, -19.015, 0.23", "-30.9566, 144.189, -19.6093, 1.59", "-30.9726, 144.768, -19.7539, 1.59", "-31.0473, 147.775, -20.4343, 0.68", "-31.0726, 148.981, -20.6579, 1.36", "-31.126, 152.013, -21.1232, 0.45", "-31.1787, 153.521, -21.3019, 2.04", "-31.2508, 155.645, -21.5375, 0.23", "-31.3211, 157.165, -21.7032, 0.91", "-31.3651, 158.961, -21.875, 0.23", "-31.361, 160.171, -21.9827, 1.13", "-31.3351, 161.104, -22.0728, 1.13", "-31.1716, 164.361, -22.4495, 0.23", "-31.0449, 166.161, -22.6756, 2.04", "-30.722, 169.712, -23.1602, 0.23", "-30.5992, 171.209, -23.3709, 0.91", "-30.3695, 174.343, -23.8046, 0.23", "-30.2689, 175.928, -24.0239, 1.81", "-30.239, 177.145, -24.1881, 1.81", "-30.3524, 181.066, -24.7285, 0.23", "-30.4953, 182.437, -24.921, 0.91", "-30.667, 183.62, -25.0731, 0.23", "-30.9504, 185.41, -25.2549, 0.91", "-31.1078, 186.544, -25.3649, 0.91", "-31.3024, 189.205, -25.6719, 0.23", "-31.314, 191.107, -25.9229, 1.81", "-31.2382, 192.323, -26.0943, 1.81", "-30.9626, 194.786, -26.4661, 0.23", "-30.6345, 196.71, -26.7812, 1.59", "-29.8029, 200.549, -27.4397, 0.23", "-29.5889, 201.494, -27.5853, 0.91", "-29.1309, 203.831, -27.9472, 0.23", "-28.913, 205.374, -28.1906, 1.59", "-28.6679, 208.676, -28.7038, 0.23", "-28.6723, 209.86, -28.8697, 0.91", "-28.9186, 212.811, -29.2561, 0.23", "-29.2586, 215.319, -29.5702, 1.59", "-29.6597, 217.435, -29.8505, 0.45", "-29.8054, 218.06, -29.9447, 0.91", "-30.2531, 219.63, -30.2145, 0.23", "-30.7298, 221.232, -30.5476, 0.91", "-31.3966, 223.511, -31.0977, 0.23", "-31.6326, 224.27, -31.3076, 1.13", "-32.1251, 225.786, -31.786, 0.23", "-32.3539, 226.472, -32.0259, 0.91", "-32.7382, 227.638, -32.4916, 0.23", "-33.2562, 229.237, -33.1508, 2.04", "-34.1762, 231.816, -34.2448, 0.23", "-34.8121, 233.493, -34.9273, 1.13", "-35.5332, 235.324, -35.6451, 0.23", "-36.3494, 237.304, -36.3914, 1.13", "-36.9332, 238.606, -36.8584, 1.13", "-38.1505, 241.199, -37.6951, 0.23", "-38.4541, 241.874, -37.8705, 0.23", "-39.2268, 243.605, -38.2818, 1.59", "-40.138, 245.647, -38.6846, 0.23", "-40.8362, 247.206, -38.9293, 0.23", "-41.5542, 248.844, -39.1724, 1.59", "-42.8413, 251.93, -39.5529, 0.23", "-42.989, 252.277, -39.593, 0.91", "-43.5122, 253.562, -39.733, 0.23", "-44.2222, 255.442, -39.9314, 0.23", "-44.864, 257.265, -40.1553, 0.91", "-45.7325, 259.766, -40.4969, 0.23", "-46.3998, 261.796, -40.7824, 2.04", "-47.5192, 265.555, -41.3153, 0.23", "-48.063, 267.599, -41.6546, 1.13", "-48.5706, 269.792, -42.057, 0.23", "-48.8261, 271.025, -42.2968, 0.91", "-49.0848, 272.468, -42.5985, 0.23", "-49.4094, 274.552, -43.0536, 2.04", "-49.7847, 276.93, -43.532, 0.23", "-49.9664, 278.088, -43.7589, 0.91", "-50.0562, 278.643, -43.8507, 0.23", "-50.3228, 280.387, -44.1557, 0.91", "-50.6088, 282.218, -44.48, 0.23", "-50.76, 283.363, -44.6454, 1.59" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-19.112, 10.1278, -3.12945, 0.45", "-21.0102, 9.55261, -3.57924, 0.45", "-22.3548, 9.0569, -3.85577, 0.45", "-24.4007, 8.20507, -4.15912, 0.91", "-26.561, 7.18761, -4.46489, 0.68", "-28.045, 6.49991, -4.68633, 0.91", "-29.1784, 5.98994, -4.85702, 1.81", "-31.7763, 4.85127, -5.2468, 0.45", "-33.3253, 4.19279, -5.44283, 1.13", "-35.5236, 3.33341, -5.66845, 0.45", "-37.2123, 2.72243, -5.83555, 1.13", "-38.0792, 2.44895, -5.92857, 1.59", "-39.3941, 2.11933, -6.0855, 0.45", "-40.9634, 1.79232, -6.31451, 0.45", "-42.3089, 1.51148, -6.5296, 0.91", "-43.5223, 1.18082, -6.70426, 1.81", "-43.7241, 1.09579, -6.73754, 1.81", "-45.4645, 0.0951406, -7.10044, 0.23", "-46.729, -0.766934, -7.40237, 0.91", "-47.3135, -1.20911, -7.55, 0.91", "-48.5508, -2.18739, -7.86326, 0.23", "-49.8585, -3.23019, -8.17352, 1.81", "-52.5488, -5.374, -8.7871, 0.23", "-53.3087, -5.97519, -8.95008, 1.13", "-54.1653, -6.62016, -9.10436, 2.04", "-56.0994, -8.05134, -9.43078, 0.23", "-57.1486, -8.79369, -9.58651, 0.23", "-58.0536, -9.43135, -9.70543, 0.91", "-59.6683, -10.5897, -9.89453, 0.23", "-61.042, -11.609, -10.0818, 1.81", "-63.2607, -13.3351, -10.4185, 0.23", "-63.8361, -13.812, -10.5145, 0.23", "-65.0659, -14.8669, -10.7383, 1.13", "-66.135, -15.8351, -10.9526, 1.59", "-67.271, -16.929, -11.192, 0.23", "-68.2404, -17.8727, -11.3855, 0.91", "-69.7318, -19.2476, -11.6668, 0.23", "-70.5331, -19.9685, -11.8135, 1.59", "-72.8117, -21.9325, -12.2101, 0.23", "-74.1986, -23.0913, -12.4343, 0.23", "-76.1967, -24.7089, -12.7285, 1.81", "-80.2548, -27.8641, -13.3185, 0.23", "-81.3884, -28.7476, -13.4714, 1.59", "-82.1191, -29.3088, -13.5642, 1.59", "-84.0376, -30.7317, -13.7826, 0.23", "-84.7753, -31.2879, -13.8641, 0.23", "-85.8012, -32.0719, -13.9841, 1.36", "-88.4956, -34.0302, -14.2675, 0.23", "-89.8059, -34.9239, -14.4126, 1.59", "-90.1911, -35.1646, -14.4521, 1.59", "-92.4073, -36.4078, -14.6699, 0.23", "-93.5487, -37.023, -14.7787, 0.23", "-95.1988, -37.869, -14.9355, 1.81", "-95.8107, -38.1731, -14.9988, 1.81", "-99.6746, -40.199, -15.4269, 0.23", "-101.304, -41.0568, -15.6118, 1.13", "-102.418, -41.6414, -15.746, 0.45", "-103.899, -42.4742, -15.9326, 1.81", "-105.933, -43.7353, -16.2483, 0.23", "-106.726, -44.259, -16.4042, 0.91", "-107.663, -44.8989, -16.6303, 0.91", "-108.592, -45.5783, -16.8838, 0.23", "-109.858, -46.5721, -17.2026, 0.91", "-111.796, -48.2832, -17.6444, 0.23", "-113.089, -49.5738, -17.8573, 0.91", "-113.544, -50.0992, -17.9277, 0.91", "-114.766, -51.6723, -18.0239, 0.23", "-115.839, -53.153, -18.0229, 1.81", "-116.364, -53.8541, -17.9934, 1.81", "-118.288, -56.3563, -17.8321, 0.23", "-120.126, -58.5361, -17.685, 1.13", "-122.136, -60.6814, -17.5625, 0.23", "-123.405, -61.8795, -17.5272, 2.04", "-126.742, -64.7134, -17.567, 0.23", "-127.813, -65.5185, -17.5905, 1.59", "-131.038, -67.6432, -17.7487, 0.23", "-132.209, -68.3608, -17.8476, 0.91", "-133.867, -69.3758, -18.1223, 0.45", "-134.849, -69.995, -18.3294, 0.23", "-135.993, -70.7747, -18.6236, 1.59", "-138.095, -72.3727, -19.2042, 0.23", "-139.792, -73.8679, -19.7663, 1.59", "-141.25, -75.2516, -20.2512, 0.68", "-142.121, -76.1273, -20.5312, 1.36", "-142.74, -76.7722, -20.725, 1.36", "-144.017, -78.0946, -21.0878, 0.23", "-145.083, -79.1458, -21.35, 0.23", "-146.608, -80.4684, -21.6709, 1.59", "-147.088, -80.8609, -21.7604, 1.59", "-147.946, -81.5226, -21.9222, 0.23", "-148.488, -81.9386, -22.0299, 0.91", "-149.772, -82.9351, -22.3002, 0.23", "-150.673, -83.697, -22.5016, 0.23", "-151.486, -84.4402, -22.7015, 1.13", "-151.978, -84.9166, -22.8194, 1.13", "-154.221, -87.175, -23.3357, 0.23", "-155.411, -88.3655, -23.5829, 1.59", "-157.705, -90.5782, -23.9885, 0.23", "-158.523, -91.3321, -24.1187, 0.68", "-160.209, -92.785, -24.3448, 0.23", "-160.793, -93.2568, -24.4053, 0.23", "-162.376, -94.3522, -24.4945, 0.91", "-163.674, -95.0842, -24.5494, 0.23", "-164.982, -95.6075, -24.5962, 1.13", "-166.345, -96.02, -24.6585, 0.23", "-167.061, -96.1881, -24.7106, 0.91", "-168.166, -96.4103, -24.8117, 0.23", "-170.064, -96.708, -25.0157, 1.13", "-172.994, -97.0098, -25.3607, 0.23", "-174.112, -97.0822, -25.5068, 0.91", "-175.935, -97.0684, -25.754, 0.23", "-176.46, -97.055, -25.8272, 0.68", "-177.405, -97.0139, -25.961, 0.23", "-178.282, -96.9377, -26.0747, 0.91", "-178.861, -96.8192, -26.1704, 0.23", "-180.544, -96.2943, -26.4316, 1.13" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "144.115, 336.862, -79.4336, 0.23", "144.761, 338.864, -79.8192, 0.23", "145.143, 340.177, -80.076, 0.23", "145.642, 342.101, -80.4337, 1.13", "145.969, 343.647, -80.7447, 0.23", "146.209, 344.934, -81.0048, 0.91", "146.599, 346.84, -81.3933, 0.23", "146.909, 348.291, -81.6935, 0.23", "147.379, 350.304, -82.1182, 1.59", "147.861, 352.292, -82.5428, 0.68", "148.166, 353.442, -82.7888, 1.13", "148.735, 355.392, -83.1932, 0.23", "149.21, 356.934, -83.5464, 0.91", "149.764, 358.738, -84.0165, 0.23", "150.162, 360.125, -84.3924, 0.91", "150.295, 360.649, -84.5278, 0.23", "150.497, 361.805, -84.8415, 1.13", "150.737, 364.547, -85.6093, 0.23", "150.761, 365.0, -85.7336, 0.91", "150.863, 366.744, -86.1705, 0.23", "150.939, 367.933, -86.4562, 1.81", "151.095, 370.753, -87.0751, 0.23", "151.237, 373.327, -87.6047, 0.91", "151.309, 374.819, -87.8734, 0.23", "151.43, 377.365, -88.3663, 0.68", "151.465, 377.916, -88.4665, 0.23", "151.57, 378.916, -88.6237, 0.91", "151.928, 381.046, -88.8778, 0.23", "152.387, 383.456, -89.1322, 1.13", "152.93, 386.079, -89.4142, 0.23", "153.318, 387.748, -89.5859, 0.23", "153.928, 389.88, -89.7941, 0.23", "154.535, 391.537, -89.9329, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "144.115, 336.862, -79.4336, 0.23", "143.968, 338.336, -80.1787, 0.23", "143.909, 339.172, -80.5718, 1.13", "143.653, 342.031, -81.9372, 0.23", "143.436, 344.469, -83.1013, 0.91", "143.316, 345.807, -83.7407, 0.23", "143.22, 346.883, -84.2544, 1.13", "142.954, 349.597, -85.5385, 0.23", "142.798, 351.352, -86.348, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-19.5434, 16.0689, 11.2162, 0.68", "-21.4608, 16.7255, 11.6845, 0.68", "-23.1955, 17.2659, 12.1428, 0.68", "-25.2714, 17.942, 12.6655, 0.68", "-25.9548, 18.1402, 12.8476, 0.68", "-27.2369, 18.5121, 13.1894, 1.13", "-28.9532, 19.0099, 13.647, 0.91", "-30.3112, 19.4131, 14.0477, 0.23", "-32.2916, 19.9794, 14.6498, 0.23", "-34.1034, 20.414, 15.1993, 0.23" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-19.5434, 16.0689, 11.2162, 0.45", "-19.1088, 18.1674, 11.4592, 0.45", "-18.6753, 20.2607, 11.7017, 0.68", "-18.285, 22.1451, 11.9199, 0.23", "-18.1166, 22.9582, 12.0141, 0.23", "-17.8064, 24.4559, 12.1876, 0.91", "-17.3587, 26.6178, 12.438, 0.23" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-11.8491, -29.0132, -9.71281, 0.23", "-14.1376, -29.9732, -9.50158, 0.23", "-15.3608, -30.5461, -9.41706, 0.23", "-16.5077, -31.1381, -9.39805, 0.91", "-18.4956, -32.2293, -9.41965, 0.45", "-20.0548, -33.118, -9.46169, 1.13", "-20.9949, -33.673, -9.49635, 0.23", "-21.746, -34.1634, -9.56735, 0.68", "-23.6077, -35.4135, -9.79554, 0.23", "-24.9422, -36.3288, -10.0164, 1.13", "-26.9019, -37.6484, -10.3442, 0.23", "-27.5166, -38.0452, -10.4586, 0.91", "-28.5583, -38.7053, -10.6796, 0.23", "-29.9218, -39.5279, -11.0349, 0.91", "-31.5877, -40.4782, -11.5113, 0.23", "-32.3708, -40.8932, -11.7536, 0.68", "-33.4648, -41.4562, -12.0963, 0.23", "-34.4119, -41.9136, -12.3864, 1.59", "-38.1977, -43.6652, -13.4982, 0.23", "-39.2536, -44.1275, -13.7717, 1.13", "-41.7132, -45.1942, -14.2767, 0.23", "-42.8461, -45.7187, -14.463, 0.91", "-45.5009, -46.9627, -14.7788, 0.23", "-46.3739, -47.3643, -14.8411, 1.13", "-48.4565, -48.3272, -14.9308, 0.23", "-51.4493, -49.7378, -15.0502, 1.59", "-54.7064, -51.232, -15.1463, 0.23", "-56.189, -51.8767, -15.1883, 0.45", "-57.0724, -52.2559, -15.2251, 0.23", "-58.432, -52.8049, -15.3313, 0.23", "-60.0994, -53.4466, -15.6187, 0.68", "-61.9937, -54.0891, -16.1082, 0.23", "-62.4628, -54.2462, -16.3044, 0.91", "-63.7345, -54.7045, -16.9089, 0.23", "-64.1144, -54.8526, -17.1045, 1.13", "-66.3794, -55.7548, -18.3673, 0.23", "-67.4356, -56.2206, -19.1003, 0.91", "-69.5458, -57.3784, -20.8696, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-11.8491, -29.0132, -9.71281, 0.91", "-12.3618, -30.1305, -10.1049, 0.91", "-13.4188, -32.6763, -10.9084, 0.23", "-13.8288, -33.8328, -11.2691, 0.91", "-14.6153, -36.4195, -12.1239, 0.23", "-14.9045, -37.5213, -12.5336, 1.81", "-15.4545, -39.783, -13.4078, 0.91", "-15.9675, -42.2598, -14.388, 2.27", "-16.4034, -44.3697, -15.2097, 0.23", "-16.7839, -46.0726, -15.9694, 0.91", "-17.3865, -48.3325, -17.0662, 0.23", "-17.7674, -49.4157, -17.6214, 1.81", "-18.7318, -51.44, -18.6644, 0.23", "-19.3992, -52.5637, -19.173, 0.23", "-20.3808, -54.0036, -19.6919, 1.81", "-21.7585, -55.92, -20.1668, 0.23", "-22.5288, -56.9681, -20.3529, 2.04", "-23.7381, -58.5986, -20.5756, 1.59", "-25.1893, -60.5556, -20.7836, 0.23", "-26.5357, -62.3701, -20.9541, 1.81", "-28.788, -65.1915, -21.1732, 0.23", "-29.9115, -66.4763, -21.2945, 1.81", "-32.5419, -69.2514, -21.61, 0.23", "-33.7835, -70.4057, -21.7695, 1.13", "-34.678, -71.1348, -21.9011, 1.81", "-36.1432, -72.2577, -22.1653, 0.23", "-37.3602, -73.228, -22.4474, 0.91", "-39.5023, -75.0577, -23.0086, 0.23", "-40.5989, -76.0624, -23.3627, 1.81", "-42.6239, -78.0252, -24.0642, 0.23", "-43.8256, -79.2437, -24.5375, 1.59", "-46.1508, -81.6619, -25.516, 0.45", "-46.8751, -82.4376, -25.8228, 1.13", "-48.4302, -84.0915, -26.4683, 0.23", "-49.2508, -85.0349, -26.8165, 1.81", "-51.3886, -87.7005, -27.7561, 0.23", "-52.0097, -88.576, -28.0244, 0.91", "-53.3737, -90.9082, -28.5943, 0.23", "-54.0398, -92.1911, -28.8772, 0.91", "-55.1568, -94.7702, -29.3298, 0.23", "-55.6112, -96.0844, -29.5266, 1.81", "-56.1109, -98.239, -29.7295, 0.23", "-56.4807, -100.315, -29.9331, 1.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-7.80966, -59.3669, 8.93867, 1.36", "-8.34502, -60.5578, 9.1676, 1.36", "-8.8188, -61.7242, 9.42535, 1.36", "-9.51911, -63.6872, 9.85286, 0.68", "-9.81408, -64.514, 10.0329, 0.91", "-10.3407, -65.9899, 10.3544, 0.45", "-10.5919, -66.6941, 10.5077, 0.91", "-11.1263, -68.4734, 10.931, 0.23", "-11.4679, -69.5718, 11.2287, 0.23" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.80966, -59.3669, 8.93867, 0.68", "-6.61254, -62.1628, 9.15161, 0.68", "-5.6102, -64.5419, 9.20272, 0.68", "-4.65296, -66.7662, 9.19425, 0.23", "-3.94563, -68.4252, 9.22675, 0.91", "-3.66011, -69.1331, 9.24751, 0.91", "-2.50769, -72.1239, 9.37462, 0.23", "-1.72774, -74.2114, 9.53778, 0.68", "-0.817514, -76.8305, 9.76421, 0.23", "0.413995, -80.3169, 10.0745, 0.23", "0.820521, -81.5285, 10.1947, 0.23", "1.4026, -83.3476, 10.4198, 0.91", "1.86753, -84.9019, 10.6992, 0.23", "2.42686, -86.9632, 11.2428, 1.13" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-50.76, 283.363, -44.6454, 0.23", "-51.3843, 285.86, -44.9812, 0.23", "-51.7572, 287.399, -45.151, 0.23", "-52.1373, 289.021, -45.281, 1.59", "-52.8303, 292.018, -45.4151, 0.23", "-53.2014, 293.542, -45.4534, 1.59", "-53.876, 296.326, -45.4886, 0.45", "-54.2366, 297.778, -45.4527, 0.45", "-54.6063, 299.316, -45.376, 1.59", "-55.2347, 302.063, -45.1893, 0.23", "-55.5567, 303.554, -45.0811, 0.23", "-55.8991, 305.319, -44.9549, 0.91", "-56.0932, 306.593, -44.9047, 0.91", "-56.2961, 308.11, -44.8979, 0.23", "-56.4321, 309.333, -44.9338, 1.13", "-56.565, 310.843, -45.0259, 0.45", "-56.6404, 311.769, -45.0942, 1.13", "-57.2246, 316.574, -45.5219, 0.23", "-57.3486, 317.371, -45.5998, 1.13", "-57.6349, 318.851, -45.7661, 1.13", "-58.0582, 320.639, -45.9986, 0.23", "-58.6616, 322.669, -46.3843, 0.91", "-59.3994, 324.741, -46.8678, 0.23", "-59.9745, 326.136, -47.256, 0.91", "-60.9994, 328.611, -48.0147, 0.23", "-61.6319, 330.208, -48.572, 0.91", "-62.7894, 333.509, -49.8277, 0.23", "-63.0129, 334.421, -50.1996, 1.13", "-63.0829, 335.002, -50.4402, 0.23", "-63.1026, 336.174, -50.9108, 1.13", "-62.9774, 337.545, -51.43, 0.23", "-62.7366, 338.852, -51.8214, 1.13", "-62.1703, 341.293, -52.4485, 0.23", "-62.0986, 341.656, -52.558, 0.91", "-61.9596, 342.783, -52.9181, 0.23", "-61.9333, 343.792, -53.2859, 0.91", "-62.0841, 346.302, -54.2691, 0.23", "-62.2603, 347.6, -54.8598, 1.13", "-62.5459, 348.991, -55.5314, 0.23", "-62.8281, 350.188, -56.1487, 0.91", "-63.1258, 351.303, -56.7578, 0.23", "-63.4265, 352.39, -57.3412, 0.68", "-64.1066, 354.613, -58.5244, 0.23", "-64.4951, 355.798, -59.1055, 1.13", "-65.2069, 357.958, -60.0006, 0.23", "-65.7748, 359.654, -60.5945, 1.36", "-66.1619, 360.745, -60.8988, 0.45", "-66.5276, 361.654, -61.1019, 0.91", "-67.9931, 364.863, -61.5788, 0.23", "-68.8979, 366.622, -61.7463, 1.81", "-69.9083, 368.237, -61.7855, 0.23", "-70.5739, 369.152, -61.7751, 0.23", "-71.5732, 370.27, -61.7673, 0.68", "-72.6725, 371.302, -61.7609, 0.23", "-73.973, 372.302, -61.7528, 0.91", "-75.5105, 373.348, -61.8179, 0.23", "-76.1432, 373.734, -61.8436, 1.13", "-78.3023, 374.999, -61.857, 0.23", "-79.2381, 375.533, -61.8327, 0.91", "-81.4215, 376.829, -61.6232, 0.23", "-82.7871, 377.691, -61.3976, 0.91", "-83.3406, 378.098, -61.2475, 0.23", "-84.4647, 379.082, -60.7917, 0.91", "-85.4516, 380.44, -60.0035, 0.23", "-86.1464, 381.832, -59.0899, 0.23", "-86.1765, 382.442, -58.6438, 0.23", "-85.7989, 383.667, -57.7671, 0.23", "-84.9804, 385.064, -56.8576, 0.91", "-83.163, 386.983, -55.7719, 0.23" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-50.76, 283.363, -44.6454, 0.23", "-49.6761, 284.794, -44.3097, 0.23", "-48.7168, 285.871, -44.1718, 0.23", "-47.4388, 287.245, -44.1188, 0.23", "-46.9265, 287.786, -44.1238, 0.91", "-45.2816, 289.525, -44.1809, 0.23", "-43.5999, 291.235, -44.2585, 0.23", "-42.0586, 292.659, -44.4238, 0.68", "-40.6809, 293.811, -44.5346, 0.23", "-39.1011, 295.05, -44.6076, 0.23", "-37.588, 296.117, -44.5933, 0.23", "-35.6814, 297.308, -44.4507, 0.68", "-34.143, 298.133, -44.2502, 0.23", "-31.3141, 299.408, -43.7432, 0.23", "-30.0008, 299.925, -43.4748, 0.91", "-27.8098, 300.668, -42.9875, 0.23", "-26.1382, 301.153, -42.5855, 1.13", "-24.4042, 301.605, -42.1329, 1.13", "-21.7949, 302.196, -41.4457, 0.23" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-180.544, -96.2943, -26.4316, 0.23", "-182.012, -98.3224, -26.6919, 0.23", "-182.972, -99.6664, -26.8628, 0.68", "-183.555, -100.473, -27.0118, 0.23", "-184.301, -101.469, -27.2243, 0.91", "-186.061, -103.725, -27.7425, 0.23", "-186.301, -104.004, -27.81, 1.13", "-186.834, -104.517, -27.9571, 1.13", "-188.201, -105.586, -28.3425, 0.23", "-189.09, -106.132, -28.6173, 0.45", "-189.494, -106.32, -28.7449, 0.23", "-190.919, -106.886, -29.201, 0.91", "-192.578, -107.576, -29.7255, 0.23", "-193.838, -108.194, -30.0981, 0.68", "-194.673, -108.707, -30.3417, 0.23", "-195.403, -109.308, -30.5682, 0.68", "-196.614, -110.561, -30.9551, 0.23", "-197.072, -111.132, -31.1019, 0.68", "-198.238, -112.728, -31.4434, 0.23", "-199.147, -113.972, -31.6684, 0.23", "-200.631, -115.968, -31.9436, 1.36", "-201.561, -117.176, -32.0948, 0.45", "-202.045, -117.74, -32.1587, 0.91", "-202.519, -118.25, -32.2121, 0.23", "-203.309, -119.016, -32.2964, 0.91", "-204.957, -120.515, -32.4382, 0.45", "-205.527, -121.006, -32.4914, 1.13", "-206.677, -121.994, -32.5938, 0.23", "-207.696, -122.897, -32.687, 0.68", "-208.376, -123.498, -32.7477, 0.23", "-209.919, -124.784, -32.8776, 0.91", "-210.369, -125.101, -32.9084, 0.23", "-211.915, -126.009, -33.0208, 0.91", "-212.923, -126.455, -33.0907, 0.23", "-214.245, -126.898, -33.1936, 0.68", "-215.128, -127.117, -33.2629, 0.23", "-217.597, -127.51, -33.479, 0.91", "-219.02, -127.585, -33.5987, 0.23", "-220.279, -127.502, -33.6996, 0.91", "-221.413, -127.333, -33.7846, 0.23", "-222.728, -126.981, -33.869, 0.23", "-224.677, -126.254, -33.9613, 0.68", "-226.813, -125.256, -34.0707, 0.23", "-227.937, -124.679, -34.1227, 0.91", "-228.263, -124.498, -34.1467, 0.23", "-230.609, -123.117, -34.3617, 0.91", "-232.089, -122.282, -34.5329, 0.23", "-233.362, -121.681, -34.7445, 0.23", "-234.777, -121.325, -34.981, 0.91", "-235.924, -121.225, -35.1623, 0.23", "-237.518, -121.355, -35.3883, 0.23", "-238.738, -121.7, -35.5547, 0.23", "-241.256, -122.828, -35.7731, 1.59", "-244.364, -124.451, -35.9647, 0.45", "-245.424, -125.095, -36.0141, 0.45", "-247.209, -126.331, -36.0468, 1.13", "-248.724, -127.55, -36.0496, 0.23", "-250.373, -129.075, -35.9892, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-180.544, -96.2943, -26.4316, 0.23", "-180.995, -95.4946, -26.2452, 0.23", "-182.144, -93.4016, -25.7959, 0.91", "-182.841, -92.0955, -25.5415, 0.23", "-183.642, -90.584, -25.2689, 1.13", "-184.639, -88.7027, -24.9297, 0.23", "-185.691, -86.7178, -24.5717, 0.23", "-186.112, -85.9444, -24.4292, 0.23", "-186.703, -84.8315, -24.2586, 0.91", "-187.066, -84.1714, -24.1605, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-56.4807, -100.315, -29.9331, 0.23", "-58.2536, -101.724, -30.2468, 0.23", "-59.1954, -102.311, -30.2067, 0.91", "-60.2218, -102.878, -30.4261, 0.23", "-61.63, -103.599, -31.0578, 0.23", "-63.175, -104.443, -31.9315, 0.68", "-65.9967, -105.985, -33.7551, 0.23", "-66.6609, -106.351, -34.2524, 0.91", "-70.0603, -108.547, -37.223, 0.23", "-71.6229, -109.793, -38.8978, 0.23", "-72.2492, -110.423, -39.7215, 0.23", "-72.6566, -110.887, -40.3659, 1.13", "-73.8489, -112.465, -42.6007, 0.45", "-74.4121, -113.325, -43.6657, 1.13", "-75.7151, -115.705, -45.7513, 0.23", "-76.4486, -117.108, -46.8493, 1.13" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-56.4807, -100.315, -29.9331, 0.23", "-56.9058, -103.558, -29.5581, 0.23", "-57.1175, -105.051, -29.379, 1.13", "-57.3475, -106.532, -29.2027, 0.23", "-57.7098, -108.661, -28.969, 1.59", "-58.1981, -111.4, -28.6894, 0.23", "-58.6821, -114.143, -28.4411, 0.91", "-59.0269, -115.975, -28.2874, 0.23", "-59.2602, -117.239, -28.2366, 0.91", "-59.7638, -119.99, -28.2492, 0.23", "-59.9804, -121.187, -28.3171, 0.91", "-60.5403, -124.435, -28.6231, 0.23", "-60.6852, -125.318, -28.7348, 1.36", "-61.0582, -127.452, -29.0598, 0.23", "-61.2511, -128.65, -29.2462, 0.91", "-61.643, -131.093, -29.6213, 0.23", "-61.8691, -132.545, -29.8207, 1.59", "-62.1121, -134.031, -29.9998, 0.45", "-62.3032, -135.216, -30.1035, 0.45", "-62.7568, -137.869, -30.2333, 1.13", "-62.9775, -139.147, -30.2909, 0.23", "-63.2288, -140.643, -30.3598, 1.13", "-63.6095, -142.87, -30.4753, 0.23", "-64.2023, -146.146, -30.6748, 1.81", "-64.6041, -148.14, -30.827, 0.23", "-64.855, -149.328, -30.9301, 0.91", "-65.6402, -153.183, -31.2994, 0.23", "-65.7756, -153.849, -31.3545, 1.36", "-66.3394, -156.823, -31.5574, 0.23", "-66.7131, -158.914, -31.6418, 0.91", "-66.9853, -160.686, -31.662, 0.23", "-67.2995, -162.801, -31.6213, 0.23", "-67.6385, -164.895, -31.5004, 1.59", "-67.7925, -165.78, -31.4283, 1.59", "-68.3277, -168.594, -31.1346, 0.23", "-68.7146, -170.358, -30.9317, 1.36", "-68.9048, -171.09, -30.8658, 1.36", "-69.4236, -172.93, -30.8003, 0.45", "-69.8425, -174.441, -30.8397, 1.13", "-69.9998, -175.078, -30.8888, 1.13", "-70.6621, -178.213, -31.2879, 0.23", "-70.9185, -179.803, -31.5178, 1.36", "-71.101, -182.057, -31.8606, 0.23", "-71.0983, -183.272, -32.0496, 0.91", "-70.9963, -185.318, -32.3638, 0.23", "-70.8807, -186.505, -32.5376, 0.23", "-70.6849, -187.761, -32.7183, 0.91", "-70.4162, -189.387, -32.9109, 0.23", "-70.1608, -190.888, -33.048, 0.68", "-70.0038, -191.883, -33.0962, 0.23", "-69.8986, -192.524, -33.0739, 0.68", "-69.6081, -194.166, -32.9265, 0.23", "-69.4124, -195.332, -32.7601, 0.68", "-69.0291, -197.759, -32.2975, 0.23", "-68.6448, -200.308, -31.7859, 0.23", "-68.2352, -203.131, -31.1794, 0.23", "-68.1078, -204.17, -30.9286, 0.23", "-67.9022, -205.99, -30.4047, 0.23", "-67.7078, -207.771, -29.8441, 1.13", "-67.5729, -209.419, -29.2665, 0.23", "-67.514, -210.146, -29.0371, 0.91", "-67.0814, -212.104, -28.5555, 0.23", "-67.4176, -211.648, -28.7071, 0.68" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_30", "dend_27", "dend_20", "dend_13", "dend_0", "dend_47", "dend_38", "dend_36", "dend_31", "dend_29", "dend_28", "dend_22", "dend_21", "dend_17", "dend_14", "dend_6", "dend_1", "dend_46", "dend_39", "dend_35", "dend_32", "dend_24", "dend_23", "dend_19", "dend_18", "dend_16", "dend_15", "dend_12", "dend_7", "dend_3", "dend_2", "dend_43", "dend_40", "dend_34", "dend_33", "dend_26", "dend_25", "dend_11", "dend_8", "dend_5", "dend_4", "dend_45", "dend_44", "dend_42", "dend_41", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_37", "dend_30", "dend_27", "dend_20", "dend_13", "dend_0", "dend_47", "dend_38", "dend_36", "dend_31", "dend_29", "dend_28", "dend_22", "dend_21", "dend_17", "dend_14", "dend_6", "dend_1", "dend_46", "dend_39", "dend_35", "dend_32", "dend_24", "dend_23", "dend_19", "dend_18", "dend_16", "dend_15", "dend_12", "dend_7", "dend_3", "dend_2", "dend_43", "dend_40", "dend_34", "dend_33", "dend_26", "dend_25", "dend_11", "dend_8", "dend_5", "dend_4", "dend_45", "dend_44", "dend_42", "dend_41", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_6", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_LBC_41f715f2d0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_47, id: dend_47, parent: dend_37
create dend_47
public dend_47
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_27, dend_20, dend_13, dend_0, dend_47, dend_38, dend_36, dend_31, dend_29, dend_28, dend_22, dend_21, dend_17, dend_14, dend_6, dend_1, dend_46, dend_39, dend_35, dend_32, dend_24, dend_23, dend_19, dend_18, dend_16, dend_15, dend_12, dend_7, dend_3, dend_2, dend_43, dend_40, dend_34, dend_33, dend_26, dend_25, dend_11, dend_8, dend_5, dend_4, dend_45, dend_44, dend_42, dend_41, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_27, dend_20, dend_13, dend_0, dend_47, dend_38, dend_36, dend_31, dend_29, dend_28, dend_22, dend_21, dend_17, dend_14, dend_6, dend_1, dend_46, dend_39, dend_35, dend_32, dend_24, dend_23, dend_19, dend_18, dend_16, dend_15, dend_12, dend_7, dend_3, dend_2, dend_43, dend_40, dend_34, dend_33, dend_26, dend_25, dend_11, dend_8, dend_5, dend_4, dend_45, dend_44, dend_42, dend_41, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_37(0), soma_0(0.49999992082157346)
    connect dend_30(0), soma_0(0.49999992082157346)
    connect dend_27(0), soma_0(0.49999992082157346)
    connect dend_20(0), soma_0(0.49999992082157346)
    connect dend_13(0), soma_0(0.49999992082157346)
    connect dend_0(0), soma_0(0.49999992082157346)
    connect axon_0(0), soma_0(1.0)
    connect dend_47(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.56354, -2.32023, 0.0, 4.89867 ) }
    soma_0 { pt3dadd( -7.66852, -2.09843, 0.0, 8.85912 ) }
    soma_0 { pt3dadd( -6.77349, -1.87663, 0.0, 12.5371 ) }
    soma_0 { pt3dadd( -5.87847, -1.65483, 0.0, 13.9982 ) }
    soma_0 { pt3dadd( -4.98344, -1.43303, 0.0, 14.8266 ) }
    soma_0 { pt3dadd( -4.08842, -1.21123, 0.0, 15.6937 ) }
    soma_0 { pt3dadd( -3.1934, -0.989429, 0.0, 16.4025 ) }
    soma_0 { pt3dadd( -2.29837, -0.767629, 0.0, 16.5748 ) }
    soma_0 { pt3dadd( -1.40335, -0.545828, 0.0, 16.6806 ) }
    soma_0 { pt3dadd( -0.508322, -0.324028, 0.0, 16.6604 ) }
    soma_0 { pt3dadd( 0.386703, -0.102228, 0.0, 16.5142 ) }
    soma_0 { pt3dadd( 1.28173, 0.119572, 0.0, 16.311 ) }
    soma_0 { pt3dadd( 2.17675, 0.341372, 0.0, 16.1002 ) }
    soma_0 { pt3dadd( 3.07178, 0.563173, 0.0, 15.6503 ) }
    soma_0 { pt3dadd( 3.9668, 0.784973, 0.0, 14.9085 ) }
    soma_0 { pt3dadd( 4.86183, 1.00677, 0.0, 14.1259 ) }
    soma_0 { pt3dadd( 5.75685, 1.22857, 0.0, 12.5788 ) }
    soma_0 { pt3dadd( 6.65188, 1.45037, 0.0, 10.8169 ) }
    soma_0 { pt3dadd( 7.5469, 1.67217, 0.0, 8.79928 ) }
    soma_0 { pt3dadd( 8.44192, 1.89397, 0.0, 6.39095 ) }
    soma_0 { pt3dadd( 9.33695, 2.11577, 0.0, 3.65543 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -6.88458, 2.01569, -2.55, 2.95 ) }
    dend_37 { pt3dadd( -8.06335, 2.79028, -2.55, 2.95 ) }
    dend_37 { pt3dadd( -10.1821, 4.18256, -2.55, 2.04 ) }
    dend_37 { pt3dadd( -12.9056, 5.97221, -2.55, 2.04 ) }
    dend_37 { pt3dadd( -13.1874, 6.15737, -2.55, 2.04 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 26/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 7.40542, -0.346809, -5.45, 1.81 ) }
    dend_30 { pt3dadd( 8.76566, 0.393304, -6.12186, 1.81 ) }
    dend_30 { pt3dadd( 10.3593, 1.57504, -6.89084, 2.04 ) }
    dend_30 { pt3dadd( 11.6498, 2.6651, -7.46151, 2.04 ) }
    dend_30 { pt3dadd( 12.7593, 3.66921, -7.91724, 1.59 ) }
    dend_30 { pt3dadd( 13.4839, 4.33607, -8.19974, 1.59 ) }
    dend_30 { pt3dadd( 14.9138, 5.70521, -8.73043, 1.59 ) }
    dend_30 { pt3dadd( 16.2176, 7.13625, -9.20914, 2.04 ) }
    dend_30 { pt3dadd( 17.1067, 8.24228, -9.52437, 1.13 ) }
    dend_30 { pt3dadd( 17.8843, 9.26722, -9.75734, 1.81 ) }
    dend_30 { pt3dadd( 18.7291, 10.3265, -9.94177, 2.27 ) }
    dend_30 { pt3dadd( 19.5253, 11.2989, -10.0821, 2.72 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.59542, 0.556191, 5.69, 1.81 ) }
    dend_27 { pt3dadd( 7.73247, 1.11494, 6.67506, 1.81 ) }
    dend_27 { pt3dadd( 9.23295, 1.50726, 7.3667, 1.81 ) }
    dend_27 { pt3dadd( 10.9694, 1.96127, 8.16712, 2.27 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 42/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.93458, 2.05769, 5.69, 1.81 ) }
    dend_20 { pt3dadd( -5.40125, 3.35452, 6.15687, 1.81 ) }
    dend_20 { pt3dadd( -7.12948, 4.88262, 6.707, 1.81 ) }
    dend_20 { pt3dadd( -8.52244, 6.11427, 7.15041, 1.81 ) }
    dend_20 { pt3dadd( -10.2016, 7.59897, 7.68491, 2.04 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.69542, -4.31581, -3.89, 2.72 ) }
    dend_13 { pt3dadd( 7.48715, -6.45528, -4.15736, 2.04 ) }
    dend_13 { pt3dadd( 8.76632, -9.91191, -4.58932, 2.04 ) }
    dend_13 { pt3dadd( 9.76712, -12.6164, -4.92729, 2.72 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 51/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.08458, -9.11431, -0.13, 3.18 ) }
    dend_0 { pt3dadd( -3.17112, -10.6274, -0.0334648, 2.5 ) }
    dend_0 { pt3dadd( -3.41549, -14.8995, 0.239106, 2.27 ) }
    dend_0 { pt3dadd( -3.60646, -18.2383, 0.452125, 2.72 ) }
    dend_0 { pt3dadd( -3.73821, -20.5418, 0.59909, 3.18 ) }
    dend_0 { pt3dadd( -3.80803, -21.7624, 0.676969, 3.4 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 57/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.33695, 2.11577, 0.0, 1.23063 ) }
    axon_0 { pt3dadd( 23.8965, 5.72385, 0.0, 1.23063 ) }
    axon_0 { pt3dadd( 38.4561, 9.33193, 0.0, 1.23063 ) }
    // Section: dend_47, id: dend_47, parent: dend_37 (entry count 60/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.1874, 6.15737, -2.55, 0.91 ) }
    dend_47 { pt3dadd( -14.9818, 6.04175, -1.33726, 0.91 ) }
    dend_47 { pt3dadd( -16.7708, 6.02742, -0.125795, 0.91 ) }
    dend_47 { pt3dadd( -18.4942, 6.01775, 1.02699, 0.91 ) }
    dend_47 { pt3dadd( -19.6824, 5.98818, 1.80075, 0.45 ) }
    dend_47 { pt3dadd( -21.0904, 5.92736, 2.68702, 1.36 ) }
    dend_47 { pt3dadd( -23.0129, 5.83838, 3.84967, 0.68 ) }
    dend_47 { pt3dadd( -24.3321, 5.80614, 4.5855, 0.68 ) }
    dend_47 { pt3dadd( -25.9628, 5.73162, 5.55785, 1.36 ) }
    dend_47 { pt3dadd( -27.0917, 5.68018, 6.23213, 0.45 ) }
    dend_47 { pt3dadd( -27.7273, 5.64343, 6.60802, 1.13 ) }
    dend_47 { pt3dadd( -28.9741, 5.51889, 7.34398, 0.23 ) }
    dend_47 { pt3dadd( -30.1065, 5.31699, 8.02822, 0.91 ) }
    dend_47 { pt3dadd( -32.844, 4.78931, 9.73362, 0.23 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 74/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -13.1874, 6.15737, -2.55, 2.04 ) }
    dend_38 { pt3dadd( -15.1754, 7.50042, -2.86521, 2.04 ) }
    dend_38 { pt3dadd( -16.842, 8.62628, -3.12945, 2.04 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 77/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 19.5253, 11.2989, -10.0821, 0.68 ) }
    dend_36 { pt3dadd( 20.6486, 11.0923, -11.7358, 0.68 ) }
    dend_36 { pt3dadd( 22.6359, 10.7609, -14.2696, 2.27 ) }
    dend_36 { pt3dadd( 24.1276, 10.5465, -15.8681, 1.59 ) }
    dend_36 { pt3dadd( 25.7124, 10.3339, -17.3203, 0.68 ) }
    dend_36 { pt3dadd( 26.4977, 10.254, -17.9525, 1.59 ) }
    dend_36 { pt3dadd( 27.0323, 10.2056, -18.3702, 1.81 ) }
    dend_36 { pt3dadd( 29.2843, 10.0062, -20.1194, 0.91 ) }
    dend_36 { pt3dadd( 30.7263, 9.88098, -21.2069, 0.45 ) }
    dend_36 { pt3dadd( 32.2848, 9.74033, -22.3782, 2.04 ) }
    dend_36 { pt3dadd( 33.6362, 9.6125, -23.4895, 0.91 ) }
    dend_36 { pt3dadd( 35.0885, 9.58119, -24.812, 2.5 ) }
    dend_36 { pt3dadd( 38.012, 9.77331, -27.863, 0.23 ) }
    dend_36 { pt3dadd( 38.7462, 9.86098, -28.7168, 2.27 ) }
    dend_36 { pt3dadd( 40.095, 10.031, -30.3756, 0.68 ) }
    dend_36 { pt3dadd( 41.8528, 10.2803, -32.5254, 0.68 ) }
    dend_36 { pt3dadd( 43.5001, 10.5193, -34.4775, 1.59 ) }
    dend_36 { pt3dadd( 45.3043, 10.8134, -36.3179, 0.45 ) }
    dend_36 { pt3dadd( 46.5853, 11.01, -37.4507, 1.36 ) }
    dend_36 { pt3dadd( 48.4223, 11.254, -38.9713, 0.23 ) }
    dend_36 { pt3dadd( 49.1869, 11.33, -39.5391, 0.91 ) }
    dend_36 { pt3dadd( 49.7002, 11.3458, -39.842, 0.23 ) }
    dend_36 { pt3dadd( 51.5422, 11.3713, -40.7347, 1.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( 53.7186, 11.5924, -41.7695, 0.68 ) }
    dend_36 { pt3dadd( 54.3408, 11.7323, -42.1197, 1.13 ) }
    dend_36 { pt3dadd( 55.4542, 12.1019, -42.9277, 0.23 ) }
    dend_36 { pt3dadd( 56.4895, 12.4736, -43.8272, 2.04 ) }
    dend_36 { pt3dadd( 58.7008, 13.2717, -45.9263, 0.23 ) }
    dend_36 { pt3dadd( 60.721, 13.9357, -48.1207, 2.04 ) }
    dend_36 { pt3dadd( 61.9245, 14.266, -49.5647, 2.5 ) }
    dend_36 { pt3dadd( 63.8025, 14.664, -52.063, 0.23 ) }
    dend_36 { pt3dadd( 64.8491, 14.8317, -53.5442, 0.68 ) }
    dend_36 { pt3dadd( 65.4492, 14.9046, -54.4217, 0.23 ) }
    dend_36 { pt3dadd( 66.5116, 14.9267, -55.9277, 1.81 ) }
    dend_36 { pt3dadd( 67.9202, 14.8712, -57.565, 0.23 ) }
    dend_36 { pt3dadd( 68.974, 14.809, -58.6266, 0.23 ) }
    dend_36 { pt3dadd( 70.0118, 14.7731, -59.5515, 1.59 ) }
    dend_36 { pt3dadd( 71.1762, 14.7965, -60.5423, 0.45 ) }
    dend_36 { pt3dadd( 71.8979, 14.8571, -61.1651, 1.81 ) }
    dend_36 { pt3dadd( 73.0465, 15.028, -62.1282, 0.23 ) }
    dend_36 { pt3dadd( 75.2362, 15.384, -63.9769, 2.04 ) }
    dend_36 { pt3dadd( 77.2957, 15.7682, -65.8788, 0.23 ) }
    dend_36 { pt3dadd( 77.608, 15.846, -66.1943, 0.91 ) }
    dend_36 { pt3dadd( 78.4629, 16.0982, -67.0535, 0.23 ) }
    dend_36 { pt3dadd( 78.8651, 16.2067, -67.4683, 1.13 ) }
    dend_36 { pt3dadd( 79.8159, 16.3776, -68.3884, 1.59 ) }
    dend_36 { pt3dadd( 81.3039, 16.501, -69.5581, 0.23 ) }
    dend_36 { pt3dadd( 82.2068, 16.4506, -70.1315, 0.91 ) }
    dend_36 { pt3dadd( 83.2459, 16.3567, -70.6756, 0.23 ) }
    dend_36 { pt3dadd( 84.7125, 16.1342, -71.2964, 1.59 ) }
    dend_36 { pt3dadd( 86.3937, 15.7505, -71.9825, 0.68 ) }
    dend_36 { pt3dadd( 88.1256, 15.2599, -72.6302, 1.13 ) }
    dend_36 { pt3dadd( 90.3867, 14.5779, -73.5017, 0.23 ) }
    dend_36 { pt3dadd( 91.5293, 14.2655, -73.9637, 1.13 ) }
    dend_36 { pt3dadd( 92.6481, 13.9763, -74.4536, 0.23 ) }
    dend_36 { pt3dadd( 94.9085, 13.4564, -75.577, 1.59 ) }
    dend_36 { pt3dadd( 96.1004, 13.1772, -76.2715, 0.23 ) }
    dend_36 { pt3dadd( 98.0804, 12.713, -77.5727, 1.81 ) }
    dend_36 { pt3dadd( 99.931, 12.2888, -78.8564, 0.23 ) }
    dend_36 { pt3dadd( 101.424, 12.0148, -79.9934, 1.59 ) }
    dend_36 { pt3dadd( 103.365, 11.8306, -81.5347, 0.23 ) }
    dend_36 { pt3dadd( 104.591, 11.8806, -82.5267, 0.91 ) }
    dend_36 { pt3dadd( 105.143, 12.0147, -83.0013, 0.23 ) }
    dend_36 { pt3dadd( 105.659, 12.2587, -83.4772, 1.36 ) }
    dend_36 { pt3dadd( 107.277, 13.372, -84.9756, 0.23 ) }
    dend_36 { pt3dadd( 107.62, 13.6727, -85.2659, 0.23 ) }
    dend_36 { pt3dadd( 108.777, 14.8438, -86.2335, 1.81 ) }
    dend_36 { pt3dadd( 110.404, 16.6276, -87.7419, 0.23 ) }
    dend_36 { pt3dadd( 111.057, 17.3502, -88.3809, 0.23 ) }
    dend_36 { pt3dadd( 111.795, 18.0776, -89.0817, 0.68 ) }
    dend_36 { pt3dadd( 113.043, 19.0471, -90.255, 0.23 ) }
    dend_36 { pt3dadd( 114.206, 19.7581, -91.4042, 1.81 ) }
    dend_36 { pt3dadd( 115.501, 20.2777, -92.7378, 2.27 ) }
    dend_36 { pt3dadd( 116.221, 20.4276, -93.5953, 2.27 ) }
    dend_36 { pt3dadd( 117.791, 20.5538, -95.6802, 0.23 ) }
    dend_36 { pt3dadd( 119.066, 20.4665, -97.7058, 0.23 ) }
    dend_36 { pt3dadd( 119.475, 20.3629, -98.4561, 1.13 ) }
    dend_36 { pt3dadd( 120.061, 20.1282, -99.7141, 1.13 ) }
    dend_36 { pt3dadd( 121.111, 19.6913, -102.337, 0.23 ) }
    dend_36 { pt3dadd( 121.445, 19.684, -103.284, 0.23 ) }
    dend_36 { pt3dadd( 121.778, 20.0471, -104.052, 0.23 ) }
    dend_36 { pt3dadd( 122.382, 20.9707, -104.841, 0.23 ) }
    dend_36 { pt3dadd( 123.078, 21.9572, -105.419, 0.23 ) }
    dend_36 { pt3dadd( 124.424, 23.627, -106.148, 0.23 ) }
    dend_36 { pt3dadd( 125.963, 25.3231, -106.713, 0.91 ) }
    dend_36 { pt3dadd( 127.734, 26.9625, -107.274, 0.23 ) }
    dend_36 { pt3dadd( 128.686, 27.6587, -107.553, 0.23 ) }
    dend_36 { pt3dadd( 130.403, 28.6112, -108.047, 1.36 ) }
    dend_36 { pt3dadd( 132.083, 29.3977, -108.502, 0.23 ) }
    dend_36 { pt3dadd( 133.384, 29.8694, -108.853, 0.23 ) }
    dend_36 { pt3dadd( 135.089, 30.2049, -109.316, 0.23 ) }
    dend_36 { pt3dadd( 136.857, 30.2405, -109.855, 0.23 ) }
    dend_36 { pt3dadd( 137.672, 30.1559, -110.118, 0.68 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 70/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 19.5253, 11.2989, -10.0821, 1.36 ) }
    dend_31 { pt3dadd( 21.4597, 13.7038, -10.2227, 1.36 ) }
    dend_31 { pt3dadd( 22.4494, 14.865, -10.3592, 1.36 ) }
    dend_31 { pt3dadd( 23.2758, 15.8332, -10.4912, 1.36 ) }
    dend_31 { pt3dadd( 24.941, 17.7473, -10.8235, 0.68 ) }
    dend_31 { pt3dadd( 25.8976, 18.8398, -11.0295, 1.59 ) }
    dend_31 { pt3dadd( 26.6725, 19.6899, -11.1741, 1.59 ) }
    dend_31 { pt3dadd( 28.2769, 21.2711, -11.4354, 0.68 ) }
    dend_31 { pt3dadd( 29.7898, 22.7198, -11.6428, 1.59 ) }
    dend_31 { pt3dadd( 31.201, 24.1155, -11.8054, 0.91 ) }
    dend_31 { pt3dadd( 31.7104, 24.6567, -11.8527, 1.36 ) }
    dend_31 { pt3dadd( 33.1414, 26.3061, -11.989, 1.81 ) }
    dend_31 { pt3dadd( 34.3368, 27.7557, -12.087, 2.04 ) }
    dend_31 { pt3dadd( 34.8139, 28.3404, -12.1224, 2.04 ) }
    dend_31 { pt3dadd( 36.8741, 30.9372, -12.312, 1.13 ) }
    dend_31 { pt3dadd( 37.793, 32.1738, -12.4386, 0.23 ) }
    dend_31 { pt3dadd( 39.2145, 34.154, -12.7195, 1.59 ) }
    dend_31 { pt3dadd( 40.6753, 36.2547, -13.0857, 1.36 ) }
    dend_31 { pt3dadd( 41.7864, 37.8371, -13.38, 1.36 ) }
    dend_31 { pt3dadd( 42.4355, 38.746, -13.557, 2.04 ) }
    dend_31 { pt3dadd( 44.5081, 41.5569, -14.1289, 0.23 ) }
    dend_31 { pt3dadd( 46.2231, 43.7127, -14.6135, 0.45 ) }
    dend_31 { pt3dadd( 46.8466, 44.426, -14.7597, 1.36 ) }
    dend_31 { pt3dadd( 47.7151, 45.3531, -14.9434, 1.81 ) }
    dend_31 { pt3dadd( 48.3782, 45.9788, -15.053, 1.36 ) }
    dend_31 { pt3dadd( 49.4889, 46.9036, -15.1689, 0.68 ) }
    dend_31 { pt3dadd( 50.9272, 47.9235, -15.2393, 0.68 ) }
    dend_31 { pt3dadd( 52.8312, 49.1425, -15.2918, 2.04 ) }
    dend_31 { pt3dadd( 53.5998, 49.6079, -15.3045, 2.04 ) }
    dend_31 { pt3dadd( 54.6036, 50.1757, -15.298, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_31 { pt3dadd( 55.5461, 50.6786, -15.248, 2.04 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 10.9694, 1.96127, 8.16712, 0.91 ) }
    dend_29 { pt3dadd( 12.1766, 2.33373, 8.39697, 0.91 ) }
    dend_29 { pt3dadd( 14.5633, 3.16872, 8.84699, 0.91 ) }
    dend_29 { pt3dadd( 15.6107, 3.55697, 9.05571, 1.81 ) }
    dend_29 { pt3dadd( 17.9929, 4.47714, 9.52795, 1.36 ) }
    dend_29 { pt3dadd( 19.963, 5.20939, 9.89301, 1.81 ) }
    dend_29 { pt3dadd( 22.9358, 6.28677, 10.4337, 0.68 ) }
    dend_29 { pt3dadd( 24.6236, 6.91429, 10.7387, 1.81 ) }
    dend_29 { pt3dadd( 26.2827, 7.59614, 11.012, 1.81 ) }
    dend_29 { pt3dadd( 27.4417, 8.08937, 11.2068, 2.27 ) }
    dend_29 { pt3dadd( 29.7242, 9.08291, 11.5871, 1.13 ) }
    dend_29 { pt3dadd( 32.1925, 10.1567, 12.0742, 0.23 ) }
    dend_29 { pt3dadd( 34.1145, 10.9578, 12.5117, 0.23 ) }
    dend_29 { pt3dadd( 36.2648, 11.8375, 12.9126, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 15/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 10.9694, 1.96127, 8.16712, 0.45 ) }
    dend_28 { pt3dadd( 12.5365, 0.388945, 9.0501, 0.45 ) }
    dend_28 { pt3dadd( 14.2751, -1.33973, 10.0034, 0.45 ) }
    dend_28 { pt3dadd( 15.0948, -2.0815, 10.4395, 0.45 ) }
    dend_28 { pt3dadd( 16.3044, -3.20189, 11.1254, 0.91 ) }
    dend_28 { pt3dadd( 17.0005, -3.8648, 11.5079, 0.91 ) }
    dend_28 { pt3dadd( 18.3355, -5.13618, 12.2415, 1.59 ) }
    dend_28 { pt3dadd( 19.7793, -6.51737, 13.084, 0.68 ) }
    dend_28 { pt3dadd( 21.3391, -8.05542, 14.001, 1.36 ) }
    dend_28 { pt3dadd( 22.5301, -9.23779, 14.658, 1.36 ) }
    dend_28 { pt3dadd( 24.1591, -10.7736, 15.4714, 0.45 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 26/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -10.2016, 7.59897, 7.68491, 2.72 ) }
    dend_22 { pt3dadd( -11.7916, 8.50197, 9.55491, 2.72 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.2016, 7.59897, 7.68491, 1.13 ) }
    dend_21 { pt3dadd( -12.0105, 8.97307, 9.44025, 1.13 ) }
    dend_21 { pt3dadd( -13.0341, 9.77535, 10.3656, 0.68 ) }
    dend_21 { pt3dadd( -14.4379, 10.973, 11.571, 1.13 ) }
    dend_21 { pt3dadd( -15.4483, 11.9768, 12.4444, 0.23 ) }
    dend_21 { pt3dadd( -16.3554, 12.8781, 13.2286, 0.23 ) }
    dend_21 { pt3dadd( -17.1436, 13.6612, 13.91, 0.23 ) }
    dend_21 { pt3dadd( -17.5729, 14.0646, 14.1882, 0.23 ) }
    dend_21 { pt3dadd( -18.3641, 14.9888, 14.6567, 0.23 ) }
    dend_21 { pt3dadd( -19.0866, 16.0959, 15.0451, 0.68 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 9.76712, -12.6164, -4.92729, 1.13 ) }
    dend_17 { pt3dadd( 11.8593, -11.774, -5.59742, 1.13 ) }
    dend_17 { pt3dadd( 13.3558, -11.1688, -6.07352, 0.68 ) }
    dend_17 { pt3dadd( 15.1357, -10.5493, -6.5761, 1.36 ) }
    dend_17 { pt3dadd( 16.5643, -10.1053, -6.95324, 1.81 ) }
    dend_17 { pt3dadd( 18.6002, -9.51075, -7.45776, 1.36 ) }
    dend_17 { pt3dadd( 19.5986, -9.21916, -7.70518, 1.13 ) }
    dend_17 { pt3dadd( 20.6736, -8.89857, -7.96548, 1.59 ) }
    dend_17 { pt3dadd( 23.0384, -8.21751, -8.48596, 0.91 ) }
    dend_17 { pt3dadd( 24.6474, -7.84573, -8.78893, 1.59 ) }
    dend_17 { pt3dadd( 25.5753, -7.69057, -8.94236, 2.5 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 49/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 9.76712, -12.6164, -4.92729, 1.36 ) }
    dend_14 { pt3dadd( 9.15017, -15.7796, -4.92729, 1.36 ) }
    dend_14 { pt3dadd( 8.7445, -17.8596, -4.92729, 1.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 52/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -3.80803, -21.7624, 0.676969, 2.04 ) }
    dend_6 { pt3dadd( -5.16803, -23.5684, -0.173031, 2.04 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.80803, -21.7624, 0.676969, 0.68 ) }
    dend_1 { pt3dadd( -3.24587, -25.1995, 1.22033, 0.68 ) }
    dend_1 { pt3dadd( -2.90979, -27.2544, 1.54518, 1.13 ) }
    dend_1 { pt3dadd( -2.45106, -30.0591, 1.98857, 1.13 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 58/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 38.4561, 9.33193, 0.0, 0.847747 ) }
    axon_1 { pt3dadd( 53.0157, 12.94, 0.0, 0.847747 ) }
    axon_1 { pt3dadd( 67.5753, 16.5481, 0.0, 0.847747 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -16.842, 8.62628, -3.12945, 0.45 ) }
    dend_46 { pt3dadd( -16.3294, 10.4335, -4.341, 0.45 ) }
    dend_46 { pt3dadd( -16.1256, 11.456, -4.99699, 1.13 ) }
    dend_46 { pt3dadd( -15.8868, 13.6935, -6.41009, 0.23 ) }
    dend_46 { pt3dadd( -15.8175, 15.0388, -7.28029, 0.68 ) }
    dend_46 { pt3dadd( -15.7005, 17.2729, -8.82535, 0.23 ) }
    dend_46 { pt3dadd( -15.6276, 18.3138, -9.54405, 0.91 ) }
    dend_46 { pt3dadd( -15.5805, 19.1744, -10.151, 0.91 ) }
    dend_46 { pt3dadd( -15.4844, 20.7773, -11.3155, 0.23 ) }
    dend_46 { pt3dadd( -15.3428, 22.185, -12.3728, 1.13 ) }
    dend_46 { pt3dadd( -15.0635, 23.4331, -13.3869, 0.23 ) }
    dend_46 { pt3dadd( -14.4164, 24.9756, -14.8457, 1.36 ) }
    dend_46 { pt3dadd( -13.6099, 26.2621, -16.2047, 0.45 ) }
    dend_46 { pt3dadd( -13.3453, 26.5638, -16.583, 0.45 ) }
    dend_46 { pt3dadd( -12.3196, 27.4269, -17.9392, 0.45 ) }
    dend_46 { pt3dadd( -11.8663, 27.7598, -18.5945, 0.45 ) }
    dend_46 { pt3dadd( -11.2954, 28.2139, -19.7061, 0.45 ) }
    dend_46 { pt3dadd( -10.9636, 28.4553, -20.6416, 0.45 ) }
    dend_46 { pt3dadd( -10.7101, 28.7494, -21.7158, 0.45 ) }
    dend_46 { pt3dadd( -10.4241, 29.2232, -23.1496, 0.45 ) }
    dend_46 { pt3dadd( -10.2672, 29.8596, -24.6589, 0.45 ) }
    dend_46 { pt3dadd( -10.19, 30.4552, -25.788, 0.45 ) }
    dend_46 { pt3dadd( -10.1582, 31.0598, -26.7296, 1.13 ) }
    dend_46 { pt3dadd( -10.0023, 32.8017, -29.001, 0.23 ) }
    dend_46 { pt3dadd( -9.83458, 33.6249, -29.9873, 1.13 ) }
    dend_46 { pt3dadd( -9.40047, 34.909, -31.522, 0.23 ) }
    dend_46 { pt3dadd( -9.1436, 35.4417, -32.1671, 1.13 ) }
    dend_46 { pt3dadd( -8.49536, 36.4852, -33.4151, 0.23 ) }
    dend_46 { pt3dadd( -7.90801, 37.2557, -34.2423, 1.13 ) }
    dend_46 { pt3dadd( -6.63957, 38.426, -35.4736, 0.23 ) }
    dend_46 { pt3dadd( -6.15527, 38.8038, -35.8918, 0.91 ) }
    dend_46 { pt3dadd( -4.91581, 39.6696, -36.9188, 0.23 ) }
    dend_46 { pt3dadd( -4.31155, 40.0761, -37.4783, 0.23 ) }
    dend_46 { pt3dadd( -3.15123, 40.879, -38.5924, 0.91 ) }
    dend_46 { pt3dadd( -2.16916, 41.7467, -39.7295, 0.23 ) }
    dend_46 { pt3dadd( -1.29249, 42.6878, -40.8645, 1.13 ) }
    dend_46 { pt3dadd( -0.518142, 43.624, -41.9179, 0.23 ) }
    dend_46 { pt3dadd( 0.450068, 44.9098, -43.3068, 0.23 ) }
    dend_46 { pt3dadd( 0.885716, 45.5865, -44.0794, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_46 { pt3dadd( 1.79398, 47.3399, -46.1129, 0.23 ) }
    dend_46 { pt3dadd( 2.02644, 47.9201, -46.7472, 0.91 ) }
    dend_46 { pt3dadd( 2.26974, 48.6288, -47.4642, 0.23 ) }
    dend_46 { pt3dadd( 2.33602, 48.8965, -47.7129, 0.91 ) }
    dend_46 { pt3dadd( 2.58133, 51.232, -49.7767, 0.23 ) }
    dend_46 { pt3dadd( 2.6495, 52.0151, -50.5775, 1.13 ) }
    dend_46 { pt3dadd( 2.73944, 53.1808, -51.9102, 0.23 ) }
    dend_46 { pt3dadd( 2.79019, 53.988, -52.8633, 1.13 ) }
    dend_46 { pt3dadd( 2.86412, 55.8522, -55.2254, 0.23 ) }
    dend_46 { pt3dadd( 2.88663, 57.4626, -57.284, 1.13 ) }
    dend_46 { pt3dadd( 2.86094, 59.3038, -59.5811, 0.23 ) }
    dend_46 { pt3dadd( 2.7852, 60.0271, -60.5286, 0.23 ) }
    dend_46 { pt3dadd( 2.66747, 60.5778, -61.2382, 0.91 ) }
    dend_46 { pt3dadd( 2.32037, 61.9059, -62.8743, 0.23 ) }
    dend_46 { pt3dadd( 2.13693, 62.6116, -63.6984, 0.91 ) }
    dend_46 { pt3dadd( 1.69735, 64.6106, -65.8211, 0.23 ) }
    dend_46 { pt3dadd( 1.41755, 65.9811, -67.078, 0.23 ) }
    dend_46 { pt3dadd( 1.30126, 66.8465, -67.8569, 1.59 ) }
    dend_46 { pt3dadd( 1.14705, 68.6504, -69.4798, 0.23 ) }
    dend_46 { pt3dadd( 1.063, 70.3505, -70.9896, 1.13 ) }
    dend_46 { pt3dadd( 1.05339, 71.3914, -71.9646, 0.23 ) }
    dend_46 { pt3dadd( 1.0773, 72.2386, -72.7696, 0.68 ) }
    dend_46 { pt3dadd( 1.34873, 74.4388, -74.9706, 0.23 ) }
    dend_46 { pt3dadd( 1.43358, 74.811, -75.3741, 0.68 ) }
    dend_46 { pt3dadd( 1.70383, 76.0237, -76.7095, 0.23 ) }
    dend_46 { pt3dadd( 1.98558, 77.1228, -77.8985, 0.23 ) }
    dend_46 { pt3dadd( 2.16292, 77.5974, -78.4574, 1.13 ) }
    dend_46 { pt3dadd( 3.07052, 79.2649, -80.6226, 0.23 ) }
    dend_46 { pt3dadd( 4.01733, 80.3104, -81.9962, 0.91 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -16.842, 8.62628, -3.12945, 2.04 ) }
    dend_39 { pt3dadd( -19.112, 10.1278, -3.12945, 2.04 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 31/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 55.5461, 50.6786, -15.248, 0.23 ) }
    dend_35 { pt3dadd( 56.9266, 51.3867, -16.5722, 0.23 ) }
    dend_35 { pt3dadd( 58.414, 52.1744, -18.0106, 0.23 ) }
    dend_35 { pt3dadd( 59.0665, 52.5306, -18.6439, 1.81 ) }
    dend_35 { pt3dadd( 60.6964, 53.4277, -20.1739, 0.23 ) }
    dend_35 { pt3dadd( 61.875, 54.0097, -21.2673, 0.91 ) }
    dend_35 { pt3dadd( 62.9655, 54.4827, -22.2398, 0.23 ) }
    dend_35 { pt3dadd( 63.8977, 54.7903, -22.9673, 1.36 ) }
    dend_35 { pt3dadd( 65.0185, 55.0309, -23.7195, 0.23 ) }
    dend_35 { pt3dadd( 65.6614, 55.1078, -24.0957, 0.91 ) }
    dend_35 { pt3dadd( 67.1334, 55.1773, -24.7738, 0.23 ) }
    dend_35 { pt3dadd( 68.0435, 55.1473, -25.0623, 0.23 ) }
    dend_35 { pt3dadd( 68.7042, 55.1278, -25.222, 1.13 ) }
    dend_35 { pt3dadd( 70.2905, 55.1128, -25.522, 0.23 ) }
    dend_35 { pt3dadd( 71.6335, 55.1407, -25.7348, 1.59 ) }
    dend_35 { pt3dadd( 73.5226, 55.2529, -26.0392, 0.23 ) }
    dend_35 { pt3dadd( 74.8672, 55.3902, -26.267, 1.13 ) }
    dend_35 { pt3dadd( 76.6953, 55.6515, -26.6187, 0.23 ) }
    dend_35 { pt3dadd( 78.3275, 55.9494, -26.9478, 1.13 ) }
    dend_35 { pt3dadd( 79.213, 56.1435, -27.1362, 0.23 ) }
    dend_35 { pt3dadd( 81.2879, 56.6218, -27.6277, 0.23 ) }
    dend_35 { pt3dadd( 82.1512, 56.8167, -27.8346, 1.13 ) }
    dend_35 { pt3dadd( 83.3447, 57.056, -28.1365, 1.13 ) }
    dend_35 { pt3dadd( 85.3614, 57.4368, -28.6733, 0.23 ) }
    dend_35 { pt3dadd( 87.369, 57.8522, -29.2288, 1.13 ) }
    dend_35 { pt3dadd( 88.9728, 58.2362, -29.7034, 0.23 ) }
    dend_35 { pt3dadd( 90.4506, 58.6473, -30.1406, 1.81 ) }
    dend_35 { pt3dadd( 92.2346, 59.1536, -30.6477, 0.23 ) }
    dend_35 { pt3dadd( 93.5214, 59.4966, -31.0151, 1.13 ) }
    dend_35 { pt3dadd( 95.2219, 59.9559, -31.4847, 0.23 ) }
    dend_35 { pt3dadd( 96.6296, 60.3664, -31.8489, 1.13 ) }
    dend_35 { pt3dadd( 98.5077, 60.9458, -32.2778, 0.23 ) }
    dend_35 { pt3dadd( 100.421, 61.5713, -32.711, 1.13 ) }
    dend_35 { pt3dadd( 102.596, 62.3355, -33.1614, 0.23 ) }
    dend_35 { pt3dadd( 103.688, 62.7316, -33.3718, 0.23 ) }
    dend_35 { pt3dadd( 105.274, 63.3379, -33.6905, 1.36 ) }
    dend_35 { pt3dadd( 107.002, 64.0515, -34.0791, 0.23 ) }
    dend_35 { pt3dadd( 107.791, 64.4021, -34.2899, 0.91 ) }
    dend_35 { pt3dadd( 109.168, 65.0515, -34.7235, 0.23 ) }
    dend_35 { pt3dadd( 110.759, 65.8064, -35.3132, 0.91 ) }
    dend_35 { pt3dadd( 112.779, 66.6113, -36.1433, 0.23 ) }
    dend_35 { pt3dadd( 114.198, 67.0775, -36.8156, 0.91 ) }
    dend_35 { pt3dadd( 114.981, 67.2867, -37.2343, 0.91 ) }
    dend_35 { pt3dadd( 116.02, 67.4937, -37.8351, 0.23 ) }
    dend_35 { pt3dadd( 116.956, 67.6156, -38.4037, 0.23 ) }
    dend_35 { pt3dadd( 118.294, 67.8271, -39.2804, 1.13 ) }
    dend_35 { pt3dadd( 119.577, 68.1613, -40.1114, 0.23 ) }
    dend_35 { pt3dadd( 120.184, 68.382, -40.478, 0.91 ) }
    dend_35 { pt3dadd( 121.215, 68.8646, -41.0427, 0.23 ) }
    dend_35 { pt3dadd( 122.491, 69.6491, -41.6961, 1.13 ) }
    dend_35 { pt3dadd( 124.47, 71.07, -42.6471, 0.23 ) }
    dend_35 { pt3dadd( 126.145, 72.4168, -43.4238, 1.36 ) }
    dend_35 { pt3dadd( 127.545, 73.5867, -44.0188, 0.45 ) }
    dend_35 { pt3dadd( 128.974, 74.846, -44.5993, 1.13 ) }
    dend_35 { pt3dadd( 130.473, 76.1998, -45.2185, 0.23 ) }
    dend_35 { pt3dadd( 131.288, 76.9114, -45.5474, 0.23 ) }
    dend_35 { pt3dadd( 133.033, 78.2288, -46.2028, 1.13 ) }
    dend_35 { pt3dadd( 133.616, 78.6203, -46.4223, 0.23 ) }
    dend_35 { pt3dadd( 134.522, 79.1034, -46.7865, 1.13 ) }
    dend_35 { pt3dadd( 136.719, 79.9694, -47.7038, 0.23 ) }
    dend_35 { pt3dadd( 138.803, 80.5684, -48.5779, 1.13 ) }
    dend_35 { pt3dadd( 140.333, 80.9557, -49.2206, 0.23 ) }
    dend_35 { pt3dadd( 141.77, 81.3119, -49.8493, 0.91 ) }
    dend_35 { pt3dadd( 143.614, 81.7807, -50.6738, 0.23 ) }
    dend_35 { pt3dadd( 144.087, 81.8992, -50.8859, 0.91 ) }
    dend_35 { pt3dadd( 145.718, 82.3348, -51.5844, 0.23 ) }
    dend_35 { pt3dadd( 147.123, 82.7711, -52.2503, 1.13 ) }
    dend_35 { pt3dadd( 148.955, 83.4697, -53.113, 0.23 ) }
    dend_35 { pt3dadd( 150.837, 84.2334, -54.0234, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 0/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 55.5461, 50.6786, -15.248, 0.23 ) }
    dend_32 { pt3dadd( 56.1606, 53.0452, -15.7471, 0.23 ) }
    dend_32 { pt3dadd( 56.6026, 54.2819, -16.0556, 0.23 ) }
    dend_32 { pt3dadd( 57.2849, 55.8862, -16.5057, 1.13 ) }
    dend_32 { pt3dadd( 57.8054, 56.9062, -16.7971, 1.81 ) }
    dend_32 { pt3dadd( 59.0371, 59.0851, -17.3931, 0.68 ) }
    dend_32 { pt3dadd( 59.5916, 60.0101, -17.6437, 0.23 ) }
    dend_32 { pt3dadd( 60.7174, 61.6798, -18.1033, 1.81 ) }
    dend_32 { pt3dadd( 61.4241, 62.65, -18.3491, 1.81 ) }
    dend_32 { pt3dadd( 62.6183, 64.2236, -18.7719, 0.91 ) }
    dend_32 { pt3dadd( 63.6905, 65.5478, -19.1363, 0.23 ) }
    dend_32 { pt3dadd( 64.8583, 66.9118, -19.495, 0.23 ) }
    dend_32 { pt3dadd( 65.681, 67.8469, -19.7479, 1.81 ) }
    dend_32 { pt3dadd( 66.4143, 68.6625, -19.9576, 1.81 ) }
    dend_32 { pt3dadd( 68.2068, 70.5396, -20.4562, 0.23 ) }
    dend_32 { pt3dadd( 69.1171, 71.4257, -20.7029, 1.81 ) }
    dend_32 { pt3dadd( 70.0758, 72.278, -20.9438, 1.81 ) }
    dend_32 { pt3dadd( 71.7053, 73.6245, -21.2981, 0.23 ) }
    dend_32 { pt3dadd( 72.8512, 74.5394, -21.5333, 0.23 ) }
    dend_32 { pt3dadd( 73.9903, 75.4301, -21.7418, 1.36 ) }
    dend_32 { pt3dadd( 75.284, 76.4268, -21.9466, 1.36 ) }
    dend_32 { pt3dadd( 77.7133, 78.3661, -22.3839, 0.68 ) }
    dend_32 { pt3dadd( 78.9596, 79.4189, -22.6249, 0.23 ) }
    dend_32 { pt3dadd( 79.9591, 80.3057, -22.8225, 2.27 ) }
    dend_32 { pt3dadd( 81.9364, 82.1775, -23.2268, 0.23 ) }
    dend_32 { pt3dadd( 83.093, 83.3659, -23.4844, 0.68 ) }
    dend_32 { pt3dadd( 84.0863, 84.5323, -23.7278, 2.04 ) }
    dend_32 { pt3dadd( 84.7962, 85.4909, -23.9105, 2.04 ) }
    dend_32 { pt3dadd( 85.1687, 86.1434, -24.0186, 2.04 ) }
    dend_32 { pt3dadd( 86.2716, 88.6547, -24.4144, 0.23 ) }
    dend_32 { pt3dadd( 86.6824, 89.8904, -24.5951, 0.23 ) }
    dend_32 { pt3dadd( 87.1844, 91.616, -24.8349, 0.45 ) }
    dend_32 { pt3dadd( 87.3522, 92.2301, -24.9223, 2.27 ) }
    dend_32 { pt3dadd( 88.4196, 96.2801, -25.5394, 0.23 ) }
    dend_32 { pt3dadd( 88.8286, 97.908, -25.7982, 1.59 ) }
    dend_32 { pt3dadd( 89.3411, 100.036, -26.1247, 0.45 ) }
    dend_32 { pt3dadd( 89.6992, 101.403, -26.3096, 1.36 ) }
    dend_32 { pt3dadd( 90.4275, 103.859, -26.6663, 0.23 ) }
    dend_32 { pt3dadd( 90.628, 104.458, -26.7545, 0.91 ) }
    dend_32 { pt3dadd( 91.1139, 105.645, -26.9277, 0.23 ) }
    dend_32 { pt3dadd( 91.7769, 107.087, -27.1208, 1.81 ) }
    dend_32 { pt3dadd( 92.6348, 108.763, -27.3771, 0.91 ) }
    dend_32 { pt3dadd( 93.9142, 111.126, -27.7547, 0.23 ) }
    dend_32 { pt3dadd( 94.4912, 112.081, -27.9129, 0.23 ) }
    dend_32 { pt3dadd( 95.3166, 113.281, -28.1177, 1.81 ) }
    dend_32 { pt3dadd( 96.3858, 114.648, -28.3566, 1.81 ) }
    dend_32 { pt3dadd( 98.1666, 116.746, -28.6307, 0.23 ) }
    dend_32 { pt3dadd( 99.7698, 118.485, -28.7692, 1.13 ) }
    dend_32 { pt3dadd( 100.784, 119.494, -28.7984, 1.13 ) }
    dend_32 { pt3dadd( 102.906, 121.525, -28.8009, 0.23 ) }
    dend_32 { pt3dadd( 104.377, 122.897, -28.7428, 0.91 ) }
    dend_32 { pt3dadd( 106.275, 124.59, -28.6143, 0.23 ) }
    dend_32 { pt3dadd( 106.963, 125.197, -28.5651, 2.04 ) }
    dend_32 { pt3dadd( 107.433, 125.647, -28.5427, 2.5 ) }
    dend_32 { pt3dadd( 108.295, 126.601, -28.5382, 2.04 ) }
    dend_32 { pt3dadd( 110.773, 129.833, -28.7145, 0.23 ) }
    dend_32 { pt3dadd( 111.6, 131.076, -28.8402, 0.23 ) }
    dend_32 { pt3dadd( 112.599, 132.843, -29.1174, 2.04 ) }
    dend_32 { pt3dadd( 113.791, 135.31, -29.5388, 0.23 ) }
    dend_32 { pt3dadd( 114.159, 136.175, -29.7072, 1.13 ) }
    dend_32 { pt3dadd( 114.925, 138.221, -30.1597, 0.23 ) }
    dend_32 { pt3dadd( 115.369, 139.621, -30.5099, 1.59 ) }
    dend_32 { pt3dadd( 115.987, 141.69, -31.0513, 0.45 ) }
    dend_32 { pt3dadd( 116.599, 143.718, -31.613, 1.81 ) }
    dend_32 { pt3dadd( 117.251, 145.754, -32.2283, 0.23 ) }
    dend_32 { pt3dadd( 117.486, 146.441, -32.4367, 0.68 ) }
    dend_32 { pt3dadd( 118.023, 147.905, -32.9176, 0.23 ) }
    dend_32 { pt3dadd( 118.476, 149.14, -33.3421, 1.59 ) }
    dend_32 { pt3dadd( 119.014, 150.695, -33.8561, 0.68 ) }
    dend_32 { pt3dadd( 119.428, 152.12, -34.2836, 1.81 ) }
    dend_32 { pt3dadd( 119.614, 152.825, -34.4882, 1.81 ) }
    dend_32 { pt3dadd( 120.12, 154.809, -35.0449, 0.68 ) }
    dend_32 { pt3dadd( 120.405, 155.953, -35.336, 1.13 ) }
    dend_32 { pt3dadd( 120.778, 157.36, -35.668, 0.23 ) }
    dend_32 { pt3dadd( 121.263, 159.108, -36.061, 0.91 ) }
    dend_32 { pt3dadd( 121.823, 161.004, -36.4679, 0.23 ) }
    dend_32 { pt3dadd( 122.207, 162.21, -36.7265, 1.36 ) }
    dend_32 { pt3dadd( 122.712, 163.6, -37.0184, 1.36 ) }
    dend_32 { pt3dadd( 123.468, 165.4, -37.4306, 0.23 ) }
    dend_32 { pt3dadd( 124.107, 166.804, -37.7763, 0.91 ) }
    dend_32 { pt3dadd( 124.375, 167.367, -37.9122, 1.36 ) }
    dend_32 { pt3dadd( 125.648, 169.813, -38.4458, 0.23 ) }
    dend_32 { pt3dadd( 126.275, 170.96, -38.7258, 1.13 ) }
    dend_32 { pt3dadd( 127.235, 172.712, -39.1503, 0.23 ) }
    dend_32 { pt3dadd( 128.133, 174.467, -39.5334, 0.91 ) }
    dend_32 { pt3dadd( 128.99, 176.237, -39.9303, 0.91 ) }
    dend_32 { pt3dadd( 129.889, 178.222, -40.4322, 0.23 ) }
    dend_32 { pt3dadd( 130.42, 179.492, -40.7965, 0.23 ) }
    dend_32 { pt3dadd( 130.883, 180.684, -41.1725, 1.59 ) }
    dend_32 { pt3dadd( 131.389, 182.03, -41.6504, 2.5 ) }
    dend_32 { pt3dadd( 132.795, 185.909, -43.1012, 0.23 ) }
    dend_32 { pt3dadd( 133.345, 187.568, -43.7519, 0.68 ) }
    dend_32 { pt3dadd( 133.952, 189.536, -44.5261, 0.23 ) }
    dend_32 { pt3dadd( 134.132, 190.107, -44.7391, 0.91 ) }
    dend_32 { pt3dadd( 134.507, 191.347, -45.1535, 0.23 ) }
    dend_32 { pt3dadd( 134.997, 193.058, -45.643, 2.04 ) }
    dend_32 { pt3dadd( 135.916, 196.791, -46.475, 0.23 ) }
    dend_32 { pt3dadd( 135.981, 197.082, -46.5268, 1.13 ) }
    dend_32 { pt3dadd( 136.265, 198.552, -46.7669, 1.81 ) }
    dend_32 { pt3dadd( 136.867, 202.122, -47.3295, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_32 { pt3dadd( 137.119, 203.868, -47.6054, 0.23 ) }
    dend_32 { pt3dadd( 137.327, 205.487, -47.899, 0.91 ) }
    dend_32 { pt3dadd( 137.478, 206.948, -48.1916, 1.81 ) }
    dend_32 { pt3dadd( 137.694, 210.323, -48.922, 0.23 ) }
    dend_32 { pt3dadd( 137.745, 211.777, -49.2764, 0.23 ) }
    dend_32 { pt3dadd( 137.769, 213.971, -49.9204, 1.81 ) }
    dend_32 { pt3dadd( 137.743, 216.512, -50.6995, 0.23 ) }
    dend_32 { pt3dadd( 137.696, 218.386, -51.2949, 1.81 ) }
    dend_32 { pt3dadd( 137.613, 221.358, -52.2815, 0.23 ) }
    dend_32 { pt3dadd( 137.557, 223.312, -52.9532, 1.59 ) }
    dend_32 { pt3dadd( 137.5, 225.616, -53.7753, 0.23 ) }
    dend_32 { pt3dadd( 137.473, 226.216, -53.9991, 1.36 ) }
    dend_32 { pt3dadd( 137.414, 227.082, -54.3311, 1.36 ) }
    dend_32 { pt3dadd( 137.327, 228.861, -54.9803, 0.45 ) }
    dend_32 { pt3dadd( 137.268, 230.737, -55.6365, 2.04 ) }
    dend_32 { pt3dadd( 137.213, 233.24, -56.39, 0.23 ) }
    dend_32 { pt3dadd( 137.202, 234.686, -56.7693, 1.13 ) }
    dend_32 { pt3dadd( 137.211, 235.67, -57.0198, 1.81 ) }
    dend_32 { pt3dadd( 137.262, 239.288, -57.8685, 0.23 ) }
    dend_32 { pt3dadd( 137.3, 240.877, -58.1849, 1.13 ) }
    dend_32 { pt3dadd( 137.37, 241.997, -58.3919, 1.13 ) }
    dend_32 { pt3dadd( 137.586, 244.172, -58.7901, 0.23 ) }
    dend_32 { pt3dadd( 137.879, 246.249, -59.2238, 0.23 ) }
    dend_32 { pt3dadd( 138.137, 247.997, -59.6411, 0.23 ) }
    dend_32 { pt3dadd( 138.42, 250.042, -60.2155, 1.81 ) }
    dend_32 { pt3dadd( 138.935, 253.902, -61.348, 0.23 ) }
    dend_32 { pt3dadd( 139.085, 255.14, -61.75, 1.13 ) }
    dend_32 { pt3dadd( 139.305, 256.858, -62.3846, 0.23 ) }
    dend_32 { pt3dadd( 139.474, 258.287, -62.9968, 1.59 ) }
    dend_32 { pt3dadd( 139.611, 259.65, -63.6392, 0.45 ) }
    dend_32 { pt3dadd( 139.678, 260.976, -64.3062, 1.13 ) }
    dend_32 { pt3dadd( 139.686, 262.983, -65.3297, 0.23 ) }
    dend_32 { pt3dadd( 139.679, 265.259, -66.5081, 1.13 ) }
    dend_32 { pt3dadd( 139.682, 266.476, -67.117, 0.23 ) }
    dend_32 { pt3dadd( 139.702, 267.537, -67.6447, 0.91 ) }
    dend_32 { pt3dadd( 139.776, 269.397, -68.5353, 0.23 ) }
    dend_32 { pt3dadd( 139.878, 270.981, -69.2509, 1.36 ) }
    dend_32 { pt3dadd( 140.014, 272.5, -69.8383, 0.23 ) }
    dend_32 { pt3dadd( 140.14, 273.974, -70.3484, 0.91 ) }
    dend_32 { pt3dadd( 140.221, 274.942, -70.6396, 0.91 ) }
    dend_32 { pt3dadd( 140.332, 276.819, -71.1424, 0.23 ) }
    dend_32 { pt3dadd( 140.388, 278.299, -71.4708, 1.59 ) }
    dend_32 { pt3dadd( 140.398, 281.07, -71.9927, 0.23 ) }
    dend_32 { pt3dadd( 140.323, 282.794, -72.2627, 1.59 ) }
    dend_32 { pt3dadd( 140.106, 285.45, -72.6654, 0.23 ) }
    dend_32 { pt3dadd( 139.945, 287.086, -72.8909, 0.23 ) }
    dend_32 { pt3dadd( 139.75, 288.562, -73.0672, 1.81 ) }
    dend_32 { pt3dadd( 139.689, 288.937, -73.1102, 1.81 ) }
    dend_32 { pt3dadd( 138.857, 293.413, -73.5598, 0.23 ) }
    dend_32 { pt3dadd( 138.601, 294.774, -73.6987, 0.91 ) }
    dend_32 { pt3dadd( 138.302, 296.251, -73.864, 0.23 ) }
    dend_32 { pt3dadd( 138.001, 297.798, -74.0393, 0.91 ) }
    dend_32 { pt3dadd( 137.538, 300.059, -74.2877, 0.23 ) }
    dend_32 { pt3dadd( 137.228, 301.543, -74.4733, 1.59 ) }
    dend_32 { pt3dadd( 136.718, 303.939, -74.7879, 0.45 ) }
    dend_32 { pt3dadd( 136.337, 305.812, -75.0309, 1.36 ) }
    dend_32 { pt3dadd( 136.106, 307.008, -75.1892, 1.36 ) }
    dend_32 { pt3dadd( 135.878, 308.369, -75.3614, 0.23 ) }
    dend_32 { pt3dadd( 135.713, 309.934, -75.5385, 0.91 ) }
    dend_32 { pt3dadd( 135.561, 312.457, -75.7958, 0.23 ) }
    dend_32 { pt3dadd( 135.549, 313.649, -75.8948, 1.13 ) }
    dend_32 { pt3dadd( 135.655, 315.449, -76.0162, 0.23 ) }
    dend_32 { pt3dadd( 135.852, 316.953, -76.1002, 2.5 ) }
    dend_32 { pt3dadd( 136.433, 319.844, -76.2147, 0.23 ) }
    dend_32 { pt3dadd( 136.603, 320.464, -76.2325, 1.13 ) }
    dend_32 { pt3dadd( 137.122, 321.882, -76.2971, 1.13 ) }
    dend_32 { pt3dadd( 138.171, 324.215, -76.4881, 0.23 ) }
    dend_32 { pt3dadd( 138.879, 325.588, -76.6434, 1.81 ) }
    dend_32 { pt3dadd( 139.291, 326.372, -76.7625, 1.81 ) }
    dend_32 { pt3dadd( 140.257, 328.315, -77.1583, 0.68 ) }
    dend_32 { pt3dadd( 140.908, 329.615, -77.4461, 0.23 ) }
    dend_32 { pt3dadd( 141.844, 331.48, -77.9079, 1.59 ) }
    dend_32 { pt3dadd( 142.216, 332.262, -78.1234, 1.59 ) }
    dend_32 { pt3dadd( 143.481, 335.28, -78.9682, 0.23 ) }
    dend_32 { pt3dadd( 144.115, 336.862, -79.4336, 1.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.7916, 8.50197, 9.55491, 0.91 ) }
    dend_24 { pt3dadd( -13.367, 10.0398, 9.89253, 0.91 ) }
    dend_24 { pt3dadd( -14.7809, 11.42, 10.1955, 0.91 ) }
    dend_24 { pt3dadd( -16.5029, 13.1008, 10.5646, 0.91 ) }
    dend_24 { pt3dadd( -18.1156, 14.6751, 10.9102, 1.36 ) }
    dend_24 { pt3dadd( -19.5434, 16.0689, 11.2162, 2.04 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 81/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -11.7916, 8.50197, 9.55491, 1.13 ) }
    dend_23 { pt3dadd( -14.0296, 8.59017, 9.98037, 1.13 ) }
    dend_23 { pt3dadd( -15.5843, 8.65821, 10.2547, 0.68 ) }
    dend_23 { pt3dadd( -17.612, 8.64798, 10.673, 1.59 ) }
    dend_23 { pt3dadd( -20.5366, 8.49009, 11.3729, 0.68 ) }
    dend_23 { pt3dadd( -22.6513, 8.27416, 11.9056, 0.68 ) }
    dend_23 { pt3dadd( -23.5804, 8.14841, 12.1398, 0.68 ) }
    dend_23 { pt3dadd( -26.178, 7.69072, 12.8589, 0.23 ) }
    dend_23 { pt3dadd( -28.4059, 7.13637, 13.5478, 0.23 ) }
    dend_23 { pt3dadd( -29.7754, 6.67324, 13.9974, 0.23 ) }
    dend_23 { pt3dadd( -31.2012, 6.03629, 14.4616, 0.68 ) }
    dend_23 { pt3dadd( -32.5864, 5.33373, 14.9181, 1.36 ) }
    dend_23 { pt3dadd( -35.0348, 4.01072, 15.7251, 0.23 ) }
    dend_23 { pt3dadd( -36.2344, 3.31407, 16.1249, 0.23 ) }
    dend_23 { pt3dadd( -37.4628, 2.65405, 16.4604, 0.91 ) }
    dend_23 { pt3dadd( -39.0536, 1.81781, 16.8563, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 25.5753, -7.69057, -8.94236, 0.23 ) }
    dend_19 { pt3dadd( 27.4765, -8.5264, -9.24227, 0.23 ) }
    dend_19 { pt3dadd( 29.3941, -9.43985, -9.50046, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_19 { pt3dadd( 30.2498, -9.85063, -9.59496, 1.13 ) }
    dend_19 { pt3dadd( 31.3071, -10.3761, -9.6934, 0.23 ) }
    dend_19 { pt3dadd( 32.5753, -11.0375, -9.79956, 1.81 ) }
    dend_19 { pt3dadd( 34.1916, -11.9518, -9.89907, 0.23 ) }
    dend_19 { pt3dadd( 35.3821, -12.7063, -9.89074, 0.91 ) }
    dend_19 { pt3dadd( 36.9718, -13.7898, -9.79442, 0.91 ) }
    dend_19 { pt3dadd( 38.1592, -14.6161, -9.69491, 0.23 ) }
    dend_19 { pt3dadd( 38.6593, -14.9795, -9.63586, 0.23 ) }
    dend_19 { pt3dadd( 40.1973, -16.1023, -9.41452, 0.45 ) }
    dend_19 { pt3dadd( 41.6291, -17.1545, -9.17708, 0.23 ) }
    dend_19 { pt3dadd( 43.0637, -18.3052, -8.92656, 1.13 ) }
    dend_19 { pt3dadd( 43.7683, -18.8967, -8.80701, 1.13 ) }
    dend_19 { pt3dadd( 45.6728, -20.3995, -8.62866, 0.23 ) }
    dend_19 { pt3dadd( 46.708, -21.1638, -8.60834, 0.68 ) }
    dend_19 { pt3dadd( 47.1572, -21.4685, -8.63232, 0.23 ) }
    dend_19 { pt3dadd( 48.5141, -22.3121, -8.77589, 0.91 ) }
    dend_19 { pt3dadd( 49.9585, -23.0585, -8.93325, 0.91 ) }
    dend_19 { pt3dadd( 52.0962, -24.0387, -9.16789, 0.23 ) }
    dend_19 { pt3dadd( 53.6066, -24.5964, -9.32901, 0.23 ) }
    dend_19 { pt3dadd( 54.6932, -24.9449, -9.42195, 0.91 ) }
    dend_19 { pt3dadd( 56.7284, -25.5464, -9.54997, 0.23 ) }
    dend_19 { pt3dadd( 58.1132, -25.921, -9.59958, 0.23 ) }
    dend_19 { pt3dadd( 59.1459, -26.2178, -9.60163, 0.91 ) }
    dend_19 { pt3dadd( 60.8977, -26.8094, -9.53347, 0.23 ) }
    dend_19 { pt3dadd( 61.9981, -27.2128, -9.48431, 0.91 ) }
    dend_19 { pt3dadd( 63.1533, -27.7125, -9.40236, 0.91 ) }
    dend_19 { pt3dadd( 64.4874, -28.3657, -9.31397, 0.23 ) }
    dend_19 { pt3dadd( 65.4463, -28.87, -9.26062, 0.68 ) }
    dend_19 { pt3dadd( 67.8778, -30.1948, -9.12623, 0.23 ) }
    dend_19 { pt3dadd( 68.6137, -30.6128, -9.09755, 0.91 ) }
    dend_19 { pt3dadd( 70.9259, -31.9288, -9.04687, 0.23 ) }
    dend_19 { pt3dadd( 72.6282, -32.8603, -9.05724, 1.13 ) }
    dend_19 { pt3dadd( 74.139, -33.6595, -9.108, 1.13 ) }
    dend_19 { pt3dadd( 75.4253, -34.2916, -9.18017, 0.23 ) }
    dend_19 { pt3dadd( 76.6919, -34.8894, -9.27975, 0.23 ) }
    dend_19 { pt3dadd( 78.5291, -35.7334, -9.45481, 0.91 ) }
    dend_19 { pt3dadd( 80.5222, -36.5979, -9.65076, 0.23 ) }
    dend_19 { pt3dadd( 82.7648, -37.5702, -9.79289, 0.91 ) }
    dend_19 { pt3dadd( 84.2203, -38.2122, -9.85553, 0.91 ) }
    dend_19 { pt3dadd( 85.3761, -38.717, -9.88185, 0.23 ) }
    dend_19 { pt3dadd( 86.8556, -39.3666, -9.9089, 1.13 ) }
    dend_19 { pt3dadd( 89.4869, -40.5207, -9.98697, 0.23 ) }
    dend_19 { pt3dadd( 91.5104, -41.4004, -10.067, 0.23 ) }
    dend_19 { pt3dadd( 93.1821, -42.1134, -10.1761, 1.13 ) }
    dend_19 { pt3dadd( 93.8137, -42.3717, -10.2306, 1.13 ) }
    dend_19 { pt3dadd( 96.2552, -43.2268, -10.4771, 0.23 ) }
    dend_19 { pt3dadd( 97.6199, -43.6676, -10.5858, 0.23 ) }
    dend_19 { pt3dadd( 99.1762, -44.1562, -10.6357, 0.68 ) }
    dend_19 { pt3dadd( 100.642, -44.5961, -10.6066, 0.23 ) }
    dend_19 { pt3dadd( 102.878, -45.2973, -10.427, 1.13 ) }
    dend_19 { pt3dadd( 106.114, -46.3542, -9.99456, 0.23 ) }
    dend_19 { pt3dadd( 107.984, -47.0468, -9.63179, 0.68 ) }
    dend_19 { pt3dadd( 110.649, -48.1719, -9.01565, 0.23 ) }
    dend_19 { pt3dadd( 112.155, -48.9212, -8.6151, 1.13 ) }
    dend_19 { pt3dadd( 113.219, -49.5297, -8.30405, 0.23 ) }
    dend_19 { pt3dadd( 113.959, -50.0316, -8.07607, 0.91 ) }
    dend_19 { pt3dadd( 115.616, -51.4679, -7.61936, 0.91 ) }
    dend_19 { pt3dadd( 116.271, -52.0841, -7.49766, 0.23 ) }
    dend_19 { pt3dadd( 117.062, -52.9554, -7.41189, 0.91 ) }
    dend_19 { pt3dadd( 117.966, -54.0616, -7.36777, 0.23 ) }
    dend_19 { pt3dadd( 118.114, -54.2457, -7.36777, 0.91 ) }
    dend_19 { pt3dadd( 119.864, -56.5248, -7.36777, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 62/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 25.5753, -7.69057, -8.94236, 0.23 ) }
    dend_18 { pt3dadd( 27.5334, -7.53439, -9.75847, 0.23 ) }
    dend_18 { pt3dadd( 29.5642, -7.47056, -10.5721, 0.91 ) }
    dend_18 { pt3dadd( 31.5162, -7.41708, -11.3524, 0.23 ) }
    dend_18 { pt3dadd( 33.2535, -7.31469, -12.0635, 0.91 ) }
    dend_18 { pt3dadd( 33.8777, -7.25361, -12.327, 0.91 ) }
    dend_18 { pt3dadd( 34.9333, -7.0891, -12.7983, 0.23 ) }
    dend_18 { pt3dadd( 35.8934, -6.91529, -13.216, 0.91 ) }
    dend_18 { pt3dadd( 37.1795, -6.62954, -13.7807, 0.23 ) }
    dend_18 { pt3dadd( 38.4034, -6.33049, -14.3914, 2.04 ) }
    dend_18 { pt3dadd( 40.0187, -5.95732, -15.2717, 0.45 ) }
    dend_18 { pt3dadd( 41.2668, -5.66458, -15.9507, 0.23 ) }
    dend_18 { pt3dadd( 42.0903, -5.45963, -16.3933, 0.23 ) }
    dend_18 { pt3dadd( 43.7689, -5.04127, -17.2468, 1.81 ) }
    dend_18 { pt3dadd( 45.3896, -4.70325, -18.0568, 0.23 ) }
    dend_18 { pt3dadd( 47.286, -4.42716, -18.9706, 1.59 ) }
    dend_18 { pt3dadd( 48.425, -4.31574, -19.5122, 0.45 ) }
    dend_18 { pt3dadd( 49.6662, -4.22893, -20.1373, 1.36 ) }
    dend_18 { pt3dadd( 50.3307, -4.16345, -20.5001, 1.81 ) }
    dend_18 { pt3dadd( 52.0053, -3.93651, -21.5879, 0.23 ) }
    dend_18 { pt3dadd( 52.8942, -3.79861, -22.216, 0.23 ) }
    dend_18 { pt3dadd( 54.2054, -3.57112, -23.185, 1.59 ) }
    dend_18 { pt3dadd( 55.7882, -3.28744, -24.3687, 0.23 ) }
    dend_18 { pt3dadd( 56.9166, -3.10175, -25.1866, 1.36 ) }
    dend_18 { pt3dadd( 59.4624, -2.6976, -26.9494, 0.23 ) }
    dend_18 { pt3dadd( 60.8865, -2.45361, -27.8274, 2.04 ) }
    dend_18 { pt3dadd( 62.6564, -2.17562, -28.7758, 0.23 ) }
    dend_18 { pt3dadd( 63.9735, -2.01171, -29.4154, 1.36 ) }
    dend_18 { pt3dadd( 65.8685, -1.86102, -30.2187, 0.23 ) }
    dend_18 { pt3dadd( 67.493, -1.80778, -30.8323, 1.59 ) }
    dend_18 { pt3dadd( 69.7146, -1.83144, -31.5685, 0.23 ) }
    dend_18 { pt3dadd( 71.5236, -1.90555, -32.1682, 0.23 ) }
    dend_18 { pt3dadd( 74.2676, -2.08124, -33.0985, 1.81 ) }
    dend_18 { pt3dadd( 75.7902, -2.18677, -33.6372, 0.23 ) }
    dend_18 { pt3dadd( 76.8618, -2.24135, -34.0955, 0.91 ) }
    dend_18 { pt3dadd( 78.1759, -2.25824, -34.8443, 0.23 ) }
    dend_18 { pt3dadd( 79.6228, -2.16302, -35.9822, 1.13 ) }
    dend_18 { pt3dadd( 80.7179, -1.95254, -37.0371, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( 81.7372, -1.63825, -38.1165, 1.13 ) }
    dend_18 { pt3dadd( 83.3433, -0.932279, -40.0121, 0.23 ) }
    dend_18 { pt3dadd( 84.8629, -0.0938575, -41.8955, 2.04 ) }
    dend_18 { pt3dadd( 86.1803, 0.758425, -43.518, 0.23 ) }
    dend_18 { pt3dadd( 86.8611, 1.2263, -44.327, 1.36 ) }
    dend_18 { pt3dadd( 88.2948, 2.23971, -45.8527, 0.45 ) }
    dend_18 { pt3dadd( 89.1118, 2.77781, -46.6107, 1.13 ) }
    dend_18 { pt3dadd( 90.7938, 3.75418, -47.8491, 0.23 ) }
    dend_18 { pt3dadd( 92.1276, 4.47702, -48.6693, 1.59 ) }
    dend_18 { pt3dadd( 93.5896, 5.2741, -49.4633, 0.23 ) }
    dend_18 { pt3dadd( 94.4907, 5.74152, -49.9166, 0.91 ) }
    dend_18 { pt3dadd( 95.979, 6.50498, -50.6907, 0.68 ) }
    dend_18 { pt3dadd( 96.948, 6.97992, -51.1807, 0.23 ) }
    dend_18 { pt3dadd( 98.7669, 7.90626, -52.075, 1.13 ) }
    dend_18 { pt3dadd( 100.276, 8.66373, -52.8025, 0.23 ) }
    dend_18 { pt3dadd( 101.169, 9.10442, -53.2779, 1.13 ) }
    dend_18 { pt3dadd( 103.373, 10.04, -54.5044, 0.23 ) }
    dend_18 { pt3dadd( 104.44, 10.395, -55.1064, 1.59 ) }
    dend_18 { pt3dadd( 106.482, 10.8432, -56.2588, 0.23 ) }
    dend_18 { pt3dadd( 107.895, 10.9532, -57.0159, 1.59 ) }
    dend_18 { pt3dadd( 110.753, 10.9373, -58.4564, 0.68 ) }
    dend_18 { pt3dadd( 112.378, 10.8841, -59.2468, 1.36 ) }
    dend_18 { pt3dadd( 114.22, 10.7563, -60.1366, 0.23 ) }
    dend_18 { pt3dadd( 115.153, 10.6692, -60.6544, 1.13 ) }
    dend_18 { pt3dadd( 117.268, 10.4134, -61.9261, 0.23 ) }
    dend_18 { pt3dadd( 119.211, 10.2117, -63.14, 1.13 ) }
    dend_18 { pt3dadd( 120.155, 10.1577, -63.7307, 1.13 ) }
    dend_18 { pt3dadd( 121.641, 10.228, -64.7954, 0.23 ) }
    dend_18 { pt3dadd( 122.755, 10.4164, -65.7738, 0.23 ) }
    dend_18 { pt3dadd( 123.439, 10.6003, -66.4168, 1.13 ) }
    dend_18 { pt3dadd( 124.048, 10.8734, -67.1012, 1.13 ) }
    dend_18 { pt3dadd( 125.492, 11.732, -68.8473, 0.23 ) }
    dend_18 { pt3dadd( 126.314, 12.4105, -69.968, 0.23 ) }
    dend_18 { pt3dadd( 127.87, 14.1118, -72.3372, 0.23 ) }
    dend_18 { pt3dadd( 128.611, 15.2453, -73.6912, 2.27 ) }
    dend_18 { pt3dadd( 129.6, 17.5491, -76.1853, 0.23 ) }
    dend_18 { pt3dadd( 129.787, 18.3311, -76.9678, 0.91 ) }
    dend_18 { pt3dadd( 130.027, 20.7755, -79.2655, 0.23 ) }
    dend_18 { pt3dadd( 130.058, 21.684, -80.1056, 0.91 ) }
    dend_18 { pt3dadd( 130.047, 22.6451, -80.9608, 0.23 ) }
    dend_18 { pt3dadd( 129.976, 23.9967, -82.2552, 0.91 ) }
    dend_18 { pt3dadd( 129.828, 25.7023, -83.8659, 0.23 ) }
    dend_18 { pt3dadd( 129.78, 26.2547, -84.4105, 1.13 ) }
    dend_18 { pt3dadd( 129.773, 27.4806, -85.7219, 0.23 ) }
    dend_18 { pt3dadd( 129.885, 28.2168, -86.6405, 0.91 ) }
    dend_18 { pt3dadd( 130.359, 29.5318, -88.4112, 0.91 ) }
    dend_18 { pt3dadd( 130.91, 30.5049, -89.8285, 0.23 ) }
    dend_18 { pt3dadd( 131.595, 31.3859, -91.1768, 0.91 ) }
    dend_18 { pt3dadd( 132.584, 32.4269, -92.8239, 0.91 ) }
    dend_18 { pt3dadd( 134.349, 34.0339, -95.5172, 0.23 ) }
    dend_18 { pt3dadd( 135.212, 34.6896, -96.723, 0.68 ) }
    dend_18 { pt3dadd( 135.997, 35.167, -97.6448, 0.68 ) }
    dend_18 { pt3dadd( 136.9, 35.6374, -98.6025, 0.23 ) }
    dend_18 { pt3dadd( 138.104, 36.223, -99.773, 0.23 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 54/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 8.7445, -17.8596, -4.92729, 0.45 ) }
    dend_16 { pt3dadd( 7.09678, -18.3765, -5.58995, 0.45 ) }
    dend_16 { pt3dadd( 6.11669, -18.7023, -5.9733, 1.36 ) }
    dend_16 { pt3dadd( 5.0263, -19.0622, -6.40243, 0.45 ) }
    dend_16 { pt3dadd( 4.04893, -19.3268, -6.76884, 0.68 ) }
    dend_16 { pt3dadd( 2.58824, -19.6818, -7.35094, 0.23 ) }
    dend_16 { pt3dadd( 1.4364, -19.9623, -7.80233, 0.91 ) }
    dend_16 { pt3dadd( -0.416992, -20.4314, -8.53409, 0.23 ) }
    dend_16 { pt3dadd( -0.909463, -20.549, -8.73567, 1.36 ) }
    dend_16 { pt3dadd( -2.20084, -20.8066, -9.27295, 1.36 ) }
    dend_16 { pt3dadd( -3.2993, -20.9863, -9.71904, 0.23 ) }
    dend_16 { pt3dadd( -4.96566, -21.2085, -10.3628, 0.91 ) }
    dend_16 { pt3dadd( -6.67829, -21.4394, -11.0758, 0.23 ) }
    dend_16 { pt3dadd( -8.20249, -21.6823, -11.7062, 0.91 ) }
    dend_16 { pt3dadd( -9.03387, -21.8406, -12.0441, 0.91 ) }
    dend_16 { pt3dadd( -10.0962, -22.0967, -12.48, 0.23 ) }
    dend_16 { pt3dadd( -10.9687, -22.3047, -12.8336, 0.91 ) }
    dend_16 { pt3dadd( -12.3714, -22.6312, -13.4329, 0.23 ) }
    dend_16 { pt3dadd( -13.2295, -22.8794, -13.7795, 0.68 ) }
    dend_16 { pt3dadd( -13.8852, -23.0903, -14.045, 0.23 ) }
    dend_16 { pt3dadd( -14.8091, -23.3847, -14.3862, 1.36 ) }
    dend_16 { pt3dadd( -15.891, -23.7306, -14.7422, 1.36 ) }
    dend_16 { pt3dadd( -16.7297, -24.0128, -14.9715, 0.23 ) }
    dend_16 { pt3dadd( -17.7419, -24.3393, -15.2235, 0.91 ) }
    dend_16 { pt3dadd( -19.4998, -24.8963, -15.6711, 0.23 ) }
    dend_16 { pt3dadd( -20.9725, -25.3599, -16.0765, 0.23 ) }
    dend_16 { pt3dadd( -21.3165, -25.464, -16.1705, 1.36 ) }
    dend_16 { pt3dadd( -23.9564, -26.2631, -16.8977, 0.23 ) }
    dend_16 { pt3dadd( -25.2215, -26.6554, -17.2882, 1.59 ) }
    dend_16 { pt3dadd( -25.8977, -26.8637, -17.5114, 1.36 ) }
    dend_16 { pt3dadd( -27.7075, -27.4395, -18.1532, 0.23 ) }
    dend_16 { pt3dadd( -28.7379, -27.7677, -18.5274, 1.13 ) }
    dend_16 { pt3dadd( -28.9482, -27.8319, -18.5978, 1.13 ) }
    dend_16 { pt3dadd( -30.6039, -28.3493, -19.1245, 0.23 ) }
    dend_16 { pt3dadd( -31.2806, -28.5782, -19.3272, 0.91 ) }
    dend_16 { pt3dadd( -32.6304, -29.0752, -19.7315, 0.23 ) }
    dend_16 { pt3dadd( -33.6963, -29.4527, -20.0313, 0.91 ) }
    dend_16 { pt3dadd( -35.0377, -29.9477, -20.4224, 0.23 ) }
    dend_16 { pt3dadd( -36.0362, -30.3211, -20.7351, 1.81 ) }
    dend_16 { pt3dadd( -37.8202, -31.0131, -21.3229, 0.23 ) }
    dend_16 { pt3dadd( -39.9544, -31.9051, -22.1273, 1.13 ) }
    dend_16 { pt3dadd( -41.7315, -32.7045, -22.9132, 0.23 ) }
    dend_16 { pt3dadd( -42.7073, -33.1604, -23.4008, 0.68 ) }
    dend_16 { pt3dadd( -44.2236, -33.8693, -24.2079, 1.36 ) }
    dend_16 { pt3dadd( -46.2504, -34.7537, -25.2919, 0.23 ) }
    dend_16 { pt3dadd( -47.9979, -35.4749, -26.2476, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -49.6542, -36.1076, -27.1683, 0.23 ) }
    dend_16 { pt3dadd( -50.8047, -36.5239, -27.7719, 0.23 ) }
    dend_16 { pt3dadd( -51.5912, -36.7657, -28.1441, 1.13 ) }
    dend_16 { pt3dadd( -53.087, -37.1756, -28.7617, 0.23 ) }
    dend_16 { pt3dadd( -53.7128, -37.325, -28.9868, 0.68 ) }
    dend_16 { pt3dadd( -54.7433, -37.5711, -29.2902, 0.23 ) }
    dend_16 { pt3dadd( -56.5433, -37.9959, -29.7344, 1.13 ) }
    dend_16 { pt3dadd( -58.9933, -38.5017, -30.3095, 0.23 ) }
    dend_16 { pt3dadd( -59.7037, -38.6251, -30.477, 0.23 ) }
    dend_16 { pt3dadd( -61.0784, -38.8585, -30.8661, 0.23 ) }
    dend_16 { pt3dadd( -61.9194, -38.9793, -31.1245, 1.13 ) }
    dend_16 { pt3dadd( -63.2118, -39.1281, -31.6178, 1.13 ) }
    dend_16 { pt3dadd( -65.5655, -39.3614, -32.6933, 0.23 ) }
    dend_16 { pt3dadd( -67.4806, -39.5243, -33.6556, 0.91 ) }
    dend_16 { pt3dadd( -69.7319, -39.7353, -34.8834, 0.23 ) }
    dend_16 { pt3dadd( -70.3176, -39.8047, -35.2225, 0.91 ) }
    dend_16 { pt3dadd( -72.7487, -40.19, -36.6679, 0.23 ) }
    dend_16 { pt3dadd( -74.061, -40.5027, -37.4841, 0.68 ) }
    dend_16 { pt3dadd( -75.2566, -40.8797, -38.2266, 0.23 ) }
    dend_16 { pt3dadd( -75.7031, -41.0436, -38.4774, 0.91 ) }
    dend_16 { pt3dadd( -76.8251, -41.4818, -38.9862, 0.23 ) }
    dend_16 { pt3dadd( -77.9313, -41.9293, -39.4295, 0.68 ) }
    dend_16 { pt3dadd( -79.3632, -42.5403, -39.8939, 0.23 ) }
    dend_16 { pt3dadd( -79.9684, -42.7965, -40.0853, 1.13 ) }
    dend_16 { pt3dadd( -82.6716, -43.9739, -40.9061, 0.23 ) }
    dend_16 { pt3dadd( -84.1067, -44.5781, -41.3517, 0.68 ) }
    dend_16 { pt3dadd( -86.0765, -45.3744, -41.9789, 0.23 ) }
    dend_16 { pt3dadd( -87.3492, -45.8871, -42.4042, 1.13 ) }
    dend_16 { pt3dadd( -90.4296, -47.1247, -43.421, 0.23 ) }
    dend_16 { pt3dadd( -91.7023, -47.641, -43.8425, 0.91 ) }
    dend_16 { pt3dadd( -92.9802, -48.1532, -44.2673, 0.23 ) }
    dend_16 { pt3dadd( -93.7063, -48.4395, -44.5189, 0.91 ) }
    dend_16 { pt3dadd( -95.0205, -49.046, -44.9614, 0.23 ) }
    dend_16 { pt3dadd( -95.8272, -49.4912, -45.2369, 0.23 ) }
    dend_16 { pt3dadd( -97.0208, -50.326, -45.5966, 0.91 ) }
    dend_16 { pt3dadd( -98.2843, -51.3614, -45.9277, 0.23 ) }
    dend_16 { pt3dadd( -98.7913, -51.8225, -46.0399, 0.91 ) }
    dend_16 { pt3dadd( -100.692, -53.7455, -46.4162, 0.23 ) }
    dend_16 { pt3dadd( -102.402, -55.6129, -46.7175, 1.13 ) }
    dend_16 { pt3dadd( -104.751, -58.3938, -47.1166, 0.23 ) }
    dend_16 { pt3dadd( -106.231, -60.2306, -47.3433, 0.91 ) }
    dend_16 { pt3dadd( -106.574, -60.6723, -47.381, 0.23 ) }
    dend_16 { pt3dadd( -107.46, -61.8486, -47.4532, 0.23 ) }
    dend_16 { pt3dadd( -108.002, -62.5861, -47.4722, 0.45 ) }
    dend_16 { pt3dadd( -108.644, -63.5268, -47.4519, 0.23 ) }
    dend_16 { pt3dadd( -109.269, -64.5602, -47.5037, 0.91 ) }
    dend_16 { pt3dadd( -109.883, -65.5991, -47.6216, 0.23 ) }
    dend_16 { pt3dadd( -110.486, -66.6298, -47.7786, 0.68 ) }
    dend_16 { pt3dadd( -111.695, -68.649, -48.1446, 0.23 ) }
    dend_16 { pt3dadd( -112.012, -69.1998, -48.2628, 0.91 ) }
    dend_16 { pt3dadd( -113.607, -71.9924, -48.9364, 0.23 ) }
    dend_16 { pt3dadd( -113.973, -72.6277, -49.1021, 1.13 ) }
    dend_16 { pt3dadd( -114.739, -73.8758, -49.4587, 1.13 ) }
    dend_16 { pt3dadd( -115.411, -74.9283, -49.7658, 1.13 ) }
    dend_16 { pt3dadd( -116.299, -76.4085, -50.1731, 0.68 ) }
    dend_16 { pt3dadd( -116.654, -77.0804, -50.3319, 0.23 ) }
    dend_16 { pt3dadd( -117.055, -77.8914, -50.5052, 0.91 ) }
    dend_16 { pt3dadd( -117.966, -79.8457, -50.9524, 0.23 ) }
    dend_16 { pt3dadd( -118.581, -81.2346, -51.3023, 2.04 ) }
    dend_16 { pt3dadd( -119.637, -83.7074, -51.9491, 0.23 ) }
    dend_16 { pt3dadd( -120.151, -84.9412, -52.2912, 0.68 ) }
    dend_16 { pt3dadd( -121.089, -87.3198, -52.9756, 0.23 ) }
    dend_16 { pt3dadd( -121.482, -88.3405, -53.2959, 0.91 ) }
    dend_16 { pt3dadd( -122.26, -90.2837, -53.9375, 0.23 ) }
    dend_16 { pt3dadd( -122.413, -90.6106, -54.0661, 0.68 ) }
    dend_16 { pt3dadd( -122.913, -91.6322, -54.5013, 0.23 ) }
    dend_16 { pt3dadd( -123.468, -92.9097, -55.0535, 0.91 ) }
    dend_16 { pt3dadd( -124.003, -94.2998, -55.6499, 0.23 ) }
    dend_16 { pt3dadd( -124.365, -95.2851, -56.0857, 1.13 ) }
    dend_16 { pt3dadd( -125.445, -98.311, -57.4294, 0.23 ) }
    dend_16 { pt3dadd( -125.999, -99.8726, -58.1281, 0.91 ) }
    dend_16 { pt3dadd( -126.803, -102.111, -59.1222, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 72/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.7445, -17.8596, -4.92729, 0.68 ) }
    dend_15 { pt3dadd( 8.34537, -20.1588, -5.15156, 0.68 ) }
    dend_15 { pt3dadd( 7.97669, -21.9797, -5.31459, 1.36 ) }
    dend_15 { pt3dadd( 7.85073, -22.5614, -5.36051, 1.36 ) }
    dend_15 { pt3dadd( 7.19439, -25.2738, -5.55357, 0.68 ) }
    dend_15 { pt3dadd( 6.61506, -27.3319, -5.67459, 1.13 ) }
    dend_15 { pt3dadd( 5.7741, -29.9831, -5.87219, 0.45 ) }
    dend_15 { pt3dadd( 5.23758, -31.3891, -5.98328, 1.13 ) }
    dend_15 { pt3dadd( 4.41695, -33.3501, -6.20718, 1.81 ) }
    dend_15 { pt3dadd( 3.81467, -34.7223, -6.40465, 1.81 ) }
    dend_15 { pt3dadd( 2.07335, -38.6201, -7.04698, 0.68 ) }
    dend_15 { pt3dadd( 1.27042, -40.4504, -7.36852, 1.36 ) }
    dend_15 { pt3dadd( 0.417418, -42.4361, -7.76647, 1.81 ) }
    dend_15 { pt3dadd( -0.947523, -45.7957, -8.50226, 0.91 ) }
    dend_15 { pt3dadd( -2.15452, -48.9562, -9.21427, 0.68 ) }
    dend_15 { pt3dadd( -2.43846, -49.7856, -9.40144, 2.27 ) }
    dend_15 { pt3dadd( -2.86556, -51.2014, -9.71316, 1.59 ) }
    dend_15 { pt3dadd( -3.56081, -53.9286, -10.2172, 0.45 ) }
    dend_15 { pt3dadd( -4.0909, -56.3535, -10.6139, 1.36 ) }
    dend_15 { pt3dadd( -4.57667, -58.9634, -10.9404, 0.68 ) }
    dend_15 { pt3dadd( -4.90514, -60.8713, -11.1489, 1.81 ) }
    dend_15 { pt3dadd( -5.0552, -61.7535, -11.2542, 2.27 ) }
    dend_15 { pt3dadd( -5.53106, -64.699, -11.6302, 0.23 ) }
    dend_15 { pt3dadd( -5.67029, -65.5719, -11.7397, 0.23 ) }
    dend_15 { pt3dadd( -5.90502, -67.21, -11.956, 1.59 ) }
    dend_15 { pt3dadd( -6.03019, -68.2038, -12.1066, 1.59 ) }
    dend_15 { pt3dadd( -6.438, -71.4732, -12.6354, 0.23 ) }
    dend_15 { pt3dadd( -6.59099, -72.6894, -12.8441, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -6.67313, -73.4287, -13.002, 1.13 ) }
    dend_15 { pt3dadd( -6.82669, -75.176, -13.4089, 1.13 ) }
    dend_15 { pt3dadd( -6.95758, -76.9848, -13.8406, 0.23 ) }
    dend_15 { pt3dadd( -6.9875, -77.363, -13.9206, 1.13 ) }
    dend_15 { pt3dadd( -7.1251, -78.8535, -14.1734, 1.13 ) }
    dend_15 { pt3dadd( -7.39012, -81.4267, -14.5821, 0.23 ) }
    dend_15 { pt3dadd( -7.42148, -81.7257, -14.6273, 1.81 ) }
    dend_15 { pt3dadd( -7.65502, -83.3547, -14.8411, 1.81 ) }
    dend_15 { pt3dadd( -8.1434, -86.3323, -15.1604, 0.23 ) }
    dend_15 { pt3dadd( -8.4627, -87.7901, -15.2846, 0.23 ) }
    dend_15 { pt3dadd( -9.13655, -90.185, -15.3884, 2.5 ) }
    dend_15 { pt3dadd( -9.4019, -91.0439, -15.3893, 2.5 ) }
    dend_15 { pt3dadd( -10.3769, -94.2075, -15.3584, 0.45 ) }
    dend_15 { pt3dadd( -10.709, -95.3633, -15.3358, 1.13 ) }
    dend_15 { pt3dadd( -11.4457, -98.2602, -15.252, 0.23 ) }
    dend_15 { pt3dadd( -12.0165, -100.841, -15.1993, 2.04 ) }
    dend_15 { pt3dadd( -12.5191, -103.817, -15.1624, 0.23 ) }
    dend_15 { pt3dadd( -12.7051, -105.602, -15.1702, 1.59 ) }
    dend_15 { pt3dadd( -12.7147, -107.542, -15.2567, 0.68 ) }
    dend_15 { pt3dadd( -12.5766, -109.744, -15.4624, 0.23 ) }
    dend_15 { pt3dadd( -12.3612, -111.296, -15.6826, 0.23 ) }
    dend_15 { pt3dadd( -12.1525, -112.496, -15.9091, 0.68 ) }
    dend_15 { pt3dadd( -11.9476, -113.741, -16.1871, 1.59 ) }
    dend_15 { pt3dadd( -11.5507, -116.571, -16.8297, 0.23 ) }
    dend_15 { pt3dadd( -11.436, -117.931, -17.1573, 0.91 ) }
    dend_15 { pt3dadd( -11.3885, -119.407, -17.5047, 0.23 ) }
    dend_15 { pt3dadd( -11.3895, -120.598, -17.7588, 0.68 ) }
    dend_15 { pt3dadd( -11.4679, -121.88, -18.0159, 0.23 ) }
    dend_15 { pt3dadd( -11.6797, -123.663, -18.3293, 2.04 ) }
    dend_15 { pt3dadd( -12.2123, -126.643, -18.7601, 0.23 ) }
    dend_15 { pt3dadd( -12.4663, -127.905, -18.9176, 0.45 ) }
    dend_15 { pt3dadd( -12.7312, -129.065, -19.0523, 0.23 ) }
    dend_15 { pt3dadd( -13.1754, -130.766, -19.2348, 1.81 ) }
    dend_15 { pt3dadd( -13.8966, -133.147, -19.451, 0.23 ) }
    dend_15 { pt3dadd( -14.674, -135.333, -19.6218, 1.59 ) }
    dend_15 { pt3dadd( -15.3385, -136.985, -19.7092, 1.59 ) }
    dend_15 { pt3dadd( -16.222, -139.014, -19.8413, 0.23 ) }
    dend_15 { pt3dadd( -16.8281, -140.271, -19.9349, 1.59 ) }
    dend_15 { pt3dadd( -17.8775, -142.285, -20.1054, 0.23 ) }
    dend_15 { pt3dadd( -18.998, -144.254, -20.3597, 0.23 ) }
    dend_15 { pt3dadd( -19.4673, -145.033, -20.4876, 0.91 ) }
    dend_15 { pt3dadd( -20.4103, -146.502, -20.7772, 0.23 ) }
    dend_15 { pt3dadd( -20.9827, -147.422, -20.9764, 1.36 ) }
    dend_15 { pt3dadd( -21.1662, -147.75, -21.0502, 1.36 ) }
    dend_15 { pt3dadd( -22.3286, -150.149, -21.5639, 0.23 ) }
    dend_15 { pt3dadd( -22.8354, -151.31, -21.7963, 1.13 ) }
    dend_15 { pt3dadd( -22.9426, -151.6, -21.8408, 0.23 ) }
    dend_15 { pt3dadd( -23.5368, -153.288, -22.0339, 0.23 ) }
    dend_15 { pt3dadd( -23.8367, -154.131, -22.1112, 1.81 ) }
    dend_15 { pt3dadd( -24.8039, -156.728, -22.3072, 0.23 ) }
    dend_15 { pt3dadd( -25.3252, -158.098, -22.376, 1.59 ) }
    dend_15 { pt3dadd( -26.5965, -161.121, -22.6376, 0.23 ) }
    dend_15 { pt3dadd( -27.1124, -162.303, -22.7689, 2.04 ) }
    dend_15 { pt3dadd( -27.5864, -163.305, -22.9, 2.04 ) }
    dend_15 { pt3dadd( -28.391, -165.094, -23.1391, 0.23 ) }
    dend_15 { pt3dadd( -28.952, -166.483, -23.319, 0.91 ) }
    dend_15 { pt3dadd( -29.9891, -169.305, -23.6501, 0.23 ) }
    dend_15 { pt3dadd( -30.4371, -170.723, -23.7931, 1.36 ) }
    dend_15 { pt3dadd( -30.6316, -171.47, -23.849, 1.36 ) }
    dend_15 { pt3dadd( -31.4789, -175.268, -24.0227, 0.45 ) }
    dend_15 { pt3dadd( -31.9243, -177.339, -24.0968, 1.36 ) }
    dend_15 { pt3dadd( -32.1152, -178.208, -24.1221, 1.36 ) }
    dend_15 { pt3dadd( -33.0238, -182.37, -24.1965, 0.23 ) }
    dend_15 { pt3dadd( -33.5003, -184.182, -24.2373, 2.04 ) }
    dend_15 { pt3dadd( -34.8775, -188.92, -24.3607, 0.23 ) }
    dend_15 { pt3dadd( -35.3933, -190.397, -24.4178, 0.23 ) }
    dend_15 { pt3dadd( -35.8562, -191.609, -24.4742, 1.59 ) }
    dend_15 { pt3dadd( -36.3502, -192.801, -24.5225, 1.59 ) }
    dend_15 { pt3dadd( -37.9397, -196.368, -24.651, 0.23 ) }
    dend_15 { pt3dadd( -38.5612, -197.719, -24.691, 1.81 ) }
    dend_15 { pt3dadd( -40.3519, -201.377, -24.7507, 0.23 ) }
    dend_15 { pt3dadd( -41.345, -203.334, -24.7517, 1.81 ) }
    dend_15 { pt3dadd( -42.9964, -206.371, -24.742, 0.23 ) }
    dend_15 { pt3dadd( -43.6551, -207.461, -24.7333, 1.81 ) }
    dend_15 { pt3dadd( -44.0947, -208.068, -24.7242, 1.81 ) }
    dend_15 { pt3dadd( -45.3155, -209.467, -24.692, 0.23 ) }
    dend_15 { pt3dadd( -46.2457, -210.374, -24.6596, 0.91 ) }
    dend_15 { pt3dadd( -47.8805, -211.822, -24.6573, 0.23 ) }
    dend_15 { pt3dadd( -49.4312, -213.103, -24.7037, 1.13 ) }
    dend_15 { pt3dadd( -51.2761, -214.613, -24.7767, 0.23 ) }
    dend_15 { pt3dadd( -52.2369, -215.453, -24.8457, 1.36 ) }
    dend_15 { pt3dadd( -52.8923, -216.078, -24.9099, 1.36 ) }
    dend_15 { pt3dadd( -55.4961, -218.696, -25.2199, 0.23 ) }
    dend_15 { pt3dadd( -55.8162, -219.033, -25.2686, 1.81 ) }
    dend_15 { pt3dadd( -56.4204, -219.717, -25.3621, 1.36 ) }
    dend_15 { pt3dadd( -59.0721, -222.949, -25.9317, 0.23 ) }
    dend_15 { pt3dadd( -60.1437, -224.296, -26.2129, 1.13 ) }
    dend_15 { pt3dadd( -60.2794, -224.473, -26.2523, 1.13 ) }
    dend_15 { pt3dadd( -62.0195, -226.882, -26.7964, 0.23 ) }
    dend_15 { pt3dadd( -63.3541, -228.763, -27.2204, 1.13 ) }
    dend_15 { pt3dadd( -65.2894, -231.609, -27.8369, 0.23 ) }
    dend_15 { pt3dadd( -66.2159, -233.008, -28.1414, 1.36 ) }
    dend_15 { pt3dadd( -67.2884, -234.672, -28.497, 0.68 ) }
    dend_15 { pt3dadd( -68.019, -235.811, -28.7252, 1.36 ) }
    dend_15 { pt3dadd( -68.5439, -236.623, -28.8658, 1.36 ) }
    dend_15 { pt3dadd( -69.9065, -238.659, -29.165, 0.45 ) }
    dend_15 { pt3dadd( -70.8776, -240.196, -29.2957, 0.91 ) }
    dend_15 { pt3dadd( -71.7032, -241.613, -29.3723, 0.23 ) }
    dend_15 { pt3dadd( -72.2989, -242.79, -29.4147, 1.59 ) }
    dend_15 { pt3dadd( -73.2912, -245.262, -29.4549, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_15 { pt3dadd( -73.689, -246.591, -29.4526, 1.36 ) }
    dend_15 { pt3dadd( -74.2309, -249.274, -29.3936, 0.45 ) }
    dend_15 { pt3dadd( -74.3941, -250.921, -29.2832, 0.91 ) }
    dend_15 { pt3dadd( -74.4302, -252.488, -29.1462, 0.91 ) }
    dend_15 { pt3dadd( -74.3593, -254.884, -28.8586, 0.23 ) }
    dend_15 { pt3dadd( -74.307, -255.89, -28.7112, 1.13 ) }
    dend_15 { pt3dadd( -74.2816, -257.088, -28.4876, 1.13 ) }
    dend_15 { pt3dadd( -74.3551, -259.448, -27.9751, 0.23 ) }
    dend_15 { pt3dadd( -74.5712, -261.489, -27.4995, 0.91 ) }
    dend_15 { pt3dadd( -74.8009, -262.773, -27.1579, 0.23 ) }
    dend_15 { pt3dadd( -75.2359, -264.578, -26.633, 1.59 ) }
    dend_15 { pt3dadd( -76.1641, -267.569, -25.6882, 0.23 ) }
    dend_15 { pt3dadd( -76.4121, -268.253, -25.4626, 0.91 ) }
    dend_15 { pt3dadd( -77.1109, -269.921, -24.9168, 0.23 ) }
    dend_15 { pt3dadd( -77.84, -271.4, -24.406, 1.36 ) }
    dend_15 { pt3dadd( -78.0137, -271.717, -24.2983, 1.36 ) }
    dend_15 { pt3dadd( -79.3068, -273.803, -23.5681, 0.45 ) }
    dend_15 { pt3dadd( -79.6308, -274.273, -23.4267, 1.36 ) }
    dend_15 { pt3dadd( -80.2618, -275.179, -23.1848, 1.36 ) }
    dend_15 { pt3dadd( -81.3459, -276.726, -22.8336, 0.45 ) }
    dend_15 { pt3dadd( -81.942, -277.571, -22.6861, 0.45 ) }
    dend_15 { pt3dadd( -82.5065, -278.392, -22.5781, 1.13 ) }
    dend_15 { pt3dadd( -84.4849, -281.297, -22.3249, 0.23 ) }
    dend_15 { pt3dadd( -84.9017, -281.92, -22.2759, 1.36 ) }
    dend_15 { pt3dadd( -85.0604, -282.161, -22.2597, 1.36 ) }
    dend_15 { pt3dadd( -86.925, -285.002, -22.1207, 0.45 ) }
    dend_15 { pt3dadd( -87.8536, -286.347, -22.0448, 1.13 ) }
    dend_15 { pt3dadd( -88.3855, -287.091, -21.9956, 1.13 ) }
    dend_15 { pt3dadd( -89.7883, -289.041, -21.8625, 0.23 ) }
    dend_15 { pt3dadd( -90.5356, -290.083, -21.7829, 0.68 ) }
    dend_15 { pt3dadd( -91.7789, -291.944, -21.6234, 0.91 ) }
    dend_15 { pt3dadd( -92.8922, -293.759, -21.4539, 0.23 ) }
    dend_15 { pt3dadd( -93.5892, -294.948, -21.3279, 1.59 ) }
    dend_15 { pt3dadd( -95.2179, -297.908, -21.0015, 0.23 ) }
    dend_15 { pt3dadd( -95.7552, -298.931, -20.8904, 0.91 ) }
    dend_15 { pt3dadd( -97.1825, -301.923, -20.585, 0.23 ) }
    dend_15 { pt3dadd( -97.5331, -302.731, -20.501, 1.13 ) }
    dend_15 { pt3dadd( -98.6466, -305.404, -20.2188, 0.23 ) }
    dend_15 { pt3dadd( -99.5317, -307.504, -19.9799, 0.23 ) }
    dend_15 { pt3dadd( -100.386, -309.451, -19.721, 0.91 ) }
    dend_15 { pt3dadd( -101.688, -312.136, -19.3391, 0.23 ) }
    dend_15 { pt3dadd( -102.37, -313.271, -19.1529, 1.59 ) }
    dend_15 { pt3dadd( -103.464, -314.822, -18.8722, 0.23 ) }
    dend_15 { pt3dadd( -104.308, -315.774, -18.6918, 0.91 ) }
    dend_15 { pt3dadd( -105.418, -316.745, -18.4798, 0.23 ) }
    dend_15 { pt3dadd( -106.56, -317.55, -18.2896, 1.36 ) }
    dend_15 { pt3dadd( -109.656, -319.464, -17.8524, 0.23 ) }
    dend_15 { pt3dadd( -110.652, -320.081, -17.7167, 0.91 ) }
    dend_15 { pt3dadd( -113.59, -322.008, -17.3203, 0.23 ) }
    dend_15 { pt3dadd( -115.41, -323.361, -17.0363, 1.81 ) }
    dend_15 { pt3dadd( -116.703, -324.479, -16.8178, 0.23 ) }
    dend_15 { pt3dadd( -118.056, -325.913, -16.5146, 0.68 ) }
    dend_15 { pt3dadd( -119.128, -327.264, -16.1999, 0.23 ) }
    dend_15 { pt3dadd( -120.266, -328.861, -15.7774, 1.13 ) }
    dend_15 { pt3dadd( -121.716, -331.189, -15.0525, 0.23 ) }
    dend_15 { pt3dadd( -122.458, -332.47, -14.5966, 1.36 ) }
    dend_15 { pt3dadd( -123.607, -334.494, -13.8095, 0.23 ) }
    dend_15 { pt3dadd( -124.737, -336.341, -13.0282, 0.91 ) }
    dend_15 { pt3dadd( -126.026, -338.318, -12.1562, 0.23 ) }
    dend_15 { pt3dadd( -127.212, -340.084, -11.3388, 0.23 ) }
    dend_15 { pt3dadd( -128.43, -341.833, -10.5312, 0.91 ) }
    dend_15 { pt3dadd( -128.965, -342.59, -10.1887, 0.23 ) }
    dend_15 { pt3dadd( -129.603, -343.538, -9.79261, 0.91 ) }
    dend_15 { pt3dadd( -130.594, -345.162, -9.14631, 0.23 ) }
    dend_15 { pt3dadd( -131.223, -346.169, -8.71272, 0.91 ) }
    dend_15 { pt3dadd( -133.725, -349.842, -6.87949, 0.23 ) }
    dend_15 { pt3dadd( -134.788, -351.232, -6.02892, 1.13 ) }
    dend_15 { pt3dadd( -136.293, -352.887, -4.79072, 0.45 ) }
    dend_15 { pt3dadd( -137.635, -354.088, -3.67633, 1.13 ) }
    dend_15 { pt3dadd( -139.418, -355.14, -2.18348, 0.23 ) }
    dend_15 { pt3dadd( -140.789, -355.513, -0.983434, 0.23 ) }
    dend_15 { pt3dadd( -142.392, -355.36, 0.324402, 0.91 ) }
    dend_15 { pt3dadd( -144.403, -354.789, 1.80209, 0.23 ) }
    dend_15 { pt3dadd( -145.502, -354.362, 2.45777, 0.23 ) }
    dend_15 { pt3dadd( -147.324, -353.593, 3.27507, 0.91 ) }
    dend_15 { pt3dadd( -149.19, -352.86, 3.79194, 0.23 ) }
    dend_15 { pt3dadd( -151.598, -351.944, 4.24538, 0.23 ) }
    dend_15 { pt3dadd( -152.101, -351.753, 4.3013, 0.68 ) }
    dend_15 { pt3dadd( -154.032, -351.077, 4.38424, 0.23 ) }
    dend_15 { pt3dadd( -155.124, -350.791, 4.27768, 0.23 ) }
    dend_15 { pt3dadd( -156.947, -350.533, 3.76291, 0.68 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -5.16803, -23.5684, -0.173031, 0.45 ) }
    dend_12 { pt3dadd( -7.35078, -26.2677, 0.198928, 0.45 ) }
    dend_12 { pt3dadd( -7.83504, -26.8456, 0.237286, 1.59 ) }
    dend_12 { pt3dadd( -8.77595, -27.9536, 0.263453, 1.59 ) }
    dend_12 { pt3dadd( -10.0773, -29.4725, 0.24218, 1.36 ) }
    dend_12 { pt3dadd( -11.0589, -30.6274, 0.207652, 0.91 ) }
    dend_12 { pt3dadd( -12.2813, -32.0551, 0.153241, 0.91 ) }
    dend_12 { pt3dadd( -13.8579, -33.8344, -0.0123387, 1.13 ) }
    dend_12 { pt3dadd( -16.4166, -36.7629, -0.334345, 1.59 ) }
    dend_12 { pt3dadd( -17.7914, -38.3264, -0.527034, 0.91 ) }
    dend_12 { pt3dadd( -18.4616, -39.0564, -0.624894, 0.23 ) }
    dend_12 { pt3dadd( -19.2052, -39.8604, -0.74239, 0.91 ) }
    dend_12 { pt3dadd( -20.3336, -41.0331, -0.918182, 2.04 ) }
    dend_12 { pt3dadd( -22.2526, -42.8227, -1.12607, 0.23 ) }
    dend_12 { pt3dadd( -23.153, -43.5987, -1.18913, 1.36 ) }
    dend_12 { pt3dadd( -24.2359, -44.5108, -1.21652, 1.36 ) }
    dend_12 { pt3dadd( -25.7078, -45.7525, -1.19546, 0.45 ) }
    dend_12 { pt3dadd( -27.3532, -47.1829, -1.1132, 1.13 ) }
    dend_12 { pt3dadd( -29.3412, -48.9324, -0.944781, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -30.011, -49.5388, -0.873327, 1.81 ) }
    dend_12 { pt3dadd( -32.0387, -51.4048, -0.657672, 0.45 ) }
    dend_12 { pt3dadd( -33.2081, -52.4471, -0.535874, 0.45 ) }
    dend_12 { pt3dadd( -34.6025, -53.6689, -0.383208, 1.81 ) }
    dend_12 { pt3dadd( -35.6982, -54.6247, -0.282074, 1.13 ) }
    dend_12 { pt3dadd( -38.7031, -57.2469, -0.118634, 0.23 ) }
    dend_12 { pt3dadd( -39.449, -57.8719, -0.0807061, 0.23 ) }
    dend_12 { pt3dadd( -41.4153, -59.375, -0.00194072, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 8/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -5.16803, -23.5684, -0.173031, 0.91 ) }
    dend_7 { pt3dadd( -6.26897, -24.4656, -1.74503, 0.91 ) }
    dend_7 { pt3dadd( -7.7921, -25.7069, -3.91989, 0.68 ) }
    dend_7 { pt3dadd( -8.89298, -26.6041, -5.4918, 1.59 ) }
    dend_7 { pt3dadd( -10.1094, -27.5954, -7.22866, 0.45 ) }
    dend_7 { pt3dadd( -10.7945, -28.1537, -8.20694, 0.45 ) }
    dend_7 { pt3dadd( -11.8491, -29.0132, -9.71281, 1.81 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 15/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.45106, -30.0591, 1.98857, 0.23 ) }
    dend_3 { pt3dadd( -2.76709, -32.4671, 2.73901, 0.23 ) }
    dend_3 { pt3dadd( -3.00871, -34.1053, 3.2014, 1.36 ) }
    dend_3 { pt3dadd( -3.31103, -35.9629, 3.66935, 1.36 ) }
    dend_3 { pt3dadd( -3.52466, -37.2, 3.95944, 0.68 ) }
    dend_3 { pt3dadd( -3.74041, -38.3691, 4.25018, 1.36 ) }
    dend_3 { pt3dadd( -3.96079, -39.5731, 4.54737, 1.36 ) }
    dend_3 { pt3dadd( -4.27419, -41.1716, 4.91361, 1.36 ) }
    dend_3 { pt3dadd( -4.6913, -43.2502, 5.347, 0.45 ) }
    dend_3 { pt3dadd( -5.19699, -45.6607, 5.81956, 1.81 ) }
    dend_3 { pt3dadd( -5.85206, -48.6604, 6.3642, 0.45 ) }
    dend_3 { pt3dadd( -6.14638, -50.0919, 6.68254, 0.45 ) }
    dend_3 { pt3dadd( -6.3782, -51.2298, 6.94073, 1.81 ) }
    dend_3 { pt3dadd( -6.65103, -52.6592, 7.28361, 2.27 ) }
    dend_3 { pt3dadd( -7.04771, -54.7977, 7.81402, 1.36 ) }
    dend_3 { pt3dadd( -7.30815, -56.2628, 8.17818, 2.27 ) }
    dend_3 { pt3dadd( -7.80966, -59.3669, 8.93867, 2.27 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 32/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.45106, -30.0591, 1.98857, 0.45 ) }
    dend_2 { pt3dadd( -1.3246, -31.9194, 2.134, 0.45 ) }
    dend_2 { pt3dadd( -0.332104, -33.6561, 2.29151, 0.45 ) }
    dend_2 { pt3dadd( 0.70959, -35.4009, 2.51066, 1.13 ) }
    dend_2 { pt3dadd( 2.10159, -37.7543, 2.8522, 0.23 ) }
    dend_2 { pt3dadd( 2.72324, -38.8009, 3.00894, 1.36 ) }
    dend_2 { pt3dadd( 3.54478, -40.2064, 3.21014, 1.36 ) }
    dend_2 { pt3dadd( 4.95891, -42.7197, 3.62917, 0.23 ) }
    dend_2 { pt3dadd( 6.14974, -44.9376, 3.98999, 0.68 ) }
    dend_2 { pt3dadd( 7.30888, -47.2325, 4.31193, 0.23 ) }
    dend_2 { pt3dadd( 7.9624, -48.6052, 4.43199, 1.36 ) }
    dend_2 { pt3dadd( 9.19475, -51.2606, 4.57082, 0.45 ) }
    dend_2 { pt3dadd( 10.1901, -53.5444, 4.65681, 0.45 ) }
    dend_2 { pt3dadd( 10.5125, -54.3699, 4.67664, 1.36 ) }
    dend_2 { pt3dadd( 10.7174, -54.9887, 4.67704, 1.36 ) }
    dend_2 { pt3dadd( 11.2829, -57.0007, 4.6831, 0.23 ) }
    dend_2 { pt3dadd( 11.6156, -58.2674, 4.72335, 0.91 ) }
    dend_2 { pt3dadd( 12.0234, -59.8109, 4.82081, 0.23 ) }
    dend_2 { pt3dadd( 12.243, -60.5806, 4.89924, 0.91 ) }
    dend_2 { pt3dadd( 12.705, -62.0634, 5.12028, 1.59 ) }
    dend_2 { pt3dadd( 13.8134, -65.4459, 5.73134, 0.23 ) }
    dend_2 { pt3dadd( 14.6621, -67.8432, 6.22957, 0.23 ) }
    dend_2 { pt3dadd( 15.0288, -68.8086, 6.42539, 1.81 ) }
    dend_2 { pt3dadd( 16.2917, -71.8019, 6.98282, 0.68 ) }
    dend_2 { pt3dadd( 17.1144, -73.6463, 7.28386, 0.68 ) }
    dend_2 { pt3dadd( 17.6585, -74.7869, 7.44532, 1.36 ) }
    dend_2 { pt3dadd( 18.2414, -75.9429, 7.57054, 1.81 ) }
    dend_2 { pt3dadd( 19.1407, -77.7491, 7.70703, 0.23 ) }
    dend_2 { pt3dadd( 19.7671, -78.9967, 7.75318, 0.91 ) }
    dend_2 { pt3dadd( 20.4813, -80.3903, 7.70636, 0.23 ) }
    dend_2 { pt3dadd( 21.3295, -82.0901, 7.54212, 0.91 ) }
    dend_2 { pt3dadd( 21.8563, -83.1692, 7.42223, 0.91 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -19.112, 10.1278, -3.12945, 0.23 ) }
    dend_43 { pt3dadd( -20.0542, 11.7861, -3.80398, 0.23 ) }
    dend_43 { pt3dadd( -20.9972, 13.4784, -4.44075, 1.13 ) }
    dend_43 { pt3dadd( -21.6463, 14.6154, -4.83539, 0.68 ) }
    dend_43 { pt3dadd( -22.7532, 16.5105, -5.44203, 1.36 ) }
    dend_43 { pt3dadd( -23.3801, 17.6019, -5.74903, 1.36 ) }
    dend_43 { pt3dadd( -24.3388, 19.3178, -6.15202, 1.13 ) }
    dend_43 { pt3dadd( -25.1633, 20.8304, -6.42976, 0.91 ) }
    dend_43 { pt3dadd( -25.7701, 21.9727, -6.55604, 0.91 ) }
    dend_43 { pt3dadd( -26.2777, 22.9926, -6.58771, 0.91 ) }
    dend_43 { pt3dadd( -27.2237, 24.975, -6.53566, 0.23 ) }
    dend_43 { pt3dadd( -27.9903, 26.7782, -6.45433, 1.13 ) }
    dend_43 { pt3dadd( -28.3737, 27.7125, -6.3964, 1.59 ) }
    dend_43 { pt3dadd( -29.1989, 29.6918, -6.24215, 0.23 ) }
    dend_43 { pt3dadd( -30.1666, 31.9796, -6.0665, 1.36 ) }
    dend_43 { pt3dadd( -30.5651, 32.9117, -6.00021, 1.59 ) }
    dend_43 { pt3dadd( -31.6498, 35.3978, -5.84248, 0.45 ) }
    dend_43 { pt3dadd( -32.2352, 36.7552, -5.79149, 0.45 ) }
    dend_43 { pt3dadd( -33.01, 38.6726, -5.75579, 1.59 ) }
    dend_43 { pt3dadd( -33.4967, 39.979, -5.75707, 0.68 ) }
    dend_43 { pt3dadd( -34.1617, 42.0138, -5.82691, 0.23 ) }
    dend_43 { pt3dadd( -34.3904, 42.915, -5.88579, 0.68 ) }
    dend_43 { pt3dadd( -34.8257, 45.4032, -6.19443, 0.23 ) }
    dend_43 { pt3dadd( -34.9937, 47.4653, -6.53298, 2.04 ) }
    dend_43 { pt3dadd( -34.9833, 48.6429, -6.78716, 2.04 ) }
    dend_43 { pt3dadd( -34.7947, 50.7802, -7.32818, 0.23 ) }
    dend_43 { pt3dadd( -34.4754, 52.6663, -7.87808, 0.23 ) }
    dend_43 { pt3dadd( -34.0625, 54.4744, -8.46947, 0.68 ) }
    dend_43 { pt3dadd( -33.5302, 56.4222, -9.1608, 0.23 ) }
    dend_43 { pt3dadd( -33.1066, 57.8896, -9.69145, 1.59 ) }
    dend_43 { pt3dadd( -32.7855, 59.0837, -10.1053, 1.59 ) }
    dend_43 { pt3dadd( -32.3952, 60.6877, -10.6167, 0.45 ) }
    dend_43 { pt3dadd( -32.0506, 62.6122, -11.1214, 0.45 ) }
    dend_43 { pt3dadd( -31.9172, 63.5951, -11.3404, 1.36 ) }
    dend_43 { pt3dadd( -31.7272, 65.4136, -11.6941, 1.59 ) }
    dend_43 { pt3dadd( -31.5298, 67.5871, -11.993, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_43 { pt3dadd( -31.3515, 69.5294, -12.1964, 1.59 ) }
    dend_43 { pt3dadd( -30.8499, 74.0329, -12.5305, 0.23 ) }
    dend_43 { pt3dadd( -30.7568, 74.67, -12.5622, 1.13 ) }
    dend_43 { pt3dadd( -30.1883, 77.9991, -12.6566, 0.23 ) }
    dend_43 { pt3dadd( -29.7701, 80.2775, -12.673, 1.81 ) }
    dend_43 { pt3dadd( -29.2787, 82.6958, -12.6183, 0.23 ) }
    dend_43 { pt3dadd( -28.9979, 84.0688, -12.5671, 0.91 ) }
    dend_43 { pt3dadd( -28.1746, 88.0013, -12.397, 0.23 ) }
    dend_43 { pt3dadd( -27.768, 90.1519, -12.3191, 2.04 ) }
    dend_43 { pt3dadd( -27.6192, 91.0413, -12.3158, 2.72 ) }
    dend_43 { pt3dadd( -27.2132, 94.1119, -12.4404, 0.23 ) }
    dend_43 { pt3dadd( -26.8703, 97.718, -12.6587, 0.23 ) }
    dend_43 { pt3dadd( -26.8171, 98.6157, -12.7352, 0.91 ) }
    dend_43 { pt3dadd( -26.7984, 99.5308, -12.8398, 1.36 ) }
    dend_43 { pt3dadd( -26.8258, 102.565, -13.2823, 0.45 ) }
    dend_43 { pt3dadd( -26.9013, 105.081, -13.6369, 1.13 ) }
    dend_43 { pt3dadd( -26.9735, 106.092, -13.768, 1.13 ) }
    dend_43 { pt3dadd( -27.1876, 108.186, -13.9845, 0.23 ) }
    dend_43 { pt3dadd( -27.2769, 108.949, -14.045, 0.91 ) }
    dend_43 { pt3dadd( -27.5844, 111.372, -14.1693, 0.23 ) }
    dend_43 { pt3dadd( -27.8366, 113.137, -14.1892, 1.36 ) }
    dend_43 { pt3dadd( -28.2103, 115.9, -14.2098, 0.45 ) }
    dend_43 { pt3dadd( -28.283, 116.466, -14.2183, 1.13 ) }
    dend_43 { pt3dadd( -28.7066, 119.487, -14.3253, 0.23 ) }
    dend_43 { pt3dadd( -28.8296, 120.38, -14.3738, 2.04 ) }
    dend_43 { pt3dadd( -29.2679, 123.678, -14.6454, 0.23 ) }
    dend_43 { pt3dadd( -29.4267, 124.901, -14.7849, 0.91 ) }
    dend_43 { pt3dadd( -29.524, 125.788, -14.9141, 0.91 ) }
    dend_43 { pt3dadd( -29.7188, 127.622, -15.2294, 0.23 ) }
    dend_43 { pt3dadd( -29.9569, 129.968, -15.7285, 2.04 ) }
    dend_43 { pt3dadd( -30.1421, 131.788, -16.1802, 0.23 ) }
    dend_43 { pt3dadd( -30.2303, 132.682, -16.4255, 0.91 ) }
    dend_43 { pt3dadd( -30.5562, 136.369, -17.4587, 0.23 ) }
    dend_43 { pt3dadd( -30.6746, 137.989, -17.9145, 1.81 ) }
    dend_43 { pt3dadd( -30.8697, 141.99, -19.015, 0.23 ) }
    dend_43 { pt3dadd( -30.9566, 144.189, -19.6093, 1.59 ) }
    dend_43 { pt3dadd( -30.9726, 144.768, -19.7539, 1.59 ) }
    dend_43 { pt3dadd( -31.0473, 147.775, -20.4343, 0.68 ) }
    dend_43 { pt3dadd( -31.0726, 148.981, -20.6579, 1.36 ) }
    dend_43 { pt3dadd( -31.126, 152.013, -21.1232, 0.45 ) }
    dend_43 { pt3dadd( -31.1787, 153.521, -21.3019, 2.04 ) }
    dend_43 { pt3dadd( -31.2508, 155.645, -21.5375, 0.23 ) }
    dend_43 { pt3dadd( -31.3211, 157.165, -21.7032, 0.91 ) }
    dend_43 { pt3dadd( -31.3651, 158.961, -21.875, 0.23 ) }
    dend_43 { pt3dadd( -31.361, 160.171, -21.9827, 1.13 ) }
    dend_43 { pt3dadd( -31.3351, 161.104, -22.0728, 1.13 ) }
    dend_43 { pt3dadd( -31.1716, 164.361, -22.4495, 0.23 ) }
    dend_43 { pt3dadd( -31.0449, 166.161, -22.6756, 2.04 ) }
    dend_43 { pt3dadd( -30.722, 169.712, -23.1602, 0.23 ) }
    dend_43 { pt3dadd( -30.5992, 171.209, -23.3709, 0.91 ) }
    dend_43 { pt3dadd( -30.3695, 174.343, -23.8046, 0.23 ) }
    dend_43 { pt3dadd( -30.2689, 175.928, -24.0239, 1.81 ) }
    dend_43 { pt3dadd( -30.239, 177.145, -24.1881, 1.81 ) }
    dend_43 { pt3dadd( -30.3524, 181.066, -24.7285, 0.23 ) }
    dend_43 { pt3dadd( -30.4953, 182.437, -24.921, 0.91 ) }
    dend_43 { pt3dadd( -30.667, 183.62, -25.0731, 0.23 ) }
    dend_43 { pt3dadd( -30.9504, 185.41, -25.2549, 0.91 ) }
    dend_43 { pt3dadd( -31.1078, 186.544, -25.3649, 0.91 ) }
    dend_43 { pt3dadd( -31.3024, 189.205, -25.6719, 0.23 ) }
    dend_43 { pt3dadd( -31.314, 191.107, -25.9229, 1.81 ) }
    dend_43 { pt3dadd( -31.2382, 192.323, -26.0943, 1.81 ) }
    dend_43 { pt3dadd( -30.9626, 194.786, -26.4661, 0.23 ) }
    dend_43 { pt3dadd( -30.6345, 196.71, -26.7812, 1.59 ) }
    dend_43 { pt3dadd( -29.8029, 200.549, -27.4397, 0.23 ) }
    dend_43 { pt3dadd( -29.5889, 201.494, -27.5853, 0.91 ) }
    dend_43 { pt3dadd( -29.1309, 203.831, -27.9472, 0.23 ) }
    dend_43 { pt3dadd( -28.913, 205.374, -28.1906, 1.59 ) }
    dend_43 { pt3dadd( -28.6679, 208.676, -28.7038, 0.23 ) }
    dend_43 { pt3dadd( -28.6723, 209.86, -28.8697, 0.91 ) }
    dend_43 { pt3dadd( -28.9186, 212.811, -29.2561, 0.23 ) }
    dend_43 { pt3dadd( -29.2586, 215.319, -29.5702, 1.59 ) }
    dend_43 { pt3dadd( -29.6597, 217.435, -29.8505, 0.45 ) }
    dend_43 { pt3dadd( -29.8054, 218.06, -29.9447, 0.91 ) }
    dend_43 { pt3dadd( -30.2531, 219.63, -30.2145, 0.23 ) }
    dend_43 { pt3dadd( -30.7298, 221.232, -30.5476, 0.91 ) }
    dend_43 { pt3dadd( -31.3966, 223.511, -31.0977, 0.23 ) }
    dend_43 { pt3dadd( -31.6326, 224.27, -31.3076, 1.13 ) }
    dend_43 { pt3dadd( -32.1251, 225.786, -31.786, 0.23 ) }
    dend_43 { pt3dadd( -32.3539, 226.472, -32.0259, 0.91 ) }
    dend_43 { pt3dadd( -32.7382, 227.638, -32.4916, 0.23 ) }
    dend_43 { pt3dadd( -33.2562, 229.237, -33.1508, 2.04 ) }
    dend_43 { pt3dadd( -34.1762, 231.816, -34.2448, 0.23 ) }
    dend_43 { pt3dadd( -34.8121, 233.493, -34.9273, 1.13 ) }
    dend_43 { pt3dadd( -35.5332, 235.324, -35.6451, 0.23 ) }
    dend_43 { pt3dadd( -36.3494, 237.304, -36.3914, 1.13 ) }
    dend_43 { pt3dadd( -36.9332, 238.606, -36.8584, 1.13 ) }
    dend_43 { pt3dadd( -38.1505, 241.199, -37.6951, 0.23 ) }
    dend_43 { pt3dadd( -38.4541, 241.874, -37.8705, 0.23 ) }
    dend_43 { pt3dadd( -39.2268, 243.605, -38.2818, 1.59 ) }
    dend_43 { pt3dadd( -40.138, 245.647, -38.6846, 0.23 ) }
    dend_43 { pt3dadd( -40.8362, 247.206, -38.9293, 0.23 ) }
    dend_43 { pt3dadd( -41.5542, 248.844, -39.1724, 1.59 ) }
    dend_43 { pt3dadd( -42.8413, 251.93, -39.5529, 0.23 ) }
    dend_43 { pt3dadd( -42.989, 252.277, -39.593, 0.91 ) }
    dend_43 { pt3dadd( -43.5122, 253.562, -39.733, 0.23 ) }
    dend_43 { pt3dadd( -44.2222, 255.442, -39.9314, 0.23 ) }
    dend_43 { pt3dadd( -44.864, 257.265, -40.1553, 0.91 ) }
    dend_43 { pt3dadd( -45.7325, 259.766, -40.4969, 0.23 ) }
    dend_43 { pt3dadd( -46.3998, 261.796, -40.7824, 2.04 ) }
    dend_43 { pt3dadd( -47.5192, 265.555, -41.3153, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_43 { pt3dadd( -48.063, 267.599, -41.6546, 1.13 ) }
    dend_43 { pt3dadd( -48.5706, 269.792, -42.057, 0.23 ) }
    dend_43 { pt3dadd( -48.8261, 271.025, -42.2968, 0.91 ) }
    dend_43 { pt3dadd( -49.0848, 272.468, -42.5985, 0.23 ) }
    dend_43 { pt3dadd( -49.4094, 274.552, -43.0536, 2.04 ) }
    dend_43 { pt3dadd( -49.7847, 276.93, -43.532, 0.23 ) }
    dend_43 { pt3dadd( -49.9664, 278.088, -43.7589, 0.91 ) }
    dend_43 { pt3dadd( -50.0562, 278.643, -43.8507, 0.23 ) }
    dend_43 { pt3dadd( -50.3228, 280.387, -44.1557, 0.91 ) }
    dend_43 { pt3dadd( -50.6088, 282.218, -44.48, 0.23 ) }
    dend_43 { pt3dadd( -50.76, 283.363, -44.6454, 1.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 11/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -19.112, 10.1278, -3.12945, 0.45 ) }
    dend_40 { pt3dadd( -21.0102, 9.55261, -3.57924, 0.45 ) }
    dend_40 { pt3dadd( -22.3548, 9.0569, -3.85577, 0.45 ) }
    dend_40 { pt3dadd( -24.4007, 8.20507, -4.15912, 0.91 ) }
    dend_40 { pt3dadd( -26.561, 7.18761, -4.46489, 0.68 ) }
    dend_40 { pt3dadd( -28.045, 6.49991, -4.68633, 0.91 ) }
    dend_40 { pt3dadd( -29.1784, 5.98994, -4.85702, 1.81 ) }
    dend_40 { pt3dadd( -31.7763, 4.85127, -5.2468, 0.45 ) }
    dend_40 { pt3dadd( -33.3253, 4.19279, -5.44283, 1.13 ) }
    dend_40 { pt3dadd( -35.5236, 3.33341, -5.66845, 0.45 ) }
    dend_40 { pt3dadd( -37.2123, 2.72243, -5.83555, 1.13 ) }
    dend_40 { pt3dadd( -38.0792, 2.44895, -5.92857, 1.59 ) }
    dend_40 { pt3dadd( -39.3941, 2.11933, -6.0855, 0.45 ) }
    dend_40 { pt3dadd( -40.9634, 1.79232, -6.31451, 0.45 ) }
    dend_40 { pt3dadd( -42.3089, 1.51148, -6.5296, 0.91 ) }
    dend_40 { pt3dadd( -43.5223, 1.18082, -6.70426, 1.81 ) }
    dend_40 { pt3dadd( -43.7241, 1.09579, -6.73754, 1.81 ) }
    dend_40 { pt3dadd( -45.4645, 0.0951406, -7.10044, 0.23 ) }
    dend_40 { pt3dadd( -46.729, -0.766934, -7.40237, 0.91 ) }
    dend_40 { pt3dadd( -47.3135, -1.20911, -7.55, 0.91 ) }
    dend_40 { pt3dadd( -48.5508, -2.18739, -7.86326, 0.23 ) }
    dend_40 { pt3dadd( -49.8585, -3.23019, -8.17352, 1.81 ) }
    dend_40 { pt3dadd( -52.5488, -5.374, -8.7871, 0.23 ) }
    dend_40 { pt3dadd( -53.3087, -5.97519, -8.95008, 1.13 ) }
    dend_40 { pt3dadd( -54.1653, -6.62016, -9.10436, 2.04 ) }
    dend_40 { pt3dadd( -56.0994, -8.05134, -9.43078, 0.23 ) }
    dend_40 { pt3dadd( -57.1486, -8.79369, -9.58651, 0.23 ) }
    dend_40 { pt3dadd( -58.0536, -9.43135, -9.70543, 0.91 ) }
    dend_40 { pt3dadd( -59.6683, -10.5897, -9.89453, 0.23 ) }
    dend_40 { pt3dadd( -61.042, -11.609, -10.0818, 1.81 ) }
    dend_40 { pt3dadd( -63.2607, -13.3351, -10.4185, 0.23 ) }
    dend_40 { pt3dadd( -63.8361, -13.812, -10.5145, 0.23 ) }
    dend_40 { pt3dadd( -65.0659, -14.8669, -10.7383, 1.13 ) }
    dend_40 { pt3dadd( -66.135, -15.8351, -10.9526, 1.59 ) }
    dend_40 { pt3dadd( -67.271, -16.929, -11.192, 0.23 ) }
    dend_40 { pt3dadd( -68.2404, -17.8727, -11.3855, 0.91 ) }
    dend_40 { pt3dadd( -69.7318, -19.2476, -11.6668, 0.23 ) }
    dend_40 { pt3dadd( -70.5331, -19.9685, -11.8135, 1.59 ) }
    dend_40 { pt3dadd( -72.8117, -21.9325, -12.2101, 0.23 ) }
    dend_40 { pt3dadd( -74.1986, -23.0913, -12.4343, 0.23 ) }
    dend_40 { pt3dadd( -76.1967, -24.7089, -12.7285, 1.81 ) }
    dend_40 { pt3dadd( -80.2548, -27.8641, -13.3185, 0.23 ) }
    dend_40 { pt3dadd( -81.3884, -28.7476, -13.4714, 1.59 ) }
    dend_40 { pt3dadd( -82.1191, -29.3088, -13.5642, 1.59 ) }
    dend_40 { pt3dadd( -84.0376, -30.7317, -13.7826, 0.23 ) }
    dend_40 { pt3dadd( -84.7753, -31.2879, -13.8641, 0.23 ) }
    dend_40 { pt3dadd( -85.8012, -32.0719, -13.9841, 1.36 ) }
    dend_40 { pt3dadd( -88.4956, -34.0302, -14.2675, 0.23 ) }
    dend_40 { pt3dadd( -89.8059, -34.9239, -14.4126, 1.59 ) }
    dend_40 { pt3dadd( -90.1911, -35.1646, -14.4521, 1.59 ) }
    dend_40 { pt3dadd( -92.4073, -36.4078, -14.6699, 0.23 ) }
    dend_40 { pt3dadd( -93.5487, -37.023, -14.7787, 0.23 ) }
    dend_40 { pt3dadd( -95.1988, -37.869, -14.9355, 1.81 ) }
    dend_40 { pt3dadd( -95.8107, -38.1731, -14.9988, 1.81 ) }
    dend_40 { pt3dadd( -99.6746, -40.199, -15.4269, 0.23 ) }
    dend_40 { pt3dadd( -101.304, -41.0568, -15.6118, 1.13 ) }
    dend_40 { pt3dadd( -102.418, -41.6414, -15.746, 0.45 ) }
    dend_40 { pt3dadd( -103.899, -42.4742, -15.9326, 1.81 ) }
    dend_40 { pt3dadd( -105.933, -43.7353, -16.2483, 0.23 ) }
    dend_40 { pt3dadd( -106.726, -44.259, -16.4042, 0.91 ) }
    dend_40 { pt3dadd( -107.663, -44.8989, -16.6303, 0.91 ) }
    dend_40 { pt3dadd( -108.592, -45.5783, -16.8838, 0.23 ) }
    dend_40 { pt3dadd( -109.858, -46.5721, -17.2026, 0.91 ) }
    dend_40 { pt3dadd( -111.796, -48.2832, -17.6444, 0.23 ) }
    dend_40 { pt3dadd( -113.089, -49.5738, -17.8573, 0.91 ) }
    dend_40 { pt3dadd( -113.544, -50.0992, -17.9277, 0.91 ) }
    dend_40 { pt3dadd( -114.766, -51.6723, -18.0239, 0.23 ) }
    dend_40 { pt3dadd( -115.839, -53.153, -18.0229, 1.81 ) }
    dend_40 { pt3dadd( -116.364, -53.8541, -17.9934, 1.81 ) }
    dend_40 { pt3dadd( -118.288, -56.3563, -17.8321, 0.23 ) }
    dend_40 { pt3dadd( -120.126, -58.5361, -17.685, 1.13 ) }
    dend_40 { pt3dadd( -122.136, -60.6814, -17.5625, 0.23 ) }
    dend_40 { pt3dadd( -123.405, -61.8795, -17.5272, 2.04 ) }
    dend_40 { pt3dadd( -126.742, -64.7134, -17.567, 0.23 ) }
    dend_40 { pt3dadd( -127.813, -65.5185, -17.5905, 1.59 ) }
    dend_40 { pt3dadd( -131.038, -67.6432, -17.7487, 0.23 ) }
    dend_40 { pt3dadd( -132.209, -68.3608, -17.8476, 0.91 ) }
    dend_40 { pt3dadd( -133.867, -69.3758, -18.1223, 0.45 ) }
    dend_40 { pt3dadd( -134.849, -69.995, -18.3294, 0.23 ) }
    dend_40 { pt3dadd( -135.993, -70.7747, -18.6236, 1.59 ) }
    dend_40 { pt3dadd( -138.095, -72.3727, -19.2042, 0.23 ) }
    dend_40 { pt3dadd( -139.792, -73.8679, -19.7663, 1.59 ) }
    dend_40 { pt3dadd( -141.25, -75.2516, -20.2512, 0.68 ) }
    dend_40 { pt3dadd( -142.121, -76.1273, -20.5312, 1.36 ) }
    dend_40 { pt3dadd( -142.74, -76.7722, -20.725, 1.36 ) }
    dend_40 { pt3dadd( -144.017, -78.0946, -21.0878, 0.23 ) }
    dend_40 { pt3dadd( -145.083, -79.1458, -21.35, 0.23 ) }
    dend_40 { pt3dadd( -146.608, -80.4684, -21.6709, 1.59 ) }
    dend_40 { pt3dadd( -147.088, -80.8609, -21.7604, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -147.946, -81.5226, -21.9222, 0.23 ) }
    dend_40 { pt3dadd( -148.488, -81.9386, -22.0299, 0.91 ) }
    dend_40 { pt3dadd( -149.772, -82.9351, -22.3002, 0.23 ) }
    dend_40 { pt3dadd( -150.673, -83.697, -22.5016, 0.23 ) }
    dend_40 { pt3dadd( -151.486, -84.4402, -22.7015, 1.13 ) }
    dend_40 { pt3dadd( -151.978, -84.9166, -22.8194, 1.13 ) }
    dend_40 { pt3dadd( -154.221, -87.175, -23.3357, 0.23 ) }
    dend_40 { pt3dadd( -155.411, -88.3655, -23.5829, 1.59 ) }
    dend_40 { pt3dadd( -157.705, -90.5782, -23.9885, 0.23 ) }
    dend_40 { pt3dadd( -158.523, -91.3321, -24.1187, 0.68 ) }
    dend_40 { pt3dadd( -160.209, -92.785, -24.3448, 0.23 ) }
    dend_40 { pt3dadd( -160.793, -93.2568, -24.4053, 0.23 ) }
    dend_40 { pt3dadd( -162.376, -94.3522, -24.4945, 0.91 ) }
    dend_40 { pt3dadd( -163.674, -95.0842, -24.5494, 0.23 ) }
    dend_40 { pt3dadd( -164.982, -95.6075, -24.5962, 1.13 ) }
    dend_40 { pt3dadd( -166.345, -96.02, -24.6585, 0.23 ) }
    dend_40 { pt3dadd( -167.061, -96.1881, -24.7106, 0.91 ) }
    dend_40 { pt3dadd( -168.166, -96.4103, -24.8117, 0.23 ) }
    dend_40 { pt3dadd( -170.064, -96.708, -25.0157, 1.13 ) }
    dend_40 { pt3dadd( -172.994, -97.0098, -25.3607, 0.23 ) }
    dend_40 { pt3dadd( -174.112, -97.0822, -25.5068, 0.91 ) }
    dend_40 { pt3dadd( -175.935, -97.0684, -25.754, 0.23 ) }
    dend_40 { pt3dadd( -176.46, -97.055, -25.8272, 0.68 ) }
    dend_40 { pt3dadd( -177.405, -97.0139, -25.961, 0.23 ) }
    dend_40 { pt3dadd( -178.282, -96.9377, -26.0747, 0.91 ) }
    dend_40 { pt3dadd( -178.861, -96.8192, -26.1704, 0.23 ) }
    dend_40 { pt3dadd( -180.544, -96.2943, -26.4316, 1.13 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 27/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 144.115, 336.862, -79.4336, 0.23 ) }
    dend_34 { pt3dadd( 144.761, 338.864, -79.8192, 0.23 ) }
    dend_34 { pt3dadd( 145.143, 340.177, -80.076, 0.23 ) }
    dend_34 { pt3dadd( 145.642, 342.101, -80.4337, 1.13 ) }
    dend_34 { pt3dadd( 145.969, 343.647, -80.7447, 0.23 ) }
    dend_34 { pt3dadd( 146.209, 344.934, -81.0048, 0.91 ) }
    dend_34 { pt3dadd( 146.599, 346.84, -81.3933, 0.23 ) }
    dend_34 { pt3dadd( 146.909, 348.291, -81.6935, 0.23 ) }
    dend_34 { pt3dadd( 147.379, 350.304, -82.1182, 1.59 ) }
    dend_34 { pt3dadd( 147.861, 352.292, -82.5428, 0.68 ) }
    dend_34 { pt3dadd( 148.166, 353.442, -82.7888, 1.13 ) }
    dend_34 { pt3dadd( 148.735, 355.392, -83.1932, 0.23 ) }
    dend_34 { pt3dadd( 149.21, 356.934, -83.5464, 0.91 ) }
    dend_34 { pt3dadd( 149.764, 358.738, -84.0165, 0.23 ) }
    dend_34 { pt3dadd( 150.162, 360.125, -84.3924, 0.91 ) }
    dend_34 { pt3dadd( 150.295, 360.649, -84.5278, 0.23 ) }
    dend_34 { pt3dadd( 150.497, 361.805, -84.8415, 1.13 ) }
    dend_34 { pt3dadd( 150.737, 364.547, -85.6093, 0.23 ) }
    dend_34 { pt3dadd( 150.761, 365.0, -85.7336, 0.91 ) }
    dend_34 { pt3dadd( 150.863, 366.744, -86.1705, 0.23 ) }
    dend_34 { pt3dadd( 150.939, 367.933, -86.4562, 1.81 ) }
    dend_34 { pt3dadd( 151.095, 370.753, -87.0751, 0.23 ) }
    dend_34 { pt3dadd( 151.237, 373.327, -87.6047, 0.91 ) }
    dend_34 { pt3dadd( 151.309, 374.819, -87.8734, 0.23 ) }
    dend_34 { pt3dadd( 151.43, 377.365, -88.3663, 0.68 ) }
    dend_34 { pt3dadd( 151.465, 377.916, -88.4665, 0.23 ) }
    dend_34 { pt3dadd( 151.57, 378.916, -88.6237, 0.91 ) }
    dend_34 { pt3dadd( 151.928, 381.046, -88.8778, 0.23 ) }
    dend_34 { pt3dadd( 152.387, 383.456, -89.1322, 1.13 ) }
    dend_34 { pt3dadd( 152.93, 386.079, -89.4142, 0.23 ) }
    dend_34 { pt3dadd( 153.318, 387.748, -89.5859, 0.23 ) }
    dend_34 { pt3dadd( 153.928, 389.88, -89.7941, 0.23 ) }
    dend_34 { pt3dadd( 154.535, 391.537, -89.9329, 0.23 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 60/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 144.115, 336.862, -79.4336, 0.23 ) }
    dend_33 { pt3dadd( 143.968, 338.336, -80.1787, 0.23 ) }
    dend_33 { pt3dadd( 143.909, 339.172, -80.5718, 1.13 ) }
    dend_33 { pt3dadd( 143.653, 342.031, -81.9372, 0.23 ) }
    dend_33 { pt3dadd( 143.436, 344.469, -83.1013, 0.91 ) }
    dend_33 { pt3dadd( 143.316, 345.807, -83.7407, 0.23 ) }
    dend_33 { pt3dadd( 143.22, 346.883, -84.2544, 1.13 ) }
    dend_33 { pt3dadd( 142.954, 349.597, -85.5385, 0.23 ) }
    dend_33 { pt3dadd( 142.798, 351.352, -86.348, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 69/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -19.5434, 16.0689, 11.2162, 0.68 ) }
    dend_26 { pt3dadd( -21.4608, 16.7255, 11.6845, 0.68 ) }
    dend_26 { pt3dadd( -23.1955, 17.2659, 12.1428, 0.68 ) }
    dend_26 { pt3dadd( -25.2714, 17.942, 12.6655, 0.68 ) }
    dend_26 { pt3dadd( -25.9548, 18.1402, 12.8476, 0.68 ) }
    dend_26 { pt3dadd( -27.2369, 18.5121, 13.1894, 1.13 ) }
    dend_26 { pt3dadd( -28.9532, 19.0099, 13.647, 0.91 ) }
    dend_26 { pt3dadd( -30.3112, 19.4131, 14.0477, 0.23 ) }
    dend_26 { pt3dadd( -32.2916, 19.9794, 14.6498, 0.23 ) }
    dend_26 { pt3dadd( -34.1034, 20.414, 15.1993, 0.23 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -19.5434, 16.0689, 11.2162, 0.45 ) }
    dend_25 { pt3dadd( -19.1088, 18.1674, 11.4592, 0.45 ) }
    dend_25 { pt3dadd( -18.6753, 20.2607, 11.7017, 0.68 ) }
    dend_25 { pt3dadd( -18.285, 22.1451, 11.9199, 0.23 ) }
    dend_25 { pt3dadd( -18.1166, 22.9582, 12.0141, 0.23 ) }
    dend_25 { pt3dadd( -17.8064, 24.4559, 12.1876, 0.91 ) }
    dend_25 { pt3dadd( -17.3587, 26.6178, 12.438, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -11.8491, -29.0132, -9.71281, 0.23 ) }
    dend_11 { pt3dadd( -14.1376, -29.9732, -9.50158, 0.23 ) }
    dend_11 { pt3dadd( -15.3608, -30.5461, -9.41706, 0.23 ) }
    dend_11 { pt3dadd( -16.5077, -31.1381, -9.39805, 0.91 ) }
    dend_11 { pt3dadd( -18.4956, -32.2293, -9.41965, 0.45 ) }
    dend_11 { pt3dadd( -20.0548, -33.118, -9.46169, 1.13 ) }
    dend_11 { pt3dadd( -20.9949, -33.673, -9.49635, 0.23 ) }
    dend_11 { pt3dadd( -21.746, -34.1634, -9.56735, 0.68 ) }
    dend_11 { pt3dadd( -23.6077, -35.4135, -9.79554, 0.23 ) }
    dend_11 { pt3dadd( -24.9422, -36.3288, -10.0164, 1.13 ) }
    dend_11 { pt3dadd( -26.9019, -37.6484, -10.3442, 0.23 ) }
    dend_11 { pt3dadd( -27.5166, -38.0452, -10.4586, 0.91 ) }
    dend_11 { pt3dadd( -28.5583, -38.7053, -10.6796, 0.23 ) }
    dend_11 { pt3dadd( -29.9218, -39.5279, -11.0349, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_11 { pt3dadd( -31.5877, -40.4782, -11.5113, 0.23 ) }
    dend_11 { pt3dadd( -32.3708, -40.8932, -11.7536, 0.68 ) }
    dend_11 { pt3dadd( -33.4648, -41.4562, -12.0963, 0.23 ) }
    dend_11 { pt3dadd( -34.4119, -41.9136, -12.3864, 1.59 ) }
    dend_11 { pt3dadd( -38.1977, -43.6652, -13.4982, 0.23 ) }
    dend_11 { pt3dadd( -39.2536, -44.1275, -13.7717, 1.13 ) }
    dend_11 { pt3dadd( -41.7132, -45.1942, -14.2767, 0.23 ) }
    dend_11 { pt3dadd( -42.8461, -45.7187, -14.463, 0.91 ) }
    dend_11 { pt3dadd( -45.5009, -46.9627, -14.7788, 0.23 ) }
    dend_11 { pt3dadd( -46.3739, -47.3643, -14.8411, 1.13 ) }
    dend_11 { pt3dadd( -48.4565, -48.3272, -14.9308, 0.23 ) }
    dend_11 { pt3dadd( -51.4493, -49.7378, -15.0502, 1.59 ) }
    dend_11 { pt3dadd( -54.7064, -51.232, -15.1463, 0.23 ) }
    dend_11 { pt3dadd( -56.189, -51.8767, -15.1883, 0.45 ) }
    dend_11 { pt3dadd( -57.0724, -52.2559, -15.2251, 0.23 ) }
    dend_11 { pt3dadd( -58.432, -52.8049, -15.3313, 0.23 ) }
    dend_11 { pt3dadd( -60.0994, -53.4466, -15.6187, 0.68 ) }
    dend_11 { pt3dadd( -61.9937, -54.0891, -16.1082, 0.23 ) }
    dend_11 { pt3dadd( -62.4628, -54.2462, -16.3044, 0.91 ) }
    dend_11 { pt3dadd( -63.7345, -54.7045, -16.9089, 0.23 ) }
    dend_11 { pt3dadd( -64.1144, -54.8526, -17.1045, 1.13 ) }
    dend_11 { pt3dadd( -66.3794, -55.7548, -18.3673, 0.23 ) }
    dend_11 { pt3dadd( -67.4356, -56.2206, -19.1003, 0.91 ) }
    dend_11 { pt3dadd( -69.5458, -57.3784, -20.8696, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 24/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -11.8491, -29.0132, -9.71281, 0.91 ) }
    dend_8 { pt3dadd( -12.3618, -30.1305, -10.1049, 0.91 ) }
    dend_8 { pt3dadd( -13.4188, -32.6763, -10.9084, 0.23 ) }
    dend_8 { pt3dadd( -13.8288, -33.8328, -11.2691, 0.91 ) }
    dend_8 { pt3dadd( -14.6153, -36.4195, -12.1239, 0.23 ) }
    dend_8 { pt3dadd( -14.9045, -37.5213, -12.5336, 1.81 ) }
    dend_8 { pt3dadd( -15.4545, -39.783, -13.4078, 0.91 ) }
    dend_8 { pt3dadd( -15.9675, -42.2598, -14.388, 2.27 ) }
    dend_8 { pt3dadd( -16.4034, -44.3697, -15.2097, 0.23 ) }
    dend_8 { pt3dadd( -16.7839, -46.0726, -15.9694, 0.91 ) }
    dend_8 { pt3dadd( -17.3865, -48.3325, -17.0662, 0.23 ) }
    dend_8 { pt3dadd( -17.7674, -49.4157, -17.6214, 1.81 ) }
    dend_8 { pt3dadd( -18.7318, -51.44, -18.6644, 0.23 ) }
    dend_8 { pt3dadd( -19.3992, -52.5637, -19.173, 0.23 ) }
    dend_8 { pt3dadd( -20.3808, -54.0036, -19.6919, 1.81 ) }
    dend_8 { pt3dadd( -21.7585, -55.92, -20.1668, 0.23 ) }
    dend_8 { pt3dadd( -22.5288, -56.9681, -20.3529, 2.04 ) }
    dend_8 { pt3dadd( -23.7381, -58.5986, -20.5756, 1.59 ) }
    dend_8 { pt3dadd( -25.1893, -60.5556, -20.7836, 0.23 ) }
    dend_8 { pt3dadd( -26.5357, -62.3701, -20.9541, 1.81 ) }
    dend_8 { pt3dadd( -28.788, -65.1915, -21.1732, 0.23 ) }
    dend_8 { pt3dadd( -29.9115, -66.4763, -21.2945, 1.81 ) }
    dend_8 { pt3dadd( -32.5419, -69.2514, -21.61, 0.23 ) }
    dend_8 { pt3dadd( -33.7835, -70.4057, -21.7695, 1.13 ) }
    dend_8 { pt3dadd( -34.678, -71.1348, -21.9011, 1.81 ) }
    dend_8 { pt3dadd( -36.1432, -72.2577, -22.1653, 0.23 ) }
    dend_8 { pt3dadd( -37.3602, -73.228, -22.4474, 0.91 ) }
    dend_8 { pt3dadd( -39.5023, -75.0577, -23.0086, 0.23 ) }
    dend_8 { pt3dadd( -40.5989, -76.0624, -23.3627, 1.81 ) }
    dend_8 { pt3dadd( -42.6239, -78.0252, -24.0642, 0.23 ) }
    dend_8 { pt3dadd( -43.8256, -79.2437, -24.5375, 1.59 ) }
    dend_8 { pt3dadd( -46.1508, -81.6619, -25.516, 0.45 ) }
    dend_8 { pt3dadd( -46.8751, -82.4376, -25.8228, 1.13 ) }
    dend_8 { pt3dadd( -48.4302, -84.0915, -26.4683, 0.23 ) }
    dend_8 { pt3dadd( -49.2508, -85.0349, -26.8165, 1.81 ) }
    dend_8 { pt3dadd( -51.3886, -87.7005, -27.7561, 0.23 ) }
    dend_8 { pt3dadd( -52.0097, -88.576, -28.0244, 0.91 ) }
    dend_8 { pt3dadd( -53.3737, -90.9082, -28.5943, 0.23 ) }
    dend_8 { pt3dadd( -54.0398, -92.1911, -28.8772, 0.91 ) }
    dend_8 { pt3dadd( -55.1568, -94.7702, -29.3298, 0.23 ) }
    dend_8 { pt3dadd( -55.6112, -96.0844, -29.5266, 1.81 ) }
    dend_8 { pt3dadd( -56.1109, -98.239, -29.7295, 0.23 ) }
    dend_8 { pt3dadd( -56.4807, -100.315, -29.9331, 1.81 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 67/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -7.80966, -59.3669, 8.93867, 1.36 ) }
    dend_5 { pt3dadd( -8.34502, -60.5578, 9.1676, 1.36 ) }
    dend_5 { pt3dadd( -8.8188, -61.7242, 9.42535, 1.36 ) }
    dend_5 { pt3dadd( -9.51911, -63.6872, 9.85286, 0.68 ) }
    dend_5 { pt3dadd( -9.81408, -64.514, 10.0329, 0.91 ) }
    dend_5 { pt3dadd( -10.3407, -65.9899, 10.3544, 0.45 ) }
    dend_5 { pt3dadd( -10.5919, -66.6941, 10.5077, 0.91 ) }
    dend_5 { pt3dadd( -11.1263, -68.4734, 10.931, 0.23 ) }
    dend_5 { pt3dadd( -11.4679, -69.5718, 11.2287, 0.23 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.80966, -59.3669, 8.93867, 0.68 ) }
    dend_4 { pt3dadd( -6.61254, -62.1628, 9.15161, 0.68 ) }
    dend_4 { pt3dadd( -5.6102, -64.5419, 9.20272, 0.68 ) }
    dend_4 { pt3dadd( -4.65296, -66.7662, 9.19425, 0.23 ) }
    dend_4 { pt3dadd( -3.94563, -68.4252, 9.22675, 0.91 ) }
    dend_4 { pt3dadd( -3.66011, -69.1331, 9.24751, 0.91 ) }
    dend_4 { pt3dadd( -2.50769, -72.1239, 9.37462, 0.23 ) }
    dend_4 { pt3dadd( -1.72774, -74.2114, 9.53778, 0.68 ) }
    dend_4 { pt3dadd( -0.817514, -76.8305, 9.76421, 0.23 ) }
    dend_4 { pt3dadd( 0.413995, -80.3169, 10.0745, 0.23 ) }
    dend_4 { pt3dadd( 0.820521, -81.5285, 10.1947, 0.23 ) }
    dend_4 { pt3dadd( 1.4026, -83.3476, 10.4198, 0.91 ) }
    dend_4 { pt3dadd( 1.86753, -84.9019, 10.6992, 0.23 ) }
    dend_4 { pt3dadd( 2.42686, -86.9632, 11.2428, 1.13 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -50.76, 283.363, -44.6454, 0.23 ) }
    dend_45 { pt3dadd( -51.3843, 285.86, -44.9812, 0.23 ) }
    dend_45 { pt3dadd( -51.7572, 287.399, -45.151, 0.23 ) }
    dend_45 { pt3dadd( -52.1373, 289.021, -45.281, 1.59 ) }
    dend_45 { pt3dadd( -52.8303, 292.018, -45.4151, 0.23 ) }
    dend_45 { pt3dadd( -53.2014, 293.542, -45.4534, 1.59 ) }
    dend_45 { pt3dadd( -53.876, 296.326, -45.4886, 0.45 ) }
    dend_45 { pt3dadd( -54.2366, 297.778, -45.4527, 0.45 ) }
    dend_45 { pt3dadd( -54.6063, 299.316, -45.376, 1.59 ) }
    dend_45 { pt3dadd( -55.2347, 302.063, -45.1893, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_45 { pt3dadd( -55.5567, 303.554, -45.0811, 0.23 ) }
    dend_45 { pt3dadd( -55.8991, 305.319, -44.9549, 0.91 ) }
    dend_45 { pt3dadd( -56.0932, 306.593, -44.9047, 0.91 ) }
    dend_45 { pt3dadd( -56.2961, 308.11, -44.8979, 0.23 ) }
    dend_45 { pt3dadd( -56.4321, 309.333, -44.9338, 1.13 ) }
    dend_45 { pt3dadd( -56.565, 310.843, -45.0259, 0.45 ) }
    dend_45 { pt3dadd( -56.6404, 311.769, -45.0942, 1.13 ) }
    dend_45 { pt3dadd( -57.2246, 316.574, -45.5219, 0.23 ) }
    dend_45 { pt3dadd( -57.3486, 317.371, -45.5998, 1.13 ) }
    dend_45 { pt3dadd( -57.6349, 318.851, -45.7661, 1.13 ) }
    dend_45 { pt3dadd( -58.0582, 320.639, -45.9986, 0.23 ) }
    dend_45 { pt3dadd( -58.6616, 322.669, -46.3843, 0.91 ) }
    dend_45 { pt3dadd( -59.3994, 324.741, -46.8678, 0.23 ) }
    dend_45 { pt3dadd( -59.9745, 326.136, -47.256, 0.91 ) }
    dend_45 { pt3dadd( -60.9994, 328.611, -48.0147, 0.23 ) }
    dend_45 { pt3dadd( -61.6319, 330.208, -48.572, 0.91 ) }
    dend_45 { pt3dadd( -62.7894, 333.509, -49.8277, 0.23 ) }
    dend_45 { pt3dadd( -63.0129, 334.421, -50.1996, 1.13 ) }
    dend_45 { pt3dadd( -63.0829, 335.002, -50.4402, 0.23 ) }
    dend_45 { pt3dadd( -63.1026, 336.174, -50.9108, 1.13 ) }
    dend_45 { pt3dadd( -62.9774, 337.545, -51.43, 0.23 ) }
    dend_45 { pt3dadd( -62.7366, 338.852, -51.8214, 1.13 ) }
    dend_45 { pt3dadd( -62.1703, 341.293, -52.4485, 0.23 ) }
    dend_45 { pt3dadd( -62.0986, 341.656, -52.558, 0.91 ) }
    dend_45 { pt3dadd( -61.9596, 342.783, -52.9181, 0.23 ) }
    dend_45 { pt3dadd( -61.9333, 343.792, -53.2859, 0.91 ) }
    dend_45 { pt3dadd( -62.0841, 346.302, -54.2691, 0.23 ) }
    dend_45 { pt3dadd( -62.2603, 347.6, -54.8598, 1.13 ) }
    dend_45 { pt3dadd( -62.5459, 348.991, -55.5314, 0.23 ) }
    dend_45 { pt3dadd( -62.8281, 350.188, -56.1487, 0.91 ) }
    dend_45 { pt3dadd( -63.1258, 351.303, -56.7578, 0.23 ) }
    dend_45 { pt3dadd( -63.4265, 352.39, -57.3412, 0.68 ) }
    dend_45 { pt3dadd( -64.1066, 354.613, -58.5244, 0.23 ) }
    dend_45 { pt3dadd( -64.4951, 355.798, -59.1055, 1.13 ) }
    dend_45 { pt3dadd( -65.2069, 357.958, -60.0006, 0.23 ) }
    dend_45 { pt3dadd( -65.7748, 359.654, -60.5945, 1.36 ) }
    dend_45 { pt3dadd( -66.1619, 360.745, -60.8988, 0.45 ) }
    dend_45 { pt3dadd( -66.5276, 361.654, -61.1019, 0.91 ) }
    dend_45 { pt3dadd( -67.9931, 364.863, -61.5788, 0.23 ) }
    dend_45 { pt3dadd( -68.8979, 366.622, -61.7463, 1.81 ) }
    dend_45 { pt3dadd( -69.9083, 368.237, -61.7855, 0.23 ) }
    dend_45 { pt3dadd( -70.5739, 369.152, -61.7751, 0.23 ) }
    dend_45 { pt3dadd( -71.5732, 370.27, -61.7673, 0.68 ) }
    dend_45 { pt3dadd( -72.6725, 371.302, -61.7609, 0.23 ) }
    dend_45 { pt3dadd( -73.973, 372.302, -61.7528, 0.91 ) }
    dend_45 { pt3dadd( -75.5105, 373.348, -61.8179, 0.23 ) }
    dend_45 { pt3dadd( -76.1432, 373.734, -61.8436, 1.13 ) }
    dend_45 { pt3dadd( -78.3023, 374.999, -61.857, 0.23 ) }
    dend_45 { pt3dadd( -79.2381, 375.533, -61.8327, 0.91 ) }
    dend_45 { pt3dadd( -81.4215, 376.829, -61.6232, 0.23 ) }
    dend_45 { pt3dadd( -82.7871, 377.691, -61.3976, 0.91 ) }
    dend_45 { pt3dadd( -83.3406, 378.098, -61.2475, 0.23 ) }
    dend_45 { pt3dadd( -84.4647, 379.082, -60.7917, 0.91 ) }
    dend_45 { pt3dadd( -85.4516, 380.44, -60.0035, 0.23 ) }
    dend_45 { pt3dadd( -86.1464, 381.832, -59.0899, 0.23 ) }
    dend_45 { pt3dadd( -86.1765, 382.442, -58.6438, 0.23 ) }
    dend_45 { pt3dadd( -85.7989, 383.667, -57.7671, 0.23 ) }
    dend_45 { pt3dadd( -84.9804, 385.064, -56.8576, 0.91 ) }
    dend_45 { pt3dadd( -83.163, 386.983, -55.7719, 0.23 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 59/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -50.76, 283.363, -44.6454, 0.23 ) }
    dend_44 { pt3dadd( -49.6761, 284.794, -44.3097, 0.23 ) }
    dend_44 { pt3dadd( -48.7168, 285.871, -44.1718, 0.23 ) }
    dend_44 { pt3dadd( -47.4388, 287.245, -44.1188, 0.23 ) }
    dend_44 { pt3dadd( -46.9265, 287.786, -44.1238, 0.91 ) }
    dend_44 { pt3dadd( -45.2816, 289.525, -44.1809, 0.23 ) }
    dend_44 { pt3dadd( -43.5999, 291.235, -44.2585, 0.23 ) }
    dend_44 { pt3dadd( -42.0586, 292.659, -44.4238, 0.68 ) }
    dend_44 { pt3dadd( -40.6809, 293.811, -44.5346, 0.23 ) }
    dend_44 { pt3dadd( -39.1011, 295.05, -44.6076, 0.23 ) }
    dend_44 { pt3dadd( -37.588, 296.117, -44.5933, 0.23 ) }
    dend_44 { pt3dadd( -35.6814, 297.308, -44.4507, 0.68 ) }
    dend_44 { pt3dadd( -34.143, 298.133, -44.2502, 0.23 ) }
    dend_44 { pt3dadd( -31.3141, 299.408, -43.7432, 0.23 ) }
    dend_44 { pt3dadd( -30.0008, 299.925, -43.4748, 0.91 ) }
    dend_44 { pt3dadd( -27.8098, 300.668, -42.9875, 0.23 ) }
    dend_44 { pt3dadd( -26.1382, 301.153, -42.5855, 1.13 ) }
    dend_44 { pt3dadd( -24.4042, 301.605, -42.1329, 1.13 ) }
    dend_44 { pt3dadd( -21.7949, 302.196, -41.4457, 0.23 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -180.544, -96.2943, -26.4316, 0.23 ) }
    dend_42 { pt3dadd( -182.012, -98.3224, -26.6919, 0.23 ) }
    dend_42 { pt3dadd( -182.972, -99.6664, -26.8628, 0.68 ) }
    dend_42 { pt3dadd( -183.555, -100.473, -27.0118, 0.23 ) }
    dend_42 { pt3dadd( -184.301, -101.469, -27.2243, 0.91 ) }
    dend_42 { pt3dadd( -186.061, -103.725, -27.7425, 0.23 ) }
    dend_42 { pt3dadd( -186.301, -104.004, -27.81, 1.13 ) }
    dend_42 { pt3dadd( -186.834, -104.517, -27.9571, 1.13 ) }
    dend_42 { pt3dadd( -188.201, -105.586, -28.3425, 0.23 ) }
    dend_42 { pt3dadd( -189.09, -106.132, -28.6173, 0.45 ) }
    dend_42 { pt3dadd( -189.494, -106.32, -28.7449, 0.23 ) }
    dend_42 { pt3dadd( -190.919, -106.886, -29.201, 0.91 ) }
    dend_42 { pt3dadd( -192.578, -107.576, -29.7255, 0.23 ) }
    dend_42 { pt3dadd( -193.838, -108.194, -30.0981, 0.68 ) }
    dend_42 { pt3dadd( -194.673, -108.707, -30.3417, 0.23 ) }
    dend_42 { pt3dadd( -195.403, -109.308, -30.5682, 0.68 ) }
    dend_42 { pt3dadd( -196.614, -110.561, -30.9551, 0.23 ) }
    dend_42 { pt3dadd( -197.072, -111.132, -31.1019, 0.68 ) }
    dend_42 { pt3dadd( -198.238, -112.728, -31.4434, 0.23 ) }
    dend_42 { pt3dadd( -199.147, -113.972, -31.6684, 0.23 ) }
    dend_42 { pt3dadd( -200.631, -115.968, -31.9436, 1.36 ) }
    dend_42 { pt3dadd( -201.561, -117.176, -32.0948, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_42 { pt3dadd( -202.045, -117.74, -32.1587, 0.91 ) }
    dend_42 { pt3dadd( -202.519, -118.25, -32.2121, 0.23 ) }
    dend_42 { pt3dadd( -203.309, -119.016, -32.2964, 0.91 ) }
    dend_42 { pt3dadd( -204.957, -120.515, -32.4382, 0.45 ) }
    dend_42 { pt3dadd( -205.527, -121.006, -32.4914, 1.13 ) }
    dend_42 { pt3dadd( -206.677, -121.994, -32.5938, 0.23 ) }
    dend_42 { pt3dadd( -207.696, -122.897, -32.687, 0.68 ) }
    dend_42 { pt3dadd( -208.376, -123.498, -32.7477, 0.23 ) }
    dend_42 { pt3dadd( -209.919, -124.784, -32.8776, 0.91 ) }
    dend_42 { pt3dadd( -210.369, -125.101, -32.9084, 0.23 ) }
    dend_42 { pt3dadd( -211.915, -126.009, -33.0208, 0.91 ) }
    dend_42 { pt3dadd( -212.923, -126.455, -33.0907, 0.23 ) }
    dend_42 { pt3dadd( -214.245, -126.898, -33.1936, 0.68 ) }
    dend_42 { pt3dadd( -215.128, -127.117, -33.2629, 0.23 ) }
    dend_42 { pt3dadd( -217.597, -127.51, -33.479, 0.91 ) }
    dend_42 { pt3dadd( -219.02, -127.585, -33.5987, 0.23 ) }
    dend_42 { pt3dadd( -220.279, -127.502, -33.6996, 0.91 ) }
    dend_42 { pt3dadd( -221.413, -127.333, -33.7846, 0.23 ) }
    dend_42 { pt3dadd( -222.728, -126.981, -33.869, 0.23 ) }
    dend_42 { pt3dadd( -224.677, -126.254, -33.9613, 0.68 ) }
    dend_42 { pt3dadd( -226.813, -125.256, -34.0707, 0.23 ) }
    dend_42 { pt3dadd( -227.937, -124.679, -34.1227, 0.91 ) }
    dend_42 { pt3dadd( -228.263, -124.498, -34.1467, 0.23 ) }
    dend_42 { pt3dadd( -230.609, -123.117, -34.3617, 0.91 ) }
    dend_42 { pt3dadd( -232.089, -122.282, -34.5329, 0.23 ) }
    dend_42 { pt3dadd( -233.362, -121.681, -34.7445, 0.23 ) }
    dend_42 { pt3dadd( -234.777, -121.325, -34.981, 0.91 ) }
    dend_42 { pt3dadd( -235.924, -121.225, -35.1623, 0.23 ) }
    dend_42 { pt3dadd( -237.518, -121.355, -35.3883, 0.23 ) }
    dend_42 { pt3dadd( -238.738, -121.7, -35.5547, 0.23 ) }
    dend_42 { pt3dadd( -241.256, -122.828, -35.7731, 1.59 ) }
    dend_42 { pt3dadd( -244.364, -124.451, -35.9647, 0.45 ) }
    dend_42 { pt3dadd( -245.424, -125.095, -36.0141, 0.45 ) }
    dend_42 { pt3dadd( -247.209, -126.331, -36.0468, 1.13 ) }
    dend_42 { pt3dadd( -248.724, -127.55, -36.0496, 0.23 ) }
    dend_42 { pt3dadd( -250.373, -129.075, -35.9892, 0.91 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 36/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -180.544, -96.2943, -26.4316, 0.23 ) }
    dend_41 { pt3dadd( -180.995, -95.4946, -26.2452, 0.23 ) }
    dend_41 { pt3dadd( -182.144, -93.4016, -25.7959, 0.91 ) }
    dend_41 { pt3dadd( -182.841, -92.0955, -25.5415, 0.23 ) }
    dend_41 { pt3dadd( -183.642, -90.584, -25.2689, 1.13 ) }
    dend_41 { pt3dadd( -184.639, -88.7027, -24.9297, 0.23 ) }
    dend_41 { pt3dadd( -185.691, -86.7178, -24.5717, 0.23 ) }
    dend_41 { pt3dadd( -186.112, -85.9444, -24.4292, 0.23 ) }
    dend_41 { pt3dadd( -186.703, -84.8315, -24.2586, 0.91 ) }
    dend_41 { pt3dadd( -187.066, -84.1714, -24.1605, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 46/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -56.4807, -100.315, -29.9331, 0.23 ) }
    dend_10 { pt3dadd( -58.2536, -101.724, -30.2468, 0.23 ) }
    dend_10 { pt3dadd( -59.1954, -102.311, -30.2067, 0.91 ) }
    dend_10 { pt3dadd( -60.2218, -102.878, -30.4261, 0.23 ) }
    dend_10 { pt3dadd( -61.63, -103.599, -31.0578, 0.23 ) }
    dend_10 { pt3dadd( -63.175, -104.443, -31.9315, 0.68 ) }
    dend_10 { pt3dadd( -65.9967, -105.985, -33.7551, 0.23 ) }
    dend_10 { pt3dadd( -66.6609, -106.351, -34.2524, 0.91 ) }
    dend_10 { pt3dadd( -70.0603, -108.547, -37.223, 0.23 ) }
    dend_10 { pt3dadd( -71.6229, -109.793, -38.8978, 0.23 ) }
    dend_10 { pt3dadd( -72.2492, -110.423, -39.7215, 0.23 ) }
    dend_10 { pt3dadd( -72.6566, -110.887, -40.3659, 1.13 ) }
    dend_10 { pt3dadd( -73.8489, -112.465, -42.6007, 0.45 ) }
    dend_10 { pt3dadd( -74.4121, -113.325, -43.6657, 1.13 ) }
    dend_10 { pt3dadd( -75.7151, -115.705, -45.7513, 0.23 ) }
    dend_10 { pt3dadd( -76.4486, -117.108, -46.8493, 1.13 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 62/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -56.4807, -100.315, -29.9331, 0.23 ) }
    dend_9 { pt3dadd( -56.9058, -103.558, -29.5581, 0.23 ) }
    dend_9 { pt3dadd( -57.1175, -105.051, -29.379, 1.13 ) }
    dend_9 { pt3dadd( -57.3475, -106.532, -29.2027, 0.23 ) }
    dend_9 { pt3dadd( -57.7098, -108.661, -28.969, 1.59 ) }
    dend_9 { pt3dadd( -58.1981, -111.4, -28.6894, 0.23 ) }
    dend_9 { pt3dadd( -58.6821, -114.143, -28.4411, 0.91 ) }
    dend_9 { pt3dadd( -59.0269, -115.975, -28.2874, 0.23 ) }
    dend_9 { pt3dadd( -59.2602, -117.239, -28.2366, 0.91 ) }
    dend_9 { pt3dadd( -59.7638, -119.99, -28.2492, 0.23 ) }
    dend_9 { pt3dadd( -59.9804, -121.187, -28.3171, 0.91 ) }
    dend_9 { pt3dadd( -60.5403, -124.435, -28.6231, 0.23 ) }
    dend_9 { pt3dadd( -60.6852, -125.318, -28.7348, 1.36 ) }
    dend_9 { pt3dadd( -61.0582, -127.452, -29.0598, 0.23 ) }
    dend_9 { pt3dadd( -61.2511, -128.65, -29.2462, 0.91 ) }
    dend_9 { pt3dadd( -61.643, -131.093, -29.6213, 0.23 ) }
    dend_9 { pt3dadd( -61.8691, -132.545, -29.8207, 1.59 ) }
    dend_9 { pt3dadd( -62.1121, -134.031, -29.9998, 0.45 ) }
    dend_9 { pt3dadd( -62.3032, -135.216, -30.1035, 0.45 ) }
    dend_9 { pt3dadd( -62.7568, -137.869, -30.2333, 1.13 ) }
    dend_9 { pt3dadd( -62.9775, -139.147, -30.2909, 0.23 ) }
    dend_9 { pt3dadd( -63.2288, -140.643, -30.3598, 1.13 ) }
    dend_9 { pt3dadd( -63.6095, -142.87, -30.4753, 0.23 ) }
    dend_9 { pt3dadd( -64.2023, -146.146, -30.6748, 1.81 ) }
    dend_9 { pt3dadd( -64.6041, -148.14, -30.827, 0.23 ) }
    dend_9 { pt3dadd( -64.855, -149.328, -30.9301, 0.91 ) }
    dend_9 { pt3dadd( -65.6402, -153.183, -31.2994, 0.23 ) }
    dend_9 { pt3dadd( -65.7756, -153.849, -31.3545, 1.36 ) }
    dend_9 { pt3dadd( -66.3394, -156.823, -31.5574, 0.23 ) }
    dend_9 { pt3dadd( -66.7131, -158.914, -31.6418, 0.91 ) }
    dend_9 { pt3dadd( -66.9853, -160.686, -31.662, 0.23 ) }
    dend_9 { pt3dadd( -67.2995, -162.801, -31.6213, 0.23 ) }
    dend_9 { pt3dadd( -67.6385, -164.895, -31.5004, 1.59 ) }
    dend_9 { pt3dadd( -67.7925, -165.78, -31.4283, 1.59 ) }
    dend_9 { pt3dadd( -68.3277, -168.594, -31.1346, 0.23 ) }
    dend_9 { pt3dadd( -68.7146, -170.358, -30.9317, 1.36 ) }
    dend_9 { pt3dadd( -68.9048, -171.09, -30.8658, 1.36 ) }
    dend_9 { pt3dadd( -69.4236, -172.93, -30.8003, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_9 { pt3dadd( -69.8425, -174.441, -30.8397, 1.13 ) }
    dend_9 { pt3dadd( -69.9998, -175.078, -30.8888, 1.13 ) }
    dend_9 { pt3dadd( -70.6621, -178.213, -31.2879, 0.23 ) }
    dend_9 { pt3dadd( -70.9185, -179.803, -31.5178, 1.36 ) }
    dend_9 { pt3dadd( -71.101, -182.057, -31.8606, 0.23 ) }
    dend_9 { pt3dadd( -71.0983, -183.272, -32.0496, 0.91 ) }
    dend_9 { pt3dadd( -70.9963, -185.318, -32.3638, 0.23 ) }
    dend_9 { pt3dadd( -70.8807, -186.505, -32.5376, 0.23 ) }
    dend_9 { pt3dadd( -70.6849, -187.761, -32.7183, 0.91 ) }
    dend_9 { pt3dadd( -70.4162, -189.387, -32.9109, 0.23 ) }
    dend_9 { pt3dadd( -70.1608, -190.888, -33.048, 0.68 ) }
    dend_9 { pt3dadd( -70.0038, -191.883, -33.0962, 0.23 ) }
    dend_9 { pt3dadd( -69.8986, -192.524, -33.0739, 0.68 ) }
    dend_9 { pt3dadd( -69.6081, -194.166, -32.9265, 0.23 ) }
    dend_9 { pt3dadd( -69.4124, -195.332, -32.7601, 0.68 ) }
    dend_9 { pt3dadd( -69.0291, -197.759, -32.2975, 0.23 ) }
    dend_9 { pt3dadd( -68.6448, -200.308, -31.7859, 0.23 ) }
    dend_9 { pt3dadd( -68.2352, -203.131, -31.1794, 0.23 ) }
    dend_9 { pt3dadd( -68.1078, -204.17, -30.9286, 0.23 ) }
    dend_9 { pt3dadd( -67.9022, -205.99, -30.4047, 0.23 ) }
    dend_9 { pt3dadd( -67.7078, -207.771, -29.8441, 1.13 ) }
    dend_9 { pt3dadd( -67.5729, -209.419, -29.2665, 0.23 ) }
    dend_9 { pt3dadd( -67.514, -210.146, -29.0371, 0.91 ) }
    dend_9 { pt3dadd( -67.0814, -212.104, -28.5555, 0.23 ) }
    dend_9 { pt3dadd( -67.4176, -211.648, -28.7071, 0.68 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_27, dend_20, dend_13, dend_0, dend_47, dend_38, dend_36, dend_31, dend_29, dend_28, dend_22, dend_21, dend_17, dend_14, dend_6, dend_1, dend_46, dend_39, dend_35, dend_32, dend_24, dend_23, dend_19, dend_18, dend_16, dend_15, dend_12, dend_7, dend_3, dend_2, dend_43, dend_40, dend_34, dend_33, dend_26, dend_25, dend_11, dend_8, dend_5, dend_4, dend_45, dend_44, dend_42, dend_41, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_27, dend_20, dend_13, dend_0, dend_47, dend_38, dend_36, dend_31, dend_29, dend_28, dend_22, dend_21, dend_17, dend_14, dend_6, dend_1, dend_46, dend_39, dend_35, dend_32, dend_24, dend_23, dend_19, dend_18, dend_16, dend_15, dend_12, dend_7, dend_3, dend_2, dend_43, dend_40, dend_34, dend_33, dend_26, dend_25, dend_11, dend_8, dend_5, dend_4, dend_45, dend_44, dend_42, dend_41, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_46 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_35 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_32 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_12 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_43 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_40 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_34 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_9 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_37 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_14 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_39 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_30 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_24 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_17 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_47 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_29 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_23 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_10 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_41 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_36 nseg = 9
    dend_31 nseg = 3
    dend_46 nseg = 5
    dend_35 nseg = 5
    dend_32 nseg = 17
    dend_19 nseg = 5
    dend_18 nseg = 9
    dend_16 nseg = 9
    dend_15 nseg = 21
    dend_12 nseg = 3
    dend_2 nseg = 3
    dend_43 nseg = 15
    dend_40 nseg = 9
    dend_34 nseg = 3
    dend_11 nseg = 3
    dend_8 nseg = 5
    dend_45 nseg = 7
    dend_42 nseg = 5
    dend_9 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_LBC_41f715f2d0_0_0


