// Cell: Cell_479234506
/*
{
  "id" : "Cell_479234506",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "388.817, 635.168, 25.0418, 6.6352", "392.135, 635.168, 25.0418, 6.6352", "395.452, 635.168, 25.0418, 6.6352" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "392.134, 635.168, 25.0418, 1.0", "397.976, 648.984, 25.0418, 1.0", "403.817, 662.8, 25.0418, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000753579502619
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "391.932, 638.894, 25.0418, 0.2288", "391.645, 640.002, 24.6403, 0.3756", "391.359, 641.109, 24.5072, 0.484", "391.06, 642.151, 24.2346, 0.5548", "390.76, 643.185, 23.853, 0.6326", "390.603, 644.272, 23.4742, 0.5786", "390.603, 645.416, 23.1899, 0.5248", "390.613, 646.56, 22.9945, 0.4302", "390.755, 647.695, 22.8819, 0.4578" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000753579502619
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "392.613, 631.154, 25.0428, 0.9868", "392.749, 630.018, 25.0432, 0.2754", "392.884, 628.882, 25.0437, 0.276", "393.02, 627.746, 25.0445, 0.2772" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000753579502619
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "403.817, 662.8, 25.0418, 1.0", "409.658, 676.616, 25.0418, 1.0", "415.5, 690.432, 25.0418, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "390.755, 647.695, 22.8819, 0.4578", "391.684, 648.673, 22.7651, 0.2288", "392.47, 649.505, 22.6507, 0.6082", "393.379, 650.151, 22.6699, 0.6922", "394.324, 650.546, 22.6564, 0.6524", "395.05, 651.014, 22.3821, 0.6112", "395.884, 651.796, 22.1445, 0.6056", "396.656, 652.626, 21.9476, 0.71", "397.228, 653.609, 21.7993, 0.5754", "398.13, 654.168, 21.6965, 0.5462", "399.265, 654.204, 21.6482, 0.565", "400.404, 654.115, 21.6492, 0.475", "401.546, 654.151, 21.6556, 0.4564", "402.422, 654.836, 21.6671, 0.3884", "403.116, 655.744, 21.6851, 0.4262", "403.802, 656.659, 21.7087, 0.3856", "404.569, 657.506, 21.7356, 0.3916", "405.365, 658.328, 21.7641, 0.4654", "405.999, 659.252, 21.8556, 0.5258", "406.579, 660.209, 22.0098, 0.5528" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "390.755, 647.695, 22.8819, 0.4578", "389.598, 647.503, 22.8456, 0.4388", "388.583, 647.998, 22.8587, 0.5164", "388.166, 649.046, 22.8953, 0.569", "387.855, 650.136, 22.9416, 0.6526" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "393.02, 627.746, 25.0445, 0.2772", "393.186, 627.018, 25.0418, 0.2288", "393.152, 625.875, 25.043, 0.2808", "393.116, 624.732, 25.0435, 0.286", "393.081, 623.589, 25.0437, 0.296", "392.909, 622.462, 25.0443, 0.3136", "392.666, 621.344, 25.0471, 0.3502", "392.423, 620.227, 25.0505, 0.3988", "391.693, 619.426, 25.0489, 0.5816", "390.768, 618.753, 25.0349, 0.472", "390.438, 617.757, 25.0652, 0.3868", "390.322, 616.643, 25.1336, 0.342", "390.579, 615.563, 25.0927, 0.3962", "390.603, 614.486, 24.8624, 0.517", "390.367, 613.459, 24.513, 0.6418", "389.785, 612.539, 24.2365, 0.6684", "389.107, 611.833, 23.7649, 0.567", "388.309, 611.053, 23.3308, 0.4242", "387.296, 610.711, 23.1146, 0.3988", "386.489, 609.952, 22.8539, 0.334", "385.925, 609.157, 22.5085, 0.3", "385.566, 608.12, 22.3418, 0.2746", "385.497, 607.006, 22.2421, 0.2748", "385.002, 606.052, 22.0367, 0.2748", "384.292, 605.158, 21.8807, 0.275", "384.056, 604.038, 21.7858, 0.2754", "383.819, 602.919, 21.7232, 0.2762", "383.539, 601.822, 21.7041, 0.2778", "383.237, 600.738, 21.7489, 0.2804", "383.017, 599.636, 21.7415, 0.2856", "382.848, 598.521, 21.6112, 0.2948", "382.785, 597.401, 21.3812, 0.313", "382.818, 596.276, 21.0766, 0.3406", "382.3, 595.258, 20.7822, 0.422", "381.873, 594.22, 20.4789, 0.4272", "381.636, 593.14, 20.1301, 0.458", "381.562, 592.038, 19.8057, 0.6402", "381.727, 590.907, 19.5704, 0.6006", "381.891, 589.774, 19.407, 0.5272", "382.073, 588.653, 19.2527, 0.3926", "382.256, 587.532, 19.1136, 0.3628", "382.378, 586.405, 19.0644, 0.3864", "382.474, 585.274, 19.102, 0.5042", "382.881, 584.244, 19.1572, 0.593", "383.478, 583.272, 19.2009, 0.6992", "383.912, 582.213, 19.254, 0.7224", "384.344, 581.154, 19.3054, 0.6938" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "393.02, 627.746, 25.0445, 0.2772", "393.22, 627.23, 25.0456, 0.2796", "393.633, 626.164, 25.0471, 0.2838", "394.045, 625.096, 25.0492, 0.2914", "394.036, 623.953, 25.0522, 0.307", "394.028, 622.808, 25.0563, 0.3292", "394.019, 621.664, 25.0621, 0.4026", "394.011, 620.521, 25.0702, 0.3826", "394.14, 619.41, 25.0816, 0.4158", "394.672, 618.397, 25.0971, 0.3652", "395.203, 617.385, 25.1191, 0.359", "395.503, 616.285, 25.1509, 0.3788", "395.76, 615.17, 25.1952, 0.4938", "396.017, 614.056, 25.2535, 0.5552", "396.274, 612.942, 25.3255, 0.7186", "396.236, 611.816, 25.4645, 1.0108", "396.157, 610.688, 25.6585, 1.1476", "396.098, 609.556, 25.8712, 1.0784", "396.098, 608.412, 26.0437, 0.915", "396.098, 607.268, 26.1811, 0.783", "396.098, 606.124, 26.2907, 0.852", "396.098, 604.98, 26.3836, 0.8308", "396.098, 603.836, 26.48, 0.8286", "396.268, 602.712, 26.597, 0.6444", "396.53, 601.599, 26.7441, 0.4902", "396.759, 600.513, 26.9747, 0.4388", "396.917, 599.487, 27.3834, 0.5782", "396.967, 598.418, 27.8499, 0.6132", "396.845, 597.281, 28.2425, 0.619", "396.723, 596.143, 28.5648, 0.688", "396.67, 595.014, 28.8694, 0.532", "396.625, 593.885, 29.1519, 0.4776", "396.838, 592.789, 29.3731, 0.3806", "397.235, 591.716, 29.5383, 0.412", "397.726, 590.69, 29.6797, 0.3582", "398.353, 589.734, 29.8026, 0.346", "399.047, 588.829, 29.9107, 0.3554", "399.842, 588.007, 30.0166, 0.4458", "400.552, 587.223, 30.2238, 0.4882", "401.135, 586.497, 30.6432, 0.4876" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "406.579, 660.209, 22.0098, 0.5528", "407.004, 661.584, 22.0272, 0.556", "407.364, 662.655, 21.9881, 0.5628", "407.789, 663.717, 21.9667, 0.5694", "408.206, 664.782, 21.9684, 0.6112", "408.567, 665.865, 22.0146, 0.5446", "408.929, 666.947, 22.1085, 0.4358", "409.34, 668.003, 22.2828, 0.3904", "409.759, 669.056, 22.4955, 0.4634", "410.33, 670.048, 22.6652, 0.5218", "410.901, 671.039, 22.7928, 0.5456", "411.392, 672.049, 22.9576, 0.5426", "411.885, 673.057, 23.1228, 0.537", "412.388, 674.065, 23.1531, 0.5258", "412.843, 675.098, 23.1061, 0.511", "413.191, 676.188, 23.0531, 0.4528", "413.499, 677.284, 23.0009, 0.4958", "413.499, 678.426, 22.9741, 0.5286", "413.287, 679.464, 23.0742, 0.5876", "412.965, 680.461, 23.0359, 0.4776", "412.307, 681.397, 23.0255, 0.424", "411.76, 682.391, 23.0503, 0.5094", "411.274, 683.418, 23.1082, 0.4578", "410.769, 684.439, 23.1206, 0.4656", "410.29, 685.47, 23.0789, 0.436", "409.965, 686.564, 23.0175, 0.3654", "409.711, 687.674, 22.9389, 0.3114", "409.546, 688.806, 22.8702, 0.2954", "409.382, 689.938, 22.8175, 0.3142", "409.377, 691.081, 22.7881, 0.3438", "409.377, 692.225, 22.7771, 0.4232", "409.357, 693.369, 22.777, 0.4516", "409.236, 694.506, 22.7814, 0.3954", "409.117, 695.645, 22.789, 0.3616", "408.984, 696.781, 22.7994, 0.415", "408.943, 697.92, 22.8109, 0.407", "409.196, 699.001, 22.822, 0.4554", "409.893, 699.896, 22.8431, 0.4656", "410.404, 700.821, 22.9435, 0.4146", "410.704, 701.913, 22.9511, 0.429", "411.01, 703.006, 22.908, 0.3848", "411.324, 704.107, 22.8673, 0.4196", "411.642, 705.205, 22.8295, 0.3732", "412.011, 706.288, 22.795, 0.3688", "412.38, 707.371, 22.7657, 0.4224", "412.796, 708.436, 22.7555, 0.45", "413.222, 709.498, 22.7517, 0.3924", "413.708, 710.533, 22.7463, 0.356", "414.22, 711.557, 22.7387, 0.4038", "414.626, 712.622, 22.7282, 0.391", "414.967, 713.714, 22.7139, 0.4016", "415.268, 714.816, 22.6934, 0.484", "415.506, 715.935, 22.6636, 0.5608", "415.747, 717.054, 22.6224, 0.614", "416.2, 718.104, 22.5691, 0.6884", "416.654, 719.154, 22.5044, 0.7152", "416.897, 720.253, 22.3696, 0.6186", "417.113, 721.359, 22.1799, 0.6916", "417.431, 722.453, 22.006, 0.7478", "417.779, 723.542, 21.8677, 0.7776", "418.077, 724.646, 21.7707, 0.7366", "418.339, 725.759, 21.7171, 0.6706", "418.621, 726.868, 21.7045, 0.4986", "418.961, 727.959, 21.7194, 0.4208", "419.305, 729.051, 21.7466, 0.4788", "419.754, 730.101, 21.8037, 0.5206", "420.204, 731.15, 21.8772, 0.6884", "420.506, 732.246, 21.9733, 0.79", "420.806, 733.342, 22.0781, 0.8506", "421.109, 734.427, 22.0706, 0.8982", "421.411, 735.511, 21.9698, 0.843", "421.894, 736.545, 21.8796, 0.7494", "422.206, 737.618, 21.8039, 0.7626", "422.224, 738.762, 21.7346, 0.795", "422.244, 739.906, 21.6808, 0.8178", "422.498, 741.009, 21.6546, 0.8126", "422.866, 742.091, 21.6445, 0.8034", "423.162, 743.194, 21.6366, 0.7852", "423.375, 744.317, 21.6317, 0.7564", "423.573, 745.443, 21.6303, 0.6798", "423.573, 746.587, 21.631, 0.6494", "423.573, 747.731, 21.6327, 0.7388", "423.708, 748.843, 21.635, 0.6532", "424.22, 749.867, 21.6382, 0.5718", "424.662, 750.91, 21.6427, 0.5024", "424.782, 752.047, 21.6489, 0.436", "424.902, 753.186, 21.6577, 0.4684", "425.161, 754.294, 21.6701, 0.4596", "425.503, 755.385, 21.6871, 0.549", "425.876, 756.467, 21.7107, 0.6598", "426.3, 757.528, 21.7446, 0.6734", "426.705, 758.598, 21.793, 0.715", "427.047, 759.69, 21.8587, 0.7114", "427.388, 760.782, 21.9437, 0.641", "427.599, 761.798, 22.0623, 0.589", "427.694, 762.892, 22.2842, 0.5708", "427.482, 763.982, 22.5579, 0.614", "427.022, 765.025, 22.8127, 0.5494", "426.594, 766.069, 23.0593, 0.4458", "426.457, 767.19, 23.3441, 0.4036", "426.32, 768.31, 23.6468, 0.5126", "426.098, 769.071, 23.9508, 0.4936", "425.785, 770.14, 24.2736, 0.3874", "425.387, 771.202, 24.519, 0.305", "424.962, 772.265, 24.655, 0.284", "424.553, 773.286, 24.7703, 0.2918", "424.488, 774.401, 24.8175, 0.3076", "424.641, 775.433, 24.6068, 0.3306", "424.947, 776.043, 24.1823, 0.404", "424.794, 776.501, 23.6771, 0.3912" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "406.579, 660.209, 22.0098, 0.5528", "406.297, 659.468, 22.2516, 0.2288", "406.7, 658.518, 21.6644, 0.2754", "407.668, 657.961, 21.454, 0.276", "408.789, 658.084, 21.2422, 0.2774", "409.779, 658.597, 20.9764, 0.2798", "410.659, 658.621, 20.5208, 0.2844", "411.249, 657.791, 20.1736, 0.2926", "412.09, 657.078, 19.9047, 0.309", "413.073, 657.292, 19.5119, 0.3332", "414.03, 657.872, 19.1732, 0.4084", "415.137, 657.883, 18.8173, 0.4008", "416.092, 657.461, 18.3966, 0.4134", "416.704, 656.546, 17.9512, 0.5368" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "387.855, 650.136, 22.9416, 0.6526", "387.866, 651.162, 22.7651, 0.4576", "387.987, 652.301, 22.7026, 0.5578", "388.107, 653.439, 22.6774, 0.529", "388.226, 654.576, 22.642, 0.6882", "388.346, 655.714, 22.5939, 0.6374", "388.466, 656.852, 22.5318, 0.6208" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "387.855, 650.136, 22.9416, 0.6526", "386.433, 650.387, 23.0259, 0.6466", "385.309, 650.586, 23.1288, 0.501", "384.249, 650.989, 23.2689, 0.4278", "383.194, 651.401, 23.426, 0.4796", "382.367, 652.189, 23.5255, 0.5814", "381.546, 652.985, 23.5676, 0.5126" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "384.344, 581.154, 19.3054, 0.6938", "384.756, 580.127, 19.3363, 0.53", "385.18, 579.065, 19.3531, 0.5358", "385.358, 577.942, 19.3671, 0.4166", "385.478, 576.804, 19.3818, 0.3698", "385.615, 575.669, 19.3976, 0.3524", "385.804, 574.54, 19.4153, 0.4402", "385.991, 573.412, 19.4353, 0.478", "386.188, 572.286, 19.4764, 0.469", "386.386, 571.161, 19.5366, 0.3792", "386.481, 570.035, 19.6327, 0.337", "386.608, 568.948, 19.6336, 0.3438", "387.092, 567.929, 19.6151, 0.3994", "387.178, 567.13, 19.6279, 0.5228", "387.33, 566.002, 19.6705, 0.6524", "387.6, 564.974, 19.7722, 0.6896", "387.721, 564.052, 19.8043, 0.6", "387.934, 563.031, 19.7243, 0.517", "388.395, 562.093, 19.7519, 0.416", "388.916, 561.224, 19.7715, 0.4316", "389.467, 560.253, 19.7467, 0.3892", "389.982, 559.288, 19.8366, 0.429", "390.235, 558.193, 19.9588, 0.3846", "390.484, 557.153, 20.1865, 0.4194", "391.049, 556.288, 20.5053, 0.3728", "392.004, 555.732, 20.7054, 0.368", "392.884, 555.031, 20.8624, 0.421", "393.576, 554.126, 20.9859, 0.4474", "394.248, 553.212, 21.1207, 0.3878", "395.031, 552.387, 21.23, 0.3474", "395.826, 551.578, 21.2669, 0.3878", "396.769, 550.94, 21.3118, 0.3618", "397.772, 550.405, 21.38, 0.3466", "398.843, 550.063, 21.512, 0.3862", "399.709, 549.384, 21.6746, 0.3586", "400.297, 548.421, 21.8587, 0.3404", "400.812, 547.418, 21.9726, 0.375", "401.258, 546.373, 22.0269, 0.337", "401.556, 545.274, 22.0591, 0.3058", "401.762, 544.155, 22.049, 0.2852", "402.068, 543.083, 22.0326, 0.2942", "402.465, 542.04, 22.1173, 0.312", "402.831, 540.975, 22.2503, 0.3386", "403.38, 539.976, 22.365, 0.4198", "404.06, 539.056, 22.4599, 0.4156", "404.698, 538.114, 22.5372, 0.4728", "405.181, 537.078, 22.5935, 0.491", "405.564, 536.003, 22.6291, 0.4938", "405.82, 534.89, 22.6689, 0.4202", "406.015, 533.784, 22.7849, 0.4392", "406.277, 532.694, 22.8499, 0.4044", "406.565, 531.66, 22.8782, 0.4508", "407.134, 530.592, 22.93, 0.457", "407.048, 529.489, 23.0398, 0.3988", "407.175, 528.367, 23.1532, 0.399", "407.175, 527.24, 23.3141, 0.334", "407.448, 526.171, 23.5082, 0.3002", "407.737, 525.249, 23.4652, 0.275", "408.159, 524.289, 23.4732, 0.2754", "408.565, 523.242, 23.546, 0.2762", "408.957, 522.171, 23.6098, 0.2774", "409.532, 521.279, 23.7346, 0.28", "409.693, 520.492, 23.6776, 0.2846", "409.778, 519.455, 23.692, 0.2932", "409.548, 518.718, 23.957, 0.3086", "409.844, 517.681, 24.1674, 0.3396", "410.088, 516.59, 24.3461, 0.3856", "410.309, 515.485, 24.5441, 0.5262", "410.225, 514.405, 24.8168, 0.5196", "410.379, 513.648, 25.2116, 0.4306", "410.379, 512.947, 25.1423, 0.4108", "410.17, 511.866, 25.051, 0.356", "410.15, 510.764, 25.0323, 0.3406", "410.15, 509.802, 25.1842, 0.3516", "409.76, 508.834, 25.2627, 0.409", "410.186, 508.012, 25.1022, 0.5644", "410.378, 506.896, 25.0089, 0.615", "410.379, 506.229, 24.6422, 0.4898", "410.609, 505.267, 24.5353, 0.4042", "410.609, 504.275, 24.6947, 0.4496", "410.624, 503.245, 25.0365, 0.4594", "410.838, 502.264, 25.3613, 0.6094", "410.697, 501.231, 25.6996, 0.476", "410.838, 500.129, 25.8803, 0.3952", "411.01, 499.012, 26.0087, 0.3526", "411.403, 497.965, 26.0278, 0.4406", "411.543, 496.95, 25.9262, 0.4788", "411.854, 496.08, 25.8525, 0.4702", "411.947, 495.011, 25.8275, 0.3814", "412.211, 494.073, 25.6135, 0.342", "412.001, 493.134, 25.3367, 0.3476", "411.649, 492.495, 25.3315, 0.4348", "411.524, 491.684, 25.116, 0.4504", "411.695, 490.666, 25.0163, 0.5022", "412.174, 489.979, 25.1567, 0.7174", "412.427, 488.869, 25.2789, 0.7654", "412.249, 487.751, 25.3055, 0.7288", "411.836, 486.692, 25.2603, 0.5848", "411.296, 485.794, 25.2838, 0.4566" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "384.344, 581.154, 19.3054, 0.6938", "383.657, 580.088, 18.5808, 0.2288", "383.215, 579.102, 17.6334, 0.2782", "382.922, 578.031, 17.2294, 0.2814", "383.291, 577.014, 16.7868, 0.287", "383.868, 576.105, 16.2894, 0.2988", "384.102, 575.024, 15.8702, 0.3142", "383.196, 574.592, 15.4235, 0.3738", "382.529, 573.866, 15.0032, 0.3344", "382.753, 572.758, 14.6685, 0.3012", "382.799, 571.662, 14.3229, 0.2766", "383.004, 570.577, 13.9447, 0.2784", "383.652, 569.653, 13.5702, 0.2818", "384.169, 568.724, 13.3125, 0.288", "384.192, 567.593, 13.1226, 0.3004", "384.65, 566.86, 12.8018, 0.3172", "384.981, 566.711, 12.5326, 0.3792", "386.037, 566.288, 12.2891, 0.3446", "387.01, 565.838, 11.9876, 0.3198", "387.618, 564.935, 11.5969, 0.3124", "388.021, 563.953, 11.1216, 0.339", "388.38, 562.886, 10.7011, 0.4218", "388.775, 561.821, 10.3917, 0.4128", "389.238, 560.788, 10.1796, 0.4976", "389.748, 559.78, 9.9622, 0.393", "390.128, 558.739, 9.6911, 0.3248", "390.535, 557.748, 9.3487, 0.2736", "391.264, 556.959, 8.9323, 0.2728", "391.383, 555.871, 8.5547, 0.2712", "391.459, 554.768, 8.3169, 0.2684", "391.34, 553.639, 8.1517, 0.2626", "391.234, 552.526, 8.0423, 0.2542", "391.447, 551.405, 7.9554, 0.2288", "391.841, 550.551, 7.3192, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "401.135, 586.497, 30.6432, 0.4876", "401.135, 586.174, 34.2714, 0.2288", "401.135, 585.817, 36.0268, 0.2728", "401.496, 585.707, 36.822, 0.2712", "402.481, 586.243, 37.4156, 0.2684", "403.469, 586.74, 37.8227, 0.2626", "404.569, 586.55, 38.045, 0.2542", "405.53, 586.353, 37.9733, 0.2288", "406.63, 586.038, 37.5626, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "401.135, 586.497, 30.6432, 0.4876", "402.017, 585.386, 30.8134, 0.4144", "402.782, 584.547, 30.9411, 0.399", "403.479, 583.656, 31.085, 0.4734", "404.07, 582.696, 31.2043, 0.5698", "404.519, 581.644, 31.2598, 0.4916", "404.949, 580.589, 31.2514, 0.4498", "405.359, 579.533, 31.2074, 0.558", "405.736, 578.459, 31.1503, 0.5438", "406.078, 577.368, 31.1172, 0.6446", "406.41, 576.28, 31.1399, 0.6718", "406.717, 575.203, 31.2715, 0.583", "406.99, 574.112, 31.4558, 0.637", "407.178, 572.983, 31.6081, 0.5902", "407.366, 571.855, 31.7192, 0.7588", "407.806, 570.805, 31.787, 0.7466", "408.289, 569.767, 31.813, 0.7004", "408.728, 568.711, 31.8055, 0.5004", "409.153, 567.649, 31.782, 0.4552", "409.67, 566.631, 31.7514, 0.392", "409.661, 565.554, 31.6862, 0.4046", "409.54, 564.436, 31.5986, 0.4846", "409.727, 563.311, 31.533, 0.5858", "410.011, 562.214, 31.493, 0.5444", "410.177, 561.102, 31.3463, 0.4366" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "424.794, 776.501, 23.6771, 0.3912", "424.54, 777.136, 22.7651, 0.2288", "424.896, 777.637, 24.0457, 0.3064", "424.281, 778.032, 24.6169, 0.3282", "423.908, 779.029, 25.2405, 0.4004", "423.247, 779.927, 25.796, 0.3788", "422.478, 780.773, 26.2453, 0.4088", "421.881, 781.716, 26.6561, 0.3524", "421.382, 782.713, 27.0524, 0.3338", "421.094, 783.801, 27.414, 0.3392", "420.858, 784.911, 27.7498, 0.3848", "420.496, 785.978, 28.084, 0.5248", "420.109, 787.051, 28.3676, 0.5162", "419.553, 788.049, 28.6017, 0.429", "418.499, 788.493, 28.807, 0.3838", "417.586, 789.061, 28.9159, 0.4212", "416.939, 789.857, 29.1984, 0.588", "416.99, 790.809, 29.6696, 0.6546", "417.017, 791.851, 30.2568, 0.5824", "416.172, 792.562, 30.791, 0.4836", "415.248, 793.116, 31.3748, 0.3594", "414.487, 793.798, 32.0656, 0.3", "413.428, 793.899, 32.5632, 0.2746", "412.353, 794.191, 32.9524, 0.2746", "411.275, 794.07, 33.4407, 0.2746", "410.6, 794.184, 34.1673, 0.2746", "409.86, 795.013, 34.818, 0.2746", "409.398, 796.025, 35.3651, 0.2746", "409.377, 797.16, 35.9033, 0.2746", "409.335, 798.261, 36.486, 0.2746", "408.935, 799.316, 37.0042, 0.2746", "408.222, 800.159, 37.5136, 0.2746", "407.448, 800.723, 38.2169, 0.2746", "406.744, 801.278, 39.0592, 0.2746", "406.63, 802.009, 40.0123, 0.2746", "406.63, 803.086, 40.7299, 0.2746", "406.222, 804.126, 41.2969, 0.2746", "405.787, 805.172, 41.736, 0.2746", "405.541, 806.289, 42.0154, 0.2746", "405.295, 807.406, 42.1736, 0.2748", "405.047, 808.42, 42.3836, 0.275", "404.798, 809.416, 42.67, 0.2754" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "424.794, 776.501, 23.6771, 0.3912", "424.725, 777.029, 23.1976, 0.403", "424.581, 778.132, 22.7088, 0.4818", "424.42, 779.244, 22.2838, 0.5806", "424.228, 780.37, 21.9979, 0.5348", "424.038, 781.498, 21.8165, 0.4178", "423.849, 782.628, 21.7103, 0.356", "423.661, 783.755, 21.6534, 0.405", "423.573, 784.893, 21.6324, 0.3872", "423.573, 786.037, 21.6273, 0.4246", "423.573, 787.181, 21.6252, 0.3812", "423.66, 788.32, 21.6245, 0.3892", "423.78, 789.457, 21.6235, 0.4316", "423.981, 790.568, 21.6222, 0.607", "424.552, 791.56, 21.6203, 0.691", "425.086, 792.567, 21.6177, 0.6444", "425.374, 793.674, 21.614, 0.625", "425.662, 794.781, 21.6088, 0.4932", "426.136, 795.819, 21.6016, 0.484", "426.647, 796.842, 21.592, 0.4712", "427.158, 797.866, 21.5777, 0.425", "427.612, 798.915, 21.5562, 0.448", "427.551, 800.048, 21.5288, 0.422", "427.257, 801.152, 21.4955, 0.4784", "426.719, 802.16, 21.4559, 0.5324", "426.06, 803.029, 21.3369, 0.42", "425.48, 803.972, 21.1915, 0.3282", "424.995, 804.944, 21.1757, 0.2796", "424.914, 806.072, 21.1216, 0.2838", "424.94, 807.212, 21.025, 0.2918", "424.947, 808.322, 20.8291, 0.3066", "425.059, 809.449, 20.633, 0.3346", "425.514, 810.477, 20.4532, 0.3824", "426.311, 811.289, 20.2779, 0.4908", "426.973, 812.191, 20.0664, 0.5968", "427.779, 812.968, 19.7998, 0.5674", "428.57, 813.702, 19.6465, 0.4668", "429.392, 814.406, 19.4926, 0.503", "430.397, 814.773, 19.1827, 0.4032", "431.225, 815.439, 18.8063, 0.3436", "431.957, 816.211, 18.5416, 0.3094", "432.091, 817.133, 18.1376, 0.3338", "431.171, 817.73, 17.7197, 0.411", "431.023, 818.563, 17.1437, 0.3992", "431.947, 819.146, 16.6148, 0.4414", "432.815, 819.873, 16.1901, 0.4384", "433.576, 820.62, 15.9399, 0.3696", "433.52, 821.66, 15.6632, 0.3192", "432.749, 822.281, 15.2737, 0.3096", "431.777, 822.716, 14.9115, 0.3418", "431.408, 823.735, 14.5488, 0.3886", "431.476, 824.841, 14.1386, 0.5378", "431.758, 825.917, 13.7458, 0.5112", "431.528, 826.983, 13.4206, 0.5614", "432.069, 827.888, 13.0153, 0.629", "432.761, 828.702, 12.6342, 0.6496", "433.406, 829.517, 12.4242, 0.508", "433.898, 830.549, 12.2848, 0.4334", "434.105, 831.636, 12.151, 0.5266", "434.105, 832.765, 11.9949, 0.491", "434.105, 833.895, 11.8418, 0.5214", "434.105, 835.039, 11.7332, 0.566", "434.462, 836.122, 11.6532, 0.4772" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "416.704, 656.546, 17.9512, 0.5368", "417.652, 656.891, 17.6354, 0.5092", "418.698, 657.342, 17.4524, 0.5578", "419.505, 658.102, 17.3761, 0.622", "420.127, 659.049, 17.362, 0.6372", "421.136, 659.288, 17.3464, 0.4834", "421.664, 659.96, 17.6524, 0.3942", "422.233, 660.865, 18.0335, 0.4226", "423.055, 661.537, 18.5108, 0.4502", "424.068, 662.05, 18.9149, 0.3928", "425.178, 662.327, 19.2366, 0.357", "426.279, 662.052, 19.4764, 0.4052", "427.41, 662.081, 19.6804, 0.3948", "428.541, 662.147, 19.8841, 0.4036", "429.672, 662.239, 20.058, 0.5124", "430.798, 662.385, 20.156, 0.4932", "431.848, 662.544, 20.2757, 0.387", "432.707, 662.927, 20.484, 0.304", "433.747, 663.274, 20.5616, 0.282", "434.774, 662.834, 20.5991, 0.2882", "435.786, 662.498, 20.7352, 0.3012", "436.85, 662.298, 20.9007, 0.3186", "437.897, 661.844, 20.9809, 0.3816", "438.936, 661.549, 20.9129, 0.3488", "440.008, 661.248, 20.777, 0.3288", "441.051, 661.392, 20.5625, 0.323", "442.043, 661.908, 20.4382, 0.3896", "442.84, 662.195, 20.5827, 0.3648", "443.928, 662.527, 20.7678, 0.352", "445.016, 662.808, 20.894, 0.3976", "446.103, 663.059, 20.908, 0.3734", "447.208, 663.331, 20.9003, 0.3988", "448.301, 663.058, 20.8813, 0.3338", "448.111, 663.286, 20.9432, 0.3", "449.056, 663.409, 21.0777, 0.2746", "450.092, 663.204, 21.0887, 0.2746", "451.008, 662.631, 21.1617, 0.2746", "452.118, 662.564, 21.3387, 0.2746", "453.204, 662.842, 21.5122, 0.2746", "454.333, 662.956, 21.666, 0.2746", "455.476, 662.956, 21.8235, 0.2746", "456.619, 662.956, 21.9882, 0.2746", "457.74, 663.123, 22.1561, 0.2748", "458.855, 663.332, 22.3271, 0.2748", "459.978, 663.308, 22.4609, 0.275", "461.108, 663.135, 22.5349, 0.2754", "462.233, 662.948, 22.5774, 0.2762", "463.351, 662.724, 22.6388, 0.2778", "464.477, 662.778, 22.691, 0.2804", "465.605, 662.965, 22.7294, 0.2856", "466.725, 663.189, 22.7636, 0.295", "467.816, 663.531, 22.7939, 0.312", "468.909, 663.872, 22.8161, 0.346", "470.011, 664.163, 22.8604, 0.3974", "471.077, 664.538, 22.909, 0.549", "472.026, 665.171, 22.916, 0.5566", "472.989, 665.784, 22.9023, 0.5248", "473.981, 666.354, 22.896, 0.4612", "474.999, 666.863, 22.899, 0.365", "476.091, 667.204, 22.9165, 0.3104", "477.184, 667.534, 22.9584, 0.2938", "478.328, 667.534, 23.0304, 0.3112", "479.472, 667.571, 23.1292, 0.3382", "480.51, 667.976, 23.2532, 0.413", "481.345, 668.653, 23.5199, 0.4328", "482.281, 669.277, 23.8334, 0.3594", "483.23, 669.909, 24.1409, 0.3002", "484.172, 670.543, 24.4569, 0.2748", "485.109, 671.177, 24.7791, 0.2752", "486.087, 671.76, 25.067, 0.2756", "487.075, 672.332, 25.3086, 0.2766", "488.155, 672.666, 25.5413, 0.2782", "489.251, 672.959, 25.7671, 0.2814", "490.355, 673.247, 25.938, 0.287", "491.463, 673.536, 26.0515, 0.2988", "492.449, 674.046, 26.1229, 0.3142", "493.295, 674.816, 26.162, 0.3734", "494.13, 675.598, 26.1771, 0.3338", "494.952, 676.393, 26.1793, 0.3", "495.887, 677.019, 26.179, 0.2746", "496.938, 677.472, 26.1787, 0.2746", "498.02, 677.803, 26.1781, 0.2746", "499.158, 677.923, 26.1774, 0.2746", "500.295, 678.043, 26.1764, 0.2746", "501.426, 678.218, 26.1749, 0.2746", "502.555, 678.407, 26.1729, 0.2746", "503.689, 678.522, 26.17, 0.2746", "504.832, 678.522, 26.1661, 0.2746", "505.977, 678.522, 26.1605, 0.2746", "507.111, 678.414, 26.1524, 0.2746", "508.24, 678.225, 26.1416, 0.2748", "509.371, 678.065, 26.1274, 0.275", "510.515, 678.065, 26.1092, 0.2754", "511.595, 678.37, 26.0679, 0.276", "512.068, 678.448, 26.0269, 0.2772", "513.197, 678.632, 25.9853, 0.2796", "514.324, 678.816, 25.9386, 0.284", "515.302, 679.401, 25.8711, 0.2916", "516.27, 680.012, 25.7898, 0.3074", "517.161, 680.604, 25.5781, 0.3302", "518.125, 681.15, 25.3434, 0.4028", "519.145, 681.66, 25.1641, 0.3906", "520.193, 682.086, 25.1175, 0.3946", "521.25, 682.486, 25.2043, 0.501", "522.236, 682.992, 25.4331, 0.4474", "523.229, 683.497, 25.7469, 0.4214", "524.26, 683.994, 26.0016, 0.4748", "525.284, 684.501, 26.1915, 0.5378", "526.308, 685.012, 26.3167, 0.6", "527.299, 685.563, 26.4243, 0.5238", "528.022, 686.029, 26.7088, 0.3962", "528.926, 686.586, 26.8312, 0.3224", "529.797, 686.947, 26.6457, 0.3108", "530.879, 687.316, 26.4634, 0.3672", "531.959, 687.686, 26.2838, 0.322", "533.006, 688.129, 26.0463, 0.2796", "533.825, 688.762, 25.7263, 0.2288", "534.694, 689.358, 25.0418, 0.2288" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "416.704, 656.546, 17.9512, 0.5368", "417.036, 655.757, 17.0738, 0.2288", "417.438, 654.688, 16.9577, 0.5208", "418.083, 653.836, 16.9966, 0.4774", "418.955, 653.31, 16.864, 0.509", "419.849, 652.825, 16.6637, 0.4812", "420.802, 652.238, 16.5527, 0.6208", "421.834, 652.168, 16.3917, 0.6384", "422.829, 652.622, 16.1419, 0.6976", "423.885, 652.86, 15.9705, 0.678", "424.955, 652.76, 15.7938, 0.5846", "425.335, 651.878, 15.5144, 0.458", "425.597, 650.82, 15.1351, 0.456", "426.406, 650.111, 14.7276, 0.4652", "427.42, 649.736, 14.2733, 0.4202", "428.514, 649.575, 13.8002, 0.4096", "429.618, 649.294, 13.3774, 0.4938", "430.379, 648.718, 12.9292, 0.6026", "430.78, 647.673, 12.5106, 0.578", "431.492, 646.827, 12.1006, 0.4862", "432.369, 646.196, 11.6518, 0.54", "433.404, 645.918, 11.1992, 0.4676", "434.529, 645.707, 10.8469, 0.4832", "435.612, 645.388, 10.5815, 0.47", "436.596, 644.804, 10.3802, 0.4228", "437.572, 644.253, 10.163, 0.4442", "438.543, 643.72, 9.8978, 0.4138", "439.52, 643.133, 9.658, 0.4684", "440.553, 642.811, 9.4975, 0.489", "441.639, 642.631, 9.4448, 0.4604", "442.631, 642.231, 9.2851, 0.5034", "443.467, 641.476, 9.1165, 0.5736", "444.434, 640.98, 9.0293, 0.522", "444.869, 640.908, 8.8574, 0.393", "445.958, 640.726, 8.555, 0.3164", "447.05, 640.612, 8.1824, 0.2994", "448.162, 640.869, 7.8499, 0.3474", "449.204, 641.265, 7.5304, 0.2796", "450.132, 641.895, 6.8295, 0.2288" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "388.466, 656.852, 22.5318, 0.6208", "389.065, 657.965, 22.4255, 0.4426", "389.573, 658.982, 22.2856, 0.3706", "389.865, 660.078, 22.1014, 0.3542", "390.166, 661.171, 21.8917, 0.4434", "390.649, 662.208, 21.7196, 0.484", "391.132, 663.245, 21.5779, 0.4798", "391.943, 664.045, 21.4556, 0.399", "392.72, 664.884, 21.3384, 0.3756", "393.252, 665.838, 21.2152, 0.4052", "393.35, 666.975, 21.0752, 0.5636", "393.526, 668.032, 20.823, 0.5836", "393.869, 669.004, 20.4074, 0.5756", "394.156, 670.08, 20.0074, 0.551", "394.424, 671.192, 19.6783, 0.5526", "394.724, 672.294, 19.4194, 0.5554", "395.064, 673.387, 19.2302, 0.5608", "395.369, 674.483, 19.0886, 0.5706", "395.535, 675.594, 18.9198, 0.5898", "395.709, 676.705, 18.7246, 0.6202", "396.023, 677.804, 18.5902, 0.7024", "396.338, 678.904, 18.5134, 0.7284", "396.652, 680.004, 18.49, 0.7048", "397.318, 680.913, 18.4969, 0.5516", "397.875, 682.139, 18.7013, 0.5706", "398.454, 683.111, 18.8839, 0.5068", "398.707, 684.225, 19.0335, 0.412", "398.707, 685.369, 19.1526, 0.3514", "398.744, 686.512, 19.2469, 0.3656", "398.828, 687.647, 19.3383, 0.4642", "398.896, 688.77, 19.4436, 0.5248", "398.708, 689.898, 19.5238, 0.545", "398.689, 691.042, 19.581, 0.5714", "398.514, 692.154, 19.5746, 0.4452", "398.098, 693.191, 19.5834, 0.3756", "397.646, 694.233, 19.6078, 0.3632", "397.072, 695.203, 19.5847, 0.46", "396.444, 696.142, 19.6001, 0.5156", "395.607, 696.911, 19.6227, 0.5344", "394.848, 697.766, 19.6405, 0.5206", "394.208, 698.712, 19.6453, 0.5016", "393.732, 699.75, 19.6392, 0.4356", "393.184, 700.753, 19.6248, 0.4628", "392.59, 701.731, 19.5951, 0.4726", "391.923, 702.66, 19.5558, 0.4588", "391.258, 703.591, 19.5078, 0.3602", "390.621, 704.513, 19.3805, 0.3018", "390.035, 705.491, 19.2552, 0.278", "389.872, 706.772, 19.1519, 0.2808", "389.728, 707.907, 19.0692, 0.2864", "389.405, 708.984, 18.9519, 0.2962", "389.011, 710.036, 18.7973, 0.3154", "388.547, 711.076, 18.689, 0.3462", "388.064, 712.114, 18.6332, 0.4278", "387.682, 713.177, 18.6724, 0.46", "387.349, 714.251, 18.8096, 0.4118", "386.827, 715.252, 18.9731, 0.3868", "386.216, 716.218, 19.1216, 0.4866", "385.733, 717.251, 19.2339, 0.42", "385.307, 718.313, 19.3064, 0.3746", "384.995, 719.408, 19.3435, 0.3678", "384.783, 720.532, 19.3581, 0.4386", "384.54, 721.647, 19.3658, 0.6214", "384.087, 722.697, 19.3721, 0.71", "383.633, 723.747, 19.3785, 0.7164" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "381.546, 652.985, 23.5676, 0.5126", "381.134, 653.81, 23.5339, 0.4908", "380.624, 654.831, 23.4349, 0.6242", "380.142, 655.857, 23.2618, 0.715", "379.666, 656.886, 23.0399, 0.727", "379.159, 657.91, 22.85, 0.5934", "378.648, 658.934, 22.6985, 0.6438", "378.041, 659.873, 22.5085, 0.6638", "377.408, 660.788, 22.2833, 0.5992", "376.682, 661.631, 22.2244, 0.5158", "375.925, 662.448, 22.2407, 0.4136", "375.091, 663.195, 22.1798, 0.4272", "374.222, 663.918, 22.1054, 0.381", "373.316, 664.616, 22.0653, 0.4128", "372.404, 665.278, 22.097, 0.3608", "371.487, 665.91, 22.2125, 0.3446", "370.834, 666.816, 22.3269, 0.3828", "370.263, 667.807, 22.4239, 0.3514", "369.9, 668.866, 22.4368, 0.3324", "369.623, 669.95, 22.3606, 0.3354", "369.538, 671.077, 22.2841, 0.384", "369.263, 672.166, 22.2641, 0.4934", "368.495, 672.861, 22.4394, 0.6034", "367.373, 673.029, 22.6114, 0.5718", "366.308, 673.314, 22.802, 0.512", "365.518, 674.058, 23.0624, 0.4066", "364.594, 674.676, 23.2444, 0.4134", "363.521, 675.072, 23.3166, 0.3606", "362.467, 675.506, 23.2712, 0.3502", "361.472, 676.044, 23.0995, 0.3646", "360.563, 676.693, 22.8226, 0.4566", "359.806, 677.533, 22.4657, 0.5392", "359.048, 678.279, 22.0047, 0.4324", "358.243, 679.082, 21.5927, 0.3522", "357.608, 680.14, 21.1578, 0.3188", "357.031, 681.102, 20.7296, 0.3824", "356.719, 682.177, 20.3132, 0.3502", "356.411, 683.254, 19.919, 0.3314", "355.841, 684.246, 19.6367, 0.3272", "355.271, 685.238, 19.4329, 0.3988", "354.811, 686.284, 19.2936, 0.3758", "354.358, 687.335, 19.194, 0.4032", "353.624, 688.198, 19.1136, 0.3422", "352.828, 689.02, 19.0343, 0.3152", "352.072, 689.851, 18.8726, 0.3036", "351.343, 690.699, 18.6437, 0.3234", "350.881, 691.746, 18.4394, 0.3904", "350.419, 692.792, 18.2585, 0.3664", "349.754, 693.722, 18.1005, 0.355", "349.085, 694.649, 17.9687, 0.4018", "348.806, 695.224, 17.8292, 0.3886", "348.314, 696.233, 17.6461, 0.3908", "347.697, 697.183, 17.4886, 0.494", "347.028, 698.111, 17.3812, 0.4344", "346.185, 698.719, 17.4338, 0.3976" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "381.546, 652.985, 23.5676, 0.5126", "380.386, 652.599, 21.8599, 0.2288", "379.376, 652.135, 21.9166, 0.3164", "378.276, 652.329, 21.9802, 0.3778", "377.187, 652.385, 22.1081, 0.342", "376.047, 652.3, 22.191, 0.3152", "375.146, 651.825, 22.1058, 0.3026", "374.367, 651.117, 22.144, 0.3276", "373.387, 650.645, 22.1017, 0.3682", "372.319, 650.802, 21.9301, 0.4706", "371.212, 651.034, 21.7591, 0.5292", "370.074, 650.965, 21.6127, 0.5888", "368.936, 650.844, 21.4866, 0.4794", "367.803, 650.796, 21.3566, 0.4288", "366.77, 651.22, 21.2155, 0.512", "365.828, 651.179, 20.9684, 0.4922", "364.841, 650.679, 20.7536, 0.385", "363.81, 651.175, 20.5741, 0.3006", "362.713, 651.447, 20.4235, 0.2758", "361.6, 651.605, 20.3006, 0.2768", "360.63, 652.207, 20.2188, 0.2786", "359.785, 652.919, 20.0712, 0.282", "359.011, 653.692, 19.8076, 0.288", "357.959, 654.116, 19.5758, 0.3008", "356.886, 654.512, 19.3852, 0.3178", "355.889, 655.043, 19.1819, 0.3802", "354.909, 655.596, 18.9687, 0.3464", "353.799, 655.832, 18.8656, 0.3242", "352.689, 656.069, 18.835, 0.3142", "351.549, 656.089, 18.7768, 0.3736", "350.455, 656.089, 18.6013, 0.3342", "349.332, 656.209, 18.4145, 0.3004", "348.429, 656.75, 18.1423, 0.2754", "347.61, 657.503, 17.9201, 0.2762", "346.718, 658.199, 17.8293, 0.2776", "345.684, 658.647, 17.8258, 0.2802", "344.602, 659.007, 17.8777, 0.285", "343.637, 659.59, 17.9326, 0.2938", "342.745, 660.305, 17.9668, 0.3112", "342.05, 661.193, 17.9594, 0.3382", "341.47, 662.179, 17.9122, 0.413", "340.577, 662.822, 17.7729, 0.4328", "339.494, 663.012, 17.5471, 0.3594", "338.429, 663.4, 17.3675, 0.3002", "337.502, 664.059, 17.2333, 0.2748", "336.509, 664.61, 17.141, 0.2752", "335.503, 665.157, 17.0867, 0.2756", "334.414, 665.473, 17.066, 0.2766", "333.294, 665.71, 17.0629, 0.2782", "332.245, 666.105, 17.0586, 0.2814", "331.308, 666.763, 17.0524, 0.2872", "330.366, 667.41, 17.0439, 0.299", "329.409, 668.039, 17.0324, 0.3146", "328.399, 668.541, 17.0158, 0.3742", "327.286, 668.803, 16.9911, 0.3354", "326.173, 669.066, 16.9576, 0.303", "325.08, 669.407, 16.9162, 0.28", "323.989, 669.748, 16.8679, 0.2848", "322.999, 670.264, 16.7488, 0.2932", "322.038, 670.829, 16.5749, 0.3104", "321.069, 671.437, 16.4731, 0.3356", "320.097, 671.911, 16.4271, 0.4142", "319.089, 671.924, 16.3763, 0.4052", "318.15, 672.418, 16.5582, 0.4526" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "411.296, 485.794, 25.2838, 0.4566", "411.744, 484.946, 25.0069, 0.4612", "411.538, 484.07, 24.7, 0.439", "411.928, 483.091, 24.5852, 0.5452", "412.38, 482.1, 24.5543, 0.4846", "412.555, 480.979, 24.6325, 0.4786", "412.942, 479.925, 24.7795, 0.6372", "413.552, 478.958, 24.9766, 0.5656", "413.975, 477.92, 25.2086, 0.6062", "414.435, 476.905, 25.4797, 0.5256", "414.661, 475.803, 25.7207, 0.4474", "414.698, 474.664, 25.9085, 0.4134", "414.638, 473.525, 26.0664, 0.4994", "414.638, 472.415, 26.2562, 0.6202", "414.97, 471.386, 26.5007, 0.5744", "415.182, 470.418, 26.5909, 0.6558", "415.777, 469.51, 26.5799, 0.6856", "416.397, 468.578, 26.5539, 0.6422", "416.631, 467.461, 26.5136, 0.5836", "416.585, 466.318, 26.4607, 0.597" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "411.296, 485.794, 25.2838, 0.4566", "411.015, 485.357, 26.161, 0.4576", "409.891, 485.336, 26.0154, 0.3604", "409.22, 484.742, 26.022, 0.302", "408.488, 484.421, 25.7786, 0.2784", "407.448, 484.354, 25.4758, 0.2816", "406.349, 484.192, 25.2846, 0.2876", "405.288, 483.968, 25.0023, 0.2998", "404.154, 483.838, 24.7788, 0.316", "403.023, 483.76, 24.6866, 0.3768", "401.895, 483.851, 24.6896, 0.3402", "400.761, 483.971, 24.7052, 0.3118", "399.631, 484.039, 24.708, 0.2964", "398.641, 484.593, 24.7589, 0.316", "397.615, 485.014, 24.8548, 0.347", "396.485, 485.108, 24.8889, 0.429", "395.346, 485.108, 24.8743, 0.4638", "394.203, 485.108, 24.8532, 0.4112", "393.177, 485.275, 24.959, 0.423", "392.279, 485.909, 25.0039, 0.3734", "391.511, 486.357, 24.7702, 0.3988", "390.78, 486.782, 24.2935, 0.3338", "390.094, 487.255, 23.7061, 0.3", "389.07, 487.624, 23.3417, 0.2746", "388.073, 487.237, 23.2137, 0.2746", "387.355, 486.906, 23.5109, 0.2746", "386.703, 487.09, 24.124, 0.2748", "385.668, 487.513, 24.718, 0.275", "384.772, 488.183, 25.063, 0.2752", "383.962, 488.961, 25.1887, 0.2758", "383.015, 489.432, 25.0968, 0.2768", "381.917, 489.709, 24.8233, 0.2796", "380.842, 489.853, 24.4011, 0.2796", "379.79, 489.878, 23.8763, 0.305", "378.696, 489.892, 22.7651, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "410.177, 561.102, 31.3463, 0.4366", "409.419, 561.527, 31.6352, 0.4576", "408.566, 561.487, 31.9729, 0.3662", "408.153, 560.495, 32.1499, 0.3124", "407.547, 559.531, 32.3434, 0.2988", "407.127, 558.501, 32.599, 0.3142", "406.938, 557.373, 32.8339, 0.3734", "406.747, 556.267, 33.122, 0.3338", "406.489, 555.27, 33.4782, 0.3", "406.443, 554.181, 33.7299, 0.2746", "406.477, 553.047, 33.931, 0.2746", "406.373, 551.923, 34.1538, 0.2744", "406.26, 550.813, 34.3258, 0.2744", "406.475, 549.822, 34.3974, 0.2742", "406.704, 548.784, 34.622, 0.274", "406.911, 547.775, 35.0045, 0.2736", "407.041, 546.668, 35.3612, 0.2728", "407.367, 545.591, 35.6348, 0.2712", "407.736, 544.52, 35.8355, 0.2684", "407.992, 543.407, 35.9666, 0.2626", "408.297, 542.313, 36.0212, 0.2542", "408.317, 541.169, 36.0321, 0.2288", "408.32, 540.025, 36.0326, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "410.177, 561.102, 31.3463, 0.4366", "410.323, 560.368, 31.1455, 0.3858", "410.784, 559.35, 30.919, 0.4848", "411.142, 558.382, 30.6132, 0.4162" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "404.798, 809.416, 42.67, 0.2754", "404.798, 810.332, 45.4787, 0.2288", "404.81, 811.383, 46.9675, 0.4114", "405.243, 812.352, 47.5745, 0.4", "405.892, 813.074, 48.3524, 0.443", "406.473, 814.005, 49.1142, 0.4414", "407.258, 814.569, 49.9803, 0.375", "408.267, 815.019, 50.6814, 0.3304", "409.041, 815.743, 51.1868, 0.3248", "409.827, 816.529, 51.6757, 0.3982", "410.519, 816.879, 52.3144, 0.356", "411.209, 817.707, 53.4982, 0.4576" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "404.798, 809.416, 42.67, 0.2754", "403.76, 809.069, 42.6006, 0.2762", "402.751, 809.008, 42.2778, 0.2776", "401.664, 809.057, 41.837, 0.2802", "401.026, 809.989, 41.456, 0.285", "400.333, 810.857, 41.1491, 0.2938", "399.515, 811.652, 40.8758, 0.3112", "398.787, 812.507, 40.6168, 0.3382", "397.959, 813.257, 40.3724, 0.413", "397.005, 813.882, 40.1456, 0.4328", "396.214, 814.703, 39.963, 0.3594", "395.529, 815.61, 39.8157, 0.3002", "394.948, 816.595, 39.6934, 0.275", "394.345, 817.55, 39.5567, 0.2754", "393.714, 818.468, 39.3635, 0.276", "393.408, 819.531, 39.1952, 0.2772", "393.266, 820.666, 39.0852, 0.2796", "392.797, 821.648, 39.0314, 0.2838", "392.054, 822.5, 39.0748, 0.292", "391.344, 823.309, 39.2342, 0.3064", "390.578, 824.157, 39.3571, 0.3356", "389.737, 824.92, 39.4654, 0.3782", "388.832, 825.612, 39.5707, 0.5124", "387.813, 826.122, 39.5959, 0.4932", "386.746, 826.494, 39.5839, 0.387", "385.622, 826.692, 39.5839, 0.304", "384.501, 826.834, 39.5914, 0.2822", "383.4, 826.614, 39.515, 0.2884", "382.3, 826.406, 39.3952, 0.3014", "381.198, 826.406, 39.4318, 0.3192", "380.064, 826.408, 39.5265, 0.3828", "379.036, 826.831, 39.5452, 0.3514", "378.259, 827.556, 39.6343, 0.3322", "377.458, 828.337, 39.6962, 0.3362", "376.566, 828.985, 39.6892, 0.3796", "376.263, 829.759, 39.9042, 0.515", "375.239, 830.271, 40.0624, 0.498", "374.501, 831.029, 40.0672, 0.3954", "373.555, 831.602, 40.1279, 0.3208", "372.621, 832.162, 40.2447, 0.3078", "371.717, 832.642, 40.2041, 0.3616", "370.713, 832.881, 39.921, 0.3136", "369.996, 833.518, 39.5436, 0.2542", "369.996, 834.648, 38.7008, 0.2288" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "434.462, 836.122, 11.6532, 0.4772", "435.003, 836.441, 11.3826, 0.4576", "436.014, 836.974, 11.3503, 0.572", "436.918, 837.663, 11.3205, 0.4462", "437.692, 838.438, 11.3464, 0.3772", "438.287, 839.357, 11.3816, 0.3666", "438.734, 840.395, 11.2785, 0.465", "439.599, 840.628, 10.8872, 0.531", "440.591, 841.052, 10.4441, 0.5326", "441.059, 842.041, 10.0142, 0.665", "441.607, 842.991, 9.5233, 0.7396", "442.448, 843.747, 9.0175, 0.7912", "443.347, 844.302, 8.4647, 0.622", "444.316, 844.615, 7.8287, 0.4492", "445.389, 844.675, 7.2054, 0.3616", "446.514, 844.609, 6.6537, 0.4406", "447.636, 844.486, 6.2137, 0.3304", "448.758, 844.262, 5.6913, 0.2288" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "434.462, 836.122, 11.6532, 0.4772", "433.148, 836.286, 11.8089, 0.3998", "432.425, 837.151, 11.8576, 0.4204", "432.099, 838.171, 11.7513, 0.5072", "431.151, 838.764, 11.72, 0.6596", "430.365, 839.552, 11.7244, 0.5268", "429.577, 840.294, 11.54, 0.4666", "429.191, 840.712, 11.3221, 0.3664", "428.571, 841.596, 10.9975, 0.3546", "428.187, 842.636, 10.7428, 0.4024", "428.028, 843.702, 10.518, 0.3826", "427.647, 844.68, 10.158, 0.4156", "426.638, 845.018, 9.7512, 0.366", "425.634, 845.528, 9.4641, 0.3542", "424.579, 845.648, 9.1751, 0.4004", "423.571, 845.864, 8.7941, 0.3848", "422.651, 846.441, 8.4108, 0.39", "421.955, 847.278, 8.228, 0.4628", "421.033, 847.932, 8.1662, 0.5198", "420.078, 848.561, 8.1575, 0.5466", "419.149, 849.191, 8.2658, 0.5222", "418.232, 849.821, 8.4721, 0.6072", "417.278, 850.451, 8.627, 0.818", "416.322, 851.079, 8.7071, 0.723", "415.293, 851.571, 8.7025, 0.618", "414.257, 852.051, 8.6282, 0.534", "413.27, 852.492, 8.4102, 0.5274", "412.294, 852.88, 8.2182, 0.4782", "412.023, 853.963, 8.1302, 0.5672", "411.345, 854.673, 8.0071, 0.5422", "410.297, 854.438, 7.8466, 0.5044", "409.335, 854.863, 7.5807, 0.3926", "408.25, 855.165, 7.3471, 0.387", "407.166, 855.357, 7.2373, 0.3136", "406.677, 856.156, 7.1825, 0.2542", "406.172, 857.081, 6.8295, 0.2288" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "383.633, 723.747, 19.3785, 0.7164", "383.221, 724.173, 19.3909, 0.58", "382.425, 724.994, 19.42, 0.5886", "381.577, 725.748, 19.4403, 0.7096", "380.686, 726.445, 19.4376, 0.652", "379.951, 727.253, 19.4342, 0.54", "379.313, 728.063, 19.6685, 0.5864", "379.307, 728.834, 20.1674, 0.585", "378.927, 729.406, 20.5605, 0.5482", "378.319, 730.369, 20.8683, 0.6458", "377.693, 731.312, 21.161, 0.7078", "377.084, 732.263, 21.4183, 0.7138", "376.689, 733.298, 21.625, 0.5682", "375.947, 733.98, 21.8903, 0.6012", "375.055, 734.652, 22.0829, 0.5644", "374.904, 735.736, 22.1769, 0.5152", "374.992, 736.866, 22.2579, 0.559", "375.294, 737.964, 22.3308, 0.6724", "375.36, 739.088, 22.3555, 0.726", "375.361, 740.179, 22.5559, 0.6694", "375.128, 741.117, 22.9633, 0.6364", "374.729, 742.123, 23.2987, 0.6842", "374.344, 743.153, 23.6375, 0.701", "374.216, 744.015, 24.1669, 0.6224", "374.216, 745.103, 24.6931, 0.5522", "374.405, 746.219, 25.0478, 0.513", "374.681, 747.156, 25.359, 0.4562", "375.155, 748.018, 25.4119, 0.5022", "374.913, 748.876, 25.2354, 0.5402", "374.403, 749.85, 25.0741, 0.6118", "374.179, 750.957, 25.0289, 0.5096", "373.912, 752.069, 25.0491, 0.545" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "383.633, 723.747, 19.3785, 0.7164", "383.674, 725.072, 19.3505, 0.4576", "383.708, 726.216, 19.2327, 0.37", "383.739, 727.36, 19.186, 0.3196", "383.757, 728.503, 19.1206, 0.3118", "383.775, 729.647, 19.0283, 0.3386", "383.982, 730.754, 18.8991, 0.4182", "384.494, 731.777, 18.7202, 0.4202", "384.65, 732.903, 18.4811, 0.4442", "384.269, 733.876, 18.1189, 0.6194", "383.196, 733.915, 17.5998, 0.5374", "382.152, 733.827, 16.9256, 0.5296", "381.382, 733.885, 16.0357, 0.502", "381.007, 734.755, 15.116, 0.5156", "380.786, 735.106, 14.3812, 0.4552", "380.18, 735.98, 13.7901, 0.5286", "379.392, 736.41, 13.5281, 0.451", "378.296, 736.394, 13.3429, 0.4298", "377.45, 736.142, 12.9975, 0.4826", "376.47, 735.899, 12.603, 0.5896", "375.477, 736.281, 12.1558, 0.5156", "374.907, 737.236, 11.7029, 0.5558", "374.713, 738.341, 11.292, 0.4556", "374.565, 739.467, 10.9648, 0.4318", "374.791, 740.341, 10.5506, 0.5176", "374.904, 741.374, 10.2355, 0.5028", "374.658, 742.454, 9.9393, 0.4044", "374.151, 743.45, 9.6813, 0.3372", "373.506, 744.278, 9.5374, 0.3396", "373.317, 745.335, 9.3241, 0.4152", "373.775, 746.364, 9.122, 0.4378", "374.555, 747.103, 8.8437, 0.3644", "374.672, 748.057, 8.4862, 0.3304", "374.446, 749.17, 7.8823, 0.2288" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "346.185, 698.719, 17.4338, 0.3976", "345.625, 699.698, 19.7369, 0.2288", "345.009, 700.532, 20.5319, 0.3178", "344.253, 701.347, 20.878, 0.3508", "343.731, 702.341, 21.1864, 0.436", "343.298, 703.399, 21.4281, 0.4762", "342.752, 704.397, 21.5942, 0.4354", "342.151, 705.37, 21.688, 0.4626", "341.668, 706.407, 21.7328, 0.4722", "341.194, 707.446, 21.7656, 0.4582", "341.005, 708.575, 21.8096, 0.3594", "340.817, 709.703, 21.8732, 0.3", "340.362, 710.725, 21.9639, 0.2746", "339.721, 711.672, 22.0842, 0.2748", "339.314, 712.664, 22.3215, 0.2748", "338.757, 713.624, 22.6102, 0.2752", "338.082, 714.491, 22.8548, 0.2756", "337.379, 715.393, 23.0619, 0.2766", "336.805, 716.35, 23.3335, 0.2784", "336.266, 717.327, 23.6444, 0.2818", "335.897, 718.409, 23.8975, 0.2876", "335.529, 719.492, 24.1143, 0.3", "335.197, 720.586, 24.326, 0.3164", "334.899, 721.569, 24.6502, 0.3774", "333.935, 722.014, 25.0031, 0.3414", "333.137, 722.557, 25.2598, 0.3138", "332.555, 723.486, 25.3671, 0.3012", "331.909, 724.424, 25.4642, 0.3188", "331.19, 725.291, 25.5432, 0.3822", "330.271, 725.942, 25.5723, 0.35", "329.633, 726.44, 25.9071, 0.331", "328.638, 726.939, 26.2948, 0.3266", "327.567, 727.306, 26.7243, 0.3976", "326.467, 727.458, 27.1879, 0.3736", "325.365, 727.607, 27.6557, 0.399", "324.304, 728.026, 28.0381, 0.3342", "323.24, 728.433, 28.3254, 0.3006", "322.124, 728.572, 28.6065, 0.2758", "321.009, 728.712, 28.8711, 0.2768", "319.954, 729.085, 28.9806, 0.2786", "318.911, 729.496, 28.9554, 0.282", "317.783, 729.496, 28.987, 0.2882", "316.659, 729.464, 29.0492, 0.3012", "315.575, 729.16, 29.0167, 0.3186", "314.488, 728.905, 28.9383, 0.3816", "313.371, 729.117, 28.877, 0.349", "312.269, 729.339, 28.8711, 0.3278", "311.223, 729.607, 29.0618, 0.3282", "310.151, 729.807, 29.3829, 0.3636", "309.009, 729.826, 29.7268, 0.4904", "307.867, 729.846, 30.0737, 0.428", "306.763, 729.983, 30.4615, 0.3844", "305.679, 730.184, 30.8904, 0.4102", "304.57, 730.134, 31.2785, 0.398", "303.445, 729.936, 31.6137, 0.439", "302.324, 729.716, 31.9096, 0.434", "301.211, 729.454, 32.1566, 0.3616", "300.098, 729.193, 32.3635, 0.3044", "299.022, 729.311, 32.6754, 0.2828", "298.005, 729.579, 33.0733, 0.2896", "297.994, 730.395, 33.4435, 0.3034", "298.575, 731.381, 33.7154, 0.323", "299.155, 732.367, 33.901, 0.3896", "299.787, 733.318, 33.9842, 0.365", "300.412, 734.271, 33.9856, 0.3524", "300.889, 735.307, 33.95, 0.3984", "301.331, 736.355, 33.9326, 0.3748", "301.651, 737.443, 34.004, 0.4014", "302.008, 738.517, 34.1281, 0.3384", "302.509, 739.455, 34.3255, 0.3086", "302.925, 740.337, 34.6696, 0.2902", "302.922, 741.365, 34.7878, 0.3046", "302.697, 742.366, 34.6654, 0.325", "302.825, 743.38, 34.3487, 0.3932", "303.141, 744.466, 34.0861, 0.3716", "303.141, 745.552, 34.0074, 0.3656", "303.208, 746.689, 33.9788, 0.4166", "303.396, 747.817, 34.0108, 0.4396", "303.585, 748.945, 34.0782, 0.3718", "303.545, 750.086, 34.1446, 0.3242", "303.487, 751.229, 34.1832, 0.3142", "303.397, 752.369, 34.2059, 0.3736", "303.231, 753.5, 34.2474, 0.334", "303.086, 754.635, 34.3179, 0.3002", "302.963, 755.772, 34.4229, 0.2752", "302.841, 756.909, 34.5612, 0.2756", "302.454, 757.957, 34.8029, 0.2766", "302.046, 758.998, 35.1235, 0.2782", "301.505, 760.003, 35.4483, 0.2816", "300.988, 761.015, 35.7826, 0.2872", "300.85, 762.115, 36.1012, 0.2992", "300.718, 763.212, 36.3443, 0.3148", "300.418, 764.104, 36.7483, 0.3748", "299.947, 764.837, 37.3526, 0.3362", "299.382, 765.798, 37.9495, 0.3044", "298.926, 766.788, 38.5409, 0.2828", "298.22, 767.462, 38.9278, 0.2898", "297.828, 768.212, 39.116, 0.3038", "297.397, 769.006, 39.417, 0.3234", "297.025, 770.079, 39.669, 0.3908", "296.634, 771.154, 39.879, 0.3656", "296.293, 772.234, 40.1218, 0.3608", "295.963, 773.317, 40.4071, 0.3778", "295.76, 774.391, 40.546, 0.5118", "295.462, 775.442, 40.7271, 0.492", "295.235, 776.245, 41.1547, 0.3846", "294.414, 776.686, 41.5094, 0.2996", "293.559, 777.325, 41.7113, 0.274", "292.943, 778.288, 41.8298, 0.2736", "293.045, 779.248, 41.7805, 0.2728", "292.75, 780.309, 41.7262, 0.2712", "292.275, 781.346, 41.6892, 0.2684", "292.008, 782.458, 41.7318, 0.2626", "291.742, 783.571, 41.8457, 0.2542", "291.693, 784.622, 42.1408, 0.2288", "291.693, 785.658, 43.2538, 0.2288" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "346.185, 698.719, 17.4338, 0.3976", "345.588, 698.979, 17.4419, 0.4284", "344.693, 699.549, 17.3217, 0.4626", "344.63, 700.645, 17.2148, 0.4094", "344.512, 701.723, 17.1084, 0.4182", "344.151, 702.807, 17.0113, 0.3706", "343.717, 703.867, 16.9282, 0.3638", "343.285, 704.925, 16.8738, 0.4132" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "318.15, 672.418, 16.5582, 0.4526", "317.74, 672.726, 17.0312, 0.4588", "316.847, 673.424, 17.5197, 0.4086", "315.864, 673.993, 17.9559, 0.3858", "315.004, 674.73, 18.3282, 0.4612", "314.357, 675.666, 18.6395, 0.4876", "313.477, 676.233, 18.9898, 0.628", "312.35, 676.233, 19.3295, 0.6752", "311.112, 676.58, 20.1641, 0.4618", "310.06, 676.691, 20.4267, 0.358" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "318.15, 672.418, 16.5582, 0.4526", "317.019, 672.661, 16.2456, 0.2288", "315.889, 672.74, 15.6787, 0.3508", "314.799, 672.891, 15.3971, 0.4374", "313.882, 673.468, 15.1106, 0.4726", "313.213, 674.355, 14.7248, 0.4588", "312.912, 675.255, 14.2153, 0.3604", "312.876, 675.231, 13.4118, 0.302", "312.197, 674.487, 12.7708, 0.2782", "311.113, 674.192, 12.4061, 0.2814", "310.185, 674.777, 12.3005, 0.287", "309.497, 675.249, 12.6619, 0.2988", "309.12, 674.576, 13.3666, 0.3144", "308.141, 674.231, 14.0722, 0.374", "307.838, 673.695, 15.0068, 0.3348", "307.409, 672.892, 15.9067, 0.3018", "307.276, 672.285, 16.8025, 0.278", "306.469, 672.663, 17.4566, 0.281", "306.528, 673.702, 17.6628, 0.2866", "306.249, 673.977, 17.3947, 0.2966", "305.574, 673.312, 17.0222, 0.3162", "305.439, 672.269, 16.4757, 0.3476", "304.645, 671.63, 16.0496, 0.43", "303.543, 671.566, 15.6116, 0.4654", "302.483, 671.36, 15.1665, 0.4144", "301.41, 671.042, 14.7521, 0.4288", "300.315, 670.76, 14.3678, 0.384", "299.426, 670.268, 14.1014, 0.4182", "298.321, 670.302, 13.8891, 0.371", "297.344, 670.72, 13.571, 0.3634", "296.36, 670.784, 13.1705, 0.4188", "295.28, 670.543, 12.7364, 0.4126", "294.174, 670.358, 12.308, 0.4732", "293.053, 670.139, 11.9353, 0.4632", "291.96, 670.206, 11.6088, 0.5804", "290.866, 670.104, 11.307, 0.5978", "289.827, 669.73, 11.0852, 0.4568", "288.755, 669.515, 10.7791, 0.3484", "287.642, 669.472, 10.429, 0.3196", "286.6, 669.492, 10.0998, 0.3474", "285.721, 669.756, 9.5716, 0.4604", "284.614, 669.711, 9.1576, 0.3728", "284.153, 669.07, 8.6231, 0.2796", "283.581, 668.853, 6.7561, 0.2288" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "416.585, 466.318, 26.4607, 0.597", "416.897, 466.362, 26.6801, 0.2288", "417.65, 465.864, 26.8528, 0.3274", "418.655, 465.393, 26.916, 0.368", "419.325, 464.713, 26.7901, 0.469", "420.156, 463.952, 26.647, 0.5332", "420.878, 463.079, 26.4838, 0.5616", "421.631, 462.281, 26.3265, 0.597", "421.994, 461.448, 26.0674, 0.5182" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "416.585, 466.318, 26.4607, 0.597", "416.564, 465.218, 26.3473, 0.4872", "416.756, 464.112, 26.3129, 0.479", "417.156, 463.281, 26.4465, 0.4308", "417.228, 462.333, 26.3642, 0.502", "417.521, 461.609, 26.206, 0.5398", "418.049, 460.596, 26.0646, 0.611", "418.467, 459.544, 25.9034, 0.5082", "418.89, 458.499, 25.7974, 0.5428", "419.194, 457.412, 25.6618, 0.4294", "419.306, 456.384, 25.7397, 0.3934", "419.228, 455.57, 25.6197, 0.3958", "418.904, 454.479, 25.5294, 0.5226", "418.705, 453.355, 25.5291, 0.6224", "418.62, 452.243, 25.6375, 0.7778", "418.963, 451.244, 25.8997, 0.7508", "418.956, 450.129, 26.1484, 0.6288", "418.539, 449.074, 26.406, 0.5234", "418.734, 448.296, 26.7174, 0.4288", "418.62, 447.27, 26.8381, 0.4492", "418.62, 446.248, 26.7935, 0.453", "418.634, 445.521, 26.9785, 0.3962", "418.81, 444.696, 27.34, 0.3708", "418.856, 443.675, 27.7431, 0.3948", "419.288, 442.794, 27.8981, 0.5506", "419.133, 442.032, 28.2299, 0.5288", "419.306, 441.102, 28.4043, 0.6236", "419.353, 439.996, 28.4494, 0.6004", "419.535, 438.874, 28.4704, 0.608", "419.69, 437.756, 28.5102, 0.6056", "420.4, 436.905, 28.597, 0.6804", "421.023, 435.985, 28.74, 0.6642", "421.804, 435.254, 29.0046, 0.6982", "422.351, 434.415, 29.2698, 0.6802", "423.242, 433.742, 29.5434, 0.5826", "423.866, 433.033, 29.8623, 0.484", "423.94, 432.092, 30.126, 0.3602", "424.474, 431.48, 30.1524, 0.3016", "424.773, 430.479, 30.1871, 0.2774", "424.595, 429.632, 30.4385, 0.28", "425.187, 428.811, 30.6149, 0.2846", "425.486, 427.826, 30.7003, 0.2932", "425.619, 426.774, 30.7577, 0.3092", "425.715, 425.722, 30.8126, 0.3394", "425.715, 424.588, 30.9064, 0.3912", "425.727, 423.449, 31.0209, 0.508", "425.981, 422.36, 31.1671, 0.6236", "426.313, 421.291, 31.3687, 0.6412", "426.481, 420.18, 31.635, 0.4858", "426.566, 419.071, 31.9189, 0.4238", "426.401, 417.963, 32.1863, 0.356", "426.63, 416.918, 32.6547, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "411.142, 558.382, 30.6132, 0.4162", "411.779, 558.687, 29.8396, 0.4576", "412.75, 559.236, 30.2744, 0.372", "413.772, 559.422, 30.4567, 0.3234", "414.755, 558.933, 30.7003, 0.319", "415.519, 558.132, 30.9562, 0.3526", "416.3, 557.318, 31.1254, 0.4406", "416.86, 556.357, 31.334, 0.4788", "417.628, 555.509, 31.4846, 0.4702", "418.312, 554.938, 31.666, 0.3816", "419.333, 554.424, 31.78, 0.341", "420.308, 553.826, 31.843, 0.3526", "421.346, 553.344, 31.8682, 0.4096", "422.478, 553.302, 31.8091, 0.5714", "423.554, 552.981, 31.7033, 0.5994", "424.663, 552.757, 31.5837, 0.5982", "425.8, 552.629, 31.4776, 0.625", "426.888, 552.477, 31.4608, 0.535", "427.657, 551.941, 31.2841, 0.5882", "428.696, 551.52, 31.0769, 0.5342", "429.792, 551.232, 30.9058, 0.4884", "430.74, 550.79, 30.861, 0.3684", "431.518, 550.346, 30.935, 0.3166", "432.357, 549.947, 30.8216, 0.3066", "433.284, 549.305, 30.7726, 0.3286", "434.354, 548.95, 30.781, 0.4012", "435.437, 548.7, 30.7577, 0.3804", "436.23, 548.148, 30.8, 0.4114", "437.11, 548.086, 30.9753, 0.3582", "438.174, 548.016, 30.9865, 0.34", "439.221, 547.57, 30.9697, 0.3742", "440.246, 547.063, 30.9288, 0.3354", "441.268, 546.551, 30.8694, 0.3028", "442.395, 546.485, 30.7854, 0.28", "443.473, 546.417, 30.6849, 0.2846", "444.445, 545.868, 30.5463, 0.2928", "445.462, 545.434, 30.368, 0.3094", "446.552, 545.103, 30.186, 0.3338", "447.572, 544.609, 29.9754, 0.4108", "448.503, 544.144, 29.6584, 0.399", "449.476, 543.72, 29.4238, 0.4412", "450.458, 543.172, 29.2412, 0.4378", "451.502, 542.797, 29.0634, 0.3686", "452.204, 542.282, 28.8954, 0.3172", "453.121, 541.61, 28.7328, 0.3076", "454.055, 540.95, 28.6163, 0.3302", "454.992, 540.293, 28.5258, 0.4044", "455.891, 539.586, 28.462, 0.3858", "456.784, 538.871, 28.4206, 0.423", "457.748, 538.257, 28.3914, 0.3734", "458.722, 537.657, 28.3643, 0.3988", "459.737, 537.131, 28.3262, 0.3338", "460.761, 536.62, 28.2733, 0.3", "461.772, 536.086, 28.2038, 0.2746", "462.78, 535.545, 28.1173, 0.2746", "463.821, 535.121, 27.9563, 0.2748", "464.876, 534.751, 27.7123, 0.2748", "465.896, 534.254, 27.473, 0.2752", "466.904, 533.714, 27.2611, 0.2758", "467.897, 533.145, 27.0641, 0.2766", "468.882, 532.564, 26.8752, 0.2786", "469.625, 531.748, 26.6437, 0.282", "470.247, 530.816, 26.3487, 0.288", "470.93, 529.906, 26.0429, 0.3006", "471.623, 529.0, 25.7388, 0.3174", "472.529, 528.324, 25.4146, 0.3798", "473.442, 527.66, 25.0795, 0.3454", "474.336, 526.996, 24.7231, 0.3224", "475.175, 526.258, 24.3984, 0.3108", "475.918, 525.388, 24.1644, 0.3672", "476.545, 524.453, 23.9834, 0.322", "477.119, 523.505, 23.7955, 0.2796", "477.943, 522.811, 23.7947, 0.2288", "478.98, 522.398, 23.9036, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "411.142, 558.382, 30.6132, 0.4162", "410.455, 557.528, 30.3346, 0.3688", "409.933, 556.524, 30.0955, 0.3508", "409.717, 555.411, 30.0182, 0.4362", "409.887, 554.308, 30.091, 0.4756", "410.162, 553.227, 30.2854, 0.4406", "410.704, 552.226, 30.4632, 0.4408", "411.291, 551.265, 30.597, 0.5836", "411.825, 550.288, 30.737, 0.6156", "412.214, 549.225, 30.8213, 0.6606", "412.641, 548.17, 30.9078, 0.5836", "412.969, 547.085, 30.9742, 0.5336", "413.143, 545.955, 31.0397, 0.4476", "413.355, 544.83, 31.1046, 0.4852" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "373.912, 752.069, 25.0491, 0.545", "373.752, 752.747, 25.1599, 0.4346", "373.578, 753.856, 25.3829, 0.398", "373.565, 754.984, 25.6553, 0.4294", "373.688, 756.119, 25.8997, 0.4642", "373.751, 757.255, 26.1296, 0.4124", "373.567, 758.326, 26.2245, 0.4242", "373.382, 759.428, 26.314, 0.3806", "373.146, 760.238, 26.548, 0.3884", "372.943, 761.307, 26.7767, 0.4298", "372.353, 761.979, 26.704, 0.6038", "371.886, 762.984, 26.5197, 0.6838", "371.546, 764.06, 26.4093, 0.6372", "371.546, 765.196, 26.2511, 0.582", "371.651, 766.334, 26.1108, 0.5568", "371.539, 767.456, 26.0339, 0.5942", "371.201, 768.545, 26.0432, 0.4822", "370.897, 769.641, 26.071, 0.4698", "370.536, 770.704, 26.0592, 0.4138", "369.985, 771.674, 26.1042, 0.4698", "369.281, 772.503, 26.1999, 0.4854", "368.856, 773.168, 26.5258, 0.4834", "367.956, 773.833, 26.7905, 0.401", "366.94, 774.123, 26.8694, 0.4028", "365.941, 774.618, 26.8952, 0.3412", "365.541, 775.592, 26.8409, 0.3138", "365.748, 776.563, 26.9029, 0.2998", "365.266, 777.214, 27.1457, 0.3224" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "373.912, 752.069, 25.0491, 0.545", "373.054, 752.995, 24.7946, 0.9152", "372.056, 753.521, 25.0349, 0.6296", "371.262, 754.236, 25.2049, 0.5602", "370.477, 755.051, 25.3138, 0.5534", "369.52, 755.649, 25.3301, 0.636", "368.534, 756.152, 25.2116, 0.5556", "367.53, 756.682, 25.0577, 0.626", "366.502, 757.16, 24.9098, 0.606", "365.421, 757.523, 24.7652, 0.6122", "364.459, 758.105, 24.634, 0.6434", "363.774, 758.899, 24.6297, 0.6058", "363.052, 759.671, 24.5078, 0.5402", "362.771, 760.054, 24.3652, 0.6296", "362.24, 761.03, 24.1653, 0.6844", "361.927, 762.115, 23.9406, 0.6382", "361.573, 763.201, 23.7595, 0.5838", "361.254, 764.266, 23.5681, 0.56", "360.713, 765.216, 23.3897, 0.6002", "359.928, 766.022, 23.3436, 0.4944", "359.134, 766.813, 23.444, 0.4862", "358.309, 767.599, 23.5862, 0.474", "357.753, 768.589, 23.7315, 0.4366", "357.296, 769.46, 24.0096, 0.4398", "357.056, 770.548, 24.1827, 0.5508", "356.509, 771.55, 24.3132, 0.705", "355.94, 772.542, 24.4154, 0.7822", "355.497, 773.593, 24.5311, 0.7944", "354.876, 774.535, 24.6927, 0.7674", "354.226, 775.474, 24.8442, 0.7298", "353.283, 775.943, 25.0105, 0.5986", "352.16, 776.125, 25.1873, 0.6546", "351.151, 776.607, 25.3802, 0.6776", "350.537, 777.448, 25.6677, 0.656", "349.833, 778.167, 26.094, 0.4702", "348.849, 778.627, 26.5758, 0.375", "347.785, 779.005, 27.0119, 0.362", "346.795, 779.543, 27.3976, 0.4578", "346.05, 780.391, 27.6552, 0.5118", "345.323, 781.191, 27.9184, 0.5256", "344.446, 781.702, 27.938, 0.5122", "343.438, 782.167, 27.8807, 0.4488", "342.357, 782.539, 27.822, 0.517", "341.42, 783.18, 27.7785, 0.4288", "340.515, 783.878, 27.7635, 0.3922", "339.516, 784.378, 27.8597, 0.3948", "338.502, 784.844, 28.0731, 0.5144" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "343.285, 704.925, 16.8738, 0.4132", "343.516, 705.013, 16.9705, 0.2288", "344.569, 705.413, 16.2111, 0.2748", "345.624, 705.814, 15.8878, 0.275", "346.609, 706.38, 15.534, 0.2752", "347.569, 706.758, 15.0511, 0.2758", "348.189, 707.713, 14.5875, 0.277", "348.896, 708.564, 14.1443, 0.2792", "349.848, 709.199, 13.6691, 0.2828", "349.791, 710.251, 13.004, 0.291", "349.428, 711.295, 12.33, 0.2994", "349.541, 712.221, 11.4951, 0.3474", "349.848, 712.974, 10.4905, 0.2796", "349.848, 713.777, 7.968, 0.2288" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "343.285, 704.925, 16.8738, 0.4132", "343.002, 705.385, 16.8267, 0.433", "342.402, 706.358, 16.7631, 0.3598", "341.888, 707.363, 16.6431, 0.301", "341.488, 708.406, 16.4314, 0.2764", "340.996, 709.421, 16.2068, 0.2778", "340.426, 710.413, 16.0273, 0.2808", "339.744, 711.298, 15.8493, 0.286", "338.944, 712.069, 15.6376, 0.2956", "337.972, 712.617, 15.5252, 0.3144", "336.968, 713.119, 15.5605, 0.3442", "335.984, 713.668, 15.6747, 0.4242", "335.047, 714.326, 15.7867, 0.4532", "334.191, 715.064, 15.8931, 0.3984", "333.533, 716.0, 15.9818, 0.367", "332.964, 716.971, 16.0579, 0.4254", "332.625, 718.039, 16.1762, 0.4246", "332.267, 719.097, 16.2684, 0.4956", "331.866, 720.14, 16.224, 0.5046", "331.295, 721.085, 16.1104, 0.6592", "330.485, 721.894, 15.9968, 0.734", "329.631, 722.637, 15.8634, 0.7566", "328.728, 723.308, 15.7002, 0.6742", "327.906, 724.089, 15.6164, 0.6688", "327.111, 724.906, 15.646, 0.63", "326.297, 725.687, 15.7908, 0.4692", "325.499, 726.472, 16.0259, 0.3728", "324.713, 727.258, 16.3262, 0.3584", "324.007, 728.149, 16.5736, 0.4502", "323.321, 729.064, 16.7321, 0.5028", "322.463, 729.806, 16.8348, 0.4842", "321.587, 730.521, 16.8556, 0.5548", "320.771, 731.278, 16.7214, 0.635", "320.012, 732.11, 16.5246, 0.7998", "319.305, 733.007, 16.3366, 0.799", "318.486, 733.797, 16.1704, 0.6826", "317.651, 734.57, 16.0313, 0.795", "316.965, 735.486, 15.9316, 0.7846", "316.314, 736.422, 15.8683, 0.9116", "315.802, 737.446, 15.8241, 0.8948", "315.277, 738.457, 15.7789, 0.945", "314.646, 739.374, 15.6531, 0.87", "313.954, 740.254, 15.5137, 0.8614", "313.271, 741.086, 15.5286, 0.6702", "312.843, 742.116, 15.6028, 0.709", "312.767, 743.253, 15.6679, 0.702", "312.757, 744.397, 15.7228, 0.8422", "312.329, 745.451, 15.7439, 0.8174", "311.879, 746.5, 15.7276, 0.7802", "311.307, 747.479, 15.6577, 0.668", "310.738, 748.46, 15.5795, 0.671", "310.343, 749.512, 15.6291, 0.5666", "309.909, 750.545, 15.7743, 0.6786", "309.246, 751.472, 15.9571, 0.5472", "308.583, 752.387, 16.0933, 0.5772", "307.92, 753.287, 16.1788, 0.447", "307.265, 754.152, 16.3869, 0.421", "306.675, 755.088, 16.6111, 0.473", "306.163, 756.111, 16.7789, 0.5394", "305.7, 757.155, 16.9102, 0.579", "305.438, 758.256, 16.9934, 0.6006", "305.074, 759.236, 16.9613, 0.6636", "304.361, 760.019, 17.0018, 0.6684" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "310.06, 676.691, 20.4267, 0.358", "308.902, 677.055, 20.5091, 0.3358", "307.815, 677.17, 20.6574, 0.3848", "307.021, 677.565, 21.0351, 0.4948", "306.211, 678.294, 21.428, 0.6058", "305.202, 678.835, 21.7958, 0.5762", "304.179, 679.338, 22.182, 0.5204", "303.138, 679.745, 22.5919, 0.4222", "302.357, 680.261, 23.1665, 0.4416", "301.403, 679.988, 23.8282, 0.4164", "300.323, 680.235, 24.403, 0.4372", "299.654, 680.304, 25.2359, 0.6052", "298.796, 679.91, 26.1855, 0.5176", "298.09, 679.661, 27.276, 0.462", "297.091, 679.439, 28.1686, 0.5264", "295.976, 679.439, 28.8683, 0.52", "294.868, 679.439, 29.5148, 0.4312", "293.814, 679.522, 29.9412, 0.4116", "293.115, 680.074, 30.5318, 0.3586", "292.461, 680.77, 31.215, 0.3404", "291.56, 681.41, 31.8895, 0.3752", "290.547, 681.877, 32.4713, 0.337", "289.456, 682.219, 32.9132, 0.3058", "288.332, 682.404, 33.2872, 0.2854", "287.205, 682.581, 33.5871, 0.2944", "286.102, 682.689, 33.91, 0.3126", "285.011, 682.761, 34.2978, 0.3396", "283.925, 682.985, 34.6769, 0.4218", "282.845, 683.36, 34.9843, 0.4178", "281.758, 683.715, 35.2232, 0.4828", "280.658, 684.03, 35.4049, 0.4812", "279.555, 684.315, 35.5471, 0.6144", "278.417, 684.2, 35.6734, 0.6566", "277.278, 684.087, 35.8075, 0.586", "276.213, 684.242, 36.0741, 0.4904", "275.162, 684.453, 36.4554, 0.3718", "274.05, 684.273, 36.8035, 0.323", "272.93, 684.049, 37.1011, 0.318", "271.804, 684.002, 37.2946, 0.351", "270.675, 684.059, 37.3738, 0.4366", "269.561, 684.252, 37.4752, 0.4774", "268.449, 684.463, 37.6295, 0.4376", "267.542, 684.184, 37.8246, 0.4664", "266.502, 684.214, 37.973, 0.4794", "265.446, 684.509, 38.255, 0.4712", "264.398, 684.826, 38.6316, 0.3844", "263.511, 685.449, 38.9844, 0.3414", "262.621, 686.015, 39.3898, 0.3768", "261.498, 686.05, 39.7177, 0.3402", "260.395, 686.225, 40.0109, 0.3118", "259.327, 686.548, 40.3455, 0.2962", "258.232, 686.804, 40.7134, 0.316", "257.126, 687.012, 41.0962, 0.3458", "255.99, 687.058, 41.4504, 0.433", "254.875, 686.958, 41.8499, 0.441", "253.821, 687.294, 42.2498, 0.5146", "253.022, 687.69, 42.8089, 0.5954", "252.058, 688.244, 43.3087, 0.557", "250.966, 688.499, 43.6892, 0.4836", "249.954, 688.129, 44.1202, 0.3594", "248.955, 687.709, 44.5066, 0.3", "248.026, 688.083, 44.9257, 0.2746", "247.241, 688.681, 45.4143, 0.2746", "246.316, 688.467, 46.0723, 0.2746", "245.26, 688.682, 46.7398, 0.2748", "244.496, 688.299, 47.1752, 0.275", "244.066, 687.674, 47.8204, 0.2754", "243.03, 687.708, 48.4504, 0.2762", "241.95, 687.625, 48.9667, 0.2774", "240.992, 687.363, 49.5765, 0.2798", "239.891, 687.185, 50.1794, 0.2844", "238.818, 687.388, 50.7962, 0.293", "237.887, 687.227, 51.4987, 0.3082", "236.81, 687.296, 52.1293, 0.339", "236.227, 686.605, 52.677, 0.3846", "235.6, 685.913, 53.291, 0.5242", "234.704, 685.269, 53.8336, 0.5162", "233.836, 684.684, 54.4006, 0.4242", "232.709, 684.642, 54.866, 0.3988", "231.587, 684.534, 55.2815, 0.3338", "230.467, 684.496, 55.634, 0.3", "229.345, 684.697, 55.918, 0.2746", "228.226, 684.891, 56.1733, 0.2746", "227.088, 685.011, 56.3606, 0.2746", "225.953, 685.08, 56.5522, 0.2748", "224.896, 684.749, 56.7381, 0.275", "223.862, 684.296, 56.9484, 0.2752", "222.752, 684.184, 57.0954, 0.2758", "221.705, 684.334, 57.1872, 0.2768", "220.876, 684.845, 57.3513, 0.2786", "219.757, 684.642, 57.4988, 0.2822", "218.614, 684.598, 57.6288, 0.2888", "217.493, 684.423, 57.7545, 0.3008", "216.514, 684.531, 58.037, 0.3242", "215.586, 685.099, 58.329, 0.362", "214.653, 684.834, 58.4609, 0.458", "213.642, 684.435, 58.4987, 0.5118", "212.529, 684.279, 58.513, 0.5272", "211.45, 684.029, 58.4172, 0.5078", "210.342, 683.955, 58.2428, 0.4766", "209.213, 683.852, 58.1328, 0.3946", "208.101, 683.741, 58.1605, 0.3602", "206.991, 683.711, 58.3036, 0.411", "205.996, 683.498, 58.576, 0.4068", "205.056, 683.956, 58.6933, 0.4196", "203.983, 684.159, 58.6751, 0.573", "202.938, 684.395, 58.5603, 0.4558", "202.1, 685.071, 58.5088, 0.357", "201.29, 685.718, 58.6782, 0.286", "200.292, 686.104, 58.9537, 0.2954", "199.552, 686.826, 59.3107, 0.3142", "199.096, 687.613, 59.6963, 0.344", "198.116, 688.164, 60.067, 0.4234", "197.436, 688.785, 60.5531, 0.452", "196.662, 689.472, 60.9288, 0.396", "195.914, 690.267, 61.3945, 0.3636", "195.005, 690.865, 61.8898, 0.413", "194.05, 691.35, 62.3991, 0.4328", "194.083, 691.716, 63.0806, 0.3594", "193.435, 691.696, 63.7288, 0.3", "192.552, 692.214, 64.0581, 0.2746", "191.982, 692.992, 64.0144, 0.2746", "191.26, 693.783, 63.7868, 0.2746", "190.797, 694.237, 63.3805, 0.2746", "190.402, 693.213, 62.9334, 0.2748", "189.452, 693.128, 62.5484, 0.275", "188.548, 693.742, 62.2894, 0.2754", "187.478, 693.795, 62.2224, 0.276", "186.455, 693.795, 62.4288, 0.2772", "185.381, 693.926, 62.606, 0.2794", "184.967, 694.644, 62.9706, 0.2838", "184.149, 694.981, 63.2974, 0.2914", "183.484, 694.787, 63.3296, 0.3068", "183.198, 694.892, 63.2271, 0.329", "182.251, 695.243, 62.8978, 0.4008", "181.325, 695.685, 62.4582, 0.3852", "180.34, 695.966, 62.256, 0.392", "179.67, 696.659, 62.333, 0.4604", "179.288, 697.663, 62.545, 0.546", "178.564, 698.358, 62.6223, 0.4464", "177.486, 698.699, 62.7085, 0.3718", "176.472, 699.023, 62.8527, 0.3858", "175.42, 699.428, 62.8281, 0.358", "174.365, 699.839, 62.6979, 0.3394", "173.307, 700.272, 62.5638, 0.3732", "172.309, 700.757, 62.4532, 0.3334", "171.527, 701.404, 62.4056, 0.299", "170.752, 701.82, 62.1158, 0.2728", "169.955, 702.455, 61.677, 0.2712", "169.051, 703.112, 61.196, 0.2684", "168.16, 703.808, 60.7183, 0.2626", "167.272, 704.497, 60.251, 0.2542", "166.387, 705.182, 59.8142, 0.2288", "165.307, 705.536, 59.1895, 0.2288" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "310.06, 676.691, 20.4267, 0.358", "309.572, 676.874, 19.7557, 0.6864", "308.786, 677.19, 17.693, 0.4882", "308.591, 677.526, 16.6952, 0.4092", "308.283, 678.265, 15.586, 0.4212", "307.741, 679.197, 14.6951, 0.5882", "308.137, 680.147, 14.067, 0.6538", "309.104, 680.537, 13.4578, 0.5868", "309.538, 681.238, 12.844, 0.4622", "309.26, 682.25, 12.306, 0.4634", "309.006, 683.291, 11.835, 0.4812", "308.551, 684.285, 11.606, 0.4388", "307.761, 684.921, 11.5849, 0.4984", "307.334, 685.964, 11.5986, 0.3946", "307.779, 686.965, 11.5807, 0.3276", "308.395, 686.909, 11.2632, 0.2796", "309.136, 687.728, 10.9707, 0.2796", "309.796, 688.586, 10.8133, 0.305", "310.467, 688.595, 10.2444, 0.2288" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "421.994, 461.448, 26.0674, 0.5182", "421.449, 461.49, 26.2789, 0.3022", "421.677, 460.803, 26.4966, 0.2786", "421.69, 460.015, 26.6943, 0.2822", "421.906, 459.43, 26.8668, 0.2888", "421.906, 458.63, 27.0128, 0.3006", "421.906, 457.829, 27.1123, 0.3236", "421.868, 457.142, 27.238, 0.3624", "421.677, 456.685, 27.4091, 0.4526", "421.563, 455.998, 27.5687, 0.5316", "421.563, 455.389, 27.7834, 0.4186", "421.563, 454.969, 28.2458, 0.2744", "421.576, 454.638, 28.4066, 0.2744", "421.792, 454.511, 28.518, 0.2742", "422.44, 454.13, 28.5942, 0.274", "422.809, 453.71, 28.6426, 0.2736", "423.038, 453.24, 28.7084, 0.2728", "423.05, 452.91, 28.756, 0.2712", "423.063, 452.579, 28.7921, 0.2684", "423.317, 452.147, 28.8173, 0.2626", "423.508, 451.766, 28.833, 0.2542", "423.508, 451.537, 28.84, 0.2288", "423.508, 451.308, 28.84, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "421.994, 461.448, 26.0674, 0.5182", "422.033, 461.045, 26.32, 0.2288", "422.249, 461.032, 26.3453, 0.2804", "422.859, 460.841, 26.3557, 0.2852", "423.61, 460.791, 26.3704, 0.2954", "424.232, 460.612, 26.3885, 0.3078", "424.766, 460.346, 26.409, 0.3616", "425.147, 460.028, 26.4667, 0.3136", "425.605, 459.697, 26.5179, 0.2542", "425.91, 459.545, 26.6, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "413.355, 544.83, 31.1046, 0.4852", "413.467, 544.441, 29.9788, 0.2288", "413.81, 543.615, 29.2788, 0.455", "414.658, 542.882, 29.0492, 0.5362", "415.111, 541.936, 28.7297, 0.4272", "414.278, 541.273, 28.5009, 0.3412", "414.045, 540.204, 28.2226, 0.3036", "414.378, 539.31, 27.7366, 0.3304", "414.332, 538.655, 27.1159, 0.3678", "414.559, 537.583, 26.5574, 0.4982", "414.961, 536.539, 25.9946, 0.4422", "415.389, 535.501, 25.4516, 0.4118", "415.254, 534.566, 24.9911, 0.4562", "414.747, 533.758, 24.4961, 0.5072", "414.493, 532.646, 24.1001, 0.5248", "413.839, 532.016, 23.6753, 0.4734", "413.174, 530.949, 23.1956, 0.557", "412.668, 529.957, 22.7434, 0.5296", "412.211, 528.978, 22.4932, 0.4502", "412.162, 527.87, 22.2492, 0.4416", "411.982, 526.804, 21.989, 0.4388", "411.775, 526.064, 21.9812, 0.3706", "411.753, 525.174, 22.0889, 0.3206", "411.753, 524.192, 21.9278, 0.314", "411.753, 523.07, 21.6584, 0.3424", "412.184, 522.405, 21.3678, 0.4268", "412.496, 521.96, 20.7554, 0.428", "412.921, 520.936, 20.1834, 0.497", "413.256, 519.847, 19.7063, 0.5308", "413.668, 518.805, 19.2911, 0.5934", "414.099, 517.762, 18.9465, 0.4804", "414.531, 516.742, 18.7381, 0.4668", "415.176, 516.135, 18.7655, 0.4068", "414.841, 515.254, 18.5802, 0.463", "414.14, 514.49, 18.255, 0.4422", "413.879, 513.402, 17.8826, 0.5524", "413.966, 512.31, 17.4303, 0.4916", "414.041, 511.243, 16.8582, 0.5228", "413.917, 510.148, 16.2629, 0.5686", "413.465, 509.157, 15.7225, 0.483", "412.641, 508.396, 15.2781, 0.465", "411.894, 507.83, 14.8569, 0.435", "411.5, 507.047, 14.319, 0.3636", "410.645, 506.617, 13.9049, 0.3078", "409.604, 506.422, 13.7606, 0.2888", "408.497, 506.205, 13.6917, 0.3022", "407.732, 505.48, 13.5487, 0.3206", "406.888, 504.744, 13.461, 0.3854", "406.427, 503.794, 13.5514, 0.356", "405.904, 502.898, 13.5188, 0.3406", "405.173, 502.099, 13.3654, 0.3516", "404.742, 501.147, 13.0825, 0.409", "404.243, 500.129, 12.8202, 0.5644", "404.114, 499.005, 12.5527, 0.615", "403.547, 498.389, 12.0642, 0.4898", "402.555, 498.76, 11.6118, 0.4046", "401.572, 498.767, 11.3881, 0.4488", "400.767, 498.528, 11.1658, 0.4652", "400.815, 497.67, 10.8778, 0.584", "399.827, 497.464, 10.4935, 0.604", "399.057, 496.936, 10.1501, 0.4696", "398.714, 496.078, 9.8549, 0.3672", "398.93, 495.028, 9.4479, 0.3786", "398.49, 494.361, 8.8903, 0.339", "397.792, 493.53, 8.3398, 0.3304", "396.875, 492.888, 7.3192, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "413.355, 544.83, 31.1046, 0.4852", "413.355, 543.862, 31.1741, 0.5138", "413.355, 542.724, 31.2796, 0.537", "413.355, 541.589, 31.4244, 0.4972", "413.355, 540.445, 31.554, 0.5962", "413.189, 539.317, 31.6884, 0.6266", "413.126, 538.183, 31.8391, 0.511", "413.126, 537.049, 32.0065, 0.4462", "413.079, 535.923, 32.1586, 0.5146", "412.897, 534.812, 32.2109, 0.642", "412.897, 533.681, 32.2955, 0.6456", "412.897, 532.539, 32.3509, 0.6382", "412.998, 531.411, 32.3338, 0.6934", "413.126, 530.289, 32.2526, 0.6886", "413.126, 529.146, 32.1675, 0.7432", "413.305, 528.025, 32.0642, 0.764", "413.407, 526.902, 32.0527, 0.736", "413.737, 525.864, 32.123, 0.7788", "413.77, 524.911, 32.177, 0.8558", "413.871, 523.773, 32.2274, 0.7808", "414.012, 522.644, 32.3036, 0.7836", "414.193, 521.532, 32.4243, 0.7868", "414.496, 520.43, 32.5069, 0.8016", "414.709, 519.306, 32.5629, 0.7878", "414.879, 518.175, 32.6046, 0.7318", "414.945, 517.034, 32.6298, 0.777", "415.014, 515.896, 32.6388, 0.8228", "415.186, 514.767, 32.6306, 0.864", "415.186, 513.633, 32.5797, 0.9236", "415.378, 512.523, 32.6071, 0.8866", "415.572, 511.399, 32.6477, 0.8484", "415.644, 510.288, 32.7513, 0.858", "415.644, 509.175, 32.8504, 0.7134", "415.644, 508.042, 32.858, 0.7772", "415.644, 506.904, 32.8163, 0.8862", "415.644, 505.76, 32.7684, 0.9038", "415.644, 504.625, 32.6844, 0.9182", "415.644, 503.494, 32.6276, 0.8032", "415.644, 502.359, 32.6469, 0.82", "415.644, 501.215, 32.6897, 0.8802", "415.804, 500.085, 32.7648, 0.8492", "416.038, 498.967, 32.8616, 0.798", "416.102, 497.841, 32.9073, 0.6724", "416.617, 496.888, 33.0187, 0.8166", "416.792, 495.786, 33.1005, 0.8568", "416.927, 494.65, 33.1621, 0.8896", "417.102, 493.519, 33.206, 0.9238", "417.327, 492.399, 33.2391, 0.8868", "417.669, 491.308, 33.2682, 0.85", "418.009, 490.215, 33.287, 0.855", "418.324, 489.116, 33.3091, 0.7374", "418.383, 487.979, 33.3522, 0.6778", "418.391, 486.84, 33.4264, 0.7134", "418.473, 485.714, 33.5045, 0.756", "418.762, 484.614, 33.5227, 0.72", "419.074, 483.522, 33.528, 0.7554", "419.585, 482.512, 33.5908, 0.7818", "419.956, 481.433, 33.6689, 0.7918", "420.216, 480.319, 33.7364, 0.7702", "420.557, 479.226, 33.7999, 0.6982", "421.02, 478.226, 33.7912, 0.7188", "421.507, 477.336, 33.8926, 0.6944", "421.601, 476.404, 34.1054, 0.7254", "421.824, 475.374, 34.1306, 0.8704", "421.881, 474.241, 34.1972, 0.9434", "421.989, 473.105, 34.2952, 0.8846", "422.144, 471.973, 34.3938, 0.8038", "422.375, 470.854, 34.4672, 0.7454", "422.707, 469.764, 34.5512, 0.6512", "422.868, 468.669, 34.7026, 0.6374", "422.889, 467.695, 34.9675, 0.516", "423.427, 467.062, 34.9311, 0.5284", "423.895, 466.052, 34.8947, 0.5428", "424.192, 465.039, 34.9955, 0.6094", "424.571, 464.016, 34.9731, 0.541", "425.003, 463.14, 34.9415, 0.4294", "425.334, 462.046, 34.9163, 0.3776", "425.76, 460.988, 34.9266, 0.4448", "426.299, 459.997, 34.8886, 0.4626", "427.003, 459.142, 34.8524, 0.5556", "427.338, 458.145, 34.8684, 0.666", "427.722, 457.142, 35.0, 0.7142", "428.067, 456.064, 35.1473, 0.648", "428.446, 454.995, 35.2187, 0.5944", "428.751, 453.913, 35.2836, 0.6166", "428.982, 452.832, 35.4334, 0.526", "429.148, 451.707, 35.5527, 0.5392", "429.148, 450.57, 35.593, 0.6002", "429.333, 449.441, 35.6314, 0.5362", "429.574, 448.326, 35.698, 0.5892", "430.099, 447.326, 35.8025, 0.542", "430.511, 446.258, 35.8828, 0.473", "430.521, 445.128, 35.9041, 0.4836", "430.57, 444.001, 35.9831, 0.5184", "430.752, 442.884, 36.0923, 0.5098", "431.002, 441.767, 36.1984, 0.6204", "431.242, 440.654, 36.3283, 0.6676", "431.44, 439.55, 36.5274, 0.6064", "431.459, 438.406, 36.713, 0.528", "431.657, 437.293, 36.8774, 0.442", "432.048, 436.481, 37.1809, 0.4508", "432.137, 435.341, 37.4338, 0.5658", "432.383, 434.232, 37.6284, 0.7588", "432.636, 433.121, 37.7866, 0.7566", "432.881, 432.022, 37.9604, 0.6706", "433.218, 430.929, 38.0752, 0.4504", "433.505, 429.821, 38.1391, 0.3372", "433.72, 428.711, 38.1886, 0.2964", "433.751, 427.825, 38.0262, 0.3148", "433.267, 426.714, 38.0724, 0.3498", "433.816, 425.925, 38.2155, 0.4106", "434.529, 425.24, 38.3065, 0.5436", "434.644, 424.212, 38.5521, 0.6918", "434.764, 423.075, 38.7772, 0.7572", "435.013, 421.969, 39.0214, 0.7518", "435.354, 420.881, 39.2322, 0.6702", "435.728, 419.808, 39.4405, 0.6366", "436.139, 418.751, 39.5926, 0.6904", "436.477, 417.673, 39.7359, 0.683", "436.66, 416.55, 39.8692, 0.7328", "436.855, 415.423, 39.9725, 0.745", "437.115, 414.317, 40.0784, 0.6994", "437.411, 413.231, 40.1845, 0.7164", "437.608, 412.126, 40.248, 0.7136", "437.793, 411.053, 40.3035, 0.6454", "438.141, 409.981, 40.357, 0.5968", "438.37, 409.062, 40.5028, 0.5852", "438.532, 407.962, 40.6532, 0.6418", "438.629, 406.877, 40.8573, 0.5958", "439.121, 405.878, 41.0035, 0.5564", "439.218, 404.762, 41.0494, 0.4908", "439.218, 403.625, 41.0214, 0.5604", "439.367, 402.497, 40.9531, 0.6762", "439.332, 401.383, 40.9368, 0.7268", "439.232, 400.263, 40.9332, 0.702", "439.225, 399.132, 40.9346, 0.5452", "439.273, 398.002, 41.0166, 0.5636", "439.461, 396.874, 41.1006, 0.4702", "439.873, 395.808, 41.1807, 0.4584", "440.322, 394.755, 41.2544, 0.5692", "440.818, 393.735, 41.3734, 0.588", "441.388, 392.755, 41.4882, 0.6134", "441.663, 391.646, 41.6052, 0.477", "441.373, 390.659, 41.7441, 0.429", "441.03, 389.622, 41.8835, 0.4888", "440.973, 388.487, 41.965, 0.5638", "441.196, 387.425, 41.9454, 0.6492", "441.676, 386.473, 42.0339, 0.6096", "442.289, 385.513, 42.1641, 0.5824", "442.852, 384.533, 42.3399, 0.5352", "443.343, 383.524, 42.5706, 0.6624", "443.83, 382.5, 42.7932, 0.7706", "444.313, 381.462, 42.9601, 0.6746", "444.595, 380.383, 43.0394, 0.5648", "444.617, 379.25, 43.0287, 0.488", "444.65, 378.118, 42.9657, 0.4158", "444.883, 377.03, 43.0136, 0.4", "445.139, 375.946, 43.1418, 0.4822", "445.61, 374.908, 43.2146, 0.5518", "445.895, 373.821, 43.26, 0.6256", "445.973, 372.68, 43.2986, 0.572", "446.049, 371.539, 43.3233, 0.4816", "446.327, 370.432, 43.3303, 0.5006", "446.642, 369.332, 43.3406, 0.5448", "446.808, 368.208, 43.3712, 0.583", "446.865, 367.065, 43.4157, 0.6376", "446.921, 365.922, 43.472, 0.588", "446.945, 364.785, 43.5778, 0.542", "446.964, 363.648, 43.722, 0.4634", "447.134, 362.537, 43.8822, 0.514", "447.524, 361.464, 44.0353, 0.5694", "447.908, 360.388, 44.165, 0.6294", "448.276, 359.305, 44.2473, 0.7194", "448.643, 358.221, 44.287, 0.7608", "448.983, 357.129, 44.2988, 0.7596", "449.324, 356.037, 44.2966, 0.6786", "449.56, 354.939, 44.2235, 0.6828", "449.781, 353.838, 44.1031, 0.6268", "450.144, 352.783, 44.0933, 0.6036", "450.545, 351.74, 44.2072, 0.6274", "450.949, 350.673, 44.3414, 0.5756", "451.353, 349.603, 44.4766, 0.4878", "451.815, 348.651, 44.7264, 0.5134", "451.964, 347.576, 44.8577, 0.5618", "451.984, 346.487, 44.9728, 0.6466", "452.024, 345.37, 44.9506, 0.5996", "452.325, 344.284, 44.8969, 0.588", "452.702, 343.229, 44.8988, 0.4288", "452.696, 342.267, 45.0391, 0.3444", "452.47, 341.445, 45.2091, 0.3098", "452.793, 340.957, 44.9842, 0.3404", "453.18, 339.935, 44.763, 0.3934", "453.18, 338.792, 44.5796, 0.5108", "453.275, 337.689, 44.413, 0.6356", "453.668, 336.918, 44.5449, 0.6322", "453.867, 335.799, 44.7166, 0.6196", "454.099, 334.694, 44.9282, 0.6284", "454.407, 333.597, 45.1181, 0.7164", "454.65, 332.51, 45.2427, 0.7616", "455.011, 331.546, 45.4398, 0.7314", "455.055, 330.436, 45.6739, 0.7704", "455.258, 329.33, 45.9586, 0.8388", "455.378, 328.192, 46.2076, 0.7558", "455.455, 327.095, 46.5254, 0.7064", "455.285, 325.983, 46.8224, 0.7936", "454.996, 324.878, 47.0389, 0.774", "454.663, 323.783, 47.1834, 0.7026", "454.413, 322.679, 47.2976, 0.5118", "454.23, 321.561, 47.39, 0.4402", "453.984, 320.446, 47.4085, 0.5392", "453.785, 319.349, 47.3362, 0.514", "453.52, 318.286, 47.1747, 0.5642", "453.32, 317.224, 46.9664, 0.646", "453.2, 316.109, 46.8401, 0.6232", "453.635, 315.096, 46.8409, 0.7418", "454.096, 314.158, 46.9246, 0.8666", "454.239, 313.075, 47.115, 0.8734", "454.908, 312.208, 47.2718, 0.8312", "455.498, 311.253, 47.3774, 0.7908", "455.965, 310.234, 47.3735, 0.7618", "456.329, 309.168, 47.4015, 0.7134", "456.724, 308.105, 47.418, 0.597", "457.224, 307.082, 47.4872, 0.5106", "457.532, 305.824, 47.6641, 0.4102", "457.8, 304.726, 47.9105, 0.3896", "458.069, 303.628, 48.2009, 0.4632", "458.339, 302.53, 48.503, 0.5156", "458.822, 301.492, 48.748, 0.5638", "459.304, 300.454, 48.9409, 0.431", "459.786, 299.418, 49.0946, 0.3496", "460.269, 298.38, 49.2257, 0.3142", "460.688, 297.339, 49.4122, 0.3736", "461.088, 296.297, 49.6566, 0.3342", "461.489, 295.255, 49.9372, 0.3006", "461.889, 294.213, 50.2289, 0.2758", "462.353, 293.199, 50.3418, 0.2768", "462.819, 292.186, 50.3154, 0.2786", "463.285, 291.172, 50.195, 0.282", "463.717, 290.146, 50.0772, 0.2886", "464.055, 289.081, 50.125, 0.3002", "464.393, 288.015, 50.323, 0.3242", "464.731, 286.948, 50.652, 0.3562", "465.008, 285.864, 51.0518, 0.477", "465.165, 284.739, 51.4576, 0.402", "465.322, 283.615, 51.84, 0.3416", "465.48, 282.49, 52.1825, 0.3056", "465.638, 281.366, 52.4919, 0.3268", "466.031, 280.302, 52.757, 0.398", "466.481, 279.253, 52.9855, 0.374", "466.931, 278.204, 53.1874, 0.4", "467.38, 277.155, 53.3688, 0.3358", "467.693, 276.059, 53.5184, 0.3036", "467.956, 274.945, 53.6441, 0.2814", "468.218, 273.831, 53.7639, 0.2874", "468.48, 272.718, 53.8866, 0.298", "468.737, 271.607, 54.0243, 0.3192", "468.939, 270.526, 54.2783, 0.3528", "469.142, 269.445, 54.6126, 0.4408", "469.347, 268.362, 54.9839, 0.4792", "469.581, 267.246, 55.2272, 0.471", "469.817, 266.131, 55.3622, 0.384", "470.051, 265.014, 55.4089, 0.3406", "470.032, 263.893, 55.4204, 0.3754", "469.834, 262.769, 55.4442, 0.3376", "469.636, 261.644, 55.4935, 0.3068", "469.437, 260.52, 55.5769, 0.2872", "469.239, 259.395, 55.6794, 0.299", "469.391, 258.264, 55.7634, 0.3146", "469.556, 257.131, 55.8247, 0.3744", "469.721, 256.0, 55.8662, 0.3356", "469.886, 254.867, 55.8956, 0.303", "470.047, 253.735, 55.9202, 0.2802", "470.065, 252.591, 55.9479, 0.285", "470.085, 251.448, 55.9871, 0.2938", "470.103, 250.304, 56.0423, 0.31", "470.121, 249.16, 56.1173, 0.3422", "470.14, 248.016, 56.2148, 0.3902", "470.257, 246.891, 56.3699, 0.536", "470.474, 245.786, 56.604, 0.5316", "470.69, 244.68, 56.891, 0.4838", "470.906, 243.575, 57.2074, 0.3596", "471.065, 242.459, 57.5145, 0.3006", "471.065, 241.315, 57.7522, 0.2756", "471.065, 240.171, 57.9256, 0.2766", "471.065, 239.027, 58.0457, 0.2782", "471.065, 237.883, 58.13, 0.2814", "471.065, 236.739, 58.1946, 0.2872", "471.205, 235.607, 58.2506, 0.2978", "471.393, 234.479, 58.3114, 0.3186", "471.581, 233.351, 58.3822, 0.352", "471.77, 232.222, 58.4693, 0.4394", "471.957, 231.094, 58.5763, 0.4766", "471.981, 229.966, 58.7633, 0.4662", "471.981, 228.839, 59.0176, 0.3738", "471.981, 227.712, 59.3138, 0.328", "471.981, 226.584, 59.6274, 0.3214", "471.981, 225.457, 59.936, 0.3866", "472.241, 224.343, 60.151, 0.3596", "472.504, 223.23, 60.277, 0.3424", "472.766, 222.116, 60.3305, 0.3786", "473.028, 221.003, 60.3302, 0.3436", "473.262, 219.887, 60.2784, 0.318", "473.44, 218.768, 60.1658, 0.3074", "473.617, 217.649, 60.0309, 0.3376", "473.796, 216.531, 59.8976, 0.3818", "473.977, 215.413, 59.8248, 0.5194", "474.163, 214.296, 59.8948, 0.5056", "474.349, 213.18, 60.0852, 0.411", "474.535, 212.064, 60.3691, 0.3436", "474.721, 210.948, 60.7135, 0.381", "475.104, 209.893, 61.1016, 0.3476", "475.499, 208.842, 61.4989, 0.3264", "475.893, 207.79, 61.8783, 0.3184", "476.269, 206.732, 62.2244, 0.3814", "476.411, 205.597, 62.4585, 0.3484", "476.553, 204.462, 62.5979, 0.328", "476.564, 203.318, 62.6578, 0.3214", "476.564, 202.174, 62.6548, 0.3866", "476.665, 201.04, 62.6044, 0.3596", "476.862, 199.913, 62.5232, 0.3422", "477.031, 198.792, 62.3921, 0.3784", "477.166, 197.68, 62.1844, 0.3432", "477.302, 196.567, 61.9357, 0.317" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "365.266, 777.214, 27.1457, 0.3224", "364.819, 777.491, 28.0591, 0.2288", "363.851, 778.094, 28.2551, 0.2852", "362.872, 778.679, 28.3461, 0.2942", "361.81, 779.104, 28.4276, 0.3118", "360.748, 779.529, 28.5004, 0.3394", "359.643, 779.825, 28.5636, 0.415", "358.537, 780.112, 28.6194, 0.4364", "357.528, 780.594, 28.721, 0.3662", "356.573, 781.183, 28.8842, 0.3124", "355.617, 781.765, 28.954, 0.2988", "354.673, 782.362, 28.9394, 0.3142", "353.898, 783.167, 29.0231, 0.3738", "353.073, 783.916, 29.1189, 0.3344", "352.162, 784.57, 29.1206, 0.301", "351.293, 785.283, 29.1533, 0.2766", "350.452, 786.04, 29.2902, 0.2782", "349.68, 786.875, 29.4745, 0.2814", "348.928, 787.734, 29.6738, 0.287", "348.147, 788.529, 29.9496, 0.2988", "347.372, 789.333, 30.2758, 0.3142", "346.685, 790.248, 30.5334, 0.3738", "345.995, 791.159, 30.7283, 0.3344", "345.281, 792.053, 30.8756, 0.301", "344.538, 792.909, 31.0013, 0.2766", "343.597, 793.506, 31.1923, 0.2782", "342.664, 794.13, 31.3995, 0.2814", "341.844, 794.831, 31.4703, 0.287", "341.196, 795.74, 31.5182, 0.2988", "340.903, 796.766, 31.7226, 0.3142", "340.4, 797.79, 31.9206, 0.3734", "339.858, 798.798, 32.1051, 0.3338", "339.346, 799.807, 32.3411, 0.3", "338.854, 800.816, 32.6614, 0.2746", "338.463, 801.881, 32.9795, 0.2746", "338.115, 802.971, 33.2685, 0.2746", "337.82, 804.066, 33.5891, 0.2746", "337.575, 805.166, 33.9674, 0.2746", "337.234, 806.225, 34.3983, 0.2746", "336.761, 807.227, 34.8874, 0.2746", "336.382, 808.286, 35.3674, 0.2746", "336.108, 809.357, 35.8806, 0.2746", "335.532, 810.297, 36.4073, 0.2746", "334.681, 811.047, 36.8749, 0.2746", "333.828, 811.697, 37.4189, 0.2746", "333.007, 812.366, 38.0318, 0.2746", "331.909, 813.124, 38.565, 0.2746", "330.907, 813.676, 39.0172, 0.2746", "330.018, 814.352, 39.4652, 0.2746", "329.202, 815.109, 39.9459, 0.2746", "328.395, 815.884, 40.4326, 0.2746", "327.583, 816.655, 40.931, 0.2746", "326.723, 817.372, 41.4501, 0.2746", "325.913, 818.146, 41.9619, 0.2746", "325.207, 819.04, 42.4315, 0.2746", "324.576, 819.978, 42.8862, 0.2746", "324.035, 820.969, 43.3577, 0.2746", "323.507, 821.979, 43.8178, 0.2746", "322.999, 822.995, 44.289, 0.2746", "322.634, 824.004, 44.9075, 0.2746", "322.136, 824.921, 45.6445, 0.2746", "321.298, 825.61, 46.4621, 0.2746", "320.392, 826.1, 47.3662, 0.2746", "319.439, 826.446, 48.3437, 0.2746", "318.485, 826.849, 49.3178, 0.2746", "317.497, 826.606, 50.2701, 0.2746", "316.595, 826.739, 51.1428, 0.2746", "316.205, 827.753, 51.8549, 0.2746", "315.963, 828.859, 52.395, 0.2746", "315.963, 829.943, 52.885, 0.2746", "315.963, 830.991, 53.3523, 0.2744", "315.965, 832.069, 53.7446, 0.2744", "316.165, 833.167, 53.9641, 0.2742", "316.906, 833.742, 53.8079, 0.274", "317.147, 834.634, 53.37, 0.2736", "317.294, 835.721, 52.7772, 0.2728", "317.713, 836.62, 52.0416, 0.2712", "318.235, 837.459, 51.2414, 0.2684", "318.759, 838.451, 50.5798, 0.2626", "319.272, 839.447, 50.1108, 0.2542", "319.748, 840.455, 49.9271, 0.2288", "320.083, 841.515, 50.0836, 0.2288" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "365.266, 777.214, 27.1457, 0.3224", "365.156, 777.515, 27.3248, 0.3588", "364.92, 778.596, 27.4543, 0.452", "364.389, 779.522, 27.5791, 0.4996", "364.16, 780.626, 27.6216, 0.5096", "363.892, 781.638, 27.6112, 0.4516", "363.825, 782.305, 27.5688, 0.486", "363.713, 783.443, 27.5288, 0.5464", "363.601, 784.58, 27.4915, 0.447", "363.585, 785.723, 27.4737, 0.373", "363.585, 786.867, 27.4798, 0.388", "363.564, 788.009, 27.5035, 0.362", "363.362, 789.128, 27.5738, 0.347", "363.153, 790.244, 27.6646, 0.387", "362.888, 791.347, 27.6777, 0.36", "362.624, 792.451, 27.6334, 0.3432", "362.311, 793.552, 27.6043, 0.3802", "361.997, 794.651, 27.5953, 0.3464", "362.008, 795.774, 27.6261, 0.323", "362.149, 796.908, 27.7037, 0.3182", "362.53, 797.954, 27.8404, 0.351", "363.1, 798.932, 28.0238, 0.4376", "363.69, 799.908, 28.1854, 0.4732", "364.29, 800.881, 28.3032, 0.4598", "364.749, 801.923, 28.3746, 0.3624", "365.118, 803.005, 28.406, 0.3058", "365.239, 804.142, 28.4267, 0.2854", "365.362, 805.279, 28.4449, 0.2946", "365.418, 806.419, 28.4668, 0.3126", "365.418, 807.563, 28.4917, 0.3408", "365.366, 808.698, 28.5222, 0.4178", "364.897, 809.72, 28.56, 0.4416", "363.996, 810.406, 28.6051, 0.3754", "363.348, 811.296, 28.6644, 0.331", "362.827, 812.314, 28.7384, 0.3268", "362.519, 813.394, 28.8683, 0.398", "362.301, 814.5, 29.0562, 0.3742", "362.02, 815.6, 29.2306, 0.4002", "361.74, 816.644, 29.2636, 0.3364", "361.306, 817.673, 29.3356, 0.3046", "360.662, 818.545, 29.5154, 0.283", "359.948, 819.436, 29.6778, 0.2902", "359.262, 820.351, 29.8337, 0.3046", "358.601, 821.262, 30.0558, 0.325", "357.946, 822.172, 30.3391, 0.3934", "357.798, 823.288, 30.6239, 0.3716", "357.655, 824.406, 30.8952, 0.3658", "357.633, 825.538, 31.0551, 0.417", "357.633, 826.672, 31.1069, 0.4402", "357.713, 827.804, 31.101, 0.3732", "357.902, 828.932, 31.0948, 0.3256", "358.089, 830.06, 31.1052, 0.323", "358.09, 831.188, 31.2091, 0.3598", "358.09, 832.316, 31.3939, 0.4538", "358.012, 833.449, 31.5921, 0.5044", "357.755, 834.557, 31.7573, 0.5126", "357.231, 835.563, 31.8853, 0.4852", "356.355, 836.259, 31.976, 0.4116", "355.41, 836.841, 32.067, 0.3864", "354.304, 837.057, 32.1916, 0.4858", "353.195, 837.231, 32.3198, 0.4194", "352.076, 837.156, 32.3187, 0.3686", "350.956, 837.099, 32.2297, 0.3802", "349.817, 837.209, 32.1544, 0.3466", "348.679, 837.319, 32.0933, 0.3232", "347.585, 837.635, 32.0575, 0.3186", "346.505, 838.011, 32.0538, 0.3516", "345.528, 838.555, 32.1252, 0.4388", "344.619, 839.21, 32.263, 0.4756", "343.788, 839.972, 32.3109, 0.4642", "342.974, 840.756, 32.2585, 0.3704", "342.066, 841.45, 32.1594, 0.3204", "341.171, 842.156, 32.0314, 0.3132", "340.374, 842.977, 31.9127, 0.3422", "339.591, 843.806, 31.8063, 0.42", "338.894, 844.699, 31.6753, 0.446", "338.207, 845.597, 31.5652, 0.3836", "337.542, 846.514, 31.5515, 0.346", "337.017, 847.519, 31.5529, 0.3558", "336.556, 848.564, 31.535, 0.445", "336.106, 849.613, 31.5493, 0.494", "335.655, 850.662, 31.5815, 0.4634", "335.047, 851.63, 31.5781, 0.539", "334.436, 852.597, 31.5395, 0.4952", "333.959, 853.521, 31.3958, 0.3906", "333.363, 854.436, 31.2771, 0.3108", "333.414, 854.909, 31.1284, 0.2944", "333.504, 855.987, 31.1181, 0.3124", "333.6, 856.998, 31.0391, 0.3392", "333.125, 858.015, 30.947, 0.421", "332.822, 859.109, 30.8916, 0.4176", "332.379, 860.152, 30.8935, 0.4766", "331.961, 861.203, 30.9089, 0.4978", "331.629, 862.284, 30.8392, 0.5078", "331.206, 863.294, 30.6928, 0.4406", "330.583, 864.207, 30.4903, 0.5018", "329.999, 865.188, 30.347, 0.401", "329.7, 866.23, 30.3638, 0.3396", "329.528, 867.246, 30.5166, 0.302", "329.236, 868.351, 30.6676, 0.3202", "328.802, 869.407, 30.8126, 0.3846" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "338.502, 784.844, 28.0731, 0.5144", "338.196, 785.454, 28.2615, 0.637", "337.696, 786.484, 28.4175, 0.6598", "337.214, 787.52, 28.5429, 0.5502", "336.683, 788.525, 28.6608, 0.3984", "336.036, 789.449, 28.8151, 0.3252", "335.438, 790.408, 28.9218, 0.3222", "334.867, 791.386, 28.961, 0.359", "334.208, 792.292, 29.0615, 0.4508", "333.522, 793.177, 29.2387, 0.505", "333.086, 794.235, 29.3947, 0.4836", "332.654, 795.294, 29.5338, 0.5776", "332.228, 796.356, 29.6646, 0.5612", "331.802, 797.417, 29.7898, 0.5406", "331.252, 798.416, 29.9068, 0.4544", "330.653, 799.391, 30.032, 0.5284", "329.715, 799.923, 30.1974, 0.445", "329.081, 800.693, 30.5186, 0.4466", "328.783, 801.787, 30.8445, 0.3764", "328.774, 802.888, 31.2438, 0.3746", "328.508, 803.954, 31.6562, 0.4328", "328.041, 804.969, 32.0552, 0.4706", "327.75, 806.052, 32.3431, 0.4252", "327.563, 807.177, 32.4862, 0.4424" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "338.502, 784.844, 28.0731, 0.5144", "337.117, 785.294, 27.7684, 0.2288", "336.04, 785.602, 27.8103, 0.3734", "334.944, 785.848, 27.886, 0.334", "333.832, 785.893, 27.9502, 0.3", "332.704, 785.76, 27.9443, 0.2748", "331.576, 785.7, 27.8965, 0.275", "330.448, 785.88, 27.8459, 0.2752", "329.32, 786.061, 27.8073, 0.276", "328.246, 785.679, 27.8147, 0.277", "327.173, 785.282, 27.8853, 0.2792", "326.077, 785.041, 28.0834, 0.2832", "324.974, 784.84, 28.3923, 0.2906", "323.864, 784.891, 28.7753, 0.3038", "322.752, 785.021, 29.1995, 0.3312", "321.64, 784.916, 29.6282, 0.3686", "320.529, 784.75, 30.0387, 0.5012", "319.405, 784.585, 30.3632, 0.4416", "318.272, 784.42, 30.5841, 0.4404", "317.143, 784.249, 30.73, 0.3648", "316.028, 784.039, 30.8574, 0.352", "314.913, 783.83, 30.9677, 0.3976", "313.89, 783.325, 30.9848, 0.3734", "312.851, 782.872, 30.931, 0.3988", "311.736, 782.662, 30.8098, 0.334", "310.62, 782.453, 30.6382, 0.3" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "304.361, 760.019, 17.0018, 0.6684", "303.573, 760.631, 17.1725, 0.536", "302.611, 761.244, 17.3491, 0.5172", "301.668, 761.889, 17.4999, 0.5274", "300.754, 762.569, 17.6112, 0.556", "300.005, 763.412, 17.6292, 0.562", "299.36, 764.335, 17.6121, 0.5728", "298.819, 765.341, 17.6294, 0.5938", "298.135, 766.231, 17.7117, 0.6274", "297.32, 767.016, 17.8625, 0.7158", "296.435, 767.732, 18.0176, 0.7542", "295.519, 768.417, 18.1521, 0.7476", "294.644, 769.15, 18.2787, 0.6564", "293.785, 769.901, 18.3986, 0.6406", "292.917, 770.64, 18.4613, 0.5532", "292.132, 771.448, 18.485, 0.4454", "291.458, 772.361, 18.5235, 0.439", "290.67, 773.103, 18.6761, 0.403", "289.639, 773.407, 18.7414, 0.4534", "288.651, 773.901, 18.9042, 0.4366", "288.494, 775.01, 18.9722, 0.4818", "288.885, 776.022, 18.9871, 0.6542", "288.584, 777.031, 19.0924, 0.7726", "287.805, 777.869, 19.1584, 0.8246", "287.009, 778.69, 19.205, 0.819", "286.094, 779.376, 19.2213, 0.846", "285.179, 780.063, 19.224, 0.7148", "284.492, 780.978, 19.2003, 0.6646", "283.806, 781.893, 19.1439, 0.5492" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "304.361, 760.019, 17.0018, 0.6684", "304.749, 760.685, 16.0054, 0.2288", "305.291, 761.612, 15.0038, 0.6338", "305.85, 762.564, 14.5795, 0.7636", "306.416, 763.525, 14.121, 0.6678", "306.856, 764.55, 13.6633, 0.522", "307.272, 765.586, 13.2382, 0.5534", "307.436, 766.718, 12.9436, 0.5216", "307.601, 767.851, 12.7644, 0.4418", "307.499, 768.956, 12.7049, 0.395", "307.215, 770.044, 12.7493, 0.503", "307.034, 771.156, 12.7643, 0.4448", "306.914, 772.28, 12.6867, 0.4464", "306.943, 773.406, 12.539, 0.3762", "307.12, 774.533, 12.3543, 0.3728", "307.181, 775.632, 12.1243, 0.4372", "306.894, 776.688, 11.85, 0.4414", "306.82, 777.825, 11.6497, 0.5524", "306.943, 778.951, 11.5156, 0.4842", "307.436, 779.979, 11.4313, 0.5448", "307.785, 781.053, 11.3834, 0.4344", "308.021, 782.172, 11.362, 0.3976", "308.17, 783.3, 11.3537, 0.4288", "308.145, 784.443, 11.3424, 0.4618", "308.189, 785.581, 11.327, 0.414", "308.401, 786.706, 11.3039, 0.3968", "308.614, 787.829, 11.2708, 0.4764", "308.783, 788.961, 11.2272, 0.5398", "308.948, 790.093, 11.173, 0.6098", "309.176, 791.211, 11.1083, 0.5122", "309.552, 792.17, 10.9082, 0.5196", "309.78, 792.712, 10.7478, 0.5332", "310.226, 793.766, 10.6281, 0.5606", "310.691, 794.804, 10.5189, 0.6", "311.162, 795.837, 10.4107, 0.5", "311.359, 796.947, 10.3427, 0.468", "311.317, 798.086, 10.3114, 0.5792", "311.072, 799.195, 10.2923, 0.6434", "311.126, 800.309, 10.2862, 0.5368", "311.32, 801.436, 10.295, 0.5186", "311.601, 802.54, 10.3149, 0.5302", "311.996, 803.613, 10.3398, 0.5598", "312.347, 804.699, 10.3772, 0.576", "312.544, 805.823, 10.4444, 0.564", "312.743, 806.948, 10.5335, 0.7464", "313.085, 808.037, 10.5946, 0.778", "313.44, 809.119, 10.649, 0.7232", "313.803, 810.18, 10.7736, 0.7136", "313.971, 811.269, 10.9069, 0.7084", "313.822, 812.402, 10.9828, 0.6358", "313.672, 813.536, 11.0134, 0.5782", "313.81, 814.657, 10.9537, 0.5556", "313.947, 815.777, 10.8285, 0.562", "314.375, 816.821, 10.7335, 0.568", "314.885, 817.841, 10.694, 0.6088", "315.248, 818.914, 10.7163, 0.5404", "315.569, 820.002, 10.7773, 0.4266", "315.813, 821.08, 10.8865, 0.3808", "315.963, 822.138, 10.9345, 0.4096", "316.162, 823.035, 10.7049, 0.596", "317.102, 823.426, 10.2938, 0.5254", "317.546, 824.373, 9.8633, 0.356", "317.794, 825.49, 9.1062, 0.2288" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "477.302, 196.567, 61.9357, 0.317", "477.267, 195.855, 61.8646, 0.2288", "477.211, 194.741, 62.3683, 0.2902", "477.135, 193.607, 62.5775, 0.3046", "477.056, 192.469, 62.7931, 0.3248", "476.917, 191.342, 62.9412, 0.3932", "476.636, 190.238, 63.1002, 0.3716", "476.332, 189.137, 63.2808, 0.3644", "475.961, 188.076, 63.5191, 0.4206", "475.56, 187.034, 63.8294, 0.417", "475.307, 185.934, 64.1656, 0.475", "475.098, 184.818, 64.5098, 0.4966", "474.868, 183.701, 64.8147, 0.498", "474.622, 182.585, 65.0647, 0.4586", "474.512, 181.47, 65.2971, 0.3602", "474.705, 180.364, 65.5746, 0.3016", "474.86, 179.251, 65.8764, 0.2774", "474.921, 178.112, 66.1346, 0.28", "475.469, 177.236, 66.4723, 0.2846", "475.26, 176.115, 66.7696, 0.2928", "475.05, 174.992, 67.0253, 0.3096", "474.881, 173.871, 67.2462, 0.3342", "475.101, 172.771, 67.4926, 0.4114", "475.316, 171.67, 67.7494, 0.4", "475.259, 170.528, 67.9224, 0.443", "475.203, 169.385, 68.0428, 0.4412", "475.103, 168.296, 68.0588, 0.3748", "475.724, 167.507, 67.9764, 0.3298", "475.768, 166.364, 67.9342, 0.3246", "475.729, 165.263, 68.0453, 0.3928", "475.205, 164.292, 68.273, 0.3706", "474.698, 163.28, 68.553, 0.3638", "474.205, 162.255, 68.8495, 0.4132", "473.725, 161.219, 69.123, 0.4332", "473.418, 160.134, 69.3417, 0.3602", "473.284, 158.998, 69.4988, 0.3016", "473.25, 157.87, 69.6234, 0.2776", "473.57, 156.771, 69.7421, 0.2802", "473.891, 155.673, 69.8681, 0.285", "474.413, 154.68, 70.0784, 0.2938", "474.935, 153.684, 70.3413, 0.3112", "475.429, 152.653, 70.5704, 0.3382", "475.741, 151.572, 70.7848, 0.413", "475.655, 150.482, 71.0438, 0.4328", "475.697, 149.451, 71.3149, 0.3594", "475.863, 148.328, 71.5042, 0.3", "475.972, 147.189, 71.6349, 0.2746", "476.08, 146.052, 71.7307, 0.2746", "476.194, 145.711, 71.8609, 0.2746", "476.539, 144.678, 72.098, 0.2746" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "477.302, 196.567, 61.9357, 0.317", "477.874, 195.653, 61.6784, 0.3074", "478.155, 194.577, 61.4956, 0.3298", "478.289, 193.441, 61.4214, 0.4036", "478.516, 192.352, 61.5009, 0.3846", "478.884, 191.336, 61.7806, 0.4192", "479.443, 190.367, 62.1205, 0.373", "480.081, 189.43, 62.4666, 0.3666", "480.776, 188.561, 62.8345, 0.4258", "481.554, 187.754, 63.149, 0.4206", "482.436, 187.027, 63.3506, 0.5116", "483.332, 186.335, 63.4365, 0.42", "484.243, 185.682, 63.4217, 0.3698", "485.269, 185.217, 63.4068, 0.3824", "486.306, 184.74, 63.4351, 0.3508", "487.261, 184.472, 63.6961, 0.3308", "487.939, 183.73, 64.1057, 0.334", "488.654, 182.836, 64.4633, 0.374", "489.221, 181.848, 64.7671, 0.5112", "489.446, 180.727, 65.0115, 0.46", "489.513, 179.59, 65.2056, 0.4754", "489.52, 178.447, 65.3688, 0.4256", "489.585, 177.323, 65.5984, 0.485", "489.652, 176.199, 65.8958, 0.5444", "489.925, 175.098, 66.1954, 0.4434", "489.971, 174.101, 66.6378, 0.3662", "489.628, 173.12, 67.0513, 0.3758", "489.751, 172.06, 67.27, 0.3382", "490.123, 170.979, 67.408, 0.308", "490.224, 169.916, 67.5469, 0.289", "490.33, 168.785, 67.6984, 0.3024", "490.503, 167.66, 67.8224, 0.3212", "490.726, 166.54, 67.9235, 0.3862", "491.068, 165.461, 68.0078, 0.3586", "491.548, 164.518, 68.2142, 0.3406" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "328.802, 869.407, 30.8126, 0.3846", "329.573, 869.567, 30.8, 0.2288", "329.827, 869.656, 30.8, 0.2748", "330.157, 869.669, 30.8, 0.275", "330.386, 869.783, 30.8, 0.2752", "330.538, 869.974, 30.8, 0.2758", "330.692, 870.05, 30.8, 0.2768", "331.264, 870.279, 30.8, 0.2796", "331.848, 870.495, 30.8, 0.2796", "332.42, 870.724, 30.8, 0.305", "332.56, 870.813, 30.8, 0.2288" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "328.802, 869.407, 30.8126, 0.3846", "328.34, 870.454, 30.942, 0.3546", "327.884, 871.503, 31.0537, 0.3392", "327.43, 872.553, 31.1567, 0.3432", "326.887, 873.534, 31.3267, 0.422", "326.288, 874.475, 31.5935, 0.4492", "325.519, 875.303, 31.8791, 0.391", "324.752, 876.138, 32.1717, 0.3534", "324.069, 877.036, 32.4839, 0.4002", "323.316, 877.86, 32.6956, 0.3782", "322.53, 878.646, 32.7838, 0.4076", "321.918, 879.575, 32.9734, 0.35", "321.368, 880.538, 33.2662, 0.3298", "321.104, 881.642, 33.6123, 0.3304", "320.835, 882.742, 34.0091, 0.3748", "320.313, 883.698, 34.526, 0.4766", "319.724, 884.622, 35.0851, 0.5712", "318.934, 885.447, 35.5645, 0.5174", "318.176, 886.204, 36.0892, 0.3846", "317.794, 887.222, 36.6293, 0.3", "317.562, 888.26, 37.1773, 0.2744", "317.047, 889.262, 37.6746, 0.2744", "316.578, 890.295, 38.0758, 0.2742", "316.143, 891.349, 38.3614, 0.274", "315.657, 892.273, 38.6966, 0.2736", "315.867, 893.303, 39.0306, 0.2728", "316.572, 894.141, 39.3627, 0.2712", "316.616, 895.194, 39.6892, 0.2684", "316.498, 896.284, 39.9036, 0.2626", "317.265, 897.039, 40.1363, 0.2542", "318.316, 897.391, 40.2251, 0.2288", "318.709, 898.287, 39.8392, 0.2288" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "327.563, 807.177, 32.4862, 0.4424", "327.736, 808.472, 32.5315, 0.3732", "327.841, 809.594, 32.464, 0.327", "327.605, 810.704, 32.4786, 0.3192", "327.368, 811.813, 32.5721, 0.383", "326.839, 812.822, 32.7054, 0.3512", "326.297, 813.828, 32.863, 0.3332", "325.557, 814.7, 33.0106, 0.3308", "324.815, 815.57, 33.1425, 0.4056", "324.245, 816.561, 33.2548, 0.388", "323.674, 817.553, 33.3609, 0.427", "322.899, 818.35, 33.5591, 0.3806", "322.149, 819.175, 33.8128, 0.4122", "321.551, 820.148, 34.032, 0.359", "321.003, 821.145, 34.2247, 0.346", "320.715, 822.252, 34.3986, 0.3618", "320.426, 823.36, 34.5584, 0.4266", "319.802, 824.289, 34.7682, 0.604", "319.143, 825.197, 35.0302, 0.6546", "318.728, 826.217, 35.3682, 0.7272", "318.311, 827.247, 35.7266, 0.735", "317.887, 828.31, 36.0007, 0.6784", "317.476, 829.366, 36.19, 0.6902", "317.335, 830.354, 36.1351, 0.6036", "317.227, 831.266, 36.199, 0.74", "316.674, 832.155, 36.3966, 0.6946" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "327.563, 807.177, 32.4862, 0.4424", "326.833, 807.512, 32.1891, 0.2288", "325.818, 807.977, 31.6442, 0.2746", "324.741, 808.318, 31.4138, 0.2746", "323.654, 808.64, 31.1654, 0.2746", "322.78, 809.343, 30.956, 0.2748", "321.958, 810.138, 30.8003, 0.275", "321.136, 810.935, 30.6964, 0.2752", "320.314, 811.731, 30.6376, 0.2758", "319.552, 812.463, 30.4749, 0.277", "318.984, 813.425, 30.3478, 0.2792", "319.019, 814.014, 30.5136, 0.283", "319.201, 814.256, 30.5788, 0.2902", "318.177, 814.594, 30.5063, 0.3032", "317.431, 815.161, 30.3638, 0.3298", "317.117, 816.225, 30.1445, 0.3666", "316.646, 817.255, 29.9233, 0.496", "316.147, 818.253, 29.6554, 0.4384", "315.613, 819.228, 29.4795, 0.4038", "315.006, 820.152, 29.5184, 0.446", "314.542, 821.168, 29.6657, 0.4648", "314.189, 822.255, 29.8494, 0.561", "313.958, 823.363, 30.07, 0.6698", "313.751, 824.477, 30.3106, 0.7512", "313.692, 825.617, 30.4892, 0.5708", "313.654, 826.761, 30.5973, 0.4724", "313.573, 827.897, 30.6617, 0.517", "313.253, 828.995, 30.6911, 0.6418", "312.932, 830.092, 30.6925, 0.6684", "312.581, 831.18, 30.6634, 0.5672", "312.221, 832.249, 30.6502, 0.4244", "311.916, 833.275, 30.77, 0.399", "311.636, 834.347, 30.856, 0.3342", "311.071, 835.219, 30.7406, 0.3006", "310.522, 836.217, 30.5805, 0.2758", "310.078, 837.257, 30.4797, 0.2768", "309.822, 838.353, 30.3066, 0.2796", "309.605, 839.459, 30.0787, 0.2796", "309.158, 840.498, 29.8864, 0.305", "308.635, 841.515, 29.5949, 0.2288" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "310.62, 782.453, 30.6382, 0.3", "309.6, 782.453, 30.4948, 0.2746", "308.456, 782.453, 30.3814, 0.2748", "307.325, 782.308, 30.2786, 0.275", "306.201, 782.106, 30.1762, 0.2754", "305.113, 782.078, 30.0135, 0.2762", "304.127, 782.401, 29.7248, 0.2776", "303.011, 782.453, 29.5252, 0.2802", "302.034, 782.879, 29.5095, 0.285", "301.058, 783.347, 29.5868, 0.2938", "300.067, 783.759, 29.6478, 0.3112", "298.977, 783.497, 29.7573, 0.3382", "297.913, 783.304, 29.729, 0.4128", "296.783, 783.131, 29.6125, 0.4324", "295.654, 782.957, 29.4165, 0.3588", "294.557, 783.177, 29.1858, 0.299", "293.593, 783.015, 28.8994, 0.2728", "292.763, 782.261, 28.4981, 0.2712", "291.905, 781.533, 28.0426, 0.2684", "291.014, 780.836, 27.5613, 0.2626", "290.029, 780.305, 27.072, 0.2542", "288.946, 780.171, 26.5514, 0.2288", "288.03, 780.163, 25.0418, 0.2288" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "310.62, 782.453, 30.6382, 0.3", "311.71, 782.75, 30.6001, 0.2288", "312.598, 782.678, 29.0198, 0.5122", "312.896, 781.768, 28.296, 0.463", "313.536, 780.931, 27.4506, 0.4746", "314.273, 780.174, 26.5508, 0.4548", "314.338, 779.373, 25.5793, 0.3898", "313.43, 778.833, 24.678, 0.4068", "312.757, 778.332, 22.7651, 0.2288" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "283.806, 781.893, 19.1439, 0.5492", "283.067, 782.523, 19.3505, 0.2288", "282.196, 783.266, 19.3208, 0.3274", "281.336, 784.018, 19.3046, 0.3694", "280.468, 784.747, 19.273, 0.465", "279.589, 785.45, 19.2277, 0.556", "278.666, 786.113, 19.2538, 0.4584", "277.687, 786.705, 19.3838, 0.4248", "277.078, 787.542, 19.7218, 0.335", "276.838, 788.375, 20.3498, 0.302", "276.207, 789.157, 21.092, 0.2782", "275.171, 789.338, 21.8746, 0.2814", "274.2, 789.688, 22.6333, 0.287", "273.1, 789.963, 23.1799, 0.2988", "272.193, 790.553, 23.4471, 0.3144", "271.713, 791.448, 23.6828, 0.374", "270.83, 792.171, 23.8776, 0.3348", "269.935, 792.88, 24.0525, 0.3016", "269.02, 793.567, 24.2178, 0.2776", "268.122, 794.256, 24.4358, 0.2802", "267.252, 794.951, 24.7516, 0.2852", "266.342, 795.609, 25.0969, 0.294", "265.405, 796.243, 25.4527, 0.3114", "264.676, 797.103, 25.7844, 0.3386", "264.012, 798.03, 26.0799, 0.4136", "263.257, 798.883, 26.3443, 0.4338", "262.423, 799.643, 26.5929, 0.3612", "261.463, 800.244, 26.8548, 0.3036", "260.506, 800.789, 27.0151, 0.2812", "259.512, 801.316, 27.1165, 0.287", "258.791, 802.054, 27.3359, 0.2976", "258.13, 802.529, 27.777, 0.318", "257.168, 802.769, 28.2887, 0.351", "256.291, 803.417, 28.6012, 0.4364", "255.319, 803.97, 28.8714, 0.477", "254.422, 804.507, 29.1984, 0.4374", "253.854, 805.466, 29.4882, 0.4646", "253.199, 806.355, 29.7377, 0.4834", "252.306, 807.019, 30.0423, 0.4426", "251.512, 807.801, 30.3027, 0.5056", "250.773, 808.573, 30.4055, 0.4076", "250.278, 809.565, 30.5987, 0.3532", "249.893, 810.603, 30.8434, 0.321", "249.17, 811.439, 31.1539, 0.386", "248.401, 812.251, 31.5036, 0.3582", "247.58, 813.048, 31.8144, 0.3398", "246.806, 813.88, 32.0961, 0.374", "246.224, 814.865, 32.347, 0.335", "245.608, 815.818, 32.6085, 0.302", "244.83, 816.624, 32.9557, 0.2782", "244.218, 817.544, 33.3488, 0.2814", "243.756, 818.541, 33.8114, 0.287", "242.831, 819.05, 34.3574, 0.2988", "241.878, 819.34, 35.0182, 0.3142", "241.394, 820.307, 35.7076, 0.3736", "240.715, 821.214, 36.2894, 0.334", "240.106, 822.154, 36.832, 0.3004", "239.54, 823.114, 37.3632, 0.2752", "239.081, 824.156, 37.8216, 0.2758", "238.632, 825.205, 38.2242, 0.2768", "238.347, 826.27, 38.6789, 0.2788", "238.086, 827.339, 39.195, 0.2824", "237.444, 828.267, 39.6802, 0.2888", "236.778, 829.188, 40.1388, 0.3018", "236.345, 830.218, 40.6302, 0.32", "235.917, 831.251, 41.1376, 0.384", "235.522, 832.304, 41.6466, 0.3546", "235.057, 833.319, 42.133, 0.3334", "234.477, 834.224, 42.6222, 0.3616", "234.373, 835.307, 43.106, 0.3136", "233.955, 836.351, 43.5453, 0.2542", "233.537, 837.394, 44.392, 0.2288" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "283.806, 781.893, 19.1439, 0.5492", "282.862, 782.501, 19.0617, 0.4442", "281.997, 783.226, 18.9364, 0.4072", "281.228, 784.058, 18.757, 0.4894", "280.396, 784.834, 18.56, 0.5944", "279.511, 785.549, 18.3735, 0.5616", "278.556, 786.179, 18.2279, 0.4622", "277.604, 786.815, 18.1216, 0.464", "276.681, 787.416, 17.9751, 0.4798", "275.767, 788.049, 17.7958, 0.4484", "275.45, 788.366, 17.7433, 0.4566", "274.685, 789.143, 17.8356, 0.6062", "273.931, 789.962, 17.8652, 0.6896", "273.288, 790.843, 17.9096, 0.642", "272.525, 791.641, 18.037, 0.6204", "271.548, 792.219, 18.1355, 0.4838", "270.507, 792.656, 18.1428, 0.4716", "269.478, 793.125, 18.0723, 0.4234", "268.521, 793.706, 18.0197, 0.4572", "267.654, 794.434, 18.0464, 0.6086", "266.71, 795.064, 18.096, 0.6864", "265.719, 795.634, 18.1521, 0.6734", "264.666, 796.06, 18.2171, 0.4972", "263.566, 796.374, 18.2843, 0.4504", "262.537, 796.853, 18.3422, 0.3772", "261.953, 797.786, 18.3904, 0.4058", "261.485, 798.815, 18.4613, 0.3466", "260.822, 799.71, 18.6255, 0.3246", "260.095, 800.551, 18.7736, 0.315", "259.29, 801.326, 18.8042, 0.3752", "258.335, 801.891, 18.8648, 0.3372", "257.325, 802.382, 18.9851, 0.3062", "256.416, 803.069, 19.0744, 0.286", "255.523, 803.784, 19.1276, 0.2954", "254.905, 804.737, 19.1644, 0.3142", "254.365, 805.665, 19.0643, 0.3438", "253.472, 806.194, 19.0096, 0.4234", "252.362, 806.26, 19.0563, 0.452" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "476.539, 144.678, 72.098, 0.2746", "476.646, 143.928, 72.6023, 0.2288", "476.807, 142.799, 72.9618, 0.2746", "476.946, 141.671, 73.1206, 0.2746", "477.079, 140.542, 73.3169, 0.2746", "477.149, 139.407, 73.5235, 0.2746", "477.149, 138.264, 73.7178, 0.2746", "477.149, 137.122, 73.8987, 0.2746", "477.149, 135.978, 74.0502, 0.2746", "477.149, 134.834, 74.181, 0.2746", "477.149, 133.69, 74.3061, 0.2746" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "476.539, 144.678, 72.098, 0.2746", "476.428, 144.363, 72.3078, 0.2746", "475.731, 143.574, 72.4926, 0.2746", "474.684, 143.144, 72.6544, 0.2746", "473.676, 142.635, 72.8092, 0.2746", "472.847, 141.878, 72.9271, 0.2746", "472.254, 140.903, 73.0226, 0.2746", "471.654, 139.928, 73.122, 0.2746", "471.057, 138.959, 73.2486, 0.2746", "470.468, 138.005, 73.4591, 0.2746", "469.895, 137.031, 73.701, 0.2746", "469.343, 136.029, 73.925, 0.2746", "468.713, 135.083, 74.1392, 0.2746", "467.963, 134.224, 74.3537, 0.2746", "467.453, 133.244, 74.5766, 0.2746", "467.189, 132.14, 74.8157, 0.2746", "466.907, 131.038, 75.0551, 0.2746", "466.592, 129.938, 75.2648, 0.2746", "466.257, 128.85, 75.4614, 0.2746", "465.758, 127.852, 75.7277, 0.2746", "465.263, 126.843, 76.0217, 0.2746", "464.781, 125.806, 76.2717, 0.2746", "464.269, 124.786, 76.4977, 0.2746", "463.605, 123.859, 76.7292, 0.2746", "463.016, 122.91, 76.984, 0.2746", "462.652, 121.901, 77.327, 0.2746", "462.194, 120.902, 77.6675, 0.2746", "461.613, 119.918, 77.9167, 0.2746", "460.96, 118.984, 78.0727, 0.2748", "460.206, 118.124, 78.1368, 0.2748" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "491.548, 164.518, 68.2142, 0.3406", "491.172, 163.557, 68.9226, 0.4576", "491.212, 162.508, 69.216, 0.3606", "491.584, 161.595, 69.265, 0.3024", "491.391, 160.529, 69.4722, 0.2792", "491.345, 159.388, 69.6864, 0.283", "490.937, 158.515, 70.084, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "491.548, 164.518, 68.2142, 0.3406", "492.506, 164.243, 68.5286, 0.3754", "493.402, 163.648, 68.878, 0.3376", "494.176, 162.867, 69.1583, 0.307", "494.784, 162.115, 69.1312, 0.2876", "495.747, 161.521, 68.9884, 0.2986", "496.767, 161.055, 68.7697, 0.3198", "497.878, 160.783, 68.5462, 0.3546", "498.894, 160.284, 68.3592, 0.4426", "499.869, 159.684, 68.2332, 0.4898", "500.857, 159.143, 68.1178, 0.4548", "501.853, 158.63, 67.9661, 0.5278", "502.899, 158.221, 67.9255, 0.4498", "503.952, 157.826, 67.984, 0.4272", "504.894, 157.184, 68.0392, 0.4778", "505.831, 156.527, 68.0798, 0.5806", "506.818, 155.95, 68.1019, 0.4992", "507.81, 155.38, 68.094, 0.5258", "508.696, 154.658, 68.0445, 0.398", "509.565, 153.916, 67.9664, 0.3344", "510.503, 153.413, 67.7572, 0.291", "511.573, 153.186, 67.534, 0.306", "512.288, 152.301, 67.3613, 0.3278", "513.037, 151.479, 67.2403, 0.3984", "513.963, 150.85, 67.0928, 0.3822", "514.876, 150.215, 66.948, 0.379", "515.752, 149.544, 67.0054, 0.4722", "516.6, 148.82, 67.1726, 0.3932", "517.391, 147.996, 67.3599, 0.3254", "518.171, 147.163, 67.5682, 0.2746", "518.948, 146.328, 67.788, 0.2746", "519.742, 145.507, 67.986, 0.2746", "520.513, 144.697, 68.1047, 0.2746", "521.403, 144.213, 68.215, 0.2748", "521.883, 143.464, 68.4592, 0.2748", "521.938, 142.514, 68.5611, 0.2752", "522.442, 141.506, 68.7126, 0.2756", "522.948, 140.501, 68.8509, 0.2766", "523.46, 139.505, 68.8766, 0.2782", "524.008, 138.514, 68.8666, 0.2814", "524.637, 137.574, 68.9293, 0.2872", "524.772, 136.479, 69.0864, 0.2988", "524.772, 135.378, 69.1681, 0.3144", "524.866, 134.288, 69.4112, 0.374", "525.078, 133.237, 69.8135, 0.335", "525.294, 132.151, 70.254, 0.302", "525.518, 131.031, 70.6468, 0.2784", "525.752, 129.916, 71.0058, 0.2816", "526.016, 128.812, 71.3549, 0.2874", "526.344, 127.744, 71.6635, 0.2994", "527.032, 126.893, 71.9594, 0.3152", "527.661, 126.02, 72.2714, 0.3754", "528.692, 125.602, 72.5068, 0.3376", "529.192, 124.702, 72.6678, 0.3068", "529.746, 123.701, 72.7658, 0.287", "530.449, 122.81, 72.8154, 0.2988", "531.245, 121.988, 72.83, 0.3142", "531.99, 121.122, 72.8241, 0.3734", "532.705, 120.229, 72.8143, 0.3338", "533.421, 119.335, 72.8006, 0.3", "534.135, 118.442, 72.7812, 0.2746", "534.849, 117.549, 72.7546, 0.2746", "535.807, 116.957, 72.718, 0.2746", "536.932, 116.776, 72.6653, 0.2746", "538.073, 116.75, 72.59, 0.2748", "539.218, 116.75, 72.4858, 0.275", "540.355, 116.681, 72.35, 0.2754", "541.435, 116.324, 72.1753, 0.2762", "542.173, 115.792, 71.8357, 0.2776", "542.174, 114.717, 71.3868, 0.28", "542.369, 113.642, 70.9369, 0.2848", "542.907, 112.646, 70.5214, 0.2934", "543.417, 111.632, 70.1728, 0.3106", "543.898, 110.596, 69.9191, 0.3358", "544.392, 109.566, 69.7757, 0.4144", "544.974, 108.642, 69.6478, 0.4058", "545.756, 107.861, 69.6651, 0.4534", "546.6, 107.135, 69.8298, 0.4618" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "316.674, 832.155, 36.3966, 0.6946", "315.961, 832.932, 36.9942, 0.2288", "315.758, 834.015, 38.155, 0.477", "316.408, 834.571, 38.5585, 0.402", "317.288, 834.648, 39.1647, 0.342", "317.178, 834.704, 40.1136, 0.3048", "316.471, 835.523, 40.9514, 0.333", "315.771, 836.404, 41.6016, 0.372", "315.363, 837.44, 42.1635, 0.5074", "314.896, 838.36, 42.6205, 0.453", "313.994, 838.717, 42.7297, 0.463", "313.095, 839.158, 42.8268, 0.3998", "312.244, 839.552, 43.2065, 0.45", "311.396, 840.285, 43.6344, 0.4182", "310.486, 840.881, 44.1862, 0.5072", "309.5, 841.389, 44.7479, 0.411", "308.551, 840.819, 45.2726, 0.3582", "308.027, 840.144, 45.9992, 0.3362", "307.674, 839.294, 46.8706, 0.3842", "306.989, 838.7, 47.8274, 0.5", "307.111, 837.848, 48.825, 0.5848", "307.719, 837.394, 51.2218, 0.6864" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "316.674, 832.155, 36.3966, 0.6946", "316.185, 832.497, 36.6075, 0.6874", "315.741, 833.518, 36.9054, 0.7564", "315.277, 834.531, 37.2512, 0.7148", "314.539, 835.391, 37.5827, 0.5452", "313.858, 836.297, 37.8342, 0.45", "313.247, 837.263, 37.9954, 0.5822", "312.808, 838.315, 38.064, 0.473", "312.873, 839.376, 37.924, 0.3898", "313.259, 840.424, 37.8227, 0.3414", "313.635, 841.394, 37.6253, 0.4246", "313.78, 842.513, 37.3657, 0.4256", "314.235, 843.558, 37.1064, 0.4852", "314.561, 844.549, 36.7466, 0.545", "314.649, 845.542, 36.26, 0.4432", "314.807, 846.53, 35.7616, 0.372", "315.046, 847.379, 35.6292, 0.3568", "315.046, 848.521, 35.5678, 0.4468", "315.046, 849.662, 35.5508, 0.4974", "315.126, 850.752, 35.471, 0.47", "315.283, 851.792, 35.2447, 0.5508", "315.434, 852.884, 34.974, 0.5182", "315.504, 854.019, 34.7166, 0.4278", "315.311, 855.091, 34.4803, 0.4054", "315.097, 856.013, 34.5265, 0.3458", "314.667, 856.917, 34.7228, 0.3232", "314.586, 858.001, 34.8636, 0.3122", "314.144, 858.887, 35.2027, 0.37", "313.542, 859.706, 35.6275, 0.3276", "312.758, 860.457, 35.9528, 0.2882", "312.093, 861.123, 35.964, 0.2542", "311.56, 862.102, 35.8257, 0.2288", "310.926, 863.034, 35.2862, 0.2288" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "252.362, 806.26, 19.0563, 0.452", "251.843, 806.272, 19.0987, 0.396", "250.7, 806.296, 19.1318, 0.3624", "249.589, 806.448, 19.1869, 0.417", "248.512, 806.533, 19.2842, 0.4102", "247.474, 806.082, 19.3586, 0.4626", "246.517, 805.454, 19.4206, 0.4726", "245.48, 805.026, 19.4902, 0.4586", "244.337, 804.97, 19.5683, 0.3602", "243.195, 804.913, 19.6542, 0.3016", "242.065, 804.965, 19.789, 0.2774", "240.944, 805.103, 19.9959, 0.28", "239.854, 805.359, 20.2337, 0.2846", "238.82, 805.851, 20.4496, 0.2928", "237.793, 806.335, 20.6623, 0.3096", "236.778, 806.801, 20.9196, 0.3338", "235.767, 807.298, 21.1563, 0.4112", "234.758, 807.839, 21.3134, 0.3984", "233.734, 808.346, 21.4066, 0.4472", "232.681, 808.791, 21.4487, 0.413", "231.622, 809.222, 21.4314, 0.4978", "230.562, 809.643, 21.3564, 0.3932", "229.501, 810.064, 21.2526, 0.3254", "228.439, 810.479, 21.1415, 0.2746", "227.346, 810.821, 21.0577, 0.2746", "226.255, 811.162, 20.9993, 0.2746", "225.162, 811.503, 20.9639, 0.2746", "224.071, 811.844, 20.9466, 0.2746", "222.953, 812.064, 20.9404, 0.2746", "221.817, 812.198, 20.939, 0.2746", "220.68, 812.331, 20.937, 0.2746", "219.544, 812.465, 20.9343, 0.2746", "218.409, 812.592, 20.9304, 0.2746", "217.303, 812.298, 20.925, 0.2746", "216.198, 812.003, 20.9173, 0.2746", "215.093, 811.708, 20.9067, 0.2746", "213.988, 811.414, 20.8921, 0.2746", "212.854, 811.479, 20.8713, 0.2746", "211.716, 811.599, 20.8418, 0.2746", "210.578, 811.718, 20.8006, 0.2746", "209.44, 811.839, 20.7453, 0.2746", "208.303, 811.959, 20.6738, 0.2746", "207.168, 811.986, 20.5489, 0.2746", "206.035, 811.986, 20.3774, 0.2746", "204.901, 811.986, 20.1758, 0.2748", "203.767, 811.986, 19.957, 0.2748", "202.633, 811.986, 19.7371, 0.2752", "201.648, 812.279, 19.72, 0.2756", "200.698, 812.802, 19.7918, 0.2766", "199.677, 812.819, 19.6652, 0.2782", "198.72, 812.329, 19.45, 0.2814", "198.068, 811.597, 19.4331, 0.287", "197.657, 810.576, 19.4362, 0.2988", "197.009, 809.823, 19.16, 0.314", "196.142, 809.128, 18.7921, 0.3734", "195.274, 808.434, 18.3741, 0.3338", "194.406, 807.74, 17.8982, 0.2998", "193.406, 807.369, 17.4556, 0.2744", "192.282, 807.302, 17.1466, 0.2742", "191.256, 806.803, 16.8688, 0.274", "190.304, 806.266, 16.4769, 0.2736", "189.46, 805.652, 15.9198, 0.2728", "189.064, 804.58, 15.3066, 0.2712", "188.774, 803.543, 14.5867, 0.2684", "188.713, 802.585, 13.6686, 0.2626", "188.42, 801.991, 12.5748, 0.2542", "187.632, 802.026, 11.42, 0.2288", "186.959, 802.821, 9.3083, 0.2288" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "252.362, 806.26, 19.0563, 0.452", "250.914, 805.759, 18.2543, 0.4576", "249.867, 805.397, 18.1599, 0.3604", "248.836, 804.939, 18.1587, 0.302", "247.808, 804.464, 18.2516, 0.2782", "246.771, 803.983, 18.3675, 0.2814", "245.734, 803.5, 18.5002, 0.287", "244.909, 802.753, 18.7153, 0.2986", "244.144, 801.937, 19.0024, 0.314", "243.592, 800.94, 19.2775, 0.3732", "243.018, 799.959, 19.5336, 0.3334", "242.262, 799.103, 19.7238, 0.299", "241.548, 798.218, 19.9053, 0.2728", "240.867, 797.311, 20.1175, 0.2712", "240.176, 796.404, 20.3366, 0.2684", "239.483, 795.498, 20.5591, 0.2626", "238.709, 794.672, 20.8078, 0.2542", "237.927, 793.855, 21.0728, 0.2288", "237.201, 792.983, 21.6269, 0.2288" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "477.149, 133.69, 74.3061, 0.2746", "477.193, 133.303, 72.8812, 0.2288", "477.244, 132.561, 71.4781, 0.2746", "476.601, 131.657, 70.9912, 0.2746", "475.735, 130.99, 70.4883, 0.2746", "474.911, 130.465, 69.9829, 0.2746", "474.165, 129.676, 69.496, 0.2746", "473.454, 128.794, 69.102, 0.2746", "472.724, 127.929, 68.7859, 0.2746", "472.242, 126.981, 68.455, 0.2746", "472.147, 125.879, 68.1226, 0.2746", "471.473, 124.979, 67.8233, 0.2746", "471.03, 123.964, 67.5128, 0.2746", "470.453, 122.994, 67.2297, 0.2746", "469.908, 122.087, 66.8553, 0.2746", "469.251, 121.177, 66.5566, 0.2746", "468.416, 120.455, 66.3169, 0.2748", "467.817, 119.593, 66.0257, 0.2748", "467.309, 118.578, 65.8216, 0.2752", "466.809, 117.571, 65.6905, 0.2756", "466.508, 116.468, 65.6278, 0.2766", "465.709, 115.712, 65.5897, 0.2782", "464.897, 114.951, 65.5642, 0.2814", "464.599, 113.848, 65.578, 0.287", "464.492, 112.879, 65.7213, 0.2988", "464.143, 111.988, 65.926, 0.3142", "463.569, 111.013, 66.0027, 0.3734", "463.141, 109.978, 66.022, 0.334", "462.785, 108.904, 66.0086, 0.3002", "462.554, 107.824, 65.8809, 0.275", "462.258, 107.245, 65.406, 0.2752", "462.106, 106.698, 64.6876, 0.2758", "462.106, 105.718, 64.0872, 0.2768", "462.127, 104.839, 63.9988, 0.2788", "462.335, 104.103, 64.307, 0.2824", "462.079, 103.097, 64.6926, 0.2882", "461.878, 102.073, 65.3268, 0.305", "461.903, 101.095, 66.131, 0.305", "462.106, 100.225, 68.1243, 0.4576" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "477.149, 133.69, 74.3061, 0.2746", "477.149, 133.023, 74.4671, 0.2746", "477.149, 131.888, 74.6802, 0.2746", "477.181, 130.762, 74.937, 0.2746", "477.595, 129.741, 75.2721, 0.2746", "478.079, 128.749, 75.6246, 0.2746", "478.391, 127.79, 75.861, 0.2746", "478.451, 126.667, 76.0228, 0.2746", "478.84, 125.65, 76.2171, 0.2746", "478.724, 125.037, 76.2194, 0.2746", "478.891, 123.906, 76.2524, 0.2746", "479.121, 122.789, 76.3507, 0.2746", "479.5, 121.71, 76.5369, 0.2746", "479.878, 120.63, 76.8037, 0.2746" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "460.206, 118.124, 78.1368, 0.2748", "460.016, 117.475, 78.0388, 0.2752", "459.394, 116.652, 77.8504, 0.2756", "458.748, 115.812, 77.6742, 0.2766", "458.051, 114.925, 77.5211, 0.2782", "457.104, 114.303, 77.385, 0.2814", "456.27, 113.538, 77.2551, 0.287", "455.456, 112.749, 77.1162, 0.2988", "454.766, 111.842, 76.9376, 0.3142", "453.89, 111.125, 76.6962, 0.3734", "453.239, 110.294, 76.3815, 0.3338" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "460.206, 118.124, 78.1368, 0.2748", "460.21, 118.095, 78.9746, 0.2288", "460.23, 117.723, 80.1004, 0.2742", "460.23, 116.579, 80.4846, 0.274", "460.23, 115.435, 80.7755, 0.2736", "460.56, 114.409, 80.9788, 0.2728", "460.688, 113.287, 81.0986, 0.2712", "460.688, 112.144, 81.144, 0.2684", "460.656, 111.002, 81.1247, 0.2626", "460.573, 109.865, 81.1031, 0.2542", "460.573, 108.728, 81.0622, 0.2288", "461.031, 107.879, 80.92, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "490.937, 158.515, 70.084, 0.29", "491.182, 157.627, 70.3688, 0.3044", "491.491, 156.529, 70.5723, 0.3246", "491.903, 155.466, 70.7342, 0.3928", "492.575, 154.554, 70.8515, 0.3698", "493.612, 154.22, 70.9568, 0.3672", "494.498, 153.534, 71.1346, 0.396", "495.376, 152.831, 71.3734, 0.5156", "496.235, 152.077, 71.5924, 0.645", "497.014, 151.262, 71.811, 0.646", "497.603, 150.308, 72.0734, 0.6636", "498.156, 149.355, 72.2554, 0.6202", "498.603, 148.331, 72.3164, 0.4514", "499.012, 147.303, 72.4629, 0.3388", "499.317, 146.318, 72.7227, 0.3004", "499.644, 145.227, 72.9072, 0.3174", "500.052, 144.229, 73.059, 0.3794", "500.862, 143.536, 73.2729, 0.345", "500.99, 142.549, 73.4938, 0.3204", "501.113, 141.442, 73.6442, 0.3132", "501.534, 140.423, 73.8256, 0.342", "502.16, 139.506, 74.051, 0.4198" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "490.937, 158.515, 70.084, 0.29", "490.666, 157.583, 71.6688, 0.2288", "489.922, 156.77, 71.5338, 0.2814", "489.369, 155.838, 71.4955, 0.287", "489.054, 154.808, 71.5347, 0.2988", "489.069, 153.702, 71.6187, 0.3142", "489.231, 152.614, 71.832, 0.3734", "489.328, 151.53, 72.0754, 0.3338", "488.853, 150.5, 72.366, 0.3", "488.578, 149.473, 72.7804, 0.2746", "488.359, 148.373, 73.2572, 0.2746", "488.139, 147.273, 73.7775, 0.2746" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "546.6, 107.135, 69.8298, 0.4618", "546.89, 106.99, 69.9938, 0.2288", "547.888, 106.491, 70.4516, 0.3764", "548.906, 106.018, 70.6591, 0.3396", "549.95, 105.574, 70.8644, 0.3106", "551.039, 105.343, 70.9957, 0.294", "552.175, 105.321, 71.0038, 0.3114", "553.304, 105.37, 70.9215, 0.3388", "554.419, 105.621, 70.7907, 0.414", "555.529, 105.849, 70.6121, 0.4348", "556.632, 106.05, 70.3774, 0.363", "557.728, 106.218, 70.1946, 0.307", "558.813, 106.339, 70.1646, 0.2872", "559.931, 106.488, 70.1546, 0.2992", "561.061, 106.65, 70.098, 0.3148", "562.174, 106.873, 69.876, 0.3748", "563.284, 107.109, 69.5022, 0.3362", "564.258, 107.516, 68.9195, 0.305", "565.032, 107.998, 68.0901, 0.2796", "565.476, 108.595, 67.1177, 0.305", "565.069, 109.424, 64.8808, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "546.6, 107.135, 69.8298, 0.4618", "546.538, 106.461, 70.0658, 0.4078", "546.435, 105.359, 70.3825, 0.4154", "546.288, 104.281, 70.7106, 0.3642", "545.932, 103.285, 70.8487, 0.3586", "545.887, 102.151, 70.9296, 0.3724", "546.09, 101.034, 71.0018, 0.5084", "546.254, 99.9401, 71.1264, 0.4546", "546.162, 98.8159, 71.2925, 0.4656", "545.521, 97.9203, 71.4403, 0.4064", "544.572, 97.2884, 71.5621, 0.4546", "543.693, 96.5878, 71.6926, 0.4638", "543.247, 95.6176, 71.7909, 0.4114", "542.786, 94.6269, 71.7226, 0.4234", "542.276, 93.6033, 71.6223, 0.374", "541.922, 92.5615, 71.4991, 0.4", "542.312, 91.4978, 71.3502, 0.336", "542.255, 90.47, 71.1682, 0.304", "541.977, 89.3846, 70.8893, 0.2818", "541.702, 88.2984, 70.5438, 0.2882", "541.482, 87.1982, 70.1397, 0.2994", "541.262, 86.098, 69.6962, 0.323", "540.613, 85.1583, 69.3073, 0.3536", "539.957, 84.2223, 68.9626, 0.4724", "539.094, 83.5193, 68.5588, 0.3932", "538.202, 82.8505, 68.1052, 0.3254", "537.224, 82.2805, 67.6354, 0.2748", "536.219, 81.8047, 67.13, 0.2748", "535.16, 81.5137, 66.5591, 0.275", "534.145, 81.1455, 65.9383, 0.2754", "533.216, 80.55, 65.3251, 0.2762", "532.606, 79.598, 64.8029, 0.2776", "532.563, 78.4548, 64.344, 0.2804", "532.108, 77.421, 63.9066, 0.2854", "531.529, 76.5219, 63.383, 0.2944", "530.713, 75.9666, 62.6794, 0.3122", "529.859, 75.2882, 61.9175, 0.34", "529.388, 74.4753, 60.9946, 0.4164", "529.121, 73.5038, 60.0202, 0.439", "528.398, 72.7726, 59.0111, 0.3708", "527.527, 72.1885, 58.0244, 0.3224", "526.741, 71.3746, 57.1407, 0.3108", "525.879, 70.6951, 56.3234, 0.3672", "524.887, 70.2417, 55.5422, 0.322", "523.956, 69.8454, 54.74, 0.2796", "523.069, 69.4908, 53.9017, 0.2288", "522.025, 69.1342, 52.36, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "479.878, 120.63, 76.8037, 0.2746", "479.892, 120.264, 76.2348, 0.2288", "480.257, 119.416, 77.5785, 0.2746", "481.077, 118.664, 78.1239, 0.2746", "481.898, 117.91, 78.7307, 0.2746", "482.717, 117.156, 79.3761, 0.2746", "483.537, 116.403, 80.0394, 0.2746", "484.357, 115.649, 80.7027, 0.2746", "484.925, 114.719, 81.3534, 0.2746", "485.36, 113.698, 82.0084, 0.2746", "485.795, 112.676, 82.6658, 0.2746", "486.231, 111.655, 83.3235, 0.2746", "486.667, 110.633, 83.9793, 0.2746", "487.103, 109.611, 84.6308, 0.2746", "487.539, 108.59, 85.2748, 0.2748", "487.974, 107.568, 85.9076, 0.2748", "488.409, 106.547, 86.5256, 0.2752", "488.845, 105.525, 87.1228, 0.2756", "489.281, 104.503, 87.6901, 0.2766", "489.717, 103.482, 88.2126, 0.2782", "490.153, 102.46, 88.6771, 0.2814", "490.589, 101.438, 89.0781, 0.2872", "490.816, 100.347, 89.3533, 0.299", "490.892, 99.2485, 89.4589, 0.3146", "491.033, 98.6788, 89.2024, 0.3746", "491.417, 97.6139, 88.9263, 0.3358", "491.42, 96.5607, 88.7835, 0.3038", "491.344, 95.5796, 88.5738, 0.2816", "491.107, 94.6691, 88.3767, 0.2872", "491.606, 94.0266, 88.6259, 0.2992", "491.855, 93.347, 89.2906, 0.315", "491.632, 92.5731, 90.1068, 0.375", "491.21, 91.9792, 90.6559, 0.3368", "490.846, 90.9787, 91.3794, 0.3054", "490.719, 89.9173, 92.2191, 0.2846", "491.087, 88.9158, 93.0882, 0.2928", "491.403, 88.2045, 94.1926, 0.3094", "491.552, 87.6519, 95.5604, 0.3348", "491.676, 86.8581, 97.0564, 0.4068", "492.524, 86.4929, 98.4262, 0.4208", "492.997, 85.9686, 99.757, 0.339", "493.934, 85.7795, 100.927, 0.2542", "495.065, 85.809, 102.468, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "479.878, 120.63, 76.8037, 0.2746", "479.714, 119.756, 77.3676, 0.2746", "479.541, 118.847, 78.1631, 0.2746", "479.369, 117.937, 79.0773, 0.2746", "478.925, 117.052, 79.9229, 0.2746", "478.168, 116.194, 80.5431, 0.2748", "477.412, 115.336, 80.9553, 0.2748", "476.656, 114.477, 81.1784, 0.2752", "476.436, 113.393, 81.272, 0.2756", "476.351, 112.252, 81.2899, 0.2766", "476.308, 111.119, 81.2812, 0.2782", "476.805, 110.089, 81.2692, 0.2814", "477.301, 109.058, 81.2515, 0.2872", "477.797, 108.028, 81.2274, 0.2988", "478.295, 106.997, 81.1947, 0.3144", "478.792, 105.966, 81.1527, 0.374", "479.091, 104.867, 81.0782, 0.335", "479.37, 103.76, 80.9771, 0.302", "479.65, 102.652, 80.8581, 0.2784", "479.929, 101.545, 80.7313, 0.2816", "480.207, 100.438, 80.6061, 0.2874", "480.486, 99.331, 80.4905, 0.2994", "480.765, 98.2237, 80.3956, 0.3152", "481.189, 97.1632, 80.3499, 0.3754", "481.634, 96.1094, 80.353, 0.3376", "482.08, 95.0555, 80.4012, 0.307", "482.136, 94.3374, 80.4544, 0.2874", "482.359, 93.2765, 80.6887, 0.2996", "482.767, 92.2472, 80.9721, 0.3156", "483.082, 91.1619, 81.2246, 0.3762", "483.163, 90.0565, 81.5346, 0.3392", "483.017, 89.0207, 81.9619, 0.3098", "482.516, 88.0891, 82.4438, 0.2924", "482.142, 87.2458, 83.0001, 0.309", "482.239, 86.4791, 83.3431, 0.3328", "482.047, 85.6162, 83.3672, 0.409", "481.657, 84.9144, 83.2126, 0.3958", "481.094, 84.0474, 83.2572, 0.435", "480.62, 83.1209, 83.4879, 0.4266", "480.222, 82.3714, 83.9796, 0.3474", "479.563, 81.8525, 84.5561, 0.2796", "478.51, 81.4234, 84.9996, 0.2288", "478.357, 80.775, 85.0147, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "453.239, 110.294, 76.3815, 0.3338", "452.417, 109.436, 75.8464, 0.3", "451.592, 108.788, 75.1114, 0.2746", "450.767, 108.141, 74.2238, 0.2746", "449.943, 107.494, 73.2281, 0.2746", "449.119, 106.847, 72.1664, 0.2746", "448.295, 106.199, 71.0769, 0.2746", "447.47, 105.552, 69.9947, 0.2746", "446.645, 104.905, 68.9282, 0.2748", "445.822, 104.258, 67.8835, 0.2748", "444.997, 103.61, 66.8713, 0.2752", "444.173, 102.963, 65.9042, 0.2756", "443.348, 102.316, 64.9947, 0.2766", "442.523, 101.669, 64.1547, 0.2782", "441.653, 101.024, 63.453, 0.2814", "440.707, 100.382, 62.9798, 0.2872", "439.759, 99.7395, 62.6884, 0.299", "438.812, 99.0975, 62.5271, 0.3144", "437.951, 98.3527, 62.4448, 0.374", "437.141, 97.5449, 62.3986, 0.335", "436.752, 96.9706, 62.529, 0.3022", "436.481, 96.1678, 62.5797, 0.2786", "436.036, 95.6486, 62.3482, 0.2822", "436.162, 95.1165, 61.9186, 0.2886", "435.345, 94.4062, 61.6532, 0.3018", "434.912, 93.4536, 61.6498, 0.3196", "434.804, 92.4143, 61.875, 0.3838", "434.492, 91.5276, 62.3224, 0.3532", "433.67, 90.9053, 62.6665, 0.3356", "433.055, 90.4996, 62.8006, 0.3412", "432.796, 89.5281, 63.0683, 0.3946", "432.377, 88.4972, 63.2719, 0.514", "431.706, 87.5885, 63.4458, 0.636", "431.173, 86.628, 63.7414, 0.6582", "430.58, 85.7422, 64.1931, 0.547", "429.937, 84.8211, 64.6556, 0.3926", "429.238, 83.9188, 65.0432, 0.3142", "428.688, 82.9494, 65.4777, 0.3022", "427.818, 82.2719, 65.9599, 0.3204", "427.141, 81.3922, 66.449, 0.3848", "426.536, 80.4583, 66.9376, 0.3562", "425.924, 79.5286, 67.4358, 0.3362", "425.386, 78.5318, 67.8709, 0.3672", "424.643, 77.7038, 68.2312, 0.322", "423.88, 76.8733, 68.4564, 0.2796", "422.951, 76.2362, 68.6582, 0.2288", "422.053, 75.7408, 69.2504, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "453.239, 110.294, 76.3815, 0.3338", "452.886, 110.622, 76.694, 0.2288", "452.62, 110.992, 75.6666, 0.2746", "452.521, 109.852, 75.301, 0.2746", "452.422, 108.712, 74.9636, 0.2746", "452.323, 107.573, 74.6441, 0.2746", "451.942, 106.546, 74.2773, 0.2746", "451.354, 105.604, 73.8321, 0.2746", "450.765, 104.661, 73.3314, 0.2746", "450.176, 103.719, 72.7588, 0.2746", "449.588, 102.777, 72.1403, 0.2746", "448.998, 101.834, 71.4988, 0.2748", "448.409, 100.892, 70.8562, 0.275", "447.821, 99.9492, 70.2226, 0.2754", "447.232, 99.0068, 69.6016, 0.2762", "446.644, 98.0644, 68.9962, 0.2774", "446.055, 97.1219, 68.4188, 0.2798", "445.466, 96.1795, 67.8807, 0.2844", "444.878, 95.2371, 67.3865, 0.2926", "444.289, 94.2947, 66.9407, 0.3092", "443.699, 93.3522, 66.5448, 0.3334", "443.796, 92.822, 66.5288, 0.41", "443.726, 91.7529, 66.6016, 0.3976", "443.355, 90.8063, 66.512, 0.4384", "443.338, 89.7706, 66.439, 0.4328", "443.128, 88.7059, 66.3729, 0.3594", "443.489, 87.924, 66.2208, 0.3", "442.823, 87.3565, 65.9075, 0.2746", "442.651, 86.627, 66.0089, 0.2746", "442.651, 86.1176, 66.6235, 0.2746", "442.443, 85.5384, 67.5357, 0.2748", "442.187, 84.8575, 68.1103, 0.275", "442.134, 83.965, 68.7198, 0.2752", "442.194, 82.9302, 69.4291, 0.2758", "441.874, 82.5374, 70.2517, 0.2768", "441.41, 81.8916, 71.0374, 0.2788", "441.193, 80.8022, 71.6612, 0.2824", "440.957, 79.6971, 72.1706, 0.2882", "440.611, 78.6248, 72.4713, 0.305", "440.293, 77.5555, 72.5959, 0.305", "440.134, 76.6561, 72.0653, 0.4576" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "502.16, 139.506, 74.051, 0.4198", "502.252, 139.114, 74.3271, 0.4452", "503.124, 138.452, 74.4811, 0.3834", "504.084, 137.97, 74.6466, 0.3396", "504.153, 136.921, 74.9025, 0.3734", "504.072, 135.819, 75.1125, 0.3338", "504.357, 134.717, 75.3407, 0.3", "504.826, 133.692, 75.588, 0.2746", "505.259, 132.652, 75.8414, 0.2746", "505.364, 131.533, 76.1236, 0.2746", "505.364, 130.458, 76.5013, 0.2746", "505.505, 129.357, 76.8732, 0.2746", "505.669, 128.225, 77.1823, 0.2746", "506.335, 127.376, 77.5169, 0.2746", "507.096, 126.633, 77.7899, 0.2746", "508.124, 126.278, 78.092, 0.2746", "509.129, 125.848, 78.3924, 0.2746", "509.898, 125.04, 78.6237, 0.2746", "510.833, 124.382, 78.8021, 0.2746", "511.789, 123.753, 78.9401, 0.2746", "512.726, 123.099, 79.0619, 0.2746", "513.396, 122.232, 79.1753, 0.2746", "514.407, 121.729, 79.3005, 0.2748", "515.464, 121.342, 79.4828, 0.275", "516.315, 120.819, 79.8518, 0.2754", "517.012, 120.11, 80.2592, 0.276", "517.381, 119.102, 80.5588, 0.2774", "518.08, 118.2, 80.8548, 0.2796", "517.898, 117.503, 81.4173, 0.284", "518.002, 116.378, 81.9448, 0.292", "518.002, 115.298, 82.5023, 0.308", "517.932, 114.187, 83.0276, 0.3312", "517.46, 113.315, 83.5901, 0.4062", "517.204, 112.234, 84.0608, 0.389", "516.771, 111.31, 84.4939, 0.4288", "516.401, 110.317, 84.8327, 0.3842", "516.145, 109.288, 85.099, 0.4186", "515.52, 108.647, 85.4644, 0.3718", "515.456, 107.506, 85.7368, 0.3646", "515.307, 106.377, 85.9432, 0.4222", "515.206, 105.488, 86.198, 0.4136", "515.398, 104.686, 86.3708, 0.499", "516.308, 104.105, 86.4279, 0.3956", "516.421, 103.004, 86.5379, 0.33", "517.013, 102.181, 86.5586, 0.283", "516.928, 101.123, 86.4909, 0.2902", "516.881, 100.56, 86.709, 0.3034", "517.14, 99.8309, 87.129, 0.3286", "517.704, 99.506, 87.2323, 0.3718", "517.267, 99.0304, 86.8916, 0.4698", "517.714, 98.1417, 86.5029, 0.5634", "518.263, 97.3004, 85.9978, 0.4782", "519.109, 96.7253, 85.5509, 0.4326", "519.928, 96.2626, 84.94, 0.4894", "520.596, 95.8507, 84.1596, 0.5956", "521.252, 95.0031, 83.3837, 0.5576", "521.931, 94.1462, 82.6319, 0.4848", "522.052, 93.4618, 81.7267, 0.3614", "522.455, 93.1314, 80.8212, 0.3038", "523.485, 92.6629, 80.218, 0.2818", "524.525, 92.19, 79.8666, 0.2876", "525.536, 91.6732, 79.6404, 0.2998", "526.542, 91.1527, 79.5021, 0.3162", "527.635, 90.9042, 79.5682, 0.3772", "528.729, 90.6557, 79.7516, 0.3408", "529.786, 90.4235, 79.9666, 0.3126", "530.801, 90.3396, 80.0377, 0.2992", "531.851, 90.7731, 80.1133, 0.3148", "532.862, 91.1539, 80.2858, 0.3748", "533.961, 91.4682, 80.4208, 0.3364", "535.072, 91.7448, 80.5395, 0.3048", "536.188, 91.9865, 80.6627, 0.2834", "537.325, 91.9762, 80.8268, 0.2908", "538.466, 91.9162, 81.0191, 0.3058", "539.557, 91.695, 81.2381, 0.3268", "540.523, 91.0845, 81.4929, 0.398", "541.504, 90.5807, 81.828, 0.3744", "542.516, 90.3344, 82.3351, 0.4004", "543.564, 90.098, 82.924, 0.337", "544.656, 89.8744, 83.5122, 0.3056", "545.76, 89.7902, 84.0675, 0.285", "546.881, 89.9273, 84.5555, 0.2938", "547.996, 90.0913, 84.9604, 0.3112", "549.08, 90.3936, 85.281, 0.3382", "550.156, 90.7223, 85.5224, 0.413", "551.182, 91.2084, 85.6038, 0.4328", "552.177, 91.7129, 85.5487, 0.3594", "553.021, 92.2413, 85.2958, 0.3002", "553.86, 92.8183, 85.0226, 0.275", "554.789, 92.942, 85.087, 0.2752", "555.859, 93.1777, 85.2446, 0.2758", "556.905, 93.3999, 85.4924, 0.2768", "557.88, 93.3999, 85.8886, 0.2796", "558.958, 93.6142, 86.1518, 0.2796", "559.5, 94.3937, 86.0647, 0.305", "560.49, 94.7734, 85.3695, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "502.16, 139.506, 74.051, 0.4198", "502.008, 139.364, 74.877, 0.2288", "501.497, 139.083, 76.9124, 0.2752", "501.474, 138.271, 77.8089, 0.2756", "501.474, 137.155, 78.6405, 0.2766", "501.474, 136.014, 79.3486, 0.2782", "501.804, 134.985, 80.0416, 0.2814", "502.177, 133.909, 80.6028, 0.287", "502.726, 132.92, 81.0592, 0.2988", "503.067, 131.829, 81.4187, 0.3142", "503.372, 130.744, 81.802, 0.3734", "503.763, 129.779, 82.2884, 0.3338", "503.763, 128.667, 82.7742, 0.3", "504.085, 127.611, 83.225, 0.2746", "504.837, 126.768, 83.578, 0.2746", "505.606, 125.924, 83.8631, 0.2746", "506.329, 125.043, 84.0974, 0.2746", "506.911, 124.06, 84.3122, 0.2746", "507.414, 123.118, 84.5452, 0.2746", "507.784, 122.077, 84.8364, 0.2746", "508.163, 121.838, 85.4739, 0.2746", "508.683, 120.857, 86.1076, 0.2746", "509.172, 120.114, 86.8274, 0.2746", "509.722, 119.122, 87.4485, 0.2746", "510.641, 118.495, 88.0186, 0.2746", "510.698, 117.49, 88.6124, 0.2746", "510.896, 116.528, 89.2256, 0.2746", "511.024, 115.448, 89.8727, 0.2746", "511.024, 114.507, 90.6391, 0.2748", "511.024, 113.902, 91.5849, 0.2748", "510.949, 112.769, 92.3126, 0.2752", "510.457, 111.801, 92.841, 0.2756", "510.07, 110.775, 93.2056, 0.2766", "509.673, 109.724, 93.4422, 0.2782", "509.013, 108.864, 93.623, 0.2814", "508.565, 107.875, 93.8286, 0.2872", "508.278, 106.8, 94.0069, 0.298", "508.067, 105.684, 94.1643, 0.3188", "507.571, 104.663, 94.3065, 0.3524", "507.501, 103.632, 94.5652, 0.4402", "507.606, 102.442, 94.6907, 0.478", "507.654, 101.313, 94.7982, 0.4686", "507.596, 100.321, 95.02, 0.3786", "507.427, 99.5515, 95.3246, 0.3366", "507.587, 98.8458, 95.2266, 0.3382", "507.256, 97.8265, 94.9402, 0.4126", "506.734, 96.9159, 94.5535, 0.4322", "506.051, 96.5638, 94.0117, 0.3584", "506.281, 96.0708, 93.3884, 0.2982", "505.812, 95.39, 93.1395, 0.2712", "505.407, 94.8058, 93.4405, 0.2684", "505.09, 94.3219, 94.1676, 0.2626", "504.442, 93.6752, 95.0009, 0.2542", "503.783, 93.0694, 95.7144, 0.2288", "504.22, 92.2161, 96.2749, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "488.139, 147.273, 73.7775, 0.2746", "488.302, 147.426, 71.7724, 0.2288", "487.944, 146.54, 72.4153, 0.2746", "487.507, 145.504, 72.7048, 0.2746", "487.07, 144.47, 73.078, 0.2746", "486.633, 143.435, 73.5123, 0.2746", "486.196, 142.399, 73.9866, 0.2746", "485.759, 141.364, 74.4808, 0.2744", "485.322, 140.33, 74.9756, 0.2744", "484.884, 139.295, 75.4572, 0.2742", "484.447, 138.259, 75.922, 0.274", "484.011, 137.225, 76.3669, 0.2736", "483.739, 136.126, 76.7564, 0.2728", "483.515, 135.008, 77.0949, 0.2712", "483.291, 133.89, 77.3884, 0.2684", "483.067, 132.773, 77.6429, 0.2626", "482.844, 131.656, 77.8646, 0.2542", "482.619, 130.538, 78.0601, 0.2288", "482.395, 129.421, 78.4372, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "488.139, 147.273, 73.7775, 0.2746", "488.139, 146.311, 74.4134, 0.2746", "488.139, 145.273, 75.1187, 0.2746", "488.152, 144.143, 75.7246, 0.2746", "488.321, 143.066, 76.1202, 0.2746", "488.402, 141.977, 76.5453, 0.2746", "488.139, 140.948, 77.0168, 0.2746", "488.139, 139.812, 77.4382, 0.2746", "488.139, 138.677, 77.8333, 0.2746", "488.24, 137.548, 78.2116, 0.2746", "488.438, 136.423, 78.5649, 0.2746", "488.718, 135.34, 78.8984, 0.2746", "489.329, 134.423, 79.2974, 0.2746", "488.885, 133.839, 79.5654, 0.2746", "489.032, 132.834, 80.0148, 0.2746", "489.425, 131.815, 80.4863, 0.2746", "490.054, 131.14, 80.9164, 0.2746", "490.354, 130.276, 81.4094, 0.2746", "490.585, 129.194, 81.965, 0.2746", "490.816, 128.113, 82.5756, 0.2746", "491.046, 127.032, 83.2045, 0.2746", "491.277, 125.95, 83.8662, 0.2746", "491.442, 124.862, 84.539, 0.2746", "491.241, 123.735, 85.1267, 0.2744", "491.066, 122.63, 85.7013, 0.2744", "490.989, 121.597, 86.4161, 0.2742", "490.912, 120.564, 87.241, 0.274", "490.836, 119.53, 88.1418, 0.2736", "490.759, 118.497, 89.0828, 0.2728", "490.682, 117.464, 90.0287, 0.2712", "490.606, 116.431, 90.9275, 0.2684", "490.625, 115.371, 91.6919, 0.2626", "490.866, 114.254, 92.2127, 0.2542", "491.109, 113.135, 92.5403, 0.2288", "491.35, 112.017, 92.8108, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_41", "dend_0", "dend_78", "dend_42", "dend_32", "dend_1", "dend_82", "dend_79", "dend_60", "dend_43", "dend_34", "dend_33", "dend_31", "dend_2", "dend_86", "dend_83", "dend_81", "dend_80", "dend_61", "dend_49", "dend_44", "dend_36", "dend_35", "dend_30", "dend_3", "dend_88", "dend_87", "dend_85", "dend_84", "dend_63", "dend_62", "dend_59", "dend_50", "dend_46", "dend_45", "dend_38", "dend_37", "dend_29", "dend_4", "dend_73", "dend_64", "dend_58", "dend_51", "dend_48", "dend_47", "dend_40", "dend_39", "dend_28", "dend_5", "dend_77", "dend_74", "dend_68", "dend_65", "dend_53", "dend_52", "dend_17", "dend_6", "dend_76", "dend_75", "dend_70", "dend_69", "dend_67", "dend_66", "dend_57", "dend_54", "dend_23", "dend_18", "dend_10", "dend_7", "dend_72", "dend_71", "dend_56", "dend_55", "dend_27", "dend_24", "dend_20", "dend_19", "dend_14", "dend_11", "dend_9", "dend_8", "dend_26", "dend_25", "dend_22", "dend_21", "dend_16", "dend_15", "dend_13", "dend_12" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7721",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_42", "dend_42", "dend_42", "dend_42", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_3", "dend_3", "dend_3", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.4398266"
  }, {
    "group" : "axon",
    "value" : "1.4398266"
  }, {
    "group" : "dend",
    "value" : "1.4398266"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "68.20407"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.00981202",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "1.1145826E-6",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.67052823",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "6.0456095E-8",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0027305123",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0035784903",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0019602315",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.10960685",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "6.384916E-4",
    "erev" : "-89.758575"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "1.6198946E-5",
    "erev" : "-89.758575"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.5611522E-7",
    "erev" : "-89.758575"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "4.6051663E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0075586685",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_479234506",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_479234506

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_78, id: dend_78, parent: dend_41
create dend_78
public dend_78
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_32, id: dend_32, parent: dend_0
create dend_32
public dend_32
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_82, id: dend_82, parent: dend_78
create dend_82
public dend_82
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_60, id: dend_60, parent: dend_42
create dend_60
public dend_60
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_1
create dend_31
public dend_31
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_86, id: dend_86, parent: dend_82
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_49, id: dend_49, parent: dend_43
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_2
create dend_30
public dend_30
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_88, id: dend_88, parent: dend_86
create dend_88
public dend_88
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_49
create dend_59
public dend_59
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_29, id: dend_29, parent: dend_3
create dend_29
public dend_29
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_73, id: dend_73, parent: dend_63
create dend_73
public dend_73
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_58, id: dend_58, parent: dend_50
create dend_58
public dend_58
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_4
create dend_28
public dend_28
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_68, id: dend_68, parent: dend_64
create dend_68
public dend_68
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_41, dend_0, dend_78, dend_42, dend_32, dend_1, dend_82, dend_79, dend_60, dend_43, dend_34, dend_33, dend_31, dend_2, dend_86, dend_83, dend_81, dend_80, dend_61, dend_49, dend_44, dend_36, dend_35, dend_30, dend_3, dend_88, dend_87, dend_85, dend_84, dend_63, dend_62, dend_59, dend_50, dend_46, dend_45, dend_38, dend_37, dend_29, dend_4, dend_73, dend_64, dend_58, dend_51, dend_48, dend_47, dend_40, dend_39, dend_28, dend_5, dend_77, dend_74, dend_68, dend_65, dend_53, dend_52, dend_17, dend_6, dend_76, dend_75, dend_70, dend_69, dend_67, dend_66, dend_57, dend_54, dend_23, dend_18, dend_10, dend_7, dend_72, dend_71, dend_56, dend_55, dend_27, dend_24, dend_20, dend_19, dend_14, dend_11, dend_9, dend_8, dend_26, dend_25, dend_22, dend_21, dend_16, dend_15, dend_13, dend_12]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_7721, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_7721
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_0, dend_0, dend_0, axon_1, axon_1, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_42, dend_42, dend_42, dend_42, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_3, dend_3, dend_3, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_479234506
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000753579502619)
    connect dend_41(0), soma_0(0.5000753579502619)
    connect dend_0(0), soma_0(0.5000753579502619)
    connect axon_1(0), axon_0(1.0)
    connect dend_78(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_32(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_82(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_60(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_86(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_49(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_88(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_59(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_29(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_73(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_58(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_28(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_68(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 388.817, 635.168, 25.0418, 6.6352 ) }
    soma_0 { pt3dadd( 392.135, 635.168, 25.0418, 6.6352 ) }
    soma_0 { pt3dadd( 395.452, 635.168, 25.0418, 6.6352 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 392.134, 635.168, 25.0418, 1.0 ) }
    axon_0 { pt3dadd( 397.976, 648.984, 25.0418, 1.0 ) }
    axon_0 { pt3dadd( 403.817, 662.8, 25.0418, 1.0 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 6/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 391.932, 638.894, 25.0418, 0.2288 ) }
    dend_41 { pt3dadd( 391.645, 640.002, 24.6403, 0.3756 ) }
    dend_41 { pt3dadd( 391.359, 641.109, 24.5072, 0.484 ) }
    dend_41 { pt3dadd( 391.06, 642.151, 24.2346, 0.5548 ) }
    dend_41 { pt3dadd( 390.76, 643.185, 23.853, 0.6326 ) }
    dend_41 { pt3dadd( 390.603, 644.272, 23.4742, 0.5786 ) }
    dend_41 { pt3dadd( 390.603, 645.416, 23.1899, 0.5248 ) }
    dend_41 { pt3dadd( 390.613, 646.56, 22.9945, 0.4302 ) }
    dend_41 { pt3dadd( 390.755, 647.695, 22.8819, 0.4578 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 15/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 392.613, 631.154, 25.0428, 0.9868 ) }
    dend_0 { pt3dadd( 392.749, 630.018, 25.0432, 0.2754 ) }
    dend_0 { pt3dadd( 392.884, 628.882, 25.0437, 0.276 ) }
    dend_0 { pt3dadd( 393.02, 627.746, 25.0445, 0.2772 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 19/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 403.817, 662.8, 25.0418, 1.0 ) }
    axon_1 { pt3dadd( 409.658, 676.616, 25.0418, 1.0 ) }
    axon_1 { pt3dadd( 415.5, 690.432, 25.0418, 1.0 ) }
    // Section: dend_78, id: dend_78, parent: dend_41 (entry count 22/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 390.755, 647.695, 22.8819, 0.4578 ) }
    dend_78 { pt3dadd( 391.684, 648.673, 22.7651, 0.2288 ) }
    dend_78 { pt3dadd( 392.47, 649.505, 22.6507, 0.6082 ) }
    dend_78 { pt3dadd( 393.379, 650.151, 22.6699, 0.6922 ) }
    dend_78 { pt3dadd( 394.324, 650.546, 22.6564, 0.6524 ) }
    dend_78 { pt3dadd( 395.05, 651.014, 22.3821, 0.6112 ) }
    dend_78 { pt3dadd( 395.884, 651.796, 22.1445, 0.6056 ) }
    dend_78 { pt3dadd( 396.656, 652.626, 21.9476, 0.71 ) }
    dend_78 { pt3dadd( 397.228, 653.609, 21.7993, 0.5754 ) }
    dend_78 { pt3dadd( 398.13, 654.168, 21.6965, 0.5462 ) }
    dend_78 { pt3dadd( 399.265, 654.204, 21.6482, 0.565 ) }
    dend_78 { pt3dadd( 400.404, 654.115, 21.6492, 0.475 ) }
    dend_78 { pt3dadd( 401.546, 654.151, 21.6556, 0.4564 ) }
    dend_78 { pt3dadd( 402.422, 654.836, 21.6671, 0.3884 ) }
    dend_78 { pt3dadd( 403.116, 655.744, 21.6851, 0.4262 ) }
    dend_78 { pt3dadd( 403.802, 656.659, 21.7087, 0.3856 ) }
    dend_78 { pt3dadd( 404.569, 657.506, 21.7356, 0.3916 ) }
    dend_78 { pt3dadd( 405.365, 658.328, 21.7641, 0.4654 ) }
    dend_78 { pt3dadd( 405.999, 659.252, 21.8556, 0.5258 ) }
    dend_78 { pt3dadd( 406.579, 660.209, 22.0098, 0.5528 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 42/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 390.755, 647.695, 22.8819, 0.4578 ) }
    dend_42 { pt3dadd( 389.598, 647.503, 22.8456, 0.4388 ) }
    dend_42 { pt3dadd( 388.583, 647.998, 22.8587, 0.5164 ) }
    dend_42 { pt3dadd( 388.166, 649.046, 22.8953, 0.569 ) }
    dend_42 { pt3dadd( 387.855, 650.136, 22.9416, 0.6526 ) }
    // Section: dend_32, id: dend_32, parent: dend_0 (entry count 47/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 393.02, 627.746, 25.0445, 0.2772 ) }
    dend_32 { pt3dadd( 393.186, 627.018, 25.0418, 0.2288 ) }
    dend_32 { pt3dadd( 393.152, 625.875, 25.043, 0.2808 ) }
    dend_32 { pt3dadd( 393.116, 624.732, 25.0435, 0.286 ) }
    dend_32 { pt3dadd( 393.081, 623.589, 25.0437, 0.296 ) }
    dend_32 { pt3dadd( 392.909, 622.462, 25.0443, 0.3136 ) }
    dend_32 { pt3dadd( 392.666, 621.344, 25.0471, 0.3502 ) }
    dend_32 { pt3dadd( 392.423, 620.227, 25.0505, 0.3988 ) }
    dend_32 { pt3dadd( 391.693, 619.426, 25.0489, 0.5816 ) }
    dend_32 { pt3dadd( 390.768, 618.753, 25.0349, 0.472 ) }
    dend_32 { pt3dadd( 390.438, 617.757, 25.0652, 0.3868 ) }
    dend_32 { pt3dadd( 390.322, 616.643, 25.1336, 0.342 ) }
    dend_32 { pt3dadd( 390.579, 615.563, 25.0927, 0.3962 ) }
    dend_32 { pt3dadd( 390.603, 614.486, 24.8624, 0.517 ) }
    dend_32 { pt3dadd( 390.367, 613.459, 24.513, 0.6418 ) }
    dend_32 { pt3dadd( 389.785, 612.539, 24.2365, 0.6684 ) }
    dend_32 { pt3dadd( 389.107, 611.833, 23.7649, 0.567 ) }
    dend_32 { pt3dadd( 388.309, 611.053, 23.3308, 0.4242 ) }
    dend_32 { pt3dadd( 387.296, 610.711, 23.1146, 0.3988 ) }
    dend_32 { pt3dadd( 386.489, 609.952, 22.8539, 0.334 ) }
    dend_32 { pt3dadd( 385.925, 609.157, 22.5085, 0.3 ) }
    dend_32 { pt3dadd( 385.566, 608.12, 22.3418, 0.2746 ) }
    dend_32 { pt3dadd( 385.497, 607.006, 22.2421, 0.2748 ) }
    dend_32 { pt3dadd( 385.002, 606.052, 22.0367, 0.2748 ) }
    dend_32 { pt3dadd( 384.292, 605.158, 21.8807, 0.275 ) }
    dend_32 { pt3dadd( 384.056, 604.038, 21.7858, 0.2754 ) }
    dend_32 { pt3dadd( 383.819, 602.919, 21.7232, 0.2762 ) }
    dend_32 { pt3dadd( 383.539, 601.822, 21.7041, 0.2778 ) }
    dend_32 { pt3dadd( 383.237, 600.738, 21.7489, 0.2804 ) }
    dend_32 { pt3dadd( 383.017, 599.636, 21.7415, 0.2856 ) }
    dend_32 { pt3dadd( 382.848, 598.521, 21.6112, 0.2948 ) }
    dend_32 { pt3dadd( 382.785, 597.401, 21.3812, 0.313 ) }
    dend_32 { pt3dadd( 382.818, 596.276, 21.0766, 0.3406 ) }
    dend_32 { pt3dadd( 382.3, 595.258, 20.7822, 0.422 ) }
    dend_32 { pt3dadd( 381.873, 594.22, 20.4789, 0.4272 ) }
    dend_32 { pt3dadd( 381.636, 593.14, 20.1301, 0.458 ) }
    dend_32 { pt3dadd( 381.562, 592.038, 19.8057, 0.6402 ) }
    dend_32 { pt3dadd( 381.727, 590.907, 19.5704, 0.6006 ) }
    dend_32 { pt3dadd( 381.891, 589.774, 19.407, 0.5272 ) }
    dend_32 { pt3dadd( 382.073, 588.653, 19.2527, 0.3926 ) }
    dend_32 { pt3dadd( 382.256, 587.532, 19.1136, 0.3628 ) }
    dend_32 { pt3dadd( 382.378, 586.405, 19.0644, 0.3864 ) }
    dend_32 { pt3dadd( 382.474, 585.274, 19.102, 0.5042 ) }
    dend_32 { pt3dadd( 382.881, 584.244, 19.1572, 0.593 ) }
    dend_32 { pt3dadd( 383.478, 583.272, 19.2009, 0.6992 ) }
    dend_32 { pt3dadd( 383.912, 582.213, 19.254, 0.7224 ) }
    dend_32 { pt3dadd( 384.344, 581.154, 19.3054, 0.6938 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 393.02, 627.746, 25.0445, 0.2772 ) }
    dend_1 { pt3dadd( 393.22, 627.23, 25.0456, 0.2796 ) }
    dend_1 { pt3dadd( 393.633, 626.164, 25.0471, 0.2838 ) }
    dend_1 { pt3dadd( 394.045, 625.096, 25.0492, 0.2914 ) }
    dend_1 { pt3dadd( 394.036, 623.953, 25.0522, 0.307 ) }
    dend_1 { pt3dadd( 394.028, 622.808, 25.0563, 0.3292 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 394.019, 621.664, 25.0621, 0.4026 ) }
    dend_1 { pt3dadd( 394.011, 620.521, 25.0702, 0.3826 ) }
    dend_1 { pt3dadd( 394.14, 619.41, 25.0816, 0.4158 ) }
    dend_1 { pt3dadd( 394.672, 618.397, 25.0971, 0.3652 ) }
    dend_1 { pt3dadd( 395.203, 617.385, 25.1191, 0.359 ) }
    dend_1 { pt3dadd( 395.503, 616.285, 25.1509, 0.3788 ) }
    dend_1 { pt3dadd( 395.76, 615.17, 25.1952, 0.4938 ) }
    dend_1 { pt3dadd( 396.017, 614.056, 25.2535, 0.5552 ) }
    dend_1 { pt3dadd( 396.274, 612.942, 25.3255, 0.7186 ) }
    dend_1 { pt3dadd( 396.236, 611.816, 25.4645, 1.0108 ) }
    dend_1 { pt3dadd( 396.157, 610.688, 25.6585, 1.1476 ) }
    dend_1 { pt3dadd( 396.098, 609.556, 25.8712, 1.0784 ) }
    dend_1 { pt3dadd( 396.098, 608.412, 26.0437, 0.915 ) }
    dend_1 { pt3dadd( 396.098, 607.268, 26.1811, 0.783 ) }
    dend_1 { pt3dadd( 396.098, 606.124, 26.2907, 0.852 ) }
    dend_1 { pt3dadd( 396.098, 604.98, 26.3836, 0.8308 ) }
    dend_1 { pt3dadd( 396.098, 603.836, 26.48, 0.8286 ) }
    dend_1 { pt3dadd( 396.268, 602.712, 26.597, 0.6444 ) }
    dend_1 { pt3dadd( 396.53, 601.599, 26.7441, 0.4902 ) }
    dend_1 { pt3dadd( 396.759, 600.513, 26.9747, 0.4388 ) }
    dend_1 { pt3dadd( 396.917, 599.487, 27.3834, 0.5782 ) }
    dend_1 { pt3dadd( 396.967, 598.418, 27.8499, 0.6132 ) }
    dend_1 { pt3dadd( 396.845, 597.281, 28.2425, 0.619 ) }
    dend_1 { pt3dadd( 396.723, 596.143, 28.5648, 0.688 ) }
    dend_1 { pt3dadd( 396.67, 595.014, 28.8694, 0.532 ) }
    dend_1 { pt3dadd( 396.625, 593.885, 29.1519, 0.4776 ) }
    dend_1 { pt3dadd( 396.838, 592.789, 29.3731, 0.3806 ) }
    dend_1 { pt3dadd( 397.235, 591.716, 29.5383, 0.412 ) }
    dend_1 { pt3dadd( 397.726, 590.69, 29.6797, 0.3582 ) }
    dend_1 { pt3dadd( 398.353, 589.734, 29.8026, 0.346 ) }
    dend_1 { pt3dadd( 399.047, 588.829, 29.9107, 0.3554 ) }
    dend_1 { pt3dadd( 399.842, 588.007, 30.0166, 0.4458 ) }
    dend_1 { pt3dadd( 400.552, 587.223, 30.2238, 0.4882 ) }
    dend_1 { pt3dadd( 401.135, 586.497, 30.6432, 0.4876 ) }
    // Section: dend_82, id: dend_82, parent: dend_78 (entry count 34/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 406.579, 660.209, 22.0098, 0.5528 ) }
    dend_82 { pt3dadd( 407.004, 661.584, 22.0272, 0.556 ) }
    dend_82 { pt3dadd( 407.364, 662.655, 21.9881, 0.5628 ) }
    dend_82 { pt3dadd( 407.789, 663.717, 21.9667, 0.5694 ) }
    dend_82 { pt3dadd( 408.206, 664.782, 21.9684, 0.6112 ) }
    dend_82 { pt3dadd( 408.567, 665.865, 22.0146, 0.5446 ) }
    dend_82 { pt3dadd( 408.929, 666.947, 22.1085, 0.4358 ) }
    dend_82 { pt3dadd( 409.34, 668.003, 22.2828, 0.3904 ) }
    dend_82 { pt3dadd( 409.759, 669.056, 22.4955, 0.4634 ) }
    dend_82 { pt3dadd( 410.33, 670.048, 22.6652, 0.5218 ) }
    dend_82 { pt3dadd( 410.901, 671.039, 22.7928, 0.5456 ) }
    dend_82 { pt3dadd( 411.392, 672.049, 22.9576, 0.5426 ) }
    dend_82 { pt3dadd( 411.885, 673.057, 23.1228, 0.537 ) }
    dend_82 { pt3dadd( 412.388, 674.065, 23.1531, 0.5258 ) }
    dend_82 { pt3dadd( 412.843, 675.098, 23.1061, 0.511 ) }
    dend_82 { pt3dadd( 413.191, 676.188, 23.0531, 0.4528 ) }
    dend_82 { pt3dadd( 413.499, 677.284, 23.0009, 0.4958 ) }
    dend_82 { pt3dadd( 413.499, 678.426, 22.9741, 0.5286 ) }
    dend_82 { pt3dadd( 413.287, 679.464, 23.0742, 0.5876 ) }
    dend_82 { pt3dadd( 412.965, 680.461, 23.0359, 0.4776 ) }
    dend_82 { pt3dadd( 412.307, 681.397, 23.0255, 0.424 ) }
    dend_82 { pt3dadd( 411.76, 682.391, 23.0503, 0.5094 ) }
    dend_82 { pt3dadd( 411.274, 683.418, 23.1082, 0.4578 ) }
    dend_82 { pt3dadd( 410.769, 684.439, 23.1206, 0.4656 ) }
    dend_82 { pt3dadd( 410.29, 685.47, 23.0789, 0.436 ) }
    dend_82 { pt3dadd( 409.965, 686.564, 23.0175, 0.3654 ) }
    dend_82 { pt3dadd( 409.711, 687.674, 22.9389, 0.3114 ) }
    dend_82 { pt3dadd( 409.546, 688.806, 22.8702, 0.2954 ) }
    dend_82 { pt3dadd( 409.382, 689.938, 22.8175, 0.3142 ) }
    dend_82 { pt3dadd( 409.377, 691.081, 22.7881, 0.3438 ) }
    dend_82 { pt3dadd( 409.377, 692.225, 22.7771, 0.4232 ) }
    dend_82 { pt3dadd( 409.357, 693.369, 22.777, 0.4516 ) }
    dend_82 { pt3dadd( 409.236, 694.506, 22.7814, 0.3954 ) }
    dend_82 { pt3dadd( 409.117, 695.645, 22.789, 0.3616 ) }
    dend_82 { pt3dadd( 408.984, 696.781, 22.7994, 0.415 ) }
    dend_82 { pt3dadd( 408.943, 697.92, 22.8109, 0.407 ) }
    dend_82 { pt3dadd( 409.196, 699.001, 22.822, 0.4554 ) }
    dend_82 { pt3dadd( 409.893, 699.896, 22.8431, 0.4656 ) }
    dend_82 { pt3dadd( 410.404, 700.821, 22.9435, 0.4146 ) }
    dend_82 { pt3dadd( 410.704, 701.913, 22.9511, 0.429 ) }
    dend_82 { pt3dadd( 411.01, 703.006, 22.908, 0.3848 ) }
    dend_82 { pt3dadd( 411.324, 704.107, 22.8673, 0.4196 ) }
    dend_82 { pt3dadd( 411.642, 705.205, 22.8295, 0.3732 ) }
    dend_82 { pt3dadd( 412.011, 706.288, 22.795, 0.3688 ) }
    dend_82 { pt3dadd( 412.38, 707.371, 22.7657, 0.4224 ) }
    dend_82 { pt3dadd( 412.796, 708.436, 22.7555, 0.45 ) }
    dend_82 { pt3dadd( 413.222, 709.498, 22.7517, 0.3924 ) }
    dend_82 { pt3dadd( 413.708, 710.533, 22.7463, 0.356 ) }
    dend_82 { pt3dadd( 414.22, 711.557, 22.7387, 0.4038 ) }
    dend_82 { pt3dadd( 414.626, 712.622, 22.7282, 0.391 ) }
    dend_82 { pt3dadd( 414.967, 713.714, 22.7139, 0.4016 ) }
    dend_82 { pt3dadd( 415.268, 714.816, 22.6934, 0.484 ) }
    dend_82 { pt3dadd( 415.506, 715.935, 22.6636, 0.5608 ) }
    dend_82 { pt3dadd( 415.747, 717.054, 22.6224, 0.614 ) }
    dend_82 { pt3dadd( 416.2, 718.104, 22.5691, 0.6884 ) }
    dend_82 { pt3dadd( 416.654, 719.154, 22.5044, 0.7152 ) }
    dend_82 { pt3dadd( 416.897, 720.253, 22.3696, 0.6186 ) }
    dend_82 { pt3dadd( 417.113, 721.359, 22.1799, 0.6916 ) }
    dend_82 { pt3dadd( 417.431, 722.453, 22.006, 0.7478 ) }
    dend_82 { pt3dadd( 417.779, 723.542, 21.8677, 0.7776 ) }
    dend_82 { pt3dadd( 418.077, 724.646, 21.7707, 0.7366 ) }
    dend_82 { pt3dadd( 418.339, 725.759, 21.7171, 0.6706 ) }
    dend_82 { pt3dadd( 418.621, 726.868, 21.7045, 0.4986 ) }
    dend_82 { pt3dadd( 418.961, 727.959, 21.7194, 0.4208 ) }
    dend_82 { pt3dadd( 419.305, 729.051, 21.7466, 0.4788 ) }
    dend_82 { pt3dadd( 419.754, 730.101, 21.8037, 0.5206 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_82 { pt3dadd( 420.204, 731.15, 21.8772, 0.6884 ) }
    dend_82 { pt3dadd( 420.506, 732.246, 21.9733, 0.79 ) }
    dend_82 { pt3dadd( 420.806, 733.342, 22.0781, 0.8506 ) }
    dend_82 { pt3dadd( 421.109, 734.427, 22.0706, 0.8982 ) }
    dend_82 { pt3dadd( 421.411, 735.511, 21.9698, 0.843 ) }
    dend_82 { pt3dadd( 421.894, 736.545, 21.8796, 0.7494 ) }
    dend_82 { pt3dadd( 422.206, 737.618, 21.8039, 0.7626 ) }
    dend_82 { pt3dadd( 422.224, 738.762, 21.7346, 0.795 ) }
    dend_82 { pt3dadd( 422.244, 739.906, 21.6808, 0.8178 ) }
    dend_82 { pt3dadd( 422.498, 741.009, 21.6546, 0.8126 ) }
    dend_82 { pt3dadd( 422.866, 742.091, 21.6445, 0.8034 ) }
    dend_82 { pt3dadd( 423.162, 743.194, 21.6366, 0.7852 ) }
    dend_82 { pt3dadd( 423.375, 744.317, 21.6317, 0.7564 ) }
    dend_82 { pt3dadd( 423.573, 745.443, 21.6303, 0.6798 ) }
    dend_82 { pt3dadd( 423.573, 746.587, 21.631, 0.6494 ) }
    dend_82 { pt3dadd( 423.573, 747.731, 21.6327, 0.7388 ) }
    dend_82 { pt3dadd( 423.708, 748.843, 21.635, 0.6532 ) }
    dend_82 { pt3dadd( 424.22, 749.867, 21.6382, 0.5718 ) }
    dend_82 { pt3dadd( 424.662, 750.91, 21.6427, 0.5024 ) }
    dend_82 { pt3dadd( 424.782, 752.047, 21.6489, 0.436 ) }
    dend_82 { pt3dadd( 424.902, 753.186, 21.6577, 0.4684 ) }
    dend_82 { pt3dadd( 425.161, 754.294, 21.6701, 0.4596 ) }
    dend_82 { pt3dadd( 425.503, 755.385, 21.6871, 0.549 ) }
    dend_82 { pt3dadd( 425.876, 756.467, 21.7107, 0.6598 ) }
    dend_82 { pt3dadd( 426.3, 757.528, 21.7446, 0.6734 ) }
    dend_82 { pt3dadd( 426.705, 758.598, 21.793, 0.715 ) }
    dend_82 { pt3dadd( 427.047, 759.69, 21.8587, 0.7114 ) }
    dend_82 { pt3dadd( 427.388, 760.782, 21.9437, 0.641 ) }
    dend_82 { pt3dadd( 427.599, 761.798, 22.0623, 0.589 ) }
    dend_82 { pt3dadd( 427.694, 762.892, 22.2842, 0.5708 ) }
    dend_82 { pt3dadd( 427.482, 763.982, 22.5579, 0.614 ) }
    dend_82 { pt3dadd( 427.022, 765.025, 22.8127, 0.5494 ) }
    dend_82 { pt3dadd( 426.594, 766.069, 23.0593, 0.4458 ) }
    dend_82 { pt3dadd( 426.457, 767.19, 23.3441, 0.4036 ) }
    dend_82 { pt3dadd( 426.32, 768.31, 23.6468, 0.5126 ) }
    dend_82 { pt3dadd( 426.098, 769.071, 23.9508, 0.4936 ) }
    dend_82 { pt3dadd( 425.785, 770.14, 24.2736, 0.3874 ) }
    dend_82 { pt3dadd( 425.387, 771.202, 24.519, 0.305 ) }
    dend_82 { pt3dadd( 424.962, 772.265, 24.655, 0.284 ) }
    dend_82 { pt3dadd( 424.553, 773.286, 24.7703, 0.2918 ) }
    dend_82 { pt3dadd( 424.488, 774.401, 24.8175, 0.3076 ) }
    dend_82 { pt3dadd( 424.641, 775.433, 24.6068, 0.3306 ) }
    dend_82 { pt3dadd( 424.947, 776.043, 24.1823, 0.404 ) }
    dend_82 { pt3dadd( 424.794, 776.501, 23.6771, 0.3912 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 44/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 406.579, 660.209, 22.0098, 0.5528 ) }
    dend_79 { pt3dadd( 406.297, 659.468, 22.2516, 0.2288 ) }
    dend_79 { pt3dadd( 406.7, 658.518, 21.6644, 0.2754 ) }
    dend_79 { pt3dadd( 407.668, 657.961, 21.454, 0.276 ) }
    dend_79 { pt3dadd( 408.789, 658.084, 21.2422, 0.2774 ) }
    dend_79 { pt3dadd( 409.779, 658.597, 20.9764, 0.2798 ) }
    dend_79 { pt3dadd( 410.659, 658.621, 20.5208, 0.2844 ) }
    dend_79 { pt3dadd( 411.249, 657.791, 20.1736, 0.2926 ) }
    dend_79 { pt3dadd( 412.09, 657.078, 19.9047, 0.309 ) }
    dend_79 { pt3dadd( 413.073, 657.292, 19.5119, 0.3332 ) }
    dend_79 { pt3dadd( 414.03, 657.872, 19.1732, 0.4084 ) }
    dend_79 { pt3dadd( 415.137, 657.883, 18.8173, 0.4008 ) }
    dend_79 { pt3dadd( 416.092, 657.461, 18.3966, 0.4134 ) }
    dend_79 { pt3dadd( 416.704, 656.546, 17.9512, 0.5368 ) }
    // Section: dend_60, id: dend_60, parent: dend_42 (entry count 58/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 387.855, 650.136, 22.9416, 0.6526 ) }
    dend_60 { pt3dadd( 387.866, 651.162, 22.7651, 0.4576 ) }
    dend_60 { pt3dadd( 387.987, 652.301, 22.7026, 0.5578 ) }
    dend_60 { pt3dadd( 388.107, 653.439, 22.6774, 0.529 ) }
    dend_60 { pt3dadd( 388.226, 654.576, 22.642, 0.6882 ) }
    dend_60 { pt3dadd( 388.346, 655.714, 22.5939, 0.6374 ) }
    dend_60 { pt3dadd( 388.466, 656.852, 22.5318, 0.6208 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 65/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 387.855, 650.136, 22.9416, 0.6526 ) }
    dend_43 { pt3dadd( 386.433, 650.387, 23.0259, 0.6466 ) }
    dend_43 { pt3dadd( 385.309, 650.586, 23.1288, 0.501 ) }
    dend_43 { pt3dadd( 384.249, 650.989, 23.2689, 0.4278 ) }
    dend_43 { pt3dadd( 383.194, 651.401, 23.426, 0.4796 ) }
    dend_43 { pt3dadd( 382.367, 652.189, 23.5255, 0.5814 ) }
    dend_43 { pt3dadd( 381.546, 652.985, 23.5676, 0.5126 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 72/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 384.344, 581.154, 19.3054, 0.6938 ) }
    dend_34 { pt3dadd( 384.756, 580.127, 19.3363, 0.53 ) }
    dend_34 { pt3dadd( 385.18, 579.065, 19.3531, 0.5358 ) }
    dend_34 { pt3dadd( 385.358, 577.942, 19.3671, 0.4166 ) }
    dend_34 { pt3dadd( 385.478, 576.804, 19.3818, 0.3698 ) }
    dend_34 { pt3dadd( 385.615, 575.669, 19.3976, 0.3524 ) }
    dend_34 { pt3dadd( 385.804, 574.54, 19.4153, 0.4402 ) }
    dend_34 { pt3dadd( 385.991, 573.412, 19.4353, 0.478 ) }
    dend_34 { pt3dadd( 386.188, 572.286, 19.4764, 0.469 ) }
    dend_34 { pt3dadd( 386.386, 571.161, 19.5366, 0.3792 ) }
    dend_34 { pt3dadd( 386.481, 570.035, 19.6327, 0.337 ) }
    dend_34 { pt3dadd( 386.608, 568.948, 19.6336, 0.3438 ) }
    dend_34 { pt3dadd( 387.092, 567.929, 19.6151, 0.3994 ) }
    dend_34 { pt3dadd( 387.178, 567.13, 19.6279, 0.5228 ) }
    dend_34 { pt3dadd( 387.33, 566.002, 19.6705, 0.6524 ) }
    dend_34 { pt3dadd( 387.6, 564.974, 19.7722, 0.6896 ) }
    dend_34 { pt3dadd( 387.721, 564.052, 19.8043, 0.6 ) }
    dend_34 { pt3dadd( 387.934, 563.031, 19.7243, 0.517 ) }
    dend_34 { pt3dadd( 388.395, 562.093, 19.7519, 0.416 ) }
    dend_34 { pt3dadd( 388.916, 561.224, 19.7715, 0.4316 ) }
    dend_34 { pt3dadd( 389.467, 560.253, 19.7467, 0.3892 ) }
    dend_34 { pt3dadd( 389.982, 559.288, 19.8366, 0.429 ) }
    dend_34 { pt3dadd( 390.235, 558.193, 19.9588, 0.3846 ) }
    dend_34 { pt3dadd( 390.484, 557.153, 20.1865, 0.4194 ) }
    dend_34 { pt3dadd( 391.049, 556.288, 20.5053, 0.3728 ) }
    dend_34 { pt3dadd( 392.004, 555.732, 20.7054, 0.368 ) }
    dend_34 { pt3dadd( 392.884, 555.031, 20.8624, 0.421 ) }
    dend_34 { pt3dadd( 393.576, 554.126, 20.9859, 0.4474 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( 394.248, 553.212, 21.1207, 0.3878 ) }
    dend_34 { pt3dadd( 395.031, 552.387, 21.23, 0.3474 ) }
    dend_34 { pt3dadd( 395.826, 551.578, 21.2669, 0.3878 ) }
    dend_34 { pt3dadd( 396.769, 550.94, 21.3118, 0.3618 ) }
    dend_34 { pt3dadd( 397.772, 550.405, 21.38, 0.3466 ) }
    dend_34 { pt3dadd( 398.843, 550.063, 21.512, 0.3862 ) }
    dend_34 { pt3dadd( 399.709, 549.384, 21.6746, 0.3586 ) }
    dend_34 { pt3dadd( 400.297, 548.421, 21.8587, 0.3404 ) }
    dend_34 { pt3dadd( 400.812, 547.418, 21.9726, 0.375 ) }
    dend_34 { pt3dadd( 401.258, 546.373, 22.0269, 0.337 ) }
    dend_34 { pt3dadd( 401.556, 545.274, 22.0591, 0.3058 ) }
    dend_34 { pt3dadd( 401.762, 544.155, 22.049, 0.2852 ) }
    dend_34 { pt3dadd( 402.068, 543.083, 22.0326, 0.2942 ) }
    dend_34 { pt3dadd( 402.465, 542.04, 22.1173, 0.312 ) }
    dend_34 { pt3dadd( 402.831, 540.975, 22.2503, 0.3386 ) }
    dend_34 { pt3dadd( 403.38, 539.976, 22.365, 0.4198 ) }
    dend_34 { pt3dadd( 404.06, 539.056, 22.4599, 0.4156 ) }
    dend_34 { pt3dadd( 404.698, 538.114, 22.5372, 0.4728 ) }
    dend_34 { pt3dadd( 405.181, 537.078, 22.5935, 0.491 ) }
    dend_34 { pt3dadd( 405.564, 536.003, 22.6291, 0.4938 ) }
    dend_34 { pt3dadd( 405.82, 534.89, 22.6689, 0.4202 ) }
    dend_34 { pt3dadd( 406.015, 533.784, 22.7849, 0.4392 ) }
    dend_34 { pt3dadd( 406.277, 532.694, 22.8499, 0.4044 ) }
    dend_34 { pt3dadd( 406.565, 531.66, 22.8782, 0.4508 ) }
    dend_34 { pt3dadd( 407.134, 530.592, 22.93, 0.457 ) }
    dend_34 { pt3dadd( 407.048, 529.489, 23.0398, 0.3988 ) }
    dend_34 { pt3dadd( 407.175, 528.367, 23.1532, 0.399 ) }
    dend_34 { pt3dadd( 407.175, 527.24, 23.3141, 0.334 ) }
    dend_34 { pt3dadd( 407.448, 526.171, 23.5082, 0.3002 ) }
    dend_34 { pt3dadd( 407.737, 525.249, 23.4652, 0.275 ) }
    dend_34 { pt3dadd( 408.159, 524.289, 23.4732, 0.2754 ) }
    dend_34 { pt3dadd( 408.565, 523.242, 23.546, 0.2762 ) }
    dend_34 { pt3dadd( 408.957, 522.171, 23.6098, 0.2774 ) }
    dend_34 { pt3dadd( 409.532, 521.279, 23.7346, 0.28 ) }
    dend_34 { pt3dadd( 409.693, 520.492, 23.6776, 0.2846 ) }
    dend_34 { pt3dadd( 409.778, 519.455, 23.692, 0.2932 ) }
    dend_34 { pt3dadd( 409.548, 518.718, 23.957, 0.3086 ) }
    dend_34 { pt3dadd( 409.844, 517.681, 24.1674, 0.3396 ) }
    dend_34 { pt3dadd( 410.088, 516.59, 24.3461, 0.3856 ) }
    dend_34 { pt3dadd( 410.309, 515.485, 24.5441, 0.5262 ) }
    dend_34 { pt3dadd( 410.225, 514.405, 24.8168, 0.5196 ) }
    dend_34 { pt3dadd( 410.379, 513.648, 25.2116, 0.4306 ) }
    dend_34 { pt3dadd( 410.379, 512.947, 25.1423, 0.4108 ) }
    dend_34 { pt3dadd( 410.17, 511.866, 25.051, 0.356 ) }
    dend_34 { pt3dadd( 410.15, 510.764, 25.0323, 0.3406 ) }
    dend_34 { pt3dadd( 410.15, 509.802, 25.1842, 0.3516 ) }
    dend_34 { pt3dadd( 409.76, 508.834, 25.2627, 0.409 ) }
    dend_34 { pt3dadd( 410.186, 508.012, 25.1022, 0.5644 ) }
    dend_34 { pt3dadd( 410.378, 506.896, 25.0089, 0.615 ) }
    dend_34 { pt3dadd( 410.379, 506.229, 24.6422, 0.4898 ) }
    dend_34 { pt3dadd( 410.609, 505.267, 24.5353, 0.4042 ) }
    dend_34 { pt3dadd( 410.609, 504.275, 24.6947, 0.4496 ) }
    dend_34 { pt3dadd( 410.624, 503.245, 25.0365, 0.4594 ) }
    dend_34 { pt3dadd( 410.838, 502.264, 25.3613, 0.6094 ) }
    dend_34 { pt3dadd( 410.697, 501.231, 25.6996, 0.476 ) }
    dend_34 { pt3dadd( 410.838, 500.129, 25.8803, 0.3952 ) }
    dend_34 { pt3dadd( 411.01, 499.012, 26.0087, 0.3526 ) }
    dend_34 { pt3dadd( 411.403, 497.965, 26.0278, 0.4406 ) }
    dend_34 { pt3dadd( 411.543, 496.95, 25.9262, 0.4788 ) }
    dend_34 { pt3dadd( 411.854, 496.08, 25.8525, 0.4702 ) }
    dend_34 { pt3dadd( 411.947, 495.011, 25.8275, 0.3814 ) }
    dend_34 { pt3dadd( 412.211, 494.073, 25.6135, 0.342 ) }
    dend_34 { pt3dadd( 412.001, 493.134, 25.3367, 0.3476 ) }
    dend_34 { pt3dadd( 411.649, 492.495, 25.3315, 0.4348 ) }
    dend_34 { pt3dadd( 411.524, 491.684, 25.116, 0.4504 ) }
    dend_34 { pt3dadd( 411.695, 490.666, 25.0163, 0.5022 ) }
    dend_34 { pt3dadd( 412.174, 489.979, 25.1567, 0.7174 ) }
    dend_34 { pt3dadd( 412.427, 488.869, 25.2789, 0.7654 ) }
    dend_34 { pt3dadd( 412.249, 487.751, 25.3055, 0.7288 ) }
    dend_34 { pt3dadd( 411.836, 486.692, 25.2603, 0.5848 ) }
    dend_34 { pt3dadd( 411.296, 485.794, 25.2838, 0.4566 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 71/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 384.344, 581.154, 19.3054, 0.6938 ) }
    dend_33 { pt3dadd( 383.657, 580.088, 18.5808, 0.2288 ) }
    dend_33 { pt3dadd( 383.215, 579.102, 17.6334, 0.2782 ) }
    dend_33 { pt3dadd( 382.922, 578.031, 17.2294, 0.2814 ) }
    dend_33 { pt3dadd( 383.291, 577.014, 16.7868, 0.287 ) }
    dend_33 { pt3dadd( 383.868, 576.105, 16.2894, 0.2988 ) }
    dend_33 { pt3dadd( 384.102, 575.024, 15.8702, 0.3142 ) }
    dend_33 { pt3dadd( 383.196, 574.592, 15.4235, 0.3738 ) }
    dend_33 { pt3dadd( 382.529, 573.866, 15.0032, 0.3344 ) }
    dend_33 { pt3dadd( 382.753, 572.758, 14.6685, 0.3012 ) }
    dend_33 { pt3dadd( 382.799, 571.662, 14.3229, 0.2766 ) }
    dend_33 { pt3dadd( 383.004, 570.577, 13.9447, 0.2784 ) }
    dend_33 { pt3dadd( 383.652, 569.653, 13.5702, 0.2818 ) }
    dend_33 { pt3dadd( 384.169, 568.724, 13.3125, 0.288 ) }
    dend_33 { pt3dadd( 384.192, 567.593, 13.1226, 0.3004 ) }
    dend_33 { pt3dadd( 384.65, 566.86, 12.8018, 0.3172 ) }
    dend_33 { pt3dadd( 384.981, 566.711, 12.5326, 0.3792 ) }
    dend_33 { pt3dadd( 386.037, 566.288, 12.2891, 0.3446 ) }
    dend_33 { pt3dadd( 387.01, 565.838, 11.9876, 0.3198 ) }
    dend_33 { pt3dadd( 387.618, 564.935, 11.5969, 0.3124 ) }
    dend_33 { pt3dadd( 388.021, 563.953, 11.1216, 0.339 ) }
    dend_33 { pt3dadd( 388.38, 562.886, 10.7011, 0.4218 ) }
    dend_33 { pt3dadd( 388.775, 561.821, 10.3917, 0.4128 ) }
    dend_33 { pt3dadd( 389.238, 560.788, 10.1796, 0.4976 ) }
    dend_33 { pt3dadd( 389.748, 559.78, 9.9622, 0.393 ) }
    dend_33 { pt3dadd( 390.128, 558.739, 9.6911, 0.3248 ) }
    dend_33 { pt3dadd( 390.535, 557.748, 9.3487, 0.2736 ) }
    dend_33 { pt3dadd( 391.264, 556.959, 8.9323, 0.2728 ) }
    dend_33 { pt3dadd( 391.383, 555.871, 8.5547, 0.2712 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( 391.459, 554.768, 8.3169, 0.2684 ) }
    dend_33 { pt3dadd( 391.34, 553.639, 8.1517, 0.2626 ) }
    dend_33 { pt3dadd( 391.234, 552.526, 8.0423, 0.2542 ) }
    dend_33 { pt3dadd( 391.447, 551.405, 7.9554, 0.2288 ) }
    dend_33 { pt3dadd( 391.841, 550.551, 7.3192, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_1 (entry count 5/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 401.135, 586.497, 30.6432, 0.4876 ) }
    dend_31 { pt3dadd( 401.135, 586.174, 34.2714, 0.2288 ) }
    dend_31 { pt3dadd( 401.135, 585.817, 36.0268, 0.2728 ) }
    dend_31 { pt3dadd( 401.496, 585.707, 36.822, 0.2712 ) }
    dend_31 { pt3dadd( 402.481, 586.243, 37.4156, 0.2684 ) }
    dend_31 { pt3dadd( 403.469, 586.74, 37.8227, 0.2626 ) }
    dend_31 { pt3dadd( 404.569, 586.55, 38.045, 0.2542 ) }
    dend_31 { pt3dadd( 405.53, 586.353, 37.9733, 0.2288 ) }
    dend_31 { pt3dadd( 406.63, 586.038, 37.5626, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 14/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 401.135, 586.497, 30.6432, 0.4876 ) }
    dend_2 { pt3dadd( 402.017, 585.386, 30.8134, 0.4144 ) }
    dend_2 { pt3dadd( 402.782, 584.547, 30.9411, 0.399 ) }
    dend_2 { pt3dadd( 403.479, 583.656, 31.085, 0.4734 ) }
    dend_2 { pt3dadd( 404.07, 582.696, 31.2043, 0.5698 ) }
    dend_2 { pt3dadd( 404.519, 581.644, 31.2598, 0.4916 ) }
    dend_2 { pt3dadd( 404.949, 580.589, 31.2514, 0.4498 ) }
    dend_2 { pt3dadd( 405.359, 579.533, 31.2074, 0.558 ) }
    dend_2 { pt3dadd( 405.736, 578.459, 31.1503, 0.5438 ) }
    dend_2 { pt3dadd( 406.078, 577.368, 31.1172, 0.6446 ) }
    dend_2 { pt3dadd( 406.41, 576.28, 31.1399, 0.6718 ) }
    dend_2 { pt3dadd( 406.717, 575.203, 31.2715, 0.583 ) }
    dend_2 { pt3dadd( 406.99, 574.112, 31.4558, 0.637 ) }
    dend_2 { pt3dadd( 407.178, 572.983, 31.6081, 0.5902 ) }
    dend_2 { pt3dadd( 407.366, 571.855, 31.7192, 0.7588 ) }
    dend_2 { pt3dadd( 407.806, 570.805, 31.787, 0.7466 ) }
    dend_2 { pt3dadd( 408.289, 569.767, 31.813, 0.7004 ) }
    dend_2 { pt3dadd( 408.728, 568.711, 31.8055, 0.5004 ) }
    dend_2 { pt3dadd( 409.153, 567.649, 31.782, 0.4552 ) }
    dend_2 { pt3dadd( 409.67, 566.631, 31.7514, 0.392 ) }
    dend_2 { pt3dadd( 409.661, 565.554, 31.6862, 0.4046 ) }
    dend_2 { pt3dadd( 409.54, 564.436, 31.5986, 0.4846 ) }
    dend_2 { pt3dadd( 409.727, 563.311, 31.533, 0.5858 ) }
    dend_2 { pt3dadd( 410.011, 562.214, 31.493, 0.5444 ) }
    dend_2 { pt3dadd( 410.177, 561.102, 31.3463, 0.4366 ) }
    // Section: dend_86, id: dend_86, parent: dend_82 (entry count 39/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 424.794, 776.501, 23.6771, 0.3912 ) }
    dend_86 { pt3dadd( 424.54, 777.136, 22.7651, 0.2288 ) }
    dend_86 { pt3dadd( 424.896, 777.637, 24.0457, 0.3064 ) }
    dend_86 { pt3dadd( 424.281, 778.032, 24.6169, 0.3282 ) }
    dend_86 { pt3dadd( 423.908, 779.029, 25.2405, 0.4004 ) }
    dend_86 { pt3dadd( 423.247, 779.927, 25.796, 0.3788 ) }
    dend_86 { pt3dadd( 422.478, 780.773, 26.2453, 0.4088 ) }
    dend_86 { pt3dadd( 421.881, 781.716, 26.6561, 0.3524 ) }
    dend_86 { pt3dadd( 421.382, 782.713, 27.0524, 0.3338 ) }
    dend_86 { pt3dadd( 421.094, 783.801, 27.414, 0.3392 ) }
    dend_86 { pt3dadd( 420.858, 784.911, 27.7498, 0.3848 ) }
    dend_86 { pt3dadd( 420.496, 785.978, 28.084, 0.5248 ) }
    dend_86 { pt3dadd( 420.109, 787.051, 28.3676, 0.5162 ) }
    dend_86 { pt3dadd( 419.553, 788.049, 28.6017, 0.429 ) }
    dend_86 { pt3dadd( 418.499, 788.493, 28.807, 0.3838 ) }
    dend_86 { pt3dadd( 417.586, 789.061, 28.9159, 0.4212 ) }
    dend_86 { pt3dadd( 416.939, 789.857, 29.1984, 0.588 ) }
    dend_86 { pt3dadd( 416.99, 790.809, 29.6696, 0.6546 ) }
    dend_86 { pt3dadd( 417.017, 791.851, 30.2568, 0.5824 ) }
    dend_86 { pt3dadd( 416.172, 792.562, 30.791, 0.4836 ) }
    dend_86 { pt3dadd( 415.248, 793.116, 31.3748, 0.3594 ) }
    dend_86 { pt3dadd( 414.487, 793.798, 32.0656, 0.3 ) }
    dend_86 { pt3dadd( 413.428, 793.899, 32.5632, 0.2746 ) }
    dend_86 { pt3dadd( 412.353, 794.191, 32.9524, 0.2746 ) }
    dend_86 { pt3dadd( 411.275, 794.07, 33.4407, 0.2746 ) }
    dend_86 { pt3dadd( 410.6, 794.184, 34.1673, 0.2746 ) }
    dend_86 { pt3dadd( 409.86, 795.013, 34.818, 0.2746 ) }
    dend_86 { pt3dadd( 409.398, 796.025, 35.3651, 0.2746 ) }
    dend_86 { pt3dadd( 409.377, 797.16, 35.9033, 0.2746 ) }
    dend_86 { pt3dadd( 409.335, 798.261, 36.486, 0.2746 ) }
    dend_86 { pt3dadd( 408.935, 799.316, 37.0042, 0.2746 ) }
    dend_86 { pt3dadd( 408.222, 800.159, 37.5136, 0.2746 ) }
    dend_86 { pt3dadd( 407.448, 800.723, 38.2169, 0.2746 ) }
    dend_86 { pt3dadd( 406.744, 801.278, 39.0592, 0.2746 ) }
    dend_86 { pt3dadd( 406.63, 802.009, 40.0123, 0.2746 ) }
    dend_86 { pt3dadd( 406.63, 803.086, 40.7299, 0.2746 ) }
    dend_86 { pt3dadd( 406.222, 804.126, 41.2969, 0.2746 ) }
    dend_86 { pt3dadd( 405.787, 805.172, 41.736, 0.2746 ) }
    dend_86 { pt3dadd( 405.541, 806.289, 42.0154, 0.2746 ) }
    dend_86 { pt3dadd( 405.295, 807.406, 42.1736, 0.2748 ) }
    dend_86 { pt3dadd( 405.047, 808.42, 42.3836, 0.275 ) }
    dend_86 { pt3dadd( 404.798, 809.416, 42.67, 0.2754 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 81/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 424.794, 776.501, 23.6771, 0.3912 ) }
    dend_83 { pt3dadd( 424.725, 777.029, 23.1976, 0.403 ) }
    dend_83 { pt3dadd( 424.581, 778.132, 22.7088, 0.4818 ) }
    dend_83 { pt3dadd( 424.42, 779.244, 22.2838, 0.5806 ) }
    dend_83 { pt3dadd( 424.228, 780.37, 21.9979, 0.5348 ) }
    dend_83 { pt3dadd( 424.038, 781.498, 21.8165, 0.4178 ) }
    dend_83 { pt3dadd( 423.849, 782.628, 21.7103, 0.356 ) }
    dend_83 { pt3dadd( 423.661, 783.755, 21.6534, 0.405 ) }
    dend_83 { pt3dadd( 423.573, 784.893, 21.6324, 0.3872 ) }
    dend_83 { pt3dadd( 423.573, 786.037, 21.6273, 0.4246 ) }
    dend_83 { pt3dadd( 423.573, 787.181, 21.6252, 0.3812 ) }
    dend_83 { pt3dadd( 423.66, 788.32, 21.6245, 0.3892 ) }
    dend_83 { pt3dadd( 423.78, 789.457, 21.6235, 0.4316 ) }
    dend_83 { pt3dadd( 423.981, 790.568, 21.6222, 0.607 ) }
    dend_83 { pt3dadd( 424.552, 791.56, 21.6203, 0.691 ) }
    dend_83 { pt3dadd( 425.086, 792.567, 21.6177, 0.6444 ) }
    dend_83 { pt3dadd( 425.374, 793.674, 21.614, 0.625 ) }
    dend_83 { pt3dadd( 425.662, 794.781, 21.6088, 0.4932 ) }
    dend_83 { pt3dadd( 426.136, 795.819, 21.6016, 0.484 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_83 { pt3dadd( 426.647, 796.842, 21.592, 0.4712 ) }
    dend_83 { pt3dadd( 427.158, 797.866, 21.5777, 0.425 ) }
    dend_83 { pt3dadd( 427.612, 798.915, 21.5562, 0.448 ) }
    dend_83 { pt3dadd( 427.551, 800.048, 21.5288, 0.422 ) }
    dend_83 { pt3dadd( 427.257, 801.152, 21.4955, 0.4784 ) }
    dend_83 { pt3dadd( 426.719, 802.16, 21.4559, 0.5324 ) }
    dend_83 { pt3dadd( 426.06, 803.029, 21.3369, 0.42 ) }
    dend_83 { pt3dadd( 425.48, 803.972, 21.1915, 0.3282 ) }
    dend_83 { pt3dadd( 424.995, 804.944, 21.1757, 0.2796 ) }
    dend_83 { pt3dadd( 424.914, 806.072, 21.1216, 0.2838 ) }
    dend_83 { pt3dadd( 424.94, 807.212, 21.025, 0.2918 ) }
    dend_83 { pt3dadd( 424.947, 808.322, 20.8291, 0.3066 ) }
    dend_83 { pt3dadd( 425.059, 809.449, 20.633, 0.3346 ) }
    dend_83 { pt3dadd( 425.514, 810.477, 20.4532, 0.3824 ) }
    dend_83 { pt3dadd( 426.311, 811.289, 20.2779, 0.4908 ) }
    dend_83 { pt3dadd( 426.973, 812.191, 20.0664, 0.5968 ) }
    dend_83 { pt3dadd( 427.779, 812.968, 19.7998, 0.5674 ) }
    dend_83 { pt3dadd( 428.57, 813.702, 19.6465, 0.4668 ) }
    dend_83 { pt3dadd( 429.392, 814.406, 19.4926, 0.503 ) }
    dend_83 { pt3dadd( 430.397, 814.773, 19.1827, 0.4032 ) }
    dend_83 { pt3dadd( 431.225, 815.439, 18.8063, 0.3436 ) }
    dend_83 { pt3dadd( 431.957, 816.211, 18.5416, 0.3094 ) }
    dend_83 { pt3dadd( 432.091, 817.133, 18.1376, 0.3338 ) }
    dend_83 { pt3dadd( 431.171, 817.73, 17.7197, 0.411 ) }
    dend_83 { pt3dadd( 431.023, 818.563, 17.1437, 0.3992 ) }
    dend_83 { pt3dadd( 431.947, 819.146, 16.6148, 0.4414 ) }
    dend_83 { pt3dadd( 432.815, 819.873, 16.1901, 0.4384 ) }
    dend_83 { pt3dadd( 433.576, 820.62, 15.9399, 0.3696 ) }
    dend_83 { pt3dadd( 433.52, 821.66, 15.6632, 0.3192 ) }
    dend_83 { pt3dadd( 432.749, 822.281, 15.2737, 0.3096 ) }
    dend_83 { pt3dadd( 431.777, 822.716, 14.9115, 0.3418 ) }
    dend_83 { pt3dadd( 431.408, 823.735, 14.5488, 0.3886 ) }
    dend_83 { pt3dadd( 431.476, 824.841, 14.1386, 0.5378 ) }
    dend_83 { pt3dadd( 431.758, 825.917, 13.7458, 0.5112 ) }
    dend_83 { pt3dadd( 431.528, 826.983, 13.4206, 0.5614 ) }
    dend_83 { pt3dadd( 432.069, 827.888, 13.0153, 0.629 ) }
    dend_83 { pt3dadd( 432.761, 828.702, 12.6342, 0.6496 ) }
    dend_83 { pt3dadd( 433.406, 829.517, 12.4242, 0.508 ) }
    dend_83 { pt3dadd( 433.898, 830.549, 12.2848, 0.4334 ) }
    dend_83 { pt3dadd( 434.105, 831.636, 12.151, 0.5266 ) }
    dend_83 { pt3dadd( 434.105, 832.765, 11.9949, 0.491 ) }
    dend_83 { pt3dadd( 434.105, 833.895, 11.8418, 0.5214 ) }
    dend_83 { pt3dadd( 434.105, 835.039, 11.7332, 0.566 ) }
    dend_83 { pt3dadd( 434.462, 836.122, 11.6532, 0.4772 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 44/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 416.704, 656.546, 17.9512, 0.5368 ) }
    dend_81 { pt3dadd( 417.652, 656.891, 17.6354, 0.5092 ) }
    dend_81 { pt3dadd( 418.698, 657.342, 17.4524, 0.5578 ) }
    dend_81 { pt3dadd( 419.505, 658.102, 17.3761, 0.622 ) }
    dend_81 { pt3dadd( 420.127, 659.049, 17.362, 0.6372 ) }
    dend_81 { pt3dadd( 421.136, 659.288, 17.3464, 0.4834 ) }
    dend_81 { pt3dadd( 421.664, 659.96, 17.6524, 0.3942 ) }
    dend_81 { pt3dadd( 422.233, 660.865, 18.0335, 0.4226 ) }
    dend_81 { pt3dadd( 423.055, 661.537, 18.5108, 0.4502 ) }
    dend_81 { pt3dadd( 424.068, 662.05, 18.9149, 0.3928 ) }
    dend_81 { pt3dadd( 425.178, 662.327, 19.2366, 0.357 ) }
    dend_81 { pt3dadd( 426.279, 662.052, 19.4764, 0.4052 ) }
    dend_81 { pt3dadd( 427.41, 662.081, 19.6804, 0.3948 ) }
    dend_81 { pt3dadd( 428.541, 662.147, 19.8841, 0.4036 ) }
    dend_81 { pt3dadd( 429.672, 662.239, 20.058, 0.5124 ) }
    dend_81 { pt3dadd( 430.798, 662.385, 20.156, 0.4932 ) }
    dend_81 { pt3dadd( 431.848, 662.544, 20.2757, 0.387 ) }
    dend_81 { pt3dadd( 432.707, 662.927, 20.484, 0.304 ) }
    dend_81 { pt3dadd( 433.747, 663.274, 20.5616, 0.282 ) }
    dend_81 { pt3dadd( 434.774, 662.834, 20.5991, 0.2882 ) }
    dend_81 { pt3dadd( 435.786, 662.498, 20.7352, 0.3012 ) }
    dend_81 { pt3dadd( 436.85, 662.298, 20.9007, 0.3186 ) }
    dend_81 { pt3dadd( 437.897, 661.844, 20.9809, 0.3816 ) }
    dend_81 { pt3dadd( 438.936, 661.549, 20.9129, 0.3488 ) }
    dend_81 { pt3dadd( 440.008, 661.248, 20.777, 0.3288 ) }
    dend_81 { pt3dadd( 441.051, 661.392, 20.5625, 0.323 ) }
    dend_81 { pt3dadd( 442.043, 661.908, 20.4382, 0.3896 ) }
    dend_81 { pt3dadd( 442.84, 662.195, 20.5827, 0.3648 ) }
    dend_81 { pt3dadd( 443.928, 662.527, 20.7678, 0.352 ) }
    dend_81 { pt3dadd( 445.016, 662.808, 20.894, 0.3976 ) }
    dend_81 { pt3dadd( 446.103, 663.059, 20.908, 0.3734 ) }
    dend_81 { pt3dadd( 447.208, 663.331, 20.9003, 0.3988 ) }
    dend_81 { pt3dadd( 448.301, 663.058, 20.8813, 0.3338 ) }
    dend_81 { pt3dadd( 448.111, 663.286, 20.9432, 0.3 ) }
    dend_81 { pt3dadd( 449.056, 663.409, 21.0777, 0.2746 ) }
    dend_81 { pt3dadd( 450.092, 663.204, 21.0887, 0.2746 ) }
    dend_81 { pt3dadd( 451.008, 662.631, 21.1617, 0.2746 ) }
    dend_81 { pt3dadd( 452.118, 662.564, 21.3387, 0.2746 ) }
    dend_81 { pt3dadd( 453.204, 662.842, 21.5122, 0.2746 ) }
    dend_81 { pt3dadd( 454.333, 662.956, 21.666, 0.2746 ) }
    dend_81 { pt3dadd( 455.476, 662.956, 21.8235, 0.2746 ) }
    dend_81 { pt3dadd( 456.619, 662.956, 21.9882, 0.2746 ) }
    dend_81 { pt3dadd( 457.74, 663.123, 22.1561, 0.2748 ) }
    dend_81 { pt3dadd( 458.855, 663.332, 22.3271, 0.2748 ) }
    dend_81 { pt3dadd( 459.978, 663.308, 22.4609, 0.275 ) }
    dend_81 { pt3dadd( 461.108, 663.135, 22.5349, 0.2754 ) }
    dend_81 { pt3dadd( 462.233, 662.948, 22.5774, 0.2762 ) }
    dend_81 { pt3dadd( 463.351, 662.724, 22.6388, 0.2778 ) }
    dend_81 { pt3dadd( 464.477, 662.778, 22.691, 0.2804 ) }
    dend_81 { pt3dadd( 465.605, 662.965, 22.7294, 0.2856 ) }
    dend_81 { pt3dadd( 466.725, 663.189, 22.7636, 0.295 ) }
    dend_81 { pt3dadd( 467.816, 663.531, 22.7939, 0.312 ) }
    dend_81 { pt3dadd( 468.909, 663.872, 22.8161, 0.346 ) }
    dend_81 { pt3dadd( 470.011, 664.163, 22.8604, 0.3974 ) }
    dend_81 { pt3dadd( 471.077, 664.538, 22.909, 0.549 ) }
    dend_81 { pt3dadd( 472.026, 665.171, 22.916, 0.5566 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_81 { pt3dadd( 472.989, 665.784, 22.9023, 0.5248 ) }
    dend_81 { pt3dadd( 473.981, 666.354, 22.896, 0.4612 ) }
    dend_81 { pt3dadd( 474.999, 666.863, 22.899, 0.365 ) }
    dend_81 { pt3dadd( 476.091, 667.204, 22.9165, 0.3104 ) }
    dend_81 { pt3dadd( 477.184, 667.534, 22.9584, 0.2938 ) }
    dend_81 { pt3dadd( 478.328, 667.534, 23.0304, 0.3112 ) }
    dend_81 { pt3dadd( 479.472, 667.571, 23.1292, 0.3382 ) }
    dend_81 { pt3dadd( 480.51, 667.976, 23.2532, 0.413 ) }
    dend_81 { pt3dadd( 481.345, 668.653, 23.5199, 0.4328 ) }
    dend_81 { pt3dadd( 482.281, 669.277, 23.8334, 0.3594 ) }
    dend_81 { pt3dadd( 483.23, 669.909, 24.1409, 0.3002 ) }
    dend_81 { pt3dadd( 484.172, 670.543, 24.4569, 0.2748 ) }
    dend_81 { pt3dadd( 485.109, 671.177, 24.7791, 0.2752 ) }
    dend_81 { pt3dadd( 486.087, 671.76, 25.067, 0.2756 ) }
    dend_81 { pt3dadd( 487.075, 672.332, 25.3086, 0.2766 ) }
    dend_81 { pt3dadd( 488.155, 672.666, 25.5413, 0.2782 ) }
    dend_81 { pt3dadd( 489.251, 672.959, 25.7671, 0.2814 ) }
    dend_81 { pt3dadd( 490.355, 673.247, 25.938, 0.287 ) }
    dend_81 { pt3dadd( 491.463, 673.536, 26.0515, 0.2988 ) }
    dend_81 { pt3dadd( 492.449, 674.046, 26.1229, 0.3142 ) }
    dend_81 { pt3dadd( 493.295, 674.816, 26.162, 0.3734 ) }
    dend_81 { pt3dadd( 494.13, 675.598, 26.1771, 0.3338 ) }
    dend_81 { pt3dadd( 494.952, 676.393, 26.1793, 0.3 ) }
    dend_81 { pt3dadd( 495.887, 677.019, 26.179, 0.2746 ) }
    dend_81 { pt3dadd( 496.938, 677.472, 26.1787, 0.2746 ) }
    dend_81 { pt3dadd( 498.02, 677.803, 26.1781, 0.2746 ) }
    dend_81 { pt3dadd( 499.158, 677.923, 26.1774, 0.2746 ) }
    dend_81 { pt3dadd( 500.295, 678.043, 26.1764, 0.2746 ) }
    dend_81 { pt3dadd( 501.426, 678.218, 26.1749, 0.2746 ) }
    dend_81 { pt3dadd( 502.555, 678.407, 26.1729, 0.2746 ) }
    dend_81 { pt3dadd( 503.689, 678.522, 26.17, 0.2746 ) }
    dend_81 { pt3dadd( 504.832, 678.522, 26.1661, 0.2746 ) }
    dend_81 { pt3dadd( 505.977, 678.522, 26.1605, 0.2746 ) }
    dend_81 { pt3dadd( 507.111, 678.414, 26.1524, 0.2746 ) }
    dend_81 { pt3dadd( 508.24, 678.225, 26.1416, 0.2748 ) }
    dend_81 { pt3dadd( 509.371, 678.065, 26.1274, 0.275 ) }
    dend_81 { pt3dadd( 510.515, 678.065, 26.1092, 0.2754 ) }
    dend_81 { pt3dadd( 511.595, 678.37, 26.0679, 0.276 ) }
    dend_81 { pt3dadd( 512.068, 678.448, 26.0269, 0.2772 ) }
    dend_81 { pt3dadd( 513.197, 678.632, 25.9853, 0.2796 ) }
    dend_81 { pt3dadd( 514.324, 678.816, 25.9386, 0.284 ) }
    dend_81 { pt3dadd( 515.302, 679.401, 25.8711, 0.2916 ) }
    dend_81 { pt3dadd( 516.27, 680.012, 25.7898, 0.3074 ) }
    dend_81 { pt3dadd( 517.161, 680.604, 25.5781, 0.3302 ) }
    dend_81 { pt3dadd( 518.125, 681.15, 25.3434, 0.4028 ) }
    dend_81 { pt3dadd( 519.145, 681.66, 25.1641, 0.3906 ) }
    dend_81 { pt3dadd( 520.193, 682.086, 25.1175, 0.3946 ) }
    dend_81 { pt3dadd( 521.25, 682.486, 25.2043, 0.501 ) }
    dend_81 { pt3dadd( 522.236, 682.992, 25.4331, 0.4474 ) }
    dend_81 { pt3dadd( 523.229, 683.497, 25.7469, 0.4214 ) }
    dend_81 { pt3dadd( 524.26, 683.994, 26.0016, 0.4748 ) }
    dend_81 { pt3dadd( 525.284, 684.501, 26.1915, 0.5378 ) }
    dend_81 { pt3dadd( 526.308, 685.012, 26.3167, 0.6 ) }
    dend_81 { pt3dadd( 527.299, 685.563, 26.4243, 0.5238 ) }
    dend_81 { pt3dadd( 528.022, 686.029, 26.7088, 0.3962 ) }
    dend_81 { pt3dadd( 528.926, 686.586, 26.8312, 0.3224 ) }
    dend_81 { pt3dadd( 529.797, 686.947, 26.6457, 0.3108 ) }
    dend_81 { pt3dadd( 530.879, 687.316, 26.4634, 0.3672 ) }
    dend_81 { pt3dadd( 531.959, 687.686, 26.2838, 0.322 ) }
    dend_81 { pt3dadd( 533.006, 688.129, 26.0463, 0.2796 ) }
    dend_81 { pt3dadd( 533.825, 688.762, 25.7263, 0.2288 ) }
    dend_81 { pt3dadd( 534.694, 689.358, 25.0418, 0.2288 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 62/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 416.704, 656.546, 17.9512, 0.5368 ) }
    dend_80 { pt3dadd( 417.036, 655.757, 17.0738, 0.2288 ) }
    dend_80 { pt3dadd( 417.438, 654.688, 16.9577, 0.5208 ) }
    dend_80 { pt3dadd( 418.083, 653.836, 16.9966, 0.4774 ) }
    dend_80 { pt3dadd( 418.955, 653.31, 16.864, 0.509 ) }
    dend_80 { pt3dadd( 419.849, 652.825, 16.6637, 0.4812 ) }
    dend_80 { pt3dadd( 420.802, 652.238, 16.5527, 0.6208 ) }
    dend_80 { pt3dadd( 421.834, 652.168, 16.3917, 0.6384 ) }
    dend_80 { pt3dadd( 422.829, 652.622, 16.1419, 0.6976 ) }
    dend_80 { pt3dadd( 423.885, 652.86, 15.9705, 0.678 ) }
    dend_80 { pt3dadd( 424.955, 652.76, 15.7938, 0.5846 ) }
    dend_80 { pt3dadd( 425.335, 651.878, 15.5144, 0.458 ) }
    dend_80 { pt3dadd( 425.597, 650.82, 15.1351, 0.456 ) }
    dend_80 { pt3dadd( 426.406, 650.111, 14.7276, 0.4652 ) }
    dend_80 { pt3dadd( 427.42, 649.736, 14.2733, 0.4202 ) }
    dend_80 { pt3dadd( 428.514, 649.575, 13.8002, 0.4096 ) }
    dend_80 { pt3dadd( 429.618, 649.294, 13.3774, 0.4938 ) }
    dend_80 { pt3dadd( 430.379, 648.718, 12.9292, 0.6026 ) }
    dend_80 { pt3dadd( 430.78, 647.673, 12.5106, 0.578 ) }
    dend_80 { pt3dadd( 431.492, 646.827, 12.1006, 0.4862 ) }
    dend_80 { pt3dadd( 432.369, 646.196, 11.6518, 0.54 ) }
    dend_80 { pt3dadd( 433.404, 645.918, 11.1992, 0.4676 ) }
    dend_80 { pt3dadd( 434.529, 645.707, 10.8469, 0.4832 ) }
    dend_80 { pt3dadd( 435.612, 645.388, 10.5815, 0.47 ) }
    dend_80 { pt3dadd( 436.596, 644.804, 10.3802, 0.4228 ) }
    dend_80 { pt3dadd( 437.572, 644.253, 10.163, 0.4442 ) }
    dend_80 { pt3dadd( 438.543, 643.72, 9.8978, 0.4138 ) }
    dend_80 { pt3dadd( 439.52, 643.133, 9.658, 0.4684 ) }
    dend_80 { pt3dadd( 440.553, 642.811, 9.4975, 0.489 ) }
    dend_80 { pt3dadd( 441.639, 642.631, 9.4448, 0.4604 ) }
    dend_80 { pt3dadd( 442.631, 642.231, 9.2851, 0.5034 ) }
    dend_80 { pt3dadd( 443.467, 641.476, 9.1165, 0.5736 ) }
    dend_80 { pt3dadd( 444.434, 640.98, 9.0293, 0.522 ) }
    dend_80 { pt3dadd( 444.869, 640.908, 8.8574, 0.393 ) }
    dend_80 { pt3dadd( 445.958, 640.726, 8.555, 0.3164 ) }
    dend_80 { pt3dadd( 447.05, 640.612, 8.1824, 0.2994 ) }
    dend_80 { pt3dadd( 448.162, 640.869, 7.8499, 0.3474 ) }
    dend_80 { pt3dadd( 449.204, 641.265, 7.5304, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_80 { pt3dadd( 450.132, 641.895, 6.8295, 0.2288 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 1/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 388.466, 656.852, 22.5318, 0.6208 ) }
    dend_61 { pt3dadd( 389.065, 657.965, 22.4255, 0.4426 ) }
    dend_61 { pt3dadd( 389.573, 658.982, 22.2856, 0.3706 ) }
    dend_61 { pt3dadd( 389.865, 660.078, 22.1014, 0.3542 ) }
    dend_61 { pt3dadd( 390.166, 661.171, 21.8917, 0.4434 ) }
    dend_61 { pt3dadd( 390.649, 662.208, 21.7196, 0.484 ) }
    dend_61 { pt3dadd( 391.132, 663.245, 21.5779, 0.4798 ) }
    dend_61 { pt3dadd( 391.943, 664.045, 21.4556, 0.399 ) }
    dend_61 { pt3dadd( 392.72, 664.884, 21.3384, 0.3756 ) }
    dend_61 { pt3dadd( 393.252, 665.838, 21.2152, 0.4052 ) }
    dend_61 { pt3dadd( 393.35, 666.975, 21.0752, 0.5636 ) }
    dend_61 { pt3dadd( 393.526, 668.032, 20.823, 0.5836 ) }
    dend_61 { pt3dadd( 393.869, 669.004, 20.4074, 0.5756 ) }
    dend_61 { pt3dadd( 394.156, 670.08, 20.0074, 0.551 ) }
    dend_61 { pt3dadd( 394.424, 671.192, 19.6783, 0.5526 ) }
    dend_61 { pt3dadd( 394.724, 672.294, 19.4194, 0.5554 ) }
    dend_61 { pt3dadd( 395.064, 673.387, 19.2302, 0.5608 ) }
    dend_61 { pt3dadd( 395.369, 674.483, 19.0886, 0.5706 ) }
    dend_61 { pt3dadd( 395.535, 675.594, 18.9198, 0.5898 ) }
    dend_61 { pt3dadd( 395.709, 676.705, 18.7246, 0.6202 ) }
    dend_61 { pt3dadd( 396.023, 677.804, 18.5902, 0.7024 ) }
    dend_61 { pt3dadd( 396.338, 678.904, 18.5134, 0.7284 ) }
    dend_61 { pt3dadd( 396.652, 680.004, 18.49, 0.7048 ) }
    dend_61 { pt3dadd( 397.318, 680.913, 18.4969, 0.5516 ) }
    dend_61 { pt3dadd( 397.875, 682.139, 18.7013, 0.5706 ) }
    dend_61 { pt3dadd( 398.454, 683.111, 18.8839, 0.5068 ) }
    dend_61 { pt3dadd( 398.707, 684.225, 19.0335, 0.412 ) }
    dend_61 { pt3dadd( 398.707, 685.369, 19.1526, 0.3514 ) }
    dend_61 { pt3dadd( 398.744, 686.512, 19.2469, 0.3656 ) }
    dend_61 { pt3dadd( 398.828, 687.647, 19.3383, 0.4642 ) }
    dend_61 { pt3dadd( 398.896, 688.77, 19.4436, 0.5248 ) }
    dend_61 { pt3dadd( 398.708, 689.898, 19.5238, 0.545 ) }
    dend_61 { pt3dadd( 398.689, 691.042, 19.581, 0.5714 ) }
    dend_61 { pt3dadd( 398.514, 692.154, 19.5746, 0.4452 ) }
    dend_61 { pt3dadd( 398.098, 693.191, 19.5834, 0.3756 ) }
    dend_61 { pt3dadd( 397.646, 694.233, 19.6078, 0.3632 ) }
    dend_61 { pt3dadd( 397.072, 695.203, 19.5847, 0.46 ) }
    dend_61 { pt3dadd( 396.444, 696.142, 19.6001, 0.5156 ) }
    dend_61 { pt3dadd( 395.607, 696.911, 19.6227, 0.5344 ) }
    dend_61 { pt3dadd( 394.848, 697.766, 19.6405, 0.5206 ) }
    dend_61 { pt3dadd( 394.208, 698.712, 19.6453, 0.5016 ) }
    dend_61 { pt3dadd( 393.732, 699.75, 19.6392, 0.4356 ) }
    dend_61 { pt3dadd( 393.184, 700.753, 19.6248, 0.4628 ) }
    dend_61 { pt3dadd( 392.59, 701.731, 19.5951, 0.4726 ) }
    dend_61 { pt3dadd( 391.923, 702.66, 19.5558, 0.4588 ) }
    dend_61 { pt3dadd( 391.258, 703.591, 19.5078, 0.3602 ) }
    dend_61 { pt3dadd( 390.621, 704.513, 19.3805, 0.3018 ) }
    dend_61 { pt3dadd( 390.035, 705.491, 19.2552, 0.278 ) }
    dend_61 { pt3dadd( 389.872, 706.772, 19.1519, 0.2808 ) }
    dend_61 { pt3dadd( 389.728, 707.907, 19.0692, 0.2864 ) }
    dend_61 { pt3dadd( 389.405, 708.984, 18.9519, 0.2962 ) }
    dend_61 { pt3dadd( 389.011, 710.036, 18.7973, 0.3154 ) }
    dend_61 { pt3dadd( 388.547, 711.076, 18.689, 0.3462 ) }
    dend_61 { pt3dadd( 388.064, 712.114, 18.6332, 0.4278 ) }
    dend_61 { pt3dadd( 387.682, 713.177, 18.6724, 0.46 ) }
    dend_61 { pt3dadd( 387.349, 714.251, 18.8096, 0.4118 ) }
    dend_61 { pt3dadd( 386.827, 715.252, 18.9731, 0.3868 ) }
    dend_61 { pt3dadd( 386.216, 716.218, 19.1216, 0.4866 ) }
    dend_61 { pt3dadd( 385.733, 717.251, 19.2339, 0.42 ) }
    dend_61 { pt3dadd( 385.307, 718.313, 19.3064, 0.3746 ) }
    dend_61 { pt3dadd( 384.995, 719.408, 19.3435, 0.3678 ) }
    dend_61 { pt3dadd( 384.783, 720.532, 19.3581, 0.4386 ) }
    dend_61 { pt3dadd( 384.54, 721.647, 19.3658, 0.6214 ) }
    dend_61 { pt3dadd( 384.087, 722.697, 19.3721, 0.71 ) }
    dend_61 { pt3dadd( 383.633, 723.747, 19.3785, 0.7164 ) }
    // Section: dend_49, id: dend_49, parent: dend_43 (entry count 66/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 381.546, 652.985, 23.5676, 0.5126 ) }
    dend_49 { pt3dadd( 381.134, 653.81, 23.5339, 0.4908 ) }
    dend_49 { pt3dadd( 380.624, 654.831, 23.4349, 0.6242 ) }
    dend_49 { pt3dadd( 380.142, 655.857, 23.2618, 0.715 ) }
    dend_49 { pt3dadd( 379.666, 656.886, 23.0399, 0.727 ) }
    dend_49 { pt3dadd( 379.159, 657.91, 22.85, 0.5934 ) }
    dend_49 { pt3dadd( 378.648, 658.934, 22.6985, 0.6438 ) }
    dend_49 { pt3dadd( 378.041, 659.873, 22.5085, 0.6638 ) }
    dend_49 { pt3dadd( 377.408, 660.788, 22.2833, 0.5992 ) }
    dend_49 { pt3dadd( 376.682, 661.631, 22.2244, 0.5158 ) }
    dend_49 { pt3dadd( 375.925, 662.448, 22.2407, 0.4136 ) }
    dend_49 { pt3dadd( 375.091, 663.195, 22.1798, 0.4272 ) }
    dend_49 { pt3dadd( 374.222, 663.918, 22.1054, 0.381 ) }
    dend_49 { pt3dadd( 373.316, 664.616, 22.0653, 0.4128 ) }
    dend_49 { pt3dadd( 372.404, 665.278, 22.097, 0.3608 ) }
    dend_49 { pt3dadd( 371.487, 665.91, 22.2125, 0.3446 ) }
    dend_49 { pt3dadd( 370.834, 666.816, 22.3269, 0.3828 ) }
    dend_49 { pt3dadd( 370.263, 667.807, 22.4239, 0.3514 ) }
    dend_49 { pt3dadd( 369.9, 668.866, 22.4368, 0.3324 ) }
    dend_49 { pt3dadd( 369.623, 669.95, 22.3606, 0.3354 ) }
    dend_49 { pt3dadd( 369.538, 671.077, 22.2841, 0.384 ) }
    dend_49 { pt3dadd( 369.263, 672.166, 22.2641, 0.4934 ) }
    dend_49 { pt3dadd( 368.495, 672.861, 22.4394, 0.6034 ) }
    dend_49 { pt3dadd( 367.373, 673.029, 22.6114, 0.5718 ) }
    dend_49 { pt3dadd( 366.308, 673.314, 22.802, 0.512 ) }
    dend_49 { pt3dadd( 365.518, 674.058, 23.0624, 0.4066 ) }
    dend_49 { pt3dadd( 364.594, 674.676, 23.2444, 0.4134 ) }
    dend_49 { pt3dadd( 363.521, 675.072, 23.3166, 0.3606 ) }
    dend_49 { pt3dadd( 362.467, 675.506, 23.2712, 0.3502 ) }
    dend_49 { pt3dadd( 361.472, 676.044, 23.0995, 0.3646 ) }
    dend_49 { pt3dadd( 360.563, 676.693, 22.8226, 0.4566 ) }
    dend_49 { pt3dadd( 359.806, 677.533, 22.4657, 0.5392 ) }
    dend_49 { pt3dadd( 359.048, 678.279, 22.0047, 0.4324 ) }
    dend_49 { pt3dadd( 358.243, 679.082, 21.5927, 0.3522 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_49 { pt3dadd( 357.608, 680.14, 21.1578, 0.3188 ) }
    dend_49 { pt3dadd( 357.031, 681.102, 20.7296, 0.3824 ) }
    dend_49 { pt3dadd( 356.719, 682.177, 20.3132, 0.3502 ) }
    dend_49 { pt3dadd( 356.411, 683.254, 19.919, 0.3314 ) }
    dend_49 { pt3dadd( 355.841, 684.246, 19.6367, 0.3272 ) }
    dend_49 { pt3dadd( 355.271, 685.238, 19.4329, 0.3988 ) }
    dend_49 { pt3dadd( 354.811, 686.284, 19.2936, 0.3758 ) }
    dend_49 { pt3dadd( 354.358, 687.335, 19.194, 0.4032 ) }
    dend_49 { pt3dadd( 353.624, 688.198, 19.1136, 0.3422 ) }
    dend_49 { pt3dadd( 352.828, 689.02, 19.0343, 0.3152 ) }
    dend_49 { pt3dadd( 352.072, 689.851, 18.8726, 0.3036 ) }
    dend_49 { pt3dadd( 351.343, 690.699, 18.6437, 0.3234 ) }
    dend_49 { pt3dadd( 350.881, 691.746, 18.4394, 0.3904 ) }
    dend_49 { pt3dadd( 350.419, 692.792, 18.2585, 0.3664 ) }
    dend_49 { pt3dadd( 349.754, 693.722, 18.1005, 0.355 ) }
    dend_49 { pt3dadd( 349.085, 694.649, 17.9687, 0.4018 ) }
    dend_49 { pt3dadd( 348.806, 695.224, 17.8292, 0.3886 ) }
    dend_49 { pt3dadd( 348.314, 696.233, 17.6461, 0.3908 ) }
    dend_49 { pt3dadd( 347.697, 697.183, 17.4886, 0.494 ) }
    dend_49 { pt3dadd( 347.028, 698.111, 17.3812, 0.4344 ) }
    dend_49 { pt3dadd( 346.185, 698.719, 17.4338, 0.3976 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 381.546, 652.985, 23.5676, 0.5126 ) }
    dend_44 { pt3dadd( 380.386, 652.599, 21.8599, 0.2288 ) }
    dend_44 { pt3dadd( 379.376, 652.135, 21.9166, 0.3164 ) }
    dend_44 { pt3dadd( 378.276, 652.329, 21.9802, 0.3778 ) }
    dend_44 { pt3dadd( 377.187, 652.385, 22.1081, 0.342 ) }
    dend_44 { pt3dadd( 376.047, 652.3, 22.191, 0.3152 ) }
    dend_44 { pt3dadd( 375.146, 651.825, 22.1058, 0.3026 ) }
    dend_44 { pt3dadd( 374.367, 651.117, 22.144, 0.3276 ) }
    dend_44 { pt3dadd( 373.387, 650.645, 22.1017, 0.3682 ) }
    dend_44 { pt3dadd( 372.319, 650.802, 21.9301, 0.4706 ) }
    dend_44 { pt3dadd( 371.212, 651.034, 21.7591, 0.5292 ) }
    dend_44 { pt3dadd( 370.074, 650.965, 21.6127, 0.5888 ) }
    dend_44 { pt3dadd( 368.936, 650.844, 21.4866, 0.4794 ) }
    dend_44 { pt3dadd( 367.803, 650.796, 21.3566, 0.4288 ) }
    dend_44 { pt3dadd( 366.77, 651.22, 21.2155, 0.512 ) }
    dend_44 { pt3dadd( 365.828, 651.179, 20.9684, 0.4922 ) }
    dend_44 { pt3dadd( 364.841, 650.679, 20.7536, 0.385 ) }
    dend_44 { pt3dadd( 363.81, 651.175, 20.5741, 0.3006 ) }
    dend_44 { pt3dadd( 362.713, 651.447, 20.4235, 0.2758 ) }
    dend_44 { pt3dadd( 361.6, 651.605, 20.3006, 0.2768 ) }
    dend_44 { pt3dadd( 360.63, 652.207, 20.2188, 0.2786 ) }
    dend_44 { pt3dadd( 359.785, 652.919, 20.0712, 0.282 ) }
    dend_44 { pt3dadd( 359.011, 653.692, 19.8076, 0.288 ) }
    dend_44 { pt3dadd( 357.959, 654.116, 19.5758, 0.3008 ) }
    dend_44 { pt3dadd( 356.886, 654.512, 19.3852, 0.3178 ) }
    dend_44 { pt3dadd( 355.889, 655.043, 19.1819, 0.3802 ) }
    dend_44 { pt3dadd( 354.909, 655.596, 18.9687, 0.3464 ) }
    dend_44 { pt3dadd( 353.799, 655.832, 18.8656, 0.3242 ) }
    dend_44 { pt3dadd( 352.689, 656.069, 18.835, 0.3142 ) }
    dend_44 { pt3dadd( 351.549, 656.089, 18.7768, 0.3736 ) }
    dend_44 { pt3dadd( 350.455, 656.089, 18.6013, 0.3342 ) }
    dend_44 { pt3dadd( 349.332, 656.209, 18.4145, 0.3004 ) }
    dend_44 { pt3dadd( 348.429, 656.75, 18.1423, 0.2754 ) }
    dend_44 { pt3dadd( 347.61, 657.503, 17.9201, 0.2762 ) }
    dend_44 { pt3dadd( 346.718, 658.199, 17.8293, 0.2776 ) }
    dend_44 { pt3dadd( 345.684, 658.647, 17.8258, 0.2802 ) }
    dend_44 { pt3dadd( 344.602, 659.007, 17.8777, 0.285 ) }
    dend_44 { pt3dadd( 343.637, 659.59, 17.9326, 0.2938 ) }
    dend_44 { pt3dadd( 342.745, 660.305, 17.9668, 0.3112 ) }
    dend_44 { pt3dadd( 342.05, 661.193, 17.9594, 0.3382 ) }
    dend_44 { pt3dadd( 341.47, 662.179, 17.9122, 0.413 ) }
    dend_44 { pt3dadd( 340.577, 662.822, 17.7729, 0.4328 ) }
    dend_44 { pt3dadd( 339.494, 663.012, 17.5471, 0.3594 ) }
    dend_44 { pt3dadd( 338.429, 663.4, 17.3675, 0.3002 ) }
    dend_44 { pt3dadd( 337.502, 664.059, 17.2333, 0.2748 ) }
    dend_44 { pt3dadd( 336.509, 664.61, 17.141, 0.2752 ) }
    dend_44 { pt3dadd( 335.503, 665.157, 17.0867, 0.2756 ) }
    dend_44 { pt3dadd( 334.414, 665.473, 17.066, 0.2766 ) }
    dend_44 { pt3dadd( 333.294, 665.71, 17.0629, 0.2782 ) }
    dend_44 { pt3dadd( 332.245, 666.105, 17.0586, 0.2814 ) }
    dend_44 { pt3dadd( 331.308, 666.763, 17.0524, 0.2872 ) }
    dend_44 { pt3dadd( 330.366, 667.41, 17.0439, 0.299 ) }
    dend_44 { pt3dadd( 329.409, 668.039, 17.0324, 0.3146 ) }
    dend_44 { pt3dadd( 328.399, 668.541, 17.0158, 0.3742 ) }
    dend_44 { pt3dadd( 327.286, 668.803, 16.9911, 0.3354 ) }
    dend_44 { pt3dadd( 326.173, 669.066, 16.9576, 0.303 ) }
    dend_44 { pt3dadd( 325.08, 669.407, 16.9162, 0.28 ) }
    dend_44 { pt3dadd( 323.989, 669.748, 16.8679, 0.2848 ) }
    dend_44 { pt3dadd( 322.999, 670.264, 16.7488, 0.2932 ) }
    dend_44 { pt3dadd( 322.038, 670.829, 16.5749, 0.3104 ) }
    dend_44 { pt3dadd( 321.069, 671.437, 16.4731, 0.3356 ) }
    dend_44 { pt3dadd( 320.097, 671.911, 16.4271, 0.4142 ) }
    dend_44 { pt3dadd( 319.089, 671.924, 16.3763, 0.4052 ) }
    dend_44 { pt3dadd( 318.15, 672.418, 16.5582, 0.4526 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 411.296, 485.794, 25.2838, 0.4566 ) }
    dend_36 { pt3dadd( 411.744, 484.946, 25.0069, 0.4612 ) }
    dend_36 { pt3dadd( 411.538, 484.07, 24.7, 0.439 ) }
    dend_36 { pt3dadd( 411.928, 483.091, 24.5852, 0.5452 ) }
    dend_36 { pt3dadd( 412.38, 482.1, 24.5543, 0.4846 ) }
    dend_36 { pt3dadd( 412.555, 480.979, 24.6325, 0.4786 ) }
    dend_36 { pt3dadd( 412.942, 479.925, 24.7795, 0.6372 ) }
    dend_36 { pt3dadd( 413.552, 478.958, 24.9766, 0.5656 ) }
    dend_36 { pt3dadd( 413.975, 477.92, 25.2086, 0.6062 ) }
    dend_36 { pt3dadd( 414.435, 476.905, 25.4797, 0.5256 ) }
    dend_36 { pt3dadd( 414.661, 475.803, 25.7207, 0.4474 ) }
    dend_36 { pt3dadd( 414.698, 474.664, 25.9085, 0.4134 ) }
    dend_36 { pt3dadd( 414.638, 473.525, 26.0664, 0.4994 ) }
    dend_36 { pt3dadd( 414.638, 472.415, 26.2562, 0.6202 ) }
    dend_36 { pt3dadd( 414.97, 471.386, 26.5007, 0.5744 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 415.182, 470.418, 26.5909, 0.6558 ) }
    dend_36 { pt3dadd( 415.777, 469.51, 26.5799, 0.6856 ) }
    dend_36 { pt3dadd( 416.397, 468.578, 26.5539, 0.6422 ) }
    dend_36 { pt3dadd( 416.631, 467.461, 26.5136, 0.5836 ) }
    dend_36 { pt3dadd( 416.585, 466.318, 26.4607, 0.597 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 5/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 411.296, 485.794, 25.2838, 0.4566 ) }
    dend_35 { pt3dadd( 411.015, 485.357, 26.161, 0.4576 ) }
    dend_35 { pt3dadd( 409.891, 485.336, 26.0154, 0.3604 ) }
    dend_35 { pt3dadd( 409.22, 484.742, 26.022, 0.302 ) }
    dend_35 { pt3dadd( 408.488, 484.421, 25.7786, 0.2784 ) }
    dend_35 { pt3dadd( 407.448, 484.354, 25.4758, 0.2816 ) }
    dend_35 { pt3dadd( 406.349, 484.192, 25.2846, 0.2876 ) }
    dend_35 { pt3dadd( 405.288, 483.968, 25.0023, 0.2998 ) }
    dend_35 { pt3dadd( 404.154, 483.838, 24.7788, 0.316 ) }
    dend_35 { pt3dadd( 403.023, 483.76, 24.6866, 0.3768 ) }
    dend_35 { pt3dadd( 401.895, 483.851, 24.6896, 0.3402 ) }
    dend_35 { pt3dadd( 400.761, 483.971, 24.7052, 0.3118 ) }
    dend_35 { pt3dadd( 399.631, 484.039, 24.708, 0.2964 ) }
    dend_35 { pt3dadd( 398.641, 484.593, 24.7589, 0.316 ) }
    dend_35 { pt3dadd( 397.615, 485.014, 24.8548, 0.347 ) }
    dend_35 { pt3dadd( 396.485, 485.108, 24.8889, 0.429 ) }
    dend_35 { pt3dadd( 395.346, 485.108, 24.8743, 0.4638 ) }
    dend_35 { pt3dadd( 394.203, 485.108, 24.8532, 0.4112 ) }
    dend_35 { pt3dadd( 393.177, 485.275, 24.959, 0.423 ) }
    dend_35 { pt3dadd( 392.279, 485.909, 25.0039, 0.3734 ) }
    dend_35 { pt3dadd( 391.511, 486.357, 24.7702, 0.3988 ) }
    dend_35 { pt3dadd( 390.78, 486.782, 24.2935, 0.3338 ) }
    dend_35 { pt3dadd( 390.094, 487.255, 23.7061, 0.3 ) }
    dend_35 { pt3dadd( 389.07, 487.624, 23.3417, 0.2746 ) }
    dend_35 { pt3dadd( 388.073, 487.237, 23.2137, 0.2746 ) }
    dend_35 { pt3dadd( 387.355, 486.906, 23.5109, 0.2746 ) }
    dend_35 { pt3dadd( 386.703, 487.09, 24.124, 0.2748 ) }
    dend_35 { pt3dadd( 385.668, 487.513, 24.718, 0.275 ) }
    dend_35 { pt3dadd( 384.772, 488.183, 25.063, 0.2752 ) }
    dend_35 { pt3dadd( 383.962, 488.961, 25.1887, 0.2758 ) }
    dend_35 { pt3dadd( 383.015, 489.432, 25.0968, 0.2768 ) }
    dend_35 { pt3dadd( 381.917, 489.709, 24.8233, 0.2796 ) }
    dend_35 { pt3dadd( 380.842, 489.853, 24.4011, 0.2796 ) }
    dend_35 { pt3dadd( 379.79, 489.878, 23.8763, 0.305 ) }
    dend_35 { pt3dadd( 378.696, 489.892, 22.7651, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_2 (entry count 40/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 410.177, 561.102, 31.3463, 0.4366 ) }
    dend_30 { pt3dadd( 409.419, 561.527, 31.6352, 0.4576 ) }
    dend_30 { pt3dadd( 408.566, 561.487, 31.9729, 0.3662 ) }
    dend_30 { pt3dadd( 408.153, 560.495, 32.1499, 0.3124 ) }
    dend_30 { pt3dadd( 407.547, 559.531, 32.3434, 0.2988 ) }
    dend_30 { pt3dadd( 407.127, 558.501, 32.599, 0.3142 ) }
    dend_30 { pt3dadd( 406.938, 557.373, 32.8339, 0.3734 ) }
    dend_30 { pt3dadd( 406.747, 556.267, 33.122, 0.3338 ) }
    dend_30 { pt3dadd( 406.489, 555.27, 33.4782, 0.3 ) }
    dend_30 { pt3dadd( 406.443, 554.181, 33.7299, 0.2746 ) }
    dend_30 { pt3dadd( 406.477, 553.047, 33.931, 0.2746 ) }
    dend_30 { pt3dadd( 406.373, 551.923, 34.1538, 0.2744 ) }
    dend_30 { pt3dadd( 406.26, 550.813, 34.3258, 0.2744 ) }
    dend_30 { pt3dadd( 406.475, 549.822, 34.3974, 0.2742 ) }
    dend_30 { pt3dadd( 406.704, 548.784, 34.622, 0.274 ) }
    dend_30 { pt3dadd( 406.911, 547.775, 35.0045, 0.2736 ) }
    dend_30 { pt3dadd( 407.041, 546.668, 35.3612, 0.2728 ) }
    dend_30 { pt3dadd( 407.367, 545.591, 35.6348, 0.2712 ) }
    dend_30 { pt3dadd( 407.736, 544.52, 35.8355, 0.2684 ) }
    dend_30 { pt3dadd( 407.992, 543.407, 35.9666, 0.2626 ) }
    dend_30 { pt3dadd( 408.297, 542.313, 36.0212, 0.2542 ) }
    dend_30 { pt3dadd( 408.317, 541.169, 36.0321, 0.2288 ) }
    dend_30 { pt3dadd( 408.32, 540.025, 36.0326, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 63/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 410.177, 561.102, 31.3463, 0.4366 ) }
    dend_3 { pt3dadd( 410.323, 560.368, 31.1455, 0.3858 ) }
    dend_3 { pt3dadd( 410.784, 559.35, 30.919, 0.4848 ) }
    dend_3 { pt3dadd( 411.142, 558.382, 30.6132, 0.4162 ) }
    // Section: dend_88, id: dend_88, parent: dend_86 (entry count 67/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 404.798, 809.416, 42.67, 0.2754 ) }
    dend_88 { pt3dadd( 404.798, 810.332, 45.4787, 0.2288 ) }
    dend_88 { pt3dadd( 404.81, 811.383, 46.9675, 0.4114 ) }
    dend_88 { pt3dadd( 405.243, 812.352, 47.5745, 0.4 ) }
    dend_88 { pt3dadd( 405.892, 813.074, 48.3524, 0.443 ) }
    dend_88 { pt3dadd( 406.473, 814.005, 49.1142, 0.4414 ) }
    dend_88 { pt3dadd( 407.258, 814.569, 49.9803, 0.375 ) }
    dend_88 { pt3dadd( 408.267, 815.019, 50.6814, 0.3304 ) }
    dend_88 { pt3dadd( 409.041, 815.743, 51.1868, 0.3248 ) }
    dend_88 { pt3dadd( 409.827, 816.529, 51.6757, 0.3982 ) }
    dend_88 { pt3dadd( 410.519, 816.879, 52.3144, 0.356 ) }
    dend_88 { pt3dadd( 411.209, 817.707, 53.4982, 0.4576 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 79/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 404.798, 809.416, 42.67, 0.2754 ) }
    dend_87 { pt3dadd( 403.76, 809.069, 42.6006, 0.2762 ) }
    dend_87 { pt3dadd( 402.751, 809.008, 42.2778, 0.2776 ) }
    dend_87 { pt3dadd( 401.664, 809.057, 41.837, 0.2802 ) }
    dend_87 { pt3dadd( 401.026, 809.989, 41.456, 0.285 ) }
    dend_87 { pt3dadd( 400.333, 810.857, 41.1491, 0.2938 ) }
    dend_87 { pt3dadd( 399.515, 811.652, 40.8758, 0.3112 ) }
    dend_87 { pt3dadd( 398.787, 812.507, 40.6168, 0.3382 ) }
    dend_87 { pt3dadd( 397.959, 813.257, 40.3724, 0.413 ) }
    dend_87 { pt3dadd( 397.005, 813.882, 40.1456, 0.4328 ) }
    dend_87 { pt3dadd( 396.214, 814.703, 39.963, 0.3594 ) }
    dend_87 { pt3dadd( 395.529, 815.61, 39.8157, 0.3002 ) }
    dend_87 { pt3dadd( 394.948, 816.595, 39.6934, 0.275 ) }
    dend_87 { pt3dadd( 394.345, 817.55, 39.5567, 0.2754 ) }
    dend_87 { pt3dadd( 393.714, 818.468, 39.3635, 0.276 ) }
    dend_87 { pt3dadd( 393.408, 819.531, 39.1952, 0.2772 ) }
    dend_87 { pt3dadd( 393.266, 820.666, 39.0852, 0.2796 ) }
    dend_87 { pt3dadd( 392.797, 821.648, 39.0314, 0.2838 ) }
    dend_87 { pt3dadd( 392.054, 822.5, 39.0748, 0.292 ) }
    dend_87 { pt3dadd( 391.344, 823.309, 39.2342, 0.3064 ) }
    dend_87 { pt3dadd( 390.578, 824.157, 39.3571, 0.3356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_87 { pt3dadd( 389.737, 824.92, 39.4654, 0.3782 ) }
    dend_87 { pt3dadd( 388.832, 825.612, 39.5707, 0.5124 ) }
    dend_87 { pt3dadd( 387.813, 826.122, 39.5959, 0.4932 ) }
    dend_87 { pt3dadd( 386.746, 826.494, 39.5839, 0.387 ) }
    dend_87 { pt3dadd( 385.622, 826.692, 39.5839, 0.304 ) }
    dend_87 { pt3dadd( 384.501, 826.834, 39.5914, 0.2822 ) }
    dend_87 { pt3dadd( 383.4, 826.614, 39.515, 0.2884 ) }
    dend_87 { pt3dadd( 382.3, 826.406, 39.3952, 0.3014 ) }
    dend_87 { pt3dadd( 381.198, 826.406, 39.4318, 0.3192 ) }
    dend_87 { pt3dadd( 380.064, 826.408, 39.5265, 0.3828 ) }
    dend_87 { pt3dadd( 379.036, 826.831, 39.5452, 0.3514 ) }
    dend_87 { pt3dadd( 378.259, 827.556, 39.6343, 0.3322 ) }
    dend_87 { pt3dadd( 377.458, 828.337, 39.6962, 0.3362 ) }
    dend_87 { pt3dadd( 376.566, 828.985, 39.6892, 0.3796 ) }
    dend_87 { pt3dadd( 376.263, 829.759, 39.9042, 0.515 ) }
    dend_87 { pt3dadd( 375.239, 830.271, 40.0624, 0.498 ) }
    dend_87 { pt3dadd( 374.501, 831.029, 40.0672, 0.3954 ) }
    dend_87 { pt3dadd( 373.555, 831.602, 40.1279, 0.3208 ) }
    dend_87 { pt3dadd( 372.621, 832.162, 40.2447, 0.3078 ) }
    dend_87 { pt3dadd( 371.717, 832.642, 40.2041, 0.3616 ) }
    dend_87 { pt3dadd( 370.713, 832.881, 39.921, 0.3136 ) }
    dend_87 { pt3dadd( 369.996, 833.518, 39.5436, 0.2542 ) }
    dend_87 { pt3dadd( 369.996, 834.648, 38.7008, 0.2288 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 23/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 434.462, 836.122, 11.6532, 0.4772 ) }
    dend_85 { pt3dadd( 435.003, 836.441, 11.3826, 0.4576 ) }
    dend_85 { pt3dadd( 436.014, 836.974, 11.3503, 0.572 ) }
    dend_85 { pt3dadd( 436.918, 837.663, 11.3205, 0.4462 ) }
    dend_85 { pt3dadd( 437.692, 838.438, 11.3464, 0.3772 ) }
    dend_85 { pt3dadd( 438.287, 839.357, 11.3816, 0.3666 ) }
    dend_85 { pt3dadd( 438.734, 840.395, 11.2785, 0.465 ) }
    dend_85 { pt3dadd( 439.599, 840.628, 10.8872, 0.531 ) }
    dend_85 { pt3dadd( 440.591, 841.052, 10.4441, 0.5326 ) }
    dend_85 { pt3dadd( 441.059, 842.041, 10.0142, 0.665 ) }
    dend_85 { pt3dadd( 441.607, 842.991, 9.5233, 0.7396 ) }
    dend_85 { pt3dadd( 442.448, 843.747, 9.0175, 0.7912 ) }
    dend_85 { pt3dadd( 443.347, 844.302, 8.4647, 0.622 ) }
    dend_85 { pt3dadd( 444.316, 844.615, 7.8287, 0.4492 ) }
    dend_85 { pt3dadd( 445.389, 844.675, 7.2054, 0.3616 ) }
    dend_85 { pt3dadd( 446.514, 844.609, 6.6537, 0.4406 ) }
    dend_85 { pt3dadd( 447.636, 844.486, 6.2137, 0.3304 ) }
    dend_85 { pt3dadd( 448.758, 844.262, 5.6913, 0.2288 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 41/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 434.462, 836.122, 11.6532, 0.4772 ) }
    dend_84 { pt3dadd( 433.148, 836.286, 11.8089, 0.3998 ) }
    dend_84 { pt3dadd( 432.425, 837.151, 11.8576, 0.4204 ) }
    dend_84 { pt3dadd( 432.099, 838.171, 11.7513, 0.5072 ) }
    dend_84 { pt3dadd( 431.151, 838.764, 11.72, 0.6596 ) }
    dend_84 { pt3dadd( 430.365, 839.552, 11.7244, 0.5268 ) }
    dend_84 { pt3dadd( 429.577, 840.294, 11.54, 0.4666 ) }
    dend_84 { pt3dadd( 429.191, 840.712, 11.3221, 0.3664 ) }
    dend_84 { pt3dadd( 428.571, 841.596, 10.9975, 0.3546 ) }
    dend_84 { pt3dadd( 428.187, 842.636, 10.7428, 0.4024 ) }
    dend_84 { pt3dadd( 428.028, 843.702, 10.518, 0.3826 ) }
    dend_84 { pt3dadd( 427.647, 844.68, 10.158, 0.4156 ) }
    dend_84 { pt3dadd( 426.638, 845.018, 9.7512, 0.366 ) }
    dend_84 { pt3dadd( 425.634, 845.528, 9.4641, 0.3542 ) }
    dend_84 { pt3dadd( 424.579, 845.648, 9.1751, 0.4004 ) }
    dend_84 { pt3dadd( 423.571, 845.864, 8.7941, 0.3848 ) }
    dend_84 { pt3dadd( 422.651, 846.441, 8.4108, 0.39 ) }
    dend_84 { pt3dadd( 421.955, 847.278, 8.228, 0.4628 ) }
    dend_84 { pt3dadd( 421.033, 847.932, 8.1662, 0.5198 ) }
    dend_84 { pt3dadd( 420.078, 848.561, 8.1575, 0.5466 ) }
    dend_84 { pt3dadd( 419.149, 849.191, 8.2658, 0.5222 ) }
    dend_84 { pt3dadd( 418.232, 849.821, 8.4721, 0.6072 ) }
    dend_84 { pt3dadd( 417.278, 850.451, 8.627, 0.818 ) }
    dend_84 { pt3dadd( 416.322, 851.079, 8.7071, 0.723 ) }
    dend_84 { pt3dadd( 415.293, 851.571, 8.7025, 0.618 ) }
    dend_84 { pt3dadd( 414.257, 852.051, 8.6282, 0.534 ) }
    dend_84 { pt3dadd( 413.27, 852.492, 8.4102, 0.5274 ) }
    dend_84 { pt3dadd( 412.294, 852.88, 8.2182, 0.4782 ) }
    dend_84 { pt3dadd( 412.023, 853.963, 8.1302, 0.5672 ) }
    dend_84 { pt3dadd( 411.345, 854.673, 8.0071, 0.5422 ) }
    dend_84 { pt3dadd( 410.297, 854.438, 7.8466, 0.5044 ) }
    dend_84 { pt3dadd( 409.335, 854.863, 7.5807, 0.3926 ) }
    dend_84 { pt3dadd( 408.25, 855.165, 7.3471, 0.387 ) }
    dend_84 { pt3dadd( 407.166, 855.357, 7.2373, 0.3136 ) }
    dend_84 { pt3dadd( 406.677, 856.156, 7.1825, 0.2542 ) }
    dend_84 { pt3dadd( 406.172, 857.081, 6.8295, 0.2288 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 77/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 383.633, 723.747, 19.3785, 0.7164 ) }
    dend_63 { pt3dadd( 383.221, 724.173, 19.3909, 0.58 ) }
    dend_63 { pt3dadd( 382.425, 724.994, 19.42, 0.5886 ) }
    dend_63 { pt3dadd( 381.577, 725.748, 19.4403, 0.7096 ) }
    dend_63 { pt3dadd( 380.686, 726.445, 19.4376, 0.652 ) }
    dend_63 { pt3dadd( 379.951, 727.253, 19.4342, 0.54 ) }
    dend_63 { pt3dadd( 379.313, 728.063, 19.6685, 0.5864 ) }
    dend_63 { pt3dadd( 379.307, 728.834, 20.1674, 0.585 ) }
    dend_63 { pt3dadd( 378.927, 729.406, 20.5605, 0.5482 ) }
    dend_63 { pt3dadd( 378.319, 730.369, 20.8683, 0.6458 ) }
    dend_63 { pt3dadd( 377.693, 731.312, 21.161, 0.7078 ) }
    dend_63 { pt3dadd( 377.084, 732.263, 21.4183, 0.7138 ) }
    dend_63 { pt3dadd( 376.689, 733.298, 21.625, 0.5682 ) }
    dend_63 { pt3dadd( 375.947, 733.98, 21.8903, 0.6012 ) }
    dend_63 { pt3dadd( 375.055, 734.652, 22.0829, 0.5644 ) }
    dend_63 { pt3dadd( 374.904, 735.736, 22.1769, 0.5152 ) }
    dend_63 { pt3dadd( 374.992, 736.866, 22.2579, 0.559 ) }
    dend_63 { pt3dadd( 375.294, 737.964, 22.3308, 0.6724 ) }
    dend_63 { pt3dadd( 375.36, 739.088, 22.3555, 0.726 ) }
    dend_63 { pt3dadd( 375.361, 740.179, 22.5559, 0.6694 ) }
    dend_63 { pt3dadd( 375.128, 741.117, 22.9633, 0.6364 ) }
    dend_63 { pt3dadd( 374.729, 742.123, 23.2987, 0.6842 ) }
    dend_63 { pt3dadd( 374.344, 743.153, 23.6375, 0.701 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_63 { pt3dadd( 374.216, 744.015, 24.1669, 0.6224 ) }
    dend_63 { pt3dadd( 374.216, 745.103, 24.6931, 0.5522 ) }
    dend_63 { pt3dadd( 374.405, 746.219, 25.0478, 0.513 ) }
    dend_63 { pt3dadd( 374.681, 747.156, 25.359, 0.4562 ) }
    dend_63 { pt3dadd( 375.155, 748.018, 25.4119, 0.5022 ) }
    dend_63 { pt3dadd( 374.913, 748.876, 25.2354, 0.5402 ) }
    dend_63 { pt3dadd( 374.403, 749.85, 25.0741, 0.6118 ) }
    dend_63 { pt3dadd( 374.179, 750.957, 25.0289, 0.5096 ) }
    dend_63 { pt3dadd( 373.912, 752.069, 25.0491, 0.545 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 9/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 383.633, 723.747, 19.3785, 0.7164 ) }
    dend_62 { pt3dadd( 383.674, 725.072, 19.3505, 0.4576 ) }
    dend_62 { pt3dadd( 383.708, 726.216, 19.2327, 0.37 ) }
    dend_62 { pt3dadd( 383.739, 727.36, 19.186, 0.3196 ) }
    dend_62 { pt3dadd( 383.757, 728.503, 19.1206, 0.3118 ) }
    dend_62 { pt3dadd( 383.775, 729.647, 19.0283, 0.3386 ) }
    dend_62 { pt3dadd( 383.982, 730.754, 18.8991, 0.4182 ) }
    dend_62 { pt3dadd( 384.494, 731.777, 18.7202, 0.4202 ) }
    dend_62 { pt3dadd( 384.65, 732.903, 18.4811, 0.4442 ) }
    dend_62 { pt3dadd( 384.269, 733.876, 18.1189, 0.6194 ) }
    dend_62 { pt3dadd( 383.196, 733.915, 17.5998, 0.5374 ) }
    dend_62 { pt3dadd( 382.152, 733.827, 16.9256, 0.5296 ) }
    dend_62 { pt3dadd( 381.382, 733.885, 16.0357, 0.502 ) }
    dend_62 { pt3dadd( 381.007, 734.755, 15.116, 0.5156 ) }
    dend_62 { pt3dadd( 380.786, 735.106, 14.3812, 0.4552 ) }
    dend_62 { pt3dadd( 380.18, 735.98, 13.7901, 0.5286 ) }
    dend_62 { pt3dadd( 379.392, 736.41, 13.5281, 0.451 ) }
    dend_62 { pt3dadd( 378.296, 736.394, 13.3429, 0.4298 ) }
    dend_62 { pt3dadd( 377.45, 736.142, 12.9975, 0.4826 ) }
    dend_62 { pt3dadd( 376.47, 735.899, 12.603, 0.5896 ) }
    dend_62 { pt3dadd( 375.477, 736.281, 12.1558, 0.5156 ) }
    dend_62 { pt3dadd( 374.907, 737.236, 11.7029, 0.5558 ) }
    dend_62 { pt3dadd( 374.713, 738.341, 11.292, 0.4556 ) }
    dend_62 { pt3dadd( 374.565, 739.467, 10.9648, 0.4318 ) }
    dend_62 { pt3dadd( 374.791, 740.341, 10.5506, 0.5176 ) }
    dend_62 { pt3dadd( 374.904, 741.374, 10.2355, 0.5028 ) }
    dend_62 { pt3dadd( 374.658, 742.454, 9.9393, 0.4044 ) }
    dend_62 { pt3dadd( 374.151, 743.45, 9.6813, 0.3372 ) }
    dend_62 { pt3dadd( 373.506, 744.278, 9.5374, 0.3396 ) }
    dend_62 { pt3dadd( 373.317, 745.335, 9.3241, 0.4152 ) }
    dend_62 { pt3dadd( 373.775, 746.364, 9.122, 0.4378 ) }
    dend_62 { pt3dadd( 374.555, 747.103, 8.8437, 0.3644 ) }
    dend_62 { pt3dadd( 374.672, 748.057, 8.4862, 0.3304 ) }
    dend_62 { pt3dadd( 374.446, 749.17, 7.8823, 0.2288 ) }
    // Section: dend_59, id: dend_59, parent: dend_49 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 346.185, 698.719, 17.4338, 0.3976 ) }
    dend_59 { pt3dadd( 345.625, 699.698, 19.7369, 0.2288 ) }
    dend_59 { pt3dadd( 345.009, 700.532, 20.5319, 0.3178 ) }
    dend_59 { pt3dadd( 344.253, 701.347, 20.878, 0.3508 ) }
    dend_59 { pt3dadd( 343.731, 702.341, 21.1864, 0.436 ) }
    dend_59 { pt3dadd( 343.298, 703.399, 21.4281, 0.4762 ) }
    dend_59 { pt3dadd( 342.752, 704.397, 21.5942, 0.4354 ) }
    dend_59 { pt3dadd( 342.151, 705.37, 21.688, 0.4626 ) }
    dend_59 { pt3dadd( 341.668, 706.407, 21.7328, 0.4722 ) }
    dend_59 { pt3dadd( 341.194, 707.446, 21.7656, 0.4582 ) }
    dend_59 { pt3dadd( 341.005, 708.575, 21.8096, 0.3594 ) }
    dend_59 { pt3dadd( 340.817, 709.703, 21.8732, 0.3 ) }
    dend_59 { pt3dadd( 340.362, 710.725, 21.9639, 0.2746 ) }
    dend_59 { pt3dadd( 339.721, 711.672, 22.0842, 0.2748 ) }
    dend_59 { pt3dadd( 339.314, 712.664, 22.3215, 0.2748 ) }
    dend_59 { pt3dadd( 338.757, 713.624, 22.6102, 0.2752 ) }
    dend_59 { pt3dadd( 338.082, 714.491, 22.8548, 0.2756 ) }
    dend_59 { pt3dadd( 337.379, 715.393, 23.0619, 0.2766 ) }
    dend_59 { pt3dadd( 336.805, 716.35, 23.3335, 0.2784 ) }
    dend_59 { pt3dadd( 336.266, 717.327, 23.6444, 0.2818 ) }
    dend_59 { pt3dadd( 335.897, 718.409, 23.8975, 0.2876 ) }
    dend_59 { pt3dadd( 335.529, 719.492, 24.1143, 0.3 ) }
    dend_59 { pt3dadd( 335.197, 720.586, 24.326, 0.3164 ) }
    dend_59 { pt3dadd( 334.899, 721.569, 24.6502, 0.3774 ) }
    dend_59 { pt3dadd( 333.935, 722.014, 25.0031, 0.3414 ) }
    dend_59 { pt3dadd( 333.137, 722.557, 25.2598, 0.3138 ) }
    dend_59 { pt3dadd( 332.555, 723.486, 25.3671, 0.3012 ) }
    dend_59 { pt3dadd( 331.909, 724.424, 25.4642, 0.3188 ) }
    dend_59 { pt3dadd( 331.19, 725.291, 25.5432, 0.3822 ) }
    dend_59 { pt3dadd( 330.271, 725.942, 25.5723, 0.35 ) }
    dend_59 { pt3dadd( 329.633, 726.44, 25.9071, 0.331 ) }
    dend_59 { pt3dadd( 328.638, 726.939, 26.2948, 0.3266 ) }
    dend_59 { pt3dadd( 327.567, 727.306, 26.7243, 0.3976 ) }
    dend_59 { pt3dadd( 326.467, 727.458, 27.1879, 0.3736 ) }
    dend_59 { pt3dadd( 325.365, 727.607, 27.6557, 0.399 ) }
    dend_59 { pt3dadd( 324.304, 728.026, 28.0381, 0.3342 ) }
    dend_59 { pt3dadd( 323.24, 728.433, 28.3254, 0.3006 ) }
    dend_59 { pt3dadd( 322.124, 728.572, 28.6065, 0.2758 ) }
    dend_59 { pt3dadd( 321.009, 728.712, 28.8711, 0.2768 ) }
    dend_59 { pt3dadd( 319.954, 729.085, 28.9806, 0.2786 ) }
    dend_59 { pt3dadd( 318.911, 729.496, 28.9554, 0.282 ) }
    dend_59 { pt3dadd( 317.783, 729.496, 28.987, 0.2882 ) }
    dend_59 { pt3dadd( 316.659, 729.464, 29.0492, 0.3012 ) }
    dend_59 { pt3dadd( 315.575, 729.16, 29.0167, 0.3186 ) }
    dend_59 { pt3dadd( 314.488, 728.905, 28.9383, 0.3816 ) }
    dend_59 { pt3dadd( 313.371, 729.117, 28.877, 0.349 ) }
    dend_59 { pt3dadd( 312.269, 729.339, 28.8711, 0.3278 ) }
    dend_59 { pt3dadd( 311.223, 729.607, 29.0618, 0.3282 ) }
    dend_59 { pt3dadd( 310.151, 729.807, 29.3829, 0.3636 ) }
    dend_59 { pt3dadd( 309.009, 729.826, 29.7268, 0.4904 ) }
    dend_59 { pt3dadd( 307.867, 729.846, 30.0737, 0.428 ) }
    dend_59 { pt3dadd( 306.763, 729.983, 30.4615, 0.3844 ) }
    dend_59 { pt3dadd( 305.679, 730.184, 30.8904, 0.4102 ) }
    dend_59 { pt3dadd( 304.57, 730.134, 31.2785, 0.398 ) }
    dend_59 { pt3dadd( 303.445, 729.936, 31.6137, 0.439 ) }
    dend_59 { pt3dadd( 302.324, 729.716, 31.9096, 0.434 ) }
    dend_59 { pt3dadd( 301.211, 729.454, 32.1566, 0.3616 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_59 { pt3dadd( 300.098, 729.193, 32.3635, 0.3044 ) }
    dend_59 { pt3dadd( 299.022, 729.311, 32.6754, 0.2828 ) }
    dend_59 { pt3dadd( 298.005, 729.579, 33.0733, 0.2896 ) }
    dend_59 { pt3dadd( 297.994, 730.395, 33.4435, 0.3034 ) }
    dend_59 { pt3dadd( 298.575, 731.381, 33.7154, 0.323 ) }
    dend_59 { pt3dadd( 299.155, 732.367, 33.901, 0.3896 ) }
    dend_59 { pt3dadd( 299.787, 733.318, 33.9842, 0.365 ) }
    dend_59 { pt3dadd( 300.412, 734.271, 33.9856, 0.3524 ) }
    dend_59 { pt3dadd( 300.889, 735.307, 33.95, 0.3984 ) }
    dend_59 { pt3dadd( 301.331, 736.355, 33.9326, 0.3748 ) }
    dend_59 { pt3dadd( 301.651, 737.443, 34.004, 0.4014 ) }
    dend_59 { pt3dadd( 302.008, 738.517, 34.1281, 0.3384 ) }
    dend_59 { pt3dadd( 302.509, 739.455, 34.3255, 0.3086 ) }
    dend_59 { pt3dadd( 302.925, 740.337, 34.6696, 0.2902 ) }
    dend_59 { pt3dadd( 302.922, 741.365, 34.7878, 0.3046 ) }
    dend_59 { pt3dadd( 302.697, 742.366, 34.6654, 0.325 ) }
    dend_59 { pt3dadd( 302.825, 743.38, 34.3487, 0.3932 ) }
    dend_59 { pt3dadd( 303.141, 744.466, 34.0861, 0.3716 ) }
    dend_59 { pt3dadd( 303.141, 745.552, 34.0074, 0.3656 ) }
    dend_59 { pt3dadd( 303.208, 746.689, 33.9788, 0.4166 ) }
    dend_59 { pt3dadd( 303.396, 747.817, 34.0108, 0.4396 ) }
    dend_59 { pt3dadd( 303.585, 748.945, 34.0782, 0.3718 ) }
    dend_59 { pt3dadd( 303.545, 750.086, 34.1446, 0.3242 ) }
    dend_59 { pt3dadd( 303.487, 751.229, 34.1832, 0.3142 ) }
    dend_59 { pt3dadd( 303.397, 752.369, 34.2059, 0.3736 ) }
    dend_59 { pt3dadd( 303.231, 753.5, 34.2474, 0.334 ) }
    dend_59 { pt3dadd( 303.086, 754.635, 34.3179, 0.3002 ) }
    dend_59 { pt3dadd( 302.963, 755.772, 34.4229, 0.2752 ) }
    dend_59 { pt3dadd( 302.841, 756.909, 34.5612, 0.2756 ) }
    dend_59 { pt3dadd( 302.454, 757.957, 34.8029, 0.2766 ) }
    dend_59 { pt3dadd( 302.046, 758.998, 35.1235, 0.2782 ) }
    dend_59 { pt3dadd( 301.505, 760.003, 35.4483, 0.2816 ) }
    dend_59 { pt3dadd( 300.988, 761.015, 35.7826, 0.2872 ) }
    dend_59 { pt3dadd( 300.85, 762.115, 36.1012, 0.2992 ) }
    dend_59 { pt3dadd( 300.718, 763.212, 36.3443, 0.3148 ) }
    dend_59 { pt3dadd( 300.418, 764.104, 36.7483, 0.3748 ) }
    dend_59 { pt3dadd( 299.947, 764.837, 37.3526, 0.3362 ) }
    dend_59 { pt3dadd( 299.382, 765.798, 37.9495, 0.3044 ) }
    dend_59 { pt3dadd( 298.926, 766.788, 38.5409, 0.2828 ) }
    dend_59 { pt3dadd( 298.22, 767.462, 38.9278, 0.2898 ) }
    dend_59 { pt3dadd( 297.828, 768.212, 39.116, 0.3038 ) }
    dend_59 { pt3dadd( 297.397, 769.006, 39.417, 0.3234 ) }
    dend_59 { pt3dadd( 297.025, 770.079, 39.669, 0.3908 ) }
    dend_59 { pt3dadd( 296.634, 771.154, 39.879, 0.3656 ) }
    dend_59 { pt3dadd( 296.293, 772.234, 40.1218, 0.3608 ) }
    dend_59 { pt3dadd( 295.963, 773.317, 40.4071, 0.3778 ) }
    dend_59 { pt3dadd( 295.76, 774.391, 40.546, 0.5118 ) }
    dend_59 { pt3dadd( 295.462, 775.442, 40.7271, 0.492 ) }
    dend_59 { pt3dadd( 295.235, 776.245, 41.1547, 0.3846 ) }
    dend_59 { pt3dadd( 294.414, 776.686, 41.5094, 0.2996 ) }
    dend_59 { pt3dadd( 293.559, 777.325, 41.7113, 0.274 ) }
    dend_59 { pt3dadd( 292.943, 778.288, 41.8298, 0.2736 ) }
    dend_59 { pt3dadd( 293.045, 779.248, 41.7805, 0.2728 ) }
    dend_59 { pt3dadd( 292.75, 780.309, 41.7262, 0.2712 ) }
    dend_59 { pt3dadd( 292.275, 781.346, 41.6892, 0.2684 ) }
    dend_59 { pt3dadd( 292.008, 782.458, 41.7318, 0.2626 ) }
    dend_59 { pt3dadd( 291.742, 783.571, 41.8457, 0.2542 ) }
    dend_59 { pt3dadd( 291.693, 784.622, 42.1408, 0.2288 ) }
    dend_59 { pt3dadd( 291.693, 785.658, 43.2538, 0.2288 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 59/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 346.185, 698.719, 17.4338, 0.3976 ) }
    dend_50 { pt3dadd( 345.588, 698.979, 17.4419, 0.4284 ) }
    dend_50 { pt3dadd( 344.693, 699.549, 17.3217, 0.4626 ) }
    dend_50 { pt3dadd( 344.63, 700.645, 17.2148, 0.4094 ) }
    dend_50 { pt3dadd( 344.512, 701.723, 17.1084, 0.4182 ) }
    dend_50 { pt3dadd( 344.151, 702.807, 17.0113, 0.3706 ) }
    dend_50 { pt3dadd( 343.717, 703.867, 16.9282, 0.3638 ) }
    dend_50 { pt3dadd( 343.285, 704.925, 16.8738, 0.4132 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 67/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 318.15, 672.418, 16.5582, 0.4526 ) }
    dend_46 { pt3dadd( 317.74, 672.726, 17.0312, 0.4588 ) }
    dend_46 { pt3dadd( 316.847, 673.424, 17.5197, 0.4086 ) }
    dend_46 { pt3dadd( 315.864, 673.993, 17.9559, 0.3858 ) }
    dend_46 { pt3dadd( 315.004, 674.73, 18.3282, 0.4612 ) }
    dend_46 { pt3dadd( 314.357, 675.666, 18.6395, 0.4876 ) }
    dend_46 { pt3dadd( 313.477, 676.233, 18.9898, 0.628 ) }
    dend_46 { pt3dadd( 312.35, 676.233, 19.3295, 0.6752 ) }
    dend_46 { pt3dadd( 311.112, 676.58, 20.1641, 0.4618 ) }
    dend_46 { pt3dadd( 310.06, 676.691, 20.4267, 0.358 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 77/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 318.15, 672.418, 16.5582, 0.4526 ) }
    dend_45 { pt3dadd( 317.019, 672.661, 16.2456, 0.2288 ) }
    dend_45 { pt3dadd( 315.889, 672.74, 15.6787, 0.3508 ) }
    dend_45 { pt3dadd( 314.799, 672.891, 15.3971, 0.4374 ) }
    dend_45 { pt3dadd( 313.882, 673.468, 15.1106, 0.4726 ) }
    dend_45 { pt3dadd( 313.213, 674.355, 14.7248, 0.4588 ) }
    dend_45 { pt3dadd( 312.912, 675.255, 14.2153, 0.3604 ) }
    dend_45 { pt3dadd( 312.876, 675.231, 13.4118, 0.302 ) }
    dend_45 { pt3dadd( 312.197, 674.487, 12.7708, 0.2782 ) }
    dend_45 { pt3dadd( 311.113, 674.192, 12.4061, 0.2814 ) }
    dend_45 { pt3dadd( 310.185, 674.777, 12.3005, 0.287 ) }
    dend_45 { pt3dadd( 309.497, 675.249, 12.6619, 0.2988 ) }
    dend_45 { pt3dadd( 309.12, 674.576, 13.3666, 0.3144 ) }
    dend_45 { pt3dadd( 308.141, 674.231, 14.0722, 0.374 ) }
    dend_45 { pt3dadd( 307.838, 673.695, 15.0068, 0.3348 ) }
    dend_45 { pt3dadd( 307.409, 672.892, 15.9067, 0.3018 ) }
    dend_45 { pt3dadd( 307.276, 672.285, 16.8025, 0.278 ) }
    dend_45 { pt3dadd( 306.469, 672.663, 17.4566, 0.281 ) }
    dend_45 { pt3dadd( 306.528, 673.702, 17.6628, 0.2866 ) }
    dend_45 { pt3dadd( 306.249, 673.977, 17.3947, 0.2966 ) }
    dend_45 { pt3dadd( 305.574, 673.312, 17.0222, 0.3162 ) }
    dend_45 { pt3dadd( 305.439, 672.269, 16.4757, 0.3476 ) }
    dend_45 { pt3dadd( 304.645, 671.63, 16.0496, 0.43 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_45 { pt3dadd( 303.543, 671.566, 15.6116, 0.4654 ) }
    dend_45 { pt3dadd( 302.483, 671.36, 15.1665, 0.4144 ) }
    dend_45 { pt3dadd( 301.41, 671.042, 14.7521, 0.4288 ) }
    dend_45 { pt3dadd( 300.315, 670.76, 14.3678, 0.384 ) }
    dend_45 { pt3dadd( 299.426, 670.268, 14.1014, 0.4182 ) }
    dend_45 { pt3dadd( 298.321, 670.302, 13.8891, 0.371 ) }
    dend_45 { pt3dadd( 297.344, 670.72, 13.571, 0.3634 ) }
    dend_45 { pt3dadd( 296.36, 670.784, 13.1705, 0.4188 ) }
    dend_45 { pt3dadd( 295.28, 670.543, 12.7364, 0.4126 ) }
    dend_45 { pt3dadd( 294.174, 670.358, 12.308, 0.4732 ) }
    dend_45 { pt3dadd( 293.053, 670.139, 11.9353, 0.4632 ) }
    dend_45 { pt3dadd( 291.96, 670.206, 11.6088, 0.5804 ) }
    dend_45 { pt3dadd( 290.866, 670.104, 11.307, 0.5978 ) }
    dend_45 { pt3dadd( 289.827, 669.73, 11.0852, 0.4568 ) }
    dend_45 { pt3dadd( 288.755, 669.515, 10.7791, 0.3484 ) }
    dend_45 { pt3dadd( 287.642, 669.472, 10.429, 0.3196 ) }
    dend_45 { pt3dadd( 286.6, 669.492, 10.0998, 0.3474 ) }
    dend_45 { pt3dadd( 285.721, 669.756, 9.5716, 0.4604 ) }
    dend_45 { pt3dadd( 284.614, 669.711, 9.1576, 0.3728 ) }
    dend_45 { pt3dadd( 284.153, 669.07, 8.6231, 0.2796 ) }
    dend_45 { pt3dadd( 283.581, 668.853, 6.7561, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 416.585, 466.318, 26.4607, 0.597 ) }
    dend_38 { pt3dadd( 416.897, 466.362, 26.6801, 0.2288 ) }
    dend_38 { pt3dadd( 417.65, 465.864, 26.8528, 0.3274 ) }
    dend_38 { pt3dadd( 418.655, 465.393, 26.916, 0.368 ) }
    dend_38 { pt3dadd( 419.325, 464.713, 26.7901, 0.469 ) }
    dend_38 { pt3dadd( 420.156, 463.952, 26.647, 0.5332 ) }
    dend_38 { pt3dadd( 420.878, 463.079, 26.4838, 0.5616 ) }
    dend_38 { pt3dadd( 421.631, 462.281, 26.3265, 0.597 ) }
    dend_38 { pt3dadd( 421.994, 461.448, 26.0674, 0.5182 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 30/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 416.585, 466.318, 26.4607, 0.597 ) }
    dend_37 { pt3dadd( 416.564, 465.218, 26.3473, 0.4872 ) }
    dend_37 { pt3dadd( 416.756, 464.112, 26.3129, 0.479 ) }
    dend_37 { pt3dadd( 417.156, 463.281, 26.4465, 0.4308 ) }
    dend_37 { pt3dadd( 417.228, 462.333, 26.3642, 0.502 ) }
    dend_37 { pt3dadd( 417.521, 461.609, 26.206, 0.5398 ) }
    dend_37 { pt3dadd( 418.049, 460.596, 26.0646, 0.611 ) }
    dend_37 { pt3dadd( 418.467, 459.544, 25.9034, 0.5082 ) }
    dend_37 { pt3dadd( 418.89, 458.499, 25.7974, 0.5428 ) }
    dend_37 { pt3dadd( 419.194, 457.412, 25.6618, 0.4294 ) }
    dend_37 { pt3dadd( 419.306, 456.384, 25.7397, 0.3934 ) }
    dend_37 { pt3dadd( 419.228, 455.57, 25.6197, 0.3958 ) }
    dend_37 { pt3dadd( 418.904, 454.479, 25.5294, 0.5226 ) }
    dend_37 { pt3dadd( 418.705, 453.355, 25.5291, 0.6224 ) }
    dend_37 { pt3dadd( 418.62, 452.243, 25.6375, 0.7778 ) }
    dend_37 { pt3dadd( 418.963, 451.244, 25.8997, 0.7508 ) }
    dend_37 { pt3dadd( 418.956, 450.129, 26.1484, 0.6288 ) }
    dend_37 { pt3dadd( 418.539, 449.074, 26.406, 0.5234 ) }
    dend_37 { pt3dadd( 418.734, 448.296, 26.7174, 0.4288 ) }
    dend_37 { pt3dadd( 418.62, 447.27, 26.8381, 0.4492 ) }
    dend_37 { pt3dadd( 418.62, 446.248, 26.7935, 0.453 ) }
    dend_37 { pt3dadd( 418.634, 445.521, 26.9785, 0.3962 ) }
    dend_37 { pt3dadd( 418.81, 444.696, 27.34, 0.3708 ) }
    dend_37 { pt3dadd( 418.856, 443.675, 27.7431, 0.3948 ) }
    dend_37 { pt3dadd( 419.288, 442.794, 27.8981, 0.5506 ) }
    dend_37 { pt3dadd( 419.133, 442.032, 28.2299, 0.5288 ) }
    dend_37 { pt3dadd( 419.306, 441.102, 28.4043, 0.6236 ) }
    dend_37 { pt3dadd( 419.353, 439.996, 28.4494, 0.6004 ) }
    dend_37 { pt3dadd( 419.535, 438.874, 28.4704, 0.608 ) }
    dend_37 { pt3dadd( 419.69, 437.756, 28.5102, 0.6056 ) }
    dend_37 { pt3dadd( 420.4, 436.905, 28.597, 0.6804 ) }
    dend_37 { pt3dadd( 421.023, 435.985, 28.74, 0.6642 ) }
    dend_37 { pt3dadd( 421.804, 435.254, 29.0046, 0.6982 ) }
    dend_37 { pt3dadd( 422.351, 434.415, 29.2698, 0.6802 ) }
    dend_37 { pt3dadd( 423.242, 433.742, 29.5434, 0.5826 ) }
    dend_37 { pt3dadd( 423.866, 433.033, 29.8623, 0.484 ) }
    dend_37 { pt3dadd( 423.94, 432.092, 30.126, 0.3602 ) }
    dend_37 { pt3dadd( 424.474, 431.48, 30.1524, 0.3016 ) }
    dend_37 { pt3dadd( 424.773, 430.479, 30.1871, 0.2774 ) }
    dend_37 { pt3dadd( 424.595, 429.632, 30.4385, 0.28 ) }
    dend_37 { pt3dadd( 425.187, 428.811, 30.6149, 0.2846 ) }
    dend_37 { pt3dadd( 425.486, 427.826, 30.7003, 0.2932 ) }
    dend_37 { pt3dadd( 425.619, 426.774, 30.7577, 0.3092 ) }
    dend_37 { pt3dadd( 425.715, 425.722, 30.8126, 0.3394 ) }
    dend_37 { pt3dadd( 425.715, 424.588, 30.9064, 0.3912 ) }
    dend_37 { pt3dadd( 425.727, 423.449, 31.0209, 0.508 ) }
    dend_37 { pt3dadd( 425.981, 422.36, 31.1671, 0.6236 ) }
    dend_37 { pt3dadd( 426.313, 421.291, 31.3687, 0.6412 ) }
    dend_37 { pt3dadd( 426.481, 420.18, 31.635, 0.4858 ) }
    dend_37 { pt3dadd( 426.566, 419.071, 31.9189, 0.4238 ) }
    dend_37 { pt3dadd( 426.401, 417.963, 32.1863, 0.356 ) }
    dend_37 { pt3dadd( 426.63, 416.918, 32.6547, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_3 (entry count 82/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 411.142, 558.382, 30.6132, 0.4162 ) }
    dend_29 { pt3dadd( 411.779, 558.687, 29.8396, 0.4576 ) }
    dend_29 { pt3dadd( 412.75, 559.236, 30.2744, 0.372 ) }
    dend_29 { pt3dadd( 413.772, 559.422, 30.4567, 0.3234 ) }
    dend_29 { pt3dadd( 414.755, 558.933, 30.7003, 0.319 ) }
    dend_29 { pt3dadd( 415.519, 558.132, 30.9562, 0.3526 ) }
    dend_29 { pt3dadd( 416.3, 557.318, 31.1254, 0.4406 ) }
    dend_29 { pt3dadd( 416.86, 556.357, 31.334, 0.4788 ) }
    dend_29 { pt3dadd( 417.628, 555.509, 31.4846, 0.4702 ) }
    dend_29 { pt3dadd( 418.312, 554.938, 31.666, 0.3816 ) }
    dend_29 { pt3dadd( 419.333, 554.424, 31.78, 0.341 ) }
    dend_29 { pt3dadd( 420.308, 553.826, 31.843, 0.3526 ) }
    dend_29 { pt3dadd( 421.346, 553.344, 31.8682, 0.4096 ) }
    dend_29 { pt3dadd( 422.478, 553.302, 31.8091, 0.5714 ) }
    dend_29 { pt3dadd( 423.554, 552.981, 31.7033, 0.5994 ) }
    dend_29 { pt3dadd( 424.663, 552.757, 31.5837, 0.5982 ) }
    dend_29 { pt3dadd( 425.8, 552.629, 31.4776, 0.625 ) }
    dend_29 { pt3dadd( 426.888, 552.477, 31.4608, 0.535 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_29 { pt3dadd( 427.657, 551.941, 31.2841, 0.5882 ) }
    dend_29 { pt3dadd( 428.696, 551.52, 31.0769, 0.5342 ) }
    dend_29 { pt3dadd( 429.792, 551.232, 30.9058, 0.4884 ) }
    dend_29 { pt3dadd( 430.74, 550.79, 30.861, 0.3684 ) }
    dend_29 { pt3dadd( 431.518, 550.346, 30.935, 0.3166 ) }
    dend_29 { pt3dadd( 432.357, 549.947, 30.8216, 0.3066 ) }
    dend_29 { pt3dadd( 433.284, 549.305, 30.7726, 0.3286 ) }
    dend_29 { pt3dadd( 434.354, 548.95, 30.781, 0.4012 ) }
    dend_29 { pt3dadd( 435.437, 548.7, 30.7577, 0.3804 ) }
    dend_29 { pt3dadd( 436.23, 548.148, 30.8, 0.4114 ) }
    dend_29 { pt3dadd( 437.11, 548.086, 30.9753, 0.3582 ) }
    dend_29 { pt3dadd( 438.174, 548.016, 30.9865, 0.34 ) }
    dend_29 { pt3dadd( 439.221, 547.57, 30.9697, 0.3742 ) }
    dend_29 { pt3dadd( 440.246, 547.063, 30.9288, 0.3354 ) }
    dend_29 { pt3dadd( 441.268, 546.551, 30.8694, 0.3028 ) }
    dend_29 { pt3dadd( 442.395, 546.485, 30.7854, 0.28 ) }
    dend_29 { pt3dadd( 443.473, 546.417, 30.6849, 0.2846 ) }
    dend_29 { pt3dadd( 444.445, 545.868, 30.5463, 0.2928 ) }
    dend_29 { pt3dadd( 445.462, 545.434, 30.368, 0.3094 ) }
    dend_29 { pt3dadd( 446.552, 545.103, 30.186, 0.3338 ) }
    dend_29 { pt3dadd( 447.572, 544.609, 29.9754, 0.4108 ) }
    dend_29 { pt3dadd( 448.503, 544.144, 29.6584, 0.399 ) }
    dend_29 { pt3dadd( 449.476, 543.72, 29.4238, 0.4412 ) }
    dend_29 { pt3dadd( 450.458, 543.172, 29.2412, 0.4378 ) }
    dend_29 { pt3dadd( 451.502, 542.797, 29.0634, 0.3686 ) }
    dend_29 { pt3dadd( 452.204, 542.282, 28.8954, 0.3172 ) }
    dend_29 { pt3dadd( 453.121, 541.61, 28.7328, 0.3076 ) }
    dend_29 { pt3dadd( 454.055, 540.95, 28.6163, 0.3302 ) }
    dend_29 { pt3dadd( 454.992, 540.293, 28.5258, 0.4044 ) }
    dend_29 { pt3dadd( 455.891, 539.586, 28.462, 0.3858 ) }
    dend_29 { pt3dadd( 456.784, 538.871, 28.4206, 0.423 ) }
    dend_29 { pt3dadd( 457.748, 538.257, 28.3914, 0.3734 ) }
    dend_29 { pt3dadd( 458.722, 537.657, 28.3643, 0.3988 ) }
    dend_29 { pt3dadd( 459.737, 537.131, 28.3262, 0.3338 ) }
    dend_29 { pt3dadd( 460.761, 536.62, 28.2733, 0.3 ) }
    dend_29 { pt3dadd( 461.772, 536.086, 28.2038, 0.2746 ) }
    dend_29 { pt3dadd( 462.78, 535.545, 28.1173, 0.2746 ) }
    dend_29 { pt3dadd( 463.821, 535.121, 27.9563, 0.2748 ) }
    dend_29 { pt3dadd( 464.876, 534.751, 27.7123, 0.2748 ) }
    dend_29 { pt3dadd( 465.896, 534.254, 27.473, 0.2752 ) }
    dend_29 { pt3dadd( 466.904, 533.714, 27.2611, 0.2758 ) }
    dend_29 { pt3dadd( 467.897, 533.145, 27.0641, 0.2766 ) }
    dend_29 { pt3dadd( 468.882, 532.564, 26.8752, 0.2786 ) }
    dend_29 { pt3dadd( 469.625, 531.748, 26.6437, 0.282 ) }
    dend_29 { pt3dadd( 470.247, 530.816, 26.3487, 0.288 ) }
    dend_29 { pt3dadd( 470.93, 529.906, 26.0429, 0.3006 ) }
    dend_29 { pt3dadd( 471.623, 529.0, 25.7388, 0.3174 ) }
    dend_29 { pt3dadd( 472.529, 528.324, 25.4146, 0.3798 ) }
    dend_29 { pt3dadd( 473.442, 527.66, 25.0795, 0.3454 ) }
    dend_29 { pt3dadd( 474.336, 526.996, 24.7231, 0.3224 ) }
    dend_29 { pt3dadd( 475.175, 526.258, 24.3984, 0.3108 ) }
    dend_29 { pt3dadd( 475.918, 525.388, 24.1644, 0.3672 ) }
    dend_29 { pt3dadd( 476.545, 524.453, 23.9834, 0.322 ) }
    dend_29 { pt3dadd( 477.119, 523.505, 23.7955, 0.2796 ) }
    dend_29 { pt3dadd( 477.943, 522.811, 23.7947, 0.2288 ) }
    dend_29 { pt3dadd( 478.98, 522.398, 23.9036, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 56/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 411.142, 558.382, 30.6132, 0.4162 ) }
    dend_4 { pt3dadd( 410.455, 557.528, 30.3346, 0.3688 ) }
    dend_4 { pt3dadd( 409.933, 556.524, 30.0955, 0.3508 ) }
    dend_4 { pt3dadd( 409.717, 555.411, 30.0182, 0.4362 ) }
    dend_4 { pt3dadd( 409.887, 554.308, 30.091, 0.4756 ) }
    dend_4 { pt3dadd( 410.162, 553.227, 30.2854, 0.4406 ) }
    dend_4 { pt3dadd( 410.704, 552.226, 30.4632, 0.4408 ) }
    dend_4 { pt3dadd( 411.291, 551.265, 30.597, 0.5836 ) }
    dend_4 { pt3dadd( 411.825, 550.288, 30.737, 0.6156 ) }
    dend_4 { pt3dadd( 412.214, 549.225, 30.8213, 0.6606 ) }
    dend_4 { pt3dadd( 412.641, 548.17, 30.9078, 0.5836 ) }
    dend_4 { pt3dadd( 412.969, 547.085, 30.9742, 0.5336 ) }
    dend_4 { pt3dadd( 413.143, 545.955, 31.0397, 0.4476 ) }
    dend_4 { pt3dadd( 413.355, 544.83, 31.1046, 0.4852 ) }
    // Section: dend_73, id: dend_73, parent: dend_63 (entry count 70/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 373.912, 752.069, 25.0491, 0.545 ) }
    dend_73 { pt3dadd( 373.752, 752.747, 25.1599, 0.4346 ) }
    dend_73 { pt3dadd( 373.578, 753.856, 25.3829, 0.398 ) }
    dend_73 { pt3dadd( 373.565, 754.984, 25.6553, 0.4294 ) }
    dend_73 { pt3dadd( 373.688, 756.119, 25.8997, 0.4642 ) }
    dend_73 { pt3dadd( 373.751, 757.255, 26.1296, 0.4124 ) }
    dend_73 { pt3dadd( 373.567, 758.326, 26.2245, 0.4242 ) }
    dend_73 { pt3dadd( 373.382, 759.428, 26.314, 0.3806 ) }
    dend_73 { pt3dadd( 373.146, 760.238, 26.548, 0.3884 ) }
    dend_73 { pt3dadd( 372.943, 761.307, 26.7767, 0.4298 ) }
    dend_73 { pt3dadd( 372.353, 761.979, 26.704, 0.6038 ) }
    dend_73 { pt3dadd( 371.886, 762.984, 26.5197, 0.6838 ) }
    dend_73 { pt3dadd( 371.546, 764.06, 26.4093, 0.6372 ) }
    dend_73 { pt3dadd( 371.546, 765.196, 26.2511, 0.582 ) }
    dend_73 { pt3dadd( 371.651, 766.334, 26.1108, 0.5568 ) }
    dend_73 { pt3dadd( 371.539, 767.456, 26.0339, 0.5942 ) }
    dend_73 { pt3dadd( 371.201, 768.545, 26.0432, 0.4822 ) }
    dend_73 { pt3dadd( 370.897, 769.641, 26.071, 0.4698 ) }
    dend_73 { pt3dadd( 370.536, 770.704, 26.0592, 0.4138 ) }
    dend_73 { pt3dadd( 369.985, 771.674, 26.1042, 0.4698 ) }
    dend_73 { pt3dadd( 369.281, 772.503, 26.1999, 0.4854 ) }
    dend_73 { pt3dadd( 368.856, 773.168, 26.5258, 0.4834 ) }
    dend_73 { pt3dadd( 367.956, 773.833, 26.7905, 0.401 ) }
    dend_73 { pt3dadd( 366.94, 774.123, 26.8694, 0.4028 ) }
    dend_73 { pt3dadd( 365.941, 774.618, 26.8952, 0.3412 ) }
    dend_73 { pt3dadd( 365.541, 775.592, 26.8409, 0.3138 ) }
    dend_73 { pt3dadd( 365.748, 776.563, 26.9029, 0.2998 ) }
    dend_73 { pt3dadd( 365.266, 777.214, 27.1457, 0.3224 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 98/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 373.912, 752.069, 25.0491, 0.545 ) }
    dend_64 { pt3dadd( 373.054, 752.995, 24.7946, 0.9152 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_64 { pt3dadd( 372.056, 753.521, 25.0349, 0.6296 ) }
    dend_64 { pt3dadd( 371.262, 754.236, 25.2049, 0.5602 ) }
    dend_64 { pt3dadd( 370.477, 755.051, 25.3138, 0.5534 ) }
    dend_64 { pt3dadd( 369.52, 755.649, 25.3301, 0.636 ) }
    dend_64 { pt3dadd( 368.534, 756.152, 25.2116, 0.5556 ) }
    dend_64 { pt3dadd( 367.53, 756.682, 25.0577, 0.626 ) }
    dend_64 { pt3dadd( 366.502, 757.16, 24.9098, 0.606 ) }
    dend_64 { pt3dadd( 365.421, 757.523, 24.7652, 0.6122 ) }
    dend_64 { pt3dadd( 364.459, 758.105, 24.634, 0.6434 ) }
    dend_64 { pt3dadd( 363.774, 758.899, 24.6297, 0.6058 ) }
    dend_64 { pt3dadd( 363.052, 759.671, 24.5078, 0.5402 ) }
    dend_64 { pt3dadd( 362.771, 760.054, 24.3652, 0.6296 ) }
    dend_64 { pt3dadd( 362.24, 761.03, 24.1653, 0.6844 ) }
    dend_64 { pt3dadd( 361.927, 762.115, 23.9406, 0.6382 ) }
    dend_64 { pt3dadd( 361.573, 763.201, 23.7595, 0.5838 ) }
    dend_64 { pt3dadd( 361.254, 764.266, 23.5681, 0.56 ) }
    dend_64 { pt3dadd( 360.713, 765.216, 23.3897, 0.6002 ) }
    dend_64 { pt3dadd( 359.928, 766.022, 23.3436, 0.4944 ) }
    dend_64 { pt3dadd( 359.134, 766.813, 23.444, 0.4862 ) }
    dend_64 { pt3dadd( 358.309, 767.599, 23.5862, 0.474 ) }
    dend_64 { pt3dadd( 357.753, 768.589, 23.7315, 0.4366 ) }
    dend_64 { pt3dadd( 357.296, 769.46, 24.0096, 0.4398 ) }
    dend_64 { pt3dadd( 357.056, 770.548, 24.1827, 0.5508 ) }
    dend_64 { pt3dadd( 356.509, 771.55, 24.3132, 0.705 ) }
    dend_64 { pt3dadd( 355.94, 772.542, 24.4154, 0.7822 ) }
    dend_64 { pt3dadd( 355.497, 773.593, 24.5311, 0.7944 ) }
    dend_64 { pt3dadd( 354.876, 774.535, 24.6927, 0.7674 ) }
    dend_64 { pt3dadd( 354.226, 775.474, 24.8442, 0.7298 ) }
    dend_64 { pt3dadd( 353.283, 775.943, 25.0105, 0.5986 ) }
    dend_64 { pt3dadd( 352.16, 776.125, 25.1873, 0.6546 ) }
    dend_64 { pt3dadd( 351.151, 776.607, 25.3802, 0.6776 ) }
    dend_64 { pt3dadd( 350.537, 777.448, 25.6677, 0.656 ) }
    dend_64 { pt3dadd( 349.833, 778.167, 26.094, 0.4702 ) }
    dend_64 { pt3dadd( 348.849, 778.627, 26.5758, 0.375 ) }
    dend_64 { pt3dadd( 347.785, 779.005, 27.0119, 0.362 ) }
    dend_64 { pt3dadd( 346.795, 779.543, 27.3976, 0.4578 ) }
    dend_64 { pt3dadd( 346.05, 780.391, 27.6552, 0.5118 ) }
    dend_64 { pt3dadd( 345.323, 781.191, 27.9184, 0.5256 ) }
    dend_64 { pt3dadd( 344.446, 781.702, 27.938, 0.5122 ) }
    dend_64 { pt3dadd( 343.438, 782.167, 27.8807, 0.4488 ) }
    dend_64 { pt3dadd( 342.357, 782.539, 27.822, 0.517 ) }
    dend_64 { pt3dadd( 341.42, 783.18, 27.7785, 0.4288 ) }
    dend_64 { pt3dadd( 340.515, 783.878, 27.7635, 0.3922 ) }
    dend_64 { pt3dadd( 339.516, 784.378, 27.8597, 0.3948 ) }
    dend_64 { pt3dadd( 338.502, 784.844, 28.0731, 0.5144 ) }
    // Section: dend_58, id: dend_58, parent: dend_50 (entry count 45/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 343.285, 704.925, 16.8738, 0.4132 ) }
    dend_58 { pt3dadd( 343.516, 705.013, 16.9705, 0.2288 ) }
    dend_58 { pt3dadd( 344.569, 705.413, 16.2111, 0.2748 ) }
    dend_58 { pt3dadd( 345.624, 705.814, 15.8878, 0.275 ) }
    dend_58 { pt3dadd( 346.609, 706.38, 15.534, 0.2752 ) }
    dend_58 { pt3dadd( 347.569, 706.758, 15.0511, 0.2758 ) }
    dend_58 { pt3dadd( 348.189, 707.713, 14.5875, 0.277 ) }
    dend_58 { pt3dadd( 348.896, 708.564, 14.1443, 0.2792 ) }
    dend_58 { pt3dadd( 349.848, 709.199, 13.6691, 0.2828 ) }
    dend_58 { pt3dadd( 349.791, 710.251, 13.004, 0.291 ) }
    dend_58 { pt3dadd( 349.428, 711.295, 12.33, 0.2994 ) }
    dend_58 { pt3dadd( 349.541, 712.221, 11.4951, 0.3474 ) }
    dend_58 { pt3dadd( 349.848, 712.974, 10.4905, 0.2796 ) }
    dend_58 { pt3dadd( 349.848, 713.777, 7.968, 0.2288 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 59/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 343.285, 704.925, 16.8738, 0.4132 ) }
    dend_51 { pt3dadd( 343.002, 705.385, 16.8267, 0.433 ) }
    dend_51 { pt3dadd( 342.402, 706.358, 16.7631, 0.3598 ) }
    dend_51 { pt3dadd( 341.888, 707.363, 16.6431, 0.301 ) }
    dend_51 { pt3dadd( 341.488, 708.406, 16.4314, 0.2764 ) }
    dend_51 { pt3dadd( 340.996, 709.421, 16.2068, 0.2778 ) }
    dend_51 { pt3dadd( 340.426, 710.413, 16.0273, 0.2808 ) }
    dend_51 { pt3dadd( 339.744, 711.298, 15.8493, 0.286 ) }
    dend_51 { pt3dadd( 338.944, 712.069, 15.6376, 0.2956 ) }
    dend_51 { pt3dadd( 337.972, 712.617, 15.5252, 0.3144 ) }
    dend_51 { pt3dadd( 336.968, 713.119, 15.5605, 0.3442 ) }
    dend_51 { pt3dadd( 335.984, 713.668, 15.6747, 0.4242 ) }
    dend_51 { pt3dadd( 335.047, 714.326, 15.7867, 0.4532 ) }
    dend_51 { pt3dadd( 334.191, 715.064, 15.8931, 0.3984 ) }
    dend_51 { pt3dadd( 333.533, 716.0, 15.9818, 0.367 ) }
    dend_51 { pt3dadd( 332.964, 716.971, 16.0579, 0.4254 ) }
    dend_51 { pt3dadd( 332.625, 718.039, 16.1762, 0.4246 ) }
    dend_51 { pt3dadd( 332.267, 719.097, 16.2684, 0.4956 ) }
    dend_51 { pt3dadd( 331.866, 720.14, 16.224, 0.5046 ) }
    dend_51 { pt3dadd( 331.295, 721.085, 16.1104, 0.6592 ) }
    dend_51 { pt3dadd( 330.485, 721.894, 15.9968, 0.734 ) }
    dend_51 { pt3dadd( 329.631, 722.637, 15.8634, 0.7566 ) }
    dend_51 { pt3dadd( 328.728, 723.308, 15.7002, 0.6742 ) }
    dend_51 { pt3dadd( 327.906, 724.089, 15.6164, 0.6688 ) }
    dend_51 { pt3dadd( 327.111, 724.906, 15.646, 0.63 ) }
    dend_51 { pt3dadd( 326.297, 725.687, 15.7908, 0.4692 ) }
    dend_51 { pt3dadd( 325.499, 726.472, 16.0259, 0.3728 ) }
    dend_51 { pt3dadd( 324.713, 727.258, 16.3262, 0.3584 ) }
    dend_51 { pt3dadd( 324.007, 728.149, 16.5736, 0.4502 ) }
    dend_51 { pt3dadd( 323.321, 729.064, 16.7321, 0.5028 ) }
    dend_51 { pt3dadd( 322.463, 729.806, 16.8348, 0.4842 ) }
    dend_51 { pt3dadd( 321.587, 730.521, 16.8556, 0.5548 ) }
    dend_51 { pt3dadd( 320.771, 731.278, 16.7214, 0.635 ) }
    dend_51 { pt3dadd( 320.012, 732.11, 16.5246, 0.7998 ) }
    dend_51 { pt3dadd( 319.305, 733.007, 16.3366, 0.799 ) }
    dend_51 { pt3dadd( 318.486, 733.797, 16.1704, 0.6826 ) }
    dend_51 { pt3dadd( 317.651, 734.57, 16.0313, 0.795 ) }
    dend_51 { pt3dadd( 316.965, 735.486, 15.9316, 0.7846 ) }
    dend_51 { pt3dadd( 316.314, 736.422, 15.8683, 0.9116 ) }
    dend_51 { pt3dadd( 315.802, 737.446, 15.8241, 0.8948 ) }
    dend_51 { pt3dadd( 315.277, 738.457, 15.7789, 0.945 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_51 { pt3dadd( 314.646, 739.374, 15.6531, 0.87 ) }
    dend_51 { pt3dadd( 313.954, 740.254, 15.5137, 0.8614 ) }
    dend_51 { pt3dadd( 313.271, 741.086, 15.5286, 0.6702 ) }
    dend_51 { pt3dadd( 312.843, 742.116, 15.6028, 0.709 ) }
    dend_51 { pt3dadd( 312.767, 743.253, 15.6679, 0.702 ) }
    dend_51 { pt3dadd( 312.757, 744.397, 15.7228, 0.8422 ) }
    dend_51 { pt3dadd( 312.329, 745.451, 15.7439, 0.8174 ) }
    dend_51 { pt3dadd( 311.879, 746.5, 15.7276, 0.7802 ) }
    dend_51 { pt3dadd( 311.307, 747.479, 15.6577, 0.668 ) }
    dend_51 { pt3dadd( 310.738, 748.46, 15.5795, 0.671 ) }
    dend_51 { pt3dadd( 310.343, 749.512, 15.6291, 0.5666 ) }
    dend_51 { pt3dadd( 309.909, 750.545, 15.7743, 0.6786 ) }
    dend_51 { pt3dadd( 309.246, 751.472, 15.9571, 0.5472 ) }
    dend_51 { pt3dadd( 308.583, 752.387, 16.0933, 0.5772 ) }
    dend_51 { pt3dadd( 307.92, 753.287, 16.1788, 0.447 ) }
    dend_51 { pt3dadd( 307.265, 754.152, 16.3869, 0.421 ) }
    dend_51 { pt3dadd( 306.675, 755.088, 16.6111, 0.473 ) }
    dend_51 { pt3dadd( 306.163, 756.111, 16.7789, 0.5394 ) }
    dend_51 { pt3dadd( 305.7, 757.155, 16.9102, 0.579 ) }
    dend_51 { pt3dadd( 305.438, 758.256, 16.9934, 0.6006 ) }
    dend_51 { pt3dadd( 305.074, 759.236, 16.9613, 0.6636 ) }
    dend_51 { pt3dadd( 304.361, 760.019, 17.0018, 0.6684 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 22/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 310.06, 676.691, 20.4267, 0.358 ) }
    dend_48 { pt3dadd( 308.902, 677.055, 20.5091, 0.3358 ) }
    dend_48 { pt3dadd( 307.815, 677.17, 20.6574, 0.3848 ) }
    dend_48 { pt3dadd( 307.021, 677.565, 21.0351, 0.4948 ) }
    dend_48 { pt3dadd( 306.211, 678.294, 21.428, 0.6058 ) }
    dend_48 { pt3dadd( 305.202, 678.835, 21.7958, 0.5762 ) }
    dend_48 { pt3dadd( 304.179, 679.338, 22.182, 0.5204 ) }
    dend_48 { pt3dadd( 303.138, 679.745, 22.5919, 0.4222 ) }
    dend_48 { pt3dadd( 302.357, 680.261, 23.1665, 0.4416 ) }
    dend_48 { pt3dadd( 301.403, 679.988, 23.8282, 0.4164 ) }
    dend_48 { pt3dadd( 300.323, 680.235, 24.403, 0.4372 ) }
    dend_48 { pt3dadd( 299.654, 680.304, 25.2359, 0.6052 ) }
    dend_48 { pt3dadd( 298.796, 679.91, 26.1855, 0.5176 ) }
    dend_48 { pt3dadd( 298.09, 679.661, 27.276, 0.462 ) }
    dend_48 { pt3dadd( 297.091, 679.439, 28.1686, 0.5264 ) }
    dend_48 { pt3dadd( 295.976, 679.439, 28.8683, 0.52 ) }
    dend_48 { pt3dadd( 294.868, 679.439, 29.5148, 0.4312 ) }
    dend_48 { pt3dadd( 293.814, 679.522, 29.9412, 0.4116 ) }
    dend_48 { pt3dadd( 293.115, 680.074, 30.5318, 0.3586 ) }
    dend_48 { pt3dadd( 292.461, 680.77, 31.215, 0.3404 ) }
    dend_48 { pt3dadd( 291.56, 681.41, 31.8895, 0.3752 ) }
    dend_48 { pt3dadd( 290.547, 681.877, 32.4713, 0.337 ) }
    dend_48 { pt3dadd( 289.456, 682.219, 32.9132, 0.3058 ) }
    dend_48 { pt3dadd( 288.332, 682.404, 33.2872, 0.2854 ) }
    dend_48 { pt3dadd( 287.205, 682.581, 33.5871, 0.2944 ) }
    dend_48 { pt3dadd( 286.102, 682.689, 33.91, 0.3126 ) }
    dend_48 { pt3dadd( 285.011, 682.761, 34.2978, 0.3396 ) }
    dend_48 { pt3dadd( 283.925, 682.985, 34.6769, 0.4218 ) }
    dend_48 { pt3dadd( 282.845, 683.36, 34.9843, 0.4178 ) }
    dend_48 { pt3dadd( 281.758, 683.715, 35.2232, 0.4828 ) }
    dend_48 { pt3dadd( 280.658, 684.03, 35.4049, 0.4812 ) }
    dend_48 { pt3dadd( 279.555, 684.315, 35.5471, 0.6144 ) }
    dend_48 { pt3dadd( 278.417, 684.2, 35.6734, 0.6566 ) }
    dend_48 { pt3dadd( 277.278, 684.087, 35.8075, 0.586 ) }
    dend_48 { pt3dadd( 276.213, 684.242, 36.0741, 0.4904 ) }
    dend_48 { pt3dadd( 275.162, 684.453, 36.4554, 0.3718 ) }
    dend_48 { pt3dadd( 274.05, 684.273, 36.8035, 0.323 ) }
    dend_48 { pt3dadd( 272.93, 684.049, 37.1011, 0.318 ) }
    dend_48 { pt3dadd( 271.804, 684.002, 37.2946, 0.351 ) }
    dend_48 { pt3dadd( 270.675, 684.059, 37.3738, 0.4366 ) }
    dend_48 { pt3dadd( 269.561, 684.252, 37.4752, 0.4774 ) }
    dend_48 { pt3dadd( 268.449, 684.463, 37.6295, 0.4376 ) }
    dend_48 { pt3dadd( 267.542, 684.184, 37.8246, 0.4664 ) }
    dend_48 { pt3dadd( 266.502, 684.214, 37.973, 0.4794 ) }
    dend_48 { pt3dadd( 265.446, 684.509, 38.255, 0.4712 ) }
    dend_48 { pt3dadd( 264.398, 684.826, 38.6316, 0.3844 ) }
    dend_48 { pt3dadd( 263.511, 685.449, 38.9844, 0.3414 ) }
    dend_48 { pt3dadd( 262.621, 686.015, 39.3898, 0.3768 ) }
    dend_48 { pt3dadd( 261.498, 686.05, 39.7177, 0.3402 ) }
    dend_48 { pt3dadd( 260.395, 686.225, 40.0109, 0.3118 ) }
    dend_48 { pt3dadd( 259.327, 686.548, 40.3455, 0.2962 ) }
    dend_48 { pt3dadd( 258.232, 686.804, 40.7134, 0.316 ) }
    dend_48 { pt3dadd( 257.126, 687.012, 41.0962, 0.3458 ) }
    dend_48 { pt3dadd( 255.99, 687.058, 41.4504, 0.433 ) }
    dend_48 { pt3dadd( 254.875, 686.958, 41.8499, 0.441 ) }
    dend_48 { pt3dadd( 253.821, 687.294, 42.2498, 0.5146 ) }
    dend_48 { pt3dadd( 253.022, 687.69, 42.8089, 0.5954 ) }
    dend_48 { pt3dadd( 252.058, 688.244, 43.3087, 0.557 ) }
    dend_48 { pt3dadd( 250.966, 688.499, 43.6892, 0.4836 ) }
    dend_48 { pt3dadd( 249.954, 688.129, 44.1202, 0.3594 ) }
    dend_48 { pt3dadd( 248.955, 687.709, 44.5066, 0.3 ) }
    dend_48 { pt3dadd( 248.026, 688.083, 44.9257, 0.2746 ) }
    dend_48 { pt3dadd( 247.241, 688.681, 45.4143, 0.2746 ) }
    dend_48 { pt3dadd( 246.316, 688.467, 46.0723, 0.2746 ) }
    dend_48 { pt3dadd( 245.26, 688.682, 46.7398, 0.2748 ) }
    dend_48 { pt3dadd( 244.496, 688.299, 47.1752, 0.275 ) }
    dend_48 { pt3dadd( 244.066, 687.674, 47.8204, 0.2754 ) }
    dend_48 { pt3dadd( 243.03, 687.708, 48.4504, 0.2762 ) }
    dend_48 { pt3dadd( 241.95, 687.625, 48.9667, 0.2774 ) }
    dend_48 { pt3dadd( 240.992, 687.363, 49.5765, 0.2798 ) }
    dend_48 { pt3dadd( 239.891, 687.185, 50.1794, 0.2844 ) }
    dend_48 { pt3dadd( 238.818, 687.388, 50.7962, 0.293 ) }
    dend_48 { pt3dadd( 237.887, 687.227, 51.4987, 0.3082 ) }
    dend_48 { pt3dadd( 236.81, 687.296, 52.1293, 0.339 ) }
    dend_48 { pt3dadd( 236.227, 686.605, 52.677, 0.3846 ) }
    dend_48 { pt3dadd( 235.6, 685.913, 53.291, 0.5242 ) }
    dend_48 { pt3dadd( 234.704, 685.269, 53.8336, 0.5162 ) }
    dend_48 { pt3dadd( 233.836, 684.684, 54.4006, 0.4242 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_48 { pt3dadd( 232.709, 684.642, 54.866, 0.3988 ) }
    dend_48 { pt3dadd( 231.587, 684.534, 55.2815, 0.3338 ) }
    dend_48 { pt3dadd( 230.467, 684.496, 55.634, 0.3 ) }
    dend_48 { pt3dadd( 229.345, 684.697, 55.918, 0.2746 ) }
    dend_48 { pt3dadd( 228.226, 684.891, 56.1733, 0.2746 ) }
    dend_48 { pt3dadd( 227.088, 685.011, 56.3606, 0.2746 ) }
    dend_48 { pt3dadd( 225.953, 685.08, 56.5522, 0.2748 ) }
    dend_48 { pt3dadd( 224.896, 684.749, 56.7381, 0.275 ) }
    dend_48 { pt3dadd( 223.862, 684.296, 56.9484, 0.2752 ) }
    dend_48 { pt3dadd( 222.752, 684.184, 57.0954, 0.2758 ) }
    dend_48 { pt3dadd( 221.705, 684.334, 57.1872, 0.2768 ) }
    dend_48 { pt3dadd( 220.876, 684.845, 57.3513, 0.2786 ) }
    dend_48 { pt3dadd( 219.757, 684.642, 57.4988, 0.2822 ) }
    dend_48 { pt3dadd( 218.614, 684.598, 57.6288, 0.2888 ) }
    dend_48 { pt3dadd( 217.493, 684.423, 57.7545, 0.3008 ) }
    dend_48 { pt3dadd( 216.514, 684.531, 58.037, 0.3242 ) }
    dend_48 { pt3dadd( 215.586, 685.099, 58.329, 0.362 ) }
    dend_48 { pt3dadd( 214.653, 684.834, 58.4609, 0.458 ) }
    dend_48 { pt3dadd( 213.642, 684.435, 58.4987, 0.5118 ) }
    dend_48 { pt3dadd( 212.529, 684.279, 58.513, 0.5272 ) }
    dend_48 { pt3dadd( 211.45, 684.029, 58.4172, 0.5078 ) }
    dend_48 { pt3dadd( 210.342, 683.955, 58.2428, 0.4766 ) }
    dend_48 { pt3dadd( 209.213, 683.852, 58.1328, 0.3946 ) }
    dend_48 { pt3dadd( 208.101, 683.741, 58.1605, 0.3602 ) }
    dend_48 { pt3dadd( 206.991, 683.711, 58.3036, 0.411 ) }
    dend_48 { pt3dadd( 205.996, 683.498, 58.576, 0.4068 ) }
    dend_48 { pt3dadd( 205.056, 683.956, 58.6933, 0.4196 ) }
    dend_48 { pt3dadd( 203.983, 684.159, 58.6751, 0.573 ) }
    dend_48 { pt3dadd( 202.938, 684.395, 58.5603, 0.4558 ) }
    dend_48 { pt3dadd( 202.1, 685.071, 58.5088, 0.357 ) }
    dend_48 { pt3dadd( 201.29, 685.718, 58.6782, 0.286 ) }
    dend_48 { pt3dadd( 200.292, 686.104, 58.9537, 0.2954 ) }
    dend_48 { pt3dadd( 199.552, 686.826, 59.3107, 0.3142 ) }
    dend_48 { pt3dadd( 199.096, 687.613, 59.6963, 0.344 ) }
    dend_48 { pt3dadd( 198.116, 688.164, 60.067, 0.4234 ) }
    dend_48 { pt3dadd( 197.436, 688.785, 60.5531, 0.452 ) }
    dend_48 { pt3dadd( 196.662, 689.472, 60.9288, 0.396 ) }
    dend_48 { pt3dadd( 195.914, 690.267, 61.3945, 0.3636 ) }
    dend_48 { pt3dadd( 195.005, 690.865, 61.8898, 0.413 ) }
    dend_48 { pt3dadd( 194.05, 691.35, 62.3991, 0.4328 ) }
    dend_48 { pt3dadd( 194.083, 691.716, 63.0806, 0.3594 ) }
    dend_48 { pt3dadd( 193.435, 691.696, 63.7288, 0.3 ) }
    dend_48 { pt3dadd( 192.552, 692.214, 64.0581, 0.2746 ) }
    dend_48 { pt3dadd( 191.982, 692.992, 64.0144, 0.2746 ) }
    dend_48 { pt3dadd( 191.26, 693.783, 63.7868, 0.2746 ) }
    dend_48 { pt3dadd( 190.797, 694.237, 63.3805, 0.2746 ) }
    dend_48 { pt3dadd( 190.402, 693.213, 62.9334, 0.2748 ) }
    dend_48 { pt3dadd( 189.452, 693.128, 62.5484, 0.275 ) }
    dend_48 { pt3dadd( 188.548, 693.742, 62.2894, 0.2754 ) }
    dend_48 { pt3dadd( 187.478, 693.795, 62.2224, 0.276 ) }
    dend_48 { pt3dadd( 186.455, 693.795, 62.4288, 0.2772 ) }
    dend_48 { pt3dadd( 185.381, 693.926, 62.606, 0.2794 ) }
    dend_48 { pt3dadd( 184.967, 694.644, 62.9706, 0.2838 ) }
    dend_48 { pt3dadd( 184.149, 694.981, 63.2974, 0.2914 ) }
    dend_48 { pt3dadd( 183.484, 694.787, 63.3296, 0.3068 ) }
    dend_48 { pt3dadd( 183.198, 694.892, 63.2271, 0.329 ) }
    dend_48 { pt3dadd( 182.251, 695.243, 62.8978, 0.4008 ) }
    dend_48 { pt3dadd( 181.325, 695.685, 62.4582, 0.3852 ) }
    dend_48 { pt3dadd( 180.34, 695.966, 62.256, 0.392 ) }
    dend_48 { pt3dadd( 179.67, 696.659, 62.333, 0.4604 ) }
    dend_48 { pt3dadd( 179.288, 697.663, 62.545, 0.546 ) }
    dend_48 { pt3dadd( 178.564, 698.358, 62.6223, 0.4464 ) }
    dend_48 { pt3dadd( 177.486, 698.699, 62.7085, 0.3718 ) }
    dend_48 { pt3dadd( 176.472, 699.023, 62.8527, 0.3858 ) }
    dend_48 { pt3dadd( 175.42, 699.428, 62.8281, 0.358 ) }
    dend_48 { pt3dadd( 174.365, 699.839, 62.6979, 0.3394 ) }
    dend_48 { pt3dadd( 173.307, 700.272, 62.5638, 0.3732 ) }
    dend_48 { pt3dadd( 172.309, 700.757, 62.4532, 0.3334 ) }
    dend_48 { pt3dadd( 171.527, 701.404, 62.4056, 0.299 ) }
    dend_48 { pt3dadd( 170.752, 701.82, 62.1158, 0.2728 ) }
    dend_48 { pt3dadd( 169.955, 702.455, 61.677, 0.2712 ) }
    dend_48 { pt3dadd( 169.051, 703.112, 61.196, 0.2684 ) }
    dend_48 { pt3dadd( 168.16, 703.808, 60.7183, 0.2626 ) }
    dend_48 { pt3dadd( 167.272, 704.497, 60.251, 0.2542 ) }
    dend_48 { pt3dadd( 166.387, 705.182, 59.8142, 0.2288 ) }
    dend_48 { pt3dadd( 165.307, 705.536, 59.1895, 0.2288 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 76/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 310.06, 676.691, 20.4267, 0.358 ) }
    dend_47 { pt3dadd( 309.572, 676.874, 19.7557, 0.6864 ) }
    dend_47 { pt3dadd( 308.786, 677.19, 17.693, 0.4882 ) }
    dend_47 { pt3dadd( 308.591, 677.526, 16.6952, 0.4092 ) }
    dend_47 { pt3dadd( 308.283, 678.265, 15.586, 0.4212 ) }
    dend_47 { pt3dadd( 307.741, 679.197, 14.6951, 0.5882 ) }
    dend_47 { pt3dadd( 308.137, 680.147, 14.067, 0.6538 ) }
    dend_47 { pt3dadd( 309.104, 680.537, 13.4578, 0.5868 ) }
    dend_47 { pt3dadd( 309.538, 681.238, 12.844, 0.4622 ) }
    dend_47 { pt3dadd( 309.26, 682.25, 12.306, 0.4634 ) }
    dend_47 { pt3dadd( 309.006, 683.291, 11.835, 0.4812 ) }
    dend_47 { pt3dadd( 308.551, 684.285, 11.606, 0.4388 ) }
    dend_47 { pt3dadd( 307.761, 684.921, 11.5849, 0.4984 ) }
    dend_47 { pt3dadd( 307.334, 685.964, 11.5986, 0.3946 ) }
    dend_47 { pt3dadd( 307.779, 686.965, 11.5807, 0.3276 ) }
    dend_47 { pt3dadd( 308.395, 686.909, 11.2632, 0.2796 ) }
    dend_47 { pt3dadd( 309.136, 687.728, 10.9707, 0.2796 ) }
    dend_47 { pt3dadd( 309.796, 688.586, 10.8133, 0.305 ) }
    dend_47 { pt3dadd( 310.467, 688.595, 10.2444, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 95/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 421.994, 461.448, 26.0674, 0.5182 ) }
    dend_40 { pt3dadd( 421.449, 461.49, 26.2789, 0.3022 ) }
    dend_40 { pt3dadd( 421.677, 460.803, 26.4966, 0.2786 ) }
    dend_40 { pt3dadd( 421.69, 460.015, 26.6943, 0.2822 ) }
    dend_40 { pt3dadd( 421.906, 459.43, 26.8668, 0.2888 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_40 { pt3dadd( 421.906, 458.63, 27.0128, 0.3006 ) }
    dend_40 { pt3dadd( 421.906, 457.829, 27.1123, 0.3236 ) }
    dend_40 { pt3dadd( 421.868, 457.142, 27.238, 0.3624 ) }
    dend_40 { pt3dadd( 421.677, 456.685, 27.4091, 0.4526 ) }
    dend_40 { pt3dadd( 421.563, 455.998, 27.5687, 0.5316 ) }
    dend_40 { pt3dadd( 421.563, 455.389, 27.7834, 0.4186 ) }
    dend_40 { pt3dadd( 421.563, 454.969, 28.2458, 0.2744 ) }
    dend_40 { pt3dadd( 421.576, 454.638, 28.4066, 0.2744 ) }
    dend_40 { pt3dadd( 421.792, 454.511, 28.518, 0.2742 ) }
    dend_40 { pt3dadd( 422.44, 454.13, 28.5942, 0.274 ) }
    dend_40 { pt3dadd( 422.809, 453.71, 28.6426, 0.2736 ) }
    dend_40 { pt3dadd( 423.038, 453.24, 28.7084, 0.2728 ) }
    dend_40 { pt3dadd( 423.05, 452.91, 28.756, 0.2712 ) }
    dend_40 { pt3dadd( 423.063, 452.579, 28.7921, 0.2684 ) }
    dend_40 { pt3dadd( 423.317, 452.147, 28.8173, 0.2626 ) }
    dend_40 { pt3dadd( 423.508, 451.766, 28.833, 0.2542 ) }
    dend_40 { pt3dadd( 423.508, 451.537, 28.84, 0.2288 ) }
    dend_40 { pt3dadd( 423.508, 451.308, 28.84, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 18/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 421.994, 461.448, 26.0674, 0.5182 ) }
    dend_39 { pt3dadd( 422.033, 461.045, 26.32, 0.2288 ) }
    dend_39 { pt3dadd( 422.249, 461.032, 26.3453, 0.2804 ) }
    dend_39 { pt3dadd( 422.859, 460.841, 26.3557, 0.2852 ) }
    dend_39 { pt3dadd( 423.61, 460.791, 26.3704, 0.2954 ) }
    dend_39 { pt3dadd( 424.232, 460.612, 26.3885, 0.3078 ) }
    dend_39 { pt3dadd( 424.766, 460.346, 26.409, 0.3616 ) }
    dend_39 { pt3dadd( 425.147, 460.028, 26.4667, 0.3136 ) }
    dend_39 { pt3dadd( 425.605, 459.697, 26.5179, 0.2542 ) }
    dend_39 { pt3dadd( 425.91, 459.545, 26.6, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_4 (entry count 28/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 413.355, 544.83, 31.1046, 0.4852 ) }
    dend_28 { pt3dadd( 413.467, 544.441, 29.9788, 0.2288 ) }
    dend_28 { pt3dadd( 413.81, 543.615, 29.2788, 0.455 ) }
    dend_28 { pt3dadd( 414.658, 542.882, 29.0492, 0.5362 ) }
    dend_28 { pt3dadd( 415.111, 541.936, 28.7297, 0.4272 ) }
    dend_28 { pt3dadd( 414.278, 541.273, 28.5009, 0.3412 ) }
    dend_28 { pt3dadd( 414.045, 540.204, 28.2226, 0.3036 ) }
    dend_28 { pt3dadd( 414.378, 539.31, 27.7366, 0.3304 ) }
    dend_28 { pt3dadd( 414.332, 538.655, 27.1159, 0.3678 ) }
    dend_28 { pt3dadd( 414.559, 537.583, 26.5574, 0.4982 ) }
    dend_28 { pt3dadd( 414.961, 536.539, 25.9946, 0.4422 ) }
    dend_28 { pt3dadd( 415.389, 535.501, 25.4516, 0.4118 ) }
    dend_28 { pt3dadd( 415.254, 534.566, 24.9911, 0.4562 ) }
    dend_28 { pt3dadd( 414.747, 533.758, 24.4961, 0.5072 ) }
    dend_28 { pt3dadd( 414.493, 532.646, 24.1001, 0.5248 ) }
    dend_28 { pt3dadd( 413.839, 532.016, 23.6753, 0.4734 ) }
    dend_28 { pt3dadd( 413.174, 530.949, 23.1956, 0.557 ) }
    dend_28 { pt3dadd( 412.668, 529.957, 22.7434, 0.5296 ) }
    dend_28 { pt3dadd( 412.211, 528.978, 22.4932, 0.4502 ) }
    dend_28 { pt3dadd( 412.162, 527.87, 22.2492, 0.4416 ) }
    dend_28 { pt3dadd( 411.982, 526.804, 21.989, 0.4388 ) }
    dend_28 { pt3dadd( 411.775, 526.064, 21.9812, 0.3706 ) }
    dend_28 { pt3dadd( 411.753, 525.174, 22.0889, 0.3206 ) }
    dend_28 { pt3dadd( 411.753, 524.192, 21.9278, 0.314 ) }
    dend_28 { pt3dadd( 411.753, 523.07, 21.6584, 0.3424 ) }
    dend_28 { pt3dadd( 412.184, 522.405, 21.3678, 0.4268 ) }
    dend_28 { pt3dadd( 412.496, 521.96, 20.7554, 0.428 ) }
    dend_28 { pt3dadd( 412.921, 520.936, 20.1834, 0.497 ) }
    dend_28 { pt3dadd( 413.256, 519.847, 19.7063, 0.5308 ) }
    dend_28 { pt3dadd( 413.668, 518.805, 19.2911, 0.5934 ) }
    dend_28 { pt3dadd( 414.099, 517.762, 18.9465, 0.4804 ) }
    dend_28 { pt3dadd( 414.531, 516.742, 18.7381, 0.4668 ) }
    dend_28 { pt3dadd( 415.176, 516.135, 18.7655, 0.4068 ) }
    dend_28 { pt3dadd( 414.841, 515.254, 18.5802, 0.463 ) }
    dend_28 { pt3dadd( 414.14, 514.49, 18.255, 0.4422 ) }
    dend_28 { pt3dadd( 413.879, 513.402, 17.8826, 0.5524 ) }
    dend_28 { pt3dadd( 413.966, 512.31, 17.4303, 0.4916 ) }
    dend_28 { pt3dadd( 414.041, 511.243, 16.8582, 0.5228 ) }
    dend_28 { pt3dadd( 413.917, 510.148, 16.2629, 0.5686 ) }
    dend_28 { pt3dadd( 413.465, 509.157, 15.7225, 0.483 ) }
    dend_28 { pt3dadd( 412.641, 508.396, 15.2781, 0.465 ) }
    dend_28 { pt3dadd( 411.894, 507.83, 14.8569, 0.435 ) }
    dend_28 { pt3dadd( 411.5, 507.047, 14.319, 0.3636 ) }
    dend_28 { pt3dadd( 410.645, 506.617, 13.9049, 0.3078 ) }
    dend_28 { pt3dadd( 409.604, 506.422, 13.7606, 0.2888 ) }
    dend_28 { pt3dadd( 408.497, 506.205, 13.6917, 0.3022 ) }
    dend_28 { pt3dadd( 407.732, 505.48, 13.5487, 0.3206 ) }
    dend_28 { pt3dadd( 406.888, 504.744, 13.461, 0.3854 ) }
    dend_28 { pt3dadd( 406.427, 503.794, 13.5514, 0.356 ) }
    dend_28 { pt3dadd( 405.904, 502.898, 13.5188, 0.3406 ) }
    dend_28 { pt3dadd( 405.173, 502.099, 13.3654, 0.3516 ) }
    dend_28 { pt3dadd( 404.742, 501.147, 13.0825, 0.409 ) }
    dend_28 { pt3dadd( 404.243, 500.129, 12.8202, 0.5644 ) }
    dend_28 { pt3dadd( 404.114, 499.005, 12.5527, 0.615 ) }
    dend_28 { pt3dadd( 403.547, 498.389, 12.0642, 0.4898 ) }
    dend_28 { pt3dadd( 402.555, 498.76, 11.6118, 0.4046 ) }
    dend_28 { pt3dadd( 401.572, 498.767, 11.3881, 0.4488 ) }
    dend_28 { pt3dadd( 400.767, 498.528, 11.1658, 0.4652 ) }
    dend_28 { pt3dadd( 400.815, 497.67, 10.8778, 0.584 ) }
    dend_28 { pt3dadd( 399.827, 497.464, 10.4935, 0.604 ) }
    dend_28 { pt3dadd( 399.057, 496.936, 10.1501, 0.4696 ) }
    dend_28 { pt3dadd( 398.714, 496.078, 9.8549, 0.3672 ) }
    dend_28 { pt3dadd( 398.93, 495.028, 9.4479, 0.3786 ) }
    dend_28 { pt3dadd( 398.49, 494.361, 8.8903, 0.339 ) }
    dend_28 { pt3dadd( 397.792, 493.53, 8.3398, 0.3304 ) }
    dend_28 { pt3dadd( 396.875, 492.888, 7.3192, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 94/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 413.355, 544.83, 31.1046, 0.4852 ) }
    dend_5 { pt3dadd( 413.355, 543.862, 31.1741, 0.5138 ) }
    dend_5 { pt3dadd( 413.355, 542.724, 31.2796, 0.537 ) }
    dend_5 { pt3dadd( 413.355, 541.589, 31.4244, 0.4972 ) }
    dend_5 { pt3dadd( 413.355, 540.445, 31.554, 0.5962 ) }
    dend_5 { pt3dadd( 413.189, 539.317, 31.6884, 0.6266 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_5 { pt3dadd( 413.126, 538.183, 31.8391, 0.511 ) }
    dend_5 { pt3dadd( 413.126, 537.049, 32.0065, 0.4462 ) }
    dend_5 { pt3dadd( 413.079, 535.923, 32.1586, 0.5146 ) }
    dend_5 { pt3dadd( 412.897, 534.812, 32.2109, 0.642 ) }
    dend_5 { pt3dadd( 412.897, 533.681, 32.2955, 0.6456 ) }
    dend_5 { pt3dadd( 412.897, 532.539, 32.3509, 0.6382 ) }
    dend_5 { pt3dadd( 412.998, 531.411, 32.3338, 0.6934 ) }
    dend_5 { pt3dadd( 413.126, 530.289, 32.2526, 0.6886 ) }
    dend_5 { pt3dadd( 413.126, 529.146, 32.1675, 0.7432 ) }
    dend_5 { pt3dadd( 413.305, 528.025, 32.0642, 0.764 ) }
    dend_5 { pt3dadd( 413.407, 526.902, 32.0527, 0.736 ) }
    dend_5 { pt3dadd( 413.737, 525.864, 32.123, 0.7788 ) }
    dend_5 { pt3dadd( 413.77, 524.911, 32.177, 0.8558 ) }
    dend_5 { pt3dadd( 413.871, 523.773, 32.2274, 0.7808 ) }
    dend_5 { pt3dadd( 414.012, 522.644, 32.3036, 0.7836 ) }
    dend_5 { pt3dadd( 414.193, 521.532, 32.4243, 0.7868 ) }
    dend_5 { pt3dadd( 414.496, 520.43, 32.5069, 0.8016 ) }
    dend_5 { pt3dadd( 414.709, 519.306, 32.5629, 0.7878 ) }
    dend_5 { pt3dadd( 414.879, 518.175, 32.6046, 0.7318 ) }
    dend_5 { pt3dadd( 414.945, 517.034, 32.6298, 0.777 ) }
    dend_5 { pt3dadd( 415.014, 515.896, 32.6388, 0.8228 ) }
    dend_5 { pt3dadd( 415.186, 514.767, 32.6306, 0.864 ) }
    dend_5 { pt3dadd( 415.186, 513.633, 32.5797, 0.9236 ) }
    dend_5 { pt3dadd( 415.378, 512.523, 32.6071, 0.8866 ) }
    dend_5 { pt3dadd( 415.572, 511.399, 32.6477, 0.8484 ) }
    dend_5 { pt3dadd( 415.644, 510.288, 32.7513, 0.858 ) }
    dend_5 { pt3dadd( 415.644, 509.175, 32.8504, 0.7134 ) }
    dend_5 { pt3dadd( 415.644, 508.042, 32.858, 0.7772 ) }
    dend_5 { pt3dadd( 415.644, 506.904, 32.8163, 0.8862 ) }
    dend_5 { pt3dadd( 415.644, 505.76, 32.7684, 0.9038 ) }
    dend_5 { pt3dadd( 415.644, 504.625, 32.6844, 0.9182 ) }
    dend_5 { pt3dadd( 415.644, 503.494, 32.6276, 0.8032 ) }
    dend_5 { pt3dadd( 415.644, 502.359, 32.6469, 0.82 ) }
    dend_5 { pt3dadd( 415.644, 501.215, 32.6897, 0.8802 ) }
    dend_5 { pt3dadd( 415.804, 500.085, 32.7648, 0.8492 ) }
    dend_5 { pt3dadd( 416.038, 498.967, 32.8616, 0.798 ) }
    dend_5 { pt3dadd( 416.102, 497.841, 32.9073, 0.6724 ) }
    dend_5 { pt3dadd( 416.617, 496.888, 33.0187, 0.8166 ) }
    dend_5 { pt3dadd( 416.792, 495.786, 33.1005, 0.8568 ) }
    dend_5 { pt3dadd( 416.927, 494.65, 33.1621, 0.8896 ) }
    dend_5 { pt3dadd( 417.102, 493.519, 33.206, 0.9238 ) }
    dend_5 { pt3dadd( 417.327, 492.399, 33.2391, 0.8868 ) }
    dend_5 { pt3dadd( 417.669, 491.308, 33.2682, 0.85 ) }
    dend_5 { pt3dadd( 418.009, 490.215, 33.287, 0.855 ) }
    dend_5 { pt3dadd( 418.324, 489.116, 33.3091, 0.7374 ) }
    dend_5 { pt3dadd( 418.383, 487.979, 33.3522, 0.6778 ) }
    dend_5 { pt3dadd( 418.391, 486.84, 33.4264, 0.7134 ) }
    dend_5 { pt3dadd( 418.473, 485.714, 33.5045, 0.756 ) }
    dend_5 { pt3dadd( 418.762, 484.614, 33.5227, 0.72 ) }
    dend_5 { pt3dadd( 419.074, 483.522, 33.528, 0.7554 ) }
    dend_5 { pt3dadd( 419.585, 482.512, 33.5908, 0.7818 ) }
    dend_5 { pt3dadd( 419.956, 481.433, 33.6689, 0.7918 ) }
    dend_5 { pt3dadd( 420.216, 480.319, 33.7364, 0.7702 ) }
    dend_5 { pt3dadd( 420.557, 479.226, 33.7999, 0.6982 ) }
    dend_5 { pt3dadd( 421.02, 478.226, 33.7912, 0.7188 ) }
    dend_5 { pt3dadd( 421.507, 477.336, 33.8926, 0.6944 ) }
    dend_5 { pt3dadd( 421.601, 476.404, 34.1054, 0.7254 ) }
    dend_5 { pt3dadd( 421.824, 475.374, 34.1306, 0.8704 ) }
    dend_5 { pt3dadd( 421.881, 474.241, 34.1972, 0.9434 ) }
    dend_5 { pt3dadd( 421.989, 473.105, 34.2952, 0.8846 ) }
    dend_5 { pt3dadd( 422.144, 471.973, 34.3938, 0.8038 ) }
    dend_5 { pt3dadd( 422.375, 470.854, 34.4672, 0.7454 ) }
    dend_5 { pt3dadd( 422.707, 469.764, 34.5512, 0.6512 ) }
    dend_5 { pt3dadd( 422.868, 468.669, 34.7026, 0.6374 ) }
    dend_5 { pt3dadd( 422.889, 467.695, 34.9675, 0.516 ) }
    dend_5 { pt3dadd( 423.427, 467.062, 34.9311, 0.5284 ) }
    dend_5 { pt3dadd( 423.895, 466.052, 34.8947, 0.5428 ) }
    dend_5 { pt3dadd( 424.192, 465.039, 34.9955, 0.6094 ) }
    dend_5 { pt3dadd( 424.571, 464.016, 34.9731, 0.541 ) }
    dend_5 { pt3dadd( 425.003, 463.14, 34.9415, 0.4294 ) }
    dend_5 { pt3dadd( 425.334, 462.046, 34.9163, 0.3776 ) }
    dend_5 { pt3dadd( 425.76, 460.988, 34.9266, 0.4448 ) }
    dend_5 { pt3dadd( 426.299, 459.997, 34.8886, 0.4626 ) }
    dend_5 { pt3dadd( 427.003, 459.142, 34.8524, 0.5556 ) }
    dend_5 { pt3dadd( 427.338, 458.145, 34.8684, 0.666 ) }
    dend_5 { pt3dadd( 427.722, 457.142, 35.0, 0.7142 ) }
    dend_5 { pt3dadd( 428.067, 456.064, 35.1473, 0.648 ) }
    dend_5 { pt3dadd( 428.446, 454.995, 35.2187, 0.5944 ) }
    dend_5 { pt3dadd( 428.751, 453.913, 35.2836, 0.6166 ) }
    dend_5 { pt3dadd( 428.982, 452.832, 35.4334, 0.526 ) }
    dend_5 { pt3dadd( 429.148, 451.707, 35.5527, 0.5392 ) }
    dend_5 { pt3dadd( 429.148, 450.57, 35.593, 0.6002 ) }
    dend_5 { pt3dadd( 429.333, 449.441, 35.6314, 0.5362 ) }
    dend_5 { pt3dadd( 429.574, 448.326, 35.698, 0.5892 ) }
    dend_5 { pt3dadd( 430.099, 447.326, 35.8025, 0.542 ) }
    dend_5 { pt3dadd( 430.511, 446.258, 35.8828, 0.473 ) }
    dend_5 { pt3dadd( 430.521, 445.128, 35.9041, 0.4836 ) }
    dend_5 { pt3dadd( 430.57, 444.001, 35.9831, 0.5184 ) }
    dend_5 { pt3dadd( 430.752, 442.884, 36.0923, 0.5098 ) }
    dend_5 { pt3dadd( 431.002, 441.767, 36.1984, 0.6204 ) }
    dend_5 { pt3dadd( 431.242, 440.654, 36.3283, 0.6676 ) }
    dend_5 { pt3dadd( 431.44, 439.55, 36.5274, 0.6064 ) }
    dend_5 { pt3dadd( 431.459, 438.406, 36.713, 0.528 ) }
    dend_5 { pt3dadd( 431.657, 437.293, 36.8774, 0.442 ) }
    dend_5 { pt3dadd( 432.048, 436.481, 37.1809, 0.4508 ) }
    dend_5 { pt3dadd( 432.137, 435.341, 37.4338, 0.5658 ) }
    dend_5 { pt3dadd( 432.383, 434.232, 37.6284, 0.7588 ) }
    dend_5 { pt3dadd( 432.636, 433.121, 37.7866, 0.7566 ) }
    dend_5 { pt3dadd( 432.881, 432.022, 37.9604, 0.6706 ) }
    dend_5 { pt3dadd( 433.218, 430.929, 38.0752, 0.4504 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_5 { pt3dadd( 433.505, 429.821, 38.1391, 0.3372 ) }
    dend_5 { pt3dadd( 433.72, 428.711, 38.1886, 0.2964 ) }
    dend_5 { pt3dadd( 433.751, 427.825, 38.0262, 0.3148 ) }
    dend_5 { pt3dadd( 433.267, 426.714, 38.0724, 0.3498 ) }
    dend_5 { pt3dadd( 433.816, 425.925, 38.2155, 0.4106 ) }
    dend_5 { pt3dadd( 434.529, 425.24, 38.3065, 0.5436 ) }
    dend_5 { pt3dadd( 434.644, 424.212, 38.5521, 0.6918 ) }
    dend_5 { pt3dadd( 434.764, 423.075, 38.7772, 0.7572 ) }
    dend_5 { pt3dadd( 435.013, 421.969, 39.0214, 0.7518 ) }
    dend_5 { pt3dadd( 435.354, 420.881, 39.2322, 0.6702 ) }
    dend_5 { pt3dadd( 435.728, 419.808, 39.4405, 0.6366 ) }
    dend_5 { pt3dadd( 436.139, 418.751, 39.5926, 0.6904 ) }
    dend_5 { pt3dadd( 436.477, 417.673, 39.7359, 0.683 ) }
    dend_5 { pt3dadd( 436.66, 416.55, 39.8692, 0.7328 ) }
    dend_5 { pt3dadd( 436.855, 415.423, 39.9725, 0.745 ) }
    dend_5 { pt3dadd( 437.115, 414.317, 40.0784, 0.6994 ) }
    dend_5 { pt3dadd( 437.411, 413.231, 40.1845, 0.7164 ) }
    dend_5 { pt3dadd( 437.608, 412.126, 40.248, 0.7136 ) }
    dend_5 { pt3dadd( 437.793, 411.053, 40.3035, 0.6454 ) }
    dend_5 { pt3dadd( 438.141, 409.981, 40.357, 0.5968 ) }
    dend_5 { pt3dadd( 438.37, 409.062, 40.5028, 0.5852 ) }
    dend_5 { pt3dadd( 438.532, 407.962, 40.6532, 0.6418 ) }
    dend_5 { pt3dadd( 438.629, 406.877, 40.8573, 0.5958 ) }
    dend_5 { pt3dadd( 439.121, 405.878, 41.0035, 0.5564 ) }
    dend_5 { pt3dadd( 439.218, 404.762, 41.0494, 0.4908 ) }
    dend_5 { pt3dadd( 439.218, 403.625, 41.0214, 0.5604 ) }
    dend_5 { pt3dadd( 439.367, 402.497, 40.9531, 0.6762 ) }
    dend_5 { pt3dadd( 439.332, 401.383, 40.9368, 0.7268 ) }
    dend_5 { pt3dadd( 439.232, 400.263, 40.9332, 0.702 ) }
    dend_5 { pt3dadd( 439.225, 399.132, 40.9346, 0.5452 ) }
    dend_5 { pt3dadd( 439.273, 398.002, 41.0166, 0.5636 ) }
    dend_5 { pt3dadd( 439.461, 396.874, 41.1006, 0.4702 ) }
    dend_5 { pt3dadd( 439.873, 395.808, 41.1807, 0.4584 ) }
    dend_5 { pt3dadd( 440.322, 394.755, 41.2544, 0.5692 ) }
    dend_5 { pt3dadd( 440.818, 393.735, 41.3734, 0.588 ) }
    dend_5 { pt3dadd( 441.388, 392.755, 41.4882, 0.6134 ) }
    dend_5 { pt3dadd( 441.663, 391.646, 41.6052, 0.477 ) }
    dend_5 { pt3dadd( 441.373, 390.659, 41.7441, 0.429 ) }
    dend_5 { pt3dadd( 441.03, 389.622, 41.8835, 0.4888 ) }
    dend_5 { pt3dadd( 440.973, 388.487, 41.965, 0.5638 ) }
    dend_5 { pt3dadd( 441.196, 387.425, 41.9454, 0.6492 ) }
    dend_5 { pt3dadd( 441.676, 386.473, 42.0339, 0.6096 ) }
    dend_5 { pt3dadd( 442.289, 385.513, 42.1641, 0.5824 ) }
    dend_5 { pt3dadd( 442.852, 384.533, 42.3399, 0.5352 ) }
    dend_5 { pt3dadd( 443.343, 383.524, 42.5706, 0.6624 ) }
    dend_5 { pt3dadd( 443.83, 382.5, 42.7932, 0.7706 ) }
    dend_5 { pt3dadd( 444.313, 381.462, 42.9601, 0.6746 ) }
    dend_5 { pt3dadd( 444.595, 380.383, 43.0394, 0.5648 ) }
    dend_5 { pt3dadd( 444.617, 379.25, 43.0287, 0.488 ) }
    dend_5 { pt3dadd( 444.65, 378.118, 42.9657, 0.4158 ) }
    dend_5 { pt3dadd( 444.883, 377.03, 43.0136, 0.4 ) }
    dend_5 { pt3dadd( 445.139, 375.946, 43.1418, 0.4822 ) }
    dend_5 { pt3dadd( 445.61, 374.908, 43.2146, 0.5518 ) }
    dend_5 { pt3dadd( 445.895, 373.821, 43.26, 0.6256 ) }
    dend_5 { pt3dadd( 445.973, 372.68, 43.2986, 0.572 ) }
    dend_5 { pt3dadd( 446.049, 371.539, 43.3233, 0.4816 ) }
    dend_5 { pt3dadd( 446.327, 370.432, 43.3303, 0.5006 ) }
    dend_5 { pt3dadd( 446.642, 369.332, 43.3406, 0.5448 ) }
    dend_5 { pt3dadd( 446.808, 368.208, 43.3712, 0.583 ) }
    dend_5 { pt3dadd( 446.865, 367.065, 43.4157, 0.6376 ) }
    dend_5 { pt3dadd( 446.921, 365.922, 43.472, 0.588 ) }
    dend_5 { pt3dadd( 446.945, 364.785, 43.5778, 0.542 ) }
    dend_5 { pt3dadd( 446.964, 363.648, 43.722, 0.4634 ) }
    dend_5 { pt3dadd( 447.134, 362.537, 43.8822, 0.514 ) }
    dend_5 { pt3dadd( 447.524, 361.464, 44.0353, 0.5694 ) }
    dend_5 { pt3dadd( 447.908, 360.388, 44.165, 0.6294 ) }
    dend_5 { pt3dadd( 448.276, 359.305, 44.2473, 0.7194 ) }
    dend_5 { pt3dadd( 448.643, 358.221, 44.287, 0.7608 ) }
    dend_5 { pt3dadd( 448.983, 357.129, 44.2988, 0.7596 ) }
    dend_5 { pt3dadd( 449.324, 356.037, 44.2966, 0.6786 ) }
    dend_5 { pt3dadd( 449.56, 354.939, 44.2235, 0.6828 ) }
    dend_5 { pt3dadd( 449.781, 353.838, 44.1031, 0.6268 ) }
    dend_5 { pt3dadd( 450.144, 352.783, 44.0933, 0.6036 ) }
    dend_5 { pt3dadd( 450.545, 351.74, 44.2072, 0.6274 ) }
    dend_5 { pt3dadd( 450.949, 350.673, 44.3414, 0.5756 ) }
    dend_5 { pt3dadd( 451.353, 349.603, 44.4766, 0.4878 ) }
    dend_5 { pt3dadd( 451.815, 348.651, 44.7264, 0.5134 ) }
    dend_5 { pt3dadd( 451.964, 347.576, 44.8577, 0.5618 ) }
    dend_5 { pt3dadd( 451.984, 346.487, 44.9728, 0.6466 ) }
    dend_5 { pt3dadd( 452.024, 345.37, 44.9506, 0.5996 ) }
    dend_5 { pt3dadd( 452.325, 344.284, 44.8969, 0.588 ) }
    dend_5 { pt3dadd( 452.702, 343.229, 44.8988, 0.4288 ) }
    dend_5 { pt3dadd( 452.696, 342.267, 45.0391, 0.3444 ) }
    dend_5 { pt3dadd( 452.47, 341.445, 45.2091, 0.3098 ) }
    dend_5 { pt3dadd( 452.793, 340.957, 44.9842, 0.3404 ) }
    dend_5 { pt3dadd( 453.18, 339.935, 44.763, 0.3934 ) }
    dend_5 { pt3dadd( 453.18, 338.792, 44.5796, 0.5108 ) }
    dend_5 { pt3dadd( 453.275, 337.689, 44.413, 0.6356 ) }
    dend_5 { pt3dadd( 453.668, 336.918, 44.5449, 0.6322 ) }
    dend_5 { pt3dadd( 453.867, 335.799, 44.7166, 0.6196 ) }
    dend_5 { pt3dadd( 454.099, 334.694, 44.9282, 0.6284 ) }
    dend_5 { pt3dadd( 454.407, 333.597, 45.1181, 0.7164 ) }
    dend_5 { pt3dadd( 454.65, 332.51, 45.2427, 0.7616 ) }
    dend_5 { pt3dadd( 455.011, 331.546, 45.4398, 0.7314 ) }
    dend_5 { pt3dadd( 455.055, 330.436, 45.6739, 0.7704 ) }
    dend_5 { pt3dadd( 455.258, 329.33, 45.9586, 0.8388 ) }
    dend_5 { pt3dadd( 455.378, 328.192, 46.2076, 0.7558 ) }
    dend_5 { pt3dadd( 455.455, 327.095, 46.5254, 0.7064 ) }
    dend_5 { pt3dadd( 455.285, 325.983, 46.8224, 0.7936 ) }
    dend_5 { pt3dadd( 454.996, 324.878, 47.0389, 0.774 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_5 { pt3dadd( 454.663, 323.783, 47.1834, 0.7026 ) }
    dend_5 { pt3dadd( 454.413, 322.679, 47.2976, 0.5118 ) }
    dend_5 { pt3dadd( 454.23, 321.561, 47.39, 0.4402 ) }
    dend_5 { pt3dadd( 453.984, 320.446, 47.4085, 0.5392 ) }
    dend_5 { pt3dadd( 453.785, 319.349, 47.3362, 0.514 ) }
    dend_5 { pt3dadd( 453.52, 318.286, 47.1747, 0.5642 ) }
    dend_5 { pt3dadd( 453.32, 317.224, 46.9664, 0.646 ) }
    dend_5 { pt3dadd( 453.2, 316.109, 46.8401, 0.6232 ) }
    dend_5 { pt3dadd( 453.635, 315.096, 46.8409, 0.7418 ) }
    dend_5 { pt3dadd( 454.096, 314.158, 46.9246, 0.8666 ) }
    dend_5 { pt3dadd( 454.239, 313.075, 47.115, 0.8734 ) }
    dend_5 { pt3dadd( 454.908, 312.208, 47.2718, 0.8312 ) }
    dend_5 { pt3dadd( 455.498, 311.253, 47.3774, 0.7908 ) }
    dend_5 { pt3dadd( 455.965, 310.234, 47.3735, 0.7618 ) }
    dend_5 { pt3dadd( 456.329, 309.168, 47.4015, 0.7134 ) }
    dend_5 { pt3dadd( 456.724, 308.105, 47.418, 0.597 ) }
    dend_5 { pt3dadd( 457.224, 307.082, 47.4872, 0.5106 ) }
    dend_5 { pt3dadd( 457.532, 305.824, 47.6641, 0.4102 ) }
    dend_5 { pt3dadd( 457.8, 304.726, 47.9105, 0.3896 ) }
    dend_5 { pt3dadd( 458.069, 303.628, 48.2009, 0.4632 ) }
    dend_5 { pt3dadd( 458.339, 302.53, 48.503, 0.5156 ) }
    dend_5 { pt3dadd( 458.822, 301.492, 48.748, 0.5638 ) }
    dend_5 { pt3dadd( 459.304, 300.454, 48.9409, 0.431 ) }
    dend_5 { pt3dadd( 459.786, 299.418, 49.0946, 0.3496 ) }
    dend_5 { pt3dadd( 460.269, 298.38, 49.2257, 0.3142 ) }
    dend_5 { pt3dadd( 460.688, 297.339, 49.4122, 0.3736 ) }
    dend_5 { pt3dadd( 461.088, 296.297, 49.6566, 0.3342 ) }
    dend_5 { pt3dadd( 461.489, 295.255, 49.9372, 0.3006 ) }
    dend_5 { pt3dadd( 461.889, 294.213, 50.2289, 0.2758 ) }
    dend_5 { pt3dadd( 462.353, 293.199, 50.3418, 0.2768 ) }
    dend_5 { pt3dadd( 462.819, 292.186, 50.3154, 0.2786 ) }
    dend_5 { pt3dadd( 463.285, 291.172, 50.195, 0.282 ) }
    dend_5 { pt3dadd( 463.717, 290.146, 50.0772, 0.2886 ) }
    dend_5 { pt3dadd( 464.055, 289.081, 50.125, 0.3002 ) }
    dend_5 { pt3dadd( 464.393, 288.015, 50.323, 0.3242 ) }
    dend_5 { pt3dadd( 464.731, 286.948, 50.652, 0.3562 ) }
    dend_5 { pt3dadd( 465.008, 285.864, 51.0518, 0.477 ) }
    dend_5 { pt3dadd( 465.165, 284.739, 51.4576, 0.402 ) }
    dend_5 { pt3dadd( 465.322, 283.615, 51.84, 0.3416 ) }
    dend_5 { pt3dadd( 465.48, 282.49, 52.1825, 0.3056 ) }
    dend_5 { pt3dadd( 465.638, 281.366, 52.4919, 0.3268 ) }
    dend_5 { pt3dadd( 466.031, 280.302, 52.757, 0.398 ) }
    dend_5 { pt3dadd( 466.481, 279.253, 52.9855, 0.374 ) }
    dend_5 { pt3dadd( 466.931, 278.204, 53.1874, 0.4 ) }
    dend_5 { pt3dadd( 467.38, 277.155, 53.3688, 0.3358 ) }
    dend_5 { pt3dadd( 467.693, 276.059, 53.5184, 0.3036 ) }
    dend_5 { pt3dadd( 467.956, 274.945, 53.6441, 0.2814 ) }
    dend_5 { pt3dadd( 468.218, 273.831, 53.7639, 0.2874 ) }
    dend_5 { pt3dadd( 468.48, 272.718, 53.8866, 0.298 ) }
    dend_5 { pt3dadd( 468.737, 271.607, 54.0243, 0.3192 ) }
    dend_5 { pt3dadd( 468.939, 270.526, 54.2783, 0.3528 ) }
    dend_5 { pt3dadd( 469.142, 269.445, 54.6126, 0.4408 ) }
    dend_5 { pt3dadd( 469.347, 268.362, 54.9839, 0.4792 ) }
    dend_5 { pt3dadd( 469.581, 267.246, 55.2272, 0.471 ) }
    dend_5 { pt3dadd( 469.817, 266.131, 55.3622, 0.384 ) }
    dend_5 { pt3dadd( 470.051, 265.014, 55.4089, 0.3406 ) }
    dend_5 { pt3dadd( 470.032, 263.893, 55.4204, 0.3754 ) }
    dend_5 { pt3dadd( 469.834, 262.769, 55.4442, 0.3376 ) }
    dend_5 { pt3dadd( 469.636, 261.644, 55.4935, 0.3068 ) }
    dend_5 { pt3dadd( 469.437, 260.52, 55.5769, 0.2872 ) }
    dend_5 { pt3dadd( 469.239, 259.395, 55.6794, 0.299 ) }
    dend_5 { pt3dadd( 469.391, 258.264, 55.7634, 0.3146 ) }
    dend_5 { pt3dadd( 469.556, 257.131, 55.8247, 0.3744 ) }
    dend_5 { pt3dadd( 469.721, 256.0, 55.8662, 0.3356 ) }
    dend_5 { pt3dadd( 469.886, 254.867, 55.8956, 0.303 ) }
    dend_5 { pt3dadd( 470.047, 253.735, 55.9202, 0.2802 ) }
    dend_5 { pt3dadd( 470.065, 252.591, 55.9479, 0.285 ) }
    dend_5 { pt3dadd( 470.085, 251.448, 55.9871, 0.2938 ) }
    dend_5 { pt3dadd( 470.103, 250.304, 56.0423, 0.31 ) }
    dend_5 { pt3dadd( 470.121, 249.16, 56.1173, 0.3422 ) }
    dend_5 { pt3dadd( 470.14, 248.016, 56.2148, 0.3902 ) }
    dend_5 { pt3dadd( 470.257, 246.891, 56.3699, 0.536 ) }
    dend_5 { pt3dadd( 470.474, 245.786, 56.604, 0.5316 ) }
    dend_5 { pt3dadd( 470.69, 244.68, 56.891, 0.4838 ) }
    dend_5 { pt3dadd( 470.906, 243.575, 57.2074, 0.3596 ) }
    dend_5 { pt3dadd( 471.065, 242.459, 57.5145, 0.3006 ) }
    dend_5 { pt3dadd( 471.065, 241.315, 57.7522, 0.2756 ) }
    dend_5 { pt3dadd( 471.065, 240.171, 57.9256, 0.2766 ) }
    dend_5 { pt3dadd( 471.065, 239.027, 58.0457, 0.2782 ) }
    dend_5 { pt3dadd( 471.065, 237.883, 58.13, 0.2814 ) }
    dend_5 { pt3dadd( 471.065, 236.739, 58.1946, 0.2872 ) }
    dend_5 { pt3dadd( 471.205, 235.607, 58.2506, 0.2978 ) }
    dend_5 { pt3dadd( 471.393, 234.479, 58.3114, 0.3186 ) }
    dend_5 { pt3dadd( 471.581, 233.351, 58.3822, 0.352 ) }
    dend_5 { pt3dadd( 471.77, 232.222, 58.4693, 0.4394 ) }
    dend_5 { pt3dadd( 471.957, 231.094, 58.5763, 0.4766 ) }
    dend_5 { pt3dadd( 471.981, 229.966, 58.7633, 0.4662 ) }
    dend_5 { pt3dadd( 471.981, 228.839, 59.0176, 0.3738 ) }
    dend_5 { pt3dadd( 471.981, 227.712, 59.3138, 0.328 ) }
    dend_5 { pt3dadd( 471.981, 226.584, 59.6274, 0.3214 ) }
    dend_5 { pt3dadd( 471.981, 225.457, 59.936, 0.3866 ) }
    dend_5 { pt3dadd( 472.241, 224.343, 60.151, 0.3596 ) }
    dend_5 { pt3dadd( 472.504, 223.23, 60.277, 0.3424 ) }
    dend_5 { pt3dadd( 472.766, 222.116, 60.3305, 0.3786 ) }
    dend_5 { pt3dadd( 473.028, 221.003, 60.3302, 0.3436 ) }
    dend_5 { pt3dadd( 473.262, 219.887, 60.2784, 0.318 ) }
    dend_5 { pt3dadd( 473.44, 218.768, 60.1658, 0.3074 ) }
    dend_5 { pt3dadd( 473.617, 217.649, 60.0309, 0.3376 ) }
    dend_5 { pt3dadd( 473.796, 216.531, 59.8976, 0.3818 ) }
    dend_5 { pt3dadd( 473.977, 215.413, 59.8248, 0.5194 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_5 { pt3dadd( 474.163, 214.296, 59.8948, 0.5056 ) }
    dend_5 { pt3dadd( 474.349, 213.18, 60.0852, 0.411 ) }
    dend_5 { pt3dadd( 474.535, 212.064, 60.3691, 0.3436 ) }
    dend_5 { pt3dadd( 474.721, 210.948, 60.7135, 0.381 ) }
    dend_5 { pt3dadd( 475.104, 209.893, 61.1016, 0.3476 ) }
    dend_5 { pt3dadd( 475.499, 208.842, 61.4989, 0.3264 ) }
    dend_5 { pt3dadd( 475.893, 207.79, 61.8783, 0.3184 ) }
    dend_5 { pt3dadd( 476.269, 206.732, 62.2244, 0.3814 ) }
    dend_5 { pt3dadd( 476.411, 205.597, 62.4585, 0.3484 ) }
    dend_5 { pt3dadd( 476.553, 204.462, 62.5979, 0.328 ) }
    dend_5 { pt3dadd( 476.564, 203.318, 62.6578, 0.3214 ) }
    dend_5 { pt3dadd( 476.564, 202.174, 62.6548, 0.3866 ) }
    dend_5 { pt3dadd( 476.665, 201.04, 62.6044, 0.3596 ) }
    dend_5 { pt3dadd( 476.862, 199.913, 62.5232, 0.3422 ) }
    dend_5 { pt3dadd( 477.031, 198.792, 62.3921, 0.3784 ) }
    dend_5 { pt3dadd( 477.166, 197.68, 62.1844, 0.3432 ) }
    dend_5 { pt3dadd( 477.302, 196.567, 61.9357, 0.317 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 17/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 365.266, 777.214, 27.1457, 0.3224 ) }
    dend_77 { pt3dadd( 364.819, 777.491, 28.0591, 0.2288 ) }
    dend_77 { pt3dadd( 363.851, 778.094, 28.2551, 0.2852 ) }
    dend_77 { pt3dadd( 362.872, 778.679, 28.3461, 0.2942 ) }
    dend_77 { pt3dadd( 361.81, 779.104, 28.4276, 0.3118 ) }
    dend_77 { pt3dadd( 360.748, 779.529, 28.5004, 0.3394 ) }
    dend_77 { pt3dadd( 359.643, 779.825, 28.5636, 0.415 ) }
    dend_77 { pt3dadd( 358.537, 780.112, 28.6194, 0.4364 ) }
    dend_77 { pt3dadd( 357.528, 780.594, 28.721, 0.3662 ) }
    dend_77 { pt3dadd( 356.573, 781.183, 28.8842, 0.3124 ) }
    dend_77 { pt3dadd( 355.617, 781.765, 28.954, 0.2988 ) }
    dend_77 { pt3dadd( 354.673, 782.362, 28.9394, 0.3142 ) }
    dend_77 { pt3dadd( 353.898, 783.167, 29.0231, 0.3738 ) }
    dend_77 { pt3dadd( 353.073, 783.916, 29.1189, 0.3344 ) }
    dend_77 { pt3dadd( 352.162, 784.57, 29.1206, 0.301 ) }
    dend_77 { pt3dadd( 351.293, 785.283, 29.1533, 0.2766 ) }
    dend_77 { pt3dadd( 350.452, 786.04, 29.2902, 0.2782 ) }
    dend_77 { pt3dadd( 349.68, 786.875, 29.4745, 0.2814 ) }
    dend_77 { pt3dadd( 348.928, 787.734, 29.6738, 0.287 ) }
    dend_77 { pt3dadd( 348.147, 788.529, 29.9496, 0.2988 ) }
    dend_77 { pt3dadd( 347.372, 789.333, 30.2758, 0.3142 ) }
    dend_77 { pt3dadd( 346.685, 790.248, 30.5334, 0.3738 ) }
    dend_77 { pt3dadd( 345.995, 791.159, 30.7283, 0.3344 ) }
    dend_77 { pt3dadd( 345.281, 792.053, 30.8756, 0.301 ) }
    dend_77 { pt3dadd( 344.538, 792.909, 31.0013, 0.2766 ) }
    dend_77 { pt3dadd( 343.597, 793.506, 31.1923, 0.2782 ) }
    dend_77 { pt3dadd( 342.664, 794.13, 31.3995, 0.2814 ) }
    dend_77 { pt3dadd( 341.844, 794.831, 31.4703, 0.287 ) }
    dend_77 { pt3dadd( 341.196, 795.74, 31.5182, 0.2988 ) }
    dend_77 { pt3dadd( 340.903, 796.766, 31.7226, 0.3142 ) }
    dend_77 { pt3dadd( 340.4, 797.79, 31.9206, 0.3734 ) }
    dend_77 { pt3dadd( 339.858, 798.798, 32.1051, 0.3338 ) }
    dend_77 { pt3dadd( 339.346, 799.807, 32.3411, 0.3 ) }
    dend_77 { pt3dadd( 338.854, 800.816, 32.6614, 0.2746 ) }
    dend_77 { pt3dadd( 338.463, 801.881, 32.9795, 0.2746 ) }
    dend_77 { pt3dadd( 338.115, 802.971, 33.2685, 0.2746 ) }
    dend_77 { pt3dadd( 337.82, 804.066, 33.5891, 0.2746 ) }
    dend_77 { pt3dadd( 337.575, 805.166, 33.9674, 0.2746 ) }
    dend_77 { pt3dadd( 337.234, 806.225, 34.3983, 0.2746 ) }
    dend_77 { pt3dadd( 336.761, 807.227, 34.8874, 0.2746 ) }
    dend_77 { pt3dadd( 336.382, 808.286, 35.3674, 0.2746 ) }
    dend_77 { pt3dadd( 336.108, 809.357, 35.8806, 0.2746 ) }
    dend_77 { pt3dadd( 335.532, 810.297, 36.4073, 0.2746 ) }
    dend_77 { pt3dadd( 334.681, 811.047, 36.8749, 0.2746 ) }
    dend_77 { pt3dadd( 333.828, 811.697, 37.4189, 0.2746 ) }
    dend_77 { pt3dadd( 333.007, 812.366, 38.0318, 0.2746 ) }
    dend_77 { pt3dadd( 331.909, 813.124, 38.565, 0.2746 ) }
    dend_77 { pt3dadd( 330.907, 813.676, 39.0172, 0.2746 ) }
    dend_77 { pt3dadd( 330.018, 814.352, 39.4652, 0.2746 ) }
    dend_77 { pt3dadd( 329.202, 815.109, 39.9459, 0.2746 ) }
    dend_77 { pt3dadd( 328.395, 815.884, 40.4326, 0.2746 ) }
    dend_77 { pt3dadd( 327.583, 816.655, 40.931, 0.2746 ) }
    dend_77 { pt3dadd( 326.723, 817.372, 41.4501, 0.2746 ) }
    dend_77 { pt3dadd( 325.913, 818.146, 41.9619, 0.2746 ) }
    dend_77 { pt3dadd( 325.207, 819.04, 42.4315, 0.2746 ) }
    dend_77 { pt3dadd( 324.576, 819.978, 42.8862, 0.2746 ) }
    dend_77 { pt3dadd( 324.035, 820.969, 43.3577, 0.2746 ) }
    dend_77 { pt3dadd( 323.507, 821.979, 43.8178, 0.2746 ) }
    dend_77 { pt3dadd( 322.999, 822.995, 44.289, 0.2746 ) }
    dend_77 { pt3dadd( 322.634, 824.004, 44.9075, 0.2746 ) }
    dend_77 { pt3dadd( 322.136, 824.921, 45.6445, 0.2746 ) }
    dend_77 { pt3dadd( 321.298, 825.61, 46.4621, 0.2746 ) }
    dend_77 { pt3dadd( 320.392, 826.1, 47.3662, 0.2746 ) }
    dend_77 { pt3dadd( 319.439, 826.446, 48.3437, 0.2746 ) }
    dend_77 { pt3dadd( 318.485, 826.849, 49.3178, 0.2746 ) }
    dend_77 { pt3dadd( 317.497, 826.606, 50.2701, 0.2746 ) }
    dend_77 { pt3dadd( 316.595, 826.739, 51.1428, 0.2746 ) }
    dend_77 { pt3dadd( 316.205, 827.753, 51.8549, 0.2746 ) }
    dend_77 { pt3dadd( 315.963, 828.859, 52.395, 0.2746 ) }
    dend_77 { pt3dadd( 315.963, 829.943, 52.885, 0.2746 ) }
    dend_77 { pt3dadd( 315.963, 830.991, 53.3523, 0.2744 ) }
    dend_77 { pt3dadd( 315.965, 832.069, 53.7446, 0.2744 ) }
    dend_77 { pt3dadd( 316.165, 833.167, 53.9641, 0.2742 ) }
    dend_77 { pt3dadd( 316.906, 833.742, 53.8079, 0.274 ) }
    dend_77 { pt3dadd( 317.147, 834.634, 53.37, 0.2736 ) }
    dend_77 { pt3dadd( 317.294, 835.721, 52.7772, 0.2728 ) }
    dend_77 { pt3dadd( 317.713, 836.62, 52.0416, 0.2712 ) }
    dend_77 { pt3dadd( 318.235, 837.459, 51.2414, 0.2684 ) }
    dend_77 { pt3dadd( 318.759, 838.451, 50.5798, 0.2626 ) }
    dend_77 { pt3dadd( 319.272, 839.447, 50.1108, 0.2542 ) }
    dend_77 { pt3dadd( 319.748, 840.455, 49.9271, 0.2288 ) }
    dend_77 { pt3dadd( 320.083, 841.515, 50.0836, 0.2288 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 99/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 365.266, 777.214, 27.1457, 0.3224 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_74 { pt3dadd( 365.156, 777.515, 27.3248, 0.3588 ) }
    dend_74 { pt3dadd( 364.92, 778.596, 27.4543, 0.452 ) }
    dend_74 { pt3dadd( 364.389, 779.522, 27.5791, 0.4996 ) }
    dend_74 { pt3dadd( 364.16, 780.626, 27.6216, 0.5096 ) }
    dend_74 { pt3dadd( 363.892, 781.638, 27.6112, 0.4516 ) }
    dend_74 { pt3dadd( 363.825, 782.305, 27.5688, 0.486 ) }
    dend_74 { pt3dadd( 363.713, 783.443, 27.5288, 0.5464 ) }
    dend_74 { pt3dadd( 363.601, 784.58, 27.4915, 0.447 ) }
    dend_74 { pt3dadd( 363.585, 785.723, 27.4737, 0.373 ) }
    dend_74 { pt3dadd( 363.585, 786.867, 27.4798, 0.388 ) }
    dend_74 { pt3dadd( 363.564, 788.009, 27.5035, 0.362 ) }
    dend_74 { pt3dadd( 363.362, 789.128, 27.5738, 0.347 ) }
    dend_74 { pt3dadd( 363.153, 790.244, 27.6646, 0.387 ) }
    dend_74 { pt3dadd( 362.888, 791.347, 27.6777, 0.36 ) }
    dend_74 { pt3dadd( 362.624, 792.451, 27.6334, 0.3432 ) }
    dend_74 { pt3dadd( 362.311, 793.552, 27.6043, 0.3802 ) }
    dend_74 { pt3dadd( 361.997, 794.651, 27.5953, 0.3464 ) }
    dend_74 { pt3dadd( 362.008, 795.774, 27.6261, 0.323 ) }
    dend_74 { pt3dadd( 362.149, 796.908, 27.7037, 0.3182 ) }
    dend_74 { pt3dadd( 362.53, 797.954, 27.8404, 0.351 ) }
    dend_74 { pt3dadd( 363.1, 798.932, 28.0238, 0.4376 ) }
    dend_74 { pt3dadd( 363.69, 799.908, 28.1854, 0.4732 ) }
    dend_74 { pt3dadd( 364.29, 800.881, 28.3032, 0.4598 ) }
    dend_74 { pt3dadd( 364.749, 801.923, 28.3746, 0.3624 ) }
    dend_74 { pt3dadd( 365.118, 803.005, 28.406, 0.3058 ) }
    dend_74 { pt3dadd( 365.239, 804.142, 28.4267, 0.2854 ) }
    dend_74 { pt3dadd( 365.362, 805.279, 28.4449, 0.2946 ) }
    dend_74 { pt3dadd( 365.418, 806.419, 28.4668, 0.3126 ) }
    dend_74 { pt3dadd( 365.418, 807.563, 28.4917, 0.3408 ) }
    dend_74 { pt3dadd( 365.366, 808.698, 28.5222, 0.4178 ) }
    dend_74 { pt3dadd( 364.897, 809.72, 28.56, 0.4416 ) }
    dend_74 { pt3dadd( 363.996, 810.406, 28.6051, 0.3754 ) }
    dend_74 { pt3dadd( 363.348, 811.296, 28.6644, 0.331 ) }
    dend_74 { pt3dadd( 362.827, 812.314, 28.7384, 0.3268 ) }
    dend_74 { pt3dadd( 362.519, 813.394, 28.8683, 0.398 ) }
    dend_74 { pt3dadd( 362.301, 814.5, 29.0562, 0.3742 ) }
    dend_74 { pt3dadd( 362.02, 815.6, 29.2306, 0.4002 ) }
    dend_74 { pt3dadd( 361.74, 816.644, 29.2636, 0.3364 ) }
    dend_74 { pt3dadd( 361.306, 817.673, 29.3356, 0.3046 ) }
    dend_74 { pt3dadd( 360.662, 818.545, 29.5154, 0.283 ) }
    dend_74 { pt3dadd( 359.948, 819.436, 29.6778, 0.2902 ) }
    dend_74 { pt3dadd( 359.262, 820.351, 29.8337, 0.3046 ) }
    dend_74 { pt3dadd( 358.601, 821.262, 30.0558, 0.325 ) }
    dend_74 { pt3dadd( 357.946, 822.172, 30.3391, 0.3934 ) }
    dend_74 { pt3dadd( 357.798, 823.288, 30.6239, 0.3716 ) }
    dend_74 { pt3dadd( 357.655, 824.406, 30.8952, 0.3658 ) }
    dend_74 { pt3dadd( 357.633, 825.538, 31.0551, 0.417 ) }
    dend_74 { pt3dadd( 357.633, 826.672, 31.1069, 0.4402 ) }
    dend_74 { pt3dadd( 357.713, 827.804, 31.101, 0.3732 ) }
    dend_74 { pt3dadd( 357.902, 828.932, 31.0948, 0.3256 ) }
    dend_74 { pt3dadd( 358.089, 830.06, 31.1052, 0.323 ) }
    dend_74 { pt3dadd( 358.09, 831.188, 31.2091, 0.3598 ) }
    dend_74 { pt3dadd( 358.09, 832.316, 31.3939, 0.4538 ) }
    dend_74 { pt3dadd( 358.012, 833.449, 31.5921, 0.5044 ) }
    dend_74 { pt3dadd( 357.755, 834.557, 31.7573, 0.5126 ) }
    dend_74 { pt3dadd( 357.231, 835.563, 31.8853, 0.4852 ) }
    dend_74 { pt3dadd( 356.355, 836.259, 31.976, 0.4116 ) }
    dend_74 { pt3dadd( 355.41, 836.841, 32.067, 0.3864 ) }
    dend_74 { pt3dadd( 354.304, 837.057, 32.1916, 0.4858 ) }
    dend_74 { pt3dadd( 353.195, 837.231, 32.3198, 0.4194 ) }
    dend_74 { pt3dadd( 352.076, 837.156, 32.3187, 0.3686 ) }
    dend_74 { pt3dadd( 350.956, 837.099, 32.2297, 0.3802 ) }
    dend_74 { pt3dadd( 349.817, 837.209, 32.1544, 0.3466 ) }
    dend_74 { pt3dadd( 348.679, 837.319, 32.0933, 0.3232 ) }
    dend_74 { pt3dadd( 347.585, 837.635, 32.0575, 0.3186 ) }
    dend_74 { pt3dadd( 346.505, 838.011, 32.0538, 0.3516 ) }
    dend_74 { pt3dadd( 345.528, 838.555, 32.1252, 0.4388 ) }
    dend_74 { pt3dadd( 344.619, 839.21, 32.263, 0.4756 ) }
    dend_74 { pt3dadd( 343.788, 839.972, 32.3109, 0.4642 ) }
    dend_74 { pt3dadd( 342.974, 840.756, 32.2585, 0.3704 ) }
    dend_74 { pt3dadd( 342.066, 841.45, 32.1594, 0.3204 ) }
    dend_74 { pt3dadd( 341.171, 842.156, 32.0314, 0.3132 ) }
    dend_74 { pt3dadd( 340.374, 842.977, 31.9127, 0.3422 ) }
    dend_74 { pt3dadd( 339.591, 843.806, 31.8063, 0.42 ) }
    dend_74 { pt3dadd( 338.894, 844.699, 31.6753, 0.446 ) }
    dend_74 { pt3dadd( 338.207, 845.597, 31.5652, 0.3836 ) }
    dend_74 { pt3dadd( 337.542, 846.514, 31.5515, 0.346 ) }
    dend_74 { pt3dadd( 337.017, 847.519, 31.5529, 0.3558 ) }
    dend_74 { pt3dadd( 336.556, 848.564, 31.535, 0.445 ) }
    dend_74 { pt3dadd( 336.106, 849.613, 31.5493, 0.494 ) }
    dend_74 { pt3dadd( 335.655, 850.662, 31.5815, 0.4634 ) }
    dend_74 { pt3dadd( 335.047, 851.63, 31.5781, 0.539 ) }
    dend_74 { pt3dadd( 334.436, 852.597, 31.5395, 0.4952 ) }
    dend_74 { pt3dadd( 333.959, 853.521, 31.3958, 0.3906 ) }
    dend_74 { pt3dadd( 333.363, 854.436, 31.2771, 0.3108 ) }
    dend_74 { pt3dadd( 333.414, 854.909, 31.1284, 0.2944 ) }
    dend_74 { pt3dadd( 333.504, 855.987, 31.1181, 0.3124 ) }
    dend_74 { pt3dadd( 333.6, 856.998, 31.0391, 0.3392 ) }
    dend_74 { pt3dadd( 333.125, 858.015, 30.947, 0.421 ) }
    dend_74 { pt3dadd( 332.822, 859.109, 30.8916, 0.4176 ) }
    dend_74 { pt3dadd( 332.379, 860.152, 30.8935, 0.4766 ) }
    dend_74 { pt3dadd( 331.961, 861.203, 30.9089, 0.4978 ) }
    dend_74 { pt3dadd( 331.629, 862.284, 30.8392, 0.5078 ) }
    dend_74 { pt3dadd( 331.206, 863.294, 30.6928, 0.4406 ) }
    dend_74 { pt3dadd( 330.583, 864.207, 30.4903, 0.5018 ) }
    dend_74 { pt3dadd( 329.999, 865.188, 30.347, 0.401 ) }
    dend_74 { pt3dadd( 329.7, 866.23, 30.3638, 0.3396 ) }
    dend_74 { pt3dadd( 329.528, 867.246, 30.5166, 0.302 ) }
    dend_74 { pt3dadd( 329.236, 868.351, 30.6676, 0.3202 ) }
    dend_74 { pt3dadd( 328.802, 869.407, 30.8126, 0.3846 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    // Section: dend_68, id: dend_68, parent: dend_64 (entry count 0/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 338.502, 784.844, 28.0731, 0.5144 ) }
    dend_68 { pt3dadd( 338.196, 785.454, 28.2615, 0.637 ) }
    dend_68 { pt3dadd( 337.696, 786.484, 28.4175, 0.6598 ) }
    dend_68 { pt3dadd( 337.214, 787.52, 28.5429, 0.5502 ) }
    dend_68 { pt3dadd( 336.683, 788.525, 28.6608, 0.3984 ) }
    dend_68 { pt3dadd( 336.036, 789.449, 28.8151, 0.3252 ) }
    dend_68 { pt3dadd( 335.438, 790.408, 28.9218, 0.3222 ) }
    dend_68 { pt3dadd( 334.867, 791.386, 28.961, 0.359 ) }
    dend_68 { pt3dadd( 334.208, 792.292, 29.0615, 0.4508 ) }
    dend_68 { pt3dadd( 333.522, 793.177, 29.2387, 0.505 ) }
    dend_68 { pt3dadd( 333.086, 794.235, 29.3947, 0.4836 ) }
    dend_68 { pt3dadd( 332.654, 795.294, 29.5338, 0.5776 ) }
    dend_68 { pt3dadd( 332.228, 796.356, 29.6646, 0.5612 ) }
    dend_68 { pt3dadd( 331.802, 797.417, 29.7898, 0.5406 ) }
    dend_68 { pt3dadd( 331.252, 798.416, 29.9068, 0.4544 ) }
    dend_68 { pt3dadd( 330.653, 799.391, 30.032, 0.5284 ) }
    dend_68 { pt3dadd( 329.715, 799.923, 30.1974, 0.445 ) }
    dend_68 { pt3dadd( 329.081, 800.693, 30.5186, 0.4466 ) }
    dend_68 { pt3dadd( 328.783, 801.787, 30.8445, 0.3764 ) }
    dend_68 { pt3dadd( 328.774, 802.888, 31.2438, 0.3746 ) }
    dend_68 { pt3dadd( 328.508, 803.954, 31.6562, 0.4328 ) }
    dend_68 { pt3dadd( 328.041, 804.969, 32.0552, 0.4706 ) }
    dend_68 { pt3dadd( 327.75, 806.052, 32.3431, 0.4252 ) }
    dend_68 { pt3dadd( 327.563, 807.177, 32.4862, 0.4424 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 24/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 338.502, 784.844, 28.0731, 0.5144 ) }
    dend_65 { pt3dadd( 337.117, 785.294, 27.7684, 0.2288 ) }
    dend_65 { pt3dadd( 336.04, 785.602, 27.8103, 0.3734 ) }
    dend_65 { pt3dadd( 334.944, 785.848, 27.886, 0.334 ) }
    dend_65 { pt3dadd( 333.832, 785.893, 27.9502, 0.3 ) }
    dend_65 { pt3dadd( 332.704, 785.76, 27.9443, 0.2748 ) }
    dend_65 { pt3dadd( 331.576, 785.7, 27.8965, 0.275 ) }
    dend_65 { pt3dadd( 330.448, 785.88, 27.8459, 0.2752 ) }
    dend_65 { pt3dadd( 329.32, 786.061, 27.8073, 0.276 ) }
    dend_65 { pt3dadd( 328.246, 785.679, 27.8147, 0.277 ) }
    dend_65 { pt3dadd( 327.173, 785.282, 27.8853, 0.2792 ) }
    dend_65 { pt3dadd( 326.077, 785.041, 28.0834, 0.2832 ) }
    dend_65 { pt3dadd( 324.974, 784.84, 28.3923, 0.2906 ) }
    dend_65 { pt3dadd( 323.864, 784.891, 28.7753, 0.3038 ) }
    dend_65 { pt3dadd( 322.752, 785.021, 29.1995, 0.3312 ) }
    dend_65 { pt3dadd( 321.64, 784.916, 29.6282, 0.3686 ) }
    dend_65 { pt3dadd( 320.529, 784.75, 30.0387, 0.5012 ) }
    dend_65 { pt3dadd( 319.405, 784.585, 30.3632, 0.4416 ) }
    dend_65 { pt3dadd( 318.272, 784.42, 30.5841, 0.4404 ) }
    dend_65 { pt3dadd( 317.143, 784.249, 30.73, 0.3648 ) }
    dend_65 { pt3dadd( 316.028, 784.039, 30.8574, 0.352 ) }
    dend_65 { pt3dadd( 314.913, 783.83, 30.9677, 0.3976 ) }
    dend_65 { pt3dadd( 313.89, 783.325, 30.9848, 0.3734 ) }
    dend_65 { pt3dadd( 312.851, 782.872, 30.931, 0.3988 ) }
    dend_65 { pt3dadd( 311.736, 782.662, 30.8098, 0.334 ) }
    dend_65 { pt3dadd( 310.62, 782.453, 30.6382, 0.3 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 50/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 304.361, 760.019, 17.0018, 0.6684 ) }
    dend_53 { pt3dadd( 303.573, 760.631, 17.1725, 0.536 ) }
    dend_53 { pt3dadd( 302.611, 761.244, 17.3491, 0.5172 ) }
    dend_53 { pt3dadd( 301.668, 761.889, 17.4999, 0.5274 ) }
    dend_53 { pt3dadd( 300.754, 762.569, 17.6112, 0.556 ) }
    dend_53 { pt3dadd( 300.005, 763.412, 17.6292, 0.562 ) }
    dend_53 { pt3dadd( 299.36, 764.335, 17.6121, 0.5728 ) }
    dend_53 { pt3dadd( 298.819, 765.341, 17.6294, 0.5938 ) }
    dend_53 { pt3dadd( 298.135, 766.231, 17.7117, 0.6274 ) }
    dend_53 { pt3dadd( 297.32, 767.016, 17.8625, 0.7158 ) }
    dend_53 { pt3dadd( 296.435, 767.732, 18.0176, 0.7542 ) }
    dend_53 { pt3dadd( 295.519, 768.417, 18.1521, 0.7476 ) }
    dend_53 { pt3dadd( 294.644, 769.15, 18.2787, 0.6564 ) }
    dend_53 { pt3dadd( 293.785, 769.901, 18.3986, 0.6406 ) }
    dend_53 { pt3dadd( 292.917, 770.64, 18.4613, 0.5532 ) }
    dend_53 { pt3dadd( 292.132, 771.448, 18.485, 0.4454 ) }
    dend_53 { pt3dadd( 291.458, 772.361, 18.5235, 0.439 ) }
    dend_53 { pt3dadd( 290.67, 773.103, 18.6761, 0.403 ) }
    dend_53 { pt3dadd( 289.639, 773.407, 18.7414, 0.4534 ) }
    dend_53 { pt3dadd( 288.651, 773.901, 18.9042, 0.4366 ) }
    dend_53 { pt3dadd( 288.494, 775.01, 18.9722, 0.4818 ) }
    dend_53 { pt3dadd( 288.885, 776.022, 18.9871, 0.6542 ) }
    dend_53 { pt3dadd( 288.584, 777.031, 19.0924, 0.7726 ) }
    dend_53 { pt3dadd( 287.805, 777.869, 19.1584, 0.8246 ) }
    dend_53 { pt3dadd( 287.009, 778.69, 19.205, 0.819 ) }
    dend_53 { pt3dadd( 286.094, 779.376, 19.2213, 0.846 ) }
    dend_53 { pt3dadd( 285.179, 780.063, 19.224, 0.7148 ) }
    dend_53 { pt3dadd( 284.492, 780.978, 19.2003, 0.6646 ) }
    dend_53 { pt3dadd( 283.806, 781.893, 19.1439, 0.5492 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 79/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 304.361, 760.019, 17.0018, 0.6684 ) }
    dend_52 { pt3dadd( 304.749, 760.685, 16.0054, 0.2288 ) }
    dend_52 { pt3dadd( 305.291, 761.612, 15.0038, 0.6338 ) }
    dend_52 { pt3dadd( 305.85, 762.564, 14.5795, 0.7636 ) }
    dend_52 { pt3dadd( 306.416, 763.525, 14.121, 0.6678 ) }
    dend_52 { pt3dadd( 306.856, 764.55, 13.6633, 0.522 ) }
    dend_52 { pt3dadd( 307.272, 765.586, 13.2382, 0.5534 ) }
    dend_52 { pt3dadd( 307.436, 766.718, 12.9436, 0.5216 ) }
    dend_52 { pt3dadd( 307.601, 767.851, 12.7644, 0.4418 ) }
    dend_52 { pt3dadd( 307.499, 768.956, 12.7049, 0.395 ) }
    dend_52 { pt3dadd( 307.215, 770.044, 12.7493, 0.503 ) }
    dend_52 { pt3dadd( 307.034, 771.156, 12.7643, 0.4448 ) }
    dend_52 { pt3dadd( 306.914, 772.28, 12.6867, 0.4464 ) }
    dend_52 { pt3dadd( 306.943, 773.406, 12.539, 0.3762 ) }
    dend_52 { pt3dadd( 307.12, 774.533, 12.3543, 0.3728 ) }
    dend_52 { pt3dadd( 307.181, 775.632, 12.1243, 0.4372 ) }
    dend_52 { pt3dadd( 306.894, 776.688, 11.85, 0.4414 ) }
    dend_52 { pt3dadd( 306.82, 777.825, 11.6497, 0.5524 ) }
    dend_52 { pt3dadd( 306.943, 778.951, 11.5156, 0.4842 ) }
    dend_52 { pt3dadd( 307.436, 779.979, 11.4313, 0.5448 ) }
    dend_52 { pt3dadd( 307.785, 781.053, 11.3834, 0.4344 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_52 { pt3dadd( 308.021, 782.172, 11.362, 0.3976 ) }
    dend_52 { pt3dadd( 308.17, 783.3, 11.3537, 0.4288 ) }
    dend_52 { pt3dadd( 308.145, 784.443, 11.3424, 0.4618 ) }
    dend_52 { pt3dadd( 308.189, 785.581, 11.327, 0.414 ) }
    dend_52 { pt3dadd( 308.401, 786.706, 11.3039, 0.3968 ) }
    dend_52 { pt3dadd( 308.614, 787.829, 11.2708, 0.4764 ) }
    dend_52 { pt3dadd( 308.783, 788.961, 11.2272, 0.5398 ) }
    dend_52 { pt3dadd( 308.948, 790.093, 11.173, 0.6098 ) }
    dend_52 { pt3dadd( 309.176, 791.211, 11.1083, 0.5122 ) }
    dend_52 { pt3dadd( 309.552, 792.17, 10.9082, 0.5196 ) }
    dend_52 { pt3dadd( 309.78, 792.712, 10.7478, 0.5332 ) }
    dend_52 { pt3dadd( 310.226, 793.766, 10.6281, 0.5606 ) }
    dend_52 { pt3dadd( 310.691, 794.804, 10.5189, 0.6 ) }
    dend_52 { pt3dadd( 311.162, 795.837, 10.4107, 0.5 ) }
    dend_52 { pt3dadd( 311.359, 796.947, 10.3427, 0.468 ) }
    dend_52 { pt3dadd( 311.317, 798.086, 10.3114, 0.5792 ) }
    dend_52 { pt3dadd( 311.072, 799.195, 10.2923, 0.6434 ) }
    dend_52 { pt3dadd( 311.126, 800.309, 10.2862, 0.5368 ) }
    dend_52 { pt3dadd( 311.32, 801.436, 10.295, 0.5186 ) }
    dend_52 { pt3dadd( 311.601, 802.54, 10.3149, 0.5302 ) }
    dend_52 { pt3dadd( 311.996, 803.613, 10.3398, 0.5598 ) }
    dend_52 { pt3dadd( 312.347, 804.699, 10.3772, 0.576 ) }
    dend_52 { pt3dadd( 312.544, 805.823, 10.4444, 0.564 ) }
    dend_52 { pt3dadd( 312.743, 806.948, 10.5335, 0.7464 ) }
    dend_52 { pt3dadd( 313.085, 808.037, 10.5946, 0.778 ) }
    dend_52 { pt3dadd( 313.44, 809.119, 10.649, 0.7232 ) }
    dend_52 { pt3dadd( 313.803, 810.18, 10.7736, 0.7136 ) }
    dend_52 { pt3dadd( 313.971, 811.269, 10.9069, 0.7084 ) }
    dend_52 { pt3dadd( 313.822, 812.402, 10.9828, 0.6358 ) }
    dend_52 { pt3dadd( 313.672, 813.536, 11.0134, 0.5782 ) }
    dend_52 { pt3dadd( 313.81, 814.657, 10.9537, 0.5556 ) }
    dend_52 { pt3dadd( 313.947, 815.777, 10.8285, 0.562 ) }
    dend_52 { pt3dadd( 314.375, 816.821, 10.7335, 0.568 ) }
    dend_52 { pt3dadd( 314.885, 817.841, 10.694, 0.6088 ) }
    dend_52 { pt3dadd( 315.248, 818.914, 10.7163, 0.5404 ) }
    dend_52 { pt3dadd( 315.569, 820.002, 10.7773, 0.4266 ) }
    dend_52 { pt3dadd( 315.813, 821.08, 10.8865, 0.3808 ) }
    dend_52 { pt3dadd( 315.963, 822.138, 10.9345, 0.4096 ) }
    dend_52 { pt3dadd( 316.162, 823.035, 10.7049, 0.596 ) }
    dend_52 { pt3dadd( 317.102, 823.426, 10.2938, 0.5254 ) }
    dend_52 { pt3dadd( 317.546, 824.373, 9.8633, 0.356 ) }
    dend_52 { pt3dadd( 317.794, 825.49, 9.1062, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 42/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 477.302, 196.567, 61.9357, 0.317 ) }
    dend_17 { pt3dadd( 477.267, 195.855, 61.8646, 0.2288 ) }
    dend_17 { pt3dadd( 477.211, 194.741, 62.3683, 0.2902 ) }
    dend_17 { pt3dadd( 477.135, 193.607, 62.5775, 0.3046 ) }
    dend_17 { pt3dadd( 477.056, 192.469, 62.7931, 0.3248 ) }
    dend_17 { pt3dadd( 476.917, 191.342, 62.9412, 0.3932 ) }
    dend_17 { pt3dadd( 476.636, 190.238, 63.1002, 0.3716 ) }
    dend_17 { pt3dadd( 476.332, 189.137, 63.2808, 0.3644 ) }
    dend_17 { pt3dadd( 475.961, 188.076, 63.5191, 0.4206 ) }
    dend_17 { pt3dadd( 475.56, 187.034, 63.8294, 0.417 ) }
    dend_17 { pt3dadd( 475.307, 185.934, 64.1656, 0.475 ) }
    dend_17 { pt3dadd( 475.098, 184.818, 64.5098, 0.4966 ) }
    dend_17 { pt3dadd( 474.868, 183.701, 64.8147, 0.498 ) }
    dend_17 { pt3dadd( 474.622, 182.585, 65.0647, 0.4586 ) }
    dend_17 { pt3dadd( 474.512, 181.47, 65.2971, 0.3602 ) }
    dend_17 { pt3dadd( 474.705, 180.364, 65.5746, 0.3016 ) }
    dend_17 { pt3dadd( 474.86, 179.251, 65.8764, 0.2774 ) }
    dend_17 { pt3dadd( 474.921, 178.112, 66.1346, 0.28 ) }
    dend_17 { pt3dadd( 475.469, 177.236, 66.4723, 0.2846 ) }
    dend_17 { pt3dadd( 475.26, 176.115, 66.7696, 0.2928 ) }
    dend_17 { pt3dadd( 475.05, 174.992, 67.0253, 0.3096 ) }
    dend_17 { pt3dadd( 474.881, 173.871, 67.2462, 0.3342 ) }
    dend_17 { pt3dadd( 475.101, 172.771, 67.4926, 0.4114 ) }
    dend_17 { pt3dadd( 475.316, 171.67, 67.7494, 0.4 ) }
    dend_17 { pt3dadd( 475.259, 170.528, 67.9224, 0.443 ) }
    dend_17 { pt3dadd( 475.203, 169.385, 68.0428, 0.4412 ) }
    dend_17 { pt3dadd( 475.103, 168.296, 68.0588, 0.3748 ) }
    dend_17 { pt3dadd( 475.724, 167.507, 67.9764, 0.3298 ) }
    dend_17 { pt3dadd( 475.768, 166.364, 67.9342, 0.3246 ) }
    dend_17 { pt3dadd( 475.729, 165.263, 68.0453, 0.3928 ) }
    dend_17 { pt3dadd( 475.205, 164.292, 68.273, 0.3706 ) }
    dend_17 { pt3dadd( 474.698, 163.28, 68.553, 0.3638 ) }
    dend_17 { pt3dadd( 474.205, 162.255, 68.8495, 0.4132 ) }
    dend_17 { pt3dadd( 473.725, 161.219, 69.123, 0.4332 ) }
    dend_17 { pt3dadd( 473.418, 160.134, 69.3417, 0.3602 ) }
    dend_17 { pt3dadd( 473.284, 158.998, 69.4988, 0.3016 ) }
    dend_17 { pt3dadd( 473.25, 157.87, 69.6234, 0.2776 ) }
    dend_17 { pt3dadd( 473.57, 156.771, 69.7421, 0.2802 ) }
    dend_17 { pt3dadd( 473.891, 155.673, 69.8681, 0.285 ) }
    dend_17 { pt3dadd( 474.413, 154.68, 70.0784, 0.2938 ) }
    dend_17 { pt3dadd( 474.935, 153.684, 70.3413, 0.3112 ) }
    dend_17 { pt3dadd( 475.429, 152.653, 70.5704, 0.3382 ) }
    dend_17 { pt3dadd( 475.741, 151.572, 70.7848, 0.413 ) }
    dend_17 { pt3dadd( 475.655, 150.482, 71.0438, 0.4328 ) }
    dend_17 { pt3dadd( 475.697, 149.451, 71.3149, 0.3594 ) }
    dend_17 { pt3dadd( 475.863, 148.328, 71.5042, 0.3 ) }
    dend_17 { pt3dadd( 475.972, 147.189, 71.6349, 0.2746 ) }
    dend_17 { pt3dadd( 476.08, 146.052, 71.7307, 0.2746 ) }
    dend_17 { pt3dadd( 476.194, 145.711, 71.8609, 0.2746 ) }
    dend_17 { pt3dadd( 476.539, 144.678, 72.098, 0.2746 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 92/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 477.302, 196.567, 61.9357, 0.317 ) }
    dend_6 { pt3dadd( 477.874, 195.653, 61.6784, 0.3074 ) }
    dend_6 { pt3dadd( 478.155, 194.577, 61.4956, 0.3298 ) }
    dend_6 { pt3dadd( 478.289, 193.441, 61.4214, 0.4036 ) }
    dend_6 { pt3dadd( 478.516, 192.352, 61.5009, 0.3846 ) }
    dend_6 { pt3dadd( 478.884, 191.336, 61.7806, 0.4192 ) }
    dend_6 { pt3dadd( 479.443, 190.367, 62.1205, 0.373 ) }
    dend_6 { pt3dadd( 480.081, 189.43, 62.4666, 0.3666 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_6 { pt3dadd( 480.776, 188.561, 62.8345, 0.4258 ) }
    dend_6 { pt3dadd( 481.554, 187.754, 63.149, 0.4206 ) }
    dend_6 { pt3dadd( 482.436, 187.027, 63.3506, 0.5116 ) }
    dend_6 { pt3dadd( 483.332, 186.335, 63.4365, 0.42 ) }
    dend_6 { pt3dadd( 484.243, 185.682, 63.4217, 0.3698 ) }
    dend_6 { pt3dadd( 485.269, 185.217, 63.4068, 0.3824 ) }
    dend_6 { pt3dadd( 486.306, 184.74, 63.4351, 0.3508 ) }
    dend_6 { pt3dadd( 487.261, 184.472, 63.6961, 0.3308 ) }
    dend_6 { pt3dadd( 487.939, 183.73, 64.1057, 0.334 ) }
    dend_6 { pt3dadd( 488.654, 182.836, 64.4633, 0.374 ) }
    dend_6 { pt3dadd( 489.221, 181.848, 64.7671, 0.5112 ) }
    dend_6 { pt3dadd( 489.446, 180.727, 65.0115, 0.46 ) }
    dend_6 { pt3dadd( 489.513, 179.59, 65.2056, 0.4754 ) }
    dend_6 { pt3dadd( 489.52, 178.447, 65.3688, 0.4256 ) }
    dend_6 { pt3dadd( 489.585, 177.323, 65.5984, 0.485 ) }
    dend_6 { pt3dadd( 489.652, 176.199, 65.8958, 0.5444 ) }
    dend_6 { pt3dadd( 489.925, 175.098, 66.1954, 0.4434 ) }
    dend_6 { pt3dadd( 489.971, 174.101, 66.6378, 0.3662 ) }
    dend_6 { pt3dadd( 489.628, 173.12, 67.0513, 0.3758 ) }
    dend_6 { pt3dadd( 489.751, 172.06, 67.27, 0.3382 ) }
    dend_6 { pt3dadd( 490.123, 170.979, 67.408, 0.308 ) }
    dend_6 { pt3dadd( 490.224, 169.916, 67.5469, 0.289 ) }
    dend_6 { pt3dadd( 490.33, 168.785, 67.6984, 0.3024 ) }
    dend_6 { pt3dadd( 490.503, 167.66, 67.8224, 0.3212 ) }
    dend_6 { pt3dadd( 490.726, 166.54, 67.9235, 0.3862 ) }
    dend_6 { pt3dadd( 491.068, 165.461, 68.0078, 0.3586 ) }
    dend_6 { pt3dadd( 491.548, 164.518, 68.2142, 0.3406 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 27/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 328.802, 869.407, 30.8126, 0.3846 ) }
    dend_76 { pt3dadd( 329.573, 869.567, 30.8, 0.2288 ) }
    dend_76 { pt3dadd( 329.827, 869.656, 30.8, 0.2748 ) }
    dend_76 { pt3dadd( 330.157, 869.669, 30.8, 0.275 ) }
    dend_76 { pt3dadd( 330.386, 869.783, 30.8, 0.2752 ) }
    dend_76 { pt3dadd( 330.538, 869.974, 30.8, 0.2758 ) }
    dend_76 { pt3dadd( 330.692, 870.05, 30.8, 0.2768 ) }
    dend_76 { pt3dadd( 331.264, 870.279, 30.8, 0.2796 ) }
    dend_76 { pt3dadd( 331.848, 870.495, 30.8, 0.2796 ) }
    dend_76 { pt3dadd( 332.42, 870.724, 30.8, 0.305 ) }
    dend_76 { pt3dadd( 332.56, 870.813, 30.8, 0.2288 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 38/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 328.802, 869.407, 30.8126, 0.3846 ) }
    dend_75 { pt3dadd( 328.34, 870.454, 30.942, 0.3546 ) }
    dend_75 { pt3dadd( 327.884, 871.503, 31.0537, 0.3392 ) }
    dend_75 { pt3dadd( 327.43, 872.553, 31.1567, 0.3432 ) }
    dend_75 { pt3dadd( 326.887, 873.534, 31.3267, 0.422 ) }
    dend_75 { pt3dadd( 326.288, 874.475, 31.5935, 0.4492 ) }
    dend_75 { pt3dadd( 325.519, 875.303, 31.8791, 0.391 ) }
    dend_75 { pt3dadd( 324.752, 876.138, 32.1717, 0.3534 ) }
    dend_75 { pt3dadd( 324.069, 877.036, 32.4839, 0.4002 ) }
    dend_75 { pt3dadd( 323.316, 877.86, 32.6956, 0.3782 ) }
    dend_75 { pt3dadd( 322.53, 878.646, 32.7838, 0.4076 ) }
    dend_75 { pt3dadd( 321.918, 879.575, 32.9734, 0.35 ) }
    dend_75 { pt3dadd( 321.368, 880.538, 33.2662, 0.3298 ) }
    dend_75 { pt3dadd( 321.104, 881.642, 33.6123, 0.3304 ) }
    dend_75 { pt3dadd( 320.835, 882.742, 34.0091, 0.3748 ) }
    dend_75 { pt3dadd( 320.313, 883.698, 34.526, 0.4766 ) }
    dend_75 { pt3dadd( 319.724, 884.622, 35.0851, 0.5712 ) }
    dend_75 { pt3dadd( 318.934, 885.447, 35.5645, 0.5174 ) }
    dend_75 { pt3dadd( 318.176, 886.204, 36.0892, 0.3846 ) }
    dend_75 { pt3dadd( 317.794, 887.222, 36.6293, 0.3 ) }
    dend_75 { pt3dadd( 317.562, 888.26, 37.1773, 0.2744 ) }
    dend_75 { pt3dadd( 317.047, 889.262, 37.6746, 0.2744 ) }
    dend_75 { pt3dadd( 316.578, 890.295, 38.0758, 0.2742 ) }
    dend_75 { pt3dadd( 316.143, 891.349, 38.3614, 0.274 ) }
    dend_75 { pt3dadd( 315.657, 892.273, 38.6966, 0.2736 ) }
    dend_75 { pt3dadd( 315.867, 893.303, 39.0306, 0.2728 ) }
    dend_75 { pt3dadd( 316.572, 894.141, 39.3627, 0.2712 ) }
    dend_75 { pt3dadd( 316.616, 895.194, 39.6892, 0.2684 ) }
    dend_75 { pt3dadd( 316.498, 896.284, 39.9036, 0.2626 ) }
    dend_75 { pt3dadd( 317.265, 897.039, 40.1363, 0.2542 ) }
    dend_75 { pt3dadd( 318.316, 897.391, 40.2251, 0.2288 ) }
    dend_75 { pt3dadd( 318.709, 898.287, 39.8392, 0.2288 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 327.563, 807.177, 32.4862, 0.4424 ) }
    dend_70 { pt3dadd( 327.736, 808.472, 32.5315, 0.3732 ) }
    dend_70 { pt3dadd( 327.841, 809.594, 32.464, 0.327 ) }
    dend_70 { pt3dadd( 327.605, 810.704, 32.4786, 0.3192 ) }
    dend_70 { pt3dadd( 327.368, 811.813, 32.5721, 0.383 ) }
    dend_70 { pt3dadd( 326.839, 812.822, 32.7054, 0.3512 ) }
    dend_70 { pt3dadd( 326.297, 813.828, 32.863, 0.3332 ) }
    dend_70 { pt3dadd( 325.557, 814.7, 33.0106, 0.3308 ) }
    dend_70 { pt3dadd( 324.815, 815.57, 33.1425, 0.4056 ) }
    dend_70 { pt3dadd( 324.245, 816.561, 33.2548, 0.388 ) }
    dend_70 { pt3dadd( 323.674, 817.553, 33.3609, 0.427 ) }
    dend_70 { pt3dadd( 322.899, 818.35, 33.5591, 0.3806 ) }
    dend_70 { pt3dadd( 322.149, 819.175, 33.8128, 0.4122 ) }
    dend_70 { pt3dadd( 321.551, 820.148, 34.032, 0.359 ) }
    dend_70 { pt3dadd( 321.003, 821.145, 34.2247, 0.346 ) }
    dend_70 { pt3dadd( 320.715, 822.252, 34.3986, 0.3618 ) }
    dend_70 { pt3dadd( 320.426, 823.36, 34.5584, 0.4266 ) }
    dend_70 { pt3dadd( 319.802, 824.289, 34.7682, 0.604 ) }
    dend_70 { pt3dadd( 319.143, 825.197, 35.0302, 0.6546 ) }
    dend_70 { pt3dadd( 318.728, 826.217, 35.3682, 0.7272 ) }
    dend_70 { pt3dadd( 318.311, 827.247, 35.7266, 0.735 ) }
    dend_70 { pt3dadd( 317.887, 828.31, 36.0007, 0.6784 ) }
    dend_70 { pt3dadd( 317.476, 829.366, 36.19, 0.6902 ) }
    dend_70 { pt3dadd( 317.335, 830.354, 36.1351, 0.6036 ) }
    dend_70 { pt3dadd( 317.227, 831.266, 36.199, 0.74 ) }
    dend_70 { pt3dadd( 316.674, 832.155, 36.3966, 0.6946 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 96/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 327.563, 807.177, 32.4862, 0.4424 ) }
    dend_69 { pt3dadd( 326.833, 807.512, 32.1891, 0.2288 ) }
    dend_69 { pt3dadd( 325.818, 807.977, 31.6442, 0.2746 ) }
    dend_69 { pt3dadd( 324.741, 808.318, 31.4138, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_69 { pt3dadd( 323.654, 808.64, 31.1654, 0.2746 ) }
    dend_69 { pt3dadd( 322.78, 809.343, 30.956, 0.2748 ) }
    dend_69 { pt3dadd( 321.958, 810.138, 30.8003, 0.275 ) }
    dend_69 { pt3dadd( 321.136, 810.935, 30.6964, 0.2752 ) }
    dend_69 { pt3dadd( 320.314, 811.731, 30.6376, 0.2758 ) }
    dend_69 { pt3dadd( 319.552, 812.463, 30.4749, 0.277 ) }
    dend_69 { pt3dadd( 318.984, 813.425, 30.3478, 0.2792 ) }
    dend_69 { pt3dadd( 319.019, 814.014, 30.5136, 0.283 ) }
    dend_69 { pt3dadd( 319.201, 814.256, 30.5788, 0.2902 ) }
    dend_69 { pt3dadd( 318.177, 814.594, 30.5063, 0.3032 ) }
    dend_69 { pt3dadd( 317.431, 815.161, 30.3638, 0.3298 ) }
    dend_69 { pt3dadd( 317.117, 816.225, 30.1445, 0.3666 ) }
    dend_69 { pt3dadd( 316.646, 817.255, 29.9233, 0.496 ) }
    dend_69 { pt3dadd( 316.147, 818.253, 29.6554, 0.4384 ) }
    dend_69 { pt3dadd( 315.613, 819.228, 29.4795, 0.4038 ) }
    dend_69 { pt3dadd( 315.006, 820.152, 29.5184, 0.446 ) }
    dend_69 { pt3dadd( 314.542, 821.168, 29.6657, 0.4648 ) }
    dend_69 { pt3dadd( 314.189, 822.255, 29.8494, 0.561 ) }
    dend_69 { pt3dadd( 313.958, 823.363, 30.07, 0.6698 ) }
    dend_69 { pt3dadd( 313.751, 824.477, 30.3106, 0.7512 ) }
    dend_69 { pt3dadd( 313.692, 825.617, 30.4892, 0.5708 ) }
    dend_69 { pt3dadd( 313.654, 826.761, 30.5973, 0.4724 ) }
    dend_69 { pt3dadd( 313.573, 827.897, 30.6617, 0.517 ) }
    dend_69 { pt3dadd( 313.253, 828.995, 30.6911, 0.6418 ) }
    dend_69 { pt3dadd( 312.932, 830.092, 30.6925, 0.6684 ) }
    dend_69 { pt3dadd( 312.581, 831.18, 30.6634, 0.5672 ) }
    dend_69 { pt3dadd( 312.221, 832.249, 30.6502, 0.4244 ) }
    dend_69 { pt3dadd( 311.916, 833.275, 30.77, 0.399 ) }
    dend_69 { pt3dadd( 311.636, 834.347, 30.856, 0.3342 ) }
    dend_69 { pt3dadd( 311.071, 835.219, 30.7406, 0.3006 ) }
    dend_69 { pt3dadd( 310.522, 836.217, 30.5805, 0.2758 ) }
    dend_69 { pt3dadd( 310.078, 837.257, 30.4797, 0.2768 ) }
    dend_69 { pt3dadd( 309.822, 838.353, 30.3066, 0.2796 ) }
    dend_69 { pt3dadd( 309.605, 839.459, 30.0787, 0.2796 ) }
    dend_69 { pt3dadd( 309.158, 840.498, 29.8864, 0.305 ) }
    dend_69 { pt3dadd( 308.635, 841.515, 29.5949, 0.2288 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 36/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 310.62, 782.453, 30.6382, 0.3 ) }
    dend_67 { pt3dadd( 309.6, 782.453, 30.4948, 0.2746 ) }
    dend_67 { pt3dadd( 308.456, 782.453, 30.3814, 0.2748 ) }
    dend_67 { pt3dadd( 307.325, 782.308, 30.2786, 0.275 ) }
    dend_67 { pt3dadd( 306.201, 782.106, 30.1762, 0.2754 ) }
    dend_67 { pt3dadd( 305.113, 782.078, 30.0135, 0.2762 ) }
    dend_67 { pt3dadd( 304.127, 782.401, 29.7248, 0.2776 ) }
    dend_67 { pt3dadd( 303.011, 782.453, 29.5252, 0.2802 ) }
    dend_67 { pt3dadd( 302.034, 782.879, 29.5095, 0.285 ) }
    dend_67 { pt3dadd( 301.058, 783.347, 29.5868, 0.2938 ) }
    dend_67 { pt3dadd( 300.067, 783.759, 29.6478, 0.3112 ) }
    dend_67 { pt3dadd( 298.977, 783.497, 29.7573, 0.3382 ) }
    dend_67 { pt3dadd( 297.913, 783.304, 29.729, 0.4128 ) }
    dend_67 { pt3dadd( 296.783, 783.131, 29.6125, 0.4324 ) }
    dend_67 { pt3dadd( 295.654, 782.957, 29.4165, 0.3588 ) }
    dend_67 { pt3dadd( 294.557, 783.177, 29.1858, 0.299 ) }
    dend_67 { pt3dadd( 293.593, 783.015, 28.8994, 0.2728 ) }
    dend_67 { pt3dadd( 292.763, 782.261, 28.4981, 0.2712 ) }
    dend_67 { pt3dadd( 291.905, 781.533, 28.0426, 0.2684 ) }
    dend_67 { pt3dadd( 291.014, 780.836, 27.5613, 0.2626 ) }
    dend_67 { pt3dadd( 290.029, 780.305, 27.072, 0.2542 ) }
    dend_67 { pt3dadd( 288.946, 780.171, 26.5514, 0.2288 ) }
    dend_67 { pt3dadd( 288.03, 780.163, 25.0418, 0.2288 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 59/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 310.62, 782.453, 30.6382, 0.3 ) }
    dend_66 { pt3dadd( 311.71, 782.75, 30.6001, 0.2288 ) }
    dend_66 { pt3dadd( 312.598, 782.678, 29.0198, 0.5122 ) }
    dend_66 { pt3dadd( 312.896, 781.768, 28.296, 0.463 ) }
    dend_66 { pt3dadd( 313.536, 780.931, 27.4506, 0.4746 ) }
    dend_66 { pt3dadd( 314.273, 780.174, 26.5508, 0.4548 ) }
    dend_66 { pt3dadd( 314.338, 779.373, 25.5793, 0.3898 ) }
    dend_66 { pt3dadd( 313.43, 778.833, 24.678, 0.4068 ) }
    dend_66 { pt3dadd( 312.757, 778.332, 22.7651, 0.2288 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 68/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 283.806, 781.893, 19.1439, 0.5492 ) }
    dend_57 { pt3dadd( 283.067, 782.523, 19.3505, 0.2288 ) }
    dend_57 { pt3dadd( 282.196, 783.266, 19.3208, 0.3274 ) }
    dend_57 { pt3dadd( 281.336, 784.018, 19.3046, 0.3694 ) }
    dend_57 { pt3dadd( 280.468, 784.747, 19.273, 0.465 ) }
    dend_57 { pt3dadd( 279.589, 785.45, 19.2277, 0.556 ) }
    dend_57 { pt3dadd( 278.666, 786.113, 19.2538, 0.4584 ) }
    dend_57 { pt3dadd( 277.687, 786.705, 19.3838, 0.4248 ) }
    dend_57 { pt3dadd( 277.078, 787.542, 19.7218, 0.335 ) }
    dend_57 { pt3dadd( 276.838, 788.375, 20.3498, 0.302 ) }
    dend_57 { pt3dadd( 276.207, 789.157, 21.092, 0.2782 ) }
    dend_57 { pt3dadd( 275.171, 789.338, 21.8746, 0.2814 ) }
    dend_57 { pt3dadd( 274.2, 789.688, 22.6333, 0.287 ) }
    dend_57 { pt3dadd( 273.1, 789.963, 23.1799, 0.2988 ) }
    dend_57 { pt3dadd( 272.193, 790.553, 23.4471, 0.3144 ) }
    dend_57 { pt3dadd( 271.713, 791.448, 23.6828, 0.374 ) }
    dend_57 { pt3dadd( 270.83, 792.171, 23.8776, 0.3348 ) }
    dend_57 { pt3dadd( 269.935, 792.88, 24.0525, 0.3016 ) }
    dend_57 { pt3dadd( 269.02, 793.567, 24.2178, 0.2776 ) }
    dend_57 { pt3dadd( 268.122, 794.256, 24.4358, 0.2802 ) }
    dend_57 { pt3dadd( 267.252, 794.951, 24.7516, 0.2852 ) }
    dend_57 { pt3dadd( 266.342, 795.609, 25.0969, 0.294 ) }
    dend_57 { pt3dadd( 265.405, 796.243, 25.4527, 0.3114 ) }
    dend_57 { pt3dadd( 264.676, 797.103, 25.7844, 0.3386 ) }
    dend_57 { pt3dadd( 264.012, 798.03, 26.0799, 0.4136 ) }
    dend_57 { pt3dadd( 263.257, 798.883, 26.3443, 0.4338 ) }
    dend_57 { pt3dadd( 262.423, 799.643, 26.5929, 0.3612 ) }
    dend_57 { pt3dadd( 261.463, 800.244, 26.8548, 0.3036 ) }
    dend_57 { pt3dadd( 260.506, 800.789, 27.0151, 0.2812 ) }
    dend_57 { pt3dadd( 259.512, 801.316, 27.1165, 0.287 ) }
    dend_57 { pt3dadd( 258.791, 802.054, 27.3359, 0.2976 ) }
    dend_57 { pt3dadd( 258.13, 802.529, 27.777, 0.318 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_57 { pt3dadd( 257.168, 802.769, 28.2887, 0.351 ) }
    dend_57 { pt3dadd( 256.291, 803.417, 28.6012, 0.4364 ) }
    dend_57 { pt3dadd( 255.319, 803.97, 28.8714, 0.477 ) }
    dend_57 { pt3dadd( 254.422, 804.507, 29.1984, 0.4374 ) }
    dend_57 { pt3dadd( 253.854, 805.466, 29.4882, 0.4646 ) }
    dend_57 { pt3dadd( 253.199, 806.355, 29.7377, 0.4834 ) }
    dend_57 { pt3dadd( 252.306, 807.019, 30.0423, 0.4426 ) }
    dend_57 { pt3dadd( 251.512, 807.801, 30.3027, 0.5056 ) }
    dend_57 { pt3dadd( 250.773, 808.573, 30.4055, 0.4076 ) }
    dend_57 { pt3dadd( 250.278, 809.565, 30.5987, 0.3532 ) }
    dend_57 { pt3dadd( 249.893, 810.603, 30.8434, 0.321 ) }
    dend_57 { pt3dadd( 249.17, 811.439, 31.1539, 0.386 ) }
    dend_57 { pt3dadd( 248.401, 812.251, 31.5036, 0.3582 ) }
    dend_57 { pt3dadd( 247.58, 813.048, 31.8144, 0.3398 ) }
    dend_57 { pt3dadd( 246.806, 813.88, 32.0961, 0.374 ) }
    dend_57 { pt3dadd( 246.224, 814.865, 32.347, 0.335 ) }
    dend_57 { pt3dadd( 245.608, 815.818, 32.6085, 0.302 ) }
    dend_57 { pt3dadd( 244.83, 816.624, 32.9557, 0.2782 ) }
    dend_57 { pt3dadd( 244.218, 817.544, 33.3488, 0.2814 ) }
    dend_57 { pt3dadd( 243.756, 818.541, 33.8114, 0.287 ) }
    dend_57 { pt3dadd( 242.831, 819.05, 34.3574, 0.2988 ) }
    dend_57 { pt3dadd( 241.878, 819.34, 35.0182, 0.3142 ) }
    dend_57 { pt3dadd( 241.394, 820.307, 35.7076, 0.3736 ) }
    dend_57 { pt3dadd( 240.715, 821.214, 36.2894, 0.334 ) }
    dend_57 { pt3dadd( 240.106, 822.154, 36.832, 0.3004 ) }
    dend_57 { pt3dadd( 239.54, 823.114, 37.3632, 0.2752 ) }
    dend_57 { pt3dadd( 239.081, 824.156, 37.8216, 0.2758 ) }
    dend_57 { pt3dadd( 238.632, 825.205, 38.2242, 0.2768 ) }
    dend_57 { pt3dadd( 238.347, 826.27, 38.6789, 0.2788 ) }
    dend_57 { pt3dadd( 238.086, 827.339, 39.195, 0.2824 ) }
    dend_57 { pt3dadd( 237.444, 828.267, 39.6802, 0.2888 ) }
    dend_57 { pt3dadd( 236.778, 829.188, 40.1388, 0.3018 ) }
    dend_57 { pt3dadd( 236.345, 830.218, 40.6302, 0.32 ) }
    dend_57 { pt3dadd( 235.917, 831.251, 41.1376, 0.384 ) }
    dend_57 { pt3dadd( 235.522, 832.304, 41.6466, 0.3546 ) }
    dend_57 { pt3dadd( 235.057, 833.319, 42.133, 0.3334 ) }
    dend_57 { pt3dadd( 234.477, 834.224, 42.6222, 0.3616 ) }
    dend_57 { pt3dadd( 234.373, 835.307, 43.106, 0.3136 ) }
    dend_57 { pt3dadd( 233.955, 836.351, 43.5453, 0.2542 ) }
    dend_57 { pt3dadd( 233.537, 837.394, 44.392, 0.2288 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 283.806, 781.893, 19.1439, 0.5492 ) }
    dend_54 { pt3dadd( 282.862, 782.501, 19.0617, 0.4442 ) }
    dend_54 { pt3dadd( 281.997, 783.226, 18.9364, 0.4072 ) }
    dend_54 { pt3dadd( 281.228, 784.058, 18.757, 0.4894 ) }
    dend_54 { pt3dadd( 280.396, 784.834, 18.56, 0.5944 ) }
    dend_54 { pt3dadd( 279.511, 785.549, 18.3735, 0.5616 ) }
    dend_54 { pt3dadd( 278.556, 786.179, 18.2279, 0.4622 ) }
    dend_54 { pt3dadd( 277.604, 786.815, 18.1216, 0.464 ) }
    dend_54 { pt3dadd( 276.681, 787.416, 17.9751, 0.4798 ) }
    dend_54 { pt3dadd( 275.767, 788.049, 17.7958, 0.4484 ) }
    dend_54 { pt3dadd( 275.45, 788.366, 17.7433, 0.4566 ) }
    dend_54 { pt3dadd( 274.685, 789.143, 17.8356, 0.6062 ) }
    dend_54 { pt3dadd( 273.931, 789.962, 17.8652, 0.6896 ) }
    dend_54 { pt3dadd( 273.288, 790.843, 17.9096, 0.642 ) }
    dend_54 { pt3dadd( 272.525, 791.641, 18.037, 0.6204 ) }
    dend_54 { pt3dadd( 271.548, 792.219, 18.1355, 0.4838 ) }
    dend_54 { pt3dadd( 270.507, 792.656, 18.1428, 0.4716 ) }
    dend_54 { pt3dadd( 269.478, 793.125, 18.0723, 0.4234 ) }
    dend_54 { pt3dadd( 268.521, 793.706, 18.0197, 0.4572 ) }
    dend_54 { pt3dadd( 267.654, 794.434, 18.0464, 0.6086 ) }
    dend_54 { pt3dadd( 266.71, 795.064, 18.096, 0.6864 ) }
    dend_54 { pt3dadd( 265.719, 795.634, 18.1521, 0.6734 ) }
    dend_54 { pt3dadd( 264.666, 796.06, 18.2171, 0.4972 ) }
    dend_54 { pt3dadd( 263.566, 796.374, 18.2843, 0.4504 ) }
    dend_54 { pt3dadd( 262.537, 796.853, 18.3422, 0.3772 ) }
    dend_54 { pt3dadd( 261.953, 797.786, 18.3904, 0.4058 ) }
    dend_54 { pt3dadd( 261.485, 798.815, 18.4613, 0.3466 ) }
    dend_54 { pt3dadd( 260.822, 799.71, 18.6255, 0.3246 ) }
    dend_54 { pt3dadd( 260.095, 800.551, 18.7736, 0.315 ) }
    dend_54 { pt3dadd( 259.29, 801.326, 18.8042, 0.3752 ) }
    dend_54 { pt3dadd( 258.335, 801.891, 18.8648, 0.3372 ) }
    dend_54 { pt3dadd( 257.325, 802.382, 18.9851, 0.3062 ) }
    dend_54 { pt3dadd( 256.416, 803.069, 19.0744, 0.286 ) }
    dend_54 { pt3dadd( 255.523, 803.784, 19.1276, 0.2954 ) }
    dend_54 { pt3dadd( 254.905, 804.737, 19.1644, 0.3142 ) }
    dend_54 { pt3dadd( 254.365, 805.665, 19.0643, 0.3438 ) }
    dend_54 { pt3dadd( 253.472, 806.194, 19.0096, 0.4234 ) }
    dend_54 { pt3dadd( 252.362, 806.26, 19.0563, 0.452 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 78/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 476.539, 144.678, 72.098, 0.2746 ) }
    dend_23 { pt3dadd( 476.646, 143.928, 72.6023, 0.2288 ) }
    dend_23 { pt3dadd( 476.807, 142.799, 72.9618, 0.2746 ) }
    dend_23 { pt3dadd( 476.946, 141.671, 73.1206, 0.2746 ) }
    dend_23 { pt3dadd( 477.079, 140.542, 73.3169, 0.2746 ) }
    dend_23 { pt3dadd( 477.149, 139.407, 73.5235, 0.2746 ) }
    dend_23 { pt3dadd( 477.149, 138.264, 73.7178, 0.2746 ) }
    dend_23 { pt3dadd( 477.149, 137.122, 73.8987, 0.2746 ) }
    dend_23 { pt3dadd( 477.149, 135.978, 74.0502, 0.2746 ) }
    dend_23 { pt3dadd( 477.149, 134.834, 74.181, 0.2746 ) }
    dend_23 { pt3dadd( 477.149, 133.69, 74.3061, 0.2746 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 476.539, 144.678, 72.098, 0.2746 ) }
    dend_18 { pt3dadd( 476.428, 144.363, 72.3078, 0.2746 ) }
    dend_18 { pt3dadd( 475.731, 143.574, 72.4926, 0.2746 ) }
    dend_18 { pt3dadd( 474.684, 143.144, 72.6544, 0.2746 ) }
    dend_18 { pt3dadd( 473.676, 142.635, 72.8092, 0.2746 ) }
    dend_18 { pt3dadd( 472.847, 141.878, 72.9271, 0.2746 ) }
    dend_18 { pt3dadd( 472.254, 140.903, 73.0226, 0.2746 ) }
    dend_18 { pt3dadd( 471.654, 139.928, 73.122, 0.2746 ) }
    dend_18 { pt3dadd( 471.057, 138.959, 73.2486, 0.2746 ) }
    dend_18 { pt3dadd( 470.468, 138.005, 73.4591, 0.2746 ) }
    dend_18 { pt3dadd( 469.895, 137.031, 73.701, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_18 { pt3dadd( 469.343, 136.029, 73.925, 0.2746 ) }
    dend_18 { pt3dadd( 468.713, 135.083, 74.1392, 0.2746 ) }
    dend_18 { pt3dadd( 467.963, 134.224, 74.3537, 0.2746 ) }
    dend_18 { pt3dadd( 467.453, 133.244, 74.5766, 0.2746 ) }
    dend_18 { pt3dadd( 467.189, 132.14, 74.8157, 0.2746 ) }
    dend_18 { pt3dadd( 466.907, 131.038, 75.0551, 0.2746 ) }
    dend_18 { pt3dadd( 466.592, 129.938, 75.2648, 0.2746 ) }
    dend_18 { pt3dadd( 466.257, 128.85, 75.4614, 0.2746 ) }
    dend_18 { pt3dadd( 465.758, 127.852, 75.7277, 0.2746 ) }
    dend_18 { pt3dadd( 465.263, 126.843, 76.0217, 0.2746 ) }
    dend_18 { pt3dadd( 464.781, 125.806, 76.2717, 0.2746 ) }
    dend_18 { pt3dadd( 464.269, 124.786, 76.4977, 0.2746 ) }
    dend_18 { pt3dadd( 463.605, 123.859, 76.7292, 0.2746 ) }
    dend_18 { pt3dadd( 463.016, 122.91, 76.984, 0.2746 ) }
    dend_18 { pt3dadd( 462.652, 121.901, 77.327, 0.2746 ) }
    dend_18 { pt3dadd( 462.194, 120.902, 77.6675, 0.2746 ) }
    dend_18 { pt3dadd( 461.613, 119.918, 77.9167, 0.2746 ) }
    dend_18 { pt3dadd( 460.96, 118.984, 78.0727, 0.2748 ) }
    dend_18 { pt3dadd( 460.206, 118.124, 78.1368, 0.2748 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 19/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 491.548, 164.518, 68.2142, 0.3406 ) }
    dend_10 { pt3dadd( 491.172, 163.557, 68.9226, 0.4576 ) }
    dend_10 { pt3dadd( 491.212, 162.508, 69.216, 0.3606 ) }
    dend_10 { pt3dadd( 491.584, 161.595, 69.265, 0.3024 ) }
    dend_10 { pt3dadd( 491.391, 160.529, 69.4722, 0.2792 ) }
    dend_10 { pt3dadd( 491.345, 159.388, 69.6864, 0.283 ) }
    dend_10 { pt3dadd( 490.937, 158.515, 70.084, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 26/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 491.548, 164.518, 68.2142, 0.3406 ) }
    dend_7 { pt3dadd( 492.506, 164.243, 68.5286, 0.3754 ) }
    dend_7 { pt3dadd( 493.402, 163.648, 68.878, 0.3376 ) }
    dend_7 { pt3dadd( 494.176, 162.867, 69.1583, 0.307 ) }
    dend_7 { pt3dadd( 494.784, 162.115, 69.1312, 0.2876 ) }
    dend_7 { pt3dadd( 495.747, 161.521, 68.9884, 0.2986 ) }
    dend_7 { pt3dadd( 496.767, 161.055, 68.7697, 0.3198 ) }
    dend_7 { pt3dadd( 497.878, 160.783, 68.5462, 0.3546 ) }
    dend_7 { pt3dadd( 498.894, 160.284, 68.3592, 0.4426 ) }
    dend_7 { pt3dadd( 499.869, 159.684, 68.2332, 0.4898 ) }
    dend_7 { pt3dadd( 500.857, 159.143, 68.1178, 0.4548 ) }
    dend_7 { pt3dadd( 501.853, 158.63, 67.9661, 0.5278 ) }
    dend_7 { pt3dadd( 502.899, 158.221, 67.9255, 0.4498 ) }
    dend_7 { pt3dadd( 503.952, 157.826, 67.984, 0.4272 ) }
    dend_7 { pt3dadd( 504.894, 157.184, 68.0392, 0.4778 ) }
    dend_7 { pt3dadd( 505.831, 156.527, 68.0798, 0.5806 ) }
    dend_7 { pt3dadd( 506.818, 155.95, 68.1019, 0.4992 ) }
    dend_7 { pt3dadd( 507.81, 155.38, 68.094, 0.5258 ) }
    dend_7 { pt3dadd( 508.696, 154.658, 68.0445, 0.398 ) }
    dend_7 { pt3dadd( 509.565, 153.916, 67.9664, 0.3344 ) }
    dend_7 { pt3dadd( 510.503, 153.413, 67.7572, 0.291 ) }
    dend_7 { pt3dadd( 511.573, 153.186, 67.534, 0.306 ) }
    dend_7 { pt3dadd( 512.288, 152.301, 67.3613, 0.3278 ) }
    dend_7 { pt3dadd( 513.037, 151.479, 67.2403, 0.3984 ) }
    dend_7 { pt3dadd( 513.963, 150.85, 67.0928, 0.3822 ) }
    dend_7 { pt3dadd( 514.876, 150.215, 66.948, 0.379 ) }
    dend_7 { pt3dadd( 515.752, 149.544, 67.0054, 0.4722 ) }
    dend_7 { pt3dadd( 516.6, 148.82, 67.1726, 0.3932 ) }
    dend_7 { pt3dadd( 517.391, 147.996, 67.3599, 0.3254 ) }
    dend_7 { pt3dadd( 518.171, 147.163, 67.5682, 0.2746 ) }
    dend_7 { pt3dadd( 518.948, 146.328, 67.788, 0.2746 ) }
    dend_7 { pt3dadd( 519.742, 145.507, 67.986, 0.2746 ) }
    dend_7 { pt3dadd( 520.513, 144.697, 68.1047, 0.2746 ) }
    dend_7 { pt3dadd( 521.403, 144.213, 68.215, 0.2748 ) }
    dend_7 { pt3dadd( 521.883, 143.464, 68.4592, 0.2748 ) }
    dend_7 { pt3dadd( 521.938, 142.514, 68.5611, 0.2752 ) }
    dend_7 { pt3dadd( 522.442, 141.506, 68.7126, 0.2756 ) }
    dend_7 { pt3dadd( 522.948, 140.501, 68.8509, 0.2766 ) }
    dend_7 { pt3dadd( 523.46, 139.505, 68.8766, 0.2782 ) }
    dend_7 { pt3dadd( 524.008, 138.514, 68.8666, 0.2814 ) }
    dend_7 { pt3dadd( 524.637, 137.574, 68.9293, 0.2872 ) }
    dend_7 { pt3dadd( 524.772, 136.479, 69.0864, 0.2988 ) }
    dend_7 { pt3dadd( 524.772, 135.378, 69.1681, 0.3144 ) }
    dend_7 { pt3dadd( 524.866, 134.288, 69.4112, 0.374 ) }
    dend_7 { pt3dadd( 525.078, 133.237, 69.8135, 0.335 ) }
    dend_7 { pt3dadd( 525.294, 132.151, 70.254, 0.302 ) }
    dend_7 { pt3dadd( 525.518, 131.031, 70.6468, 0.2784 ) }
    dend_7 { pt3dadd( 525.752, 129.916, 71.0058, 0.2816 ) }
    dend_7 { pt3dadd( 526.016, 128.812, 71.3549, 0.2874 ) }
    dend_7 { pt3dadd( 526.344, 127.744, 71.6635, 0.2994 ) }
    dend_7 { pt3dadd( 527.032, 126.893, 71.9594, 0.3152 ) }
    dend_7 { pt3dadd( 527.661, 126.02, 72.2714, 0.3754 ) }
    dend_7 { pt3dadd( 528.692, 125.602, 72.5068, 0.3376 ) }
    dend_7 { pt3dadd( 529.192, 124.702, 72.6678, 0.3068 ) }
    dend_7 { pt3dadd( 529.746, 123.701, 72.7658, 0.287 ) }
    dend_7 { pt3dadd( 530.449, 122.81, 72.8154, 0.2988 ) }
    dend_7 { pt3dadd( 531.245, 121.988, 72.83, 0.3142 ) }
    dend_7 { pt3dadd( 531.99, 121.122, 72.8241, 0.3734 ) }
    dend_7 { pt3dadd( 532.705, 120.229, 72.8143, 0.3338 ) }
    dend_7 { pt3dadd( 533.421, 119.335, 72.8006, 0.3 ) }
    dend_7 { pt3dadd( 534.135, 118.442, 72.7812, 0.2746 ) }
    dend_7 { pt3dadd( 534.849, 117.549, 72.7546, 0.2746 ) }
    dend_7 { pt3dadd( 535.807, 116.957, 72.718, 0.2746 ) }
    dend_7 { pt3dadd( 536.932, 116.776, 72.6653, 0.2746 ) }
    dend_7 { pt3dadd( 538.073, 116.75, 72.59, 0.2748 ) }
    dend_7 { pt3dadd( 539.218, 116.75, 72.4858, 0.275 ) }
    dend_7 { pt3dadd( 540.355, 116.681, 72.35, 0.2754 ) }
    dend_7 { pt3dadd( 541.435, 116.324, 72.1753, 0.2762 ) }
    dend_7 { pt3dadd( 542.173, 115.792, 71.8357, 0.2776 ) }
    dend_7 { pt3dadd( 542.174, 114.717, 71.3868, 0.28 ) }
    dend_7 { pt3dadd( 542.369, 113.642, 70.9369, 0.2848 ) }
    dend_7 { pt3dadd( 542.907, 112.646, 70.5214, 0.2934 ) }
    dend_7 { pt3dadd( 543.417, 111.632, 70.1728, 0.3106 ) }
    dend_7 { pt3dadd( 543.898, 110.596, 69.9191, 0.3358 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_7 { pt3dadd( 544.392, 109.566, 69.7757, 0.4144 ) }
    dend_7 { pt3dadd( 544.974, 108.642, 69.6478, 0.4058 ) }
    dend_7 { pt3dadd( 545.756, 107.861, 69.6651, 0.4534 ) }
    dend_7 { pt3dadd( 546.6, 107.135, 69.8298, 0.4618 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 4/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 316.674, 832.155, 36.3966, 0.6946 ) }
    dend_72 { pt3dadd( 315.961, 832.932, 36.9942, 0.2288 ) }
    dend_72 { pt3dadd( 315.758, 834.015, 38.155, 0.477 ) }
    dend_72 { pt3dadd( 316.408, 834.571, 38.5585, 0.402 ) }
    dend_72 { pt3dadd( 317.288, 834.648, 39.1647, 0.342 ) }
    dend_72 { pt3dadd( 317.178, 834.704, 40.1136, 0.3048 ) }
    dend_72 { pt3dadd( 316.471, 835.523, 40.9514, 0.333 ) }
    dend_72 { pt3dadd( 315.771, 836.404, 41.6016, 0.372 ) }
    dend_72 { pt3dadd( 315.363, 837.44, 42.1635, 0.5074 ) }
    dend_72 { pt3dadd( 314.896, 838.36, 42.6205, 0.453 ) }
    dend_72 { pt3dadd( 313.994, 838.717, 42.7297, 0.463 ) }
    dend_72 { pt3dadd( 313.095, 839.158, 42.8268, 0.3998 ) }
    dend_72 { pt3dadd( 312.244, 839.552, 43.2065, 0.45 ) }
    dend_72 { pt3dadd( 311.396, 840.285, 43.6344, 0.4182 ) }
    dend_72 { pt3dadd( 310.486, 840.881, 44.1862, 0.5072 ) }
    dend_72 { pt3dadd( 309.5, 841.389, 44.7479, 0.411 ) }
    dend_72 { pt3dadd( 308.551, 840.819, 45.2726, 0.3582 ) }
    dend_72 { pt3dadd( 308.027, 840.144, 45.9992, 0.3362 ) }
    dend_72 { pt3dadd( 307.674, 839.294, 46.8706, 0.3842 ) }
    dend_72 { pt3dadd( 306.989, 838.7, 47.8274, 0.5 ) }
    dend_72 { pt3dadd( 307.111, 837.848, 48.825, 0.5848 ) }
    dend_72 { pt3dadd( 307.719, 837.394, 51.2218, 0.6864 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 26/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 316.674, 832.155, 36.3966, 0.6946 ) }
    dend_71 { pt3dadd( 316.185, 832.497, 36.6075, 0.6874 ) }
    dend_71 { pt3dadd( 315.741, 833.518, 36.9054, 0.7564 ) }
    dend_71 { pt3dadd( 315.277, 834.531, 37.2512, 0.7148 ) }
    dend_71 { pt3dadd( 314.539, 835.391, 37.5827, 0.5452 ) }
    dend_71 { pt3dadd( 313.858, 836.297, 37.8342, 0.45 ) }
    dend_71 { pt3dadd( 313.247, 837.263, 37.9954, 0.5822 ) }
    dend_71 { pt3dadd( 312.808, 838.315, 38.064, 0.473 ) }
    dend_71 { pt3dadd( 312.873, 839.376, 37.924, 0.3898 ) }
    dend_71 { pt3dadd( 313.259, 840.424, 37.8227, 0.3414 ) }
    dend_71 { pt3dadd( 313.635, 841.394, 37.6253, 0.4246 ) }
    dend_71 { pt3dadd( 313.78, 842.513, 37.3657, 0.4256 ) }
    dend_71 { pt3dadd( 314.235, 843.558, 37.1064, 0.4852 ) }
    dend_71 { pt3dadd( 314.561, 844.549, 36.7466, 0.545 ) }
    dend_71 { pt3dadd( 314.649, 845.542, 36.26, 0.4432 ) }
    dend_71 { pt3dadd( 314.807, 846.53, 35.7616, 0.372 ) }
    dend_71 { pt3dadd( 315.046, 847.379, 35.6292, 0.3568 ) }
    dend_71 { pt3dadd( 315.046, 848.521, 35.5678, 0.4468 ) }
    dend_71 { pt3dadd( 315.046, 849.662, 35.5508, 0.4974 ) }
    dend_71 { pt3dadd( 315.126, 850.752, 35.471, 0.47 ) }
    dend_71 { pt3dadd( 315.283, 851.792, 35.2447, 0.5508 ) }
    dend_71 { pt3dadd( 315.434, 852.884, 34.974, 0.5182 ) }
    dend_71 { pt3dadd( 315.504, 854.019, 34.7166, 0.4278 ) }
    dend_71 { pt3dadd( 315.311, 855.091, 34.4803, 0.4054 ) }
    dend_71 { pt3dadd( 315.097, 856.013, 34.5265, 0.3458 ) }
    dend_71 { pt3dadd( 314.667, 856.917, 34.7228, 0.3232 ) }
    dend_71 { pt3dadd( 314.586, 858.001, 34.8636, 0.3122 ) }
    dend_71 { pt3dadd( 314.144, 858.887, 35.2027, 0.37 ) }
    dend_71 { pt3dadd( 313.542, 859.706, 35.6275, 0.3276 ) }
    dend_71 { pt3dadd( 312.758, 860.457, 35.9528, 0.2882 ) }
    dend_71 { pt3dadd( 312.093, 861.123, 35.964, 0.2542 ) }
    dend_71 { pt3dadd( 311.56, 862.102, 35.8257, 0.2288 ) }
    dend_71 { pt3dadd( 310.926, 863.034, 35.2862, 0.2288 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 59/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 252.362, 806.26, 19.0563, 0.452 ) }
    dend_56 { pt3dadd( 251.843, 806.272, 19.0987, 0.396 ) }
    dend_56 { pt3dadd( 250.7, 806.296, 19.1318, 0.3624 ) }
    dend_56 { pt3dadd( 249.589, 806.448, 19.1869, 0.417 ) }
    dend_56 { pt3dadd( 248.512, 806.533, 19.2842, 0.4102 ) }
    dend_56 { pt3dadd( 247.474, 806.082, 19.3586, 0.4626 ) }
    dend_56 { pt3dadd( 246.517, 805.454, 19.4206, 0.4726 ) }
    dend_56 { pt3dadd( 245.48, 805.026, 19.4902, 0.4586 ) }
    dend_56 { pt3dadd( 244.337, 804.97, 19.5683, 0.3602 ) }
    dend_56 { pt3dadd( 243.195, 804.913, 19.6542, 0.3016 ) }
    dend_56 { pt3dadd( 242.065, 804.965, 19.789, 0.2774 ) }
    dend_56 { pt3dadd( 240.944, 805.103, 19.9959, 0.28 ) }
    dend_56 { pt3dadd( 239.854, 805.359, 20.2337, 0.2846 ) }
    dend_56 { pt3dadd( 238.82, 805.851, 20.4496, 0.2928 ) }
    dend_56 { pt3dadd( 237.793, 806.335, 20.6623, 0.3096 ) }
    dend_56 { pt3dadd( 236.778, 806.801, 20.9196, 0.3338 ) }
    dend_56 { pt3dadd( 235.767, 807.298, 21.1563, 0.4112 ) }
    dend_56 { pt3dadd( 234.758, 807.839, 21.3134, 0.3984 ) }
    dend_56 { pt3dadd( 233.734, 808.346, 21.4066, 0.4472 ) }
    dend_56 { pt3dadd( 232.681, 808.791, 21.4487, 0.413 ) }
    dend_56 { pt3dadd( 231.622, 809.222, 21.4314, 0.4978 ) }
    dend_56 { pt3dadd( 230.562, 809.643, 21.3564, 0.3932 ) }
    dend_56 { pt3dadd( 229.501, 810.064, 21.2526, 0.3254 ) }
    dend_56 { pt3dadd( 228.439, 810.479, 21.1415, 0.2746 ) }
    dend_56 { pt3dadd( 227.346, 810.821, 21.0577, 0.2746 ) }
    dend_56 { pt3dadd( 226.255, 811.162, 20.9993, 0.2746 ) }
    dend_56 { pt3dadd( 225.162, 811.503, 20.9639, 0.2746 ) }
    dend_56 { pt3dadd( 224.071, 811.844, 20.9466, 0.2746 ) }
    dend_56 { pt3dadd( 222.953, 812.064, 20.9404, 0.2746 ) }
    dend_56 { pt3dadd( 221.817, 812.198, 20.939, 0.2746 ) }
    dend_56 { pt3dadd( 220.68, 812.331, 20.937, 0.2746 ) }
    dend_56 { pt3dadd( 219.544, 812.465, 20.9343, 0.2746 ) }
    dend_56 { pt3dadd( 218.409, 812.592, 20.9304, 0.2746 ) }
    dend_56 { pt3dadd( 217.303, 812.298, 20.925, 0.2746 ) }
    dend_56 { pt3dadd( 216.198, 812.003, 20.9173, 0.2746 ) }
    dend_56 { pt3dadd( 215.093, 811.708, 20.9067, 0.2746 ) }
    dend_56 { pt3dadd( 213.988, 811.414, 20.8921, 0.2746 ) }
    dend_56 { pt3dadd( 212.854, 811.479, 20.8713, 0.2746 ) }
    dend_56 { pt3dadd( 211.716, 811.599, 20.8418, 0.2746 ) }
    dend_56 { pt3dadd( 210.578, 811.718, 20.8006, 0.2746 ) }
    dend_56 { pt3dadd( 209.44, 811.839, 20.7453, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_56 { pt3dadd( 208.303, 811.959, 20.6738, 0.2746 ) }
    dend_56 { pt3dadd( 207.168, 811.986, 20.5489, 0.2746 ) }
    dend_56 { pt3dadd( 206.035, 811.986, 20.3774, 0.2746 ) }
    dend_56 { pt3dadd( 204.901, 811.986, 20.1758, 0.2748 ) }
    dend_56 { pt3dadd( 203.767, 811.986, 19.957, 0.2748 ) }
    dend_56 { pt3dadd( 202.633, 811.986, 19.7371, 0.2752 ) }
    dend_56 { pt3dadd( 201.648, 812.279, 19.72, 0.2756 ) }
    dend_56 { pt3dadd( 200.698, 812.802, 19.7918, 0.2766 ) }
    dend_56 { pt3dadd( 199.677, 812.819, 19.6652, 0.2782 ) }
    dend_56 { pt3dadd( 198.72, 812.329, 19.45, 0.2814 ) }
    dend_56 { pt3dadd( 198.068, 811.597, 19.4331, 0.287 ) }
    dend_56 { pt3dadd( 197.657, 810.576, 19.4362, 0.2988 ) }
    dend_56 { pt3dadd( 197.009, 809.823, 19.16, 0.314 ) }
    dend_56 { pt3dadd( 196.142, 809.128, 18.7921, 0.3734 ) }
    dend_56 { pt3dadd( 195.274, 808.434, 18.3741, 0.3338 ) }
    dend_56 { pt3dadd( 194.406, 807.74, 17.8982, 0.2998 ) }
    dend_56 { pt3dadd( 193.406, 807.369, 17.4556, 0.2744 ) }
    dend_56 { pt3dadd( 192.282, 807.302, 17.1466, 0.2742 ) }
    dend_56 { pt3dadd( 191.256, 806.803, 16.8688, 0.274 ) }
    dend_56 { pt3dadd( 190.304, 806.266, 16.4769, 0.2736 ) }
    dend_56 { pt3dadd( 189.46, 805.652, 15.9198, 0.2728 ) }
    dend_56 { pt3dadd( 189.064, 804.58, 15.3066, 0.2712 ) }
    dend_56 { pt3dadd( 188.774, 803.543, 14.5867, 0.2684 ) }
    dend_56 { pt3dadd( 188.713, 802.585, 13.6686, 0.2626 ) }
    dend_56 { pt3dadd( 188.42, 801.991, 12.5748, 0.2542 ) }
    dend_56 { pt3dadd( 187.632, 802.026, 11.42, 0.2288 ) }
    dend_56 { pt3dadd( 186.959, 802.821, 9.3083, 0.2288 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 27/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 252.362, 806.26, 19.0563, 0.452 ) }
    dend_55 { pt3dadd( 250.914, 805.759, 18.2543, 0.4576 ) }
    dend_55 { pt3dadd( 249.867, 805.397, 18.1599, 0.3604 ) }
    dend_55 { pt3dadd( 248.836, 804.939, 18.1587, 0.302 ) }
    dend_55 { pt3dadd( 247.808, 804.464, 18.2516, 0.2782 ) }
    dend_55 { pt3dadd( 246.771, 803.983, 18.3675, 0.2814 ) }
    dend_55 { pt3dadd( 245.734, 803.5, 18.5002, 0.287 ) }
    dend_55 { pt3dadd( 244.909, 802.753, 18.7153, 0.2986 ) }
    dend_55 { pt3dadd( 244.144, 801.937, 19.0024, 0.314 ) }
    dend_55 { pt3dadd( 243.592, 800.94, 19.2775, 0.3732 ) }
    dend_55 { pt3dadd( 243.018, 799.959, 19.5336, 0.3334 ) }
    dend_55 { pt3dadd( 242.262, 799.103, 19.7238, 0.299 ) }
    dend_55 { pt3dadd( 241.548, 798.218, 19.9053, 0.2728 ) }
    dend_55 { pt3dadd( 240.867, 797.311, 20.1175, 0.2712 ) }
    dend_55 { pt3dadd( 240.176, 796.404, 20.3366, 0.2684 ) }
    dend_55 { pt3dadd( 239.483, 795.498, 20.5591, 0.2626 ) }
    dend_55 { pt3dadd( 238.709, 794.672, 20.8078, 0.2542 ) }
    dend_55 { pt3dadd( 237.927, 793.855, 21.0728, 0.2288 ) }
    dend_55 { pt3dadd( 237.201, 792.983, 21.6269, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 477.149, 133.69, 74.3061, 0.2746 ) }
    dend_27 { pt3dadd( 477.193, 133.303, 72.8812, 0.2288 ) }
    dend_27 { pt3dadd( 477.244, 132.561, 71.4781, 0.2746 ) }
    dend_27 { pt3dadd( 476.601, 131.657, 70.9912, 0.2746 ) }
    dend_27 { pt3dadd( 475.735, 130.99, 70.4883, 0.2746 ) }
    dend_27 { pt3dadd( 474.911, 130.465, 69.9829, 0.2746 ) }
    dend_27 { pt3dadd( 474.165, 129.676, 69.496, 0.2746 ) }
    dend_27 { pt3dadd( 473.454, 128.794, 69.102, 0.2746 ) }
    dend_27 { pt3dadd( 472.724, 127.929, 68.7859, 0.2746 ) }
    dend_27 { pt3dadd( 472.242, 126.981, 68.455, 0.2746 ) }
    dend_27 { pt3dadd( 472.147, 125.879, 68.1226, 0.2746 ) }
    dend_27 { pt3dadd( 471.473, 124.979, 67.8233, 0.2746 ) }
    dend_27 { pt3dadd( 471.03, 123.964, 67.5128, 0.2746 ) }
    dend_27 { pt3dadd( 470.453, 122.994, 67.2297, 0.2746 ) }
    dend_27 { pt3dadd( 469.908, 122.087, 66.8553, 0.2746 ) }
    dend_27 { pt3dadd( 469.251, 121.177, 66.5566, 0.2746 ) }
    dend_27 { pt3dadd( 468.416, 120.455, 66.3169, 0.2748 ) }
    dend_27 { pt3dadd( 467.817, 119.593, 66.0257, 0.2748 ) }
    dend_27 { pt3dadd( 467.309, 118.578, 65.8216, 0.2752 ) }
    dend_27 { pt3dadd( 466.809, 117.571, 65.6905, 0.2756 ) }
    dend_27 { pt3dadd( 466.508, 116.468, 65.6278, 0.2766 ) }
    dend_27 { pt3dadd( 465.709, 115.712, 65.5897, 0.2782 ) }
    dend_27 { pt3dadd( 464.897, 114.951, 65.5642, 0.2814 ) }
    dend_27 { pt3dadd( 464.599, 113.848, 65.578, 0.287 ) }
    dend_27 { pt3dadd( 464.492, 112.879, 65.7213, 0.2988 ) }
    dend_27 { pt3dadd( 464.143, 111.988, 65.926, 0.3142 ) }
    dend_27 { pt3dadd( 463.569, 111.013, 66.0027, 0.3734 ) }
    dend_27 { pt3dadd( 463.141, 109.978, 66.022, 0.334 ) }
    dend_27 { pt3dadd( 462.785, 108.904, 66.0086, 0.3002 ) }
    dend_27 { pt3dadd( 462.554, 107.824, 65.8809, 0.275 ) }
    dend_27 { pt3dadd( 462.258, 107.245, 65.406, 0.2752 ) }
    dend_27 { pt3dadd( 462.106, 106.698, 64.6876, 0.2758 ) }
    dend_27 { pt3dadd( 462.106, 105.718, 64.0872, 0.2768 ) }
    dend_27 { pt3dadd( 462.127, 104.839, 63.9988, 0.2788 ) }
    dend_27 { pt3dadd( 462.335, 104.103, 64.307, 0.2824 ) }
    dend_27 { pt3dadd( 462.079, 103.097, 64.6926, 0.2882 ) }
    dend_27 { pt3dadd( 461.878, 102.073, 65.3268, 0.305 ) }
    dend_27 { pt3dadd( 461.903, 101.095, 66.131, 0.305 ) }
    dend_27 { pt3dadd( 462.106, 100.225, 68.1243, 0.4576 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 85/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 477.149, 133.69, 74.3061, 0.2746 ) }
    dend_24 { pt3dadd( 477.149, 133.023, 74.4671, 0.2746 ) }
    dend_24 { pt3dadd( 477.149, 131.888, 74.6802, 0.2746 ) }
    dend_24 { pt3dadd( 477.181, 130.762, 74.937, 0.2746 ) }
    dend_24 { pt3dadd( 477.595, 129.741, 75.2721, 0.2746 ) }
    dend_24 { pt3dadd( 478.079, 128.749, 75.6246, 0.2746 ) }
    dend_24 { pt3dadd( 478.391, 127.79, 75.861, 0.2746 ) }
    dend_24 { pt3dadd( 478.451, 126.667, 76.0228, 0.2746 ) }
    dend_24 { pt3dadd( 478.84, 125.65, 76.2171, 0.2746 ) }
    dend_24 { pt3dadd( 478.724, 125.037, 76.2194, 0.2746 ) }
    dend_24 { pt3dadd( 478.891, 123.906, 76.2524, 0.2746 ) }
    dend_24 { pt3dadd( 479.121, 122.789, 76.3507, 0.2746 ) }
    dend_24 { pt3dadd( 479.5, 121.71, 76.5369, 0.2746 ) }
    dend_24 { pt3dadd( 479.878, 120.63, 76.8037, 0.2746 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 99/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 460.206, 118.124, 78.1368, 0.2748 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_20 { pt3dadd( 460.016, 117.475, 78.0388, 0.2752 ) }
    dend_20 { pt3dadd( 459.394, 116.652, 77.8504, 0.2756 ) }
    dend_20 { pt3dadd( 458.748, 115.812, 77.6742, 0.2766 ) }
    dend_20 { pt3dadd( 458.051, 114.925, 77.5211, 0.2782 ) }
    dend_20 { pt3dadd( 457.104, 114.303, 77.385, 0.2814 ) }
    dend_20 { pt3dadd( 456.27, 113.538, 77.2551, 0.287 ) }
    dend_20 { pt3dadd( 455.456, 112.749, 77.1162, 0.2988 ) }
    dend_20 { pt3dadd( 454.766, 111.842, 76.9376, 0.3142 ) }
    dend_20 { pt3dadd( 453.89, 111.125, 76.6962, 0.3734 ) }
    dend_20 { pt3dadd( 453.239, 110.294, 76.3815, 0.3338 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 10/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 460.206, 118.124, 78.1368, 0.2748 ) }
    dend_19 { pt3dadd( 460.21, 118.095, 78.9746, 0.2288 ) }
    dend_19 { pt3dadd( 460.23, 117.723, 80.1004, 0.2742 ) }
    dend_19 { pt3dadd( 460.23, 116.579, 80.4846, 0.274 ) }
    dend_19 { pt3dadd( 460.23, 115.435, 80.7755, 0.2736 ) }
    dend_19 { pt3dadd( 460.56, 114.409, 80.9788, 0.2728 ) }
    dend_19 { pt3dadd( 460.688, 113.287, 81.0986, 0.2712 ) }
    dend_19 { pt3dadd( 460.688, 112.144, 81.144, 0.2684 ) }
    dend_19 { pt3dadd( 460.656, 111.002, 81.1247, 0.2626 ) }
    dend_19 { pt3dadd( 460.573, 109.865, 81.1031, 0.2542 ) }
    dend_19 { pt3dadd( 460.573, 108.728, 81.0622, 0.2288 ) }
    dend_19 { pt3dadd( 461.031, 107.879, 80.92, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 22/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 490.937, 158.515, 70.084, 0.29 ) }
    dend_14 { pt3dadd( 491.182, 157.627, 70.3688, 0.3044 ) }
    dend_14 { pt3dadd( 491.491, 156.529, 70.5723, 0.3246 ) }
    dend_14 { pt3dadd( 491.903, 155.466, 70.7342, 0.3928 ) }
    dend_14 { pt3dadd( 492.575, 154.554, 70.8515, 0.3698 ) }
    dend_14 { pt3dadd( 493.612, 154.22, 70.9568, 0.3672 ) }
    dend_14 { pt3dadd( 494.498, 153.534, 71.1346, 0.396 ) }
    dend_14 { pt3dadd( 495.376, 152.831, 71.3734, 0.5156 ) }
    dend_14 { pt3dadd( 496.235, 152.077, 71.5924, 0.645 ) }
    dend_14 { pt3dadd( 497.014, 151.262, 71.811, 0.646 ) }
    dend_14 { pt3dadd( 497.603, 150.308, 72.0734, 0.6636 ) }
    dend_14 { pt3dadd( 498.156, 149.355, 72.2554, 0.6202 ) }
    dend_14 { pt3dadd( 498.603, 148.331, 72.3164, 0.4514 ) }
    dend_14 { pt3dadd( 499.012, 147.303, 72.4629, 0.3388 ) }
    dend_14 { pt3dadd( 499.317, 146.318, 72.7227, 0.3004 ) }
    dend_14 { pt3dadd( 499.644, 145.227, 72.9072, 0.3174 ) }
    dend_14 { pt3dadd( 500.052, 144.229, 73.059, 0.3794 ) }
    dend_14 { pt3dadd( 500.862, 143.536, 73.2729, 0.345 ) }
    dend_14 { pt3dadd( 500.99, 142.549, 73.4938, 0.3204 ) }
    dend_14 { pt3dadd( 501.113, 141.442, 73.6442, 0.3132 ) }
    dend_14 { pt3dadd( 501.534, 140.423, 73.8256, 0.342 ) }
    dend_14 { pt3dadd( 502.16, 139.506, 74.051, 0.4198 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 44/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 490.937, 158.515, 70.084, 0.29 ) }
    dend_11 { pt3dadd( 490.666, 157.583, 71.6688, 0.2288 ) }
    dend_11 { pt3dadd( 489.922, 156.77, 71.5338, 0.2814 ) }
    dend_11 { pt3dadd( 489.369, 155.838, 71.4955, 0.287 ) }
    dend_11 { pt3dadd( 489.054, 154.808, 71.5347, 0.2988 ) }
    dend_11 { pt3dadd( 489.069, 153.702, 71.6187, 0.3142 ) }
    dend_11 { pt3dadd( 489.231, 152.614, 71.832, 0.3734 ) }
    dend_11 { pt3dadd( 489.328, 151.53, 72.0754, 0.3338 ) }
    dend_11 { pt3dadd( 488.853, 150.5, 72.366, 0.3 ) }
    dend_11 { pt3dadd( 488.578, 149.473, 72.7804, 0.2746 ) }
    dend_11 { pt3dadd( 488.359, 148.373, 73.2572, 0.2746 ) }
    dend_11 { pt3dadd( 488.139, 147.273, 73.7775, 0.2746 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 56/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 546.6, 107.135, 69.8298, 0.4618 ) }
    dend_9 { pt3dadd( 546.89, 106.99, 69.9938, 0.2288 ) }
    dend_9 { pt3dadd( 547.888, 106.491, 70.4516, 0.3764 ) }
    dend_9 { pt3dadd( 548.906, 106.018, 70.6591, 0.3396 ) }
    dend_9 { pt3dadd( 549.95, 105.574, 70.8644, 0.3106 ) }
    dend_9 { pt3dadd( 551.039, 105.343, 70.9957, 0.294 ) }
    dend_9 { pt3dadd( 552.175, 105.321, 71.0038, 0.3114 ) }
    dend_9 { pt3dadd( 553.304, 105.37, 70.9215, 0.3388 ) }
    dend_9 { pt3dadd( 554.419, 105.621, 70.7907, 0.414 ) }
    dend_9 { pt3dadd( 555.529, 105.849, 70.6121, 0.4348 ) }
    dend_9 { pt3dadd( 556.632, 106.05, 70.3774, 0.363 ) }
    dend_9 { pt3dadd( 557.728, 106.218, 70.1946, 0.307 ) }
    dend_9 { pt3dadd( 558.813, 106.339, 70.1646, 0.2872 ) }
    dend_9 { pt3dadd( 559.931, 106.488, 70.1546, 0.2992 ) }
    dend_9 { pt3dadd( 561.061, 106.65, 70.098, 0.3148 ) }
    dend_9 { pt3dadd( 562.174, 106.873, 69.876, 0.3748 ) }
    dend_9 { pt3dadd( 563.284, 107.109, 69.5022, 0.3362 ) }
    dend_9 { pt3dadd( 564.258, 107.516, 68.9195, 0.305 ) }
    dend_9 { pt3dadd( 565.032, 107.998, 68.0901, 0.2796 ) }
    dend_9 { pt3dadd( 565.476, 108.595, 67.1177, 0.305 ) }
    dend_9 { pt3dadd( 565.069, 109.424, 64.8808, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 77/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 546.6, 107.135, 69.8298, 0.4618 ) }
    dend_8 { pt3dadd( 546.538, 106.461, 70.0658, 0.4078 ) }
    dend_8 { pt3dadd( 546.435, 105.359, 70.3825, 0.4154 ) }
    dend_8 { pt3dadd( 546.288, 104.281, 70.7106, 0.3642 ) }
    dend_8 { pt3dadd( 545.932, 103.285, 70.8487, 0.3586 ) }
    dend_8 { pt3dadd( 545.887, 102.151, 70.9296, 0.3724 ) }
    dend_8 { pt3dadd( 546.09, 101.034, 71.0018, 0.5084 ) }
    dend_8 { pt3dadd( 546.254, 99.9401, 71.1264, 0.4546 ) }
    dend_8 { pt3dadd( 546.162, 98.8159, 71.2925, 0.4656 ) }
    dend_8 { pt3dadd( 545.521, 97.9203, 71.4403, 0.4064 ) }
    dend_8 { pt3dadd( 544.572, 97.2884, 71.5621, 0.4546 ) }
    dend_8 { pt3dadd( 543.693, 96.5878, 71.6926, 0.4638 ) }
    dend_8 { pt3dadd( 543.247, 95.6176, 71.7909, 0.4114 ) }
    dend_8 { pt3dadd( 542.786, 94.6269, 71.7226, 0.4234 ) }
    dend_8 { pt3dadd( 542.276, 93.6033, 71.6223, 0.374 ) }
    dend_8 { pt3dadd( 541.922, 92.5615, 71.4991, 0.4 ) }
    dend_8 { pt3dadd( 542.312, 91.4978, 71.3502, 0.336 ) }
    dend_8 { pt3dadd( 542.255, 90.47, 71.1682, 0.304 ) }
    dend_8 { pt3dadd( 541.977, 89.3846, 70.8893, 0.2818 ) }
    dend_8 { pt3dadd( 541.702, 88.2984, 70.5438, 0.2882 ) }
    dend_8 { pt3dadd( 541.482, 87.1982, 70.1397, 0.2994 ) }
    dend_8 { pt3dadd( 541.262, 86.098, 69.6962, 0.323 ) }
    dend_8 { pt3dadd( 540.613, 85.1583, 69.3073, 0.3536 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_8 { pt3dadd( 539.957, 84.2223, 68.9626, 0.4724 ) }
    dend_8 { pt3dadd( 539.094, 83.5193, 68.5588, 0.3932 ) }
    dend_8 { pt3dadd( 538.202, 82.8505, 68.1052, 0.3254 ) }
    dend_8 { pt3dadd( 537.224, 82.2805, 67.6354, 0.2748 ) }
    dend_8 { pt3dadd( 536.219, 81.8047, 67.13, 0.2748 ) }
    dend_8 { pt3dadd( 535.16, 81.5137, 66.5591, 0.275 ) }
    dend_8 { pt3dadd( 534.145, 81.1455, 65.9383, 0.2754 ) }
    dend_8 { pt3dadd( 533.216, 80.55, 65.3251, 0.2762 ) }
    dend_8 { pt3dadd( 532.606, 79.598, 64.8029, 0.2776 ) }
    dend_8 { pt3dadd( 532.563, 78.4548, 64.344, 0.2804 ) }
    dend_8 { pt3dadd( 532.108, 77.421, 63.9066, 0.2854 ) }
    dend_8 { pt3dadd( 531.529, 76.5219, 63.383, 0.2944 ) }
    dend_8 { pt3dadd( 530.713, 75.9666, 62.6794, 0.3122 ) }
    dend_8 { pt3dadd( 529.859, 75.2882, 61.9175, 0.34 ) }
    dend_8 { pt3dadd( 529.388, 74.4753, 60.9946, 0.4164 ) }
    dend_8 { pt3dadd( 529.121, 73.5038, 60.0202, 0.439 ) }
    dend_8 { pt3dadd( 528.398, 72.7726, 59.0111, 0.3708 ) }
    dend_8 { pt3dadd( 527.527, 72.1885, 58.0244, 0.3224 ) }
    dend_8 { pt3dadd( 526.741, 71.3746, 57.1407, 0.3108 ) }
    dend_8 { pt3dadd( 525.879, 70.6951, 56.3234, 0.3672 ) }
    dend_8 { pt3dadd( 524.887, 70.2417, 55.5422, 0.322 ) }
    dend_8 { pt3dadd( 523.956, 69.8454, 54.74, 0.2796 ) }
    dend_8 { pt3dadd( 523.069, 69.4908, 53.9017, 0.2288 ) }
    dend_8 { pt3dadd( 522.025, 69.1342, 52.36, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 24/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 479.878, 120.63, 76.8037, 0.2746 ) }
    dend_26 { pt3dadd( 479.892, 120.264, 76.2348, 0.2288 ) }
    dend_26 { pt3dadd( 480.257, 119.416, 77.5785, 0.2746 ) }
    dend_26 { pt3dadd( 481.077, 118.664, 78.1239, 0.2746 ) }
    dend_26 { pt3dadd( 481.898, 117.91, 78.7307, 0.2746 ) }
    dend_26 { pt3dadd( 482.717, 117.156, 79.3761, 0.2746 ) }
    dend_26 { pt3dadd( 483.537, 116.403, 80.0394, 0.2746 ) }
    dend_26 { pt3dadd( 484.357, 115.649, 80.7027, 0.2746 ) }
    dend_26 { pt3dadd( 484.925, 114.719, 81.3534, 0.2746 ) }
    dend_26 { pt3dadd( 485.36, 113.698, 82.0084, 0.2746 ) }
    dend_26 { pt3dadd( 485.795, 112.676, 82.6658, 0.2746 ) }
    dend_26 { pt3dadd( 486.231, 111.655, 83.3235, 0.2746 ) }
    dend_26 { pt3dadd( 486.667, 110.633, 83.9793, 0.2746 ) }
    dend_26 { pt3dadd( 487.103, 109.611, 84.6308, 0.2746 ) }
    dend_26 { pt3dadd( 487.539, 108.59, 85.2748, 0.2748 ) }
    dend_26 { pt3dadd( 487.974, 107.568, 85.9076, 0.2748 ) }
    dend_26 { pt3dadd( 488.409, 106.547, 86.5256, 0.2752 ) }
    dend_26 { pt3dadd( 488.845, 105.525, 87.1228, 0.2756 ) }
    dend_26 { pt3dadd( 489.281, 104.503, 87.6901, 0.2766 ) }
    dend_26 { pt3dadd( 489.717, 103.482, 88.2126, 0.2782 ) }
    dend_26 { pt3dadd( 490.153, 102.46, 88.6771, 0.2814 ) }
    dend_26 { pt3dadd( 490.589, 101.438, 89.0781, 0.2872 ) }
    dend_26 { pt3dadd( 490.816, 100.347, 89.3533, 0.299 ) }
    dend_26 { pt3dadd( 490.892, 99.2485, 89.4589, 0.3146 ) }
    dend_26 { pt3dadd( 491.033, 98.6788, 89.2024, 0.3746 ) }
    dend_26 { pt3dadd( 491.417, 97.6139, 88.9263, 0.3358 ) }
    dend_26 { pt3dadd( 491.42, 96.5607, 88.7835, 0.3038 ) }
    dend_26 { pt3dadd( 491.344, 95.5796, 88.5738, 0.2816 ) }
    dend_26 { pt3dadd( 491.107, 94.6691, 88.3767, 0.2872 ) }
    dend_26 { pt3dadd( 491.606, 94.0266, 88.6259, 0.2992 ) }
    dend_26 { pt3dadd( 491.855, 93.347, 89.2906, 0.315 ) }
    dend_26 { pt3dadd( 491.632, 92.5731, 90.1068, 0.375 ) }
    dend_26 { pt3dadd( 491.21, 91.9792, 90.6559, 0.3368 ) }
    dend_26 { pt3dadd( 490.846, 90.9787, 91.3794, 0.3054 ) }
    dend_26 { pt3dadd( 490.719, 89.9173, 92.2191, 0.2846 ) }
    dend_26 { pt3dadd( 491.087, 88.9158, 93.0882, 0.2928 ) }
    dend_26 { pt3dadd( 491.403, 88.2045, 94.1926, 0.3094 ) }
    dend_26 { pt3dadd( 491.552, 87.6519, 95.5604, 0.3348 ) }
    dend_26 { pt3dadd( 491.676, 86.8581, 97.0564, 0.4068 ) }
    dend_26 { pt3dadd( 492.524, 86.4929, 98.4262, 0.4208 ) }
    dend_26 { pt3dadd( 492.997, 85.9686, 99.757, 0.339 ) }
    dend_26 { pt3dadd( 493.934, 85.7795, 100.927, 0.2542 ) }
    dend_26 { pt3dadd( 495.065, 85.809, 102.468, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 67/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 479.878, 120.63, 76.8037, 0.2746 ) }
    dend_25 { pt3dadd( 479.714, 119.756, 77.3676, 0.2746 ) }
    dend_25 { pt3dadd( 479.541, 118.847, 78.1631, 0.2746 ) }
    dend_25 { pt3dadd( 479.369, 117.937, 79.0773, 0.2746 ) }
    dend_25 { pt3dadd( 478.925, 117.052, 79.9229, 0.2746 ) }
    dend_25 { pt3dadd( 478.168, 116.194, 80.5431, 0.2748 ) }
    dend_25 { pt3dadd( 477.412, 115.336, 80.9553, 0.2748 ) }
    dend_25 { pt3dadd( 476.656, 114.477, 81.1784, 0.2752 ) }
    dend_25 { pt3dadd( 476.436, 113.393, 81.272, 0.2756 ) }
    dend_25 { pt3dadd( 476.351, 112.252, 81.2899, 0.2766 ) }
    dend_25 { pt3dadd( 476.308, 111.119, 81.2812, 0.2782 ) }
    dend_25 { pt3dadd( 476.805, 110.089, 81.2692, 0.2814 ) }
    dend_25 { pt3dadd( 477.301, 109.058, 81.2515, 0.2872 ) }
    dend_25 { pt3dadd( 477.797, 108.028, 81.2274, 0.2988 ) }
    dend_25 { pt3dadd( 478.295, 106.997, 81.1947, 0.3144 ) }
    dend_25 { pt3dadd( 478.792, 105.966, 81.1527, 0.374 ) }
    dend_25 { pt3dadd( 479.091, 104.867, 81.0782, 0.335 ) }
    dend_25 { pt3dadd( 479.37, 103.76, 80.9771, 0.302 ) }
    dend_25 { pt3dadd( 479.65, 102.652, 80.8581, 0.2784 ) }
    dend_25 { pt3dadd( 479.929, 101.545, 80.7313, 0.2816 ) }
    dend_25 { pt3dadd( 480.207, 100.438, 80.6061, 0.2874 ) }
    dend_25 { pt3dadd( 480.486, 99.331, 80.4905, 0.2994 ) }
    dend_25 { pt3dadd( 480.765, 98.2237, 80.3956, 0.3152 ) }
    dend_25 { pt3dadd( 481.189, 97.1632, 80.3499, 0.3754 ) }
    dend_25 { pt3dadd( 481.634, 96.1094, 80.353, 0.3376 ) }
    dend_25 { pt3dadd( 482.08, 95.0555, 80.4012, 0.307 ) }
    dend_25 { pt3dadd( 482.136, 94.3374, 80.4544, 0.2874 ) }
    dend_25 { pt3dadd( 482.359, 93.2765, 80.6887, 0.2996 ) }
    dend_25 { pt3dadd( 482.767, 92.2472, 80.9721, 0.3156 ) }
    dend_25 { pt3dadd( 483.082, 91.1619, 81.2246, 0.3762 ) }
    dend_25 { pt3dadd( 483.163, 90.0565, 81.5346, 0.3392 ) }
    dend_25 { pt3dadd( 483.017, 89.0207, 81.9619, 0.3098 ) }
    dend_25 { pt3dadd( 482.516, 88.0891, 82.4438, 0.2924 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_25 { pt3dadd( 482.142, 87.2458, 83.0001, 0.309 ) }
    dend_25 { pt3dadd( 482.239, 86.4791, 83.3431, 0.3328 ) }
    dend_25 { pt3dadd( 482.047, 85.6162, 83.3672, 0.409 ) }
    dend_25 { pt3dadd( 481.657, 84.9144, 83.2126, 0.3958 ) }
    dend_25 { pt3dadd( 481.094, 84.0474, 83.2572, 0.435 ) }
    dend_25 { pt3dadd( 480.62, 83.1209, 83.4879, 0.4266 ) }
    dend_25 { pt3dadd( 480.222, 82.3714, 83.9796, 0.3474 ) }
    dend_25 { pt3dadd( 479.563, 81.8525, 84.5561, 0.2796 ) }
    dend_25 { pt3dadd( 478.51, 81.4234, 84.9996, 0.2288 ) }
    dend_25 { pt3dadd( 478.357, 80.775, 85.0147, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 10/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 453.239, 110.294, 76.3815, 0.3338 ) }
    dend_22 { pt3dadd( 452.417, 109.436, 75.8464, 0.3 ) }
    dend_22 { pt3dadd( 451.592, 108.788, 75.1114, 0.2746 ) }
    dend_22 { pt3dadd( 450.767, 108.141, 74.2238, 0.2746 ) }
    dend_22 { pt3dadd( 449.943, 107.494, 73.2281, 0.2746 ) }
    dend_22 { pt3dadd( 449.119, 106.847, 72.1664, 0.2746 ) }
    dend_22 { pt3dadd( 448.295, 106.199, 71.0769, 0.2746 ) }
    dend_22 { pt3dadd( 447.47, 105.552, 69.9947, 0.2746 ) }
    dend_22 { pt3dadd( 446.645, 104.905, 68.9282, 0.2748 ) }
    dend_22 { pt3dadd( 445.822, 104.258, 67.8835, 0.2748 ) }
    dend_22 { pt3dadd( 444.997, 103.61, 66.8713, 0.2752 ) }
    dend_22 { pt3dadd( 444.173, 102.963, 65.9042, 0.2756 ) }
    dend_22 { pt3dadd( 443.348, 102.316, 64.9947, 0.2766 ) }
    dend_22 { pt3dadd( 442.523, 101.669, 64.1547, 0.2782 ) }
    dend_22 { pt3dadd( 441.653, 101.024, 63.453, 0.2814 ) }
    dend_22 { pt3dadd( 440.707, 100.382, 62.9798, 0.2872 ) }
    dend_22 { pt3dadd( 439.759, 99.7395, 62.6884, 0.299 ) }
    dend_22 { pt3dadd( 438.812, 99.0975, 62.5271, 0.3144 ) }
    dend_22 { pt3dadd( 437.951, 98.3527, 62.4448, 0.374 ) }
    dend_22 { pt3dadd( 437.141, 97.5449, 62.3986, 0.335 ) }
    dend_22 { pt3dadd( 436.752, 96.9706, 62.529, 0.3022 ) }
    dend_22 { pt3dadd( 436.481, 96.1678, 62.5797, 0.2786 ) }
    dend_22 { pt3dadd( 436.036, 95.6486, 62.3482, 0.2822 ) }
    dend_22 { pt3dadd( 436.162, 95.1165, 61.9186, 0.2886 ) }
    dend_22 { pt3dadd( 435.345, 94.4062, 61.6532, 0.3018 ) }
    dend_22 { pt3dadd( 434.912, 93.4536, 61.6498, 0.3196 ) }
    dend_22 { pt3dadd( 434.804, 92.4143, 61.875, 0.3838 ) }
    dend_22 { pt3dadd( 434.492, 91.5276, 62.3224, 0.3532 ) }
    dend_22 { pt3dadd( 433.67, 90.9053, 62.6665, 0.3356 ) }
    dend_22 { pt3dadd( 433.055, 90.4996, 62.8006, 0.3412 ) }
    dend_22 { pt3dadd( 432.796, 89.5281, 63.0683, 0.3946 ) }
    dend_22 { pt3dadd( 432.377, 88.4972, 63.2719, 0.514 ) }
    dend_22 { pt3dadd( 431.706, 87.5885, 63.4458, 0.636 ) }
    dend_22 { pt3dadd( 431.173, 86.628, 63.7414, 0.6582 ) }
    dend_22 { pt3dadd( 430.58, 85.7422, 64.1931, 0.547 ) }
    dend_22 { pt3dadd( 429.937, 84.8211, 64.6556, 0.3926 ) }
    dend_22 { pt3dadd( 429.238, 83.9188, 65.0432, 0.3142 ) }
    dend_22 { pt3dadd( 428.688, 82.9494, 65.4777, 0.3022 ) }
    dend_22 { pt3dadd( 427.818, 82.2719, 65.9599, 0.3204 ) }
    dend_22 { pt3dadd( 427.141, 81.3922, 66.449, 0.3848 ) }
    dend_22 { pt3dadd( 426.536, 80.4583, 66.9376, 0.3562 ) }
    dend_22 { pt3dadd( 425.924, 79.5286, 67.4358, 0.3362 ) }
    dend_22 { pt3dadd( 425.386, 78.5318, 67.8709, 0.3672 ) }
    dend_22 { pt3dadd( 424.643, 77.7038, 68.2312, 0.322 ) }
    dend_22 { pt3dadd( 423.88, 76.8733, 68.4564, 0.2796 ) }
    dend_22 { pt3dadd( 422.951, 76.2362, 68.6582, 0.2288 ) }
    dend_22 { pt3dadd( 422.053, 75.7408, 69.2504, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 453.239, 110.294, 76.3815, 0.3338 ) }
    dend_21 { pt3dadd( 452.886, 110.622, 76.694, 0.2288 ) }
    dend_21 { pt3dadd( 452.62, 110.992, 75.6666, 0.2746 ) }
    dend_21 { pt3dadd( 452.521, 109.852, 75.301, 0.2746 ) }
    dend_21 { pt3dadd( 452.422, 108.712, 74.9636, 0.2746 ) }
    dend_21 { pt3dadd( 452.323, 107.573, 74.6441, 0.2746 ) }
    dend_21 { pt3dadd( 451.942, 106.546, 74.2773, 0.2746 ) }
    dend_21 { pt3dadd( 451.354, 105.604, 73.8321, 0.2746 ) }
    dend_21 { pt3dadd( 450.765, 104.661, 73.3314, 0.2746 ) }
    dend_21 { pt3dadd( 450.176, 103.719, 72.7588, 0.2746 ) }
    dend_21 { pt3dadd( 449.588, 102.777, 72.1403, 0.2746 ) }
    dend_21 { pt3dadd( 448.998, 101.834, 71.4988, 0.2748 ) }
    dend_21 { pt3dadd( 448.409, 100.892, 70.8562, 0.275 ) }
    dend_21 { pt3dadd( 447.821, 99.9492, 70.2226, 0.2754 ) }
    dend_21 { pt3dadd( 447.232, 99.0068, 69.6016, 0.2762 ) }
    dend_21 { pt3dadd( 446.644, 98.0644, 68.9962, 0.2774 ) }
    dend_21 { pt3dadd( 446.055, 97.1219, 68.4188, 0.2798 ) }
    dend_21 { pt3dadd( 445.466, 96.1795, 67.8807, 0.2844 ) }
    dend_21 { pt3dadd( 444.878, 95.2371, 67.3865, 0.2926 ) }
    dend_21 { pt3dadd( 444.289, 94.2947, 66.9407, 0.3092 ) }
    dend_21 { pt3dadd( 443.699, 93.3522, 66.5448, 0.3334 ) }
    dend_21 { pt3dadd( 443.796, 92.822, 66.5288, 0.41 ) }
    dend_21 { pt3dadd( 443.726, 91.7529, 66.6016, 0.3976 ) }
    dend_21 { pt3dadd( 443.355, 90.8063, 66.512, 0.4384 ) }
    dend_21 { pt3dadd( 443.338, 89.7706, 66.439, 0.4328 ) }
    dend_21 { pt3dadd( 443.128, 88.7059, 66.3729, 0.3594 ) }
    dend_21 { pt3dadd( 443.489, 87.924, 66.2208, 0.3 ) }
    dend_21 { pt3dadd( 442.823, 87.3565, 65.9075, 0.2746 ) }
    dend_21 { pt3dadd( 442.651, 86.627, 66.0089, 0.2746 ) }
    dend_21 { pt3dadd( 442.651, 86.1176, 66.6235, 0.2746 ) }
    dend_21 { pt3dadd( 442.443, 85.5384, 67.5357, 0.2748 ) }
    dend_21 { pt3dadd( 442.187, 84.8575, 68.1103, 0.275 ) }
    dend_21 { pt3dadd( 442.134, 83.965, 68.7198, 0.2752 ) }
    dend_21 { pt3dadd( 442.194, 82.9302, 69.4291, 0.2758 ) }
    dend_21 { pt3dadd( 441.874, 82.5374, 70.2517, 0.2768 ) }
    dend_21 { pt3dadd( 441.41, 81.8916, 71.0374, 0.2788 ) }
    dend_21 { pt3dadd( 441.193, 80.8022, 71.6612, 0.2824 ) }
    dend_21 { pt3dadd( 440.957, 79.6971, 72.1706, 0.2882 ) }
    dend_21 { pt3dadd( 440.611, 78.6248, 72.4713, 0.305 ) }
    dend_21 { pt3dadd( 440.293, 77.5555, 72.5959, 0.305 ) }
    dend_21 { pt3dadd( 440.134, 76.6561, 72.0653, 0.4576 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 98/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 502.16, 139.506, 74.051, 0.4198 ) }
    dend_16 { pt3dadd( 502.252, 139.114, 74.3271, 0.4452 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_16 { pt3dadd( 503.124, 138.452, 74.4811, 0.3834 ) }
    dend_16 { pt3dadd( 504.084, 137.97, 74.6466, 0.3396 ) }
    dend_16 { pt3dadd( 504.153, 136.921, 74.9025, 0.3734 ) }
    dend_16 { pt3dadd( 504.072, 135.819, 75.1125, 0.3338 ) }
    dend_16 { pt3dadd( 504.357, 134.717, 75.3407, 0.3 ) }
    dend_16 { pt3dadd( 504.826, 133.692, 75.588, 0.2746 ) }
    dend_16 { pt3dadd( 505.259, 132.652, 75.8414, 0.2746 ) }
    dend_16 { pt3dadd( 505.364, 131.533, 76.1236, 0.2746 ) }
    dend_16 { pt3dadd( 505.364, 130.458, 76.5013, 0.2746 ) }
    dend_16 { pt3dadd( 505.505, 129.357, 76.8732, 0.2746 ) }
    dend_16 { pt3dadd( 505.669, 128.225, 77.1823, 0.2746 ) }
    dend_16 { pt3dadd( 506.335, 127.376, 77.5169, 0.2746 ) }
    dend_16 { pt3dadd( 507.096, 126.633, 77.7899, 0.2746 ) }
    dend_16 { pt3dadd( 508.124, 126.278, 78.092, 0.2746 ) }
    dend_16 { pt3dadd( 509.129, 125.848, 78.3924, 0.2746 ) }
    dend_16 { pt3dadd( 509.898, 125.04, 78.6237, 0.2746 ) }
    dend_16 { pt3dadd( 510.833, 124.382, 78.8021, 0.2746 ) }
    dend_16 { pt3dadd( 511.789, 123.753, 78.9401, 0.2746 ) }
    dend_16 { pt3dadd( 512.726, 123.099, 79.0619, 0.2746 ) }
    dend_16 { pt3dadd( 513.396, 122.232, 79.1753, 0.2746 ) }
    dend_16 { pt3dadd( 514.407, 121.729, 79.3005, 0.2748 ) }
    dend_16 { pt3dadd( 515.464, 121.342, 79.4828, 0.275 ) }
    dend_16 { pt3dadd( 516.315, 120.819, 79.8518, 0.2754 ) }
    dend_16 { pt3dadd( 517.012, 120.11, 80.2592, 0.276 ) }
    dend_16 { pt3dadd( 517.381, 119.102, 80.5588, 0.2774 ) }
    dend_16 { pt3dadd( 518.08, 118.2, 80.8548, 0.2796 ) }
    dend_16 { pt3dadd( 517.898, 117.503, 81.4173, 0.284 ) }
    dend_16 { pt3dadd( 518.002, 116.378, 81.9448, 0.292 ) }
    dend_16 { pt3dadd( 518.002, 115.298, 82.5023, 0.308 ) }
    dend_16 { pt3dadd( 517.932, 114.187, 83.0276, 0.3312 ) }
    dend_16 { pt3dadd( 517.46, 113.315, 83.5901, 0.4062 ) }
    dend_16 { pt3dadd( 517.204, 112.234, 84.0608, 0.389 ) }
    dend_16 { pt3dadd( 516.771, 111.31, 84.4939, 0.4288 ) }
    dend_16 { pt3dadd( 516.401, 110.317, 84.8327, 0.3842 ) }
    dend_16 { pt3dadd( 516.145, 109.288, 85.099, 0.4186 ) }
    dend_16 { pt3dadd( 515.52, 108.647, 85.4644, 0.3718 ) }
    dend_16 { pt3dadd( 515.456, 107.506, 85.7368, 0.3646 ) }
    dend_16 { pt3dadd( 515.307, 106.377, 85.9432, 0.4222 ) }
    dend_16 { pt3dadd( 515.206, 105.488, 86.198, 0.4136 ) }
    dend_16 { pt3dadd( 515.398, 104.686, 86.3708, 0.499 ) }
    dend_16 { pt3dadd( 516.308, 104.105, 86.4279, 0.3956 ) }
    dend_16 { pt3dadd( 516.421, 103.004, 86.5379, 0.33 ) }
    dend_16 { pt3dadd( 517.013, 102.181, 86.5586, 0.283 ) }
    dend_16 { pt3dadd( 516.928, 101.123, 86.4909, 0.2902 ) }
    dend_16 { pt3dadd( 516.881, 100.56, 86.709, 0.3034 ) }
    dend_16 { pt3dadd( 517.14, 99.8309, 87.129, 0.3286 ) }
    dend_16 { pt3dadd( 517.704, 99.506, 87.2323, 0.3718 ) }
    dend_16 { pt3dadd( 517.267, 99.0304, 86.8916, 0.4698 ) }
    dend_16 { pt3dadd( 517.714, 98.1417, 86.5029, 0.5634 ) }
    dend_16 { pt3dadd( 518.263, 97.3004, 85.9978, 0.4782 ) }
    dend_16 { pt3dadd( 519.109, 96.7253, 85.5509, 0.4326 ) }
    dend_16 { pt3dadd( 519.928, 96.2626, 84.94, 0.4894 ) }
    dend_16 { pt3dadd( 520.596, 95.8507, 84.1596, 0.5956 ) }
    dend_16 { pt3dadd( 521.252, 95.0031, 83.3837, 0.5576 ) }
    dend_16 { pt3dadd( 521.931, 94.1462, 82.6319, 0.4848 ) }
    dend_16 { pt3dadd( 522.052, 93.4618, 81.7267, 0.3614 ) }
    dend_16 { pt3dadd( 522.455, 93.1314, 80.8212, 0.3038 ) }
    dend_16 { pt3dadd( 523.485, 92.6629, 80.218, 0.2818 ) }
    dend_16 { pt3dadd( 524.525, 92.19, 79.8666, 0.2876 ) }
    dend_16 { pt3dadd( 525.536, 91.6732, 79.6404, 0.2998 ) }
    dend_16 { pt3dadd( 526.542, 91.1527, 79.5021, 0.3162 ) }
    dend_16 { pt3dadd( 527.635, 90.9042, 79.5682, 0.3772 ) }
    dend_16 { pt3dadd( 528.729, 90.6557, 79.7516, 0.3408 ) }
    dend_16 { pt3dadd( 529.786, 90.4235, 79.9666, 0.3126 ) }
    dend_16 { pt3dadd( 530.801, 90.3396, 80.0377, 0.2992 ) }
    dend_16 { pt3dadd( 531.851, 90.7731, 80.1133, 0.3148 ) }
    dend_16 { pt3dadd( 532.862, 91.1539, 80.2858, 0.3748 ) }
    dend_16 { pt3dadd( 533.961, 91.4682, 80.4208, 0.3364 ) }
    dend_16 { pt3dadd( 535.072, 91.7448, 80.5395, 0.3048 ) }
    dend_16 { pt3dadd( 536.188, 91.9865, 80.6627, 0.2834 ) }
    dend_16 { pt3dadd( 537.325, 91.9762, 80.8268, 0.2908 ) }
    dend_16 { pt3dadd( 538.466, 91.9162, 81.0191, 0.3058 ) }
    dend_16 { pt3dadd( 539.557, 91.695, 81.2381, 0.3268 ) }
    dend_16 { pt3dadd( 540.523, 91.0845, 81.4929, 0.398 ) }
    dend_16 { pt3dadd( 541.504, 90.5807, 81.828, 0.3744 ) }
    dend_16 { pt3dadd( 542.516, 90.3344, 82.3351, 0.4004 ) }
    dend_16 { pt3dadd( 543.564, 90.098, 82.924, 0.337 ) }
    dend_16 { pt3dadd( 544.656, 89.8744, 83.5122, 0.3056 ) }
    dend_16 { pt3dadd( 545.76, 89.7902, 84.0675, 0.285 ) }
    dend_16 { pt3dadd( 546.881, 89.9273, 84.5555, 0.2938 ) }
    dend_16 { pt3dadd( 547.996, 90.0913, 84.9604, 0.3112 ) }
    dend_16 { pt3dadd( 549.08, 90.3936, 85.281, 0.3382 ) }
    dend_16 { pt3dadd( 550.156, 90.7223, 85.5224, 0.413 ) }
    dend_16 { pt3dadd( 551.182, 91.2084, 85.6038, 0.4328 ) }
    dend_16 { pt3dadd( 552.177, 91.7129, 85.5487, 0.3594 ) }
    dend_16 { pt3dadd( 553.021, 92.2413, 85.2958, 0.3002 ) }
    dend_16 { pt3dadd( 553.86, 92.8183, 85.0226, 0.275 ) }
    dend_16 { pt3dadd( 554.789, 92.942, 85.087, 0.2752 ) }
    dend_16 { pt3dadd( 555.859, 93.1777, 85.2446, 0.2758 ) }
    dend_16 { pt3dadd( 556.905, 93.3999, 85.4924, 0.2768 ) }
    dend_16 { pt3dadd( 557.88, 93.3999, 85.8886, 0.2796 ) }
    dend_16 { pt3dadd( 558.958, 93.6142, 86.1518, 0.2796 ) }
    dend_16 { pt3dadd( 559.5, 94.3937, 86.0647, 0.305 ) }
    dend_16 { pt3dadd( 560.49, 94.7734, 85.3695, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 94/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 502.16, 139.506, 74.051, 0.4198 ) }
    dend_15 { pt3dadd( 502.008, 139.364, 74.877, 0.2288 ) }
    dend_15 { pt3dadd( 501.497, 139.083, 76.9124, 0.2752 ) }
    dend_15 { pt3dadd( 501.474, 138.271, 77.8089, 0.2756 ) }
    dend_15 { pt3dadd( 501.474, 137.155, 78.6405, 0.2766 ) }
    dend_15 { pt3dadd( 501.474, 136.014, 79.3486, 0.2782 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_15 { pt3dadd( 501.804, 134.985, 80.0416, 0.2814 ) }
    dend_15 { pt3dadd( 502.177, 133.909, 80.6028, 0.287 ) }
    dend_15 { pt3dadd( 502.726, 132.92, 81.0592, 0.2988 ) }
    dend_15 { pt3dadd( 503.067, 131.829, 81.4187, 0.3142 ) }
    dend_15 { pt3dadd( 503.372, 130.744, 81.802, 0.3734 ) }
    dend_15 { pt3dadd( 503.763, 129.779, 82.2884, 0.3338 ) }
    dend_15 { pt3dadd( 503.763, 128.667, 82.7742, 0.3 ) }
    dend_15 { pt3dadd( 504.085, 127.611, 83.225, 0.2746 ) }
    dend_15 { pt3dadd( 504.837, 126.768, 83.578, 0.2746 ) }
    dend_15 { pt3dadd( 505.606, 125.924, 83.8631, 0.2746 ) }
    dend_15 { pt3dadd( 506.329, 125.043, 84.0974, 0.2746 ) }
    dend_15 { pt3dadd( 506.911, 124.06, 84.3122, 0.2746 ) }
    dend_15 { pt3dadd( 507.414, 123.118, 84.5452, 0.2746 ) }
    dend_15 { pt3dadd( 507.784, 122.077, 84.8364, 0.2746 ) }
    dend_15 { pt3dadd( 508.163, 121.838, 85.4739, 0.2746 ) }
    dend_15 { pt3dadd( 508.683, 120.857, 86.1076, 0.2746 ) }
    dend_15 { pt3dadd( 509.172, 120.114, 86.8274, 0.2746 ) }
    dend_15 { pt3dadd( 509.722, 119.122, 87.4485, 0.2746 ) }
    dend_15 { pt3dadd( 510.641, 118.495, 88.0186, 0.2746 ) }
    dend_15 { pt3dadd( 510.698, 117.49, 88.6124, 0.2746 ) }
    dend_15 { pt3dadd( 510.896, 116.528, 89.2256, 0.2746 ) }
    dend_15 { pt3dadd( 511.024, 115.448, 89.8727, 0.2746 ) }
    dend_15 { pt3dadd( 511.024, 114.507, 90.6391, 0.2748 ) }
    dend_15 { pt3dadd( 511.024, 113.902, 91.5849, 0.2748 ) }
    dend_15 { pt3dadd( 510.949, 112.769, 92.3126, 0.2752 ) }
    dend_15 { pt3dadd( 510.457, 111.801, 92.841, 0.2756 ) }
    dend_15 { pt3dadd( 510.07, 110.775, 93.2056, 0.2766 ) }
    dend_15 { pt3dadd( 509.673, 109.724, 93.4422, 0.2782 ) }
    dend_15 { pt3dadd( 509.013, 108.864, 93.623, 0.2814 ) }
    dend_15 { pt3dadd( 508.565, 107.875, 93.8286, 0.2872 ) }
    dend_15 { pt3dadd( 508.278, 106.8, 94.0069, 0.298 ) }
    dend_15 { pt3dadd( 508.067, 105.684, 94.1643, 0.3188 ) }
    dend_15 { pt3dadd( 507.571, 104.663, 94.3065, 0.3524 ) }
    dend_15 { pt3dadd( 507.501, 103.632, 94.5652, 0.4402 ) }
    dend_15 { pt3dadd( 507.606, 102.442, 94.6907, 0.478 ) }
    dend_15 { pt3dadd( 507.654, 101.313, 94.7982, 0.4686 ) }
    dend_15 { pt3dadd( 507.596, 100.321, 95.02, 0.3786 ) }
    dend_15 { pt3dadd( 507.427, 99.5515, 95.3246, 0.3366 ) }
    dend_15 { pt3dadd( 507.587, 98.8458, 95.2266, 0.3382 ) }
    dend_15 { pt3dadd( 507.256, 97.8265, 94.9402, 0.4126 ) }
    dend_15 { pt3dadd( 506.734, 96.9159, 94.5535, 0.4322 ) }
    dend_15 { pt3dadd( 506.051, 96.5638, 94.0117, 0.3584 ) }
    dend_15 { pt3dadd( 506.281, 96.0708, 93.3884, 0.2982 ) }
    dend_15 { pt3dadd( 505.812, 95.39, 93.1395, 0.2712 ) }
    dend_15 { pt3dadd( 505.407, 94.8058, 93.4405, 0.2684 ) }
    dend_15 { pt3dadd( 505.09, 94.3219, 94.1676, 0.2626 ) }
    dend_15 { pt3dadd( 504.442, 93.6752, 95.0009, 0.2542 ) }
    dend_15 { pt3dadd( 503.783, 93.0694, 95.7144, 0.2288 ) }
    dend_15 { pt3dadd( 504.22, 92.2161, 96.2749, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 488.139, 147.273, 73.7775, 0.2746 ) }
    dend_13 { pt3dadd( 488.302, 147.426, 71.7724, 0.2288 ) }
    dend_13 { pt3dadd( 487.944, 146.54, 72.4153, 0.2746 ) }
    dend_13 { pt3dadd( 487.507, 145.504, 72.7048, 0.2746 ) }
    dend_13 { pt3dadd( 487.07, 144.47, 73.078, 0.2746 ) }
    dend_13 { pt3dadd( 486.633, 143.435, 73.5123, 0.2746 ) }
    dend_13 { pt3dadd( 486.196, 142.399, 73.9866, 0.2746 ) }
    dend_13 { pt3dadd( 485.759, 141.364, 74.4808, 0.2744 ) }
    dend_13 { pt3dadd( 485.322, 140.33, 74.9756, 0.2744 ) }
    dend_13 { pt3dadd( 484.884, 139.295, 75.4572, 0.2742 ) }
    dend_13 { pt3dadd( 484.447, 138.259, 75.922, 0.274 ) }
    dend_13 { pt3dadd( 484.011, 137.225, 76.3669, 0.2736 ) }
    dend_13 { pt3dadd( 483.739, 136.126, 76.7564, 0.2728 ) }
    dend_13 { pt3dadd( 483.515, 135.008, 77.0949, 0.2712 ) }
    dend_13 { pt3dadd( 483.291, 133.89, 77.3884, 0.2684 ) }
    dend_13 { pt3dadd( 483.067, 132.773, 77.6429, 0.2626 ) }
    dend_13 { pt3dadd( 482.844, 131.656, 77.8646, 0.2542 ) }
    dend_13 { pt3dadd( 482.619, 130.538, 78.0601, 0.2288 ) }
    dend_13 { pt3dadd( 482.395, 129.421, 78.4372, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 68/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 488.139, 147.273, 73.7775, 0.2746 ) }
    dend_12 { pt3dadd( 488.139, 146.311, 74.4134, 0.2746 ) }
    dend_12 { pt3dadd( 488.139, 145.273, 75.1187, 0.2746 ) }
    dend_12 { pt3dadd( 488.152, 144.143, 75.7246, 0.2746 ) }
    dend_12 { pt3dadd( 488.321, 143.066, 76.1202, 0.2746 ) }
    dend_12 { pt3dadd( 488.402, 141.977, 76.5453, 0.2746 ) }
    dend_12 { pt3dadd( 488.139, 140.948, 77.0168, 0.2746 ) }
    dend_12 { pt3dadd( 488.139, 139.812, 77.4382, 0.2746 ) }
    dend_12 { pt3dadd( 488.139, 138.677, 77.8333, 0.2746 ) }
    dend_12 { pt3dadd( 488.24, 137.548, 78.2116, 0.2746 ) }
    dend_12 { pt3dadd( 488.438, 136.423, 78.5649, 0.2746 ) }
    dend_12 { pt3dadd( 488.718, 135.34, 78.8984, 0.2746 ) }
    dend_12 { pt3dadd( 489.329, 134.423, 79.2974, 0.2746 ) }
    dend_12 { pt3dadd( 488.885, 133.839, 79.5654, 0.2746 ) }
    dend_12 { pt3dadd( 489.032, 132.834, 80.0148, 0.2746 ) }
    dend_12 { pt3dadd( 489.425, 131.815, 80.4863, 0.2746 ) }
    dend_12 { pt3dadd( 490.054, 131.14, 80.9164, 0.2746 ) }
    dend_12 { pt3dadd( 490.354, 130.276, 81.4094, 0.2746 ) }
    dend_12 { pt3dadd( 490.585, 129.194, 81.965, 0.2746 ) }
    dend_12 { pt3dadd( 490.816, 128.113, 82.5756, 0.2746 ) }
    dend_12 { pt3dadd( 491.046, 127.032, 83.2045, 0.2746 ) }
    dend_12 { pt3dadd( 491.277, 125.95, 83.8662, 0.2746 ) }
    dend_12 { pt3dadd( 491.442, 124.862, 84.539, 0.2746 ) }
    dend_12 { pt3dadd( 491.241, 123.735, 85.1267, 0.2744 ) }
    dend_12 { pt3dadd( 491.066, 122.63, 85.7013, 0.2744 ) }
    dend_12 { pt3dadd( 490.989, 121.597, 86.4161, 0.2742 ) }
    dend_12 { pt3dadd( 490.912, 120.564, 87.241, 0.274 ) }
    dend_12 { pt3dadd( 490.836, 119.53, 88.1418, 0.2736 ) }
    dend_12 { pt3dadd( 490.759, 118.497, 89.0828, 0.2728 ) }
    dend_12 { pt3dadd( 490.682, 117.464, 90.0287, 0.2712 ) }
    dend_12 { pt3dadd( 490.606, 116.431, 90.9275, 0.2684 ) }
    dend_12 { pt3dadd( 490.625, 115.371, 91.6919, 0.2626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_12 { pt3dadd( 490.866, 114.254, 92.2127, 0.2542 ) }
    dend_12 { pt3dadd( 491.109, 113.135, 92.5403, 0.2288 ) }
    dend_12 { pt3dadd( 491.35, 112.017, 92.8108, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_41, dend_0, dend_78, dend_42, dend_32, dend_1, dend_82, dend_79, dend_60, dend_43, dend_34, dend_33, dend_31, dend_2, dend_86, dend_83, dend_81, dend_80, dend_61, dend_49, dend_44, dend_36, dend_35, dend_30, dend_3, dend_88, dend_87, dend_85, dend_84, dend_63, dend_62, dend_59, dend_50, dend_46, dend_45, dend_38, dend_37, dend_29, dend_4, dend_73, dend_64, dend_58, dend_51, dend_48, dend_47, dend_40, dend_39, dend_28, dend_5, dend_77, dend_74, dend_68, dend_65, dend_53, dend_52, dend_17, dend_6, dend_76, dend_75, dend_70, dend_69, dend_67, dend_66, dend_57, dend_54, dend_23, dend_18, dend_10, dend_7, dend_72, dend_71, dend_56, dend_55, dend_27, dend_24, dend_20, dend_19, dend_14, dend_11, dend_9, dend_8, dend_26, dend_25, dend_22, dend_21, dend_16, dend_15, dend_13, dend_12]}
    dend = new SectionList()
    dend_41 dend.append()
    dend_0 dend.append()
    dend_78 dend.append()
    dend_42 dend.append()
    dend_32 dend.append()
    dend_1 dend.append()
    dend_82 dend.append()
    dend_79 dend.append()
    dend_60 dend.append()
    dend_43 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_31 dend.append()
    dend_2 dend.append()
    dend_86 dend.append()
    dend_83 dend.append()
    dend_81 dend.append()
    dend_80 dend.append()
    dend_61 dend.append()
    dend_49 dend.append()
    dend_44 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_30 dend.append()
    dend_3 dend.append()
    dend_88 dend.append()
    dend_87 dend.append()
    dend_85 dend.append()
    dend_84 dend.append()
    dend_63 dend.append()
    dend_62 dend.append()
    dend_59 dend.append()
    dend_50 dend.append()
    dend_46 dend.append()
    dend_45 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_29 dend.append()
    dend_4 dend.append()
    dend_73 dend.append()
    dend_64 dend.append()
    dend_58 dend.append()
    dend_51 dend.append()
    dend_48 dend.append()
    dend_47 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_28 dend.append()
    dend_5 dend.append()
    dend_77 dend.append()
    dend_74 dend.append()
    dend_68 dend.append()
    dend_65 dend.append()
    dend_53 dend.append()
    dend_52 dend.append()
    dend_17 dend.append()
    dend_6 dend.append()
    dend_76 dend.append()
    dend_75 dend.append()
    dend_70 dend.append()
    dend_69 dend.append()
    dend_67 dend.append()
    dend_66 dend.append()
    dend_57 dend.append()
    dend_54 dend.append()
    dend_23 dend.append()
    dend_18 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_72 dend.append()
    dend_71 dend.append()
    dend_56 dend.append()
    dend_55 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_14 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_7721, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_7721 = new SectionList()
    soma_0 OneSecGrp_SectionRef_7721.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_0, dend_0, dend_0, axon_1, axon_1, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_42, dend_42, dend_42, dend_42, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_3, dend_3, dend_3, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.4398266  // units: uF/cm2
    forsec axon cm = 1.4398266  // units: uF/cm2
    forsec dend cm = 1.4398266  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 68.20407  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.00981202  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 1.1145826E-6  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.67052823  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 6.0456095E-8  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.0027305123  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.0035784903  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0019602315  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.10960685  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 6.384916E-4  // units: S cm-2
        e_pas_nml2 = -89.758575  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 1.6198946E-5  // units: S cm-2
        e_pas_nml2 = -89.758575  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.5611522E-7  // units: S cm-2
        e_pas_nml2 = -89.758575  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 4.6051663E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0075586685  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_479234506
    forsec soma {
        insert CaDynamics_479234506
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_1 nseg = 3
    dend_82 nseg = 7
    dend_34 nseg = 5
    dend_86 nseg = 3
    dend_83 nseg = 3
    dend_81 nseg = 7
    dend_80 nseg = 3
    dend_61 nseg = 3
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_87 nseg = 3
    dend_59 nseg = 7
    dend_45 nseg = 3
    dend_37 nseg = 3
    dend_29 nseg = 5
    dend_64 nseg = 3
    dend_51 nseg = 3
    dend_48 nseg = 9
    dend_28 nseg = 3
    dend_5 nseg = 19
    dend_77 nseg = 5
    dend_74 nseg = 5
    dend_52 nseg = 3
    dend_17 nseg = 3
    dend_69 nseg = 3
    dend_57 nseg = 5
    dend_54 nseg = 3
    dend_7 nseg = 5
    dend_56 nseg = 3
    dend_27 nseg = 3
    dend_8 nseg = 3
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_22 nseg = 3
    dend_21 nseg = 3
    dend_16 nseg = 5
    dend_15 nseg = 3
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_479234506


