// Cell: cNAC187_L4_BTC_ff1cebdea2_0_0
/*
{
  "id" : "cNAC187_L4_BTC_ff1cebdea2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.07039, 1.8584, 2.77", "2.11673, -13.4006, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 9.72061, -3.7416, 1.38", "-6.12299, 11.3224, -3.92909, 1.38", "-7.72686, 13.8306, -4.22266, 1.66", "-9.09629, 15.9721, -4.47332, 1.38", "-10.1914, 17.6846, -4.67377, 1.11", "-11.0563, 19.0371, -4.83207, 1.11", "-13.0557, 22.1639, -5.19805, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.08211, 6.4384, 1.38", "6.01639, 10.2271, 7.60952, 1.38", "6.15834, 12.7891, 8.33592, 1.38", "6.57915, 17.2688, 9.76049, 1.38", "7.15433, 22.0467, 11.3521, 1.38", "7.58724, 25.6428, 12.55, 1.38", "7.97354, 28.8517, 13.619, 0.83", "8.22582, 31.9713, 14.7313, 1.38", "8.59529, 35.6732, 16.1093, 1.38", "9.43946, 40.0879, 17.7243, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.694474", "6.19422, -24.7888, -0.978947, 0.694474", "9.61231, -39.3941, -0.978947, 0.694474" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.11673, -13.4006, 1.8584, 2.22", "4.25298, -17.4405, 1.25961, 2.22", "5.36428, -19.5421, 0.948111, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.11673, -13.4006, 1.8584, 0.83", "-0.637265, -15.5378, 2.08873, 0.83", "-2.59669, -17.0348, 2.48957, 1.11", "-5.30005, -19.1001, 3.04259, 0.83", "-7.37647, -20.6864, 3.46735, 0.83", "-10.897, -23.3761, 4.18755, 1.38", "-14.262, -25.9469, 4.87593, 1.38", "-17.2891, -27.9988, 5.72049, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-13.0557, 22.1639, -5.19805, 0.55", "-16.7749, 22.7564, -4.08483, 0.55", "-18.5622, 22.8224, -3.27943, 0.55", "-19.8387, 22.7981, -2.6141, 0.55", "-21.9395, 22.6768, -1.46878, 1.11", "-25.6166, 22.3536, 0.533649, 0.83", "-29.3216, 21.8857, 2.59187, 0.83", "-33.2104, 21.1127, 4.9341, 0.55", "-35.3215, 20.5782, 6.22067, 1.38", "-36.8545, 20.1062, 7.16419, 0.28", "-38.25, 19.5944, 8.02907, 0.83", "-39.9361, 18.974, 9.11315, 0.28", "-41.1068, 18.5296, 9.90715, 0.55", "-42.5873, 18.0474, 10.848, 0.55", "-44.9394, 17.3586, 12.3325, 0.55", "-46.9699, 16.7767, 13.6009, 0.55", "-50.4319, 15.8739, 15.8045, 0.55", "-51.8939, 15.5261, 16.7015, 0.55", "-54.6937, 14.8982, 18.3459, 0.83", "-56.6617, 14.5, 19.4526, 0.83", "-58.2291, 14.2047, 20.2611, 0.83", "-61.5669, 13.6398, 21.9216, 0.83", "-62.8052, 13.4153, 22.499, 0.83", "-65.7943, 12.8358, 23.9873, 0.83", "-69.8775, 11.949, 26.0787, 0.83", "-70.9034, 11.7493, 26.599, 0.83", "-73.1408, 11.3603, 27.6878, 0.28", "-74.3912, 11.1117, 28.2165, 0.83", "-77.3904, 10.4912, 29.3987, 0.28", "-79.4929, 10.0439, 30.0869, 0.83", "-81.9474, 9.52221, 30.7588, 0.28", "-82.479, 9.40761, 30.896, 0.55", "-85.5189, 8.8383, 31.548, 0.55", "-87.7072, 8.49586, 31.9487, 0.28", "-90.194, 8.126, 32.1621, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-13.0557, 22.1639, -5.19805, 1.11", "-13.7708, 26.9518, -7.48975, 1.11", "-14.2702, 29.5185, -8.5369, 1.11", "-14.8725, 32.6141, -9.79983, 1.11", "-15.3789, 35.2164, -10.8615, 1.11", "-15.9751, 38.2806, -12.1116, 0.83", "-16.5857, 41.4188, -13.3919, 0.83", "-17.1275, 43.8274, -14.0656, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.43946, 40.0879, 17.7243, 0.83", "8.5156, 43.1171, 18.9494, 0.83", "7.82461, 45.3828, 19.8657, 0.83", "7.28941, 47.1377, 20.5755, 0.83", "6.4542, 49.8762, 21.6831, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.43946, 40.0879, 17.7243, 0.83", "12.9377, 43.2906, 17.4519, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.694474", "13.0304, -53.9995, -0.978947, 0.694474", "16.4485, -68.6049, -0.978947, 0.694474" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.36428, -19.5421, 0.948111, 0.83", "5.73916, -20.7281, -1.15162, 0.83", "5.94718, -21.2759, -2.40307, 0.83", "6.19517, -21.859, -3.97817, 0.83", "7.13996, -24.1294, -10.4614, 0.83", "7.66635, -25.3782, -14.0555, 0.83", "8.45524, -27.2499, -19.4418, 0.55", "8.7222, -28.0806, -22.0777, 0.83", "8.96773, -28.9565, -25.1373, 0.83", "9.19091, -29.6929, -28.0403, 1.11", "9.27515, -29.8068, -28.5406, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.36428, -19.5421, 0.948111, 1.66", "6.34822, -22.0119, 0.978641, 1.66", "7.77181, -24.9917, 0.996111, 1.11", "8.84944, -26.9682, 1.00984, 1.11", "10.8677, -30.0523, 1.34993, 1.11", "12.5906, -32.6852, 1.64027, 1.11", "13.7958, -34.5269, 1.84336, 1.38", "15.2321, -36.4958, 2.0867, 1.11", "16.1407, -37.5927, 2.28115, 1.11", "20.0309, -41.403, 3.31026, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-17.2891, -27.9988, 5.72049, 0.28", "-17.9164, -29.6853, 8.07151, 0.28", "-18.2556, -30.3894, 9.12213, 1.11", "-19.4502, -32.7315, 12.8303, 0.55", "-19.7922, -33.453, 13.9537, 0.83", "-20.5494, -35.0501, 16.4407, 0.83", "-21.422, -36.8909, 19.3072, 0.55", "-21.9519, -37.9349, 21.0014, 1.11", "-22.8801, -39.7479, 24.0801, 0.55", "-23.2446, -40.3937, 25.1476, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-17.2891, -27.9988, 5.72049, 0.83", "-21.2495, -28.441, 6.45242, 0.83", "-24.2142, -28.7498, 6.96193, 1.11", "-27.1389, -28.971, 7.40032, 0.83", "-30.4175, -29.1565, 7.80836, 0.83", "-34.4607, -29.3852, 8.31156, 0.83", "-38.3204, -29.6036, 8.7919, 0.83", "-42.5471, -29.836, 9.25739, 1.11", "-46.9824, -30.0124, 9.61014, 1.11", "-50.9062, -30.1176, 9.84197, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-90.194, 8.126, 32.1621, 0.28", "-90.1502, 6.52834, 32.5308, 0.28", "-90.1346, 5.9611, 32.6617, 0.83", "-90.0561, 3.09785, 33.3224, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-90.194, 8.126, 32.1621, 0.28", "-94.9668, 8.69756, 33.1353, 0.28", "-96.5971, 8.90726, 32.9441, 0.55", "-100.161, 9.28491, 31.9814, 0.28", "-103.336, 9.55631, 30.9258, 0.83", "-107.118, 9.87961, 29.6684, 0.28", "-110.746, 10.1898, 28.4623, 0.28", "-116.82, 10.6268, 25.3525, 0.28", "-118.043, 10.7133, 24.5675, 0.83", "-119.893, 10.8743, 23.0156, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-17.1275, 43.8274, -14.0656, 0.55", "-18.0056, 44.1115, -14.7712, 0.55", "-19.5539, 44.6124, -16.0151, 0.55", "-21.0486, 45.096, -17.2161, 0.83", "-23.7454, 45.9685, -19.3829, 0.55", "-25.4357, 46.5153, -20.7411, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-17.1275, 43.8274, -14.0656, 0.55", "-15.7315, 47.2205, -14.7629, 0.55", "-15.1179, 48.9054, -14.9908, 0.55", "-14.6404, 50.3519, -15.0465, 0.83", "-14.0299, 52.2559, -15.019, 0.55", "-13.6476, 53.4796, -14.9905, 0.83", "-13.0718, 55.3019, -14.9207, 0.55", "-12.6608, 56.6882, -14.7785, 0.83", "-12.0009, 58.6794, -14.6279, 0.28", "-11.5844, 59.7918, -14.5799, 0.83", "-10.8237, 61.6219, -14.5471, 0.55", "-10.1998, 63.0573, -14.5502, 0.83", "-9.19483, 65.2567, -14.6119, 0.55", "-7.998, 67.7171, -14.7618, 0.83", "-6.84392, 69.9985, -14.9956, 0.83", "-5.28304, 73.034, -15.3011, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "6.4542, 49.8762, 21.6831, 0.83", "7.80649, 53.7843, 22.9707, 0.83", "9.08932, 58.111, 24.3013, 0.83", "9.75437, 60.8069, 25.1912, 0.83", "10.566, 64.5681, 26.4951, 0.83", "11.424, 68.8108, 27.9677, 0.83", "12.2858, 73.5239, 29.5736, 0.83", "12.9791, 78.0295, 31.1394, 0.83", "13.5712, 82.5155, 32.775, 0.83", "13.865, 85.2215, 33.7035, 0.55", "14.1446, 88.1751, 34.5742, 0.55", "14.4348, 90.6404, 35.1373, 0.83", "14.7802, 92.8321, 35.4705, 0.83", "15.1881, 94.8407, 35.6748, 0.55", "15.8094, 97.3631, 35.7027, 0.83", "16.3432, 99.4056, 35.6656, 0.55", "16.789, 101.162, 35.6155, 0.83", "17.4328, 103.893, 35.5346, 0.55", "18.0233, 106.644, 35.3966, 0.83", "18.5682, 109.142, 35.0206, 0.55", "18.8424, 110.501, 34.7365, 0.55", "19.2177, 112.611, 34.258, 0.83", "19.6887, 115.636, 33.5208, 0.83", "20.055, 118.145, 32.9069, 0.55", "20.7772, 123.839, 31.4482, 0.83", "21.1607, 127.147, 30.5924, 0.83", "21.6247, 131.184, 29.615, 0.83", "21.8955, 133.641, 29.1387, 0.83", "22.0457, 135.62, 28.8726, 0.83", "22.121, 137.583, 28.7607, 0.55", "22.1245, 139.831, 28.7806, 0.55", "22.042, 142.404, 28.7642, 0.83", "21.7362, 147.195, 28.659, 0.83", "21.4876, 150.985, 28.5396, 1.11", "21.2724, 153.866, 28.4158, 0.55", "20.9575, 157.033, 28.2551, 1.11", "20.3468, 161.496, 28.0011, 0.83", "19.7766, 165.203, 27.7149, 0.83", "19.3782, 167.67, 27.4237, 0.83", "19.0449, 170.123, 27.0638, 0.55", "18.6572, 173.56, 26.4974, 0.55", "18.5957, 174.367, 26.3515, 0.55", "18.4773, 177.358, 25.8624, 0.55", "18.4657, 179.534, 25.4597, 0.28", "18.6009, 183.011, 24.6883, 0.55", "18.9676, 186.952, 23.6948, 0.55", "19.2609, 189.167, 23.0936, 0.55", "19.812, 193.023, 22.0401, 0.83", "20.44, 197.096, 20.9228, 0.83", "20.8942, 199.985, 19.992, 0.83", "21.1388, 201.655, 19.3527, 0.55", "21.3549, 203.135, 18.7375, 0.83", "21.593, 205.523, 17.7696, 0.83", "21.7246, 208.564, 16.5659, 0.83", "21.7032, 212.415, 15.3125, 0.83", "21.6188, 214.856, 14.5932, 0.83", "21.5116, 217.121, 13.8547, 0.83", "21.3487, 220.321, 12.7192, 0.55", "21.1042, 223.667, 11.4944, 0.55", "20.9196, 226.103, 10.6455, 0.55", "20.7484, 228.807, 9.73211, 0.83", "20.5552, 232.922, 8.28739, 1.11", "20.4716, 237.221, 6.90259, 0.55", "20.5419, 239.72, 6.25209, 0.55", "20.6957, 242.622, 5.6422, 0.55", "20.9548, 245.5, 5.16396, 0.83", "21.4601, 248.96, 4.76367, 0.83", "22.3876, 253.709, 4.40096, 0.83", "23.8251, 259.355, 3.96869, 0.83", "24.8101, 262.615, 3.66182, 0.55", "25.8835, 265.83, 3.29225, 0.55", "27.3428, 269.843, 2.7741, 0.83", "28.0089, 271.724, 2.46481, 0.83", "28.9006, 274.713, 1.87867, 0.83", "29.6664, 278.278, 1.18716, 0.83", "29.9902, 281.265, 0.708143, 0.28", "30.0025, 282.83, 0.493316, 0.83", "29.736, 287.334, -0.0694299, 0.83", "29.3358, 290.942, -0.449626, 0.83", "28.6907, 294.477, -0.717826, 0.83", "27.8281, 298.134, -0.887877, 0.83", "27.1572, 300.575, -0.956724, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "6.4542, 49.8762, 21.6831, 0.83", "4.56728, 51.5323, 23.3915, 0.83", "3.21228, 52.99, 24.7796, 0.55", "1.03223, 55.3537, 27.0103, 0.55", "-1.00722, 57.5662, 29.0883, 0.55", "-3.31625, 59.84, 31.3454, 0.55", "-5.05571, 61.3417, 33.0045, 0.55", "-8.09519, 63.5131, 35.8914, 0.55", "-10.3028, 64.7542, 37.8533, 0.55", "-13.3949, 65.952, 40.2377, 0.55", "-18.3894, 66.8392, 43.499, 0.55", "-21.3813, 66.8896, 45.1278, 0.55", "-24.668, 66.3604, 46.6597, 0.55", "-26.6375, 65.7154, 47.3824, 0.55", "-28.2295, 64.9425, 47.8367, 0.55", "-31.1883, 63.0273, 48.4099, 0.28", "-32.6308, 61.8754, 48.5962, 0.83", "-34.5715, 60.1723, 48.8217, 0.55", "-35.8139, 58.89, 48.8819, 0.55", "-37.3495, 56.8795, 48.8236, 0.55", "-38.7342, 54.7346, 48.6561, 0.83", "-39.8764, 52.8102, 48.4284, 0.55", "-40.8256, 51.1714, 48.1529, 0.55", "-43.0043, 47.3179, 47.3772, 0.55", "-45.1857, 43.6602, 46.5541, 0.83", "-46.9171, 40.9667, 45.8452, 0.83", "-48.7668, 38.2735, 44.8705, 0.83", "-51.0061, 35.2927, 43.6639, 0.55", "-52.1022, 33.9489, 43.1514, 0.28", "-53.5247, 32.3741, 42.6182, 0.55", "-55.2441, 30.7011, 42.0287, 0.28", "-58.9801, 27.3135, 40.9515, 0.55", "-61.3242, 25.3196, 40.3946, 0.55", "-63.6284, 23.4303, 40.0015, 0.28", "-65.7179, 21.7405, 39.738, 0.55", "-69.3132, 18.69, 39.3946, 0.55", "-70.5592, 17.5832, 39.3388, 0.83", "-72.7488, 15.4968, 39.3313, 0.55", "-75.714, 12.343, 39.1909, 0.55", "-77.6548, 9.83461, 39.0144, 0.83", "-79.5434, 6.72843, 38.8244, 0.55", "-80.6522, 4.26603, 38.6772, 0.55", "-81.5519, 1.74877, 38.5136, 0.55", "-81.9072, 0.39, 38.4201, 0.83", "-82.5922, -3.14702, 38.1325, 0.55", "-83.2022, -7.31857, 37.7739, 0.28", "-83.9727, -13.3712, 37.2638, 0.28", "-84.2871, -15.9202, 36.9577, 0.83", "-84.8827, -20.9292, 36.2896, 0.28", "-85.1003, -22.6845, 36.0676, 0.83", "-85.2462, -23.7778, 35.9404, 0.28", "-85.4195, -25.5027, 35.7102, 0.83", "-85.7817, -28.9403, 35.2509, 0.28", "-85.9835, -30.2506, 35.1116, 0.55", "-86.6224, -33.1894, 34.8698, 0.28", "-87.0415, -34.8828, 34.7429, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.9377, 43.2906, 17.4519, 0.83", "13.582, 44.5805, 15.3262, 0.83", "14.3853, 46.2248, 12.9369, 0.83", "14.9081, 47.2776, 11.5762, 0.83", "18.2817, 53.6364, 4.24405, 0.55", "19.2979, 55.3961, 2.5075, 0.55", "19.8958, 56.3517, 1.70959, 0.55", "20.7204, 57.5757, 0.822066, 0.55", "21.5964, 58.7983, 0.213053, 1.11", "22.6556, 60.248, -0.0856864, 0.55", "24.5146, 62.7157, 0.0752438, 0.55", "26.1002, 64.9388, 0.307436, 0.55", "27.118, 66.3868, 0.513363, 0.55", "28.3563, 68.2139, 0.93047, 0.83", "29.739, 70.4418, 1.57086, 0.55", "30.6992, 72.2236, 2.13982, 1.11", "31.62, 74.0831, 2.80389, 0.55", "32.4885, 75.9117, 3.4867, 0.83", "33.9468, 79.0964, 4.63772, 0.55", "34.7019, 80.7679, 5.20626, 0.55", "35.712, 83.0829, 5.92081, 0.55", "36.524, 84.9012, 6.36103, 0.55", "37.0216, 86.031, 6.57479, 0.28", "38.0272, 88.2757, 6.87564, 0.55", "38.7862, 89.9667, 6.99727, 0.28", "39.5067, 91.5018, 7.07275, 0.55", "40.8836, 94.3876, 7.16437, 0.55", "41.6213, 96.0155, 7.19498, 0.55", "42.6473, 98.2793, 7.20412, 0.28", "43.6107, 100.612, 6.52785, 0.83", "44.4172, 102.649, 5.57349, 0.28", "44.6012, 103.095, 5.29058, 0.55", "45.0462, 104.086, 4.41264, 0.28", "45.3352, 104.685, 3.77172, 0.83", "48.9806, 111.779, -4.7789, 0.55", "50.4621, 114.388, -8.05334, 0.55", "50.9322, 115.178, -9.01579, 0.83", "52.1161, 117.034, -10.9133, 0.55", "52.7374, 117.952, -11.6113, 0.55", "53.4599, 119.067, -11.8531, 0.83", "54.2997, 120.491, -11.3904, 0.28", "54.6458, 121.266, -11.2441, 0.55", "55.4216, 123.462, -10.654, 0.28", "55.8403, 124.91, -10.06, 0.55", "56.1845, 126.165, -9.56167, 0.28", "56.3931, 127.42, -9.2096, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.9377, 43.2906, 17.4519, 0.55", "14.8263, 42.6852, 18.3111, 0.55", "17.6603, 41.7767, 19.6005, 0.28", "19.1472, 41.3, 20.277, 0.55", "21.8785, 40.4243, 21.5197, 0.55", "25.4496, 39.2795, 23.1444, 0.55", "27.4021, 38.6535, 24.0327, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "9.27515, -29.8068, -28.5406, 0.55", "5.8874, -28.3036, -29.6447, 0.55", "4.86602, -27.9172, -30.2822, 0.83", "2.50537, -27.0659, -31.929, 0.55", "1.53446, -26.7397, -32.5924, 0.55", "-2.85125, -25.7137, -36.2292, 0.28", "-3.7561, -25.5611, -37.0105, 0.83", "-7.37052, -25.3066, -40.6361, 0.55", "-7.75536, -25.3059, -41.0382, 0.55", "-8.78, -25.3714, -42.1444, 0.83", "-13.3292, -25.82, -46.9633, 0.55", "-14.2078, -25.9363, -47.861, 0.55", "-15.1955, -26.0762, -48.897, 0.83", "-17.35, -26.3454, -51.3045, 0.55", "-17.799, -26.3679, -51.8389, 0.55", "-18.6136, -26.3345, -52.9043, 0.55", "-21.872, -25.8464, -57.3125, 0.28", "-22.7438, -25.6735, -58.5725, 0.83", "-25.6612, -24.9211, -62.8903, 0.55", "-26.4017, -24.6654, -64.0164, 0.83", "-30.137, -23.0224, -69.7203, 0.55", "-31.1513, -22.4236, -71.3691, 0.28", "-31.7286, -21.997, -72.3492, 0.83", "-32.6749, -21.1592, -74.0556, 0.55", "-33.3137, -20.439, -75.2675, 0.83", "-34.5865, -18.6274, -78.0232, 0.55", "-35.9818, -15.7448, -81.6486, 0.28", "-36.164, -15.3008, -82.1942, 0.55", "-36.5944, -14.1128, -83.6297, 0.28", "-36.7539, -13.6297, -84.2125, 0.55", "-37.2587, -11.9863, -86.1506, 0.28", "-37.4084, -11.4028, -86.8104, 0.55", "-37.8923, -9.57348, -88.8569, 0.28", "-38.0897, -8.9031, -89.6537, 0.55", "-38.591, -7.42872, -91.4134, 0.28", "-38.7254, -7.09937, -91.8074, 0.55", "-39.2797, -5.77218, -93.2815, 0.28", "-39.4751, -5.31201, -93.7842, 0.55", "-40.133, -3.88141, -95.2632, 0.28", "-40.5417, -3.18587, -96.0784, 0.55", "-41.8731, -1.17412, -98.4334, 0.28", "-42.4762, -0.363426, -99.4127, 0.55", "-44.3219, 1.8169, -102.416, 0.28", "-44.9018, 2.46712, -103.399, 0.55", "-46.8393, 4.51128, -107.002, 0.28", "-47.5243, 5.17678, -108.309, 0.28", "-48.3565, 5.94086, -109.917, 0.55", "-49.8648, 7.2506, -112.676, 0.28", "-50.1344, 7.50137, -113.152, 0.55", "-51.3431, 8.55008, -115.364, 0.28", "-51.9284, 9.05263, -116.413, 0.83", "-53.1726, 10.0693, -118.527, 0.55", "-53.9709, 10.7302, -119.901, 0.55", "-55.3392, 11.9321, -122.273, 0.55", "-58.6882, 14.8999, -128.459, 0.83", "-59.8237, 15.9158, -130.709, 0.28", "-60.406, 16.4483, -131.969, 0.55", "-62.4922, 18.3942, -137.023, 0.55", "-62.9801, 18.9098, -138.403, 0.55", "-64.4965, 20.5522, -143.124, 0.83", "-65.4809, 21.5822, -146.329, 0.28", "-66.1721, 22.0493, -148.465, 0.55", "-66.9962, 22.3107, -151.083, 0.28", "-67.3464, 22.3121, -152.212, 0.83", "-69.3715, 21.8409, -158.535, 0.55", "-70.1648, 21.4865, -160.944, 0.55", "-72.1004, 20.4241, -166.378, 0.55", "-75.3566, 18.7167, -174.293, 0.55", "-76.1774, 18.3034, -176.107, 0.55", "-78.3496, 17.2735, -180.62, 0.55", "-80.7456, 16.2506, -185.297, 0.55", "-82.7133, 15.5153, -188.903, 0.55", "-85.9166, 14.4507, -194.228, 0.55", "-89.3875, 13.4718, -199.552, 0.55", "-90.1754, 13.2712, -200.743, 0.55", "-93.6249, 12.3567, -205.958, 0.55", "-94.4612, 12.1322, -207.211, 0.28", "-94.6591, 12.0729, -207.515, 0.55", "-102.324, 9.45051, -219.334, 0.28", "-103.031, 9.20021, -220.392, 0.83", "-107.209, 7.60355, -226.602, 0.28", "-107.48, 7.49806, -226.998, 0.55", "-109.469, 6.75751, -229.883, 0.28", "-110.288, 6.45001, -231.047, 0.55", "-112.0, 5.73879, -233.164, 0.28", "-112.583, 5.48715, -233.899, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "9.27515, -29.8068, -28.5406, 0.55", "10.6896, -30.1759, -31.3626, 0.55", "11.9359, -30.4442, -33.5484, 0.55", "14.6551, -31.0351, -38.6227, 0.83", "15.3783, -31.2364, -39.9843, 0.83", "16.227, -31.5024, -41.5614, 0.83", "16.9515, -31.7207, -42.862, 0.83", "18.2519, -32.0927, -45.1067, 0.83", "20.4236, -32.8082, -48.8682, 0.83", "21.7974, -33.1902, -51.0854, 0.83", "23.2653, -33.5454, -53.5891, 0.83", "24.8996, -33.8758, -56.3725, 0.83", "26.3867, -34.137, -58.9039, 0.83", "28.8379, -34.5259, -62.9115, 0.83", "30.3866, -34.6953, -65.3039, 0.83", "32.3514, -34.786, -68.3712, 0.83", "33.6014, -34.7958, -70.3595, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "20.0309, -41.403, 3.31026, 0.55", "20.6796, -41.4281, 4.07914, 0.55", "21.2118, -41.4909, 4.72851, 0.28", "21.5438, -41.564, 5.14486, 0.55", "22.1027, -41.7146, 5.85461, 1.11", "23.0815, -42.0513, 7.18999, 0.55", "23.4454, -42.1974, 7.71704, 0.55", "23.8299, -42.394, 8.32491, 0.83", "24.2254, -42.6172, 8.98576, 0.28", "24.2254, -42.6172, 8.98576, 0.83", "24.8477, -43.1711, 10.1598, 0.28", "25.0125, -43.3387, 10.4771, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "20.0309, -41.403, 3.31026, 0.83", "21.8487, -43.8703, 2.96013, 0.83", "23.5452, -45.6865, 2.43679, 0.55", "24.7185, -46.6938, 1.93778, 0.83", "25.6758, -47.5156, 1.53063, 0.83", "27.0026, -48.6547, 0.966321, 0.83", "28.1679, -49.6551, 0.470721, 0.83", "30.6479, -51.2554, -0.748444, 0.83", "32.5387, -52.2586, -1.8597, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-50.9062, -30.1176, 9.84197, 0.55", "-52.0525, -27.2119, 8.37469, 0.55", "-53.4531, -23.2035, 6.40805, 0.83", "-55.3503, -17.6024, 3.53484, 0.55", "-56.1791, -14.8858, 2.2355, 0.55", "-57.2949, -10.916, 0.433401, 1.11", "-58.2598, -7.38212, -1.09313, 0.83", "-59.203, -3.6576, -2.6427, 0.55", "-59.5594, -2.13482, -3.23346, 0.55", "-60.5947, 1.57727, -4.39182, 0.55", "-60.8121, 2.33035, -4.6261, 1.11", "-61.4785, 4.15925, -4.84171, 0.55", "-62.4002, 5.97911, -4.51614, 0.83", "-63.4829, 7.64929, -3.83438, 0.55", "-64.894, 9.58141, -2.88372, 0.55", "-65.9953, 10.9445, -2.22947, 0.83", "-71.0766, 17.5164, -0.0613889, 0.55", "-72.4037, 19.3656, 0.352834, 0.83", "-74.0806, 21.7869, 0.607241, 0.55", "-75.896, 24.3218, 0.60268, 0.55", "-77.5735, 26.6951, 0.199315, 1.11", "-80.5421, 31.2055, -1.1591, 0.55", "-81.4449, 32.6865, -1.74473, 0.55", "-83.6792, 36.6197, -3.2993, 0.55", "-85.0659, 39.2009, -4.32422, 0.55", "-86.8466, 42.5349, -5.55097, 1.11", "-88.8842, 46.2475, -6.77625, 0.55", "-90.1891, 48.503, -7.34876, 1.11", "-91.856, 51.2994, -8.02597, 0.28", "-92.4536, 52.2715, -8.20799, 0.55", "-93.4852, 53.8326, -8.40555, 0.28", "-95.0051, 55.8261, -8.449, 0.83", "-97.5367, 58.7382, -8.36837, 0.28", "-98.509, 59.8126, -8.25428, 0.55", "-102.628, 64.1782, -7.46785, 0.28", "-104.19, 65.8584, -7.11262, 0.83", "-106.4, 68.3048, -6.58484, 0.55", "-108.62, 70.8192, -6.04644, 0.55", "-110.843, 73.3931, -5.5627, 0.55", "-112.501, 75.4149, -5.20454, 0.83", "-114.382, 77.8577, -4.85042, 0.28", "-116.109, 80.2743, -4.55198, 0.55", "-118.049, 83.4906, -4.35701, 0.55", "-118.37, 84.1536, -4.33884, 0.83", "-119.519, 87.2026, -4.66159, 0.28", "-119.944, 88.9582, -4.97623, 0.55", "-120.147, 90.4202, -5.46067, 0.28", "-120.39, 93.3854, -6.96541, 0.55", "-120.476, 96.4963, -8.89257, 0.55", "-120.562, 100.909, -11.8802, 0.28", "-120.47, 103.828, -14.3949, 0.83", "-120.179, 108.004, -18.4265, 0.55", "-119.866, 111.009, -21.5386, 0.55", "-119.739, 112.266, -22.8993, 0.55", "-119.564, 114.165, -25.1566, 0.83", "-119.273, 119.393, -31.3183, 0.28", "-119.269, 120.46, -32.627, 0.83", "-119.371, 121.941, -34.3174, 0.28", "-119.621, 123.459, -35.8654, 0.55", "-120.953, 127.119, -39.3722, 0.83", "-121.718, 128.285, -40.0026, 0.83", "-123.374, 130.149, -40.054, 0.28", "-124.239, 131.038, -39.8476, 0.55", "-126.337, 133.13, -38.9355, 0.28", "-127.824, 134.759, -38.0508, 0.55", "-131.893, 139.325, -34.0693, 0.28", "-132.688, 140.244, -33.1418, 0.55", "-133.866, 141.767, -31.563, 0.28", "-134.745, 143.003, -30.2347, 0.83", "-136.119, 145.064, -27.973, 0.83", "-139.694, 151.146, -21.6323, 0.28", "-140.165, 152.074, -20.7544, 0.55", "-141.694, 155.361, -17.7663, 0.28", "-142.502, 157.257, -16.1322, 0.83", "-143.306, 159.342, -14.4577, 0.28", "-143.909, 161.092, -13.256, 0.83", "-144.992, 164.937, -11.3964, 0.28", "-145.428, 166.706, -10.6802, 0.83", "-146.133, 170.051, -9.67902, 0.28", "-146.501, 172.105, -9.42307, 0.55", "-146.805, 174.258, -9.50067, 0.28", "-147.066, 176.784, -10.1439, 0.55", "-147.318, 179.876, -11.4441, 0.28", "-147.392, 181.168, -12.1286, 0.83", "-147.54, 184.347, -14.0387, 0.28", "-147.641, 186.709, -15.8316, 0.83", "-147.795, 190.916, -19.223, 0.28", "-147.807, 192.276, -20.5297, 0.83", "-147.753, 194.688, -23.1553, 0.28", "-147.685, 195.638, -24.3668, 0.83", "-147.114, 201.158, -31.9271, 0.28", "-146.852, 203.274, -35.1848, 0.83", "-146.131, 208.071, -42.9767, 0.28", "-145.787, 209.785, -45.9631, 0.83", "-145.115, 212.856, -51.6149, 0.28", "-144.899, 213.805, -53.4442, 0.55", "-144.372, 216.656, -58.6965, 0.28", "-144.261, 217.589, -60.372, 0.28", "-144.236, 219.952, -63.9963, 0.55", "-144.822, 223.478, -69.435, 0.28", "-145.501, 225.896, -73.134, 0.83", "-146.159, 228.07, -76.7882, 0.28", "-146.523, 229.139, -78.6021, 0.55", "-147.234, 230.855, -81.2847, 0.28", "-151.125, 238.953, -92.5983, 0.28", "-151.6, 239.915, -93.8256, 0.83", "-154.767, 246.292, -101.501, 0.28", "-155.097, 246.995, -102.374, 0.83", "-158.829, 255.302, -111.593, 0.28", "-159.175, 256.148, -112.166, 0.55", "-160.778, 260.061, -111.605, 0.28", "-161.264, 261.263, -111.557, 0.55", "-162.086, 263.05, -111.372, 0.28", "-162.605, 264.667, -112.224, 0.55", "-163.262, 267.257, -114.425, 0.28", "-163.572, 268.48, -115.481, 1.11", "-164.525, 271.243, -117.784, 0.28", "-164.934, 272.362, -118.822, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-50.9062, -30.1176, 9.84197, 0.55", "-56.2282, -32.2214, 9.57125, 0.55", "-58.5873, -33.0501, 9.54169, 0.55", "-62.2127, -34.2586, 9.65584, 0.83", "-65.9193, -35.5187, 9.81707, 0.55", "-69.0141, -36.775, 10.063, 0.55", "-70.4572, -37.4503, 10.197, 0.83", "-72.5246, -38.6487, 10.5139, 0.55", "-76.0352, -41.114, 11.554, 0.55", "-77.7493, -42.5711, 12.2714, 0.55", "-80.7648, -45.5883, 13.7803, 0.55", "-82.0522, -47.0842, 14.5814, 0.28", "-84.8665, -50.7209, 16.5481, 0.83", "-88.0497, -55.1449, 19.1683, 0.55", "-88.6077, -55.9378, 19.679, 0.55", "-90.4035, -58.3358, 21.3087, 0.83", "-92.6064, -60.9125, 23.1486, 0.55", "-94.2536, -62.6861, 24.4613, 0.83", "-98.8512, -67.0927, 27.5134, 0.55", "-101.005, -68.9151, 28.5724, 0.83", "-103.754, -70.9691, 29.6897, 0.28", "-105.966, -72.3564, 30.3689, 0.55", "-108.46, -73.637, 30.8149, 0.55", "-112.185, -75.2563, 31.1313, 0.28", "-113.831, -75.8422, 31.07, 0.28", "-115.259, -76.3009, 30.9958, 0.55", "-119.118, -77.6999, 30.7615, 0.28", "-120.554, -78.3878, 30.7696, 0.55", "-121.255, -78.774, 30.7782, 0.28", "-123.109, -79.9603, 30.9223, 0.28", "-124.341, -80.7611, 31.0239, 0.55", "-126.793, -82.471, 31.1876, 0.28", "-129.271, -84.3668, 31.234, 0.55", "-132.319, -86.7214, 31.3647, 0.28", "-134.609, -88.5651, 31.4785, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-90.0561, 3.09785, 33.3224, 0.28", "-92.2471, 5.16728, 33.6543, 0.28", "-92.8295, 5.7941, 33.7616, 0.55", "-94.0801, 7.17061, 34.0195, 0.28", "-94.3547, 7.50024, 34.0912, 0.55", "-96.9029, 10.7758, 34.8831, 0.28", "-98.8817, 13.3435, 35.6182, 0.28", "-100.024, 14.9978, 36.1626, 0.28", "-100.823, 16.2463, 36.6158, 0.55", "-102.575, 19.2314, 37.6348, 0.28", "-103.221, 20.3478, 38.0463, 0.55", "-104.209, 22.1087, 38.7897, 0.28", "-104.712, 23.101, 39.2343, 0.55", "-105.491, 24.7312, 39.9965, 0.28", "-106.434, 26.9878, 41.0183, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-90.0561, 3.09785, 33.3224, 0.28", "-87.6905, 2.95632, 31.9873, 0.28", "-87.0143, 2.98038, 31.5831, 0.83", "-83.7636, 3.06397, 29.9086, 0.28", "-83.4256, 3.06755, 29.7441, 0.83", "-80.4794, 2.95492, 28.4837, 0.28", "-79.6148, 2.89049, 28.1382, 0.83", "-73.9583, 2.37962, 26.1115, 0.28", "-70.7852, 2.00714, 25.0717, 0.28", "-70.0939, 1.89894, 24.8795, 1.11", "-66.5149, 1.19429, 24.0061, 0.28", "-65.4655, 0.97723, 23.7418, 0.55", "-61.6194, 0.19609, 22.7016, 0.28", "-59.8429, -0.205212, 22.2003, 0.28", "-58.7293, -0.427107, 21.8279, 0.55", "-57.0433, -0.717896, 21.2245, 0.28", "-52.0493, -1.38647, 19.0825, 0.28", "-49.432, -1.71738, 17.8987, 0.28", "-48.8729, -1.80787, 17.6045, 0.83", "-47.6755, -2.03738, 16.9118, 0.28", "-47.6755, -2.03738, 16.9118, 0.83", "-45.1245, -2.69846, 15.3891, 0.28", "-44.5034, -2.98357, 15.0209, 0.83", "-42.6978, -3.84275, 13.6077, 0.28", "-41.6108, -4.36021, 12.6847, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-25.4357, 46.5153, -20.7411, 0.28", "-26.4792, 45.1612, -21.9038, 0.28", "-27.2752, 44.114, -22.9329, 0.83", "-28.1425, 42.9663, -24.0375, 0.55", "-29.0149, 41.805, -25.3483, 1.11", "-31.3257, 38.5121, -29.3695, 0.28", "-31.4827, 38.2901, -29.6839, 0.83", "-32.157, 37.3101, -31.3256, 0.83", "-32.5574, 36.7046, -32.4321, 0.83", "-33.9918, 34.5195, -36.7148, 0.28", "-34.3666, 33.9666, -37.799, 0.83", "-35.7246, 32.184, -41.9405, 0.28", "-35.9632, 31.8771, -42.7239, 0.55", "-36.3685, 31.3668, -44.1075, 0.55", "-36.778, 30.8539, -45.5871, 0.55", "-37.3228, 30.2051, -47.4728, 1.11", "-39.4513, 27.7021, -55.7119, 0.55", "-39.726, 27.3491, -56.9764, 0.28", "-39.805, 27.2602, -57.3593, 0.55", "-40.3354, 26.754, -59.9053, 0.28", "-40.538, 26.5433, -61.0376, 0.83", "-41.6497, 25.3393, -67.8511, 0.28", "-41.7029, 25.2845, -68.1432, 0.55", "-42.9035, 24.0728, -74.6517, 0.28", "-43.1096, 23.8347, -75.8286, 0.55", "-43.7354, 23.0837, -79.1129, 0.28", "-43.8456, 22.9384, -79.6802, 0.83", "-44.4025, 22.1609, -82.2731, 0.28", "-44.6815, 21.7634, -83.5579, 0.83", "-46.0249, 19.6072, -89.7464, 0.28", "-46.385, 19.0724, -91.1593, 0.83", "-47.9067, 16.9766, -96.2878, 0.55", "-48.1017, 16.6991, -96.9258, 0.83", "-49.1768, 15.097, -100.353, 0.28", "-49.5205, 14.5741, -101.363, 0.55", "-50.9562, 12.3206, -105.217, 0.28", "-51.4643, 11.4875, -106.601, 0.83", "-54.0131, 7.25785, -112.979, 0.28", "-54.1409, 7.04173, -113.3, 0.83", "-54.9123, 5.66025, -115.256, 0.28", "-55.105, 5.31753, -115.772, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-25.4357, 46.5153, -20.7411, 0.55", "-26.4984, 49.0833, -21.0143, 0.55", "-27.2834, 51.0316, -21.2734, 0.55", "-28.0794, 53.0946, -21.6777, 0.28", "-28.5975, 54.4623, -21.9808, 1.38", "-29.366, 56.4644, -22.5115, 0.55", "-30.2326, 58.7015, -23.1393, 0.55", "-30.6196, 59.6517, -23.3936, 0.83", "-31.2995, 61.3512, -23.9081, 0.28", "-31.6496, 62.3257, -24.2175, 0.55", "-32.2183, 64.0385, -24.7128, 0.28", "-32.6218, 65.2729, -24.9861, 0.83", "-33.4012, 67.7857, -25.2875, 0.28", "-33.7743, 69.1378, -25.4524, 0.55", "-34.1542, 70.7558, -25.6246, 0.28", "-34.3916, 72.1335, -25.8366, 0.83", "-34.6651, 74.718, -26.2858, 0.28", "-34.8079, 77.0191, -26.8256, 0.83", "-34.8463, 80.9066, -27.9013, 0.28", "-34.7896, 82.2581, -28.3144, 0.83", "-34.5225, 85.9795, -29.7471, 0.28", "-34.3387, 87.7097, -30.5144, 0.83", "-34.0558, 89.8432, -31.5463, 0.28", "-33.8268, 91.5307, -32.4244, 0.55", "-33.5984, 93.2168, -33.2934, 0.83", "-33.2225, 96.9409, -35.2138, 0.28", "-33.1497, 98.3914, -35.9241, 0.83", "-33.1367, 100.349, -36.8608, 0.83", "-33.224, 102.295, -37.7333, 0.28", "-33.4525, 103.791, -38.4442, 0.83", "-33.8151, 105.283, -39.1042, 0.28", "-34.1446, 106.339, -39.4973, 0.55", "-34.4568, 107.104, -39.7904, 0.28", "-35.2523, 108.666, -40.3123, 0.55", "-36.9018, 111.54, -41.0065, 0.28", "-37.5961, 112.555, -41.2306, 0.55", "-38.4277, 113.643, -41.4336, 0.28", "-39.393, 114.803, -41.6116, 0.83", "-40.7114, 116.277, -41.7483, 0.28", "-42.0359, 117.702, -41.7799, 0.83", "-44.0269, 119.807, -41.6558, 0.28", "-44.8083, 120.648, -41.6407, 0.83", "-45.7004, 121.649, -41.6388, 0.28", "-46.8374, 123.041, -41.6678, 0.28", "-47.3215, 123.725, -41.7504, 0.55", "-48.3476, 125.494, -42.1045, 0.28", "-49.08, 127.085, -42.6759, 0.55", "-49.4525, 128.015, -43.118, 0.55", "-49.9559, 129.415, -43.8777, 0.83", "-50.8827, 132.002, -45.5488, 0.28", "-51.549, 133.893, -46.8979, 0.83", "-52.4819, 136.538, -49.0623, 0.28", "-52.8444, 137.508, -49.9264, 0.28", "-53.3214, 138.861, -51.1668, 0.83", "-54.1875, 141.421, -53.6035, 0.28", "-54.5105, 142.367, -54.4721, 0.83", "-55.6363, 145.849, -57.5278, 0.28", "-56.187, 147.542, -58.9842, 1.11", "-57.2376, 150.874, -61.8925, 0.28", "-57.6316, 152.282, -63.1341, 0.55", "-57.9494, 153.595, -64.1925, 0.28", "-58.1992, 154.666, -64.9867, 0.55", "-58.7575, 157.483, -66.8814, 0.28", "-58.9928, 158.612, -67.7241, 0.55", "-59.3794, 160.34, -69.0702, 0.28", "-59.6077, 161.469, -70.0355, 0.55", "-59.8355, 162.83, -71.2702, 0.28", "-60.1229, 164.847, -73.136, 0.55", "-60.5695, 168.562, -76.3722, 0.28", "-60.7346, 170.099, -77.7675, 0.55", "-60.9352, 172.293, -79.7713, 0.28", "-61.0015, 173.515, -80.9412, 0.83", "-61.0147, 175.177, -82.4987, 0.28", "-60.9869, 176.369, -83.6451, 0.83", "-60.889, 178.426, -85.5947, 0.28", "-60.851, 179.356, -86.566, 0.55", "-60.7711, 180.665, -87.9871, 0.28", "-60.6679, 181.768, -89.2547, 0.55", "-60.3962, 184.968, -92.779, 0.28", "-60.3291, 186.076, -93.9402, 0.28", "-60.3523, 188.51, -96.164, 0.55", "-60.4414, 190.533, -97.8092, 0.28", "-60.5496, 191.624, -98.5656, 0.55", "-61.0485, 194.502, -100.196, 0.28", "-61.5479, 196.128, -100.826, 0.83", "-62.5623, 198.446, -101.493, 0.28", "-63.0065, 199.145, -101.629, 0.55", "-63.8583, 200.17, -101.8, 0.28", "-64.7874, 201.11, -101.996, 0.55", "-66.9872, 202.976, -102.427, 0.28", "-67.5029, 203.38, -102.503, 0.55", "-70.7679, 205.916, -103.069, 0.28", "-71.5714, 206.616, -103.232, 0.55", "-72.6346, 207.701, -103.444, 0.28", "-73.6758, 208.852, -103.669, 0.55", "-75.2744, 210.89, -104.027, 0.28", "-76.2137, 212.208, -104.213, 0.55", "-77.9659, 215.294, -104.25, 0.28", "-78.573, 216.552, -104.257, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.28304, 73.034, -15.3011, 0.55", "-3.47751, 74.4641, -16.2534, 0.55", "-1.11055, 76.8516, -19.0485, 0.55", "-0.231441, 77.8824, -20.5382, 0.83", "0.463191, 78.7375, -21.8618, 0.83", "2.3459, 81.1718, -25.7518, 0.28", "3.04127, 82.0868, -27.1869, 0.83", "5.1361, 85.5477, -33.5008, 0.55", "5.46786, 86.3313, -35.1179, 0.28", "5.57403, 86.6996, -35.9422, 0.28", "5.6601, 87.3142, -37.3934, 0.55", "5.68413, 88.0508, -39.098, 0.55", "5.65835, 90.63, -44.6843, 0.28", "5.66449, 91.8545, -47.0889, 0.83", "5.72827, 94.5376, -52.1033, 0.83", "5.82785, 96.9046, -56.3758, 0.83", "6.02461, 99.9356, -61.7338, 0.28", "6.12682, 100.993, -63.5374, 0.28", "6.2345, 101.574, -64.4165, 0.55", "6.99098, 104.154, -67.9674, 0.28", "7.14566, 104.539, -68.4448, 0.55", "8.45752, 107.03, -71.4503, 0.28", "8.97961, 107.877, -72.7414, 0.55", "9.50076, 108.633, -74.0933, 0.28", "9.70895, 108.915, -74.6363, 0.55", "11.2534, 110.723, -78.4589, 0.28", "11.7549, 111.243, -79.5947, 0.55", "14.6007, 113.793, -85.6112, 0.28", "15.4362, 114.513, -87.3051, 0.28", "16.3294, 115.259, -88.993, 0.55", "18.2252, 116.842, -92.6082, 0.28", "18.8435, 117.337, -93.6995, 0.55", "21.3998, 119.324, -98.0777, 0.28", "22.7172, 120.293, -100.184, 0.28", "23.8782, 121.142, -102.081, 0.83", "28.052, 124.005, -108.562, 0.28", "29.1698, 124.726, -110.198, 0.28", "30.7624, 125.696, -112.372, 0.55", "32.1781, 126.515, -114.11, 0.28", "33.1938, 127.042, -115.368, 0.55", "34.2001, 127.528, -116.509, 0.28", "34.8575, 127.823, -116.972, 0.55", "36.4061, 128.576, -118.072, 0.28", "38.6434, 129.843, -119.304, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.28304, 73.034, -15.3011, 0.55", "-5.63964, 76.8001, -13.8693, 0.55", "-5.66094, 79.3033, -12.7933, 0.55", "-5.66405, 80.366, -12.3284, 0.55", "-5.65333, 82.0634, -11.6021, 0.55", "-5.65461, 83.4966, -11.0581, 0.55", "-5.63747, 86.9408, -9.76103, 0.28", "-5.61063, 88.1535, -9.29518, 0.55", "-5.47614, 89.8448, -8.5266, 0.55", "-5.42664, 90.6614, -8.08661, 0.83", "-5.4015, 92.5138, -6.97752, 0.28", "-5.41187, 94.073, -6.04812, 0.83", "-5.50933, 96.915, -4.33439, 0.28", "-5.50911, 97.2411, -4.09709, 0.83", "-5.3411, 99.7116, -2.06794, 0.55", "-5.21346, 100.83, -1.06165, 0.55", "-4.96926, 102.47, 0.461418, 0.83", "-4.44029, 105.45, 3.27977, 0.55", "-3.9684, 107.733, 5.45434, 0.83", "-3.69278, 108.887, 6.57656, 0.28", "-3.42357, 109.903, 7.49799, 0.83", "-3.03421, 111.413, 8.85537, 0.83", "-2.46077, 114.075, 11.1586, 0.83", "-2.11582, 116.321, 12.7315, 0.28", "-2.04406, 117.094, 13.2209, 0.83", "-1.87358, 119.429, 14.7511, 0.83", "-1.74832, 121.477, 16.1234, 0.28", "-1.68043, 122.542, 16.8772, 0.55", "-1.59478, 124.663, 18.2912, 0.28", "-1.60906, 126.856, 19.8535, 0.55", "-1.68876, 129.727, 22.0557, 0.28", "-1.72154, 130.371, 22.5956, 0.83", "-1.79695, 131.675, 23.6681, 0.28", "-1.88046, 133.237, 25.0166, 0.55", "-1.90914, 135.504, 27.1816, 0.28", "-1.90383, 135.94, 27.5738, 0.55", "-1.86783, 136.879, 28.4559, 0.28", "-1.75998, 137.855, 29.4805, 0.83", "-1.49666, 139.129, 30.8791, 0.28", "-1.02901, 140.698, 32.6964, 0.55", "-0.647787, 141.757, 34.0683, 0.28", "-0.42066, 142.417, 34.8849, 0.83", "0.0805322, 143.819, 36.5169, 0.83", "0.577474, 145.239, 38.0423, 0.55", "0.858714, 146.019, 38.7805, 0.83", "2.3728, 150.41, 42.4823, 0.55", "2.91463, 152.077, 43.6985, 0.83", "4.6245, 157.588, 47.002, 0.28", "4.92475, 158.775, 47.4375, 0.55", "5.46322, 161.15, 47.8395, 0.28", "5.77654, 162.578, 47.9078, 0.83", "6.33774, 165.527, 47.4755, 0.28", "6.60586, 167.313, 47.0143, 0.55", "7.02443, 172.326, 44.5645, 0.28", "7.14072, 174.535, 43.3958, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "27.1572, 300.575, -0.956724, 0.55", "27.6027, 303.042, -1.00158, 0.55", "28.0173, 305.995, -1.13746, 0.55", "28.3886, 308.835, -1.28083, 0.83", "28.6217, 310.801, -1.37167, 0.55", "28.8963, 313.246, -1.45332, 1.11", "29.3484, 316.994, -1.51916, 0.55", "29.6917, 319.648, -1.51508, 1.11", "30.0288, 321.647, -1.52338, 0.83", "30.4877, 323.514, -1.49077, 0.55", "31.3388, 325.933, -1.34709, 0.55", "32.3402, 327.989, -1.14006, 0.83", "33.7915, 330.086, -0.870144, 0.55", "35.5846, 332.108, -0.592792, 0.83", "37.1684, 333.61, -0.362457, 0.83", "38.6511, 334.82, -0.161077, 0.83", "39.9304, 335.773, 0.0268058, 1.11", "42.7043, 337.753, 0.366638, 0.83", "43.894, 338.613, 0.507202, 0.55", "45.7656, 340.003, 0.786628, 0.83", "48.5019, 342.174, 1.17814, 0.55", "50.2243, 343.528, 1.44173, 1.11", "52.7973, 345.59, 1.8889, 0.55", "53.6677, 346.328, 2.08124, 0.55", "54.8492, 347.371, 2.34826, 0.55", "57.4564, 349.919, 3.0024, 0.55", "58.4248, 351.0, 3.30439, 0.28", "59.0037, 351.753, 3.51543, 0.55", "59.9752, 353.225, 3.96244, 0.28", "60.7631, 354.536, 4.31197, 0.83", "62.1332, 357.028, 4.90472, 0.55", "62.5661, 357.866, 5.11226, 0.83", "63.4669, 359.674, 5.5112, 0.55", "64.059, 360.844, 5.74252, 0.83", "65.8768, 364.4, 6.38353, 0.28", "67.112, 366.749, 6.76169, 0.83", "68.4147, 369.172, 7.11853, 0.28", "69.5616, 371.308, 7.40663, 0.55", "70.7491, 373.567, 7.67925, 0.55", "71.776, 375.62, 7.82606, 0.55", "72.3027, 376.765, 7.84522, 0.28", "72.7717, 377.875, 7.82094, 0.55", "73.5629, 380.04, 7.70622, 0.28", "74.0088, 381.318, 7.54904, 0.55", "74.7964, 383.645, 7.10869, 0.28", "75.3208, 385.229, 6.75965, 0.28", "76.0477, 387.443, 6.23704, 0.83", "76.6933, 389.428, 5.72555, 0.83", "77.9227, 393.217, 4.74842, 0.55", "78.6261, 395.344, 4.25902, 0.55", "79.1019, 396.721, 4.02961, 0.55", "79.4178, 397.5, 3.91232, 0.28", "79.9021, 398.593, 3.77636, 0.55", "80.3365, 399.522, 3.72325, 0.28", "80.7466, 400.391, 3.66479, 1.11", "82.0094, 403.009, 3.19594, 0.55", "82.8589, 404.923, 2.70488, 0.55", "83.575, 406.604, 2.13158, 0.28", "83.9738, 407.554, 1.7065, 0.83", "85.1678, 410.276, 0.252251, 0.55", "85.9655, 412.033, -0.765742, 0.83", "86.8815, 413.963, -1.99335, 0.83", "87.9138, 415.903, -3.28575, 0.55", "88.8224, 417.418, -4.33782, 0.28", "89.7619, 418.892, -5.34795, 0.55", "90.6463, 420.243, -6.25313, 0.55", "91.8605, 422.009, -7.48183, 1.11", "93.4541, 424.337, -9.05084, 0.55", "94.112, 425.351, -9.68311, 0.55", "94.8083, 426.448, -10.3946, 0.55", "96.3512, 429.049, -12.1782, 0.55", "97.1395, 430.36, -13.1091, 0.83", "98.7164, 433.153, -14.967, 0.28", "99.1593, 433.994, -15.5015, 0.55", "100.398, 436.4, -16.9314, 0.28", "101.005, 437.577, -17.5773, 0.55", "101.939, 439.432, -18.4496, 0.28", "102.776, 441.301, -19.2459, 0.55", "103.178, 442.276, -19.6132, 0.28", "103.803, 443.886, -20.1306, 0.55", "104.785, 446.58, -20.7315, 0.55", "105.323, 447.969, -21.0461, 0.28", "105.746, 449.197, -21.3781, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "27.1572, 300.575, -0.956724, 0.55", "25.884, 302.29, -2.2153, 0.55", "24.3545, 304.428, -3.59124, 1.11", "22.5907, 306.677, -4.99244, 0.55", "22.0311, 307.42, -5.48972, 0.83", "20.7164, 309.225, -6.70725, 0.55", "19.6141, 310.665, -7.70727, 0.55", "18.7539, 311.767, -8.48681, 0.83", "16.1877, 314.958, -10.7906, 0.55", "14.2267, 317.288, -12.4046, 0.55", "13.5452, 318.103, -13.0002, 0.83", "11.6839, 320.29, -14.6548, 0.55", "11.3854, 320.637, -14.9295, 0.83", "10.3917, 321.819, -15.7885, 0.28", "10.2244, 322.027, -15.9027, 0.55", "9.1232, 323.291, -16.3895, 0.28", "8.42629, 324.13, -16.6428, 0.55", "7.63271, 325.054, -16.9494, 0.55", "5.47176, 327.45, -17.8337, 0.55", "4.00895, 329.086, -18.4725, 0.55", "2.92558, 330.392, -19.0789, 0.83", "1.49898, 332.226, -20.0033, 0.83", "-0.169097, 334.697, -21.4784, 0.55", "-1.28987, 336.556, -22.719, 0.55", "-2.39169, 338.629, -24.2227, 1.11", "-3.46863, 341.161, -26.0195, 0.55", "-3.71988, 341.893, -26.5336, 0.83", "-4.4123, 344.398, -28.1101, 0.28", "-4.59655, 345.74, -29.1265, 0.55", "-4.64516, 346.637, -29.9258, 0.28", "-4.63638, 347.513, -30.7462, 0.83", "-4.49931, 349.384, -32.529, 0.28", "-4.31058, 351.077, -34.1695, 0.83", "-3.29033, 357.654, -40.4506, 0.55", "-3.04936, 358.92, -41.6593, 0.55", "-2.79668, 360.069, -42.7331, 0.83", "-2.46253, 361.54, -44.0277, 0.28", "-2.29458, 362.264, -44.5684, 0.55", "-2.08444, 363.36, -45.2179, 0.28", "-1.92926, 364.877, -45.6448, 0.55", "-1.74342, 367.017, -46.298, 0.55", "-1.65339, 368.24, -46.672, 0.55", "-1.5601, 369.607, -47.0636, 0.83", "-1.3802, 371.789, -47.6853, 0.28", "-1.22737, 373.623, -48.1832, 0.83", "-0.979039, 375.881, -48.7167, 0.55", "-0.884939, 376.784, -48.8997, 0.55", "-0.696397, 378.502, -49.1589, 0.83", "-0.623062, 379.409, -49.2492, 0.55", "-0.543104, 381.124, -49.262, 0.83", "-0.586791, 382.712, -49.2816, 0.28", "-0.627886, 383.368, -49.3595, 0.28", "-0.807479, 385.131, -49.7681, 0.28", "-0.884799, 385.89, -50.0214, 0.83", "-1.0554, 387.651, -50.8273, 0.55", "-1.16226, 389.576, -52.1437, 0.83", "-1.32379, 392.181, -54.38, 0.28", "-1.37829, 392.98, -55.2435, 0.55", "-1.45753, 393.761, -56.325, 0.28", "-1.5701, 394.319, -57.1643, 0.83", "-2.07746, 396.368, -60.3373, 0.83", "-2.27128, 397.028, -61.3452, 0.83", "-3.007, 399.09, -64.3135, 0.83", "-3.93547, 401.476, -67.6502, 0.55", "-4.53718, 402.889, -69.6236, 0.55", "-5.09506, 404.172, -71.3535, 0.55", "-5.72954, 405.592, -73.1591, 0.55", "-6.59594, 407.804, -75.7741, 0.55", "-7.30233, 409.652, -77.6885, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "33.6014, -34.7958, -70.3595, 0.55", "34.233, -34.2443, -71.5317, 0.55", "34.8624, -33.633, -72.724, 0.83", "36.1384, -32.3396, -75.1523, 0.28", "36.7882, -31.6581, -76.3604, 0.83", "38.3777, -29.9796, -79.1934, 0.28", "38.9296, -29.3985, -80.1309, 0.55", "40.1351, -28.039, -82.2923, 0.55", "41.4001, -26.5294, -84.4581, 0.55", "42.4972, -25.223, -86.2193, 0.28", "42.9524, -24.6813, -86.9124, 0.28", "43.4172, -24.1333, -87.583, 0.55", "44.4351, -22.9948, -88.9695, 0.28", "45.8685, -21.4605, -90.6603, 0.55", "47.521, -19.5649, -92.7621, 0.28", "47.9464, -19.0749, -93.3237, 0.55", "49.649, -16.9877, -95.6466, 0.28", "50.7411, -15.5935, -97.1828, 0.28", "51.9705, -13.9761, -99.0068, 0.83", "53.8335, -11.3304, -102.048, 0.55", "54.2769, -10.6835, -102.808, 0.55", "55.1441, -9.39408, -104.463, 0.55", "56.0128, -8.15054, -106.205, 0.83", "57.313, -6.40746, -108.802, 0.28", "57.7317, -5.91973, -109.548, 0.55", "58.9452, -4.75926, -111.198, 0.28", "59.174, -4.56001, -111.488, 0.55", "60.2978, -3.76145, -112.706, 0.55", "62.0401, -2.65631, -114.256, 0.28", "62.6982, -2.26191, -114.75, 0.55", "64.3129, -1.36147, -115.886, 0.28", "64.9845, -1.00392, -116.315, 0.55", "66.4389, -0.3162, -117.221, 0.28", "67.3631, 0.0190623, -117.801, 0.55", "67.881, 0.16116, -118.099, 0.55", "69.3468, 0.57959, -118.858, 0.28", "70.3356, 0.88288, -119.299, 0.28", "71.3076, 1.25105, -119.737, 0.55", "73.6653, 2.31507, -120.777, 0.28", "75.3049, 3.21784, -121.488, 0.55", "76.8403, 4.21048, -122.104, 0.55", "78.2473, 5.29139, -122.618, 0.83", "80.3226, 7.13524, -123.28, 0.28", "81.0802, 7.92295, -123.492, 0.28", "82.3853, 9.54191, -123.762, 0.55", "83.6559, 11.3101, -123.955, 0.28", "84.2032, 12.1204, -124.004, 0.55", "85.0551, 13.4435, -123.996, 0.55", "86.3011, 15.4192, -123.856, 0.28", "87.0444, 16.6235, -123.762, 0.55", "88.1577, 18.4997, -123.609, 0.28", "89.3739, 20.6391, -123.463, 0.55", "90.6042, 22.8583, -123.333, 0.55", "91.1349, 23.859, -123.28, 0.55", "92.1434, 25.8838, -123.222, 0.55", "93.0549, 27.7637, -123.252, 0.55", "93.9368, 29.7084, -123.341, 0.55", "94.75, 31.5635, -123.45, 0.28", "95.1707, 32.5371, -123.55, 0.55", "96.4922, 35.6021, -123.912, 0.28", "97.3246, 37.6647, -124.225, 0.28", "97.7132, 38.7065, -124.405, 0.55", "98.3965, 40.5512, -124.754, 0.28", "99.0018, 42.2144, -125.084, 0.55", "99.457, 43.4893, -125.325, 0.55", "100.666, 47.0942, -125.949, 0.28", "101.355, 49.3416, -126.311, 0.28", "101.618, 50.2605, -126.446, 0.55", "102.116, 52.1198, -126.686, 0.55", "102.786, 54.6415, -126.911, 0.28", "103.301, 56.5942, -127.049, 0.55", "103.775, 58.3977, -127.106, 0.28", "104.127, 59.9559, -127.129, 0.55", "104.33, 60.8949, -127.118, 0.28", "104.482, 61.5313, -127.051, 0.55", "104.946, 63.3742, -126.706, 0.28", "105.208, 64.273, -126.471, 0.55", "106.172, 67.2341, -125.573, 0.28", "106.889, 69.2613, -124.918, 0.55", "107.887, 71.9389, -123.991, 0.28", "108.454, 73.3769, -123.479, 0.55", "109.142, 75.0138, -122.866, 0.28", "109.782, 76.4724, -122.29, 0.55", "110.402, 77.8426, -121.739, 0.28", "110.863, 78.9028, -121.322, 0.55", "111.931, 81.5533, -120.345, 0.28", "112.477, 82.9035, -119.808, 0.55", "113.221, 84.8457, -118.994, 0.28", "113.494, 85.568, -118.664, 0.55", "114.143, 87.4087, -117.781, 0.28", "114.771, 89.3569, -116.845, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "33.6014, -34.7958, -70.3595, 0.28", "35.2606, -35.1616, -71.3671, 0.28", "35.7505, -35.266, -71.6982, 0.55", "36.4179, -35.3618, -72.1889, 0.55", "37.4406, -35.4771, -72.944, 0.28", "38.0499, -35.5456, -73.378, 0.55", "40.1947, -35.7562, -74.8286, 0.28", "40.7799, -35.7746, -75.193, 0.55", "42.1833, -35.7527, -76.0065, 0.28", "42.7895, -35.715, -76.3276, 0.28", "43.7959, -35.6199, -76.7898, 0.55", "44.7397, -35.5338, -77.1642, 0.55", "47.0597, -35.3611, -77.8706, 0.28", "47.926, -35.3417, -78.12, 0.55", "48.9056, -35.3874, -78.3922, 0.55", "50.692, -35.5703, -78.9082, 0.28", "51.8553, -35.7734, -79.255, 0.55", "53.3017, -36.1809, -79.6654, 0.28", "54.0688, -36.4957, -79.8697, 0.55", "55.4666, -37.2067, -80.2256, 0.28", "56.0546, -37.5837, -80.3567, 0.55", "56.6926, -38.0841, -80.4689, 0.55", "57.513, -38.86, -80.525, 0.28", "57.9732, -39.3755, -80.516, 0.28", "58.4499, -40.0458, -80.4565, 0.55", "59.0173, -41.0588, -80.3185, 0.28", "59.089, -41.214, -80.293, 0.55", "59.6486, -42.6959, -80.0796, 0.28", "59.6985, -42.8675, -80.0726, 0.83", "60.2759, -45.1892, -80.1524, 0.28", "60.3736, -45.6277, -80.2544, 0.55", "60.579, -46.7035, -80.6671, 0.28", "60.693, -47.3683, -80.9938, 0.55", "60.9347, -48.8692, -81.9502, 0.28", "60.9627, -49.0582, -82.0807, 0.55", "61.2704, -51.2449, -83.7789, 0.28", "61.3058, -51.5452, -84.0042, 0.55", "61.3319, -51.7287, -84.1429, 0.55", "61.4445, -52.4101, -84.5716, 0.28", "61.5498, -52.9847, -84.8664, 0.55", "61.7642, -53.986, -85.2881, 0.28", "61.8604, -54.3985, -85.4403, 0.55", "62.5083, -56.8664, -86.4323, 0.28", "62.6513, -57.3699, -86.6421, 0.55", "62.82, -57.9409, -86.9152, 0.28", "63.3883, -59.7734, -87.8642, 0.28", "63.5601, -60.3681, -88.155, 0.55", "64.0278, -62.0847, -88.9341, 0.28", "64.0592, -62.2309, -88.9874, 0.55", "64.3833, -64.1396, -89.6381, 0.28", "64.4987, -65.0856, -89.8719, 0.55", "64.6111, -66.311, -90.0392, 0.28", "64.6664, -66.8292, -90.0502, 0.55", "64.7975, -67.9003, -89.984, 0.28", "64.868, -68.3723, -89.9426, 0.55", "65.1904, -70.1969, -89.8946, 0.28", "65.4893, -71.6829, -89.9601, 0.28", "65.6456, -72.3212, -90.0494, 0.55", "66.0717, -73.8711, -90.3455, 0.28", "66.2222, -74.3412, -90.4524, 0.55", "67.2563, -77.435, -91.2157, 0.28", "67.681, -78.5956, -91.5509, 0.55", "68.3752, -80.2957, -92.0752, 0.28", "68.5182, -80.6284, -92.1815, 0.55", "69.2612, -82.2013, -92.6922, 0.28", "69.3737, -82.4138, -92.756, 0.55", "69.9081, -83.1173, -92.8809, 0.28", "70.291, -83.5498, -92.9908, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "25.0125, -43.3387, 10.4771, 0.55", "25.932, -43.1527, 12.1277, 0.55", "27.7748, -42.6837, 15.4688, 0.55", "31.1698, -41.7985, 21.4824, 0.55", "33.7928, -41.1371, 26.0443, 0.55", "36.174, -40.6136, 30.1289, 0.28", "37.5022, -40.3499, 32.3588, 0.83", "39.1503, -40.0663, 35.1835, 0.55", "40.402, -39.9464, 37.2636, 0.28", "41.0543, -39.9269, 38.166, 0.55", "42.4769, -39.9171, 39.9603, 0.28", "42.9535, -39.9307, 40.5581, 0.55", "45.0686, -40.1905, 42.9082, 0.28", "46.4405, -40.5869, 44.294, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "25.0125, -43.3387, 10.4771, 0.28", "31.0052, -44.6145, 9.21118, 0.28", "31.811, -44.7562, 9.10122, 0.83", "34.5411, -45.1562, 8.85704, 0.28", "35.3092, -45.2104, 8.84433, 0.83", "37.066, -45.2316, 8.89075, 0.28", "37.7961, -45.2015, 8.93786, 0.83", "39.7439, -44.8097, 9.49982, 0.28", "40.1616, -44.6329, 9.62776, 0.83", "42.2337, -43.3362, 10.3036, 0.28", "42.7385, -43.001, 10.4631, 0.28", "43.4554, -42.502, 10.6842, 0.55", "44.6763, -41.6308, 11.3378, 0.28", "46.4143, -40.376, 12.6169, 0.28", "46.8011, -40.0982, 13.0352, 0.83", "49.2886, -38.3622, 16.5522, 0.28", "49.6845, -38.1162, 17.2111, 0.55", "52.2365, -36.6616, 22.5199, 0.28", "52.4775, -36.5312, 23.1392, 0.83", "53.7028, -35.8004, 27.2165, 0.28", "53.8393, -35.6889, 27.8, 0.55", "54.1515, -35.3166, 29.6829, 0.28", "54.4509, -34.9418, 31.4411, 0.55", "54.9252, -34.3973, 33.4809, 0.28", "55.1347, -34.149, 34.2738, 0.55", "55.9329, -33.0915, 36.5214, 0.28", "56.2042, -32.6403, 37.3649, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "32.5387, -52.2586, -1.8597, 0.55", "35.0087, -52.8378, -2.51385, 0.55", "38.9632, -53.7904, -3.58007, 0.55", "41.8325, -54.5111, -4.38932, 0.28", "43.8757, -55.0196, -4.9527, 0.55", "47.0585, -55.801, -5.75864, 0.55", "48.4153, -56.1821, -6.06322, 0.28", "49.3553, -56.4529, -6.30184, 0.55", "50.4044, -56.8383, -6.55987, 0.28", "51.9522, -57.516, -6.95395, 0.55", "54.2087, -58.6236, -7.42322, 0.55", "57.4295, -60.2587, -8.03154, 0.55", "61.7777, -62.239, -9.30455, 1.38", "64.5415, -63.3785, -10.29, 0.83", "66.8936, -64.2338, -11.2117, 0.55", "69.8584, -65.1825, -12.4764, 0.28", "73.4958, -66.1844, -14.1318, 0.83", "80.3862, -67.5813, -17.659, 0.28", "81.2805, -67.752, -18.1655, 0.28", "83.5383, -68.182, -19.6506, 0.55", "85.0511, -68.4574, -20.7157, 0.55", "86.4234, -68.7284, -21.7742, 0.55", "90.2097, -69.726, -24.6463, 0.55", "93.8634, -70.9591, -27.3507, 0.28", "96.0961, -71.7946, -29.0909, 0.83", "97.4622, -72.3377, -30.1955, 0.83", "101.063, -73.7867, -33.0704, 0.55", "102.516, -74.3977, -34.1689, 0.83", "104.496, -75.2924, -35.4019, 0.28", "105.901, -75.9058, -36.0984, 0.55", "106.746, -76.3348, -36.4405, 0.28", "107.151, -76.5793, -36.574, 0.55", "109.07, -77.7598, -36.9826, 0.28", "111.204, -79.0631, -37.579, 0.28", "112.845, -80.0906, -38.0324, 0.83", "114.241, -81.0619, -38.4794, 0.55", "117.738, -83.6626, -39.6752, 0.28", "118.774, -84.4839, -40.109, 0.83", "122.073, -87.2741, -41.6701, 0.28", "123.307, -88.4701, -42.3454, 0.83", "125.402, -90.6606, -43.4797, 0.28", "125.996, -91.2869, -43.8148, 0.83", "128.44, -93.9937, -45.2353, 0.28", "129.91, -95.6663, -46.0825, 0.28", "131.201, -97.1127, -46.6731, 0.55", "132.724, -98.6709, -47.3842, 0.55", "135.261, -101.03, -48.4635, 0.55", "136.624, -102.229, -48.9972, 0.28", "137.36, -102.84, -49.2801, 0.55", "139.83, -104.766, -50.3823, 0.28", "141.701, -106.103, -51.1941, 0.55", "143.667, -107.54, -52.1016, 0.28", "144.25, -107.978, -52.3389, 0.83", "146.769, -109.801, -53.4362, 0.28", "147.358, -110.195, -53.6896, 0.55", "148.892, -111.107, -54.3504, 0.55", "151.441, -112.641, -55.1813, 0.28", "151.542, -112.699, -55.215, 0.55", "153.855, -113.851, -56.0806, 0.28", "154.773, -114.263, -56.4199, 0.55", "157.27, -115.361, -57.5109, 0.28", "158.926, -116.038, -58.3045, 0.55", "161.93, -117.136, -59.8042, 0.55", "164.551, -118.079, -61.1901, 0.28", "166.157, -118.684, -62.0776, 0.83", "168.92, -119.772, -63.6353, 0.28", "169.51, -119.987, -63.9153, 0.55", "171.693, -120.682, -64.7965, 0.28", "172.413, -120.893, -64.9466, 0.55", "175.813, -121.749, -65.2891, 0.28", "176.894, -121.974, -65.3335, 0.83", "181.031, -122.66, -65.0386, 0.28", "181.796, -122.767, -64.9418, 0.55", "184.862, -123.006, -64.237, 0.28", "187.469, -123.008, -63.5231, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "32.5387, -52.2586, -1.8597, 0.55", "33.4635, -53.081, -3.66756, 0.55", "35.2726, -54.8749, -7.52086, 0.55", "36.8549, -56.4198, -10.7709, 0.28", "38.0378, -57.506, -13.135, 0.83", "40.0869, -59.2029, -16.9198, 0.28", "40.5774, -59.5729, -17.8306, 0.55", "40.9943, -59.8637, -18.6595, 0.55", "41.9158, -60.3299, -20.3416, 0.55", "43.4085, -60.9692, -22.8839, 0.55", "44.2462, -61.2913, -24.2752, 0.55", "46.7766, -62.059, -27.9132, 0.83", "48.3587, -62.483, -30.1476, 0.28", "48.9831, -62.6297, -31.0768, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-55.105, 5.31753, -115.772, 0.28", "-56.362, 5.14627, -115.699, 0.28", "-57.9953, 4.92374, -115.605, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-55.105, 5.31753, -115.772, 0.28", "-56.7038, 2.88694, -118.543, 0.28", "-57.1713, 2.17631, -119.354, 0.55", "-58.6339, -0.0470327, -121.889, 0.28", "-59.2811, -1.03113, -123.011, 0.83", "-62.114, -5.33783, -127.921, 0.28", "-62.5796, -6.04561, -128.728, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.30233, 409.652, -77.6885, 0.55", "-7.21472, 410.37, -79.0082, 0.55", "-7.14355, 411.227, -80.3717, 0.28", "-7.07258, 412.082, -81.7314, 0.55", "-6.86737, 414.554, -85.6631, 0.28", "-6.84378, 414.838, -86.1151, 0.55", "-6.69162, 416.671, -89.0304, 0.28", "-6.52006, 417.454, -90.5929, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-7.30233, 409.652, -77.6885, 0.28", "-8.85489, 408.909, -79.3374, 0.28", "-9.71901, 408.496, -80.2551, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "114.771, 89.3569, -116.845, 0.28", "112.297, 91.4952, -115.391, 0.28", "111.458, 92.22, -114.899, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "114.771, 89.3569, -116.845, 0.28", "115.421, 90.7872, -116.309, 0.28", "116.625, 93.476, -115.25, 0.28", "116.937, 94.1935, -114.922, 0.55", "118.029, 96.7869, -113.547, 0.28", "118.656, 98.2772, -112.756, 0.55", "119.467, 100.203, -111.735, 0.28", "119.881, 101.206, -111.124, 0.55", "120.514, 102.775, -110.0, 0.28", "120.985, 104.048, -109.05, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "48.9831, -62.6297, -31.0768, 0.55", "48.6838, -63.0296, -33.0221, 0.55", "48.5658, -63.2368, -33.9505, 0.28", "48.4809, -63.3554, -34.5677, 0.83", "47.8484, -64.0186, -38.2288, 0.28", "47.6651, -64.2247, -39.258, 0.83", "46.8249, -65.1948, -43.6492, 0.28", "46.705, -65.3285, -44.2551, 0.83", "45.8731, -66.0409, -47.8658, 0.28", "45.5866, -66.2402, -48.8699, 0.55", "44.1566, -67.0143, -53.0153, 0.28", "43.8615, -67.1509, -53.852, 0.28", "43.2205, -67.3943, -55.6382, 0.83", "41.3454, -68.0106, -60.911, 0.28", "40.8497, -68.1567, -62.3834, 0.55", "39.9055, -68.3959, -65.2983, 0.55", "39.1954, -68.5258, -67.4424, 0.55", "37.9869, -68.7734, -71.1575, 0.28", "37.6567, -68.8798, -72.2079, 0.83", "36.516, -69.3714, -75.7116, 0.28", "36.2873, -69.4975, -76.3803, 0.55", "35.1271, -70.2488, -79.1399, 0.28", "34.7339, -70.4797, -79.902, 0.55", "33.1113, -71.4713, -82.6457, 0.28", "32.9636, -71.5525, -82.8874, 0.83", "32.0199, -72.0161, -84.2034, 0.28", "31.2154, -72.3893, -85.2004, 0.55", "28.7094, -73.4524, -88.1385, 0.28", "27.9337, -73.7914, -88.9816, 0.83", "24.4598, -75.3487, -92.4096, 0.28", "22.9516, -76.0504, -93.8595, 0.55", "20.9761, -77.0276, -95.791, 0.55", "18.7547, -78.2237, -97.9062, 0.28", "16.8447, -79.3533, -99.591, 0.55", "15.5095, -80.1811, -100.872, 0.28", "15.317, -80.3131, -101.067, 0.55", "14.1741, -81.0562, -102.321, 0.28", "13.2889, -81.5606, -103.303, 0.55", "12.3181, -82.0243, -104.389, 0.55", "10.687, -82.5989, -106.324, 0.28", "9.97634, -82.7932, -107.125, 0.55", "8.94985, -83.0473, -108.259, 0.28", "8.28062, -83.1861, -108.949, 0.55", "6.46896, -83.5143, -110.813, 0.28", "5.87373, -83.6015, -111.462, 0.55", "4.383, -83.8473, -113.098, 0.28", "3.49839, -84.0159, -114.281, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "48.9831, -62.6297, -31.0768, 0.28", "52.5042, -63.1457, -30.6473, 0.28", "53.0249, -63.2266, -30.6339, 0.83", "55.4165, -63.7016, -30.6225, 0.28", "56.2545, -63.8472, -30.6194, 0.28", "57.2962, -64.0598, -30.6616, 0.55", "59.1796, -64.4202, -30.9638, 0.28", "61.243, -64.826, -31.5566, 0.55", "62.4606, -65.1238, -31.9538, 0.55", "63.9958, -65.5352, -32.6153, 0.55", "66.6998, -66.2455, -33.9652, 0.83", "69.9641, -67.0791, -35.8097, 0.28", "71.0947, -67.3662, -36.4986, 0.28", "71.6828, -67.5335, -36.9163, 0.83", "75.6107, -68.6768, -39.8671, 0.28", "76.7278, -69.039, -40.7907, 0.83", "77.6712, -69.3796, -41.6393, 0.83", "79.3188, -70.0874, -43.152, 0.83", "82.1093, -71.3762, -45.8048, 0.55", "84.4897, -72.6892, -48.1769, 0.55", "87.3448, -74.6726, -51.1575, 0.55", "88.6635, -75.7933, -52.6976, 0.55", "89.7402, -76.9261, -54.1078, 0.28", "89.8528, -77.0833, -54.2729, 0.55", "91.1212, -79.5972, -56.4457, 0.28", "91.4673, -80.5853, -57.1757, 0.55", "92.3546, -83.5798, -59.1071, 0.28", "92.8535, -85.3045, -60.0929, 0.55", "93.4229, -87.1877, -61.0615, 0.28", "93.8893, -88.6306, -61.6638, 0.55", "95.041, -92.0678, -62.7758, 0.28", "95.3403, -92.9103, -62.9702, 1.11", "97.0726, -97.2427, -63.4982, 0.28", "98.0309, -99.3952, -63.5594, 0.55", "98.9964, -101.501, -63.2332, 0.28", "99.3286, -102.197, -62.9852, 0.55", "100.193, -104.014, -61.9967, 0.28", "100.761, -105.216, -61.1766, 0.28", "101.833, -107.447, -59.2302, 0.55", "103.357, -110.796, -56.1927, 0.55", "103.941, -112.109, -54.9862, 0.28", "104.072, -112.363, -54.7421, 0.55", "105.118, -114.074, -53.0397, 0.28", "105.311, -114.358, -52.7574, 0.55", "106.333, -115.512, -51.6003, 0.28", "106.858, -115.954, -51.1564, 0.55", "108.979, -117.428, -49.1853, 0.28", "109.625, -117.814, -48.4339, 0.55", "110.68, -118.252, -47.1858, 0.28", "110.997, -118.351, -46.6899, 0.55", "111.863, -118.514, -45.0683, 0.28", "112.579, -118.622, -43.576, 0.55", "113.721, -118.75, -40.4763, 0.28", "114.53, -118.794, -37.9692, 0.55", "116.144, -118.676, -32.3964, 0.28", "116.363, -118.652, -31.558, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_BTC_ff1cebdea2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.07039, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.11673, -13.4006, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 9.72061, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -6.12299, 11.3224, -3.92909, 1.38 ) }
    dend_11 { pt3dadd( -7.72686, 13.8306, -4.22266, 1.66 ) }
    dend_11 { pt3dadd( -9.09629, 15.9721, -4.47332, 1.38 ) }
    dend_11 { pt3dadd( -10.1914, 17.6846, -4.67377, 1.11 ) }
    dend_11 { pt3dadd( -11.0563, 19.0371, -4.83207, 1.11 ) }
    dend_11 { pt3dadd( -13.0557, 22.1639, -5.19805, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.08211, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01639, 10.2271, 7.60952, 1.38 ) }
    dend_0 { pt3dadd( 6.15834, 12.7891, 8.33592, 1.38 ) }
    dend_0 { pt3dadd( 6.57915, 17.2688, 9.76049, 1.38 ) }
    dend_0 { pt3dadd( 7.15433, 22.0467, 11.3521, 1.38 ) }
    dend_0 { pt3dadd( 7.58724, 25.6428, 12.55, 1.38 ) }
    dend_0 { pt3dadd( 7.97354, 28.8517, 13.619, 0.83 ) }
    dend_0 { pt3dadd( 8.22582, 31.9713, 14.7313, 1.38 ) }
    dend_0 { pt3dadd( 8.59529, 35.6732, 16.1093, 1.38 ) }
    dend_0 { pt3dadd( 9.43946, 40.0879, 17.7243, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.694474 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.694474 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.694474 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.11673, -13.4006, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 4.25298, -17.4405, 1.25961, 2.22 ) }
    dend_32 { pt3dadd( 5.36428, -19.5421, 0.948111, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.11673, -13.4006, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( -0.637265, -15.5378, 2.08873, 0.83 ) }
    dend_27 { pt3dadd( -2.59669, -17.0348, 2.48957, 1.11 ) }
    dend_27 { pt3dadd( -5.30005, -19.1001, 3.04259, 0.83 ) }
    dend_27 { pt3dadd( -7.37647, -20.6864, 3.46735, 0.83 ) }
    dend_27 { pt3dadd( -10.897, -23.3761, 4.18755, 1.38 ) }
    dend_27 { pt3dadd( -14.262, -25.9469, 4.87593, 1.38 ) }
    dend_27 { pt3dadd( -17.2891, -27.9988, 5.72049, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -13.0557, 22.1639, -5.19805, 0.55 ) }
    dend_21 { pt3dadd( -16.7749, 22.7564, -4.08483, 0.55 ) }
    dend_21 { pt3dadd( -18.5622, 22.8224, -3.27943, 0.55 ) }
    dend_21 { pt3dadd( -19.8387, 22.7981, -2.6141, 0.55 ) }
    dend_21 { pt3dadd( -21.9395, 22.6768, -1.46878, 1.11 ) }
    dend_21 { pt3dadd( -25.6166, 22.3536, 0.533649, 0.83 ) }
    dend_21 { pt3dadd( -29.3216, 21.8857, 2.59187, 0.83 ) }
    dend_21 { pt3dadd( -33.2104, 21.1127, 4.9341, 0.55 ) }
    dend_21 { pt3dadd( -35.3215, 20.5782, 6.22067, 1.38 ) }
    dend_21 { pt3dadd( -36.8545, 20.1062, 7.16419, 0.28 ) }
    dend_21 { pt3dadd( -38.25, 19.5944, 8.02907, 0.83 ) }
    dend_21 { pt3dadd( -39.9361, 18.974, 9.11315, 0.28 ) }
    dend_21 { pt3dadd( -41.1068, 18.5296, 9.90715, 0.55 ) }
    dend_21 { pt3dadd( -42.5873, 18.0474, 10.848, 0.55 ) }
    dend_21 { pt3dadd( -44.9394, 17.3586, 12.3325, 0.55 ) }
    dend_21 { pt3dadd( -46.9699, 16.7767, 13.6009, 0.55 ) }
    dend_21 { pt3dadd( -50.4319, 15.8739, 15.8045, 0.55 ) }
    dend_21 { pt3dadd( -51.8939, 15.5261, 16.7015, 0.55 ) }
    dend_21 { pt3dadd( -54.6937, 14.8982, 18.3459, 0.83 ) }
    dend_21 { pt3dadd( -56.6617, 14.5, 19.4526, 0.83 ) }
    dend_21 { pt3dadd( -58.2291, 14.2047, 20.2611, 0.83 ) }
    dend_21 { pt3dadd( -61.5669, 13.6398, 21.9216, 0.83 ) }
    dend_21 { pt3dadd( -62.8052, 13.4153, 22.499, 0.83 ) }
    dend_21 { pt3dadd( -65.7943, 12.8358, 23.9873, 0.83 ) }
    dend_21 { pt3dadd( -69.8775, 11.949, 26.0787, 0.83 ) }
    dend_21 { pt3dadd( -70.9034, 11.7493, 26.599, 0.83 ) }
    dend_21 { pt3dadd( -73.1408, 11.3603, 27.6878, 0.28 ) }
    dend_21 { pt3dadd( -74.3912, 11.1117, 28.2165, 0.83 ) }
    dend_21 { pt3dadd( -77.3904, 10.4912, 29.3987, 0.28 ) }
    dend_21 { pt3dadd( -79.4929, 10.0439, 30.0869, 0.83 ) }
    dend_21 { pt3dadd( -81.9474, 9.52221, 30.7588, 0.28 ) }
    dend_21 { pt3dadd( -82.479, 9.40761, 30.896, 0.55 ) }
    dend_21 { pt3dadd( -85.5189, 8.8383, 31.548, 0.55 ) }
    dend_21 { pt3dadd( -87.7072, 8.49586, 31.9487, 0.28 ) }
    dend_21 { pt3dadd( -90.194, 8.126, 32.1621, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -13.0557, 22.1639, -5.19805, 1.11 ) }
    dend_12 { pt3dadd( -13.7708, 26.9518, -7.48975, 1.11 ) }
    dend_12 { pt3dadd( -14.2702, 29.5185, -8.5369, 1.11 ) }
    dend_12 { pt3dadd( -14.8725, 32.6141, -9.79983, 1.11 ) }
    dend_12 { pt3dadd( -15.3789, 35.2164, -10.8615, 1.11 ) }
    dend_12 { pt3dadd( -15.9751, 38.2806, -12.1116, 0.83 ) }
    dend_12 { pt3dadd( -16.5857, 41.4188, -13.3919, 0.83 ) }
    dend_12 { pt3dadd( -17.1275, 43.8274, -14.0656, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.43946, 40.0879, 17.7243, 0.83 ) }
    dend_4 { pt3dadd( 8.5156, 43.1171, 18.9494, 0.83 ) }
    dend_4 { pt3dadd( 7.82461, 45.3828, 19.8657, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 7.28941, 47.1377, 20.5755, 0.83 ) }
    dend_4 { pt3dadd( 6.4542, 49.8762, 21.6831, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.43946, 40.0879, 17.7243, 0.83 ) }
    dend_1 { pt3dadd( 12.9377, 43.2906, 17.4519, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.694474 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.694474 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.694474 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.36428, -19.5421, 0.948111, 0.83 ) }
    dend_42 { pt3dadd( 5.73916, -20.7281, -1.15162, 0.83 ) }
    dend_42 { pt3dadd( 5.94718, -21.2759, -2.40307, 0.83 ) }
    dend_42 { pt3dadd( 6.19517, -21.859, -3.97817, 0.83 ) }
    dend_42 { pt3dadd( 7.13996, -24.1294, -10.4614, 0.83 ) }
    dend_42 { pt3dadd( 7.66635, -25.3782, -14.0555, 0.83 ) }
    dend_42 { pt3dadd( 8.45524, -27.2499, -19.4418, 0.55 ) }
    dend_42 { pt3dadd( 8.7222, -28.0806, -22.0777, 0.83 ) }
    dend_42 { pt3dadd( 8.96773, -28.9565, -25.1373, 0.83 ) }
    dend_42 { pt3dadd( 9.19091, -29.6929, -28.0403, 1.11 ) }
    dend_42 { pt3dadd( 9.27515, -29.8068, -28.5406, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.36428, -19.5421, 0.948111, 1.66 ) }
    dend_33 { pt3dadd( 6.34822, -22.0119, 0.978641, 1.66 ) }
    dend_33 { pt3dadd( 7.77181, -24.9917, 0.996111, 1.11 ) }
    dend_33 { pt3dadd( 8.84944, -26.9682, 1.00984, 1.11 ) }
    dend_33 { pt3dadd( 10.8677, -30.0523, 1.34993, 1.11 ) }
    dend_33 { pt3dadd( 12.5906, -32.6852, 1.64027, 1.11 ) }
    dend_33 { pt3dadd( 13.7958, -34.5269, 1.84336, 1.38 ) }
    dend_33 { pt3dadd( 15.2321, -36.4958, 2.0867, 1.11 ) }
    dend_33 { pt3dadd( 16.1407, -37.5927, 2.28115, 1.11 ) }
    dend_33 { pt3dadd( 20.0309, -41.403, 3.31026, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -17.2891, -27.9988, 5.72049, 0.28 ) }
    dend_31 { pt3dadd( -17.9164, -29.6853, 8.07151, 0.28 ) }
    dend_31 { pt3dadd( -18.2556, -30.3894, 9.12213, 1.11 ) }
    dend_31 { pt3dadd( -19.4502, -32.7315, 12.8303, 0.55 ) }
    dend_31 { pt3dadd( -19.7922, -33.453, 13.9537, 0.83 ) }
    dend_31 { pt3dadd( -20.5494, -35.0501, 16.4407, 0.83 ) }
    dend_31 { pt3dadd( -21.422, -36.8909, 19.3072, 0.55 ) }
    dend_31 { pt3dadd( -21.9519, -37.9349, 21.0014, 1.11 ) }
    dend_31 { pt3dadd( -22.8801, -39.7479, 24.0801, 0.55 ) }
    dend_31 { pt3dadd( -23.2446, -40.3937, 25.1476, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -17.2891, -27.9988, 5.72049, 0.83 ) }
    dend_28 { pt3dadd( -21.2495, -28.441, 6.45242, 0.83 ) }
    dend_28 { pt3dadd( -24.2142, -28.7498, 6.96193, 1.11 ) }
    dend_28 { pt3dadd( -27.1389, -28.971, 7.40032, 0.83 ) }
    dend_28 { pt3dadd( -30.4175, -29.1565, 7.80836, 0.83 ) }
    dend_28 { pt3dadd( -34.4607, -29.3852, 8.31156, 0.83 ) }
    dend_28 { pt3dadd( -38.3204, -29.6036, 8.7919, 0.83 ) }
    dend_28 { pt3dadd( -42.5471, -29.836, 9.25739, 1.11 ) }
    dend_28 { pt3dadd( -46.9824, -30.0124, 9.61014, 1.11 ) }
    dend_28 { pt3dadd( -50.9062, -30.1176, 9.84197, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -90.194, 8.126, 32.1621, 0.28 ) }
    dend_23 { pt3dadd( -90.1502, 6.52834, 32.5308, 0.28 ) }
    dend_23 { pt3dadd( -90.1346, 5.9611, 32.6617, 0.83 ) }
    dend_23 { pt3dadd( -90.0561, 3.09785, 33.3224, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -90.194, 8.126, 32.1621, 0.28 ) }
    dend_22 { pt3dadd( -94.9668, 8.69756, 33.1353, 0.28 ) }
    dend_22 { pt3dadd( -96.5971, 8.90726, 32.9441, 0.55 ) }
    dend_22 { pt3dadd( -100.161, 9.28491, 31.9814, 0.28 ) }
    dend_22 { pt3dadd( -103.336, 9.55631, 30.9258, 0.83 ) }
    dend_22 { pt3dadd( -107.118, 9.87961, 29.6684, 0.28 ) }
    dend_22 { pt3dadd( -110.746, 10.1898, 28.4623, 0.28 ) }
    dend_22 { pt3dadd( -116.82, 10.6268, 25.3525, 0.28 ) }
    dend_22 { pt3dadd( -118.043, 10.7133, 24.5675, 0.83 ) }
    dend_22 { pt3dadd( -119.893, 10.8743, 23.0156, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -17.1275, 43.8274, -14.0656, 0.55 ) }
    dend_16 { pt3dadd( -18.0056, 44.1115, -14.7712, 0.55 ) }
    dend_16 { pt3dadd( -19.5539, 44.6124, -16.0151, 0.55 ) }
    dend_16 { pt3dadd( -21.0486, 45.096, -17.2161, 0.83 ) }
    dend_16 { pt3dadd( -23.7454, 45.9685, -19.3829, 0.55 ) }
    dend_16 { pt3dadd( -25.4357, 46.5153, -20.7411, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -17.1275, 43.8274, -14.0656, 0.55 ) }
    dend_13 { pt3dadd( -15.7315, 47.2205, -14.7629, 0.55 ) }
    dend_13 { pt3dadd( -15.1179, 48.9054, -14.9908, 0.55 ) }
    dend_13 { pt3dadd( -14.6404, 50.3519, -15.0465, 0.83 ) }
    dend_13 { pt3dadd( -14.0299, 52.2559, -15.019, 0.55 ) }
    dend_13 { pt3dadd( -13.6476, 53.4796, -14.9905, 0.83 ) }
    dend_13 { pt3dadd( -13.0718, 55.3019, -14.9207, 0.55 ) }
    dend_13 { pt3dadd( -12.6608, 56.6882, -14.7785, 0.83 ) }
    dend_13 { pt3dadd( -12.0009, 58.6794, -14.6279, 0.28 ) }
    dend_13 { pt3dadd( -11.5844, 59.7918, -14.5799, 0.83 ) }
    dend_13 { pt3dadd( -10.8237, 61.6219, -14.5471, 0.55 ) }
    dend_13 { pt3dadd( -10.1998, 63.0573, -14.5502, 0.83 ) }
    dend_13 { pt3dadd( -9.19483, 65.2567, -14.6119, 0.55 ) }
    dend_13 { pt3dadd( -7.998, 67.7171, -14.7618, 0.83 ) }
    dend_13 { pt3dadd( -6.84392, 69.9985, -14.9956, 0.83 ) }
    dend_13 { pt3dadd( -5.28304, 73.034, -15.3011, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 6.4542, 49.8762, 21.6831, 0.83 ) }
    dend_6 { pt3dadd( 7.80649, 53.7843, 22.9707, 0.83 ) }
    dend_6 { pt3dadd( 9.08932, 58.111, 24.3013, 0.83 ) }
    dend_6 { pt3dadd( 9.75437, 60.8069, 25.1912, 0.83 ) }
    dend_6 { pt3dadd( 10.566, 64.5681, 26.4951, 0.83 ) }
    dend_6 { pt3dadd( 11.424, 68.8108, 27.9677, 0.83 ) }
    dend_6 { pt3dadd( 12.2858, 73.5239, 29.5736, 0.83 ) }
    dend_6 { pt3dadd( 12.9791, 78.0295, 31.1394, 0.83 ) }
    dend_6 { pt3dadd( 13.5712, 82.5155, 32.775, 0.83 ) }
    dend_6 { pt3dadd( 13.865, 85.2215, 33.7035, 0.55 ) }
    dend_6 { pt3dadd( 14.1446, 88.1751, 34.5742, 0.55 ) }
    dend_6 { pt3dadd( 14.4348, 90.6404, 35.1373, 0.83 ) }
    dend_6 { pt3dadd( 14.7802, 92.8321, 35.4705, 0.83 ) }
    dend_6 { pt3dadd( 15.1881, 94.8407, 35.6748, 0.55 ) }
    dend_6 { pt3dadd( 15.8094, 97.3631, 35.7027, 0.83 ) }
    dend_6 { pt3dadd( 16.3432, 99.4056, 35.6656, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 16.789, 101.162, 35.6155, 0.83 ) }
    dend_6 { pt3dadd( 17.4328, 103.893, 35.5346, 0.55 ) }
    dend_6 { pt3dadd( 18.0233, 106.644, 35.3966, 0.83 ) }
    dend_6 { pt3dadd( 18.5682, 109.142, 35.0206, 0.55 ) }
    dend_6 { pt3dadd( 18.8424, 110.501, 34.7365, 0.55 ) }
    dend_6 { pt3dadd( 19.2177, 112.611, 34.258, 0.83 ) }
    dend_6 { pt3dadd( 19.6887, 115.636, 33.5208, 0.83 ) }
    dend_6 { pt3dadd( 20.055, 118.145, 32.9069, 0.55 ) }
    dend_6 { pt3dadd( 20.7772, 123.839, 31.4482, 0.83 ) }
    dend_6 { pt3dadd( 21.1607, 127.147, 30.5924, 0.83 ) }
    dend_6 { pt3dadd( 21.6247, 131.184, 29.615, 0.83 ) }
    dend_6 { pt3dadd( 21.8955, 133.641, 29.1387, 0.83 ) }
    dend_6 { pt3dadd( 22.0457, 135.62, 28.8726, 0.83 ) }
    dend_6 { pt3dadd( 22.121, 137.583, 28.7607, 0.55 ) }
    dend_6 { pt3dadd( 22.1245, 139.831, 28.7806, 0.55 ) }
    dend_6 { pt3dadd( 22.042, 142.404, 28.7642, 0.83 ) }
    dend_6 { pt3dadd( 21.7362, 147.195, 28.659, 0.83 ) }
    dend_6 { pt3dadd( 21.4876, 150.985, 28.5396, 1.11 ) }
    dend_6 { pt3dadd( 21.2724, 153.866, 28.4158, 0.55 ) }
    dend_6 { pt3dadd( 20.9575, 157.033, 28.2551, 1.11 ) }
    dend_6 { pt3dadd( 20.3468, 161.496, 28.0011, 0.83 ) }
    dend_6 { pt3dadd( 19.7766, 165.203, 27.7149, 0.83 ) }
    dend_6 { pt3dadd( 19.3782, 167.67, 27.4237, 0.83 ) }
    dend_6 { pt3dadd( 19.0449, 170.123, 27.0638, 0.55 ) }
    dend_6 { pt3dadd( 18.6572, 173.56, 26.4974, 0.55 ) }
    dend_6 { pt3dadd( 18.5957, 174.367, 26.3515, 0.55 ) }
    dend_6 { pt3dadd( 18.4773, 177.358, 25.8624, 0.55 ) }
    dend_6 { pt3dadd( 18.4657, 179.534, 25.4597, 0.28 ) }
    dend_6 { pt3dadd( 18.6009, 183.011, 24.6883, 0.55 ) }
    dend_6 { pt3dadd( 18.9676, 186.952, 23.6948, 0.55 ) }
    dend_6 { pt3dadd( 19.2609, 189.167, 23.0936, 0.55 ) }
    dend_6 { pt3dadd( 19.812, 193.023, 22.0401, 0.83 ) }
    dend_6 { pt3dadd( 20.44, 197.096, 20.9228, 0.83 ) }
    dend_6 { pt3dadd( 20.8942, 199.985, 19.992, 0.83 ) }
    dend_6 { pt3dadd( 21.1388, 201.655, 19.3527, 0.55 ) }
    dend_6 { pt3dadd( 21.3549, 203.135, 18.7375, 0.83 ) }
    dend_6 { pt3dadd( 21.593, 205.523, 17.7696, 0.83 ) }
    dend_6 { pt3dadd( 21.7246, 208.564, 16.5659, 0.83 ) }
    dend_6 { pt3dadd( 21.7032, 212.415, 15.3125, 0.83 ) }
    dend_6 { pt3dadd( 21.6188, 214.856, 14.5932, 0.83 ) }
    dend_6 { pt3dadd( 21.5116, 217.121, 13.8547, 0.83 ) }
    dend_6 { pt3dadd( 21.3487, 220.321, 12.7192, 0.55 ) }
    dend_6 { pt3dadd( 21.1042, 223.667, 11.4944, 0.55 ) }
    dend_6 { pt3dadd( 20.9196, 226.103, 10.6455, 0.55 ) }
    dend_6 { pt3dadd( 20.7484, 228.807, 9.73211, 0.83 ) }
    dend_6 { pt3dadd( 20.5552, 232.922, 8.28739, 1.11 ) }
    dend_6 { pt3dadd( 20.4716, 237.221, 6.90259, 0.55 ) }
    dend_6 { pt3dadd( 20.5419, 239.72, 6.25209, 0.55 ) }
    dend_6 { pt3dadd( 20.6957, 242.622, 5.6422, 0.55 ) }
    dend_6 { pt3dadd( 20.9548, 245.5, 5.16396, 0.83 ) }
    dend_6 { pt3dadd( 21.4601, 248.96, 4.76367, 0.83 ) }
    dend_6 { pt3dadd( 22.3876, 253.709, 4.40096, 0.83 ) }
    dend_6 { pt3dadd( 23.8251, 259.355, 3.96869, 0.83 ) }
    dend_6 { pt3dadd( 24.8101, 262.615, 3.66182, 0.55 ) }
    dend_6 { pt3dadd( 25.8835, 265.83, 3.29225, 0.55 ) }
    dend_6 { pt3dadd( 27.3428, 269.843, 2.7741, 0.83 ) }
    dend_6 { pt3dadd( 28.0089, 271.724, 2.46481, 0.83 ) }
    dend_6 { pt3dadd( 28.9006, 274.713, 1.87867, 0.83 ) }
    dend_6 { pt3dadd( 29.6664, 278.278, 1.18716, 0.83 ) }
    dend_6 { pt3dadd( 29.9902, 281.265, 0.708143, 0.28 ) }
    dend_6 { pt3dadd( 30.0025, 282.83, 0.493316, 0.83 ) }
    dend_6 { pt3dadd( 29.736, 287.334, -0.0694299, 0.83 ) }
    dend_6 { pt3dadd( 29.3358, 290.942, -0.449626, 0.83 ) }
    dend_6 { pt3dadd( 28.6907, 294.477, -0.717826, 0.83 ) }
    dend_6 { pt3dadd( 27.8281, 298.134, -0.887877, 0.83 ) }
    dend_6 { pt3dadd( 27.1572, 300.575, -0.956724, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 6.4542, 49.8762, 21.6831, 0.83 ) }
    dend_5 { pt3dadd( 4.56728, 51.5323, 23.3915, 0.83 ) }
    dend_5 { pt3dadd( 3.21228, 52.99, 24.7796, 0.55 ) }
    dend_5 { pt3dadd( 1.03223, 55.3537, 27.0103, 0.55 ) }
    dend_5 { pt3dadd( -1.00722, 57.5662, 29.0883, 0.55 ) }
    dend_5 { pt3dadd( -3.31625, 59.84, 31.3454, 0.55 ) }
    dend_5 { pt3dadd( -5.05571, 61.3417, 33.0045, 0.55 ) }
    dend_5 { pt3dadd( -8.09519, 63.5131, 35.8914, 0.55 ) }
    dend_5 { pt3dadd( -10.3028, 64.7542, 37.8533, 0.55 ) }
    dend_5 { pt3dadd( -13.3949, 65.952, 40.2377, 0.55 ) }
    dend_5 { pt3dadd( -18.3894, 66.8392, 43.499, 0.55 ) }
    dend_5 { pt3dadd( -21.3813, 66.8896, 45.1278, 0.55 ) }
    dend_5 { pt3dadd( -24.668, 66.3604, 46.6597, 0.55 ) }
    dend_5 { pt3dadd( -26.6375, 65.7154, 47.3824, 0.55 ) }
    dend_5 { pt3dadd( -28.2295, 64.9425, 47.8367, 0.55 ) }
    dend_5 { pt3dadd( -31.1883, 63.0273, 48.4099, 0.28 ) }
    dend_5 { pt3dadd( -32.6308, 61.8754, 48.5962, 0.83 ) }
    dend_5 { pt3dadd( -34.5715, 60.1723, 48.8217, 0.55 ) }
    dend_5 { pt3dadd( -35.8139, 58.89, 48.8819, 0.55 ) }
    dend_5 { pt3dadd( -37.3495, 56.8795, 48.8236, 0.55 ) }
    dend_5 { pt3dadd( -38.7342, 54.7346, 48.6561, 0.83 ) }
    dend_5 { pt3dadd( -39.8764, 52.8102, 48.4284, 0.55 ) }
    dend_5 { pt3dadd( -40.8256, 51.1714, 48.1529, 0.55 ) }
    dend_5 { pt3dadd( -43.0043, 47.3179, 47.3772, 0.55 ) }
    dend_5 { pt3dadd( -45.1857, 43.6602, 46.5541, 0.83 ) }
    dend_5 { pt3dadd( -46.9171, 40.9667, 45.8452, 0.83 ) }
    dend_5 { pt3dadd( -48.7668, 38.2735, 44.8705, 0.83 ) }
    dend_5 { pt3dadd( -51.0061, 35.2927, 43.6639, 0.55 ) }
    dend_5 { pt3dadd( -52.1022, 33.9489, 43.1514, 0.28 ) }
    dend_5 { pt3dadd( -53.5247, 32.3741, 42.6182, 0.55 ) }
    dend_5 { pt3dadd( -55.2441, 30.7011, 42.0287, 0.28 ) }
    dend_5 { pt3dadd( -58.9801, 27.3135, 40.9515, 0.55 ) }
    dend_5 { pt3dadd( -61.3242, 25.3196, 40.3946, 0.55 ) }
    dend_5 { pt3dadd( -63.6284, 23.4303, 40.0015, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -65.7179, 21.7405, 39.738, 0.55 ) }
    dend_5 { pt3dadd( -69.3132, 18.69, 39.3946, 0.55 ) }
    dend_5 { pt3dadd( -70.5592, 17.5832, 39.3388, 0.83 ) }
    dend_5 { pt3dadd( -72.7488, 15.4968, 39.3313, 0.55 ) }
    dend_5 { pt3dadd( -75.714, 12.343, 39.1909, 0.55 ) }
    dend_5 { pt3dadd( -77.6548, 9.83461, 39.0144, 0.83 ) }
    dend_5 { pt3dadd( -79.5434, 6.72843, 38.8244, 0.55 ) }
    dend_5 { pt3dadd( -80.6522, 4.26603, 38.6772, 0.55 ) }
    dend_5 { pt3dadd( -81.5519, 1.74877, 38.5136, 0.55 ) }
    dend_5 { pt3dadd( -81.9072, 0.39, 38.4201, 0.83 ) }
    dend_5 { pt3dadd( -82.5922, -3.14702, 38.1325, 0.55 ) }
    dend_5 { pt3dadd( -83.2022, -7.31857, 37.7739, 0.28 ) }
    dend_5 { pt3dadd( -83.9727, -13.3712, 37.2638, 0.28 ) }
    dend_5 { pt3dadd( -84.2871, -15.9202, 36.9577, 0.83 ) }
    dend_5 { pt3dadd( -84.8827, -20.9292, 36.2896, 0.28 ) }
    dend_5 { pt3dadd( -85.1003, -22.6845, 36.0676, 0.83 ) }
    dend_5 { pt3dadd( -85.2462, -23.7778, 35.9404, 0.28 ) }
    dend_5 { pt3dadd( -85.4195, -25.5027, 35.7102, 0.83 ) }
    dend_5 { pt3dadd( -85.7817, -28.9403, 35.2509, 0.28 ) }
    dend_5 { pt3dadd( -85.9835, -30.2506, 35.1116, 0.55 ) }
    dend_5 { pt3dadd( -86.6224, -33.1894, 34.8698, 0.28 ) }
    dend_5 { pt3dadd( -87.0415, -34.8828, 34.7429, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.9377, 43.2906, 17.4519, 0.83 ) }
    dend_3 { pt3dadd( 13.582, 44.5805, 15.3262, 0.83 ) }
    dend_3 { pt3dadd( 14.3853, 46.2248, 12.9369, 0.83 ) }
    dend_3 { pt3dadd( 14.9081, 47.2776, 11.5762, 0.83 ) }
    dend_3 { pt3dadd( 18.2817, 53.6364, 4.24405, 0.55 ) }
    dend_3 { pt3dadd( 19.2979, 55.3961, 2.5075, 0.55 ) }
    dend_3 { pt3dadd( 19.8958, 56.3517, 1.70959, 0.55 ) }
    dend_3 { pt3dadd( 20.7204, 57.5757, 0.822066, 0.55 ) }
    dend_3 { pt3dadd( 21.5964, 58.7983, 0.213053, 1.11 ) }
    dend_3 { pt3dadd( 22.6556, 60.248, -0.0856864, 0.55 ) }
    dend_3 { pt3dadd( 24.5146, 62.7157, 0.0752438, 0.55 ) }
    dend_3 { pt3dadd( 26.1002, 64.9388, 0.307436, 0.55 ) }
    dend_3 { pt3dadd( 27.118, 66.3868, 0.513363, 0.55 ) }
    dend_3 { pt3dadd( 28.3563, 68.2139, 0.93047, 0.83 ) }
    dend_3 { pt3dadd( 29.739, 70.4418, 1.57086, 0.55 ) }
    dend_3 { pt3dadd( 30.6992, 72.2236, 2.13982, 1.11 ) }
    dend_3 { pt3dadd( 31.62, 74.0831, 2.80389, 0.55 ) }
    dend_3 { pt3dadd( 32.4885, 75.9117, 3.4867, 0.83 ) }
    dend_3 { pt3dadd( 33.9468, 79.0964, 4.63772, 0.55 ) }
    dend_3 { pt3dadd( 34.7019, 80.7679, 5.20626, 0.55 ) }
    dend_3 { pt3dadd( 35.712, 83.0829, 5.92081, 0.55 ) }
    dend_3 { pt3dadd( 36.524, 84.9012, 6.36103, 0.55 ) }
    dend_3 { pt3dadd( 37.0216, 86.031, 6.57479, 0.28 ) }
    dend_3 { pt3dadd( 38.0272, 88.2757, 6.87564, 0.55 ) }
    dend_3 { pt3dadd( 38.7862, 89.9667, 6.99727, 0.28 ) }
    dend_3 { pt3dadd( 39.5067, 91.5018, 7.07275, 0.55 ) }
    dend_3 { pt3dadd( 40.8836, 94.3876, 7.16437, 0.55 ) }
    dend_3 { pt3dadd( 41.6213, 96.0155, 7.19498, 0.55 ) }
    dend_3 { pt3dadd( 42.6473, 98.2793, 7.20412, 0.28 ) }
    dend_3 { pt3dadd( 43.6107, 100.612, 6.52785, 0.83 ) }
    dend_3 { pt3dadd( 44.4172, 102.649, 5.57349, 0.28 ) }
    dend_3 { pt3dadd( 44.6012, 103.095, 5.29058, 0.55 ) }
    dend_3 { pt3dadd( 45.0462, 104.086, 4.41264, 0.28 ) }
    dend_3 { pt3dadd( 45.3352, 104.685, 3.77172, 0.83 ) }
    dend_3 { pt3dadd( 48.9806, 111.779, -4.7789, 0.55 ) }
    dend_3 { pt3dadd( 50.4621, 114.388, -8.05334, 0.55 ) }
    dend_3 { pt3dadd( 50.9322, 115.178, -9.01579, 0.83 ) }
    dend_3 { pt3dadd( 52.1161, 117.034, -10.9133, 0.55 ) }
    dend_3 { pt3dadd( 52.7374, 117.952, -11.6113, 0.55 ) }
    dend_3 { pt3dadd( 53.4599, 119.067, -11.8531, 0.83 ) }
    dend_3 { pt3dadd( 54.2997, 120.491, -11.3904, 0.28 ) }
    dend_3 { pt3dadd( 54.6458, 121.266, -11.2441, 0.55 ) }
    dend_3 { pt3dadd( 55.4216, 123.462, -10.654, 0.28 ) }
    dend_3 { pt3dadd( 55.8403, 124.91, -10.06, 0.55 ) }
    dend_3 { pt3dadd( 56.1845, 126.165, -9.56167, 0.28 ) }
    dend_3 { pt3dadd( 56.3931, 127.42, -9.2096, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.9377, 43.2906, 17.4519, 0.55 ) }
    dend_2 { pt3dadd( 14.8263, 42.6852, 18.3111, 0.55 ) }
    dend_2 { pt3dadd( 17.6603, 41.7767, 19.6005, 0.28 ) }
    dend_2 { pt3dadd( 19.1472, 41.3, 20.277, 0.55 ) }
    dend_2 { pt3dadd( 21.8785, 40.4243, 21.5197, 0.55 ) }
    dend_2 { pt3dadd( 25.4496, 39.2795, 23.1444, 0.55 ) }
    dend_2 { pt3dadd( 27.4021, 38.6535, 24.0327, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 9.27515, -29.8068, -28.5406, 0.55 ) }
    dend_48 { pt3dadd( 5.8874, -28.3036, -29.6447, 0.55 ) }
    dend_48 { pt3dadd( 4.86602, -27.9172, -30.2822, 0.83 ) }
    dend_48 { pt3dadd( 2.50537, -27.0659, -31.929, 0.55 ) }
    dend_48 { pt3dadd( 1.53446, -26.7397, -32.5924, 0.55 ) }
    dend_48 { pt3dadd( -2.85125, -25.7137, -36.2292, 0.28 ) }
    dend_48 { pt3dadd( -3.7561, -25.5611, -37.0105, 0.83 ) }
    dend_48 { pt3dadd( -7.37052, -25.3066, -40.6361, 0.55 ) }
    dend_48 { pt3dadd( -7.75536, -25.3059, -41.0382, 0.55 ) }
    dend_48 { pt3dadd( -8.78, -25.3714, -42.1444, 0.83 ) }
    dend_48 { pt3dadd( -13.3292, -25.82, -46.9633, 0.55 ) }
    dend_48 { pt3dadd( -14.2078, -25.9363, -47.861, 0.55 ) }
    dend_48 { pt3dadd( -15.1955, -26.0762, -48.897, 0.83 ) }
    dend_48 { pt3dadd( -17.35, -26.3454, -51.3045, 0.55 ) }
    dend_48 { pt3dadd( -17.799, -26.3679, -51.8389, 0.55 ) }
    dend_48 { pt3dadd( -18.6136, -26.3345, -52.9043, 0.55 ) }
    dend_48 { pt3dadd( -21.872, -25.8464, -57.3125, 0.28 ) }
    dend_48 { pt3dadd( -22.7438, -25.6735, -58.5725, 0.83 ) }
    dend_48 { pt3dadd( -25.6612, -24.9211, -62.8903, 0.55 ) }
    dend_48 { pt3dadd( -26.4017, -24.6654, -64.0164, 0.83 ) }
    dend_48 { pt3dadd( -30.137, -23.0224, -69.7203, 0.55 ) }
    dend_48 { pt3dadd( -31.1513, -22.4236, -71.3691, 0.28 ) }
    dend_48 { pt3dadd( -31.7286, -21.997, -72.3492, 0.83 ) }
    dend_48 { pt3dadd( -32.6749, -21.1592, -74.0556, 0.55 ) }
    dend_48 { pt3dadd( -33.3137, -20.439, -75.2675, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -34.5865, -18.6274, -78.0232, 0.55 ) }
    dend_48 { pt3dadd( -35.9818, -15.7448, -81.6486, 0.28 ) }
    dend_48 { pt3dadd( -36.164, -15.3008, -82.1942, 0.55 ) }
    dend_48 { pt3dadd( -36.5944, -14.1128, -83.6297, 0.28 ) }
    dend_48 { pt3dadd( -36.7539, -13.6297, -84.2125, 0.55 ) }
    dend_48 { pt3dadd( -37.2587, -11.9863, -86.1506, 0.28 ) }
    dend_48 { pt3dadd( -37.4084, -11.4028, -86.8104, 0.55 ) }
    dend_48 { pt3dadd( -37.8923, -9.57348, -88.8569, 0.28 ) }
    dend_48 { pt3dadd( -38.0897, -8.9031, -89.6537, 0.55 ) }
    dend_48 { pt3dadd( -38.591, -7.42872, -91.4134, 0.28 ) }
    dend_48 { pt3dadd( -38.7254, -7.09937, -91.8074, 0.55 ) }
    dend_48 { pt3dadd( -39.2797, -5.77218, -93.2815, 0.28 ) }
    dend_48 { pt3dadd( -39.4751, -5.31201, -93.7842, 0.55 ) }
    dend_48 { pt3dadd( -40.133, -3.88141, -95.2632, 0.28 ) }
    dend_48 { pt3dadd( -40.5417, -3.18587, -96.0784, 0.55 ) }
    dend_48 { pt3dadd( -41.8731, -1.17412, -98.4334, 0.28 ) }
    dend_48 { pt3dadd( -42.4762, -0.363426, -99.4127, 0.55 ) }
    dend_48 { pt3dadd( -44.3219, 1.8169, -102.416, 0.28 ) }
    dend_48 { pt3dadd( -44.9018, 2.46712, -103.399, 0.55 ) }
    dend_48 { pt3dadd( -46.8393, 4.51128, -107.002, 0.28 ) }
    dend_48 { pt3dadd( -47.5243, 5.17678, -108.309, 0.28 ) }
    dend_48 { pt3dadd( -48.3565, 5.94086, -109.917, 0.55 ) }
    dend_48 { pt3dadd( -49.8648, 7.2506, -112.676, 0.28 ) }
    dend_48 { pt3dadd( -50.1344, 7.50137, -113.152, 0.55 ) }
    dend_48 { pt3dadd( -51.3431, 8.55008, -115.364, 0.28 ) }
    dend_48 { pt3dadd( -51.9284, 9.05263, -116.413, 0.83 ) }
    dend_48 { pt3dadd( -53.1726, 10.0693, -118.527, 0.55 ) }
    dend_48 { pt3dadd( -53.9709, 10.7302, -119.901, 0.55 ) }
    dend_48 { pt3dadd( -55.3392, 11.9321, -122.273, 0.55 ) }
    dend_48 { pt3dadd( -58.6882, 14.8999, -128.459, 0.83 ) }
    dend_48 { pt3dadd( -59.8237, 15.9158, -130.709, 0.28 ) }
    dend_48 { pt3dadd( -60.406, 16.4483, -131.969, 0.55 ) }
    dend_48 { pt3dadd( -62.4922, 18.3942, -137.023, 0.55 ) }
    dend_48 { pt3dadd( -62.9801, 18.9098, -138.403, 0.55 ) }
    dend_48 { pt3dadd( -64.4965, 20.5522, -143.124, 0.83 ) }
    dend_48 { pt3dadd( -65.4809, 21.5822, -146.329, 0.28 ) }
    dend_48 { pt3dadd( -66.1721, 22.0493, -148.465, 0.55 ) }
    dend_48 { pt3dadd( -66.9962, 22.3107, -151.083, 0.28 ) }
    dend_48 { pt3dadd( -67.3464, 22.3121, -152.212, 0.83 ) }
    dend_48 { pt3dadd( -69.3715, 21.8409, -158.535, 0.55 ) }
    dend_48 { pt3dadd( -70.1648, 21.4865, -160.944, 0.55 ) }
    dend_48 { pt3dadd( -72.1004, 20.4241, -166.378, 0.55 ) }
    dend_48 { pt3dadd( -75.3566, 18.7167, -174.293, 0.55 ) }
    dend_48 { pt3dadd( -76.1774, 18.3034, -176.107, 0.55 ) }
    dend_48 { pt3dadd( -78.3496, 17.2735, -180.62, 0.55 ) }
    dend_48 { pt3dadd( -80.7456, 16.2506, -185.297, 0.55 ) }
    dend_48 { pt3dadd( -82.7133, 15.5153, -188.903, 0.55 ) }
    dend_48 { pt3dadd( -85.9166, 14.4507, -194.228, 0.55 ) }
    dend_48 { pt3dadd( -89.3875, 13.4718, -199.552, 0.55 ) }
    dend_48 { pt3dadd( -90.1754, 13.2712, -200.743, 0.55 ) }
    dend_48 { pt3dadd( -93.6249, 12.3567, -205.958, 0.55 ) }
    dend_48 { pt3dadd( -94.4612, 12.1322, -207.211, 0.28 ) }
    dend_48 { pt3dadd( -94.6591, 12.0729, -207.515, 0.55 ) }
    dend_48 { pt3dadd( -102.324, 9.45051, -219.334, 0.28 ) }
    dend_48 { pt3dadd( -103.031, 9.20021, -220.392, 0.83 ) }
    dend_48 { pt3dadd( -107.209, 7.60355, -226.602, 0.28 ) }
    dend_48 { pt3dadd( -107.48, 7.49806, -226.998, 0.55 ) }
    dend_48 { pt3dadd( -109.469, 6.75751, -229.883, 0.28 ) }
    dend_48 { pt3dadd( -110.288, 6.45001, -231.047, 0.55 ) }
    dend_48 { pt3dadd( -112.0, 5.73879, -233.164, 0.28 ) }
    dend_48 { pt3dadd( -112.583, 5.48715, -233.899, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 9.27515, -29.8068, -28.5406, 0.55 ) }
    dend_43 { pt3dadd( 10.6896, -30.1759, -31.3626, 0.55 ) }
    dend_43 { pt3dadd( 11.9359, -30.4442, -33.5484, 0.55 ) }
    dend_43 { pt3dadd( 14.6551, -31.0351, -38.6227, 0.83 ) }
    dend_43 { pt3dadd( 15.3783, -31.2364, -39.9843, 0.83 ) }
    dend_43 { pt3dadd( 16.227, -31.5024, -41.5614, 0.83 ) }
    dend_43 { pt3dadd( 16.9515, -31.7207, -42.862, 0.83 ) }
    dend_43 { pt3dadd( 18.2519, -32.0927, -45.1067, 0.83 ) }
    dend_43 { pt3dadd( 20.4236, -32.8082, -48.8682, 0.83 ) }
    dend_43 { pt3dadd( 21.7974, -33.1902, -51.0854, 0.83 ) }
    dend_43 { pt3dadd( 23.2653, -33.5454, -53.5891, 0.83 ) }
    dend_43 { pt3dadd( 24.8996, -33.8758, -56.3725, 0.83 ) }
    dend_43 { pt3dadd( 26.3867, -34.137, -58.9039, 0.83 ) }
    dend_43 { pt3dadd( 28.8379, -34.5259, -62.9115, 0.83 ) }
    dend_43 { pt3dadd( 30.3866, -34.6953, -65.3039, 0.83 ) }
    dend_43 { pt3dadd( 32.3514, -34.786, -68.3712, 0.83 ) }
    dend_43 { pt3dadd( 33.6014, -34.7958, -70.3595, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 20.0309, -41.403, 3.31026, 0.55 ) }
    dend_39 { pt3dadd( 20.6796, -41.4281, 4.07914, 0.55 ) }
    dend_39 { pt3dadd( 21.2118, -41.4909, 4.72851, 0.28 ) }
    dend_39 { pt3dadd( 21.5438, -41.564, 5.14486, 0.55 ) }
    dend_39 { pt3dadd( 22.1027, -41.7146, 5.85461, 1.11 ) }
    dend_39 { pt3dadd( 23.0815, -42.0513, 7.18999, 0.55 ) }
    dend_39 { pt3dadd( 23.4454, -42.1974, 7.71704, 0.55 ) }
    dend_39 { pt3dadd( 23.8299, -42.394, 8.32491, 0.83 ) }
    dend_39 { pt3dadd( 24.2254, -42.6172, 8.98576, 0.28 ) }
    dend_39 { pt3dadd( 24.2254, -42.6172, 8.98576, 0.83 ) }
    dend_39 { pt3dadd( 24.8477, -43.1711, 10.1598, 0.28 ) }
    dend_39 { pt3dadd( 25.0125, -43.3387, 10.4771, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 20.0309, -41.403, 3.31026, 0.83 ) }
    dend_34 { pt3dadd( 21.8487, -43.8703, 2.96013, 0.83 ) }
    dend_34 { pt3dadd( 23.5452, -45.6865, 2.43679, 0.55 ) }
    dend_34 { pt3dadd( 24.7185, -46.6938, 1.93778, 0.83 ) }
    dend_34 { pt3dadd( 25.6758, -47.5156, 1.53063, 0.83 ) }
    dend_34 { pt3dadd( 27.0026, -48.6547, 0.966321, 0.83 ) }
    dend_34 { pt3dadd( 28.1679, -49.6551, 0.470721, 0.83 ) }
    dend_34 { pt3dadd( 30.6479, -51.2554, -0.748444, 0.83 ) }
    dend_34 { pt3dadd( 32.5387, -52.2586, -1.8597, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -50.9062, -30.1176, 9.84197, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -52.0525, -27.2119, 8.37469, 0.55 ) }
    dend_30 { pt3dadd( -53.4531, -23.2035, 6.40805, 0.83 ) }
    dend_30 { pt3dadd( -55.3503, -17.6024, 3.53484, 0.55 ) }
    dend_30 { pt3dadd( -56.1791, -14.8858, 2.2355, 0.55 ) }
    dend_30 { pt3dadd( -57.2949, -10.916, 0.433401, 1.11 ) }
    dend_30 { pt3dadd( -58.2598, -7.38212, -1.09313, 0.83 ) }
    dend_30 { pt3dadd( -59.203, -3.6576, -2.6427, 0.55 ) }
    dend_30 { pt3dadd( -59.5594, -2.13482, -3.23346, 0.55 ) }
    dend_30 { pt3dadd( -60.5947, 1.57727, -4.39182, 0.55 ) }
    dend_30 { pt3dadd( -60.8121, 2.33035, -4.6261, 1.11 ) }
    dend_30 { pt3dadd( -61.4785, 4.15925, -4.84171, 0.55 ) }
    dend_30 { pt3dadd( -62.4002, 5.97911, -4.51614, 0.83 ) }
    dend_30 { pt3dadd( -63.4829, 7.64929, -3.83438, 0.55 ) }
    dend_30 { pt3dadd( -64.894, 9.58141, -2.88372, 0.55 ) }
    dend_30 { pt3dadd( -65.9953, 10.9445, -2.22947, 0.83 ) }
    dend_30 { pt3dadd( -71.0766, 17.5164, -0.0613889, 0.55 ) }
    dend_30 { pt3dadd( -72.4037, 19.3656, 0.352834, 0.83 ) }
    dend_30 { pt3dadd( -74.0806, 21.7869, 0.607241, 0.55 ) }
    dend_30 { pt3dadd( -75.896, 24.3218, 0.60268, 0.55 ) }
    dend_30 { pt3dadd( -77.5735, 26.6951, 0.199315, 1.11 ) }
    dend_30 { pt3dadd( -80.5421, 31.2055, -1.1591, 0.55 ) }
    dend_30 { pt3dadd( -81.4449, 32.6865, -1.74473, 0.55 ) }
    dend_30 { pt3dadd( -83.6792, 36.6197, -3.2993, 0.55 ) }
    dend_30 { pt3dadd( -85.0659, 39.2009, -4.32422, 0.55 ) }
    dend_30 { pt3dadd( -86.8466, 42.5349, -5.55097, 1.11 ) }
    dend_30 { pt3dadd( -88.8842, 46.2475, -6.77625, 0.55 ) }
    dend_30 { pt3dadd( -90.1891, 48.503, -7.34876, 1.11 ) }
    dend_30 { pt3dadd( -91.856, 51.2994, -8.02597, 0.28 ) }
    dend_30 { pt3dadd( -92.4536, 52.2715, -8.20799, 0.55 ) }
    dend_30 { pt3dadd( -93.4852, 53.8326, -8.40555, 0.28 ) }
    dend_30 { pt3dadd( -95.0051, 55.8261, -8.449, 0.83 ) }
    dend_30 { pt3dadd( -97.5367, 58.7382, -8.36837, 0.28 ) }
    dend_30 { pt3dadd( -98.509, 59.8126, -8.25428, 0.55 ) }
    dend_30 { pt3dadd( -102.628, 64.1782, -7.46785, 0.28 ) }
    dend_30 { pt3dadd( -104.19, 65.8584, -7.11262, 0.83 ) }
    dend_30 { pt3dadd( -106.4, 68.3048, -6.58484, 0.55 ) }
    dend_30 { pt3dadd( -108.62, 70.8192, -6.04644, 0.55 ) }
    dend_30 { pt3dadd( -110.843, 73.3931, -5.5627, 0.55 ) }
    dend_30 { pt3dadd( -112.501, 75.4149, -5.20454, 0.83 ) }
    dend_30 { pt3dadd( -114.382, 77.8577, -4.85042, 0.28 ) }
    dend_30 { pt3dadd( -116.109, 80.2743, -4.55198, 0.55 ) }
    dend_30 { pt3dadd( -118.049, 83.4906, -4.35701, 0.55 ) }
    dend_30 { pt3dadd( -118.37, 84.1536, -4.33884, 0.83 ) }
    dend_30 { pt3dadd( -119.519, 87.2026, -4.66159, 0.28 ) }
    dend_30 { pt3dadd( -119.944, 88.9582, -4.97623, 0.55 ) }
    dend_30 { pt3dadd( -120.147, 90.4202, -5.46067, 0.28 ) }
    dend_30 { pt3dadd( -120.39, 93.3854, -6.96541, 0.55 ) }
    dend_30 { pt3dadd( -120.476, 96.4963, -8.89257, 0.55 ) }
    dend_30 { pt3dadd( -120.562, 100.909, -11.8802, 0.28 ) }
    dend_30 { pt3dadd( -120.47, 103.828, -14.3949, 0.83 ) }
    dend_30 { pt3dadd( -120.179, 108.004, -18.4265, 0.55 ) }
    dend_30 { pt3dadd( -119.866, 111.009, -21.5386, 0.55 ) }
    dend_30 { pt3dadd( -119.739, 112.266, -22.8993, 0.55 ) }
    dend_30 { pt3dadd( -119.564, 114.165, -25.1566, 0.83 ) }
    dend_30 { pt3dadd( -119.273, 119.393, -31.3183, 0.28 ) }
    dend_30 { pt3dadd( -119.269, 120.46, -32.627, 0.83 ) }
    dend_30 { pt3dadd( -119.371, 121.941, -34.3174, 0.28 ) }
    dend_30 { pt3dadd( -119.621, 123.459, -35.8654, 0.55 ) }
    dend_30 { pt3dadd( -120.953, 127.119, -39.3722, 0.83 ) }
    dend_30 { pt3dadd( -121.718, 128.285, -40.0026, 0.83 ) }
    dend_30 { pt3dadd( -123.374, 130.149, -40.054, 0.28 ) }
    dend_30 { pt3dadd( -124.239, 131.038, -39.8476, 0.55 ) }
    dend_30 { pt3dadd( -126.337, 133.13, -38.9355, 0.28 ) }
    dend_30 { pt3dadd( -127.824, 134.759, -38.0508, 0.55 ) }
    dend_30 { pt3dadd( -131.893, 139.325, -34.0693, 0.28 ) }
    dend_30 { pt3dadd( -132.688, 140.244, -33.1418, 0.55 ) }
    dend_30 { pt3dadd( -133.866, 141.767, -31.563, 0.28 ) }
    dend_30 { pt3dadd( -134.745, 143.003, -30.2347, 0.83 ) }
    dend_30 { pt3dadd( -136.119, 145.064, -27.973, 0.83 ) }
    dend_30 { pt3dadd( -139.694, 151.146, -21.6323, 0.28 ) }
    dend_30 { pt3dadd( -140.165, 152.074, -20.7544, 0.55 ) }
    dend_30 { pt3dadd( -141.694, 155.361, -17.7663, 0.28 ) }
    dend_30 { pt3dadd( -142.502, 157.257, -16.1322, 0.83 ) }
    dend_30 { pt3dadd( -143.306, 159.342, -14.4577, 0.28 ) }
    dend_30 { pt3dadd( -143.909, 161.092, -13.256, 0.83 ) }
    dend_30 { pt3dadd( -144.992, 164.937, -11.3964, 0.28 ) }
    dend_30 { pt3dadd( -145.428, 166.706, -10.6802, 0.83 ) }
    dend_30 { pt3dadd( -146.133, 170.051, -9.67902, 0.28 ) }
    dend_30 { pt3dadd( -146.501, 172.105, -9.42307, 0.55 ) }
    dend_30 { pt3dadd( -146.805, 174.258, -9.50067, 0.28 ) }
    dend_30 { pt3dadd( -147.066, 176.784, -10.1439, 0.55 ) }
    dend_30 { pt3dadd( -147.318, 179.876, -11.4441, 0.28 ) }
    dend_30 { pt3dadd( -147.392, 181.168, -12.1286, 0.83 ) }
    dend_30 { pt3dadd( -147.54, 184.347, -14.0387, 0.28 ) }
    dend_30 { pt3dadd( -147.641, 186.709, -15.8316, 0.83 ) }
    dend_30 { pt3dadd( -147.795, 190.916, -19.223, 0.28 ) }
    dend_30 { pt3dadd( -147.807, 192.276, -20.5297, 0.83 ) }
    dend_30 { pt3dadd( -147.753, 194.688, -23.1553, 0.28 ) }
    dend_30 { pt3dadd( -147.685, 195.638, -24.3668, 0.83 ) }
    dend_30 { pt3dadd( -147.114, 201.158, -31.9271, 0.28 ) }
    dend_30 { pt3dadd( -146.852, 203.274, -35.1848, 0.83 ) }
    dend_30 { pt3dadd( -146.131, 208.071, -42.9767, 0.28 ) }
    dend_30 { pt3dadd( -145.787, 209.785, -45.9631, 0.83 ) }
    dend_30 { pt3dadd( -145.115, 212.856, -51.6149, 0.28 ) }
    dend_30 { pt3dadd( -144.899, 213.805, -53.4442, 0.55 ) }
    dend_30 { pt3dadd( -144.372, 216.656, -58.6965, 0.28 ) }
    dend_30 { pt3dadd( -144.261, 217.589, -60.372, 0.28 ) }
    dend_30 { pt3dadd( -144.236, 219.952, -63.9963, 0.55 ) }
    dend_30 { pt3dadd( -144.822, 223.478, -69.435, 0.28 ) }
    dend_30 { pt3dadd( -145.501, 225.896, -73.134, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -146.159, 228.07, -76.7882, 0.28 ) }
    dend_30 { pt3dadd( -146.523, 229.139, -78.6021, 0.55 ) }
    dend_30 { pt3dadd( -147.234, 230.855, -81.2847, 0.28 ) }
    dend_30 { pt3dadd( -151.125, 238.953, -92.5983, 0.28 ) }
    dend_30 { pt3dadd( -151.6, 239.915, -93.8256, 0.83 ) }
    dend_30 { pt3dadd( -154.767, 246.292, -101.501, 0.28 ) }
    dend_30 { pt3dadd( -155.097, 246.995, -102.374, 0.83 ) }
    dend_30 { pt3dadd( -158.829, 255.302, -111.593, 0.28 ) }
    dend_30 { pt3dadd( -159.175, 256.148, -112.166, 0.55 ) }
    dend_30 { pt3dadd( -160.778, 260.061, -111.605, 0.28 ) }
    dend_30 { pt3dadd( -161.264, 261.263, -111.557, 0.55 ) }
    dend_30 { pt3dadd( -162.086, 263.05, -111.372, 0.28 ) }
    dend_30 { pt3dadd( -162.605, 264.667, -112.224, 0.55 ) }
    dend_30 { pt3dadd( -163.262, 267.257, -114.425, 0.28 ) }
    dend_30 { pt3dadd( -163.572, 268.48, -115.481, 1.11 ) }
    dend_30 { pt3dadd( -164.525, 271.243, -117.784, 0.28 ) }
    dend_30 { pt3dadd( -164.934, 272.362, -118.822, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -50.9062, -30.1176, 9.84197, 0.55 ) }
    dend_29 { pt3dadd( -56.2282, -32.2214, 9.57125, 0.55 ) }
    dend_29 { pt3dadd( -58.5873, -33.0501, 9.54169, 0.55 ) }
    dend_29 { pt3dadd( -62.2127, -34.2586, 9.65584, 0.83 ) }
    dend_29 { pt3dadd( -65.9193, -35.5187, 9.81707, 0.55 ) }
    dend_29 { pt3dadd( -69.0141, -36.775, 10.063, 0.55 ) }
    dend_29 { pt3dadd( -70.4572, -37.4503, 10.197, 0.83 ) }
    dend_29 { pt3dadd( -72.5246, -38.6487, 10.5139, 0.55 ) }
    dend_29 { pt3dadd( -76.0352, -41.114, 11.554, 0.55 ) }
    dend_29 { pt3dadd( -77.7493, -42.5711, 12.2714, 0.55 ) }
    dend_29 { pt3dadd( -80.7648, -45.5883, 13.7803, 0.55 ) }
    dend_29 { pt3dadd( -82.0522, -47.0842, 14.5814, 0.28 ) }
    dend_29 { pt3dadd( -84.8665, -50.7209, 16.5481, 0.83 ) }
    dend_29 { pt3dadd( -88.0497, -55.1449, 19.1683, 0.55 ) }
    dend_29 { pt3dadd( -88.6077, -55.9378, 19.679, 0.55 ) }
    dend_29 { pt3dadd( -90.4035, -58.3358, 21.3087, 0.83 ) }
    dend_29 { pt3dadd( -92.6064, -60.9125, 23.1486, 0.55 ) }
    dend_29 { pt3dadd( -94.2536, -62.6861, 24.4613, 0.83 ) }
    dend_29 { pt3dadd( -98.8512, -67.0927, 27.5134, 0.55 ) }
    dend_29 { pt3dadd( -101.005, -68.9151, 28.5724, 0.83 ) }
    dend_29 { pt3dadd( -103.754, -70.9691, 29.6897, 0.28 ) }
    dend_29 { pt3dadd( -105.966, -72.3564, 30.3689, 0.55 ) }
    dend_29 { pt3dadd( -108.46, -73.637, 30.8149, 0.55 ) }
    dend_29 { pt3dadd( -112.185, -75.2563, 31.1313, 0.28 ) }
    dend_29 { pt3dadd( -113.831, -75.8422, 31.07, 0.28 ) }
    dend_29 { pt3dadd( -115.259, -76.3009, 30.9958, 0.55 ) }
    dend_29 { pt3dadd( -119.118, -77.6999, 30.7615, 0.28 ) }
    dend_29 { pt3dadd( -120.554, -78.3878, 30.7696, 0.55 ) }
    dend_29 { pt3dadd( -121.255, -78.774, 30.7782, 0.28 ) }
    dend_29 { pt3dadd( -123.109, -79.9603, 30.9223, 0.28 ) }
    dend_29 { pt3dadd( -124.341, -80.7611, 31.0239, 0.55 ) }
    dend_29 { pt3dadd( -126.793, -82.471, 31.1876, 0.28 ) }
    dend_29 { pt3dadd( -129.271, -84.3668, 31.234, 0.55 ) }
    dend_29 { pt3dadd( -132.319, -86.7214, 31.3647, 0.28 ) }
    dend_29 { pt3dadd( -134.609, -88.5651, 31.4785, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -90.0561, 3.09785, 33.3224, 0.28 ) }
    dend_25 { pt3dadd( -92.2471, 5.16728, 33.6543, 0.28 ) }
    dend_25 { pt3dadd( -92.8295, 5.7941, 33.7616, 0.55 ) }
    dend_25 { pt3dadd( -94.0801, 7.17061, 34.0195, 0.28 ) }
    dend_25 { pt3dadd( -94.3547, 7.50024, 34.0912, 0.55 ) }
    dend_25 { pt3dadd( -96.9029, 10.7758, 34.8831, 0.28 ) }
    dend_25 { pt3dadd( -98.8817, 13.3435, 35.6182, 0.28 ) }
    dend_25 { pt3dadd( -100.024, 14.9978, 36.1626, 0.28 ) }
    dend_25 { pt3dadd( -100.823, 16.2463, 36.6158, 0.55 ) }
    dend_25 { pt3dadd( -102.575, 19.2314, 37.6348, 0.28 ) }
    dend_25 { pt3dadd( -103.221, 20.3478, 38.0463, 0.55 ) }
    dend_25 { pt3dadd( -104.209, 22.1087, 38.7897, 0.28 ) }
    dend_25 { pt3dadd( -104.712, 23.101, 39.2343, 0.55 ) }
    dend_25 { pt3dadd( -105.491, 24.7312, 39.9965, 0.28 ) }
    dend_25 { pt3dadd( -106.434, 26.9878, 41.0183, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -90.0561, 3.09785, 33.3224, 0.28 ) }
    dend_24 { pt3dadd( -87.6905, 2.95632, 31.9873, 0.28 ) }
    dend_24 { pt3dadd( -87.0143, 2.98038, 31.5831, 0.83 ) }
    dend_24 { pt3dadd( -83.7636, 3.06397, 29.9086, 0.28 ) }
    dend_24 { pt3dadd( -83.4256, 3.06755, 29.7441, 0.83 ) }
    dend_24 { pt3dadd( -80.4794, 2.95492, 28.4837, 0.28 ) }
    dend_24 { pt3dadd( -79.6148, 2.89049, 28.1382, 0.83 ) }
    dend_24 { pt3dadd( -73.9583, 2.37962, 26.1115, 0.28 ) }
    dend_24 { pt3dadd( -70.7852, 2.00714, 25.0717, 0.28 ) }
    dend_24 { pt3dadd( -70.0939, 1.89894, 24.8795, 1.11 ) }
    dend_24 { pt3dadd( -66.5149, 1.19429, 24.0061, 0.28 ) }
    dend_24 { pt3dadd( -65.4655, 0.97723, 23.7418, 0.55 ) }
    dend_24 { pt3dadd( -61.6194, 0.19609, 22.7016, 0.28 ) }
    dend_24 { pt3dadd( -59.8429, -0.205212, 22.2003, 0.28 ) }
    dend_24 { pt3dadd( -58.7293, -0.427107, 21.8279, 0.55 ) }
    dend_24 { pt3dadd( -57.0433, -0.717896, 21.2245, 0.28 ) }
    dend_24 { pt3dadd( -52.0493, -1.38647, 19.0825, 0.28 ) }
    dend_24 { pt3dadd( -49.432, -1.71738, 17.8987, 0.28 ) }
    dend_24 { pt3dadd( -48.8729, -1.80787, 17.6045, 0.83 ) }
    dend_24 { pt3dadd( -47.6755, -2.03738, 16.9118, 0.28 ) }
    dend_24 { pt3dadd( -47.6755, -2.03738, 16.9118, 0.83 ) }
    dend_24 { pt3dadd( -45.1245, -2.69846, 15.3891, 0.28 ) }
    dend_24 { pt3dadd( -44.5034, -2.98357, 15.0209, 0.83 ) }
    dend_24 { pt3dadd( -42.6978, -3.84275, 13.6077, 0.28 ) }
    dend_24 { pt3dadd( -41.6108, -4.36021, 12.6847, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -25.4357, 46.5153, -20.7411, 0.28 ) }
    dend_18 { pt3dadd( -26.4792, 45.1612, -21.9038, 0.28 ) }
    dend_18 { pt3dadd( -27.2752, 44.114, -22.9329, 0.83 ) }
    dend_18 { pt3dadd( -28.1425, 42.9663, -24.0375, 0.55 ) }
    dend_18 { pt3dadd( -29.0149, 41.805, -25.3483, 1.11 ) }
    dend_18 { pt3dadd( -31.3257, 38.5121, -29.3695, 0.28 ) }
    dend_18 { pt3dadd( -31.4827, 38.2901, -29.6839, 0.83 ) }
    dend_18 { pt3dadd( -32.157, 37.3101, -31.3256, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -32.5574, 36.7046, -32.4321, 0.83 ) }
    dend_18 { pt3dadd( -33.9918, 34.5195, -36.7148, 0.28 ) }
    dend_18 { pt3dadd( -34.3666, 33.9666, -37.799, 0.83 ) }
    dend_18 { pt3dadd( -35.7246, 32.184, -41.9405, 0.28 ) }
    dend_18 { pt3dadd( -35.9632, 31.8771, -42.7239, 0.55 ) }
    dend_18 { pt3dadd( -36.3685, 31.3668, -44.1075, 0.55 ) }
    dend_18 { pt3dadd( -36.778, 30.8539, -45.5871, 0.55 ) }
    dend_18 { pt3dadd( -37.3228, 30.2051, -47.4728, 1.11 ) }
    dend_18 { pt3dadd( -39.4513, 27.7021, -55.7119, 0.55 ) }
    dend_18 { pt3dadd( -39.726, 27.3491, -56.9764, 0.28 ) }
    dend_18 { pt3dadd( -39.805, 27.2602, -57.3593, 0.55 ) }
    dend_18 { pt3dadd( -40.3354, 26.754, -59.9053, 0.28 ) }
    dend_18 { pt3dadd( -40.538, 26.5433, -61.0376, 0.83 ) }
    dend_18 { pt3dadd( -41.6497, 25.3393, -67.8511, 0.28 ) }
    dend_18 { pt3dadd( -41.7029, 25.2845, -68.1432, 0.55 ) }
    dend_18 { pt3dadd( -42.9035, 24.0728, -74.6517, 0.28 ) }
    dend_18 { pt3dadd( -43.1096, 23.8347, -75.8286, 0.55 ) }
    dend_18 { pt3dadd( -43.7354, 23.0837, -79.1129, 0.28 ) }
    dend_18 { pt3dadd( -43.8456, 22.9384, -79.6802, 0.83 ) }
    dend_18 { pt3dadd( -44.4025, 22.1609, -82.2731, 0.28 ) }
    dend_18 { pt3dadd( -44.6815, 21.7634, -83.5579, 0.83 ) }
    dend_18 { pt3dadd( -46.0249, 19.6072, -89.7464, 0.28 ) }
    dend_18 { pt3dadd( -46.385, 19.0724, -91.1593, 0.83 ) }
    dend_18 { pt3dadd( -47.9067, 16.9766, -96.2878, 0.55 ) }
    dend_18 { pt3dadd( -48.1017, 16.6991, -96.9258, 0.83 ) }
    dend_18 { pt3dadd( -49.1768, 15.097, -100.353, 0.28 ) }
    dend_18 { pt3dadd( -49.5205, 14.5741, -101.363, 0.55 ) }
    dend_18 { pt3dadd( -50.9562, 12.3206, -105.217, 0.28 ) }
    dend_18 { pt3dadd( -51.4643, 11.4875, -106.601, 0.83 ) }
    dend_18 { pt3dadd( -54.0131, 7.25785, -112.979, 0.28 ) }
    dend_18 { pt3dadd( -54.1409, 7.04173, -113.3, 0.83 ) }
    dend_18 { pt3dadd( -54.9123, 5.66025, -115.256, 0.28 ) }
    dend_18 { pt3dadd( -55.105, 5.31753, -115.772, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -25.4357, 46.5153, -20.7411, 0.55 ) }
    dend_17 { pt3dadd( -26.4984, 49.0833, -21.0143, 0.55 ) }
    dend_17 { pt3dadd( -27.2834, 51.0316, -21.2734, 0.55 ) }
    dend_17 { pt3dadd( -28.0794, 53.0946, -21.6777, 0.28 ) }
    dend_17 { pt3dadd( -28.5975, 54.4623, -21.9808, 1.38 ) }
    dend_17 { pt3dadd( -29.366, 56.4644, -22.5115, 0.55 ) }
    dend_17 { pt3dadd( -30.2326, 58.7015, -23.1393, 0.55 ) }
    dend_17 { pt3dadd( -30.6196, 59.6517, -23.3936, 0.83 ) }
    dend_17 { pt3dadd( -31.2995, 61.3512, -23.9081, 0.28 ) }
    dend_17 { pt3dadd( -31.6496, 62.3257, -24.2175, 0.55 ) }
    dend_17 { pt3dadd( -32.2183, 64.0385, -24.7128, 0.28 ) }
    dend_17 { pt3dadd( -32.6218, 65.2729, -24.9861, 0.83 ) }
    dend_17 { pt3dadd( -33.4012, 67.7857, -25.2875, 0.28 ) }
    dend_17 { pt3dadd( -33.7743, 69.1378, -25.4524, 0.55 ) }
    dend_17 { pt3dadd( -34.1542, 70.7558, -25.6246, 0.28 ) }
    dend_17 { pt3dadd( -34.3916, 72.1335, -25.8366, 0.83 ) }
    dend_17 { pt3dadd( -34.6651, 74.718, -26.2858, 0.28 ) }
    dend_17 { pt3dadd( -34.8079, 77.0191, -26.8256, 0.83 ) }
    dend_17 { pt3dadd( -34.8463, 80.9066, -27.9013, 0.28 ) }
    dend_17 { pt3dadd( -34.7896, 82.2581, -28.3144, 0.83 ) }
    dend_17 { pt3dadd( -34.5225, 85.9795, -29.7471, 0.28 ) }
    dend_17 { pt3dadd( -34.3387, 87.7097, -30.5144, 0.83 ) }
    dend_17 { pt3dadd( -34.0558, 89.8432, -31.5463, 0.28 ) }
    dend_17 { pt3dadd( -33.8268, 91.5307, -32.4244, 0.55 ) }
    dend_17 { pt3dadd( -33.5984, 93.2168, -33.2934, 0.83 ) }
    dend_17 { pt3dadd( -33.2225, 96.9409, -35.2138, 0.28 ) }
    dend_17 { pt3dadd( -33.1497, 98.3914, -35.9241, 0.83 ) }
    dend_17 { pt3dadd( -33.1367, 100.349, -36.8608, 0.83 ) }
    dend_17 { pt3dadd( -33.224, 102.295, -37.7333, 0.28 ) }
    dend_17 { pt3dadd( -33.4525, 103.791, -38.4442, 0.83 ) }
    dend_17 { pt3dadd( -33.8151, 105.283, -39.1042, 0.28 ) }
    dend_17 { pt3dadd( -34.1446, 106.339, -39.4973, 0.55 ) }
    dend_17 { pt3dadd( -34.4568, 107.104, -39.7904, 0.28 ) }
    dend_17 { pt3dadd( -35.2523, 108.666, -40.3123, 0.55 ) }
    dend_17 { pt3dadd( -36.9018, 111.54, -41.0065, 0.28 ) }
    dend_17 { pt3dadd( -37.5961, 112.555, -41.2306, 0.55 ) }
    dend_17 { pt3dadd( -38.4277, 113.643, -41.4336, 0.28 ) }
    dend_17 { pt3dadd( -39.393, 114.803, -41.6116, 0.83 ) }
    dend_17 { pt3dadd( -40.7114, 116.277, -41.7483, 0.28 ) }
    dend_17 { pt3dadd( -42.0359, 117.702, -41.7799, 0.83 ) }
    dend_17 { pt3dadd( -44.0269, 119.807, -41.6558, 0.28 ) }
    dend_17 { pt3dadd( -44.8083, 120.648, -41.6407, 0.83 ) }
    dend_17 { pt3dadd( -45.7004, 121.649, -41.6388, 0.28 ) }
    dend_17 { pt3dadd( -46.8374, 123.041, -41.6678, 0.28 ) }
    dend_17 { pt3dadd( -47.3215, 123.725, -41.7504, 0.55 ) }
    dend_17 { pt3dadd( -48.3476, 125.494, -42.1045, 0.28 ) }
    dend_17 { pt3dadd( -49.08, 127.085, -42.6759, 0.55 ) }
    dend_17 { pt3dadd( -49.4525, 128.015, -43.118, 0.55 ) }
    dend_17 { pt3dadd( -49.9559, 129.415, -43.8777, 0.83 ) }
    dend_17 { pt3dadd( -50.8827, 132.002, -45.5488, 0.28 ) }
    dend_17 { pt3dadd( -51.549, 133.893, -46.8979, 0.83 ) }
    dend_17 { pt3dadd( -52.4819, 136.538, -49.0623, 0.28 ) }
    dend_17 { pt3dadd( -52.8444, 137.508, -49.9264, 0.28 ) }
    dend_17 { pt3dadd( -53.3214, 138.861, -51.1668, 0.83 ) }
    dend_17 { pt3dadd( -54.1875, 141.421, -53.6035, 0.28 ) }
    dend_17 { pt3dadd( -54.5105, 142.367, -54.4721, 0.83 ) }
    dend_17 { pt3dadd( -55.6363, 145.849, -57.5278, 0.28 ) }
    dend_17 { pt3dadd( -56.187, 147.542, -58.9842, 1.11 ) }
    dend_17 { pt3dadd( -57.2376, 150.874, -61.8925, 0.28 ) }
    dend_17 { pt3dadd( -57.6316, 152.282, -63.1341, 0.55 ) }
    dend_17 { pt3dadd( -57.9494, 153.595, -64.1925, 0.28 ) }
    dend_17 { pt3dadd( -58.1992, 154.666, -64.9867, 0.55 ) }
    dend_17 { pt3dadd( -58.7575, 157.483, -66.8814, 0.28 ) }
    dend_17 { pt3dadd( -58.9928, 158.612, -67.7241, 0.55 ) }
    dend_17 { pt3dadd( -59.3794, 160.34, -69.0702, 0.28 ) }
    dend_17 { pt3dadd( -59.6077, 161.469, -70.0355, 0.55 ) }
    dend_17 { pt3dadd( -59.8355, 162.83, -71.2702, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -60.1229, 164.847, -73.136, 0.55 ) }
    dend_17 { pt3dadd( -60.5695, 168.562, -76.3722, 0.28 ) }
    dend_17 { pt3dadd( -60.7346, 170.099, -77.7675, 0.55 ) }
    dend_17 { pt3dadd( -60.9352, 172.293, -79.7713, 0.28 ) }
    dend_17 { pt3dadd( -61.0015, 173.515, -80.9412, 0.83 ) }
    dend_17 { pt3dadd( -61.0147, 175.177, -82.4987, 0.28 ) }
    dend_17 { pt3dadd( -60.9869, 176.369, -83.6451, 0.83 ) }
    dend_17 { pt3dadd( -60.889, 178.426, -85.5947, 0.28 ) }
    dend_17 { pt3dadd( -60.851, 179.356, -86.566, 0.55 ) }
    dend_17 { pt3dadd( -60.7711, 180.665, -87.9871, 0.28 ) }
    dend_17 { pt3dadd( -60.6679, 181.768, -89.2547, 0.55 ) }
    dend_17 { pt3dadd( -60.3962, 184.968, -92.779, 0.28 ) }
    dend_17 { pt3dadd( -60.3291, 186.076, -93.9402, 0.28 ) }
    dend_17 { pt3dadd( -60.3523, 188.51, -96.164, 0.55 ) }
    dend_17 { pt3dadd( -60.4414, 190.533, -97.8092, 0.28 ) }
    dend_17 { pt3dadd( -60.5496, 191.624, -98.5656, 0.55 ) }
    dend_17 { pt3dadd( -61.0485, 194.502, -100.196, 0.28 ) }
    dend_17 { pt3dadd( -61.5479, 196.128, -100.826, 0.83 ) }
    dend_17 { pt3dadd( -62.5623, 198.446, -101.493, 0.28 ) }
    dend_17 { pt3dadd( -63.0065, 199.145, -101.629, 0.55 ) }
    dend_17 { pt3dadd( -63.8583, 200.17, -101.8, 0.28 ) }
    dend_17 { pt3dadd( -64.7874, 201.11, -101.996, 0.55 ) }
    dend_17 { pt3dadd( -66.9872, 202.976, -102.427, 0.28 ) }
    dend_17 { pt3dadd( -67.5029, 203.38, -102.503, 0.55 ) }
    dend_17 { pt3dadd( -70.7679, 205.916, -103.069, 0.28 ) }
    dend_17 { pt3dadd( -71.5714, 206.616, -103.232, 0.55 ) }
    dend_17 { pt3dadd( -72.6346, 207.701, -103.444, 0.28 ) }
    dend_17 { pt3dadd( -73.6758, 208.852, -103.669, 0.55 ) }
    dend_17 { pt3dadd( -75.2744, 210.89, -104.027, 0.28 ) }
    dend_17 { pt3dadd( -76.2137, 212.208, -104.213, 0.55 ) }
    dend_17 { pt3dadd( -77.9659, 215.294, -104.25, 0.28 ) }
    dend_17 { pt3dadd( -78.573, 216.552, -104.257, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.28304, 73.034, -15.3011, 0.55 ) }
    dend_15 { pt3dadd( -3.47751, 74.4641, -16.2534, 0.55 ) }
    dend_15 { pt3dadd( -1.11055, 76.8516, -19.0485, 0.55 ) }
    dend_15 { pt3dadd( -0.231441, 77.8824, -20.5382, 0.83 ) }
    dend_15 { pt3dadd( 0.463191, 78.7375, -21.8618, 0.83 ) }
    dend_15 { pt3dadd( 2.3459, 81.1718, -25.7518, 0.28 ) }
    dend_15 { pt3dadd( 3.04127, 82.0868, -27.1869, 0.83 ) }
    dend_15 { pt3dadd( 5.1361, 85.5477, -33.5008, 0.55 ) }
    dend_15 { pt3dadd( 5.46786, 86.3313, -35.1179, 0.28 ) }
    dend_15 { pt3dadd( 5.57403, 86.6996, -35.9422, 0.28 ) }
    dend_15 { pt3dadd( 5.6601, 87.3142, -37.3934, 0.55 ) }
    dend_15 { pt3dadd( 5.68413, 88.0508, -39.098, 0.55 ) }
    dend_15 { pt3dadd( 5.65835, 90.63, -44.6843, 0.28 ) }
    dend_15 { pt3dadd( 5.66449, 91.8545, -47.0889, 0.83 ) }
    dend_15 { pt3dadd( 5.72827, 94.5376, -52.1033, 0.83 ) }
    dend_15 { pt3dadd( 5.82785, 96.9046, -56.3758, 0.83 ) }
    dend_15 { pt3dadd( 6.02461, 99.9356, -61.7338, 0.28 ) }
    dend_15 { pt3dadd( 6.12682, 100.993, -63.5374, 0.28 ) }
    dend_15 { pt3dadd( 6.2345, 101.574, -64.4165, 0.55 ) }
    dend_15 { pt3dadd( 6.99098, 104.154, -67.9674, 0.28 ) }
    dend_15 { pt3dadd( 7.14566, 104.539, -68.4448, 0.55 ) }
    dend_15 { pt3dadd( 8.45752, 107.03, -71.4503, 0.28 ) }
    dend_15 { pt3dadd( 8.97961, 107.877, -72.7414, 0.55 ) }
    dend_15 { pt3dadd( 9.50076, 108.633, -74.0933, 0.28 ) }
    dend_15 { pt3dadd( 9.70895, 108.915, -74.6363, 0.55 ) }
    dend_15 { pt3dadd( 11.2534, 110.723, -78.4589, 0.28 ) }
    dend_15 { pt3dadd( 11.7549, 111.243, -79.5947, 0.55 ) }
    dend_15 { pt3dadd( 14.6007, 113.793, -85.6112, 0.28 ) }
    dend_15 { pt3dadd( 15.4362, 114.513, -87.3051, 0.28 ) }
    dend_15 { pt3dadd( 16.3294, 115.259, -88.993, 0.55 ) }
    dend_15 { pt3dadd( 18.2252, 116.842, -92.6082, 0.28 ) }
    dend_15 { pt3dadd( 18.8435, 117.337, -93.6995, 0.55 ) }
    dend_15 { pt3dadd( 21.3998, 119.324, -98.0777, 0.28 ) }
    dend_15 { pt3dadd( 22.7172, 120.293, -100.184, 0.28 ) }
    dend_15 { pt3dadd( 23.8782, 121.142, -102.081, 0.83 ) }
    dend_15 { pt3dadd( 28.052, 124.005, -108.562, 0.28 ) }
    dend_15 { pt3dadd( 29.1698, 124.726, -110.198, 0.28 ) }
    dend_15 { pt3dadd( 30.7624, 125.696, -112.372, 0.55 ) }
    dend_15 { pt3dadd( 32.1781, 126.515, -114.11, 0.28 ) }
    dend_15 { pt3dadd( 33.1938, 127.042, -115.368, 0.55 ) }
    dend_15 { pt3dadd( 34.2001, 127.528, -116.509, 0.28 ) }
    dend_15 { pt3dadd( 34.8575, 127.823, -116.972, 0.55 ) }
    dend_15 { pt3dadd( 36.4061, 128.576, -118.072, 0.28 ) }
    dend_15 { pt3dadd( 38.6434, 129.843, -119.304, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.28304, 73.034, -15.3011, 0.55 ) }
    dend_14 { pt3dadd( -5.63964, 76.8001, -13.8693, 0.55 ) }
    dend_14 { pt3dadd( -5.66094, 79.3033, -12.7933, 0.55 ) }
    dend_14 { pt3dadd( -5.66405, 80.366, -12.3284, 0.55 ) }
    dend_14 { pt3dadd( -5.65333, 82.0634, -11.6021, 0.55 ) }
    dend_14 { pt3dadd( -5.65461, 83.4966, -11.0581, 0.55 ) }
    dend_14 { pt3dadd( -5.63747, 86.9408, -9.76103, 0.28 ) }
    dend_14 { pt3dadd( -5.61063, 88.1535, -9.29518, 0.55 ) }
    dend_14 { pt3dadd( -5.47614, 89.8448, -8.5266, 0.55 ) }
    dend_14 { pt3dadd( -5.42664, 90.6614, -8.08661, 0.83 ) }
    dend_14 { pt3dadd( -5.4015, 92.5138, -6.97752, 0.28 ) }
    dend_14 { pt3dadd( -5.41187, 94.073, -6.04812, 0.83 ) }
    dend_14 { pt3dadd( -5.50933, 96.915, -4.33439, 0.28 ) }
    dend_14 { pt3dadd( -5.50911, 97.2411, -4.09709, 0.83 ) }
    dend_14 { pt3dadd( -5.3411, 99.7116, -2.06794, 0.55 ) }
    dend_14 { pt3dadd( -5.21346, 100.83, -1.06165, 0.55 ) }
    dend_14 { pt3dadd( -4.96926, 102.47, 0.461418, 0.83 ) }
    dend_14 { pt3dadd( -4.44029, 105.45, 3.27977, 0.55 ) }
    dend_14 { pt3dadd( -3.9684, 107.733, 5.45434, 0.83 ) }
    dend_14 { pt3dadd( -3.69278, 108.887, 6.57656, 0.28 ) }
    dend_14 { pt3dadd( -3.42357, 109.903, 7.49799, 0.83 ) }
    dend_14 { pt3dadd( -3.03421, 111.413, 8.85537, 0.83 ) }
    dend_14 { pt3dadd( -2.46077, 114.075, 11.1586, 0.83 ) }
    dend_14 { pt3dadd( -2.11582, 116.321, 12.7315, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -2.04406, 117.094, 13.2209, 0.83 ) }
    dend_14 { pt3dadd( -1.87358, 119.429, 14.7511, 0.83 ) }
    dend_14 { pt3dadd( -1.74832, 121.477, 16.1234, 0.28 ) }
    dend_14 { pt3dadd( -1.68043, 122.542, 16.8772, 0.55 ) }
    dend_14 { pt3dadd( -1.59478, 124.663, 18.2912, 0.28 ) }
    dend_14 { pt3dadd( -1.60906, 126.856, 19.8535, 0.55 ) }
    dend_14 { pt3dadd( -1.68876, 129.727, 22.0557, 0.28 ) }
    dend_14 { pt3dadd( -1.72154, 130.371, 22.5956, 0.83 ) }
    dend_14 { pt3dadd( -1.79695, 131.675, 23.6681, 0.28 ) }
    dend_14 { pt3dadd( -1.88046, 133.237, 25.0166, 0.55 ) }
    dend_14 { pt3dadd( -1.90914, 135.504, 27.1816, 0.28 ) }
    dend_14 { pt3dadd( -1.90383, 135.94, 27.5738, 0.55 ) }
    dend_14 { pt3dadd( -1.86783, 136.879, 28.4559, 0.28 ) }
    dend_14 { pt3dadd( -1.75998, 137.855, 29.4805, 0.83 ) }
    dend_14 { pt3dadd( -1.49666, 139.129, 30.8791, 0.28 ) }
    dend_14 { pt3dadd( -1.02901, 140.698, 32.6964, 0.55 ) }
    dend_14 { pt3dadd( -0.647787, 141.757, 34.0683, 0.28 ) }
    dend_14 { pt3dadd( -0.42066, 142.417, 34.8849, 0.83 ) }
    dend_14 { pt3dadd( 0.0805322, 143.819, 36.5169, 0.83 ) }
    dend_14 { pt3dadd( 0.577474, 145.239, 38.0423, 0.55 ) }
    dend_14 { pt3dadd( 0.858714, 146.019, 38.7805, 0.83 ) }
    dend_14 { pt3dadd( 2.3728, 150.41, 42.4823, 0.55 ) }
    dend_14 { pt3dadd( 2.91463, 152.077, 43.6985, 0.83 ) }
    dend_14 { pt3dadd( 4.6245, 157.588, 47.002, 0.28 ) }
    dend_14 { pt3dadd( 4.92475, 158.775, 47.4375, 0.55 ) }
    dend_14 { pt3dadd( 5.46322, 161.15, 47.8395, 0.28 ) }
    dend_14 { pt3dadd( 5.77654, 162.578, 47.9078, 0.83 ) }
    dend_14 { pt3dadd( 6.33774, 165.527, 47.4755, 0.28 ) }
    dend_14 { pt3dadd( 6.60586, 167.313, 47.0143, 0.55 ) }
    dend_14 { pt3dadd( 7.02443, 172.326, 44.5645, 0.28 ) }
    dend_14 { pt3dadd( 7.14072, 174.535, 43.3958, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 27.1572, 300.575, -0.956724, 0.55 ) }
    dend_10 { pt3dadd( 27.6027, 303.042, -1.00158, 0.55 ) }
    dend_10 { pt3dadd( 28.0173, 305.995, -1.13746, 0.55 ) }
    dend_10 { pt3dadd( 28.3886, 308.835, -1.28083, 0.83 ) }
    dend_10 { pt3dadd( 28.6217, 310.801, -1.37167, 0.55 ) }
    dend_10 { pt3dadd( 28.8963, 313.246, -1.45332, 1.11 ) }
    dend_10 { pt3dadd( 29.3484, 316.994, -1.51916, 0.55 ) }
    dend_10 { pt3dadd( 29.6917, 319.648, -1.51508, 1.11 ) }
    dend_10 { pt3dadd( 30.0288, 321.647, -1.52338, 0.83 ) }
    dend_10 { pt3dadd( 30.4877, 323.514, -1.49077, 0.55 ) }
    dend_10 { pt3dadd( 31.3388, 325.933, -1.34709, 0.55 ) }
    dend_10 { pt3dadd( 32.3402, 327.989, -1.14006, 0.83 ) }
    dend_10 { pt3dadd( 33.7915, 330.086, -0.870144, 0.55 ) }
    dend_10 { pt3dadd( 35.5846, 332.108, -0.592792, 0.83 ) }
    dend_10 { pt3dadd( 37.1684, 333.61, -0.362457, 0.83 ) }
    dend_10 { pt3dadd( 38.6511, 334.82, -0.161077, 0.83 ) }
    dend_10 { pt3dadd( 39.9304, 335.773, 0.0268058, 1.11 ) }
    dend_10 { pt3dadd( 42.7043, 337.753, 0.366638, 0.83 ) }
    dend_10 { pt3dadd( 43.894, 338.613, 0.507202, 0.55 ) }
    dend_10 { pt3dadd( 45.7656, 340.003, 0.786628, 0.83 ) }
    dend_10 { pt3dadd( 48.5019, 342.174, 1.17814, 0.55 ) }
    dend_10 { pt3dadd( 50.2243, 343.528, 1.44173, 1.11 ) }
    dend_10 { pt3dadd( 52.7973, 345.59, 1.8889, 0.55 ) }
    dend_10 { pt3dadd( 53.6677, 346.328, 2.08124, 0.55 ) }
    dend_10 { pt3dadd( 54.8492, 347.371, 2.34826, 0.55 ) }
    dend_10 { pt3dadd( 57.4564, 349.919, 3.0024, 0.55 ) }
    dend_10 { pt3dadd( 58.4248, 351.0, 3.30439, 0.28 ) }
    dend_10 { pt3dadd( 59.0037, 351.753, 3.51543, 0.55 ) }
    dend_10 { pt3dadd( 59.9752, 353.225, 3.96244, 0.28 ) }
    dend_10 { pt3dadd( 60.7631, 354.536, 4.31197, 0.83 ) }
    dend_10 { pt3dadd( 62.1332, 357.028, 4.90472, 0.55 ) }
    dend_10 { pt3dadd( 62.5661, 357.866, 5.11226, 0.83 ) }
    dend_10 { pt3dadd( 63.4669, 359.674, 5.5112, 0.55 ) }
    dend_10 { pt3dadd( 64.059, 360.844, 5.74252, 0.83 ) }
    dend_10 { pt3dadd( 65.8768, 364.4, 6.38353, 0.28 ) }
    dend_10 { pt3dadd( 67.112, 366.749, 6.76169, 0.83 ) }
    dend_10 { pt3dadd( 68.4147, 369.172, 7.11853, 0.28 ) }
    dend_10 { pt3dadd( 69.5616, 371.308, 7.40663, 0.55 ) }
    dend_10 { pt3dadd( 70.7491, 373.567, 7.67925, 0.55 ) }
    dend_10 { pt3dadd( 71.776, 375.62, 7.82606, 0.55 ) }
    dend_10 { pt3dadd( 72.3027, 376.765, 7.84522, 0.28 ) }
    dend_10 { pt3dadd( 72.7717, 377.875, 7.82094, 0.55 ) }
    dend_10 { pt3dadd( 73.5629, 380.04, 7.70622, 0.28 ) }
    dend_10 { pt3dadd( 74.0088, 381.318, 7.54904, 0.55 ) }
    dend_10 { pt3dadd( 74.7964, 383.645, 7.10869, 0.28 ) }
    dend_10 { pt3dadd( 75.3208, 385.229, 6.75965, 0.28 ) }
    dend_10 { pt3dadd( 76.0477, 387.443, 6.23704, 0.83 ) }
    dend_10 { pt3dadd( 76.6933, 389.428, 5.72555, 0.83 ) }
    dend_10 { pt3dadd( 77.9227, 393.217, 4.74842, 0.55 ) }
    dend_10 { pt3dadd( 78.6261, 395.344, 4.25902, 0.55 ) }
    dend_10 { pt3dadd( 79.1019, 396.721, 4.02961, 0.55 ) }
    dend_10 { pt3dadd( 79.4178, 397.5, 3.91232, 0.28 ) }
    dend_10 { pt3dadd( 79.9021, 398.593, 3.77636, 0.55 ) }
    dend_10 { pt3dadd( 80.3365, 399.522, 3.72325, 0.28 ) }
    dend_10 { pt3dadd( 80.7466, 400.391, 3.66479, 1.11 ) }
    dend_10 { pt3dadd( 82.0094, 403.009, 3.19594, 0.55 ) }
    dend_10 { pt3dadd( 82.8589, 404.923, 2.70488, 0.55 ) }
    dend_10 { pt3dadd( 83.575, 406.604, 2.13158, 0.28 ) }
    dend_10 { pt3dadd( 83.9738, 407.554, 1.7065, 0.83 ) }
    dend_10 { pt3dadd( 85.1678, 410.276, 0.252251, 0.55 ) }
    dend_10 { pt3dadd( 85.9655, 412.033, -0.765742, 0.83 ) }
    dend_10 { pt3dadd( 86.8815, 413.963, -1.99335, 0.83 ) }
    dend_10 { pt3dadd( 87.9138, 415.903, -3.28575, 0.55 ) }
    dend_10 { pt3dadd( 88.8224, 417.418, -4.33782, 0.28 ) }
    dend_10 { pt3dadd( 89.7619, 418.892, -5.34795, 0.55 ) }
    dend_10 { pt3dadd( 90.6463, 420.243, -6.25313, 0.55 ) }
    dend_10 { pt3dadd( 91.8605, 422.009, -7.48183, 1.11 ) }
    dend_10 { pt3dadd( 93.4541, 424.337, -9.05084, 0.55 ) }
    dend_10 { pt3dadd( 94.112, 425.351, -9.68311, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 94.8083, 426.448, -10.3946, 0.55 ) }
    dend_10 { pt3dadd( 96.3512, 429.049, -12.1782, 0.55 ) }
    dend_10 { pt3dadd( 97.1395, 430.36, -13.1091, 0.83 ) }
    dend_10 { pt3dadd( 98.7164, 433.153, -14.967, 0.28 ) }
    dend_10 { pt3dadd( 99.1593, 433.994, -15.5015, 0.55 ) }
    dend_10 { pt3dadd( 100.398, 436.4, -16.9314, 0.28 ) }
    dend_10 { pt3dadd( 101.005, 437.577, -17.5773, 0.55 ) }
    dend_10 { pt3dadd( 101.939, 439.432, -18.4496, 0.28 ) }
    dend_10 { pt3dadd( 102.776, 441.301, -19.2459, 0.55 ) }
    dend_10 { pt3dadd( 103.178, 442.276, -19.6132, 0.28 ) }
    dend_10 { pt3dadd( 103.803, 443.886, -20.1306, 0.55 ) }
    dend_10 { pt3dadd( 104.785, 446.58, -20.7315, 0.55 ) }
    dend_10 { pt3dadd( 105.323, 447.969, -21.0461, 0.28 ) }
    dend_10 { pt3dadd( 105.746, 449.197, -21.3781, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 27.1572, 300.575, -0.956724, 0.55 ) }
    dend_7 { pt3dadd( 25.884, 302.29, -2.2153, 0.55 ) }
    dend_7 { pt3dadd( 24.3545, 304.428, -3.59124, 1.11 ) }
    dend_7 { pt3dadd( 22.5907, 306.677, -4.99244, 0.55 ) }
    dend_7 { pt3dadd( 22.0311, 307.42, -5.48972, 0.83 ) }
    dend_7 { pt3dadd( 20.7164, 309.225, -6.70725, 0.55 ) }
    dend_7 { pt3dadd( 19.6141, 310.665, -7.70727, 0.55 ) }
    dend_7 { pt3dadd( 18.7539, 311.767, -8.48681, 0.83 ) }
    dend_7 { pt3dadd( 16.1877, 314.958, -10.7906, 0.55 ) }
    dend_7 { pt3dadd( 14.2267, 317.288, -12.4046, 0.55 ) }
    dend_7 { pt3dadd( 13.5452, 318.103, -13.0002, 0.83 ) }
    dend_7 { pt3dadd( 11.6839, 320.29, -14.6548, 0.55 ) }
    dend_7 { pt3dadd( 11.3854, 320.637, -14.9295, 0.83 ) }
    dend_7 { pt3dadd( 10.3917, 321.819, -15.7885, 0.28 ) }
    dend_7 { pt3dadd( 10.2244, 322.027, -15.9027, 0.55 ) }
    dend_7 { pt3dadd( 9.1232, 323.291, -16.3895, 0.28 ) }
    dend_7 { pt3dadd( 8.42629, 324.13, -16.6428, 0.55 ) }
    dend_7 { pt3dadd( 7.63271, 325.054, -16.9494, 0.55 ) }
    dend_7 { pt3dadd( 5.47176, 327.45, -17.8337, 0.55 ) }
    dend_7 { pt3dadd( 4.00895, 329.086, -18.4725, 0.55 ) }
    dend_7 { pt3dadd( 2.92558, 330.392, -19.0789, 0.83 ) }
    dend_7 { pt3dadd( 1.49898, 332.226, -20.0033, 0.83 ) }
    dend_7 { pt3dadd( -0.169097, 334.697, -21.4784, 0.55 ) }
    dend_7 { pt3dadd( -1.28987, 336.556, -22.719, 0.55 ) }
    dend_7 { pt3dadd( -2.39169, 338.629, -24.2227, 1.11 ) }
    dend_7 { pt3dadd( -3.46863, 341.161, -26.0195, 0.55 ) }
    dend_7 { pt3dadd( -3.71988, 341.893, -26.5336, 0.83 ) }
    dend_7 { pt3dadd( -4.4123, 344.398, -28.1101, 0.28 ) }
    dend_7 { pt3dadd( -4.59655, 345.74, -29.1265, 0.55 ) }
    dend_7 { pt3dadd( -4.64516, 346.637, -29.9258, 0.28 ) }
    dend_7 { pt3dadd( -4.63638, 347.513, -30.7462, 0.83 ) }
    dend_7 { pt3dadd( -4.49931, 349.384, -32.529, 0.28 ) }
    dend_7 { pt3dadd( -4.31058, 351.077, -34.1695, 0.83 ) }
    dend_7 { pt3dadd( -3.29033, 357.654, -40.4506, 0.55 ) }
    dend_7 { pt3dadd( -3.04936, 358.92, -41.6593, 0.55 ) }
    dend_7 { pt3dadd( -2.79668, 360.069, -42.7331, 0.83 ) }
    dend_7 { pt3dadd( -2.46253, 361.54, -44.0277, 0.28 ) }
    dend_7 { pt3dadd( -2.29458, 362.264, -44.5684, 0.55 ) }
    dend_7 { pt3dadd( -2.08444, 363.36, -45.2179, 0.28 ) }
    dend_7 { pt3dadd( -1.92926, 364.877, -45.6448, 0.55 ) }
    dend_7 { pt3dadd( -1.74342, 367.017, -46.298, 0.55 ) }
    dend_7 { pt3dadd( -1.65339, 368.24, -46.672, 0.55 ) }
    dend_7 { pt3dadd( -1.5601, 369.607, -47.0636, 0.83 ) }
    dend_7 { pt3dadd( -1.3802, 371.789, -47.6853, 0.28 ) }
    dend_7 { pt3dadd( -1.22737, 373.623, -48.1832, 0.83 ) }
    dend_7 { pt3dadd( -0.979039, 375.881, -48.7167, 0.55 ) }
    dend_7 { pt3dadd( -0.884939, 376.784, -48.8997, 0.55 ) }
    dend_7 { pt3dadd( -0.696397, 378.502, -49.1589, 0.83 ) }
    dend_7 { pt3dadd( -0.623062, 379.409, -49.2492, 0.55 ) }
    dend_7 { pt3dadd( -0.543104, 381.124, -49.262, 0.83 ) }
    dend_7 { pt3dadd( -0.586791, 382.712, -49.2816, 0.28 ) }
    dend_7 { pt3dadd( -0.627886, 383.368, -49.3595, 0.28 ) }
    dend_7 { pt3dadd( -0.807479, 385.131, -49.7681, 0.28 ) }
    dend_7 { pt3dadd( -0.884799, 385.89, -50.0214, 0.83 ) }
    dend_7 { pt3dadd( -1.0554, 387.651, -50.8273, 0.55 ) }
    dend_7 { pt3dadd( -1.16226, 389.576, -52.1437, 0.83 ) }
    dend_7 { pt3dadd( -1.32379, 392.181, -54.38, 0.28 ) }
    dend_7 { pt3dadd( -1.37829, 392.98, -55.2435, 0.55 ) }
    dend_7 { pt3dadd( -1.45753, 393.761, -56.325, 0.28 ) }
    dend_7 { pt3dadd( -1.5701, 394.319, -57.1643, 0.83 ) }
    dend_7 { pt3dadd( -2.07746, 396.368, -60.3373, 0.83 ) }
    dend_7 { pt3dadd( -2.27128, 397.028, -61.3452, 0.83 ) }
    dend_7 { pt3dadd( -3.007, 399.09, -64.3135, 0.83 ) }
    dend_7 { pt3dadd( -3.93547, 401.476, -67.6502, 0.55 ) }
    dend_7 { pt3dadd( -4.53718, 402.889, -69.6236, 0.55 ) }
    dend_7 { pt3dadd( -5.09506, 404.172, -71.3535, 0.55 ) }
    dend_7 { pt3dadd( -5.72954, 405.592, -73.1591, 0.55 ) }
    dend_7 { pt3dadd( -6.59594, 407.804, -75.7741, 0.55 ) }
    dend_7 { pt3dadd( -7.30233, 409.652, -77.6885, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 33.6014, -34.7958, -70.3595, 0.55 ) }
    dend_45 { pt3dadd( 34.233, -34.2443, -71.5317, 0.55 ) }
    dend_45 { pt3dadd( 34.8624, -33.633, -72.724, 0.83 ) }
    dend_45 { pt3dadd( 36.1384, -32.3396, -75.1523, 0.28 ) }
    dend_45 { pt3dadd( 36.7882, -31.6581, -76.3604, 0.83 ) }
    dend_45 { pt3dadd( 38.3777, -29.9796, -79.1934, 0.28 ) }
    dend_45 { pt3dadd( 38.9296, -29.3985, -80.1309, 0.55 ) }
    dend_45 { pt3dadd( 40.1351, -28.039, -82.2923, 0.55 ) }
    dend_45 { pt3dadd( 41.4001, -26.5294, -84.4581, 0.55 ) }
    dend_45 { pt3dadd( 42.4972, -25.223, -86.2193, 0.28 ) }
    dend_45 { pt3dadd( 42.9524, -24.6813, -86.9124, 0.28 ) }
    dend_45 { pt3dadd( 43.4172, -24.1333, -87.583, 0.55 ) }
    dend_45 { pt3dadd( 44.4351, -22.9948, -88.9695, 0.28 ) }
    dend_45 { pt3dadd( 45.8685, -21.4605, -90.6603, 0.55 ) }
    dend_45 { pt3dadd( 47.521, -19.5649, -92.7621, 0.28 ) }
    dend_45 { pt3dadd( 47.9464, -19.0749, -93.3237, 0.55 ) }
    dend_45 { pt3dadd( 49.649, -16.9877, -95.6466, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 50.7411, -15.5935, -97.1828, 0.28 ) }
    dend_45 { pt3dadd( 51.9705, -13.9761, -99.0068, 0.83 ) }
    dend_45 { pt3dadd( 53.8335, -11.3304, -102.048, 0.55 ) }
    dend_45 { pt3dadd( 54.2769, -10.6835, -102.808, 0.55 ) }
    dend_45 { pt3dadd( 55.1441, -9.39408, -104.463, 0.55 ) }
    dend_45 { pt3dadd( 56.0128, -8.15054, -106.205, 0.83 ) }
    dend_45 { pt3dadd( 57.313, -6.40746, -108.802, 0.28 ) }
    dend_45 { pt3dadd( 57.7317, -5.91973, -109.548, 0.55 ) }
    dend_45 { pt3dadd( 58.9452, -4.75926, -111.198, 0.28 ) }
    dend_45 { pt3dadd( 59.174, -4.56001, -111.488, 0.55 ) }
    dend_45 { pt3dadd( 60.2978, -3.76145, -112.706, 0.55 ) }
    dend_45 { pt3dadd( 62.0401, -2.65631, -114.256, 0.28 ) }
    dend_45 { pt3dadd( 62.6982, -2.26191, -114.75, 0.55 ) }
    dend_45 { pt3dadd( 64.3129, -1.36147, -115.886, 0.28 ) }
    dend_45 { pt3dadd( 64.9845, -1.00392, -116.315, 0.55 ) }
    dend_45 { pt3dadd( 66.4389, -0.3162, -117.221, 0.28 ) }
    dend_45 { pt3dadd( 67.3631, 0.0190623, -117.801, 0.55 ) }
    dend_45 { pt3dadd( 67.881, 0.16116, -118.099, 0.55 ) }
    dend_45 { pt3dadd( 69.3468, 0.57959, -118.858, 0.28 ) }
    dend_45 { pt3dadd( 70.3356, 0.88288, -119.299, 0.28 ) }
    dend_45 { pt3dadd( 71.3076, 1.25105, -119.737, 0.55 ) }
    dend_45 { pt3dadd( 73.6653, 2.31507, -120.777, 0.28 ) }
    dend_45 { pt3dadd( 75.3049, 3.21784, -121.488, 0.55 ) }
    dend_45 { pt3dadd( 76.8403, 4.21048, -122.104, 0.55 ) }
    dend_45 { pt3dadd( 78.2473, 5.29139, -122.618, 0.83 ) }
    dend_45 { pt3dadd( 80.3226, 7.13524, -123.28, 0.28 ) }
    dend_45 { pt3dadd( 81.0802, 7.92295, -123.492, 0.28 ) }
    dend_45 { pt3dadd( 82.3853, 9.54191, -123.762, 0.55 ) }
    dend_45 { pt3dadd( 83.6559, 11.3101, -123.955, 0.28 ) }
    dend_45 { pt3dadd( 84.2032, 12.1204, -124.004, 0.55 ) }
    dend_45 { pt3dadd( 85.0551, 13.4435, -123.996, 0.55 ) }
    dend_45 { pt3dadd( 86.3011, 15.4192, -123.856, 0.28 ) }
    dend_45 { pt3dadd( 87.0444, 16.6235, -123.762, 0.55 ) }
    dend_45 { pt3dadd( 88.1577, 18.4997, -123.609, 0.28 ) }
    dend_45 { pt3dadd( 89.3739, 20.6391, -123.463, 0.55 ) }
    dend_45 { pt3dadd( 90.6042, 22.8583, -123.333, 0.55 ) }
    dend_45 { pt3dadd( 91.1349, 23.859, -123.28, 0.55 ) }
    dend_45 { pt3dadd( 92.1434, 25.8838, -123.222, 0.55 ) }
    dend_45 { pt3dadd( 93.0549, 27.7637, -123.252, 0.55 ) }
    dend_45 { pt3dadd( 93.9368, 29.7084, -123.341, 0.55 ) }
    dend_45 { pt3dadd( 94.75, 31.5635, -123.45, 0.28 ) }
    dend_45 { pt3dadd( 95.1707, 32.5371, -123.55, 0.55 ) }
    dend_45 { pt3dadd( 96.4922, 35.6021, -123.912, 0.28 ) }
    dend_45 { pt3dadd( 97.3246, 37.6647, -124.225, 0.28 ) }
    dend_45 { pt3dadd( 97.7132, 38.7065, -124.405, 0.55 ) }
    dend_45 { pt3dadd( 98.3965, 40.5512, -124.754, 0.28 ) }
    dend_45 { pt3dadd( 99.0018, 42.2144, -125.084, 0.55 ) }
    dend_45 { pt3dadd( 99.457, 43.4893, -125.325, 0.55 ) }
    dend_45 { pt3dadd( 100.666, 47.0942, -125.949, 0.28 ) }
    dend_45 { pt3dadd( 101.355, 49.3416, -126.311, 0.28 ) }
    dend_45 { pt3dadd( 101.618, 50.2605, -126.446, 0.55 ) }
    dend_45 { pt3dadd( 102.116, 52.1198, -126.686, 0.55 ) }
    dend_45 { pt3dadd( 102.786, 54.6415, -126.911, 0.28 ) }
    dend_45 { pt3dadd( 103.301, 56.5942, -127.049, 0.55 ) }
    dend_45 { pt3dadd( 103.775, 58.3977, -127.106, 0.28 ) }
    dend_45 { pt3dadd( 104.127, 59.9559, -127.129, 0.55 ) }
    dend_45 { pt3dadd( 104.33, 60.8949, -127.118, 0.28 ) }
    dend_45 { pt3dadd( 104.482, 61.5313, -127.051, 0.55 ) }
    dend_45 { pt3dadd( 104.946, 63.3742, -126.706, 0.28 ) }
    dend_45 { pt3dadd( 105.208, 64.273, -126.471, 0.55 ) }
    dend_45 { pt3dadd( 106.172, 67.2341, -125.573, 0.28 ) }
    dend_45 { pt3dadd( 106.889, 69.2613, -124.918, 0.55 ) }
    dend_45 { pt3dadd( 107.887, 71.9389, -123.991, 0.28 ) }
    dend_45 { pt3dadd( 108.454, 73.3769, -123.479, 0.55 ) }
    dend_45 { pt3dadd( 109.142, 75.0138, -122.866, 0.28 ) }
    dend_45 { pt3dadd( 109.782, 76.4724, -122.29, 0.55 ) }
    dend_45 { pt3dadd( 110.402, 77.8426, -121.739, 0.28 ) }
    dend_45 { pt3dadd( 110.863, 78.9028, -121.322, 0.55 ) }
    dend_45 { pt3dadd( 111.931, 81.5533, -120.345, 0.28 ) }
    dend_45 { pt3dadd( 112.477, 82.9035, -119.808, 0.55 ) }
    dend_45 { pt3dadd( 113.221, 84.8457, -118.994, 0.28 ) }
    dend_45 { pt3dadd( 113.494, 85.568, -118.664, 0.55 ) }
    dend_45 { pt3dadd( 114.143, 87.4087, -117.781, 0.28 ) }
    dend_45 { pt3dadd( 114.771, 89.3569, -116.845, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 33.6014, -34.7958, -70.3595, 0.28 ) }
    dend_44 { pt3dadd( 35.2606, -35.1616, -71.3671, 0.28 ) }
    dend_44 { pt3dadd( 35.7505, -35.266, -71.6982, 0.55 ) }
    dend_44 { pt3dadd( 36.4179, -35.3618, -72.1889, 0.55 ) }
    dend_44 { pt3dadd( 37.4406, -35.4771, -72.944, 0.28 ) }
    dend_44 { pt3dadd( 38.0499, -35.5456, -73.378, 0.55 ) }
    dend_44 { pt3dadd( 40.1947, -35.7562, -74.8286, 0.28 ) }
    dend_44 { pt3dadd( 40.7799, -35.7746, -75.193, 0.55 ) }
    dend_44 { pt3dadd( 42.1833, -35.7527, -76.0065, 0.28 ) }
    dend_44 { pt3dadd( 42.7895, -35.715, -76.3276, 0.28 ) }
    dend_44 { pt3dadd( 43.7959, -35.6199, -76.7898, 0.55 ) }
    dend_44 { pt3dadd( 44.7397, -35.5338, -77.1642, 0.55 ) }
    dend_44 { pt3dadd( 47.0597, -35.3611, -77.8706, 0.28 ) }
    dend_44 { pt3dadd( 47.926, -35.3417, -78.12, 0.55 ) }
    dend_44 { pt3dadd( 48.9056, -35.3874, -78.3922, 0.55 ) }
    dend_44 { pt3dadd( 50.692, -35.5703, -78.9082, 0.28 ) }
    dend_44 { pt3dadd( 51.8553, -35.7734, -79.255, 0.55 ) }
    dend_44 { pt3dadd( 53.3017, -36.1809, -79.6654, 0.28 ) }
    dend_44 { pt3dadd( 54.0688, -36.4957, -79.8697, 0.55 ) }
    dend_44 { pt3dadd( 55.4666, -37.2067, -80.2256, 0.28 ) }
    dend_44 { pt3dadd( 56.0546, -37.5837, -80.3567, 0.55 ) }
    dend_44 { pt3dadd( 56.6926, -38.0841, -80.4689, 0.55 ) }
    dend_44 { pt3dadd( 57.513, -38.86, -80.525, 0.28 ) }
    dend_44 { pt3dadd( 57.9732, -39.3755, -80.516, 0.28 ) }
    dend_44 { pt3dadd( 58.4499, -40.0458, -80.4565, 0.55 ) }
    dend_44 { pt3dadd( 59.0173, -41.0588, -80.3185, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 59.089, -41.214, -80.293, 0.55 ) }
    dend_44 { pt3dadd( 59.6486, -42.6959, -80.0796, 0.28 ) }
    dend_44 { pt3dadd( 59.6985, -42.8675, -80.0726, 0.83 ) }
    dend_44 { pt3dadd( 60.2759, -45.1892, -80.1524, 0.28 ) }
    dend_44 { pt3dadd( 60.3736, -45.6277, -80.2544, 0.55 ) }
    dend_44 { pt3dadd( 60.579, -46.7035, -80.6671, 0.28 ) }
    dend_44 { pt3dadd( 60.693, -47.3683, -80.9938, 0.55 ) }
    dend_44 { pt3dadd( 60.9347, -48.8692, -81.9502, 0.28 ) }
    dend_44 { pt3dadd( 60.9627, -49.0582, -82.0807, 0.55 ) }
    dend_44 { pt3dadd( 61.2704, -51.2449, -83.7789, 0.28 ) }
    dend_44 { pt3dadd( 61.3058, -51.5452, -84.0042, 0.55 ) }
    dend_44 { pt3dadd( 61.3319, -51.7287, -84.1429, 0.55 ) }
    dend_44 { pt3dadd( 61.4445, -52.4101, -84.5716, 0.28 ) }
    dend_44 { pt3dadd( 61.5498, -52.9847, -84.8664, 0.55 ) }
    dend_44 { pt3dadd( 61.7642, -53.986, -85.2881, 0.28 ) }
    dend_44 { pt3dadd( 61.8604, -54.3985, -85.4403, 0.55 ) }
    dend_44 { pt3dadd( 62.5083, -56.8664, -86.4323, 0.28 ) }
    dend_44 { pt3dadd( 62.6513, -57.3699, -86.6421, 0.55 ) }
    dend_44 { pt3dadd( 62.82, -57.9409, -86.9152, 0.28 ) }
    dend_44 { pt3dadd( 63.3883, -59.7734, -87.8642, 0.28 ) }
    dend_44 { pt3dadd( 63.5601, -60.3681, -88.155, 0.55 ) }
    dend_44 { pt3dadd( 64.0278, -62.0847, -88.9341, 0.28 ) }
    dend_44 { pt3dadd( 64.0592, -62.2309, -88.9874, 0.55 ) }
    dend_44 { pt3dadd( 64.3833, -64.1396, -89.6381, 0.28 ) }
    dend_44 { pt3dadd( 64.4987, -65.0856, -89.8719, 0.55 ) }
    dend_44 { pt3dadd( 64.6111, -66.311, -90.0392, 0.28 ) }
    dend_44 { pt3dadd( 64.6664, -66.8292, -90.0502, 0.55 ) }
    dend_44 { pt3dadd( 64.7975, -67.9003, -89.984, 0.28 ) }
    dend_44 { pt3dadd( 64.868, -68.3723, -89.9426, 0.55 ) }
    dend_44 { pt3dadd( 65.1904, -70.1969, -89.8946, 0.28 ) }
    dend_44 { pt3dadd( 65.4893, -71.6829, -89.9601, 0.28 ) }
    dend_44 { pt3dadd( 65.6456, -72.3212, -90.0494, 0.55 ) }
    dend_44 { pt3dadd( 66.0717, -73.8711, -90.3455, 0.28 ) }
    dend_44 { pt3dadd( 66.2222, -74.3412, -90.4524, 0.55 ) }
    dend_44 { pt3dadd( 67.2563, -77.435, -91.2157, 0.28 ) }
    dend_44 { pt3dadd( 67.681, -78.5956, -91.5509, 0.55 ) }
    dend_44 { pt3dadd( 68.3752, -80.2957, -92.0752, 0.28 ) }
    dend_44 { pt3dadd( 68.5182, -80.6284, -92.1815, 0.55 ) }
    dend_44 { pt3dadd( 69.2612, -82.2013, -92.6922, 0.28 ) }
    dend_44 { pt3dadd( 69.3737, -82.4138, -92.756, 0.55 ) }
    dend_44 { pt3dadd( 69.9081, -83.1173, -92.8809, 0.28 ) }
    dend_44 { pt3dadd( 70.291, -83.5498, -92.9908, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 25.0125, -43.3387, 10.4771, 0.55 ) }
    dend_41 { pt3dadd( 25.932, -43.1527, 12.1277, 0.55 ) }
    dend_41 { pt3dadd( 27.7748, -42.6837, 15.4688, 0.55 ) }
    dend_41 { pt3dadd( 31.1698, -41.7985, 21.4824, 0.55 ) }
    dend_41 { pt3dadd( 33.7928, -41.1371, 26.0443, 0.55 ) }
    dend_41 { pt3dadd( 36.174, -40.6136, 30.1289, 0.28 ) }
    dend_41 { pt3dadd( 37.5022, -40.3499, 32.3588, 0.83 ) }
    dend_41 { pt3dadd( 39.1503, -40.0663, 35.1835, 0.55 ) }
    dend_41 { pt3dadd( 40.402, -39.9464, 37.2636, 0.28 ) }
    dend_41 { pt3dadd( 41.0543, -39.9269, 38.166, 0.55 ) }
    dend_41 { pt3dadd( 42.4769, -39.9171, 39.9603, 0.28 ) }
    dend_41 { pt3dadd( 42.9535, -39.9307, 40.5581, 0.55 ) }
    dend_41 { pt3dadd( 45.0686, -40.1905, 42.9082, 0.28 ) }
    dend_41 { pt3dadd( 46.4405, -40.5869, 44.294, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 25.0125, -43.3387, 10.4771, 0.28 ) }
    dend_40 { pt3dadd( 31.0052, -44.6145, 9.21118, 0.28 ) }
    dend_40 { pt3dadd( 31.811, -44.7562, 9.10122, 0.83 ) }
    dend_40 { pt3dadd( 34.5411, -45.1562, 8.85704, 0.28 ) }
    dend_40 { pt3dadd( 35.3092, -45.2104, 8.84433, 0.83 ) }
    dend_40 { pt3dadd( 37.066, -45.2316, 8.89075, 0.28 ) }
    dend_40 { pt3dadd( 37.7961, -45.2015, 8.93786, 0.83 ) }
    dend_40 { pt3dadd( 39.7439, -44.8097, 9.49982, 0.28 ) }
    dend_40 { pt3dadd( 40.1616, -44.6329, 9.62776, 0.83 ) }
    dend_40 { pt3dadd( 42.2337, -43.3362, 10.3036, 0.28 ) }
    dend_40 { pt3dadd( 42.7385, -43.001, 10.4631, 0.28 ) }
    dend_40 { pt3dadd( 43.4554, -42.502, 10.6842, 0.55 ) }
    dend_40 { pt3dadd( 44.6763, -41.6308, 11.3378, 0.28 ) }
    dend_40 { pt3dadd( 46.4143, -40.376, 12.6169, 0.28 ) }
    dend_40 { pt3dadd( 46.8011, -40.0982, 13.0352, 0.83 ) }
    dend_40 { pt3dadd( 49.2886, -38.3622, 16.5522, 0.28 ) }
    dend_40 { pt3dadd( 49.6845, -38.1162, 17.2111, 0.55 ) }
    dend_40 { pt3dadd( 52.2365, -36.6616, 22.5199, 0.28 ) }
    dend_40 { pt3dadd( 52.4775, -36.5312, 23.1392, 0.83 ) }
    dend_40 { pt3dadd( 53.7028, -35.8004, 27.2165, 0.28 ) }
    dend_40 { pt3dadd( 53.8393, -35.6889, 27.8, 0.55 ) }
    dend_40 { pt3dadd( 54.1515, -35.3166, 29.6829, 0.28 ) }
    dend_40 { pt3dadd( 54.4509, -34.9418, 31.4411, 0.55 ) }
    dend_40 { pt3dadd( 54.9252, -34.3973, 33.4809, 0.28 ) }
    dend_40 { pt3dadd( 55.1347, -34.149, 34.2738, 0.55 ) }
    dend_40 { pt3dadd( 55.9329, -33.0915, 36.5214, 0.28 ) }
    dend_40 { pt3dadd( 56.2042, -32.6403, 37.3649, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 32.5387, -52.2586, -1.8597, 0.55 ) }
    dend_38 { pt3dadd( 35.0087, -52.8378, -2.51385, 0.55 ) }
    dend_38 { pt3dadd( 38.9632, -53.7904, -3.58007, 0.55 ) }
    dend_38 { pt3dadd( 41.8325, -54.5111, -4.38932, 0.28 ) }
    dend_38 { pt3dadd( 43.8757, -55.0196, -4.9527, 0.55 ) }
    dend_38 { pt3dadd( 47.0585, -55.801, -5.75864, 0.55 ) }
    dend_38 { pt3dadd( 48.4153, -56.1821, -6.06322, 0.28 ) }
    dend_38 { pt3dadd( 49.3553, -56.4529, -6.30184, 0.55 ) }
    dend_38 { pt3dadd( 50.4044, -56.8383, -6.55987, 0.28 ) }
    dend_38 { pt3dadd( 51.9522, -57.516, -6.95395, 0.55 ) }
    dend_38 { pt3dadd( 54.2087, -58.6236, -7.42322, 0.55 ) }
    dend_38 { pt3dadd( 57.4295, -60.2587, -8.03154, 0.55 ) }
    dend_38 { pt3dadd( 61.7777, -62.239, -9.30455, 1.38 ) }
    dend_38 { pt3dadd( 64.5415, -63.3785, -10.29, 0.83 ) }
    dend_38 { pt3dadd( 66.8936, -64.2338, -11.2117, 0.55 ) }
    dend_38 { pt3dadd( 69.8584, -65.1825, -12.4764, 0.28 ) }
    dend_38 { pt3dadd( 73.4958, -66.1844, -14.1318, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 80.3862, -67.5813, -17.659, 0.28 ) }
    dend_38 { pt3dadd( 81.2805, -67.752, -18.1655, 0.28 ) }
    dend_38 { pt3dadd( 83.5383, -68.182, -19.6506, 0.55 ) }
    dend_38 { pt3dadd( 85.0511, -68.4574, -20.7157, 0.55 ) }
    dend_38 { pt3dadd( 86.4234, -68.7284, -21.7742, 0.55 ) }
    dend_38 { pt3dadd( 90.2097, -69.726, -24.6463, 0.55 ) }
    dend_38 { pt3dadd( 93.8634, -70.9591, -27.3507, 0.28 ) }
    dend_38 { pt3dadd( 96.0961, -71.7946, -29.0909, 0.83 ) }
    dend_38 { pt3dadd( 97.4622, -72.3377, -30.1955, 0.83 ) }
    dend_38 { pt3dadd( 101.063, -73.7867, -33.0704, 0.55 ) }
    dend_38 { pt3dadd( 102.516, -74.3977, -34.1689, 0.83 ) }
    dend_38 { pt3dadd( 104.496, -75.2924, -35.4019, 0.28 ) }
    dend_38 { pt3dadd( 105.901, -75.9058, -36.0984, 0.55 ) }
    dend_38 { pt3dadd( 106.746, -76.3348, -36.4405, 0.28 ) }
    dend_38 { pt3dadd( 107.151, -76.5793, -36.574, 0.55 ) }
    dend_38 { pt3dadd( 109.07, -77.7598, -36.9826, 0.28 ) }
    dend_38 { pt3dadd( 111.204, -79.0631, -37.579, 0.28 ) }
    dend_38 { pt3dadd( 112.845, -80.0906, -38.0324, 0.83 ) }
    dend_38 { pt3dadd( 114.241, -81.0619, -38.4794, 0.55 ) }
    dend_38 { pt3dadd( 117.738, -83.6626, -39.6752, 0.28 ) }
    dend_38 { pt3dadd( 118.774, -84.4839, -40.109, 0.83 ) }
    dend_38 { pt3dadd( 122.073, -87.2741, -41.6701, 0.28 ) }
    dend_38 { pt3dadd( 123.307, -88.4701, -42.3454, 0.83 ) }
    dend_38 { pt3dadd( 125.402, -90.6606, -43.4797, 0.28 ) }
    dend_38 { pt3dadd( 125.996, -91.2869, -43.8148, 0.83 ) }
    dend_38 { pt3dadd( 128.44, -93.9937, -45.2353, 0.28 ) }
    dend_38 { pt3dadd( 129.91, -95.6663, -46.0825, 0.28 ) }
    dend_38 { pt3dadd( 131.201, -97.1127, -46.6731, 0.55 ) }
    dend_38 { pt3dadd( 132.724, -98.6709, -47.3842, 0.55 ) }
    dend_38 { pt3dadd( 135.261, -101.03, -48.4635, 0.55 ) }
    dend_38 { pt3dadd( 136.624, -102.229, -48.9972, 0.28 ) }
    dend_38 { pt3dadd( 137.36, -102.84, -49.2801, 0.55 ) }
    dend_38 { pt3dadd( 139.83, -104.766, -50.3823, 0.28 ) }
    dend_38 { pt3dadd( 141.701, -106.103, -51.1941, 0.55 ) }
    dend_38 { pt3dadd( 143.667, -107.54, -52.1016, 0.28 ) }
    dend_38 { pt3dadd( 144.25, -107.978, -52.3389, 0.83 ) }
    dend_38 { pt3dadd( 146.769, -109.801, -53.4362, 0.28 ) }
    dend_38 { pt3dadd( 147.358, -110.195, -53.6896, 0.55 ) }
    dend_38 { pt3dadd( 148.892, -111.107, -54.3504, 0.55 ) }
    dend_38 { pt3dadd( 151.441, -112.641, -55.1813, 0.28 ) }
    dend_38 { pt3dadd( 151.542, -112.699, -55.215, 0.55 ) }
    dend_38 { pt3dadd( 153.855, -113.851, -56.0806, 0.28 ) }
    dend_38 { pt3dadd( 154.773, -114.263, -56.4199, 0.55 ) }
    dend_38 { pt3dadd( 157.27, -115.361, -57.5109, 0.28 ) }
    dend_38 { pt3dadd( 158.926, -116.038, -58.3045, 0.55 ) }
    dend_38 { pt3dadd( 161.93, -117.136, -59.8042, 0.55 ) }
    dend_38 { pt3dadd( 164.551, -118.079, -61.1901, 0.28 ) }
    dend_38 { pt3dadd( 166.157, -118.684, -62.0776, 0.83 ) }
    dend_38 { pt3dadd( 168.92, -119.772, -63.6353, 0.28 ) }
    dend_38 { pt3dadd( 169.51, -119.987, -63.9153, 0.55 ) }
    dend_38 { pt3dadd( 171.693, -120.682, -64.7965, 0.28 ) }
    dend_38 { pt3dadd( 172.413, -120.893, -64.9466, 0.55 ) }
    dend_38 { pt3dadd( 175.813, -121.749, -65.2891, 0.28 ) }
    dend_38 { pt3dadd( 176.894, -121.974, -65.3335, 0.83 ) }
    dend_38 { pt3dadd( 181.031, -122.66, -65.0386, 0.28 ) }
    dend_38 { pt3dadd( 181.796, -122.767, -64.9418, 0.55 ) }
    dend_38 { pt3dadd( 184.862, -123.006, -64.237, 0.28 ) }
    dend_38 { pt3dadd( 187.469, -123.008, -63.5231, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 32.5387, -52.2586, -1.8597, 0.55 ) }
    dend_35 { pt3dadd( 33.4635, -53.081, -3.66756, 0.55 ) }
    dend_35 { pt3dadd( 35.2726, -54.8749, -7.52086, 0.55 ) }
    dend_35 { pt3dadd( 36.8549, -56.4198, -10.7709, 0.28 ) }
    dend_35 { pt3dadd( 38.0378, -57.506, -13.135, 0.83 ) }
    dend_35 { pt3dadd( 40.0869, -59.2029, -16.9198, 0.28 ) }
    dend_35 { pt3dadd( 40.5774, -59.5729, -17.8306, 0.55 ) }
    dend_35 { pt3dadd( 40.9943, -59.8637, -18.6595, 0.55 ) }
    dend_35 { pt3dadd( 41.9158, -60.3299, -20.3416, 0.55 ) }
    dend_35 { pt3dadd( 43.4085, -60.9692, -22.8839, 0.55 ) }
    dend_35 { pt3dadd( 44.2462, -61.2913, -24.2752, 0.55 ) }
    dend_35 { pt3dadd( 46.7766, -62.059, -27.9132, 0.83 ) }
    dend_35 { pt3dadd( 48.3587, -62.483, -30.1476, 0.28 ) }
    dend_35 { pt3dadd( 48.9831, -62.6297, -31.0768, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -55.105, 5.31753, -115.772, 0.28 ) }
    dend_20 { pt3dadd( -56.362, 5.14627, -115.699, 0.28 ) }
    dend_20 { pt3dadd( -57.9953, 4.92374, -115.605, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -55.105, 5.31753, -115.772, 0.28 ) }
    dend_19 { pt3dadd( -56.7038, 2.88694, -118.543, 0.28 ) }
    dend_19 { pt3dadd( -57.1713, 2.17631, -119.354, 0.55 ) }
    dend_19 { pt3dadd( -58.6339, -0.0470327, -121.889, 0.28 ) }
    dend_19 { pt3dadd( -59.2811, -1.03113, -123.011, 0.83 ) }
    dend_19 { pt3dadd( -62.114, -5.33783, -127.921, 0.28 ) }
    dend_19 { pt3dadd( -62.5796, -6.04561, -128.728, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.30233, 409.652, -77.6885, 0.55 ) }
    dend_9 { pt3dadd( -7.21472, 410.37, -79.0082, 0.55 ) }
    dend_9 { pt3dadd( -7.14355, 411.227, -80.3717, 0.28 ) }
    dend_9 { pt3dadd( -7.07258, 412.082, -81.7314, 0.55 ) }
    dend_9 { pt3dadd( -6.86737, 414.554, -85.6631, 0.28 ) }
    dend_9 { pt3dadd( -6.84378, 414.838, -86.1151, 0.55 ) }
    dend_9 { pt3dadd( -6.69162, 416.671, -89.0304, 0.28 ) }
    dend_9 { pt3dadd( -6.52006, 417.454, -90.5929, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -7.30233, 409.652, -77.6885, 0.28 ) }
    dend_8 { pt3dadd( -8.85489, 408.909, -79.3374, 0.28 ) }
    dend_8 { pt3dadd( -9.71901, 408.496, -80.2551, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 114.771, 89.3569, -116.845, 0.28 ) }
    dend_47 { pt3dadd( 112.297, 91.4952, -115.391, 0.28 ) }
    dend_47 { pt3dadd( 111.458, 92.22, -114.899, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 114.771, 89.3569, -116.845, 0.28 ) }
    dend_46 { pt3dadd( 115.421, 90.7872, -116.309, 0.28 ) }
    dend_46 { pt3dadd( 116.625, 93.476, -115.25, 0.28 ) }
    dend_46 { pt3dadd( 116.937, 94.1935, -114.922, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 118.029, 96.7869, -113.547, 0.28 ) }
    dend_46 { pt3dadd( 118.656, 98.2772, -112.756, 0.55 ) }
    dend_46 { pt3dadd( 119.467, 100.203, -111.735, 0.28 ) }
    dend_46 { pt3dadd( 119.881, 101.206, -111.124, 0.55 ) }
    dend_46 { pt3dadd( 120.514, 102.775, -110.0, 0.28 ) }
    dend_46 { pt3dadd( 120.985, 104.048, -109.05, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 48.9831, -62.6297, -31.0768, 0.55 ) }
    dend_37 { pt3dadd( 48.6838, -63.0296, -33.0221, 0.55 ) }
    dend_37 { pt3dadd( 48.5658, -63.2368, -33.9505, 0.28 ) }
    dend_37 { pt3dadd( 48.4809, -63.3554, -34.5677, 0.83 ) }
    dend_37 { pt3dadd( 47.8484, -64.0186, -38.2288, 0.28 ) }
    dend_37 { pt3dadd( 47.6651, -64.2247, -39.258, 0.83 ) }
    dend_37 { pt3dadd( 46.8249, -65.1948, -43.6492, 0.28 ) }
    dend_37 { pt3dadd( 46.705, -65.3285, -44.2551, 0.83 ) }
    dend_37 { pt3dadd( 45.8731, -66.0409, -47.8658, 0.28 ) }
    dend_37 { pt3dadd( 45.5866, -66.2402, -48.8699, 0.55 ) }
    dend_37 { pt3dadd( 44.1566, -67.0143, -53.0153, 0.28 ) }
    dend_37 { pt3dadd( 43.8615, -67.1509, -53.852, 0.28 ) }
    dend_37 { pt3dadd( 43.2205, -67.3943, -55.6382, 0.83 ) }
    dend_37 { pt3dadd( 41.3454, -68.0106, -60.911, 0.28 ) }
    dend_37 { pt3dadd( 40.8497, -68.1567, -62.3834, 0.55 ) }
    dend_37 { pt3dadd( 39.9055, -68.3959, -65.2983, 0.55 ) }
    dend_37 { pt3dadd( 39.1954, -68.5258, -67.4424, 0.55 ) }
    dend_37 { pt3dadd( 37.9869, -68.7734, -71.1575, 0.28 ) }
    dend_37 { pt3dadd( 37.6567, -68.8798, -72.2079, 0.83 ) }
    dend_37 { pt3dadd( 36.516, -69.3714, -75.7116, 0.28 ) }
    dend_37 { pt3dadd( 36.2873, -69.4975, -76.3803, 0.55 ) }
    dend_37 { pt3dadd( 35.1271, -70.2488, -79.1399, 0.28 ) }
    dend_37 { pt3dadd( 34.7339, -70.4797, -79.902, 0.55 ) }
    dend_37 { pt3dadd( 33.1113, -71.4713, -82.6457, 0.28 ) }
    dend_37 { pt3dadd( 32.9636, -71.5525, -82.8874, 0.83 ) }
    dend_37 { pt3dadd( 32.0199, -72.0161, -84.2034, 0.28 ) }
    dend_37 { pt3dadd( 31.2154, -72.3893, -85.2004, 0.55 ) }
    dend_37 { pt3dadd( 28.7094, -73.4524, -88.1385, 0.28 ) }
    dend_37 { pt3dadd( 27.9337, -73.7914, -88.9816, 0.83 ) }
    dend_37 { pt3dadd( 24.4598, -75.3487, -92.4096, 0.28 ) }
    dend_37 { pt3dadd( 22.9516, -76.0504, -93.8595, 0.55 ) }
    dend_37 { pt3dadd( 20.9761, -77.0276, -95.791, 0.55 ) }
    dend_37 { pt3dadd( 18.7547, -78.2237, -97.9062, 0.28 ) }
    dend_37 { pt3dadd( 16.8447, -79.3533, -99.591, 0.55 ) }
    dend_37 { pt3dadd( 15.5095, -80.1811, -100.872, 0.28 ) }
    dend_37 { pt3dadd( 15.317, -80.3131, -101.067, 0.55 ) }
    dend_37 { pt3dadd( 14.1741, -81.0562, -102.321, 0.28 ) }
    dend_37 { pt3dadd( 13.2889, -81.5606, -103.303, 0.55 ) }
    dend_37 { pt3dadd( 12.3181, -82.0243, -104.389, 0.55 ) }
    dend_37 { pt3dadd( 10.687, -82.5989, -106.324, 0.28 ) }
    dend_37 { pt3dadd( 9.97634, -82.7932, -107.125, 0.55 ) }
    dend_37 { pt3dadd( 8.94985, -83.0473, -108.259, 0.28 ) }
    dend_37 { pt3dadd( 8.28062, -83.1861, -108.949, 0.55 ) }
    dend_37 { pt3dadd( 6.46896, -83.5143, -110.813, 0.28 ) }
    dend_37 { pt3dadd( 5.87373, -83.6015, -111.462, 0.55 ) }
    dend_37 { pt3dadd( 4.383, -83.8473, -113.098, 0.28 ) }
    dend_37 { pt3dadd( 3.49839, -84.0159, -114.281, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 48.9831, -62.6297, -31.0768, 0.28 ) }
    dend_36 { pt3dadd( 52.5042, -63.1457, -30.6473, 0.28 ) }
    dend_36 { pt3dadd( 53.0249, -63.2266, -30.6339, 0.83 ) }
    dend_36 { pt3dadd( 55.4165, -63.7016, -30.6225, 0.28 ) }
    dend_36 { pt3dadd( 56.2545, -63.8472, -30.6194, 0.28 ) }
    dend_36 { pt3dadd( 57.2962, -64.0598, -30.6616, 0.55 ) }
    dend_36 { pt3dadd( 59.1796, -64.4202, -30.9638, 0.28 ) }
    dend_36 { pt3dadd( 61.243, -64.826, -31.5566, 0.55 ) }
    dend_36 { pt3dadd( 62.4606, -65.1238, -31.9538, 0.55 ) }
    dend_36 { pt3dadd( 63.9958, -65.5352, -32.6153, 0.55 ) }
    dend_36 { pt3dadd( 66.6998, -66.2455, -33.9652, 0.83 ) }
    dend_36 { pt3dadd( 69.9641, -67.0791, -35.8097, 0.28 ) }
    dend_36 { pt3dadd( 71.0947, -67.3662, -36.4986, 0.28 ) }
    dend_36 { pt3dadd( 71.6828, -67.5335, -36.9163, 0.83 ) }
    dend_36 { pt3dadd( 75.6107, -68.6768, -39.8671, 0.28 ) }
    dend_36 { pt3dadd( 76.7278, -69.039, -40.7907, 0.83 ) }
    dend_36 { pt3dadd( 77.6712, -69.3796, -41.6393, 0.83 ) }
    dend_36 { pt3dadd( 79.3188, -70.0874, -43.152, 0.83 ) }
    dend_36 { pt3dadd( 82.1093, -71.3762, -45.8048, 0.55 ) }
    dend_36 { pt3dadd( 84.4897, -72.6892, -48.1769, 0.55 ) }
    dend_36 { pt3dadd( 87.3448, -74.6726, -51.1575, 0.55 ) }
    dend_36 { pt3dadd( 88.6635, -75.7933, -52.6976, 0.55 ) }
    dend_36 { pt3dadd( 89.7402, -76.9261, -54.1078, 0.28 ) }
    dend_36 { pt3dadd( 89.8528, -77.0833, -54.2729, 0.55 ) }
    dend_36 { pt3dadd( 91.1212, -79.5972, -56.4457, 0.28 ) }
    dend_36 { pt3dadd( 91.4673, -80.5853, -57.1757, 0.55 ) }
    dend_36 { pt3dadd( 92.3546, -83.5798, -59.1071, 0.28 ) }
    dend_36 { pt3dadd( 92.8535, -85.3045, -60.0929, 0.55 ) }
    dend_36 { pt3dadd( 93.4229, -87.1877, -61.0615, 0.28 ) }
    dend_36 { pt3dadd( 93.8893, -88.6306, -61.6638, 0.55 ) }
    dend_36 { pt3dadd( 95.041, -92.0678, -62.7758, 0.28 ) }
    dend_36 { pt3dadd( 95.3403, -92.9103, -62.9702, 1.11 ) }
    dend_36 { pt3dadd( 97.0726, -97.2427, -63.4982, 0.28 ) }
    dend_36 { pt3dadd( 98.0309, -99.3952, -63.5594, 0.55 ) }
    dend_36 { pt3dadd( 98.9964, -101.501, -63.2332, 0.28 ) }
    dend_36 { pt3dadd( 99.3286, -102.197, -62.9852, 0.55 ) }
    dend_36 { pt3dadd( 100.193, -104.014, -61.9967, 0.28 ) }
    dend_36 { pt3dadd( 100.761, -105.216, -61.1766, 0.28 ) }
    dend_36 { pt3dadd( 101.833, -107.447, -59.2302, 0.55 ) }
    dend_36 { pt3dadd( 103.357, -110.796, -56.1927, 0.55 ) }
    dend_36 { pt3dadd( 103.941, -112.109, -54.9862, 0.28 ) }
    dend_36 { pt3dadd( 104.072, -112.363, -54.7421, 0.55 ) }
    dend_36 { pt3dadd( 105.118, -114.074, -53.0397, 0.28 ) }
    dend_36 { pt3dadd( 105.311, -114.358, -52.7574, 0.55 ) }
    dend_36 { pt3dadd( 106.333, -115.512, -51.6003, 0.28 ) }
    dend_36 { pt3dadd( 106.858, -115.954, -51.1564, 0.55 ) }
    dend_36 { pt3dadd( 108.979, -117.428, -49.1853, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 109.625, -117.814, -48.4339, 0.55 ) }
    dend_36 { pt3dadd( 110.68, -118.252, -47.1858, 0.28 ) }
    dend_36 { pt3dadd( 110.997, -118.351, -46.6899, 0.55 ) }
    dend_36 { pt3dadd( 111.863, -118.514, -45.0683, 0.28 ) }
    dend_36 { pt3dadd( 112.579, -118.622, -43.576, 0.55 ) }
    dend_36 { pt3dadd( 113.721, -118.75, -40.4763, 0.28 ) }
    dend_36 { pt3dadd( 114.53, -118.794, -37.9692, 0.55 ) }
    dend_36 { pt3dadd( 116.144, -118.676, -32.3964, 0.28 ) }
    dend_36 { pt3dadd( 116.363, -118.652, -31.558, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 5
    dend_6 nseg = 13
    dend_5 nseg = 9
    dend_3 nseg = 5
    dend_48 nseg = 13
    dend_43 nseg = 3
    dend_30 nseg = 21
    dend_29 nseg = 5
    dend_24 nseg = 3
    dend_18 nseg = 5
    dend_17 nseg = 11
    dend_15 nseg = 7
    dend_14 nseg = 7
    dend_10 nseg = 9
    dend_7 nseg = 7
    dend_45 nseg = 9
    dend_44 nseg = 3
    dend_41 nseg = 3
    dend_40 nseg = 3
    dend_38 nseg = 9
    dend_37 nseg = 5
    dend_36 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_BTC_ff1cebdea2_0_0


