// Cell: cNAC187_L1_NGCSA_96296dfc3f_0_0
/*
{
  "id" : "cNAC187_L1_NGCSA_96296dfc3f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.96913, -4.86293, 0.0, 3.39479", "-4.36552, -4.37605, 0.0, 5.96397", "-3.7619, -3.88917, 0.0, 8.77722", "-3.15829, -3.40229, 0.0, 9.8842", "-2.55468, -2.91541, 0.0, 10.5875", "-1.95107, -2.42853, 0.0, 11.7562", "-1.34746, -1.94164, 0.0, 12.3087", "-0.743845, -1.45476, 0.0, 11.9851", "-0.140234, -0.967884, 0.0, 11.7989", "0.463378, -0.481003, 0.0, 11.3751", "1.06699, 0.00587722, 0.0, 10.9613", "1.6706, 0.492758, 0.0, 10.6546", "2.27421, 0.979638, 0.0, 10.1747", "2.87783, 1.46652, 0.0, 9.34693", "3.48144, 1.9534, 0.0, 8.51653", "4.08505, 2.44028, 0.0, 7.71222", "4.68866, 2.92716, 0.0, 6.73254", "5.29227, 3.41404, 0.0, 5.75341", "5.89588, 3.90092, 0.0, 4.75501", "6.4995, 4.3878, 0.0, 3.7193", "7.10311, 4.87468, 0.0, 2.22175" ]
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-6.35255, 0.134553, 0.55, 0.68", "-7.85373, 0.650594, 0.877234, 0.68", "-9.86509, 1.34203, 1.31569, 0.68", "-11.9336, 2.05308, 1.76657, 0.91", "-13.6284, 2.63569, 2.13603, 0.68", "-15.3539, 3.22885, 2.51216, 1.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000010119909284
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.65745, 4.17456, 2.62, 3.64", "6.65745, 4.17456, 2.62, 3.64", "7.46384, 4.68492, 4.19276, 3.42", "8.01755, 5.03537, 5.2727, 3.19" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000010119909284
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.10311, 4.87468, 0.0, 0.46", "18.7784, 14.2921, 0.0, 0.46", "30.4537, 23.7095, 0.0, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-15.3539, 3.22885, 2.51216, 1.59", "-16.5071, 3.04538, 1.19552, 1.59", "-16.8028, 2.99834, 0.857942, 1.59", "-18.1292, 2.78731, -0.656392, 0.68", "-19.1647, 2.62257, -1.8387, 0.68", "-20.2292, 2.45322, -3.05405, 0.68", "-21.306, 2.28189, -4.28346, 0.68" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-15.3539, 3.22885, 2.51216, 0.91", "-15.5933, 3.34263, 3.06702, 0.91", "-17.2092, 3.71354, 6.54742, 0.91", "-18.0151, 3.81675, 8.1095, 0.91", "-19.12, 3.90832, 10.0267, 0.91", "-19.9184, 3.98383, 11.2545, 0.91", "-21.0445, 4.13336, 12.7403, 0.91", "-22.1429, 4.28904, 13.917, 0.91", "-22.8495, 4.45768, 14.4835, 1.14", "-23.5181, 4.82581, 14.9791, 1.14", "-24.8277, 6.02488, 15.9626, 0.46", "-26.3307, 7.96688, 17.4489, 0.46", "-27.1377, 9.4376, 18.751, 0.68", "-27.7953, 11.1689, 21.0069, 0.68", "-28.1139, 12.385, 23.4776, 0.68", "-28.1628, 12.6457, 24.3372, 0.68", "-28.1443, 12.9398, 26.0525, 0.68", "-28.0804, 13.0881, 28.067, 0.68", "-27.9927, 13.0243, 30.3333, 0.68", "-27.9617, 12.9268, 31.1117, 0.68", "-27.9389, 12.596, 32.6518, 0.68", "-27.9582, 12.1641, 34.4578, 0.68", "-28.0176, 12.044, 35.118, 0.68" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.01755, 5.03537, 5.2727, 2.51", "8.73632, 5.28493, 5.56474, 2.51", "10.3531, 5.84629, 6.22162, 2.05" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.01755, 5.03537, 5.2727, 0.46", "8.1323, 5.61449, 6.39004, 0.46", "8.36017, 6.54908, 8.53714, 0.46", "8.46695, 7.12967, 9.91049, 0.46", "8.57851, 8.1146, 12.1622, 0.91", "8.51674, 8.98594, 14.2974, 0.91", "8.37204, 9.70528, 16.1015, 0.68", "8.10185, 10.2977, 18.1282, 0.68", "7.92378, 10.4387, 18.8761, 0.68", "7.34374, 10.605, 20.1826, 0.68", "5.31038, 10.6693, 22.0784, 0.68", "3.52304, 10.5852, 22.935, 0.68", "1.69378, 10.3836, 23.4185, 0.91", "0.512623, 10.1595, 23.5856, 1.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "30.4537, 23.7095, 0.0, 0.46", "42.129, 33.1269, 0.0, 0.46", "53.8042, 42.5444, 0.0, 0.46" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-21.306, 2.28189, -4.28346, 0.46", "-22.6602, 1.7513, -4.99532, 0.46", "-24.0965, 1.16834, -5.81294, 0.46", "-25.4744, 0.603402, -6.64164, 0.68", "-26.2663, 0.233042, -7.08338, 0.91", "-28.4073, -0.768256, -8.27768, 0.91", "-30.7408, -1.85962, -9.5794, 0.68", "-32.8161, -2.91507, -10.7509, 0.68", "-33.4946, -3.24808, -11.1036, 0.91", "-35.2905, -4.05211, -12.1097, 1.14" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-21.306, 2.28189, -4.28346, 0.46", "-21.071, 4.00451, -7.5022, 0.46", "-21.0261, 5.2509, -9.81128, 0.46", "-21.0452, 6.23458, -11.8186, 0.91", "-21.0697, 7.50238, -14.4056, 0.91", "-21.0844, 8.26151, -15.9547, 0.91", "-21.0989, 9.01237, -17.4869, 0.91", "-21.2589, 9.8654, -19.0422, 0.91", "-21.5457, 10.8567, -20.7092, 0.91" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.3531, 5.84629, 6.22162, 1.37", "12.2273, 5.12186, 7.33666, 1.37", "14.1592, 4.37507, 8.48609, 1.59", "15.6826, 3.78623, 9.39244, 1.82", "16.87, 3.32727, 10.0989, 1.59", "18.3828, 2.74253, 10.9989, 1.59", "20.7086, 1.84348, 12.3827, 1.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "10.3531, 5.84629, 6.22162, 0.46", "10.4727, 7.37787, 5.32532, 0.46", "10.7154, 8.7729, 4.50599, 0.46", "11.2306, 10.3439, 3.46943, 0.46", "12.0277, 12.1873, 2.17831, 0.46", "12.2764, 12.7422, 1.74921, 0.46", "12.6835, 13.6749, 0.996863, 0.46", "13.0265, 14.481, 0.0819545, 0.46", "13.3237, 15.4248, -1.54167, 0.46", "13.2492, 15.7653, -2.48029, 0.68", "12.8348, 16.2764, -4.27819, 0.68", "12.7031, 16.3761, -4.6988, 1.37", "11.6283, 16.8701, -7.39912, 0.91", "10.4934, 17.2061, -9.74365, 0.91", "9.19022, 17.4437, -11.9881, 0.91", "8.79868, 17.4747, -12.621, 1.14" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "0.512623, 10.1595, 23.5856, 0.91", "0.321739, 9.56505, 25.8949, 0.91", "-0.208992, 7.91219, 32.3154, 0.68", "-0.458882, 7.13396, 35.3385, 0.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.512623, 10.1595, 23.5856, 0.68", "-1.64956, 10.3849, 23.1458, 0.68", "-2.98934, 10.5684, 22.809, 0.68", "-5.0595, 10.9284, 22.2907, 0.46", "-7.16378, 11.4288, 21.7688, 0.46", "-8.57406, 11.7642, 21.419, 0.46", "-9.69101, 12.0298, 21.1419, 0.68", "-11.1425, 12.4051, 20.8953, 0.68", "-11.9458, 12.6837, 20.7289, 0.68", "-12.9987, 13.2578, 20.422, 0.91" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "20.7086, 1.84348, 12.3827, 0.46", "20.3555, 0.228425, 14.3902, 0.46", "19.9824, -1.47838, 16.5118, 0.46", "19.7695, -2.4518, 17.7218, 0.46", "19.5302, -3.54643, 19.0825, 0.46" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "20.7086, 1.84348, 12.3827, 1.59", "21.3584, 1.66683, 15.7541, 1.59", "21.9699, 1.50059, 18.927, 1.59", "22.4844, 1.36074, 21.5964, 1.59", "22.9643, 1.23024, 24.0869, 1.82", "23.1767, 1.17251, 25.1889, 1.82" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "19.5302, -3.54643, 19.0825, 0.23", "19.2714, -3.81956, 19.7404, 0.23", "18.328, -5.18133, 22.1317, 0.23", "17.8641, -6.14817, 23.4707, 0.23", "17.3188, -7.62948, 25.3646, 0.46", "17.2643, -7.85869, 25.6338, 0.23", "17.2078, -8.62126, 26.4997, 0.23", "17.4144, -9.62864, 27.5251, 0.46", "17.9953, -11.0768, 28.6207, 0.46", "18.8979, -12.7219, 29.6646, 0.46", "19.551, -13.5603, 30.1797, 0.46", "20.8883, -14.9629, 31.2491, 0.46", "21.5495, -15.4342, 31.7683, 0.68" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "19.5302, -3.54643, 19.0825, 0.46", "19.9858, -5.48103, 19.1621, 0.46", "19.9281, -6.28256, 19.1351, 0.46", "19.3369, -8.90072, 18.978, 0.46", "18.8087, -10.5135, 18.83, 0.46", "18.302, -11.7006, 18.6658, 0.46", "17.9555, -12.3024, 18.5532, 0.46", "16.5624, -13.6474, 18.0683, 0.46", "16.2128, -13.8464, 17.9833, 0.46", "15.811, -14.015, 17.9206, 0.46", "14.9023, -14.3586, 17.7198, 0.46", "14.0136, -14.6851, 17.5118, 0.46", "12.4399, -15.2163, 17.1706, 0.91", "11.2626, -15.5858, 16.93, 0.68", "10.0275, -16.0149, 16.6832, 0.91", "8.10969, -16.765, 16.3258, 0.68", "7.73407, -16.9449, 16.2584, 0.68" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "23.1767, 1.17251, 25.1889, 0.68", "24.5362, 0.883435, 24.1057, 0.68", "26.5384, 0.45769, 22.5103, 0.68" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "23.1767, 1.17251, 25.1889, 1.82", "23.0567, 0.612505, 26.8789, 1.82" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "21.5495, -15.4342, 31.7683, 0.68", "22.9808, -14.9211, 33.2948, 0.68", "24.1547, -14.5898, 34.8248, 0.68", "25.171, -14.4129, 36.5955, 0.68", "25.8387, -14.4248, 38.0623, 0.68", "26.545, -14.7132, 39.9487, 0.68", "26.8782, -14.998, 40.9369, 0.91", "27.1341, -15.5574, 42.2296, 0.91", "27.2682, -16.5098, 43.9352, 0.68", "27.2399, -17.3781, 45.0965, 0.46", "27.0525, -18.8134, 46.6154, 0.68", "26.8603, -19.8345, 47.4635, 0.68" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "21.5495, -15.4342, 31.7683, 0.46", "21.1744, -15.6994, 32.7937, 0.46", "19.8074, -16.3244, 35.3106, 0.46", "18.6208, -16.7048, 36.9917, 0.46", "17.555, -16.9797, 38.2101, 0.46", "16.406, -17.2618, 39.3119, 0.91", "15.1871, -17.5638, 40.36, 0.68", "13.3609, -17.8658, 41.4727, 0.68", "12.0821, -17.9777, 41.9211, 0.91", "11.0455, -18.012, 42.2283, 0.91", "10.0103, -18.0311, 42.5992, 0.68", "8.79893, -18.054, 43.2589, 0.68", "7.50757, -18.082, 44.3531, 0.91", "5.98292, -18.1749, 46.338, 0.68", "4.83444, -18.3482, 48.4519, 0.68", "4.12232, -18.6053, 50.6635, 0.68", "3.91569, -18.9721, 52.8855, 0.68", "4.08865, -19.5008, 55.187, 0.68", "4.3375, -19.8793, 56.6243, 0.68", "4.87916, -20.3821, 58.4402, 0.46", "5.64446, -20.9324, 60.3168, 0.46", "6.73502, -21.7086, 62.5493, 0.46", "7.28424, -22.1696, 63.6153, 0.46", "7.69545, -22.6349, 64.5796, 0.46", "8.22098, -23.4573, 66.4226, 0.46", "8.47172, -23.9262, 67.5196, 0.46", "8.78117, -24.5712, 68.8102, 0.68", "9.11499, -25.5148, 70.3347, 0.46", "9.44657, -26.5891, 71.855, 0.46", "9.63469, -27.4906, 72.9582, 0.68" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.73407, -16.9449, 16.2584, 0.68", "5.79902, -17.0807, 14.7254, 0.68", "4.63308, -17.2176, 13.8073, 0.68", "2.29722, -17.5846, 12.1918, 0.68", "0.254559, -17.9004, 10.9454, 0.68", "-0.752658, -18.0226, 10.4004, 0.91", "-2.98008, -18.2236, 9.32614, 0.68", "-4.80167, -18.4066, 8.60081, 1.14", "-7.04909, -18.6305, 7.82611, 0.68", "-8.79915, -18.753, 7.31233, 0.68", "-10.649, -18.8792, 6.86329, 0.68", "-12.2217, -18.9455, 6.54274, 0.68" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "7.73407, -16.9449, 16.2584, 0.46", "7.62902, -15.3421, 16.3918, 0.46", "7.57802, -14.6602, 16.4205, 0.46", "7.3227, -12.5284, 16.4403, 0.46", "7.05765, -10.5415, 16.4275, 0.46", "6.66147, -8.4576, 16.3965, 0.46", "6.29979, -6.89992, 16.2708, 0.46", "5.90317, -5.25413, 16.0632, 0.68", "5.50139, -3.69014, 15.7643, 0.46", "5.17271, -2.61412, 15.4426, 0.46", "4.22684, -0.294079, 14.4953, 0.46", "2.99068, 2.06626, 13.2252, 0.46", "2.40887, 3.03291, 12.6825, 0.46", "1.43049, 4.57943, 11.7698, 0.46", "0.410705, 6.11557, 10.8486, 0.46", "-0.538712, 7.50595, 10.0258, 0.46", "-1.84251, 9.36064, 8.89375, 0.46", "-3.48421, 11.5308, 7.71827, 0.46", "-4.62251, 12.9693, 6.98045, 0.46", "-5.55939, 14.0691, 6.57451, 0.46", "-6.06307, 14.7567, 6.48494, 0.46" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "26.5384, 0.45769, 22.5103, 0.46", "27.4668, 1.08269, 21.9439, 0.46", "28.4326, 1.75049, 21.1815, 0.46", "28.9587, 2.17413, 20.608, 0.46", "29.9434, 2.9859, 19.3307, 0.46", "30.5923, 3.54514, 18.4661, 0.46", "31.4323, 4.21105, 17.3757, 0.68", "32.2798, 4.83543, 16.1612, 0.91", "33.6792, 5.81612, 14.0486, 0.91", "34.8177, 6.51694, 12.442, 0.91", "35.5445, 6.87435, 11.5107, 0.68", "37.0118, 7.53975, 9.78722, 0.68", "38.0172, 7.99864, 8.72603, 0.68", "38.5575, 8.202, 8.25411, 0.91", "40.2557, 8.6529, 7.13696, 0.91", "41.7168, 8.99892, 6.35846, 0.91", "42.5027, 9.15109, 5.94946, 0.91", "43.5853, 9.71796, 5.74924, 0.68" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "26.5384, 0.45769, 22.5103, 0.68", "27.8727, -0.667796, 22.0305, 0.68", "28.9023, -1.45631, 21.5856, 1.14", "29.4277, -1.83206, 21.3592, 1.14", "30.5217, -2.61446, 20.8878, 0.68", "32.1436, -3.77441, 20.1889, 0.68", "33.3867, -4.66341, 19.6533, 0.46", "34.8122, -5.7519, 19.0753, 0.46", "35.6551, -6.44424, 18.6716, 0.46" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "23.0567, 0.612505, 26.8789, 0.46", "22.5563, 2.37672, 28.5239, 0.46", "22.678, 4.72645, 29.1415, 0.46", "22.7892, 5.60888, 29.0821, 0.46", "22.9449, 7.04558, 28.8457, 0.46", "23.1614, 8.86514, 28.4195, 1.14", "23.2721, 9.80408, 28.1635, 0.68", "23.6132, 11.775, 27.4579, 0.68", "23.9793, 13.5928, 26.6945, 1.14", "24.2919, 15.2362, 25.9597, 0.68", "24.5775, 17.011, 25.1177, 0.68", "24.7229, 18.1872, 24.6011, 0.68", "24.9219, 19.9167, 23.833, 0.68" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "23.0567, 0.612505, 26.8789, 1.82", "23.274, -1.29235, 26.3163, 1.82", "23.7454, -3.47093, 25.6794, 0.91", "24.1175, -5.15745, 25.1875, 0.91", "24.359, -6.54464, 24.7905, 0.91", "24.4802, -7.24073, 24.5913, 0.91", "24.6025, -7.94323, 24.3903, 0.68", "24.8682, -9.14688, 23.8626, 0.68", "25.2642, -10.1936, 23.3503, 0.23", "25.5551, -10.9946, 23.1031, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "26.8603, -19.8345, 47.4635, 0.46", "26.8092, -20.9033, 48.9711, 0.46", "26.9016, -21.7195, 50.1725, 0.46", "26.9672, -22.1903, 50.9142, 0.68", "26.9975, -22.8412, 51.9403, 0.68", "26.991, -24.0181, 53.7158, 0.68", "27.0185, -25.0087, 55.0866, 0.68", "27.1176, -26.6101, 57.0962, 0.91", "27.3189, -28.3488, 59.1817, 0.91", "27.5048, -29.5622, 60.5445, 0.91", "27.6022, -30.1607, 61.1551, 0.68", "27.8308, -31.7452, 62.6006, 0.68", "28.1296, -33.2776, 63.8459, 0.68", "28.6008, -35.176, 65.298, 0.68", "28.8945, -36.1275, 66.0334, 0.91", "29.2598, -37.2244, 66.9122, 0.91", "29.6645, -38.4651, 67.9232, 0.68", "30.2569, -40.2954, 69.4294, 0.68", "30.8107, -41.8909, 70.6423, 0.68", "31.1561, -42.8037, 71.3462, 0.68", "31.4443, -43.6542, 72.0575, 0.68", "31.7514, -44.7151, 72.9688, 0.91", "32.1001, -46.2848, 74.2038, 0.68", "32.2756, -47.3144, 74.8842, 0.91", "32.5875, -48.7123, 75.7082, 0.91", "33.0689, -50.2226, 76.5984, 0.68", "33.3685, -51.0579, 77.1046, 0.68", "33.7674, -52.1675, 77.723, 0.91", "34.2335, -53.3946, 78.2949, 0.23", "34.6582, -54.3501, 78.7379, 0.68", "35.316, -55.8956, 79.412, 0.46", "36.0059, -57.5974, 80.2338, 0.46", "36.492, -58.9575, 80.9073, 0.68", "36.7417, -59.8097, 81.3105, 0.68", "37.3047, -62.4529, 82.4258, 0.46", "37.8386, -66.2513, 83.9349, 0.46", "37.9696, -67.6766, 84.4521, 0.46", "38.0358, -68.5876, 84.8314, 0.91", "38.1239, -70.1293, 85.6646, 1.14", "38.1933, -71.8066, 86.7863, 0.46", "38.2078, -73.815, 88.4401, 0.23", "38.1998, -74.4434, 89.0755, 0.91", "38.2153, -76.8066, 91.5878, 0.46", "38.242, -78.582, 93.6606, 0.68", "38.2685, -79.7238, 95.1524, 0.23", "38.3067, -80.8789, 96.7981, 0.68", "38.3583, -82.4555, 99.0665, 0.23", "38.3774, -83.8071, 100.97, 0.23" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "26.8603, -19.8345, 47.4635, 0.23", "26.7491, -20.7671, 47.3212, 0.23", "26.5713, -21.9592, 47.0685, 0.23", "26.4047, -22.8917, 46.8256, 0.68", "26.0995, -24.6003, 46.3804, 0.91", "25.6992, -26.8411, 45.7967, 0.46", "25.5223, -27.8314, 45.5387, 0.46", "25.2256, -29.6473, 45.0336, 0.46", "25.0273, -30.8927, 44.63, 0.91" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-6.06307, 14.7567, 6.48494, 0.46", "-6.5055, 15.4442, 5.82812, 0.46", "-7.30513, 16.6692, 4.56864, 0.46", "-8.09121, 17.9199, 3.2166, 0.46", "-8.8712, 19.2196, 1.87382, 0.46", "-9.52146, 20.3031, 0.754372, 0.68", "-10.606, 22.1103, -1.11273, 0.46", "-11.3792, 23.3144, -2.48818, 0.68", "-12.1891, 24.5367, -4.03024, 0.68", "-13.3375, 26.1619, -6.04191, 0.46" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-6.06307, 14.7567, 6.48494, 0.46", "-7.38164, 15.0685, 6.69341, 0.46", "-8.89084, 15.4772, 7.05266, 0.46", "-9.78259, 15.7018, 7.30597, 0.46", "-11.8195, 16.2169, 7.75534, 0.46", "-13.8228, 16.7563, 8.01199, 0.46", "-16.5883, 17.5659, 8.08533, 0.46", "-18.4251, 18.1503, 7.88764, 0.46", "-20.2008, 18.8767, 7.2126, 0.46", "-21.9868, 19.7908, 5.792, 0.46", "-23.2496, 20.5369, 4.1122, 0.46", "-24.1892, 21.0788, 2.41483, 0.46", "-25.0833, 21.6023, 0.538903, 0.68", "-26.3893, 22.4161, -2.54007, 0.46", "-27.5363, 23.1914, -5.58588, 0.46", "-29.1014, 24.2179, -9.94407, 0.46", "-30.0005, 24.7457, -12.5072, 0.46" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "43.5853, 9.71796, 5.74924, 0.46", "45.0324, 9.71245, 4.87091, 0.46", "46.5924, 9.70651, 3.92409, 0.46", "47.6171, 9.70261, 3.30212, 0.46", "49.7735, 9.69439, 1.99332, 0.46", "51.538, 9.68767, 0.922355, 0.46", "52.4724, 9.68411, 0.355214, 0.46" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "43.5853, 9.71796, 5.74924, 0.46", "44.0622, 10.5504, 4.08676, 0.46", "44.6309, 11.543, 2.10446, 0.46", "44.9938, 12.1766, 0.839185, 0.46", "45.5874, 13.2127, -1.2299, 0.46", "46.3588, 14.5592, -3.91891, 0.46" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "35.6551, -6.44424, 18.6716, 0.68", "36.1995, -6.22918, 17.4256, 0.68", "36.7556, -6.13014, 15.8832, 0.68", "37.0914, -6.13332, 14.6879, 0.68", "37.4642, -6.16764, 12.7793, 0.68", "37.5724, -6.17759, 11.8971, 0.68", "37.7754, -6.24691, 9.13302, 0.68", "37.8541, -6.38117, 7.17389, 0.68", "37.8504, -6.54434, 5.54026, 0.68", "37.7001, -6.80263, 3.20511, 0.68", "37.4052, -7.02087, 1.0689, 0.68", "37.2123, -7.10348, 0.108817, 0.68" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "35.6551, -6.44424, 18.6716, 0.46", "36.8667, -8.39803, 20.2815, 0.46", "38.0981, -10.2603, 21.5168, 0.46", "38.7175, -11.2174, 22.0787, 0.46", "38.9964, -11.6567, 22.2936, 0.46", "40.3514, -13.7468, 23.361, 0.46", "40.6643, -14.2383, 23.6016, 0.46", "41.6394, -15.8823, 24.2309, 0.46", "42.3122, -17.1236, 24.6492, 0.46", "43.3599, -19.1014, 25.3813, 0.68", "44.3596, -21.153, 26.2158, 0.23", "44.8213, -22.2555, 26.6765, 0.46", "45.0919, -23.0523, 27.0091, 0.46", "45.4363, -24.3606, 27.5802, 0.46", "45.8465, -26.2235, 28.3658, 0.46", "46.0255, -27.2806, 28.7864, 0.91", "46.2488, -29.2209, 29.4739, 0.91", "46.4227, -31.6053, 30.297, 0.46", "46.4567, -33.3535, 30.8702, 0.46", "46.3981, -34.4804, 31.2157, 0.68", "46.1792, -35.9153, 31.6227, 0.46", "45.7346, -38.2325, 32.2948, 0.68", "45.2857, -39.8464, 32.7636, 0.46", "44.9092, -40.8863, 33.0162, 0.46", "44.5345, -41.6787, 33.1709, 0.68", "43.6347, -43.1855, 33.5146, 0.46" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "52.4724, 9.68411, 0.355214, 0.46", "53.0715, 11.8829, 1.30339, 0.46", "53.7498, 14.372, 2.37679, 0.46", "54.1487, 15.8362, 3.00819, 0.23", "54.757, 18.0687, 3.97088, 0.23", "55.2769, 19.9767, 4.79366, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "52.4724, 9.68411, 0.355214, 0.46", "53.191, 11.0782, -0.973357, 0.46", "53.7916, 12.018, -1.90244, 0.46", "54.7971, 13.0291, -3.10539, 0.46", "55.7356, 13.9728, -4.22819, 0.46", "57.0009, 15.2451, -5.74189, 0.46", "58.9876, 17.2427, -8.11859, 0.46", "60.1472, 18.3357, -9.76014, 0.46", "61.5278, 19.0412, -11.5594, 0.46" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_0", "dend_33", "dend_32", "dend_4", "dend_1", "dend_35", "dend_34", "dend_6", "dend_5", "dend_3", "dend_2", "dend_20", "dend_7", "dend_26", "dend_21", "dend_11", "dend_8", "dend_28", "dend_27", "dend_25", "dend_22", "dend_15", "dend_12", "dend_10", "dend_9", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_16", "dend_14", "dend_13", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_0", "dend_33", "dend_32", "dend_4", "dend_1", "dend_35", "dend_34", "dend_6", "dend_5", "dend_3", "dend_2", "dend_20", "dend_7", "dend_26", "dend_21", "dend_11", "dend_8", "dend_28", "dend_27", "dend_25", "dend_22", "dend_15", "dend_12", "dend_10", "dend_9", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_16", "dend_14", "dend_13", "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_20", "dend_20", "dend_20", "dend_20", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_11", "dend_11", "dend_8", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_NGCSA_96296dfc3f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_20, id: dend_20, parent: dend_6
create dend_20
public dend_20
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_0, dend_33, dend_32, dend_4, dend_1, dend_35, dend_34, dend_6, dend_5, dend_3, dend_2, dend_20, dend_7, dend_26, dend_21, dend_11, dend_8, dend_28, dend_27, dend_25, dend_22, dend_15, dend_12, dend_10, dend_9, dend_30, dend_29, dend_24, dend_23, dend_17, dend_16, dend_14, dend_13, dend_19, dend_18]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_0, dend_33, dend_32, dend_4, dend_1, dend_35, dend_34, dend_6, dend_5, dend_3, dend_2, dend_20, dend_7, dend_26, dend_21, dend_11, dend_8, dend_28, dend_27, dend_25, dend_22, dend_15, dend_12, dend_10, dend_9, dend_30, dend_29, dend_24, dend_23, dend_17, dend_16, dend_14, dend_13, dend_19, dend_18]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_20, dend_7, dend_7, dend_7, dend_7, dend_7, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_8, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_31(0), soma_0(0.45000010119909284)
    connect dend_0(0), soma_0(0.45000010119909284)
    connect axon_0(0), soma_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_20(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.96913, -4.86293, 0.0, 3.39479 ) }
    soma_0 { pt3dadd( -4.36552, -4.37605, 0.0, 5.96397 ) }
    soma_0 { pt3dadd( -3.7619, -3.88917, 0.0, 8.77722 ) }
    soma_0 { pt3dadd( -3.15829, -3.40229, 0.0, 9.8842 ) }
    soma_0 { pt3dadd( -2.55468, -2.91541, 0.0, 10.5875 ) }
    soma_0 { pt3dadd( -1.95107, -2.42853, 0.0, 11.7562 ) }
    soma_0 { pt3dadd( -1.34746, -1.94164, 0.0, 12.3087 ) }
    soma_0 { pt3dadd( -0.743845, -1.45476, 0.0, 11.9851 ) }
    soma_0 { pt3dadd( -0.140234, -0.967884, 0.0, 11.7989 ) }
    soma_0 { pt3dadd( 0.463378, -0.481003, 0.0, 11.3751 ) }
    soma_0 { pt3dadd( 1.06699, 0.00587722, 0.0, 10.9613 ) }
    soma_0 { pt3dadd( 1.6706, 0.492758, 0.0, 10.6546 ) }
    soma_0 { pt3dadd( 2.27421, 0.979638, 0.0, 10.1747 ) }
    soma_0 { pt3dadd( 2.87783, 1.46652, 0.0, 9.34693 ) }
    soma_0 { pt3dadd( 3.48144, 1.9534, 0.0, 8.51653 ) }
    soma_0 { pt3dadd( 4.08505, 2.44028, 0.0, 7.71222 ) }
    soma_0 { pt3dadd( 4.68866, 2.92716, 0.0, 6.73254 ) }
    soma_0 { pt3dadd( 5.29227, 3.41404, 0.0, 5.75341 ) }
    soma_0 { pt3dadd( 5.89588, 3.90092, 0.0, 4.75501 ) }
    soma_0 { pt3dadd( 6.4995, 4.3878, 0.0, 3.7193 ) }
    soma_0 { pt3dadd( 7.10311, 4.87468, 0.0, 2.22175 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -6.35255, 0.134553, 0.55, 0.68 ) }
    dend_31 { pt3dadd( -7.85373, 0.650594, 0.877234, 0.68 ) }
    dend_31 { pt3dadd( -9.86509, 1.34203, 1.31569, 0.68 ) }
    dend_31 { pt3dadd( -11.9336, 2.05308, 1.76657, 0.91 ) }
    dend_31 { pt3dadd( -13.6284, 2.63569, 2.13603, 0.68 ) }
    dend_31 { pt3dadd( -15.3539, 3.22885, 2.51216, 1.37 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.65745, 4.17456, 2.62, 3.64 ) }
    dend_0 { pt3dadd( 6.65745, 4.17456, 2.62, 3.64 ) }
    dend_0 { pt3dadd( 7.46384, 4.68492, 4.19276, 3.42 ) }
    dend_0 { pt3dadd( 8.01755, 5.03537, 5.2727, 3.19 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.10311, 4.87468, 0.0, 0.46 ) }
    axon_0 { pt3dadd( 18.7784, 14.2921, 0.0, 0.46 ) }
    axon_0 { pt3dadd( 30.4537, 23.7095, 0.0, 0.46 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -15.3539, 3.22885, 2.51216, 1.59 ) }
    dend_33 { pt3dadd( -16.5071, 3.04538, 1.19552, 1.59 ) }
    dend_33 { pt3dadd( -16.8028, 2.99834, 0.857942, 1.59 ) }
    dend_33 { pt3dadd( -18.1292, 2.78731, -0.656392, 0.68 ) }
    dend_33 { pt3dadd( -19.1647, 2.62257, -1.8387, 0.68 ) }
    dend_33 { pt3dadd( -20.2292, 2.45322, -3.05405, 0.68 ) }
    dend_33 { pt3dadd( -21.306, 2.28189, -4.28346, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -15.3539, 3.22885, 2.51216, 0.91 ) }
    dend_32 { pt3dadd( -15.5933, 3.34263, 3.06702, 0.91 ) }
    dend_32 { pt3dadd( -17.2092, 3.71354, 6.54742, 0.91 ) }
    dend_32 { pt3dadd( -18.0151, 3.81675, 8.1095, 0.91 ) }
    dend_32 { pt3dadd( -19.12, 3.90832, 10.0267, 0.91 ) }
    dend_32 { pt3dadd( -19.9184, 3.98383, 11.2545, 0.91 ) }
    dend_32 { pt3dadd( -21.0445, 4.13336, 12.7403, 0.91 ) }
    dend_32 { pt3dadd( -22.1429, 4.28904, 13.917, 0.91 ) }
    dend_32 { pt3dadd( -22.8495, 4.45768, 14.4835, 1.14 ) }
    dend_32 { pt3dadd( -23.5181, 4.82581, 14.9791, 1.14 ) }
    dend_32 { pt3dadd( -24.8277, 6.02488, 15.9626, 0.46 ) }
    dend_32 { pt3dadd( -26.3307, 7.96688, 17.4489, 0.46 ) }
    dend_32 { pt3dadd( -27.1377, 9.4376, 18.751, 0.68 ) }
    dend_32 { pt3dadd( -27.7953, 11.1689, 21.0069, 0.68 ) }
    dend_32 { pt3dadd( -28.1139, 12.385, 23.4776, 0.68 ) }
    dend_32 { pt3dadd( -28.1628, 12.6457, 24.3372, 0.68 ) }
    dend_32 { pt3dadd( -28.1443, 12.9398, 26.0525, 0.68 ) }
    dend_32 { pt3dadd( -28.0804, 13.0881, 28.067, 0.68 ) }
    dend_32 { pt3dadd( -27.9927, 13.0243, 30.3333, 0.68 ) }
    dend_32 { pt3dadd( -27.9617, 12.9268, 31.1117, 0.68 ) }
    dend_32 { pt3dadd( -27.9389, 12.596, 32.6518, 0.68 ) }
    dend_32 { pt3dadd( -27.9582, 12.1641, 34.4578, 0.68 ) }
    dend_32 { pt3dadd( -28.0176, 12.044, 35.118, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 64/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.01755, 5.03537, 5.2727, 2.51 ) }
    dend_4 { pt3dadd( 8.73632, 5.28493, 5.56474, 2.51 ) }
    dend_4 { pt3dadd( 10.3531, 5.84629, 6.22162, 2.05 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.01755, 5.03537, 5.2727, 0.46 ) }
    dend_1 { pt3dadd( 8.1323, 5.61449, 6.39004, 0.46 ) }
    dend_1 { pt3dadd( 8.36017, 6.54908, 8.53714, 0.46 ) }
    dend_1 { pt3dadd( 8.46695, 7.12967, 9.91049, 0.46 ) }
    dend_1 { pt3dadd( 8.57851, 8.1146, 12.1622, 0.91 ) }
    dend_1 { pt3dadd( 8.51674, 8.98594, 14.2974, 0.91 ) }
    dend_1 { pt3dadd( 8.37204, 9.70528, 16.1015, 0.68 ) }
    dend_1 { pt3dadd( 8.10185, 10.2977, 18.1282, 0.68 ) }
    dend_1 { pt3dadd( 7.92378, 10.4387, 18.8761, 0.68 ) }
    dend_1 { pt3dadd( 7.34374, 10.605, 20.1826, 0.68 ) }
    dend_1 { pt3dadd( 5.31038, 10.6693, 22.0784, 0.68 ) }
    dend_1 { pt3dadd( 3.52304, 10.5852, 22.935, 0.68 ) }
    dend_1 { pt3dadd( 1.69378, 10.3836, 23.4185, 0.91 ) }
    dend_1 { pt3dadd( 0.512623, 10.1595, 23.5856, 1.37 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 81/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 30.4537, 23.7095, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 42.129, 33.1269, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 53.8042, 42.5444, 0.0, 0.46 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 84/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -21.306, 2.28189, -4.28346, 0.46 ) }
    dend_35 { pt3dadd( -22.6602, 1.7513, -4.99532, 0.46 ) }
    dend_35 { pt3dadd( -24.0965, 1.16834, -5.81294, 0.46 ) }
    dend_35 { pt3dadd( -25.4744, 0.603402, -6.64164, 0.68 ) }
    dend_35 { pt3dadd( -26.2663, 0.233042, -7.08338, 0.91 ) }
    dend_35 { pt3dadd( -28.4073, -0.768256, -8.27768, 0.91 ) }
    dend_35 { pt3dadd( -30.7408, -1.85962, -9.5794, 0.68 ) }
    dend_35 { pt3dadd( -32.8161, -2.91507, -10.7509, 0.68 ) }
    dend_35 { pt3dadd( -33.4946, -3.24808, -11.1036, 0.91 ) }
    dend_35 { pt3dadd( -35.2905, -4.05211, -12.1097, 1.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 94/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -21.306, 2.28189, -4.28346, 0.46 ) }
    dend_34 { pt3dadd( -21.071, 4.00451, -7.5022, 0.46 ) }
    dend_34 { pt3dadd( -21.0261, 5.2509, -9.81128, 0.46 ) }
    dend_34 { pt3dadd( -21.0452, 6.23458, -11.8186, 0.91 ) }
    dend_34 { pt3dadd( -21.0697, 7.50238, -14.4056, 0.91 ) }
    dend_34 { pt3dadd( -21.0844, 8.26151, -15.9547, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_34 { pt3dadd( -21.0989, 9.01237, -17.4869, 0.91 ) }
    dend_34 { pt3dadd( -21.2589, 9.8654, -19.0422, 0.91 ) }
    dend_34 { pt3dadd( -21.5457, 10.8567, -20.7092, 0.91 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 3/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.3531, 5.84629, 6.22162, 1.37 ) }
    dend_6 { pt3dadd( 12.2273, 5.12186, 7.33666, 1.37 ) }
    dend_6 { pt3dadd( 14.1592, 4.37507, 8.48609, 1.59 ) }
    dend_6 { pt3dadd( 15.6826, 3.78623, 9.39244, 1.82 ) }
    dend_6 { pt3dadd( 16.87, 3.32727, 10.0989, 1.59 ) }
    dend_6 { pt3dadd( 18.3828, 2.74253, 10.9989, 1.59 ) }
    dend_6 { pt3dadd( 20.7086, 1.84348, 12.3827, 1.59 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 10/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 10.3531, 5.84629, 6.22162, 0.46 ) }
    dend_5 { pt3dadd( 10.4727, 7.37787, 5.32532, 0.46 ) }
    dend_5 { pt3dadd( 10.7154, 8.7729, 4.50599, 0.46 ) }
    dend_5 { pt3dadd( 11.2306, 10.3439, 3.46943, 0.46 ) }
    dend_5 { pt3dadd( 12.0277, 12.1873, 2.17831, 0.46 ) }
    dend_5 { pt3dadd( 12.2764, 12.7422, 1.74921, 0.46 ) }
    dend_5 { pt3dadd( 12.6835, 13.6749, 0.996863, 0.46 ) }
    dend_5 { pt3dadd( 13.0265, 14.481, 0.0819545, 0.46 ) }
    dend_5 { pt3dadd( 13.3237, 15.4248, -1.54167, 0.46 ) }
    dend_5 { pt3dadd( 13.2492, 15.7653, -2.48029, 0.68 ) }
    dend_5 { pt3dadd( 12.8348, 16.2764, -4.27819, 0.68 ) }
    dend_5 { pt3dadd( 12.7031, 16.3761, -4.6988, 1.37 ) }
    dend_5 { pt3dadd( 11.6283, 16.8701, -7.39912, 0.91 ) }
    dend_5 { pt3dadd( 10.4934, 17.2061, -9.74365, 0.91 ) }
    dend_5 { pt3dadd( 9.19022, 17.4437, -11.9881, 0.91 ) }
    dend_5 { pt3dadd( 8.79868, 17.4747, -12.621, 1.14 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 26/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 0.512623, 10.1595, 23.5856, 0.91 ) }
    dend_3 { pt3dadd( 0.321739, 9.56505, 25.8949, 0.91 ) }
    dend_3 { pt3dadd( -0.208992, 7.91219, 32.3154, 0.68 ) }
    dend_3 { pt3dadd( -0.458882, 7.13396, 35.3385, 0.68 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 30/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.512623, 10.1595, 23.5856, 0.68 ) }
    dend_2 { pt3dadd( -1.64956, 10.3849, 23.1458, 0.68 ) }
    dend_2 { pt3dadd( -2.98934, 10.5684, 22.809, 0.68 ) }
    dend_2 { pt3dadd( -5.0595, 10.9284, 22.2907, 0.46 ) }
    dend_2 { pt3dadd( -7.16378, 11.4288, 21.7688, 0.46 ) }
    dend_2 { pt3dadd( -8.57406, 11.7642, 21.419, 0.46 ) }
    dend_2 { pt3dadd( -9.69101, 12.0298, 21.1419, 0.68 ) }
    dend_2 { pt3dadd( -11.1425, 12.4051, 20.8953, 0.68 ) }
    dend_2 { pt3dadd( -11.9458, 12.6837, 20.7289, 0.68 ) }
    dend_2 { pt3dadd( -12.9987, 13.2578, 20.422, 0.91 ) }
    // Section: dend_20, id: dend_20, parent: dend_6 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 20.7086, 1.84348, 12.3827, 0.46 ) }
    dend_20 { pt3dadd( 20.3555, 0.228425, 14.3902, 0.46 ) }
    dend_20 { pt3dadd( 19.9824, -1.47838, 16.5118, 0.46 ) }
    dend_20 { pt3dadd( 19.7695, -2.4518, 17.7218, 0.46 ) }
    dend_20 { pt3dadd( 19.5302, -3.54643, 19.0825, 0.46 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 45/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 20.7086, 1.84348, 12.3827, 1.59 ) }
    dend_7 { pt3dadd( 21.3584, 1.66683, 15.7541, 1.59 ) }
    dend_7 { pt3dadd( 21.9699, 1.50059, 18.927, 1.59 ) }
    dend_7 { pt3dadd( 22.4844, 1.36074, 21.5964, 1.59 ) }
    dend_7 { pt3dadd( 22.9643, 1.23024, 24.0869, 1.82 ) }
    dend_7 { pt3dadd( 23.1767, 1.17251, 25.1889, 1.82 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 51/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 19.5302, -3.54643, 19.0825, 0.23 ) }
    dend_26 { pt3dadd( 19.2714, -3.81956, 19.7404, 0.23 ) }
    dend_26 { pt3dadd( 18.328, -5.18133, 22.1317, 0.23 ) }
    dend_26 { pt3dadd( 17.8641, -6.14817, 23.4707, 0.23 ) }
    dend_26 { pt3dadd( 17.3188, -7.62948, 25.3646, 0.46 ) }
    dend_26 { pt3dadd( 17.2643, -7.85869, 25.6338, 0.23 ) }
    dend_26 { pt3dadd( 17.2078, -8.62126, 26.4997, 0.23 ) }
    dend_26 { pt3dadd( 17.4144, -9.62864, 27.5251, 0.46 ) }
    dend_26 { pt3dadd( 17.9953, -11.0768, 28.6207, 0.46 ) }
    dend_26 { pt3dadd( 18.8979, -12.7219, 29.6646, 0.46 ) }
    dend_26 { pt3dadd( 19.551, -13.5603, 30.1797, 0.46 ) }
    dend_26 { pt3dadd( 20.8883, -14.9629, 31.2491, 0.46 ) }
    dend_26 { pt3dadd( 21.5495, -15.4342, 31.7683, 0.68 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 64/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 19.5302, -3.54643, 19.0825, 0.46 ) }
    dend_21 { pt3dadd( 19.9858, -5.48103, 19.1621, 0.46 ) }
    dend_21 { pt3dadd( 19.9281, -6.28256, 19.1351, 0.46 ) }
    dend_21 { pt3dadd( 19.3369, -8.90072, 18.978, 0.46 ) }
    dend_21 { pt3dadd( 18.8087, -10.5135, 18.83, 0.46 ) }
    dend_21 { pt3dadd( 18.302, -11.7006, 18.6658, 0.46 ) }
    dend_21 { pt3dadd( 17.9555, -12.3024, 18.5532, 0.46 ) }
    dend_21 { pt3dadd( 16.5624, -13.6474, 18.0683, 0.46 ) }
    dend_21 { pt3dadd( 16.2128, -13.8464, 17.9833, 0.46 ) }
    dend_21 { pt3dadd( 15.811, -14.015, 17.9206, 0.46 ) }
    dend_21 { pt3dadd( 14.9023, -14.3586, 17.7198, 0.46 ) }
    dend_21 { pt3dadd( 14.0136, -14.6851, 17.5118, 0.46 ) }
    dend_21 { pt3dadd( 12.4399, -15.2163, 17.1706, 0.91 ) }
    dend_21 { pt3dadd( 11.2626, -15.5858, 16.93, 0.68 ) }
    dend_21 { pt3dadd( 10.0275, -16.0149, 16.6832, 0.91 ) }
    dend_21 { pt3dadd( 8.10969, -16.765, 16.3258, 0.68 ) }
    dend_21 { pt3dadd( 7.73407, -16.9449, 16.2584, 0.68 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 81/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 23.1767, 1.17251, 25.1889, 0.68 ) }
    dend_11 { pt3dadd( 24.5362, 0.883435, 24.1057, 0.68 ) }
    dend_11 { pt3dadd( 26.5384, 0.45769, 22.5103, 0.68 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 84/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 23.1767, 1.17251, 25.1889, 1.82 ) }
    dend_8 { pt3dadd( 23.0567, 0.612505, 26.8789, 1.82 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 86/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 21.5495, -15.4342, 31.7683, 0.68 ) }
    dend_28 { pt3dadd( 22.9808, -14.9211, 33.2948, 0.68 ) }
    dend_28 { pt3dadd( 24.1547, -14.5898, 34.8248, 0.68 ) }
    dend_28 { pt3dadd( 25.171, -14.4129, 36.5955, 0.68 ) }
    dend_28 { pt3dadd( 25.8387, -14.4248, 38.0623, 0.68 ) }
    dend_28 { pt3dadd( 26.545, -14.7132, 39.9487, 0.68 ) }
    dend_28 { pt3dadd( 26.8782, -14.998, 40.9369, 0.91 ) }
    dend_28 { pt3dadd( 27.1341, -15.5574, 42.2296, 0.91 ) }
    dend_28 { pt3dadd( 27.2682, -16.5098, 43.9352, 0.68 ) }
    dend_28 { pt3dadd( 27.2399, -17.3781, 45.0965, 0.46 ) }
    dend_28 { pt3dadd( 27.0525, -18.8134, 46.6154, 0.68 ) }
    dend_28 { pt3dadd( 26.8603, -19.8345, 47.4635, 0.68 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 98/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 21.5495, -15.4342, 31.7683, 0.46 ) }
    dend_27 { pt3dadd( 21.1744, -15.6994, 32.7937, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( 19.8074, -16.3244, 35.3106, 0.46 ) }
    dend_27 { pt3dadd( 18.6208, -16.7048, 36.9917, 0.46 ) }
    dend_27 { pt3dadd( 17.555, -16.9797, 38.2101, 0.46 ) }
    dend_27 { pt3dadd( 16.406, -17.2618, 39.3119, 0.91 ) }
    dend_27 { pt3dadd( 15.1871, -17.5638, 40.36, 0.68 ) }
    dend_27 { pt3dadd( 13.3609, -17.8658, 41.4727, 0.68 ) }
    dend_27 { pt3dadd( 12.0821, -17.9777, 41.9211, 0.91 ) }
    dend_27 { pt3dadd( 11.0455, -18.012, 42.2283, 0.91 ) }
    dend_27 { pt3dadd( 10.0103, -18.0311, 42.5992, 0.68 ) }
    dend_27 { pt3dadd( 8.79893, -18.054, 43.2589, 0.68 ) }
    dend_27 { pt3dadd( 7.50757, -18.082, 44.3531, 0.91 ) }
    dend_27 { pt3dadd( 5.98292, -18.1749, 46.338, 0.68 ) }
    dend_27 { pt3dadd( 4.83444, -18.3482, 48.4519, 0.68 ) }
    dend_27 { pt3dadd( 4.12232, -18.6053, 50.6635, 0.68 ) }
    dend_27 { pt3dadd( 3.91569, -18.9721, 52.8855, 0.68 ) }
    dend_27 { pt3dadd( 4.08865, -19.5008, 55.187, 0.68 ) }
    dend_27 { pt3dadd( 4.3375, -19.8793, 56.6243, 0.68 ) }
    dend_27 { pt3dadd( 4.87916, -20.3821, 58.4402, 0.46 ) }
    dend_27 { pt3dadd( 5.64446, -20.9324, 60.3168, 0.46 ) }
    dend_27 { pt3dadd( 6.73502, -21.7086, 62.5493, 0.46 ) }
    dend_27 { pt3dadd( 7.28424, -22.1696, 63.6153, 0.46 ) }
    dend_27 { pt3dadd( 7.69545, -22.6349, 64.5796, 0.46 ) }
    dend_27 { pt3dadd( 8.22098, -23.4573, 66.4226, 0.46 ) }
    dend_27 { pt3dadd( 8.47172, -23.9262, 67.5196, 0.46 ) }
    dend_27 { pt3dadd( 8.78117, -24.5712, 68.8102, 0.68 ) }
    dend_27 { pt3dadd( 9.11499, -25.5148, 70.3347, 0.46 ) }
    dend_27 { pt3dadd( 9.44657, -26.5891, 71.855, 0.46 ) }
    dend_27 { pt3dadd( 9.63469, -27.4906, 72.9582, 0.68 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.73407, -16.9449, 16.2584, 0.68 ) }
    dend_25 { pt3dadd( 5.79902, -17.0807, 14.7254, 0.68 ) }
    dend_25 { pt3dadd( 4.63308, -17.2176, 13.8073, 0.68 ) }
    dend_25 { pt3dadd( 2.29722, -17.5846, 12.1918, 0.68 ) }
    dend_25 { pt3dadd( 0.254559, -17.9004, 10.9454, 0.68 ) }
    dend_25 { pt3dadd( -0.752658, -18.0226, 10.4004, 0.91 ) }
    dend_25 { pt3dadd( -2.98008, -18.2236, 9.32614, 0.68 ) }
    dend_25 { pt3dadd( -4.80167, -18.4066, 8.60081, 1.14 ) }
    dend_25 { pt3dadd( -7.04909, -18.6305, 7.82611, 0.68 ) }
    dend_25 { pt3dadd( -8.79915, -18.753, 7.31233, 0.68 ) }
    dend_25 { pt3dadd( -10.649, -18.8792, 6.86329, 0.68 ) }
    dend_25 { pt3dadd( -12.2217, -18.9455, 6.54274, 0.68 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 7.73407, -16.9449, 16.2584, 0.46 ) }
    dend_22 { pt3dadd( 7.62902, -15.3421, 16.3918, 0.46 ) }
    dend_22 { pt3dadd( 7.57802, -14.6602, 16.4205, 0.46 ) }
    dend_22 { pt3dadd( 7.3227, -12.5284, 16.4403, 0.46 ) }
    dend_22 { pt3dadd( 7.05765, -10.5415, 16.4275, 0.46 ) }
    dend_22 { pt3dadd( 6.66147, -8.4576, 16.3965, 0.46 ) }
    dend_22 { pt3dadd( 6.29979, -6.89992, 16.2708, 0.46 ) }
    dend_22 { pt3dadd( 5.90317, -5.25413, 16.0632, 0.68 ) }
    dend_22 { pt3dadd( 5.50139, -3.69014, 15.7643, 0.46 ) }
    dend_22 { pt3dadd( 5.17271, -2.61412, 15.4426, 0.46 ) }
    dend_22 { pt3dadd( 4.22684, -0.294079, 14.4953, 0.46 ) }
    dend_22 { pt3dadd( 2.99068, 2.06626, 13.2252, 0.46 ) }
    dend_22 { pt3dadd( 2.40887, 3.03291, 12.6825, 0.46 ) }
    dend_22 { pt3dadd( 1.43049, 4.57943, 11.7698, 0.46 ) }
    dend_22 { pt3dadd( 0.410705, 6.11557, 10.8486, 0.46 ) }
    dend_22 { pt3dadd( -0.538712, 7.50595, 10.0258, 0.46 ) }
    dend_22 { pt3dadd( -1.84251, 9.36064, 8.89375, 0.46 ) }
    dend_22 { pt3dadd( -3.48421, 11.5308, 7.71827, 0.46 ) }
    dend_22 { pt3dadd( -4.62251, 12.9693, 6.98045, 0.46 ) }
    dend_22 { pt3dadd( -5.55939, 14.0691, 6.57451, 0.46 ) }
    dend_22 { pt3dadd( -6.06307, 14.7567, 6.48494, 0.46 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 61/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 26.5384, 0.45769, 22.5103, 0.46 ) }
    dend_15 { pt3dadd( 27.4668, 1.08269, 21.9439, 0.46 ) }
    dend_15 { pt3dadd( 28.4326, 1.75049, 21.1815, 0.46 ) }
    dend_15 { pt3dadd( 28.9587, 2.17413, 20.608, 0.46 ) }
    dend_15 { pt3dadd( 29.9434, 2.9859, 19.3307, 0.46 ) }
    dend_15 { pt3dadd( 30.5923, 3.54514, 18.4661, 0.46 ) }
    dend_15 { pt3dadd( 31.4323, 4.21105, 17.3757, 0.68 ) }
    dend_15 { pt3dadd( 32.2798, 4.83543, 16.1612, 0.91 ) }
    dend_15 { pt3dadd( 33.6792, 5.81612, 14.0486, 0.91 ) }
    dend_15 { pt3dadd( 34.8177, 6.51694, 12.442, 0.91 ) }
    dend_15 { pt3dadd( 35.5445, 6.87435, 11.5107, 0.68 ) }
    dend_15 { pt3dadd( 37.0118, 7.53975, 9.78722, 0.68 ) }
    dend_15 { pt3dadd( 38.0172, 7.99864, 8.72603, 0.68 ) }
    dend_15 { pt3dadd( 38.5575, 8.202, 8.25411, 0.91 ) }
    dend_15 { pt3dadd( 40.2557, 8.6529, 7.13696, 0.91 ) }
    dend_15 { pt3dadd( 41.7168, 8.99892, 6.35846, 0.91 ) }
    dend_15 { pt3dadd( 42.5027, 9.15109, 5.94946, 0.91 ) }
    dend_15 { pt3dadd( 43.5853, 9.71796, 5.74924, 0.68 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 26.5384, 0.45769, 22.5103, 0.68 ) }
    dend_12 { pt3dadd( 27.8727, -0.667796, 22.0305, 0.68 ) }
    dend_12 { pt3dadd( 28.9023, -1.45631, 21.5856, 1.14 ) }
    dend_12 { pt3dadd( 29.4277, -1.83206, 21.3592, 1.14 ) }
    dend_12 { pt3dadd( 30.5217, -2.61446, 20.8878, 0.68 ) }
    dend_12 { pt3dadd( 32.1436, -3.77441, 20.1889, 0.68 ) }
    dend_12 { pt3dadd( 33.3867, -4.66341, 19.6533, 0.46 ) }
    dend_12 { pt3dadd( 34.8122, -5.7519, 19.0753, 0.46 ) }
    dend_12 { pt3dadd( 35.6551, -6.44424, 18.6716, 0.46 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 88/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 23.0567, 0.612505, 26.8789, 0.46 ) }
    dend_10 { pt3dadd( 22.5563, 2.37672, 28.5239, 0.46 ) }
    dend_10 { pt3dadd( 22.678, 4.72645, 29.1415, 0.46 ) }
    dend_10 { pt3dadd( 22.7892, 5.60888, 29.0821, 0.46 ) }
    dend_10 { pt3dadd( 22.9449, 7.04558, 28.8457, 0.46 ) }
    dend_10 { pt3dadd( 23.1614, 8.86514, 28.4195, 1.14 ) }
    dend_10 { pt3dadd( 23.2721, 9.80408, 28.1635, 0.68 ) }
    dend_10 { pt3dadd( 23.6132, 11.775, 27.4579, 0.68 ) }
    dend_10 { pt3dadd( 23.9793, 13.5928, 26.6945, 1.14 ) }
    dend_10 { pt3dadd( 24.2919, 15.2362, 25.9597, 0.68 ) }
    dend_10 { pt3dadd( 24.5775, 17.011, 25.1177, 0.68 ) }
    dend_10 { pt3dadd( 24.7229, 18.1872, 24.6011, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( 24.9219, 19.9167, 23.833, 0.68 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 1/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 23.0567, 0.612505, 26.8789, 1.82 ) }
    dend_9 { pt3dadd( 23.274, -1.29235, 26.3163, 1.82 ) }
    dend_9 { pt3dadd( 23.7454, -3.47093, 25.6794, 0.91 ) }
    dend_9 { pt3dadd( 24.1175, -5.15745, 25.1875, 0.91 ) }
    dend_9 { pt3dadd( 24.359, -6.54464, 24.7905, 0.91 ) }
    dend_9 { pt3dadd( 24.4802, -7.24073, 24.5913, 0.91 ) }
    dend_9 { pt3dadd( 24.6025, -7.94323, 24.3903, 0.68 ) }
    dend_9 { pt3dadd( 24.8682, -9.14688, 23.8626, 0.68 ) }
    dend_9 { pt3dadd( 25.2642, -10.1936, 23.3503, 0.23 ) }
    dend_9 { pt3dadd( 25.5551, -10.9946, 23.1031, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 11/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 26.8603, -19.8345, 47.4635, 0.46 ) }
    dend_30 { pt3dadd( 26.8092, -20.9033, 48.9711, 0.46 ) }
    dend_30 { pt3dadd( 26.9016, -21.7195, 50.1725, 0.46 ) }
    dend_30 { pt3dadd( 26.9672, -22.1903, 50.9142, 0.68 ) }
    dend_30 { pt3dadd( 26.9975, -22.8412, 51.9403, 0.68 ) }
    dend_30 { pt3dadd( 26.991, -24.0181, 53.7158, 0.68 ) }
    dend_30 { pt3dadd( 27.0185, -25.0087, 55.0866, 0.68 ) }
    dend_30 { pt3dadd( 27.1176, -26.6101, 57.0962, 0.91 ) }
    dend_30 { pt3dadd( 27.3189, -28.3488, 59.1817, 0.91 ) }
    dend_30 { pt3dadd( 27.5048, -29.5622, 60.5445, 0.91 ) }
    dend_30 { pt3dadd( 27.6022, -30.1607, 61.1551, 0.68 ) }
    dend_30 { pt3dadd( 27.8308, -31.7452, 62.6006, 0.68 ) }
    dend_30 { pt3dadd( 28.1296, -33.2776, 63.8459, 0.68 ) }
    dend_30 { pt3dadd( 28.6008, -35.176, 65.298, 0.68 ) }
    dend_30 { pt3dadd( 28.8945, -36.1275, 66.0334, 0.91 ) }
    dend_30 { pt3dadd( 29.2598, -37.2244, 66.9122, 0.91 ) }
    dend_30 { pt3dadd( 29.6645, -38.4651, 67.9232, 0.68 ) }
    dend_30 { pt3dadd( 30.2569, -40.2954, 69.4294, 0.68 ) }
    dend_30 { pt3dadd( 30.8107, -41.8909, 70.6423, 0.68 ) }
    dend_30 { pt3dadd( 31.1561, -42.8037, 71.3462, 0.68 ) }
    dend_30 { pt3dadd( 31.4443, -43.6542, 72.0575, 0.68 ) }
    dend_30 { pt3dadd( 31.7514, -44.7151, 72.9688, 0.91 ) }
    dend_30 { pt3dadd( 32.1001, -46.2848, 74.2038, 0.68 ) }
    dend_30 { pt3dadd( 32.2756, -47.3144, 74.8842, 0.91 ) }
    dend_30 { pt3dadd( 32.5875, -48.7123, 75.7082, 0.91 ) }
    dend_30 { pt3dadd( 33.0689, -50.2226, 76.5984, 0.68 ) }
    dend_30 { pt3dadd( 33.3685, -51.0579, 77.1046, 0.68 ) }
    dend_30 { pt3dadd( 33.7674, -52.1675, 77.723, 0.91 ) }
    dend_30 { pt3dadd( 34.2335, -53.3946, 78.2949, 0.23 ) }
    dend_30 { pt3dadd( 34.6582, -54.3501, 78.7379, 0.68 ) }
    dend_30 { pt3dadd( 35.316, -55.8956, 79.412, 0.46 ) }
    dend_30 { pt3dadd( 36.0059, -57.5974, 80.2338, 0.46 ) }
    dend_30 { pt3dadd( 36.492, -58.9575, 80.9073, 0.68 ) }
    dend_30 { pt3dadd( 36.7417, -59.8097, 81.3105, 0.68 ) }
    dend_30 { pt3dadd( 37.3047, -62.4529, 82.4258, 0.46 ) }
    dend_30 { pt3dadd( 37.8386, -66.2513, 83.9349, 0.46 ) }
    dend_30 { pt3dadd( 37.9696, -67.6766, 84.4521, 0.46 ) }
    dend_30 { pt3dadd( 38.0358, -68.5876, 84.8314, 0.91 ) }
    dend_30 { pt3dadd( 38.1239, -70.1293, 85.6646, 1.14 ) }
    dend_30 { pt3dadd( 38.1933, -71.8066, 86.7863, 0.46 ) }
    dend_30 { pt3dadd( 38.2078, -73.815, 88.4401, 0.23 ) }
    dend_30 { pt3dadd( 38.1998, -74.4434, 89.0755, 0.91 ) }
    dend_30 { pt3dadd( 38.2153, -76.8066, 91.5878, 0.46 ) }
    dend_30 { pt3dadd( 38.242, -78.582, 93.6606, 0.68 ) }
    dend_30 { pt3dadd( 38.2685, -79.7238, 95.1524, 0.23 ) }
    dend_30 { pt3dadd( 38.3067, -80.8789, 96.7981, 0.68 ) }
    dend_30 { pt3dadd( 38.3583, -82.4555, 99.0665, 0.23 ) }
    dend_30 { pt3dadd( 38.3774, -83.8071, 100.97, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 59/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 26.8603, -19.8345, 47.4635, 0.23 ) }
    dend_29 { pt3dadd( 26.7491, -20.7671, 47.3212, 0.23 ) }
    dend_29 { pt3dadd( 26.5713, -21.9592, 47.0685, 0.23 ) }
    dend_29 { pt3dadd( 26.4047, -22.8917, 46.8256, 0.68 ) }
    dend_29 { pt3dadd( 26.0995, -24.6003, 46.3804, 0.91 ) }
    dend_29 { pt3dadd( 25.6992, -26.8411, 45.7967, 0.46 ) }
    dend_29 { pt3dadd( 25.5223, -27.8314, 45.5387, 0.46 ) }
    dend_29 { pt3dadd( 25.2256, -29.6473, 45.0336, 0.46 ) }
    dend_29 { pt3dadd( 25.0273, -30.8927, 44.63, 0.91 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 68/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -6.06307, 14.7567, 6.48494, 0.46 ) }
    dend_24 { pt3dadd( -6.5055, 15.4442, 5.82812, 0.46 ) }
    dend_24 { pt3dadd( -7.30513, 16.6692, 4.56864, 0.46 ) }
    dend_24 { pt3dadd( -8.09121, 17.9199, 3.2166, 0.46 ) }
    dend_24 { pt3dadd( -8.8712, 19.2196, 1.87382, 0.46 ) }
    dend_24 { pt3dadd( -9.52146, 20.3031, 0.754372, 0.68 ) }
    dend_24 { pt3dadd( -10.606, 22.1103, -1.11273, 0.46 ) }
    dend_24 { pt3dadd( -11.3792, 23.3144, -2.48818, 0.68 ) }
    dend_24 { pt3dadd( -12.1891, 24.5367, -4.03024, 0.68 ) }
    dend_24 { pt3dadd( -13.3375, 26.1619, -6.04191, 0.46 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 78/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -6.06307, 14.7567, 6.48494, 0.46 ) }
    dend_23 { pt3dadd( -7.38164, 15.0685, 6.69341, 0.46 ) }
    dend_23 { pt3dadd( -8.89084, 15.4772, 7.05266, 0.46 ) }
    dend_23 { pt3dadd( -9.78259, 15.7018, 7.30597, 0.46 ) }
    dend_23 { pt3dadd( -11.8195, 16.2169, 7.75534, 0.46 ) }
    dend_23 { pt3dadd( -13.8228, 16.7563, 8.01199, 0.46 ) }
    dend_23 { pt3dadd( -16.5883, 17.5659, 8.08533, 0.46 ) }
    dend_23 { pt3dadd( -18.4251, 18.1503, 7.88764, 0.46 ) }
    dend_23 { pt3dadd( -20.2008, 18.8767, 7.2126, 0.46 ) }
    dend_23 { pt3dadd( -21.9868, 19.7908, 5.792, 0.46 ) }
    dend_23 { pt3dadd( -23.2496, 20.5369, 4.1122, 0.46 ) }
    dend_23 { pt3dadd( -24.1892, 21.0788, 2.41483, 0.46 ) }
    dend_23 { pt3dadd( -25.0833, 21.6023, 0.538903, 0.68 ) }
    dend_23 { pt3dadd( -26.3893, 22.4161, -2.54007, 0.46 ) }
    dend_23 { pt3dadd( -27.5363, 23.1914, -5.58588, 0.46 ) }
    dend_23 { pt3dadd( -29.1014, 24.2179, -9.94407, 0.46 ) }
    dend_23 { pt3dadd( -30.0005, 24.7457, -12.5072, 0.46 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 95/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 43.5853, 9.71796, 5.74924, 0.46 ) }
    dend_17 { pt3dadd( 45.0324, 9.71245, 4.87091, 0.46 ) }
    dend_17 { pt3dadd( 46.5924, 9.70651, 3.92409, 0.46 ) }
    dend_17 { pt3dadd( 47.6171, 9.70261, 3.30212, 0.46 ) }
    dend_17 { pt3dadd( 49.7735, 9.69439, 1.99332, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_17 { pt3dadd( 51.538, 9.68767, 0.922355, 0.46 ) }
    dend_17 { pt3dadd( 52.4724, 9.68411, 0.355214, 0.46 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 2/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 43.5853, 9.71796, 5.74924, 0.46 ) }
    dend_16 { pt3dadd( 44.0622, 10.5504, 4.08676, 0.46 ) }
    dend_16 { pt3dadd( 44.6309, 11.543, 2.10446, 0.46 ) }
    dend_16 { pt3dadd( 44.9938, 12.1766, 0.839185, 0.46 ) }
    dend_16 { pt3dadd( 45.5874, 13.2127, -1.2299, 0.46 ) }
    dend_16 { pt3dadd( 46.3588, 14.5592, -3.91891, 0.46 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 8/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 35.6551, -6.44424, 18.6716, 0.68 ) }
    dend_14 { pt3dadd( 36.1995, -6.22918, 17.4256, 0.68 ) }
    dend_14 { pt3dadd( 36.7556, -6.13014, 15.8832, 0.68 ) }
    dend_14 { pt3dadd( 37.0914, -6.13332, 14.6879, 0.68 ) }
    dend_14 { pt3dadd( 37.4642, -6.16764, 12.7793, 0.68 ) }
    dend_14 { pt3dadd( 37.5724, -6.17759, 11.8971, 0.68 ) }
    dend_14 { pt3dadd( 37.7754, -6.24691, 9.13302, 0.68 ) }
    dend_14 { pt3dadd( 37.8541, -6.38117, 7.17389, 0.68 ) }
    dend_14 { pt3dadd( 37.8504, -6.54434, 5.54026, 0.68 ) }
    dend_14 { pt3dadd( 37.7001, -6.80263, 3.20511, 0.68 ) }
    dend_14 { pt3dadd( 37.4052, -7.02087, 1.0689, 0.68 ) }
    dend_14 { pt3dadd( 37.2123, -7.10348, 0.108817, 0.68 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 20/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 35.6551, -6.44424, 18.6716, 0.46 ) }
    dend_13 { pt3dadd( 36.8667, -8.39803, 20.2815, 0.46 ) }
    dend_13 { pt3dadd( 38.0981, -10.2603, 21.5168, 0.46 ) }
    dend_13 { pt3dadd( 38.7175, -11.2174, 22.0787, 0.46 ) }
    dend_13 { pt3dadd( 38.9964, -11.6567, 22.2936, 0.46 ) }
    dend_13 { pt3dadd( 40.3514, -13.7468, 23.361, 0.46 ) }
    dend_13 { pt3dadd( 40.6643, -14.2383, 23.6016, 0.46 ) }
    dend_13 { pt3dadd( 41.6394, -15.8823, 24.2309, 0.46 ) }
    dend_13 { pt3dadd( 42.3122, -17.1236, 24.6492, 0.46 ) }
    dend_13 { pt3dadd( 43.3599, -19.1014, 25.3813, 0.68 ) }
    dend_13 { pt3dadd( 44.3596, -21.153, 26.2158, 0.23 ) }
    dend_13 { pt3dadd( 44.8213, -22.2555, 26.6765, 0.46 ) }
    dend_13 { pt3dadd( 45.0919, -23.0523, 27.0091, 0.46 ) }
    dend_13 { pt3dadd( 45.4363, -24.3606, 27.5802, 0.46 ) }
    dend_13 { pt3dadd( 45.8465, -26.2235, 28.3658, 0.46 ) }
    dend_13 { pt3dadd( 46.0255, -27.2806, 28.7864, 0.91 ) }
    dend_13 { pt3dadd( 46.2488, -29.2209, 29.4739, 0.91 ) }
    dend_13 { pt3dadd( 46.4227, -31.6053, 30.297, 0.46 ) }
    dend_13 { pt3dadd( 46.4567, -33.3535, 30.8702, 0.46 ) }
    dend_13 { pt3dadd( 46.3981, -34.4804, 31.2157, 0.68 ) }
    dend_13 { pt3dadd( 46.1792, -35.9153, 31.6227, 0.46 ) }
    dend_13 { pt3dadd( 45.7346, -38.2325, 32.2948, 0.68 ) }
    dend_13 { pt3dadd( 45.2857, -39.8464, 32.7636, 0.46 ) }
    dend_13 { pt3dadd( 44.9092, -40.8863, 33.0162, 0.46 ) }
    dend_13 { pt3dadd( 44.5345, -41.6787, 33.1709, 0.68 ) }
    dend_13 { pt3dadd( 43.6347, -43.1855, 33.5146, 0.46 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 46/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 52.4724, 9.68411, 0.355214, 0.46 ) }
    dend_19 { pt3dadd( 53.0715, 11.8829, 1.30339, 0.46 ) }
    dend_19 { pt3dadd( 53.7498, 14.372, 2.37679, 0.46 ) }
    dend_19 { pt3dadd( 54.1487, 15.8362, 3.00819, 0.23 ) }
    dend_19 { pt3dadd( 54.757, 18.0687, 3.97088, 0.23 ) }
    dend_19 { pt3dadd( 55.2769, 19.9767, 4.79366, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 52/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 52.4724, 9.68411, 0.355214, 0.46 ) }
    dend_18 { pt3dadd( 53.191, 11.0782, -0.973357, 0.46 ) }
    dend_18 { pt3dadd( 53.7916, 12.018, -1.90244, 0.46 ) }
    dend_18 { pt3dadd( 54.7971, 13.0291, -3.10539, 0.46 ) }
    dend_18 { pt3dadd( 55.7356, 13.9728, -4.22819, 0.46 ) }
    dend_18 { pt3dadd( 57.0009, 15.2451, -5.74189, 0.46 ) }
    dend_18 { pt3dadd( 58.9876, 17.2427, -8.11859, 0.46 ) }
    dend_18 { pt3dadd( 60.1472, 18.3357, -9.76014, 0.46 ) }
    dend_18 { pt3dadd( 61.5278, 19.0412, -11.5594, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_0, dend_33, dend_32, dend_4, dend_1, dend_35, dend_34, dend_6, dend_5, dend_3, dend_2, dend_20, dend_7, dend_26, dend_21, dend_11, dend_8, dend_28, dend_27, dend_25, dend_22, dend_15, dend_12, dend_10, dend_9, dend_30, dend_29, dend_24, dend_23, dend_17, dend_16, dend_14, dend_13, dend_19, dend_18]}
    ModelViewParmSubset_2 = new SectionList()
    dend_31 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_0, dend_33, dend_32, dend_4, dend_1, dend_35, dend_34, dend_6, dend_5, dend_3, dend_2, dend_20, dend_7, dend_26, dend_21, dend_11, dend_8, dend_28, dend_27, dend_25, dend_22, dend_15, dend_12, dend_10, dend_9, dend_30, dend_29, dend_24, dend_23, dend_17, dend_16, dend_14, dend_13, dend_19, dend_18]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_27 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_30 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_4 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_31 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_6 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_33 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_20 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_5 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_8 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_34 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_9 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_26 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_21 OneSecGrp_SectionRef_19.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_15 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_25 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_19 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_22 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_20, dend_7, dend_7, dend_7, dend_7, dend_7, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_8, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 3
    dend_30 nseg = 5
    dend_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_NGCSA_96296dfc3f_0_0


