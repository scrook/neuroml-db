// Cell: bAC217_L6_BTC_459ef88946_0_0
/*
{
  "id" : "bAC217_L6_BTC_459ef88946_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.16881, -12.804, 0.0, 3.44428", "1.99522, -11.5105, 0.0, 5.75363", "1.82164, -10.2169, 0.0, 7.75663", "1.64805, -8.92341, 0.0, 8.89598", "1.47447, -7.62987, 0.0, 9.91596", "1.30088, -6.33633, 0.0, 10.9547", "1.1273, -5.04279, 0.0, 11.8384", "0.953711, -3.74926, 0.0, 12.6846", "0.780126, -2.45572, 0.0, 13.1367", "0.606541, -1.16218, 0.0, 13.4162", "0.432956, 0.13136, 0.0, 13.3909", "0.25937, 1.4249, 0.0, 13.2383", "0.085785, 2.71844, 0.0, 12.8868", "-0.0878002, 4.01197, 0.0, 12.8103", "-0.261385, 5.30551, 0.0, 12.9125", "-0.434971, 6.59905, 0.0, 12.4763", "-0.608556, 7.89259, 0.0, 11.6777", "-0.782141, 9.18613, 0.0, 10.5994", "-0.955726, 10.4797, 0.0, 9.19908", "-1.12931, 11.7732, 0.0, 7.03753", "-1.3029, 13.0667, 0.0, 4.1381" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.21969, -12.2915, -4.59, 1.84", "3.21969, -12.2915, -4.59, 1.84", "3.40326, -12.8847, -4.62417, 1.84", "3.79483, -14.15, -4.69704, 2.14", "4.04548, -14.9599, -4.7437, 1.92", "4.36419, -15.9898, -4.80301, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.219697, -12.74, -1.64, 2.43", "0.219697, -12.74, -1.64, 2.43", "-0.247998, -13.8261, -1.78037, 1.92", "-0.637182, -14.7298, -1.89718, 2.14", "-0.878123, -15.2894, -1.9695, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.5397, 12.22, 0.0, 3.02", "1.5397, 12.22, 0.0, 3.02", "1.7539, 13.0028, -0.0486126, 2.36", "2.03981, 13.9712, -0.101917, 2.36", "2.5148, 15.5267, -0.178314, 2.29", "2.88039, 16.6798, -0.242034, 2.21", "3.2552, 17.8204, -0.308037, 2.29", "3.5842, 18.8029, -0.366943, 2.43", "3.96128, 19.8897, -0.436505, 2.36", "4.27805, 20.7394, -0.485208, 2.51", "4.61798, 21.5684, -0.5332, 3.17", "4.83873, 22.0785, -0.554997, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.3029, 13.0667, 0.0, 0.475434", "-3.29794, 27.9334, 0.0, 0.475434", "-5.29297, 42.8002, 0.0, 0.475434" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.36419, -15.9898, -4.80301, 0.88", "3.77158, -15.9227, -5.32246, 0.88", "3.19277, -15.9175, -5.82019, 0.81", "2.61588, -15.9677, -6.32841, 0.81", "1.94947, -16.0813, -6.93305, 0.96", "1.31884, -16.2403, -7.52924, 1.4", "0.715869, -16.454, -8.14524, 1.77", "0.186374, -16.6839, -8.71735, 0.44", "-0.270429, -16.9524, -9.23353, 0.44", "-0.52748, -17.1617, -9.52184, 0.44", "-0.729587, -17.4188, -9.78081, 0.66", "-0.956366, -17.9263, -10.2059, 1.03", "-5.41258, -18.4506, -15.8708, 1.03", "-8.96777, -18.6582, -22.16, 1.03", "-11.083, -17.9427, -29.0324, 1.03" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.36419, -15.9898, -4.80301, 1.11", "5.00233, -17.1581, -4.52051, 1.11", "5.53495, -18.2504, -4.22299, 1.25", "5.72805, -18.6946, -4.08823, 1.7", "6.0542, -19.5072, -3.83834, 1.77", "6.60942, -20.8984, -3.4124, 1.33", "7.0411, -21.981, -3.09265, 1.03", "7.34619, -22.8296, -2.82035, 1.03", "7.65247, -23.7052, -2.56669, 1.03", "7.9247, -24.4747, -2.38694, 1.33", "8.34497, -25.6475, -2.20059, 1.33", "8.76546, -26.7815, -2.13049, 0.74", "9.21659, -27.9674, -2.16989, 0.74", "9.70837, -29.1796, -2.25435, 0.88", "10.0863, -30.087, -2.33361, 1.33", "10.3731, -30.7802, -2.3617, 2.06", "10.9532, -32.229, -2.3574, 0.96", "11.4254, -33.3982, -2.27759, 0.74", "11.7746, -34.2524, -2.17027, 1.18", "11.9998, -34.8273, -2.04872, 1.55", "12.573, -36.305, -1.69366, 0.88", "12.9235, -37.1903, -1.50944, 0.81", "13.4271, -38.4108, -1.34109, 0.88", "13.7207, -39.1045, -1.30925, 1.4", "13.9857, -39.7321, -1.35022, 1.4", "14.395, -40.7108, -1.50617, 0.81", "14.8006, -41.6705, -1.7464, 0.88", "15.1353, -42.4341, -1.96795, 0.52", "15.3382, -42.8711, -2.10386, 0.96", "15.7001, -43.5994, -2.29337, 1.92", "16.1768, -44.5275, -2.4665, 0.74", "16.6403, -45.4033, -2.57894, 0.74", "17.1067, -46.2437, -2.6338, 0.96", "17.5791, -47.0168, -2.65995, 1.55", "18.4496, -48.2912, -2.69336, 0.81", "19.2088, -49.2987, -2.70754, 0.81", "19.9464, -50.2109, -2.7136, 1.25", "20.6783, -51.0901, -2.71338, 1.4", "21.7375, -52.3994, -2.67352, 0.81", "22.616, -53.5694, -2.6047, 0.81", "23.1057, -54.2444, -2.55201, 1.18", "23.6649, -54.9866, -2.46471, 1.55", "24.2491, -55.7794, -2.34145, 1.55", "24.934, -56.8015, -2.16975, 0.59", "25.5448, -57.8794, -1.93874, 0.81", "25.9044, -58.6317, -1.73996, 1.33", "26.417, -59.8054, -1.41015, 0.37", "26.6693, -60.4831, -1.20073, 0.22", "30.8075, -67.7052, -0.534734, 0.22", "36.4567, -73.9095, -0.450283, 0.22", "41.9075, -80.065, 1.26454, 0.22", "46.2911, -86.6159, 4.12947, 0.22", "51.0978, -92.4073, 7.8958, 0.22", "55.5731, -99.0563, 10.349, 0.22", "60.2926, -105.891, 11.3804, 0.22", "65.2971, -112.601, 11.3991, 0.22", "70.0354, -119.372, 12.7462, 0.22", "74.4221, -126.442, 13.5432, 0.22", "78.642, -133.641, 13.351, 0.22", "82.943, -140.618, 11.7565, 0.22", "88.4451, -146.763, 10.2409, 0.22", "93.1538, -152.944, 7.1168, 0.22", "97.7534, -159.742, 5.54007, 0.22", "101.051, -167.325, 4.5925, 0.22", "104.668, -174.809, 5.22957, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-0.878123, -15.2894, -1.9695, 0.96", "-2.26993, -16.2127, -1.53794, 0.96", "-3.03329, -16.744, -1.31255, 0.96", "-3.81643, -17.3172, -1.09278, 1.25", "-4.23059, -17.6401, -0.982534, 1.25", "-4.99756, -18.2604, -0.796477, 0.96", "-5.73048, -18.8597, -0.637308, 0.96", "-6.38203, -19.405, -0.511937, 1.47", "-7.20914, -20.0384, -0.359879, 1.62", "-8.23322, -20.7178, -0.160053, 0.96", "-9.07654, -21.2035, 0.00395045, 0.96", "-10.2714, -21.7866, 0.246139, 1.11", "-11.1304, -22.1252, 0.430796, 1.4", "-12.637, -22.5944, 0.765938, 1.33", "-13.8887, -22.9074, 1.03304, 0.96", "-15.177, -23.1985, 1.29471, 1.18", "-15.8258, -23.3418, 1.42249, 1.18", "-17.4862, -23.7374, 1.72678, 0.88", "-18.4406, -24.0273, 1.87987, 0.88", "-19.098, -24.2946, 1.95354, 1.03", "-20.3105, -24.947, 2.06146, 1.25", "-21.0802, -25.4523, 2.1289, 0.88", "-21.8157, -26.0199, 2.1942, 0.88", "-22.4679, -26.5826, 2.25665, 1.11", "-23.2068, -27.2027, 2.32513, 1.25", "-24.1915, -27.9704, 2.35883, 0.88", "-24.9716, -28.5536, 2.29118, 1.03", "-25.5582, -28.995, 2.15308, 1.4", "-26.3193, -29.5585, 1.85246, 1.18", "-27.3189, -30.2339, 1.29093, 1.25", "-28.1327, -30.7792, 0.505432, 1.4", "-27.8594, -30.8422, -0.737439, 1.4", "-27.2143, -30.6507, -1.51811, 1.47", "-25.7724, -30.1328, -2.80587, 0.52", "-24.9259, -29.8282, -3.34938, 0.52", "-23.9851, -29.4969, -3.80508, 0.59", "-22.3169, -28.9651, -4.38734, 0.59", "-21.2594, -28.6681, -4.64717, 0.66", "-20.0867, -28.4157, -4.83167, 0.74", "-18.4863, -28.1438, -5.00745, 0.59", "-17.267, -28.0033, -5.10361, 0.88", "-15.6022, -27.8902, -5.17821, 0.37", "-14.7114, -27.8931, -5.19796, 0.37", "-13.8225, -27.9688, -5.17449, 0.37", "-21.77, -34.4426, -5.63863, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-0.878123, -15.2894, -1.9695, 1.4", "-0.804795, -16.1233, -1.84067, 1.4", "-0.721383, -16.9812, -1.72206, 1.03", "-0.636266, -17.8153, -1.60719, 1.33", "-0.539866, -18.7788, -1.46923, 1.25", "-0.448152, -19.6542, -1.33172, 1.25", "-0.361595, -20.4886, -1.18675, 1.11", "-0.289838, -21.2911, -1.05507, 1.84", "-0.240073, -21.8097, -0.978013, 1.62", "-0.136892, -22.7998, -0.817562, 1.18", "-0.0343899, -23.8495, -0.633651, 1.11", "0.0626157, -24.9054, -0.441832, 1.25", "0.120428, -25.6036, -0.320429, 1.55", "0.177145, -26.3631, -0.182751, 2.06" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "4.83873, 22.0785, -0.554997, 2.88", "4.94384, 22.9827, -0.464359, 2.88", "5.07651, 24.124, -0.34995, 2.58", "5.22644, 25.4138, -0.22065, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.83873, 22.0785, -0.554997, 1.62", "6.12677, 21.5873, -1.20227, 1.62", "7.6424, 20.8411, -1.89359, 0.96", "8.64894, 20.2661, -2.31928, 0.96", "9.75766, 19.5442, -2.76675, 1.11", "10.3524, 19.1228, -2.99601, 1.25", "11.4792, 18.2423, -3.42927, 0.96", "12.819, 16.9832, -3.91111, 0.81", "13.5628, 16.242, -4.16865, 0.81", "14.2113, 15.6163, -4.39952, 0.81", "14.8184, 15.0625, -4.65783, 0.88", "15.8309, 14.2282, -5.14049, 0.74", "16.9152, 13.455, -5.69712, 0.59", "17.8755, 12.8581, -6.19318, 0.74", "18.5547, 12.4661, -6.53077, 0.66", "19.2769, 12.0548, -6.84407, 0.66", "20.3206, 11.4512, -7.23533, 0.96", "21.4078, 10.8314, -7.57385, 1.11", "22.757, 10.0006, -7.9348, 0.81", "23.8393, 9.2584, -8.19786, 0.81", "24.8815, 8.48872, -8.45504, 0.52", "25.5517, 7.94661, -8.65637, 0.52", "26.0398, 7.49855, -8.88364, 0.52", "26.6304, 6.86719, -9.33855, 0.74", "27.2721, 6.0853, -10.0727, 0.96", "27.6593, 5.5526, -10.634, 1.03", "28.1309, 4.85974, -11.4167, 0.81", "28.735, 4.02163, -12.3614, 0.52", "29.236, 3.27939, -13.1905, 0.88", "29.4881, 2.90931, -13.6124, 1.11", "30.0286, 2.17152, -14.4602, 0.81", "30.6219, 1.49639, -15.2014, 0.22", "31.4915, 0.743764, -15.9394, 0.15", "38.7376, -5.42023, -19.7558, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.29297, 42.8002, 0.0, 0.15", "-7.28801, 57.6669, 0.0, 0.15", "-9.28305, 72.5336, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-11.083, -17.9427, -29.0324, 0.15", "-15.9658, -18.1977, -35.2407, 0.15", "-21.2536, -17.9392, -41.1094, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-11.083, -17.9427, -29.0324, 0.59", "-13.5087, -18.2252, -35.8342, 0.15", "-15.9962, -17.8201, -42.6076, 0.15", "-20.045, -16.6008, -48.4618, 0.15", "-24.9652, -16.2181, -53.7407, 0.15", "-29.0073, -16.3227, -59.7312, 0.15", "-32.947, -17.7817, -65.6036, 0.15", "-37.2307, -18.6793, -71.3522, 0.15", "-41.2506, -20.1101, -77.1774, 0.15", "-45.4844, -21.6141, -82.8295, 0.15", "-50.6413, -22.0258, -87.8764, 0.15", "-55.2936, -22.2962, -93.4006, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "104.668, -174.809, 5.22957, 0.15", "113.556, -186.215, 5.14548, 0.15", "120.56, -198.789, 5.89311, 0.15", "126.119, -211.834, 8.38112, 0.15", "131.224, -224.897, 11.637, 0.15", "137.691, -237.618, 13.6475, 0.15", "145.083, -249.603, 16.8947, 0.15", "154.162, -259.406, 22.6269, 0.15", "162.97, -270.674, 24.8686, 0.15", "170.647, -282.535, 27.9259, 0.15", "179.199, -294.164, 28.683, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "104.668, -174.809, 5.22957, 0.59", "108.391, -182.77, 6.22587, 0.15", "112.161, -190.716, 5.43678, 0.15", "115.226, -198.588, 2.91566, 0.15", "116.695, -206.922, 0.53923, 0.15", "119.703, -214.875, -1.78075, 0.15", "122.391, -223.051, -3.64788, 0.15", "126.623, -230.736, -4.74442, 0.15", "131.192, -238.164, -6.24584, 0.15", "134.424, -246.371, -6.40639, 0.15", "137.032, -254.726, -7.3802, 0.15", "140.421, -262.835, -8.14851, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-21.77, -34.4426, -5.63863, 0.15", "-28.0895, -39.0042, -4.37654, 0.15", "-33.7217, -44.3932, -3.30343, 0.15", "-38.0511, -50.5079, -1.00278, 0.15", "-42.7572, -56.6973, -0.016439, 0.15", "-47.7739, -62.7298, 0.0616969, 0.15", "-51.2116, -69.7178, 0.551744, 0.15", "-54.9646, -76.5659, 0.711374, 0.15", "-58.0997, -83.5905, 1.99711, 0.15", "-61.576, -90.2347, 4.19587, 0.15", "-64.526, -96.7357, 7.38231, 0.15", "-66.8046, -103.767, 9.85987, 0.15", "-69.967, -110.798, 11.0372, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-21.77, -34.4426, -5.63863, 0.59", "-29.0325, -42.3741, -11.0748, 0.15", "-35.2773, -50.6529, -17.1861, 0.15", "-42.5599, -58.2301, -23.1045, 0.15", "-48.3104, -65.9141, -30.4005, 0.15", "-53.0767, -73.6662, -38.3026, 0.15", "-58.4159, -82.1113, -45.002, 0.15", "-62.0362, -91.0326, -52.1804, 0.15", "-65.3128, -100.585, -58.6327, 0.15", "-67.2805, -109.292, -66.6754, 0.15", "-70.2455, -118.073, -74.319, 0.15", "-73.1838, -125.904, -82.989, 0.15", "-74.8898, -134.476, -91.2397, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.177145, -26.3631, -0.182751, 0.44", "-0.712012, -27.8286, 0.685576, 0.44", "-1.12324, -28.4407, 1.1078, 0.44", "-1.67809, -29.2619, 1.82927, 0.44", "-2.11276, -29.9734, 2.54637, 0.66", "-2.4326, -30.6324, 3.17331, 0.66", "-2.5995, -31.1034, 3.5683, 0.44", "-2.75105, -31.7363, 4.1061, 0.52", "-2.81446, -32.6595, 4.75491, 0.66", "-2.72596, -33.674, 5.26692, 0.66", "-2.53416, -34.8528, 5.74317, 0.88", "-2.31489, -36.0644, 6.15008, 1.11", "-2.12456, -37.2098, 6.46522, 0.74", "-2.01393, -38.0624, 6.60512, 0.29", "-1.95207, -38.9367, 6.64557, 0.22", "-1.94455, -39.4563, 6.63002, 0.22", "-1.99023, -40.1396, 6.58825, 0.22", "-2.06327, -40.7835, 6.52913, 0.22", "-2.22356, -42.1668, 6.3906, 0.29", "-2.30835, -43.2384, 6.29263, 0.52", "-2.32485, -43.9959, 6.23198, 0.52", "-2.26251, -45.036, 6.16732, 0.44", "-2.05499, -46.577, 6.11493, 0.29", "-1.91604, -47.3293, 6.11513, 0.66", "-1.80013, -47.8566, 6.16147, 1.77", "-1.57925, -48.8114, 6.31092, 1.18", "-1.34655, -50.029, 6.57799, 0.52", "-1.17434, -51.1626, 6.8832, 0.52", "-1.08118, -51.896, 7.11148, 0.81", "-0.916422, -52.9924, 7.46617, 0.96", "-0.742035, -53.9487, 7.80188, 0.52", "-0.480508, -55.2421, 8.32145, 0.22", "-0.342573, -55.8483, 8.59854, 0.29", "-0.138446, -56.6424, 9.00888, 0.29", "0.147738, -57.7731, 9.61029, 0.22", "0.337873, -58.5132, 10.0204, 0.37", "0.523285, -59.2772, 10.4523, 0.74", "0.662813, -60.0108, 10.8632, 1.03", "0.731792, -60.8413, 11.2923, 1.25", "0.700267, -62.4676, 12.0646, 0.37", "0.625174, -63.4142, 12.4993, 1.18", "0.554147, -64.2885, 12.872, 2.65", "0.480342, -65.7156, 13.4283, 2.21", "0.467415, -67.0976, 13.9389, 0.96", "0.516464, -68.2388, 14.3393, 0.29", "0.586093, -69.0474, 14.6265, 0.29", "0.648212, -69.802, 14.8918, 0.66", "0.705561, -70.7039, 15.2498, 0.44", "0.748605, -71.5058, 15.5944, 0.22", "0.772196, -71.9081, 15.7804, 0.22", "0.787744, -72.3978, 15.9917, 0.22", "0.762892, -73.3963, 16.3742, 0.29", "0.732145, -74.151, 16.6388, 0.29", "0.727538, -74.6689, 16.8006, 0.22", "0.738294, -75.2663, 16.9558, 0.22", "0.786603, -75.7905, 17.0821, 0.81", "0.87905, -76.2855, 17.1905, 1.55", "1.16816, -77.3546, 17.4314, 1.84", "1.67409, -78.9557, 17.7896, 0.15", "1.82503, -79.459, 17.9141, 0.15", "1.94941, -79.8793, 18.0224, 0.15", "2.08456, -80.388, 18.155, 0.15", "2.26567, -81.1419, 18.3474, 0.88", "2.409, -81.7684, 18.4992, 1.92", "2.71719, -83.0119, 18.7593, 1.99", "2.80405, -83.3301, 18.8193, 1.99", "3.17948, -84.8004, 19.0518, 0.15", "3.27268, -85.2076, 19.1006, 0.15", "3.35618, -85.627, 19.1301, 0.37", "3.42136, -86.0537, 19.1447, 0.37", "3.55173, -87.0657, 19.1724, 0.15", "3.60915, -87.6943, 19.2018, 0.15", "3.67358, -88.4343, 19.2522, 0.22", "3.69922, -88.8659, 19.2982, 0.22", "3.70262, -89.6459, 19.4017, 0.15", "3.67758, -90.2426, 19.4921, 0.15", "3.64703, -90.7147, 19.572, 0.59", "3.63955, -91.2158, 19.6673, 1.03", "3.67853, -91.9903, 19.8051, 0.22", "3.76297, -92.805, 19.9549, 0.07", "3.84004, -93.3272, 20.062, 0.07", "3.90237, -93.656, 20.1402, 0.66", "4.10312, -94.5125, 20.397, 0.96", "4.5479, -96.0566, 20.9227, 0.22", "4.848, -96.8928, 21.2494, 0.22", "5.07786, -97.4326, 21.5045, 0.44", "5.35744, -98.0412, 21.822, 1.25", "5.62537, -98.5713, 22.1102, 1.92", "6.0268, -99.2368, 22.4995, 1.11", "6.46863, -99.8693, 22.9083, 0.22", "6.81985, -100.366, 23.2124, 0.22", "7.20314, -100.953, 23.5378, 0.52", "7.64618, -101.769, 23.9464, 0.22", "8.02937, -102.656, 24.3834, 0.22", "8.27893, -103.373, 24.7453, 0.22", "8.38017, -103.739, 24.9285, 0.81", "8.58257, -104.607, 25.3766, 1.77", "8.90682, -106.258, 26.2764, 0.37", "9.06667, -107.123, 26.7602, 0.15", "9.13785, -107.521, 26.9741, 0.15", "9.23447, -108.016, 27.2286, 0.37", "9.36348, -108.62, 27.539, 1.18", "9.53428, -109.332, 27.8997, 1.55", "9.815, -110.426, 28.402, 0.81", "9.99111, -111.195, 28.705, 0.15", "10.0824, -111.691, 28.8888, 0.22", "10.2094, -112.439, 29.1511, 0.15", "10.3103, -113.127, 29.379, 0.96", "10.4236, -113.889, 29.6286, 1.18", "10.6113, -115.063, 30.001, 0.22", "10.7235, -115.614, 30.1737, 0.22", "10.8963, -116.307, 30.3938, 0.37", "10.9536, -116.499, 30.4523, 0.37", "11.1874, -117.197, 30.6662, 0.22", "11.3122, -117.519, 30.7754, 0.22", "11.583, -118.07, 30.9513, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.177145, -26.3631, -0.182751, 1.84", "0.0321865, -27.483, -0.658873, 1.84", "-0.082404, -28.8264, -1.17744, 1.55", "-0.152124, -30.2761, -1.68005, 1.55", "-0.216067, -31.7913, -2.14856, 1.55", "-0.289401, -33.2956, -2.55384, 1.47", "-0.365344, -34.6133, -2.87649, 0.96", "-0.435006, -35.664, -3.08479, 1.55", "-0.599604, -37.5488, -3.35326, 1.25", "-0.798657, -39.496, -3.57115, 1.47", "-1.03738, -41.5032, -3.74745, 1.03", "-1.23779, -42.8594, -3.84951, 1.18", "-1.57665, -44.7727, -3.96257, 1.99", "-1.93135, -46.3967, -4.03965, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.22644, 25.4138, -0.22065, 2.14", "6.17756, 26.5782, -0.0147434, 2.14" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.22644, 25.4138, -0.22065, 1.47", "5.28219, 26.4103, 0.859833, 1.47", "5.25319, 27.0067, 1.5455, 1.18", "5.14486, 27.5506, 2.24381, 1.18", "4.93441, 28.1045, 3.06677, 1.47", "4.6719, 28.502, 3.77832, 1.47", "4.49059, 28.6462, 4.1338, 1.47", "3.93738, 28.7132, 4.80532, 1.47", "3.1129, 28.5339, 5.48414, 1.03", "2.58692, 28.3177, 5.80541, 1.62", "2.08926, 28.0473, 6.05281, 1.77", "1.44547, 27.6124, 6.33857, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "38.7376, -5.42023, -19.7558, 0.15", "45.1899, -10.5976, -23.2252, 0.15", "52.0507, -15.1891, -26.778, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "38.7376, -5.42023, -19.7558, 0.59", "47.0996, -12.339, -24.8867, 0.15", "54.0724, -20.6403, -29.9357, 0.15", "58.9502, -30.1338, -35.2271, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-21.2536, -17.9392, -41.1094, 0.15", "-29.3596, -14.018, -46.3324, 0.15", "-35.4177, -9.0391, -53.1386, 0.15", "-39.8407, -2.59958, -59.9111, 0.15", "-45.731, 3.19065, -66.1738, 0.15", "-52.2784, 8.06048, -72.6026, 0.15", "-58.4223, 12.5703, -79.6674, 0.15", "-63.3502, 17.9293, -87.0506, 0.15", "-68.3307, 24.114, -93.6886, 0.15", "-72.3221, 29.0956, -101.863, 0.15", "-77.8815, 33.2986, -109.575, 0.15", "-84.8437, 38.5372, -115.224, 0.15", "-91.8514, 43.2818, -121.256, 0.15", "-98.196, 49.4435, -126.652, 0.15", "-105.665, 55.0213, -131.22, 0.15", "-114.125, 60.3661, -134.022, 0.15", "-122.091, 66.9191, -135.068, 0.15", "-130.003, 73.246, -137.285, 0.15", "-138.664, 78.9669, -137.715, 0.15", "-147.191, 84.8805, -138.143, 0.15", "-155.078, 91.1493, -140.604, 0.15", "-162.368, 98.0985, -142.993, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-21.2536, -17.9392, -41.1094, 0.59", "-24.4688, -21.2706, -49.6859, 0.15", "-28.6094, -23.6224, -58.2058, 0.15", "-32.0074, -26.8872, -66.7382, 0.15", "-35.0379, -30.1481, -75.4103, 0.15", "-37.4457, -32.7073, -84.5158, 0.15", "-40.4071, -36.0473, -93.1802, 0.15", "-42.3067, -39.3421, -102.157, 0.15", "-44.9855, -42.2632, -111.07, 0.15", "-46.2173, -47.2975, -119.284, 0.15", "-46.3049, -52.7873, -127.284, 0.15", "-46.2949, -58.4566, -135.152, 0.15", "-47.5577, -64.2169, -142.843, 0.15", "-47.4248, -70.9406, -149.783, 0.15", "-48.6901, -78.5308, -155.565, 0.15", "-51.4218, -85.6629, -161.444, 0.15", "-53.9656, -92.3838, -167.891, 0.15", "-55.1108, -98.3262, -175.454, 0.15", "-56.2682, -104.269, -183.015, 0.15", "-56.0574, -111.949, -188.817, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-55.2936, -22.2962, -93.4006, 0.15", "-59.6478, -23.08, -98.7501, 0.15", "-64.5304, -23.9544, -103.607, 0.15", "-70.0235, -24.6365, -107.798, 0.15", "-74.7903, -24.2248, -112.825, 0.15", "-79.8572, -23.0865, -117.416, 0.15", "-85.4641, -23.4862, -121.488, 0.15", "-91.1616, -24.4255, -125.343, 0.15", "-96.17, -26.1018, -129.844, 0.15", "-100.842, -29.0159, -134.045, 0.15", "-105.363, -32.086, -138.295, 0.15", "-109.325, -36.5149, -141.791, 0.15", "-112.9, -40.7562, -145.882, 0.15", "-116.26, -45.0207, -150.123, 0.15", "-119.437, -50.114, -153.462, 0.15", "-122.169, -55.9397, -155.803, 0.15", "-125.18, -61.4035, -158.653, 0.15", "-127.017, -67.5434, -160.996, 0.15", "-128.102, -73.3379, -164.423, 0.15", "-128.046, -79.6699, -166.868, 0.15", "-129.372, -85.9022, -169.279, 0.15", "-131.196, -92.31, -170.739, 0.15", "-132.466, -98.5774, -173.084, 0.15", "-134.788, -104.45, -175.708, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-55.2936, -22.2962, -93.4006, 0.59", "-60.2646, -21.7477, -102.528, 0.15", "-64.7163, -21.3084, -111.925, 0.15", "-69.739, -22.0604, -121.006, 0.15", "-73.5697, -23.7844, -130.512, 0.15", "-77.1304, -24.2519, -140.274, 0.15", "-78.6232, -25.0128, -150.526, 0.15", "-81.8236, -24.4958, -160.414, 0.15", "-85.6961, -23.9353, -170.058, 0.15", "-89.5578, -23.937, -179.72, 0.15", "-91.4753, -24.4825, -189.92, 0.15", "-93.0754, -27.1412, -199.806, 0.15", "-94.5378, -28.3921, -210.008, 0.15", "-95.4285, -28.8143, -220.35, 0.15", "-96.4092, -29.1345, -230.689, 0.15", "-96.7567, -28.408, -241.056, 0.15", "-98.8, -27.3969, -251.209, 0.15", "-102.123, -26.2637, -261.006, 0.15", "-103.356, -25.814, -271.322, 0.15", "-105.33, -26.8432, -281.469, 0.15", "-108.439, -28.7566, -291.192, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-69.967, -110.798, 11.0372, 0.15", "-75.9047, -120.601, 13.0987, 0.15", "-80.3515, -131.039, 15.6016, 0.15", "-84.1452, -141.881, 17.1953, 0.15", "-87.6807, -152.324, 20.8765, 0.15", "-90.73, -162.83, 24.7954, 0.15", "-91.9651, -174.0, 27.6153, 0.15", "-93.9925, -185.376, 28.1473, 0.15", "-97.3892, -196.381, 26.9594, 0.15", "-102.11, -206.648, 24.3053, 0.15", "-106.86, -215.952, 19.1652, 0.15", "-112.59, -224.209, 13.2092, 0.15", "-118.647, -232.286, 7.31713, 0.15", "-126.006, -239.404, 1.60364, 0.15", "-133.403, -244.496, -6.01859, 0.15", "-140.741, -249.479, -13.7731, 0.15", "-146.042, -255.391, -22.4409, 0.15", "-149.909, -262.257, -31.124, 0.15", "-153.77, -268.953, -39.9473, 0.15", "-159.328, -275.409, -48.0259, 0.15", "-165.633, -280.96, -56.2646, 0.15", "-173.526, -286.059, -63.3685, 0.15", "-181.721, -290.965, -70.2712, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-69.967, -110.798, 11.0372, 0.59", "-74.9708, -118.804, 12.8341, 0.15", "-79.926, -126.96, 13.9328, 0.15", "-85.8168, -134.013, 16.872, 0.15", "-91.3982, -141.253, 19.9306, 0.15", "-97.5567, -147.862, 23.364, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-74.8898, -134.476, -91.2397, 0.15", "-77.2432, -141.637, -96.3852, 0.15", "-80.7481, -149.015, -100.419, 0.15", "-83.6543, -155.994, -105.542, 0.15", "-87.3467, -163.638, -108.808, 0.15", "-91.4042, -171.578, -110.498, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-74.8898, -134.476, -91.2397, 0.59", "-80.9104, -141.41, -97.567, 0.15", "-86.7467, -148.469, -103.92, 0.15", "-90.8277, -157.42, -109.009, 0.15", "-93.2608, -167.406, -113.003, 0.15", "-93.3693, -177.6, -117.129, 0.15", "-92.3658, -187.781, -121.146, 0.15", "-90.1773, -197.522, -125.76, 0.15", "-88.5009, -208.072, -128.29, 0.15", "-85.8657, -217.852, -132.568, 0.15", "-85.2902, -227.836, -137.147, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "11.583, -118.07, 30.9513, 0.22", "11.3092, -118.597, 30.9213, 0.22", "10.943, -119.302, 30.8812, 0.22", "10.625, -119.915, 30.8463, 0.22", "10.0578, -121.008, 30.7841, 0.22", "9.80182, -121.501, 30.7561, 0.15", "9.54654, -121.992, 30.7281, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "11.583, -118.07, 30.9513, 1.18", "11.8953, -119.243, 31.5376, 1.18", "12.2334, -120.6, 32.1601, 0.29", "12.5163, -121.848, 32.7212, 0.15", "12.6613, -122.559, 33.0322, 0.15", "12.7889, -123.259, 33.3279, 0.29", "12.9297, -124.255, 33.746, 0.66", "13.0163, -125.288, 34.1721, 1.4", "13.001, -126.818, 34.7661, 0.22", "12.9235, -127.881, 35.1581, 0.22", "12.8729, -128.346, 35.3213, 0.22", "12.7507, -129.337, 35.6339, 0.22", "12.6317, -130.192, 35.8789, 0.66", "12.4537, -131.26, 36.1546, 0.15", "12.2561, -132.164, 36.3704, 0.15", "11.9779, -133.266, 36.6284, 0.52", "11.6237, -134.63, 36.9594, 0.29", "11.4842, -135.172, 37.0944, 0.15", "11.3415, -135.721, 37.2432, 0.15", "11.0657, -136.727, 37.5049, 0.15", "10.8636, -137.406, 37.672, 0.29", "10.5925, -138.335, 37.914, 1.11", "10.3436, -139.281, 38.1754, 1.77", "10.0691, -140.596, 38.5493, 1.77", "9.84631, -141.972, 38.9558, 1.33", "9.5921, -143.885, 39.5223, 0.15", "9.44397, -145.16, 39.9175, 0.22", "9.34407, -146.076, 40.2129, 0.66", "9.25305, -146.959, 40.5079, 0.81", "9.11851, -148.601, 41.077, 0.15", "9.10292, -149.567, 41.4293, 0.22", "9.16407, -150.381, 41.7411, 0.22", "9.28788, -151.426, 42.1321, 0.22", "9.37652, -152.038, 42.3535, 0.66", "9.61954, -153.238, 42.7832, 1.4", "10.0976, -154.926, 43.4296, 0.88", "10.4266, -155.979, 43.8468, 0.15", "10.7545, -156.989, 44.242, 0.15", "11.0036, -157.722, 44.5252, 0.22", "11.3845, -158.87, 44.9775, 0.29", "11.6445, -159.769, 45.3207, 0.15", "11.8776, -161.007, 45.7481, 0.15", "11.914, -161.437, 45.8876, 0.15", "11.928, -162.341, 46.1933, 0.22", "11.8608, -163.654, 46.6437, 0.22", "11.8053, -164.222, 46.838, 0.22", "11.6875, -165.417, 47.2378, 0.37", "11.601, -166.637, 47.6633, 0.22", "11.5641, -167.458, 47.9421, 0.88", "11.5556, -169.289, 48.5416, 2.06", "11.6488, -171.43, 49.1373, 0.59", "11.7925, -172.882, 49.4564, 0.22", "11.9445, -173.84, 49.5997, 0.22", "12.0991, -174.689, 49.6925, 0.22", "12.3271, -175.857, 49.7672, 0.59", "12.7046, -177.513, 49.7609, 0.07", "12.9803, -178.516, 49.6386, 0.15", "13.3336, -179.705, 49.3819, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.93135, -46.3967, -4.03965, 0.74", "-1.93279, -48.2992, -4.40672, 0.74", "-1.92686, -49.9937, -4.76189, 0.74", "-1.94702, -50.9517, -4.97709, 0.81", "-2.03167, -52.5312, -5.37306, 0.88", "-2.10593, -53.5458, -5.64021, 0.81", "-2.23092, -54.8557, -6.00771, 1.18", "-2.34519, -55.8291, -6.31739, 1.18", "-2.5551, -57.0206, -6.73561, 1.03", "-2.82282, -58.2844, -7.2205, 1.11", "-3.07836, -59.2717, -7.62646, 0.74", "-3.43137, -60.3812, -8.0995, 1.11", "-3.7655, -61.3246, -8.49874, 0.81", "-4.17233, -62.4366, -8.94879, 0.81", "-4.29956, -62.8427, -9.08966, 0.81", "-4.50627, -63.7004, -9.32587, 0.88", "-4.67853, -64.6508, -9.50724, 0.88", "-4.89058, -66.2211, -9.68637, 1.11", "-4.98292, -66.97, -9.71844, 1.33", "-5.24725, -68.7796, -9.65759, 0.74", "-5.39021, -69.8532, -9.59015, 0.74", "-5.55205, -71.4324, -9.43359, 0.88", "-5.63214, -72.3616, -9.29938, 1.25", "-5.73581, -73.3195, -9.12366, 1.03", "-5.98368, -74.5969, -8.84184, 0.74", "-6.23807, -84.7925, -9.07382, 0.74", "-7.83487, -94.8524, -8.40282, 0.74", "-9.29227, -104.882, -7.17147, 0.74", "-11.2266, -114.443, -4.08147, 0.74", "-12.2249, -124.078, -0.794621, 0.74", "-14.1792, -133.391, 2.99907, 0.74", "-17.203, -142.981, 4.88716, 0.74", "-18.1199, -152.921, 7.05066, 0.74", "-18.644, -162.783, 9.6719, 0.74", "-19.1551, -172.702, 12.062, 0.74", "-19.5228, -182.646, 14.3625, 0.74", "-20.9051, -192.271, 17.539, 0.74", "-24.5657, -201.234, 20.937, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.93135, -46.3967, -4.03965, 1.03", "-2.08097, -47.6642, -3.35598, 1.03", "-2.29449, -49.5407, -2.44747, 1.03", "-2.44021, -50.9912, -1.88578, 1.03", "-2.58755, -53.1379, -1.1868, 1.03", "-2.6307, -54.9515, -0.683756, 0.96", "-2.6025, -56.2368, -0.347403, 0.96", "-2.51257, -57.3175, -0.107104, 0.96", "-2.03576, -60.2595, 0.464497, 0.88", "-1.5824, -62.0016, 0.795894, 0.88", "-0.726083, -64.2631, 1.29767, 0.88", "0.399426, -66.4973, 1.9101, 0.81", "1.34585, -68.0061, 2.43044, 0.81", "2.11264, -69.0281, 2.88016, 0.81", "3.28245, -70.3405, 3.5949, 0.88", "4.48069, -71.6923, 4.39627, 1.03", "5.24839, -72.6931, 4.98243, 1.03", "6.14987, -74.2263, 5.77445, 0.81", "6.73509, -75.6584, 6.39215, 1.4", "6.98922, -76.5532, 6.71772, 1.92", "7.4574, -78.9405, 7.37862, 1.4", "7.91872, -81.7548, 7.92226, 0.88", "8.22695, -83.7324, 8.18292, 0.88", "8.55944, -85.7952, 8.34938, 1.03", "8.77523, -86.9446, 8.40275, 1.03", "9.18965, -88.8173, 8.43957, 0.81", "9.65025, -90.5445, 8.39802, 1.18", "9.78544, -91.0664, 8.36441, 1.18", "9.96586, -92.0873, 8.28033, 0.74", "9.97162, -93.4136, 8.17908, 0.44", "9.84392, -94.2015, 8.13096, 0.44", "9.50184, -95.3575, 8.0817, 0.66", "8.95387, -96.8913, 8.01756, 0.81", "8.44885, -98.2793, 7.95659, 0.96", "7.67433, -100.451, 7.85873, 1.33", "7.1849, -101.887, 7.7936, 0.88", "6.7412, -103.297, 7.75326, 1.11", "6.26129, -104.949, 7.76197, 1.18", "5.82401, -106.519, 7.81511, 1.18", "5.21257, -108.71, 7.93545, 0.52", "4.59335, -110.984, 8.13702, 0.52", "4.13398, -112.679, 8.31616, 0.74", "3.71466, -114.258, 8.50398, 0.96", "3.34481, -115.735, 8.66968, 1.62", "3.00566, -117.211, 8.80864, 1.62", "2.63542, -119.056, 8.93339, 1.33", "2.39319, -120.572, 8.98237, 0.44", "2.24299, -121.473, 8.96125, 0.59", "1.87758, -123.157, 8.86676, 0.59", "1.36494, -124.963, 8.74457, 0.88", "0.864186, -126.352, 8.63669, 1.25", "0.495181, -127.196, 8.57508, 2.21", "-0.464931, -129.162, 8.48461, 1.84", "-1.6205, -131.381, 8.4455, 1.33", "-2.71451, -133.41, 8.50354, 0.66", "-3.25913, -134.476, 8.5644, 0.44", "-3.80358, -135.625, 8.64862, 0.44", "-4.32821, -136.854, 8.75163, 0.81", "-4.85745, -138.422, 8.88635, 1.11", "-5.2971, -140.173, 9.01116, 0.74", "-5.68574, -142.07, 9.12564, 0.37", "-5.96233, -143.532, 9.18069, 0.37", "-6.14769, -144.456, 9.20374, 0.74", "-6.46652, -145.854, 9.23399, 0.88", "-6.99945, -147.898, 9.30333, 0.44", "-7.30971, -148.843, 9.36821, 0.44", "-7.70028, -149.747, 9.50603, 0.59", "-8.25678, -150.741, 9.73559, 0.96", "-8.79799, -151.545, 9.9847, 1.25", "-9.4265, -152.381, 10.3208, 1.25", "-10.1776, -153.381, 10.7939, 0.81", "-10.6607, -154.18, 11.1787, 1.11", "-11.1767, -155.571, 11.7302, 0.22", "-11.2907, -156.215, 11.898, 0.22", "-11.3844, -157.238, 12.0971, 0.22", "-11.4537, -158.163, 12.2239, 0.74", "-11.5345, -159.093, 12.3227, 1.18", "-11.7882, -161.213, 12.531, 0.66", "-12.1041, -163.042, 12.7316, 0.37", "-12.5834, -164.642, 12.9219, 0.66", "-13.1117, -165.975, 13.1307, 0.66", "-13.5685, -166.989, 13.346, 1.25", "-14.0277, -167.947, 13.623, 2.06", "-14.7023, -169.354, 14.1509, 2.21", "-15.8755, -171.986, 15.2641, 1.03", "-16.4757, -173.495, 15.9093, 0.59", "-16.9969, -175.07, 16.5177, 0.37", "-17.316, -176.241, 16.9393, 0.66", "-17.619, -177.662, 17.4241, 0.37", "-17.8452, -179.204, 17.9548, 0.29", "-17.9232, -180.209, 18.2896, 0.52", "-18.0757, -181.956, 18.8494, 0.22", "-18.1582, -182.846, 19.2266, 0.22", "-18.2354, -183.812, 19.7974, 0.29", "-18.2934, -184.694, 20.5269, 0.96", "-18.3563, -185.543, 21.3649, 1.77", "-18.4179, -186.38, 22.1911, 1.77", "-18.5263, -188.331, 23.9059, 0.29", "-18.5399, -189.191, 24.4831, 0.29", "-18.5419, -189.953, 24.84, 0.29", "-18.5286, -191.124, 25.1788, 0.29", "-18.5369, -192.67, 25.4063, 0.29", "-18.6247, -194.484, 25.4544, 0.29", "-18.7254, -195.379, 25.4056, 0.29", "-18.985, -196.703, 25.299, 0.29", "-19.4288, -198.25, 25.1912, 0.29", "-20.0133, -199.857, 25.15, 0.29", "-20.4287, -200.86, 25.1598, 1.03", "-20.9601, -202.029, 25.2047, 1.92", "-21.8745, -203.994, 25.318, 3.02", "-22.8995, -206.197, 25.4984, 2.36", "-24.0692, -208.732, 25.7653, 0.22", "-24.4818, -209.672, 25.893, 0.22", "-24.9924, -210.944, 26.1056, 0.22", "-25.1958, -211.511, 26.213, 0.52", "-25.4869, -212.44, 26.4248, 0.96", "-25.8811, -213.811, 26.7499, 0.44", "-26.3538, -215.522, 27.1388, 0.22", "-26.6455, -216.622, 27.373, 0.37", "-26.9715, -217.915, 27.6272, 0.81", "-27.2723, -219.046, 27.8307, 0.96", "-27.7166, -220.582, 28.0494, 1.25", "-28.1456, -222.051, 28.1959, 0.66", "-28.3273, -222.741, 28.2373, 0.22", "-28.6642, -224.253, 28.3, 0.22", "-28.787, -224.97, 28.3375, 0.44", "-29.0389, -226.809, 28.4703, 0.22", "-29.1624, -228.087, 28.6238, 0.22", "-29.2833, -229.624, 28.8823, 0.29", "-29.3956, -230.89, 29.1179, 0.52", "-29.515, -232.203, 29.3658, 0.52", "-29.6773, -233.592, 29.6218, 0.52", "-29.8827, -234.904, 29.8501, 1.18", "-30.133, -236.115, 30.0345, 2.43", "-30.65, -238.19, 30.3183, 1.33", "-31.1026, -239.869, 30.5091, 0.59", "-31.4787, -241.239, 30.6381, 0.81", "-31.8, -242.424, 30.7386, 0.15", "-32.0149, -243.212, 30.7974, 0.15", "-32.1097, -243.609, 30.8341, 0.15", "-32.2286, -244.106, 30.8994, 0.22", "-32.5038, -245.058, 31.0359, 0.37", "-32.8874, -246.165, 31.138, 0.37", "-33.3818, -247.346, 31.1435, 0.22", "-34.0205, -248.612, 31.0384, 0.22", "-34.4506, -249.338, 30.9092, 0.22", "-34.9174, -250.011, 30.7393, 0.74", "-35.6593, -250.979, 30.4343, 1.77", "-36.5371, -252.074, 30.0454, 2.21", "-37.1993, -252.86, 29.7881, 2.21", "-38.6737, -254.549, 29.2976, 0.37", "-39.6134, -255.673, 29.0514, 0.37", "-40.3517, -256.641, 28.9291, 0.22", "-40.9895, -257.552, 28.9205, 0.22", "-41.7498, -258.676, 29.0106, 0.22", "-42.1935, -259.333, 29.1202, 0.81", "-42.8979, -260.327, 29.4256, 1.25", "-43.7715, -261.451, 29.9061, 0.88", "-44.8092, -262.639, 30.4948, 0.22", "-45.3466, -263.243, 30.798, 0.22", "-45.9275, -263.978, 31.1142, 0.22", "-46.5116, -264.886, 31.4796, 0.22", "-47.0092, -266.092, 31.8771, 0.44", "-47.302, -267.247, 32.1666, 1.47", "-47.5424, -268.511, 32.3811, 1.47", "-47.8329, -270.103, 32.5538, 0.44", "-48.0937, -271.589, 32.647, 0.96", "-48.5124, -273.754, 32.6851, 0.22", "-48.7591, -274.9, 32.6863, 0.22", "-49.2136, -276.64, 32.6763, 0.22", "-49.6255, -277.934, 32.6303, 0.22", "-49.9767, -278.88, 32.5672, 0.22", "-50.4526, -280.006, 32.4564, 0.22", "-51.1431, -281.504, 32.3126, 0.22", "-51.5559, -282.444, 32.2417, 0.81", "-52.1523, -283.898, 32.1674, 1.77", "-52.7133, -285.314, 32.1456, 1.18", "-53.7456, -288.041, 32.1898, 0.22", "-54.0656, -288.951, 32.2516, 0.22", "-54.5917, -290.516, 32.4508, 0.88", "-55.2099, -292.463, 32.8403, 0.15", "-55.5498, -293.601, 33.1911, 0.15", "-55.8094, -294.717, 33.6354, 0.29", "-55.9744, -295.848, 34.1858, 0.74", "-56.0632, -296.713, 34.639, 1.4", "-56.1704, -298.007, 35.3897, 0.59", "-56.3001, -299.726, 36.4004, 0.15", "-56.3967, -301.038, 37.1373, 0.15", "-56.4708, -302.224, 37.7821, 0.15", "-56.4842, -303.316, 38.3299, 0.29", "-56.4437, -304.687, 39.0119, 0.96", "-56.3739, -306.195, 39.7618, 0.44", "-56.3185, -307.414, 40.3744, 0.22", "-56.2707, -308.879, 41.1716, 0.22", "-56.1948, -310.285, 41.9731, 0.15", "-56.0919, -311.485, 42.6495, 0.15", "-56.0187, -312.295, 43.0862, 0.15", "-55.9745, -313.103, 43.4725, 0.29", "-55.9864, -314.54, 44.0206, 0.44", "-56.0851, -315.954, 44.4281, 0.44", "-56.3233, -317.909, 44.8766, 0.44", "-56.5515, -319.527, 45.1293, 0.44", "-56.87, -321.516, 45.3413, 0.88", "-57.1827, -323.065, 45.4278, 1.03", "-57.5727, -324.548, 45.4454, 0.37", "-58.0136, -325.783, 45.4212, 0.15", "-58.5833, -326.975, 45.3815, 0.15", "-59.1843, -327.987, 45.3366, 0.37", "-60.0805, -329.242, 45.2744, 0.22", "-60.8263, -330.13, 45.2187, 0.81", "-62.1671, -331.495, 45.1015, 1.25", "-63.8081, -332.905, 44.9286, 0.88", "-64.9141, -333.73, 44.7887, 0.22", "-66.0125, -334.487, 44.5949, 0.22", "-67.0917, -335.223, 44.3438, 0.74", "-68.547, -336.3, 43.897, 1.47", "-69.6726, -337.247, 43.447, 0.37", "-71.2442, -338.823, 42.6047, 0.22", "-72.2237, -340.058, 41.896, 0.29", "-72.9375, -341.274, 41.1944, 0.29", "-73.3613, -342.438, 40.548, 0.29", "-73.5908, -343.729, 39.8845, 0.37", "-73.6938, -345.445, 39.1284, 0.22", "-73.6397, -347.378, 38.4306, 0.22", "-73.573, -348.321, 38.1533, 0.22", "-73.4604, -349.766, 37.867, 0.37", "-73.4076, -350.854, 37.7497, 0.59", "-73.4231, -353.452, 37.6191, 0.66", "-73.5427, -355.242, 37.617, 0.88", "-73.7001, -356.444, 37.7082, 0.88", "-74.091, -358.598, 37.9468, 0.52", "-74.5939, -360.932, 38.2677, 0.22", "-75.1165, -363.274, 38.7015, 0.22", "-75.3416, -364.232, 38.9253, 0.81", "-75.9788, -366.775, 39.5784, 1.25", "-76.3129, -368.237, 39.9689, 1.03", "-76.5013, -369.18, 40.2214, 1.03", "-76.8918, -371.499, 40.9031, 0.22", "-77.1336, -373.213, 41.4232, 0.22", "-77.3111, -374.367, 41.7339, 0.22", "-77.6516, -376.245, 42.1332, 0.22", "-77.921, -377.315, 42.3265, 0.22", "-78.5705, -379.282, 42.5776, 0.22", "-79.1634, -380.592, 42.6379, 0.74", "-79.8361, -381.843, 42.6055, 1.11", "-80.3872, -382.771, 42.4851, 1.11", "-81.548, -384.529, 42.0457, 0.74", "-82.3964, -385.794, 41.5554, 1.4", "-83.6593, -387.725, 40.5525, 0.66", "-84.4784, -389.074, 39.7513, 0.07", "-85.4353, -390.792, 38.6872, 0.07", "-86.0464, -391.961, 37.9541, 0.22", "-86.691, -393.349, 37.1224, 0.22", "-87.1238, -394.334, 36.5827, 0.44", "-87.6514, -395.63, 35.9792, 0.44", "-88.4308, -397.378, 35.4264, 0.44", "-89.0011, -398.518, 35.2648, 0.22", "-89.8655, -400.115, 35.2422, 0.15", "-90.4453, -401.004, 35.3377, 0.37", "-90.8973, -401.552, 35.4601, 0.37", "-92.1284, -402.835, 35.8864, 0.15", "-93.3267, -403.931, 36.3516, 0.15", "-93.7251, -404.254, 36.5039, 0.52", "-94.8403, -404.991, 36.861, 1.03", "-96.3541, -405.892, 37.2509, 0.15", "-97.4592, -406.503, 37.441, 0.15", "-98.5111, -407.078, 37.5062, 0.15", "-99.1801, -407.484, 37.4881, 0.59", "-100.607, -408.468, 37.37, 0.15", "-101.067, -408.82, 37.3048, 0.15", "-101.774, -409.452, 37.1732, 0.66", "-102.371, -410.057, 37.0572, 0.81", "-103.994, -411.932, 36.7377, 0.15", "-105.255, -413.562, 36.488, 0.15", "-106.328, -415.106, 36.2736, 0.29", "-107.795, -417.326, 35.9765, 0.22", "-109.051, -419.334, 35.7226, 0.15", "-109.561, -420.157, 35.6196, 0.66", "-110.379, -421.425, 35.4216, 0.81", "-111.413, -422.875, 35.126, 0.44", "-112.051, -423.733, 34.9335, 1.03", "-112.749, -424.555, 34.7101, 1.25", "-114.667, -426.599, 34.0555, 0.52", "-116.168, -428.044, 33.5176, 0.22", "-117.132, -428.853, 33.1465, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.17756, 26.5782, -0.0147434, 0.96", "7.12694, 27.3245, -0.438786, 0.96", "7.58939, 27.6857, -0.643536, 1.03", "8.19097, 28.1431, -0.816533, 1.03", "8.72407, 28.5485, -0.969836, 1.62", "9.24065, 28.9413, -1.11839, 1.33", "9.96598, 29.4928, -1.32697, 1.03", "10.5157, 29.9133, -1.46535, 0.96", "11.5714, 30.7137, -1.6795, 1.62" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.17756, 26.5782, -0.0147434, 0.88", "7.03137, 28.6159, -0.32328, 0.88", "8.07677, 30.6517, -0.699472, 0.81", "8.57247, 31.6048, -0.927099, 0.66", "9.05063, 32.596, -1.19497, 1.11", "9.6159, 33.9377, -1.56552, 0.74", "9.98007, 34.9362, -1.84869, 0.52", "10.3935, 36.3428, -2.36994, 0.22", "10.4806, 37.4663, -2.73486, 0.29", "10.2658, 38.2613, -2.96052, 0.29", "9.7631, 39.101, -3.19774, 0.66", "9.39543, 39.5269, -3.33021, 0.66", "8.37159, 40.5322, -3.61501, 0.81", "7.05607, 41.7972, -3.97257, 1.18", "6.06413, 42.8568, -4.28101, 1.03", "5.07144, 44.1078, -4.68831, 0.81", "4.21457, 45.4365, -5.1624, 1.11", "3.27542, 47.2562, -5.85606, 0.88", "2.65548, 48.7764, -6.48058, 0.66", "2.2116, 50.1782, -7.06082, 0.66", "1.88181, 51.3566, -7.4811, 0.66", "1.58486, 52.428, -7.79598, 0.66", "1.21013, 53.7063, -8.14477, 0.81", "0.885688, 54.6838, -8.42893, 1.18", "0.492101, 55.7595, -8.72093, 1.18", "-0.366956, 58.1401, -9.29093, 0.52", "-0.864988, 59.3965, -9.57022, 0.52", "-1.24272, 60.3904, -9.78447, 0.52", "-1.45942, 61.1053, -9.93129, 1.03", "-1.69535, 62.3978, -10.2249, 1.03", "-1.68587, 63.972, -10.6897, 0.66", "-3.46256, 76.5459, -15.5018, 0.66", "-5.38374, 89.5316, -18.8878, 0.66", "-10.0791, 102.025, -21.3812, 0.66", "-15.6709, 114.238, -23.4479, 0.66", "-21.7705, 125.97, -26.691, 0.66", "-29.924, 136.794, -28.3249, 0.66", "-37.9193, 147.3, -31.8562, 0.66", "-44.8747, 158.248, -36.1097, 0.66", "-52.037, 169.621, -38.3622, 0.66", "-59.9973, 180.026, -42.27, 0.66", "-65.9035, 190.773, -48.2916, 0.66", "-72.3136, 201.647, -53.4984, 0.66", "-78.989, 212.318, -58.814, 0.66", "-85.7337, 222.528, -64.9354, 0.66", "-93.8148, 231.408, -71.5964, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "1.44547, 27.6124, 6.33857, 0.96", "0.817206, 28.02, 6.6598, 0.96", "0.233679, 28.258, 6.99845, 0.66", "-0.555959, 28.2965, 7.523, 0.52", "-0.846566, 28.0885, 7.77214, 0.52", "-1.18956, 27.4217, 8.15789, 0.52", "-1.3535, 27.0553, 8.36344, 0.88", "-1.6739, 26.1873, 8.82745, 1.11", "-1.96565, 25.3943, 9.26299, 1.25", "-2.23165, 24.7896, 9.61658, 1.25", "-2.84313, 23.7011, 10.2975, 0.66", "-3.22465, 23.1558, 10.661, 0.96", "-3.66429, 22.6417, 11.0507, 1.33", "-4.25537, 22.0704, 11.5532, 1.33", "-5.16604, 21.315, 12.3236, 1.33", "-6.16074, 20.5428, 13.1968, 0.88", "-6.76562, 20.1109, 13.7185, 0.88", "-7.45502, 19.6145, 14.3064, 1.4", "-7.89745, 19.2802, 14.6938, 1.55", "-8.56812, 18.7321, 15.3172, 2.06", "-9.0463, 18.2514, 15.866, 2.06" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.44547, 27.6124, 6.33857, 0.74", "1.13794, 26.7594, 5.97793, 0.74", "0.693592, 25.6817, 5.54355, 0.52", "0.276582, 24.7442, 5.19059, 0.88", "-0.209764, 23.7496, 4.87593, 0.44", "-0.548511, 23.1125, 4.70373, 0.44", "-0.817184, 22.6349, 4.58771, 0.37", "-1.33949, 21.7853, 4.43568, 0.88", "-1.8815, 20.8877, 4.35403, 0.44", "-2.45487, 19.8902, 4.3089, 0.44", "-2.82169, 19.1644, 4.29416, 0.74", "-3.0841, 18.5864, 4.29684, 1.11", "-3.61456, 17.3151, 4.34367, 0.96", "-4.07481, 16.1225, 4.4485, 1.18", "-4.46028, 15.0969, 4.5938, 1.18", "-4.90753, 13.9271, 4.80464, 0.88", "-5.29214, 12.9585, 5.02096, 0.66", "-5.62808, 12.1717, 5.23827, 0.66", "-5.99785, 11.3348, 5.49494, 0.66", "-6.43197, 10.3793, 5.80399, 0.66", "-6.91351, 9.28583, 6.14789, 0.66", "-7.55286, 7.74528, 6.52979, 0.52", "-7.85996, 6.9111, 6.67299, 0.52", "-8.31359, 5.46223, 6.81703, 0.52", "-8.57231, 4.45888, 6.84008, 0.52", "-8.78634, 3.42859, 6.80714, 0.52", "-9.02989, 2.09228, 6.72617, 0.96", "-9.16406, 1.41673, 6.662, 1.11", "-9.31926, 0.728394, 6.57882, 1.11", "-9.76391, -0.95853, 6.35806, 0.44", "-9.99827, -1.75197, 6.23608, 0.44", "-10.4978, -3.15529, 6.00336, 0.66", "-10.881, -4.10201, 5.82906, 0.52", "-11.094, -4.58682, 5.71647, 0.88", "-11.2882, -5.00924, 5.60138, 1.33", "-11.7011, -5.95087, 5.31491, 0.96", "-12.2342, -7.31032, 4.89311, 0.59", "-12.5574, -8.28916, 4.58646, 0.59", "-12.7339, -8.93077, 4.40361, 0.96", "-12.9535, -9.83697, 4.17208, 0.52", "-13.2198, -11.0738, 3.90462, 0.22", "-13.3834, -11.8719, 3.76574, 0.29", "-13.5491, -12.5816, 3.64798, 0.29", "-13.7083, -13.1199, 3.55826, 1.03", "-13.9926, -13.9254, 3.41067, 1.84", "-14.4995, -15.0882, 3.16858, 0.74", "-15.1315, -16.2688, 2.89108, 0.29", "-15.8499, -17.3214, 2.5997, 0.29", "-16.2941, -17.8711, 2.43014, 0.29", "-16.6097, -18.2314, 2.31221, 0.88", "-17.0407, -18.7055, 2.15491, 1.47", "-17.5016, -19.233, 1.97995, 0.88", "-18.5508, -20.5936, 1.56314, 0.22", "-18.8908, -21.129, 1.41835, 0.15", "-19.2656, -21.8154, 1.26223, 0.37", "-19.5949, -22.4346, 1.13537, 0.22", "-20.1127, -23.3577, 0.952547, 0.22", "-20.5899, -24.1145, 0.794581, 0.52", "-20.8966, -24.5295, 0.702425, 0.96", "-21.5972, -25.2643, 0.503832, 1.62", "-22.5518, -26.0677, 0.237672, 0.96", "-23.6261, -26.8526, -0.0475893, 0.59", "-24.4732, -27.4168, -0.257647, 0.88", "-25.2817, -27.9505, -0.457789, 1.55", "-25.987, -28.4253, -0.636159, 1.55", "-27.0351, -29.1978, -0.917939, 0.37", "-27.9096, -29.9292, -1.13624, 0.22", "-28.4121, -30.3937, -1.25329, 0.44", "-29.1209, -31.1095, -1.4119, 1.11", "-29.4517, -31.4932, -1.48846, 1.11", "-30.1404, -32.3942, -1.64637, 0.44", "-30.6952, -33.2111, -1.79839, 0.22", "-31.1476, -33.9775, -1.95794, 0.29", "-31.4046, -34.4483, -2.07751, 0.15", "-31.8199, -35.246, -2.30709, 0.29", "-31.9811, -35.565, -2.40635, 0.96", "-32.356, -36.312, -2.65816, 1.62", "-32.9641, -37.5804, -3.09699, 2.06", "-33.5495, -38.8249, -3.50557, 1.4", "-33.8335, -39.427, -3.69113, 0.59", "-34.2871, -40.3702, -3.95903, 0.22", "-34.576, -41.0068, -4.11756, 0.22", "-34.853, -41.6532, -4.25164, 0.66", "-35.1409, -42.3705, -4.38147, 0.74", "-35.4383, -43.1436, -4.5001, 0.22", "-35.7896, -44.0079, -4.61975, 0.15", "-36.0971, -44.7172, -4.6967, 0.22", "-36.3107, -45.2155, -4.73495, 0.66", "-36.5871, -45.8386, -4.76844, 1.25", "-36.9921, -46.6934, -4.8066, 1.47", "-37.5202, -47.7109, -4.85789, 0.88", "-38.0114, -48.567, -4.91776, 0.22", "-38.3805, -49.1502, -4.97545, 0.22", "-38.759, -49.7063, -5.04821, 0.22", "-39.3962, -50.5687, -5.19822, 0.37", "-39.9707, -51.3002, -5.36601, 0.37", "-40.5893, -52.0657, -5.56891, 0.52", "-40.962, -52.5253, -5.69489, 0.22", "-41.314, -52.9748, -5.8086, 0.37", "-41.632, -53.4393, -5.90514, 0.74", "-42.0966, -54.2875, -6.02773, 0.22", "-42.5002, -55.2204, -6.11997, 0.22", "-42.7781, -55.9792, -6.18677, 0.29", "-42.9821, -56.5437, -6.24387, 0.52", "-43.2745, -57.3561, -6.33625, 1.11", "-43.5309, -58.0728, -6.42727, 1.7", "-43.8909, -59.0618, -6.57383, 1.33", "-44.2883, -60.1838, -6.76181, 0.22", "-44.578, -61.0786, -6.90067, 0.22", "-44.6743, -61.3889, -6.94686, 0.22", "-44.7835, -61.7515, -6.99837, 0.29", "-44.9507, -62.313, -7.07409, 0.52", "-45.1595, -63.0388, -7.16218, 0.22", "-45.3565, -63.6401, -7.23714, 0.22", "-45.5616, -64.133, -7.31685, 0.22", "-45.8543, -64.6259, -7.43369, 0.81", "-46.1718, -65.0114, -7.56276, 1.47", "-46.4544, -65.2877, -7.67872, 1.47", "-47.1837, -65.9205, -7.97964, 0.22", "-47.5878, -66.2629, -8.14683, 0.22", "-48.0718, -66.7039, -8.34734, 0.37", "-48.6744, -67.3065, -8.59752, 0.44", "-49.0742, -67.7358, -8.76323, 0.22", "-49.233, -67.9263, -8.83378, 0.22", "-49.4242, -68.1779, -8.92438, 0.22", "-49.7848, -68.6775, -9.10087, 0.22", "-50.0748, -69.0798, -9.24426, 0.74", "-50.4302, -69.5769, -9.41994, 1.47", "-50.9788, -70.2741, -9.67357, 1.99", "-51.5362, -70.8975, -9.89958, 1.77", "-52.4943, -71.8384, -10.2501, 0.66", "-53.0575, -72.3289, -10.4391, 0.15", "-53.6544, -72.8122, -10.6323, 0.15", "-54.2949, -73.3242, -10.8386, 0.22", "-54.8531, -73.749, -11.019, 0.22", "-55.4197, -74.1829, -11.2325, 0.29", "-55.8867, -74.5623, -11.4404, 0.81", "-56.4946, -75.1231, -11.7619, 1.47", "-57.1428, -75.8294, -12.1827, 0.52", "-57.6612, -76.5797, -12.6131, 0.22", "-57.9876, -77.2031, -12.9473, 0.22", "-58.2, -77.7325, -13.1903, 0.22", "-58.2854, -78.0108, -13.3034, 0.22", "-58.397, -78.4758, -13.4716, 0.29", "-58.5449, -79.1878, -13.7159, 0.74", "-58.6535, -79.7266, -13.9037, 1.03", "-58.9417, -80.8544, -14.314, 0.37", "-59.1793, -81.6124, -14.6068, 0.88", "-59.4329, -82.3333, -14.8924, 1.18", "-59.6759, -82.9847, -15.1526, 1.18", "-60.1444, -84.1829, -15.6079, 0.29", "-60.589, -85.2075, -15.9874, 0.29", "-60.9277, -85.9041, -16.2317, 0.37", "-61.1942, -86.3859, -16.3842, 0.88", "-61.4829, -86.8751, -16.5173, 0.66", "-61.8665, -87.5502, -16.6522, 0.22", "-62.1602, -88.1075, -16.7206, 0.22", "-62.4468, -88.7334, -16.7716, 0.37", "-62.6318, -89.1839, -16.7935, 0.66", "-62.9148, -89.8982, -16.8131, 1.11", "-63.2563, -90.7475, -16.8315, 0.66", "-63.487, -91.28, -16.8487, 0.29", "-63.823, -92.0155, -16.8679, 0.22", "-64.0557, -92.5137, -16.8941, 0.29", "-64.4483, -93.3878, -16.9818, 0.96", "-64.7176, -94.0101, -17.0786, 1.03", "-65.1465, -95.0837, -17.294, 0.81", "-65.4515, -95.9517, -17.4992, 0.29", "-65.6967, -96.6691, -17.6991, 0.22", "-65.9491, -97.4195, -17.9324, 0.29", "-66.1641, -98.0729, -18.1546, 0.74", "-66.3505, -98.6479, -18.3527, 0.52", "-66.7876, -99.9013, -18.7909, 0.29", "-67.2666, -101.054, -19.1869, 0.29", "-67.8, -102.086, -19.5107, 0.29", "-68.1297, -102.636, -19.675, 0.29", "-68.4764, -103.165, -19.8338, 1.03", "-68.8266, -103.673, -19.992, 1.7", "-69.4452, -104.56, -20.2648, 1.4", "-70.3806, -105.891, -20.6611, 0.44", "-70.9362, -106.643, -20.8747, 0.15", "-71.1854, -106.972, -20.9666, 0.37", "-71.5825, -107.497, -21.1214, 0.59", "-71.956, -108.015, -21.2838, 0.59", "-72.6289, -108.993, -21.6203, 0.22", "-73.1319, -109.718, -21.9024, 0.22", "-73.5112, -110.252, -22.1163, 0.22", "-73.8092, -110.681, -22.2893, 0.88", "-74.1052, -111.118, -22.4405, 1.47", "-74.5297, -111.768, -22.6447, 1.84", "-75.7431, -113.697, -23.1892, 0.22", "-75.9241, -113.999, -23.2727, 0.22", "-76.1648, -114.403, -23.3774, 0.22", "-76.7168, -115.297, -23.6231, 0.22", "-77.0894, -115.853, -23.7945, 0.22", "-77.3938, -116.275, -23.9487, 0.74", "-77.936, -117.016, -24.2698, 1.33", "-78.6184, -117.895, -24.6992, 0.22", "-79.0205, -118.386, -24.9656, 0.22", "-79.4707, -118.939, -25.2555, 0.22", "-79.8186, -119.396, -25.428, 0.15", "-80.0844, -119.774, -25.5148, 0.15", "-80.4827, -120.325, -25.568, 0.37", "-80.682, -120.6, -25.567, 0.96", "-81.4476, -121.631, -25.4949, 2.14", "-82.3769, -122.827, -25.3653, 0.66", "-83.0763, -123.641, -25.2505, 0.15", "-83.7397, -124.319, -25.1332, 0.15", "-84.1643, -124.706, -25.0538, 0.44", "-84.5771, -125.057, -24.9772, 1.03", "-85.2658, -125.623, -24.858, 1.55", "-86.1242, -126.322, -24.6956, 0.44", "-86.6805, -126.82, -24.6114, 0.22", "-87.0706, -127.224, -24.567, 0.22", "-87.6352, -127.864, -24.5325, 0.22", "-88.144, -128.476, -24.5374, 0.29", "-88.6987, -129.185, -24.5963, 0.29", "-89.3653, -130.078, -24.7365, 0.15", "-89.8514, -130.737, -24.8806, 0.22", "-90.3438, -131.413, -25.0924, 0.88", "-91.0175, -132.355, -25.4812, 0.74", "-91.4465, -132.956, -25.791, 0.88", "-91.8682, -133.573, -26.1616, 1.77", "-92.314, -134.271, -26.6319, 2.29", "-92.9219, -135.35, -27.4237, 0.07", "-93.2363, -136.015, -27.9512, 0.15", "-93.3926, -136.438, -28.3143, 0.15", "-93.4602, -136.676, -28.5212, 0.15", "-93.5416, -137.15, -28.9005, 0.15", "-93.5636, -137.535, -29.1524, 0.15", "-93.5949, -138.237, -29.4979, 0.15", "-93.6099, -138.499, -29.6061, 0.15", "-93.6624, -139.245, -29.8796, 0.66", "-93.8029, -140.597, -30.351, 0.29", "-93.9345, -141.473, -30.6383, 0.22", "-94.0822, -142.272, -30.8811, 0.22", "-94.2526, -142.959, -31.0801, 0.22", "-94.3787, -143.302, -31.1862, 0.59", "-94.5567, -143.617, -31.2994, 0.74", "-94.8159, -143.909, -31.4131, 0.37", "-95.2124, -144.24, -31.5444, 0.15", "-96.0503, -144.84, -31.7771, 0.15", "-96.5293, -145.147, -31.8971, 0.22", "-97.0193, -145.458, -32.0177, 0.29", "-97.5305, -145.794, -32.1284, 0.22", "-98.191, -146.27, -32.2559, 0.22", "-98.9264, -146.867, -32.3824, 0.29", "-99.4395, -147.332, -32.4551, 0.29", "-100.085, -147.909, -32.5513, 0.22", "-100.62, -148.356, -32.647, 0.37", "-101.138, -148.773, -32.7622, 0.74", "-101.509, -149.071, -32.851, 1.03", "-102.25, -149.675, -33.0295, 0.22", "-102.915, -150.248, -33.1942, 0.22", "-103.485, -150.753, -33.3508, 0.15", "-103.912, -151.157, -33.4849, 0.15", "-104.214, -151.469, -33.5831, 0.15", "-104.679, -152.029, -33.7564, 0.22", "-105.304, -152.901, -34.0215, 0.29", "-105.789, -153.692, -34.238, 0.74", "-106.286, -154.603, -34.4455, 0.74", "-106.658, -155.325, -34.5917, 0.37", "-107.036, -156.103, -34.734, 0.37", "-107.325, -156.702, -34.8224, 1.4", "-107.755, -157.561, -34.9333, 2.95", "-108.413, -158.754, -35.0761, 1.18", "-108.989, -159.669, -35.1907, 0.22", "-109.714, -160.717, -35.3089, 0.29", "-110.269, -161.491, -35.3848, 0.74", "-110.687, -162.064, -35.4439, 1.33", "-111.369, -162.917, -35.5664, 0.81", "-111.942, -163.608, -35.7313, 1.18", "-112.847, -164.754, -36.0656, 0.66", "-113.381, -165.517, -36.3052, 0.29", "-113.573, -165.819, -36.4047, 0.44", "-114.307, -167.09, -36.8141, 0.29", "-114.818, -168.048, -37.1346, 0.81", "-115.529, -169.425, -37.6569, 0.22", "-115.872, -170.041, -37.9649, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "52.0507, -15.1891, -26.778, 0.15", "58.015, -19.698, -31.3556, 0.15", "63.5605, -24.6883, -35.9306, 0.15", "69.124, -28.8547, -41.276, 0.15", "75.1149, -33.4833, -45.693, 0.15", "81.4823, -36.4874, -50.97, 0.15", "87.6947, -39.4226, -56.4655, 0.15", "93.4529, -43.5185, -61.6632, 0.15", "97.7989, -48.4862, -67.3865, 0.15", "103.489, -53.3294, -71.9519, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "52.0507, -15.1891, -26.778, 0.59", "58.5268, -18.9529, -28.3308, 0.15", "64.8404, -22.9123, -30.0404, 0.15", "71.4427, -26.6387, -31.0326, 0.15", "78.1678, -30.222, -31.669, 0.15", "84.7316, -33.764, -33.3977, 0.15", "91.0285, -37.6867, -35.2571, 0.15", "96.9469, -42.2723, -36.7127, 0.15", "102.376, -47.2273, -38.7324, 0.15", "107.285, -52.7449, -40.545, 0.15", "111.795, -58.7983, -41.1548, 0.15", "116.933, -64.3009, -42.1576, 0.15", "121.861, -69.774, -44.0608, 0.15", "126.361, -75.4554, -46.3667, 0.15", "131.755, -80.0925, -49.151, 0.15", "138.541, -82.9307, -51.3423, 0.15", "145.392, -85.8241, -53.2217, 0.15", "152.458, -87.596, -55.6969, 0.15", "159.482, -89.8401, -57.8602, 0.15", "166.421, -90.8729, -61.0419, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "58.9502, -30.1338, -35.2271, 0.15", "64.9137, -38.5243, -42.4833, 0.15", "70.3381, -47.9085, -48.8271, 0.15", "76.0362, -56.3513, -56.2294, 0.15", "79.7762, -67.0502, -61.5118, 0.15", "83.2987, -78.5312, -64.8954, 0.15", "86.6103, -89.7241, -69.3248, 0.15", "91.1219, -99.4444, -75.8429, 0.15", "97.4438, -109.056, -80.8767, 0.15", "102.206, -119.784, -85.2044, 0.15", "108.526, -130.03, -88.7104, 0.15", "114.023, -140.641, -92.4414, 0.15", "118.796, -150.91, -97.7948, 0.15", "121.057, -161.729, -103.617, 0.15", "124.235, -172.824, -108.385, 0.15", "129.885, -183.465, -111.792, 0.15", "134.591, -193.549, -117.554, 0.15", "141.068, -203.043, -122.625, 0.15", "147.108, -213.29, -126.582, 0.15", "152.554, -223.016, -132.343, 0.15", "158.204, -233.155, -137.076, 0.15", "162.659, -242.99, -143.452, 0.15", "166.63, -253.639, -148.675, 0.15", "170.443, -264.93, -152.395, 0.15", "173.723, -275.661, -157.904, 0.15", "177.715, -286.284, -163.165, 0.15", "180.279, -297.737, -167.385, 0.15", "183.704, -309.489, -169.757, 0.15", "189.233, -320.706, -170.017, 0.15", "196.082, -331.131, -168.601, 0.15", "204.125, -340.612, -166.592, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "58.9502, -30.1338, -35.2271, 0.59", "65.9656, -36.2869, -37.0559, 0.15", "73.9778, -40.9788, -39.304, 0.15", "82.2122, -45.3941, -41.3228, 0.15", "88.9217, -51.4653, -44.2763, 0.15", "94.8297, -58.1585, -47.527, 0.15", "101.292, -64.1094, -51.2127, 0.15", "108.356, -69.0956, -55.2778, 0.15", "116.102, -73.0755, -59.2655, 0.15", "124.341, -77.1135, -61.9871, 0.15", "132.357, -81.9941, -63.7323, 0.15", "140.892, -86.2858, -63.9235, 0.15", "148.681, -91.6329, -62.7601, 0.15", "155.518, -97.631, -60.0462, 0.15", "161.03, -103.687, -55.263, 0.15", "166.71, -110.027, -51.1037, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-97.5567, -147.862, 23.364, 0.15", "-103.871, -155.704, 25.744, 0.15", "-110.182, -163.889, 26.1861, 0.15", "-116.662, -171.795, 27.7914, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-97.5567, -147.862, 23.364, 0.59", "-104.223, -156.578, 26.2918, 0.15", "-108.856, -166.15, 30.1394, 0.15", "-114.088, -175.136, 34.6413, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-91.4042, -171.578, -110.498, 0.15", "-95.1853, -178.835, -113.815, 0.15", "-99.333, -186.325, -115.89, 0.15", "-102.815, -193.849, -118.896, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-91.4042, -171.578, -110.498, 0.59", "-94.8786, -180.352, -115.363, 0.15", "-96.317, -189.876, -119.79, 0.15", "-99.1789, -198.994, -124.39, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "13.3336, -179.705, 49.3819, 0.15", "14.1067, -180.411, 49.2785, 0.15", "14.463, -180.736, 49.2309, 0.37", "15.0603, -181.281, 49.151, 1.18", "15.495, -181.678, 49.0928, 0.88", "16.2588, -182.375, 48.9907, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "13.3336, -179.705, 49.3819, 0.22", "13.3395, -180.551, 49.1858, 0.22", "13.3307, -181.18, 49.0149, 0.81", "13.3033, -181.79, 48.8529, 1.18", "13.2109, -182.71, 48.6335, 0.22", "13.0653, -183.487, 48.4804, 0.22", "12.8695, -184.252, 48.3552, 0.29", "12.6325, -184.969, 48.2649, 0.66", "12.3316, -185.686, 48.215, 0.81", "11.9508, -186.457, 48.207, 0.22", "11.3969, -187.45, 48.265, 0.22", "11.1216, -187.937, 48.3235, 0.29", "10.8566, -188.426, 48.3987, 0.96", "10.6181, -188.908, 48.4883, 1.7", "10.1687, -189.97, 48.7111, 0.52", "9.85063, -190.929, 48.9355, 0.22", "9.72917, -191.437, 49.0675, 0.15", "9.58259, -192.249, 49.3061, 0.22", "9.4755, -192.962, 49.5064, 0.15", "9.39127, -193.57, 49.6737, 0.15", "9.33518, -193.983, 49.7829, 0.15", "9.27687, -194.446, 49.8914, 0.37", "9.18996, -195.047, 49.9947, 0.59", "8.99497, -196.155, 50.1026, 0.07", "8.8573, -196.785, 50.1214, 0.07", "8.69472, -197.47, 50.1144, 0.15", "8.5856, -197.941, 50.0988, 0.66", "8.45671, -198.523, 50.0757, 0.74", "8.25997, -199.503, 50.0506, 0.15", "8.14836, -200.131, 50.0613, 0.22", "8.0617, -200.644, 50.0759, 0.15", "7.97439, -201.087, 50.0977, 0.81", "7.86372, -201.554, 50.1328, 0.66", "7.64007, -202.339, 50.1954, 0.15", "7.43463, -202.963, 50.2356, 0.22", "7.15322, -203.739, 50.2754, 0.52", "6.88285, -204.359, 50.3199, 0.59", "6.51471, -205.168, 50.4193, 0.07", "6.22405, -205.808, 50.5226, 0.22", "6.11745, -206.038, 50.5626, 0.22", "5.87406, -206.563, 50.6614, 0.96", "5.4097, -207.558, 50.8718, 0.07", "5.03574, -208.427, 51.0996, 0.07", "4.87906, -208.825, 51.2437, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-24.5657, -201.234, 20.937, 0.15", "-25.4844, -209.596, 22.6339, 0.15", "-26.9423, -218.001, 23.5667, 0.15", "-28.525, -226.366, 24.6579, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-24.5657, -201.234, 20.937, 0.59", "-26.6678, -213.101, 22.4695, 0.15", "-27.5358, -225.179, 21.5533, 0.15", "-31.1343, -236.801, 21.6259, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "11.5714, 30.7137, -1.6795, 0.52", "12.1518, 31.5134, -2.3344, 0.52", "12.7429, 31.9542, -3.16706, 0.37", "13.1739, 32.1508, -3.77456, 0.37", "13.3932, 32.2441, -4.09264, 0.52", "13.7916, 32.4534, -4.69893, 0.52", "14.389, 32.8478, -5.66043, 0.44", "14.6587, 33.0409, -6.16037, 0.44", "14.9562, 33.3042, -6.71453, 0.66", "15.2217, 33.6054, -7.13973, 0.66", "15.5701, 34.0889, -7.58832, 0.88", "15.8094, 34.4705, -7.80421, 1.03", "16.3426, 35.3417, -8.09906, 0.52", "16.7671, 36.0125, -8.2612, 0.52", "17.1472, 36.5844, -8.36934, 0.52", "17.5066, 37.0764, -8.44892, 0.52", "18.111, 37.8592, -8.59199, 0.22", "18.6948, 38.5818, -8.72244, 0.44", "19.2771, 39.2962, -8.84509, 0.74", "19.8839, 40.1003, -8.98661, 1.18", "20.3058, 40.7074, -9.10858, 0.88", "20.9679, 41.6843, -9.3474, 0.29", "26.237, 48.4131, -11.5253, 0.29", "31.4874, 54.9932, -14.183, 0.29", "36.6911, 61.9843, -15.4309, 0.29", "42.4358, 68.6621, -15.448, 0.29", "47.9084, 75.5479, -15.1976, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "11.5714, 30.7137, -1.6795, 0.88", "12.4888, 31.308, -1.333, 0.88", "13.1169, 31.6946, -1.13739, 0.81", "13.8614, 32.1541, -0.98154, 0.96", "14.6482, 32.6407, -0.891267, 1.33", "15.5693, 33.2368, -0.841418, 1.33", "16.1026, 33.5929, -0.823389, 1.33", "16.6913, 34.0206, -0.828971, 1.33", "17.4264, 34.5738, -0.870289, 1.18", "18.1238, 35.1041, -0.932972, 1.03", "18.7452, 35.561, -0.985326, 0.88", "19.5149, 36.1304, -1.03349, 1.4", "20.4496, 36.8474, -1.05906, 0.74", "21.2126, 37.4429, -1.05892, 1.25", "22.038, 38.0751, -1.05029, 1.77", "23.1168, 38.908, -1.06738, 0.96", "24.01, 39.6164, -1.13075, 0.59", "24.66, 40.1629, -1.22051, 0.74", "25.1384, 40.5923, -1.31373, 0.96", "25.96, 41.3836, -1.48989, 1.11", "26.5421, 41.976, -1.60334, 1.4", "27.0619, 42.5224, -1.68141, 1.4", "27.9368, 43.4035, -1.76441, 0.96", "28.3171, 43.7665, -1.7633, 0.96", "29.1267, 44.4876, -1.66082, 1.18", "29.8154, 45.0431, -1.48873, 1.18", "30.5518, 45.5735, -1.27099, 1.03", "31.074, 45.9124, -1.13007, 0.96", "31.7927, 46.3496, -0.984364, 0.81", "32.5886, 46.8223, -0.892628, 0.74", "33.4432, 47.3319, -0.874915, 0.96", "34.3221, 47.8802, -0.912562, 1.25", "35.2847, 48.5124, -0.997077, 1.55", "36.1018, 49.0964, -1.09617, 0.88", "36.9922, 49.8191, -1.25328, 0.59", "37.5107, 50.3079, -1.35683, 0.81", "38.0418, 50.8984, -1.46454, 0.96", "38.5951, 51.5613, -1.5585, 1.33", "39.4045, 52.6275, -1.65898, 1.55", "40.074, 53.5977, -1.7323, 1.7", "40.6789, 54.5715, -1.81337, 1.62", "41.3155, 55.6934, -1.92564, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-93.8148, 231.408, -71.5964, 0.15", "-95.9766, 235.914, -73.3177, 0.15", "-97.3918, 240.649, -75.1655, 0.15", "-99.5649, 245.336, -76.2401, 0.15", "-101.546, 250.134, -77.1622, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-93.8148, 231.408, -71.5964, 0.59", "-97.717, 239.215, -72.4493, 0.15", "-102.291, 246.689, -73.0959, 0.15", "-104.673, 255.095, -73.2401, 0.15", "-106.402, 263.56, -74.4854, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-9.0463, 18.2514, 15.866, 0.81", "-6.80144, 19.1391, 16.1793, 0.81", "-5.56446, 19.7503, 16.2815, 0.44", "-3.76606, 20.8477, 16.4838, 0.59", "-2.28923, 21.8474, 16.7274, 0.59", "-1.0544, 22.721, 16.9752, 0.88", "-0.108669, 23.4043, 17.1902, 1.11", "1.0238, 24.2801, 17.3089, 1.11", "2.07996, 25.3599, 17.455, 0.29", "2.35458, 26.0428, 17.7064, 0.29", "2.18823, 26.5855, 18.1554, 0.29", "2.02401, 26.8653, 18.4523, 0.29", "1.88673, 27.1768, 18.8444, 0.29", "1.8216, 27.6909, 19.6238, 0.59", "1.97388, 28.1517, 20.3928, 1.11", "2.40465, 28.852, 21.6544, 1.84", "2.86805, 29.3882, 22.744, 1.84", "3.53918, 30.0316, 24.1625, 0.96", "4.04625, 30.4373, 25.1637, 0.74", "4.62723, 30.8847, 26.2376, 0.74", "5.23847, 31.4304, 27.4595, 0.74", "5.64624, 31.9005, 28.4159, 1.11", "6.06655, 32.5503, 29.4758, 1.47", "6.46912, 33.2722, 30.4727, 1.47", "6.99923, 34.2765, 31.7024, 0.74", "7.69322, 35.6344, 33.2424, 0.52", "8.0818, 36.3786, 34.0576, 0.52", "8.63327, 37.3936, 35.2218, 0.37", "9.16647, 38.1316, 36.2431, 0.37", "9.44394, 38.2809, 36.7019, 0.37", "9.81846, 38.2453, 37.2953, 0.37", "10.0999, 38.159, 37.7385, 0.37", "10.6757, 37.9973, 38.9214, 0.37", "10.966, 37.996, 39.9278, 0.37", "11.2586, 38.2735, 41.3894, 0.37", "11.4083, 38.6052, 42.4061, 0.37", "11.4933, 39.0455, 43.462, 0.59", "11.5252, 39.5968, 44.5545, 0.88", "11.4775, 40.7329, 46.3587, 0.88", "11.348, 41.74, 47.7624, 0.59", "11.1101, 43.0504, 49.3772, 0.59", "10.9827, 43.8919, 50.2982, 0.29", "10.8982, 44.821, 51.1862, 0.29", "10.8678, 45.9225, 52.1031, 0.29", "10.8933, 46.7538, 52.71, 0.96", "10.9846, 47.5696, 53.2867, 1.84", "11.187, 48.8277, 54.1341, 0.37", "11.3402, 49.795, 54.8208, 0.81", "11.4614, 50.9275, 55.7359, 1.55", "11.5263, 52.0397, 56.7989, 0.22", "11.5403, 52.869, 57.6523, 0.22", "11.5423, 53.4472, 58.3065, 0.22", "11.6105, 54.1776, 59.1076, 0.29", "11.7589, 54.8924, 59.8027, 0.29", "12.018, 55.7317, 60.5361, 0.59", "12.5129, 56.9669, 61.5722, 1.77", "12.9105, 57.8443, 62.2851, 2.14", "13.763, 59.4774, 63.558, 0.29", "14.2103, 60.2545, 64.1285, 0.29", "14.6452, 61.0121, 64.6665, 0.29", "14.9056, 61.4398, 64.9692, 0.29", "15.2882, 62.024, 65.4293, 0.88", "15.7901, 62.732, 66.0528, 1.62", "16.246, 63.2927, 66.6186, 1.62", "16.8842, 64.0205, 67.3236, 2.21", "18.5427, 65.7531, 68.8949, 0.22", "19.2541, 66.4575, 69.4944, 0.22", "19.7527, 66.927, 69.8858, 0.22", "20.2721, 67.4019, 70.2624, 0.22", "21.2636, 68.2887, 70.9108, 0.44", "22.4314, 69.2697, 71.5465, 0.66", "22.6144, 69.434, 71.637, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.0463, 18.2514, 15.866, 0.96", "-8.20924, 17.1874, 16.2727, 0.96", "-7.32204, 16.0781, 16.6677, 0.37", "-7.08992, 15.6538, 16.8018, 0.29", "-6.79663, 14.847, 17.0177, 0.22", "-6.67331, 14.296, 17.1785, 0.22", "-6.55349, 13.4284, 17.4501, 0.52", "-6.49705, 12.3673, 17.8065, 0.74", "-6.62676, 10.884, 18.3334, 0.52", "-6.78061, 9.80262, 18.7183, 1.11", "-7.0327, 8.14829, 19.3101, 1.62", "-7.25271, 6.67926, 19.819, 1.33", "-7.52242, 4.60825, 20.5124, 1.11", "-7.84397, 1.7766, 21.4392, 0.44", "-7.99365, 0.281314, 21.9097, 0.44", "-8.15611, -1.26936, 22.3776, 0.44", "-8.30306, -2.50873, 22.7205, 0.96", "-8.53101, -4.29893, 23.2046, 1.47", "-8.85204, -6.372, 23.7641, 1.7", "-9.28726, -8.67329, 24.4383, 1.7", "-9.81646, -10.7127, 25.1357, 1.7", "-10.44, -12.6096, 25.8702, 0.59", "-11.0982, -14.3597, 26.6377, 0.44", "-11.7334, -15.9146, 27.4035, 0.44", "-12.0995, -16.8145, 27.9165, 0.44", "-12.5824, -18.1546, 28.8211, 0.44", "-12.6932, -18.6197, 29.1839, 0.44", "-12.6989, -19.2136, 29.6269, 0.44", "-12.5535, -20.1408, 30.2142, 0.44", "-12.4448, -20.757, 30.5694, 0.88", "-12.2824, -22.224, 31.3502, 1.4", "-12.2687, -23.2386, 31.888, 1.4", "-12.4476, -24.8745, 32.7894, 0.66", "-12.7037, -26.0835, 33.4662, 0.22", "-13.0145, -27.2659, 34.1574, 0.22", "-13.1959, -27.944, 34.5696, 1.03", "-13.489, -29.1071, 35.292, 2.36", "-13.7612, -30.4634, 36.1466, 2.65", "-14.0607, -32.8791, 37.7171, 0.81", "-14.0277, -34.2259, 38.507, 0.22", "-13.9267, -34.8816, 38.8575, 0.22", "-13.7733, -35.5062, 39.1771, 0.66", "-13.5167, -36.274, 39.5593, 0.66", "-13.3165, -36.7503, 39.8018, 0.66", "-12.6475, -38.0559, 40.5121, 0.22", "-12.3637, -38.7266, 40.8938, 0.22", "-12.2734, -39.0379, 41.0979, 0.22", "-12.2038, -39.5609, 41.4911, 0.22", "-12.2126, -40.2758, 42.0532, 0.22", "-12.264, -40.5794, 42.2951, 0.22", "-12.4984, -41.301, 42.8647, 0.22", "-12.6721, -41.7267, 43.1559, 0.29", "-13.1653, -42.8312, 43.8152, 0.29", "-13.4033, -43.4128, 44.1146, 0.59", "-13.7895, -44.493, 44.6017, 0.88", "-14.0929, -45.5696, 45.0496, 0.66", "-14.3161, -46.9632, 45.5701, 0.22", "-14.3309, -47.6284, 45.8063, 0.22", "-14.2009, -49.2664, 46.4123, 0.59", "-13.9892, -50.6395, 46.943, 1.03", "-13.7306, -51.9985, 47.4818, 1.62", "-13.3702, -53.824, 48.2547, 0.59", "-13.0638, -55.696, 49.0629, 0.22", "-12.9302, -56.9994, 49.6579, 0.52", "-12.918, -57.7719, 50.0504, 1.25", "-13.0136, -59.0397, 50.7803, 2.14", "-13.2288, -60.1913, 51.5144, 1.33", "-13.6525, -61.6967, 52.6135, 0.52", "-13.8991, -62.5385, 53.2739, 0.22", "-14.1189, -63.4835, 54.0415, 0.44", "-14.2348, -64.2396, 54.6894, 0.44", "-14.2635, -65.0248, 55.33, 0.22", "-14.2613, -65.7974, 55.8395, 0.22", "-14.2547, -66.7657, 56.39, 0.22", "-14.2711, -67.4544, 56.7072, 0.52", "-14.3358, -68.4277, 57.0827, 0.74", "-14.5671, -69.9998, 57.7152, 0.81", "-14.9219, -71.3524, 58.4471, 0.22", "-15.2862, -72.1407, 59.0653, 0.22", "-15.4828, -72.4596, 59.4109, 0.22", "-15.7674, -72.9376, 59.9911, 0.66", "-16.198, -73.7501, 61.0731, 1.33", "-16.4961, -74.4649, 62.0322, 1.55", "-16.7297, -75.3075, 63.0284, 0.88", "-17.0195, -76.4631, 64.147, 0.15", "-17.3365, -77.6725, 65.2025, 0.29", "-17.5124, -78.3451, 65.7363, 0.88", "-17.7253, -79.0471, 66.2209, 1.25", "-17.9761, -79.8033, 66.7107, 1.33", "-18.6741, -81.7872, 67.9878, 0.22", "-18.9832, -82.6665, 68.5486, 0.74", "-19.273, -83.5068, 69.0859, 1.25", "-19.7001, -84.9649, 69.9587, 0.44", "-19.8442, -86.0691, 70.5393, 0.22", "-19.8301, -86.7322, 70.8278, 0.22", "-19.6975, -87.6665, 71.1299, 0.96", "-19.5803, -88.2636, 71.2987, 1.55", "-19.3056, -89.4736, 71.6211, 1.33", "-18.6306, -92.2313, 72.3843, 0.15", "-18.4922, -92.8967, 72.5745, 0.37", "-18.2913, -94.1387, 72.9737, 0.15", "-18.1818, -95.1872, 73.3897, 0.15", "-18.1352, -96.144, 73.8445, 0.52", "-18.1463, -97.1677, 74.4044, 1.18", "-18.2373, -98.4025, 75.1715, 2.06", "-18.3701, -99.9751, 76.2043, 0.96", "-18.5202, -101.591, 77.3078, 0.22", "-18.6535, -102.738, 78.0999, 0.22", "-18.8256, -104.089, 79.0585, 0.22", "-18.9382, -104.956, 79.6822, 0.22", "-19.0931, -106.246, 80.6521, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "166.71, -110.027, -51.1037, 0.15", "172.822, -114.967, -52.2562, 0.15", "178.446, -120.514, -52.815, 0.15", "184.134, -125.931, -53.881, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "166.71, -110.027, -51.1037, 0.59", "180.748, -118.471, -52.4826, 0.15", "195.331, -126.05, -52.1302, 0.15", "207.82, -136.343, -49.8725, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "47.9084, 75.5479, -15.1976, 0.15", "54.9433, 84.6411, -21.0133, 0.15", "59.3597, 95.068, -27.0574, 0.15", "60.902, 105.997, -33.575, 0.15", "60.7696, 117.35, -39.4822, 0.15", "58.6681, 128.097, -46.1636, 0.15", "58.2061, 138.629, -53.4897, 0.15", "58.4323, 149.429, -60.4029, 0.15", "58.4958, 160.186, -67.3905, 0.15", "59.3302, 171.849, -72.5544, 0.15", "58.4294, 184.298, -75.0844, 0.15", "60.0702, 196.907, -75.3179, 0.15", "63.3301, 209.21, -75.0259, 0.15", "65.3464, 221.472, -72.295, 0.15", "68.5292, 233.37, -69.0407, 0.15", "72.7364, 245.195, -66.8196, 0.15", "74.3923, 257.711, -65.3053, 0.15", "75.5236, 270.37, -64.9867, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "47.9084, 75.5479, -15.1976, 0.59", "54.3456, 82.9409, -12.1469, 0.15", "59.9739, 90.7047, -8.5236, 0.15", "65.9598, 97.2394, -3.28649, 0.15", "70.2965, 104.544, 2.47601, 0.15", "75.2818, 110.755, 9.01086, 0.15", "79.6941, 117.533, 15.3623, 0.15", "83.209, 124.727, 21.7908, 0.15", "88.9081, 131.394, 27.1692, 0.15", "94.4853, 138.005, 32.7445, 0.15", "99.3454, 145.476, 37.8265, 0.15", "103.078, 153.799, 42.4493, 0.15", "108.198, 160.759, 48.0143, 0.15", "114.468, 165.648, 54.6273, 0.15", "121.49, 169.812, 61.0037, 0.15", "128.751, 174.264, 66.89, 0.15", "136.274, 180.014, 70.9962, 0.15", "144.897, 184.94, 73.8935, 0.15", "152.873, 190.716, 76.9826, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "41.3155, 55.6934, -1.92564, 0.66", "42.1182, 57.2197, -2.16083, 0.66", "42.5773, 58.0046, -2.30402, 0.66", "43.1423, 58.9453, -2.48446, 0.44", "43.5533, 59.6296, -2.59981, 0.37", "44.0895, 60.5412, -2.72046, 0.37", "44.5603, 61.3577, -2.78475, 0.37", "44.7989, 61.7475, -2.79649, 0.59", "45.2104, 62.4719, -2.79237, 1.11", "45.7817, 63.6607, -2.75168, 0.37", "46.1597, 64.6235, -2.6325, 0.59", "46.5448, 65.8158, -2.39801, 0.37", "46.9028, 66.9966, -2.10136, 0.44", "47.1102, 67.6404, -1.92035, 0.22", "47.3295, 68.2138, -1.7454, 0.22", "48.017, 69.7053, -1.27595, 0.22", "48.4669, 70.4822, -1.04317, 0.22", "48.7565, 70.8736, -0.939315, 0.44", "49.2841, 71.4393, -0.819, 0.66", "50.1504, 72.2112, -0.719563, 0.22", "50.5452, 72.5172, -0.709445, 0.22", "51.0701, 72.8827, -0.728544, 0.66", "51.5187, 73.1819, -0.735035, 1.03", "52.5425, 73.8716, -0.738342, 0.22", "53.412, 74.4882, -0.735886, 0.66", "53.94, 74.8851, -0.723727, 0.81", "55.1295, 75.7993, -0.680653, 1.03", "56.0367, 76.5013, -0.637185, 0.74", "56.9324, 77.1884, -0.579822, 0.37", "57.5905, 77.6621, -0.532035, 0.37", "58.1487, 78.0543, -0.492027, 0.29", "58.7318, 78.4578, -0.453916, 0.29", "59.2177, 78.7925, -0.431628, 0.66", "59.9331, 79.2755, -0.386668, 1.25", "61.2116, 80.1175, -0.304646, 0.29", "61.6016, 80.3746, -0.284354, 0.29", "62.4157, 80.9421, -0.25768, 0.88", "63.1935, 81.532, -0.240416, 0.52", "63.826, 82.0465, -0.234979, 1.11", "64.6957, 82.7955, -0.241525, 0.66", "65.5144, 83.5273, -0.237523, 0.29", "66.1091, 84.0383, -0.231246, 0.59", "67.1831, 84.8887, -0.218486, 0.22", "67.6885, 85.2498, -0.210672, 0.59", "68.3942, 85.7138, -0.202582, 1.18", "69.2772, 86.2403, -0.180405, 0.22", "69.8707, 86.5712, -0.161551, 0.22", "70.3698, 86.8458, -0.14615, 0.22", "70.9094, 87.1632, -0.115731, 0.22", "71.2696, 87.4246, -0.0923588, 0.22", "71.6769, 87.8072, -0.0673695, 0.37", "72.271, 88.5136, -0.0273257, 0.37", "72.655, 89.0434, 0.0100859, 0.22", "73.0854, 89.6987, 0.0714328, 0.52", "73.6561, 90.6014, 0.191447, 0.52", "74.0451, 91.1893, 0.291133, 0.96", "74.4482, 91.7366, 0.404504, 1.77", "74.9122, 92.2996, 0.538465, 1.77", "75.5813, 93.0666, 0.723878, 0.22", "76.066, 93.6003, 0.845462, 0.22", "76.5395, 94.0772, 0.962715, 0.22", "77.0255, 94.5448, 1.06946, 0.22", "77.4787, 94.968, 1.14223, 0.22", "78.0161, 95.4954, 1.20019, 0.22", "78.5796, 96.0808, 1.21962, 0.22", "78.8671, 96.4023, 1.22093, 0.66", "79.2918, 96.8926, 1.22292, 0.81", "79.9165, 97.6237, 1.24493, 0.22", "80.4142, 98.1824, 1.28455, 0.22", "80.8325, 98.6749, 1.33401, 0.74", "81.3234, 99.3282, 1.40523, 0.88", "81.5991, 99.7454, 1.45608, 1.11", "82.2034, 100.79, 1.61518, 1.11", "82.6942, 101.78, 1.78262, 0.37", "83.2053, 102.899, 2.00134, 0.22", "83.5054, 103.604, 2.16189, 0.29", "83.7728, 104.249, 2.33373, 0.29", "84.0576, 104.894, 2.53637, 0.37", "84.3866, 105.466, 2.76446, 0.37", "84.6992, 105.825, 2.96369, 0.22", "85.1219, 106.147, 3.20057, 0.22", "85.7661, 106.541, 3.53579, 0.22", "86.4066, 106.879, 3.83781, 0.29", "87.3621, 107.355, 4.26893, 0.22", "87.934, 107.654, 4.51915, 1.4", "88.5356, 108.018, 4.78567, 2.21", "88.9481, 108.336, 4.99171, 1.7", "89.4635, 108.837, 5.30987, 0.96", "90.0312, 109.467, 5.74867, 0.96", "90.3515, 109.83, 6.03337, 1.47", "90.6952, 110.198, 6.3486, 1.47", "91.3883, 110.888, 6.97844, 0.22", "91.8391, 111.312, 7.36011, 0.22", "92.3183, 111.77, 7.7351, 0.22", "92.8003, 112.23, 8.05604, 0.22", "93.2211, 112.619, 8.29424, 0.22", "93.5455, 112.922, 8.42989, 0.88", "94.0466, 113.391, 8.57831, 1.99", "94.7666, 114.082, 8.72319, 1.55", "95.6176, 114.947, 8.83394, 0.22", "96.2392, 115.593, 8.89867, 0.22", "97.0751, 116.425, 8.96905, 0.29", "97.5966, 116.921, 9.00359, 0.59", "98.4257, 117.632, 9.01144, 0.96", "99.4081, 118.382, 8.97087, 0.15", "100.243, 118.962, 8.92222, 1.18", "101.32, 119.669, 8.85234, 1.18", "102.24, 120.243, 8.79455, 1.4", "103.571, 121.037, 8.71141, 0.22", "104.176, 121.399, 8.67099, 0.37", "104.813, 121.801, 8.63781, 1.03", "105.1, 122.002, 8.6307, 0.88", "105.497, 122.307, 8.64867, 0.74", "106.049, 122.747, 8.71409, 0.96", "106.796, 123.442, 8.87738, 0.22", "107.464, 124.103, 9.02094, 0.96", "107.823, 124.447, 9.08002, 0.74", "108.454, 125.013, 9.18685, 0.22", "109.084, 125.554, 9.29506, 0.29", "110.021, 126.338, 9.45115, 0.29", "110.674, 126.856, 9.54028, 0.29", "111.699, 127.649, 9.63289, 0.22", "112.21, 128.046, 9.66385, 0.66", "112.634, 128.397, 9.68291, 1.55", "112.902, 128.614, 9.6888, 1.55", "113.909, 129.393, 9.67689, 0.15", "114.697, 130.036, 9.65687, 0.15", "115.364, 130.624, 9.62386, 0.15", "115.928, 131.147, 9.55875, 0.15", "116.441, 131.65, 9.48702, 0.15", "116.838, 132.079, 9.43901, 0.88", "117.323, 132.652, 9.38685, 1.18", "117.897, 133.393, 9.33176, 1.18", "118.722, 134.469, 9.25618, 0.22", "119.601, 135.581, 9.18385, 0.22", "120.142, 136.301, 9.14307, 1.18", "120.402, 136.651, 9.12797, 1.92", "120.826, 137.236, 9.11786, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "41.3155, 55.6934, -1.92564, 0.44", "41.9593, 55.9039, -2.02612, 0.44", "42.6474, 56.1319, -2.12396, 0.44", "42.9928, 56.2253, -2.16798, 0.96", "43.7708, 56.3856, -2.2571, 1.7", "44.4623, 56.5109, -2.33437, 1.99", "45.5002, 56.6809, -2.461, 1.11", "46.1956, 56.7807, -2.56894, 0.37", "46.8301, 56.8692, -2.70618, 0.37", "47.6004, 56.9805, -2.91397, 0.37", "48.0758, 57.0637, -3.08206, 0.37", "48.5209, 57.1549, -3.27221, 0.44", "49.1576, 57.2959, -3.59119, 0.96", "49.9474, 57.4842, -4.03794, 1.62", "50.7364, 57.6887, -4.47509, 1.18", "51.7951, 57.9738, -5.0157, 0.29", "52.353, 58.1113, -5.26106, 0.44", "52.7785, 58.2051, -5.41249, 0.59", "53.4538, 58.3319, -5.60613, 0.29", "54.3783, 58.4967, -5.81061, 0.29", "55.448, 58.7031, -5.99146, 0.59", "56.1866, 58.8897, -6.08458, 1.03", "57.0727, 59.1806, -6.17524, 1.7", "57.9111, 59.5077, -6.24822, 1.7", "58.9194, 59.9178, -6.33013, 0.96", "59.5228, 60.1568, -6.39562, 1.33", "60.6553, 60.596, -6.5282, 1.62", "61.5525, 60.9515, -6.65524, 0.52", "62.2438, 61.2284, -6.76312, 0.22", "62.9819, 61.5288, -6.8887, 0.22", "63.9077, 61.9025, -7.07898, 0.22", "64.6069, 62.2113, -7.24619, 0.74", "65.234, 62.536, -7.41433, 1.33", "65.7786, 62.897, -7.573, 1.77", "66.5735, 63.5517, -7.81447, 0.44", "67.2982, 64.2664, -8.03192, 0.22", "67.8679, 64.8785, -8.19596, 0.66", "68.3171, 65.3483, -8.32565, 0.29", "68.7136, 65.7322, -8.4366, 0.29", "68.9685, 65.94, -8.50693, 0.22", "69.3242, 66.1772, -8.59327, 0.22", "69.859, 66.4679, -8.70499, 0.52", "70.5133, 66.7505, -8.84439, 0.88", "71.0873, 66.9586, -8.98693, 0.88", "71.7462, 67.1888, -9.16384, 0.22", "72.3357, 67.4117, -9.31405, 0.22", "72.6273, 67.5326, -9.38593, 0.52", "73.148, 67.7614, -9.51033, 1.4", "73.8457, 68.0607, -9.69235, 1.18", "74.9162, 68.5002, -9.99664, 0.22", "75.6855, 68.8203, -10.2505, 0.59", "76.253, 69.0537, -10.4461, 0.22", "76.8952, 69.3415, -10.6756, 0.88", "77.7115, 69.7632, -10.9704, 1.55", "78.0181, 69.9498, -11.0873, 1.55", "79.0329, 70.6782, -11.5193, 0.88", "79.5049, 71.0589, -11.7382, 0.44", "79.9338, 71.4307, -11.9386, 0.22", "80.3677, 71.7987, -12.1429, 0.22", "80.8245, 72.1774, -12.3555, 0.37", "81.327, 72.5659, -12.5861, 1.11", "81.982, 73.031, -12.8749, 1.18", "82.5942, 73.4512, -13.1345, 0.29", "83.4433, 74.0114, -13.4794, 0.22", "83.9139, 74.31, -13.6542, 0.22", "84.4007, 74.6192, -13.8083, 1.11", "84.7538, 74.8519, -13.8934, 1.18", "85.4797, 75.3662, -14.0013, 0.29", "86.1665, 75.8369, -14.0512, 0.29", "86.6047, 76.1143, -14.0618, 1.03", "87.2, 76.431, -14.0653, 1.92", "87.6163, 76.6252, -14.0849, 1.92", "88.9451, 77.1741, -14.2222, 0.15", "89.6374, 77.418, -14.3277, 0.15", "90.0467, 77.5542, -14.3956, 0.37", "90.6263, 77.7521, -14.4984, 1.11", "91.6023, 78.0889, -14.6701, 1.47", "92.5496, 78.3978, -14.8434, 0.44", "93.5481, 78.6997, -15.0324, 0.22", "94.3411, 78.9275, -15.1821, 0.74", "94.9767, 79.0746, -15.2951, 0.88", "96.0691, 79.1964, -15.5002, 0.22", "96.5791, 79.1742, -15.5972, 0.22", "97.075, 79.0685, -15.7129, 0.44", "97.5559, 78.905, -15.8444, 0.81", "98.1382, 78.6666, -16.0169, 1.03", "99.0838, 78.2845, -16.2994, 0.81", "99.8565, 77.9973, -16.5133, 0.22", "100.411, 77.8403, -16.6557, 0.22", "100.877, 77.7735, -16.77, 0.22", "101.784, 77.7776, -16.979, 0.37", "102.786, 77.9191, -17.2009, 0.22", "103.152, 78.0202, -17.2862, 0.96", "103.809, 78.2738, -17.4636, 1.84", "105.04, 78.8688, -17.8616, 0.22", "105.602, 79.204, -18.0787, 0.22", "105.828, 79.3794, -18.1798, 0.22", "106.228, 79.7789, -18.3697, 0.22", "106.594, 80.2092, -18.5423, 0.44", "107.095, 80.8265, -18.7535, 1.18", "107.534, 81.3409, -18.9112, 1.62", "107.989, 81.8134, -19.0475, 1.7", "108.722, 82.5412, -19.2105, 1.25", "109.689, 83.4253, -19.371, 0.29", "110.306, 83.9071, -19.4617, 1.03", "110.857, 84.2741, -19.5533, 1.47", "111.915, 84.8715, -19.7431, 0.22", "112.77, 85.2882, -19.9162, 0.88", "113.417, 85.5707, -20.0572, 0.44", "114.375, 85.9884, -20.2784, 0.22", "115.062, 86.3178, -20.4336, 0.22", "115.596, 86.6029, -20.5476, 1.03", "116.231, 86.9794, -20.6647, 1.47", "116.775, 87.3569, -20.7535, 1.25", "117.585, 88.035, -20.8771, 0.52", "118.457, 88.8727, -21.0109, 0.37", "118.908, 89.3221, -21.0956, 1.03", "119.165, 89.58, -21.1657, 1.4", "119.95, 90.3528, -21.4401, 0.96", "120.479, 90.8307, -21.6749, 0.81", "121.269, 91.4856, -22.0802, 0.22", "121.754, 91.8435, -22.3545, 0.22", "122.173, 92.1142, -22.581, 0.74", "122.493, 92.307, -22.7378, 0.81", "123.116, 92.6882, -22.999, 0.22", "123.423, 92.9013, -23.1092, 0.22", "123.872, 93.2569, -23.2718, 0.88", "124.557, 93.8651, -23.5077, 1.33", "125.105, 94.4209, -23.7055, 1.7", "125.78, 95.1932, -23.9581, 1.47", "126.495, 96.1107, -24.2355, 0.22", "126.916, 96.6917, -24.4032, 0.22", "127.378, 97.4229, -24.6, 0.29", "127.665, 97.9942, -24.7276, 0.15", "127.836, 98.4364, -24.8025, 0.15", "128.027, 99.1024, -24.8783, 0.59", "128.176, 99.7494, -24.9293, 0.37", "128.367, 100.624, -25.0133, 0.22", "128.573, 101.558, -25.1412, 0.22", "128.689, 102.017, -25.2211, 1.11", "128.936, 102.956, -25.4263, 0.22", "129.12, 103.655, -25.6091, 0.07", "129.284, 104.323, -25.7803, 0.07", "129.383, 104.729, -25.8664, 0.88", "129.457, 105.064, -25.9087, 1.11", "129.56, 105.76, -25.8998, 0.81", "129.62, 106.49, -25.7705, 0.37", "129.679, 107.505, -25.4558, 0.15", "129.727, 108.333, -25.1055, 0.15", "129.768, 109.035, -24.7352, 0.15", "129.825, 109.68, -24.3528, 0.59", "129.919, 110.592, -23.7455, 0.29", "129.972, 111.07, -23.386, 0.66", "130.047, 111.613, -22.9386, 1.47", "130.176, 112.45, -22.2118, 0.22", "130.279, 113.05, -21.6894, 0.15", "130.424, 113.692, -21.1384, 0.15", "130.539, 114.143, -20.7569, 0.44", "130.659, 114.566, -20.427, 0.44", "130.862, 115.214, -19.9485, 0.22", "130.951, 115.506, -19.7498, 0.15", "131.074, 116.121, -19.3335, 0.15", "131.102, 116.364, -19.1779, 0.15", "131.088, 116.733, -18.9452, 0.44", "131.046, 117.017, -18.7601, 0.44", "130.914, 117.84, -18.1956, 0.15", "130.848, 118.416, -17.782, 0.22", "130.817, 118.805, -17.4971, 0.29", "130.856, 119.444, -17.054, 0.29", "130.964, 119.949, -16.7457, 0.74", "131.19, 120.56, -16.429, 0.66", "131.464, 121.108, -16.1962, 1.55", "131.634, 121.409, -16.0949, 1.55", "132.219, 122.357, -15.8692, 0.15", "132.675, 123.04, -15.7563, 0.22", "133.123, 123.695, -15.6795, 0.22", "133.411, 124.109, -15.6494, 0.22", "133.818, 124.664, -15.6316, 0.37", "134.639, 125.737, -15.6305, 0.22", "135.363, 126.683, -15.6248, 0.15", "135.693, 127.122, -15.6025, 1.18", "136.082, 127.663, -15.5491, 2.21", "136.22, 127.864, -15.521, 2.21", "136.918, 129.025, -15.2911, 0.22", "137.347, 129.917, -15.0595, 0.22", "137.721, 130.906, -14.7845, 0.22", "137.826, 131.24, -14.6887, 0.66", "137.89, 131.489, -14.6218, 1.25", "138.074, 132.333, -14.4218, 1.62", "138.251, 133.375, -14.2168, 0.22", "138.414, 134.452, -14.0859, 0.22", "138.467, 134.875, -14.057, 0.37", "138.553, 135.509, -14.0338, 0.88", "138.615, 136.0, -14.0216, 0.88", "138.674, 136.711, -14.021, 0.22", "138.688, 137.526, -14.0135, 0.15", "138.664, 138.165, -13.9785, 0.15", "138.623, 138.485, -13.9969, 0.52", "138.506, 139.175, -14.078, 0.88", "138.352, 139.978, -14.2002, 0.22", "138.241, 140.543, -14.315, 0.22", "137.955, 141.911, -14.5969, 0.15", "137.538, 144.241, -15.0618, 0.22", "137.436, 144.965, -15.2017, 0.44", "137.375, 145.727, -15.3369, 0.22", "137.366, 146.531, -15.4551, 0.29", "137.398, 147.172, -15.5217, 0.22", "137.514, 148.252, -15.5575, 0.15", "137.606, 148.721, -15.4943, 0.15", "137.78, 149.551, -15.378, 0.15", "137.889, 149.994, -15.3097, 0.29", "138.019, 150.427, -15.224, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "22.6144, 69.434, 71.637, 0.07", "22.67, 70.1114, 71.7196, 0.07", "22.7411, 70.7321, 71.8302, 0.07", "22.9428, 71.8861, 72.1207, 0.07", "23.1578, 72.8385, 72.3711, 0.29", "23.3609, 73.5731, 72.5753, 0.07", "23.753, 74.7383, 72.9066, 0.07", "23.9875, 75.2971, 73.0848, 0.52", "24.6333, 76.6759, 73.5582, 1.03", "25.3641, 78.1538, 74.1152, 0.15", "25.6563, 78.7558, 74.3455, 0.15", "26.0015, 79.5176, 74.6223, 0.15", "26.2984, 80.2227, 74.8407, 0.15", "26.522, 80.8745, 75.0362, 0.07", "26.6598, 81.3993, 75.1974, 0.07", "26.8311, 82.0756, 75.4199, 0.44", "26.9312, 82.461, 75.559, 0.74", "27.0658, 82.8771, 75.7341, 0.74", "27.614, 84.1826, 76.3617, 0.15", "27.9978, 84.9497, 76.7586, 0.15", "28.5059, 85.8724, 77.2463, 0.37", "29.002, 86.7234, 77.7039, 1.7", "29.5514, 87.6634, 78.1856, 1.03", "30.3085, 88.9214, 78.8138, 0.15", "30.9979, 90.0073, 79.3674, 0.15", "31.2819, 90.4512, 79.5889, 0.66", "31.6481, 91.0095, 79.8765, 1.03", "32.2997, 91.933, 80.3415, 0.15", "33.1208, 93.0231, 80.8915, 0.15", "33.7153, 93.738, 81.2938, 0.15", "34.2185, 94.2976, 81.6225, 0.29", "34.7568, 94.8866, 81.9604, 0.29", "35.2299, 95.4592, 82.2506, 0.74", "35.7303, 96.1704, 82.5802, 0.81", "36.0306, 96.6833, 82.7909, 0.81", "36.741, 98.1638, 83.3313, 0.15", "37.0221, 98.9555, 83.6303, 0.74", "37.4352, 100.76, 84.3132, 0.15", "37.5066, 101.69, 84.6765, 0.15", "37.3957, 102.581, 85.0137, 0.15", "37.2064, 103.254, 85.2573, 0.29", "36.7126, 104.368, 85.6726, 0.15", "36.5234, 104.703, 85.7949, 0.52", "35.8004, 105.724, 86.205, 1.4", "34.3934, 107.489, 86.9567, 0.15", "33.988, 107.926, 87.1587, 0.15", "33.7763, 108.121, 87.2704, 0.15", "32.7996, 108.859, 87.8122, 0.81", "31.6786, 109.529, 88.4558, 0.15", "31.263, 109.707, 88.6995, 0.15", "30.6359, 109.91, 89.0567, 1.18", "28.8274, 110.437, 90.0532, 0.07", "27.6311, 110.755, 90.6728, 0.07", "27.0737, 110.901, 90.9368, 0.59", "26.5072, 111.077, 91.1758, 1.77", "24.6214, 111.715, 91.9039, 0.07", "23.7653, 112.019, 92.2155, 0.07", "23.2022, 112.215, 92.3897, 0.37", "22.6423, 112.419, 92.5373, 0.52", "21.3568, 112.868, 92.8735, 0.07", "20.1374, 113.296, 93.1649, 0.07", "19.6336, 113.46, 93.2664, 0.07", "19.2146, 113.583, 93.3479, 0.29", "18.2396, 113.819, 93.5445, 0.66", "17.0651, 114.006, 93.7964, 0.07", "16.1799, 114.097, 93.9837, 0.29", "15.3832, 114.168, 94.1561, 0.88", "13.7088, 114.341, 94.5723, 0.15", "12.8547, 114.438, 94.8171, 0.52", "11.0654, 114.648, 95.363, 0.07", "10.4899, 114.724, 95.5398, 0.59", "9.70498, 114.829, 95.7896, 1.47", "7.8602, 115.101, 96.3948, 0.07", "7.16507, 115.208, 96.6316, 0.07", "6.10927, 115.371, 96.9984, 0.07", "5.78536, 115.423, 97.1071, 0.37", "5.10588, 115.537, 97.3134, 0.81", "3.83861, 115.773, 97.6616, 0.07", "2.84286, 115.979, 97.8869, 0.07", "2.35007, 116.123, 97.9842, 0.44", "1.85064, 116.309, 98.0798, 0.88", "0.50983, 116.913, 98.3032, 0.15", "-0.186677, 117.282, 98.3956, 0.37", "-0.563211, 117.504, 98.4278, 0.37", "-2.11083, 118.414, 98.4894, 0.15", "-2.62061, 118.706, 98.5012, 0.15", "-3.38591, 119.153, 98.5038, 0.37", "-4.76572, 119.945, 98.47, 0.07", "-5.64755, 120.463, 98.4386, 0.29", "-6.44263, 120.941, 98.4145, 0.07", "-7.22494, 121.429, 98.3916, 0.07", "-8.89099, 122.493, 98.3383, 0.07", "-11.0946, 123.921, 98.2712, 0.07", "-11.799, 124.393, 98.2505, 0.07", "-12.8028, 125.087, 98.2355, 0.07", "-13.3992, 125.517, 98.2401, 0.59", "-14.3006, 126.161, 98.2505, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "22.6144, 69.434, 71.637, 0.37", "22.5652, 68.5806, 72.3744, 0.37", "22.5875, 68.0102, 72.8343, 0.37", "22.6369, 67.6186, 73.1404, 0.59", "22.764, 66.9282, 73.6092, 0.22", "22.8646, 66.4079, 73.9184, 0.22", "22.919, 66.0165, 74.12, 0.15", "22.9604, 65.6328, 74.3253, 0.15", "23.0023, 65.0951, 74.5723, 0.15", "23.0077, 64.5782, 74.7811, 0.59", "22.9653, 64.1933, 74.9093, 0.88", "22.7504, 63.218, 75.194, 0.15", "22.5249, 62.5263, 75.4151, 0.15", "22.3704, 62.1479, 75.5314, 0.44", "22.1982, 61.7939, 75.6359, 0.81", "21.9156, 61.2742, 75.7878, 0.07", "21.5574, 60.643, 75.9524, 0.22", "21.1762, 59.9836, 76.099, 0.22", "20.6443, 59.0571, 76.271, 0.07", "20.1971, 58.2973, 76.3952, 0.07", "19.778, 57.5744, 76.5037, 0.07", "19.5519, 57.1643, 76.5518, 0.29", "19.0123, 56.1642, 76.655, 0.07", "18.7655, 55.6938, 76.6902, 0.88", "18.4568, 55.1005, 76.7383, 1.25", "18.2644, 54.7096, 76.7677, 1.25", "17.6643, 53.4342, 76.8554, 0.07", "17.2713, 52.5893, 76.9059, 0.07", "17.0541, 52.1123, 76.9268, 0.07", "16.9262, 51.8323, 76.9374, 0.52", "16.58, 51.0855, 76.9558, 0.66", "16.3905, 50.7047, 76.9568, 0.22", "16.1335, 50.2092, 76.9442, 0.52", "15.9089, 49.8002, 76.9186, 0.29", "15.4637, 49.0451, 76.8668, 0.07", "15.0562, 48.4034, 76.8183, 0.07", "14.743, 47.9414, 76.7874, 0.22", "14.5161, 47.6264, 76.7683, 0.22", "13.8759, 46.7578, 76.7177, 0.07", "13.704, 46.5333, 76.7053, 0.37", "13.4999, 46.2747, 76.693, 0.59", "13.0131, 45.6771, 76.671, 0.07", "12.6124, 45.1955, 76.6601, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-19.0931, -106.246, 80.6521, 0.15", "-20.0981, -106.376, 81.4105, 0.15", "-21.0925, -106.485, 82.1339, 0.15", "-22.0157, -106.572, 82.7729, 0.15", "-22.9686, -106.656, 83.4184, 0.37", "-24.0253, -106.738, 84.1218, 0.15", "-25.0908, -106.81, 84.8229, 0.07", "-25.627, -106.846, 85.1794, 0.22", "-27.2734, -106.941, 86.1742, 0.15", "-27.3906, -106.943, 86.2413, 0.59", "-28.1337, -106.944, 86.668, 1.11", "-28.4699, -106.945, 86.861, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-19.0931, -106.246, 80.6521, 0.59", "-19.243, -107.138, 81.0267, 0.59", "-19.36, -107.785, 81.3131, 0.96", "-19.4858, -108.798, 81.7313, 1.47", "-19.5318, -109.481, 81.9798, 1.47", "-19.5532, -110.712, 82.3858, 0.22", "-19.5701, -111.172, 82.5515, 0.15", "-19.6135, -111.602, 82.7461, 0.15", "-19.7057, -112.33, 83.1221, 0.15", "-19.794, -112.945, 83.4617, 0.37", "-19.8865, -113.565, 83.8623, 0.37", "-20.0431, -114.655, 84.7027, 0.22", "-20.118, -115.276, 85.2449, 0.22", "-20.1564, -115.643, 85.5809, 0.96", "-20.2309, -116.557, 86.4605, 2.06", "-20.2702, -117.436, 87.3386, 1.11", "-20.2836, -118.608, 88.5283, 0.22", "-20.2465, -119.516, 89.4384, 0.22", "-20.2377, -119.92, 89.84, 0.22", "-20.243, -120.24, 90.1598, 0.22", "-20.2614, -120.513, 90.4415, 0.22", "-20.3457, -120.91, 90.8361, 0.22", "-20.5196, -121.336, 91.2536, 0.22", "-20.8504, -121.982, 91.8843, 0.22", "-21.1435, -122.555, 92.4073, 0.22", "-21.3297, -122.944, 92.7296, 0.66", "-21.6733, -123.768, 93.3554, 1.11", "-22.1391, -125.011, 94.2609, 0.29", "-22.5456, -126.094, 95.0395, 0.22", "-22.886, -126.998, 95.6934, 0.22", "-23.0612, -127.409, 95.9889, 0.29", "-23.5211, -128.429, 96.7106, 0.22", "-23.7324, -128.889, 97.0344, 0.96", "-24.1036, -129.668, 97.5806, 1.84", "-24.7439, -130.943, 98.4914, 0.29", "-25.2785, -131.925, 99.2607, 0.22", "-25.629, -132.558, 99.7886, 0.22", "-25.8436, -132.957, 100.127, 0.22", "-26.0229, -133.361, 100.447, 0.37", "-26.2598, -134.085, 100.955, 0.52", "-26.4768, -134.981, 101.461, 0.29", "-26.6168, -135.795, 101.861, 0.29", "-26.6972, -136.281, 102.064, 0.29", "-26.8408, -137.247, 102.429, 0.44", "-26.9694, -138.391, 102.827, 0.52", "-27.1077, -140.003, 103.334, 0.15", "-27.1616, -140.816, 103.573, 0.59", "-27.258, -142.138, 103.994, 1.7", "-27.4039, -143.743, 104.583, 0.15", "-27.4814, -144.489, 104.912, 0.44", "-27.5261, -144.996, 105.157, 0.44", "-27.581, -145.713, 105.545, 0.07", "-27.639, -146.33, 105.899, 0.07", "-27.7123, -146.788, 106.196, 0.07", "-27.8636, -147.4, 106.62, 0.29", "-28.1761, -148.398, 107.331, 0.52", "-28.4081, -149.107, 107.847, 0.22", "-28.6076, -149.701, 108.287, 0.22", "-28.8298, -150.353, 108.786, 0.37", "-29.0434, -150.97, 109.301, 0.74", "-29.3777, -151.831, 110.104, 1.33", "-29.7585, -152.652, 110.969, 0.22", "-30.0611, -153.224, 111.61, 0.15", "-30.3016, -153.648, 112.108, 0.29", "-30.629, -154.222, 112.801, 0.15", "-30.9042, -154.665, 113.348, 0.59", "-31.2017, -155.098, 113.936, 0.74", "-31.6715, -155.681, 114.778, 0.07", "-32.1184, -156.205, 115.565, 0.15", "-32.4392, -156.573, 116.124, 0.15", "-32.7058, -156.875, 116.577, 0.15", "-33.0233, -157.214, 117.076, 0.15", "-33.49, -157.688, 117.753, 0.29", "-33.8926, -158.055, 118.281, 0.74", "-34.5215, -158.593, 119.033, 1.03", "-35.1603, -159.136, 119.751, 0.29", "-36.0498, -159.913, 120.766, 0.22", "-36.6084, -160.413, 121.38, 0.88", "-37.2368, -160.963, 122.075, 1.33", "-37.7954, -161.428, 122.679, 1.47", "-38.8654, -162.27, 123.833, 0.22", "-39.427, -162.681, 124.433, 0.22", "-40.0732, -163.146, 125.145, 1.03", "-40.7663, -163.628, 125.903, 1.55", "-41.7597, -164.331, 126.999, 0.74", "-42.7045, -165.074, 128.111, 0.22", "-43.1779, -165.507, 128.689, 0.22", "-43.6084, -165.93, 129.208, 0.22", "-44.0924, -166.465, 129.821, 0.15", "-44.5202, -167.045, 130.388, 0.37", "-45.0109, -167.903, 131.118, 0.15", "-45.3165, -168.603, 131.626, 0.15", "-45.6555, -169.587, 132.291, 0.22", "-45.7954, -170.05, 132.586, 0.15", "-45.9813, -170.774, 133.034, 0.15", "-46.0654, -171.236, 133.311, 0.74", "-46.1227, -171.808, 133.639, 0.88", "-46.115, -173.031, 134.335, 0.15", "-46.0986, -173.502, 134.606, 0.22", "-46.1406, -174.034, 134.984, 0.22", "-46.3085, -174.859, 135.692, 0.22", "-46.3744, -175.082, 135.909, 0.22", "-46.5621, -175.566, 136.421, 0.88", "-46.9526, -176.292, 137.241, 1.84", "-47.6613, -177.299, 138.464, 0.15", "-48.1307, -177.875, 139.141, 0.15", "-48.5189, -178.291, 139.596, 0.29", "-49.0754, -178.931, 140.259, 0.74", "-49.5436, -179.533, 140.849, 1.11", "-49.9521, -180.15, 141.42, 0.52", "-50.487, -181.042, 142.231, 0.22", "-51.334, -182.369, 143.559, 0.29", "-51.9917, -183.374, 144.671, 0.15", "-52.3413, -183.909, 145.319, 0.37", "-52.7759, -184.561, 146.203, 1.18", "-53.3189, -185.424, 147.488, 0.44", "-53.7547, -186.112, 148.694, 0.29", "-54.0379, -186.577, 149.589, 0.15", "-54.2803, -186.928, 150.299, 0.88", "-54.6345, -187.438, 151.352, 1.03", "-55.0933, -188.131, 152.861, 0.22", "-55.4445, -188.79, 154.36, 0.22", "-55.588, -189.101, 155.099, 0.59", "-55.7498, -189.448, 155.967, 0.96", "-55.9794, -189.868, 157.18, 0.37", "-56.2884, -190.321, 158.803, 0.15", "-56.551, -190.577, 160.105, 0.59", "-56.7119, -190.687, 160.895, 1.77", "-57.118, -190.893, 162.895, 0.22", "-57.3623, -191.005, 164.165, 0.22", "-57.5581, -191.073, 165.076, 0.37", "-57.7877, -191.152, 165.949, 0.37", "-57.9828, -191.238, 166.624, 0.37", "-58.2315, -191.378, 167.545, 0.81", "-58.4059, -191.554, 168.365, 0.81", "-58.5968, -192.012, 169.694, 0.29", "-58.6318, -192.379, 170.511, 0.29", "-58.5359, -192.709, 171.115, 0.29", "-58.4226, -192.882, 171.409, 0.29", "-57.814, -193.523, 172.524, 0.29", "-57.5265, -193.784, 172.964, 0.44", "-56.9766, -194.273, 173.766, 0.44", "-56.2739, -194.946, 174.916, 0.81", "-55.7537, -195.507, 175.98, 0.81", "-55.4298, -195.941, 176.863, 0.81", "-55.3006, -196.181, 177.412, 0.22", "-55.0987, -196.72, 178.741, 0.22", "-55.0055, -197.311, 180.272, 0.22", "-55.0233, -197.845, 181.653, 0.81", "-55.111, -198.37, 182.931, 0.52", "-55.3635, -199.215, 184.782, 0.22", "-55.5281, -199.605, 185.545, 0.22", "-55.7152, -199.921, 186.07, 0.52", "-56.1885, -200.507, 186.867, 0.15", "-56.4799, -200.785, 187.171, 0.59", "-57.3707, -201.525, 187.814, 0.15", "-58.1071, -202.066, 188.128, 0.37", "-58.9748, -202.659, 188.398, 0.15", "-59.7958, -203.134, 188.58, 0.37", "-60.3641, -203.355, 188.633, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "120.826, 137.236, 9.11786, 0.96", "121.849, 138.208, 9.01774, 0.96", "122.55, 138.944, 8.9493, 1.25", "123.179, 139.68, 8.8884, 0.66", "123.56, 140.162, 8.85163, 0.22", "124.017, 140.756, 8.80758, 0.15", "124.312, 141.13, 8.779, 0.37", "124.908, 141.926, 8.72107, 0.15", "125.34, 142.476, 8.67878, 0.37", "125.675, 142.859, 8.64581, 0.88", "126.083, 143.27, 8.5799, 0.88", "127.029, 144.089, 8.32004, 0.22", "127.683, 144.612, 8.12743, 0.22", "128.353, 145.074, 7.91445, 0.22", "128.817, 145.359, 7.75405, 0.22", "129.807, 145.919, 7.37043, 1.25", "130.833, 146.46, 6.89154, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "120.826, 137.236, 9.11786, 0.29", "120.989, 138.425, 9.47463, 0.29", "121.168, 139.009, 9.59934, 0.22", "121.356, 139.49, 9.67212, 0.66", "121.661, 140.202, 9.749, 0.22", "121.978, 140.896, 9.80439, 0.15", "122.268, 141.544, 9.84604, 0.15", "122.656, 142.365, 9.84977, 0.15", "123.079, 143.232, 9.81083, 0.22", "123.473, 144.018, 9.74262, 0.29", "123.815, 144.67, 9.66436, 0.22", "124.197, 145.327, 9.56061, 0.29", "124.811, 146.195, 9.38869, 0.22", "125.408, 146.932, 9.22201, 0.66", "125.773, 147.351, 9.12398, 1.11", "126.231, 147.864, 8.99926, 1.18", "126.865, 148.581, 8.81487, 0.37", "127.555, 149.372, 8.61166, 0.37", "128.096, 150.076, 8.45621, 0.22", "128.55, 150.853, 8.34149, 0.22", "128.817, 151.443, 8.26835, 0.22", "128.998, 151.942, 8.22123, 0.59", "129.109, 152.307, 8.2049, 1.03", "129.333, 153.127, 8.20241, 1.18", "129.781, 154.672, 8.27892, 0.44", "129.991, 155.332, 8.32777, 0.88", "130.234, 156.075, 8.41026, 1.7", "130.52, 156.934, 8.53361, 2.29", "130.784, 157.704, 8.66138, 2.29", "130.989, 158.269, 8.7812, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "130.989, 158.269, 8.7812, 0.22", "132.246, 160.328, 8.66707, 0.22", "132.836, 161.295, 8.61348, 0.22", "133.46, 162.317, 8.5568, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "130.989, 158.269, 8.7812, 0.29", "132.192, 159.109, 8.67264, 0.29", "132.992, 159.667, 8.60053, 0.29", "133.798, 160.23, 8.52787, 0.29", "134.479, 160.705, 8.46641, 0.52", "135.173, 161.19, 8.40379, 0.52", "136.322, 161.992, 8.30018, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_35", "dend_35", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_BTC_459ef88946_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_35
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000018730548563)
    connect dend_35(0), soma_0(0.45000018730548563)
    connect dend_0(0), soma_0(0.45000018730548563)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.16881, -12.804, 0.0, 3.44428 ) }
    soma_0 { pt3dadd( 1.99522, -11.5105, 0.0, 5.75363 ) }
    soma_0 { pt3dadd( 1.82164, -10.2169, 0.0, 7.75663 ) }
    soma_0 { pt3dadd( 1.64805, -8.92341, 0.0, 8.89598 ) }
    soma_0 { pt3dadd( 1.47447, -7.62987, 0.0, 9.91596 ) }
    soma_0 { pt3dadd( 1.30088, -6.33633, 0.0, 10.9547 ) }
    soma_0 { pt3dadd( 1.1273, -5.04279, 0.0, 11.8384 ) }
    soma_0 { pt3dadd( 0.953711, -3.74926, 0.0, 12.6846 ) }
    soma_0 { pt3dadd( 0.780126, -2.45572, 0.0, 13.1367 ) }
    soma_0 { pt3dadd( 0.606541, -1.16218, 0.0, 13.4162 ) }
    soma_0 { pt3dadd( 0.432956, 0.13136, 0.0, 13.3909 ) }
    soma_0 { pt3dadd( 0.25937, 1.4249, 0.0, 13.2383 ) }
    soma_0 { pt3dadd( 0.085785, 2.71844, 0.0, 12.8868 ) }
    soma_0 { pt3dadd( -0.0878002, 4.01197, 0.0, 12.8103 ) }
    soma_0 { pt3dadd( -0.261385, 5.30551, 0.0, 12.9125 ) }
    soma_0 { pt3dadd( -0.434971, 6.59905, 0.0, 12.4763 ) }
    soma_0 { pt3dadd( -0.608556, 7.89259, 0.0, 11.6777 ) }
    soma_0 { pt3dadd( -0.782141, 9.18613, 0.0, 10.5994 ) }
    soma_0 { pt3dadd( -0.955726, 10.4797, 0.0, 9.19908 ) }
    soma_0 { pt3dadd( -1.12931, 11.7732, 0.0, 7.03753 ) }
    soma_0 { pt3dadd( -1.3029, 13.0667, 0.0, 4.1381 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.21969, -12.2915, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.21969, -12.2915, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.40326, -12.8847, -4.62417, 1.84 ) }
    dend_58 { pt3dadd( 3.79483, -14.15, -4.69704, 2.14 ) }
    dend_58 { pt3dadd( 4.04548, -14.9599, -4.7437, 1.92 ) }
    dend_58 { pt3dadd( 4.36419, -15.9898, -4.80301, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.219697, -12.74, -1.64, 2.43 ) }
    dend_35 { pt3dadd( 0.219697, -12.74, -1.64, 2.43 ) }
    dend_35 { pt3dadd( -0.247998, -13.8261, -1.78037, 1.92 ) }
    dend_35 { pt3dadd( -0.637182, -14.7298, -1.89718, 2.14 ) }
    dend_35 { pt3dadd( -0.878123, -15.2894, -1.9695, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.5397, 12.22, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.5397, 12.22, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.7539, 13.0028, -0.0486126, 2.36 ) }
    dend_0 { pt3dadd( 2.03981, 13.9712, -0.101917, 2.36 ) }
    dend_0 { pt3dadd( 2.5148, 15.5267, -0.178314, 2.29 ) }
    dend_0 { pt3dadd( 2.88039, 16.6798, -0.242034, 2.21 ) }
    dend_0 { pt3dadd( 3.2552, 17.8204, -0.308037, 2.29 ) }
    dend_0 { pt3dadd( 3.5842, 18.8029, -0.366943, 2.43 ) }
    dend_0 { pt3dadd( 3.96128, 19.8897, -0.436505, 2.36 ) }
    dend_0 { pt3dadd( 4.27805, 20.7394, -0.485208, 2.51 ) }
    dend_0 { pt3dadd( 4.61798, 21.5684, -0.5332, 3.17 ) }
    dend_0 { pt3dadd( 4.83873, 22.0785, -0.554997, 3.17 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.3029, 13.0667, 0.0, 0.475434 ) }
    axon_0 { pt3dadd( -3.29794, 27.9334, 0.0, 0.475434 ) }
    axon_0 { pt3dadd( -5.29297, 42.8002, 0.0, 0.475434 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.36419, -15.9898, -4.80301, 0.88 ) }
    dend_62 { pt3dadd( 3.77158, -15.9227, -5.32246, 0.88 ) }
    dend_62 { pt3dadd( 3.19277, -15.9175, -5.82019, 0.81 ) }
    dend_62 { pt3dadd( 2.61588, -15.9677, -6.32841, 0.81 ) }
    dend_62 { pt3dadd( 1.94947, -16.0813, -6.93305, 0.96 ) }
    dend_62 { pt3dadd( 1.31884, -16.2403, -7.52924, 1.4 ) }
    dend_62 { pt3dadd( 0.715869, -16.454, -8.14524, 1.77 ) }
    dend_62 { pt3dadd( 0.186374, -16.6839, -8.71735, 0.44 ) }
    dend_62 { pt3dadd( -0.270429, -16.9524, -9.23353, 0.44 ) }
    dend_62 { pt3dadd( -0.52748, -17.1617, -9.52184, 0.44 ) }
    dend_62 { pt3dadd( -0.729587, -17.4188, -9.78081, 0.66 ) }
    dend_62 { pt3dadd( -0.956366, -17.9263, -10.2059, 1.03 ) }
    dend_62 { pt3dadd( -5.41258, -18.4506, -15.8708, 1.03 ) }
    dend_62 { pt3dadd( -8.96777, -18.6582, -22.16, 1.03 ) }
    dend_62 { pt3dadd( -11.083, -17.9427, -29.0324, 1.03 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 62/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.36419, -15.9898, -4.80301, 1.11 ) }
    dend_59 { pt3dadd( 5.00233, -17.1581, -4.52051, 1.11 ) }
    dend_59 { pt3dadd( 5.53495, -18.2504, -4.22299, 1.25 ) }
    dend_59 { pt3dadd( 5.72805, -18.6946, -4.08823, 1.7 ) }
    dend_59 { pt3dadd( 6.0542, -19.5072, -3.83834, 1.77 ) }
    dend_59 { pt3dadd( 6.60942, -20.8984, -3.4124, 1.33 ) }
    dend_59 { pt3dadd( 7.0411, -21.981, -3.09265, 1.03 ) }
    dend_59 { pt3dadd( 7.34619, -22.8296, -2.82035, 1.03 ) }
    dend_59 { pt3dadd( 7.65247, -23.7052, -2.56669, 1.03 ) }
    dend_59 { pt3dadd( 7.9247, -24.4747, -2.38694, 1.33 ) }
    dend_59 { pt3dadd( 8.34497, -25.6475, -2.20059, 1.33 ) }
    dend_59 { pt3dadd( 8.76546, -26.7815, -2.13049, 0.74 ) }
    dend_59 { pt3dadd( 9.21659, -27.9674, -2.16989, 0.74 ) }
    dend_59 { pt3dadd( 9.70837, -29.1796, -2.25435, 0.88 ) }
    dend_59 { pt3dadd( 10.0863, -30.087, -2.33361, 1.33 ) }
    dend_59 { pt3dadd( 10.3731, -30.7802, -2.3617, 2.06 ) }
    dend_59 { pt3dadd( 10.9532, -32.229, -2.3574, 0.96 ) }
    dend_59 { pt3dadd( 11.4254, -33.3982, -2.27759, 0.74 ) }
    dend_59 { pt3dadd( 11.7746, -34.2524, -2.17027, 1.18 ) }
    dend_59 { pt3dadd( 11.9998, -34.8273, -2.04872, 1.55 ) }
    dend_59 { pt3dadd( 12.573, -36.305, -1.69366, 0.88 ) }
    dend_59 { pt3dadd( 12.9235, -37.1903, -1.50944, 0.81 ) }
    dend_59 { pt3dadd( 13.4271, -38.4108, -1.34109, 0.88 ) }
    dend_59 { pt3dadd( 13.7207, -39.1045, -1.30925, 1.4 ) }
    dend_59 { pt3dadd( 13.9857, -39.7321, -1.35022, 1.4 ) }
    dend_59 { pt3dadd( 14.395, -40.7108, -1.50617, 0.81 ) }
    dend_59 { pt3dadd( 14.8006, -41.6705, -1.7464, 0.88 ) }
    dend_59 { pt3dadd( 15.1353, -42.4341, -1.96795, 0.52 ) }
    dend_59 { pt3dadd( 15.3382, -42.8711, -2.10386, 0.96 ) }
    dend_59 { pt3dadd( 15.7001, -43.5994, -2.29337, 1.92 ) }
    dend_59 { pt3dadd( 16.1768, -44.5275, -2.4665, 0.74 ) }
    dend_59 { pt3dadd( 16.6403, -45.4033, -2.57894, 0.74 ) }
    dend_59 { pt3dadd( 17.1067, -46.2437, -2.6338, 0.96 ) }
    dend_59 { pt3dadd( 17.5791, -47.0168, -2.65995, 1.55 ) }
    dend_59 { pt3dadd( 18.4496, -48.2912, -2.69336, 0.81 ) }
    dend_59 { pt3dadd( 19.2088, -49.2987, -2.70754, 0.81 ) }
    dend_59 { pt3dadd( 19.9464, -50.2109, -2.7136, 1.25 ) }
    dend_59 { pt3dadd( 20.6783, -51.0901, -2.71338, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( 21.7375, -52.3994, -2.67352, 0.81 ) }
    dend_59 { pt3dadd( 22.616, -53.5694, -2.6047, 0.81 ) }
    dend_59 { pt3dadd( 23.1057, -54.2444, -2.55201, 1.18 ) }
    dend_59 { pt3dadd( 23.6649, -54.9866, -2.46471, 1.55 ) }
    dend_59 { pt3dadd( 24.2491, -55.7794, -2.34145, 1.55 ) }
    dend_59 { pt3dadd( 24.934, -56.8015, -2.16975, 0.59 ) }
    dend_59 { pt3dadd( 25.5448, -57.8794, -1.93874, 0.81 ) }
    dend_59 { pt3dadd( 25.9044, -58.6317, -1.73996, 1.33 ) }
    dend_59 { pt3dadd( 26.417, -59.8054, -1.41015, 0.37 ) }
    dend_59 { pt3dadd( 26.6693, -60.4831, -1.20073, 0.22 ) }
    dend_59 { pt3dadd( 30.8075, -67.7052, -0.534734, 0.22 ) }
    dend_59 { pt3dadd( 36.4567, -73.9095, -0.450283, 0.22 ) }
    dend_59 { pt3dadd( 41.9075, -80.065, 1.26454, 0.22 ) }
    dend_59 { pt3dadd( 46.2911, -86.6159, 4.12947, 0.22 ) }
    dend_59 { pt3dadd( 51.0978, -92.4073, 7.8958, 0.22 ) }
    dend_59 { pt3dadd( 55.5731, -99.0563, 10.349, 0.22 ) }
    dend_59 { pt3dadd( 60.2926, -105.891, 11.3804, 0.22 ) }
    dend_59 { pt3dadd( 65.2971, -112.601, 11.3991, 0.22 ) }
    dend_59 { pt3dadd( 70.0354, -119.372, 12.7462, 0.22 ) }
    dend_59 { pt3dadd( 74.4221, -126.442, 13.5432, 0.22 ) }
    dend_59 { pt3dadd( 78.642, -133.641, 13.351, 0.22 ) }
    dend_59 { pt3dadd( 82.943, -140.618, 11.7565, 0.22 ) }
    dend_59 { pt3dadd( 88.4451, -146.763, 10.2409, 0.22 ) }
    dend_59 { pt3dadd( 93.1538, -152.944, 7.1168, 0.22 ) }
    dend_59 { pt3dadd( 97.7534, -159.742, 5.54007, 0.22 ) }
    dend_59 { pt3dadd( 101.051, -167.325, 4.5925, 0.22 ) }
    dend_59 { pt3dadd( 104.668, -174.809, 5.22957, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_35 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -0.878123, -15.2894, -1.9695, 0.96 ) }
    dend_47 { pt3dadd( -2.26993, -16.2127, -1.53794, 0.96 ) }
    dend_47 { pt3dadd( -3.03329, -16.744, -1.31255, 0.96 ) }
    dend_47 { pt3dadd( -3.81643, -17.3172, -1.09278, 1.25 ) }
    dend_47 { pt3dadd( -4.23059, -17.6401, -0.982534, 1.25 ) }
    dend_47 { pt3dadd( -4.99756, -18.2604, -0.796477, 0.96 ) }
    dend_47 { pt3dadd( -5.73048, -18.8597, -0.637308, 0.96 ) }
    dend_47 { pt3dadd( -6.38203, -19.405, -0.511937, 1.47 ) }
    dend_47 { pt3dadd( -7.20914, -20.0384, -0.359879, 1.62 ) }
    dend_47 { pt3dadd( -8.23322, -20.7178, -0.160053, 0.96 ) }
    dend_47 { pt3dadd( -9.07654, -21.2035, 0.00395045, 0.96 ) }
    dend_47 { pt3dadd( -10.2714, -21.7866, 0.246139, 1.11 ) }
    dend_47 { pt3dadd( -11.1304, -22.1252, 0.430796, 1.4 ) }
    dend_47 { pt3dadd( -12.637, -22.5944, 0.765938, 1.33 ) }
    dend_47 { pt3dadd( -13.8887, -22.9074, 1.03304, 0.96 ) }
    dend_47 { pt3dadd( -15.177, -23.1985, 1.29471, 1.18 ) }
    dend_47 { pt3dadd( -15.8258, -23.3418, 1.42249, 1.18 ) }
    dend_47 { pt3dadd( -17.4862, -23.7374, 1.72678, 0.88 ) }
    dend_47 { pt3dadd( -18.4406, -24.0273, 1.87987, 0.88 ) }
    dend_47 { pt3dadd( -19.098, -24.2946, 1.95354, 1.03 ) }
    dend_47 { pt3dadd( -20.3105, -24.947, 2.06146, 1.25 ) }
    dend_47 { pt3dadd( -21.0802, -25.4523, 2.1289, 0.88 ) }
    dend_47 { pt3dadd( -21.8157, -26.0199, 2.1942, 0.88 ) }
    dend_47 { pt3dadd( -22.4679, -26.5826, 2.25665, 1.11 ) }
    dend_47 { pt3dadd( -23.2068, -27.2027, 2.32513, 1.25 ) }
    dend_47 { pt3dadd( -24.1915, -27.9704, 2.35883, 0.88 ) }
    dend_47 { pt3dadd( -24.9716, -28.5536, 2.29118, 1.03 ) }
    dend_47 { pt3dadd( -25.5582, -28.995, 2.15308, 1.4 ) }
    dend_47 { pt3dadd( -26.3193, -29.5585, 1.85246, 1.18 ) }
    dend_47 { pt3dadd( -27.3189, -30.2339, 1.29093, 1.25 ) }
    dend_47 { pt3dadd( -28.1327, -30.7792, 0.505432, 1.4 ) }
    dend_47 { pt3dadd( -27.8594, -30.8422, -0.737439, 1.4 ) }
    dend_47 { pt3dadd( -27.2143, -30.6507, -1.51811, 1.47 ) }
    dend_47 { pt3dadd( -25.7724, -30.1328, -2.80587, 0.52 ) }
    dend_47 { pt3dadd( -24.9259, -29.8282, -3.34938, 0.52 ) }
    dend_47 { pt3dadd( -23.9851, -29.4969, -3.80508, 0.59 ) }
    dend_47 { pt3dadd( -22.3169, -28.9651, -4.38734, 0.59 ) }
    dend_47 { pt3dadd( -21.2594, -28.6681, -4.64717, 0.66 ) }
    dend_47 { pt3dadd( -20.0867, -28.4157, -4.83167, 0.74 ) }
    dend_47 { pt3dadd( -18.4863, -28.1438, -5.00745, 0.59 ) }
    dend_47 { pt3dadd( -17.267, -28.0033, -5.10361, 0.88 ) }
    dend_47 { pt3dadd( -15.6022, -27.8902, -5.17821, 0.37 ) }
    dend_47 { pt3dadd( -14.7114, -27.8931, -5.19796, 0.37 ) }
    dend_47 { pt3dadd( -13.8225, -27.9688, -5.17449, 0.37 ) }
    dend_47 { pt3dadd( -21.77, -34.4426, -5.63863, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -0.878123, -15.2894, -1.9695, 1.4 ) }
    dend_36 { pt3dadd( -0.804795, -16.1233, -1.84067, 1.4 ) }
    dend_36 { pt3dadd( -0.721383, -16.9812, -1.72206, 1.03 ) }
    dend_36 { pt3dadd( -0.636266, -17.8153, -1.60719, 1.33 ) }
    dend_36 { pt3dadd( -0.539866, -18.7788, -1.46923, 1.25 ) }
    dend_36 { pt3dadd( -0.448152, -19.6542, -1.33172, 1.25 ) }
    dend_36 { pt3dadd( -0.361595, -20.4886, -1.18675, 1.11 ) }
    dend_36 { pt3dadd( -0.289838, -21.2911, -1.05507, 1.84 ) }
    dend_36 { pt3dadd( -0.240073, -21.8097, -0.978013, 1.62 ) }
    dend_36 { pt3dadd( -0.136892, -22.7998, -0.817562, 1.18 ) }
    dend_36 { pt3dadd( -0.0343899, -23.8495, -0.633651, 1.11 ) }
    dend_36 { pt3dadd( 0.0626157, -24.9054, -0.441832, 1.25 ) }
    dend_36 { pt3dadd( 0.120428, -25.6036, -0.320429, 1.55 ) }
    dend_36 { pt3dadd( 0.177145, -26.3631, -0.182751, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 4.83873, 22.0785, -0.554997, 2.88 ) }
    dend_10 { pt3dadd( 4.94384, 22.9827, -0.464359, 2.88 ) }
    dend_10 { pt3dadd( 5.07651, 24.124, -0.34995, 2.58 ) }
    dend_10 { pt3dadd( 5.22644, 25.4138, -0.22065, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.83873, 22.0785, -0.554997, 1.62 ) }
    dend_1 { pt3dadd( 6.12677, 21.5873, -1.20227, 1.62 ) }
    dend_1 { pt3dadd( 7.6424, 20.8411, -1.89359, 0.96 ) }
    dend_1 { pt3dadd( 8.64894, 20.2661, -2.31928, 0.96 ) }
    dend_1 { pt3dadd( 9.75766, 19.5442, -2.76675, 1.11 ) }
    dend_1 { pt3dadd( 10.3524, 19.1228, -2.99601, 1.25 ) }
    dend_1 { pt3dadd( 11.4792, 18.2423, -3.42927, 0.96 ) }
    dend_1 { pt3dadd( 12.819, 16.9832, -3.91111, 0.81 ) }
    dend_1 { pt3dadd( 13.5628, 16.242, -4.16865, 0.81 ) }
    dend_1 { pt3dadd( 14.2113, 15.6163, -4.39952, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 14.8184, 15.0625, -4.65783, 0.88 ) }
    dend_1 { pt3dadd( 15.8309, 14.2282, -5.14049, 0.74 ) }
    dend_1 { pt3dadd( 16.9152, 13.455, -5.69712, 0.59 ) }
    dend_1 { pt3dadd( 17.8755, 12.8581, -6.19318, 0.74 ) }
    dend_1 { pt3dadd( 18.5547, 12.4661, -6.53077, 0.66 ) }
    dend_1 { pt3dadd( 19.2769, 12.0548, -6.84407, 0.66 ) }
    dend_1 { pt3dadd( 20.3206, 11.4512, -7.23533, 0.96 ) }
    dend_1 { pt3dadd( 21.4078, 10.8314, -7.57385, 1.11 ) }
    dend_1 { pt3dadd( 22.757, 10.0006, -7.9348, 0.81 ) }
    dend_1 { pt3dadd( 23.8393, 9.2584, -8.19786, 0.81 ) }
    dend_1 { pt3dadd( 24.8815, 8.48872, -8.45504, 0.52 ) }
    dend_1 { pt3dadd( 25.5517, 7.94661, -8.65637, 0.52 ) }
    dend_1 { pt3dadd( 26.0398, 7.49855, -8.88364, 0.52 ) }
    dend_1 { pt3dadd( 26.6304, 6.86719, -9.33855, 0.74 ) }
    dend_1 { pt3dadd( 27.2721, 6.0853, -10.0727, 0.96 ) }
    dend_1 { pt3dadd( 27.6593, 5.5526, -10.634, 1.03 ) }
    dend_1 { pt3dadd( 28.1309, 4.85974, -11.4167, 0.81 ) }
    dend_1 { pt3dadd( 28.735, 4.02163, -12.3614, 0.52 ) }
    dend_1 { pt3dadd( 29.236, 3.27939, -13.1905, 0.88 ) }
    dend_1 { pt3dadd( 29.4881, 2.90931, -13.6124, 1.11 ) }
    dend_1 { pt3dadd( 30.0286, 2.17152, -14.4602, 0.81 ) }
    dend_1 { pt3dadd( 30.6219, 1.49639, -15.2014, 0.22 ) }
    dend_1 { pt3dadd( 31.4915, 0.743764, -15.9394, 0.15 ) }
    dend_1 { pt3dadd( 38.7376, -5.42023, -19.7558, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.29297, 42.8002, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -7.28801, 57.6669, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.28305, 72.5336, 0.0, 0.15 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -11.083, -17.9427, -29.0324, 0.15 ) }
    dend_66 { pt3dadd( -15.9658, -18.1977, -35.2407, 0.15 ) }
    dend_66 { pt3dadd( -21.2536, -17.9392, -41.1094, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 30/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -11.083, -17.9427, -29.0324, 0.59 ) }
    dend_63 { pt3dadd( -13.5087, -18.2252, -35.8342, 0.15 ) }
    dend_63 { pt3dadd( -15.9962, -17.8201, -42.6076, 0.15 ) }
    dend_63 { pt3dadd( -20.045, -16.6008, -48.4618, 0.15 ) }
    dend_63 { pt3dadd( -24.9652, -16.2181, -53.7407, 0.15 ) }
    dend_63 { pt3dadd( -29.0073, -16.3227, -59.7312, 0.15 ) }
    dend_63 { pt3dadd( -32.947, -17.7817, -65.6036, 0.15 ) }
    dend_63 { pt3dadd( -37.2307, -18.6793, -71.3522, 0.15 ) }
    dend_63 { pt3dadd( -41.2506, -20.1101, -77.1774, 0.15 ) }
    dend_63 { pt3dadd( -45.4844, -21.6141, -82.8295, 0.15 ) }
    dend_63 { pt3dadd( -50.6413, -22.0258, -87.8764, 0.15 ) }
    dend_63 { pt3dadd( -55.2936, -22.2962, -93.4006, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 104.668, -174.809, 5.22957, 0.15 ) }
    dend_61 { pt3dadd( 113.556, -186.215, 5.14548, 0.15 ) }
    dend_61 { pt3dadd( 120.56, -198.789, 5.89311, 0.15 ) }
    dend_61 { pt3dadd( 126.119, -211.834, 8.38112, 0.15 ) }
    dend_61 { pt3dadd( 131.224, -224.897, 11.637, 0.15 ) }
    dend_61 { pt3dadd( 137.691, -237.618, 13.6475, 0.15 ) }
    dend_61 { pt3dadd( 145.083, -249.603, 16.8947, 0.15 ) }
    dend_61 { pt3dadd( 154.162, -259.406, 22.6269, 0.15 ) }
    dend_61 { pt3dadd( 162.97, -270.674, 24.8686, 0.15 ) }
    dend_61 { pt3dadd( 170.647, -282.535, 27.9259, 0.15 ) }
    dend_61 { pt3dadd( 179.199, -294.164, 28.683, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 53/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 104.668, -174.809, 5.22957, 0.59 ) }
    dend_60 { pt3dadd( 108.391, -182.77, 6.22587, 0.15 ) }
    dend_60 { pt3dadd( 112.161, -190.716, 5.43678, 0.15 ) }
    dend_60 { pt3dadd( 115.226, -198.588, 2.91566, 0.15 ) }
    dend_60 { pt3dadd( 116.695, -206.922, 0.53923, 0.15 ) }
    dend_60 { pt3dadd( 119.703, -214.875, -1.78075, 0.15 ) }
    dend_60 { pt3dadd( 122.391, -223.051, -3.64788, 0.15 ) }
    dend_60 { pt3dadd( 126.623, -230.736, -4.74442, 0.15 ) }
    dend_60 { pt3dadd( 131.192, -238.164, -6.24584, 0.15 ) }
    dend_60 { pt3dadd( 134.424, -246.371, -6.40639, 0.15 ) }
    dend_60 { pt3dadd( 137.032, -254.726, -7.3802, 0.15 ) }
    dend_60 { pt3dadd( 140.421, -262.835, -8.14851, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 65/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -21.77, -34.4426, -5.63863, 0.15 ) }
    dend_53 { pt3dadd( -28.0895, -39.0042, -4.37654, 0.15 ) }
    dend_53 { pt3dadd( -33.7217, -44.3932, -3.30343, 0.15 ) }
    dend_53 { pt3dadd( -38.0511, -50.5079, -1.00278, 0.15 ) }
    dend_53 { pt3dadd( -42.7572, -56.6973, -0.016439, 0.15 ) }
    dend_53 { pt3dadd( -47.7739, -62.7298, 0.0616969, 0.15 ) }
    dend_53 { pt3dadd( -51.2116, -69.7178, 0.551744, 0.15 ) }
    dend_53 { pt3dadd( -54.9646, -76.5659, 0.711374, 0.15 ) }
    dend_53 { pt3dadd( -58.0997, -83.5905, 1.99711, 0.15 ) }
    dend_53 { pt3dadd( -61.576, -90.2347, 4.19587, 0.15 ) }
    dend_53 { pt3dadd( -64.526, -96.7357, 7.38231, 0.15 ) }
    dend_53 { pt3dadd( -66.8046, -103.767, 9.85987, 0.15 ) }
    dend_53 { pt3dadd( -69.967, -110.798, 11.0372, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 78/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -21.77, -34.4426, -5.63863, 0.59 ) }
    dend_48 { pt3dadd( -29.0325, -42.3741, -11.0748, 0.15 ) }
    dend_48 { pt3dadd( -35.2773, -50.6529, -17.1861, 0.15 ) }
    dend_48 { pt3dadd( -42.5599, -58.2301, -23.1045, 0.15 ) }
    dend_48 { pt3dadd( -48.3104, -65.9141, -30.4005, 0.15 ) }
    dend_48 { pt3dadd( -53.0767, -73.6662, -38.3026, 0.15 ) }
    dend_48 { pt3dadd( -58.4159, -82.1113, -45.002, 0.15 ) }
    dend_48 { pt3dadd( -62.0362, -91.0326, -52.1804, 0.15 ) }
    dend_48 { pt3dadd( -65.3128, -100.585, -58.6327, 0.15 ) }
    dend_48 { pt3dadd( -67.2805, -109.292, -66.6754, 0.15 ) }
    dend_48 { pt3dadd( -70.2455, -118.073, -74.319, 0.15 ) }
    dend_48 { pt3dadd( -73.1838, -125.904, -82.989, 0.15 ) }
    dend_48 { pt3dadd( -74.8898, -134.476, -91.2397, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 91/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.177145, -26.3631, -0.182751, 0.44 ) }
    dend_42 { pt3dadd( -0.712012, -27.8286, 0.685576, 0.44 ) }
    dend_42 { pt3dadd( -1.12324, -28.4407, 1.1078, 0.44 ) }
    dend_42 { pt3dadd( -1.67809, -29.2619, 1.82927, 0.44 ) }
    dend_42 { pt3dadd( -2.11276, -29.9734, 2.54637, 0.66 ) }
    dend_42 { pt3dadd( -2.4326, -30.6324, 3.17331, 0.66 ) }
    dend_42 { pt3dadd( -2.5995, -31.1034, 3.5683, 0.44 ) }
    dend_42 { pt3dadd( -2.75105, -31.7363, 4.1061, 0.52 ) }
    dend_42 { pt3dadd( -2.81446, -32.6595, 4.75491, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -2.72596, -33.674, 5.26692, 0.66 ) }
    dend_42 { pt3dadd( -2.53416, -34.8528, 5.74317, 0.88 ) }
    dend_42 { pt3dadd( -2.31489, -36.0644, 6.15008, 1.11 ) }
    dend_42 { pt3dadd( -2.12456, -37.2098, 6.46522, 0.74 ) }
    dend_42 { pt3dadd( -2.01393, -38.0624, 6.60512, 0.29 ) }
    dend_42 { pt3dadd( -1.95207, -38.9367, 6.64557, 0.22 ) }
    dend_42 { pt3dadd( -1.94455, -39.4563, 6.63002, 0.22 ) }
    dend_42 { pt3dadd( -1.99023, -40.1396, 6.58825, 0.22 ) }
    dend_42 { pt3dadd( -2.06327, -40.7835, 6.52913, 0.22 ) }
    dend_42 { pt3dadd( -2.22356, -42.1668, 6.3906, 0.29 ) }
    dend_42 { pt3dadd( -2.30835, -43.2384, 6.29263, 0.52 ) }
    dend_42 { pt3dadd( -2.32485, -43.9959, 6.23198, 0.52 ) }
    dend_42 { pt3dadd( -2.26251, -45.036, 6.16732, 0.44 ) }
    dend_42 { pt3dadd( -2.05499, -46.577, 6.11493, 0.29 ) }
    dend_42 { pt3dadd( -1.91604, -47.3293, 6.11513, 0.66 ) }
    dend_42 { pt3dadd( -1.80013, -47.8566, 6.16147, 1.77 ) }
    dend_42 { pt3dadd( -1.57925, -48.8114, 6.31092, 1.18 ) }
    dend_42 { pt3dadd( -1.34655, -50.029, 6.57799, 0.52 ) }
    dend_42 { pt3dadd( -1.17434, -51.1626, 6.8832, 0.52 ) }
    dend_42 { pt3dadd( -1.08118, -51.896, 7.11148, 0.81 ) }
    dend_42 { pt3dadd( -0.916422, -52.9924, 7.46617, 0.96 ) }
    dend_42 { pt3dadd( -0.742035, -53.9487, 7.80188, 0.52 ) }
    dend_42 { pt3dadd( -0.480508, -55.2421, 8.32145, 0.22 ) }
    dend_42 { pt3dadd( -0.342573, -55.8483, 8.59854, 0.29 ) }
    dend_42 { pt3dadd( -0.138446, -56.6424, 9.00888, 0.29 ) }
    dend_42 { pt3dadd( 0.147738, -57.7731, 9.61029, 0.22 ) }
    dend_42 { pt3dadd( 0.337873, -58.5132, 10.0204, 0.37 ) }
    dend_42 { pt3dadd( 0.523285, -59.2772, 10.4523, 0.74 ) }
    dend_42 { pt3dadd( 0.662813, -60.0108, 10.8632, 1.03 ) }
    dend_42 { pt3dadd( 0.731792, -60.8413, 11.2923, 1.25 ) }
    dend_42 { pt3dadd( 0.700267, -62.4676, 12.0646, 0.37 ) }
    dend_42 { pt3dadd( 0.625174, -63.4142, 12.4993, 1.18 ) }
    dend_42 { pt3dadd( 0.554147, -64.2885, 12.872, 2.65 ) }
    dend_42 { pt3dadd( 0.480342, -65.7156, 13.4283, 2.21 ) }
    dend_42 { pt3dadd( 0.467415, -67.0976, 13.9389, 0.96 ) }
    dend_42 { pt3dadd( 0.516464, -68.2388, 14.3393, 0.29 ) }
    dend_42 { pt3dadd( 0.586093, -69.0474, 14.6265, 0.29 ) }
    dend_42 { pt3dadd( 0.648212, -69.802, 14.8918, 0.66 ) }
    dend_42 { pt3dadd( 0.705561, -70.7039, 15.2498, 0.44 ) }
    dend_42 { pt3dadd( 0.748605, -71.5058, 15.5944, 0.22 ) }
    dend_42 { pt3dadd( 0.772196, -71.9081, 15.7804, 0.22 ) }
    dend_42 { pt3dadd( 0.787744, -72.3978, 15.9917, 0.22 ) }
    dend_42 { pt3dadd( 0.762892, -73.3963, 16.3742, 0.29 ) }
    dend_42 { pt3dadd( 0.732145, -74.151, 16.6388, 0.29 ) }
    dend_42 { pt3dadd( 0.727538, -74.6689, 16.8006, 0.22 ) }
    dend_42 { pt3dadd( 0.738294, -75.2663, 16.9558, 0.22 ) }
    dend_42 { pt3dadd( 0.786603, -75.7905, 17.0821, 0.81 ) }
    dend_42 { pt3dadd( 0.87905, -76.2855, 17.1905, 1.55 ) }
    dend_42 { pt3dadd( 1.16816, -77.3546, 17.4314, 1.84 ) }
    dend_42 { pt3dadd( 1.67409, -78.9557, 17.7896, 0.15 ) }
    dend_42 { pt3dadd( 1.82503, -79.459, 17.9141, 0.15 ) }
    dend_42 { pt3dadd( 1.94941, -79.8793, 18.0224, 0.15 ) }
    dend_42 { pt3dadd( 2.08456, -80.388, 18.155, 0.15 ) }
    dend_42 { pt3dadd( 2.26567, -81.1419, 18.3474, 0.88 ) }
    dend_42 { pt3dadd( 2.409, -81.7684, 18.4992, 1.92 ) }
    dend_42 { pt3dadd( 2.71719, -83.0119, 18.7593, 1.99 ) }
    dend_42 { pt3dadd( 2.80405, -83.3301, 18.8193, 1.99 ) }
    dend_42 { pt3dadd( 3.17948, -84.8004, 19.0518, 0.15 ) }
    dend_42 { pt3dadd( 3.27268, -85.2076, 19.1006, 0.15 ) }
    dend_42 { pt3dadd( 3.35618, -85.627, 19.1301, 0.37 ) }
    dend_42 { pt3dadd( 3.42136, -86.0537, 19.1447, 0.37 ) }
    dend_42 { pt3dadd( 3.55173, -87.0657, 19.1724, 0.15 ) }
    dend_42 { pt3dadd( 3.60915, -87.6943, 19.2018, 0.15 ) }
    dend_42 { pt3dadd( 3.67358, -88.4343, 19.2522, 0.22 ) }
    dend_42 { pt3dadd( 3.69922, -88.8659, 19.2982, 0.22 ) }
    dend_42 { pt3dadd( 3.70262, -89.6459, 19.4017, 0.15 ) }
    dend_42 { pt3dadd( 3.67758, -90.2426, 19.4921, 0.15 ) }
    dend_42 { pt3dadd( 3.64703, -90.7147, 19.572, 0.59 ) }
    dend_42 { pt3dadd( 3.63955, -91.2158, 19.6673, 1.03 ) }
    dend_42 { pt3dadd( 3.67853, -91.9903, 19.8051, 0.22 ) }
    dend_42 { pt3dadd( 3.76297, -92.805, 19.9549, 0.07 ) }
    dend_42 { pt3dadd( 3.84004, -93.3272, 20.062, 0.07 ) }
    dend_42 { pt3dadd( 3.90237, -93.656, 20.1402, 0.66 ) }
    dend_42 { pt3dadd( 4.10312, -94.5125, 20.397, 0.96 ) }
    dend_42 { pt3dadd( 4.5479, -96.0566, 20.9227, 0.22 ) }
    dend_42 { pt3dadd( 4.848, -96.8928, 21.2494, 0.22 ) }
    dend_42 { pt3dadd( 5.07786, -97.4326, 21.5045, 0.44 ) }
    dend_42 { pt3dadd( 5.35744, -98.0412, 21.822, 1.25 ) }
    dend_42 { pt3dadd( 5.62537, -98.5713, 22.1102, 1.92 ) }
    dend_42 { pt3dadd( 6.0268, -99.2368, 22.4995, 1.11 ) }
    dend_42 { pt3dadd( 6.46863, -99.8693, 22.9083, 0.22 ) }
    dend_42 { pt3dadd( 6.81985, -100.366, 23.2124, 0.22 ) }
    dend_42 { pt3dadd( 7.20314, -100.953, 23.5378, 0.52 ) }
    dend_42 { pt3dadd( 7.64618, -101.769, 23.9464, 0.22 ) }
    dend_42 { pt3dadd( 8.02937, -102.656, 24.3834, 0.22 ) }
    dend_42 { pt3dadd( 8.27893, -103.373, 24.7453, 0.22 ) }
    dend_42 { pt3dadd( 8.38017, -103.739, 24.9285, 0.81 ) }
    dend_42 { pt3dadd( 8.58257, -104.607, 25.3766, 1.77 ) }
    dend_42 { pt3dadd( 8.90682, -106.258, 26.2764, 0.37 ) }
    dend_42 { pt3dadd( 9.06667, -107.123, 26.7602, 0.15 ) }
    dend_42 { pt3dadd( 9.13785, -107.521, 26.9741, 0.15 ) }
    dend_42 { pt3dadd( 9.23447, -108.016, 27.2286, 0.37 ) }
    dend_42 { pt3dadd( 9.36348, -108.62, 27.539, 1.18 ) }
    dend_42 { pt3dadd( 9.53428, -109.332, 27.8997, 1.55 ) }
    dend_42 { pt3dadd( 9.815, -110.426, 28.402, 0.81 ) }
    dend_42 { pt3dadd( 9.99111, -111.195, 28.705, 0.15 ) }
    dend_42 { pt3dadd( 10.0824, -111.691, 28.8888, 0.22 ) }
    dend_42 { pt3dadd( 10.2094, -112.439, 29.1511, 0.15 ) }
    dend_42 { pt3dadd( 10.3103, -113.127, 29.379, 0.96 ) }
    dend_42 { pt3dadd( 10.4236, -113.889, 29.6286, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 10.6113, -115.063, 30.001, 0.22 ) }
    dend_42 { pt3dadd( 10.7235, -115.614, 30.1737, 0.22 ) }
    dend_42 { pt3dadd( 10.8963, -116.307, 30.3938, 0.37 ) }
    dend_42 { pt3dadd( 10.9536, -116.499, 30.4523, 0.37 ) }
    dend_42 { pt3dadd( 11.1874, -117.197, 30.6662, 0.22 ) }
    dend_42 { pt3dadd( 11.3122, -117.519, 30.7754, 0.22 ) }
    dend_42 { pt3dadd( 11.583, -118.07, 30.9513, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.177145, -26.3631, -0.182751, 1.84 ) }
    dend_37 { pt3dadd( 0.0321865, -27.483, -0.658873, 1.84 ) }
    dend_37 { pt3dadd( -0.082404, -28.8264, -1.17744, 1.55 ) }
    dend_37 { pt3dadd( -0.152124, -30.2761, -1.68005, 1.55 ) }
    dend_37 { pt3dadd( -0.216067, -31.7913, -2.14856, 1.55 ) }
    dend_37 { pt3dadd( -0.289401, -33.2956, -2.55384, 1.47 ) }
    dend_37 { pt3dadd( -0.365344, -34.6133, -2.87649, 0.96 ) }
    dend_37 { pt3dadd( -0.435006, -35.664, -3.08479, 1.55 ) }
    dend_37 { pt3dadd( -0.599604, -37.5488, -3.35326, 1.25 ) }
    dend_37 { pt3dadd( -0.798657, -39.496, -3.57115, 1.47 ) }
    dend_37 { pt3dadd( -1.03738, -41.5032, -3.74745, 1.03 ) }
    dend_37 { pt3dadd( -1.23779, -42.8594, -3.84951, 1.18 ) }
    dend_37 { pt3dadd( -1.57665, -44.7727, -3.96257, 1.99 ) }
    dend_37 { pt3dadd( -1.93135, -46.3967, -4.03965, 1.92 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.22644, 25.4138, -0.22065, 2.14 ) }
    dend_20 { pt3dadd( 6.17756, 26.5782, -0.0147434, 2.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.22644, 25.4138, -0.22065, 1.47 ) }
    dend_11 { pt3dadd( 5.28219, 26.4103, 0.859833, 1.47 ) }
    dend_11 { pt3dadd( 5.25319, 27.0067, 1.5455, 1.18 ) }
    dend_11 { pt3dadd( 5.14486, 27.5506, 2.24381, 1.18 ) }
    dend_11 { pt3dadd( 4.93441, 28.1045, 3.06677, 1.47 ) }
    dend_11 { pt3dadd( 4.6719, 28.502, 3.77832, 1.47 ) }
    dend_11 { pt3dadd( 4.49059, 28.6462, 4.1338, 1.47 ) }
    dend_11 { pt3dadd( 3.93738, 28.7132, 4.80532, 1.47 ) }
    dend_11 { pt3dadd( 3.1129, 28.5339, 5.48414, 1.03 ) }
    dend_11 { pt3dadd( 2.58692, 28.3177, 5.80541, 1.62 ) }
    dend_11 { pt3dadd( 2.08926, 28.0473, 6.05281, 1.77 ) }
    dend_11 { pt3dadd( 1.44547, 27.6124, 6.33857, 1.77 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 38.7376, -5.42023, -19.7558, 0.15 ) }
    dend_7 { pt3dadd( 45.1899, -10.5976, -23.2252, 0.15 ) }
    dend_7 { pt3dadd( 52.0507, -15.1891, -26.778, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 38.7376, -5.42023, -19.7558, 0.59 ) }
    dend_2 { pt3dadd( 47.0996, -12.339, -24.8867, 0.15 ) }
    dend_2 { pt3dadd( 54.0724, -20.6403, -29.9357, 0.15 ) }
    dend_2 { pt3dadd( 58.9502, -30.1338, -35.2271, 0.15 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -21.2536, -17.9392, -41.1094, 0.15 ) }
    dend_68 { pt3dadd( -29.3596, -14.018, -46.3324, 0.15 ) }
    dend_68 { pt3dadd( -35.4177, -9.0391, -53.1386, 0.15 ) }
    dend_68 { pt3dadd( -39.8407, -2.59958, -59.9111, 0.15 ) }
    dend_68 { pt3dadd( -45.731, 3.19065, -66.1738, 0.15 ) }
    dend_68 { pt3dadd( -52.2784, 8.06048, -72.6026, 0.15 ) }
    dend_68 { pt3dadd( -58.4223, 12.5703, -79.6674, 0.15 ) }
    dend_68 { pt3dadd( -63.3502, 17.9293, -87.0506, 0.15 ) }
    dend_68 { pt3dadd( -68.3307, 24.114, -93.6886, 0.15 ) }
    dend_68 { pt3dadd( -72.3221, 29.0956, -101.863, 0.15 ) }
    dend_68 { pt3dadd( -77.8815, 33.2986, -109.575, 0.15 ) }
    dend_68 { pt3dadd( -84.8437, 38.5372, -115.224, 0.15 ) }
    dend_68 { pt3dadd( -91.8514, 43.2818, -121.256, 0.15 ) }
    dend_68 { pt3dadd( -98.196, 49.4435, -126.652, 0.15 ) }
    dend_68 { pt3dadd( -105.665, 55.0213, -131.22, 0.15 ) }
    dend_68 { pt3dadd( -114.125, 60.3661, -134.022, 0.15 ) }
    dend_68 { pt3dadd( -122.091, 66.9191, -135.068, 0.15 ) }
    dend_68 { pt3dadd( -130.003, 73.246, -137.285, 0.15 ) }
    dend_68 { pt3dadd( -138.664, 78.9669, -137.715, 0.15 ) }
    dend_68 { pt3dadd( -147.191, 84.8805, -138.143, 0.15 ) }
    dend_68 { pt3dadd( -155.078, 91.1493, -140.604, 0.15 ) }
    dend_68 { pt3dadd( -162.368, 98.0985, -142.993, 0.15 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -21.2536, -17.9392, -41.1094, 0.59 ) }
    dend_67 { pt3dadd( -24.4688, -21.2706, -49.6859, 0.15 ) }
    dend_67 { pt3dadd( -28.6094, -23.6224, -58.2058, 0.15 ) }
    dend_67 { pt3dadd( -32.0074, -26.8872, -66.7382, 0.15 ) }
    dend_67 { pt3dadd( -35.0379, -30.1481, -75.4103, 0.15 ) }
    dend_67 { pt3dadd( -37.4457, -32.7073, -84.5158, 0.15 ) }
    dend_67 { pt3dadd( -40.4071, -36.0473, -93.1802, 0.15 ) }
    dend_67 { pt3dadd( -42.3067, -39.3421, -102.157, 0.15 ) }
    dend_67 { pt3dadd( -44.9855, -42.2632, -111.07, 0.15 ) }
    dend_67 { pt3dadd( -46.2173, -47.2975, -119.284, 0.15 ) }
    dend_67 { pt3dadd( -46.3049, -52.7873, -127.284, 0.15 ) }
    dend_67 { pt3dadd( -46.2949, -58.4566, -135.152, 0.15 ) }
    dend_67 { pt3dadd( -47.5577, -64.2169, -142.843, 0.15 ) }
    dend_67 { pt3dadd( -47.4248, -70.9406, -149.783, 0.15 ) }
    dend_67 { pt3dadd( -48.6901, -78.5308, -155.565, 0.15 ) }
    dend_67 { pt3dadd( -51.4218, -85.6629, -161.444, 0.15 ) }
    dend_67 { pt3dadd( -53.9656, -92.3838, -167.891, 0.15 ) }
    dend_67 { pt3dadd( -55.1108, -98.3262, -175.454, 0.15 ) }
    dend_67 { pt3dadd( -56.2682, -104.269, -183.015, 0.15 ) }
    dend_67 { pt3dadd( -56.0574, -111.949, -188.817, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 84/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -55.2936, -22.2962, -93.4006, 0.15 ) }
    dend_65 { pt3dadd( -59.6478, -23.08, -98.7501, 0.15 ) }
    dend_65 { pt3dadd( -64.5304, -23.9544, -103.607, 0.15 ) }
    dend_65 { pt3dadd( -70.0235, -24.6365, -107.798, 0.15 ) }
    dend_65 { pt3dadd( -74.7903, -24.2248, -112.825, 0.15 ) }
    dend_65 { pt3dadd( -79.8572, -23.0865, -117.416, 0.15 ) }
    dend_65 { pt3dadd( -85.4641, -23.4862, -121.488, 0.15 ) }
    dend_65 { pt3dadd( -91.1616, -24.4255, -125.343, 0.15 ) }
    dend_65 { pt3dadd( -96.17, -26.1018, -129.844, 0.15 ) }
    dend_65 { pt3dadd( -100.842, -29.0159, -134.045, 0.15 ) }
    dend_65 { pt3dadd( -105.363, -32.086, -138.295, 0.15 ) }
    dend_65 { pt3dadd( -109.325, -36.5149, -141.791, 0.15 ) }
    dend_65 { pt3dadd( -112.9, -40.7562, -145.882, 0.15 ) }
    dend_65 { pt3dadd( -116.26, -45.0207, -150.123, 0.15 ) }
    dend_65 { pt3dadd( -119.437, -50.114, -153.462, 0.15 ) }
    dend_65 { pt3dadd( -122.169, -55.9397, -155.803, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_65 { pt3dadd( -125.18, -61.4035, -158.653, 0.15 ) }
    dend_65 { pt3dadd( -127.017, -67.5434, -160.996, 0.15 ) }
    dend_65 { pt3dadd( -128.102, -73.3379, -164.423, 0.15 ) }
    dend_65 { pt3dadd( -128.046, -79.6699, -166.868, 0.15 ) }
    dend_65 { pt3dadd( -129.372, -85.9022, -169.279, 0.15 ) }
    dend_65 { pt3dadd( -131.196, -92.31, -170.739, 0.15 ) }
    dend_65 { pt3dadd( -132.466, -98.5774, -173.084, 0.15 ) }
    dend_65 { pt3dadd( -134.788, -104.45, -175.708, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 8/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -55.2936, -22.2962, -93.4006, 0.59 ) }
    dend_64 { pt3dadd( -60.2646, -21.7477, -102.528, 0.15 ) }
    dend_64 { pt3dadd( -64.7163, -21.3084, -111.925, 0.15 ) }
    dend_64 { pt3dadd( -69.739, -22.0604, -121.006, 0.15 ) }
    dend_64 { pt3dadd( -73.5697, -23.7844, -130.512, 0.15 ) }
    dend_64 { pt3dadd( -77.1304, -24.2519, -140.274, 0.15 ) }
    dend_64 { pt3dadd( -78.6232, -25.0128, -150.526, 0.15 ) }
    dend_64 { pt3dadd( -81.8236, -24.4958, -160.414, 0.15 ) }
    dend_64 { pt3dadd( -85.6961, -23.9353, -170.058, 0.15 ) }
    dend_64 { pt3dadd( -89.5578, -23.937, -179.72, 0.15 ) }
    dend_64 { pt3dadd( -91.4753, -24.4825, -189.92, 0.15 ) }
    dend_64 { pt3dadd( -93.0754, -27.1412, -199.806, 0.15 ) }
    dend_64 { pt3dadd( -94.5378, -28.3921, -210.008, 0.15 ) }
    dend_64 { pt3dadd( -95.4285, -28.8143, -220.35, 0.15 ) }
    dend_64 { pt3dadd( -96.4092, -29.1345, -230.689, 0.15 ) }
    dend_64 { pt3dadd( -96.7567, -28.408, -241.056, 0.15 ) }
    dend_64 { pt3dadd( -98.8, -27.3969, -251.209, 0.15 ) }
    dend_64 { pt3dadd( -102.123, -26.2637, -261.006, 0.15 ) }
    dend_64 { pt3dadd( -103.356, -25.814, -271.322, 0.15 ) }
    dend_64 { pt3dadd( -105.33, -26.8432, -281.469, 0.15 ) }
    dend_64 { pt3dadd( -108.439, -28.7566, -291.192, 0.15 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 29/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -69.967, -110.798, 11.0372, 0.15 ) }
    dend_57 { pt3dadd( -75.9047, -120.601, 13.0987, 0.15 ) }
    dend_57 { pt3dadd( -80.3515, -131.039, 15.6016, 0.15 ) }
    dend_57 { pt3dadd( -84.1452, -141.881, 17.1953, 0.15 ) }
    dend_57 { pt3dadd( -87.6807, -152.324, 20.8765, 0.15 ) }
    dend_57 { pt3dadd( -90.73, -162.83, 24.7954, 0.15 ) }
    dend_57 { pt3dadd( -91.9651, -174.0, 27.6153, 0.15 ) }
    dend_57 { pt3dadd( -93.9925, -185.376, 28.1473, 0.15 ) }
    dend_57 { pt3dadd( -97.3892, -196.381, 26.9594, 0.15 ) }
    dend_57 { pt3dadd( -102.11, -206.648, 24.3053, 0.15 ) }
    dend_57 { pt3dadd( -106.86, -215.952, 19.1652, 0.15 ) }
    dend_57 { pt3dadd( -112.59, -224.209, 13.2092, 0.15 ) }
    dend_57 { pt3dadd( -118.647, -232.286, 7.31713, 0.15 ) }
    dend_57 { pt3dadd( -126.006, -239.404, 1.60364, 0.15 ) }
    dend_57 { pt3dadd( -133.403, -244.496, -6.01859, 0.15 ) }
    dend_57 { pt3dadd( -140.741, -249.479, -13.7731, 0.15 ) }
    dend_57 { pt3dadd( -146.042, -255.391, -22.4409, 0.15 ) }
    dend_57 { pt3dadd( -149.909, -262.257, -31.124, 0.15 ) }
    dend_57 { pt3dadd( -153.77, -268.953, -39.9473, 0.15 ) }
    dend_57 { pt3dadd( -159.328, -275.409, -48.0259, 0.15 ) }
    dend_57 { pt3dadd( -165.633, -280.96, -56.2646, 0.15 ) }
    dend_57 { pt3dadd( -173.526, -286.059, -63.3685, 0.15 ) }
    dend_57 { pt3dadd( -181.721, -290.965, -70.2712, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -69.967, -110.798, 11.0372, 0.59 ) }
    dend_54 { pt3dadd( -74.9708, -118.804, 12.8341, 0.15 ) }
    dend_54 { pt3dadd( -79.926, -126.96, 13.9328, 0.15 ) }
    dend_54 { pt3dadd( -85.8168, -134.013, 16.872, 0.15 ) }
    dend_54 { pt3dadd( -91.3982, -141.253, 19.9306, 0.15 ) }
    dend_54 { pt3dadd( -97.5567, -147.862, 23.364, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -74.8898, -134.476, -91.2397, 0.15 ) }
    dend_50 { pt3dadd( -77.2432, -141.637, -96.3852, 0.15 ) }
    dend_50 { pt3dadd( -80.7481, -149.015, -100.419, 0.15 ) }
    dend_50 { pt3dadd( -83.6543, -155.994, -105.542, 0.15 ) }
    dend_50 { pt3dadd( -87.3467, -163.638, -108.808, 0.15 ) }
    dend_50 { pt3dadd( -91.4042, -171.578, -110.498, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -74.8898, -134.476, -91.2397, 0.59 ) }
    dend_49 { pt3dadd( -80.9104, -141.41, -97.567, 0.15 ) }
    dend_49 { pt3dadd( -86.7467, -148.469, -103.92, 0.15 ) }
    dend_49 { pt3dadd( -90.8277, -157.42, -109.009, 0.15 ) }
    dend_49 { pt3dadd( -93.2608, -167.406, -113.003, 0.15 ) }
    dend_49 { pt3dadd( -93.3693, -177.6, -117.129, 0.15 ) }
    dend_49 { pt3dadd( -92.3658, -187.781, -121.146, 0.15 ) }
    dend_49 { pt3dadd( -90.1773, -197.522, -125.76, 0.15 ) }
    dend_49 { pt3dadd( -88.5009, -208.072, -128.29, 0.15 ) }
    dend_49 { pt3dadd( -85.8657, -217.852, -132.568, 0.15 ) }
    dend_49 { pt3dadd( -85.2902, -227.836, -137.147, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 11.583, -118.07, 30.9513, 0.22 ) }
    dend_46 { pt3dadd( 11.3092, -118.597, 30.9213, 0.22 ) }
    dend_46 { pt3dadd( 10.943, -119.302, 30.8812, 0.22 ) }
    dend_46 { pt3dadd( 10.625, -119.915, 30.8463, 0.22 ) }
    dend_46 { pt3dadd( 10.0578, -121.008, 30.7841, 0.22 ) }
    dend_46 { pt3dadd( 9.80182, -121.501, 30.7561, 0.15 ) }
    dend_46 { pt3dadd( 9.54654, -121.992, 30.7281, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 11.583, -118.07, 30.9513, 1.18 ) }
    dend_43 { pt3dadd( 11.8953, -119.243, 31.5376, 1.18 ) }
    dend_43 { pt3dadd( 12.2334, -120.6, 32.1601, 0.29 ) }
    dend_43 { pt3dadd( 12.5163, -121.848, 32.7212, 0.15 ) }
    dend_43 { pt3dadd( 12.6613, -122.559, 33.0322, 0.15 ) }
    dend_43 { pt3dadd( 12.7889, -123.259, 33.3279, 0.29 ) }
    dend_43 { pt3dadd( 12.9297, -124.255, 33.746, 0.66 ) }
    dend_43 { pt3dadd( 13.0163, -125.288, 34.1721, 1.4 ) }
    dend_43 { pt3dadd( 13.001, -126.818, 34.7661, 0.22 ) }
    dend_43 { pt3dadd( 12.9235, -127.881, 35.1581, 0.22 ) }
    dend_43 { pt3dadd( 12.8729, -128.346, 35.3213, 0.22 ) }
    dend_43 { pt3dadd( 12.7507, -129.337, 35.6339, 0.22 ) }
    dend_43 { pt3dadd( 12.6317, -130.192, 35.8789, 0.66 ) }
    dend_43 { pt3dadd( 12.4537, -131.26, 36.1546, 0.15 ) }
    dend_43 { pt3dadd( 12.2561, -132.164, 36.3704, 0.15 ) }
    dend_43 { pt3dadd( 11.9779, -133.266, 36.6284, 0.52 ) }
    dend_43 { pt3dadd( 11.6237, -134.63, 36.9594, 0.29 ) }
    dend_43 { pt3dadd( 11.4842, -135.172, 37.0944, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 11.3415, -135.721, 37.2432, 0.15 ) }
    dend_43 { pt3dadd( 11.0657, -136.727, 37.5049, 0.15 ) }
    dend_43 { pt3dadd( 10.8636, -137.406, 37.672, 0.29 ) }
    dend_43 { pt3dadd( 10.5925, -138.335, 37.914, 1.11 ) }
    dend_43 { pt3dadd( 10.3436, -139.281, 38.1754, 1.77 ) }
    dend_43 { pt3dadd( 10.0691, -140.596, 38.5493, 1.77 ) }
    dend_43 { pt3dadd( 9.84631, -141.972, 38.9558, 1.33 ) }
    dend_43 { pt3dadd( 9.5921, -143.885, 39.5223, 0.15 ) }
    dend_43 { pt3dadd( 9.44397, -145.16, 39.9175, 0.22 ) }
    dend_43 { pt3dadd( 9.34407, -146.076, 40.2129, 0.66 ) }
    dend_43 { pt3dadd( 9.25305, -146.959, 40.5079, 0.81 ) }
    dend_43 { pt3dadd( 9.11851, -148.601, 41.077, 0.15 ) }
    dend_43 { pt3dadd( 9.10292, -149.567, 41.4293, 0.22 ) }
    dend_43 { pt3dadd( 9.16407, -150.381, 41.7411, 0.22 ) }
    dend_43 { pt3dadd( 9.28788, -151.426, 42.1321, 0.22 ) }
    dend_43 { pt3dadd( 9.37652, -152.038, 42.3535, 0.66 ) }
    dend_43 { pt3dadd( 9.61954, -153.238, 42.7832, 1.4 ) }
    dend_43 { pt3dadd( 10.0976, -154.926, 43.4296, 0.88 ) }
    dend_43 { pt3dadd( 10.4266, -155.979, 43.8468, 0.15 ) }
    dend_43 { pt3dadd( 10.7545, -156.989, 44.242, 0.15 ) }
    dend_43 { pt3dadd( 11.0036, -157.722, 44.5252, 0.22 ) }
    dend_43 { pt3dadd( 11.3845, -158.87, 44.9775, 0.29 ) }
    dend_43 { pt3dadd( 11.6445, -159.769, 45.3207, 0.15 ) }
    dend_43 { pt3dadd( 11.8776, -161.007, 45.7481, 0.15 ) }
    dend_43 { pt3dadd( 11.914, -161.437, 45.8876, 0.15 ) }
    dend_43 { pt3dadd( 11.928, -162.341, 46.1933, 0.22 ) }
    dend_43 { pt3dadd( 11.8608, -163.654, 46.6437, 0.22 ) }
    dend_43 { pt3dadd( 11.8053, -164.222, 46.838, 0.22 ) }
    dend_43 { pt3dadd( 11.6875, -165.417, 47.2378, 0.37 ) }
    dend_43 { pt3dadd( 11.601, -166.637, 47.6633, 0.22 ) }
    dend_43 { pt3dadd( 11.5641, -167.458, 47.9421, 0.88 ) }
    dend_43 { pt3dadd( 11.5556, -169.289, 48.5416, 2.06 ) }
    dend_43 { pt3dadd( 11.6488, -171.43, 49.1373, 0.59 ) }
    dend_43 { pt3dadd( 11.7925, -172.882, 49.4564, 0.22 ) }
    dend_43 { pt3dadd( 11.9445, -173.84, 49.5997, 0.22 ) }
    dend_43 { pt3dadd( 12.0991, -174.689, 49.6925, 0.22 ) }
    dend_43 { pt3dadd( 12.3271, -175.857, 49.7672, 0.59 ) }
    dend_43 { pt3dadd( 12.7046, -177.513, 49.7609, 0.07 ) }
    dend_43 { pt3dadd( 12.9803, -178.516, 49.6386, 0.15 ) }
    dend_43 { pt3dadd( 13.3336, -179.705, 49.3819, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.93135, -46.3967, -4.03965, 0.74 ) }
    dend_39 { pt3dadd( -1.93279, -48.2992, -4.40672, 0.74 ) }
    dend_39 { pt3dadd( -1.92686, -49.9937, -4.76189, 0.74 ) }
    dend_39 { pt3dadd( -1.94702, -50.9517, -4.97709, 0.81 ) }
    dend_39 { pt3dadd( -2.03167, -52.5312, -5.37306, 0.88 ) }
    dend_39 { pt3dadd( -2.10593, -53.5458, -5.64021, 0.81 ) }
    dend_39 { pt3dadd( -2.23092, -54.8557, -6.00771, 1.18 ) }
    dend_39 { pt3dadd( -2.34519, -55.8291, -6.31739, 1.18 ) }
    dend_39 { pt3dadd( -2.5551, -57.0206, -6.73561, 1.03 ) }
    dend_39 { pt3dadd( -2.82282, -58.2844, -7.2205, 1.11 ) }
    dend_39 { pt3dadd( -3.07836, -59.2717, -7.62646, 0.74 ) }
    dend_39 { pt3dadd( -3.43137, -60.3812, -8.0995, 1.11 ) }
    dend_39 { pt3dadd( -3.7655, -61.3246, -8.49874, 0.81 ) }
    dend_39 { pt3dadd( -4.17233, -62.4366, -8.94879, 0.81 ) }
    dend_39 { pt3dadd( -4.29956, -62.8427, -9.08966, 0.81 ) }
    dend_39 { pt3dadd( -4.50627, -63.7004, -9.32587, 0.88 ) }
    dend_39 { pt3dadd( -4.67853, -64.6508, -9.50724, 0.88 ) }
    dend_39 { pt3dadd( -4.89058, -66.2211, -9.68637, 1.11 ) }
    dend_39 { pt3dadd( -4.98292, -66.97, -9.71844, 1.33 ) }
    dend_39 { pt3dadd( -5.24725, -68.7796, -9.65759, 0.74 ) }
    dend_39 { pt3dadd( -5.39021, -69.8532, -9.59015, 0.74 ) }
    dend_39 { pt3dadd( -5.55205, -71.4324, -9.43359, 0.88 ) }
    dend_39 { pt3dadd( -5.63214, -72.3616, -9.29938, 1.25 ) }
    dend_39 { pt3dadd( -5.73581, -73.3195, -9.12366, 1.03 ) }
    dend_39 { pt3dadd( -5.98368, -74.5969, -8.84184, 0.74 ) }
    dend_39 { pt3dadd( -6.23807, -84.7925, -9.07382, 0.74 ) }
    dend_39 { pt3dadd( -7.83487, -94.8524, -8.40282, 0.74 ) }
    dend_39 { pt3dadd( -9.29227, -104.882, -7.17147, 0.74 ) }
    dend_39 { pt3dadd( -11.2266, -114.443, -4.08147, 0.74 ) }
    dend_39 { pt3dadd( -12.2249, -124.078, -0.794621, 0.74 ) }
    dend_39 { pt3dadd( -14.1792, -133.391, 2.99907, 0.74 ) }
    dend_39 { pt3dadd( -17.203, -142.981, 4.88716, 0.74 ) }
    dend_39 { pt3dadd( -18.1199, -152.921, 7.05066, 0.74 ) }
    dend_39 { pt3dadd( -18.644, -162.783, 9.6719, 0.74 ) }
    dend_39 { pt3dadd( -19.1551, -172.702, 12.062, 0.74 ) }
    dend_39 { pt3dadd( -19.5228, -182.646, 14.3625, 0.74 ) }
    dend_39 { pt3dadd( -20.9051, -192.271, 17.539, 0.74 ) }
    dend_39 { pt3dadd( -24.5657, -201.234, 20.937, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.93135, -46.3967, -4.03965, 1.03 ) }
    dend_38 { pt3dadd( -2.08097, -47.6642, -3.35598, 1.03 ) }
    dend_38 { pt3dadd( -2.29449, -49.5407, -2.44747, 1.03 ) }
    dend_38 { pt3dadd( -2.44021, -50.9912, -1.88578, 1.03 ) }
    dend_38 { pt3dadd( -2.58755, -53.1379, -1.1868, 1.03 ) }
    dend_38 { pt3dadd( -2.6307, -54.9515, -0.683756, 0.96 ) }
    dend_38 { pt3dadd( -2.6025, -56.2368, -0.347403, 0.96 ) }
    dend_38 { pt3dadd( -2.51257, -57.3175, -0.107104, 0.96 ) }
    dend_38 { pt3dadd( -2.03576, -60.2595, 0.464497, 0.88 ) }
    dend_38 { pt3dadd( -1.5824, -62.0016, 0.795894, 0.88 ) }
    dend_38 { pt3dadd( -0.726083, -64.2631, 1.29767, 0.88 ) }
    dend_38 { pt3dadd( 0.399426, -66.4973, 1.9101, 0.81 ) }
    dend_38 { pt3dadd( 1.34585, -68.0061, 2.43044, 0.81 ) }
    dend_38 { pt3dadd( 2.11264, -69.0281, 2.88016, 0.81 ) }
    dend_38 { pt3dadd( 3.28245, -70.3405, 3.5949, 0.88 ) }
    dend_38 { pt3dadd( 4.48069, -71.6923, 4.39627, 1.03 ) }
    dend_38 { pt3dadd( 5.24839, -72.6931, 4.98243, 1.03 ) }
    dend_38 { pt3dadd( 6.14987, -74.2263, 5.77445, 0.81 ) }
    dend_38 { pt3dadd( 6.73509, -75.6584, 6.39215, 1.4 ) }
    dend_38 { pt3dadd( 6.98922, -76.5532, 6.71772, 1.92 ) }
    dend_38 { pt3dadd( 7.4574, -78.9405, 7.37862, 1.4 ) }
    dend_38 { pt3dadd( 7.91872, -81.7548, 7.92226, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 8.22695, -83.7324, 8.18292, 0.88 ) }
    dend_38 { pt3dadd( 8.55944, -85.7952, 8.34938, 1.03 ) }
    dend_38 { pt3dadd( 8.77523, -86.9446, 8.40275, 1.03 ) }
    dend_38 { pt3dadd( 9.18965, -88.8173, 8.43957, 0.81 ) }
    dend_38 { pt3dadd( 9.65025, -90.5445, 8.39802, 1.18 ) }
    dend_38 { pt3dadd( 9.78544, -91.0664, 8.36441, 1.18 ) }
    dend_38 { pt3dadd( 9.96586, -92.0873, 8.28033, 0.74 ) }
    dend_38 { pt3dadd( 9.97162, -93.4136, 8.17908, 0.44 ) }
    dend_38 { pt3dadd( 9.84392, -94.2015, 8.13096, 0.44 ) }
    dend_38 { pt3dadd( 9.50184, -95.3575, 8.0817, 0.66 ) }
    dend_38 { pt3dadd( 8.95387, -96.8913, 8.01756, 0.81 ) }
    dend_38 { pt3dadd( 8.44885, -98.2793, 7.95659, 0.96 ) }
    dend_38 { pt3dadd( 7.67433, -100.451, 7.85873, 1.33 ) }
    dend_38 { pt3dadd( 7.1849, -101.887, 7.7936, 0.88 ) }
    dend_38 { pt3dadd( 6.7412, -103.297, 7.75326, 1.11 ) }
    dend_38 { pt3dadd( 6.26129, -104.949, 7.76197, 1.18 ) }
    dend_38 { pt3dadd( 5.82401, -106.519, 7.81511, 1.18 ) }
    dend_38 { pt3dadd( 5.21257, -108.71, 7.93545, 0.52 ) }
    dend_38 { pt3dadd( 4.59335, -110.984, 8.13702, 0.52 ) }
    dend_38 { pt3dadd( 4.13398, -112.679, 8.31616, 0.74 ) }
    dend_38 { pt3dadd( 3.71466, -114.258, 8.50398, 0.96 ) }
    dend_38 { pt3dadd( 3.34481, -115.735, 8.66968, 1.62 ) }
    dend_38 { pt3dadd( 3.00566, -117.211, 8.80864, 1.62 ) }
    dend_38 { pt3dadd( 2.63542, -119.056, 8.93339, 1.33 ) }
    dend_38 { pt3dadd( 2.39319, -120.572, 8.98237, 0.44 ) }
    dend_38 { pt3dadd( 2.24299, -121.473, 8.96125, 0.59 ) }
    dend_38 { pt3dadd( 1.87758, -123.157, 8.86676, 0.59 ) }
    dend_38 { pt3dadd( 1.36494, -124.963, 8.74457, 0.88 ) }
    dend_38 { pt3dadd( 0.864186, -126.352, 8.63669, 1.25 ) }
    dend_38 { pt3dadd( 0.495181, -127.196, 8.57508, 2.21 ) }
    dend_38 { pt3dadd( -0.464931, -129.162, 8.48461, 1.84 ) }
    dend_38 { pt3dadd( -1.6205, -131.381, 8.4455, 1.33 ) }
    dend_38 { pt3dadd( -2.71451, -133.41, 8.50354, 0.66 ) }
    dend_38 { pt3dadd( -3.25913, -134.476, 8.5644, 0.44 ) }
    dend_38 { pt3dadd( -3.80358, -135.625, 8.64862, 0.44 ) }
    dend_38 { pt3dadd( -4.32821, -136.854, 8.75163, 0.81 ) }
    dend_38 { pt3dadd( -4.85745, -138.422, 8.88635, 1.11 ) }
    dend_38 { pt3dadd( -5.2971, -140.173, 9.01116, 0.74 ) }
    dend_38 { pt3dadd( -5.68574, -142.07, 9.12564, 0.37 ) }
    dend_38 { pt3dadd( -5.96233, -143.532, 9.18069, 0.37 ) }
    dend_38 { pt3dadd( -6.14769, -144.456, 9.20374, 0.74 ) }
    dend_38 { pt3dadd( -6.46652, -145.854, 9.23399, 0.88 ) }
    dend_38 { pt3dadd( -6.99945, -147.898, 9.30333, 0.44 ) }
    dend_38 { pt3dadd( -7.30971, -148.843, 9.36821, 0.44 ) }
    dend_38 { pt3dadd( -7.70028, -149.747, 9.50603, 0.59 ) }
    dend_38 { pt3dadd( -8.25678, -150.741, 9.73559, 0.96 ) }
    dend_38 { pt3dadd( -8.79799, -151.545, 9.9847, 1.25 ) }
    dend_38 { pt3dadd( -9.4265, -152.381, 10.3208, 1.25 ) }
    dend_38 { pt3dadd( -10.1776, -153.381, 10.7939, 0.81 ) }
    dend_38 { pt3dadd( -10.6607, -154.18, 11.1787, 1.11 ) }
    dend_38 { pt3dadd( -11.1767, -155.571, 11.7302, 0.22 ) }
    dend_38 { pt3dadd( -11.2907, -156.215, 11.898, 0.22 ) }
    dend_38 { pt3dadd( -11.3844, -157.238, 12.0971, 0.22 ) }
    dend_38 { pt3dadd( -11.4537, -158.163, 12.2239, 0.74 ) }
    dend_38 { pt3dadd( -11.5345, -159.093, 12.3227, 1.18 ) }
    dend_38 { pt3dadd( -11.7882, -161.213, 12.531, 0.66 ) }
    dend_38 { pt3dadd( -12.1041, -163.042, 12.7316, 0.37 ) }
    dend_38 { pt3dadd( -12.5834, -164.642, 12.9219, 0.66 ) }
    dend_38 { pt3dadd( -13.1117, -165.975, 13.1307, 0.66 ) }
    dend_38 { pt3dadd( -13.5685, -166.989, 13.346, 1.25 ) }
    dend_38 { pt3dadd( -14.0277, -167.947, 13.623, 2.06 ) }
    dend_38 { pt3dadd( -14.7023, -169.354, 14.1509, 2.21 ) }
    dend_38 { pt3dadd( -15.8755, -171.986, 15.2641, 1.03 ) }
    dend_38 { pt3dadd( -16.4757, -173.495, 15.9093, 0.59 ) }
    dend_38 { pt3dadd( -16.9969, -175.07, 16.5177, 0.37 ) }
    dend_38 { pt3dadd( -17.316, -176.241, 16.9393, 0.66 ) }
    dend_38 { pt3dadd( -17.619, -177.662, 17.4241, 0.37 ) }
    dend_38 { pt3dadd( -17.8452, -179.204, 17.9548, 0.29 ) }
    dend_38 { pt3dadd( -17.9232, -180.209, 18.2896, 0.52 ) }
    dend_38 { pt3dadd( -18.0757, -181.956, 18.8494, 0.22 ) }
    dend_38 { pt3dadd( -18.1582, -182.846, 19.2266, 0.22 ) }
    dend_38 { pt3dadd( -18.2354, -183.812, 19.7974, 0.29 ) }
    dend_38 { pt3dadd( -18.2934, -184.694, 20.5269, 0.96 ) }
    dend_38 { pt3dadd( -18.3563, -185.543, 21.3649, 1.77 ) }
    dend_38 { pt3dadd( -18.4179, -186.38, 22.1911, 1.77 ) }
    dend_38 { pt3dadd( -18.5263, -188.331, 23.9059, 0.29 ) }
    dend_38 { pt3dadd( -18.5399, -189.191, 24.4831, 0.29 ) }
    dend_38 { pt3dadd( -18.5419, -189.953, 24.84, 0.29 ) }
    dend_38 { pt3dadd( -18.5286, -191.124, 25.1788, 0.29 ) }
    dend_38 { pt3dadd( -18.5369, -192.67, 25.4063, 0.29 ) }
    dend_38 { pt3dadd( -18.6247, -194.484, 25.4544, 0.29 ) }
    dend_38 { pt3dadd( -18.7254, -195.379, 25.4056, 0.29 ) }
    dend_38 { pt3dadd( -18.985, -196.703, 25.299, 0.29 ) }
    dend_38 { pt3dadd( -19.4288, -198.25, 25.1912, 0.29 ) }
    dend_38 { pt3dadd( -20.0133, -199.857, 25.15, 0.29 ) }
    dend_38 { pt3dadd( -20.4287, -200.86, 25.1598, 1.03 ) }
    dend_38 { pt3dadd( -20.9601, -202.029, 25.2047, 1.92 ) }
    dend_38 { pt3dadd( -21.8745, -203.994, 25.318, 3.02 ) }
    dend_38 { pt3dadd( -22.8995, -206.197, 25.4984, 2.36 ) }
    dend_38 { pt3dadd( -24.0692, -208.732, 25.7653, 0.22 ) }
    dend_38 { pt3dadd( -24.4818, -209.672, 25.893, 0.22 ) }
    dend_38 { pt3dadd( -24.9924, -210.944, 26.1056, 0.22 ) }
    dend_38 { pt3dadd( -25.1958, -211.511, 26.213, 0.52 ) }
    dend_38 { pt3dadd( -25.4869, -212.44, 26.4248, 0.96 ) }
    dend_38 { pt3dadd( -25.8811, -213.811, 26.7499, 0.44 ) }
    dend_38 { pt3dadd( -26.3538, -215.522, 27.1388, 0.22 ) }
    dend_38 { pt3dadd( -26.6455, -216.622, 27.373, 0.37 ) }
    dend_38 { pt3dadd( -26.9715, -217.915, 27.6272, 0.81 ) }
    dend_38 { pt3dadd( -27.2723, -219.046, 27.8307, 0.96 ) }
    dend_38 { pt3dadd( -27.7166, -220.582, 28.0494, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -28.1456, -222.051, 28.1959, 0.66 ) }
    dend_38 { pt3dadd( -28.3273, -222.741, 28.2373, 0.22 ) }
    dend_38 { pt3dadd( -28.6642, -224.253, 28.3, 0.22 ) }
    dend_38 { pt3dadd( -28.787, -224.97, 28.3375, 0.44 ) }
    dend_38 { pt3dadd( -29.0389, -226.809, 28.4703, 0.22 ) }
    dend_38 { pt3dadd( -29.1624, -228.087, 28.6238, 0.22 ) }
    dend_38 { pt3dadd( -29.2833, -229.624, 28.8823, 0.29 ) }
    dend_38 { pt3dadd( -29.3956, -230.89, 29.1179, 0.52 ) }
    dend_38 { pt3dadd( -29.515, -232.203, 29.3658, 0.52 ) }
    dend_38 { pt3dadd( -29.6773, -233.592, 29.6218, 0.52 ) }
    dend_38 { pt3dadd( -29.8827, -234.904, 29.8501, 1.18 ) }
    dend_38 { pt3dadd( -30.133, -236.115, 30.0345, 2.43 ) }
    dend_38 { pt3dadd( -30.65, -238.19, 30.3183, 1.33 ) }
    dend_38 { pt3dadd( -31.1026, -239.869, 30.5091, 0.59 ) }
    dend_38 { pt3dadd( -31.4787, -241.239, 30.6381, 0.81 ) }
    dend_38 { pt3dadd( -31.8, -242.424, 30.7386, 0.15 ) }
    dend_38 { pt3dadd( -32.0149, -243.212, 30.7974, 0.15 ) }
    dend_38 { pt3dadd( -32.1097, -243.609, 30.8341, 0.15 ) }
    dend_38 { pt3dadd( -32.2286, -244.106, 30.8994, 0.22 ) }
    dend_38 { pt3dadd( -32.5038, -245.058, 31.0359, 0.37 ) }
    dend_38 { pt3dadd( -32.8874, -246.165, 31.138, 0.37 ) }
    dend_38 { pt3dadd( -33.3818, -247.346, 31.1435, 0.22 ) }
    dend_38 { pt3dadd( -34.0205, -248.612, 31.0384, 0.22 ) }
    dend_38 { pt3dadd( -34.4506, -249.338, 30.9092, 0.22 ) }
    dend_38 { pt3dadd( -34.9174, -250.011, 30.7393, 0.74 ) }
    dend_38 { pt3dadd( -35.6593, -250.979, 30.4343, 1.77 ) }
    dend_38 { pt3dadd( -36.5371, -252.074, 30.0454, 2.21 ) }
    dend_38 { pt3dadd( -37.1993, -252.86, 29.7881, 2.21 ) }
    dend_38 { pt3dadd( -38.6737, -254.549, 29.2976, 0.37 ) }
    dend_38 { pt3dadd( -39.6134, -255.673, 29.0514, 0.37 ) }
    dend_38 { pt3dadd( -40.3517, -256.641, 28.9291, 0.22 ) }
    dend_38 { pt3dadd( -40.9895, -257.552, 28.9205, 0.22 ) }
    dend_38 { pt3dadd( -41.7498, -258.676, 29.0106, 0.22 ) }
    dend_38 { pt3dadd( -42.1935, -259.333, 29.1202, 0.81 ) }
    dend_38 { pt3dadd( -42.8979, -260.327, 29.4256, 1.25 ) }
    dend_38 { pt3dadd( -43.7715, -261.451, 29.9061, 0.88 ) }
    dend_38 { pt3dadd( -44.8092, -262.639, 30.4948, 0.22 ) }
    dend_38 { pt3dadd( -45.3466, -263.243, 30.798, 0.22 ) }
    dend_38 { pt3dadd( -45.9275, -263.978, 31.1142, 0.22 ) }
    dend_38 { pt3dadd( -46.5116, -264.886, 31.4796, 0.22 ) }
    dend_38 { pt3dadd( -47.0092, -266.092, 31.8771, 0.44 ) }
    dend_38 { pt3dadd( -47.302, -267.247, 32.1666, 1.47 ) }
    dend_38 { pt3dadd( -47.5424, -268.511, 32.3811, 1.47 ) }
    dend_38 { pt3dadd( -47.8329, -270.103, 32.5538, 0.44 ) }
    dend_38 { pt3dadd( -48.0937, -271.589, 32.647, 0.96 ) }
    dend_38 { pt3dadd( -48.5124, -273.754, 32.6851, 0.22 ) }
    dend_38 { pt3dadd( -48.7591, -274.9, 32.6863, 0.22 ) }
    dend_38 { pt3dadd( -49.2136, -276.64, 32.6763, 0.22 ) }
    dend_38 { pt3dadd( -49.6255, -277.934, 32.6303, 0.22 ) }
    dend_38 { pt3dadd( -49.9767, -278.88, 32.5672, 0.22 ) }
    dend_38 { pt3dadd( -50.4526, -280.006, 32.4564, 0.22 ) }
    dend_38 { pt3dadd( -51.1431, -281.504, 32.3126, 0.22 ) }
    dend_38 { pt3dadd( -51.5559, -282.444, 32.2417, 0.81 ) }
    dend_38 { pt3dadd( -52.1523, -283.898, 32.1674, 1.77 ) }
    dend_38 { pt3dadd( -52.7133, -285.314, 32.1456, 1.18 ) }
    dend_38 { pt3dadd( -53.7456, -288.041, 32.1898, 0.22 ) }
    dend_38 { pt3dadd( -54.0656, -288.951, 32.2516, 0.22 ) }
    dend_38 { pt3dadd( -54.5917, -290.516, 32.4508, 0.88 ) }
    dend_38 { pt3dadd( -55.2099, -292.463, 32.8403, 0.15 ) }
    dend_38 { pt3dadd( -55.5498, -293.601, 33.1911, 0.15 ) }
    dend_38 { pt3dadd( -55.8094, -294.717, 33.6354, 0.29 ) }
    dend_38 { pt3dadd( -55.9744, -295.848, 34.1858, 0.74 ) }
    dend_38 { pt3dadd( -56.0632, -296.713, 34.639, 1.4 ) }
    dend_38 { pt3dadd( -56.1704, -298.007, 35.3897, 0.59 ) }
    dend_38 { pt3dadd( -56.3001, -299.726, 36.4004, 0.15 ) }
    dend_38 { pt3dadd( -56.3967, -301.038, 37.1373, 0.15 ) }
    dend_38 { pt3dadd( -56.4708, -302.224, 37.7821, 0.15 ) }
    dend_38 { pt3dadd( -56.4842, -303.316, 38.3299, 0.29 ) }
    dend_38 { pt3dadd( -56.4437, -304.687, 39.0119, 0.96 ) }
    dend_38 { pt3dadd( -56.3739, -306.195, 39.7618, 0.44 ) }
    dend_38 { pt3dadd( -56.3185, -307.414, 40.3744, 0.22 ) }
    dend_38 { pt3dadd( -56.2707, -308.879, 41.1716, 0.22 ) }
    dend_38 { pt3dadd( -56.1948, -310.285, 41.9731, 0.15 ) }
    dend_38 { pt3dadd( -56.0919, -311.485, 42.6495, 0.15 ) }
    dend_38 { pt3dadd( -56.0187, -312.295, 43.0862, 0.15 ) }
    dend_38 { pt3dadd( -55.9745, -313.103, 43.4725, 0.29 ) }
    dend_38 { pt3dadd( -55.9864, -314.54, 44.0206, 0.44 ) }
    dend_38 { pt3dadd( -56.0851, -315.954, 44.4281, 0.44 ) }
    dend_38 { pt3dadd( -56.3233, -317.909, 44.8766, 0.44 ) }
    dend_38 { pt3dadd( -56.5515, -319.527, 45.1293, 0.44 ) }
    dend_38 { pt3dadd( -56.87, -321.516, 45.3413, 0.88 ) }
    dend_38 { pt3dadd( -57.1827, -323.065, 45.4278, 1.03 ) }
    dend_38 { pt3dadd( -57.5727, -324.548, 45.4454, 0.37 ) }
    dend_38 { pt3dadd( -58.0136, -325.783, 45.4212, 0.15 ) }
    dend_38 { pt3dadd( -58.5833, -326.975, 45.3815, 0.15 ) }
    dend_38 { pt3dadd( -59.1843, -327.987, 45.3366, 0.37 ) }
    dend_38 { pt3dadd( -60.0805, -329.242, 45.2744, 0.22 ) }
    dend_38 { pt3dadd( -60.8263, -330.13, 45.2187, 0.81 ) }
    dend_38 { pt3dadd( -62.1671, -331.495, 45.1015, 1.25 ) }
    dend_38 { pt3dadd( -63.8081, -332.905, 44.9286, 0.88 ) }
    dend_38 { pt3dadd( -64.9141, -333.73, 44.7887, 0.22 ) }
    dend_38 { pt3dadd( -66.0125, -334.487, 44.5949, 0.22 ) }
    dend_38 { pt3dadd( -67.0917, -335.223, 44.3438, 0.74 ) }
    dend_38 { pt3dadd( -68.547, -336.3, 43.897, 1.47 ) }
    dend_38 { pt3dadd( -69.6726, -337.247, 43.447, 0.37 ) }
    dend_38 { pt3dadd( -71.2442, -338.823, 42.6047, 0.22 ) }
    dend_38 { pt3dadd( -72.2237, -340.058, 41.896, 0.29 ) }
    dend_38 { pt3dadd( -72.9375, -341.274, 41.1944, 0.29 ) }
    dend_38 { pt3dadd( -73.3613, -342.438, 40.548, 0.29 ) }
    dend_38 { pt3dadd( -73.5908, -343.729, 39.8845, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -73.6938, -345.445, 39.1284, 0.22 ) }
    dend_38 { pt3dadd( -73.6397, -347.378, 38.4306, 0.22 ) }
    dend_38 { pt3dadd( -73.573, -348.321, 38.1533, 0.22 ) }
    dend_38 { pt3dadd( -73.4604, -349.766, 37.867, 0.37 ) }
    dend_38 { pt3dadd( -73.4076, -350.854, 37.7497, 0.59 ) }
    dend_38 { pt3dadd( -73.4231, -353.452, 37.6191, 0.66 ) }
    dend_38 { pt3dadd( -73.5427, -355.242, 37.617, 0.88 ) }
    dend_38 { pt3dadd( -73.7001, -356.444, 37.7082, 0.88 ) }
    dend_38 { pt3dadd( -74.091, -358.598, 37.9468, 0.52 ) }
    dend_38 { pt3dadd( -74.5939, -360.932, 38.2677, 0.22 ) }
    dend_38 { pt3dadd( -75.1165, -363.274, 38.7015, 0.22 ) }
    dend_38 { pt3dadd( -75.3416, -364.232, 38.9253, 0.81 ) }
    dend_38 { pt3dadd( -75.9788, -366.775, 39.5784, 1.25 ) }
    dend_38 { pt3dadd( -76.3129, -368.237, 39.9689, 1.03 ) }
    dend_38 { pt3dadd( -76.5013, -369.18, 40.2214, 1.03 ) }
    dend_38 { pt3dadd( -76.8918, -371.499, 40.9031, 0.22 ) }
    dend_38 { pt3dadd( -77.1336, -373.213, 41.4232, 0.22 ) }
    dend_38 { pt3dadd( -77.3111, -374.367, 41.7339, 0.22 ) }
    dend_38 { pt3dadd( -77.6516, -376.245, 42.1332, 0.22 ) }
    dend_38 { pt3dadd( -77.921, -377.315, 42.3265, 0.22 ) }
    dend_38 { pt3dadd( -78.5705, -379.282, 42.5776, 0.22 ) }
    dend_38 { pt3dadd( -79.1634, -380.592, 42.6379, 0.74 ) }
    dend_38 { pt3dadd( -79.8361, -381.843, 42.6055, 1.11 ) }
    dend_38 { pt3dadd( -80.3872, -382.771, 42.4851, 1.11 ) }
    dend_38 { pt3dadd( -81.548, -384.529, 42.0457, 0.74 ) }
    dend_38 { pt3dadd( -82.3964, -385.794, 41.5554, 1.4 ) }
    dend_38 { pt3dadd( -83.6593, -387.725, 40.5525, 0.66 ) }
    dend_38 { pt3dadd( -84.4784, -389.074, 39.7513, 0.07 ) }
    dend_38 { pt3dadd( -85.4353, -390.792, 38.6872, 0.07 ) }
    dend_38 { pt3dadd( -86.0464, -391.961, 37.9541, 0.22 ) }
    dend_38 { pt3dadd( -86.691, -393.349, 37.1224, 0.22 ) }
    dend_38 { pt3dadd( -87.1238, -394.334, 36.5827, 0.44 ) }
    dend_38 { pt3dadd( -87.6514, -395.63, 35.9792, 0.44 ) }
    dend_38 { pt3dadd( -88.4308, -397.378, 35.4264, 0.44 ) }
    dend_38 { pt3dadd( -89.0011, -398.518, 35.2648, 0.22 ) }
    dend_38 { pt3dadd( -89.8655, -400.115, 35.2422, 0.15 ) }
    dend_38 { pt3dadd( -90.4453, -401.004, 35.3377, 0.37 ) }
    dend_38 { pt3dadd( -90.8973, -401.552, 35.4601, 0.37 ) }
    dend_38 { pt3dadd( -92.1284, -402.835, 35.8864, 0.15 ) }
    dend_38 { pt3dadd( -93.3267, -403.931, 36.3516, 0.15 ) }
    dend_38 { pt3dadd( -93.7251, -404.254, 36.5039, 0.52 ) }
    dend_38 { pt3dadd( -94.8403, -404.991, 36.861, 1.03 ) }
    dend_38 { pt3dadd( -96.3541, -405.892, 37.2509, 0.15 ) }
    dend_38 { pt3dadd( -97.4592, -406.503, 37.441, 0.15 ) }
    dend_38 { pt3dadd( -98.5111, -407.078, 37.5062, 0.15 ) }
    dend_38 { pt3dadd( -99.1801, -407.484, 37.4881, 0.59 ) }
    dend_38 { pt3dadd( -100.607, -408.468, 37.37, 0.15 ) }
    dend_38 { pt3dadd( -101.067, -408.82, 37.3048, 0.15 ) }
    dend_38 { pt3dadd( -101.774, -409.452, 37.1732, 0.66 ) }
    dend_38 { pt3dadd( -102.371, -410.057, 37.0572, 0.81 ) }
    dend_38 { pt3dadd( -103.994, -411.932, 36.7377, 0.15 ) }
    dend_38 { pt3dadd( -105.255, -413.562, 36.488, 0.15 ) }
    dend_38 { pt3dadd( -106.328, -415.106, 36.2736, 0.29 ) }
    dend_38 { pt3dadd( -107.795, -417.326, 35.9765, 0.22 ) }
    dend_38 { pt3dadd( -109.051, -419.334, 35.7226, 0.15 ) }
    dend_38 { pt3dadd( -109.561, -420.157, 35.6196, 0.66 ) }
    dend_38 { pt3dadd( -110.379, -421.425, 35.4216, 0.81 ) }
    dend_38 { pt3dadd( -111.413, -422.875, 35.126, 0.44 ) }
    dend_38 { pt3dadd( -112.051, -423.733, 34.9335, 1.03 ) }
    dend_38 { pt3dadd( -112.749, -424.555, 34.7101, 1.25 ) }
    dend_38 { pt3dadd( -114.667, -426.599, 34.0555, 0.52 ) }
    dend_38 { pt3dadd( -116.168, -428.044, 33.5176, 0.22 ) }
    dend_38 { pt3dadd( -117.132, -428.853, 33.1465, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.17756, 26.5782, -0.0147434, 0.96 ) }
    dend_24 { pt3dadd( 7.12694, 27.3245, -0.438786, 0.96 ) }
    dend_24 { pt3dadd( 7.58939, 27.6857, -0.643536, 1.03 ) }
    dend_24 { pt3dadd( 8.19097, 28.1431, -0.816533, 1.03 ) }
    dend_24 { pt3dadd( 8.72407, 28.5485, -0.969836, 1.62 ) }
    dend_24 { pt3dadd( 9.24065, 28.9413, -1.11839, 1.33 ) }
    dend_24 { pt3dadd( 9.96598, 29.4928, -1.32697, 1.03 ) }
    dend_24 { pt3dadd( 10.5157, 29.9133, -1.46535, 0.96 ) }
    dend_24 { pt3dadd( 11.5714, 30.7137, -1.6795, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.17756, 26.5782, -0.0147434, 0.88 ) }
    dend_21 { pt3dadd( 7.03137, 28.6159, -0.32328, 0.88 ) }
    dend_21 { pt3dadd( 8.07677, 30.6517, -0.699472, 0.81 ) }
    dend_21 { pt3dadd( 8.57247, 31.6048, -0.927099, 0.66 ) }
    dend_21 { pt3dadd( 9.05063, 32.596, -1.19497, 1.11 ) }
    dend_21 { pt3dadd( 9.6159, 33.9377, -1.56552, 0.74 ) }
    dend_21 { pt3dadd( 9.98007, 34.9362, -1.84869, 0.52 ) }
    dend_21 { pt3dadd( 10.3935, 36.3428, -2.36994, 0.22 ) }
    dend_21 { pt3dadd( 10.4806, 37.4663, -2.73486, 0.29 ) }
    dend_21 { pt3dadd( 10.2658, 38.2613, -2.96052, 0.29 ) }
    dend_21 { pt3dadd( 9.7631, 39.101, -3.19774, 0.66 ) }
    dend_21 { pt3dadd( 9.39543, 39.5269, -3.33021, 0.66 ) }
    dend_21 { pt3dadd( 8.37159, 40.5322, -3.61501, 0.81 ) }
    dend_21 { pt3dadd( 7.05607, 41.7972, -3.97257, 1.18 ) }
    dend_21 { pt3dadd( 6.06413, 42.8568, -4.28101, 1.03 ) }
    dend_21 { pt3dadd( 5.07144, 44.1078, -4.68831, 0.81 ) }
    dend_21 { pt3dadd( 4.21457, 45.4365, -5.1624, 1.11 ) }
    dend_21 { pt3dadd( 3.27542, 47.2562, -5.85606, 0.88 ) }
    dend_21 { pt3dadd( 2.65548, 48.7764, -6.48058, 0.66 ) }
    dend_21 { pt3dadd( 2.2116, 50.1782, -7.06082, 0.66 ) }
    dend_21 { pt3dadd( 1.88181, 51.3566, -7.4811, 0.66 ) }
    dend_21 { pt3dadd( 1.58486, 52.428, -7.79598, 0.66 ) }
    dend_21 { pt3dadd( 1.21013, 53.7063, -8.14477, 0.81 ) }
    dend_21 { pt3dadd( 0.885688, 54.6838, -8.42893, 1.18 ) }
    dend_21 { pt3dadd( 0.492101, 55.7595, -8.72093, 1.18 ) }
    dend_21 { pt3dadd( -0.366956, 58.1401, -9.29093, 0.52 ) }
    dend_21 { pt3dadd( -0.864988, 59.3965, -9.57022, 0.52 ) }
    dend_21 { pt3dadd( -1.24272, 60.3904, -9.78447, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( -1.45942, 61.1053, -9.93129, 1.03 ) }
    dend_21 { pt3dadd( -1.69535, 62.3978, -10.2249, 1.03 ) }
    dend_21 { pt3dadd( -1.68587, 63.972, -10.6897, 0.66 ) }
    dend_21 { pt3dadd( -3.46256, 76.5459, -15.5018, 0.66 ) }
    dend_21 { pt3dadd( -5.38374, 89.5316, -18.8878, 0.66 ) }
    dend_21 { pt3dadd( -10.0791, 102.025, -21.3812, 0.66 ) }
    dend_21 { pt3dadd( -15.6709, 114.238, -23.4479, 0.66 ) }
    dend_21 { pt3dadd( -21.7705, 125.97, -26.691, 0.66 ) }
    dend_21 { pt3dadd( -29.924, 136.794, -28.3249, 0.66 ) }
    dend_21 { pt3dadd( -37.9193, 147.3, -31.8562, 0.66 ) }
    dend_21 { pt3dadd( -44.8747, 158.248, -36.1097, 0.66 ) }
    dend_21 { pt3dadd( -52.037, 169.621, -38.3622, 0.66 ) }
    dend_21 { pt3dadd( -59.9973, 180.026, -42.27, 0.66 ) }
    dend_21 { pt3dadd( -65.9035, 190.773, -48.2916, 0.66 ) }
    dend_21 { pt3dadd( -72.3136, 201.647, -53.4984, 0.66 ) }
    dend_21 { pt3dadd( -78.989, 212.318, -58.814, 0.66 ) }
    dend_21 { pt3dadd( -85.7337, 222.528, -64.9354, 0.66 ) }
    dend_21 { pt3dadd( -93.8148, 231.408, -71.5964, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 1.44547, 27.6124, 6.33857, 0.96 ) }
    dend_13 { pt3dadd( 0.817206, 28.02, 6.6598, 0.96 ) }
    dend_13 { pt3dadd( 0.233679, 28.258, 6.99845, 0.66 ) }
    dend_13 { pt3dadd( -0.555959, 28.2965, 7.523, 0.52 ) }
    dend_13 { pt3dadd( -0.846566, 28.0885, 7.77214, 0.52 ) }
    dend_13 { pt3dadd( -1.18956, 27.4217, 8.15789, 0.52 ) }
    dend_13 { pt3dadd( -1.3535, 27.0553, 8.36344, 0.88 ) }
    dend_13 { pt3dadd( -1.6739, 26.1873, 8.82745, 1.11 ) }
    dend_13 { pt3dadd( -1.96565, 25.3943, 9.26299, 1.25 ) }
    dend_13 { pt3dadd( -2.23165, 24.7896, 9.61658, 1.25 ) }
    dend_13 { pt3dadd( -2.84313, 23.7011, 10.2975, 0.66 ) }
    dend_13 { pt3dadd( -3.22465, 23.1558, 10.661, 0.96 ) }
    dend_13 { pt3dadd( -3.66429, 22.6417, 11.0507, 1.33 ) }
    dend_13 { pt3dadd( -4.25537, 22.0704, 11.5532, 1.33 ) }
    dend_13 { pt3dadd( -5.16604, 21.315, 12.3236, 1.33 ) }
    dend_13 { pt3dadd( -6.16074, 20.5428, 13.1968, 0.88 ) }
    dend_13 { pt3dadd( -6.76562, 20.1109, 13.7185, 0.88 ) }
    dend_13 { pt3dadd( -7.45502, 19.6145, 14.3064, 1.4 ) }
    dend_13 { pt3dadd( -7.89745, 19.2802, 14.6938, 1.55 ) }
    dend_13 { pt3dadd( -8.56812, 18.7321, 15.3172, 2.06 ) }
    dend_13 { pt3dadd( -9.0463, 18.2514, 15.866, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.44547, 27.6124, 6.33857, 0.74 ) }
    dend_12 { pt3dadd( 1.13794, 26.7594, 5.97793, 0.74 ) }
    dend_12 { pt3dadd( 0.693592, 25.6817, 5.54355, 0.52 ) }
    dend_12 { pt3dadd( 0.276582, 24.7442, 5.19059, 0.88 ) }
    dend_12 { pt3dadd( -0.209764, 23.7496, 4.87593, 0.44 ) }
    dend_12 { pt3dadd( -0.548511, 23.1125, 4.70373, 0.44 ) }
    dend_12 { pt3dadd( -0.817184, 22.6349, 4.58771, 0.37 ) }
    dend_12 { pt3dadd( -1.33949, 21.7853, 4.43568, 0.88 ) }
    dend_12 { pt3dadd( -1.8815, 20.8877, 4.35403, 0.44 ) }
    dend_12 { pt3dadd( -2.45487, 19.8902, 4.3089, 0.44 ) }
    dend_12 { pt3dadd( -2.82169, 19.1644, 4.29416, 0.74 ) }
    dend_12 { pt3dadd( -3.0841, 18.5864, 4.29684, 1.11 ) }
    dend_12 { pt3dadd( -3.61456, 17.3151, 4.34367, 0.96 ) }
    dend_12 { pt3dadd( -4.07481, 16.1225, 4.4485, 1.18 ) }
    dend_12 { pt3dadd( -4.46028, 15.0969, 4.5938, 1.18 ) }
    dend_12 { pt3dadd( -4.90753, 13.9271, 4.80464, 0.88 ) }
    dend_12 { pt3dadd( -5.29214, 12.9585, 5.02096, 0.66 ) }
    dend_12 { pt3dadd( -5.62808, 12.1717, 5.23827, 0.66 ) }
    dend_12 { pt3dadd( -5.99785, 11.3348, 5.49494, 0.66 ) }
    dend_12 { pt3dadd( -6.43197, 10.3793, 5.80399, 0.66 ) }
    dend_12 { pt3dadd( -6.91351, 9.28583, 6.14789, 0.66 ) }
    dend_12 { pt3dadd( -7.55286, 7.74528, 6.52979, 0.52 ) }
    dend_12 { pt3dadd( -7.85996, 6.9111, 6.67299, 0.52 ) }
    dend_12 { pt3dadd( -8.31359, 5.46223, 6.81703, 0.52 ) }
    dend_12 { pt3dadd( -8.57231, 4.45888, 6.84008, 0.52 ) }
    dend_12 { pt3dadd( -8.78634, 3.42859, 6.80714, 0.52 ) }
    dend_12 { pt3dadd( -9.02989, 2.09228, 6.72617, 0.96 ) }
    dend_12 { pt3dadd( -9.16406, 1.41673, 6.662, 1.11 ) }
    dend_12 { pt3dadd( -9.31926, 0.728394, 6.57882, 1.11 ) }
    dend_12 { pt3dadd( -9.76391, -0.95853, 6.35806, 0.44 ) }
    dend_12 { pt3dadd( -9.99827, -1.75197, 6.23608, 0.44 ) }
    dend_12 { pt3dadd( -10.4978, -3.15529, 6.00336, 0.66 ) }
    dend_12 { pt3dadd( -10.881, -4.10201, 5.82906, 0.52 ) }
    dend_12 { pt3dadd( -11.094, -4.58682, 5.71647, 0.88 ) }
    dend_12 { pt3dadd( -11.2882, -5.00924, 5.60138, 1.33 ) }
    dend_12 { pt3dadd( -11.7011, -5.95087, 5.31491, 0.96 ) }
    dend_12 { pt3dadd( -12.2342, -7.31032, 4.89311, 0.59 ) }
    dend_12 { pt3dadd( -12.5574, -8.28916, 4.58646, 0.59 ) }
    dend_12 { pt3dadd( -12.7339, -8.93077, 4.40361, 0.96 ) }
    dend_12 { pt3dadd( -12.9535, -9.83697, 4.17208, 0.52 ) }
    dend_12 { pt3dadd( -13.2198, -11.0738, 3.90462, 0.22 ) }
    dend_12 { pt3dadd( -13.3834, -11.8719, 3.76574, 0.29 ) }
    dend_12 { pt3dadd( -13.5491, -12.5816, 3.64798, 0.29 ) }
    dend_12 { pt3dadd( -13.7083, -13.1199, 3.55826, 1.03 ) }
    dend_12 { pt3dadd( -13.9926, -13.9254, 3.41067, 1.84 ) }
    dend_12 { pt3dadd( -14.4995, -15.0882, 3.16858, 0.74 ) }
    dend_12 { pt3dadd( -15.1315, -16.2688, 2.89108, 0.29 ) }
    dend_12 { pt3dadd( -15.8499, -17.3214, 2.5997, 0.29 ) }
    dend_12 { pt3dadd( -16.2941, -17.8711, 2.43014, 0.29 ) }
    dend_12 { pt3dadd( -16.6097, -18.2314, 2.31221, 0.88 ) }
    dend_12 { pt3dadd( -17.0407, -18.7055, 2.15491, 1.47 ) }
    dend_12 { pt3dadd( -17.5016, -19.233, 1.97995, 0.88 ) }
    dend_12 { pt3dadd( -18.5508, -20.5936, 1.56314, 0.22 ) }
    dend_12 { pt3dadd( -18.8908, -21.129, 1.41835, 0.15 ) }
    dend_12 { pt3dadd( -19.2656, -21.8154, 1.26223, 0.37 ) }
    dend_12 { pt3dadd( -19.5949, -22.4346, 1.13537, 0.22 ) }
    dend_12 { pt3dadd( -20.1127, -23.3577, 0.952547, 0.22 ) }
    dend_12 { pt3dadd( -20.5899, -24.1145, 0.794581, 0.52 ) }
    dend_12 { pt3dadd( -20.8966, -24.5295, 0.702425, 0.96 ) }
    dend_12 { pt3dadd( -21.5972, -25.2643, 0.503832, 1.62 ) }
    dend_12 { pt3dadd( -22.5518, -26.0677, 0.237672, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -23.6261, -26.8526, -0.0475893, 0.59 ) }
    dend_12 { pt3dadd( -24.4732, -27.4168, -0.257647, 0.88 ) }
    dend_12 { pt3dadd( -25.2817, -27.9505, -0.457789, 1.55 ) }
    dend_12 { pt3dadd( -25.987, -28.4253, -0.636159, 1.55 ) }
    dend_12 { pt3dadd( -27.0351, -29.1978, -0.917939, 0.37 ) }
    dend_12 { pt3dadd( -27.9096, -29.9292, -1.13624, 0.22 ) }
    dend_12 { pt3dadd( -28.4121, -30.3937, -1.25329, 0.44 ) }
    dend_12 { pt3dadd( -29.1209, -31.1095, -1.4119, 1.11 ) }
    dend_12 { pt3dadd( -29.4517, -31.4932, -1.48846, 1.11 ) }
    dend_12 { pt3dadd( -30.1404, -32.3942, -1.64637, 0.44 ) }
    dend_12 { pt3dadd( -30.6952, -33.2111, -1.79839, 0.22 ) }
    dend_12 { pt3dadd( -31.1476, -33.9775, -1.95794, 0.29 ) }
    dend_12 { pt3dadd( -31.4046, -34.4483, -2.07751, 0.15 ) }
    dend_12 { pt3dadd( -31.8199, -35.246, -2.30709, 0.29 ) }
    dend_12 { pt3dadd( -31.9811, -35.565, -2.40635, 0.96 ) }
    dend_12 { pt3dadd( -32.356, -36.312, -2.65816, 1.62 ) }
    dend_12 { pt3dadd( -32.9641, -37.5804, -3.09699, 2.06 ) }
    dend_12 { pt3dadd( -33.5495, -38.8249, -3.50557, 1.4 ) }
    dend_12 { pt3dadd( -33.8335, -39.427, -3.69113, 0.59 ) }
    dend_12 { pt3dadd( -34.2871, -40.3702, -3.95903, 0.22 ) }
    dend_12 { pt3dadd( -34.576, -41.0068, -4.11756, 0.22 ) }
    dend_12 { pt3dadd( -34.853, -41.6532, -4.25164, 0.66 ) }
    dend_12 { pt3dadd( -35.1409, -42.3705, -4.38147, 0.74 ) }
    dend_12 { pt3dadd( -35.4383, -43.1436, -4.5001, 0.22 ) }
    dend_12 { pt3dadd( -35.7896, -44.0079, -4.61975, 0.15 ) }
    dend_12 { pt3dadd( -36.0971, -44.7172, -4.6967, 0.22 ) }
    dend_12 { pt3dadd( -36.3107, -45.2155, -4.73495, 0.66 ) }
    dend_12 { pt3dadd( -36.5871, -45.8386, -4.76844, 1.25 ) }
    dend_12 { pt3dadd( -36.9921, -46.6934, -4.8066, 1.47 ) }
    dend_12 { pt3dadd( -37.5202, -47.7109, -4.85789, 0.88 ) }
    dend_12 { pt3dadd( -38.0114, -48.567, -4.91776, 0.22 ) }
    dend_12 { pt3dadd( -38.3805, -49.1502, -4.97545, 0.22 ) }
    dend_12 { pt3dadd( -38.759, -49.7063, -5.04821, 0.22 ) }
    dend_12 { pt3dadd( -39.3962, -50.5687, -5.19822, 0.37 ) }
    dend_12 { pt3dadd( -39.9707, -51.3002, -5.36601, 0.37 ) }
    dend_12 { pt3dadd( -40.5893, -52.0657, -5.56891, 0.52 ) }
    dend_12 { pt3dadd( -40.962, -52.5253, -5.69489, 0.22 ) }
    dend_12 { pt3dadd( -41.314, -52.9748, -5.8086, 0.37 ) }
    dend_12 { pt3dadd( -41.632, -53.4393, -5.90514, 0.74 ) }
    dend_12 { pt3dadd( -42.0966, -54.2875, -6.02773, 0.22 ) }
    dend_12 { pt3dadd( -42.5002, -55.2204, -6.11997, 0.22 ) }
    dend_12 { pt3dadd( -42.7781, -55.9792, -6.18677, 0.29 ) }
    dend_12 { pt3dadd( -42.9821, -56.5437, -6.24387, 0.52 ) }
    dend_12 { pt3dadd( -43.2745, -57.3561, -6.33625, 1.11 ) }
    dend_12 { pt3dadd( -43.5309, -58.0728, -6.42727, 1.7 ) }
    dend_12 { pt3dadd( -43.8909, -59.0618, -6.57383, 1.33 ) }
    dend_12 { pt3dadd( -44.2883, -60.1838, -6.76181, 0.22 ) }
    dend_12 { pt3dadd( -44.578, -61.0786, -6.90067, 0.22 ) }
    dend_12 { pt3dadd( -44.6743, -61.3889, -6.94686, 0.22 ) }
    dend_12 { pt3dadd( -44.7835, -61.7515, -6.99837, 0.29 ) }
    dend_12 { pt3dadd( -44.9507, -62.313, -7.07409, 0.52 ) }
    dend_12 { pt3dadd( -45.1595, -63.0388, -7.16218, 0.22 ) }
    dend_12 { pt3dadd( -45.3565, -63.6401, -7.23714, 0.22 ) }
    dend_12 { pt3dadd( -45.5616, -64.133, -7.31685, 0.22 ) }
    dend_12 { pt3dadd( -45.8543, -64.6259, -7.43369, 0.81 ) }
    dend_12 { pt3dadd( -46.1718, -65.0114, -7.56276, 1.47 ) }
    dend_12 { pt3dadd( -46.4544, -65.2877, -7.67872, 1.47 ) }
    dend_12 { pt3dadd( -47.1837, -65.9205, -7.97964, 0.22 ) }
    dend_12 { pt3dadd( -47.5878, -66.2629, -8.14683, 0.22 ) }
    dend_12 { pt3dadd( -48.0718, -66.7039, -8.34734, 0.37 ) }
    dend_12 { pt3dadd( -48.6744, -67.3065, -8.59752, 0.44 ) }
    dend_12 { pt3dadd( -49.0742, -67.7358, -8.76323, 0.22 ) }
    dend_12 { pt3dadd( -49.233, -67.9263, -8.83378, 0.22 ) }
    dend_12 { pt3dadd( -49.4242, -68.1779, -8.92438, 0.22 ) }
    dend_12 { pt3dadd( -49.7848, -68.6775, -9.10087, 0.22 ) }
    dend_12 { pt3dadd( -50.0748, -69.0798, -9.24426, 0.74 ) }
    dend_12 { pt3dadd( -50.4302, -69.5769, -9.41994, 1.47 ) }
    dend_12 { pt3dadd( -50.9788, -70.2741, -9.67357, 1.99 ) }
    dend_12 { pt3dadd( -51.5362, -70.8975, -9.89958, 1.77 ) }
    dend_12 { pt3dadd( -52.4943, -71.8384, -10.2501, 0.66 ) }
    dend_12 { pt3dadd( -53.0575, -72.3289, -10.4391, 0.15 ) }
    dend_12 { pt3dadd( -53.6544, -72.8122, -10.6323, 0.15 ) }
    dend_12 { pt3dadd( -54.2949, -73.3242, -10.8386, 0.22 ) }
    dend_12 { pt3dadd( -54.8531, -73.749, -11.019, 0.22 ) }
    dend_12 { pt3dadd( -55.4197, -74.1829, -11.2325, 0.29 ) }
    dend_12 { pt3dadd( -55.8867, -74.5623, -11.4404, 0.81 ) }
    dend_12 { pt3dadd( -56.4946, -75.1231, -11.7619, 1.47 ) }
    dend_12 { pt3dadd( -57.1428, -75.8294, -12.1827, 0.52 ) }
    dend_12 { pt3dadd( -57.6612, -76.5797, -12.6131, 0.22 ) }
    dend_12 { pt3dadd( -57.9876, -77.2031, -12.9473, 0.22 ) }
    dend_12 { pt3dadd( -58.2, -77.7325, -13.1903, 0.22 ) }
    dend_12 { pt3dadd( -58.2854, -78.0108, -13.3034, 0.22 ) }
    dend_12 { pt3dadd( -58.397, -78.4758, -13.4716, 0.29 ) }
    dend_12 { pt3dadd( -58.5449, -79.1878, -13.7159, 0.74 ) }
    dend_12 { pt3dadd( -58.6535, -79.7266, -13.9037, 1.03 ) }
    dend_12 { pt3dadd( -58.9417, -80.8544, -14.314, 0.37 ) }
    dend_12 { pt3dadd( -59.1793, -81.6124, -14.6068, 0.88 ) }
    dend_12 { pt3dadd( -59.4329, -82.3333, -14.8924, 1.18 ) }
    dend_12 { pt3dadd( -59.6759, -82.9847, -15.1526, 1.18 ) }
    dend_12 { pt3dadd( -60.1444, -84.1829, -15.6079, 0.29 ) }
    dend_12 { pt3dadd( -60.589, -85.2075, -15.9874, 0.29 ) }
    dend_12 { pt3dadd( -60.9277, -85.9041, -16.2317, 0.37 ) }
    dend_12 { pt3dadd( -61.1942, -86.3859, -16.3842, 0.88 ) }
    dend_12 { pt3dadd( -61.4829, -86.8751, -16.5173, 0.66 ) }
    dend_12 { pt3dadd( -61.8665, -87.5502, -16.6522, 0.22 ) }
    dend_12 { pt3dadd( -62.1602, -88.1075, -16.7206, 0.22 ) }
    dend_12 { pt3dadd( -62.4468, -88.7334, -16.7716, 0.37 ) }
    dend_12 { pt3dadd( -62.6318, -89.1839, -16.7935, 0.66 ) }
    dend_12 { pt3dadd( -62.9148, -89.8982, -16.8131, 1.11 ) }
    dend_12 { pt3dadd( -63.2563, -90.7475, -16.8315, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -63.487, -91.28, -16.8487, 0.29 ) }
    dend_12 { pt3dadd( -63.823, -92.0155, -16.8679, 0.22 ) }
    dend_12 { pt3dadd( -64.0557, -92.5137, -16.8941, 0.29 ) }
    dend_12 { pt3dadd( -64.4483, -93.3878, -16.9818, 0.96 ) }
    dend_12 { pt3dadd( -64.7176, -94.0101, -17.0786, 1.03 ) }
    dend_12 { pt3dadd( -65.1465, -95.0837, -17.294, 0.81 ) }
    dend_12 { pt3dadd( -65.4515, -95.9517, -17.4992, 0.29 ) }
    dend_12 { pt3dadd( -65.6967, -96.6691, -17.6991, 0.22 ) }
    dend_12 { pt3dadd( -65.9491, -97.4195, -17.9324, 0.29 ) }
    dend_12 { pt3dadd( -66.1641, -98.0729, -18.1546, 0.74 ) }
    dend_12 { pt3dadd( -66.3505, -98.6479, -18.3527, 0.52 ) }
    dend_12 { pt3dadd( -66.7876, -99.9013, -18.7909, 0.29 ) }
    dend_12 { pt3dadd( -67.2666, -101.054, -19.1869, 0.29 ) }
    dend_12 { pt3dadd( -67.8, -102.086, -19.5107, 0.29 ) }
    dend_12 { pt3dadd( -68.1297, -102.636, -19.675, 0.29 ) }
    dend_12 { pt3dadd( -68.4764, -103.165, -19.8338, 1.03 ) }
    dend_12 { pt3dadd( -68.8266, -103.673, -19.992, 1.7 ) }
    dend_12 { pt3dadd( -69.4452, -104.56, -20.2648, 1.4 ) }
    dend_12 { pt3dadd( -70.3806, -105.891, -20.6611, 0.44 ) }
    dend_12 { pt3dadd( -70.9362, -106.643, -20.8747, 0.15 ) }
    dend_12 { pt3dadd( -71.1854, -106.972, -20.9666, 0.37 ) }
    dend_12 { pt3dadd( -71.5825, -107.497, -21.1214, 0.59 ) }
    dend_12 { pt3dadd( -71.956, -108.015, -21.2838, 0.59 ) }
    dend_12 { pt3dadd( -72.6289, -108.993, -21.6203, 0.22 ) }
    dend_12 { pt3dadd( -73.1319, -109.718, -21.9024, 0.22 ) }
    dend_12 { pt3dadd( -73.5112, -110.252, -22.1163, 0.22 ) }
    dend_12 { pt3dadd( -73.8092, -110.681, -22.2893, 0.88 ) }
    dend_12 { pt3dadd( -74.1052, -111.118, -22.4405, 1.47 ) }
    dend_12 { pt3dadd( -74.5297, -111.768, -22.6447, 1.84 ) }
    dend_12 { pt3dadd( -75.7431, -113.697, -23.1892, 0.22 ) }
    dend_12 { pt3dadd( -75.9241, -113.999, -23.2727, 0.22 ) }
    dend_12 { pt3dadd( -76.1648, -114.403, -23.3774, 0.22 ) }
    dend_12 { pt3dadd( -76.7168, -115.297, -23.6231, 0.22 ) }
    dend_12 { pt3dadd( -77.0894, -115.853, -23.7945, 0.22 ) }
    dend_12 { pt3dadd( -77.3938, -116.275, -23.9487, 0.74 ) }
    dend_12 { pt3dadd( -77.936, -117.016, -24.2698, 1.33 ) }
    dend_12 { pt3dadd( -78.6184, -117.895, -24.6992, 0.22 ) }
    dend_12 { pt3dadd( -79.0205, -118.386, -24.9656, 0.22 ) }
    dend_12 { pt3dadd( -79.4707, -118.939, -25.2555, 0.22 ) }
    dend_12 { pt3dadd( -79.8186, -119.396, -25.428, 0.15 ) }
    dend_12 { pt3dadd( -80.0844, -119.774, -25.5148, 0.15 ) }
    dend_12 { pt3dadd( -80.4827, -120.325, -25.568, 0.37 ) }
    dend_12 { pt3dadd( -80.682, -120.6, -25.567, 0.96 ) }
    dend_12 { pt3dadd( -81.4476, -121.631, -25.4949, 2.14 ) }
    dend_12 { pt3dadd( -82.3769, -122.827, -25.3653, 0.66 ) }
    dend_12 { pt3dadd( -83.0763, -123.641, -25.2505, 0.15 ) }
    dend_12 { pt3dadd( -83.7397, -124.319, -25.1332, 0.15 ) }
    dend_12 { pt3dadd( -84.1643, -124.706, -25.0538, 0.44 ) }
    dend_12 { pt3dadd( -84.5771, -125.057, -24.9772, 1.03 ) }
    dend_12 { pt3dadd( -85.2658, -125.623, -24.858, 1.55 ) }
    dend_12 { pt3dadd( -86.1242, -126.322, -24.6956, 0.44 ) }
    dend_12 { pt3dadd( -86.6805, -126.82, -24.6114, 0.22 ) }
    dend_12 { pt3dadd( -87.0706, -127.224, -24.567, 0.22 ) }
    dend_12 { pt3dadd( -87.6352, -127.864, -24.5325, 0.22 ) }
    dend_12 { pt3dadd( -88.144, -128.476, -24.5374, 0.29 ) }
    dend_12 { pt3dadd( -88.6987, -129.185, -24.5963, 0.29 ) }
    dend_12 { pt3dadd( -89.3653, -130.078, -24.7365, 0.15 ) }
    dend_12 { pt3dadd( -89.8514, -130.737, -24.8806, 0.22 ) }
    dend_12 { pt3dadd( -90.3438, -131.413, -25.0924, 0.88 ) }
    dend_12 { pt3dadd( -91.0175, -132.355, -25.4812, 0.74 ) }
    dend_12 { pt3dadd( -91.4465, -132.956, -25.791, 0.88 ) }
    dend_12 { pt3dadd( -91.8682, -133.573, -26.1616, 1.77 ) }
    dend_12 { pt3dadd( -92.314, -134.271, -26.6319, 2.29 ) }
    dend_12 { pt3dadd( -92.9219, -135.35, -27.4237, 0.07 ) }
    dend_12 { pt3dadd( -93.2363, -136.015, -27.9512, 0.15 ) }
    dend_12 { pt3dadd( -93.3926, -136.438, -28.3143, 0.15 ) }
    dend_12 { pt3dadd( -93.4602, -136.676, -28.5212, 0.15 ) }
    dend_12 { pt3dadd( -93.5416, -137.15, -28.9005, 0.15 ) }
    dend_12 { pt3dadd( -93.5636, -137.535, -29.1524, 0.15 ) }
    dend_12 { pt3dadd( -93.5949, -138.237, -29.4979, 0.15 ) }
    dend_12 { pt3dadd( -93.6099, -138.499, -29.6061, 0.15 ) }
    dend_12 { pt3dadd( -93.6624, -139.245, -29.8796, 0.66 ) }
    dend_12 { pt3dadd( -93.8029, -140.597, -30.351, 0.29 ) }
    dend_12 { pt3dadd( -93.9345, -141.473, -30.6383, 0.22 ) }
    dend_12 { pt3dadd( -94.0822, -142.272, -30.8811, 0.22 ) }
    dend_12 { pt3dadd( -94.2526, -142.959, -31.0801, 0.22 ) }
    dend_12 { pt3dadd( -94.3787, -143.302, -31.1862, 0.59 ) }
    dend_12 { pt3dadd( -94.5567, -143.617, -31.2994, 0.74 ) }
    dend_12 { pt3dadd( -94.8159, -143.909, -31.4131, 0.37 ) }
    dend_12 { pt3dadd( -95.2124, -144.24, -31.5444, 0.15 ) }
    dend_12 { pt3dadd( -96.0503, -144.84, -31.7771, 0.15 ) }
    dend_12 { pt3dadd( -96.5293, -145.147, -31.8971, 0.22 ) }
    dend_12 { pt3dadd( -97.0193, -145.458, -32.0177, 0.29 ) }
    dend_12 { pt3dadd( -97.5305, -145.794, -32.1284, 0.22 ) }
    dend_12 { pt3dadd( -98.191, -146.27, -32.2559, 0.22 ) }
    dend_12 { pt3dadd( -98.9264, -146.867, -32.3824, 0.29 ) }
    dend_12 { pt3dadd( -99.4395, -147.332, -32.4551, 0.29 ) }
    dend_12 { pt3dadd( -100.085, -147.909, -32.5513, 0.22 ) }
    dend_12 { pt3dadd( -100.62, -148.356, -32.647, 0.37 ) }
    dend_12 { pt3dadd( -101.138, -148.773, -32.7622, 0.74 ) }
    dend_12 { pt3dadd( -101.509, -149.071, -32.851, 1.03 ) }
    dend_12 { pt3dadd( -102.25, -149.675, -33.0295, 0.22 ) }
    dend_12 { pt3dadd( -102.915, -150.248, -33.1942, 0.22 ) }
    dend_12 { pt3dadd( -103.485, -150.753, -33.3508, 0.15 ) }
    dend_12 { pt3dadd( -103.912, -151.157, -33.4849, 0.15 ) }
    dend_12 { pt3dadd( -104.214, -151.469, -33.5831, 0.15 ) }
    dend_12 { pt3dadd( -104.679, -152.029, -33.7564, 0.22 ) }
    dend_12 { pt3dadd( -105.304, -152.901, -34.0215, 0.29 ) }
    dend_12 { pt3dadd( -105.789, -153.692, -34.238, 0.74 ) }
    dend_12 { pt3dadd( -106.286, -154.603, -34.4455, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -106.658, -155.325, -34.5917, 0.37 ) }
    dend_12 { pt3dadd( -107.036, -156.103, -34.734, 0.37 ) }
    dend_12 { pt3dadd( -107.325, -156.702, -34.8224, 1.4 ) }
    dend_12 { pt3dadd( -107.755, -157.561, -34.9333, 2.95 ) }
    dend_12 { pt3dadd( -108.413, -158.754, -35.0761, 1.18 ) }
    dend_12 { pt3dadd( -108.989, -159.669, -35.1907, 0.22 ) }
    dend_12 { pt3dadd( -109.714, -160.717, -35.3089, 0.29 ) }
    dend_12 { pt3dadd( -110.269, -161.491, -35.3848, 0.74 ) }
    dend_12 { pt3dadd( -110.687, -162.064, -35.4439, 1.33 ) }
    dend_12 { pt3dadd( -111.369, -162.917, -35.5664, 0.81 ) }
    dend_12 { pt3dadd( -111.942, -163.608, -35.7313, 1.18 ) }
    dend_12 { pt3dadd( -112.847, -164.754, -36.0656, 0.66 ) }
    dend_12 { pt3dadd( -113.381, -165.517, -36.3052, 0.29 ) }
    dend_12 { pt3dadd( -113.573, -165.819, -36.4047, 0.44 ) }
    dend_12 { pt3dadd( -114.307, -167.09, -36.8141, 0.29 ) }
    dend_12 { pt3dadd( -114.818, -168.048, -37.1346, 0.81 ) }
    dend_12 { pt3dadd( -115.529, -169.425, -37.6569, 0.22 ) }
    dend_12 { pt3dadd( -115.872, -170.041, -37.9649, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 52.0507, -15.1891, -26.778, 0.15 ) }
    dend_9 { pt3dadd( 58.015, -19.698, -31.3556, 0.15 ) }
    dend_9 { pt3dadd( 63.5605, -24.6883, -35.9306, 0.15 ) }
    dend_9 { pt3dadd( 69.124, -28.8547, -41.276, 0.15 ) }
    dend_9 { pt3dadd( 75.1149, -33.4833, -45.693, 0.15 ) }
    dend_9 { pt3dadd( 81.4823, -36.4874, -50.97, 0.15 ) }
    dend_9 { pt3dadd( 87.6947, -39.4226, -56.4655, 0.15 ) }
    dend_9 { pt3dadd( 93.4529, -43.5185, -61.6632, 0.15 ) }
    dend_9 { pt3dadd( 97.7989, -48.4862, -67.3865, 0.15 ) }
    dend_9 { pt3dadd( 103.489, -53.3294, -71.9519, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 52.0507, -15.1891, -26.778, 0.59 ) }
    dend_8 { pt3dadd( 58.5268, -18.9529, -28.3308, 0.15 ) }
    dend_8 { pt3dadd( 64.8404, -22.9123, -30.0404, 0.15 ) }
    dend_8 { pt3dadd( 71.4427, -26.6387, -31.0326, 0.15 ) }
    dend_8 { pt3dadd( 78.1678, -30.222, -31.669, 0.15 ) }
    dend_8 { pt3dadd( 84.7316, -33.764, -33.3977, 0.15 ) }
    dend_8 { pt3dadd( 91.0285, -37.6867, -35.2571, 0.15 ) }
    dend_8 { pt3dadd( 96.9469, -42.2723, -36.7127, 0.15 ) }
    dend_8 { pt3dadd( 102.376, -47.2273, -38.7324, 0.15 ) }
    dend_8 { pt3dadd( 107.285, -52.7449, -40.545, 0.15 ) }
    dend_8 { pt3dadd( 111.795, -58.7983, -41.1548, 0.15 ) }
    dend_8 { pt3dadd( 116.933, -64.3009, -42.1576, 0.15 ) }
    dend_8 { pt3dadd( 121.861, -69.774, -44.0608, 0.15 ) }
    dend_8 { pt3dadd( 126.361, -75.4554, -46.3667, 0.15 ) }
    dend_8 { pt3dadd( 131.755, -80.0925, -49.151, 0.15 ) }
    dend_8 { pt3dadd( 138.541, -82.9307, -51.3423, 0.15 ) }
    dend_8 { pt3dadd( 145.392, -85.8241, -53.2217, 0.15 ) }
    dend_8 { pt3dadd( 152.458, -87.596, -55.6969, 0.15 ) }
    dend_8 { pt3dadd( 159.482, -89.8401, -57.8602, 0.15 ) }
    dend_8 { pt3dadd( 166.421, -90.8729, -61.0419, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 58.9502, -30.1338, -35.2271, 0.15 ) }
    dend_6 { pt3dadd( 64.9137, -38.5243, -42.4833, 0.15 ) }
    dend_6 { pt3dadd( 70.3381, -47.9085, -48.8271, 0.15 ) }
    dend_6 { pt3dadd( 76.0362, -56.3513, -56.2294, 0.15 ) }
    dend_6 { pt3dadd( 79.7762, -67.0502, -61.5118, 0.15 ) }
    dend_6 { pt3dadd( 83.2987, -78.5312, -64.8954, 0.15 ) }
    dend_6 { pt3dadd( 86.6103, -89.7241, -69.3248, 0.15 ) }
    dend_6 { pt3dadd( 91.1219, -99.4444, -75.8429, 0.15 ) }
    dend_6 { pt3dadd( 97.4438, -109.056, -80.8767, 0.15 ) }
    dend_6 { pt3dadd( 102.206, -119.784, -85.2044, 0.15 ) }
    dend_6 { pt3dadd( 108.526, -130.03, -88.7104, 0.15 ) }
    dend_6 { pt3dadd( 114.023, -140.641, -92.4414, 0.15 ) }
    dend_6 { pt3dadd( 118.796, -150.91, -97.7948, 0.15 ) }
    dend_6 { pt3dadd( 121.057, -161.729, -103.617, 0.15 ) }
    dend_6 { pt3dadd( 124.235, -172.824, -108.385, 0.15 ) }
    dend_6 { pt3dadd( 129.885, -183.465, -111.792, 0.15 ) }
    dend_6 { pt3dadd( 134.591, -193.549, -117.554, 0.15 ) }
    dend_6 { pt3dadd( 141.068, -203.043, -122.625, 0.15 ) }
    dend_6 { pt3dadd( 147.108, -213.29, -126.582, 0.15 ) }
    dend_6 { pt3dadd( 152.554, -223.016, -132.343, 0.15 ) }
    dend_6 { pt3dadd( 158.204, -233.155, -137.076, 0.15 ) }
    dend_6 { pt3dadd( 162.659, -242.99, -143.452, 0.15 ) }
    dend_6 { pt3dadd( 166.63, -253.639, -148.675, 0.15 ) }
    dend_6 { pt3dadd( 170.443, -264.93, -152.395, 0.15 ) }
    dend_6 { pt3dadd( 173.723, -275.661, -157.904, 0.15 ) }
    dend_6 { pt3dadd( 177.715, -286.284, -163.165, 0.15 ) }
    dend_6 { pt3dadd( 180.279, -297.737, -167.385, 0.15 ) }
    dend_6 { pt3dadd( 183.704, -309.489, -169.757, 0.15 ) }
    dend_6 { pt3dadd( 189.233, -320.706, -170.017, 0.15 ) }
    dend_6 { pt3dadd( 196.082, -331.131, -168.601, 0.15 ) }
    dend_6 { pt3dadd( 204.125, -340.612, -166.592, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 58.9502, -30.1338, -35.2271, 0.59 ) }
    dend_3 { pt3dadd( 65.9656, -36.2869, -37.0559, 0.15 ) }
    dend_3 { pt3dadd( 73.9778, -40.9788, -39.304, 0.15 ) }
    dend_3 { pt3dadd( 82.2122, -45.3941, -41.3228, 0.15 ) }
    dend_3 { pt3dadd( 88.9217, -51.4653, -44.2763, 0.15 ) }
    dend_3 { pt3dadd( 94.8297, -58.1585, -47.527, 0.15 ) }
    dend_3 { pt3dadd( 101.292, -64.1094, -51.2127, 0.15 ) }
    dend_3 { pt3dadd( 108.356, -69.0956, -55.2778, 0.15 ) }
    dend_3 { pt3dadd( 116.102, -73.0755, -59.2655, 0.15 ) }
    dend_3 { pt3dadd( 124.341, -77.1135, -61.9871, 0.15 ) }
    dend_3 { pt3dadd( 132.357, -81.9941, -63.7323, 0.15 ) }
    dend_3 { pt3dadd( 140.892, -86.2858, -63.9235, 0.15 ) }
    dend_3 { pt3dadd( 148.681, -91.6329, -62.7601, 0.15 ) }
    dend_3 { pt3dadd( 155.518, -97.631, -60.0462, 0.15 ) }
    dend_3 { pt3dadd( 161.03, -103.687, -55.263, 0.15 ) }
    dend_3 { pt3dadd( 166.71, -110.027, -51.1037, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 95/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -97.5567, -147.862, 23.364, 0.15 ) }
    dend_56 { pt3dadd( -103.871, -155.704, 25.744, 0.15 ) }
    dend_56 { pt3dadd( -110.182, -163.889, 26.1861, 0.15 ) }
    dend_56 { pt3dadd( -116.662, -171.795, 27.7914, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 99/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -97.5567, -147.862, 23.364, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_55 { pt3dadd( -104.223, -156.578, 26.2918, 0.15 ) }
    dend_55 { pt3dadd( -108.856, -166.15, 30.1394, 0.15 ) }
    dend_55 { pt3dadd( -114.088, -175.136, 34.6413, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -91.4042, -171.578, -110.498, 0.15 ) }
    dend_52 { pt3dadd( -95.1853, -178.835, -113.815, 0.15 ) }
    dend_52 { pt3dadd( -99.333, -186.325, -115.89, 0.15 ) }
    dend_52 { pt3dadd( -102.815, -193.849, -118.896, 0.15 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 7/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -91.4042, -171.578, -110.498, 0.59 ) }
    dend_51 { pt3dadd( -94.8786, -180.352, -115.363, 0.15 ) }
    dend_51 { pt3dadd( -96.317, -189.876, -119.79, 0.15 ) }
    dend_51 { pt3dadd( -99.1789, -198.994, -124.39, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 11/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 13.3336, -179.705, 49.3819, 0.15 ) }
    dend_45 { pt3dadd( 14.1067, -180.411, 49.2785, 0.15 ) }
    dend_45 { pt3dadd( 14.463, -180.736, 49.2309, 0.37 ) }
    dend_45 { pt3dadd( 15.0603, -181.281, 49.151, 1.18 ) }
    dend_45 { pt3dadd( 15.495, -181.678, 49.0928, 0.88 ) }
    dend_45 { pt3dadd( 16.2588, -182.375, 48.9907, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 13.3336, -179.705, 49.3819, 0.22 ) }
    dend_44 { pt3dadd( 13.3395, -180.551, 49.1858, 0.22 ) }
    dend_44 { pt3dadd( 13.3307, -181.18, 49.0149, 0.81 ) }
    dend_44 { pt3dadd( 13.3033, -181.79, 48.8529, 1.18 ) }
    dend_44 { pt3dadd( 13.2109, -182.71, 48.6335, 0.22 ) }
    dend_44 { pt3dadd( 13.0653, -183.487, 48.4804, 0.22 ) }
    dend_44 { pt3dadd( 12.8695, -184.252, 48.3552, 0.29 ) }
    dend_44 { pt3dadd( 12.6325, -184.969, 48.2649, 0.66 ) }
    dend_44 { pt3dadd( 12.3316, -185.686, 48.215, 0.81 ) }
    dend_44 { pt3dadd( 11.9508, -186.457, 48.207, 0.22 ) }
    dend_44 { pt3dadd( 11.3969, -187.45, 48.265, 0.22 ) }
    dend_44 { pt3dadd( 11.1216, -187.937, 48.3235, 0.29 ) }
    dend_44 { pt3dadd( 10.8566, -188.426, 48.3987, 0.96 ) }
    dend_44 { pt3dadd( 10.6181, -188.908, 48.4883, 1.7 ) }
    dend_44 { pt3dadd( 10.1687, -189.97, 48.7111, 0.52 ) }
    dend_44 { pt3dadd( 9.85063, -190.929, 48.9355, 0.22 ) }
    dend_44 { pt3dadd( 9.72917, -191.437, 49.0675, 0.15 ) }
    dend_44 { pt3dadd( 9.58259, -192.249, 49.3061, 0.22 ) }
    dend_44 { pt3dadd( 9.4755, -192.962, 49.5064, 0.15 ) }
    dend_44 { pt3dadd( 9.39127, -193.57, 49.6737, 0.15 ) }
    dend_44 { pt3dadd( 9.33518, -193.983, 49.7829, 0.15 ) }
    dend_44 { pt3dadd( 9.27687, -194.446, 49.8914, 0.37 ) }
    dend_44 { pt3dadd( 9.18996, -195.047, 49.9947, 0.59 ) }
    dend_44 { pt3dadd( 8.99497, -196.155, 50.1026, 0.07 ) }
    dend_44 { pt3dadd( 8.8573, -196.785, 50.1214, 0.07 ) }
    dend_44 { pt3dadd( 8.69472, -197.47, 50.1144, 0.15 ) }
    dend_44 { pt3dadd( 8.5856, -197.941, 50.0988, 0.66 ) }
    dend_44 { pt3dadd( 8.45671, -198.523, 50.0757, 0.74 ) }
    dend_44 { pt3dadd( 8.25997, -199.503, 50.0506, 0.15 ) }
    dend_44 { pt3dadd( 8.14836, -200.131, 50.0613, 0.22 ) }
    dend_44 { pt3dadd( 8.0617, -200.644, 50.0759, 0.15 ) }
    dend_44 { pt3dadd( 7.97439, -201.087, 50.0977, 0.81 ) }
    dend_44 { pt3dadd( 7.86372, -201.554, 50.1328, 0.66 ) }
    dend_44 { pt3dadd( 7.64007, -202.339, 50.1954, 0.15 ) }
    dend_44 { pt3dadd( 7.43463, -202.963, 50.2356, 0.22 ) }
    dend_44 { pt3dadd( 7.15322, -203.739, 50.2754, 0.52 ) }
    dend_44 { pt3dadd( 6.88285, -204.359, 50.3199, 0.59 ) }
    dend_44 { pt3dadd( 6.51471, -205.168, 50.4193, 0.07 ) }
    dend_44 { pt3dadd( 6.22405, -205.808, 50.5226, 0.22 ) }
    dend_44 { pt3dadd( 6.11745, -206.038, 50.5626, 0.22 ) }
    dend_44 { pt3dadd( 5.87406, -206.563, 50.6614, 0.96 ) }
    dend_44 { pt3dadd( 5.4097, -207.558, 50.8718, 0.07 ) }
    dend_44 { pt3dadd( 5.03574, -208.427, 51.0996, 0.07 ) }
    dend_44 { pt3dadd( 4.87906, -208.825, 51.2437, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -24.5657, -201.234, 20.937, 0.15 ) }
    dend_41 { pt3dadd( -25.4844, -209.596, 22.6339, 0.15 ) }
    dend_41 { pt3dadd( -26.9423, -218.001, 23.5667, 0.15 ) }
    dend_41 { pt3dadd( -28.525, -226.366, 24.6579, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -24.5657, -201.234, 20.937, 0.59 ) }
    dend_40 { pt3dadd( -26.6678, -213.101, 22.4695, 0.15 ) }
    dend_40 { pt3dadd( -27.5358, -225.179, 21.5533, 0.15 ) }
    dend_40 { pt3dadd( -31.1343, -236.801, 21.6259, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 11.5714, 30.7137, -1.6795, 0.52 ) }
    dend_32 { pt3dadd( 12.1518, 31.5134, -2.3344, 0.52 ) }
    dend_32 { pt3dadd( 12.7429, 31.9542, -3.16706, 0.37 ) }
    dend_32 { pt3dadd( 13.1739, 32.1508, -3.77456, 0.37 ) }
    dend_32 { pt3dadd( 13.3932, 32.2441, -4.09264, 0.52 ) }
    dend_32 { pt3dadd( 13.7916, 32.4534, -4.69893, 0.52 ) }
    dend_32 { pt3dadd( 14.389, 32.8478, -5.66043, 0.44 ) }
    dend_32 { pt3dadd( 14.6587, 33.0409, -6.16037, 0.44 ) }
    dend_32 { pt3dadd( 14.9562, 33.3042, -6.71453, 0.66 ) }
    dend_32 { pt3dadd( 15.2217, 33.6054, -7.13973, 0.66 ) }
    dend_32 { pt3dadd( 15.5701, 34.0889, -7.58832, 0.88 ) }
    dend_32 { pt3dadd( 15.8094, 34.4705, -7.80421, 1.03 ) }
    dend_32 { pt3dadd( 16.3426, 35.3417, -8.09906, 0.52 ) }
    dend_32 { pt3dadd( 16.7671, 36.0125, -8.2612, 0.52 ) }
    dend_32 { pt3dadd( 17.1472, 36.5844, -8.36934, 0.52 ) }
    dend_32 { pt3dadd( 17.5066, 37.0764, -8.44892, 0.52 ) }
    dend_32 { pt3dadd( 18.111, 37.8592, -8.59199, 0.22 ) }
    dend_32 { pt3dadd( 18.6948, 38.5818, -8.72244, 0.44 ) }
    dend_32 { pt3dadd( 19.2771, 39.2962, -8.84509, 0.74 ) }
    dend_32 { pt3dadd( 19.8839, 40.1003, -8.98661, 1.18 ) }
    dend_32 { pt3dadd( 20.3058, 40.7074, -9.10858, 0.88 ) }
    dend_32 { pt3dadd( 20.9679, 41.6843, -9.3474, 0.29 ) }
    dend_32 { pt3dadd( 26.237, 48.4131, -11.5253, 0.29 ) }
    dend_32 { pt3dadd( 31.4874, 54.9932, -14.183, 0.29 ) }
    dend_32 { pt3dadd( 36.6911, 61.9843, -15.4309, 0.29 ) }
    dend_32 { pt3dadd( 42.4358, 68.6621, -15.448, 0.29 ) }
    dend_32 { pt3dadd( 47.9084, 75.5479, -15.1976, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 11.5714, 30.7137, -1.6795, 0.88 ) }
    dend_25 { pt3dadd( 12.4888, 31.308, -1.333, 0.88 ) }
    dend_25 { pt3dadd( 13.1169, 31.6946, -1.13739, 0.81 ) }
    dend_25 { pt3dadd( 13.8614, 32.1541, -0.98154, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_25 { pt3dadd( 14.6482, 32.6407, -0.891267, 1.33 ) }
    dend_25 { pt3dadd( 15.5693, 33.2368, -0.841418, 1.33 ) }
    dend_25 { pt3dadd( 16.1026, 33.5929, -0.823389, 1.33 ) }
    dend_25 { pt3dadd( 16.6913, 34.0206, -0.828971, 1.33 ) }
    dend_25 { pt3dadd( 17.4264, 34.5738, -0.870289, 1.18 ) }
    dend_25 { pt3dadd( 18.1238, 35.1041, -0.932972, 1.03 ) }
    dend_25 { pt3dadd( 18.7452, 35.561, -0.985326, 0.88 ) }
    dend_25 { pt3dadd( 19.5149, 36.1304, -1.03349, 1.4 ) }
    dend_25 { pt3dadd( 20.4496, 36.8474, -1.05906, 0.74 ) }
    dend_25 { pt3dadd( 21.2126, 37.4429, -1.05892, 1.25 ) }
    dend_25 { pt3dadd( 22.038, 38.0751, -1.05029, 1.77 ) }
    dend_25 { pt3dadd( 23.1168, 38.908, -1.06738, 0.96 ) }
    dend_25 { pt3dadd( 24.01, 39.6164, -1.13075, 0.59 ) }
    dend_25 { pt3dadd( 24.66, 40.1629, -1.22051, 0.74 ) }
    dend_25 { pt3dadd( 25.1384, 40.5923, -1.31373, 0.96 ) }
    dend_25 { pt3dadd( 25.96, 41.3836, -1.48989, 1.11 ) }
    dend_25 { pt3dadd( 26.5421, 41.976, -1.60334, 1.4 ) }
    dend_25 { pt3dadd( 27.0619, 42.5224, -1.68141, 1.4 ) }
    dend_25 { pt3dadd( 27.9368, 43.4035, -1.76441, 0.96 ) }
    dend_25 { pt3dadd( 28.3171, 43.7665, -1.7633, 0.96 ) }
    dend_25 { pt3dadd( 29.1267, 44.4876, -1.66082, 1.18 ) }
    dend_25 { pt3dadd( 29.8154, 45.0431, -1.48873, 1.18 ) }
    dend_25 { pt3dadd( 30.5518, 45.5735, -1.27099, 1.03 ) }
    dend_25 { pt3dadd( 31.074, 45.9124, -1.13007, 0.96 ) }
    dend_25 { pt3dadd( 31.7927, 46.3496, -0.984364, 0.81 ) }
    dend_25 { pt3dadd( 32.5886, 46.8223, -0.892628, 0.74 ) }
    dend_25 { pt3dadd( 33.4432, 47.3319, -0.874915, 0.96 ) }
    dend_25 { pt3dadd( 34.3221, 47.8802, -0.912562, 1.25 ) }
    dend_25 { pt3dadd( 35.2847, 48.5124, -0.997077, 1.55 ) }
    dend_25 { pt3dadd( 36.1018, 49.0964, -1.09617, 0.88 ) }
    dend_25 { pt3dadd( 36.9922, 49.8191, -1.25328, 0.59 ) }
    dend_25 { pt3dadd( 37.5107, 50.3079, -1.35683, 0.81 ) }
    dend_25 { pt3dadd( 38.0418, 50.8984, -1.46454, 0.96 ) }
    dend_25 { pt3dadd( 38.5951, 51.5613, -1.5585, 1.33 ) }
    dend_25 { pt3dadd( 39.4045, 52.6275, -1.65898, 1.55 ) }
    dend_25 { pt3dadd( 40.074, 53.5977, -1.7323, 1.7 ) }
    dend_25 { pt3dadd( 40.6789, 54.5715, -1.81337, 1.62 ) }
    dend_25 { pt3dadd( 41.3155, 55.6934, -1.92564, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -93.8148, 231.408, -71.5964, 0.15 ) }
    dend_23 { pt3dadd( -95.9766, 235.914, -73.3177, 0.15 ) }
    dend_23 { pt3dadd( -97.3918, 240.649, -75.1655, 0.15 ) }
    dend_23 { pt3dadd( -99.5649, 245.336, -76.2401, 0.15 ) }
    dend_23 { pt3dadd( -101.546, 250.134, -77.1622, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 43/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -93.8148, 231.408, -71.5964, 0.59 ) }
    dend_22 { pt3dadd( -97.717, 239.215, -72.4493, 0.15 ) }
    dend_22 { pt3dadd( -102.291, 246.689, -73.0959, 0.15 ) }
    dend_22 { pt3dadd( -104.673, 255.095, -73.2401, 0.15 ) }
    dend_22 { pt3dadd( -106.402, 263.56, -74.4854, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -9.0463, 18.2514, 15.866, 0.81 ) }
    dend_17 { pt3dadd( -6.80144, 19.1391, 16.1793, 0.81 ) }
    dend_17 { pt3dadd( -5.56446, 19.7503, 16.2815, 0.44 ) }
    dend_17 { pt3dadd( -3.76606, 20.8477, 16.4838, 0.59 ) }
    dend_17 { pt3dadd( -2.28923, 21.8474, 16.7274, 0.59 ) }
    dend_17 { pt3dadd( -1.0544, 22.721, 16.9752, 0.88 ) }
    dend_17 { pt3dadd( -0.108669, 23.4043, 17.1902, 1.11 ) }
    dend_17 { pt3dadd( 1.0238, 24.2801, 17.3089, 1.11 ) }
    dend_17 { pt3dadd( 2.07996, 25.3599, 17.455, 0.29 ) }
    dend_17 { pt3dadd( 2.35458, 26.0428, 17.7064, 0.29 ) }
    dend_17 { pt3dadd( 2.18823, 26.5855, 18.1554, 0.29 ) }
    dend_17 { pt3dadd( 2.02401, 26.8653, 18.4523, 0.29 ) }
    dend_17 { pt3dadd( 1.88673, 27.1768, 18.8444, 0.29 ) }
    dend_17 { pt3dadd( 1.8216, 27.6909, 19.6238, 0.59 ) }
    dend_17 { pt3dadd( 1.97388, 28.1517, 20.3928, 1.11 ) }
    dend_17 { pt3dadd( 2.40465, 28.852, 21.6544, 1.84 ) }
    dend_17 { pt3dadd( 2.86805, 29.3882, 22.744, 1.84 ) }
    dend_17 { pt3dadd( 3.53918, 30.0316, 24.1625, 0.96 ) }
    dend_17 { pt3dadd( 4.04625, 30.4373, 25.1637, 0.74 ) }
    dend_17 { pt3dadd( 4.62723, 30.8847, 26.2376, 0.74 ) }
    dend_17 { pt3dadd( 5.23847, 31.4304, 27.4595, 0.74 ) }
    dend_17 { pt3dadd( 5.64624, 31.9005, 28.4159, 1.11 ) }
    dend_17 { pt3dadd( 6.06655, 32.5503, 29.4758, 1.47 ) }
    dend_17 { pt3dadd( 6.46912, 33.2722, 30.4727, 1.47 ) }
    dend_17 { pt3dadd( 6.99923, 34.2765, 31.7024, 0.74 ) }
    dend_17 { pt3dadd( 7.69322, 35.6344, 33.2424, 0.52 ) }
    dend_17 { pt3dadd( 8.0818, 36.3786, 34.0576, 0.52 ) }
    dend_17 { pt3dadd( 8.63327, 37.3936, 35.2218, 0.37 ) }
    dend_17 { pt3dadd( 9.16647, 38.1316, 36.2431, 0.37 ) }
    dend_17 { pt3dadd( 9.44394, 38.2809, 36.7019, 0.37 ) }
    dend_17 { pt3dadd( 9.81846, 38.2453, 37.2953, 0.37 ) }
    dend_17 { pt3dadd( 10.0999, 38.159, 37.7385, 0.37 ) }
    dend_17 { pt3dadd( 10.6757, 37.9973, 38.9214, 0.37 ) }
    dend_17 { pt3dadd( 10.966, 37.996, 39.9278, 0.37 ) }
    dend_17 { pt3dadd( 11.2586, 38.2735, 41.3894, 0.37 ) }
    dend_17 { pt3dadd( 11.4083, 38.6052, 42.4061, 0.37 ) }
    dend_17 { pt3dadd( 11.4933, 39.0455, 43.462, 0.59 ) }
    dend_17 { pt3dadd( 11.5252, 39.5968, 44.5545, 0.88 ) }
    dend_17 { pt3dadd( 11.4775, 40.7329, 46.3587, 0.88 ) }
    dend_17 { pt3dadd( 11.348, 41.74, 47.7624, 0.59 ) }
    dend_17 { pt3dadd( 11.1101, 43.0504, 49.3772, 0.59 ) }
    dend_17 { pt3dadd( 10.9827, 43.8919, 50.2982, 0.29 ) }
    dend_17 { pt3dadd( 10.8982, 44.821, 51.1862, 0.29 ) }
    dend_17 { pt3dadd( 10.8678, 45.9225, 52.1031, 0.29 ) }
    dend_17 { pt3dadd( 10.8933, 46.7538, 52.71, 0.96 ) }
    dend_17 { pt3dadd( 10.9846, 47.5696, 53.2867, 1.84 ) }
    dend_17 { pt3dadd( 11.187, 48.8277, 54.1341, 0.37 ) }
    dend_17 { pt3dadd( 11.3402, 49.795, 54.8208, 0.81 ) }
    dend_17 { pt3dadd( 11.4614, 50.9275, 55.7359, 1.55 ) }
    dend_17 { pt3dadd( 11.5263, 52.0397, 56.7989, 0.22 ) }
    dend_17 { pt3dadd( 11.5403, 52.869, 57.6523, 0.22 ) }
    dend_17 { pt3dadd( 11.5423, 53.4472, 58.3065, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_17 { pt3dadd( 11.6105, 54.1776, 59.1076, 0.29 ) }
    dend_17 { pt3dadd( 11.7589, 54.8924, 59.8027, 0.29 ) }
    dend_17 { pt3dadd( 12.018, 55.7317, 60.5361, 0.59 ) }
    dend_17 { pt3dadd( 12.5129, 56.9669, 61.5722, 1.77 ) }
    dend_17 { pt3dadd( 12.9105, 57.8443, 62.2851, 2.14 ) }
    dend_17 { pt3dadd( 13.763, 59.4774, 63.558, 0.29 ) }
    dend_17 { pt3dadd( 14.2103, 60.2545, 64.1285, 0.29 ) }
    dend_17 { pt3dadd( 14.6452, 61.0121, 64.6665, 0.29 ) }
    dend_17 { pt3dadd( 14.9056, 61.4398, 64.9692, 0.29 ) }
    dend_17 { pt3dadd( 15.2882, 62.024, 65.4293, 0.88 ) }
    dend_17 { pt3dadd( 15.7901, 62.732, 66.0528, 1.62 ) }
    dend_17 { pt3dadd( 16.246, 63.2927, 66.6186, 1.62 ) }
    dend_17 { pt3dadd( 16.8842, 64.0205, 67.3236, 2.21 ) }
    dend_17 { pt3dadd( 18.5427, 65.7531, 68.8949, 0.22 ) }
    dend_17 { pt3dadd( 19.2541, 66.4575, 69.4944, 0.22 ) }
    dend_17 { pt3dadd( 19.7527, 66.927, 69.8858, 0.22 ) }
    dend_17 { pt3dadd( 20.2721, 67.4019, 70.2624, 0.22 ) }
    dend_17 { pt3dadd( 21.2636, 68.2887, 70.9108, 0.44 ) }
    dend_17 { pt3dadd( 22.4314, 69.2697, 71.5465, 0.66 ) }
    dend_17 { pt3dadd( 22.6144, 69.434, 71.637, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.0463, 18.2514, 15.866, 0.96 ) }
    dend_14 { pt3dadd( -8.20924, 17.1874, 16.2727, 0.96 ) }
    dend_14 { pt3dadd( -7.32204, 16.0781, 16.6677, 0.37 ) }
    dend_14 { pt3dadd( -7.08992, 15.6538, 16.8018, 0.29 ) }
    dend_14 { pt3dadd( -6.79663, 14.847, 17.0177, 0.22 ) }
    dend_14 { pt3dadd( -6.67331, 14.296, 17.1785, 0.22 ) }
    dend_14 { pt3dadd( -6.55349, 13.4284, 17.4501, 0.52 ) }
    dend_14 { pt3dadd( -6.49705, 12.3673, 17.8065, 0.74 ) }
    dend_14 { pt3dadd( -6.62676, 10.884, 18.3334, 0.52 ) }
    dend_14 { pt3dadd( -6.78061, 9.80262, 18.7183, 1.11 ) }
    dend_14 { pt3dadd( -7.0327, 8.14829, 19.3101, 1.62 ) }
    dend_14 { pt3dadd( -7.25271, 6.67926, 19.819, 1.33 ) }
    dend_14 { pt3dadd( -7.52242, 4.60825, 20.5124, 1.11 ) }
    dend_14 { pt3dadd( -7.84397, 1.7766, 21.4392, 0.44 ) }
    dend_14 { pt3dadd( -7.99365, 0.281314, 21.9097, 0.44 ) }
    dend_14 { pt3dadd( -8.15611, -1.26936, 22.3776, 0.44 ) }
    dend_14 { pt3dadd( -8.30306, -2.50873, 22.7205, 0.96 ) }
    dend_14 { pt3dadd( -8.53101, -4.29893, 23.2046, 1.47 ) }
    dend_14 { pt3dadd( -8.85204, -6.372, 23.7641, 1.7 ) }
    dend_14 { pt3dadd( -9.28726, -8.67329, 24.4383, 1.7 ) }
    dend_14 { pt3dadd( -9.81646, -10.7127, 25.1357, 1.7 ) }
    dend_14 { pt3dadd( -10.44, -12.6096, 25.8702, 0.59 ) }
    dend_14 { pt3dadd( -11.0982, -14.3597, 26.6377, 0.44 ) }
    dend_14 { pt3dadd( -11.7334, -15.9146, 27.4035, 0.44 ) }
    dend_14 { pt3dadd( -12.0995, -16.8145, 27.9165, 0.44 ) }
    dend_14 { pt3dadd( -12.5824, -18.1546, 28.8211, 0.44 ) }
    dend_14 { pt3dadd( -12.6932, -18.6197, 29.1839, 0.44 ) }
    dend_14 { pt3dadd( -12.6989, -19.2136, 29.6269, 0.44 ) }
    dend_14 { pt3dadd( -12.5535, -20.1408, 30.2142, 0.44 ) }
    dend_14 { pt3dadd( -12.4448, -20.757, 30.5694, 0.88 ) }
    dend_14 { pt3dadd( -12.2824, -22.224, 31.3502, 1.4 ) }
    dend_14 { pt3dadd( -12.2687, -23.2386, 31.888, 1.4 ) }
    dend_14 { pt3dadd( -12.4476, -24.8745, 32.7894, 0.66 ) }
    dend_14 { pt3dadd( -12.7037, -26.0835, 33.4662, 0.22 ) }
    dend_14 { pt3dadd( -13.0145, -27.2659, 34.1574, 0.22 ) }
    dend_14 { pt3dadd( -13.1959, -27.944, 34.5696, 1.03 ) }
    dend_14 { pt3dadd( -13.489, -29.1071, 35.292, 2.36 ) }
    dend_14 { pt3dadd( -13.7612, -30.4634, 36.1466, 2.65 ) }
    dend_14 { pt3dadd( -14.0607, -32.8791, 37.7171, 0.81 ) }
    dend_14 { pt3dadd( -14.0277, -34.2259, 38.507, 0.22 ) }
    dend_14 { pt3dadd( -13.9267, -34.8816, 38.8575, 0.22 ) }
    dend_14 { pt3dadd( -13.7733, -35.5062, 39.1771, 0.66 ) }
    dend_14 { pt3dadd( -13.5167, -36.274, 39.5593, 0.66 ) }
    dend_14 { pt3dadd( -13.3165, -36.7503, 39.8018, 0.66 ) }
    dend_14 { pt3dadd( -12.6475, -38.0559, 40.5121, 0.22 ) }
    dend_14 { pt3dadd( -12.3637, -38.7266, 40.8938, 0.22 ) }
    dend_14 { pt3dadd( -12.2734, -39.0379, 41.0979, 0.22 ) }
    dend_14 { pt3dadd( -12.2038, -39.5609, 41.4911, 0.22 ) }
    dend_14 { pt3dadd( -12.2126, -40.2758, 42.0532, 0.22 ) }
    dend_14 { pt3dadd( -12.264, -40.5794, 42.2951, 0.22 ) }
    dend_14 { pt3dadd( -12.4984, -41.301, 42.8647, 0.22 ) }
    dend_14 { pt3dadd( -12.6721, -41.7267, 43.1559, 0.29 ) }
    dend_14 { pt3dadd( -13.1653, -42.8312, 43.8152, 0.29 ) }
    dend_14 { pt3dadd( -13.4033, -43.4128, 44.1146, 0.59 ) }
    dend_14 { pt3dadd( -13.7895, -44.493, 44.6017, 0.88 ) }
    dend_14 { pt3dadd( -14.0929, -45.5696, 45.0496, 0.66 ) }
    dend_14 { pt3dadd( -14.3161, -46.9632, 45.5701, 0.22 ) }
    dend_14 { pt3dadd( -14.3309, -47.6284, 45.8063, 0.22 ) }
    dend_14 { pt3dadd( -14.2009, -49.2664, 46.4123, 0.59 ) }
    dend_14 { pt3dadd( -13.9892, -50.6395, 46.943, 1.03 ) }
    dend_14 { pt3dadd( -13.7306, -51.9985, 47.4818, 1.62 ) }
    dend_14 { pt3dadd( -13.3702, -53.824, 48.2547, 0.59 ) }
    dend_14 { pt3dadd( -13.0638, -55.696, 49.0629, 0.22 ) }
    dend_14 { pt3dadd( -12.9302, -56.9994, 49.6579, 0.52 ) }
    dend_14 { pt3dadd( -12.918, -57.7719, 50.0504, 1.25 ) }
    dend_14 { pt3dadd( -13.0136, -59.0397, 50.7803, 2.14 ) }
    dend_14 { pt3dadd( -13.2288, -60.1913, 51.5144, 1.33 ) }
    dend_14 { pt3dadd( -13.6525, -61.6967, 52.6135, 0.52 ) }
    dend_14 { pt3dadd( -13.8991, -62.5385, 53.2739, 0.22 ) }
    dend_14 { pt3dadd( -14.1189, -63.4835, 54.0415, 0.44 ) }
    dend_14 { pt3dadd( -14.2348, -64.2396, 54.6894, 0.44 ) }
    dend_14 { pt3dadd( -14.2635, -65.0248, 55.33, 0.22 ) }
    dend_14 { pt3dadd( -14.2613, -65.7974, 55.8395, 0.22 ) }
    dend_14 { pt3dadd( -14.2547, -66.7657, 56.39, 0.22 ) }
    dend_14 { pt3dadd( -14.2711, -67.4544, 56.7072, 0.52 ) }
    dend_14 { pt3dadd( -14.3358, -68.4277, 57.0827, 0.74 ) }
    dend_14 { pt3dadd( -14.5671, -69.9998, 57.7152, 0.81 ) }
    dend_14 { pt3dadd( -14.9219, -71.3524, 58.4471, 0.22 ) }
    dend_14 { pt3dadd( -15.2862, -72.1407, 59.0653, 0.22 ) }
    dend_14 { pt3dadd( -15.4828, -72.4596, 59.4109, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -15.7674, -72.9376, 59.9911, 0.66 ) }
    dend_14 { pt3dadd( -16.198, -73.7501, 61.0731, 1.33 ) }
    dend_14 { pt3dadd( -16.4961, -74.4649, 62.0322, 1.55 ) }
    dend_14 { pt3dadd( -16.7297, -75.3075, 63.0284, 0.88 ) }
    dend_14 { pt3dadd( -17.0195, -76.4631, 64.147, 0.15 ) }
    dend_14 { pt3dadd( -17.3365, -77.6725, 65.2025, 0.29 ) }
    dend_14 { pt3dadd( -17.5124, -78.3451, 65.7363, 0.88 ) }
    dend_14 { pt3dadd( -17.7253, -79.0471, 66.2209, 1.25 ) }
    dend_14 { pt3dadd( -17.9761, -79.8033, 66.7107, 1.33 ) }
    dend_14 { pt3dadd( -18.6741, -81.7872, 67.9878, 0.22 ) }
    dend_14 { pt3dadd( -18.9832, -82.6665, 68.5486, 0.74 ) }
    dend_14 { pt3dadd( -19.273, -83.5068, 69.0859, 1.25 ) }
    dend_14 { pt3dadd( -19.7001, -84.9649, 69.9587, 0.44 ) }
    dend_14 { pt3dadd( -19.8442, -86.0691, 70.5393, 0.22 ) }
    dend_14 { pt3dadd( -19.8301, -86.7322, 70.8278, 0.22 ) }
    dend_14 { pt3dadd( -19.6975, -87.6665, 71.1299, 0.96 ) }
    dend_14 { pt3dadd( -19.5803, -88.2636, 71.2987, 1.55 ) }
    dend_14 { pt3dadd( -19.3056, -89.4736, 71.6211, 1.33 ) }
    dend_14 { pt3dadd( -18.6306, -92.2313, 72.3843, 0.15 ) }
    dend_14 { pt3dadd( -18.4922, -92.8967, 72.5745, 0.37 ) }
    dend_14 { pt3dadd( -18.2913, -94.1387, 72.9737, 0.15 ) }
    dend_14 { pt3dadd( -18.1818, -95.1872, 73.3897, 0.15 ) }
    dend_14 { pt3dadd( -18.1352, -96.144, 73.8445, 0.52 ) }
    dend_14 { pt3dadd( -18.1463, -97.1677, 74.4044, 1.18 ) }
    dend_14 { pt3dadd( -18.2373, -98.4025, 75.1715, 2.06 ) }
    dend_14 { pt3dadd( -18.3701, -99.9751, 76.2043, 0.96 ) }
    dend_14 { pt3dadd( -18.5202, -101.591, 77.3078, 0.22 ) }
    dend_14 { pt3dadd( -18.6535, -102.738, 78.0999, 0.22 ) }
    dend_14 { pt3dadd( -18.8256, -104.089, 79.0585, 0.22 ) }
    dend_14 { pt3dadd( -18.9382, -104.956, 79.6822, 0.22 ) }
    dend_14 { pt3dadd( -19.0931, -106.246, 80.6521, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 166.71, -110.027, -51.1037, 0.15 ) }
    dend_5 { pt3dadd( 172.822, -114.967, -52.2562, 0.15 ) }
    dend_5 { pt3dadd( 178.446, -120.514, -52.815, 0.15 ) }
    dend_5 { pt3dadd( 184.134, -125.931, -53.881, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 166.71, -110.027, -51.1037, 0.59 ) }
    dend_4 { pt3dadd( 180.748, -118.471, -52.4826, 0.15 ) }
    dend_4 { pt3dadd( 195.331, -126.05, -52.1302, 0.15 ) }
    dend_4 { pt3dadd( 207.82, -136.343, -49.8725, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 47.9084, 75.5479, -15.1976, 0.15 ) }
    dend_34 { pt3dadd( 54.9433, 84.6411, -21.0133, 0.15 ) }
    dend_34 { pt3dadd( 59.3597, 95.068, -27.0574, 0.15 ) }
    dend_34 { pt3dadd( 60.902, 105.997, -33.575, 0.15 ) }
    dend_34 { pt3dadd( 60.7696, 117.35, -39.4822, 0.15 ) }
    dend_34 { pt3dadd( 58.6681, 128.097, -46.1636, 0.15 ) }
    dend_34 { pt3dadd( 58.2061, 138.629, -53.4897, 0.15 ) }
    dend_34 { pt3dadd( 58.4323, 149.429, -60.4029, 0.15 ) }
    dend_34 { pt3dadd( 58.4958, 160.186, -67.3905, 0.15 ) }
    dend_34 { pt3dadd( 59.3302, 171.849, -72.5544, 0.15 ) }
    dend_34 { pt3dadd( 58.4294, 184.298, -75.0844, 0.15 ) }
    dend_34 { pt3dadd( 60.0702, 196.907, -75.3179, 0.15 ) }
    dend_34 { pt3dadd( 63.3301, 209.21, -75.0259, 0.15 ) }
    dend_34 { pt3dadd( 65.3464, 221.472, -72.295, 0.15 ) }
    dend_34 { pt3dadd( 68.5292, 233.37, -69.0407, 0.15 ) }
    dend_34 { pt3dadd( 72.7364, 245.195, -66.8196, 0.15 ) }
    dend_34 { pt3dadd( 74.3923, 257.711, -65.3053, 0.15 ) }
    dend_34 { pt3dadd( 75.5236, 270.37, -64.9867, 0.15 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 47.9084, 75.5479, -15.1976, 0.59 ) }
    dend_33 { pt3dadd( 54.3456, 82.9409, -12.1469, 0.15 ) }
    dend_33 { pt3dadd( 59.9739, 90.7047, -8.5236, 0.15 ) }
    dend_33 { pt3dadd( 65.9598, 97.2394, -3.28649, 0.15 ) }
    dend_33 { pt3dadd( 70.2965, 104.544, 2.47601, 0.15 ) }
    dend_33 { pt3dadd( 75.2818, 110.755, 9.01086, 0.15 ) }
    dend_33 { pt3dadd( 79.6941, 117.533, 15.3623, 0.15 ) }
    dend_33 { pt3dadd( 83.209, 124.727, 21.7908, 0.15 ) }
    dend_33 { pt3dadd( 88.9081, 131.394, 27.1692, 0.15 ) }
    dend_33 { pt3dadd( 94.4853, 138.005, 32.7445, 0.15 ) }
    dend_33 { pt3dadd( 99.3454, 145.476, 37.8265, 0.15 ) }
    dend_33 { pt3dadd( 103.078, 153.799, 42.4493, 0.15 ) }
    dend_33 { pt3dadd( 108.198, 160.759, 48.0143, 0.15 ) }
    dend_33 { pt3dadd( 114.468, 165.648, 54.6273, 0.15 ) }
    dend_33 { pt3dadd( 121.49, 169.812, 61.0037, 0.15 ) }
    dend_33 { pt3dadd( 128.751, 174.264, 66.89, 0.15 ) }
    dend_33 { pt3dadd( 136.274, 180.014, 70.9962, 0.15 ) }
    dend_33 { pt3dadd( 144.897, 184.94, 73.8935, 0.15 ) }
    dend_33 { pt3dadd( 152.873, 190.716, 76.9826, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 41.3155, 55.6934, -1.92564, 0.66 ) }
    dend_27 { pt3dadd( 42.1182, 57.2197, -2.16083, 0.66 ) }
    dend_27 { pt3dadd( 42.5773, 58.0046, -2.30402, 0.66 ) }
    dend_27 { pt3dadd( 43.1423, 58.9453, -2.48446, 0.44 ) }
    dend_27 { pt3dadd( 43.5533, 59.6296, -2.59981, 0.37 ) }
    dend_27 { pt3dadd( 44.0895, 60.5412, -2.72046, 0.37 ) }
    dend_27 { pt3dadd( 44.5603, 61.3577, -2.78475, 0.37 ) }
    dend_27 { pt3dadd( 44.7989, 61.7475, -2.79649, 0.59 ) }
    dend_27 { pt3dadd( 45.2104, 62.4719, -2.79237, 1.11 ) }
    dend_27 { pt3dadd( 45.7817, 63.6607, -2.75168, 0.37 ) }
    dend_27 { pt3dadd( 46.1597, 64.6235, -2.6325, 0.59 ) }
    dend_27 { pt3dadd( 46.5448, 65.8158, -2.39801, 0.37 ) }
    dend_27 { pt3dadd( 46.9028, 66.9966, -2.10136, 0.44 ) }
    dend_27 { pt3dadd( 47.1102, 67.6404, -1.92035, 0.22 ) }
    dend_27 { pt3dadd( 47.3295, 68.2138, -1.7454, 0.22 ) }
    dend_27 { pt3dadd( 48.017, 69.7053, -1.27595, 0.22 ) }
    dend_27 { pt3dadd( 48.4669, 70.4822, -1.04317, 0.22 ) }
    dend_27 { pt3dadd( 48.7565, 70.8736, -0.939315, 0.44 ) }
    dend_27 { pt3dadd( 49.2841, 71.4393, -0.819, 0.66 ) }
    dend_27 { pt3dadd( 50.1504, 72.2112, -0.719563, 0.22 ) }
    dend_27 { pt3dadd( 50.5452, 72.5172, -0.709445, 0.22 ) }
    dend_27 { pt3dadd( 51.0701, 72.8827, -0.728544, 0.66 ) }
    dend_27 { pt3dadd( 51.5187, 73.1819, -0.735035, 1.03 ) }
    dend_27 { pt3dadd( 52.5425, 73.8716, -0.738342, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 53.412, 74.4882, -0.735886, 0.66 ) }
    dend_27 { pt3dadd( 53.94, 74.8851, -0.723727, 0.81 ) }
    dend_27 { pt3dadd( 55.1295, 75.7993, -0.680653, 1.03 ) }
    dend_27 { pt3dadd( 56.0367, 76.5013, -0.637185, 0.74 ) }
    dend_27 { pt3dadd( 56.9324, 77.1884, -0.579822, 0.37 ) }
    dend_27 { pt3dadd( 57.5905, 77.6621, -0.532035, 0.37 ) }
    dend_27 { pt3dadd( 58.1487, 78.0543, -0.492027, 0.29 ) }
    dend_27 { pt3dadd( 58.7318, 78.4578, -0.453916, 0.29 ) }
    dend_27 { pt3dadd( 59.2177, 78.7925, -0.431628, 0.66 ) }
    dend_27 { pt3dadd( 59.9331, 79.2755, -0.386668, 1.25 ) }
    dend_27 { pt3dadd( 61.2116, 80.1175, -0.304646, 0.29 ) }
    dend_27 { pt3dadd( 61.6016, 80.3746, -0.284354, 0.29 ) }
    dend_27 { pt3dadd( 62.4157, 80.9421, -0.25768, 0.88 ) }
    dend_27 { pt3dadd( 63.1935, 81.532, -0.240416, 0.52 ) }
    dend_27 { pt3dadd( 63.826, 82.0465, -0.234979, 1.11 ) }
    dend_27 { pt3dadd( 64.6957, 82.7955, -0.241525, 0.66 ) }
    dend_27 { pt3dadd( 65.5144, 83.5273, -0.237523, 0.29 ) }
    dend_27 { pt3dadd( 66.1091, 84.0383, -0.231246, 0.59 ) }
    dend_27 { pt3dadd( 67.1831, 84.8887, -0.218486, 0.22 ) }
    dend_27 { pt3dadd( 67.6885, 85.2498, -0.210672, 0.59 ) }
    dend_27 { pt3dadd( 68.3942, 85.7138, -0.202582, 1.18 ) }
    dend_27 { pt3dadd( 69.2772, 86.2403, -0.180405, 0.22 ) }
    dend_27 { pt3dadd( 69.8707, 86.5712, -0.161551, 0.22 ) }
    dend_27 { pt3dadd( 70.3698, 86.8458, -0.14615, 0.22 ) }
    dend_27 { pt3dadd( 70.9094, 87.1632, -0.115731, 0.22 ) }
    dend_27 { pt3dadd( 71.2696, 87.4246, -0.0923588, 0.22 ) }
    dend_27 { pt3dadd( 71.6769, 87.8072, -0.0673695, 0.37 ) }
    dend_27 { pt3dadd( 72.271, 88.5136, -0.0273257, 0.37 ) }
    dend_27 { pt3dadd( 72.655, 89.0434, 0.0100859, 0.22 ) }
    dend_27 { pt3dadd( 73.0854, 89.6987, 0.0714328, 0.52 ) }
    dend_27 { pt3dadd( 73.6561, 90.6014, 0.191447, 0.52 ) }
    dend_27 { pt3dadd( 74.0451, 91.1893, 0.291133, 0.96 ) }
    dend_27 { pt3dadd( 74.4482, 91.7366, 0.404504, 1.77 ) }
    dend_27 { pt3dadd( 74.9122, 92.2996, 0.538465, 1.77 ) }
    dend_27 { pt3dadd( 75.5813, 93.0666, 0.723878, 0.22 ) }
    dend_27 { pt3dadd( 76.066, 93.6003, 0.845462, 0.22 ) }
    dend_27 { pt3dadd( 76.5395, 94.0772, 0.962715, 0.22 ) }
    dend_27 { pt3dadd( 77.0255, 94.5448, 1.06946, 0.22 ) }
    dend_27 { pt3dadd( 77.4787, 94.968, 1.14223, 0.22 ) }
    dend_27 { pt3dadd( 78.0161, 95.4954, 1.20019, 0.22 ) }
    dend_27 { pt3dadd( 78.5796, 96.0808, 1.21962, 0.22 ) }
    dend_27 { pt3dadd( 78.8671, 96.4023, 1.22093, 0.66 ) }
    dend_27 { pt3dadd( 79.2918, 96.8926, 1.22292, 0.81 ) }
    dend_27 { pt3dadd( 79.9165, 97.6237, 1.24493, 0.22 ) }
    dend_27 { pt3dadd( 80.4142, 98.1824, 1.28455, 0.22 ) }
    dend_27 { pt3dadd( 80.8325, 98.6749, 1.33401, 0.74 ) }
    dend_27 { pt3dadd( 81.3234, 99.3282, 1.40523, 0.88 ) }
    dend_27 { pt3dadd( 81.5991, 99.7454, 1.45608, 1.11 ) }
    dend_27 { pt3dadd( 82.2034, 100.79, 1.61518, 1.11 ) }
    dend_27 { pt3dadd( 82.6942, 101.78, 1.78262, 0.37 ) }
    dend_27 { pt3dadd( 83.2053, 102.899, 2.00134, 0.22 ) }
    dend_27 { pt3dadd( 83.5054, 103.604, 2.16189, 0.29 ) }
    dend_27 { pt3dadd( 83.7728, 104.249, 2.33373, 0.29 ) }
    dend_27 { pt3dadd( 84.0576, 104.894, 2.53637, 0.37 ) }
    dend_27 { pt3dadd( 84.3866, 105.466, 2.76446, 0.37 ) }
    dend_27 { pt3dadd( 84.6992, 105.825, 2.96369, 0.22 ) }
    dend_27 { pt3dadd( 85.1219, 106.147, 3.20057, 0.22 ) }
    dend_27 { pt3dadd( 85.7661, 106.541, 3.53579, 0.22 ) }
    dend_27 { pt3dadd( 86.4066, 106.879, 3.83781, 0.29 ) }
    dend_27 { pt3dadd( 87.3621, 107.355, 4.26893, 0.22 ) }
    dend_27 { pt3dadd( 87.934, 107.654, 4.51915, 1.4 ) }
    dend_27 { pt3dadd( 88.5356, 108.018, 4.78567, 2.21 ) }
    dend_27 { pt3dadd( 88.9481, 108.336, 4.99171, 1.7 ) }
    dend_27 { pt3dadd( 89.4635, 108.837, 5.30987, 0.96 ) }
    dend_27 { pt3dadd( 90.0312, 109.467, 5.74867, 0.96 ) }
    dend_27 { pt3dadd( 90.3515, 109.83, 6.03337, 1.47 ) }
    dend_27 { pt3dadd( 90.6952, 110.198, 6.3486, 1.47 ) }
    dend_27 { pt3dadd( 91.3883, 110.888, 6.97844, 0.22 ) }
    dend_27 { pt3dadd( 91.8391, 111.312, 7.36011, 0.22 ) }
    dend_27 { pt3dadd( 92.3183, 111.77, 7.7351, 0.22 ) }
    dend_27 { pt3dadd( 92.8003, 112.23, 8.05604, 0.22 ) }
    dend_27 { pt3dadd( 93.2211, 112.619, 8.29424, 0.22 ) }
    dend_27 { pt3dadd( 93.5455, 112.922, 8.42989, 0.88 ) }
    dend_27 { pt3dadd( 94.0466, 113.391, 8.57831, 1.99 ) }
    dend_27 { pt3dadd( 94.7666, 114.082, 8.72319, 1.55 ) }
    dend_27 { pt3dadd( 95.6176, 114.947, 8.83394, 0.22 ) }
    dend_27 { pt3dadd( 96.2392, 115.593, 8.89867, 0.22 ) }
    dend_27 { pt3dadd( 97.0751, 116.425, 8.96905, 0.29 ) }
    dend_27 { pt3dadd( 97.5966, 116.921, 9.00359, 0.59 ) }
    dend_27 { pt3dadd( 98.4257, 117.632, 9.01144, 0.96 ) }
    dend_27 { pt3dadd( 99.4081, 118.382, 8.97087, 0.15 ) }
    dend_27 { pt3dadd( 100.243, 118.962, 8.92222, 1.18 ) }
    dend_27 { pt3dadd( 101.32, 119.669, 8.85234, 1.18 ) }
    dend_27 { pt3dadd( 102.24, 120.243, 8.79455, 1.4 ) }
    dend_27 { pt3dadd( 103.571, 121.037, 8.71141, 0.22 ) }
    dend_27 { pt3dadd( 104.176, 121.399, 8.67099, 0.37 ) }
    dend_27 { pt3dadd( 104.813, 121.801, 8.63781, 1.03 ) }
    dend_27 { pt3dadd( 105.1, 122.002, 8.6307, 0.88 ) }
    dend_27 { pt3dadd( 105.497, 122.307, 8.64867, 0.74 ) }
    dend_27 { pt3dadd( 106.049, 122.747, 8.71409, 0.96 ) }
    dend_27 { pt3dadd( 106.796, 123.442, 8.87738, 0.22 ) }
    dend_27 { pt3dadd( 107.464, 124.103, 9.02094, 0.96 ) }
    dend_27 { pt3dadd( 107.823, 124.447, 9.08002, 0.74 ) }
    dend_27 { pt3dadd( 108.454, 125.013, 9.18685, 0.22 ) }
    dend_27 { pt3dadd( 109.084, 125.554, 9.29506, 0.29 ) }
    dend_27 { pt3dadd( 110.021, 126.338, 9.45115, 0.29 ) }
    dend_27 { pt3dadd( 110.674, 126.856, 9.54028, 0.29 ) }
    dend_27 { pt3dadd( 111.699, 127.649, 9.63289, 0.22 ) }
    dend_27 { pt3dadd( 112.21, 128.046, 9.66385, 0.66 ) }
    dend_27 { pt3dadd( 112.634, 128.397, 9.68291, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 112.902, 128.614, 9.6888, 1.55 ) }
    dend_27 { pt3dadd( 113.909, 129.393, 9.67689, 0.15 ) }
    dend_27 { pt3dadd( 114.697, 130.036, 9.65687, 0.15 ) }
    dend_27 { pt3dadd( 115.364, 130.624, 9.62386, 0.15 ) }
    dend_27 { pt3dadd( 115.928, 131.147, 9.55875, 0.15 ) }
    dend_27 { pt3dadd( 116.441, 131.65, 9.48702, 0.15 ) }
    dend_27 { pt3dadd( 116.838, 132.079, 9.43901, 0.88 ) }
    dend_27 { pt3dadd( 117.323, 132.652, 9.38685, 1.18 ) }
    dend_27 { pt3dadd( 117.897, 133.393, 9.33176, 1.18 ) }
    dend_27 { pt3dadd( 118.722, 134.469, 9.25618, 0.22 ) }
    dend_27 { pt3dadd( 119.601, 135.581, 9.18385, 0.22 ) }
    dend_27 { pt3dadd( 120.142, 136.301, 9.14307, 1.18 ) }
    dend_27 { pt3dadd( 120.402, 136.651, 9.12797, 1.92 ) }
    dend_27 { pt3dadd( 120.826, 137.236, 9.11786, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 41.3155, 55.6934, -1.92564, 0.44 ) }
    dend_26 { pt3dadd( 41.9593, 55.9039, -2.02612, 0.44 ) }
    dend_26 { pt3dadd( 42.6474, 56.1319, -2.12396, 0.44 ) }
    dend_26 { pt3dadd( 42.9928, 56.2253, -2.16798, 0.96 ) }
    dend_26 { pt3dadd( 43.7708, 56.3856, -2.2571, 1.7 ) }
    dend_26 { pt3dadd( 44.4623, 56.5109, -2.33437, 1.99 ) }
    dend_26 { pt3dadd( 45.5002, 56.6809, -2.461, 1.11 ) }
    dend_26 { pt3dadd( 46.1956, 56.7807, -2.56894, 0.37 ) }
    dend_26 { pt3dadd( 46.8301, 56.8692, -2.70618, 0.37 ) }
    dend_26 { pt3dadd( 47.6004, 56.9805, -2.91397, 0.37 ) }
    dend_26 { pt3dadd( 48.0758, 57.0637, -3.08206, 0.37 ) }
    dend_26 { pt3dadd( 48.5209, 57.1549, -3.27221, 0.44 ) }
    dend_26 { pt3dadd( 49.1576, 57.2959, -3.59119, 0.96 ) }
    dend_26 { pt3dadd( 49.9474, 57.4842, -4.03794, 1.62 ) }
    dend_26 { pt3dadd( 50.7364, 57.6887, -4.47509, 1.18 ) }
    dend_26 { pt3dadd( 51.7951, 57.9738, -5.0157, 0.29 ) }
    dend_26 { pt3dadd( 52.353, 58.1113, -5.26106, 0.44 ) }
    dend_26 { pt3dadd( 52.7785, 58.2051, -5.41249, 0.59 ) }
    dend_26 { pt3dadd( 53.4538, 58.3319, -5.60613, 0.29 ) }
    dend_26 { pt3dadd( 54.3783, 58.4967, -5.81061, 0.29 ) }
    dend_26 { pt3dadd( 55.448, 58.7031, -5.99146, 0.59 ) }
    dend_26 { pt3dadd( 56.1866, 58.8897, -6.08458, 1.03 ) }
    dend_26 { pt3dadd( 57.0727, 59.1806, -6.17524, 1.7 ) }
    dend_26 { pt3dadd( 57.9111, 59.5077, -6.24822, 1.7 ) }
    dend_26 { pt3dadd( 58.9194, 59.9178, -6.33013, 0.96 ) }
    dend_26 { pt3dadd( 59.5228, 60.1568, -6.39562, 1.33 ) }
    dend_26 { pt3dadd( 60.6553, 60.596, -6.5282, 1.62 ) }
    dend_26 { pt3dadd( 61.5525, 60.9515, -6.65524, 0.52 ) }
    dend_26 { pt3dadd( 62.2438, 61.2284, -6.76312, 0.22 ) }
    dend_26 { pt3dadd( 62.9819, 61.5288, -6.8887, 0.22 ) }
    dend_26 { pt3dadd( 63.9077, 61.9025, -7.07898, 0.22 ) }
    dend_26 { pt3dadd( 64.6069, 62.2113, -7.24619, 0.74 ) }
    dend_26 { pt3dadd( 65.234, 62.536, -7.41433, 1.33 ) }
    dend_26 { pt3dadd( 65.7786, 62.897, -7.573, 1.77 ) }
    dend_26 { pt3dadd( 66.5735, 63.5517, -7.81447, 0.44 ) }
    dend_26 { pt3dadd( 67.2982, 64.2664, -8.03192, 0.22 ) }
    dend_26 { pt3dadd( 67.8679, 64.8785, -8.19596, 0.66 ) }
    dend_26 { pt3dadd( 68.3171, 65.3483, -8.32565, 0.29 ) }
    dend_26 { pt3dadd( 68.7136, 65.7322, -8.4366, 0.29 ) }
    dend_26 { pt3dadd( 68.9685, 65.94, -8.50693, 0.22 ) }
    dend_26 { pt3dadd( 69.3242, 66.1772, -8.59327, 0.22 ) }
    dend_26 { pt3dadd( 69.859, 66.4679, -8.70499, 0.52 ) }
    dend_26 { pt3dadd( 70.5133, 66.7505, -8.84439, 0.88 ) }
    dend_26 { pt3dadd( 71.0873, 66.9586, -8.98693, 0.88 ) }
    dend_26 { pt3dadd( 71.7462, 67.1888, -9.16384, 0.22 ) }
    dend_26 { pt3dadd( 72.3357, 67.4117, -9.31405, 0.22 ) }
    dend_26 { pt3dadd( 72.6273, 67.5326, -9.38593, 0.52 ) }
    dend_26 { pt3dadd( 73.148, 67.7614, -9.51033, 1.4 ) }
    dend_26 { pt3dadd( 73.8457, 68.0607, -9.69235, 1.18 ) }
    dend_26 { pt3dadd( 74.9162, 68.5002, -9.99664, 0.22 ) }
    dend_26 { pt3dadd( 75.6855, 68.8203, -10.2505, 0.59 ) }
    dend_26 { pt3dadd( 76.253, 69.0537, -10.4461, 0.22 ) }
    dend_26 { pt3dadd( 76.8952, 69.3415, -10.6756, 0.88 ) }
    dend_26 { pt3dadd( 77.7115, 69.7632, -10.9704, 1.55 ) }
    dend_26 { pt3dadd( 78.0181, 69.9498, -11.0873, 1.55 ) }
    dend_26 { pt3dadd( 79.0329, 70.6782, -11.5193, 0.88 ) }
    dend_26 { pt3dadd( 79.5049, 71.0589, -11.7382, 0.44 ) }
    dend_26 { pt3dadd( 79.9338, 71.4307, -11.9386, 0.22 ) }
    dend_26 { pt3dadd( 80.3677, 71.7987, -12.1429, 0.22 ) }
    dend_26 { pt3dadd( 80.8245, 72.1774, -12.3555, 0.37 ) }
    dend_26 { pt3dadd( 81.327, 72.5659, -12.5861, 1.11 ) }
    dend_26 { pt3dadd( 81.982, 73.031, -12.8749, 1.18 ) }
    dend_26 { pt3dadd( 82.5942, 73.4512, -13.1345, 0.29 ) }
    dend_26 { pt3dadd( 83.4433, 74.0114, -13.4794, 0.22 ) }
    dend_26 { pt3dadd( 83.9139, 74.31, -13.6542, 0.22 ) }
    dend_26 { pt3dadd( 84.4007, 74.6192, -13.8083, 1.11 ) }
    dend_26 { pt3dadd( 84.7538, 74.8519, -13.8934, 1.18 ) }
    dend_26 { pt3dadd( 85.4797, 75.3662, -14.0013, 0.29 ) }
    dend_26 { pt3dadd( 86.1665, 75.8369, -14.0512, 0.29 ) }
    dend_26 { pt3dadd( 86.6047, 76.1143, -14.0618, 1.03 ) }
    dend_26 { pt3dadd( 87.2, 76.431, -14.0653, 1.92 ) }
    dend_26 { pt3dadd( 87.6163, 76.6252, -14.0849, 1.92 ) }
    dend_26 { pt3dadd( 88.9451, 77.1741, -14.2222, 0.15 ) }
    dend_26 { pt3dadd( 89.6374, 77.418, -14.3277, 0.15 ) }
    dend_26 { pt3dadd( 90.0467, 77.5542, -14.3956, 0.37 ) }
    dend_26 { pt3dadd( 90.6263, 77.7521, -14.4984, 1.11 ) }
    dend_26 { pt3dadd( 91.6023, 78.0889, -14.6701, 1.47 ) }
    dend_26 { pt3dadd( 92.5496, 78.3978, -14.8434, 0.44 ) }
    dend_26 { pt3dadd( 93.5481, 78.6997, -15.0324, 0.22 ) }
    dend_26 { pt3dadd( 94.3411, 78.9275, -15.1821, 0.74 ) }
    dend_26 { pt3dadd( 94.9767, 79.0746, -15.2951, 0.88 ) }
    dend_26 { pt3dadd( 96.0691, 79.1964, -15.5002, 0.22 ) }
    dend_26 { pt3dadd( 96.5791, 79.1742, -15.5972, 0.22 ) }
    dend_26 { pt3dadd( 97.075, 79.0685, -15.7129, 0.44 ) }
    dend_26 { pt3dadd( 97.5559, 78.905, -15.8444, 0.81 ) }
    dend_26 { pt3dadd( 98.1382, 78.6666, -16.0169, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_26 { pt3dadd( 99.0838, 78.2845, -16.2994, 0.81 ) }
    dend_26 { pt3dadd( 99.8565, 77.9973, -16.5133, 0.22 ) }
    dend_26 { pt3dadd( 100.411, 77.8403, -16.6557, 0.22 ) }
    dend_26 { pt3dadd( 100.877, 77.7735, -16.77, 0.22 ) }
    dend_26 { pt3dadd( 101.784, 77.7776, -16.979, 0.37 ) }
    dend_26 { pt3dadd( 102.786, 77.9191, -17.2009, 0.22 ) }
    dend_26 { pt3dadd( 103.152, 78.0202, -17.2862, 0.96 ) }
    dend_26 { pt3dadd( 103.809, 78.2738, -17.4636, 1.84 ) }
    dend_26 { pt3dadd( 105.04, 78.8688, -17.8616, 0.22 ) }
    dend_26 { pt3dadd( 105.602, 79.204, -18.0787, 0.22 ) }
    dend_26 { pt3dadd( 105.828, 79.3794, -18.1798, 0.22 ) }
    dend_26 { pt3dadd( 106.228, 79.7789, -18.3697, 0.22 ) }
    dend_26 { pt3dadd( 106.594, 80.2092, -18.5423, 0.44 ) }
    dend_26 { pt3dadd( 107.095, 80.8265, -18.7535, 1.18 ) }
    dend_26 { pt3dadd( 107.534, 81.3409, -18.9112, 1.62 ) }
    dend_26 { pt3dadd( 107.989, 81.8134, -19.0475, 1.7 ) }
    dend_26 { pt3dadd( 108.722, 82.5412, -19.2105, 1.25 ) }
    dend_26 { pt3dadd( 109.689, 83.4253, -19.371, 0.29 ) }
    dend_26 { pt3dadd( 110.306, 83.9071, -19.4617, 1.03 ) }
    dend_26 { pt3dadd( 110.857, 84.2741, -19.5533, 1.47 ) }
    dend_26 { pt3dadd( 111.915, 84.8715, -19.7431, 0.22 ) }
    dend_26 { pt3dadd( 112.77, 85.2882, -19.9162, 0.88 ) }
    dend_26 { pt3dadd( 113.417, 85.5707, -20.0572, 0.44 ) }
    dend_26 { pt3dadd( 114.375, 85.9884, -20.2784, 0.22 ) }
    dend_26 { pt3dadd( 115.062, 86.3178, -20.4336, 0.22 ) }
    dend_26 { pt3dadd( 115.596, 86.6029, -20.5476, 1.03 ) }
    dend_26 { pt3dadd( 116.231, 86.9794, -20.6647, 1.47 ) }
    dend_26 { pt3dadd( 116.775, 87.3569, -20.7535, 1.25 ) }
    dend_26 { pt3dadd( 117.585, 88.035, -20.8771, 0.52 ) }
    dend_26 { pt3dadd( 118.457, 88.8727, -21.0109, 0.37 ) }
    dend_26 { pt3dadd( 118.908, 89.3221, -21.0956, 1.03 ) }
    dend_26 { pt3dadd( 119.165, 89.58, -21.1657, 1.4 ) }
    dend_26 { pt3dadd( 119.95, 90.3528, -21.4401, 0.96 ) }
    dend_26 { pt3dadd( 120.479, 90.8307, -21.6749, 0.81 ) }
    dend_26 { pt3dadd( 121.269, 91.4856, -22.0802, 0.22 ) }
    dend_26 { pt3dadd( 121.754, 91.8435, -22.3545, 0.22 ) }
    dend_26 { pt3dadd( 122.173, 92.1142, -22.581, 0.74 ) }
    dend_26 { pt3dadd( 122.493, 92.307, -22.7378, 0.81 ) }
    dend_26 { pt3dadd( 123.116, 92.6882, -22.999, 0.22 ) }
    dend_26 { pt3dadd( 123.423, 92.9013, -23.1092, 0.22 ) }
    dend_26 { pt3dadd( 123.872, 93.2569, -23.2718, 0.88 ) }
    dend_26 { pt3dadd( 124.557, 93.8651, -23.5077, 1.33 ) }
    dend_26 { pt3dadd( 125.105, 94.4209, -23.7055, 1.7 ) }
    dend_26 { pt3dadd( 125.78, 95.1932, -23.9581, 1.47 ) }
    dend_26 { pt3dadd( 126.495, 96.1107, -24.2355, 0.22 ) }
    dend_26 { pt3dadd( 126.916, 96.6917, -24.4032, 0.22 ) }
    dend_26 { pt3dadd( 127.378, 97.4229, -24.6, 0.29 ) }
    dend_26 { pt3dadd( 127.665, 97.9942, -24.7276, 0.15 ) }
    dend_26 { pt3dadd( 127.836, 98.4364, -24.8025, 0.15 ) }
    dend_26 { pt3dadd( 128.027, 99.1024, -24.8783, 0.59 ) }
    dend_26 { pt3dadd( 128.176, 99.7494, -24.9293, 0.37 ) }
    dend_26 { pt3dadd( 128.367, 100.624, -25.0133, 0.22 ) }
    dend_26 { pt3dadd( 128.573, 101.558, -25.1412, 0.22 ) }
    dend_26 { pt3dadd( 128.689, 102.017, -25.2211, 1.11 ) }
    dend_26 { pt3dadd( 128.936, 102.956, -25.4263, 0.22 ) }
    dend_26 { pt3dadd( 129.12, 103.655, -25.6091, 0.07 ) }
    dend_26 { pt3dadd( 129.284, 104.323, -25.7803, 0.07 ) }
    dend_26 { pt3dadd( 129.383, 104.729, -25.8664, 0.88 ) }
    dend_26 { pt3dadd( 129.457, 105.064, -25.9087, 1.11 ) }
    dend_26 { pt3dadd( 129.56, 105.76, -25.8998, 0.81 ) }
    dend_26 { pt3dadd( 129.62, 106.49, -25.7705, 0.37 ) }
    dend_26 { pt3dadd( 129.679, 107.505, -25.4558, 0.15 ) }
    dend_26 { pt3dadd( 129.727, 108.333, -25.1055, 0.15 ) }
    dend_26 { pt3dadd( 129.768, 109.035, -24.7352, 0.15 ) }
    dend_26 { pt3dadd( 129.825, 109.68, -24.3528, 0.59 ) }
    dend_26 { pt3dadd( 129.919, 110.592, -23.7455, 0.29 ) }
    dend_26 { pt3dadd( 129.972, 111.07, -23.386, 0.66 ) }
    dend_26 { pt3dadd( 130.047, 111.613, -22.9386, 1.47 ) }
    dend_26 { pt3dadd( 130.176, 112.45, -22.2118, 0.22 ) }
    dend_26 { pt3dadd( 130.279, 113.05, -21.6894, 0.15 ) }
    dend_26 { pt3dadd( 130.424, 113.692, -21.1384, 0.15 ) }
    dend_26 { pt3dadd( 130.539, 114.143, -20.7569, 0.44 ) }
    dend_26 { pt3dadd( 130.659, 114.566, -20.427, 0.44 ) }
    dend_26 { pt3dadd( 130.862, 115.214, -19.9485, 0.22 ) }
    dend_26 { pt3dadd( 130.951, 115.506, -19.7498, 0.15 ) }
    dend_26 { pt3dadd( 131.074, 116.121, -19.3335, 0.15 ) }
    dend_26 { pt3dadd( 131.102, 116.364, -19.1779, 0.15 ) }
    dend_26 { pt3dadd( 131.088, 116.733, -18.9452, 0.44 ) }
    dend_26 { pt3dadd( 131.046, 117.017, -18.7601, 0.44 ) }
    dend_26 { pt3dadd( 130.914, 117.84, -18.1956, 0.15 ) }
    dend_26 { pt3dadd( 130.848, 118.416, -17.782, 0.22 ) }
    dend_26 { pt3dadd( 130.817, 118.805, -17.4971, 0.29 ) }
    dend_26 { pt3dadd( 130.856, 119.444, -17.054, 0.29 ) }
    dend_26 { pt3dadd( 130.964, 119.949, -16.7457, 0.74 ) }
    dend_26 { pt3dadd( 131.19, 120.56, -16.429, 0.66 ) }
    dend_26 { pt3dadd( 131.464, 121.108, -16.1962, 1.55 ) }
    dend_26 { pt3dadd( 131.634, 121.409, -16.0949, 1.55 ) }
    dend_26 { pt3dadd( 132.219, 122.357, -15.8692, 0.15 ) }
    dend_26 { pt3dadd( 132.675, 123.04, -15.7563, 0.22 ) }
    dend_26 { pt3dadd( 133.123, 123.695, -15.6795, 0.22 ) }
    dend_26 { pt3dadd( 133.411, 124.109, -15.6494, 0.22 ) }
    dend_26 { pt3dadd( 133.818, 124.664, -15.6316, 0.37 ) }
    dend_26 { pt3dadd( 134.639, 125.737, -15.6305, 0.22 ) }
    dend_26 { pt3dadd( 135.363, 126.683, -15.6248, 0.15 ) }
    dend_26 { pt3dadd( 135.693, 127.122, -15.6025, 1.18 ) }
    dend_26 { pt3dadd( 136.082, 127.663, -15.5491, 2.21 ) }
    dend_26 { pt3dadd( 136.22, 127.864, -15.521, 2.21 ) }
    dend_26 { pt3dadd( 136.918, 129.025, -15.2911, 0.22 ) }
    dend_26 { pt3dadd( 137.347, 129.917, -15.0595, 0.22 ) }
    dend_26 { pt3dadd( 137.721, 130.906, -14.7845, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 137.826, 131.24, -14.6887, 0.66 ) }
    dend_26 { pt3dadd( 137.89, 131.489, -14.6218, 1.25 ) }
    dend_26 { pt3dadd( 138.074, 132.333, -14.4218, 1.62 ) }
    dend_26 { pt3dadd( 138.251, 133.375, -14.2168, 0.22 ) }
    dend_26 { pt3dadd( 138.414, 134.452, -14.0859, 0.22 ) }
    dend_26 { pt3dadd( 138.467, 134.875, -14.057, 0.37 ) }
    dend_26 { pt3dadd( 138.553, 135.509, -14.0338, 0.88 ) }
    dend_26 { pt3dadd( 138.615, 136.0, -14.0216, 0.88 ) }
    dend_26 { pt3dadd( 138.674, 136.711, -14.021, 0.22 ) }
    dend_26 { pt3dadd( 138.688, 137.526, -14.0135, 0.15 ) }
    dend_26 { pt3dadd( 138.664, 138.165, -13.9785, 0.15 ) }
    dend_26 { pt3dadd( 138.623, 138.485, -13.9969, 0.52 ) }
    dend_26 { pt3dadd( 138.506, 139.175, -14.078, 0.88 ) }
    dend_26 { pt3dadd( 138.352, 139.978, -14.2002, 0.22 ) }
    dend_26 { pt3dadd( 138.241, 140.543, -14.315, 0.22 ) }
    dend_26 { pt3dadd( 137.955, 141.911, -14.5969, 0.15 ) }
    dend_26 { pt3dadd( 137.538, 144.241, -15.0618, 0.22 ) }
    dend_26 { pt3dadd( 137.436, 144.965, -15.2017, 0.44 ) }
    dend_26 { pt3dadd( 137.375, 145.727, -15.3369, 0.22 ) }
    dend_26 { pt3dadd( 137.366, 146.531, -15.4551, 0.29 ) }
    dend_26 { pt3dadd( 137.398, 147.172, -15.5217, 0.22 ) }
    dend_26 { pt3dadd( 137.514, 148.252, -15.5575, 0.15 ) }
    dend_26 { pt3dadd( 137.606, 148.721, -15.4943, 0.15 ) }
    dend_26 { pt3dadd( 137.78, 149.551, -15.378, 0.15 ) }
    dend_26 { pt3dadd( 137.889, 149.994, -15.3097, 0.29 ) }
    dend_26 { pt3dadd( 138.019, 150.427, -15.224, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 26/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 22.6144, 69.434, 71.637, 0.07 ) }
    dend_19 { pt3dadd( 22.67, 70.1114, 71.7196, 0.07 ) }
    dend_19 { pt3dadd( 22.7411, 70.7321, 71.8302, 0.07 ) }
    dend_19 { pt3dadd( 22.9428, 71.8861, 72.1207, 0.07 ) }
    dend_19 { pt3dadd( 23.1578, 72.8385, 72.3711, 0.29 ) }
    dend_19 { pt3dadd( 23.3609, 73.5731, 72.5753, 0.07 ) }
    dend_19 { pt3dadd( 23.753, 74.7383, 72.9066, 0.07 ) }
    dend_19 { pt3dadd( 23.9875, 75.2971, 73.0848, 0.52 ) }
    dend_19 { pt3dadd( 24.6333, 76.6759, 73.5582, 1.03 ) }
    dend_19 { pt3dadd( 25.3641, 78.1538, 74.1152, 0.15 ) }
    dend_19 { pt3dadd( 25.6563, 78.7558, 74.3455, 0.15 ) }
    dend_19 { pt3dadd( 26.0015, 79.5176, 74.6223, 0.15 ) }
    dend_19 { pt3dadd( 26.2984, 80.2227, 74.8407, 0.15 ) }
    dend_19 { pt3dadd( 26.522, 80.8745, 75.0362, 0.07 ) }
    dend_19 { pt3dadd( 26.6598, 81.3993, 75.1974, 0.07 ) }
    dend_19 { pt3dadd( 26.8311, 82.0756, 75.4199, 0.44 ) }
    dend_19 { pt3dadd( 26.9312, 82.461, 75.559, 0.74 ) }
    dend_19 { pt3dadd( 27.0658, 82.8771, 75.7341, 0.74 ) }
    dend_19 { pt3dadd( 27.614, 84.1826, 76.3617, 0.15 ) }
    dend_19 { pt3dadd( 27.9978, 84.9497, 76.7586, 0.15 ) }
    dend_19 { pt3dadd( 28.5059, 85.8724, 77.2463, 0.37 ) }
    dend_19 { pt3dadd( 29.002, 86.7234, 77.7039, 1.7 ) }
    dend_19 { pt3dadd( 29.5514, 87.6634, 78.1856, 1.03 ) }
    dend_19 { pt3dadd( 30.3085, 88.9214, 78.8138, 0.15 ) }
    dend_19 { pt3dadd( 30.9979, 90.0073, 79.3674, 0.15 ) }
    dend_19 { pt3dadd( 31.2819, 90.4512, 79.5889, 0.66 ) }
    dend_19 { pt3dadd( 31.6481, 91.0095, 79.8765, 1.03 ) }
    dend_19 { pt3dadd( 32.2997, 91.933, 80.3415, 0.15 ) }
    dend_19 { pt3dadd( 33.1208, 93.0231, 80.8915, 0.15 ) }
    dend_19 { pt3dadd( 33.7153, 93.738, 81.2938, 0.15 ) }
    dend_19 { pt3dadd( 34.2185, 94.2976, 81.6225, 0.29 ) }
    dend_19 { pt3dadd( 34.7568, 94.8866, 81.9604, 0.29 ) }
    dend_19 { pt3dadd( 35.2299, 95.4592, 82.2506, 0.74 ) }
    dend_19 { pt3dadd( 35.7303, 96.1704, 82.5802, 0.81 ) }
    dend_19 { pt3dadd( 36.0306, 96.6833, 82.7909, 0.81 ) }
    dend_19 { pt3dadd( 36.741, 98.1638, 83.3313, 0.15 ) }
    dend_19 { pt3dadd( 37.0221, 98.9555, 83.6303, 0.74 ) }
    dend_19 { pt3dadd( 37.4352, 100.76, 84.3132, 0.15 ) }
    dend_19 { pt3dadd( 37.5066, 101.69, 84.6765, 0.15 ) }
    dend_19 { pt3dadd( 37.3957, 102.581, 85.0137, 0.15 ) }
    dend_19 { pt3dadd( 37.2064, 103.254, 85.2573, 0.29 ) }
    dend_19 { pt3dadd( 36.7126, 104.368, 85.6726, 0.15 ) }
    dend_19 { pt3dadd( 36.5234, 104.703, 85.7949, 0.52 ) }
    dend_19 { pt3dadd( 35.8004, 105.724, 86.205, 1.4 ) }
    dend_19 { pt3dadd( 34.3934, 107.489, 86.9567, 0.15 ) }
    dend_19 { pt3dadd( 33.988, 107.926, 87.1587, 0.15 ) }
    dend_19 { pt3dadd( 33.7763, 108.121, 87.2704, 0.15 ) }
    dend_19 { pt3dadd( 32.7996, 108.859, 87.8122, 0.81 ) }
    dend_19 { pt3dadd( 31.6786, 109.529, 88.4558, 0.15 ) }
    dend_19 { pt3dadd( 31.263, 109.707, 88.6995, 0.15 ) }
    dend_19 { pt3dadd( 30.6359, 109.91, 89.0567, 1.18 ) }
    dend_19 { pt3dadd( 28.8274, 110.437, 90.0532, 0.07 ) }
    dend_19 { pt3dadd( 27.6311, 110.755, 90.6728, 0.07 ) }
    dend_19 { pt3dadd( 27.0737, 110.901, 90.9368, 0.59 ) }
    dend_19 { pt3dadd( 26.5072, 111.077, 91.1758, 1.77 ) }
    dend_19 { pt3dadd( 24.6214, 111.715, 91.9039, 0.07 ) }
    dend_19 { pt3dadd( 23.7653, 112.019, 92.2155, 0.07 ) }
    dend_19 { pt3dadd( 23.2022, 112.215, 92.3897, 0.37 ) }
    dend_19 { pt3dadd( 22.6423, 112.419, 92.5373, 0.52 ) }
    dend_19 { pt3dadd( 21.3568, 112.868, 92.8735, 0.07 ) }
    dend_19 { pt3dadd( 20.1374, 113.296, 93.1649, 0.07 ) }
    dend_19 { pt3dadd( 19.6336, 113.46, 93.2664, 0.07 ) }
    dend_19 { pt3dadd( 19.2146, 113.583, 93.3479, 0.29 ) }
    dend_19 { pt3dadd( 18.2396, 113.819, 93.5445, 0.66 ) }
    dend_19 { pt3dadd( 17.0651, 114.006, 93.7964, 0.07 ) }
    dend_19 { pt3dadd( 16.1799, 114.097, 93.9837, 0.29 ) }
    dend_19 { pt3dadd( 15.3832, 114.168, 94.1561, 0.88 ) }
    dend_19 { pt3dadd( 13.7088, 114.341, 94.5723, 0.15 ) }
    dend_19 { pt3dadd( 12.8547, 114.438, 94.8171, 0.52 ) }
    dend_19 { pt3dadd( 11.0654, 114.648, 95.363, 0.07 ) }
    dend_19 { pt3dadd( 10.4899, 114.724, 95.5398, 0.59 ) }
    dend_19 { pt3dadd( 9.70498, 114.829, 95.7896, 1.47 ) }
    dend_19 { pt3dadd( 7.8602, 115.101, 96.3948, 0.07 ) }
    dend_19 { pt3dadd( 7.16507, 115.208, 96.6316, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( 6.10927, 115.371, 96.9984, 0.07 ) }
    dend_19 { pt3dadd( 5.78536, 115.423, 97.1071, 0.37 ) }
    dend_19 { pt3dadd( 5.10588, 115.537, 97.3134, 0.81 ) }
    dend_19 { pt3dadd( 3.83861, 115.773, 97.6616, 0.07 ) }
    dend_19 { pt3dadd( 2.84286, 115.979, 97.8869, 0.07 ) }
    dend_19 { pt3dadd( 2.35007, 116.123, 97.9842, 0.44 ) }
    dend_19 { pt3dadd( 1.85064, 116.309, 98.0798, 0.88 ) }
    dend_19 { pt3dadd( 0.50983, 116.913, 98.3032, 0.15 ) }
    dend_19 { pt3dadd( -0.186677, 117.282, 98.3956, 0.37 ) }
    dend_19 { pt3dadd( -0.563211, 117.504, 98.4278, 0.37 ) }
    dend_19 { pt3dadd( -2.11083, 118.414, 98.4894, 0.15 ) }
    dend_19 { pt3dadd( -2.62061, 118.706, 98.5012, 0.15 ) }
    dend_19 { pt3dadd( -3.38591, 119.153, 98.5038, 0.37 ) }
    dend_19 { pt3dadd( -4.76572, 119.945, 98.47, 0.07 ) }
    dend_19 { pt3dadd( -5.64755, 120.463, 98.4386, 0.29 ) }
    dend_19 { pt3dadd( -6.44263, 120.941, 98.4145, 0.07 ) }
    dend_19 { pt3dadd( -7.22494, 121.429, 98.3916, 0.07 ) }
    dend_19 { pt3dadd( -8.89099, 122.493, 98.3383, 0.07 ) }
    dend_19 { pt3dadd( -11.0946, 123.921, 98.2712, 0.07 ) }
    dend_19 { pt3dadd( -11.799, 124.393, 98.2505, 0.07 ) }
    dend_19 { pt3dadd( -12.8028, 125.087, 98.2355, 0.07 ) }
    dend_19 { pt3dadd( -13.3992, 125.517, 98.2401, 0.59 ) }
    dend_19 { pt3dadd( -14.3006, 126.161, 98.2505, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 22.6144, 69.434, 71.637, 0.37 ) }
    dend_18 { pt3dadd( 22.5652, 68.5806, 72.3744, 0.37 ) }
    dend_18 { pt3dadd( 22.5875, 68.0102, 72.8343, 0.37 ) }
    dend_18 { pt3dadd( 22.6369, 67.6186, 73.1404, 0.59 ) }
    dend_18 { pt3dadd( 22.764, 66.9282, 73.6092, 0.22 ) }
    dend_18 { pt3dadd( 22.8646, 66.4079, 73.9184, 0.22 ) }
    dend_18 { pt3dadd( 22.919, 66.0165, 74.12, 0.15 ) }
    dend_18 { pt3dadd( 22.9604, 65.6328, 74.3253, 0.15 ) }
    dend_18 { pt3dadd( 23.0023, 65.0951, 74.5723, 0.15 ) }
    dend_18 { pt3dadd( 23.0077, 64.5782, 74.7811, 0.59 ) }
    dend_18 { pt3dadd( 22.9653, 64.1933, 74.9093, 0.88 ) }
    dend_18 { pt3dadd( 22.7504, 63.218, 75.194, 0.15 ) }
    dend_18 { pt3dadd( 22.5249, 62.5263, 75.4151, 0.15 ) }
    dend_18 { pt3dadd( 22.3704, 62.1479, 75.5314, 0.44 ) }
    dend_18 { pt3dadd( 22.1982, 61.7939, 75.6359, 0.81 ) }
    dend_18 { pt3dadd( 21.9156, 61.2742, 75.7878, 0.07 ) }
    dend_18 { pt3dadd( 21.5574, 60.643, 75.9524, 0.22 ) }
    dend_18 { pt3dadd( 21.1762, 59.9836, 76.099, 0.22 ) }
    dend_18 { pt3dadd( 20.6443, 59.0571, 76.271, 0.07 ) }
    dend_18 { pt3dadd( 20.1971, 58.2973, 76.3952, 0.07 ) }
    dend_18 { pt3dadd( 19.778, 57.5744, 76.5037, 0.07 ) }
    dend_18 { pt3dadd( 19.5519, 57.1643, 76.5518, 0.29 ) }
    dend_18 { pt3dadd( 19.0123, 56.1642, 76.655, 0.07 ) }
    dend_18 { pt3dadd( 18.7655, 55.6938, 76.6902, 0.88 ) }
    dend_18 { pt3dadd( 18.4568, 55.1005, 76.7383, 1.25 ) }
    dend_18 { pt3dadd( 18.2644, 54.7096, 76.7677, 1.25 ) }
    dend_18 { pt3dadd( 17.6643, 53.4342, 76.8554, 0.07 ) }
    dend_18 { pt3dadd( 17.2713, 52.5893, 76.9059, 0.07 ) }
    dend_18 { pt3dadd( 17.0541, 52.1123, 76.9268, 0.07 ) }
    dend_18 { pt3dadd( 16.9262, 51.8323, 76.9374, 0.52 ) }
    dend_18 { pt3dadd( 16.58, 51.0855, 76.9558, 0.66 ) }
    dend_18 { pt3dadd( 16.3905, 50.7047, 76.9568, 0.22 ) }
    dend_18 { pt3dadd( 16.1335, 50.2092, 76.9442, 0.52 ) }
    dend_18 { pt3dadd( 15.9089, 49.8002, 76.9186, 0.29 ) }
    dend_18 { pt3dadd( 15.4637, 49.0451, 76.8668, 0.07 ) }
    dend_18 { pt3dadd( 15.0562, 48.4034, 76.8183, 0.07 ) }
    dend_18 { pt3dadd( 14.743, 47.9414, 76.7874, 0.22 ) }
    dend_18 { pt3dadd( 14.5161, 47.6264, 76.7683, 0.22 ) }
    dend_18 { pt3dadd( 13.8759, 46.7578, 76.7177, 0.07 ) }
    dend_18 { pt3dadd( 13.704, 46.5333, 76.7053, 0.37 ) }
    dend_18 { pt3dadd( 13.4999, 46.2747, 76.693, 0.59 ) }
    dend_18 { pt3dadd( 13.0131, 45.6771, 76.671, 0.07 ) }
    dend_18 { pt3dadd( 12.6124, 45.1955, 76.6601, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -19.0931, -106.246, 80.6521, 0.15 ) }
    dend_16 { pt3dadd( -20.0981, -106.376, 81.4105, 0.15 ) }
    dend_16 { pt3dadd( -21.0925, -106.485, 82.1339, 0.15 ) }
    dend_16 { pt3dadd( -22.0157, -106.572, 82.7729, 0.15 ) }
    dend_16 { pt3dadd( -22.9686, -106.656, 83.4184, 0.37 ) }
    dend_16 { pt3dadd( -24.0253, -106.738, 84.1218, 0.15 ) }
    dend_16 { pt3dadd( -25.0908, -106.81, 84.8229, 0.07 ) }
    dend_16 { pt3dadd( -25.627, -106.846, 85.1794, 0.22 ) }
    dend_16 { pt3dadd( -27.2734, -106.941, 86.1742, 0.15 ) }
    dend_16 { pt3dadd( -27.3906, -106.943, 86.2413, 0.59 ) }
    dend_16 { pt3dadd( -28.1337, -106.944, 86.668, 1.11 ) }
    dend_16 { pt3dadd( -28.4699, -106.945, 86.861, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -19.0931, -106.246, 80.6521, 0.59 ) }
    dend_15 { pt3dadd( -19.243, -107.138, 81.0267, 0.59 ) }
    dend_15 { pt3dadd( -19.36, -107.785, 81.3131, 0.96 ) }
    dend_15 { pt3dadd( -19.4858, -108.798, 81.7313, 1.47 ) }
    dend_15 { pt3dadd( -19.5318, -109.481, 81.9798, 1.47 ) }
    dend_15 { pt3dadd( -19.5532, -110.712, 82.3858, 0.22 ) }
    dend_15 { pt3dadd( -19.5701, -111.172, 82.5515, 0.15 ) }
    dend_15 { pt3dadd( -19.6135, -111.602, 82.7461, 0.15 ) }
    dend_15 { pt3dadd( -19.7057, -112.33, 83.1221, 0.15 ) }
    dend_15 { pt3dadd( -19.794, -112.945, 83.4617, 0.37 ) }
    dend_15 { pt3dadd( -19.8865, -113.565, 83.8623, 0.37 ) }
    dend_15 { pt3dadd( -20.0431, -114.655, 84.7027, 0.22 ) }
    dend_15 { pt3dadd( -20.118, -115.276, 85.2449, 0.22 ) }
    dend_15 { pt3dadd( -20.1564, -115.643, 85.5809, 0.96 ) }
    dend_15 { pt3dadd( -20.2309, -116.557, 86.4605, 2.06 ) }
    dend_15 { pt3dadd( -20.2702, -117.436, 87.3386, 1.11 ) }
    dend_15 { pt3dadd( -20.2836, -118.608, 88.5283, 0.22 ) }
    dend_15 { pt3dadd( -20.2465, -119.516, 89.4384, 0.22 ) }
    dend_15 { pt3dadd( -20.2377, -119.92, 89.84, 0.22 ) }
    dend_15 { pt3dadd( -20.243, -120.24, 90.1598, 0.22 ) }
    dend_15 { pt3dadd( -20.2614, -120.513, 90.4415, 0.22 ) }
    dend_15 { pt3dadd( -20.3457, -120.91, 90.8361, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_15 { pt3dadd( -20.5196, -121.336, 91.2536, 0.22 ) }
    dend_15 { pt3dadd( -20.8504, -121.982, 91.8843, 0.22 ) }
    dend_15 { pt3dadd( -21.1435, -122.555, 92.4073, 0.22 ) }
    dend_15 { pt3dadd( -21.3297, -122.944, 92.7296, 0.66 ) }
    dend_15 { pt3dadd( -21.6733, -123.768, 93.3554, 1.11 ) }
    dend_15 { pt3dadd( -22.1391, -125.011, 94.2609, 0.29 ) }
    dend_15 { pt3dadd( -22.5456, -126.094, 95.0395, 0.22 ) }
    dend_15 { pt3dadd( -22.886, -126.998, 95.6934, 0.22 ) }
    dend_15 { pt3dadd( -23.0612, -127.409, 95.9889, 0.29 ) }
    dend_15 { pt3dadd( -23.5211, -128.429, 96.7106, 0.22 ) }
    dend_15 { pt3dadd( -23.7324, -128.889, 97.0344, 0.96 ) }
    dend_15 { pt3dadd( -24.1036, -129.668, 97.5806, 1.84 ) }
    dend_15 { pt3dadd( -24.7439, -130.943, 98.4914, 0.29 ) }
    dend_15 { pt3dadd( -25.2785, -131.925, 99.2607, 0.22 ) }
    dend_15 { pt3dadd( -25.629, -132.558, 99.7886, 0.22 ) }
    dend_15 { pt3dadd( -25.8436, -132.957, 100.127, 0.22 ) }
    dend_15 { pt3dadd( -26.0229, -133.361, 100.447, 0.37 ) }
    dend_15 { pt3dadd( -26.2598, -134.085, 100.955, 0.52 ) }
    dend_15 { pt3dadd( -26.4768, -134.981, 101.461, 0.29 ) }
    dend_15 { pt3dadd( -26.6168, -135.795, 101.861, 0.29 ) }
    dend_15 { pt3dadd( -26.6972, -136.281, 102.064, 0.29 ) }
    dend_15 { pt3dadd( -26.8408, -137.247, 102.429, 0.44 ) }
    dend_15 { pt3dadd( -26.9694, -138.391, 102.827, 0.52 ) }
    dend_15 { pt3dadd( -27.1077, -140.003, 103.334, 0.15 ) }
    dend_15 { pt3dadd( -27.1616, -140.816, 103.573, 0.59 ) }
    dend_15 { pt3dadd( -27.258, -142.138, 103.994, 1.7 ) }
    dend_15 { pt3dadd( -27.4039, -143.743, 104.583, 0.15 ) }
    dend_15 { pt3dadd( -27.4814, -144.489, 104.912, 0.44 ) }
    dend_15 { pt3dadd( -27.5261, -144.996, 105.157, 0.44 ) }
    dend_15 { pt3dadd( -27.581, -145.713, 105.545, 0.07 ) }
    dend_15 { pt3dadd( -27.639, -146.33, 105.899, 0.07 ) }
    dend_15 { pt3dadd( -27.7123, -146.788, 106.196, 0.07 ) }
    dend_15 { pt3dadd( -27.8636, -147.4, 106.62, 0.29 ) }
    dend_15 { pt3dadd( -28.1761, -148.398, 107.331, 0.52 ) }
    dend_15 { pt3dadd( -28.4081, -149.107, 107.847, 0.22 ) }
    dend_15 { pt3dadd( -28.6076, -149.701, 108.287, 0.22 ) }
    dend_15 { pt3dadd( -28.8298, -150.353, 108.786, 0.37 ) }
    dend_15 { pt3dadd( -29.0434, -150.97, 109.301, 0.74 ) }
    dend_15 { pt3dadd( -29.3777, -151.831, 110.104, 1.33 ) }
    dend_15 { pt3dadd( -29.7585, -152.652, 110.969, 0.22 ) }
    dend_15 { pt3dadd( -30.0611, -153.224, 111.61, 0.15 ) }
    dend_15 { pt3dadd( -30.3016, -153.648, 112.108, 0.29 ) }
    dend_15 { pt3dadd( -30.629, -154.222, 112.801, 0.15 ) }
    dend_15 { pt3dadd( -30.9042, -154.665, 113.348, 0.59 ) }
    dend_15 { pt3dadd( -31.2017, -155.098, 113.936, 0.74 ) }
    dend_15 { pt3dadd( -31.6715, -155.681, 114.778, 0.07 ) }
    dend_15 { pt3dadd( -32.1184, -156.205, 115.565, 0.15 ) }
    dend_15 { pt3dadd( -32.4392, -156.573, 116.124, 0.15 ) }
    dend_15 { pt3dadd( -32.7058, -156.875, 116.577, 0.15 ) }
    dend_15 { pt3dadd( -33.0233, -157.214, 117.076, 0.15 ) }
    dend_15 { pt3dadd( -33.49, -157.688, 117.753, 0.29 ) }
    dend_15 { pt3dadd( -33.8926, -158.055, 118.281, 0.74 ) }
    dend_15 { pt3dadd( -34.5215, -158.593, 119.033, 1.03 ) }
    dend_15 { pt3dadd( -35.1603, -159.136, 119.751, 0.29 ) }
    dend_15 { pt3dadd( -36.0498, -159.913, 120.766, 0.22 ) }
    dend_15 { pt3dadd( -36.6084, -160.413, 121.38, 0.88 ) }
    dend_15 { pt3dadd( -37.2368, -160.963, 122.075, 1.33 ) }
    dend_15 { pt3dadd( -37.7954, -161.428, 122.679, 1.47 ) }
    dend_15 { pt3dadd( -38.8654, -162.27, 123.833, 0.22 ) }
    dend_15 { pt3dadd( -39.427, -162.681, 124.433, 0.22 ) }
    dend_15 { pt3dadd( -40.0732, -163.146, 125.145, 1.03 ) }
    dend_15 { pt3dadd( -40.7663, -163.628, 125.903, 1.55 ) }
    dend_15 { pt3dadd( -41.7597, -164.331, 126.999, 0.74 ) }
    dend_15 { pt3dadd( -42.7045, -165.074, 128.111, 0.22 ) }
    dend_15 { pt3dadd( -43.1779, -165.507, 128.689, 0.22 ) }
    dend_15 { pt3dadd( -43.6084, -165.93, 129.208, 0.22 ) }
    dend_15 { pt3dadd( -44.0924, -166.465, 129.821, 0.15 ) }
    dend_15 { pt3dadd( -44.5202, -167.045, 130.388, 0.37 ) }
    dend_15 { pt3dadd( -45.0109, -167.903, 131.118, 0.15 ) }
    dend_15 { pt3dadd( -45.3165, -168.603, 131.626, 0.15 ) }
    dend_15 { pt3dadd( -45.6555, -169.587, 132.291, 0.22 ) }
    dend_15 { pt3dadd( -45.7954, -170.05, 132.586, 0.15 ) }
    dend_15 { pt3dadd( -45.9813, -170.774, 133.034, 0.15 ) }
    dend_15 { pt3dadd( -46.0654, -171.236, 133.311, 0.74 ) }
    dend_15 { pt3dadd( -46.1227, -171.808, 133.639, 0.88 ) }
    dend_15 { pt3dadd( -46.115, -173.031, 134.335, 0.15 ) }
    dend_15 { pt3dadd( -46.0986, -173.502, 134.606, 0.22 ) }
    dend_15 { pt3dadd( -46.1406, -174.034, 134.984, 0.22 ) }
    dend_15 { pt3dadd( -46.3085, -174.859, 135.692, 0.22 ) }
    dend_15 { pt3dadd( -46.3744, -175.082, 135.909, 0.22 ) }
    dend_15 { pt3dadd( -46.5621, -175.566, 136.421, 0.88 ) }
    dend_15 { pt3dadd( -46.9526, -176.292, 137.241, 1.84 ) }
    dend_15 { pt3dadd( -47.6613, -177.299, 138.464, 0.15 ) }
    dend_15 { pt3dadd( -48.1307, -177.875, 139.141, 0.15 ) }
    dend_15 { pt3dadd( -48.5189, -178.291, 139.596, 0.29 ) }
    dend_15 { pt3dadd( -49.0754, -178.931, 140.259, 0.74 ) }
    dend_15 { pt3dadd( -49.5436, -179.533, 140.849, 1.11 ) }
    dend_15 { pt3dadd( -49.9521, -180.15, 141.42, 0.52 ) }
    dend_15 { pt3dadd( -50.487, -181.042, 142.231, 0.22 ) }
    dend_15 { pt3dadd( -51.334, -182.369, 143.559, 0.29 ) }
    dend_15 { pt3dadd( -51.9917, -183.374, 144.671, 0.15 ) }
    dend_15 { pt3dadd( -52.3413, -183.909, 145.319, 0.37 ) }
    dend_15 { pt3dadd( -52.7759, -184.561, 146.203, 1.18 ) }
    dend_15 { pt3dadd( -53.3189, -185.424, 147.488, 0.44 ) }
    dend_15 { pt3dadd( -53.7547, -186.112, 148.694, 0.29 ) }
    dend_15 { pt3dadd( -54.0379, -186.577, 149.589, 0.15 ) }
    dend_15 { pt3dadd( -54.2803, -186.928, 150.299, 0.88 ) }
    dend_15 { pt3dadd( -54.6345, -187.438, 151.352, 1.03 ) }
    dend_15 { pt3dadd( -55.0933, -188.131, 152.861, 0.22 ) }
    dend_15 { pt3dadd( -55.4445, -188.79, 154.36, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -55.588, -189.101, 155.099, 0.59 ) }
    dend_15 { pt3dadd( -55.7498, -189.448, 155.967, 0.96 ) }
    dend_15 { pt3dadd( -55.9794, -189.868, 157.18, 0.37 ) }
    dend_15 { pt3dadd( -56.2884, -190.321, 158.803, 0.15 ) }
    dend_15 { pt3dadd( -56.551, -190.577, 160.105, 0.59 ) }
    dend_15 { pt3dadd( -56.7119, -190.687, 160.895, 1.77 ) }
    dend_15 { pt3dadd( -57.118, -190.893, 162.895, 0.22 ) }
    dend_15 { pt3dadd( -57.3623, -191.005, 164.165, 0.22 ) }
    dend_15 { pt3dadd( -57.5581, -191.073, 165.076, 0.37 ) }
    dend_15 { pt3dadd( -57.7877, -191.152, 165.949, 0.37 ) }
    dend_15 { pt3dadd( -57.9828, -191.238, 166.624, 0.37 ) }
    dend_15 { pt3dadd( -58.2315, -191.378, 167.545, 0.81 ) }
    dend_15 { pt3dadd( -58.4059, -191.554, 168.365, 0.81 ) }
    dend_15 { pt3dadd( -58.5968, -192.012, 169.694, 0.29 ) }
    dend_15 { pt3dadd( -58.6318, -192.379, 170.511, 0.29 ) }
    dend_15 { pt3dadd( -58.5359, -192.709, 171.115, 0.29 ) }
    dend_15 { pt3dadd( -58.4226, -192.882, 171.409, 0.29 ) }
    dend_15 { pt3dadd( -57.814, -193.523, 172.524, 0.29 ) }
    dend_15 { pt3dadd( -57.5265, -193.784, 172.964, 0.44 ) }
    dend_15 { pt3dadd( -56.9766, -194.273, 173.766, 0.44 ) }
    dend_15 { pt3dadd( -56.2739, -194.946, 174.916, 0.81 ) }
    dend_15 { pt3dadd( -55.7537, -195.507, 175.98, 0.81 ) }
    dend_15 { pt3dadd( -55.4298, -195.941, 176.863, 0.81 ) }
    dend_15 { pt3dadd( -55.3006, -196.181, 177.412, 0.22 ) }
    dend_15 { pt3dadd( -55.0987, -196.72, 178.741, 0.22 ) }
    dend_15 { pt3dadd( -55.0055, -197.311, 180.272, 0.22 ) }
    dend_15 { pt3dadd( -55.0233, -197.845, 181.653, 0.81 ) }
    dend_15 { pt3dadd( -55.111, -198.37, 182.931, 0.52 ) }
    dend_15 { pt3dadd( -55.3635, -199.215, 184.782, 0.22 ) }
    dend_15 { pt3dadd( -55.5281, -199.605, 185.545, 0.22 ) }
    dend_15 { pt3dadd( -55.7152, -199.921, 186.07, 0.52 ) }
    dend_15 { pt3dadd( -56.1885, -200.507, 186.867, 0.15 ) }
    dend_15 { pt3dadd( -56.4799, -200.785, 187.171, 0.59 ) }
    dend_15 { pt3dadd( -57.3707, -201.525, 187.814, 0.15 ) }
    dend_15 { pt3dadd( -58.1071, -202.066, 188.128, 0.37 ) }
    dend_15 { pt3dadd( -58.9748, -202.659, 188.398, 0.15 ) }
    dend_15 { pt3dadd( -59.7958, -203.134, 188.58, 0.37 ) }
    dend_15 { pt3dadd( -60.3641, -203.355, 188.633, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 38/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 120.826, 137.236, 9.11786, 0.96 ) }
    dend_31 { pt3dadd( 121.849, 138.208, 9.01774, 0.96 ) }
    dend_31 { pt3dadd( 122.55, 138.944, 8.9493, 1.25 ) }
    dend_31 { pt3dadd( 123.179, 139.68, 8.8884, 0.66 ) }
    dend_31 { pt3dadd( 123.56, 140.162, 8.85163, 0.22 ) }
    dend_31 { pt3dadd( 124.017, 140.756, 8.80758, 0.15 ) }
    dend_31 { pt3dadd( 124.312, 141.13, 8.779, 0.37 ) }
    dend_31 { pt3dadd( 124.908, 141.926, 8.72107, 0.15 ) }
    dend_31 { pt3dadd( 125.34, 142.476, 8.67878, 0.37 ) }
    dend_31 { pt3dadd( 125.675, 142.859, 8.64581, 0.88 ) }
    dend_31 { pt3dadd( 126.083, 143.27, 8.5799, 0.88 ) }
    dend_31 { pt3dadd( 127.029, 144.089, 8.32004, 0.22 ) }
    dend_31 { pt3dadd( 127.683, 144.612, 8.12743, 0.22 ) }
    dend_31 { pt3dadd( 128.353, 145.074, 7.91445, 0.22 ) }
    dend_31 { pt3dadd( 128.817, 145.359, 7.75405, 0.22 ) }
    dend_31 { pt3dadd( 129.807, 145.919, 7.37043, 1.25 ) }
    dend_31 { pt3dadd( 130.833, 146.46, 6.89154, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 120.826, 137.236, 9.11786, 0.29 ) }
    dend_28 { pt3dadd( 120.989, 138.425, 9.47463, 0.29 ) }
    dend_28 { pt3dadd( 121.168, 139.009, 9.59934, 0.22 ) }
    dend_28 { pt3dadd( 121.356, 139.49, 9.67212, 0.66 ) }
    dend_28 { pt3dadd( 121.661, 140.202, 9.749, 0.22 ) }
    dend_28 { pt3dadd( 121.978, 140.896, 9.80439, 0.15 ) }
    dend_28 { pt3dadd( 122.268, 141.544, 9.84604, 0.15 ) }
    dend_28 { pt3dadd( 122.656, 142.365, 9.84977, 0.15 ) }
    dend_28 { pt3dadd( 123.079, 143.232, 9.81083, 0.22 ) }
    dend_28 { pt3dadd( 123.473, 144.018, 9.74262, 0.29 ) }
    dend_28 { pt3dadd( 123.815, 144.67, 9.66436, 0.22 ) }
    dend_28 { pt3dadd( 124.197, 145.327, 9.56061, 0.29 ) }
    dend_28 { pt3dadd( 124.811, 146.195, 9.38869, 0.22 ) }
    dend_28 { pt3dadd( 125.408, 146.932, 9.22201, 0.66 ) }
    dend_28 { pt3dadd( 125.773, 147.351, 9.12398, 1.11 ) }
    dend_28 { pt3dadd( 126.231, 147.864, 8.99926, 1.18 ) }
    dend_28 { pt3dadd( 126.865, 148.581, 8.81487, 0.37 ) }
    dend_28 { pt3dadd( 127.555, 149.372, 8.61166, 0.37 ) }
    dend_28 { pt3dadd( 128.096, 150.076, 8.45621, 0.22 ) }
    dend_28 { pt3dadd( 128.55, 150.853, 8.34149, 0.22 ) }
    dend_28 { pt3dadd( 128.817, 151.443, 8.26835, 0.22 ) }
    dend_28 { pt3dadd( 128.998, 151.942, 8.22123, 0.59 ) }
    dend_28 { pt3dadd( 129.109, 152.307, 8.2049, 1.03 ) }
    dend_28 { pt3dadd( 129.333, 153.127, 8.20241, 1.18 ) }
    dend_28 { pt3dadd( 129.781, 154.672, 8.27892, 0.44 ) }
    dend_28 { pt3dadd( 129.991, 155.332, 8.32777, 0.88 ) }
    dend_28 { pt3dadd( 130.234, 156.075, 8.41026, 1.7 ) }
    dend_28 { pt3dadd( 130.52, 156.934, 8.53361, 2.29 ) }
    dend_28 { pt3dadd( 130.784, 157.704, 8.66138, 2.29 ) }
    dend_28 { pt3dadd( 130.989, 158.269, 8.7812, 1.99 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 130.989, 158.269, 8.7812, 0.22 ) }
    dend_30 { pt3dadd( 132.246, 160.328, 8.66707, 0.22 ) }
    dend_30 { pt3dadd( 132.836, 161.295, 8.61348, 0.22 ) }
    dend_30 { pt3dadd( 133.46, 162.317, 8.5568, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 130.989, 158.269, 8.7812, 0.29 ) }
    dend_29 { pt3dadd( 132.192, 159.109, 8.67264, 0.29 ) }
    dend_29 { pt3dadd( 132.992, 159.667, 8.60053, 0.29 ) }
    dend_29 { pt3dadd( 133.798, 160.23, 8.52787, 0.29 ) }
    dend_29 { pt3dadd( 134.479, 160.705, 8.46641, 0.52 ) }
    dend_29 { pt3dadd( 135.173, 161.19, 8.40379, 0.52 ) }
    dend_29 { pt3dadd( 136.322, 161.992, 8.30018, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_47 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_60 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_68 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_67 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_57 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_49 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_33 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_27 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_66 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_25 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_31 OneSecGrp_SectionRef_69.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_55 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_51 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_59 nseg = 9
    dend_47 nseg = 3
    dend_1 nseg = 3
    dend_63 nseg = 3
    dend_61 nseg = 7
    dend_60 nseg = 5
    dend_53 nseg = 5
    dend_48 nseg = 7
    dend_42 nseg = 5
    dend_68 nseg = 11
    dend_67 nseg = 9
    dend_65 nseg = 7
    dend_64 nseg = 11
    dend_57 nseg = 13
    dend_54 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 5
    dend_43 nseg = 3
    dend_39 nseg = 9
    dend_38 nseg = 21
    dend_21 nseg = 13
    dend_12 nseg = 13
    dend_9 nseg = 3
    dend_8 nseg = 7
    dend_6 nseg = 19
    dend_3 nseg = 7
    dend_32 nseg = 3
    dend_17 nseg = 5
    dend_14 nseg = 7
    dend_4 nseg = 3
    dend_34 nseg = 11
    dend_33 nseg = 9
    dend_27 nseg = 5
    dend_26 nseg = 9
    dend_19 nseg = 5
    dend_15 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_BTC_459ef88946_0_0


