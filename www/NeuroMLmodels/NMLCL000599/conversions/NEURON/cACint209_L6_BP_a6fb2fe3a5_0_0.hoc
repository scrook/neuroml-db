// Cell: cACint209_L6_BP_a6fb2fe3a5_0_0
/*
{
  "id" : "cACint209_L6_BP_a6fb2fe3a5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.23006, 8.43033, 2.87253, 0.83", "-6.27554, 10.7908, 3.33184, 1.11", "-8.07118, 12.1817, 3.57076, 0.83", "-9.81571, 13.5212, 3.78483, 0.83", "-10.8486, 14.2851, 3.90213, 1.11", "-14.0832, 16.6719, 4.27809, 1.11", "-19.8685, 20.7583, 4.94268, 0.83", "-21.9527, 22.1744, 5.16214, 0.83", "-23.6033, 23.2624, 5.29846, 0.83", "-25.2127, 24.3407, 5.41646, 0.83", "-26.5229, 25.2295, 5.48012, 0.55", "-27.5077, 25.8312, 5.54474, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.95009, 6.3904, -6.32663, 0.55", "8.12628, 7.07747, -7.03593, 0.55", "9.96931, 7.25092, -7.97449, 0.83", "12.8862, 7.43549, -9.71792, 0.55", "14.2943, 7.52459, -10.5595, 1.38", "17.7564, 7.74367, -12.6288, 0.55", "19.2309, 7.66948, -13.6161, 0.83", "26.8585, 6.30897, -19.1636, 0.55", "27.5965, 6.12602, -19.7739, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.687452, -10.7809, 3.33787, 1.11", "-0.742113, -15.6036, 5.0668, 1.11", "-0.764373, -17.5677, 5.77093, 0.83", "-0.793948, -20.1772, 6.70641, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.82965, 9.57371, -1.35457, 1.11", "0.867791, 11.3139, -1.34006, 1.11", "0.911748, 14.1532, -1.21412, 1.38", "0.916623, 14.3114, -1.204, 1.38", "1.09201, 16.2708, -1.04687, 0.83", "1.34938, 18.3445, -0.762067, 0.83", "1.80886, 20.6899, -0.13882, 0.83", "2.08078, 21.5817, 0.217373, 0.83", "2.35657, 22.2291, 0.548573, 1.11", "3.18059, 23.8092, 1.41487, 0.55", "4.14071, 25.4606, 2.44795, 0.83", "5.425, 27.165, 3.64005, 0.55", "6.08957, 27.8755, 4.18849, 0.83", "7.01149, 28.8385, 5.03357, 0.55", "8.14432, 30.0629, 6.16716, 0.55", "9.71058, 31.903, 7.88377, 0.55", "11.4347, 34.0048, 9.77855, 0.55", "12.5014, 35.3684, 11.174, 0.55", "13.7839, 37.092, 13.1238, 0.55", "14.0472, 37.4379, 13.5636, 0.83", "14.7351, 38.3521, 14.7996, 0.55", "15.3219, 39.0657, 15.7742, 0.83", "16.6602, 41.0096, 18.0799, 0.55", "17.1829, 41.7196, 18.7655, 0.83", "17.6914, 42.245, 19.2447, 0.55", "18.2069, 42.6987, 19.6239, 0.83", "19.3666, 43.5459, 20.3322, 0.83", "20.9142, 44.6982, 21.1208, 0.83", "21.8733, 45.4583, 21.4942, 0.55", "22.6027, 46.1141, 21.7831, 0.55", "24.5181, 47.809, 22.5097, 0.83", "25.7605, 48.896, 22.9261, 0.55", "27.6556, 50.4896, 23.4773, 0.55", "29.4015, 51.8284, 23.9097, 0.55", "30.9685, 52.9642, 24.2528, 0.55", "32.9595, 54.2974, 24.5931, 0.55", "34.1835, 54.9552, 24.7608, 0.55", "35.0296, 55.3275, 24.7731, 0.55", "36.1666, 55.6148, 24.6944, 0.55", "37.8817, 55.7682, 24.4396, 0.55", "38.9576, 55.73, 24.2406, 0.55", "40.5208, 55.6327, 24.0576, 0.55", "43.4728, 55.541, 23.9701, 0.55", "45.7721, 55.5757, 24.0646, 0.55", "48.1934, 55.7287, 24.3095, 0.55", "49.7337, 55.8806, 24.5896, 0.55", "53.7033, 56.6432, 25.5827, 0.55", "56.0318, 57.2798, 26.3504, 0.55", "57.76, 57.8757, 27.0942, 0.55", "58.8024, 58.4199, 27.5881, 0.55", "60.0078, 59.2222, 28.1539, 0.55", "62.0609, 60.7971, 28.9193, 0.55", "62.5377, 61.1757, 29.0266, 0.55", "63.9156, 62.1898, 29.2415, 0.55", "65.1791, 63.2661, 29.4337, 0.83", "65.8695, 63.863, 29.5273, 0.55", "66.9045, 64.8843, 29.625, 0.83", "72.2192, 70.3395, 31.6125, 0.83", "76.8447, 76.5658, 32.9515, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-27.5077, 25.8312, 5.54474, 0.55", "-29.5247, 26.6185, 4.724, 0.55", "-31.7179, 27.4745, 3.83154, 0.55", "-34.3647, 28.5076, 2.75453, 0.55", "-36.5502, 29.3606, 1.86521, 0.83", "-38.3817, 30.0754, 1.11996, 0.55", "-41.7812, 31.4023, -0.263325, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-27.5077, 25.8312, 5.54474, 0.55", "-29.8521, 26.274, 5.24819, 0.55", "-32.3493, 26.6625, 5.18067, 0.55", "-35.1815, 27.0973, 5.17331, 0.55", "-39.287, 27.6759, 5.53955, 0.55", "-42.7249, 28.0558, 6.08938, 0.55", "-46.332, 28.3959, 6.81966, 0.55", "-49.8224, 28.4817, 7.8991, 0.55", "-52.8299, 28.2574, 9.11582, 0.55", "-56.5813, 27.7082, 11.0312, 0.55", "-58.2145, 27.3456, 12.0905, 0.55", "-59.9793, 26.9338, 13.3108, 0.55", "-63.0913, 25.9741, 15.3178, 0.55", "-64.7451, 25.4731, 16.1243, 0.55", "-66.4773, 24.8952, 16.9581, 0.55", "-68.5354, 24.2377, 17.7402, 0.55", "-70.7714, 23.5709, 18.5295, 0.55", "-73.9621, 22.6127, 19.5858, 0.55", "-78.22, 21.6252, 20.6165, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "27.5965, 6.12602, -19.7739, 0.55", "32.0782, 7.3526, -20.7326, 0.55", "34.6646, 7.90812, -21.652, 0.55", "37.219, 8.34118, -22.5972, 0.55", "38.9652, 8.56697, -23.2429, 0.55", "41.518, 8.83736, -24.1672, 0.55", "46.8156, 9.296, -26.2514, 0.55", "52.8273, 9.77962, -29.0184, 0.55", "55.7455, 9.83195, -30.564, 0.55", "57.3093, 9.82175, -31.495, 0.55", "59.024, 9.81919, -32.5856, 0.55", "62.085, 9.72882, -34.5201, 0.55", "63.1976, 9.63062, -35.2602, 0.55", "67.9074, 9.33427, -38.7572, 0.55", "71.2413, 9.17902, -41.4797, 0.55", "73.1604, 9.1273, -43.0999, 0.55", "75.0747, 9.05876, -44.7145, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "27.5965, 6.12602, -19.7739, 0.83", "29.5081, 7.83158, -20.0819, 0.83", "30.606, 8.79106, -20.3135, 0.55", "32.2283, 10.203, -20.8177, 0.83", "33.3165, 11.1734, -21.2016, 0.55", "34.8068, 12.5617, -21.7186, 0.83", "36.5849, 14.2887, -22.2767, 0.55", "37.4898, 15.0952, -22.4958, 0.55", "39.6167, 16.6835, -22.7514, 0.83", "41.5706, 17.9466, -22.6412, 0.55", "42.655, 18.6697, -22.4634, 0.83", "44.258, 19.8406, -22.0212, 0.55", "46.5226, 21.6508, -21.0733, 0.55", "49.685, 24.0326, -19.5268, 0.55", "52.7021, 26.245, -17.7868, 0.55", "55.0934, 27.9822, -16.3527, 0.55", "59.0296, 30.8723, -13.9708, 0.55", "61.8857, 33.0957, -12.1823, 0.55", "63.5727, 34.6162, -11.0748, 0.55", "66.6068, 37.7847, -9.10058, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.793948, -20.1772, 6.70641, 0.83", "-0.797116, -23.5247, 6.57439, 0.83", "-0.800201, -26.7863, 6.44577, 0.83", "-0.803647, -30.4277, 6.30217, 0.83", "-0.805445, -32.3293, 6.22718, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.793948, -20.1772, 6.70641, 0.55", "-0.118196, -21.8097, 7.68841, 0.55", "0.532763, -23.7994, 9.00964, 0.55", "1.01971, -26.3878, 10.9123, 0.55", "1.14521, -27.3905, 11.691, 0.83", "1.28831, -29.9409, 14.0061, 0.55", "1.2608, -31.2525, 15.2458, 0.55", "1.17357, -33.8016, 17.773, 0.83", "1.02278, -35.6903, 19.788, 0.55", "0.757219, -37.2405, 21.4514, 0.55", "0.178955, -40.1722, 24.5609, 0.55", "-0.284547, -42.5087, 27.0116, 0.55", "-0.613546, -44.3842, 28.9954, 0.55", "-0.865251, -46.3805, 31.0191, 0.28", "-0.906608, -47.2154, 31.8177, 0.55", "-0.959208, -48.7584, 33.1989, 0.28", "-0.785515, -51.1801, 34.9263, 0.55", "-2.03185, -59.1396, 41.4505, 0.55", "-3.33388, -66.4889, 48.6452, 0.55", "-3.87671, -72.5642, 57.0277, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-41.7812, 31.4023, -0.263325, 0.55", "-44.3133, 32.346, 2.17473, 0.55", "-45.3182, 32.7328, 3.37272, 0.83", "-46.4185, 33.1852, 4.98658, 0.55", "-47.2253, 33.5694, 6.31903, 0.83", "-49.3598, 34.6723, 9.74776, 0.55", "-50.1671, 35.112, 11.0477, 0.28", "-51.4612, 35.9255, 13.3577, 0.55", "-53.2031, 37.0275, 16.4407, 0.55", "-54.556, 37.8318, 18.6982, 0.55", "-56.391, 38.8751, 21.6368, 0.28", "-56.8958, 39.121, 22.3227, 0.55", "-57.9602, 39.6269, 23.6871, 0.28", "-58.7156, 39.9618, 24.522, 0.55", "-60.3129, 40.5701, 26.0744, 0.28", "-61.2639, 40.8435, 26.9529, 0.55", "-62.9209, 41.1874, 28.5701, 0.28", "-64.0488, 41.3922, 29.6153, 0.55", "-69.6212, 43.3424, 39.616, 0.55", "-74.2084, 44.4475, 50.2277, 0.55", "-78.4187, 44.5063, 61.0508, 0.55", "-82.6381, 43.1198, 71.7814, 0.55", "-85.3033, 42.5905, 83.0724, 0.55", "-88.9585, 42.3131, 94.092, 0.55", "-92.787, 43.9546, 104.932, 0.55", "-96.55, 44.6734, 115.895, 0.55", "-100.076, 46.229, 126.851, 0.55", "-102.978, 47.7354, 137.994, 0.55", "-104.587, 48.1095, 149.489, 0.55", "-106.326, 49.5695, 160.879, 0.55", "-108.22, 49.8164, 172.334, 0.55", "-108.655, 49.7424, 183.939, 0.55", "-107.093, 50.6506, 195.411, 0.55", "-105.505, 49.3041, 206.836, 0.55", "-102.301, 47.7602, 217.891, 0.55", "-99.6674, 46.7419, 229.156, 0.55", "-98.2356, 46.5777, 240.68, 0.55", "-99.3173, 48.0612, 252.147, 0.55", "-99.3191, 48.3402, 263.757, 0.55", "-97.1658, 50.7052, 274.921, 0.55", "-96.9336, 53.7988, 286.113, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-41.7812, 31.4023, -0.263325, 0.55", "-43.3536, 31.7261, -1.79, 0.55", "-44.6349, 32.0998, -3.54574, 0.55", "-45.8669, 32.6215, -5.43599, 0.55", "-46.6383, 32.9481, -6.61964, 0.55", "-48.0456, 33.544, -8.77875, 0.83", "-49.0751, 33.9799, -10.3584, 0.55", "-50.3176, 34.558, -12.7007, 0.83", "-50.838, 35.0005, -14.0534, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-78.22, 21.6252, 20.6165, 0.28", "-79.082, 19.5434, 21.2265, 0.28", "-79.513, 18.6133, 21.4299, 0.28", "-80.0677, 17.2848, 21.6687, 0.55", "-80.5173, 16.124, 21.8819, 0.28", "-81.1731, 14.3666, 22.2217, 0.55", "-82.9622, 9.24563, 23.2737, 0.28", "-83.5473, 7.39878, 23.5132, 0.55", "-84.4388, 4.51974, 23.8001, 0.28", "-84.9524, 2.77094, 23.9047, 0.55", "-85.31, 1.55491, 23.9536, 0.28", "-85.7159, 0.163738, 24.0183, 0.55", "-86.8968, -4.42258, 24.303, 0.28", "-87.2774, -5.82985, 24.3521, 0.55", "-87.9881, -8.07302, 24.2647, 0.28", "-88.6116, -9.56753, 24.1343, 0.28", "-89.1942, -10.5929, 24.0412, 0.55", "-91.2547, -13.4828, 23.893, 0.28", "-92.22, -14.6565, 23.8678, 0.55", "-94.6066, -17.3997, 23.7139, 0.28", "-97.0152, -19.8728, 23.5733, 0.28", "-99.6602, -22.3009, 23.3986, 0.28", "-100.88, -23.2385, 23.3549, 0.55", "-106.295, -32.0409, 23.8281, 0.55", "-112.182, -40.223, 26.1565, 0.55", "-118.141, -48.644, 26.9357, 0.55", "-124.443, -56.8451, 26.7072, 0.55", "-131.018, -64.7275, 25.4183, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-78.22, 21.6252, 20.6165, 0.55", "-78.9912, 21.5523, 20.7508, 0.55", "-81.1588, 21.3826, 21.4116, 0.55", "-81.9715, 21.303, 21.7062, 0.55", "-83.8804, 21.061, 22.4353, 0.55", "-86.8208, 20.7019, 23.4098, 0.55", "-88.3509, 20.5595, 23.8832, 0.28", "-90.7319, 20.28, 24.5792, 0.55", "-92.5009, 20.0283, 25.0364, 0.55", "-93.2477, 19.9173, 25.2316, 0.28", "-97.7275, 19.248, 26.3972, 0.55", "-99.8221, 18.8229, 26.8246, 0.28", "-102.651, 18.2187, 27.2359, 0.28", "-105.095, 17.7168, 27.4426, 0.55", "-114.616, 17.4041, 30.1606, 0.55", "-123.771, 16.9747, 33.9174, 0.55", "-132.336, 15.6735, 38.7219, 0.55", "-140.667, 16.1166, 44.0624, 0.55", "-147.706, 16.4574, 51.0236, 0.55", "-153.293, 17.5251, 59.1331, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "75.0747, 9.05876, -44.7145, 0.55", "80.6957, 10.889, -49.2516, 0.55", "82.4678, 11.3967, -50.8033, 0.55", "84.6832, 11.9565, -52.7236, 0.55", "88.6982, 12.9526, -56.449, 0.55", "92.8805, 13.8241, -60.4537, 0.55", "94.9194, 14.0799, -62.3706, 0.83", "96.5912, 14.1807, -64.0854, 0.55", "97.8356, 14.1584, -65.5044, 0.83", "100.815, 13.6843, -69.1677, 0.55", "103.257, 13.0557, -72.2179, 0.55", "106.069, 12.3028, -75.5827, 0.55", "109.201, 11.5635, -79.3894, 0.55", "111.299, 11.019, -82.0006, 0.55", "113.665, 10.4024, -85.026, 0.55", "115.71, 9.95567, -87.7848, 0.55", "116.999, 9.81051, -89.6913, 0.55", "118.607, 9.63158, -93.5082, 0.55", "119.475, 9.45209, -95.8979, 0.55", "120.194, 9.0957, -99.0744, 0.55", "121.15, 8.34433, -104.45, 0.55", "121.34, 8.131, -105.664, 0.28", "123.822, 5.36817, -120.439, 0.28", "124.678, 4.58117, -124.777, 0.83", "128.083, 1.50426, -140.181, 0.83", "129.84, -0.213689, -147.355, 0.83", "130.695, -1.03153, -150.269, 0.55", "131.691, -1.84817, -153.111, 0.55", "134.517, -3.52696, -158.399, 0.55", "137.571, -5.07448, -163.054, 0.28", "138.519, -5.41702, -163.348, 0.55", "140.623, -6.06954, -163.224, 0.28", "141.932, -6.39134, -162.949, 0.55", "143.297, -6.75265, -162.547, 0.28", "144.94, -7.10838, -161.983, 0.55", "147.402, -7.49289, -161.395, 0.28", "149.373, -7.85862, -160.991, 0.55", "151.56, -8.10615, -160.711, 0.28", "154.53, -8.41575, -160.594, 0.55", "157.861, -8.67253, -160.66, 0.55", "160.79, -8.85091, -160.91, 0.28", "164.841, -9.04615, -161.48, 0.55", "171.844, -9.14117, -163.203, 0.55", "174.94, -8.99774, -164.331, 0.55", "176.271, -8.87122, -164.955, 0.83", "178.805, -8.59716, -166.378, 0.55", "180.564, -8.32798, -167.472, 0.83", "185.304, -7.47451, -170.462, 0.55", "188.188, -7.14958, -172.375, 0.28", "189.401, -7.09792, -173.048, 0.55", "192.715, -7.2912, -174.537, 0.28", "193.873, -7.47205, -174.988, 0.55", "196.256, -8.02024, -175.553, 0.28", "198.678, -8.84451, -175.717, 0.55", "203.569, -10.8316, -175.19, 0.28", "205.823, -11.8644, -174.709, 0.55", "209.17, -13.6078, -173.824, 0.28", "213.4, -15.803, -172.549, 0.55", "216.462, -17.351, -171.576, 0.55", "221.774, -19.8686, -169.789, 0.28", "223.956, -20.7879, -169.233, 0.55", "227.722, -22.1282, -168.679, 0.28", "231.483, -23.1557, -168.375, 0.55", "233.552, -23.4647, -168.484, 0.28", "235.431, -23.4808, -168.715, 0.55", "240.742, -23.177, -169.851, 0.28", "244.545, -22.6929, -170.708, 0.28", "247.861, -22.0277, -171.486, 0.55", "251.524, -21.1796, -172.525, 0.28", "252.449, -20.9101, -172.752, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "75.0747, 9.05876, -44.7145, 0.55", "75.3065, 7.94748, -45.8381, 0.55", "75.4057, 6.995, -46.7106, 0.28", "75.4963, 6.10281, -47.426, 0.55", "75.7975, 4.20979, -48.9655, 0.28", "75.8126, 4.0952, -49.0808, 0.55", "75.9107, 3.50703, -49.7418, 0.28", "75.9377, 3.04485, -50.3771, 0.55", "75.9308, 2.58038, -51.107, 0.28", "75.8967, 1.95714, -52.1394, 0.55", "75.8101, 0.38317, -54.6932, 0.55", "75.7091, -1.04235, -57.0532, 0.55", "75.6134, -2.18033, -58.9411, 0.55", "75.4922, -3.30342, -60.77, 0.55", "75.4598, -3.5973, -61.2264, 0.28", "75.4372, -3.9198, -61.6808, 0.55", "75.4596, -4.38193, -62.2602, 0.28", "75.6039, -5.23827, -63.2107, 0.55", "76.0492, -6.95937, -64.7343, 0.55", "76.2986, -7.90702, -65.462, 0.28", "76.4903, -8.85583, -66.2454, 0.55", "76.6496, -10.1649, -67.3938, 0.28", "76.7012, -11.2102, -68.3457, 0.55", "76.7021, -12.7675, -69.77, 0.28", "76.717, -14.3927, -71.1879, 0.55", "76.7028, -16.7448, -73.2687, 0.28", "76.6639, -17.9956, -74.3814, 0.55", "76.6, -19.2655, -75.5528, 0.28", "76.5295, -20.3645, -76.6625, 0.28", "76.4954, -21.7113, -78.1888, 0.55", "76.5676, -22.975, -79.5704, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "66.6068, 37.7847, -9.10058, 0.55", "69.506, 37.8763, -8.64856, 0.55", "71.619, 37.8624, -8.51778, 0.55", "76.2377, 37.7782, -8.4703, 0.55", "78.3093, 37.6969, -8.63206, 0.55", "80.5558, 37.6548, -8.92217, 0.55", "83.5504, 37.6492, -9.52443, 0.55", "86.7023, 37.5576, -10.4613, 0.55", "88.3473, 37.4867, -11.1433, 0.55", "91.6599, 37.3381, -12.9919, 0.55", "93.1803, 37.2822, -13.8928, 0.55", "96.7468, 37.0807, -16.099, 0.55", "99.1783, 36.845, -17.5735, 0.55", "100.976, 36.6607, -18.5755, 0.83", "103.865, 36.2583, -20.1441, 0.55", "106.722, 35.7257, -21.5701, 0.83", "109.169, 35.1631, -22.694, 0.55", "111.35, 34.6946, -23.5807, 0.55", "112.587, 34.4824, -24.0165, 0.83", "115.484, 33.997, -24.8822, 0.28", "116.923, 33.8152, -25.2216, 0.28", "118.322, 33.5513, -25.6221, 0.28", "119.829, 33.3058, -26.0614, 0.28", "122.23, 32.9575, -26.8136, 0.28", "123.197, 32.8294, -27.0875, 0.55", "125.52, 32.5481, -27.5169, 0.55", "129.723, 32.0034, -28.0816, 0.55", "130.894, 31.8228, -28.1878, 0.55", "131.948, 31.6286, -28.239, 0.83", "134.24, 31.2764, -28.1699, 0.55", "136.234, 30.9742, -28.0789, 0.55", "138.118, 30.6965, -27.9843, 0.55", "139.577, 30.4565, -27.9514, 0.55", "141.905, 29.919, -28.0107, 0.55", "144.671, 29.0519, -28.2298, 0.55", "149.014, 27.2398, -28.8647, 0.55", "151.433, 25.9113, -29.3614, 0.55", "153.569, 24.4237, -29.8952, 0.28", "154.221, 23.851, -30.0903, 0.55", "155.711, 22.1923, -30.5945, 0.28", "157.053, 20.2783, -31.0937, 0.55", "158.407, 17.8373, -31.4858, 0.55", "159.322, 16.2366, -31.6633, 0.28", "159.656, 15.6729, -31.6972, 0.55", "160.515, 14.2773, -31.7627, 0.28", "161.679, 12.4691, -31.8037, 0.55", "164.669, 8.14272, -31.7981, 0.55", "166.219, 5.96966, -31.7484, 0.55", "167.656, 3.98082, -31.6845, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "66.6068, 37.7847, -9.10058, 0.55", "68.6423, 39.3006, -7.2645, 0.55", "69.3032, 39.7693, -6.71518, 0.55", "71.8163, 41.3422, -4.73654, 0.55", "74.6006, 43.1744, -2.50521, 0.55", "78.1515, 45.552, 0.462846, 0.55", "79.1334, 46.2073, 1.2749, 0.55", "80.9148, 47.3019, 2.74131, 0.55", "82.8722, 48.5214, 4.24891, 0.55", "85.1538, 49.9674, 5.86302, 0.55", "87.2951, 51.3658, 7.37979, 0.55", "88.4683, 52.1692, 8.12976, 0.55", "89.8367, 53.1546, 8.99105, 0.55", "91.5241, 54.4147, 10.0022, 0.83", "94.3487, 56.3564, 11.3405, 0.55", "96.2544, 57.5281, 12.1596, 0.83", "98.9461, 58.9926, 13.2493, 0.55", "99.7852, 59.3913, 13.5893, 0.55", "102.428, 60.4771, 14.6391, 0.55", "107.254, 62.065, 16.4355, 0.55", "110.845, 63.0061, 17.7446, 0.55", "113.703, 63.6471, 18.8953, 0.55", "116.632, 64.1885, 20.2223, 0.55", "117.251, 64.2876, 20.5106, 0.28", "118.517, 64.4398, 21.1106, 0.83", "123.726, 65.0032, 23.6308, 0.55", "127.382, 65.3771, 25.3247, 0.55", "130.353, 65.7813, 26.7596, 0.55", "132.127, 66.0236, 27.6353, 0.83", "133.518, 66.2345, 28.3198, 0.28", "134.782, 66.4236, 28.9284, 0.55", "143.882, 70.6765, 34.1695, 0.55", "154.236, 72.8421, 38.2281, 0.55", "164.185, 76.4261, 42.2947, 0.55", "172.944, 79.0569, 48.9823, 0.55", "181.266, 80.2976, 56.5697, 0.55", "191.223, 79.2221, 61.8676, 0.55", "201.525, 76.5295, 65.7393, 0.55", "212.505, 75.6632, 68.3939, 0.55", "223.282, 74.86, 71.797, 0.55", "234.362, 75.0414, 74.1554, 0.55", "245.069, 76.1436, 77.6929, 0.55", "255.374, 75.5263, 82.3613, 0.55", "265.384, 77.1519, 87.4127, 0.55", "274.379, 80.7071, 93.3128, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.805445, -32.3293, 6.22718, 1.38", "2.88083, -35.5811, 6.09699, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.805445, -32.3293, 6.22718, 0.55", "-1.90379, -33.841, 6.09437, 0.55", "-3.10331, -35.7678, 5.9507, 0.55", "-4.05162, -37.0517, 5.8484, 0.55", "-4.83076, -38.1254, 5.6249, 0.55", "-6.51031, -40.3549, 4.95519, 0.55", "-7.68688, -41.8472, 4.44755, 0.55", "-8.72563, -43.1847, 3.95109, 0.55", "-11.405, -46.4487, 2.67693, 0.55", "-14.6369, -50.2349, 1.174, 0.55", "-17.136, -53.1059, -0.0399748, 0.55", "-18.724, -54.9884, -0.840691, 0.55", "-20.5415, -57.2421, -1.75223, 0.55", "-22.8313, -60.4561, -2.87061, 0.55", "-24.1532, -62.7191, -3.48882, 0.55", "-25.7827, -65.9575, -4.07977, 0.55", "-27.0654, -68.9782, -4.48686, 0.55", "-28.3251, -72.7292, -4.86591, 0.55", "-29.4729, -77.1148, -5.15371, 0.55", "-30.0429, -80.4501, -5.24662, 0.55", "-30.2325, -82.1037, -5.16996, 0.55", "-30.4811, -85.9769, -4.74711, 0.55", "-30.6644, -89.5973, -4.24846, 0.55", "-30.7048, -93.234, -3.45206, 0.55", "-30.7665, -95.3212, -2.88598, 0.55", "-30.954, -101.772, -0.895673, 0.55", "-30.9722, -102.247, -0.741366, 0.55", "-31.04, -105.153, 0.282328, 0.55", "-31.419, -110.364, 2.19712, 0.55", "-31.5403, -112.107, 2.73382, 0.55", "-31.7265, -114.837, 3.10222, 0.55", "-31.7354, -115.85, 3.01468, 0.55", "-31.5202, -119.273, 2.10695, 0.55", "-31.1892, -121.486, 1.07639, 0.55", "-30.4596, -125.007, -1.25871, 0.55", "-29.3446, -129.307, -4.41894, 0.28", "-29.0309, -130.369, -5.34015, 0.55", "-28.5288, -131.98, -6.87689, 0.28", "-28.4534, -132.223, -7.1216, 0.55", "-28.066, -133.553, -8.34986, 0.28", "-27.9807, -134.006, -8.6684, 0.55", "-27.6577, -136.363, -9.88262, 0.28", "-27.5799, -137.166, -10.2904, 0.55", "-27.4035, -139.491, -11.3437, 0.28", "-27.3451, -140.223, -11.6722, 0.55", "-27.1702, -142.749, -12.7681, 0.28", "-27.0829, -143.911, -13.2772, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.87671, -72.5642, 57.0277, 0.55", "-5.50492, -77.9962, 63.8179, 0.55", "-7.48312, -82.4694, 71.1895, 0.55", "-9.64188, -87.5128, 78.1298, 0.55", "-11.9995, -92.5241, 85.0285, 0.55", "-14.2171, -98.6733, 90.9895, 0.55", "-16.0697, -104.63, 97.2622, 0.55", "-18.3834, -111.976, 101.615, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.87671, -72.5642, 57.0277, 0.55", "-1.64785, -82.875, 65.6033, 0.55", "0.118792, -94.638, 72.186, 0.55", "-0.152775, -106.093, 79.5024, 0.55", "-1.70164, -117.969, 85.935, 0.55", "-2.66631, -129.907, 92.3664, 0.55", "-3.14678, -141.44, 99.5493, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-50.838, 35.0005, -14.0534, 0.83", "-51.1919, 35.5887, -16.2698, 0.83", "-52.0333, 37.1571, -21.3401, 0.55", "-52.346, 37.8964, -23.4151, 0.83", "-52.632, 38.742, -25.5381, 0.55", "-52.8364, 39.7303, -27.5107, 0.55", "-52.8911, 40.2798, -28.4079, 0.28", "-52.909, 40.7178, -28.8647, 0.55", "-52.7608, 42.3698, -30.0595, 0.28", "-52.6624, 43.0939, -30.5427, 0.55", "-52.3107, 45.6705, -32.1101, 0.28", "-52.0601, 47.7557, -33.2652, 0.55", "-51.7913, 51.0839, -34.9131, 0.28", "-51.6379, 54.0503, -36.2704, 0.28", "-51.6364, 55.7382, -36.964, 0.55", "-51.7564, 57.7541, -37.7386, 0.28", "-51.8708, 58.7297, -38.0725, 0.55", "-52.3008, 60.989, -38.9, 0.28", "-52.7162, 62.4677, -39.482, 0.28", "-53.1726, 63.9016, -40.0811, 0.28", "-53.3855, 64.6545, -40.4117, 0.55", "-54.1086, 67.6466, -41.8786, 0.28", "-54.8693, 71.1447, -43.7237, 0.55", "-55.1153, 72.3484, -44.3726, 0.55", "-55.3717, 73.5709, -44.9909, 0.55", "-56.0767, 76.1612, -46.2878, 0.55", "-56.6687, 77.8544, -47.1287, 0.28", "-56.9742, 78.4987, -47.4246, 0.55", "-57.9143, 80.275, -48.1416, 0.28", "-59.0242, 82.136, -48.942, 0.55", "-60.9216, 84.7834, -50.0875, 0.28", "-61.8542, 85.882, -50.5497, 0.28", "-63.4219, 87.3498, -51.2548, 0.55", "-65.2022, 88.8457, -52.0243, 0.28", "-65.5266, 89.0777, -52.1412, 0.55", "-66.6933, 89.8116, -52.4981, 0.28", "-70.691, 92.1764, -53.5611, 0.55", "-76.3212, 94.9725, -54.973, 0.28", "-77.3824, 95.4093, -55.2507, 0.55", "-80.3119, 96.4993, -55.9994, 0.28", "-81.5531, 96.9298, -56.3307, 0.28", "-82.649, 97.2614, -56.644, 0.55", "-85.9353, 97.8374, -57.5724, 0.28", "-88.2254, 98.1014, -58.0642, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-50.838, 35.0005, -14.0534, 0.55", "-51.1382, 36.246, -14.2931, 0.55", "-51.3292, 36.985, -14.3628, 0.28", "-51.5628, 37.5138, -14.2721, 0.55", "-52.0992, 38.7283, -14.0639, 0.28", "-52.476, 39.5813, -13.9176, 0.55", "-53.1706, 41.1538, -13.648, 0.28", "-53.6181, 42.0003, -13.347, 0.55", "-55.2359, 44.0144, -11.8543, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-131.018, -64.7275, 25.4183, 0.55", "-135.025, -71.6764, 26.5266, 0.55", "-137.722, -79.2713, 27.3089, 0.55", "-139.921, -87.0048, 26.3463, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-131.018, -64.7275, 25.4183, 0.55", "-135.639, -72.6018, 26.9164, 0.55", "-139.241, -81.0837, 27.7454, 0.55", "-142.446, -89.7269, 28.5381, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-153.293, 17.5251, 59.1331, 0.55", "-164.511, 16.9351, 66.5775, 0.55", "-176.189, 18.3301, 73.1556, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-153.293, 17.5251, 59.1331, 0.55", "-163.605, 16.2988, 63.1971, 0.55", "-173.973, 16.9166, 67.2528, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "76.5676, -22.975, -79.5704, 0.28", "83.1657, -26.0464, -92.2814, 0.28", "83.8199, -26.4231, -93.4235, 0.55", "84.9245, -27.0592, -95.3517, 0.28", "85.8545, -27.5948, -96.9753, 0.28", "87.0856, -28.3038, -99.1245, 0.55", "88.7087, -29.2386, -101.959, 0.55", "90.9081, -31.1558, -103.591, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "76.5676, -22.975, -79.5704, 0.55", "77.0225, -23.7727, -80.8352, 0.55", "77.1412, -24.1186, -81.3993, 0.28", "77.3029, -24.7006, -82.3831, 0.55", "77.6593, -25.9829, -84.5503, 0.28", "77.9062, -26.8715, -86.0522, 0.55", "78.3246, -28.3771, -88.5969, 0.28", "78.7723, -30.1537, -91.9026, 0.28", "78.9293, -30.9569, -93.446, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "167.656, 3.98082, -31.6845, 0.28", "170.526, 1.18045, -30.83, 0.28", "174.188, -2.53005, -29.3267, 0.28", "176.518, -4.9424, -28.2321, 0.55", "177.906, -6.25253, -27.5487, 0.28", "178.645, -6.95898, -27.1721, 0.28", "182.305, -10.4475, -25.3805, 0.55", "183.146, -11.213, -24.8565, 0.28", "185.176, -13.2583, -23.3022, 0.55", "186.911, -15.0458, -22.0428, 0.28", "188.407, -16.4851, -21.0543, 0.55", "190.163, -18.2186, -20.0062, 0.55", "192.949, -20.9924, -18.771, 0.55", "193.622, -21.6765, -18.4981, 0.55", "196.047, -24.2484, -17.5136, 0.28", "196.993, -25.3091, -17.1448, 0.55", "198.296, -26.6468, -16.6801, 0.28", "200.133, -28.553, -16.1259, 0.55", "203.145, -31.561, -15.7815, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "167.656, 3.98082, -31.6845, 0.55", "165.48, 3.66045, -31.6414, 0.55", "163.713, 3.40027, -31.6064, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.88083, -35.5811, 6.09699, 0.83", "3.03336, -35.8633, 6.07751, 0.83", "4.76634, -38.3379, 6.06182, 0.83", "6.28386, -40.5082, 5.89739, 0.55", "7.49451, -42.2396, 5.76621, 0.55", "10.0678, -45.9198, 5.48738, 0.83", "13.189, -50.3836, 5.14919, 0.55", "14.8873, -52.7156, 5.02, 0.83", "17.8763, -56.4068, 4.98544, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.88083, -35.5811, 6.09699, 0.55", "2.53726, -36.7638, 2.88358, 0.55", "2.16848, -38.0332, -0.565614, 0.55", "1.73313, -39.5318, -4.63742, 0.55", "1.20448, -41.3516, -9.58191, 0.55", "0.904487, -42.3843, -12.3877, 0.55", "0.844223, -42.5917, -12.9514, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-3.14678, -141.44, 99.5493, 0.55", "-2.36453, -150.94, 105.987, 0.55", "-0.35612, -161.12, 110.951, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.14678, -141.44, 99.5493, 0.55", "-3.7146, -148.851, 103.834, 0.55", "-4.42292, -156.006, 108.513, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-55.2359, 44.0144, -11.8543, 0.28", "-56.6252, 45.8136, -10.1454, 0.28", "-57.1382, 46.5044, -9.41604, 0.55", "-58.5969, 48.5125, -7.26294, 0.28", "-59.3363, 49.4961, -6.30005, 0.55", "-61.3716, 52.1462, -3.78887, 0.28", "-63.4402, 54.8397, -1.23659, 0.55", "-66.8417, 59.0674, 3.05318, 0.28", "-67.5662, 59.9754, 3.96674, 0.55", "-69.1786, 62.0931, 5.88765, 0.28", "-69.8095, 62.9712, 6.63654, 0.55", "-76.9536, 68.6768, 13.4661, 0.55", "-85.2637, 75.2412, 17.719, 0.55", "-92.2648, 82.3649, 23.2391, 0.55", "-97.9325, 90.9441, 28.1899, 0.55", "-104.818, 98.9101, 32.5901, 0.55", "-112.369, 105.212, 38.3779, 0.55", "-118.934, 110.901, 45.7787, 0.55", "-124.195, 115.726, 54.6824, 0.55", "-129.571, 121.149, 63.1636, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-55.2359, 44.0144, -11.8543, 0.55", "-57.5698, 43.815, -9.16038, 0.55", "-58.7793, 43.6595, -7.74097, 0.28", "-59.6795, 43.5438, -6.68469, 0.55", "-60.4297, 43.4473, -5.80434, 0.28", "-60.9551, 43.3798, -5.1877, 0.55", "-62.4041, 43.1935, -3.48737, 0.28", "-63.4218, 42.9001, -2.45191, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-139.921, -87.0048, 26.3463, 0.55", "-142.433, -95.0685, 27.8026, 0.55", "-144.555, -103.035, 30.1444, 0.55", "-146.379, -111.373, 30.9148, 0.55", "-148.812, -119.344, 32.9162, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-139.921, -87.0048, 26.3463, 0.55", "-144.651, -94.0218, 22.1219, 0.55", "-149.269, -100.145, 16.588, 0.55", "-154.33, -106.993, 12.4708, 0.55", "-161.273, -112.357, 8.93942, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-142.446, -89.7269, 28.5381, 0.55", "-147.218, -99.3316, 24.9128, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-142.446, -89.7269, 28.5381, 0.55", "-146.016, -92.9387, 34.4962, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "90.9081, -31.1558, -103.591, 0.28", "93.8239, -32.8814, -105.631, 0.28", "95.1783, -33.6829, -106.579, 0.55", "97.7612, -35.2114, -108.386, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "90.9081, -31.1558, -103.591, 0.55", "90.3897, -32.2538, -105.071, 0.55", "89.3529, -34.4501, -108.033, 0.28", "89.0151, -35.1655, -108.998, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "78.9293, -30.9569, -93.446, 0.28", "79.5651, -33.18, -96.844, 0.28", "79.8799, -34.2807, -98.5265, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "78.9293, -30.9569, -93.446, 0.55", "76.9252, -31.6405, -92.7506, 0.55", "71.3368, -33.5468, -90.8116, 0.28", "70.0092, -33.9997, -90.351, 0.55", "66.3776, -35.2385, -89.0909, 0.28", "64.0367, -36.037, -88.2786, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "17.8763, -56.4068, 4.98544, 0.83", "17.9196, -56.602, 4.96107, 0.83", "18.5085, -59.155, 4.72116, 0.83", "18.759, -61.0853, 4.62695, 0.83", "18.8313, -62.966, 4.69792, 0.83", "18.8014, -65.4821, 4.95829, 0.83", "18.6667, -68.3906, 5.34548, 0.83", "18.4942, -71.6428, 5.94597, 0.83", "18.2969, -74.8065, 6.6708, 0.83", "17.8292, -78.7067, 7.42016, 0.83", "17.5408, -80.5025, 7.6455, 0.83", "17.3365, -81.8507, 7.7318, 0.83", "16.9031, -84.4396, 7.8329, 0.83", "16.594, -86.7503, 7.8113, 0.83", "16.3079, -91.6403, 7.28895, 0.83", "16.2551, -94.3011, 6.6694, 0.83", "16.2427, -96.7472, 5.92248, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.8763, -56.4068, 4.98544, 0.55", "16.9855, -58.7832, 5.58059, 0.55", "16.3437, -60.4938, 6.14426, 0.55", "15.9868, -61.5738, 6.6059, 0.55", "15.5461, -63.2421, 7.47306, 0.55", "14.8099, -66.517, 9.384, 0.55", "14.2955, -68.9631, 11.1125, 0.55", "13.9349, -70.8977, 12.713, 0.55", "13.5541, -72.8358, 14.4859, 0.55", "13.2445, -74.4327, 16.0479, 0.28", "13.0183, -75.7137, 17.5313, 0.55", "12.6301, -78.0035, 20.598, 0.55", "12.3457, -79.3892, 22.6645, 0.55", "12.1748, -80.1667, 23.8159, 0.55", "11.9088, -81.0919, 25.1324, 0.83", "11.0458, -83.8607, 28.8398, 0.28", "10.7548, -84.7803, 30.0391, 0.55", "10.2727, -86.4462, 32.1317, 0.28", "10.1341, -86.9547, 32.8174, 0.55", "9.87628, -88.15, 34.3844, 0.28", "9.72195, -88.8363, 35.2193, 0.55", "8.91604, -91.1537, 37.3168, 0.55", "8.99292, -97.0421, 45.1465, 0.55", "9.59523, -102.558, 53.2209, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "0.844223, -42.5917, -12.9514, 0.55", "-0.57665, -43.7512, -15.8116, 0.55", "-1.01448, -44.0402, -16.6244, 0.55", "-2.13242, -44.7703, -18.6031, 0.55", "-4.64265, -46.2669, -22.7825, 0.28", "-5.02817, -46.4791, -23.3711, 0.55", "-6.65008, -47.4332, -25.741, 0.55", "-8.95294, -48.7602, -28.6968, 0.55", "-9.84833, -49.2328, -29.7998, 0.28", "-10.661, -49.5811, -30.7089, 0.28", "-12.1169, -50.1556, -32.0327, 0.55", "-13.8906, -50.7533, -33.7245, 0.28", "-15.548, -51.1372, -35.3294, 0.55", "-16.8592, -51.3121, -36.5416, 0.55", "-17.7696, -51.3445, -37.408, 0.55", "-20.4461, -51.2981, -40.0426, 0.55", "-23.3183, -51.0366, -42.7556, 0.55", "-24.5264, -50.858, -43.844, 0.28", "-25.6649, -50.7068, -44.9009, 0.55", "-27.9526, -50.5656, -47.0204, 0.28", "-28.7203, -50.5432, -47.7253, 0.83", "-30.1855, -50.4891, -48.9349, 0.28", "-31.2637, -50.5456, -49.6595, 0.55", "-32.8276, -50.6879, -50.6787, 0.28", "-33.4574, -50.7374, -51.0631, 0.55", "-34.6367, -50.8561, -51.7101, 0.55", "-36.4683, -50.8538, -52.6164, 0.55", "-37.694, -50.7814, -53.1405, 0.28", "-38.7211, -50.6066, -53.4851, 0.55", "-39.9549, -50.2592, -53.8956, 0.28", "-40.1591, -50.1866, -53.9695, 0.55", "-41.9853, -49.4615, -54.9527, 0.28", "-43.2858, -48.9025, -55.8007, 0.55", "-44.97, -48.042, -57.1487, 0.83", "-46.3285, -47.2932, -58.4133, 0.28", "-46.671, -47.1003, -58.7751, 0.55", "-49.257, -45.6531, -61.7025, 0.28", "-49.6974, -45.4052, -62.2621, 0.55", "-50.9925, -44.5722, -64.0016, 0.28", "-51.326, -44.358, -64.4533, 0.55", "-52.1989, -43.8025, -65.548, 0.28", "-52.8286, -43.4037, -66.2813, 0.55", "-54.2889, -42.5266, -67.694, 0.28", "-55.1543, -42.0713, -68.4991, 0.55", "-57.0068, -41.2258, -70.117, 0.28", "-57.5559, -41.006, -70.5903, 0.55", "-58.4139, -40.7325, -71.3005, 0.28", "-59.149, -40.5051, -71.8654, 0.55", "-60.6945, -40.0598, -72.9445, 0.28", "-61.1619, -39.9373, -73.2541, 0.55", "-64.6824, -38.9673, -75.3899, 0.28", "-65.9543, -38.5454, -76.0302, 0.55", "-68.2697, -37.6939, -77.0296, 0.28", "-69.3257, -37.2722, -77.449, 0.55", "-71.7706, -36.3287, -78.2791, 0.28", "-72.6696, -36.0218, -78.5474, 0.55", "-75.9107, -35.1936, -79.3561, 0.28", "-77.24, -35.0085, -79.6828, 0.55", "-79.0952, -35.0442, -80.1303, 0.55", "-80.2302, -35.1386, -80.3791, 0.55", "-82.5646, -35.3986, -80.7096, 0.28", "-84.8795, -35.6833, -80.8915, 0.28", "-86.8169, -35.916, -80.9875, 0.55", "-89.248, -36.0111, -80.8477, 0.28", "-90.4888, -35.9211, -80.6214, 0.55", "-93.5289, -35.2763, -79.8012, 0.28", "-95.1517, -34.6748, -79.0332, 0.55", "-96.2247, -34.1463, -78.3302, 0.28", "-97.4257, -33.5523, -77.2824, 0.55", "-98.9291, -32.7624, -75.8069, 0.28", "-99.4974, -32.492, -75.2543, 0.55", "-102.433, -31.353, -72.7191, 0.28", "-103.421, -31.0063, -71.8746, 0.55", "-105.754, -30.2686, -69.8114, 0.28", "-107.02, -29.8827, -68.6914, 0.55", "-108.062, -29.5674, -67.7727, 0.55", "-109.309, -29.2001, -66.7068, 0.28", "-109.969, -29.0169, -66.2557, 0.55", "-112.207, -28.3347, -64.872, 0.28", "-113.392, -27.8501, -64.1229, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.844223, -42.5917, -12.9514, 0.55", "2.05537, -42.7401, -13.7262, 0.55", "3.2934, -42.7315, -14.4721, 0.55", "4.87879, -42.5955, -15.3236, 0.55", "6.19539, -42.3693, -15.9621, 0.55", "15.0656, -39.9135, -19.5058, 0.55", "17.0592, -39.1336, -20.3288, 0.55", "19.9905, -37.7694, -21.6024, 0.55", "22.0616, -36.734, -22.5165, 0.55", "24.0813, -35.6053, -23.3626, 0.28", "27.2016, -33.688, -24.5139, 0.55", "31.8688, -30.6846, -25.9742, 0.28", "32.274, -30.5057, -26.2009, 0.55", "34.6126, -29.9387, -28.3624, 0.28", "35.952, -29.7089, -30.0835, 0.55", "37.2384, -29.6382, -32.0825, 0.55", "39.5108, -29.7291, -35.7042, 0.55", "43.9924, -29.9648, -42.798, 0.55", "47.0883, -30.1752, -47.5065, 0.55", "48.2005, -30.2619, -49.1022, 0.55", "55.75, -30.712, -59.4152, 0.55", "57.9081, -30.7747, -62.1209, 0.55", "59.2325, -30.8008, -63.5475, 0.55", "62.6146, -30.9462, -66.601, 0.55", "71.1867, -31.7947, -73.4396, 0.55", "73.581, -32.1317, -75.18, 0.28", "75.0236, -32.3873, -76.0659, 0.55", "77.1921, -32.8614, -77.336, 0.28", "78.1278, -33.1499, -77.7883, 0.55", "81.2001, -34.4002, -78.3968, 0.28", "83.2819, -36.0811, -77.5906, 0.55", "84.4982, -37.2849, -77.0197, 0.28", "85.5526, -38.6186, -76.3499, 0.55", "86.4392, -40.0792, -75.6641, 0.28", "86.8327, -40.8356, -75.3789, 0.55", "87.7066, -42.821, -74.6254, 0.28", "87.9731, -43.4165, -74.5088, 0.55", "89.5801, -46.8328, -74.0251, 0.28", "90.463, -48.4121, -73.9681, 0.55", "92.6457, -51.7809, -74.1392, 0.28", "93.5648, -53.0193, -74.3058, 0.55", "96.8537, -57.0775, -75.0076, 0.28", "97.6798, -58.0639, -75.2147, 0.55", "100.269, -61.1935, -76.0183, 0.28", "100.809, -61.9292, -76.1744, 0.55", "102.165, -63.8771, -76.6019, 0.28", "103.015, -65.0072, -76.9471, 0.55", "103.928, -66.1151, -77.3501, 0.55", "105.742, -68.3252, -78.1379, 0.28", "107.061, -69.6855, -78.7128, 0.55", "111.363, -73.0443, -80.5603, 0.28", "113.078, -74.123, -81.3291, 0.55", "114.269, -74.8029, -81.8365, 0.28", "115.483, -75.4177, -82.3292, 0.55", "119.252, -77.1222, -83.7724, 0.28", "122.097, -78.4457, -84.7985, 0.55", "126.888, -80.9792, -86.2353, 0.28", "128.396, -81.7666, -86.6807, 0.55", "131.252, -83.2049, -87.3218, 0.28", "132.189, -83.675, -87.4698, 0.55", "133.651, -84.4225, -87.476, 0.28", "134.913, -85.0489, -87.3838, 0.55", "138.239, -86.5835, -86.8184, 0.28", "142.039, -88.1964, -86.1112, 0.28", "143.922, -88.9295, -85.6286, 0.28", "145.859, -89.6115, -85.2482, 0.55", "148.697, -90.4837, -84.7023, 0.28", "149.951, -90.8533, -84.4349, 0.83", "153.109, -91.8358, -83.6407, 0.28", "154.504, -92.2926, -83.3672, 0.55", "160.721, -94.5243, -82.4261, 0.28", "163.906, -95.6765, -82.1813, 0.28", "166.266, -96.5151, -82.1376, 0.55", "167.682, -97.0311, -82.2477, 0.55", "171.512, -98.448, -82.7933, 0.28", "175.123, -99.9142, -83.4269, 0.55", "178.407, -101.337, -84.005, 0.28", "181.412, -102.662, -84.6595, 0.55", "183.894, -103.732, -85.188, 0.28", "185.906, -104.482, -85.5283, 0.55", "190.722, -106.053, -86.1592, 0.28", "193.141, -106.845, -86.3933, 0.55", "196.743, -108.042, -86.6306, 0.28", "199.678, -108.946, -86.7652, 0.55", "206.559, -110.792, -87.0871, 0.28", "209.409, -111.404, -87.3801, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-0.35612, -161.12, 110.951, 0.55", "0.175693, -169.077, 114.537, 0.55", "1.27067, -177.619, 116.058, 0.55", "2.02068, -185.881, 118.823, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.35612, -161.12, 110.951, 0.55", "1.47053, -170.122, 117.129, 0.55", "2.04698, -177.853, 125.032, 0.55", "2.86826, -183.792, 134.338, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.42292, -156.006, 108.513, 0.55", "-3.64207, -165.504, 113.821, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.42292, -156.006, 108.513, 0.55", "-5.62461, -164.309, 113.848, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "16.2427, -96.7472, 5.92248, 0.83", "17.0617, -100.043, 6.62639, 0.83", "17.7755, -102.822, 7.46272, 0.83", "18.485, -105.584, 8.29404, 0.83", "19.1588, -108.207, 9.08353, 0.83", "20.1971, -112.249, 10.3002, 0.83", "21.228, -116.262, 11.508, 0.83", "21.9497, -118.92, 12.7135, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "16.2427, -96.7472, 5.92248, 0.55", "18.1524, -99.0617, 6.39034, 0.55", "19.7141, -100.858, 6.42926, 0.55", "20.8455, -102.186, 6.30462, 0.55", "21.9874, -103.757, 5.88539, 0.83", "23.2279, -105.543, 5.15235, 0.55", "24.4414, -107.29, 4.43534, 0.83", "25.6998, -109.186, 3.44624, 0.55", "26.4577, -110.283, 2.76688, 0.83", "28.8389, -113.833, 0.239728, 0.55", "30.5242, -116.634, -1.99219, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "9.59523, -102.558, 53.2209, 0.55", "8.62762, -110.494, 61.8942, 0.55", "6.60149, -117.058, 71.4835, 0.55", "4.28865, -122.387, 81.7493, 0.55", "1.40641, -126.207, 92.531, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.59523, -102.558, 53.2209, 0.55", "8.96467, -110.284, 62.1281, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "21.9497, -118.92, 12.7135, 0.55", "22.082, -120.562, 13.158, 0.55", "22.2961, -122.654, 13.7892, 0.55", "22.5012, -124.629, 14.3744, 0.55", "22.6355, -126.034, 14.766, 0.55", "22.8557, -128.543, 15.4207, 0.55", "23.6171, -135.587, 17.1059, 0.55", "23.9538, -137.973, 17.5882, 0.55", "24.215, -139.655, 17.8459, 0.55", "24.5608, -141.572, 17.9909, 0.55", "24.8304, -143.055, 17.9673, 0.55", "25.5919, -146.511, 17.7913, 0.55", "26.0798, -149.142, 17.6355, 0.55", "26.4358, -150.867, 17.5932, 0.55", "27.2966, -155.342, 17.7083, 0.55", "27.8293, -158.354, 17.9144, 0.55", "28.4904, -162.238, 18.4008, 0.55", "29.2289, -166.645, 19.3013, 0.55", "29.8168, -169.578, 20.1098, 0.55", "30.1965, -171.309, 20.6421, 0.55", "30.5181, -172.907, 21.1223, 0.55", "30.9785, -174.926, 21.6422, 0.55", "32.0968, -179.796, 22.5543, 0.55", "32.6071, -181.674, 22.8501, 0.55", "33.1283, -183.77, 23.1552, 0.55", "33.8884, -186.919, 23.5919, 0.55", "34.3557, -189.35, 23.9285, 0.55", "34.6727, -191.669, 24.1922, 0.55", "34.8776, -193.889, 24.4248, 0.55", "35.0347, -196.058, 24.6756, 0.55", "35.1588, -197.601, 24.8407, 0.55", "35.3948, -200.124, 25.0278, 0.55", "35.6827, -203.153, 25.0157, 0.55", "35.8826, -204.62, 24.9077, 0.55", "36.0918, -205.906, 24.7185, 0.55", "36.6267, -208.32, 24.24, 0.55", "36.959, -209.852, 23.8908, 0.55", "37.3752, -211.739, 23.5362, 0.55", "37.6011, -213.07, 23.3577, 0.55", "38.0986, -216.539, 23.0163, 0.55", "38.3696, -219.143, 22.9335, 0.55", "38.655, -223.185, 23.1199, 0.55", "38.8444, -225.792, 23.495, 0.55", "39.0043, -228.531, 23.9727, 0.28", "39.0324, -229.635, 24.2041, 0.28", "39.0383, -232.319, 25.0033, 0.28", "38.9809, -234.802, 25.931, 0.28", "39.1323, -238.064, 27.5505, 0.28", "40.8036, -245.299, 29.5304, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "21.9497, -118.92, 12.7135, 0.55", "23.0076, -119.345, 13.7857, 0.55", "25.0767, -120.473, 16.1569, 0.55", "26.812, -121.603, 18.2872, 0.28", "28.6318, -122.899, 20.6362, 0.55", "29.6019, -123.738, 22.2278, 0.28", "31.1296, -125.264, 25.1934, 0.55", "31.5709, -126.095, 26.6955, 0.28", "31.68, -126.4, 27.3002, 0.28", "31.856, -126.832, 28.3536, 0.55", "32.6936, -128.233, 32.2853, 0.28", "33.085, -128.775, 33.9206, 0.55", "34.5931, -130.322, 38.5296, 0.28", "35.519, -131.071, 40.9185, 0.28", "36.7885, -132.028, 43.7778, 0.55", "38.9275, -133.504, 47.7714, 0.28", "39.2567, -133.697, 48.2681, 0.55", "40.9977, -134.626, 50.5761, 0.28", "41.1733, -134.712, 50.7651, 0.55", "42.6996, -135.76, 52.4823, 0.28", "43.3915, -136.341, 53.3473, 0.55", "48.9992, -140.61, 60.5221, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "1.40641, -126.207, 92.531, 0.55", "2.3635, -129.041, 101.232, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.40641, -126.207, 92.531, 0.55", "-1.34887, -131.861, 99.6298, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "axon_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "axon_1", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_BP_a6fb2fe3a5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.23006, 8.43033, 2.87253, 0.83 ) }
    dend_43 { pt3dadd( -6.27554, 10.7908, 3.33184, 1.11 ) }
    dend_43 { pt3dadd( -8.07118, 12.1817, 3.57076, 0.83 ) }
    dend_43 { pt3dadd( -9.81571, 13.5212, 3.78483, 0.83 ) }
    dend_43 { pt3dadd( -10.8486, 14.2851, 3.90213, 1.11 ) }
    dend_43 { pt3dadd( -14.0832, 16.6719, 4.27809, 1.11 ) }
    dend_43 { pt3dadd( -19.8685, 20.7583, 4.94268, 0.83 ) }
    dend_43 { pt3dadd( -21.9527, 22.1744, 5.16214, 0.83 ) }
    dend_43 { pt3dadd( -23.6033, 23.2624, 5.29846, 0.83 ) }
    dend_43 { pt3dadd( -25.2127, 24.3407, 5.41646, 0.83 ) }
    dend_43 { pt3dadd( -26.5229, 25.2295, 5.48012, 0.55 ) }
    dend_43 { pt3dadd( -27.5077, 25.8312, 5.54474, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.95009, 6.3904, -6.32663, 0.55 ) }
    dend_28 { pt3dadd( 8.12628, 7.07747, -7.03593, 0.55 ) }
    dend_28 { pt3dadd( 9.96931, 7.25092, -7.97449, 0.83 ) }
    dend_28 { pt3dadd( 12.8862, 7.43549, -9.71792, 0.55 ) }
    dend_28 { pt3dadd( 14.2943, 7.52459, -10.5595, 1.38 ) }
    dend_28 { pt3dadd( 17.7564, 7.74367, -12.6288, 0.55 ) }
    dend_28 { pt3dadd( 19.2309, 7.66948, -13.6161, 0.83 ) }
    dend_28 { pt3dadd( 26.8585, 6.30897, -19.1636, 0.55 ) }
    dend_28 { pt3dadd( 27.5965, 6.12602, -19.7739, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.687452, -10.7809, 3.33787, 1.11 ) }
    dend_1 { pt3dadd( -0.742113, -15.6036, 5.0668, 1.11 ) }
    dend_1 { pt3dadd( -0.764373, -17.5677, 5.77093, 0.83 ) }
    dend_1 { pt3dadd( -0.793948, -20.1772, 6.70641, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.82965, 9.57371, -1.35457, 1.11 ) }
    dend_0 { pt3dadd( 0.867791, 11.3139, -1.34006, 1.11 ) }
    dend_0 { pt3dadd( 0.911748, 14.1532, -1.21412, 1.38 ) }
    dend_0 { pt3dadd( 0.916623, 14.3114, -1.204, 1.38 ) }
    dend_0 { pt3dadd( 1.09201, 16.2708, -1.04687, 0.83 ) }
    dend_0 { pt3dadd( 1.34938, 18.3445, -0.762067, 0.83 ) }
    dend_0 { pt3dadd( 1.80886, 20.6899, -0.13882, 0.83 ) }
    dend_0 { pt3dadd( 2.08078, 21.5817, 0.217373, 0.83 ) }
    dend_0 { pt3dadd( 2.35657, 22.2291, 0.548573, 1.11 ) }
    dend_0 { pt3dadd( 3.18059, 23.8092, 1.41487, 0.55 ) }
    dend_0 { pt3dadd( 4.14071, 25.4606, 2.44795, 0.83 ) }
    dend_0 { pt3dadd( 5.425, 27.165, 3.64005, 0.55 ) }
    dend_0 { pt3dadd( 6.08957, 27.8755, 4.18849, 0.83 ) }
    dend_0 { pt3dadd( 7.01149, 28.8385, 5.03357, 0.55 ) }
    dend_0 { pt3dadd( 8.14432, 30.0629, 6.16716, 0.55 ) }
    dend_0 { pt3dadd( 9.71058, 31.903, 7.88377, 0.55 ) }
    dend_0 { pt3dadd( 11.4347, 34.0048, 9.77855, 0.55 ) }
    dend_0 { pt3dadd( 12.5014, 35.3684, 11.174, 0.55 ) }
    dend_0 { pt3dadd( 13.7839, 37.092, 13.1238, 0.55 ) }
    dend_0 { pt3dadd( 14.0472, 37.4379, 13.5636, 0.83 ) }
    dend_0 { pt3dadd( 14.7351, 38.3521, 14.7996, 0.55 ) }
    dend_0 { pt3dadd( 15.3219, 39.0657, 15.7742, 0.83 ) }
    dend_0 { pt3dadd( 16.6602, 41.0096, 18.0799, 0.55 ) }
    dend_0 { pt3dadd( 17.1829, 41.7196, 18.7655, 0.83 ) }
    dend_0 { pt3dadd( 17.6914, 42.245, 19.2447, 0.55 ) }
    dend_0 { pt3dadd( 18.2069, 42.6987, 19.6239, 0.83 ) }
    dend_0 { pt3dadd( 19.3666, 43.5459, 20.3322, 0.83 ) }
    dend_0 { pt3dadd( 20.9142, 44.6982, 21.1208, 0.83 ) }
    dend_0 { pt3dadd( 21.8733, 45.4583, 21.4942, 0.55 ) }
    dend_0 { pt3dadd( 22.6027, 46.1141, 21.7831, 0.55 ) }
    dend_0 { pt3dadd( 24.5181, 47.809, 22.5097, 0.83 ) }
    dend_0 { pt3dadd( 25.7605, 48.896, 22.9261, 0.55 ) }
    dend_0 { pt3dadd( 27.6556, 50.4896, 23.4773, 0.55 ) }
    dend_0 { pt3dadd( 29.4015, 51.8284, 23.9097, 0.55 ) }
    dend_0 { pt3dadd( 30.9685, 52.9642, 24.2528, 0.55 ) }
    dend_0 { pt3dadd( 32.9595, 54.2974, 24.5931, 0.55 ) }
    dend_0 { pt3dadd( 34.1835, 54.9552, 24.7608, 0.55 ) }
    dend_0 { pt3dadd( 35.0296, 55.3275, 24.7731, 0.55 ) }
    dend_0 { pt3dadd( 36.1666, 55.6148, 24.6944, 0.55 ) }
    dend_0 { pt3dadd( 37.8817, 55.7682, 24.4396, 0.55 ) }
    dend_0 { pt3dadd( 38.9576, 55.73, 24.2406, 0.55 ) }
    dend_0 { pt3dadd( 40.5208, 55.6327, 24.0576, 0.55 ) }
    dend_0 { pt3dadd( 43.4728, 55.541, 23.9701, 0.55 ) }
    dend_0 { pt3dadd( 45.7721, 55.5757, 24.0646, 0.55 ) }
    dend_0 { pt3dadd( 48.1934, 55.7287, 24.3095, 0.55 ) }
    dend_0 { pt3dadd( 49.7337, 55.8806, 24.5896, 0.55 ) }
    dend_0 { pt3dadd( 53.7033, 56.6432, 25.5827, 0.55 ) }
    dend_0 { pt3dadd( 56.0318, 57.2798, 26.3504, 0.55 ) }
    dend_0 { pt3dadd( 57.76, 57.8757, 27.0942, 0.55 ) }
    dend_0 { pt3dadd( 58.8024, 58.4199, 27.5881, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 60.0078, 59.2222, 28.1539, 0.55 ) }
    dend_0 { pt3dadd( 62.0609, 60.7971, 28.9193, 0.55 ) }
    dend_0 { pt3dadd( 62.5377, 61.1757, 29.0266, 0.55 ) }
    dend_0 { pt3dadd( 63.9156, 62.1898, 29.2415, 0.55 ) }
    dend_0 { pt3dadd( 65.1791, 63.2661, 29.4337, 0.83 ) }
    dend_0 { pt3dadd( 65.8695, 63.863, 29.5273, 0.55 ) }
    dend_0 { pt3dadd( 66.9045, 64.8843, 29.625, 0.83 ) }
    dend_0 { pt3dadd( 72.2192, 70.3395, 31.6125, 0.83 ) }
    dend_0 { pt3dadd( 76.8447, 76.5658, 32.9515, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -27.5077, 25.8312, 5.54474, 0.55 ) }
    dend_55 { pt3dadd( -29.5247, 26.6185, 4.724, 0.55 ) }
    dend_55 { pt3dadd( -31.7179, 27.4745, 3.83154, 0.55 ) }
    dend_55 { pt3dadd( -34.3647, 28.5076, 2.75453, 0.55 ) }
    dend_55 { pt3dadd( -36.5502, 29.3606, 1.86521, 0.83 ) }
    dend_55 { pt3dadd( -38.3817, 30.0754, 1.11996, 0.55 ) }
    dend_55 { pt3dadd( -41.7812, 31.4023, -0.263325, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -27.5077, 25.8312, 5.54474, 0.55 ) }
    dend_44 { pt3dadd( -29.8521, 26.274, 5.24819, 0.55 ) }
    dend_44 { pt3dadd( -32.3493, 26.6625, 5.18067, 0.55 ) }
    dend_44 { pt3dadd( -35.1815, 27.0973, 5.17331, 0.55 ) }
    dend_44 { pt3dadd( -39.287, 27.6759, 5.53955, 0.55 ) }
    dend_44 { pt3dadd( -42.7249, 28.0558, 6.08938, 0.55 ) }
    dend_44 { pt3dadd( -46.332, 28.3959, 6.81966, 0.55 ) }
    dend_44 { pt3dadd( -49.8224, 28.4817, 7.8991, 0.55 ) }
    dend_44 { pt3dadd( -52.8299, 28.2574, 9.11582, 0.55 ) }
    dend_44 { pt3dadd( -56.5813, 27.7082, 11.0312, 0.55 ) }
    dend_44 { pt3dadd( -58.2145, 27.3456, 12.0905, 0.55 ) }
    dend_44 { pt3dadd( -59.9793, 26.9338, 13.3108, 0.55 ) }
    dend_44 { pt3dadd( -63.0913, 25.9741, 15.3178, 0.55 ) }
    dend_44 { pt3dadd( -64.7451, 25.4731, 16.1243, 0.55 ) }
    dend_44 { pt3dadd( -66.4773, 24.8952, 16.9581, 0.55 ) }
    dend_44 { pt3dadd( -68.5354, 24.2377, 17.7402, 0.55 ) }
    dend_44 { pt3dadd( -70.7714, 23.5709, 18.5295, 0.55 ) }
    dend_44 { pt3dadd( -73.9621, 22.6127, 19.5858, 0.55 ) }
    dend_44 { pt3dadd( -78.22, 21.6252, 20.6165, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 27.5965, 6.12602, -19.7739, 0.55 ) }
    dend_34 { pt3dadd( 32.0782, 7.3526, -20.7326, 0.55 ) }
    dend_34 { pt3dadd( 34.6646, 7.90812, -21.652, 0.55 ) }
    dend_34 { pt3dadd( 37.219, 8.34118, -22.5972, 0.55 ) }
    dend_34 { pt3dadd( 38.9652, 8.56697, -23.2429, 0.55 ) }
    dend_34 { pt3dadd( 41.518, 8.83736, -24.1672, 0.55 ) }
    dend_34 { pt3dadd( 46.8156, 9.296, -26.2514, 0.55 ) }
    dend_34 { pt3dadd( 52.8273, 9.77962, -29.0184, 0.55 ) }
    dend_34 { pt3dadd( 55.7455, 9.83195, -30.564, 0.55 ) }
    dend_34 { pt3dadd( 57.3093, 9.82175, -31.495, 0.55 ) }
    dend_34 { pt3dadd( 59.024, 9.81919, -32.5856, 0.55 ) }
    dend_34 { pt3dadd( 62.085, 9.72882, -34.5201, 0.55 ) }
    dend_34 { pt3dadd( 63.1976, 9.63062, -35.2602, 0.55 ) }
    dend_34 { pt3dadd( 67.9074, 9.33427, -38.7572, 0.55 ) }
    dend_34 { pt3dadd( 71.2413, 9.17902, -41.4797, 0.55 ) }
    dend_34 { pt3dadd( 73.1604, 9.1273, -43.0999, 0.55 ) }
    dend_34 { pt3dadd( 75.0747, 9.05876, -44.7145, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 27.5965, 6.12602, -19.7739, 0.83 ) }
    dend_29 { pt3dadd( 29.5081, 7.83158, -20.0819, 0.83 ) }
    dend_29 { pt3dadd( 30.606, 8.79106, -20.3135, 0.55 ) }
    dend_29 { pt3dadd( 32.2283, 10.203, -20.8177, 0.83 ) }
    dend_29 { pt3dadd( 33.3165, 11.1734, -21.2016, 0.55 ) }
    dend_29 { pt3dadd( 34.8068, 12.5617, -21.7186, 0.83 ) }
    dend_29 { pt3dadd( 36.5849, 14.2887, -22.2767, 0.55 ) }
    dend_29 { pt3dadd( 37.4898, 15.0952, -22.4958, 0.55 ) }
    dend_29 { pt3dadd( 39.6167, 16.6835, -22.7514, 0.83 ) }
    dend_29 { pt3dadd( 41.5706, 17.9466, -22.6412, 0.55 ) }
    dend_29 { pt3dadd( 42.655, 18.6697, -22.4634, 0.83 ) }
    dend_29 { pt3dadd( 44.258, 19.8406, -22.0212, 0.55 ) }
    dend_29 { pt3dadd( 46.5226, 21.6508, -21.0733, 0.55 ) }
    dend_29 { pt3dadd( 49.685, 24.0326, -19.5268, 0.55 ) }
    dend_29 { pt3dadd( 52.7021, 26.245, -17.7868, 0.55 ) }
    dend_29 { pt3dadd( 55.0934, 27.9822, -16.3527, 0.55 ) }
    dend_29 { pt3dadd( 59.0296, 30.8723, -13.9708, 0.55 ) }
    dend_29 { pt3dadd( 61.8857, 33.0957, -12.1823, 0.55 ) }
    dend_29 { pt3dadd( 63.5727, 34.6162, -11.0748, 0.55 ) }
    dend_29 { pt3dadd( 66.6068, 37.7847, -9.10058, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.793948, -20.1772, 6.70641, 0.83 ) }
    dend_11 { pt3dadd( -0.797116, -23.5247, 6.57439, 0.83 ) }
    dend_11 { pt3dadd( -0.800201, -26.7863, 6.44577, 0.83 ) }
    dend_11 { pt3dadd( -0.803647, -30.4277, 6.30217, 0.83 ) }
    dend_11 { pt3dadd( -0.805445, -32.3293, 6.22718, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.793948, -20.1772, 6.70641, 0.55 ) }
    dend_2 { pt3dadd( -0.118196, -21.8097, 7.68841, 0.55 ) }
    dend_2 { pt3dadd( 0.532763, -23.7994, 9.00964, 0.55 ) }
    dend_2 { pt3dadd( 1.01971, -26.3878, 10.9123, 0.55 ) }
    dend_2 { pt3dadd( 1.14521, -27.3905, 11.691, 0.83 ) }
    dend_2 { pt3dadd( 1.28831, -29.9409, 14.0061, 0.55 ) }
    dend_2 { pt3dadd( 1.2608, -31.2525, 15.2458, 0.55 ) }
    dend_2 { pt3dadd( 1.17357, -33.8016, 17.773, 0.83 ) }
    dend_2 { pt3dadd( 1.02278, -35.6903, 19.788, 0.55 ) }
    dend_2 { pt3dadd( 0.757219, -37.2405, 21.4514, 0.55 ) }
    dend_2 { pt3dadd( 0.178955, -40.1722, 24.5609, 0.55 ) }
    dend_2 { pt3dadd( -0.284547, -42.5087, 27.0116, 0.55 ) }
    dend_2 { pt3dadd( -0.613546, -44.3842, 28.9954, 0.55 ) }
    dend_2 { pt3dadd( -0.865251, -46.3805, 31.0191, 0.28 ) }
    dend_2 { pt3dadd( -0.906608, -47.2154, 31.8177, 0.55 ) }
    dend_2 { pt3dadd( -0.959208, -48.7584, 33.1989, 0.28 ) }
    dend_2 { pt3dadd( -0.785515, -51.1801, 34.9263, 0.55 ) }
    dend_2 { pt3dadd( -2.03185, -59.1396, 41.4505, 0.55 ) }
    dend_2 { pt3dadd( -3.33388, -66.4889, 48.6452, 0.55 ) }
    dend_2 { pt3dadd( -3.87671, -72.5642, 57.0277, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -41.7812, 31.4023, -0.263325, 0.55 ) }
    dend_61 { pt3dadd( -44.3133, 32.346, 2.17473, 0.55 ) }
    dend_61 { pt3dadd( -45.3182, 32.7328, 3.37272, 0.83 ) }
    dend_61 { pt3dadd( -46.4185, 33.1852, 4.98658, 0.55 ) }
    dend_61 { pt3dadd( -47.2253, 33.5694, 6.31903, 0.83 ) }
    dend_61 { pt3dadd( -49.3598, 34.6723, 9.74776, 0.55 ) }
    dend_61 { pt3dadd( -50.1671, 35.112, 11.0477, 0.28 ) }
    dend_61 { pt3dadd( -51.4612, 35.9255, 13.3577, 0.55 ) }
    dend_61 { pt3dadd( -53.2031, 37.0275, 16.4407, 0.55 ) }
    dend_61 { pt3dadd( -54.556, 37.8318, 18.6982, 0.55 ) }
    dend_61 { pt3dadd( -56.391, 38.8751, 21.6368, 0.28 ) }
    dend_61 { pt3dadd( -56.8958, 39.121, 22.3227, 0.55 ) }
    dend_61 { pt3dadd( -57.9602, 39.6269, 23.6871, 0.28 ) }
    dend_61 { pt3dadd( -58.7156, 39.9618, 24.522, 0.55 ) }
    dend_61 { pt3dadd( -60.3129, 40.5701, 26.0744, 0.28 ) }
    dend_61 { pt3dadd( -61.2639, 40.8435, 26.9529, 0.55 ) }
    dend_61 { pt3dadd( -62.9209, 41.1874, 28.5701, 0.28 ) }
    dend_61 { pt3dadd( -64.0488, 41.3922, 29.6153, 0.55 ) }
    dend_61 { pt3dadd( -69.6212, 43.3424, 39.616, 0.55 ) }
    dend_61 { pt3dadd( -74.2084, 44.4475, 50.2277, 0.55 ) }
    dend_61 { pt3dadd( -78.4187, 44.5063, 61.0508, 0.55 ) }
    dend_61 { pt3dadd( -82.6381, 43.1198, 71.7814, 0.55 ) }
    dend_61 { pt3dadd( -85.3033, 42.5905, 83.0724, 0.55 ) }
    dend_61 { pt3dadd( -88.9585, 42.3131, 94.092, 0.55 ) }
    dend_61 { pt3dadd( -92.787, 43.9546, 104.932, 0.55 ) }
    dend_61 { pt3dadd( -96.55, 44.6734, 115.895, 0.55 ) }
    dend_61 { pt3dadd( -100.076, 46.229, 126.851, 0.55 ) }
    dend_61 { pt3dadd( -102.978, 47.7354, 137.994, 0.55 ) }
    dend_61 { pt3dadd( -104.587, 48.1095, 149.489, 0.55 ) }
    dend_61 { pt3dadd( -106.326, 49.5695, 160.879, 0.55 ) }
    dend_61 { pt3dadd( -108.22, 49.8164, 172.334, 0.55 ) }
    dend_61 { pt3dadd( -108.655, 49.7424, 183.939, 0.55 ) }
    dend_61 { pt3dadd( -107.093, 50.6506, 195.411, 0.55 ) }
    dend_61 { pt3dadd( -105.505, 49.3041, 206.836, 0.55 ) }
    dend_61 { pt3dadd( -102.301, 47.7602, 217.891, 0.55 ) }
    dend_61 { pt3dadd( -99.6674, 46.7419, 229.156, 0.55 ) }
    dend_61 { pt3dadd( -98.2356, 46.5777, 240.68, 0.55 ) }
    dend_61 { pt3dadd( -99.3173, 48.0612, 252.147, 0.55 ) }
    dend_61 { pt3dadd( -99.3191, 48.3402, 263.757, 0.55 ) }
    dend_61 { pt3dadd( -97.1658, 50.7052, 274.921, 0.55 ) }
    dend_61 { pt3dadd( -96.9336, 53.7988, 286.113, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -41.7812, 31.4023, -0.263325, 0.55 ) }
    dend_56 { pt3dadd( -43.3536, 31.7261, -1.79, 0.55 ) }
    dend_56 { pt3dadd( -44.6349, 32.0998, -3.54574, 0.55 ) }
    dend_56 { pt3dadd( -45.8669, 32.6215, -5.43599, 0.55 ) }
    dend_56 { pt3dadd( -46.6383, 32.9481, -6.61964, 0.55 ) }
    dend_56 { pt3dadd( -48.0456, 33.544, -8.77875, 0.83 ) }
    dend_56 { pt3dadd( -49.0751, 33.9799, -10.3584, 0.55 ) }
    dend_56 { pt3dadd( -50.3176, 34.558, -12.7007, 0.83 ) }
    dend_56 { pt3dadd( -50.838, 35.0005, -14.0534, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -78.22, 21.6252, 20.6165, 0.28 ) }
    dend_48 { pt3dadd( -79.082, 19.5434, 21.2265, 0.28 ) }
    dend_48 { pt3dadd( -79.513, 18.6133, 21.4299, 0.28 ) }
    dend_48 { pt3dadd( -80.0677, 17.2848, 21.6687, 0.55 ) }
    dend_48 { pt3dadd( -80.5173, 16.124, 21.8819, 0.28 ) }
    dend_48 { pt3dadd( -81.1731, 14.3666, 22.2217, 0.55 ) }
    dend_48 { pt3dadd( -82.9622, 9.24563, 23.2737, 0.28 ) }
    dend_48 { pt3dadd( -83.5473, 7.39878, 23.5132, 0.55 ) }
    dend_48 { pt3dadd( -84.4388, 4.51974, 23.8001, 0.28 ) }
    dend_48 { pt3dadd( -84.9524, 2.77094, 23.9047, 0.55 ) }
    dend_48 { pt3dadd( -85.31, 1.55491, 23.9536, 0.28 ) }
    dend_48 { pt3dadd( -85.7159, 0.163738, 24.0183, 0.55 ) }
    dend_48 { pt3dadd( -86.8968, -4.42258, 24.303, 0.28 ) }
    dend_48 { pt3dadd( -87.2774, -5.82985, 24.3521, 0.55 ) }
    dend_48 { pt3dadd( -87.9881, -8.07302, 24.2647, 0.28 ) }
    dend_48 { pt3dadd( -88.6116, -9.56753, 24.1343, 0.28 ) }
    dend_48 { pt3dadd( -89.1942, -10.5929, 24.0412, 0.55 ) }
    dend_48 { pt3dadd( -91.2547, -13.4828, 23.893, 0.28 ) }
    dend_48 { pt3dadd( -92.22, -14.6565, 23.8678, 0.55 ) }
    dend_48 { pt3dadd( -94.6066, -17.3997, 23.7139, 0.28 ) }
    dend_48 { pt3dadd( -97.0152, -19.8728, 23.5733, 0.28 ) }
    dend_48 { pt3dadd( -99.6602, -22.3009, 23.3986, 0.28 ) }
    dend_48 { pt3dadd( -100.88, -23.2385, 23.3549, 0.55 ) }
    dend_48 { pt3dadd( -106.295, -32.0409, 23.8281, 0.55 ) }
    dend_48 { pt3dadd( -112.182, -40.223, 26.1565, 0.55 ) }
    dend_48 { pt3dadd( -118.141, -48.644, 26.9357, 0.55 ) }
    dend_48 { pt3dadd( -124.443, -56.8451, 26.7072, 0.55 ) }
    dend_48 { pt3dadd( -131.018, -64.7275, 25.4183, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -78.22, 21.6252, 20.6165, 0.55 ) }
    dend_45 { pt3dadd( -78.9912, 21.5523, 20.7508, 0.55 ) }
    dend_45 { pt3dadd( -81.1588, 21.3826, 21.4116, 0.55 ) }
    dend_45 { pt3dadd( -81.9715, 21.303, 21.7062, 0.55 ) }
    dend_45 { pt3dadd( -83.8804, 21.061, 22.4353, 0.55 ) }
    dend_45 { pt3dadd( -86.8208, 20.7019, 23.4098, 0.55 ) }
    dend_45 { pt3dadd( -88.3509, 20.5595, 23.8832, 0.28 ) }
    dend_45 { pt3dadd( -90.7319, 20.28, 24.5792, 0.55 ) }
    dend_45 { pt3dadd( -92.5009, 20.0283, 25.0364, 0.55 ) }
    dend_45 { pt3dadd( -93.2477, 19.9173, 25.2316, 0.28 ) }
    dend_45 { pt3dadd( -97.7275, 19.248, 26.3972, 0.55 ) }
    dend_45 { pt3dadd( -99.8221, 18.8229, 26.8246, 0.28 ) }
    dend_45 { pt3dadd( -102.651, 18.2187, 27.2359, 0.28 ) }
    dend_45 { pt3dadd( -105.095, 17.7168, 27.4426, 0.55 ) }
    dend_45 { pt3dadd( -114.616, 17.4041, 30.1606, 0.55 ) }
    dend_45 { pt3dadd( -123.771, 16.9747, 33.9174, 0.55 ) }
    dend_45 { pt3dadd( -132.336, 15.6735, 38.7219, 0.55 ) }
    dend_45 { pt3dadd( -140.667, 16.1166, 44.0624, 0.55 ) }
    dend_45 { pt3dadd( -147.706, 16.4574, 51.0236, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -153.293, 17.5251, 59.1331, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 75.0747, 9.05876, -44.7145, 0.55 ) }
    dend_42 { pt3dadd( 80.6957, 10.889, -49.2516, 0.55 ) }
    dend_42 { pt3dadd( 82.4678, 11.3967, -50.8033, 0.55 ) }
    dend_42 { pt3dadd( 84.6832, 11.9565, -52.7236, 0.55 ) }
    dend_42 { pt3dadd( 88.6982, 12.9526, -56.449, 0.55 ) }
    dend_42 { pt3dadd( 92.8805, 13.8241, -60.4537, 0.55 ) }
    dend_42 { pt3dadd( 94.9194, 14.0799, -62.3706, 0.83 ) }
    dend_42 { pt3dadd( 96.5912, 14.1807, -64.0854, 0.55 ) }
    dend_42 { pt3dadd( 97.8356, 14.1584, -65.5044, 0.83 ) }
    dend_42 { pt3dadd( 100.815, 13.6843, -69.1677, 0.55 ) }
    dend_42 { pt3dadd( 103.257, 13.0557, -72.2179, 0.55 ) }
    dend_42 { pt3dadd( 106.069, 12.3028, -75.5827, 0.55 ) }
    dend_42 { pt3dadd( 109.201, 11.5635, -79.3894, 0.55 ) }
    dend_42 { pt3dadd( 111.299, 11.019, -82.0006, 0.55 ) }
    dend_42 { pt3dadd( 113.665, 10.4024, -85.026, 0.55 ) }
    dend_42 { pt3dadd( 115.71, 9.95567, -87.7848, 0.55 ) }
    dend_42 { pt3dadd( 116.999, 9.81051, -89.6913, 0.55 ) }
    dend_42 { pt3dadd( 118.607, 9.63158, -93.5082, 0.55 ) }
    dend_42 { pt3dadd( 119.475, 9.45209, -95.8979, 0.55 ) }
    dend_42 { pt3dadd( 120.194, 9.0957, -99.0744, 0.55 ) }
    dend_42 { pt3dadd( 121.15, 8.34433, -104.45, 0.55 ) }
    dend_42 { pt3dadd( 121.34, 8.131, -105.664, 0.28 ) }
    dend_42 { pt3dadd( 123.822, 5.36817, -120.439, 0.28 ) }
    dend_42 { pt3dadd( 124.678, 4.58117, -124.777, 0.83 ) }
    dend_42 { pt3dadd( 128.083, 1.50426, -140.181, 0.83 ) }
    dend_42 { pt3dadd( 129.84, -0.213689, -147.355, 0.83 ) }
    dend_42 { pt3dadd( 130.695, -1.03153, -150.269, 0.55 ) }
    dend_42 { pt3dadd( 131.691, -1.84817, -153.111, 0.55 ) }
    dend_42 { pt3dadd( 134.517, -3.52696, -158.399, 0.55 ) }
    dend_42 { pt3dadd( 137.571, -5.07448, -163.054, 0.28 ) }
    dend_42 { pt3dadd( 138.519, -5.41702, -163.348, 0.55 ) }
    dend_42 { pt3dadd( 140.623, -6.06954, -163.224, 0.28 ) }
    dend_42 { pt3dadd( 141.932, -6.39134, -162.949, 0.55 ) }
    dend_42 { pt3dadd( 143.297, -6.75265, -162.547, 0.28 ) }
    dend_42 { pt3dadd( 144.94, -7.10838, -161.983, 0.55 ) }
    dend_42 { pt3dadd( 147.402, -7.49289, -161.395, 0.28 ) }
    dend_42 { pt3dadd( 149.373, -7.85862, -160.991, 0.55 ) }
    dend_42 { pt3dadd( 151.56, -8.10615, -160.711, 0.28 ) }
    dend_42 { pt3dadd( 154.53, -8.41575, -160.594, 0.55 ) }
    dend_42 { pt3dadd( 157.861, -8.67253, -160.66, 0.55 ) }
    dend_42 { pt3dadd( 160.79, -8.85091, -160.91, 0.28 ) }
    dend_42 { pt3dadd( 164.841, -9.04615, -161.48, 0.55 ) }
    dend_42 { pt3dadd( 171.844, -9.14117, -163.203, 0.55 ) }
    dend_42 { pt3dadd( 174.94, -8.99774, -164.331, 0.55 ) }
    dend_42 { pt3dadd( 176.271, -8.87122, -164.955, 0.83 ) }
    dend_42 { pt3dadd( 178.805, -8.59716, -166.378, 0.55 ) }
    dend_42 { pt3dadd( 180.564, -8.32798, -167.472, 0.83 ) }
    dend_42 { pt3dadd( 185.304, -7.47451, -170.462, 0.55 ) }
    dend_42 { pt3dadd( 188.188, -7.14958, -172.375, 0.28 ) }
    dend_42 { pt3dadd( 189.401, -7.09792, -173.048, 0.55 ) }
    dend_42 { pt3dadd( 192.715, -7.2912, -174.537, 0.28 ) }
    dend_42 { pt3dadd( 193.873, -7.47205, -174.988, 0.55 ) }
    dend_42 { pt3dadd( 196.256, -8.02024, -175.553, 0.28 ) }
    dend_42 { pt3dadd( 198.678, -8.84451, -175.717, 0.55 ) }
    dend_42 { pt3dadd( 203.569, -10.8316, -175.19, 0.28 ) }
    dend_42 { pt3dadd( 205.823, -11.8644, -174.709, 0.55 ) }
    dend_42 { pt3dadd( 209.17, -13.6078, -173.824, 0.28 ) }
    dend_42 { pt3dadd( 213.4, -15.803, -172.549, 0.55 ) }
    dend_42 { pt3dadd( 216.462, -17.351, -171.576, 0.55 ) }
    dend_42 { pt3dadd( 221.774, -19.8686, -169.789, 0.28 ) }
    dend_42 { pt3dadd( 223.956, -20.7879, -169.233, 0.55 ) }
    dend_42 { pt3dadd( 227.722, -22.1282, -168.679, 0.28 ) }
    dend_42 { pt3dadd( 231.483, -23.1557, -168.375, 0.55 ) }
    dend_42 { pt3dadd( 233.552, -23.4647, -168.484, 0.28 ) }
    dend_42 { pt3dadd( 235.431, -23.4808, -168.715, 0.55 ) }
    dend_42 { pt3dadd( 240.742, -23.177, -169.851, 0.28 ) }
    dend_42 { pt3dadd( 244.545, -22.6929, -170.708, 0.28 ) }
    dend_42 { pt3dadd( 247.861, -22.0277, -171.486, 0.55 ) }
    dend_42 { pt3dadd( 251.524, -21.1796, -172.525, 0.28 ) }
    dend_42 { pt3dadd( 252.449, -20.9101, -172.752, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 75.0747, 9.05876, -44.7145, 0.55 ) }
    dend_35 { pt3dadd( 75.3065, 7.94748, -45.8381, 0.55 ) }
    dend_35 { pt3dadd( 75.4057, 6.995, -46.7106, 0.28 ) }
    dend_35 { pt3dadd( 75.4963, 6.10281, -47.426, 0.55 ) }
    dend_35 { pt3dadd( 75.7975, 4.20979, -48.9655, 0.28 ) }
    dend_35 { pt3dadd( 75.8126, 4.0952, -49.0808, 0.55 ) }
    dend_35 { pt3dadd( 75.9107, 3.50703, -49.7418, 0.28 ) }
    dend_35 { pt3dadd( 75.9377, 3.04485, -50.3771, 0.55 ) }
    dend_35 { pt3dadd( 75.9308, 2.58038, -51.107, 0.28 ) }
    dend_35 { pt3dadd( 75.8967, 1.95714, -52.1394, 0.55 ) }
    dend_35 { pt3dadd( 75.8101, 0.38317, -54.6932, 0.55 ) }
    dend_35 { pt3dadd( 75.7091, -1.04235, -57.0532, 0.55 ) }
    dend_35 { pt3dadd( 75.6134, -2.18033, -58.9411, 0.55 ) }
    dend_35 { pt3dadd( 75.4922, -3.30342, -60.77, 0.55 ) }
    dend_35 { pt3dadd( 75.4598, -3.5973, -61.2264, 0.28 ) }
    dend_35 { pt3dadd( 75.4372, -3.9198, -61.6808, 0.55 ) }
    dend_35 { pt3dadd( 75.4596, -4.38193, -62.2602, 0.28 ) }
    dend_35 { pt3dadd( 75.6039, -5.23827, -63.2107, 0.55 ) }
    dend_35 { pt3dadd( 76.0492, -6.95937, -64.7343, 0.55 ) }
    dend_35 { pt3dadd( 76.2986, -7.90702, -65.462, 0.28 ) }
    dend_35 { pt3dadd( 76.4903, -8.85583, -66.2454, 0.55 ) }
    dend_35 { pt3dadd( 76.6496, -10.1649, -67.3938, 0.28 ) }
    dend_35 { pt3dadd( 76.7012, -11.2102, -68.3457, 0.55 ) }
    dend_35 { pt3dadd( 76.7021, -12.7675, -69.77, 0.28 ) }
    dend_35 { pt3dadd( 76.717, -14.3927, -71.1879, 0.55 ) }
    dend_35 { pt3dadd( 76.7028, -16.7448, -73.2687, 0.28 ) }
    dend_35 { pt3dadd( 76.6639, -17.9956, -74.3814, 0.55 ) }
    dend_35 { pt3dadd( 76.6, -19.2655, -75.5528, 0.28 ) }
    dend_35 { pt3dadd( 76.5295, -20.3645, -76.6625, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 76.4954, -21.7113, -78.1888, 0.55 ) }
    dend_35 { pt3dadd( 76.5676, -22.975, -79.5704, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 66.6068, 37.7847, -9.10058, 0.55 ) }
    dend_31 { pt3dadd( 69.506, 37.8763, -8.64856, 0.55 ) }
    dend_31 { pt3dadd( 71.619, 37.8624, -8.51778, 0.55 ) }
    dend_31 { pt3dadd( 76.2377, 37.7782, -8.4703, 0.55 ) }
    dend_31 { pt3dadd( 78.3093, 37.6969, -8.63206, 0.55 ) }
    dend_31 { pt3dadd( 80.5558, 37.6548, -8.92217, 0.55 ) }
    dend_31 { pt3dadd( 83.5504, 37.6492, -9.52443, 0.55 ) }
    dend_31 { pt3dadd( 86.7023, 37.5576, -10.4613, 0.55 ) }
    dend_31 { pt3dadd( 88.3473, 37.4867, -11.1433, 0.55 ) }
    dend_31 { pt3dadd( 91.6599, 37.3381, -12.9919, 0.55 ) }
    dend_31 { pt3dadd( 93.1803, 37.2822, -13.8928, 0.55 ) }
    dend_31 { pt3dadd( 96.7468, 37.0807, -16.099, 0.55 ) }
    dend_31 { pt3dadd( 99.1783, 36.845, -17.5735, 0.55 ) }
    dend_31 { pt3dadd( 100.976, 36.6607, -18.5755, 0.83 ) }
    dend_31 { pt3dadd( 103.865, 36.2583, -20.1441, 0.55 ) }
    dend_31 { pt3dadd( 106.722, 35.7257, -21.5701, 0.83 ) }
    dend_31 { pt3dadd( 109.169, 35.1631, -22.694, 0.55 ) }
    dend_31 { pt3dadd( 111.35, 34.6946, -23.5807, 0.55 ) }
    dend_31 { pt3dadd( 112.587, 34.4824, -24.0165, 0.83 ) }
    dend_31 { pt3dadd( 115.484, 33.997, -24.8822, 0.28 ) }
    dend_31 { pt3dadd( 116.923, 33.8152, -25.2216, 0.28 ) }
    dend_31 { pt3dadd( 118.322, 33.5513, -25.6221, 0.28 ) }
    dend_31 { pt3dadd( 119.829, 33.3058, -26.0614, 0.28 ) }
    dend_31 { pt3dadd( 122.23, 32.9575, -26.8136, 0.28 ) }
    dend_31 { pt3dadd( 123.197, 32.8294, -27.0875, 0.55 ) }
    dend_31 { pt3dadd( 125.52, 32.5481, -27.5169, 0.55 ) }
    dend_31 { pt3dadd( 129.723, 32.0034, -28.0816, 0.55 ) }
    dend_31 { pt3dadd( 130.894, 31.8228, -28.1878, 0.55 ) }
    dend_31 { pt3dadd( 131.948, 31.6286, -28.239, 0.83 ) }
    dend_31 { pt3dadd( 134.24, 31.2764, -28.1699, 0.55 ) }
    dend_31 { pt3dadd( 136.234, 30.9742, -28.0789, 0.55 ) }
    dend_31 { pt3dadd( 138.118, 30.6965, -27.9843, 0.55 ) }
    dend_31 { pt3dadd( 139.577, 30.4565, -27.9514, 0.55 ) }
    dend_31 { pt3dadd( 141.905, 29.919, -28.0107, 0.55 ) }
    dend_31 { pt3dadd( 144.671, 29.0519, -28.2298, 0.55 ) }
    dend_31 { pt3dadd( 149.014, 27.2398, -28.8647, 0.55 ) }
    dend_31 { pt3dadd( 151.433, 25.9113, -29.3614, 0.55 ) }
    dend_31 { pt3dadd( 153.569, 24.4237, -29.8952, 0.28 ) }
    dend_31 { pt3dadd( 154.221, 23.851, -30.0903, 0.55 ) }
    dend_31 { pt3dadd( 155.711, 22.1923, -30.5945, 0.28 ) }
    dend_31 { pt3dadd( 157.053, 20.2783, -31.0937, 0.55 ) }
    dend_31 { pt3dadd( 158.407, 17.8373, -31.4858, 0.55 ) }
    dend_31 { pt3dadd( 159.322, 16.2366, -31.6633, 0.28 ) }
    dend_31 { pt3dadd( 159.656, 15.6729, -31.6972, 0.55 ) }
    dend_31 { pt3dadd( 160.515, 14.2773, -31.7627, 0.28 ) }
    dend_31 { pt3dadd( 161.679, 12.4691, -31.8037, 0.55 ) }
    dend_31 { pt3dadd( 164.669, 8.14272, -31.7981, 0.55 ) }
    dend_31 { pt3dadd( 166.219, 5.96966, -31.7484, 0.55 ) }
    dend_31 { pt3dadd( 167.656, 3.98082, -31.6845, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 66.6068, 37.7847, -9.10058, 0.55 ) }
    dend_30 { pt3dadd( 68.6423, 39.3006, -7.2645, 0.55 ) }
    dend_30 { pt3dadd( 69.3032, 39.7693, -6.71518, 0.55 ) }
    dend_30 { pt3dadd( 71.8163, 41.3422, -4.73654, 0.55 ) }
    dend_30 { pt3dadd( 74.6006, 43.1744, -2.50521, 0.55 ) }
    dend_30 { pt3dadd( 78.1515, 45.552, 0.462846, 0.55 ) }
    dend_30 { pt3dadd( 79.1334, 46.2073, 1.2749, 0.55 ) }
    dend_30 { pt3dadd( 80.9148, 47.3019, 2.74131, 0.55 ) }
    dend_30 { pt3dadd( 82.8722, 48.5214, 4.24891, 0.55 ) }
    dend_30 { pt3dadd( 85.1538, 49.9674, 5.86302, 0.55 ) }
    dend_30 { pt3dadd( 87.2951, 51.3658, 7.37979, 0.55 ) }
    dend_30 { pt3dadd( 88.4683, 52.1692, 8.12976, 0.55 ) }
    dend_30 { pt3dadd( 89.8367, 53.1546, 8.99105, 0.55 ) }
    dend_30 { pt3dadd( 91.5241, 54.4147, 10.0022, 0.83 ) }
    dend_30 { pt3dadd( 94.3487, 56.3564, 11.3405, 0.55 ) }
    dend_30 { pt3dadd( 96.2544, 57.5281, 12.1596, 0.83 ) }
    dend_30 { pt3dadd( 98.9461, 58.9926, 13.2493, 0.55 ) }
    dend_30 { pt3dadd( 99.7852, 59.3913, 13.5893, 0.55 ) }
    dend_30 { pt3dadd( 102.428, 60.4771, 14.6391, 0.55 ) }
    dend_30 { pt3dadd( 107.254, 62.065, 16.4355, 0.55 ) }
    dend_30 { pt3dadd( 110.845, 63.0061, 17.7446, 0.55 ) }
    dend_30 { pt3dadd( 113.703, 63.6471, 18.8953, 0.55 ) }
    dend_30 { pt3dadd( 116.632, 64.1885, 20.2223, 0.55 ) }
    dend_30 { pt3dadd( 117.251, 64.2876, 20.5106, 0.28 ) }
    dend_30 { pt3dadd( 118.517, 64.4398, 21.1106, 0.83 ) }
    dend_30 { pt3dadd( 123.726, 65.0032, 23.6308, 0.55 ) }
    dend_30 { pt3dadd( 127.382, 65.3771, 25.3247, 0.55 ) }
    dend_30 { pt3dadd( 130.353, 65.7813, 26.7596, 0.55 ) }
    dend_30 { pt3dadd( 132.127, 66.0236, 27.6353, 0.83 ) }
    dend_30 { pt3dadd( 133.518, 66.2345, 28.3198, 0.28 ) }
    dend_30 { pt3dadd( 134.782, 66.4236, 28.9284, 0.55 ) }
    dend_30 { pt3dadd( 143.882, 70.6765, 34.1695, 0.55 ) }
    dend_30 { pt3dadd( 154.236, 72.8421, 38.2281, 0.55 ) }
    dend_30 { pt3dadd( 164.185, 76.4261, 42.2947, 0.55 ) }
    dend_30 { pt3dadd( 172.944, 79.0569, 48.9823, 0.55 ) }
    dend_30 { pt3dadd( 181.266, 80.2976, 56.5697, 0.55 ) }
    dend_30 { pt3dadd( 191.223, 79.2221, 61.8676, 0.55 ) }
    dend_30 { pt3dadd( 201.525, 76.5295, 65.7393, 0.55 ) }
    dend_30 { pt3dadd( 212.505, 75.6632, 68.3939, 0.55 ) }
    dend_30 { pt3dadd( 223.282, 74.86, 71.797, 0.55 ) }
    dend_30 { pt3dadd( 234.362, 75.0414, 74.1554, 0.55 ) }
    dend_30 { pt3dadd( 245.069, 76.1436, 77.6929, 0.55 ) }
    dend_30 { pt3dadd( 255.374, 75.5263, 82.3613, 0.55 ) }
    dend_30 { pt3dadd( 265.384, 77.1519, 87.4127, 0.55 ) }
    dend_30 { pt3dadd( 274.379, 80.7071, 93.3128, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.805445, -32.3293, 6.22718, 1.38 ) }
    dend_13 { pt3dadd( 2.88083, -35.5811, 6.09699, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.805445, -32.3293, 6.22718, 0.55 ) }
    dend_12 { pt3dadd( -1.90379, -33.841, 6.09437, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -3.10331, -35.7678, 5.9507, 0.55 ) }
    dend_12 { pt3dadd( -4.05162, -37.0517, 5.8484, 0.55 ) }
    dend_12 { pt3dadd( -4.83076, -38.1254, 5.6249, 0.55 ) }
    dend_12 { pt3dadd( -6.51031, -40.3549, 4.95519, 0.55 ) }
    dend_12 { pt3dadd( -7.68688, -41.8472, 4.44755, 0.55 ) }
    dend_12 { pt3dadd( -8.72563, -43.1847, 3.95109, 0.55 ) }
    dend_12 { pt3dadd( -11.405, -46.4487, 2.67693, 0.55 ) }
    dend_12 { pt3dadd( -14.6369, -50.2349, 1.174, 0.55 ) }
    dend_12 { pt3dadd( -17.136, -53.1059, -0.0399748, 0.55 ) }
    dend_12 { pt3dadd( -18.724, -54.9884, -0.840691, 0.55 ) }
    dend_12 { pt3dadd( -20.5415, -57.2421, -1.75223, 0.55 ) }
    dend_12 { pt3dadd( -22.8313, -60.4561, -2.87061, 0.55 ) }
    dend_12 { pt3dadd( -24.1532, -62.7191, -3.48882, 0.55 ) }
    dend_12 { pt3dadd( -25.7827, -65.9575, -4.07977, 0.55 ) }
    dend_12 { pt3dadd( -27.0654, -68.9782, -4.48686, 0.55 ) }
    dend_12 { pt3dadd( -28.3251, -72.7292, -4.86591, 0.55 ) }
    dend_12 { pt3dadd( -29.4729, -77.1148, -5.15371, 0.55 ) }
    dend_12 { pt3dadd( -30.0429, -80.4501, -5.24662, 0.55 ) }
    dend_12 { pt3dadd( -30.2325, -82.1037, -5.16996, 0.55 ) }
    dend_12 { pt3dadd( -30.4811, -85.9769, -4.74711, 0.55 ) }
    dend_12 { pt3dadd( -30.6644, -89.5973, -4.24846, 0.55 ) }
    dend_12 { pt3dadd( -30.7048, -93.234, -3.45206, 0.55 ) }
    dend_12 { pt3dadd( -30.7665, -95.3212, -2.88598, 0.55 ) }
    dend_12 { pt3dadd( -30.954, -101.772, -0.895673, 0.55 ) }
    dend_12 { pt3dadd( -30.9722, -102.247, -0.741366, 0.55 ) }
    dend_12 { pt3dadd( -31.04, -105.153, 0.282328, 0.55 ) }
    dend_12 { pt3dadd( -31.419, -110.364, 2.19712, 0.55 ) }
    dend_12 { pt3dadd( -31.5403, -112.107, 2.73382, 0.55 ) }
    dend_12 { pt3dadd( -31.7265, -114.837, 3.10222, 0.55 ) }
    dend_12 { pt3dadd( -31.7354, -115.85, 3.01468, 0.55 ) }
    dend_12 { pt3dadd( -31.5202, -119.273, 2.10695, 0.55 ) }
    dend_12 { pt3dadd( -31.1892, -121.486, 1.07639, 0.55 ) }
    dend_12 { pt3dadd( -30.4596, -125.007, -1.25871, 0.55 ) }
    dend_12 { pt3dadd( -29.3446, -129.307, -4.41894, 0.28 ) }
    dend_12 { pt3dadd( -29.0309, -130.369, -5.34015, 0.55 ) }
    dend_12 { pt3dadd( -28.5288, -131.98, -6.87689, 0.28 ) }
    dend_12 { pt3dadd( -28.4534, -132.223, -7.1216, 0.55 ) }
    dend_12 { pt3dadd( -28.066, -133.553, -8.34986, 0.28 ) }
    dend_12 { pt3dadd( -27.9807, -134.006, -8.6684, 0.55 ) }
    dend_12 { pt3dadd( -27.6577, -136.363, -9.88262, 0.28 ) }
    dend_12 { pt3dadd( -27.5799, -137.166, -10.2904, 0.55 ) }
    dend_12 { pt3dadd( -27.4035, -139.491, -11.3437, 0.28 ) }
    dend_12 { pt3dadd( -27.3451, -140.223, -11.6722, 0.55 ) }
    dend_12 { pt3dadd( -27.1702, -142.749, -12.7681, 0.28 ) }
    dend_12 { pt3dadd( -27.0829, -143.911, -13.2772, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.87671, -72.5642, 57.0277, 0.55 ) }
    dend_10 { pt3dadd( -5.50492, -77.9962, 63.8179, 0.55 ) }
    dend_10 { pt3dadd( -7.48312, -82.4694, 71.1895, 0.55 ) }
    dend_10 { pt3dadd( -9.64188, -87.5128, 78.1298, 0.55 ) }
    dend_10 { pt3dadd( -11.9995, -92.5241, 85.0285, 0.55 ) }
    dend_10 { pt3dadd( -14.2171, -98.6733, 90.9895, 0.55 ) }
    dend_10 { pt3dadd( -16.0697, -104.63, 97.2622, 0.55 ) }
    dend_10 { pt3dadd( -18.3834, -111.976, 101.615, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.87671, -72.5642, 57.0277, 0.55 ) }
    dend_3 { pt3dadd( -1.64785, -82.875, 65.6033, 0.55 ) }
    dend_3 { pt3dadd( 0.118792, -94.638, 72.186, 0.55 ) }
    dend_3 { pt3dadd( -0.152775, -106.093, 79.5024, 0.55 ) }
    dend_3 { pt3dadd( -1.70164, -117.969, 85.935, 0.55 ) }
    dend_3 { pt3dadd( -2.66631, -129.907, 92.3664, 0.55 ) }
    dend_3 { pt3dadd( -3.14678, -141.44, 99.5493, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -50.838, 35.0005, -14.0534, 0.83 ) }
    dend_60 { pt3dadd( -51.1919, 35.5887, -16.2698, 0.83 ) }
    dend_60 { pt3dadd( -52.0333, 37.1571, -21.3401, 0.55 ) }
    dend_60 { pt3dadd( -52.346, 37.8964, -23.4151, 0.83 ) }
    dend_60 { pt3dadd( -52.632, 38.742, -25.5381, 0.55 ) }
    dend_60 { pt3dadd( -52.8364, 39.7303, -27.5107, 0.55 ) }
    dend_60 { pt3dadd( -52.8911, 40.2798, -28.4079, 0.28 ) }
    dend_60 { pt3dadd( -52.909, 40.7178, -28.8647, 0.55 ) }
    dend_60 { pt3dadd( -52.7608, 42.3698, -30.0595, 0.28 ) }
    dend_60 { pt3dadd( -52.6624, 43.0939, -30.5427, 0.55 ) }
    dend_60 { pt3dadd( -52.3107, 45.6705, -32.1101, 0.28 ) }
    dend_60 { pt3dadd( -52.0601, 47.7557, -33.2652, 0.55 ) }
    dend_60 { pt3dadd( -51.7913, 51.0839, -34.9131, 0.28 ) }
    dend_60 { pt3dadd( -51.6379, 54.0503, -36.2704, 0.28 ) }
    dend_60 { pt3dadd( -51.6364, 55.7382, -36.964, 0.55 ) }
    dend_60 { pt3dadd( -51.7564, 57.7541, -37.7386, 0.28 ) }
    dend_60 { pt3dadd( -51.8708, 58.7297, -38.0725, 0.55 ) }
    dend_60 { pt3dadd( -52.3008, 60.989, -38.9, 0.28 ) }
    dend_60 { pt3dadd( -52.7162, 62.4677, -39.482, 0.28 ) }
    dend_60 { pt3dadd( -53.1726, 63.9016, -40.0811, 0.28 ) }
    dend_60 { pt3dadd( -53.3855, 64.6545, -40.4117, 0.55 ) }
    dend_60 { pt3dadd( -54.1086, 67.6466, -41.8786, 0.28 ) }
    dend_60 { pt3dadd( -54.8693, 71.1447, -43.7237, 0.55 ) }
    dend_60 { pt3dadd( -55.1153, 72.3484, -44.3726, 0.55 ) }
    dend_60 { pt3dadd( -55.3717, 73.5709, -44.9909, 0.55 ) }
    dend_60 { pt3dadd( -56.0767, 76.1612, -46.2878, 0.55 ) }
    dend_60 { pt3dadd( -56.6687, 77.8544, -47.1287, 0.28 ) }
    dend_60 { pt3dadd( -56.9742, 78.4987, -47.4246, 0.55 ) }
    dend_60 { pt3dadd( -57.9143, 80.275, -48.1416, 0.28 ) }
    dend_60 { pt3dadd( -59.0242, 82.136, -48.942, 0.55 ) }
    dend_60 { pt3dadd( -60.9216, 84.7834, -50.0875, 0.28 ) }
    dend_60 { pt3dadd( -61.8542, 85.882, -50.5497, 0.28 ) }
    dend_60 { pt3dadd( -63.4219, 87.3498, -51.2548, 0.55 ) }
    dend_60 { pt3dadd( -65.2022, 88.8457, -52.0243, 0.28 ) }
    dend_60 { pt3dadd( -65.5266, 89.0777, -52.1412, 0.55 ) }
    dend_60 { pt3dadd( -66.6933, 89.8116, -52.4981, 0.28 ) }
    dend_60 { pt3dadd( -70.691, 92.1764, -53.5611, 0.55 ) }
    dend_60 { pt3dadd( -76.3212, 94.9725, -54.973, 0.28 ) }
    dend_60 { pt3dadd( -77.3824, 95.4093, -55.2507, 0.55 ) }
    dend_60 { pt3dadd( -80.3119, 96.4993, -55.9994, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -81.5531, 96.9298, -56.3307, 0.28 ) }
    dend_60 { pt3dadd( -82.649, 97.2614, -56.644, 0.55 ) }
    dend_60 { pt3dadd( -85.9353, 97.8374, -57.5724, 0.28 ) }
    dend_60 { pt3dadd( -88.2254, 98.1014, -58.0642, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -50.838, 35.0005, -14.0534, 0.55 ) }
    dend_57 { pt3dadd( -51.1382, 36.246, -14.2931, 0.55 ) }
    dend_57 { pt3dadd( -51.3292, 36.985, -14.3628, 0.28 ) }
    dend_57 { pt3dadd( -51.5628, 37.5138, -14.2721, 0.55 ) }
    dend_57 { pt3dadd( -52.0992, 38.7283, -14.0639, 0.28 ) }
    dend_57 { pt3dadd( -52.476, 39.5813, -13.9176, 0.55 ) }
    dend_57 { pt3dadd( -53.1706, 41.1538, -13.648, 0.28 ) }
    dend_57 { pt3dadd( -53.6181, 42.0003, -13.347, 0.55 ) }
    dend_57 { pt3dadd( -55.2359, 44.0144, -11.8543, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -131.018, -64.7275, 25.4183, 0.55 ) }
    dend_52 { pt3dadd( -135.025, -71.6764, 26.5266, 0.55 ) }
    dend_52 { pt3dadd( -137.722, -79.2713, 27.3089, 0.55 ) }
    dend_52 { pt3dadd( -139.921, -87.0048, 26.3463, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -131.018, -64.7275, 25.4183, 0.55 ) }
    dend_49 { pt3dadd( -135.639, -72.6018, 26.9164, 0.55 ) }
    dend_49 { pt3dadd( -139.241, -81.0837, 27.7454, 0.55 ) }
    dend_49 { pt3dadd( -142.446, -89.7269, 28.5381, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -153.293, 17.5251, 59.1331, 0.55 ) }
    dend_47 { pt3dadd( -164.511, 16.9351, 66.5775, 0.55 ) }
    dend_47 { pt3dadd( -176.189, 18.3301, 73.1556, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -153.293, 17.5251, 59.1331, 0.55 ) }
    dend_46 { pt3dadd( -163.605, 16.2988, 63.1971, 0.55 ) }
    dend_46 { pt3dadd( -173.973, 16.9166, 67.2528, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 76.5676, -22.975, -79.5704, 0.28 ) }
    dend_39 { pt3dadd( 83.1657, -26.0464, -92.2814, 0.28 ) }
    dend_39 { pt3dadd( 83.8199, -26.4231, -93.4235, 0.55 ) }
    dend_39 { pt3dadd( 84.9245, -27.0592, -95.3517, 0.28 ) }
    dend_39 { pt3dadd( 85.8545, -27.5948, -96.9753, 0.28 ) }
    dend_39 { pt3dadd( 87.0856, -28.3038, -99.1245, 0.55 ) }
    dend_39 { pt3dadd( 88.7087, -29.2386, -101.959, 0.55 ) }
    dend_39 { pt3dadd( 90.9081, -31.1558, -103.591, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 76.5676, -22.975, -79.5704, 0.55 ) }
    dend_36 { pt3dadd( 77.0225, -23.7727, -80.8352, 0.55 ) }
    dend_36 { pt3dadd( 77.1412, -24.1186, -81.3993, 0.28 ) }
    dend_36 { pt3dadd( 77.3029, -24.7006, -82.3831, 0.55 ) }
    dend_36 { pt3dadd( 77.6593, -25.9829, -84.5503, 0.28 ) }
    dend_36 { pt3dadd( 77.9062, -26.8715, -86.0522, 0.55 ) }
    dend_36 { pt3dadd( 78.3246, -28.3771, -88.5969, 0.28 ) }
    dend_36 { pt3dadd( 78.7723, -30.1537, -91.9026, 0.28 ) }
    dend_36 { pt3dadd( 78.9293, -30.9569, -93.446, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 167.656, 3.98082, -31.6845, 0.28 ) }
    dend_33 { pt3dadd( 170.526, 1.18045, -30.83, 0.28 ) }
    dend_33 { pt3dadd( 174.188, -2.53005, -29.3267, 0.28 ) }
    dend_33 { pt3dadd( 176.518, -4.9424, -28.2321, 0.55 ) }
    dend_33 { pt3dadd( 177.906, -6.25253, -27.5487, 0.28 ) }
    dend_33 { pt3dadd( 178.645, -6.95898, -27.1721, 0.28 ) }
    dend_33 { pt3dadd( 182.305, -10.4475, -25.3805, 0.55 ) }
    dend_33 { pt3dadd( 183.146, -11.213, -24.8565, 0.28 ) }
    dend_33 { pt3dadd( 185.176, -13.2583, -23.3022, 0.55 ) }
    dend_33 { pt3dadd( 186.911, -15.0458, -22.0428, 0.28 ) }
    dend_33 { pt3dadd( 188.407, -16.4851, -21.0543, 0.55 ) }
    dend_33 { pt3dadd( 190.163, -18.2186, -20.0062, 0.55 ) }
    dend_33 { pt3dadd( 192.949, -20.9924, -18.771, 0.55 ) }
    dend_33 { pt3dadd( 193.622, -21.6765, -18.4981, 0.55 ) }
    dend_33 { pt3dadd( 196.047, -24.2484, -17.5136, 0.28 ) }
    dend_33 { pt3dadd( 196.993, -25.3091, -17.1448, 0.55 ) }
    dend_33 { pt3dadd( 198.296, -26.6468, -16.6801, 0.28 ) }
    dend_33 { pt3dadd( 200.133, -28.553, -16.1259, 0.55 ) }
    dend_33 { pt3dadd( 203.145, -31.561, -15.7815, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 167.656, 3.98082, -31.6845, 0.55 ) }
    dend_32 { pt3dadd( 165.48, 3.66045, -31.6414, 0.55 ) }
    dend_32 { pt3dadd( 163.713, 3.40027, -31.6064, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.88083, -35.5811, 6.09699, 0.83 ) }
    dend_17 { pt3dadd( 3.03336, -35.8633, 6.07751, 0.83 ) }
    dend_17 { pt3dadd( 4.76634, -38.3379, 6.06182, 0.83 ) }
    dend_17 { pt3dadd( 6.28386, -40.5082, 5.89739, 0.55 ) }
    dend_17 { pt3dadd( 7.49451, -42.2396, 5.76621, 0.55 ) }
    dend_17 { pt3dadd( 10.0678, -45.9198, 5.48738, 0.83 ) }
    dend_17 { pt3dadd( 13.189, -50.3836, 5.14919, 0.55 ) }
    dend_17 { pt3dadd( 14.8873, -52.7156, 5.02, 0.83 ) }
    dend_17 { pt3dadd( 17.8763, -56.4068, 4.98544, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.88083, -35.5811, 6.09699, 0.55 ) }
    dend_14 { pt3dadd( 2.53726, -36.7638, 2.88358, 0.55 ) }
    dend_14 { pt3dadd( 2.16848, -38.0332, -0.565614, 0.55 ) }
    dend_14 { pt3dadd( 1.73313, -39.5318, -4.63742, 0.55 ) }
    dend_14 { pt3dadd( 1.20448, -41.3516, -9.58191, 0.55 ) }
    dend_14 { pt3dadd( 0.904487, -42.3843, -12.3877, 0.55 ) }
    dend_14 { pt3dadd( 0.844223, -42.5917, -12.9514, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -3.14678, -141.44, 99.5493, 0.55 ) }
    dend_7 { pt3dadd( -2.36453, -150.94, 105.987, 0.55 ) }
    dend_7 { pt3dadd( -0.35612, -161.12, 110.951, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.14678, -141.44, 99.5493, 0.55 ) }
    dend_4 { pt3dadd( -3.7146, -148.851, 103.834, 0.55 ) }
    dend_4 { pt3dadd( -4.42292, -156.006, 108.513, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -55.2359, 44.0144, -11.8543, 0.28 ) }
    dend_59 { pt3dadd( -56.6252, 45.8136, -10.1454, 0.28 ) }
    dend_59 { pt3dadd( -57.1382, 46.5044, -9.41604, 0.55 ) }
    dend_59 { pt3dadd( -58.5969, 48.5125, -7.26294, 0.28 ) }
    dend_59 { pt3dadd( -59.3363, 49.4961, -6.30005, 0.55 ) }
    dend_59 { pt3dadd( -61.3716, 52.1462, -3.78887, 0.28 ) }
    dend_59 { pt3dadd( -63.4402, 54.8397, -1.23659, 0.55 ) }
    dend_59 { pt3dadd( -66.8417, 59.0674, 3.05318, 0.28 ) }
    dend_59 { pt3dadd( -67.5662, 59.9754, 3.96674, 0.55 ) }
    dend_59 { pt3dadd( -69.1786, 62.0931, 5.88765, 0.28 ) }
    dend_59 { pt3dadd( -69.8095, 62.9712, 6.63654, 0.55 ) }
    dend_59 { pt3dadd( -76.9536, 68.6768, 13.4661, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -85.2637, 75.2412, 17.719, 0.55 ) }
    dend_59 { pt3dadd( -92.2648, 82.3649, 23.2391, 0.55 ) }
    dend_59 { pt3dadd( -97.9325, 90.9441, 28.1899, 0.55 ) }
    dend_59 { pt3dadd( -104.818, 98.9101, 32.5901, 0.55 ) }
    dend_59 { pt3dadd( -112.369, 105.212, 38.3779, 0.55 ) }
    dend_59 { pt3dadd( -118.934, 110.901, 45.7787, 0.55 ) }
    dend_59 { pt3dadd( -124.195, 115.726, 54.6824, 0.55 ) }
    dend_59 { pt3dadd( -129.571, 121.149, 63.1636, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -55.2359, 44.0144, -11.8543, 0.55 ) }
    dend_58 { pt3dadd( -57.5698, 43.815, -9.16038, 0.55 ) }
    dend_58 { pt3dadd( -58.7793, 43.6595, -7.74097, 0.28 ) }
    dend_58 { pt3dadd( -59.6795, 43.5438, -6.68469, 0.55 ) }
    dend_58 { pt3dadd( -60.4297, 43.4473, -5.80434, 0.28 ) }
    dend_58 { pt3dadd( -60.9551, 43.3798, -5.1877, 0.55 ) }
    dend_58 { pt3dadd( -62.4041, 43.1935, -3.48737, 0.28 ) }
    dend_58 { pt3dadd( -63.4218, 42.9001, -2.45191, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -139.921, -87.0048, 26.3463, 0.55 ) }
    dend_54 { pt3dadd( -142.433, -95.0685, 27.8026, 0.55 ) }
    dend_54 { pt3dadd( -144.555, -103.035, 30.1444, 0.55 ) }
    dend_54 { pt3dadd( -146.379, -111.373, 30.9148, 0.55 ) }
    dend_54 { pt3dadd( -148.812, -119.344, 32.9162, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -139.921, -87.0048, 26.3463, 0.55 ) }
    dend_53 { pt3dadd( -144.651, -94.0218, 22.1219, 0.55 ) }
    dend_53 { pt3dadd( -149.269, -100.145, 16.588, 0.55 ) }
    dend_53 { pt3dadd( -154.33, -106.993, 12.4708, 0.55 ) }
    dend_53 { pt3dadd( -161.273, -112.357, 8.93942, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -142.446, -89.7269, 28.5381, 0.55 ) }
    dend_51 { pt3dadd( -147.218, -99.3316, 24.9128, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -142.446, -89.7269, 28.5381, 0.55 ) }
    dend_50 { pt3dadd( -146.016, -92.9387, 34.4962, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 90.9081, -31.1558, -103.591, 0.28 ) }
    dend_41 { pt3dadd( 93.8239, -32.8814, -105.631, 0.28 ) }
    dend_41 { pt3dadd( 95.1783, -33.6829, -106.579, 0.55 ) }
    dend_41 { pt3dadd( 97.7612, -35.2114, -108.386, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 90.9081, -31.1558, -103.591, 0.55 ) }
    dend_40 { pt3dadd( 90.3897, -32.2538, -105.071, 0.55 ) }
    dend_40 { pt3dadd( 89.3529, -34.4501, -108.033, 0.28 ) }
    dend_40 { pt3dadd( 89.0151, -35.1655, -108.998, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 78.9293, -30.9569, -93.446, 0.28 ) }
    dend_38 { pt3dadd( 79.5651, -33.18, -96.844, 0.28 ) }
    dend_38 { pt3dadd( 79.8799, -34.2807, -98.5265, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 78.9293, -30.9569, -93.446, 0.55 ) }
    dend_37 { pt3dadd( 76.9252, -31.6405, -92.7506, 0.55 ) }
    dend_37 { pt3dadd( 71.3368, -33.5468, -90.8116, 0.28 ) }
    dend_37 { pt3dadd( 70.0092, -33.9997, -90.351, 0.55 ) }
    dend_37 { pt3dadd( 66.3776, -35.2385, -89.0909, 0.28 ) }
    dend_37 { pt3dadd( 64.0367, -36.037, -88.2786, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 17.8763, -56.4068, 4.98544, 0.83 ) }
    dend_23 { pt3dadd( 17.9196, -56.602, 4.96107, 0.83 ) }
    dend_23 { pt3dadd( 18.5085, -59.155, 4.72116, 0.83 ) }
    dend_23 { pt3dadd( 18.759, -61.0853, 4.62695, 0.83 ) }
    dend_23 { pt3dadd( 18.8313, -62.966, 4.69792, 0.83 ) }
    dend_23 { pt3dadd( 18.8014, -65.4821, 4.95829, 0.83 ) }
    dend_23 { pt3dadd( 18.6667, -68.3906, 5.34548, 0.83 ) }
    dend_23 { pt3dadd( 18.4942, -71.6428, 5.94597, 0.83 ) }
    dend_23 { pt3dadd( 18.2969, -74.8065, 6.6708, 0.83 ) }
    dend_23 { pt3dadd( 17.8292, -78.7067, 7.42016, 0.83 ) }
    dend_23 { pt3dadd( 17.5408, -80.5025, 7.6455, 0.83 ) }
    dend_23 { pt3dadd( 17.3365, -81.8507, 7.7318, 0.83 ) }
    dend_23 { pt3dadd( 16.9031, -84.4396, 7.8329, 0.83 ) }
    dend_23 { pt3dadd( 16.594, -86.7503, 7.8113, 0.83 ) }
    dend_23 { pt3dadd( 16.3079, -91.6403, 7.28895, 0.83 ) }
    dend_23 { pt3dadd( 16.2551, -94.3011, 6.6694, 0.83 ) }
    dend_23 { pt3dadd( 16.2427, -96.7472, 5.92248, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.8763, -56.4068, 4.98544, 0.55 ) }
    dend_18 { pt3dadd( 16.9855, -58.7832, 5.58059, 0.55 ) }
    dend_18 { pt3dadd( 16.3437, -60.4938, 6.14426, 0.55 ) }
    dend_18 { pt3dadd( 15.9868, -61.5738, 6.6059, 0.55 ) }
    dend_18 { pt3dadd( 15.5461, -63.2421, 7.47306, 0.55 ) }
    dend_18 { pt3dadd( 14.8099, -66.517, 9.384, 0.55 ) }
    dend_18 { pt3dadd( 14.2955, -68.9631, 11.1125, 0.55 ) }
    dend_18 { pt3dadd( 13.9349, -70.8977, 12.713, 0.55 ) }
    dend_18 { pt3dadd( 13.5541, -72.8358, 14.4859, 0.55 ) }
    dend_18 { pt3dadd( 13.2445, -74.4327, 16.0479, 0.28 ) }
    dend_18 { pt3dadd( 13.0183, -75.7137, 17.5313, 0.55 ) }
    dend_18 { pt3dadd( 12.6301, -78.0035, 20.598, 0.55 ) }
    dend_18 { pt3dadd( 12.3457, -79.3892, 22.6645, 0.55 ) }
    dend_18 { pt3dadd( 12.1748, -80.1667, 23.8159, 0.55 ) }
    dend_18 { pt3dadd( 11.9088, -81.0919, 25.1324, 0.83 ) }
    dend_18 { pt3dadd( 11.0458, -83.8607, 28.8398, 0.28 ) }
    dend_18 { pt3dadd( 10.7548, -84.7803, 30.0391, 0.55 ) }
    dend_18 { pt3dadd( 10.2727, -86.4462, 32.1317, 0.28 ) }
    dend_18 { pt3dadd( 10.1341, -86.9547, 32.8174, 0.55 ) }
    dend_18 { pt3dadd( 9.87628, -88.15, 34.3844, 0.28 ) }
    dend_18 { pt3dadd( 9.72195, -88.8363, 35.2193, 0.55 ) }
    dend_18 { pt3dadd( 8.91604, -91.1537, 37.3168, 0.55 ) }
    dend_18 { pt3dadd( 8.99292, -97.0421, 45.1465, 0.55 ) }
    dend_18 { pt3dadd( 9.59523, -102.558, 53.2209, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 0.844223, -42.5917, -12.9514, 0.55 ) }
    dend_16 { pt3dadd( -0.57665, -43.7512, -15.8116, 0.55 ) }
    dend_16 { pt3dadd( -1.01448, -44.0402, -16.6244, 0.55 ) }
    dend_16 { pt3dadd( -2.13242, -44.7703, -18.6031, 0.55 ) }
    dend_16 { pt3dadd( -4.64265, -46.2669, -22.7825, 0.28 ) }
    dend_16 { pt3dadd( -5.02817, -46.4791, -23.3711, 0.55 ) }
    dend_16 { pt3dadd( -6.65008, -47.4332, -25.741, 0.55 ) }
    dend_16 { pt3dadd( -8.95294, -48.7602, -28.6968, 0.55 ) }
    dend_16 { pt3dadd( -9.84833, -49.2328, -29.7998, 0.28 ) }
    dend_16 { pt3dadd( -10.661, -49.5811, -30.7089, 0.28 ) }
    dend_16 { pt3dadd( -12.1169, -50.1556, -32.0327, 0.55 ) }
    dend_16 { pt3dadd( -13.8906, -50.7533, -33.7245, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -15.548, -51.1372, -35.3294, 0.55 ) }
    dend_16 { pt3dadd( -16.8592, -51.3121, -36.5416, 0.55 ) }
    dend_16 { pt3dadd( -17.7696, -51.3445, -37.408, 0.55 ) }
    dend_16 { pt3dadd( -20.4461, -51.2981, -40.0426, 0.55 ) }
    dend_16 { pt3dadd( -23.3183, -51.0366, -42.7556, 0.55 ) }
    dend_16 { pt3dadd( -24.5264, -50.858, -43.844, 0.28 ) }
    dend_16 { pt3dadd( -25.6649, -50.7068, -44.9009, 0.55 ) }
    dend_16 { pt3dadd( -27.9526, -50.5656, -47.0204, 0.28 ) }
    dend_16 { pt3dadd( -28.7203, -50.5432, -47.7253, 0.83 ) }
    dend_16 { pt3dadd( -30.1855, -50.4891, -48.9349, 0.28 ) }
    dend_16 { pt3dadd( -31.2637, -50.5456, -49.6595, 0.55 ) }
    dend_16 { pt3dadd( -32.8276, -50.6879, -50.6787, 0.28 ) }
    dend_16 { pt3dadd( -33.4574, -50.7374, -51.0631, 0.55 ) }
    dend_16 { pt3dadd( -34.6367, -50.8561, -51.7101, 0.55 ) }
    dend_16 { pt3dadd( -36.4683, -50.8538, -52.6164, 0.55 ) }
    dend_16 { pt3dadd( -37.694, -50.7814, -53.1405, 0.28 ) }
    dend_16 { pt3dadd( -38.7211, -50.6066, -53.4851, 0.55 ) }
    dend_16 { pt3dadd( -39.9549, -50.2592, -53.8956, 0.28 ) }
    dend_16 { pt3dadd( -40.1591, -50.1866, -53.9695, 0.55 ) }
    dend_16 { pt3dadd( -41.9853, -49.4615, -54.9527, 0.28 ) }
    dend_16 { pt3dadd( -43.2858, -48.9025, -55.8007, 0.55 ) }
    dend_16 { pt3dadd( -44.97, -48.042, -57.1487, 0.83 ) }
    dend_16 { pt3dadd( -46.3285, -47.2932, -58.4133, 0.28 ) }
    dend_16 { pt3dadd( -46.671, -47.1003, -58.7751, 0.55 ) }
    dend_16 { pt3dadd( -49.257, -45.6531, -61.7025, 0.28 ) }
    dend_16 { pt3dadd( -49.6974, -45.4052, -62.2621, 0.55 ) }
    dend_16 { pt3dadd( -50.9925, -44.5722, -64.0016, 0.28 ) }
    dend_16 { pt3dadd( -51.326, -44.358, -64.4533, 0.55 ) }
    dend_16 { pt3dadd( -52.1989, -43.8025, -65.548, 0.28 ) }
    dend_16 { pt3dadd( -52.8286, -43.4037, -66.2813, 0.55 ) }
    dend_16 { pt3dadd( -54.2889, -42.5266, -67.694, 0.28 ) }
    dend_16 { pt3dadd( -55.1543, -42.0713, -68.4991, 0.55 ) }
    dend_16 { pt3dadd( -57.0068, -41.2258, -70.117, 0.28 ) }
    dend_16 { pt3dadd( -57.5559, -41.006, -70.5903, 0.55 ) }
    dend_16 { pt3dadd( -58.4139, -40.7325, -71.3005, 0.28 ) }
    dend_16 { pt3dadd( -59.149, -40.5051, -71.8654, 0.55 ) }
    dend_16 { pt3dadd( -60.6945, -40.0598, -72.9445, 0.28 ) }
    dend_16 { pt3dadd( -61.1619, -39.9373, -73.2541, 0.55 ) }
    dend_16 { pt3dadd( -64.6824, -38.9673, -75.3899, 0.28 ) }
    dend_16 { pt3dadd( -65.9543, -38.5454, -76.0302, 0.55 ) }
    dend_16 { pt3dadd( -68.2697, -37.6939, -77.0296, 0.28 ) }
    dend_16 { pt3dadd( -69.3257, -37.2722, -77.449, 0.55 ) }
    dend_16 { pt3dadd( -71.7706, -36.3287, -78.2791, 0.28 ) }
    dend_16 { pt3dadd( -72.6696, -36.0218, -78.5474, 0.55 ) }
    dend_16 { pt3dadd( -75.9107, -35.1936, -79.3561, 0.28 ) }
    dend_16 { pt3dadd( -77.24, -35.0085, -79.6828, 0.55 ) }
    dend_16 { pt3dadd( -79.0952, -35.0442, -80.1303, 0.55 ) }
    dend_16 { pt3dadd( -80.2302, -35.1386, -80.3791, 0.55 ) }
    dend_16 { pt3dadd( -82.5646, -35.3986, -80.7096, 0.28 ) }
    dend_16 { pt3dadd( -84.8795, -35.6833, -80.8915, 0.28 ) }
    dend_16 { pt3dadd( -86.8169, -35.916, -80.9875, 0.55 ) }
    dend_16 { pt3dadd( -89.248, -36.0111, -80.8477, 0.28 ) }
    dend_16 { pt3dadd( -90.4888, -35.9211, -80.6214, 0.55 ) }
    dend_16 { pt3dadd( -93.5289, -35.2763, -79.8012, 0.28 ) }
    dend_16 { pt3dadd( -95.1517, -34.6748, -79.0332, 0.55 ) }
    dend_16 { pt3dadd( -96.2247, -34.1463, -78.3302, 0.28 ) }
    dend_16 { pt3dadd( -97.4257, -33.5523, -77.2824, 0.55 ) }
    dend_16 { pt3dadd( -98.9291, -32.7624, -75.8069, 0.28 ) }
    dend_16 { pt3dadd( -99.4974, -32.492, -75.2543, 0.55 ) }
    dend_16 { pt3dadd( -102.433, -31.353, -72.7191, 0.28 ) }
    dend_16 { pt3dadd( -103.421, -31.0063, -71.8746, 0.55 ) }
    dend_16 { pt3dadd( -105.754, -30.2686, -69.8114, 0.28 ) }
    dend_16 { pt3dadd( -107.02, -29.8827, -68.6914, 0.55 ) }
    dend_16 { pt3dadd( -108.062, -29.5674, -67.7727, 0.55 ) }
    dend_16 { pt3dadd( -109.309, -29.2001, -66.7068, 0.28 ) }
    dend_16 { pt3dadd( -109.969, -29.0169, -66.2557, 0.55 ) }
    dend_16 { pt3dadd( -112.207, -28.3347, -64.872, 0.28 ) }
    dend_16 { pt3dadd( -113.392, -27.8501, -64.1229, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.844223, -42.5917, -12.9514, 0.55 ) }
    dend_15 { pt3dadd( 2.05537, -42.7401, -13.7262, 0.55 ) }
    dend_15 { pt3dadd( 3.2934, -42.7315, -14.4721, 0.55 ) }
    dend_15 { pt3dadd( 4.87879, -42.5955, -15.3236, 0.55 ) }
    dend_15 { pt3dadd( 6.19539, -42.3693, -15.9621, 0.55 ) }
    dend_15 { pt3dadd( 15.0656, -39.9135, -19.5058, 0.55 ) }
    dend_15 { pt3dadd( 17.0592, -39.1336, -20.3288, 0.55 ) }
    dend_15 { pt3dadd( 19.9905, -37.7694, -21.6024, 0.55 ) }
    dend_15 { pt3dadd( 22.0616, -36.734, -22.5165, 0.55 ) }
    dend_15 { pt3dadd( 24.0813, -35.6053, -23.3626, 0.28 ) }
    dend_15 { pt3dadd( 27.2016, -33.688, -24.5139, 0.55 ) }
    dend_15 { pt3dadd( 31.8688, -30.6846, -25.9742, 0.28 ) }
    dend_15 { pt3dadd( 32.274, -30.5057, -26.2009, 0.55 ) }
    dend_15 { pt3dadd( 34.6126, -29.9387, -28.3624, 0.28 ) }
    dend_15 { pt3dadd( 35.952, -29.7089, -30.0835, 0.55 ) }
    dend_15 { pt3dadd( 37.2384, -29.6382, -32.0825, 0.55 ) }
    dend_15 { pt3dadd( 39.5108, -29.7291, -35.7042, 0.55 ) }
    dend_15 { pt3dadd( 43.9924, -29.9648, -42.798, 0.55 ) }
    dend_15 { pt3dadd( 47.0883, -30.1752, -47.5065, 0.55 ) }
    dend_15 { pt3dadd( 48.2005, -30.2619, -49.1022, 0.55 ) }
    dend_15 { pt3dadd( 55.75, -30.712, -59.4152, 0.55 ) }
    dend_15 { pt3dadd( 57.9081, -30.7747, -62.1209, 0.55 ) }
    dend_15 { pt3dadd( 59.2325, -30.8008, -63.5475, 0.55 ) }
    dend_15 { pt3dadd( 62.6146, -30.9462, -66.601, 0.55 ) }
    dend_15 { pt3dadd( 71.1867, -31.7947, -73.4396, 0.55 ) }
    dend_15 { pt3dadd( 73.581, -32.1317, -75.18, 0.28 ) }
    dend_15 { pt3dadd( 75.0236, -32.3873, -76.0659, 0.55 ) }
    dend_15 { pt3dadd( 77.1921, -32.8614, -77.336, 0.28 ) }
    dend_15 { pt3dadd( 78.1278, -33.1499, -77.7883, 0.55 ) }
    dend_15 { pt3dadd( 81.2001, -34.4002, -78.3968, 0.28 ) }
    dend_15 { pt3dadd( 83.2819, -36.0811, -77.5906, 0.55 ) }
    dend_15 { pt3dadd( 84.4982, -37.2849, -77.0197, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 85.5526, -38.6186, -76.3499, 0.55 ) }
    dend_15 { pt3dadd( 86.4392, -40.0792, -75.6641, 0.28 ) }
    dend_15 { pt3dadd( 86.8327, -40.8356, -75.3789, 0.55 ) }
    dend_15 { pt3dadd( 87.7066, -42.821, -74.6254, 0.28 ) }
    dend_15 { pt3dadd( 87.9731, -43.4165, -74.5088, 0.55 ) }
    dend_15 { pt3dadd( 89.5801, -46.8328, -74.0251, 0.28 ) }
    dend_15 { pt3dadd( 90.463, -48.4121, -73.9681, 0.55 ) }
    dend_15 { pt3dadd( 92.6457, -51.7809, -74.1392, 0.28 ) }
    dend_15 { pt3dadd( 93.5648, -53.0193, -74.3058, 0.55 ) }
    dend_15 { pt3dadd( 96.8537, -57.0775, -75.0076, 0.28 ) }
    dend_15 { pt3dadd( 97.6798, -58.0639, -75.2147, 0.55 ) }
    dend_15 { pt3dadd( 100.269, -61.1935, -76.0183, 0.28 ) }
    dend_15 { pt3dadd( 100.809, -61.9292, -76.1744, 0.55 ) }
    dend_15 { pt3dadd( 102.165, -63.8771, -76.6019, 0.28 ) }
    dend_15 { pt3dadd( 103.015, -65.0072, -76.9471, 0.55 ) }
    dend_15 { pt3dadd( 103.928, -66.1151, -77.3501, 0.55 ) }
    dend_15 { pt3dadd( 105.742, -68.3252, -78.1379, 0.28 ) }
    dend_15 { pt3dadd( 107.061, -69.6855, -78.7128, 0.55 ) }
    dend_15 { pt3dadd( 111.363, -73.0443, -80.5603, 0.28 ) }
    dend_15 { pt3dadd( 113.078, -74.123, -81.3291, 0.55 ) }
    dend_15 { pt3dadd( 114.269, -74.8029, -81.8365, 0.28 ) }
    dend_15 { pt3dadd( 115.483, -75.4177, -82.3292, 0.55 ) }
    dend_15 { pt3dadd( 119.252, -77.1222, -83.7724, 0.28 ) }
    dend_15 { pt3dadd( 122.097, -78.4457, -84.7985, 0.55 ) }
    dend_15 { pt3dadd( 126.888, -80.9792, -86.2353, 0.28 ) }
    dend_15 { pt3dadd( 128.396, -81.7666, -86.6807, 0.55 ) }
    dend_15 { pt3dadd( 131.252, -83.2049, -87.3218, 0.28 ) }
    dend_15 { pt3dadd( 132.189, -83.675, -87.4698, 0.55 ) }
    dend_15 { pt3dadd( 133.651, -84.4225, -87.476, 0.28 ) }
    dend_15 { pt3dadd( 134.913, -85.0489, -87.3838, 0.55 ) }
    dend_15 { pt3dadd( 138.239, -86.5835, -86.8184, 0.28 ) }
    dend_15 { pt3dadd( 142.039, -88.1964, -86.1112, 0.28 ) }
    dend_15 { pt3dadd( 143.922, -88.9295, -85.6286, 0.28 ) }
    dend_15 { pt3dadd( 145.859, -89.6115, -85.2482, 0.55 ) }
    dend_15 { pt3dadd( 148.697, -90.4837, -84.7023, 0.28 ) }
    dend_15 { pt3dadd( 149.951, -90.8533, -84.4349, 0.83 ) }
    dend_15 { pt3dadd( 153.109, -91.8358, -83.6407, 0.28 ) }
    dend_15 { pt3dadd( 154.504, -92.2926, -83.3672, 0.55 ) }
    dend_15 { pt3dadd( 160.721, -94.5243, -82.4261, 0.28 ) }
    dend_15 { pt3dadd( 163.906, -95.6765, -82.1813, 0.28 ) }
    dend_15 { pt3dadd( 166.266, -96.5151, -82.1376, 0.55 ) }
    dend_15 { pt3dadd( 167.682, -97.0311, -82.2477, 0.55 ) }
    dend_15 { pt3dadd( 171.512, -98.448, -82.7933, 0.28 ) }
    dend_15 { pt3dadd( 175.123, -99.9142, -83.4269, 0.55 ) }
    dend_15 { pt3dadd( 178.407, -101.337, -84.005, 0.28 ) }
    dend_15 { pt3dadd( 181.412, -102.662, -84.6595, 0.55 ) }
    dend_15 { pt3dadd( 183.894, -103.732, -85.188, 0.28 ) }
    dend_15 { pt3dadd( 185.906, -104.482, -85.5283, 0.55 ) }
    dend_15 { pt3dadd( 190.722, -106.053, -86.1592, 0.28 ) }
    dend_15 { pt3dadd( 193.141, -106.845, -86.3933, 0.55 ) }
    dend_15 { pt3dadd( 196.743, -108.042, -86.6306, 0.28 ) }
    dend_15 { pt3dadd( 199.678, -108.946, -86.7652, 0.55 ) }
    dend_15 { pt3dadd( 206.559, -110.792, -87.0871, 0.28 ) }
    dend_15 { pt3dadd( 209.409, -111.404, -87.3801, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -0.35612, -161.12, 110.951, 0.55 ) }
    dend_9 { pt3dadd( 0.175693, -169.077, 114.537, 0.55 ) }
    dend_9 { pt3dadd( 1.27067, -177.619, 116.058, 0.55 ) }
    dend_9 { pt3dadd( 2.02068, -185.881, 118.823, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.35612, -161.12, 110.951, 0.55 ) }
    dend_8 { pt3dadd( 1.47053, -170.122, 117.129, 0.55 ) }
    dend_8 { pt3dadd( 2.04698, -177.853, 125.032, 0.55 ) }
    dend_8 { pt3dadd( 2.86826, -183.792, 134.338, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.42292, -156.006, 108.513, 0.55 ) }
    dend_6 { pt3dadd( -3.64207, -165.504, 113.821, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.42292, -156.006, 108.513, 0.55 ) }
    dend_5 { pt3dadd( -5.62461, -164.309, 113.848, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 16.2427, -96.7472, 5.92248, 0.83 ) }
    dend_25 { pt3dadd( 17.0617, -100.043, 6.62639, 0.83 ) }
    dend_25 { pt3dadd( 17.7755, -102.822, 7.46272, 0.83 ) }
    dend_25 { pt3dadd( 18.485, -105.584, 8.29404, 0.83 ) }
    dend_25 { pt3dadd( 19.1588, -108.207, 9.08353, 0.83 ) }
    dend_25 { pt3dadd( 20.1971, -112.249, 10.3002, 0.83 ) }
    dend_25 { pt3dadd( 21.228, -116.262, 11.508, 0.83 ) }
    dend_25 { pt3dadd( 21.9497, -118.92, 12.7135, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 16.2427, -96.7472, 5.92248, 0.55 ) }
    dend_24 { pt3dadd( 18.1524, -99.0617, 6.39034, 0.55 ) }
    dend_24 { pt3dadd( 19.7141, -100.858, 6.42926, 0.55 ) }
    dend_24 { pt3dadd( 20.8455, -102.186, 6.30462, 0.55 ) }
    dend_24 { pt3dadd( 21.9874, -103.757, 5.88539, 0.83 ) }
    dend_24 { pt3dadd( 23.2279, -105.543, 5.15235, 0.55 ) }
    dend_24 { pt3dadd( 24.4414, -107.29, 4.43534, 0.83 ) }
    dend_24 { pt3dadd( 25.6998, -109.186, 3.44624, 0.55 ) }
    dend_24 { pt3dadd( 26.4577, -110.283, 2.76688, 0.83 ) }
    dend_24 { pt3dadd( 28.8389, -113.833, 0.239728, 0.55 ) }
    dend_24 { pt3dadd( 30.5242, -116.634, -1.99219, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 9.59523, -102.558, 53.2209, 0.55 ) }
    dend_20 { pt3dadd( 8.62762, -110.494, 61.8942, 0.55 ) }
    dend_20 { pt3dadd( 6.60149, -117.058, 71.4835, 0.55 ) }
    dend_20 { pt3dadd( 4.28865, -122.387, 81.7493, 0.55 ) }
    dend_20 { pt3dadd( 1.40641, -126.207, 92.531, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.59523, -102.558, 53.2209, 0.55 ) }
    dend_19 { pt3dadd( 8.96467, -110.284, 62.1281, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 21.9497, -118.92, 12.7135, 0.55 ) }
    dend_27 { pt3dadd( 22.082, -120.562, 13.158, 0.55 ) }
    dend_27 { pt3dadd( 22.2961, -122.654, 13.7892, 0.55 ) }
    dend_27 { pt3dadd( 22.5012, -124.629, 14.3744, 0.55 ) }
    dend_27 { pt3dadd( 22.6355, -126.034, 14.766, 0.55 ) }
    dend_27 { pt3dadd( 22.8557, -128.543, 15.4207, 0.55 ) }
    dend_27 { pt3dadd( 23.6171, -135.587, 17.1059, 0.55 ) }
    dend_27 { pt3dadd( 23.9538, -137.973, 17.5882, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 24.215, -139.655, 17.8459, 0.55 ) }
    dend_27 { pt3dadd( 24.5608, -141.572, 17.9909, 0.55 ) }
    dend_27 { pt3dadd( 24.8304, -143.055, 17.9673, 0.55 ) }
    dend_27 { pt3dadd( 25.5919, -146.511, 17.7913, 0.55 ) }
    dend_27 { pt3dadd( 26.0798, -149.142, 17.6355, 0.55 ) }
    dend_27 { pt3dadd( 26.4358, -150.867, 17.5932, 0.55 ) }
    dend_27 { pt3dadd( 27.2966, -155.342, 17.7083, 0.55 ) }
    dend_27 { pt3dadd( 27.8293, -158.354, 17.9144, 0.55 ) }
    dend_27 { pt3dadd( 28.4904, -162.238, 18.4008, 0.55 ) }
    dend_27 { pt3dadd( 29.2289, -166.645, 19.3013, 0.55 ) }
    dend_27 { pt3dadd( 29.8168, -169.578, 20.1098, 0.55 ) }
    dend_27 { pt3dadd( 30.1965, -171.309, 20.6421, 0.55 ) }
    dend_27 { pt3dadd( 30.5181, -172.907, 21.1223, 0.55 ) }
    dend_27 { pt3dadd( 30.9785, -174.926, 21.6422, 0.55 ) }
    dend_27 { pt3dadd( 32.0968, -179.796, 22.5543, 0.55 ) }
    dend_27 { pt3dadd( 32.6071, -181.674, 22.8501, 0.55 ) }
    dend_27 { pt3dadd( 33.1283, -183.77, 23.1552, 0.55 ) }
    dend_27 { pt3dadd( 33.8884, -186.919, 23.5919, 0.55 ) }
    dend_27 { pt3dadd( 34.3557, -189.35, 23.9285, 0.55 ) }
    dend_27 { pt3dadd( 34.6727, -191.669, 24.1922, 0.55 ) }
    dend_27 { pt3dadd( 34.8776, -193.889, 24.4248, 0.55 ) }
    dend_27 { pt3dadd( 35.0347, -196.058, 24.6756, 0.55 ) }
    dend_27 { pt3dadd( 35.1588, -197.601, 24.8407, 0.55 ) }
    dend_27 { pt3dadd( 35.3948, -200.124, 25.0278, 0.55 ) }
    dend_27 { pt3dadd( 35.6827, -203.153, 25.0157, 0.55 ) }
    dend_27 { pt3dadd( 35.8826, -204.62, 24.9077, 0.55 ) }
    dend_27 { pt3dadd( 36.0918, -205.906, 24.7185, 0.55 ) }
    dend_27 { pt3dadd( 36.6267, -208.32, 24.24, 0.55 ) }
    dend_27 { pt3dadd( 36.959, -209.852, 23.8908, 0.55 ) }
    dend_27 { pt3dadd( 37.3752, -211.739, 23.5362, 0.55 ) }
    dend_27 { pt3dadd( 37.6011, -213.07, 23.3577, 0.55 ) }
    dend_27 { pt3dadd( 38.0986, -216.539, 23.0163, 0.55 ) }
    dend_27 { pt3dadd( 38.3696, -219.143, 22.9335, 0.55 ) }
    dend_27 { pt3dadd( 38.655, -223.185, 23.1199, 0.55 ) }
    dend_27 { pt3dadd( 38.8444, -225.792, 23.495, 0.55 ) }
    dend_27 { pt3dadd( 39.0043, -228.531, 23.9727, 0.28 ) }
    dend_27 { pt3dadd( 39.0324, -229.635, 24.2041, 0.28 ) }
    dend_27 { pt3dadd( 39.0383, -232.319, 25.0033, 0.28 ) }
    dend_27 { pt3dadd( 38.9809, -234.802, 25.931, 0.28 ) }
    dend_27 { pt3dadd( 39.1323, -238.064, 27.5505, 0.28 ) }
    dend_27 { pt3dadd( 40.8036, -245.299, 29.5304, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 21.9497, -118.92, 12.7135, 0.55 ) }
    dend_26 { pt3dadd( 23.0076, -119.345, 13.7857, 0.55 ) }
    dend_26 { pt3dadd( 25.0767, -120.473, 16.1569, 0.55 ) }
    dend_26 { pt3dadd( 26.812, -121.603, 18.2872, 0.28 ) }
    dend_26 { pt3dadd( 28.6318, -122.899, 20.6362, 0.55 ) }
    dend_26 { pt3dadd( 29.6019, -123.738, 22.2278, 0.28 ) }
    dend_26 { pt3dadd( 31.1296, -125.264, 25.1934, 0.55 ) }
    dend_26 { pt3dadd( 31.5709, -126.095, 26.6955, 0.28 ) }
    dend_26 { pt3dadd( 31.68, -126.4, 27.3002, 0.28 ) }
    dend_26 { pt3dadd( 31.856, -126.832, 28.3536, 0.55 ) }
    dend_26 { pt3dadd( 32.6936, -128.233, 32.2853, 0.28 ) }
    dend_26 { pt3dadd( 33.085, -128.775, 33.9206, 0.55 ) }
    dend_26 { pt3dadd( 34.5931, -130.322, 38.5296, 0.28 ) }
    dend_26 { pt3dadd( 35.519, -131.071, 40.9185, 0.28 ) }
    dend_26 { pt3dadd( 36.7885, -132.028, 43.7778, 0.55 ) }
    dend_26 { pt3dadd( 38.9275, -133.504, 47.7714, 0.28 ) }
    dend_26 { pt3dadd( 39.2567, -133.697, 48.2681, 0.55 ) }
    dend_26 { pt3dadd( 40.9977, -134.626, 50.5761, 0.28 ) }
    dend_26 { pt3dadd( 41.1733, -134.712, 50.7651, 0.55 ) }
    dend_26 { pt3dadd( 42.6996, -135.76, 52.4823, 0.28 ) }
    dend_26 { pt3dadd( 43.3915, -136.341, 53.3473, 0.55 ) }
    dend_26 { pt3dadd( 48.9992, -140.61, 60.5221, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 1.40641, -126.207, 92.531, 0.55 ) }
    dend_22 { pt3dadd( 2.3635, -129.041, 101.232, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.40641, -126.207, 92.531, 0.55 ) }
    dend_21 { pt3dadd( -1.34887, -131.861, 99.6298, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 13
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 13
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 5
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 13
    dend_20 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_BP_a6fb2fe3a5_0_0


