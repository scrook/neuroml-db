// Cell: dNAC222_L23_NBC_2f216c0d74_0_0
/*
{
  "id" : "dNAC222_L23_NBC_2f216c0d74_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.75681, 7.93669, -3.00698, 2.63904", "-6.11415, 7.12684, -2.72405, 4.23664", "-5.47148, 6.31698, -2.44112, 6.10767", "-4.82882, 5.50713, -2.15818, 7.7632", "-4.18616, 4.69727, -1.87525, 10.2402", "-3.5435, 3.88742, -1.59232, 11.8064", "-2.90084, 3.07757, -1.30939, 12.5995", "-2.25818, 2.26771, -1.02645, 13.3962", "-1.61552, 1.45786, -0.74352, 14.1996", "-0.972859, 0.648002, -0.460588, 14.817", "-0.330198, -0.161852, -0.177655, 15.467", "0.312463, -0.971706, 0.105278, 16.407", "0.955124, -1.78156, 0.38821, 17.1741", "1.59778, -2.59142, 0.671143, 17.2738", "2.24045, -3.40127, 0.954075, 17.3386", "2.88311, -4.21112, 1.23701, 17.3694", "3.52577, -5.02098, 1.51994, 15.6873", "4.16843, -5.83083, 1.80287, 14.1508", "4.81109, -6.64069, 2.08581, 12.6795", "5.45375, -7.45054, 2.36874, 9.91553", "6.09641, -8.2604, 2.65167, 5.27854" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-1.51781, -10.8256, 2.68779, 3.6", "-0.982903, -12.7307, 4.10403, 3.6", "-0.351521, -15.3587, 6.32643, 1.66", "0.366123, -18.0055, 8.62219, 1.66", "1.22604, -20.7874, 11.0892, 1.38", "2.53211, -24.8499, 14.567, 1.38", "3.27574, -27.2262, 16.5184, 1.38", "4.50034, -30.8674, 19.5285, 0.83", "5.73713, -34.3267, 22.3578, 1.11", "6.54978, -36.4261, 24.0312, 0.83", "7.54058, -38.8299, 25.7816, 0.83", "8.61591, -41.1922, 27.2861, 0.83", "9.51158, -43.1198, 28.4543, 0.83", "9.91108, -43.8897, 28.9357, 0.83", "10.9306, -45.9838, 30.284, 0.83", "11.3489, -46.8303, 30.8609, 0.83", "12.1444, -48.2545, 32.0058, 0.83", "13.0417, -49.7578, 33.3392, 0.83", "14.5525, -52.7243, 36.0889, 0.83", "15.4565, -54.5988, 37.8068, 0.83", "18.5245, -59.5258, 43.3502, 0.83", "21.0681, -64.6383, 48.9816, 0.83", "24.8538, -69.2418, 54.3717, 0.83", "28.9689, -73.392, 59.9056, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-8.94782, 4.34544, -7.77221, 1.11", "-8.7727, 7.32703, -7.62277, 1.11", "-8.84288, 10.3726, -7.47847, 0.83", "-9.2034, 13.8447, -7.01425, 0.83", "-9.51534, 15.8758, -6.76006, 1.66", "-10.233, 19.5254, -6.2974, 1.94", "-11.0605, 22.9614, -5.95318, 0.83", "-11.6409, 24.8136, -5.79568, 0.83", "-13.4459, 29.3495, -5.55147, 1.38", "-14.7965, 31.9624, -5.70218, 0.55", "-15.3284, 32.9472, -5.85462, 0.55", "-16.4312, 35.0106, -6.69754, 0.55", "-16.6692, 35.49, -6.96067, 0.55", "-17.6968, 37.6732, -8.43347, 0.55", "-19.1193, 40.8767, -11.1288, 1.66", "-20.1546, 43.5474, -13.3031, 1.66", "-21.2614, 46.9707, -16.0047, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-5.06781, -2.41131, 12.3478, 1.94", "-6.72917, -2.98124, 15.9596, 1.94", "-8.26313, -3.50744, 19.2944, 1.66", "-12.8578, -5.08361, 29.2834, 1.38", "-14.2286, -5.55383, 32.2633, 1.38", "-16.4133, -6.30331, 37.0131, 1.11", "-19.6723, -7.42124, 44.098, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-6.57781, 2.78543, -8.27221, 1.11", "-7.42632, 1.12519, -7.86337, 1.11", "-8.51232, -1.21356, -7.46284, 0.83", "-9.6471, -3.60985, -7.25267, 0.83", "-11.3036, -6.81506, -7.2566, 0.55", "-11.8078, -7.75167, -7.31356, 0.55", "-12.9036, -9.97497, -7.66098, 0.55", "-13.3371, -10.9545, -7.96841, 0.55", "-14.1028, -12.585, -8.7738, 0.83", "-14.752, -13.916, -9.73197, 0.55", "-15.1141, -14.6101, -10.326, 0.55", "-16.4009, -17.0308, -12.3091, 1.11", "-16.9462, -18.1365, -13.1583, 0.55", "-17.5664, -19.4886, -14.2128, 0.55", "-18.2253, -21.0941, -15.4708, 0.55", "-18.5357, -21.8055, -16.0395, 0.55", "-19.2151, -23.1871, -17.21, 1.11", "-19.9837, -24.5547, -18.3605, 0.55", "-20.7769, -26.0042, -19.525, 0.55", "-22.2168, -28.503, -21.5372, 1.38", "-23.2321, -29.9619, -22.7632, 0.55", "-24.3061, -31.2196, -23.8903, 0.55", "-25.1939, -32.0943, -24.7371, 0.55", "-26.3948, -33.1482, -25.7933, 0.55", "-28.4355, -34.7486, -27.4392, 1.94", "-29.7018, -35.6044, -28.3677, 0.55", "-31.0585, -36.4849, -29.307, 0.83", "-32.4872, -37.3622, -30.2364, 0.28", "-33.0937, -37.7344, -30.6432, 0.55", "-34.3673, -38.5955, -31.5852, 0.28", "-35.1093, -39.2292, -32.1737, 0.28", "-36.2766, -40.4487, -33.3384, 1.94", "-37.2662, -41.6043, -34.4851, 0.28", "-38.1542, -42.7028, -35.5687, 0.55", "-39.3722, -44.2878, -37.2077, 0.28", "-39.9294, -45.0591, -38.022, 0.83", "-41.4329, -47.1218, -40.2553, 0.28", "-42.3152, -48.4134, -41.762, 0.83", "-42.6441, -48.9405, -42.373, 0.28", "-43.1807, -49.7752, -43.3199, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-0.177811, 4.71593, -8.24221, 1.38", "-2.00991, 4.99862, -8.44287, 1.38", "-4.34902, 5.23468, -8.8043, 0.83", "-8.33516, 5.34319, -9.58579, 0.83", "-11.9585, 5.1635, -10.3746, 0.83", "-15.6758, 4.75426, -11.3493, 0.83", "-17.0945, 4.53639, -11.7553, 0.55", "-19.6382, 3.86325, -12.5577, 0.83", "-21.4528, 3.16743, -13.1393, 0.55", "-23.82, 2.10108, -13.9545, 0.83", "-26.005, 1.18858, -14.7797, 0.55", "-26.7621, 0.915339, -15.0915, 0.55", "-28.789, 0.369554, -15.9654, 0.83", "-30.4579, 0.058505, -16.7043, 0.55", "-33.1452, -0.347735, -18.0382, 0.55", "-35.2957, -0.710775, -19.3017, 0.83", "-37.1329, -1.18249, -20.543, 0.55", "-38.785, -1.89882, -21.9443, 0.28", "-39.6792, -2.44367, -22.8641, 0.28", "-40.1657, -2.85793, -23.433, 0.55", "-40.9781, -3.84542, -24.3591, 0.55", "-42.1319, -5.31661, -25.7566, 0.83", "-43.1615, -6.37564, -26.7391, 0.55", "-44.4958, -7.48425, -27.8165, 0.55", "-45.1246, -7.9844, -28.3375, 0.55", "-47.1531, -9.47707, -30.0015, 1.11", "-50.1303, -11.4449, -32.3544, 0.55", "-52.7689, -12.9543, -34.3404, 0.55", "-54.4219, -13.8813, -35.5936, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-7.28781, 4.07243, -7.77221, 1.38", "-8.52237, 6.09286, -7.77221, 1.38", "-9.38809, 7.50967, -7.77221, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.01219, 4.92068, -4.12221, 0.83", "1.8368, 6.71101, -4.34945, 0.83", "3.7913, 9.58607, -5.26186, 0.83", "6.08291, 12.2851, -6.376, 0.83", "6.85177, 13.2085, -6.80204, 0.83", "8.54429, 15.2451, -7.84915, 0.83", "10.9113, 17.9476, -9.28725, 1.38", "13.1264, 20.1431, -10.6448, 0.83", "15.0019, 21.7626, -11.7753, 0.83", "18.3324, 24.4941, -13.8604, 1.38", "19.7728, 25.768, -14.8099, 1.11", "21.708, 27.6542, -16.1018, 1.11", "23.8997, 29.847, -17.4345, 1.11", "26.0521, 32.0491, -18.6495, 1.38", "28.182, 34.2273, -19.9126, 0.83", "29.2035, 35.2139, -20.4849, 0.83", "30.7492, 36.8224, -21.408, 0.83", "32.0469, 38.2574, -22.2226, 0.83", "33.9104, 40.201, -23.3187, 1.94", "35.9928, 42.1972, -24.5531, 0.83", "38.7254, 44.667, -26.2187, 0.83", "41.3779, 46.7982, -27.8754, 1.66", "42.8408, 47.8737, -28.4021, 0.83", "44.8571, 49.1545, -28.0718, 0.83", "47.4055, 50.3316, -26.4259, 0.55", "48.4708, 50.6698, -25.4685, 0.83", "50.4877, 51.1211, -23.5009, 0.83", "61.9872, 53.1026, -12.2062, 2.22", "64.1424, 53.4154, -10.1568, 0.55", "65.2219, 53.5592, -9.18406, 0.55", "67.276, 53.7766, -7.4556, 1.11", "71.406, 54.1333, -4.6802, 0.55", "73.2146, 54.263, -4.46612, 0.55", "74.9575, 54.3702, -5.17992, 1.11", "76.8981, 54.6154, -5.90006, 0.55", "78.3175, 54.9517, -6.37748, 0.28", "79.0287, 55.1733, -6.58063, 0.55", "80.8819, 55.7817, -6.91882, 0.28", "81.7458, 56.0594, -7.10407, 0.83", "84.2349, 56.8852, -7.67953, 0.28", "85.6306, 57.3187, -8.00867, 1.11", "88.2055, 58.0525, -8.48226, 0.28", "89.5817, 58.4581, -8.54435, 0.83", "91.4967, 58.9705, -8.42476, 0.28", "92.4902, 59.1844, -8.29653, 0.55", "94.0133, 59.4723, -7.99766, 0.28", "96.1569, 59.8486, -7.49185, 1.11", "100.419, 60.6553, -6.27582, 0.28", "102.374, 61.0289, -5.71404, 1.11", "104.112, 61.3397, -5.23934, 0.55", "105.357, 61.5324, -4.99012, 0.83", "106.675, 61.6696, -4.88005, 0.28", "107.49, 61.6725, -4.92762, 0.83", "108.87, 61.5843, -5.15937, 0.28", "109.791, 61.5089, -5.25401, 0.55", "111.341, 61.3088, -5.33825, 0.28", "112.379, 61.1608, -5.31076, 0.55", "115.011, 60.7994, -5.04997, 0.28", "116.445, 60.5864, -4.85585, 0.83", "117.521, 60.4575, -4.63783, 0.28", "118.269, 60.4124, -4.44466, 0.55", "119.896, 60.4304, -3.88335, 0.28", "120.656, 60.4977, -3.5938, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.3378, 3.53619, -8.95221, 3.05", "-11.5711, 3.80206, -9.82372, 3.05", "-15.0419, 4.5503, -12.2765, 2.22", "-19.1053, 5.4263, -15.1479, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "8.22219, 5.15469, 2.17779, 2.77", "9.90208, 6.85047, 4.78311, 2.77", "11.6475, 8.61238, 7.49001, 2.77", "15.23, 12.2287, 13.0459, 3.6", "16.0906, 13.0974, 14.3805, 3.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.09641, -8.2604, 2.65167, 0.83", "15.4206, -20.0103, 2.65167, 0.83", "24.7447, -31.7602, 2.65167, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "28.9689, -73.392, 59.9056, 0.55", "31.8066, -79.4523, 65.6645, 0.55", "35.1044, -86.1636, 70.3209, 0.55", "37.4581, -93.8843, 73.7402, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "28.9689, -73.392, 59.9056, 0.28", "32.324, -79.9408, 65.6197, 0.55", "36.1998, -85.7585, 71.8168, 0.55", "40.2969, -92.3826, 76.9306, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-21.2614, 46.9707, -16.0047, 0.55", "-21.7384, 48.3563, -16.0483, 0.55", "-22.5836, 50.8933, -16.5385, 0.55", "-23.1827, 52.5546, -16.9393, 1.38", "-24.854, 57.1444, -18.2533, 0.55", "-25.5126, 59.0311, -18.9892, 0.55", "-26.6818, 62.3599, -20.4139, 1.38", "-28.5683, 67.3559, -22.777, 0.55", "-29.6608, 70.2052, -24.2354, 0.55", "-30.7904, 73.2339, -25.8628, 1.38", "-32.599, 78.3636, -28.7985, 0.55", "-33.6892, 81.2479, -30.4385, 0.28", "-34.2433, 82.6588, -31.1896, 0.55", "-34.9517, 84.4121, -32.0074, 0.28", "-35.4492, 85.6545, -32.7182, 0.83", "-36.3018, 87.6944, -34.0892, 0.28", "-37.1359, 89.5842, -35.7449, 0.83", "-38.1122, 91.6345, -37.9927, 0.28", "-39.3509, 93.9758, -40.9075, 1.11", "-42.0609, 98.1095, -47.0402, 0.28", "-43.5435, 100.033, -50.306, 0.83", "-46.1854, 102.839, -55.8887, 1.66", "-47.2494, 103.824, -58.1117, 0.28", "-47.8496, 104.266, -59.2678, 1.11", "-50.8433, 106.049, -64.4659, 0.55", "-52.0199, 106.606, -66.178, 1.38", "-55.7587, 108.162, -71.1339, 0.28", "-56.1734, 108.334, -71.6475, 0.55", "-58.2824, 109.25, -74.2737, 0.28", "-59.117, 109.616, -75.3583, 0.83", "-60.7707, 110.301, -77.4526, 0.28", "-60.9902, 110.364, -77.7146, 0.55", "-63.8534, 110.904, -80.9196, 0.28", "-65.4719, 111.187, -82.7035, 0.83", "-70.0165, 112.079, -87.6879, 0.28", "-72.0341, 112.522, -89.8906, 1.11", "-76.0836, 113.744, -94.2013, 0.55", "-77.1198, 114.151, -95.2702, 0.55", "-79.0337, 115.159, -97.1494, 0.83", "-82.0198, 117.24, -99.9971, 0.28", "-82.6778, 117.85, -100.59, 0.55", "-85.9841, 121.746, -103.663, 0.28", "-86.8953, 123.035, -104.499, 1.66", "-88.5818, 125.542, -106.02, 0.28", "-88.9542, 126.109, -106.354, 0.55", "-90.2752, 128.181, -107.501, 0.28", "-90.9346, 129.229, -108.159, 0.83", "-92.0113, 130.882, -109.296, 0.28", "-92.2399, 131.207, -109.561, 0.55", "-93.5747, 132.991, -111.235, 0.28", "-94.3634, 133.983, -112.233, 0.55", "-96.0724, 135.807, -114.414, 0.28", "-96.8488, 136.614, -115.89, 0.28", "-97.7325, 137.516, -117.955, 0.83", "-98.9059, 138.671, -120.919, 0.55", "-99.2777, 139.012, -121.88, 0.55", "-100.764, 140.293, -125.759, 0.83", "-104.338, 143.102, -134.69, 0.28", "-104.818, 143.479, -135.889, 0.83", "-106.069, 144.45, -138.837, 0.28", "-106.616, 144.867, -140.087, 0.55", "-108.24, 146.173, -143.653, 0.28", "-109.365, 147.088, -145.824, 0.83", "-110.757, 148.133, -147.939, 0.28", "-111.828, 148.97, -149.62, 0.28", "-112.911, 149.828, -151.401, 0.55", "-115.225, 151.68, -155.345, 0.28", "-115.553, 151.928, -155.888, 0.55", "-117.422, 153.184, -158.827, 0.28", "-117.862, 153.443, -159.466, 0.55", "-119.725, 154.438, -161.962, 0.28", "-120.698, 154.897, -163.035, 0.55", "-123.041, 155.918, -164.986, 0.28", "-123.602, 156.131, -165.386, 0.55", "-124.898, 156.544, -166.227, 0.28", "-126.002, 156.883, -166.903, 0.55", "-131.141, 158.456, -169.803, 0.28", "-134.62, 159.537, -171.71, 0.55", "-140.145, 161.215, -174.577, 0.28", "-141.854, 161.714, -175.448, 0.83" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-21.2614, 46.9707, -16.0047, 0.28", "-22.251, 48.9411, -15.9211, 0.28", "-23.243, 50.8598, -15.9078, 0.83", "-24.0449, 52.5346, -16.0015, 0.28", "-26.172, 56.7822, -16.2235, 0.55", "-27.3951, 59.3497, -16.4145, 0.55", "-28.7646, 62.1642, -16.6451, 0.55", "-30.0068, 64.8224, -16.8895, 1.38", "-31.7303, 68.332, -17.1783, 0.55", "-33.8572, 72.2778, -17.4756, 0.83", "-35.0138, 74.387, -17.5686, 0.28", "-36.1042, 76.5873, -17.6588, 0.83", "-37.2176, 79.0024, -17.7233, 0.55", "-39.0416, 83.069, -17.8921, 1.94", "-40.5706, 86.7051, -18.0775, 0.28", "-41.4813, 89.2128, -18.549, 0.83", "-42.4693, 92.3664, -19.4026, 0.28", "-42.8088, 93.9893, -20.1736, 0.83", "-43.0535, 95.4658, -21.0858, 0.28", "-43.2982, 97.5558, -22.5542, 0.83", "-43.9187, 102.767, -26.3701, 0.55", "-44.282, 105.216, -28.1179, 1.94", "-45.1588, 111.081, -31.9123, 0.55", "-45.6231, 113.782, -33.4694, 0.55", "-46.3131, 117.082, -35.0099, 1.11", "-47.1219, 120.225, -36.1276, 0.28", "-47.8012, 122.386, -36.5747, 0.55", "-49.1503, 125.828, -37.0165, 0.55", "-50.5523, 128.893, -37.0495, 0.55", "-52.0295, 131.984, -37.0033, 0.55", "-52.9442, 133.725, -36.916, 0.55", "-54.1662, 135.995, -36.6715, 1.11", "-55.4281, 138.25, -36.4848, 0.28", "-56.4262, 140.142, -36.4281, 0.55", "-57.6603, 142.799, -36.5161, 0.28", "-58.2254, 144.234, -36.6465, 0.55", "-59.0203, 146.756, -36.9689, 0.28", "-59.8394, 150.054, -37.6415, 0.83", "-60.4741, 153.304, -38.4776, 0.28", "-60.6974, 155.056, -38.9264, 0.55", "-60.923, 157.3, -39.5093, 0.28", "-61.1653, 159.846, -40.1586, 2.22", "-61.5756, 164.555, -41.3077, 0.28", "-61.6691, 165.342, -41.4853, 0.55", "-62.3733, 169.279, -42.4464, 0.28", "-62.7879, 171.126, -43.0074, 0.83", "-63.8346, 174.625, -44.1984, 0.28", "-64.4473, 176.286, -44.7965, 0.83", "-65.7671, 179.547, -46.0022, 0.28", "-66.7089, 181.657, -46.8261, 0.83", "-68.3329, 184.853, -48.2448, 0.28", "-69.3107, 186.807, -49.1189, 1.38", "-70.7651, 189.797, -50.4054, 0.28", "-71.4326, 191.19, -50.9512, 0.55", "-71.9478, 192.342, -51.3229, 0.55", "-73.2763, 195.435, -52.2594, 0.28", "-73.4677, 195.898, -52.3696, 0.55", "-74.0457, 197.43, -52.732, 0.28", "-74.2853, 198.2, -52.8357, 0.55", "-75.1335, 201.101, -53.0632, 0.28", "-75.3416, 201.879, -53.105, 0.55", "-76.3097, 205.904, -53.1584, 0.28", "-76.6612, 207.322, -53.1773, 0.55", "-77.9552, 212.631, -53.261, 0.28", "-78.1226, 213.419, -53.2498, 0.83" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-19.6723, -7.42124, 44.098, 1.11", "-21.0903, -6.34591, 44.4152, 1.11", "-23.6011, -4.24322, 45.0083, 0.83", "-25.4416, -2.55788, 45.4338, 0.83", "-28.0685, -0.231805, 46.1586, 1.11", "-32.0025, 2.99197, 47.2947, 0.83", "-33.0611, 3.80694, 47.6543, 0.55", "-34.7929, 5.02659, 48.4288, 0.83", "-37.0624, 6.43239, 49.6235, 0.83", "-40.2582, 8.12883, 51.4352, 1.11", "-41.9265, 8.89458, 52.4227, 0.83", "-45.1567, 10.2489, 54.4043, 1.11", "-48.7528, 11.7782, 56.65, 0.83", "-50.6713, 12.5053, 57.8411, 0.83", "-52.085, 13.0295, 58.7463, 0.83", "-53.32, 13.6254, 59.5065, 0.55", "-54.6918, 14.4605, 60.3517, 0.83", "-56.7134, 15.9335, 61.1449, 0.55", "-58.0353, 18.2064, 61.2686, 0.55", "-65.1927, 24.7948, 66.7569, 0.55", "-72.71, 30.5995, 72.6784, 0.55", "-82.0253, 35.0958, 77.0335, 0.55", "-91.6204, 39.4621, 80.8915, 0.55", "-101.115, 42.7693, 85.9288, 0.55", "-110.278, 46.2808, 91.4147, 0.55", "-119.223, 50.744, 96.5193, 0.55", "-128.633, 55.0639, 100.857, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-19.6723, -7.42124, 44.098, 1.11", "-21.9188, -8.63583, 46.2544, 1.11", "-24.9193, -9.93717, 49.3728, 0.83", "-26.1991, -10.247, 50.9058, 0.83", "-28.7784, -9.69837, 54.7496, 0.83", "-31.5633, -7.88634, 59.3427, 0.83", "-32.3843, -6.78909, 60.8526, 0.83", "-33.7764, -4.58173, 62.9532, 0.83", "-35.8834, -0.741305, 65.6429, 0.83", "-38.0929, 3.99921, 68.2949, 0.83", "-39.2178, 6.68497, 69.4832, 0.83", "-41.463, 12.3496, 71.5347, 0.83", "-43.1496, 16.5581, 72.9278, 0.55", "-44.0917, 18.6122, 73.5158, 0.55", "-45.4403, 21.0101, 74.1091, 0.55", "-47.0122, 23.5966, 74.5147, 0.55", "-48.7095, 26.0178, 74.8941, 0.55", "-57.8008, 34.0775, 82.261, 0.55", "-65.1033, 41.1308, 92.207, 0.55", "-73.3457, 45.3011, 103.069, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-43.1807, -49.7752, -43.3199, 0.28", "-43.6484, -48.9286, -43.9321, 0.28", "-43.9687, -48.3489, -44.3514, 0.55", "-44.4963, -47.3938, -45.0421, 0.28", "-44.9961, -46.4891, -45.6963, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-43.1807, -49.7752, -43.3199, 0.28", "-44.686, -50.9426, -43.9647, 0.28", "-45.1976, -51.3672, -44.1961, 0.55", "-47.083, -53.0148, -44.8061, 0.28", "-48.2869, -54.1886, -45.2383, 0.83", "-49.7731, -55.7951, -45.9034, 0.28", "-50.6662, -56.8713, -46.4199, 0.55", "-51.2819, -57.6945, -46.8542, 0.28", "-52.89, -60.1619, -48.3092, 2.77", "-55.0387, -63.9066, -50.7194, 0.28", "-56.0859, -65.9049, -52.1012, 0.83", "-57.1892, -68.3627, -53.8368, 0.28", "-57.6287, -69.5621, -54.6477, 0.55", "-58.4787, -72.1851, -56.4365, 0.28", "-58.7658, -73.0516, -57.0923, 0.55", "-59.0626, -73.8499, -57.6589, 0.28", "-59.9189, -75.653, -58.7708, 0.83", "-61.1888, -77.6674, -59.8827, 0.28", "-62.4917, -79.2929, -60.7224, 0.83", "-65.2076, -81.9064, -61.9752, 0.55", "-66.4923, -82.9366, -62.4255, 0.28", "-69.0684, -84.6818, -63.1322, 0.55", "-71.0765, -85.7736, -63.5624, 0.55", "-73.6649, -87.0189, -63.682, 0.28", "-75.862, -88.055, -63.4918, 0.83", "-77.7685, -88.9604, -63.1218, 0.55", "-79.4412, -89.7134, -62.756, 0.28", "-82.5703, -91.0742, -62.1624, 0.55", "-87.6686, -93.3936, -61.345, 0.28", "-90.7843, -94.7827, -60.9661, 0.83", "-93.5659, -96.0708, -60.813, 0.28", "-95.4303, -96.9837, -60.8413, 0.55", "-98.7085, -98.6099, -61.0404, 0.28", "-99.982, -99.2662, -61.225, 0.83", "-101.092, -99.8152, -61.5765, 0.28", "-103.84, -101.151, -62.5282, 0.28", "-104.983, -101.708, -62.9984, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-54.4219, -13.8813, -35.5936, 0.28", "-56.1325, -16.2093, -37.6106, 0.28", "-58.3296, -19.207, -40.1025, 0.83", "-61.2496, -23.1106, -43.1859, 0.28", "-62.2342, -24.3355, -44.129, 0.55", "-63.9488, -26.341, -45.6039, 0.28", "-65.036, -27.568, -46.5157, 0.55", "-65.9891, -28.5691, -47.2579, 0.28", "-67.3151, -29.86, -48.123, 0.55", "-69.288, -31.6478, -49.2356, 0.28", "-71.0659, -33.2148, -50.1224, 0.55", "-74.2629, -35.9503, -51.6593, 0.28", "-75.7375, -37.192, -52.3469, 0.55", "-76.8882, -38.1717, -52.9022, 0.28", "-77.9253, -39.083, -53.3886, 0.55", "-81.2687, -42.0494, -54.9829, 0.28", "-82.924, -43.4808, -55.4536, 0.55", "-85.3963, -45.5859, -55.6677, 0.28", "-86.9278, -46.878, -55.6433, 0.55", "-88.2447, -48.0151, -55.9737, 0.28", "-90.5056, -50.0303, -57.1755, 0.83", "-95.5696, -54.814, -61.0464, 0.28", "-96.3364, -55.5668, -61.7337, 0.83", "-97.2441, -56.4646, -62.7115, 0.28", "-105.814, -64.4444, -71.4952, 0.55", "-107.363, -65.8649, -73.0989, 0.28", "-108.426, -66.8068, -74.1587, 0.55", "-109.979, -68.1081, -75.7023, 0.28", "-111.12, -69.0317, -76.7195, 0.55", "-114.945, -71.9519, -78.8613, 0.28", "-115.877, -72.5498, -78.7731, 0.55", "-118.701, -74.2556, -78.3356, 0.28", "-120.306, -75.1653, -78.0069, 0.83" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-54.4219, -13.8813, -35.5936, 0.28", "-57.1876, -12.292, -36.9239, 0.28", "-58.3163, -11.8111, -37.3784, 0.55", "-59.7587, -11.2791, -37.9308, 0.28", "-60.1337, -11.1568, -38.0567, 0.55", "-61.9013, -10.6179, -38.5949, 0.28", "-62.6545, -10.4079, -38.8039, 0.83", "-65.6636, -9.79377, -39.5101, 0.28", "-66.6803, -9.60528, -39.7221, 0.83", "-69.7544, -9.01927, -40.2173, 0.28", "-71.8796, -8.55182, -40.4819, 0.28", "-73.3621, -8.20074, -40.6232, 0.55", "-74.7875, -7.84217, -40.7403, 0.28", "-75.1218, -7.75422, -40.761, 0.55", "-77.1156, -7.21579, -40.809, 0.28", "-78.1042, -6.9146, -40.7812, 0.83" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-9.38809, 7.50967, -7.77221, 1.11", "-8.169, 7.27514, -9.30256, 1.11", "-6.89963, 7.34367, -11.3412, 1.38", "-4.35795, 8.25176, -16.9568, 2.49", "-3.55844, 9.05247, -19.8953, 2.49", "-3.1754, 9.70436, -21.7172, 1.11", "-2.71555, 10.4497, -23.491, 1.11", "-1.87801, 13.0264, -27.9527, 1.11", "-1.63043, 14.6376, -30.1715, 1.11", "-1.5833, 15.6336, -31.2377, 1.11", "-1.78564, 17.7592, -33.6517, 1.11", "-2.0307, 19.7727, -36.0041, 1.38", "-1.66303, 22.4117, -39.5533, 1.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.38809, 7.50967, -7.77221, 0.83", "-11.1881, 8.36979, -7.77525, 0.83" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "120.656, 60.4977, -3.5938, 0.28", "122.149, 60.2139, -3.6981, 0.28", "122.938, 60.1247, -3.80049, 0.55", "124.645, 59.932, -4.02178, 0.28", "126.192, 59.7573, -4.22235, 0.28", "127.006, 59.6653, -4.32796, 0.55", "128.268, 59.5229, -4.49148, 0.28", "129.255, 59.4714, -4.59074, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "120.656, 60.4977, -3.5938, 0.28", "122.17, 61.8547, -4.4115, 0.28", "122.774, 62.421, -4.72322, 1.11", "124.018, 63.6779, -5.35825, 0.28", "124.717, 64.3892, -5.72327, 0.55", "126.232, 65.9753, -6.54071, 0.28", "127.228, 67.078, -7.05642, 1.38", "128.181, 68.2333, -7.52671, 0.28", "128.688, 68.8787, -7.79289, 0.83", "130.463, 71.2389, -8.71035, 0.28", "131.176, 72.1897, -9.07186, 1.38", "132.546, 74.0844, -9.79808, 0.28", "133.879, 75.9855, -10.5069, 0.28", "135.444, 78.2013, -11.3736, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-19.1053, 5.4263, -15.1479, 1.38", "-22.0719, 6.73088, -14.1901, 1.38", "-27.3431, 9.05085, -12.9401, 1.38", "-30.5812, 10.739, -12.3399, 1.11", "-34.2222, 12.6547, -11.7367, 1.11", "-36.8006, 13.9062, -11.2492, 1.11", "-40.0705, 15.3785, -10.6908, 1.11", "-44.6524, 17.5291, -10.0963, 1.11", "-48.284, 19.2396, -9.90471, 1.11", "-50.3364, 20.1104, -9.76195, 1.11", "-54.8621, 21.8106, -9.30027, 1.11", "-58.3185, 23.1672, -8.85156, 2.49" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-19.1053, 5.4263, -15.1479, 1.38", "-25.3842, 2.93339, -14.8567, 1.38", "-27.2465, 2.25965, -15.0324, 1.38", "-30.6893, 1.21204, -16.1647, 1.38", "-35.2159, 0.061026, -18.3776, 1.66", "-37.6841, -0.374815, -19.709, 0.55", "-38.3036, -0.439005, -20.0598, 0.55", "-42.6072, -0.757365, -22.4081, 0.55", "-45.1875, -0.525105, -24.0963, 1.11", "-47.6347, 0.018085, -25.9318, 0.83", "-49.9249, 0.631873, -27.7765, 0.55", "-52.0281, 1.09631, -29.496, 0.55", "-53.5529, 1.37768, -30.6325, 0.55", "-56.577, 1.79268, -32.7405, 2.22", "-58.6752, 1.9444, -34.3301, 0.83", "-59.9534, 1.94765, -35.4462, 0.83", "-62.0328, 1.70041, -37.4935, 0.83", "-63.0517, 1.46793, -38.5514, 0.83", "-65.3975, 0.74746, -41.0778, 0.28", "-67.3097, -0.015175, -43.204, 0.83", "-68.9768, -0.739845, -44.9684, 0.55", "-70.4012, -1.39066, -46.3842, 0.55", "-72.6766, -2.42192, -48.4655, 0.83", "-73.8615, -2.98434, -49.4904, 0.28", "-75.1112, -3.59333, -50.496, 0.55", "-76.5303, -4.2954, -51.6662, 0.28", "-77.6506, -4.87312, -52.5561, 0.55", "-79.5936, -5.85448, -53.9404, 0.28", "-80.5206, -6.31788, -54.5351, 0.55", "-82.1878, -7.08846, -55.4765, 0.28", "-83.5041, -7.57856, -56.0821, 1.11", "-84.9896, -8.01822, -56.5813, 0.28", "-85.7315, -8.18102, -56.6841, 0.28", "-87.3021, -8.4662, -56.6203, 0.55", "-88.2399, -8.58628, -56.4871, 0.55", "-90.031, -8.72631, -56.0492, 0.28", "-90.5505, -8.74605, -55.9119, 0.55", "-91.9497, -8.70975, -55.6464, 0.28", "-92.1886, -8.6982, -55.6231, 0.55", "-93.6059, -8.58296, -55.7898, 0.28", "-94.1718, -8.52983, -55.9856, 0.28", "-94.8014, -8.46338, -56.3162, 0.55", "-96.1331, -8.35935, -57.1325, 0.28", "-96.841, -8.35003, -57.6246, 0.83", "-99.2916, -8.46587, -59.4935, 0.28", "-100.014, -8.56046, -60.0854, 0.55", "-101.84, -8.99428, -61.6271, 0.28", "-103.271, -9.50867, -62.8232, 0.55", "-105.132, -10.4294, -64.2793, 0.28", "-105.684, -10.7357, -64.663, 0.28", "-106.737, -11.3982, -65.2845, 0.83", "-108.381, -12.43, -66.1738, 0.28", "-109.471, -13.0856, -66.7166, 0.83", "-111.109, -13.9022, -67.4656, 0.28", "-112.264, -14.4565, -67.992, 0.55", "-113.621, -15.0471, -68.59, 0.55", "-114.921, -15.5474, -69.1567, 0.83", "-116.572, -16.0925, -69.8559, 1.38", "-118.385, -16.6335, -70.6791, 0.55", "-120.266, -17.2047, -71.6606, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.0906, 13.0974, 14.3805, 1.38", "18.9885, 15.2321, 13.8714, 1.38", "20.7702, 16.6141, 13.4731, 1.66", "22.908, 18.4055, 13.0582, 1.66", "26.7192, 21.4987, 12.4965, 1.11", "28.9083, 23.1288, 12.2931, 1.38", "30.4247, 24.1813, 12.2088, 1.11", "31.7341, 24.9395, 12.1891, 1.66", "34.1631, 26.325, 12.285, 1.38", "36.2683, 27.5628, 12.3114, 1.38", "38.4883, 28.8639, 12.2921, 1.38", "39.6924, 29.5641, 12.3259, 1.38", "41.6446, 30.5982, 12.3788, 0.55", "44.241, 31.8822, 12.3039, 1.11", "47.0505, 33.3449, 11.8152, 0.83", "48.5703, 34.4049, 11.3341, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "16.0906, 13.0974, 14.3805, 2.22", "17.863, 14.5131, 16.4525, 2.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "24.7447, -31.7602, 2.65167, 0.28", "34.0689, -43.5101, 2.65167, 0.28", "43.393, -55.26, 2.65167, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.66303, 22.4117, -39.5533, 1.11", "-4.20762, 28.946, -44.3568, 1.11", "-5.67333, 32.7099, -47.1237, 1.11", "-7.51771, 37.4461, -50.6054, 1.11", "-9.36493, 42.1897, -54.0925, 1.11", "-10.5269, 45.1735, -56.286, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-11.1881, 8.36979, -7.77525, 0.83", "-13.2301, 11.8893, -5.33466, 0.83", "-13.8824, 13.9175, -4.2082, 0.83", "-14.7144, 17.0508, -2.40181, 0.83", "-14.9559, 18.622, -1.50123, 0.83", "-15.1506, 21.7576, -0.154635, 0.83", "-15.1459, 24.8841, 0.949389, 0.83", "-15.1065, 27.5449, 1.89311, 0.83", "-14.8736, 31.0661, 2.97116, 0.55", "-14.426, 33.5877, 3.59784, 0.83", "-13.4434, 38.2247, 4.37036, 0.55", "-13.2519, 39.2755, 4.41112, 0.28", "-13.1, 40.7752, 4.30718, 0.55", "-13.1196, 43.2894, 3.98655, 0.28", "-13.2122, 44.1648, 3.84865, 0.55", "-14.0374, 48.121, 3.48832, 0.55", "-14.7616, 50.9994, 3.44434, 0.28", "-15.5564, 54.227, 3.50604, 0.55", "-15.9126, 55.8361, 3.57317, 0.28", "-16.4057, 58.5715, 3.72966, 0.55", "-16.7387, 60.9899, 3.85868, 0.28", "-16.8298, 62.2123, 3.93707, 0.55", "-16.8848, 64.7426, 4.08399, 0.55", "-16.9668, 66.5448, 4.07069, 0.55", "-17.0282, 68.2763, 3.94825, 0.55", "-17.1114, 71.2949, 3.36011, 0.28", "-17.1509, 73.0428, 2.85179, 0.83", "-17.2289, 75.6505, 1.99702, 0.83", "-17.359, 78.0139, 1.15072, 0.28", "-17.4234, 79.4578, 0.671859, 0.55", "-17.5275, 81.9032, 0.0646808, 0.28", "-17.7753, 84.2305, -0.545646, 0.83", "-18.0559, 86.2356, -1.14507, 0.28", "-18.29, 87.8324, -1.64037, 0.83", "-18.6777, 90.9267, -2.63008, 0.28", "-19.0487, 93.7597, -3.6189, 0.55", "-19.8925, 99.9107, -5.60546, 0.28", "-20.1432, 101.83, -6.21136, 0.28", "-20.3347, 104.12, -6.94748, 0.55", "-20.4553, 107.091, -7.8962, 0.28", "-20.5118, 108.934, -8.49334, 0.55", "-20.6062, 112.176, -9.49444, 0.28", "-20.6531, 114.234, -9.93389, 0.28", "-20.8809, 116.72, -10.5706, 0.55", "-21.187, 118.836, -11.2195, 0.28", "-21.623, 121.252, -12.0563, 0.55", "-22.138, 123.435, -12.9325, 0.55", "-22.6546, 125.051, -13.7612, 0.55", "-23.8076, 127.964, -15.3075, 0.28", "-24.6162, 129.685, -16.225, 0.55", "-25.1152, 130.711, -16.7973, 0.28", "-25.4711, 131.472, -17.2391, 0.55", "-26.1899, 133.167, -18.3259, 0.28", "-26.7423, 134.193, -19.0346, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.1881, 8.36979, -7.77525, 0.55", "-12.3727, 9.49765, -8.25099, 0.55", "-13.6323, 11.1629, -9.26638, 0.83", "-14.5219, 12.4514, -10.1023, 0.55", "-15.759, 14.2165, -11.2067, 0.55", "-17.8354, 17.2601, -12.9317, 0.83", "-19.4966, 19.9126, -14.4611, 0.83", "-20.8673, 22.5088, -15.9871, 0.28", "-21.8749, 24.5605, -17.238, 0.55", "-22.936, 26.5296, -18.5407, 0.83", "-24.2843, 28.3884, -19.8967, 0.83", "-26.4793, 30.2559, -21.4511, 0.28", "-26.985, 30.5366, -21.7267, 0.83", "-28.9927, 31.253, -22.6488, 0.55", "-31.5741, 31.9234, -23.8591, 0.55", "-33.9017, 32.3832, -24.8897, 0.55", "-36.0705, 32.6637, -25.8235, 0.83", "-38.6653, 32.8863, -26.9682, 0.28", "-39.9503, 33.0424, -27.574, 0.28", "-41.9829, 33.4611, -28.6112, 0.55", "-43.5192, 33.8732, -29.4456, 0.55", "-45.9917, 34.6297, -30.9254, 0.55", "-49.0106, 35.6158, -32.7685, 0.55", "-51.5813, 36.5686, -34.4947, 0.55", "-52.9108, 37.1462, -35.4864, 0.28", "-53.1961, 37.2908, -35.7372, 0.83", "-55.0769, 38.7122, -37.7211, 0.28", "-55.2854, 38.9369, -37.9766, 0.55", "-55.9018, 39.705, -38.7929, 0.28", "-56.3143, 40.1969, -39.4109, 0.55", "-57.6794, 41.7545, -41.4637, 0.28", "-58.942, 43.1571, -43.2863, 0.83", "-60.4976, 44.9646, -45.3123, 0.28", "-61.5581, 46.2672, -46.6081, 0.55", "-62.975, 48.0722, -48.2393, 0.28", "-63.4892, 48.7401, -48.8219, 0.83", "-65.5163, 51.3698, -50.9481, 0.55", "-67.2655, 53.5485, -52.7079, 0.55", "-68.4167, 55.1447, -53.8352, 0.55", "-69.8261, 57.2621, -55.1814, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-58.3185, 23.1672, -8.85156, 0.83", "-61.6722, 22.309, -8.90767, 0.83", "-63.1195, 21.991, -9.04613, 0.55", "-64.7498, 21.6763, -9.24675, 1.11", "-66.906, 21.2573, -9.64335, 0.83", "-69.0536, 20.8886, -10.0744, 0.83", "-72.755, 20.3673, -10.8347, 1.38", "-75.2548, 20.0635, -11.4227, 0.83", "-77.3854, 19.8153, -11.9902, 0.83", "-80.4674, 19.4836, -12.9195, 1.38", "-83.324, 19.2134, -13.9418, 0.55", "-84.8079, 19.0936, -14.5324, 0.55", "-86.6985, 18.9078, -15.2956, 1.38", "-90.5419, 18.4058, -16.8281, 0.83", "-92.5182, 18.1333, -17.5953, 1.66", "-96.5912, 17.5328, -19.2102, 0.28", "-98.4544, 17.2015, -20.011, 1.11", "-99.9762, 16.9006, -20.6822, 0.28", "-100.721, 16.7635, -21.0093, 0.55", "-102.36, 16.4216, -21.645, 0.28", "-104.792, 15.9456, -22.3965, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-58.3185, 23.1672, -8.85156, 0.83", "-60.6351, 26.0138, -9.25965, 0.83", "-61.5232, 27.0671, -9.43229, 0.83", "-63.7099, 29.3141, -9.8465, 1.11", "-65.2912, 30.7137, -10.1626, 0.83", "-67.6201, 32.5641, -10.6044, 1.11", "-69.6582, 34.0692, -10.9824, 0.83", "-71.0692, 34.9145, -11.3045, 0.83", "-73.8239, 36.3519, -11.8508, 1.94", "-75.9738, 37.3942, -12.1446, 1.11", "-77.3003, 37.9977, -12.2484, 0.83", "-78.7968, 38.6963, -12.3054, 1.38", "-81.7648, 40.005, -12.3433, 0.83", "-84.0291, 41.098, -12.3666, 0.83", "-87.209, 42.8044, -12.3726, 2.77", "-89.9626, 44.4412, -12.2284, 0.55", "-91.3219, 45.3206, -12.044, 0.55", "-93.2091, 46.589, -11.6585, 0.83", "-94.3345, 47.3752, -11.4179, 0.55", "-96.1222, 48.5902, -11.0922, 0.55", "-99.2068, 50.7625, -10.5656, 1.94", "-102.657, 53.1524, -9.74851, 0.83", "-103.795, 53.9179, -9.32187, 0.83", "-106.344, 55.4873, -7.90529, 1.11", "-107.916, 56.158, -6.64589, 0.55", "-109.59, 56.5649, -4.93992, 0.55", "-111.858, 56.7197, -2.32665, 0.83", "-115.1, 56.5428, 1.63549, 0.83", "-117.869, 56.2699, 5.23679, 2.77", "-121.781, 55.6834, 10.4844, 0.83", "-123.062, 55.4338, 12.1616, 1.11", "-124.075, 55.2118, 13.4132, 0.28", "-125.634, 54.9692, 15.045, 1.11", "-127.742, 54.8915, 16.6881, 0.28", "-129.182, 55.0809, 17.5457, 0.83", "-131.562, 55.8917, 18.5689, 0.28", "-132.278, 56.2478, 18.8293, 0.55", "-133.847, 57.3597, 19.3221, 0.55", "-135.666, 59.0581, 19.7382, 0.55", "-137.125, 60.6602, 19.8973, 0.55", "-138.448, 62.4631, 19.8797, 1.11", "-139.247, 63.762, 19.7579, 0.28", "-140.804, 66.5922, 19.4171, 1.66", "-141.482, 67.9267, 19.2162, 0.28", "-142.178, 69.3573, 18.9515, 0.55", "-143.269, 71.4199, 18.5214, 0.28", "-143.885, 72.3701, 18.3629, 0.83", "-144.638, 73.3459, 18.3661, 0.28", "-145.2, 74.0196, 18.3921, 0.28", "-146.373, 75.3404, 18.515, 0.55", "-147.576, 76.6349, 18.7515, 0.28", "-149.898, 78.8964, 19.447, 1.11", "-153.224, 82.0281, 20.5756, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "48.5703, 34.4049, 11.3341, 0.55", "49.3946, 34.7614, 10.2347, 0.55", "50.1398, 35.1328, 9.09479, 0.55", "50.876, 35.5223, 7.92534, 0.55", "53.0446, 36.6046, 4.60305, 1.11", "55.5545, 37.8702, 0.862819, 0.28", "56.525, 38.3193, -0.560576, 1.38", "58.5325, 39.1817, -3.69807, 0.28", "58.692, 39.2479, -3.96062, 0.83", "59.4024, 39.5545, -5.14725, 0.55", "60.4464, 40.107, -6.90424, 0.55", "62.13, 41.1193, -9.74051, 0.55", "63.1134, 41.7578, -11.356, 0.55", "63.9743, 42.424, -12.7598, 0.28", "64.4425, 42.8567, -13.5648, 0.55", "65.1581, 43.7433, -14.9059, 0.28", "65.5308, 44.3182, -15.6242, 0.55", "66.1484, 45.6301, -16.8109, 1.38", "67.1591, 48.0655, -18.5834, 0.28", "67.3983, 48.7072, -18.9802, 0.55", "67.9834, 50.4993, -19.9527, 0.28", "68.2008, 51.0815, -20.2739, 0.55", "68.8364, 52.5962, -21.1295, 0.28", "69.3198, 53.5581, -21.6329, 0.55", "69.9204, 54.5525, -22.0657, 0.28", "70.192, 54.9318, -22.2309, 0.83", "72.6863, 57.851, -23.4812, 0.28", "73.8305, 59.018, -24.0298, 1.11", "75.1916, 60.221, -24.6676, 0.28", "76.0563, 60.9254, -25.0905, 0.55", "77.1145, 61.7317, -25.5961, 0.28", "77.717, 62.1709, -25.8941, 0.55", "80.1414, 63.8812, -27.0809, 0.28", "80.6372, 64.2182, -27.3729, 0.55", "82.1399, 65.2451, -28.5638, 0.28", "82.6756, 65.6197, -29.037, 0.55", "83.3144, 66.1226, -29.6647, 0.28", "83.6063, 66.3863, -29.9655, 0.28", "83.7361, 66.518, -30.0924, 0.55", "85.3177, 68.1954, -31.5425, 0.28", "86.3616, 69.302, -32.4849, 1.38", "87.4198, 70.4049, -33.4968, 0.28", "87.833, 70.7847, -33.9196, 0.55", "88.425, 71.2794, -34.5794, 0.28", "89.0972, 71.7694, -35.3397, 0.55", "90.7025, 72.7418, -37.101, 0.28", "91.3034, 72.9919, -37.8452, 0.55", "92.9511, 73.4092, -39.9538, 0.28", "93.6216, 73.546, -40.8383, 0.83", "94.5589, 73.691, -42.1202, 0.28", "95.0971, 73.7337, -42.838, 0.55", "97.5299, 73.6403, -45.8642, 0.28", "98.1204, 73.5731, -46.5762, 1.11" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "48.5703, 34.4049, 11.3341, 0.28", "51.3064, 34.7676, 11.6696, 0.28", "53.8184, 35.0413, 12.1166, 0.55", "55.735, 35.2648, 12.5006, 0.83", "57.7209, 35.5177, 12.7792, 0.83", "59.6866, 35.7726, 12.9898, 0.28", "61.4413, 36.0135, 13.1596, 0.55", "63.2181, 36.2969, 13.3073, 0.28", "64.454, 36.525, 13.3674, 1.11", "67.4969, 37.1304, 13.3319, 0.28", "68.2223, 37.323, 13.2799, 0.28", "69.6227, 37.7406, 13.1008, 0.55", "72.0924, 38.5804, 12.6763, 0.28", "72.6003, 38.7756, 12.5715, 0.55", "74.5348, 39.6029, 12.335, 0.28", "75.8148, 40.2288, 12.2659, 0.83", "76.9069, 40.8165, 12.0813, 0.83", "78.1062, 41.4961, 11.7667, 0.28", "78.959, 42.0389, 11.457, 0.55", "81.1746, 43.595, 10.4953, 0.28", "82.6353, 44.7217, 9.81433, 0.83", "85.4784, 47.0489, 8.39896, 0.28", "86.0344, 47.5424, 8.11759, 0.83", "87.7776, 49.1303, 7.2551, 0.28", "88.3166, 49.6416, 6.99599, 0.83", "90.049, 51.3966, 6.05492, 0.28", "90.4102, 51.7933, 5.92396, 0.55", "91.1517, 52.6177, 5.80107, 0.28", "91.5184, 53.0299, 5.78528, 0.55", "92.7691, 54.3889, 5.91302, 0.28", "94.3996, 56.055, 6.23732, 0.83", "95.6248, 57.2507, 6.59596, 0.28", "96.3602, 57.9076, 6.88846, 0.55", "98.0041, 59.1381, 7.46455, 0.28", "98.5935, 59.4813, 7.65552, 0.83", "99.8821, 59.9806, 8.02298, 0.28", "100.855, 60.268, 8.36412, 0.55", "102.1, 60.5085, 8.59964, 0.28", "104.938, 60.9192, 8.88984, 1.94", "107.623, 61.2103, 9.02986, 0.28", "109.626, 61.3902, 9.10957, 0.28", "112.209, 61.5879, 9.15474, 0.55", "115.998, 61.8194, 9.21341, 0.28", "117.12, 61.9028, 9.22504, 1.66", "125.858, 64.3002, 9.17434, 1.66", "134.445, 66.7775, 7.69995, 1.66", "142.92, 69.6969, 6.45099, 1.66", "150.806, 73.5513, 4.33621, 1.66", "157.269, 78.5193, 0.531843, 1.66", "163.756, 82.9243, -3.90842, 1.66", "170.64, 88.0133, -6.66514, 1.66", "176.421, 93.9667, -10.0541, 1.66", "182.583, 100.29, -11.5422, 1.66", "189.148, 106.058, -13.5734, 1.66", "195.767, 111.876, -15.2518, 1.66", "202.121, 118.152, -15.9311, 1.66", "207.848, 124.976, -16.6426, 1.66", "212.458, 132.596, -16.6335, 1.66", "217.237, 140.025, -15.3971, 1.66", "221.421, 147.752, -13.9429, 1.66", "224.654, 155.973, -12.9852, 1.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "17.863, 14.5131, 16.4525, 2.22", "20.1262, 13.4799, 17.7833, 2.22", "21.3201, 13.3056, 19.0069, 0.83", "22.7852, 13.5848, 20.7957, 0.83", "23.838, 14.221, 23.2508, 0.83", "25.5048, 15.0749, 27.2249, 0.83", "26.3686, 15.4234, 29.1571, 1.38", "27.602, 15.8206, 31.888, 1.66", "28.8266, 16.1825, 34.7379, 2.22", "33.106, 17.0562, 44.5022, 0.83", "33.9274, 17.077, 46.2847, 1.11", "34.6515, 16.7157, 47.649, 0.55", "35.4782, 16.0912, 49.0139, 0.55", "36.8313, 14.6328, 50.9228, 0.55", "38.1981, 12.7106, 52.5647, 0.83", "38.6649, 11.6267, 52.7309, 0.55", "40.0806, 7.15779, 53.5438, 0.55", "43.8883, 4.33344, 62.1347, 0.55", "47.3196, 3.33985, 71.2904, 0.55", "51.1005, 3.90749, 80.3429, 0.55", "54.356, 3.6822, 89.6143, 0.55", "56.5947, 1.38456, 98.8952, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "17.863, 14.5131, 16.4525, 1.38", "23.3459, 14.0878, 18.4824, 1.38", "28.2582, 14.0977, 20.0174, 0.83", "31.9859, 13.9999, 21.081, 1.11", "38.5299, 13.6193, 22.9149, 0.83", "44.5069, 13.0783, 24.5959, 1.11", "49.6874, 12.551, 25.9052, 0.83", "54.0214, 11.9259, 26.7047, 0.83", "61.2204, 10.7392, 27.6523, 1.11", "63.911, 10.2006, 27.9418, 0.83", "66.4631, 9.45734, 28.1751, 1.11", "71.434, 7.86721, 28.4296, 0.83", "77.8049, 5.5387, 28.7294, 1.11", "79.6603, 4.82753, 28.8073, 0.83", "81.2168, 4.32433, 28.9692, 0.83", "83.4292, 3.67654, 29.3512, 0.83", "87.8592, 2.4425, 30.477, 1.38", "91.3433, 1.40239, 31.7175, 0.83", "96.895, -0.253525, 34.0186, 0.83", "102.678, -1.84794, 36.4682, 0.55", "103.042, -1.93189, 36.6193, 0.83", "105.809, -2.52262, 37.7119, 0.83", "108.709, -3.15961, 38.646, 0.55", "110.395, -3.53576, 39.0217, 0.55", "112.879, -3.99803, 39.3631, 0.55", "116.617, -4.56776, 39.6259, 0.55", "120.243, -5.03589, 39.9196, 0.55", "125.513, -5.58018, 40.3869, 0.55", "129.364, -5.84107, 40.7395, 0.83", "134.919, -6.05244, 41.256, 0.83", "139.541, -6.22607, 41.6945, 0.55", "141.96, -6.17298, 41.9147, 0.55", "143.527, -6.00009, 42.0499, 0.55", "146.998, -5.3114, 42.438, 1.38", "149.775, -4.62184, 42.6672, 0.55", "151.358, -4.1966, 42.7393, 0.55", "156.542, -2.88178, 42.8475, 0.55", "161.202, -1.64896, 42.8469, 0.55", "165.383, -0.645965, 42.8009, 0.83", "170.0, 0.34734, 42.7009, 0.55", "173.916, 0.982987, 42.5804, 1.11", "177.544, 1.34828, 42.4975, 0.55", "179.538, 1.38563, 42.4635, 0.55", "182.43, 1.16066, 42.4127, 0.55", "185.042, 0.61694, 42.4492, 0.55", "188.446, -0.689345, 42.8053, 0.83", "191.305, -2.05579, 43.1998, 0.55", "194.477, -3.84476, 43.6503, 0.55", "198.723, -6.58799, 44.3078, 0.55", "200.983, -8.2394, 44.6957, 0.83", "204.128, -10.8813, 45.278, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-10.5269, 45.1735, -56.286, 0.83", "-10.061, 48.6198, -58.6612, 0.83", "-9.9087, 51.9841, -60.8221, 0.83", "-9.84119, 54.5219, -62.1533, 0.55", "-9.73841, 57.0641, -63.3001, 0.83", "-9.67803, 59.3337, -64.244, 0.55", "-9.67288, 61.5875, -65.1366, 0.55", "-9.84398, 63.6863, -65.8872, 0.55", "-10.0835, 67.1465, -66.8553, 0.55", "-10.2385, 69.2126, -67.396, 0.83", "-10.3684, 72.1757, -68.1026, 0.83", "-10.5152, 74.5932, -68.6561, 0.83", "-10.7131, 76.6919, -69.1471, 0.83", "-11.0865, 80.4433, -70.0781, 0.83", "-11.5273, 83.9489, -71.0295, 0.83", "-11.7757, 86.3076, -71.6992, 0.55", "-11.8613, 88.4905, -72.3186, 0.55", "-11.7565, 90.6471, -72.9537, 0.55", "-11.3068, 94.3078, -74.1152, 0.83", "-11.0183, 95.6586, -74.5632, 0.83", "-10.2818, 98.1817, -75.4243, 0.55", "-9.46017, 100.855, -76.3491, 0.55", "-8.72934, 103.132, -77.0933, 0.55", "-7.94578, 105.641, -77.8784, 0.55", "-6.98767, 109.082, -78.8821, 0.55", "-6.46407, 111.007, -79.5016, 0.55", "-5.93077, 113.059, -80.2058, 0.83", "-5.4554, 114.885, -80.8868, 0.83", "-4.80385, 117.481, -81.9584, 0.83", "-4.14814, 119.808, -82.9724, 0.83", "-3.40536, 122.488, -84.1725, 0.83", "-2.54348, 125.247, -85.3957, 0.55", "-1.59855, 128.094, -86.6131, 0.55", "-0.692185, 130.806, -87.6916, 0.55", "7.8702E-4, 133.19, -88.5266, 0.55", "0.595693, 135.308, -89.2128, 0.55", "1.39293, 138.254, -90.0465, 0.55", "2.01439, 140.636, -90.6537, 0.55", "2.77774, 143.405, -91.3017, 0.55", "3.59943, 146.716, -91.9882, 0.55", "4.0169, 148.84, -92.4162, 0.55", "4.30582, 150.48, -92.7342, 0.55", "4.6213, 152.871, -93.1745, 0.55", "5.35747, 158.135, -94.1098, 0.55", "5.69456, 160.401, -94.4937, 0.55", "6.14533, 162.854, -94.9003, 0.55", "6.65074, 165.535, -95.3287, 0.55", "6.9579, 166.95, -95.5927, 0.28", "7.53338, 169.113, -96.0765, 0.83", "8.17975, 171.404, -96.589, 0.55", "9.00419, 173.861, -97.1655, 0.55", "9.59258, 175.422, -97.5697, 0.55", "10.5266, 177.941, -98.2813, 0.55", "10.9483, 179.114, -98.6363, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-10.5269, 45.1735, -56.286, 0.83", "-10.0894, 46.9597, -57.2439, 0.83", "-9.62542, 49.7635, -58.8167, 0.83", "-9.44716, 51.2021, -59.5759, 0.28", "-9.34325, 51.786, -59.8736, 0.55", "-8.61628, 54.5145, -61.2998, 0.28", "-8.1992, 56.0526, -62.1358, 0.83", "-7.95604, 57.4645, -63.1206, 0.83", "-7.67412, 60.051, -65.1155, 0.55", "-7.38512, 61.7399, -66.5689, 0.55", "-6.79279, 64.1679, -68.8715, 0.55", "-6.31702, 66.0787, -70.8192, 0.55", "-5.30807, 70.2803, -75.3876, 0.55", "-4.90249, 71.8394, -77.2264, 0.55", "-4.12926, 75.2802, -81.4091, 0.55", "-3.55475, 78.405, -85.068, 0.55", "-3.25695, 80.3095, -87.1833, 0.55", "-2.943, 81.5356, -88.4221, 0.55", "-2.15923, 83.9332, -90.6338, 0.55", "-1.37608, 86.7899, -93.1593, 0.55", "-0.958185, 88.7717, -94.6513, 0.55", "-0.643876, 90.1831, -95.5929, 0.28", "0.469413, 93.8459, -97.9337, 0.55", "1.1246, 96.0886, -99.4168, 0.28", "1.40537, 97.1812, -100.102, 0.83", "1.89814, 99.2037, -101.336, 0.83", "2.24784, 101.149, -102.571, 0.55", "2.68365, 104.126, -104.635, 0.55", "2.66617, 106.417, -106.385, 0.55", "2.56092, 108.533, -108.031, 0.55", "2.50537, 109.889, -109.16, 0.28", "2.47415, 111.711, -110.839, 0.55", "2.58712, 114.1, -113.256, 0.28", "2.60869, 116.693, -115.911, 0.55", "2.70749, 118.127, -117.428, 0.55", "2.90837, 119.838, -119.44, 0.55", "3.20331, 121.344, -121.312, 0.55", "3.72048, 123.13, -123.35, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-69.8261, 57.2621, -55.1814, 0.28", "-74.915, 56.2886, -53.4002, 0.28", "-76.6927, 55.9325, -52.8825, 0.55", "-78.6175, 55.618, -52.4061, 0.55", "-80.4255, 55.3227, -51.9586, 0.55", "-82.3311, 55.0114, -51.4869, 0.55", "-84.1205, 54.719, -51.044, 0.83", "-85.5154, 54.4701, -51.0149, 0.28", "-87.0391, 54.2381, -50.8569, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-69.8261, 57.2621, -55.1814, 0.55", "-69.9282, 59.5549, -55.7971, 0.55", "-70.1122, 61.0365, -56.3152, 0.28", "-70.3576, 62.9245, -56.9859, 0.55", "-70.7268, 65.025, -57.6889, 0.55", "-70.9379, 65.8937, -57.955, 0.55", "-72.0347, 70.4078, -59.3378, 0.83", "-72.5325, 72.1688, -59.8942, 0.28", "-73.4331, 75.1364, -60.8322, 0.55", "-74.274, 77.6157, -61.579, 0.55", "-75.1027, 79.5576, -62.1465, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-153.224, 82.0281, 20.5756, 0.83", "-153.169, 82.6803, 20.5131, 0.83", "-153.088, 84.543, 20.4992, 0.83", "-153.041, 86.1844, 20.8807, 0.55", "-153.035, 88.2502, 21.4874, 0.55", "-153.101, 90.9592, 22.346, 0.55", "-153.131, 91.8556, 22.6323, 0.55", "-153.158, 93.3006, 23.1728, 1.11", "-153.253, 96.9067, 24.8875, 0.28", "-153.307, 97.5306, 25.2511, 0.55", "-153.427, 98.4951, 25.9181, 0.28", "-153.532, 99.0553, 26.2636, 0.55", "-154.204, 105.831, 29.6046, 0.55", "-155.841, 112.726, 32.2784, 0.55", "-157.876, 119.269, 35.5493, 0.55", "-161.508, 124.694, 39.5086, 0.55", "-164.8, 130.359, 43.4129, 0.55", "-168.734, 135.906, 46.8671, 0.55", "-172.445, 141.704, 50.1322, 0.55", "-176.557, 146.73, 54.1692, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-153.224, 82.0281, 20.5756, 0.55", "-154.772, 84.1158, 20.3865, 0.55", "-156.038, 85.3919, 20.3704, 0.55", "-157.214, 86.3001, 20.4902, 0.28", "-157.98, 86.7861, 20.6775, 0.55", "-159.78, 87.6581, 21.2559, 0.28", "-161.233, 88.1597, 21.851, 0.55", "-164.601, 88.965, 23.4037, 0.55", "-166.931, 89.3469, 24.631, 0.55", "-169.265, 89.4772, 26.0004, 1.11", "-171.186, 89.3621, 27.2642, 0.28", "-172.954, 88.9307, 28.6073, 0.55", "-180.478, 91.7562, 33.2261, 0.55", "-187.917, 93.8808, 38.3425, 0.55", "-195.61, 96.0843, 43.0312, 0.55", "-202.664, 98.2823, 48.6384, 0.55", "-210.034, 101.347, 53.3463, 0.55", "-218.591, 103.074, 56.484, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "56.5947, 1.38456, 98.8952, 0.83", "61.29, -0.040345, 110.31, 0.83", "66.4092, -3.64606, 121.017, 0.83", "72.0426, -6.50668, 131.702, 0.83", "76.6962, -8.27676, 143.083, 0.83", "80.1328, -12.9218, 154.042, 0.83", "81.9806, -16.9325, 165.629, 0.83", "81.3577, -23.3413, 176.17, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "56.5947, 1.38456, 98.8952, 0.55", "61.5997, -0.232985, 106.648, 0.83", "65.309, -2.19543, 115.025, 0.83", "69.6976, -4.46117, 122.982, 0.83", "74.1377, -7.71418, 130.543, 0.83", "79.2437, -10.5235, 137.86, 0.83", "82.8963, -14.8438, 145.291, 0.83", "86.3634, -19.5871, 152.542, 0.83", "89.138, -23.6254, 160.507, 0.83", "93.0057, -28.8509, 167.179, 0.83", "97.3223, -33.1181, 174.271, 0.83", "100.966, -37.9828, 181.346, 0.83", "105.768, -41.937, 188.309, 0.83", "110.443, -46.5893, 194.896, 0.83", "115.185, -51.6789, 201.08, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "204.128, -10.8813, 45.278, 0.55", "205.272, -13.3009, 50.041, 0.55", "205.526, -13.8363, 51.0948, 0.28", "205.715, -14.2363, 51.8822, 0.55", "208.51, -19.87, 58.3578, 0.55", "211.657, -25.2385, 64.9091, 0.55", "213.76, -30.6947, 71.7929, 0.55", "217.659, -36.1517, 77.8446, 0.55", "221.262, -40.2502, 85.0896, 0.55", "224.37, -44.1792, 92.6546, 0.55", "227.722, -49.0077, 99.5379, 0.55", "230.681, -52.4511, 107.406, 0.55", "235.184, -55.9069, 114.498, 0.55", "240.193, -57.5244, 121.934, 0.55", "245.615, -58.068, 129.242, 0.55", "252.004, -57.9922, 135.745, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "204.128, -10.8813, 45.278, 0.28", "204.978, -11.3137, 45.7943, 0.28", "205.814, -11.7386, 46.3018, 0.55", "206.992, -12.3379, 47.0174, 0.28", "208.029, -12.8651, 47.6469, 0.83", "214.304, -15.5513, 51.138, 0.83", "219.905, -18.9513, 55.0846, 0.83", "225.93, -22.0587, 58.6462, 0.83", "231.695, -24.0885, 63.2875, 0.83", "237.258, -26.1246, 68.1654, 0.83", "242.149, -28.8377, 73.3989, 0.83", "247.045, -31.5875, 78.6065, 0.83", "252.061, -34.3998, 83.6644, 0.83", "256.564, -37.8605, 88.7769, 0.83", "260.557, -40.5208, 94.7444, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "10.9483, 179.114, -98.6363, 0.28", "11.7487, 181.058, -98.8577, 0.28", "12.3688, 182.926, -99.1579, 0.83", "12.6485, 183.928, -99.3671, 0.28", "12.8716, 184.949, -99.5953, 0.28", "13.1466, 186.487, -99.9399, 0.55", "13.3919, 187.632, -100.2, 0.28", "13.6398, 188.925, -100.522, 0.83", "14.0124, 190.731, -100.994, 0.28", "14.3442, 192.042, -101.376, 0.28", "14.8102, 193.479, -101.795, 0.28", "15.5796, 195.187, -102.157, 0.55", "16.3781, 196.533, -102.353, 0.28", "17.2435, 197.657, -102.418, 0.55", "18.474, 198.89, -102.355, 0.28", "20.8799, 200.776, -101.717, 0.55", "23.7457, 202.668, -100.383, 0.28", "25.0582, 203.516, -99.5229, 0.55", "25.9715, 204.027, -98.8471, 0.28", "26.5769, 204.328, -98.3314, 0.28", "29.3221, 205.56, -95.596, 0.55", "30.304, 205.965, -94.4742, 0.28", "31.4864, 206.775, -93.0604, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "10.9483, 179.114, -98.6363, 0.28", "10.1626, 180.518, -99.9069, 0.28", "9.72188, 181.195, -100.528, 0.83", "8.79796, 182.548, -101.741, 0.28", "7.76033, 184.147, -103.141, 1.11", "5.96275, 187.335, -105.772, 0.28", "5.33638, 188.575, -106.794, 0.55", "4.61561, 190.007, -108.132, 0.28", "4.39786, 190.501, -108.62, 0.28", "4.0355, 191.279, -109.472, 0.55", "3.35568, 192.514, -110.736, 0.28", "2.7902, 193.395, -111.574, 0.55", "1.30425, 195.527, -113.655, 0.28", "0.741343, 196.284, -114.385, 0.83", "-0.899497, 198.445, -116.461, 0.28", "-2.40626, 200.488, -118.377, 0.55", "-3.13529, 201.562, -119.332, 0.28", "-3.53108, 202.319, -119.882, 0.55", "-4.32021, 204.56, -121.211, 0.28", "-4.7228, 206.375, -122.054, 0.55", "-4.75733, 207.908, -122.509, 0.28", "-4.5717, 209.175, -122.759, 0.55", "-4.13342, 211.101, -123.023, 0.28", "-4.12547, 211.145, -123.03, 0.55", "-3.98768, 212.972, -123.267, 0.28", "-3.99217, 213.989, -123.363, 0.55", "-4.21591, 215.687, -123.622, 0.28", "-4.53374, 216.918, -123.995, 0.55", "-5.86169, 219.693, -125.686, 0.28", "-6.31866, 220.376, -126.248, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "3.72048, 123.13, -123.35, 0.28", "4.41813, 124.012, -124.93, 0.28", "5.01025, 124.823, -126.267, 0.55", "6.20434, 126.65, -129.032, 0.55", "6.63895, 127.459, -130.159, 0.28", "6.92643, 128.017, -130.841, 0.55", "7.39231, 128.989, -131.991, 0.28", "7.78922, 130.009, -133.075, 0.55", "7.9469, 130.54, -133.586, 0.55", "8.20082, 131.596, -134.465, 0.28", "8.48527, 133.004, -135.736, 0.55", "8.77089, 134.375, -137.128, 0.28", "8.96201, 135.034, -137.927, 0.55", "9.15559, 135.64, -138.721, 0.55", "9.53918, 136.567, -140.454, 0.55", "9.85708, 137.084, -141.84, 0.28", "9.89228, 137.138, -142.011, 0.83", "10.2266, 137.634, -143.527, 0.28", "10.5483, 138.148, -144.938, 0.55", "11.2824, 139.627, -148.161, 0.28", "11.7251, 140.588, -149.856, 0.55", "12.263, 141.717, -151.651, 0.28", "12.7778, 142.592, -152.967, 0.55", "13.403, 143.503, -154.235, 0.55", "14.1849, 144.581, -155.542, 0.28", "14.6515, 145.235, -156.167, 0.55", "15.7781, 146.582, -157.484, 0.55", "17.5292, 148.424, -159.626, 0.55", "18.554, 149.453, -160.979, 0.55", "19.2002, 150.061, -161.898, 0.55", "19.988, 150.822, -163.069, 0.28", "20.7706, 151.764, -164.363, 0.55", "21.7755, 153.268, -166.057, 0.55", "22.0823, 153.752, -166.529, 0.55", "22.5412, 154.527, -167.221, 0.55", "23.198, 155.66, -168.175, 0.55", "23.8346, 156.772, -169.008, 0.55", "24.5794, 158.121, -169.919, 0.55", "25.8734, 160.409, -171.33, 0.55", "26.3839, 161.375, -171.912, 0.28", "26.903, 162.383, -172.508, 0.55", "27.4845, 163.438, -173.132, 0.55", "27.993, 164.29, -173.619, 0.28", "28.5895, 165.365, -174.252, 0.55", "29.0034, 166.2, -174.782, 0.55", "29.6836, 167.558, -175.733, 0.55", "30.1608, 168.686, -176.527, 0.28", "30.4387, 169.462, -177.071, 0.28", "30.963, 171.027, -178.189, 0.55", "31.4792, 172.615, -179.312, 0.28", "31.8678, 173.837, -180.164, 0.55", "32.4019, 175.757, -181.406, 0.28", "32.5722, 176.428, -181.833, 0.55", "32.7775, 177.282, -182.333, 0.28", "33.0365, 178.25, -182.888, 0.28", "33.2537, 179.023, -183.276, 0.55", "33.3719, 179.648, -183.6, 0.28", "33.5818, 180.5, -184.113, 0.28", "33.7709, 181.264, -184.574, 0.55", "34.042, 182.914, -185.517, 0.28", "34.0393, 184.328, -186.365, 0.55", "33.9329, 185.434, -187.032, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "3.72048, 123.13, -123.35, 0.28", "4.56559, 124.632, -123.865, 0.28", "5.17765, 125.79, -124.242, 0.83", "5.95753, 127.488, -124.779, 0.55", "6.88754, 129.767, -125.362, 0.55", "7.93461, 132.718, -125.838, 0.55", "8.44557, 134.299, -125.989, 0.28", "8.95686, 135.754, -126.104, 0.55", "9.54298, 137.45, -126.188, 0.55", "10.444, 140.689, -126.157, 0.55", "11.0004, 143.447, -125.927, 0.28", "11.1771, 145.242, -125.61, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-75.1027, 79.5576, -62.1465, 0.28", "-76.4443, 79.2824, -62.7078, 0.28", "-77.243, 79.1185, -63.042, 0.28", "-78.405, 78.8801, -63.5282, 0.28", "-79.8442, 78.5848, -64.1304, 0.55", "-82.0498, 78.1324, -65.0532, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-75.1027, 79.5576, -62.1465, 0.28", "-75.8524, 80.1158, -63.9382, 0.28", "-76.4968, 80.5803, -65.9102, 0.55", "-76.8246, 80.7849, -67.1118, 0.55", "-77.0904, 80.9772, -68.4395, 0.28", "-77.6405, 81.4785, -71.8049, 0.83", "-78.3352, 82.1426, -76.1582, 0.28", "-78.4236, 82.2128, -76.888, 0.55", "-78.554, 82.3752, -79.3151, 0.28", "-78.5835, 82.4311, -81.3731, 0.55", "-78.5546, 82.4325, -82.2164, 0.55", "-78.3532, 82.4035, -84.1642, 0.28" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-176.557, 146.73, 54.1692, 0.83", "-178.742, 153.354, 56.9221, 0.83", "-181.472, 160.136, 58.5017, 0.83", "-183.076, 167.381, 59.1335, 0.83", "-183.448, 174.729, 60.3042, 0.83", "-183.407, 181.957, 62.1668, 0.83", "-182.02, 188.848, 64.7411, 0.83", "-180.319, 195.889, 66.5712, 0.83", "-177.738, 202.878, 66.6367, 0.83", "-174.367, 209.521, 66.251, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-176.557, 146.73, 54.1692, 0.55", "-180.031, 154.181, 60.2252, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-218.591, 103.074, 56.484, 0.83", "-226.866, 106.071, 61.1697, 0.83", "-235.047, 110.604, 64.5535, 0.83", "-242.965, 115.95, 67.2493, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-218.591, 103.074, 56.484, 0.55", "-226.356, 104.757, 60.0056, 0.83", "-233.962, 108.219, 62.3204, 0.83", "-241.194, 112.48, 64.4343, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "81.3577, -23.3413, 176.17, 0.55", "84.2079, -26.1552, 181.959, 0.55", "86.9103, -28.246, 188.127, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "81.3577, -23.3413, 176.17, 0.28", "83.6012, -25.8384, 186.213, 0.55", "84.9291, -27.7401, 196.551, 0.55", "85.1493, -28.1541, 207.135, 0.55", "85.1411, -27.401, 217.694, 0.55", "87.1413, -27.5134, 228.097, 0.55", "90.2586, -27.2709, 238.22, 0.55", "91.8968, -25.6477, 248.546, 0.55", "93.2909, -24.2786, 258.947, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "115.185, -51.6789, 201.08, 0.55", "116.654, -55.8671, 211.018, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "115.185, -51.6789, 201.08, 0.28", "120.587, -55.6311, 207.783, 0.55", "125.758, -59.3025, 214.829, 0.55", "130.798, -61.4529, 222.594, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "252.004, -57.9922, 135.745, 0.83", "256.602, -60.8353, 145.394, 0.83", "258.978, -63.9586, 155.72, 0.83", "260.352, -66.335, 166.431, 0.83", "261.043, -68.2239, 177.31, 0.83", "261.95, -72.0203, 187.622, 0.83", "263.802, -75.697, 197.858, 0.83", "266.09, -78.5356, 208.291, 0.83", "268.723, -81.7223, 218.535, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "252.004, -57.9922, 135.745, 0.55", "255.196, -60.5019, 142.126, 0.83", "258.334, -63.3626, 148.374, 0.83", "261.792, -66.9276, 154.051, 0.83", "264.456, -70.7461, 159.967, 0.83", "267.945, -73.951, 165.847, 0.83", "271.376, -77.9232, 171.251, 0.83", "275.688, -82.1514, 175.765, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "260.557, -40.5208, 94.7444, 0.55", "265.491, -43.3196, 98.7994, 0.55", "270.368, -46.7041, 102.43, 0.55", "274.403, -50.2214, 106.873, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "260.557, -40.5208, 94.7444, 0.28", "267.002, -44.6897, 98.8182, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "11.1771, 145.242, -125.61, 0.28", "11.7163, 147.318, -126.113, 0.28", "12.0055, 148.717, -126.241, 0.55", "12.1146, 149.491, -126.268, 0.28", "12.149, 149.965, -126.282, 0.55", "12.2058, 151.427, -126.217, 0.28", "12.2718, 152.383, -126.224, 0.55", "12.5144, 154.261, -126.043, 0.28", "12.5831, 154.895, -125.982, 0.55", "12.6987, 157.05, -125.81, 0.28", "12.6277, 158.438, -125.807, 0.55", "12.2554, 160.987, -125.867, 0.28", "11.9383, 162.859, -125.967, 0.55", "11.7563, 164.163, -126.14, 0.28", "11.7133, 164.457, -126.185, 0.55", "10.9558, 166.585, -126.627, 0.28", "10.3334, 167.798, -126.974, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "11.1771, 145.242, -125.61, 0.28", "12.6855, 144.551, -126.577, 0.28", "12.8627, 144.487, -126.686, 0.55", "14.2448, 144.178, -127.472, 0.28", "15.749, 143.842, -128.327, 0.55", "18.5506, 143.216, -129.92, 0.28", "19.9042, 142.914, -130.689, 0.28", "20.5702, 142.716, -131.103, 0.28", "21.8612, 142.414, -131.956, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-78.3532, 82.4035, -84.1642, 0.28", "-76.8598, 83.3897, -85.7935, 0.28", "-75.9074, 84.0186, -86.8326, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-78.3532, 82.4035, -84.1642, 0.55", "-79.1927, 83.2818, -85.4167, 0.55", "-81.2655, 85.3921, -88.648, 0.55", "-82.2747, 86.4163, -90.4159, 0.55", "-83.0628, 87.1456, -91.7782, 0.28", "-83.9159, 87.8763, -93.3546, 0.55", "-85.134, 88.8374, -95.7565, 0.55", "-85.7758, 89.3223, -97.0729, 0.55", "-86.6538, 89.9452, -98.7755, 0.28", "-87.6269, 90.5617, -100.974, 0.55", "-88.7995, 91.1593, -103.76, 0.28", "-89.5631, 91.4454, -105.558, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "86.9103, -28.246, 188.127, 0.83", "90.2442, -31.6902, 197.724, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "86.9103, -28.246, 188.127, 0.55", "91.1637, -31.996, 196.922, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_64", "dend_61", "dend_58", "dend_55", "dend_35", "dend_32", "dend_21", "dend_0", "dend_69", "dend_68", "dend_66", "dend_65", "dend_63", "dend_62", "dend_60", "dend_59", "dend_57", "dend_56", "dend_45", "dend_36", "dend_34", "dend_33", "dend_23", "dend_22", "dend_18", "dend_1", "dend_46", "dend_44", "dend_37", "dend_31", "dend_24", "dend_20", "dend_19", "dend_9", "dend_2", "dend_52", "dend_47", "dend_43", "dend_38", "dend_28", "dend_25", "dend_13", "dend_10", "dend_6", "dend_3", "dend_54", "dend_53", "dend_51", "dend_48", "dend_42", "dend_39", "dend_30", "dend_29", "dend_27", "dend_26", "dend_15", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_50", "dend_49", "dend_41", "dend_40", "dend_17", "dend_16" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_64", "dend_61", "dend_58", "dend_55", "dend_35", "dend_32", "dend_21", "dend_0", "dend_69", "dend_68", "dend_66", "dend_65", "dend_63", "dend_62", "dend_60", "dend_59", "dend_57", "dend_56", "dend_45", "dend_36", "dend_34", "dend_33", "dend_23", "dend_22", "dend_18", "dend_1", "dend_46", "dend_44", "dend_37", "dend_31", "dend_24", "dend_20", "dend_19", "dend_9", "dend_2", "dend_52", "dend_47", "dend_43", "dend_38", "dend_28", "dend_25", "dend_13", "dend_10", "dend_6", "dend_3", "dend_54", "dend_53", "dend_51", "dend_48", "dend_42", "dend_39", "dend_30", "dend_29", "dend_27", "dend_26", "dend_15", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_50", "dend_49", "dend_41", "dend_40", "dend_17", "dend_16" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_4", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_17", "dend_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_NBC_2f216c0d74_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_35
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_0
create dend_18
public dend_18
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_23
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_66
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_4, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_17, dend_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.49999995020322374)
    connect dend_64(0), soma_0(0.49999995020322374)
    connect dend_61(0), soma_0(0.49999995020322374)
    connect dend_58(0), soma_0(0.49999995020322374)
    connect dend_55(0), soma_0(0.49999995020322374)
    connect dend_35(0), soma_0(0.49999995020322374)
    connect dend_32(0), soma_0(0.49999995020322374)
    connect dend_21(0), soma_0(0.49999995020322374)
    connect dend_0(0), soma_0(0.49999995020322374)
    connect axon_0(0), soma_0(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_45(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.75681, 7.93669, -3.00698, 2.63904 ) }
    soma_0 { pt3dadd( -6.11415, 7.12684, -2.72405, 4.23664 ) }
    soma_0 { pt3dadd( -5.47148, 6.31698, -2.44112, 6.10767 ) }
    soma_0 { pt3dadd( -4.82882, 5.50713, -2.15818, 7.7632 ) }
    soma_0 { pt3dadd( -4.18616, 4.69727, -1.87525, 10.2402 ) }
    soma_0 { pt3dadd( -3.5435, 3.88742, -1.59232, 11.8064 ) }
    soma_0 { pt3dadd( -2.90084, 3.07757, -1.30939, 12.5995 ) }
    soma_0 { pt3dadd( -2.25818, 2.26771, -1.02645, 13.3962 ) }
    soma_0 { pt3dadd( -1.61552, 1.45786, -0.74352, 14.1996 ) }
    soma_0 { pt3dadd( -0.972859, 0.648002, -0.460588, 14.817 ) }
    soma_0 { pt3dadd( -0.330198, -0.161852, -0.177655, 15.467 ) }
    soma_0 { pt3dadd( 0.312463, -0.971706, 0.105278, 16.407 ) }
    soma_0 { pt3dadd( 0.955124, -1.78156, 0.38821, 17.1741 ) }
    soma_0 { pt3dadd( 1.59778, -2.59142, 0.671143, 17.2738 ) }
    soma_0 { pt3dadd( 2.24045, -3.40127, 0.954075, 17.3386 ) }
    soma_0 { pt3dadd( 2.88311, -4.21112, 1.23701, 17.3694 ) }
    soma_0 { pt3dadd( 3.52577, -5.02098, 1.51994, 15.6873 ) }
    soma_0 { pt3dadd( 4.16843, -5.83083, 1.80287, 14.1508 ) }
    soma_0 { pt3dadd( 4.81109, -6.64069, 2.08581, 12.6795 ) }
    soma_0 { pt3dadd( 5.45375, -7.45054, 2.36874, 9.91553 ) }
    soma_0 { pt3dadd( 6.09641, -8.2604, 2.65167, 5.27854 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -1.51781, -10.8256, 2.68779, 3.6 ) }
    dend_67 { pt3dadd( -0.982903, -12.7307, 4.10403, 3.6 ) }
    dend_67 { pt3dadd( -0.351521, -15.3587, 6.32643, 1.66 ) }
    dend_67 { pt3dadd( 0.366123, -18.0055, 8.62219, 1.66 ) }
    dend_67 { pt3dadd( 1.22604, -20.7874, 11.0892, 1.38 ) }
    dend_67 { pt3dadd( 2.53211, -24.8499, 14.567, 1.38 ) }
    dend_67 { pt3dadd( 3.27574, -27.2262, 16.5184, 1.38 ) }
    dend_67 { pt3dadd( 4.50034, -30.8674, 19.5285, 0.83 ) }
    dend_67 { pt3dadd( 5.73713, -34.3267, 22.3578, 1.11 ) }
    dend_67 { pt3dadd( 6.54978, -36.4261, 24.0312, 0.83 ) }
    dend_67 { pt3dadd( 7.54058, -38.8299, 25.7816, 0.83 ) }
    dend_67 { pt3dadd( 8.61591, -41.1922, 27.2861, 0.83 ) }
    dend_67 { pt3dadd( 9.51158, -43.1198, 28.4543, 0.83 ) }
    dend_67 { pt3dadd( 9.91108, -43.8897, 28.9357, 0.83 ) }
    dend_67 { pt3dadd( 10.9306, -45.9838, 30.284, 0.83 ) }
    dend_67 { pt3dadd( 11.3489, -46.8303, 30.8609, 0.83 ) }
    dend_67 { pt3dadd( 12.1444, -48.2545, 32.0058, 0.83 ) }
    dend_67 { pt3dadd( 13.0417, -49.7578, 33.3392, 0.83 ) }
    dend_67 { pt3dadd( 14.5525, -52.7243, 36.0889, 0.83 ) }
    dend_67 { pt3dadd( 15.4565, -54.5988, 37.8068, 0.83 ) }
    dend_67 { pt3dadd( 18.5245, -59.5258, 43.3502, 0.83 ) }
    dend_67 { pt3dadd( 21.0681, -64.6383, 48.9816, 0.83 ) }
    dend_67 { pt3dadd( 24.8538, -69.2418, 54.3717, 0.83 ) }
    dend_67 { pt3dadd( 28.9689, -73.392, 59.9056, 0.83 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 45/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -8.94782, 4.34544, -7.77221, 1.11 ) }
    dend_64 { pt3dadd( -8.7727, 7.32703, -7.62277, 1.11 ) }
    dend_64 { pt3dadd( -8.84288, 10.3726, -7.47847, 0.83 ) }
    dend_64 { pt3dadd( -9.2034, 13.8447, -7.01425, 0.83 ) }
    dend_64 { pt3dadd( -9.51534, 15.8758, -6.76006, 1.66 ) }
    dend_64 { pt3dadd( -10.233, 19.5254, -6.2974, 1.94 ) }
    dend_64 { pt3dadd( -11.0605, 22.9614, -5.95318, 0.83 ) }
    dend_64 { pt3dadd( -11.6409, 24.8136, -5.79568, 0.83 ) }
    dend_64 { pt3dadd( -13.4459, 29.3495, -5.55147, 1.38 ) }
    dend_64 { pt3dadd( -14.7965, 31.9624, -5.70218, 0.55 ) }
    dend_64 { pt3dadd( -15.3284, 32.9472, -5.85462, 0.55 ) }
    dend_64 { pt3dadd( -16.4312, 35.0106, -6.69754, 0.55 ) }
    dend_64 { pt3dadd( -16.6692, 35.49, -6.96067, 0.55 ) }
    dend_64 { pt3dadd( -17.6968, 37.6732, -8.43347, 0.55 ) }
    dend_64 { pt3dadd( -19.1193, 40.8767, -11.1288, 1.66 ) }
    dend_64 { pt3dadd( -20.1546, 43.5474, -13.3031, 1.66 ) }
    dend_64 { pt3dadd( -21.2614, 46.9707, -16.0047, 0.83 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 62/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -5.06781, -2.41131, 12.3478, 1.94 ) }
    dend_61 { pt3dadd( -6.72917, -2.98124, 15.9596, 1.94 ) }
    dend_61 { pt3dadd( -8.26313, -3.50744, 19.2944, 1.66 ) }
    dend_61 { pt3dadd( -12.8578, -5.08361, 29.2834, 1.38 ) }
    dend_61 { pt3dadd( -14.2286, -5.55383, 32.2633, 1.38 ) }
    dend_61 { pt3dadd( -16.4133, -6.30331, 37.0131, 1.11 ) }
    dend_61 { pt3dadd( -19.6723, -7.42124, 44.098, 1.94 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 69/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -6.57781, 2.78543, -8.27221, 1.11 ) }
    dend_58 { pt3dadd( -7.42632, 1.12519, -7.86337, 1.11 ) }
    dend_58 { pt3dadd( -8.51232, -1.21356, -7.46284, 0.83 ) }
    dend_58 { pt3dadd( -9.6471, -3.60985, -7.25267, 0.83 ) }
    dend_58 { pt3dadd( -11.3036, -6.81506, -7.2566, 0.55 ) }
    dend_58 { pt3dadd( -11.8078, -7.75167, -7.31356, 0.55 ) }
    dend_58 { pt3dadd( -12.9036, -9.97497, -7.66098, 0.55 ) }
    dend_58 { pt3dadd( -13.3371, -10.9545, -7.96841, 0.55 ) }
    dend_58 { pt3dadd( -14.1028, -12.585, -8.7738, 0.83 ) }
    dend_58 { pt3dadd( -14.752, -13.916, -9.73197, 0.55 ) }
    dend_58 { pt3dadd( -15.1141, -14.6101, -10.326, 0.55 ) }
    dend_58 { pt3dadd( -16.4009, -17.0308, -12.3091, 1.11 ) }
    dend_58 { pt3dadd( -16.9462, -18.1365, -13.1583, 0.55 ) }
    dend_58 { pt3dadd( -17.5664, -19.4886, -14.2128, 0.55 ) }
    dend_58 { pt3dadd( -18.2253, -21.0941, -15.4708, 0.55 ) }
    dend_58 { pt3dadd( -18.5357, -21.8055, -16.0395, 0.55 ) }
    dend_58 { pt3dadd( -19.2151, -23.1871, -17.21, 1.11 ) }
    dend_58 { pt3dadd( -19.9837, -24.5547, -18.3605, 0.55 ) }
    dend_58 { pt3dadd( -20.7769, -26.0042, -19.525, 0.55 ) }
    dend_58 { pt3dadd( -22.2168, -28.503, -21.5372, 1.38 ) }
    dend_58 { pt3dadd( -23.2321, -29.9619, -22.7632, 0.55 ) }
    dend_58 { pt3dadd( -24.3061, -31.2196, -23.8903, 0.55 ) }
    dend_58 { pt3dadd( -25.1939, -32.0943, -24.7371, 0.55 ) }
    dend_58 { pt3dadd( -26.3948, -33.1482, -25.7933, 0.55 ) }
    dend_58 { pt3dadd( -28.4355, -34.7486, -27.4392, 1.94 ) }
    dend_58 { pt3dadd( -29.7018, -35.6044, -28.3677, 0.55 ) }
    dend_58 { pt3dadd( -31.0585, -36.4849, -29.307, 0.83 ) }
    dend_58 { pt3dadd( -32.4872, -37.3622, -30.2364, 0.28 ) }
    dend_58 { pt3dadd( -33.0937, -37.7344, -30.6432, 0.55 ) }
    dend_58 { pt3dadd( -34.3673, -38.5955, -31.5852, 0.28 ) }
    dend_58 { pt3dadd( -35.1093, -39.2292, -32.1737, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_58 { pt3dadd( -36.2766, -40.4487, -33.3384, 1.94 ) }
    dend_58 { pt3dadd( -37.2662, -41.6043, -34.4851, 0.28 ) }
    dend_58 { pt3dadd( -38.1542, -42.7028, -35.5687, 0.55 ) }
    dend_58 { pt3dadd( -39.3722, -44.2878, -37.2077, 0.28 ) }
    dend_58 { pt3dadd( -39.9294, -45.0591, -38.022, 0.83 ) }
    dend_58 { pt3dadd( -41.4329, -47.1218, -40.2553, 0.28 ) }
    dend_58 { pt3dadd( -42.3152, -48.4134, -41.762, 0.83 ) }
    dend_58 { pt3dadd( -42.6441, -48.9405, -42.373, 0.28 ) }
    dend_58 { pt3dadd( -43.1807, -49.7752, -43.3199, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 9/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -0.177811, 4.71593, -8.24221, 1.38 ) }
    dend_55 { pt3dadd( -2.00991, 4.99862, -8.44287, 1.38 ) }
    dend_55 { pt3dadd( -4.34902, 5.23468, -8.8043, 0.83 ) }
    dend_55 { pt3dadd( -8.33516, 5.34319, -9.58579, 0.83 ) }
    dend_55 { pt3dadd( -11.9585, 5.1635, -10.3746, 0.83 ) }
    dend_55 { pt3dadd( -15.6758, 4.75426, -11.3493, 0.83 ) }
    dend_55 { pt3dadd( -17.0945, 4.53639, -11.7553, 0.55 ) }
    dend_55 { pt3dadd( -19.6382, 3.86325, -12.5577, 0.83 ) }
    dend_55 { pt3dadd( -21.4528, 3.16743, -13.1393, 0.55 ) }
    dend_55 { pt3dadd( -23.82, 2.10108, -13.9545, 0.83 ) }
    dend_55 { pt3dadd( -26.005, 1.18858, -14.7797, 0.55 ) }
    dend_55 { pt3dadd( -26.7621, 0.915339, -15.0915, 0.55 ) }
    dend_55 { pt3dadd( -28.789, 0.369554, -15.9654, 0.83 ) }
    dend_55 { pt3dadd( -30.4579, 0.058505, -16.7043, 0.55 ) }
    dend_55 { pt3dadd( -33.1452, -0.347735, -18.0382, 0.55 ) }
    dend_55 { pt3dadd( -35.2957, -0.710775, -19.3017, 0.83 ) }
    dend_55 { pt3dadd( -37.1329, -1.18249, -20.543, 0.55 ) }
    dend_55 { pt3dadd( -38.785, -1.89882, -21.9443, 0.28 ) }
    dend_55 { pt3dadd( -39.6792, -2.44367, -22.8641, 0.28 ) }
    dend_55 { pt3dadd( -40.1657, -2.85793, -23.433, 0.55 ) }
    dend_55 { pt3dadd( -40.9781, -3.84542, -24.3591, 0.55 ) }
    dend_55 { pt3dadd( -42.1319, -5.31661, -25.7566, 0.83 ) }
    dend_55 { pt3dadd( -43.1615, -6.37564, -26.7391, 0.55 ) }
    dend_55 { pt3dadd( -44.4958, -7.48425, -27.8165, 0.55 ) }
    dend_55 { pt3dadd( -45.1246, -7.9844, -28.3375, 0.55 ) }
    dend_55 { pt3dadd( -47.1531, -9.47707, -30.0015, 1.11 ) }
    dend_55 { pt3dadd( -50.1303, -11.4449, -32.3544, 0.55 ) }
    dend_55 { pt3dadd( -52.7689, -12.9543, -34.3404, 0.55 ) }
    dend_55 { pt3dadd( -54.4219, -13.8813, -35.5936, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 38/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -7.28781, 4.07243, -7.77221, 1.38 ) }
    dend_35 { pt3dadd( -8.52237, 6.09286, -7.77221, 1.38 ) }
    dend_35 { pt3dadd( -9.38809, 7.50967, -7.77221, 1.38 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.01219, 4.92068, -4.12221, 0.83 ) }
    dend_32 { pt3dadd( 1.8368, 6.71101, -4.34945, 0.83 ) }
    dend_32 { pt3dadd( 3.7913, 9.58607, -5.26186, 0.83 ) }
    dend_32 { pt3dadd( 6.08291, 12.2851, -6.376, 0.83 ) }
    dend_32 { pt3dadd( 6.85177, 13.2085, -6.80204, 0.83 ) }
    dend_32 { pt3dadd( 8.54429, 15.2451, -7.84915, 0.83 ) }
    dend_32 { pt3dadd( 10.9113, 17.9476, -9.28725, 1.38 ) }
    dend_32 { pt3dadd( 13.1264, 20.1431, -10.6448, 0.83 ) }
    dend_32 { pt3dadd( 15.0019, 21.7626, -11.7753, 0.83 ) }
    dend_32 { pt3dadd( 18.3324, 24.4941, -13.8604, 1.38 ) }
    dend_32 { pt3dadd( 19.7728, 25.768, -14.8099, 1.11 ) }
    dend_32 { pt3dadd( 21.708, 27.6542, -16.1018, 1.11 ) }
    dend_32 { pt3dadd( 23.8997, 29.847, -17.4345, 1.11 ) }
    dend_32 { pt3dadd( 26.0521, 32.0491, -18.6495, 1.38 ) }
    dend_32 { pt3dadd( 28.182, 34.2273, -19.9126, 0.83 ) }
    dend_32 { pt3dadd( 29.2035, 35.2139, -20.4849, 0.83 ) }
    dend_32 { pt3dadd( 30.7492, 36.8224, -21.408, 0.83 ) }
    dend_32 { pt3dadd( 32.0469, 38.2574, -22.2226, 0.83 ) }
    dend_32 { pt3dadd( 33.9104, 40.201, -23.3187, 1.94 ) }
    dend_32 { pt3dadd( 35.9928, 42.1972, -24.5531, 0.83 ) }
    dend_32 { pt3dadd( 38.7254, 44.667, -26.2187, 0.83 ) }
    dend_32 { pt3dadd( 41.3779, 46.7982, -27.8754, 1.66 ) }
    dend_32 { pt3dadd( 42.8408, 47.8737, -28.4021, 0.83 ) }
    dend_32 { pt3dadd( 44.8571, 49.1545, -28.0718, 0.83 ) }
    dend_32 { pt3dadd( 47.4055, 50.3316, -26.4259, 0.55 ) }
    dend_32 { pt3dadd( 48.4708, 50.6698, -25.4685, 0.83 ) }
    dend_32 { pt3dadd( 50.4877, 51.1211, -23.5009, 0.83 ) }
    dend_32 { pt3dadd( 61.9872, 53.1026, -12.2062, 2.22 ) }
    dend_32 { pt3dadd( 64.1424, 53.4154, -10.1568, 0.55 ) }
    dend_32 { pt3dadd( 65.2219, 53.5592, -9.18406, 0.55 ) }
    dend_32 { pt3dadd( 67.276, 53.7766, -7.4556, 1.11 ) }
    dend_32 { pt3dadd( 71.406, 54.1333, -4.6802, 0.55 ) }
    dend_32 { pt3dadd( 73.2146, 54.263, -4.46612, 0.55 ) }
    dend_32 { pt3dadd( 74.9575, 54.3702, -5.17992, 1.11 ) }
    dend_32 { pt3dadd( 76.8981, 54.6154, -5.90006, 0.55 ) }
    dend_32 { pt3dadd( 78.3175, 54.9517, -6.37748, 0.28 ) }
    dend_32 { pt3dadd( 79.0287, 55.1733, -6.58063, 0.55 ) }
    dend_32 { pt3dadd( 80.8819, 55.7817, -6.91882, 0.28 ) }
    dend_32 { pt3dadd( 81.7458, 56.0594, -7.10407, 0.83 ) }
    dend_32 { pt3dadd( 84.2349, 56.8852, -7.67953, 0.28 ) }
    dend_32 { pt3dadd( 85.6306, 57.3187, -8.00867, 1.11 ) }
    dend_32 { pt3dadd( 88.2055, 58.0525, -8.48226, 0.28 ) }
    dend_32 { pt3dadd( 89.5817, 58.4581, -8.54435, 0.83 ) }
    dend_32 { pt3dadd( 91.4967, 58.9705, -8.42476, 0.28 ) }
    dend_32 { pt3dadd( 92.4902, 59.1844, -8.29653, 0.55 ) }
    dend_32 { pt3dadd( 94.0133, 59.4723, -7.99766, 0.28 ) }
    dend_32 { pt3dadd( 96.1569, 59.8486, -7.49185, 1.11 ) }
    dend_32 { pt3dadd( 100.419, 60.6553, -6.27582, 0.28 ) }
    dend_32 { pt3dadd( 102.374, 61.0289, -5.71404, 1.11 ) }
    dend_32 { pt3dadd( 104.112, 61.3397, -5.23934, 0.55 ) }
    dend_32 { pt3dadd( 105.357, 61.5324, -4.99012, 0.83 ) }
    dend_32 { pt3dadd( 106.675, 61.6696, -4.88005, 0.28 ) }
    dend_32 { pt3dadd( 107.49, 61.6725, -4.92762, 0.83 ) }
    dend_32 { pt3dadd( 108.87, 61.5843, -5.15937, 0.28 ) }
    dend_32 { pt3dadd( 109.791, 61.5089, -5.25401, 0.55 ) }
    dend_32 { pt3dadd( 111.341, 61.3088, -5.33825, 0.28 ) }
    dend_32 { pt3dadd( 112.379, 61.1608, -5.31076, 0.55 ) }
    dend_32 { pt3dadd( 115.011, 60.7994, -5.04997, 0.28 ) }
    dend_32 { pt3dadd( 116.445, 60.5864, -4.85585, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( 117.521, 60.4575, -4.63783, 0.28 ) }
    dend_32 { pt3dadd( 118.269, 60.4124, -4.44466, 0.55 ) }
    dend_32 { pt3dadd( 119.896, 60.4304, -3.88335, 0.28 ) }
    dend_32 { pt3dadd( 120.656, 60.4977, -3.5938, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 4/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.3378, 3.53619, -8.95221, 3.05 ) }
    dend_21 { pt3dadd( -11.5711, 3.80206, -9.82372, 3.05 ) }
    dend_21 { pt3dadd( -15.0419, 4.5503, -12.2765, 2.22 ) }
    dend_21 { pt3dadd( -19.1053, 5.4263, -15.1479, 2.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 8.22219, 5.15469, 2.17779, 2.77 ) }
    dend_0 { pt3dadd( 9.90208, 6.85047, 4.78311, 2.77 ) }
    dend_0 { pt3dadd( 11.6475, 8.61238, 7.49001, 2.77 ) }
    dend_0 { pt3dadd( 15.23, 12.2287, 13.0459, 3.6 ) }
    dend_0 { pt3dadd( 16.0906, 13.0974, 14.3805, 3.6 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 13/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.09641, -8.2604, 2.65167, 0.83 ) }
    axon_0 { pt3dadd( 15.4206, -20.0103, 2.65167, 0.83 ) }
    axon_0 { pt3dadd( 24.7447, -31.7602, 2.65167, 0.83 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 16/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 28.9689, -73.392, 59.9056, 0.55 ) }
    dend_69 { pt3dadd( 31.8066, -79.4523, 65.6645, 0.55 ) }
    dend_69 { pt3dadd( 35.1044, -86.1636, 70.3209, 0.55 ) }
    dend_69 { pt3dadd( 37.4581, -93.8843, 73.7402, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 20/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 28.9689, -73.392, 59.9056, 0.28 ) }
    dend_68 { pt3dadd( 32.324, -79.9408, 65.6197, 0.55 ) }
    dend_68 { pt3dadd( 36.1998, -85.7585, 71.8168, 0.55 ) }
    dend_68 { pt3dadd( 40.2969, -92.3826, 76.9306, 0.55 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 24/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -21.2614, 46.9707, -16.0047, 0.55 ) }
    dend_66 { pt3dadd( -21.7384, 48.3563, -16.0483, 0.55 ) }
    dend_66 { pt3dadd( -22.5836, 50.8933, -16.5385, 0.55 ) }
    dend_66 { pt3dadd( -23.1827, 52.5546, -16.9393, 1.38 ) }
    dend_66 { pt3dadd( -24.854, 57.1444, -18.2533, 0.55 ) }
    dend_66 { pt3dadd( -25.5126, 59.0311, -18.9892, 0.55 ) }
    dend_66 { pt3dadd( -26.6818, 62.3599, -20.4139, 1.38 ) }
    dend_66 { pt3dadd( -28.5683, 67.3559, -22.777, 0.55 ) }
    dend_66 { pt3dadd( -29.6608, 70.2052, -24.2354, 0.55 ) }
    dend_66 { pt3dadd( -30.7904, 73.2339, -25.8628, 1.38 ) }
    dend_66 { pt3dadd( -32.599, 78.3636, -28.7985, 0.55 ) }
    dend_66 { pt3dadd( -33.6892, 81.2479, -30.4385, 0.28 ) }
    dend_66 { pt3dadd( -34.2433, 82.6588, -31.1896, 0.55 ) }
    dend_66 { pt3dadd( -34.9517, 84.4121, -32.0074, 0.28 ) }
    dend_66 { pt3dadd( -35.4492, 85.6545, -32.7182, 0.83 ) }
    dend_66 { pt3dadd( -36.3018, 87.6944, -34.0892, 0.28 ) }
    dend_66 { pt3dadd( -37.1359, 89.5842, -35.7449, 0.83 ) }
    dend_66 { pt3dadd( -38.1122, 91.6345, -37.9927, 0.28 ) }
    dend_66 { pt3dadd( -39.3509, 93.9758, -40.9075, 1.11 ) }
    dend_66 { pt3dadd( -42.0609, 98.1095, -47.0402, 0.28 ) }
    dend_66 { pt3dadd( -43.5435, 100.033, -50.306, 0.83 ) }
    dend_66 { pt3dadd( -46.1854, 102.839, -55.8887, 1.66 ) }
    dend_66 { pt3dadd( -47.2494, 103.824, -58.1117, 0.28 ) }
    dend_66 { pt3dadd( -47.8496, 104.266, -59.2678, 1.11 ) }
    dend_66 { pt3dadd( -50.8433, 106.049, -64.4659, 0.55 ) }
    dend_66 { pt3dadd( -52.0199, 106.606, -66.178, 1.38 ) }
    dend_66 { pt3dadd( -55.7587, 108.162, -71.1339, 0.28 ) }
    dend_66 { pt3dadd( -56.1734, 108.334, -71.6475, 0.55 ) }
    dend_66 { pt3dadd( -58.2824, 109.25, -74.2737, 0.28 ) }
    dend_66 { pt3dadd( -59.117, 109.616, -75.3583, 0.83 ) }
    dend_66 { pt3dadd( -60.7707, 110.301, -77.4526, 0.28 ) }
    dend_66 { pt3dadd( -60.9902, 110.364, -77.7146, 0.55 ) }
    dend_66 { pt3dadd( -63.8534, 110.904, -80.9196, 0.28 ) }
    dend_66 { pt3dadd( -65.4719, 111.187, -82.7035, 0.83 ) }
    dend_66 { pt3dadd( -70.0165, 112.079, -87.6879, 0.28 ) }
    dend_66 { pt3dadd( -72.0341, 112.522, -89.8906, 1.11 ) }
    dend_66 { pt3dadd( -76.0836, 113.744, -94.2013, 0.55 ) }
    dend_66 { pt3dadd( -77.1198, 114.151, -95.2702, 0.55 ) }
    dend_66 { pt3dadd( -79.0337, 115.159, -97.1494, 0.83 ) }
    dend_66 { pt3dadd( -82.0198, 117.24, -99.9971, 0.28 ) }
    dend_66 { pt3dadd( -82.6778, 117.85, -100.59, 0.55 ) }
    dend_66 { pt3dadd( -85.9841, 121.746, -103.663, 0.28 ) }
    dend_66 { pt3dadd( -86.8953, 123.035, -104.499, 1.66 ) }
    dend_66 { pt3dadd( -88.5818, 125.542, -106.02, 0.28 ) }
    dend_66 { pt3dadd( -88.9542, 126.109, -106.354, 0.55 ) }
    dend_66 { pt3dadd( -90.2752, 128.181, -107.501, 0.28 ) }
    dend_66 { pt3dadd( -90.9346, 129.229, -108.159, 0.83 ) }
    dend_66 { pt3dadd( -92.0113, 130.882, -109.296, 0.28 ) }
    dend_66 { pt3dadd( -92.2399, 131.207, -109.561, 0.55 ) }
    dend_66 { pt3dadd( -93.5747, 132.991, -111.235, 0.28 ) }
    dend_66 { pt3dadd( -94.3634, 133.983, -112.233, 0.55 ) }
    dend_66 { pt3dadd( -96.0724, 135.807, -114.414, 0.28 ) }
    dend_66 { pt3dadd( -96.8488, 136.614, -115.89, 0.28 ) }
    dend_66 { pt3dadd( -97.7325, 137.516, -117.955, 0.83 ) }
    dend_66 { pt3dadd( -98.9059, 138.671, -120.919, 0.55 ) }
    dend_66 { pt3dadd( -99.2777, 139.012, -121.88, 0.55 ) }
    dend_66 { pt3dadd( -100.764, 140.293, -125.759, 0.83 ) }
    dend_66 { pt3dadd( -104.338, 143.102, -134.69, 0.28 ) }
    dend_66 { pt3dadd( -104.818, 143.479, -135.889, 0.83 ) }
    dend_66 { pt3dadd( -106.069, 144.45, -138.837, 0.28 ) }
    dend_66 { pt3dadd( -106.616, 144.867, -140.087, 0.55 ) }
    dend_66 { pt3dadd( -108.24, 146.173, -143.653, 0.28 ) }
    dend_66 { pt3dadd( -109.365, 147.088, -145.824, 0.83 ) }
    dend_66 { pt3dadd( -110.757, 148.133, -147.939, 0.28 ) }
    dend_66 { pt3dadd( -111.828, 148.97, -149.62, 0.28 ) }
    dend_66 { pt3dadd( -112.911, 149.828, -151.401, 0.55 ) }
    dend_66 { pt3dadd( -115.225, 151.68, -155.345, 0.28 ) }
    dend_66 { pt3dadd( -115.553, 151.928, -155.888, 0.55 ) }
    dend_66 { pt3dadd( -117.422, 153.184, -158.827, 0.28 ) }
    dend_66 { pt3dadd( -117.862, 153.443, -159.466, 0.55 ) }
    dend_66 { pt3dadd( -119.725, 154.438, -161.962, 0.28 ) }
    dend_66 { pt3dadd( -120.698, 154.897, -163.035, 0.55 ) }
    dend_66 { pt3dadd( -123.041, 155.918, -164.986, 0.28 ) }
    dend_66 { pt3dadd( -123.602, 156.131, -165.386, 0.55 ) }
    dend_66 { pt3dadd( -124.898, 156.544, -166.227, 0.28 ) }
    dend_66 { pt3dadd( -126.002, 156.883, -166.903, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_66 { pt3dadd( -131.141, 158.456, -169.803, 0.28 ) }
    dend_66 { pt3dadd( -134.62, 159.537, -171.71, 0.55 ) }
    dend_66 { pt3dadd( -140.145, 161.215, -174.577, 0.28 ) }
    dend_66 { pt3dadd( -141.854, 161.714, -175.448, 0.83 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 4/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -21.2614, 46.9707, -16.0047, 0.28 ) }
    dend_65 { pt3dadd( -22.251, 48.9411, -15.9211, 0.28 ) }
    dend_65 { pt3dadd( -23.243, 50.8598, -15.9078, 0.83 ) }
    dend_65 { pt3dadd( -24.0449, 52.5346, -16.0015, 0.28 ) }
    dend_65 { pt3dadd( -26.172, 56.7822, -16.2235, 0.55 ) }
    dend_65 { pt3dadd( -27.3951, 59.3497, -16.4145, 0.55 ) }
    dend_65 { pt3dadd( -28.7646, 62.1642, -16.6451, 0.55 ) }
    dend_65 { pt3dadd( -30.0068, 64.8224, -16.8895, 1.38 ) }
    dend_65 { pt3dadd( -31.7303, 68.332, -17.1783, 0.55 ) }
    dend_65 { pt3dadd( -33.8572, 72.2778, -17.4756, 0.83 ) }
    dend_65 { pt3dadd( -35.0138, 74.387, -17.5686, 0.28 ) }
    dend_65 { pt3dadd( -36.1042, 76.5873, -17.6588, 0.83 ) }
    dend_65 { pt3dadd( -37.2176, 79.0024, -17.7233, 0.55 ) }
    dend_65 { pt3dadd( -39.0416, 83.069, -17.8921, 1.94 ) }
    dend_65 { pt3dadd( -40.5706, 86.7051, -18.0775, 0.28 ) }
    dend_65 { pt3dadd( -41.4813, 89.2128, -18.549, 0.83 ) }
    dend_65 { pt3dadd( -42.4693, 92.3664, -19.4026, 0.28 ) }
    dend_65 { pt3dadd( -42.8088, 93.9893, -20.1736, 0.83 ) }
    dend_65 { pt3dadd( -43.0535, 95.4658, -21.0858, 0.28 ) }
    dend_65 { pt3dadd( -43.2982, 97.5558, -22.5542, 0.83 ) }
    dend_65 { pt3dadd( -43.9187, 102.767, -26.3701, 0.55 ) }
    dend_65 { pt3dadd( -44.282, 105.216, -28.1179, 1.94 ) }
    dend_65 { pt3dadd( -45.1588, 111.081, -31.9123, 0.55 ) }
    dend_65 { pt3dadd( -45.6231, 113.782, -33.4694, 0.55 ) }
    dend_65 { pt3dadd( -46.3131, 117.082, -35.0099, 1.11 ) }
    dend_65 { pt3dadd( -47.1219, 120.225, -36.1276, 0.28 ) }
    dend_65 { pt3dadd( -47.8012, 122.386, -36.5747, 0.55 ) }
    dend_65 { pt3dadd( -49.1503, 125.828, -37.0165, 0.55 ) }
    dend_65 { pt3dadd( -50.5523, 128.893, -37.0495, 0.55 ) }
    dend_65 { pt3dadd( -52.0295, 131.984, -37.0033, 0.55 ) }
    dend_65 { pt3dadd( -52.9442, 133.725, -36.916, 0.55 ) }
    dend_65 { pt3dadd( -54.1662, 135.995, -36.6715, 1.11 ) }
    dend_65 { pt3dadd( -55.4281, 138.25, -36.4848, 0.28 ) }
    dend_65 { pt3dadd( -56.4262, 140.142, -36.4281, 0.55 ) }
    dend_65 { pt3dadd( -57.6603, 142.799, -36.5161, 0.28 ) }
    dend_65 { pt3dadd( -58.2254, 144.234, -36.6465, 0.55 ) }
    dend_65 { pt3dadd( -59.0203, 146.756, -36.9689, 0.28 ) }
    dend_65 { pt3dadd( -59.8394, 150.054, -37.6415, 0.83 ) }
    dend_65 { pt3dadd( -60.4741, 153.304, -38.4776, 0.28 ) }
    dend_65 { pt3dadd( -60.6974, 155.056, -38.9264, 0.55 ) }
    dend_65 { pt3dadd( -60.923, 157.3, -39.5093, 0.28 ) }
    dend_65 { pt3dadd( -61.1653, 159.846, -40.1586, 2.22 ) }
    dend_65 { pt3dadd( -61.5756, 164.555, -41.3077, 0.28 ) }
    dend_65 { pt3dadd( -61.6691, 165.342, -41.4853, 0.55 ) }
    dend_65 { pt3dadd( -62.3733, 169.279, -42.4464, 0.28 ) }
    dend_65 { pt3dadd( -62.7879, 171.126, -43.0074, 0.83 ) }
    dend_65 { pt3dadd( -63.8346, 174.625, -44.1984, 0.28 ) }
    dend_65 { pt3dadd( -64.4473, 176.286, -44.7965, 0.83 ) }
    dend_65 { pt3dadd( -65.7671, 179.547, -46.0022, 0.28 ) }
    dend_65 { pt3dadd( -66.7089, 181.657, -46.8261, 0.83 ) }
    dend_65 { pt3dadd( -68.3329, 184.853, -48.2448, 0.28 ) }
    dend_65 { pt3dadd( -69.3107, 186.807, -49.1189, 1.38 ) }
    dend_65 { pt3dadd( -70.7651, 189.797, -50.4054, 0.28 ) }
    dend_65 { pt3dadd( -71.4326, 191.19, -50.9512, 0.55 ) }
    dend_65 { pt3dadd( -71.9478, 192.342, -51.3229, 0.55 ) }
    dend_65 { pt3dadd( -73.2763, 195.435, -52.2594, 0.28 ) }
    dend_65 { pt3dadd( -73.4677, 195.898, -52.3696, 0.55 ) }
    dend_65 { pt3dadd( -74.0457, 197.43, -52.732, 0.28 ) }
    dend_65 { pt3dadd( -74.2853, 198.2, -52.8357, 0.55 ) }
    dend_65 { pt3dadd( -75.1335, 201.101, -53.0632, 0.28 ) }
    dend_65 { pt3dadd( -75.3416, 201.879, -53.105, 0.55 ) }
    dend_65 { pt3dadd( -76.3097, 205.904, -53.1584, 0.28 ) }
    dend_65 { pt3dadd( -76.6612, 207.322, -53.1773, 0.55 ) }
    dend_65 { pt3dadd( -77.9552, 212.631, -53.261, 0.28 ) }
    dend_65 { pt3dadd( -78.1226, 213.419, -53.2498, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 69/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -19.6723, -7.42124, 44.098, 1.11 ) }
    dend_63 { pt3dadd( -21.0903, -6.34591, 44.4152, 1.11 ) }
    dend_63 { pt3dadd( -23.6011, -4.24322, 45.0083, 0.83 ) }
    dend_63 { pt3dadd( -25.4416, -2.55788, 45.4338, 0.83 ) }
    dend_63 { pt3dadd( -28.0685, -0.231805, 46.1586, 1.11 ) }
    dend_63 { pt3dadd( -32.0025, 2.99197, 47.2947, 0.83 ) }
    dend_63 { pt3dadd( -33.0611, 3.80694, 47.6543, 0.55 ) }
    dend_63 { pt3dadd( -34.7929, 5.02659, 48.4288, 0.83 ) }
    dend_63 { pt3dadd( -37.0624, 6.43239, 49.6235, 0.83 ) }
    dend_63 { pt3dadd( -40.2582, 8.12883, 51.4352, 1.11 ) }
    dend_63 { pt3dadd( -41.9265, 8.89458, 52.4227, 0.83 ) }
    dend_63 { pt3dadd( -45.1567, 10.2489, 54.4043, 1.11 ) }
    dend_63 { pt3dadd( -48.7528, 11.7782, 56.65, 0.83 ) }
    dend_63 { pt3dadd( -50.6713, 12.5053, 57.8411, 0.83 ) }
    dend_63 { pt3dadd( -52.085, 13.0295, 58.7463, 0.83 ) }
    dend_63 { pt3dadd( -53.32, 13.6254, 59.5065, 0.55 ) }
    dend_63 { pt3dadd( -54.6918, 14.4605, 60.3517, 0.83 ) }
    dend_63 { pt3dadd( -56.7134, 15.9335, 61.1449, 0.55 ) }
    dend_63 { pt3dadd( -58.0353, 18.2064, 61.2686, 0.55 ) }
    dend_63 { pt3dadd( -65.1927, 24.7948, 66.7569, 0.55 ) }
    dend_63 { pt3dadd( -72.71, 30.5995, 72.6784, 0.55 ) }
    dend_63 { pt3dadd( -82.0253, 35.0958, 77.0335, 0.55 ) }
    dend_63 { pt3dadd( -91.6204, 39.4621, 80.8915, 0.55 ) }
    dend_63 { pt3dadd( -101.115, 42.7693, 85.9288, 0.55 ) }
    dend_63 { pt3dadd( -110.278, 46.2808, 91.4147, 0.55 ) }
    dend_63 { pt3dadd( -119.223, 50.744, 96.5193, 0.55 ) }
    dend_63 { pt3dadd( -128.633, 55.0639, 100.857, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 96/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -19.6723, -7.42124, 44.098, 1.11 ) }
    dend_62 { pt3dadd( -21.9188, -8.63583, 46.2544, 1.11 ) }
    dend_62 { pt3dadd( -24.9193, -9.93717, 49.3728, 0.83 ) }
    dend_62 { pt3dadd( -26.1991, -10.247, 50.9058, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_62 { pt3dadd( -28.7784, -9.69837, 54.7496, 0.83 ) }
    dend_62 { pt3dadd( -31.5633, -7.88634, 59.3427, 0.83 ) }
    dend_62 { pt3dadd( -32.3843, -6.78909, 60.8526, 0.83 ) }
    dend_62 { pt3dadd( -33.7764, -4.58173, 62.9532, 0.83 ) }
    dend_62 { pt3dadd( -35.8834, -0.741305, 65.6429, 0.83 ) }
    dend_62 { pt3dadd( -38.0929, 3.99921, 68.2949, 0.83 ) }
    dend_62 { pt3dadd( -39.2178, 6.68497, 69.4832, 0.83 ) }
    dend_62 { pt3dadd( -41.463, 12.3496, 71.5347, 0.83 ) }
    dend_62 { pt3dadd( -43.1496, 16.5581, 72.9278, 0.55 ) }
    dend_62 { pt3dadd( -44.0917, 18.6122, 73.5158, 0.55 ) }
    dend_62 { pt3dadd( -45.4403, 21.0101, 74.1091, 0.55 ) }
    dend_62 { pt3dadd( -47.0122, 23.5966, 74.5147, 0.55 ) }
    dend_62 { pt3dadd( -48.7095, 26.0178, 74.8941, 0.55 ) }
    dend_62 { pt3dadd( -57.8008, 34.0775, 82.261, 0.55 ) }
    dend_62 { pt3dadd( -65.1033, 41.1308, 92.207, 0.55 ) }
    dend_62 { pt3dadd( -73.3457, 45.3011, 103.069, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 16/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -43.1807, -49.7752, -43.3199, 0.28 ) }
    dend_60 { pt3dadd( -43.6484, -48.9286, -43.9321, 0.28 ) }
    dend_60 { pt3dadd( -43.9687, -48.3489, -44.3514, 0.55 ) }
    dend_60 { pt3dadd( -44.4963, -47.3938, -45.0421, 0.28 ) }
    dend_60 { pt3dadd( -44.9961, -46.4891, -45.6963, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -43.1807, -49.7752, -43.3199, 0.28 ) }
    dend_59 { pt3dadd( -44.686, -50.9426, -43.9647, 0.28 ) }
    dend_59 { pt3dadd( -45.1976, -51.3672, -44.1961, 0.55 ) }
    dend_59 { pt3dadd( -47.083, -53.0148, -44.8061, 0.28 ) }
    dend_59 { pt3dadd( -48.2869, -54.1886, -45.2383, 0.83 ) }
    dend_59 { pt3dadd( -49.7731, -55.7951, -45.9034, 0.28 ) }
    dend_59 { pt3dadd( -50.6662, -56.8713, -46.4199, 0.55 ) }
    dend_59 { pt3dadd( -51.2819, -57.6945, -46.8542, 0.28 ) }
    dend_59 { pt3dadd( -52.89, -60.1619, -48.3092, 2.77 ) }
    dend_59 { pt3dadd( -55.0387, -63.9066, -50.7194, 0.28 ) }
    dend_59 { pt3dadd( -56.0859, -65.9049, -52.1012, 0.83 ) }
    dend_59 { pt3dadd( -57.1892, -68.3627, -53.8368, 0.28 ) }
    dend_59 { pt3dadd( -57.6287, -69.5621, -54.6477, 0.55 ) }
    dend_59 { pt3dadd( -58.4787, -72.1851, -56.4365, 0.28 ) }
    dend_59 { pt3dadd( -58.7658, -73.0516, -57.0923, 0.55 ) }
    dend_59 { pt3dadd( -59.0626, -73.8499, -57.6589, 0.28 ) }
    dend_59 { pt3dadd( -59.9189, -75.653, -58.7708, 0.83 ) }
    dend_59 { pt3dadd( -61.1888, -77.6674, -59.8827, 0.28 ) }
    dend_59 { pt3dadd( -62.4917, -79.2929, -60.7224, 0.83 ) }
    dend_59 { pt3dadd( -65.2076, -81.9064, -61.9752, 0.55 ) }
    dend_59 { pt3dadd( -66.4923, -82.9366, -62.4255, 0.28 ) }
    dend_59 { pt3dadd( -69.0684, -84.6818, -63.1322, 0.55 ) }
    dend_59 { pt3dadd( -71.0765, -85.7736, -63.5624, 0.55 ) }
    dend_59 { pt3dadd( -73.6649, -87.0189, -63.682, 0.28 ) }
    dend_59 { pt3dadd( -75.862, -88.055, -63.4918, 0.83 ) }
    dend_59 { pt3dadd( -77.7685, -88.9604, -63.1218, 0.55 ) }
    dend_59 { pt3dadd( -79.4412, -89.7134, -62.756, 0.28 ) }
    dend_59 { pt3dadd( -82.5703, -91.0742, -62.1624, 0.55 ) }
    dend_59 { pt3dadd( -87.6686, -93.3936, -61.345, 0.28 ) }
    dend_59 { pt3dadd( -90.7843, -94.7827, -60.9661, 0.83 ) }
    dend_59 { pt3dadd( -93.5659, -96.0708, -60.813, 0.28 ) }
    dend_59 { pt3dadd( -95.4303, -96.9837, -60.8413, 0.55 ) }
    dend_59 { pt3dadd( -98.7085, -98.6099, -61.0404, 0.28 ) }
    dend_59 { pt3dadd( -99.982, -99.2662, -61.225, 0.83 ) }
    dend_59 { pt3dadd( -101.092, -99.8152, -61.5765, 0.28 ) }
    dend_59 { pt3dadd( -103.84, -101.151, -62.5282, 0.28 ) }
    dend_59 { pt3dadd( -104.983, -101.708, -62.9984, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 58/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -54.4219, -13.8813, -35.5936, 0.28 ) }
    dend_57 { pt3dadd( -56.1325, -16.2093, -37.6106, 0.28 ) }
    dend_57 { pt3dadd( -58.3296, -19.207, -40.1025, 0.83 ) }
    dend_57 { pt3dadd( -61.2496, -23.1106, -43.1859, 0.28 ) }
    dend_57 { pt3dadd( -62.2342, -24.3355, -44.129, 0.55 ) }
    dend_57 { pt3dadd( -63.9488, -26.341, -45.6039, 0.28 ) }
    dend_57 { pt3dadd( -65.036, -27.568, -46.5157, 0.55 ) }
    dend_57 { pt3dadd( -65.9891, -28.5691, -47.2579, 0.28 ) }
    dend_57 { pt3dadd( -67.3151, -29.86, -48.123, 0.55 ) }
    dend_57 { pt3dadd( -69.288, -31.6478, -49.2356, 0.28 ) }
    dend_57 { pt3dadd( -71.0659, -33.2148, -50.1224, 0.55 ) }
    dend_57 { pt3dadd( -74.2629, -35.9503, -51.6593, 0.28 ) }
    dend_57 { pt3dadd( -75.7375, -37.192, -52.3469, 0.55 ) }
    dend_57 { pt3dadd( -76.8882, -38.1717, -52.9022, 0.28 ) }
    dend_57 { pt3dadd( -77.9253, -39.083, -53.3886, 0.55 ) }
    dend_57 { pt3dadd( -81.2687, -42.0494, -54.9829, 0.28 ) }
    dend_57 { pt3dadd( -82.924, -43.4808, -55.4536, 0.55 ) }
    dend_57 { pt3dadd( -85.3963, -45.5859, -55.6677, 0.28 ) }
    dend_57 { pt3dadd( -86.9278, -46.878, -55.6433, 0.55 ) }
    dend_57 { pt3dadd( -88.2447, -48.0151, -55.9737, 0.28 ) }
    dend_57 { pt3dadd( -90.5056, -50.0303, -57.1755, 0.83 ) }
    dend_57 { pt3dadd( -95.5696, -54.814, -61.0464, 0.28 ) }
    dend_57 { pt3dadd( -96.3364, -55.5668, -61.7337, 0.83 ) }
    dend_57 { pt3dadd( -97.2441, -56.4646, -62.7115, 0.28 ) }
    dend_57 { pt3dadd( -105.814, -64.4444, -71.4952, 0.55 ) }
    dend_57 { pt3dadd( -107.363, -65.8649, -73.0989, 0.28 ) }
    dend_57 { pt3dadd( -108.426, -66.8068, -74.1587, 0.55 ) }
    dend_57 { pt3dadd( -109.979, -68.1081, -75.7023, 0.28 ) }
    dend_57 { pt3dadd( -111.12, -69.0317, -76.7195, 0.55 ) }
    dend_57 { pt3dadd( -114.945, -71.9519, -78.8613, 0.28 ) }
    dend_57 { pt3dadd( -115.877, -72.5498, -78.7731, 0.55 ) }
    dend_57 { pt3dadd( -118.701, -74.2556, -78.3356, 0.28 ) }
    dend_57 { pt3dadd( -120.306, -75.1653, -78.0069, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 91/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -54.4219, -13.8813, -35.5936, 0.28 ) }
    dend_56 { pt3dadd( -57.1876, -12.292, -36.9239, 0.28 ) }
    dend_56 { pt3dadd( -58.3163, -11.8111, -37.3784, 0.55 ) }
    dend_56 { pt3dadd( -59.7587, -11.2791, -37.9308, 0.28 ) }
    dend_56 { pt3dadd( -60.1337, -11.1568, -38.0567, 0.55 ) }
    dend_56 { pt3dadd( -61.9013, -10.6179, -38.5949, 0.28 ) }
    dend_56 { pt3dadd( -62.6545, -10.4079, -38.8039, 0.83 ) }
    dend_56 { pt3dadd( -65.6636, -9.79377, -39.5101, 0.28 ) }
    dend_56 { pt3dadd( -66.6803, -9.60528, -39.7221, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_56 { pt3dadd( -69.7544, -9.01927, -40.2173, 0.28 ) }
    dend_56 { pt3dadd( -71.8796, -8.55182, -40.4819, 0.28 ) }
    dend_56 { pt3dadd( -73.3621, -8.20074, -40.6232, 0.55 ) }
    dend_56 { pt3dadd( -74.7875, -7.84217, -40.7403, 0.28 ) }
    dend_56 { pt3dadd( -75.1218, -7.75422, -40.761, 0.55 ) }
    dend_56 { pt3dadd( -77.1156, -7.21579, -40.809, 0.28 ) }
    dend_56 { pt3dadd( -78.1042, -6.9146, -40.7812, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_35 (entry count 7/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -9.38809, 7.50967, -7.77221, 1.11 ) }
    dend_45 { pt3dadd( -8.169, 7.27514, -9.30256, 1.11 ) }
    dend_45 { pt3dadd( -6.89963, 7.34367, -11.3412, 1.38 ) }
    dend_45 { pt3dadd( -4.35795, 8.25176, -16.9568, 2.49 ) }
    dend_45 { pt3dadd( -3.55844, 9.05247, -19.8953, 2.49 ) }
    dend_45 { pt3dadd( -3.1754, 9.70436, -21.7172, 1.11 ) }
    dend_45 { pt3dadd( -2.71555, 10.4497, -23.491, 1.11 ) }
    dend_45 { pt3dadd( -1.87801, 13.0264, -27.9527, 1.11 ) }
    dend_45 { pt3dadd( -1.63043, 14.6376, -30.1715, 1.11 ) }
    dend_45 { pt3dadd( -1.5833, 15.6336, -31.2377, 1.11 ) }
    dend_45 { pt3dadd( -1.78564, 17.7592, -33.6517, 1.11 ) }
    dend_45 { pt3dadd( -2.0307, 19.7727, -36.0041, 1.38 ) }
    dend_45 { pt3dadd( -1.66303, 22.4117, -39.5533, 1.66 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.38809, 7.50967, -7.77221, 0.83 ) }
    dend_36 { pt3dadd( -11.1881, 8.36979, -7.77525, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 22/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 120.656, 60.4977, -3.5938, 0.28 ) }
    dend_34 { pt3dadd( 122.149, 60.2139, -3.6981, 0.28 ) }
    dend_34 { pt3dadd( 122.938, 60.1247, -3.80049, 0.55 ) }
    dend_34 { pt3dadd( 124.645, 59.932, -4.02178, 0.28 ) }
    dend_34 { pt3dadd( 126.192, 59.7573, -4.22235, 0.28 ) }
    dend_34 { pt3dadd( 127.006, 59.6653, -4.32796, 0.55 ) }
    dend_34 { pt3dadd( 128.268, 59.5229, -4.49148, 0.28 ) }
    dend_34 { pt3dadd( 129.255, 59.4714, -4.59074, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 30/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 120.656, 60.4977, -3.5938, 0.28 ) }
    dend_33 { pt3dadd( 122.17, 61.8547, -4.4115, 0.28 ) }
    dend_33 { pt3dadd( 122.774, 62.421, -4.72322, 1.11 ) }
    dend_33 { pt3dadd( 124.018, 63.6779, -5.35825, 0.28 ) }
    dend_33 { pt3dadd( 124.717, 64.3892, -5.72327, 0.55 ) }
    dend_33 { pt3dadd( 126.232, 65.9753, -6.54071, 0.28 ) }
    dend_33 { pt3dadd( 127.228, 67.078, -7.05642, 1.38 ) }
    dend_33 { pt3dadd( 128.181, 68.2333, -7.52671, 0.28 ) }
    dend_33 { pt3dadd( 128.688, 68.8787, -7.79289, 0.83 ) }
    dend_33 { pt3dadd( 130.463, 71.2389, -8.71035, 0.28 ) }
    dend_33 { pt3dadd( 131.176, 72.1897, -9.07186, 1.38 ) }
    dend_33 { pt3dadd( 132.546, 74.0844, -9.79808, 0.28 ) }
    dend_33 { pt3dadd( 133.879, 75.9855, -10.5069, 0.28 ) }
    dend_33 { pt3dadd( 135.444, 78.2013, -11.3736, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 44/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -19.1053, 5.4263, -15.1479, 1.38 ) }
    dend_23 { pt3dadd( -22.0719, 6.73088, -14.1901, 1.38 ) }
    dend_23 { pt3dadd( -27.3431, 9.05085, -12.9401, 1.38 ) }
    dend_23 { pt3dadd( -30.5812, 10.739, -12.3399, 1.11 ) }
    dend_23 { pt3dadd( -34.2222, 12.6547, -11.7367, 1.11 ) }
    dend_23 { pt3dadd( -36.8006, 13.9062, -11.2492, 1.11 ) }
    dend_23 { pt3dadd( -40.0705, 15.3785, -10.6908, 1.11 ) }
    dend_23 { pt3dadd( -44.6524, 17.5291, -10.0963, 1.11 ) }
    dend_23 { pt3dadd( -48.284, 19.2396, -9.90471, 1.11 ) }
    dend_23 { pt3dadd( -50.3364, 20.1104, -9.76195, 1.11 ) }
    dend_23 { pt3dadd( -54.8621, 21.8106, -9.30027, 1.11 ) }
    dend_23 { pt3dadd( -58.3185, 23.1672, -8.85156, 2.49 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 56/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -19.1053, 5.4263, -15.1479, 1.38 ) }
    dend_22 { pt3dadd( -25.3842, 2.93339, -14.8567, 1.38 ) }
    dend_22 { pt3dadd( -27.2465, 2.25965, -15.0324, 1.38 ) }
    dend_22 { pt3dadd( -30.6893, 1.21204, -16.1647, 1.38 ) }
    dend_22 { pt3dadd( -35.2159, 0.061026, -18.3776, 1.66 ) }
    dend_22 { pt3dadd( -37.6841, -0.374815, -19.709, 0.55 ) }
    dend_22 { pt3dadd( -38.3036, -0.439005, -20.0598, 0.55 ) }
    dend_22 { pt3dadd( -42.6072, -0.757365, -22.4081, 0.55 ) }
    dend_22 { pt3dadd( -45.1875, -0.525105, -24.0963, 1.11 ) }
    dend_22 { pt3dadd( -47.6347, 0.018085, -25.9318, 0.83 ) }
    dend_22 { pt3dadd( -49.9249, 0.631873, -27.7765, 0.55 ) }
    dend_22 { pt3dadd( -52.0281, 1.09631, -29.496, 0.55 ) }
    dend_22 { pt3dadd( -53.5529, 1.37768, -30.6325, 0.55 ) }
    dend_22 { pt3dadd( -56.577, 1.79268, -32.7405, 2.22 ) }
    dend_22 { pt3dadd( -58.6752, 1.9444, -34.3301, 0.83 ) }
    dend_22 { pt3dadd( -59.9534, 1.94765, -35.4462, 0.83 ) }
    dend_22 { pt3dadd( -62.0328, 1.70041, -37.4935, 0.83 ) }
    dend_22 { pt3dadd( -63.0517, 1.46793, -38.5514, 0.83 ) }
    dend_22 { pt3dadd( -65.3975, 0.74746, -41.0778, 0.28 ) }
    dend_22 { pt3dadd( -67.3097, -0.015175, -43.204, 0.83 ) }
    dend_22 { pt3dadd( -68.9768, -0.739845, -44.9684, 0.55 ) }
    dend_22 { pt3dadd( -70.4012, -1.39066, -46.3842, 0.55 ) }
    dend_22 { pt3dadd( -72.6766, -2.42192, -48.4655, 0.83 ) }
    dend_22 { pt3dadd( -73.8615, -2.98434, -49.4904, 0.28 ) }
    dend_22 { pt3dadd( -75.1112, -3.59333, -50.496, 0.55 ) }
    dend_22 { pt3dadd( -76.5303, -4.2954, -51.6662, 0.28 ) }
    dend_22 { pt3dadd( -77.6506, -4.87312, -52.5561, 0.55 ) }
    dend_22 { pt3dadd( -79.5936, -5.85448, -53.9404, 0.28 ) }
    dend_22 { pt3dadd( -80.5206, -6.31788, -54.5351, 0.55 ) }
    dend_22 { pt3dadd( -82.1878, -7.08846, -55.4765, 0.28 ) }
    dend_22 { pt3dadd( -83.5041, -7.57856, -56.0821, 1.11 ) }
    dend_22 { pt3dadd( -84.9896, -8.01822, -56.5813, 0.28 ) }
    dend_22 { pt3dadd( -85.7315, -8.18102, -56.6841, 0.28 ) }
    dend_22 { pt3dadd( -87.3021, -8.4662, -56.6203, 0.55 ) }
    dend_22 { pt3dadd( -88.2399, -8.58628, -56.4871, 0.55 ) }
    dend_22 { pt3dadd( -90.031, -8.72631, -56.0492, 0.28 ) }
    dend_22 { pt3dadd( -90.5505, -8.74605, -55.9119, 0.55 ) }
    dend_22 { pt3dadd( -91.9497, -8.70975, -55.6464, 0.28 ) }
    dend_22 { pt3dadd( -92.1886, -8.6982, -55.6231, 0.55 ) }
    dend_22 { pt3dadd( -93.6059, -8.58296, -55.7898, 0.28 ) }
    dend_22 { pt3dadd( -94.1718, -8.52983, -55.9856, 0.28 ) }
    dend_22 { pt3dadd( -94.8014, -8.46338, -56.3162, 0.55 ) }
    dend_22 { pt3dadd( -96.1331, -8.35935, -57.1325, 0.28 ) }
    dend_22 { pt3dadd( -96.841, -8.35003, -57.6246, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( -99.2916, -8.46587, -59.4935, 0.28 ) }
    dend_22 { pt3dadd( -100.014, -8.56046, -60.0854, 0.55 ) }
    dend_22 { pt3dadd( -101.84, -8.99428, -61.6271, 0.28 ) }
    dend_22 { pt3dadd( -103.271, -9.50867, -62.8232, 0.55 ) }
    dend_22 { pt3dadd( -105.132, -10.4294, -64.2793, 0.28 ) }
    dend_22 { pt3dadd( -105.684, -10.7357, -64.663, 0.28 ) }
    dend_22 { pt3dadd( -106.737, -11.3982, -65.2845, 0.83 ) }
    dend_22 { pt3dadd( -108.381, -12.43, -66.1738, 0.28 ) }
    dend_22 { pt3dadd( -109.471, -13.0856, -66.7166, 0.83 ) }
    dend_22 { pt3dadd( -111.109, -13.9022, -67.4656, 0.28 ) }
    dend_22 { pt3dadd( -112.264, -14.4565, -67.992, 0.55 ) }
    dend_22 { pt3dadd( -113.621, -15.0471, -68.59, 0.55 ) }
    dend_22 { pt3dadd( -114.921, -15.5474, -69.1567, 0.83 ) }
    dend_22 { pt3dadd( -116.572, -16.0925, -69.8559, 1.38 ) }
    dend_22 { pt3dadd( -118.385, -16.6335, -70.6791, 0.55 ) }
    dend_22 { pt3dadd( -120.266, -17.2047, -71.6606, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_0 (entry count 16/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.0906, 13.0974, 14.3805, 1.38 ) }
    dend_18 { pt3dadd( 18.9885, 15.2321, 13.8714, 1.38 ) }
    dend_18 { pt3dadd( 20.7702, 16.6141, 13.4731, 1.66 ) }
    dend_18 { pt3dadd( 22.908, 18.4055, 13.0582, 1.66 ) }
    dend_18 { pt3dadd( 26.7192, 21.4987, 12.4965, 1.11 ) }
    dend_18 { pt3dadd( 28.9083, 23.1288, 12.2931, 1.38 ) }
    dend_18 { pt3dadd( 30.4247, 24.1813, 12.2088, 1.11 ) }
    dend_18 { pt3dadd( 31.7341, 24.9395, 12.1891, 1.66 ) }
    dend_18 { pt3dadd( 34.1631, 26.325, 12.285, 1.38 ) }
    dend_18 { pt3dadd( 36.2683, 27.5628, 12.3114, 1.38 ) }
    dend_18 { pt3dadd( 38.4883, 28.8639, 12.2921, 1.38 ) }
    dend_18 { pt3dadd( 39.6924, 29.5641, 12.3259, 1.38 ) }
    dend_18 { pt3dadd( 41.6446, 30.5982, 12.3788, 0.55 ) }
    dend_18 { pt3dadd( 44.241, 31.8822, 12.3039, 1.11 ) }
    dend_18 { pt3dadd( 47.0505, 33.3449, 11.8152, 0.83 ) }
    dend_18 { pt3dadd( 48.5703, 34.4049, 11.3341, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 32/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 16.0906, 13.0974, 14.3805, 2.22 ) }
    dend_1 { pt3dadd( 17.863, 14.5131, 16.4525, 2.22 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 34/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 24.7447, -31.7602, 2.65167, 0.28 ) }
    axon_1 { pt3dadd( 34.0689, -43.5101, 2.65167, 0.28 ) }
    axon_1 { pt3dadd( 43.393, -55.26, 2.65167, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 37/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.66303, 22.4117, -39.5533, 1.11 ) }
    dend_46 { pt3dadd( -4.20762, 28.946, -44.3568, 1.11 ) }
    dend_46 { pt3dadd( -5.67333, 32.7099, -47.1237, 1.11 ) }
    dend_46 { pt3dadd( -7.51771, 37.4461, -50.6054, 1.11 ) }
    dend_46 { pt3dadd( -9.36493, 42.1897, -54.0925, 1.11 ) }
    dend_46 { pt3dadd( -10.5269, 45.1735, -56.286, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 43/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -11.1881, 8.36979, -7.77525, 0.83 ) }
    dend_44 { pt3dadd( -13.2301, 11.8893, -5.33466, 0.83 ) }
    dend_44 { pt3dadd( -13.8824, 13.9175, -4.2082, 0.83 ) }
    dend_44 { pt3dadd( -14.7144, 17.0508, -2.40181, 0.83 ) }
    dend_44 { pt3dadd( -14.9559, 18.622, -1.50123, 0.83 ) }
    dend_44 { pt3dadd( -15.1506, 21.7576, -0.154635, 0.83 ) }
    dend_44 { pt3dadd( -15.1459, 24.8841, 0.949389, 0.83 ) }
    dend_44 { pt3dadd( -15.1065, 27.5449, 1.89311, 0.83 ) }
    dend_44 { pt3dadd( -14.8736, 31.0661, 2.97116, 0.55 ) }
    dend_44 { pt3dadd( -14.426, 33.5877, 3.59784, 0.83 ) }
    dend_44 { pt3dadd( -13.4434, 38.2247, 4.37036, 0.55 ) }
    dend_44 { pt3dadd( -13.2519, 39.2755, 4.41112, 0.28 ) }
    dend_44 { pt3dadd( -13.1, 40.7752, 4.30718, 0.55 ) }
    dend_44 { pt3dadd( -13.1196, 43.2894, 3.98655, 0.28 ) }
    dend_44 { pt3dadd( -13.2122, 44.1648, 3.84865, 0.55 ) }
    dend_44 { pt3dadd( -14.0374, 48.121, 3.48832, 0.55 ) }
    dend_44 { pt3dadd( -14.7616, 50.9994, 3.44434, 0.28 ) }
    dend_44 { pt3dadd( -15.5564, 54.227, 3.50604, 0.55 ) }
    dend_44 { pt3dadd( -15.9126, 55.8361, 3.57317, 0.28 ) }
    dend_44 { pt3dadd( -16.4057, 58.5715, 3.72966, 0.55 ) }
    dend_44 { pt3dadd( -16.7387, 60.9899, 3.85868, 0.28 ) }
    dend_44 { pt3dadd( -16.8298, 62.2123, 3.93707, 0.55 ) }
    dend_44 { pt3dadd( -16.8848, 64.7426, 4.08399, 0.55 ) }
    dend_44 { pt3dadd( -16.9668, 66.5448, 4.07069, 0.55 ) }
    dend_44 { pt3dadd( -17.0282, 68.2763, 3.94825, 0.55 ) }
    dend_44 { pt3dadd( -17.1114, 71.2949, 3.36011, 0.28 ) }
    dend_44 { pt3dadd( -17.1509, 73.0428, 2.85179, 0.83 ) }
    dend_44 { pt3dadd( -17.2289, 75.6505, 1.99702, 0.83 ) }
    dend_44 { pt3dadd( -17.359, 78.0139, 1.15072, 0.28 ) }
    dend_44 { pt3dadd( -17.4234, 79.4578, 0.671859, 0.55 ) }
    dend_44 { pt3dadd( -17.5275, 81.9032, 0.0646808, 0.28 ) }
    dend_44 { pt3dadd( -17.7753, 84.2305, -0.545646, 0.83 ) }
    dend_44 { pt3dadd( -18.0559, 86.2356, -1.14507, 0.28 ) }
    dend_44 { pt3dadd( -18.29, 87.8324, -1.64037, 0.83 ) }
    dend_44 { pt3dadd( -18.6777, 90.9267, -2.63008, 0.28 ) }
    dend_44 { pt3dadd( -19.0487, 93.7597, -3.6189, 0.55 ) }
    dend_44 { pt3dadd( -19.8925, 99.9107, -5.60546, 0.28 ) }
    dend_44 { pt3dadd( -20.1432, 101.83, -6.21136, 0.28 ) }
    dend_44 { pt3dadd( -20.3347, 104.12, -6.94748, 0.55 ) }
    dend_44 { pt3dadd( -20.4553, 107.091, -7.8962, 0.28 ) }
    dend_44 { pt3dadd( -20.5118, 108.934, -8.49334, 0.55 ) }
    dend_44 { pt3dadd( -20.6062, 112.176, -9.49444, 0.28 ) }
    dend_44 { pt3dadd( -20.6531, 114.234, -9.93389, 0.28 ) }
    dend_44 { pt3dadd( -20.8809, 116.72, -10.5706, 0.55 ) }
    dend_44 { pt3dadd( -21.187, 118.836, -11.2195, 0.28 ) }
    dend_44 { pt3dadd( -21.623, 121.252, -12.0563, 0.55 ) }
    dend_44 { pt3dadd( -22.138, 123.435, -12.9325, 0.55 ) }
    dend_44 { pt3dadd( -22.6546, 125.051, -13.7612, 0.55 ) }
    dend_44 { pt3dadd( -23.8076, 127.964, -15.3075, 0.28 ) }
    dend_44 { pt3dadd( -24.6162, 129.685, -16.225, 0.55 ) }
    dend_44 { pt3dadd( -25.1152, 130.711, -16.7973, 0.28 ) }
    dend_44 { pt3dadd( -25.4711, 131.472, -17.2391, 0.55 ) }
    dend_44 { pt3dadd( -26.1899, 133.167, -18.3259, 0.28 ) }
    dend_44 { pt3dadd( -26.7423, 134.193, -19.0346, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 97/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.1881, 8.36979, -7.77525, 0.55 ) }
    dend_37 { pt3dadd( -12.3727, 9.49765, -8.25099, 0.55 ) }
    dend_37 { pt3dadd( -13.6323, 11.1629, -9.26638, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( -14.5219, 12.4514, -10.1023, 0.55 ) }
    dend_37 { pt3dadd( -15.759, 14.2165, -11.2067, 0.55 ) }
    dend_37 { pt3dadd( -17.8354, 17.2601, -12.9317, 0.83 ) }
    dend_37 { pt3dadd( -19.4966, 19.9126, -14.4611, 0.83 ) }
    dend_37 { pt3dadd( -20.8673, 22.5088, -15.9871, 0.28 ) }
    dend_37 { pt3dadd( -21.8749, 24.5605, -17.238, 0.55 ) }
    dend_37 { pt3dadd( -22.936, 26.5296, -18.5407, 0.83 ) }
    dend_37 { pt3dadd( -24.2843, 28.3884, -19.8967, 0.83 ) }
    dend_37 { pt3dadd( -26.4793, 30.2559, -21.4511, 0.28 ) }
    dend_37 { pt3dadd( -26.985, 30.5366, -21.7267, 0.83 ) }
    dend_37 { pt3dadd( -28.9927, 31.253, -22.6488, 0.55 ) }
    dend_37 { pt3dadd( -31.5741, 31.9234, -23.8591, 0.55 ) }
    dend_37 { pt3dadd( -33.9017, 32.3832, -24.8897, 0.55 ) }
    dend_37 { pt3dadd( -36.0705, 32.6637, -25.8235, 0.83 ) }
    dend_37 { pt3dadd( -38.6653, 32.8863, -26.9682, 0.28 ) }
    dend_37 { pt3dadd( -39.9503, 33.0424, -27.574, 0.28 ) }
    dend_37 { pt3dadd( -41.9829, 33.4611, -28.6112, 0.55 ) }
    dend_37 { pt3dadd( -43.5192, 33.8732, -29.4456, 0.55 ) }
    dend_37 { pt3dadd( -45.9917, 34.6297, -30.9254, 0.55 ) }
    dend_37 { pt3dadd( -49.0106, 35.6158, -32.7685, 0.55 ) }
    dend_37 { pt3dadd( -51.5813, 36.5686, -34.4947, 0.55 ) }
    dend_37 { pt3dadd( -52.9108, 37.1462, -35.4864, 0.28 ) }
    dend_37 { pt3dadd( -53.1961, 37.2908, -35.7372, 0.83 ) }
    dend_37 { pt3dadd( -55.0769, 38.7122, -37.7211, 0.28 ) }
    dend_37 { pt3dadd( -55.2854, 38.9369, -37.9766, 0.55 ) }
    dend_37 { pt3dadd( -55.9018, 39.705, -38.7929, 0.28 ) }
    dend_37 { pt3dadd( -56.3143, 40.1969, -39.4109, 0.55 ) }
    dend_37 { pt3dadd( -57.6794, 41.7545, -41.4637, 0.28 ) }
    dend_37 { pt3dadd( -58.942, 43.1571, -43.2863, 0.83 ) }
    dend_37 { pt3dadd( -60.4976, 44.9646, -45.3123, 0.28 ) }
    dend_37 { pt3dadd( -61.5581, 46.2672, -46.6081, 0.55 ) }
    dend_37 { pt3dadd( -62.975, 48.0722, -48.2393, 0.28 ) }
    dend_37 { pt3dadd( -63.4892, 48.7401, -48.8219, 0.83 ) }
    dend_37 { pt3dadd( -65.5163, 51.3698, -50.9481, 0.55 ) }
    dend_37 { pt3dadd( -67.2655, 53.5485, -52.7079, 0.55 ) }
    dend_37 { pt3dadd( -68.4167, 55.1447, -53.8352, 0.55 ) }
    dend_37 { pt3dadd( -69.8261, 57.2621, -55.1814, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_23 (entry count 37/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -58.3185, 23.1672, -8.85156, 0.83 ) }
    dend_31 { pt3dadd( -61.6722, 22.309, -8.90767, 0.83 ) }
    dend_31 { pt3dadd( -63.1195, 21.991, -9.04613, 0.55 ) }
    dend_31 { pt3dadd( -64.7498, 21.6763, -9.24675, 1.11 ) }
    dend_31 { pt3dadd( -66.906, 21.2573, -9.64335, 0.83 ) }
    dend_31 { pt3dadd( -69.0536, 20.8886, -10.0744, 0.83 ) }
    dend_31 { pt3dadd( -72.755, 20.3673, -10.8347, 1.38 ) }
    dend_31 { pt3dadd( -75.2548, 20.0635, -11.4227, 0.83 ) }
    dend_31 { pt3dadd( -77.3854, 19.8153, -11.9902, 0.83 ) }
    dend_31 { pt3dadd( -80.4674, 19.4836, -12.9195, 1.38 ) }
    dend_31 { pt3dadd( -83.324, 19.2134, -13.9418, 0.55 ) }
    dend_31 { pt3dadd( -84.8079, 19.0936, -14.5324, 0.55 ) }
    dend_31 { pt3dadd( -86.6985, 18.9078, -15.2956, 1.38 ) }
    dend_31 { pt3dadd( -90.5419, 18.4058, -16.8281, 0.83 ) }
    dend_31 { pt3dadd( -92.5182, 18.1333, -17.5953, 1.66 ) }
    dend_31 { pt3dadd( -96.5912, 17.5328, -19.2102, 0.28 ) }
    dend_31 { pt3dadd( -98.4544, 17.2015, -20.011, 1.11 ) }
    dend_31 { pt3dadd( -99.9762, 16.9006, -20.6822, 0.28 ) }
    dend_31 { pt3dadd( -100.721, 16.7635, -21.0093, 0.55 ) }
    dend_31 { pt3dadd( -102.36, 16.4216, -21.645, 0.28 ) }
    dend_31 { pt3dadd( -104.792, 15.9456, -22.3965, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -58.3185, 23.1672, -8.85156, 0.83 ) }
    dend_24 { pt3dadd( -60.6351, 26.0138, -9.25965, 0.83 ) }
    dend_24 { pt3dadd( -61.5232, 27.0671, -9.43229, 0.83 ) }
    dend_24 { pt3dadd( -63.7099, 29.3141, -9.8465, 1.11 ) }
    dend_24 { pt3dadd( -65.2912, 30.7137, -10.1626, 0.83 ) }
    dend_24 { pt3dadd( -67.6201, 32.5641, -10.6044, 1.11 ) }
    dend_24 { pt3dadd( -69.6582, 34.0692, -10.9824, 0.83 ) }
    dend_24 { pt3dadd( -71.0692, 34.9145, -11.3045, 0.83 ) }
    dend_24 { pt3dadd( -73.8239, 36.3519, -11.8508, 1.94 ) }
    dend_24 { pt3dadd( -75.9738, 37.3942, -12.1446, 1.11 ) }
    dend_24 { pt3dadd( -77.3003, 37.9977, -12.2484, 0.83 ) }
    dend_24 { pt3dadd( -78.7968, 38.6963, -12.3054, 1.38 ) }
    dend_24 { pt3dadd( -81.7648, 40.005, -12.3433, 0.83 ) }
    dend_24 { pt3dadd( -84.0291, 41.098, -12.3666, 0.83 ) }
    dend_24 { pt3dadd( -87.209, 42.8044, -12.3726, 2.77 ) }
    dend_24 { pt3dadd( -89.9626, 44.4412, -12.2284, 0.55 ) }
    dend_24 { pt3dadd( -91.3219, 45.3206, -12.044, 0.55 ) }
    dend_24 { pt3dadd( -93.2091, 46.589, -11.6585, 0.83 ) }
    dend_24 { pt3dadd( -94.3345, 47.3752, -11.4179, 0.55 ) }
    dend_24 { pt3dadd( -96.1222, 48.5902, -11.0922, 0.55 ) }
    dend_24 { pt3dadd( -99.2068, 50.7625, -10.5656, 1.94 ) }
    dend_24 { pt3dadd( -102.657, 53.1524, -9.74851, 0.83 ) }
    dend_24 { pt3dadd( -103.795, 53.9179, -9.32187, 0.83 ) }
    dend_24 { pt3dadd( -106.344, 55.4873, -7.90529, 1.11 ) }
    dend_24 { pt3dadd( -107.916, 56.158, -6.64589, 0.55 ) }
    dend_24 { pt3dadd( -109.59, 56.5649, -4.93992, 0.55 ) }
    dend_24 { pt3dadd( -111.858, 56.7197, -2.32665, 0.83 ) }
    dend_24 { pt3dadd( -115.1, 56.5428, 1.63549, 0.83 ) }
    dend_24 { pt3dadd( -117.869, 56.2699, 5.23679, 2.77 ) }
    dend_24 { pt3dadd( -121.781, 55.6834, 10.4844, 0.83 ) }
    dend_24 { pt3dadd( -123.062, 55.4338, 12.1616, 1.11 ) }
    dend_24 { pt3dadd( -124.075, 55.2118, 13.4132, 0.28 ) }
    dend_24 { pt3dadd( -125.634, 54.9692, 15.045, 1.11 ) }
    dend_24 { pt3dadd( -127.742, 54.8915, 16.6881, 0.28 ) }
    dend_24 { pt3dadd( -129.182, 55.0809, 17.5457, 0.83 ) }
    dend_24 { pt3dadd( -131.562, 55.8917, 18.5689, 0.28 ) }
    dend_24 { pt3dadd( -132.278, 56.2478, 18.8293, 0.55 ) }
    dend_24 { pt3dadd( -133.847, 57.3597, 19.3221, 0.55 ) }
    dend_24 { pt3dadd( -135.666, 59.0581, 19.7382, 0.55 ) }
    dend_24 { pt3dadd( -137.125, 60.6602, 19.8973, 0.55 ) }
    dend_24 { pt3dadd( -138.448, 62.4631, 19.8797, 1.11 ) }
    dend_24 { pt3dadd( -139.247, 63.762, 19.7579, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( -140.804, 66.5922, 19.4171, 1.66 ) }
    dend_24 { pt3dadd( -141.482, 67.9267, 19.2162, 0.28 ) }
    dend_24 { pt3dadd( -142.178, 69.3573, 18.9515, 0.55 ) }
    dend_24 { pt3dadd( -143.269, 71.4199, 18.5214, 0.28 ) }
    dend_24 { pt3dadd( -143.885, 72.3701, 18.3629, 0.83 ) }
    dend_24 { pt3dadd( -144.638, 73.3459, 18.3661, 0.28 ) }
    dend_24 { pt3dadd( -145.2, 74.0196, 18.3921, 0.28 ) }
    dend_24 { pt3dadd( -146.373, 75.3404, 18.515, 0.55 ) }
    dend_24 { pt3dadd( -147.576, 76.6349, 18.7515, 0.28 ) }
    dend_24 { pt3dadd( -149.898, 78.8964, 19.447, 1.11 ) }
    dend_24 { pt3dadd( -153.224, 82.0281, 20.5756, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 48.5703, 34.4049, 11.3341, 0.55 ) }
    dend_20 { pt3dadd( 49.3946, 34.7614, 10.2347, 0.55 ) }
    dend_20 { pt3dadd( 50.1398, 35.1328, 9.09479, 0.55 ) }
    dend_20 { pt3dadd( 50.876, 35.5223, 7.92534, 0.55 ) }
    dend_20 { pt3dadd( 53.0446, 36.6046, 4.60305, 1.11 ) }
    dend_20 { pt3dadd( 55.5545, 37.8702, 0.862819, 0.28 ) }
    dend_20 { pt3dadd( 56.525, 38.3193, -0.560576, 1.38 ) }
    dend_20 { pt3dadd( 58.5325, 39.1817, -3.69807, 0.28 ) }
    dend_20 { pt3dadd( 58.692, 39.2479, -3.96062, 0.83 ) }
    dend_20 { pt3dadd( 59.4024, 39.5545, -5.14725, 0.55 ) }
    dend_20 { pt3dadd( 60.4464, 40.107, -6.90424, 0.55 ) }
    dend_20 { pt3dadd( 62.13, 41.1193, -9.74051, 0.55 ) }
    dend_20 { pt3dadd( 63.1134, 41.7578, -11.356, 0.55 ) }
    dend_20 { pt3dadd( 63.9743, 42.424, -12.7598, 0.28 ) }
    dend_20 { pt3dadd( 64.4425, 42.8567, -13.5648, 0.55 ) }
    dend_20 { pt3dadd( 65.1581, 43.7433, -14.9059, 0.28 ) }
    dend_20 { pt3dadd( 65.5308, 44.3182, -15.6242, 0.55 ) }
    dend_20 { pt3dadd( 66.1484, 45.6301, -16.8109, 1.38 ) }
    dend_20 { pt3dadd( 67.1591, 48.0655, -18.5834, 0.28 ) }
    dend_20 { pt3dadd( 67.3983, 48.7072, -18.9802, 0.55 ) }
    dend_20 { pt3dadd( 67.9834, 50.4993, -19.9527, 0.28 ) }
    dend_20 { pt3dadd( 68.2008, 51.0815, -20.2739, 0.55 ) }
    dend_20 { pt3dadd( 68.8364, 52.5962, -21.1295, 0.28 ) }
    dend_20 { pt3dadd( 69.3198, 53.5581, -21.6329, 0.55 ) }
    dend_20 { pt3dadd( 69.9204, 54.5525, -22.0657, 0.28 ) }
    dend_20 { pt3dadd( 70.192, 54.9318, -22.2309, 0.83 ) }
    dend_20 { pt3dadd( 72.6863, 57.851, -23.4812, 0.28 ) }
    dend_20 { pt3dadd( 73.8305, 59.018, -24.0298, 1.11 ) }
    dend_20 { pt3dadd( 75.1916, 60.221, -24.6676, 0.28 ) }
    dend_20 { pt3dadd( 76.0563, 60.9254, -25.0905, 0.55 ) }
    dend_20 { pt3dadd( 77.1145, 61.7317, -25.5961, 0.28 ) }
    dend_20 { pt3dadd( 77.717, 62.1709, -25.8941, 0.55 ) }
    dend_20 { pt3dadd( 80.1414, 63.8812, -27.0809, 0.28 ) }
    dend_20 { pt3dadd( 80.6372, 64.2182, -27.3729, 0.55 ) }
    dend_20 { pt3dadd( 82.1399, 65.2451, -28.5638, 0.28 ) }
    dend_20 { pt3dadd( 82.6756, 65.6197, -29.037, 0.55 ) }
    dend_20 { pt3dadd( 83.3144, 66.1226, -29.6647, 0.28 ) }
    dend_20 { pt3dadd( 83.6063, 66.3863, -29.9655, 0.28 ) }
    dend_20 { pt3dadd( 83.7361, 66.518, -30.0924, 0.55 ) }
    dend_20 { pt3dadd( 85.3177, 68.1954, -31.5425, 0.28 ) }
    dend_20 { pt3dadd( 86.3616, 69.302, -32.4849, 1.38 ) }
    dend_20 { pt3dadd( 87.4198, 70.4049, -33.4968, 0.28 ) }
    dend_20 { pt3dadd( 87.833, 70.7847, -33.9196, 0.55 ) }
    dend_20 { pt3dadd( 88.425, 71.2794, -34.5794, 0.28 ) }
    dend_20 { pt3dadd( 89.0972, 71.7694, -35.3397, 0.55 ) }
    dend_20 { pt3dadd( 90.7025, 72.7418, -37.101, 0.28 ) }
    dend_20 { pt3dadd( 91.3034, 72.9919, -37.8452, 0.55 ) }
    dend_20 { pt3dadd( 92.9511, 73.4092, -39.9538, 0.28 ) }
    dend_20 { pt3dadd( 93.6216, 73.546, -40.8383, 0.83 ) }
    dend_20 { pt3dadd( 94.5589, 73.691, -42.1202, 0.28 ) }
    dend_20 { pt3dadd( 95.0971, 73.7337, -42.838, 0.55 ) }
    dend_20 { pt3dadd( 97.5299, 73.6403, -45.8642, 0.28 ) }
    dend_20 { pt3dadd( 98.1204, 73.5731, -46.5762, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 64/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 48.5703, 34.4049, 11.3341, 0.28 ) }
    dend_19 { pt3dadd( 51.3064, 34.7676, 11.6696, 0.28 ) }
    dend_19 { pt3dadd( 53.8184, 35.0413, 12.1166, 0.55 ) }
    dend_19 { pt3dadd( 55.735, 35.2648, 12.5006, 0.83 ) }
    dend_19 { pt3dadd( 57.7209, 35.5177, 12.7792, 0.83 ) }
    dend_19 { pt3dadd( 59.6866, 35.7726, 12.9898, 0.28 ) }
    dend_19 { pt3dadd( 61.4413, 36.0135, 13.1596, 0.55 ) }
    dend_19 { pt3dadd( 63.2181, 36.2969, 13.3073, 0.28 ) }
    dend_19 { pt3dadd( 64.454, 36.525, 13.3674, 1.11 ) }
    dend_19 { pt3dadd( 67.4969, 37.1304, 13.3319, 0.28 ) }
    dend_19 { pt3dadd( 68.2223, 37.323, 13.2799, 0.28 ) }
    dend_19 { pt3dadd( 69.6227, 37.7406, 13.1008, 0.55 ) }
    dend_19 { pt3dadd( 72.0924, 38.5804, 12.6763, 0.28 ) }
    dend_19 { pt3dadd( 72.6003, 38.7756, 12.5715, 0.55 ) }
    dend_19 { pt3dadd( 74.5348, 39.6029, 12.335, 0.28 ) }
    dend_19 { pt3dadd( 75.8148, 40.2288, 12.2659, 0.83 ) }
    dend_19 { pt3dadd( 76.9069, 40.8165, 12.0813, 0.83 ) }
    dend_19 { pt3dadd( 78.1062, 41.4961, 11.7667, 0.28 ) }
    dend_19 { pt3dadd( 78.959, 42.0389, 11.457, 0.55 ) }
    dend_19 { pt3dadd( 81.1746, 43.595, 10.4953, 0.28 ) }
    dend_19 { pt3dadd( 82.6353, 44.7217, 9.81433, 0.83 ) }
    dend_19 { pt3dadd( 85.4784, 47.0489, 8.39896, 0.28 ) }
    dend_19 { pt3dadd( 86.0344, 47.5424, 8.11759, 0.83 ) }
    dend_19 { pt3dadd( 87.7776, 49.1303, 7.2551, 0.28 ) }
    dend_19 { pt3dadd( 88.3166, 49.6416, 6.99599, 0.83 ) }
    dend_19 { pt3dadd( 90.049, 51.3966, 6.05492, 0.28 ) }
    dend_19 { pt3dadd( 90.4102, 51.7933, 5.92396, 0.55 ) }
    dend_19 { pt3dadd( 91.1517, 52.6177, 5.80107, 0.28 ) }
    dend_19 { pt3dadd( 91.5184, 53.0299, 5.78528, 0.55 ) }
    dend_19 { pt3dadd( 92.7691, 54.3889, 5.91302, 0.28 ) }
    dend_19 { pt3dadd( 94.3996, 56.055, 6.23732, 0.83 ) }
    dend_19 { pt3dadd( 95.6248, 57.2507, 6.59596, 0.28 ) }
    dend_19 { pt3dadd( 96.3602, 57.9076, 6.88846, 0.55 ) }
    dend_19 { pt3dadd( 98.0041, 59.1381, 7.46455, 0.28 ) }
    dend_19 { pt3dadd( 98.5935, 59.4813, 7.65552, 0.83 ) }
    dend_19 { pt3dadd( 99.8821, 59.9806, 8.02298, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_19 { pt3dadd( 100.855, 60.268, 8.36412, 0.55 ) }
    dend_19 { pt3dadd( 102.1, 60.5085, 8.59964, 0.28 ) }
    dend_19 { pt3dadd( 104.938, 60.9192, 8.88984, 1.94 ) }
    dend_19 { pt3dadd( 107.623, 61.2103, 9.02986, 0.28 ) }
    dend_19 { pt3dadd( 109.626, 61.3902, 9.10957, 0.28 ) }
    dend_19 { pt3dadd( 112.209, 61.5879, 9.15474, 0.55 ) }
    dend_19 { pt3dadd( 115.998, 61.8194, 9.21341, 0.28 ) }
    dend_19 { pt3dadd( 117.12, 61.9028, 9.22504, 1.66 ) }
    dend_19 { pt3dadd( 125.858, 64.3002, 9.17434, 1.66 ) }
    dend_19 { pt3dadd( 134.445, 66.7775, 7.69995, 1.66 ) }
    dend_19 { pt3dadd( 142.92, 69.6969, 6.45099, 1.66 ) }
    dend_19 { pt3dadd( 150.806, 73.5513, 4.33621, 1.66 ) }
    dend_19 { pt3dadd( 157.269, 78.5193, 0.531843, 1.66 ) }
    dend_19 { pt3dadd( 163.756, 82.9243, -3.90842, 1.66 ) }
    dend_19 { pt3dadd( 170.64, 88.0133, -6.66514, 1.66 ) }
    dend_19 { pt3dadd( 176.421, 93.9667, -10.0541, 1.66 ) }
    dend_19 { pt3dadd( 182.583, 100.29, -11.5422, 1.66 ) }
    dend_19 { pt3dadd( 189.148, 106.058, -13.5734, 1.66 ) }
    dend_19 { pt3dadd( 195.767, 111.876, -15.2518, 1.66 ) }
    dend_19 { pt3dadd( 202.121, 118.152, -15.9311, 1.66 ) }
    dend_19 { pt3dadd( 207.848, 124.976, -16.6426, 1.66 ) }
    dend_19 { pt3dadd( 212.458, 132.596, -16.6335, 1.66 ) }
    dend_19 { pt3dadd( 217.237, 140.025, -15.3971, 1.66 ) }
    dend_19 { pt3dadd( 221.421, 147.752, -13.9429, 1.66 ) }
    dend_19 { pt3dadd( 224.654, 155.973, -12.9852, 1.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 25/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 17.863, 14.5131, 16.4525, 2.22 ) }
    dend_9 { pt3dadd( 20.1262, 13.4799, 17.7833, 2.22 ) }
    dend_9 { pt3dadd( 21.3201, 13.3056, 19.0069, 0.83 ) }
    dend_9 { pt3dadd( 22.7852, 13.5848, 20.7957, 0.83 ) }
    dend_9 { pt3dadd( 23.838, 14.221, 23.2508, 0.83 ) }
    dend_9 { pt3dadd( 25.5048, 15.0749, 27.2249, 0.83 ) }
    dend_9 { pt3dadd( 26.3686, 15.4234, 29.1571, 1.38 ) }
    dend_9 { pt3dadd( 27.602, 15.8206, 31.888, 1.66 ) }
    dend_9 { pt3dadd( 28.8266, 16.1825, 34.7379, 2.22 ) }
    dend_9 { pt3dadd( 33.106, 17.0562, 44.5022, 0.83 ) }
    dend_9 { pt3dadd( 33.9274, 17.077, 46.2847, 1.11 ) }
    dend_9 { pt3dadd( 34.6515, 16.7157, 47.649, 0.55 ) }
    dend_9 { pt3dadd( 35.4782, 16.0912, 49.0139, 0.55 ) }
    dend_9 { pt3dadd( 36.8313, 14.6328, 50.9228, 0.55 ) }
    dend_9 { pt3dadd( 38.1981, 12.7106, 52.5647, 0.83 ) }
    dend_9 { pt3dadd( 38.6649, 11.6267, 52.7309, 0.55 ) }
    dend_9 { pt3dadd( 40.0806, 7.15779, 53.5438, 0.55 ) }
    dend_9 { pt3dadd( 43.8883, 4.33344, 62.1347, 0.55 ) }
    dend_9 { pt3dadd( 47.3196, 3.33985, 71.2904, 0.55 ) }
    dend_9 { pt3dadd( 51.1005, 3.90749, 80.3429, 0.55 ) }
    dend_9 { pt3dadd( 54.356, 3.6822, 89.6143, 0.55 ) }
    dend_9 { pt3dadd( 56.5947, 1.38456, 98.8952, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 17.863, 14.5131, 16.4525, 1.38 ) }
    dend_2 { pt3dadd( 23.3459, 14.0878, 18.4824, 1.38 ) }
    dend_2 { pt3dadd( 28.2582, 14.0977, 20.0174, 0.83 ) }
    dend_2 { pt3dadd( 31.9859, 13.9999, 21.081, 1.11 ) }
    dend_2 { pt3dadd( 38.5299, 13.6193, 22.9149, 0.83 ) }
    dend_2 { pt3dadd( 44.5069, 13.0783, 24.5959, 1.11 ) }
    dend_2 { pt3dadd( 49.6874, 12.551, 25.9052, 0.83 ) }
    dend_2 { pt3dadd( 54.0214, 11.9259, 26.7047, 0.83 ) }
    dend_2 { pt3dadd( 61.2204, 10.7392, 27.6523, 1.11 ) }
    dend_2 { pt3dadd( 63.911, 10.2006, 27.9418, 0.83 ) }
    dend_2 { pt3dadd( 66.4631, 9.45734, 28.1751, 1.11 ) }
    dend_2 { pt3dadd( 71.434, 7.86721, 28.4296, 0.83 ) }
    dend_2 { pt3dadd( 77.8049, 5.5387, 28.7294, 1.11 ) }
    dend_2 { pt3dadd( 79.6603, 4.82753, 28.8073, 0.83 ) }
    dend_2 { pt3dadd( 81.2168, 4.32433, 28.9692, 0.83 ) }
    dend_2 { pt3dadd( 83.4292, 3.67654, 29.3512, 0.83 ) }
    dend_2 { pt3dadd( 87.8592, 2.4425, 30.477, 1.38 ) }
    dend_2 { pt3dadd( 91.3433, 1.40239, 31.7175, 0.83 ) }
    dend_2 { pt3dadd( 96.895, -0.253525, 34.0186, 0.83 ) }
    dend_2 { pt3dadd( 102.678, -1.84794, 36.4682, 0.55 ) }
    dend_2 { pt3dadd( 103.042, -1.93189, 36.6193, 0.83 ) }
    dend_2 { pt3dadd( 105.809, -2.52262, 37.7119, 0.83 ) }
    dend_2 { pt3dadd( 108.709, -3.15961, 38.646, 0.55 ) }
    dend_2 { pt3dadd( 110.395, -3.53576, 39.0217, 0.55 ) }
    dend_2 { pt3dadd( 112.879, -3.99803, 39.3631, 0.55 ) }
    dend_2 { pt3dadd( 116.617, -4.56776, 39.6259, 0.55 ) }
    dend_2 { pt3dadd( 120.243, -5.03589, 39.9196, 0.55 ) }
    dend_2 { pt3dadd( 125.513, -5.58018, 40.3869, 0.55 ) }
    dend_2 { pt3dadd( 129.364, -5.84107, 40.7395, 0.83 ) }
    dend_2 { pt3dadd( 134.919, -6.05244, 41.256, 0.83 ) }
    dend_2 { pt3dadd( 139.541, -6.22607, 41.6945, 0.55 ) }
    dend_2 { pt3dadd( 141.96, -6.17298, 41.9147, 0.55 ) }
    dend_2 { pt3dadd( 143.527, -6.00009, 42.0499, 0.55 ) }
    dend_2 { pt3dadd( 146.998, -5.3114, 42.438, 1.38 ) }
    dend_2 { pt3dadd( 149.775, -4.62184, 42.6672, 0.55 ) }
    dend_2 { pt3dadd( 151.358, -4.1966, 42.7393, 0.55 ) }
    dend_2 { pt3dadd( 156.542, -2.88178, 42.8475, 0.55 ) }
    dend_2 { pt3dadd( 161.202, -1.64896, 42.8469, 0.55 ) }
    dend_2 { pt3dadd( 165.383, -0.645965, 42.8009, 0.83 ) }
    dend_2 { pt3dadd( 170.0, 0.34734, 42.7009, 0.55 ) }
    dend_2 { pt3dadd( 173.916, 0.982987, 42.5804, 1.11 ) }
    dend_2 { pt3dadd( 177.544, 1.34828, 42.4975, 0.55 ) }
    dend_2 { pt3dadd( 179.538, 1.38563, 42.4635, 0.55 ) }
    dend_2 { pt3dadd( 182.43, 1.16066, 42.4127, 0.55 ) }
    dend_2 { pt3dadd( 185.042, 0.61694, 42.4492, 0.55 ) }
    dend_2 { pt3dadd( 188.446, -0.689345, 42.8053, 0.83 ) }
    dend_2 { pt3dadd( 191.305, -2.05579, 43.1998, 0.55 ) }
    dend_2 { pt3dadd( 194.477, -3.84476, 43.6503, 0.55 ) }
    dend_2 { pt3dadd( 198.723, -6.58799, 44.3078, 0.55 ) }
    dend_2 { pt3dadd( 200.983, -8.2394, 44.6957, 0.83 ) }
    dend_2 { pt3dadd( 204.128, -10.8813, 45.278, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -10.5269, 45.1735, -56.286, 0.83 ) }
    dend_52 { pt3dadd( -10.061, 48.6198, -58.6612, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_52 { pt3dadd( -9.9087, 51.9841, -60.8221, 0.83 ) }
    dend_52 { pt3dadd( -9.84119, 54.5219, -62.1533, 0.55 ) }
    dend_52 { pt3dadd( -9.73841, 57.0641, -63.3001, 0.83 ) }
    dend_52 { pt3dadd( -9.67803, 59.3337, -64.244, 0.55 ) }
    dend_52 { pt3dadd( -9.67288, 61.5875, -65.1366, 0.55 ) }
    dend_52 { pt3dadd( -9.84398, 63.6863, -65.8872, 0.55 ) }
    dend_52 { pt3dadd( -10.0835, 67.1465, -66.8553, 0.55 ) }
    dend_52 { pt3dadd( -10.2385, 69.2126, -67.396, 0.83 ) }
    dend_52 { pt3dadd( -10.3684, 72.1757, -68.1026, 0.83 ) }
    dend_52 { pt3dadd( -10.5152, 74.5932, -68.6561, 0.83 ) }
    dend_52 { pt3dadd( -10.7131, 76.6919, -69.1471, 0.83 ) }
    dend_52 { pt3dadd( -11.0865, 80.4433, -70.0781, 0.83 ) }
    dend_52 { pt3dadd( -11.5273, 83.9489, -71.0295, 0.83 ) }
    dend_52 { pt3dadd( -11.7757, 86.3076, -71.6992, 0.55 ) }
    dend_52 { pt3dadd( -11.8613, 88.4905, -72.3186, 0.55 ) }
    dend_52 { pt3dadd( -11.7565, 90.6471, -72.9537, 0.55 ) }
    dend_52 { pt3dadd( -11.3068, 94.3078, -74.1152, 0.83 ) }
    dend_52 { pt3dadd( -11.0183, 95.6586, -74.5632, 0.83 ) }
    dend_52 { pt3dadd( -10.2818, 98.1817, -75.4243, 0.55 ) }
    dend_52 { pt3dadd( -9.46017, 100.855, -76.3491, 0.55 ) }
    dend_52 { pt3dadd( -8.72934, 103.132, -77.0933, 0.55 ) }
    dend_52 { pt3dadd( -7.94578, 105.641, -77.8784, 0.55 ) }
    dend_52 { pt3dadd( -6.98767, 109.082, -78.8821, 0.55 ) }
    dend_52 { pt3dadd( -6.46407, 111.007, -79.5016, 0.55 ) }
    dend_52 { pt3dadd( -5.93077, 113.059, -80.2058, 0.83 ) }
    dend_52 { pt3dadd( -5.4554, 114.885, -80.8868, 0.83 ) }
    dend_52 { pt3dadd( -4.80385, 117.481, -81.9584, 0.83 ) }
    dend_52 { pt3dadd( -4.14814, 119.808, -82.9724, 0.83 ) }
    dend_52 { pt3dadd( -3.40536, 122.488, -84.1725, 0.83 ) }
    dend_52 { pt3dadd( -2.54348, 125.247, -85.3957, 0.55 ) }
    dend_52 { pt3dadd( -1.59855, 128.094, -86.6131, 0.55 ) }
    dend_52 { pt3dadd( -0.692185, 130.806, -87.6916, 0.55 ) }
    dend_52 { pt3dadd( 7.8702E-4, 133.19, -88.5266, 0.55 ) }
    dend_52 { pt3dadd( 0.595693, 135.308, -89.2128, 0.55 ) }
    dend_52 { pt3dadd( 1.39293, 138.254, -90.0465, 0.55 ) }
    dend_52 { pt3dadd( 2.01439, 140.636, -90.6537, 0.55 ) }
    dend_52 { pt3dadd( 2.77774, 143.405, -91.3017, 0.55 ) }
    dend_52 { pt3dadd( 3.59943, 146.716, -91.9882, 0.55 ) }
    dend_52 { pt3dadd( 4.0169, 148.84, -92.4162, 0.55 ) }
    dend_52 { pt3dadd( 4.30582, 150.48, -92.7342, 0.55 ) }
    dend_52 { pt3dadd( 4.6213, 152.871, -93.1745, 0.55 ) }
    dend_52 { pt3dadd( 5.35747, 158.135, -94.1098, 0.55 ) }
    dend_52 { pt3dadd( 5.69456, 160.401, -94.4937, 0.55 ) }
    dend_52 { pt3dadd( 6.14533, 162.854, -94.9003, 0.55 ) }
    dend_52 { pt3dadd( 6.65074, 165.535, -95.3287, 0.55 ) }
    dend_52 { pt3dadd( 6.9579, 166.95, -95.5927, 0.28 ) }
    dend_52 { pt3dadd( 7.53338, 169.113, -96.0765, 0.83 ) }
    dend_52 { pt3dadd( 8.17975, 171.404, -96.589, 0.55 ) }
    dend_52 { pt3dadd( 9.00419, 173.861, -97.1655, 0.55 ) }
    dend_52 { pt3dadd( 9.59258, 175.422, -97.5697, 0.55 ) }
    dend_52 { pt3dadd( 10.5266, 177.941, -98.2813, 0.55 ) }
    dend_52 { pt3dadd( 10.9483, 179.114, -98.6363, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -10.5269, 45.1735, -56.286, 0.83 ) }
    dend_47 { pt3dadd( -10.0894, 46.9597, -57.2439, 0.83 ) }
    dend_47 { pt3dadd( -9.62542, 49.7635, -58.8167, 0.83 ) }
    dend_47 { pt3dadd( -9.44716, 51.2021, -59.5759, 0.28 ) }
    dend_47 { pt3dadd( -9.34325, 51.786, -59.8736, 0.55 ) }
    dend_47 { pt3dadd( -8.61628, 54.5145, -61.2998, 0.28 ) }
    dend_47 { pt3dadd( -8.1992, 56.0526, -62.1358, 0.83 ) }
    dend_47 { pt3dadd( -7.95604, 57.4645, -63.1206, 0.83 ) }
    dend_47 { pt3dadd( -7.67412, 60.051, -65.1155, 0.55 ) }
    dend_47 { pt3dadd( -7.38512, 61.7399, -66.5689, 0.55 ) }
    dend_47 { pt3dadd( -6.79279, 64.1679, -68.8715, 0.55 ) }
    dend_47 { pt3dadd( -6.31702, 66.0787, -70.8192, 0.55 ) }
    dend_47 { pt3dadd( -5.30807, 70.2803, -75.3876, 0.55 ) }
    dend_47 { pt3dadd( -4.90249, 71.8394, -77.2264, 0.55 ) }
    dend_47 { pt3dadd( -4.12926, 75.2802, -81.4091, 0.55 ) }
    dend_47 { pt3dadd( -3.55475, 78.405, -85.068, 0.55 ) }
    dend_47 { pt3dadd( -3.25695, 80.3095, -87.1833, 0.55 ) }
    dend_47 { pt3dadd( -2.943, 81.5356, -88.4221, 0.55 ) }
    dend_47 { pt3dadd( -2.15923, 83.9332, -90.6338, 0.55 ) }
    dend_47 { pt3dadd( -1.37608, 86.7899, -93.1593, 0.55 ) }
    dend_47 { pt3dadd( -0.958185, 88.7717, -94.6513, 0.55 ) }
    dend_47 { pt3dadd( -0.643876, 90.1831, -95.5929, 0.28 ) }
    dend_47 { pt3dadd( 0.469413, 93.8459, -97.9337, 0.55 ) }
    dend_47 { pt3dadd( 1.1246, 96.0886, -99.4168, 0.28 ) }
    dend_47 { pt3dadd( 1.40537, 97.1812, -100.102, 0.83 ) }
    dend_47 { pt3dadd( 1.89814, 99.2037, -101.336, 0.83 ) }
    dend_47 { pt3dadd( 2.24784, 101.149, -102.571, 0.55 ) }
    dend_47 { pt3dadd( 2.68365, 104.126, -104.635, 0.55 ) }
    dend_47 { pt3dadd( 2.66617, 106.417, -106.385, 0.55 ) }
    dend_47 { pt3dadd( 2.56092, 108.533, -108.031, 0.55 ) }
    dend_47 { pt3dadd( 2.50537, 109.889, -109.16, 0.28 ) }
    dend_47 { pt3dadd( 2.47415, 111.711, -110.839, 0.55 ) }
    dend_47 { pt3dadd( 2.58712, 114.1, -113.256, 0.28 ) }
    dend_47 { pt3dadd( 2.60869, 116.693, -115.911, 0.55 ) }
    dend_47 { pt3dadd( 2.70749, 118.127, -117.428, 0.55 ) }
    dend_47 { pt3dadd( 2.90837, 119.838, -119.44, 0.55 ) }
    dend_47 { pt3dadd( 3.20331, 121.344, -121.312, 0.55 ) }
    dend_47 { pt3dadd( 3.72048, 123.13, -123.35, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 90/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -69.8261, 57.2621, -55.1814, 0.28 ) }
    dend_43 { pt3dadd( -74.915, 56.2886, -53.4002, 0.28 ) }
    dend_43 { pt3dadd( -76.6927, 55.9325, -52.8825, 0.55 ) }
    dend_43 { pt3dadd( -78.6175, 55.618, -52.4061, 0.55 ) }
    dend_43 { pt3dadd( -80.4255, 55.3227, -51.9586, 0.55 ) }
    dend_43 { pt3dadd( -82.3311, 55.0114, -51.4869, 0.55 ) }
    dend_43 { pt3dadd( -84.1205, 54.719, -51.044, 0.83 ) }
    dend_43 { pt3dadd( -85.5154, 54.4701, -51.0149, 0.28 ) }
    dend_43 { pt3dadd( -87.0391, 54.2381, -50.8569, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 99/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -69.8261, 57.2621, -55.1814, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -69.9282, 59.5549, -55.7971, 0.55 ) }
    dend_38 { pt3dadd( -70.1122, 61.0365, -56.3152, 0.28 ) }
    dend_38 { pt3dadd( -70.3576, 62.9245, -56.9859, 0.55 ) }
    dend_38 { pt3dadd( -70.7268, 65.025, -57.6889, 0.55 ) }
    dend_38 { pt3dadd( -70.9379, 65.8937, -57.955, 0.55 ) }
    dend_38 { pt3dadd( -72.0347, 70.4078, -59.3378, 0.83 ) }
    dend_38 { pt3dadd( -72.5325, 72.1688, -59.8942, 0.28 ) }
    dend_38 { pt3dadd( -73.4331, 75.1364, -60.8322, 0.55 ) }
    dend_38 { pt3dadd( -74.274, 77.6157, -61.579, 0.55 ) }
    dend_38 { pt3dadd( -75.1027, 79.5576, -62.1465, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 10/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -153.224, 82.0281, 20.5756, 0.83 ) }
    dend_28 { pt3dadd( -153.169, 82.6803, 20.5131, 0.83 ) }
    dend_28 { pt3dadd( -153.088, 84.543, 20.4992, 0.83 ) }
    dend_28 { pt3dadd( -153.041, 86.1844, 20.8807, 0.55 ) }
    dend_28 { pt3dadd( -153.035, 88.2502, 21.4874, 0.55 ) }
    dend_28 { pt3dadd( -153.101, 90.9592, 22.346, 0.55 ) }
    dend_28 { pt3dadd( -153.131, 91.8556, 22.6323, 0.55 ) }
    dend_28 { pt3dadd( -153.158, 93.3006, 23.1728, 1.11 ) }
    dend_28 { pt3dadd( -153.253, 96.9067, 24.8875, 0.28 ) }
    dend_28 { pt3dadd( -153.307, 97.5306, 25.2511, 0.55 ) }
    dend_28 { pt3dadd( -153.427, 98.4951, 25.9181, 0.28 ) }
    dend_28 { pt3dadd( -153.532, 99.0553, 26.2636, 0.55 ) }
    dend_28 { pt3dadd( -154.204, 105.831, 29.6046, 0.55 ) }
    dend_28 { pt3dadd( -155.841, 112.726, 32.2784, 0.55 ) }
    dend_28 { pt3dadd( -157.876, 119.269, 35.5493, 0.55 ) }
    dend_28 { pt3dadd( -161.508, 124.694, 39.5086, 0.55 ) }
    dend_28 { pt3dadd( -164.8, 130.359, 43.4129, 0.55 ) }
    dend_28 { pt3dadd( -168.734, 135.906, 46.8671, 0.55 ) }
    dend_28 { pt3dadd( -172.445, 141.704, 50.1322, 0.55 ) }
    dend_28 { pt3dadd( -176.557, 146.73, 54.1692, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -153.224, 82.0281, 20.5756, 0.55 ) }
    dend_25 { pt3dadd( -154.772, 84.1158, 20.3865, 0.55 ) }
    dend_25 { pt3dadd( -156.038, 85.3919, 20.3704, 0.55 ) }
    dend_25 { pt3dadd( -157.214, 86.3001, 20.4902, 0.28 ) }
    dend_25 { pt3dadd( -157.98, 86.7861, 20.6775, 0.55 ) }
    dend_25 { pt3dadd( -159.78, 87.6581, 21.2559, 0.28 ) }
    dend_25 { pt3dadd( -161.233, 88.1597, 21.851, 0.55 ) }
    dend_25 { pt3dadd( -164.601, 88.965, 23.4037, 0.55 ) }
    dend_25 { pt3dadd( -166.931, 89.3469, 24.631, 0.55 ) }
    dend_25 { pt3dadd( -169.265, 89.4772, 26.0004, 1.11 ) }
    dend_25 { pt3dadd( -171.186, 89.3621, 27.2642, 0.28 ) }
    dend_25 { pt3dadd( -172.954, 88.9307, 28.6073, 0.55 ) }
    dend_25 { pt3dadd( -180.478, 91.7562, 33.2261, 0.55 ) }
    dend_25 { pt3dadd( -187.917, 93.8808, 38.3425, 0.55 ) }
    dend_25 { pt3dadd( -195.61, 96.0843, 43.0312, 0.55 ) }
    dend_25 { pt3dadd( -202.664, 98.2823, 48.6384, 0.55 ) }
    dend_25 { pt3dadd( -210.034, 101.347, 53.3463, 0.55 ) }
    dend_25 { pt3dadd( -218.591, 103.074, 56.484, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 56.5947, 1.38456, 98.8952, 0.83 ) }
    dend_13 { pt3dadd( 61.29, -0.040345, 110.31, 0.83 ) }
    dend_13 { pt3dadd( 66.4092, -3.64606, 121.017, 0.83 ) }
    dend_13 { pt3dadd( 72.0426, -6.50668, 131.702, 0.83 ) }
    dend_13 { pt3dadd( 76.6962, -8.27676, 143.083, 0.83 ) }
    dend_13 { pt3dadd( 80.1328, -12.9218, 154.042, 0.83 ) }
    dend_13 { pt3dadd( 81.9806, -16.9325, 165.629, 0.83 ) }
    dend_13 { pt3dadd( 81.3577, -23.3413, 176.17, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 56/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 56.5947, 1.38456, 98.8952, 0.55 ) }
    dend_10 { pt3dadd( 61.5997, -0.232985, 106.648, 0.83 ) }
    dend_10 { pt3dadd( 65.309, -2.19543, 115.025, 0.83 ) }
    dend_10 { pt3dadd( 69.6976, -4.46117, 122.982, 0.83 ) }
    dend_10 { pt3dadd( 74.1377, -7.71418, 130.543, 0.83 ) }
    dend_10 { pt3dadd( 79.2437, -10.5235, 137.86, 0.83 ) }
    dend_10 { pt3dadd( 82.8963, -14.8438, 145.291, 0.83 ) }
    dend_10 { pt3dadd( 86.3634, -19.5871, 152.542, 0.83 ) }
    dend_10 { pt3dadd( 89.138, -23.6254, 160.507, 0.83 ) }
    dend_10 { pt3dadd( 93.0057, -28.8509, 167.179, 0.83 ) }
    dend_10 { pt3dadd( 97.3223, -33.1181, 174.271, 0.83 ) }
    dend_10 { pt3dadd( 100.966, -37.9828, 181.346, 0.83 ) }
    dend_10 { pt3dadd( 105.768, -41.937, 188.309, 0.83 ) }
    dend_10 { pt3dadd( 110.443, -46.5893, 194.896, 0.83 ) }
    dend_10 { pt3dadd( 115.185, -51.6789, 201.08, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 71/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 204.128, -10.8813, 45.278, 0.55 ) }
    dend_6 { pt3dadd( 205.272, -13.3009, 50.041, 0.55 ) }
    dend_6 { pt3dadd( 205.526, -13.8363, 51.0948, 0.28 ) }
    dend_6 { pt3dadd( 205.715, -14.2363, 51.8822, 0.55 ) }
    dend_6 { pt3dadd( 208.51, -19.87, 58.3578, 0.55 ) }
    dend_6 { pt3dadd( 211.657, -25.2385, 64.9091, 0.55 ) }
    dend_6 { pt3dadd( 213.76, -30.6947, 71.7929, 0.55 ) }
    dend_6 { pt3dadd( 217.659, -36.1517, 77.8446, 0.55 ) }
    dend_6 { pt3dadd( 221.262, -40.2502, 85.0896, 0.55 ) }
    dend_6 { pt3dadd( 224.37, -44.1792, 92.6546, 0.55 ) }
    dend_6 { pt3dadd( 227.722, -49.0077, 99.5379, 0.55 ) }
    dend_6 { pt3dadd( 230.681, -52.4511, 107.406, 0.55 ) }
    dend_6 { pt3dadd( 235.184, -55.9069, 114.498, 0.55 ) }
    dend_6 { pt3dadd( 240.193, -57.5244, 121.934, 0.55 ) }
    dend_6 { pt3dadd( 245.615, -58.068, 129.242, 0.55 ) }
    dend_6 { pt3dadd( 252.004, -57.9922, 135.745, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 204.128, -10.8813, 45.278, 0.28 ) }
    dend_3 { pt3dadd( 204.978, -11.3137, 45.7943, 0.28 ) }
    dend_3 { pt3dadd( 205.814, -11.7386, 46.3018, 0.55 ) }
    dend_3 { pt3dadd( 206.992, -12.3379, 47.0174, 0.28 ) }
    dend_3 { pt3dadd( 208.029, -12.8651, 47.6469, 0.83 ) }
    dend_3 { pt3dadd( 214.304, -15.5513, 51.138, 0.83 ) }
    dend_3 { pt3dadd( 219.905, -18.9513, 55.0846, 0.83 ) }
    dend_3 { pt3dadd( 225.93, -22.0587, 58.6462, 0.83 ) }
    dend_3 { pt3dadd( 231.695, -24.0885, 63.2875, 0.83 ) }
    dend_3 { pt3dadd( 237.258, -26.1246, 68.1654, 0.83 ) }
    dend_3 { pt3dadd( 242.149, -28.8377, 73.3989, 0.83 ) }
    dend_3 { pt3dadd( 247.045, -31.5875, 78.6065, 0.83 ) }
    dend_3 { pt3dadd( 252.061, -34.3998, 83.6644, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( 256.564, -37.8605, 88.7769, 0.83 ) }
    dend_3 { pt3dadd( 260.557, -40.5208, 94.7444, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 2/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 10.9483, 179.114, -98.6363, 0.28 ) }
    dend_54 { pt3dadd( 11.7487, 181.058, -98.8577, 0.28 ) }
    dend_54 { pt3dadd( 12.3688, 182.926, -99.1579, 0.83 ) }
    dend_54 { pt3dadd( 12.6485, 183.928, -99.3671, 0.28 ) }
    dend_54 { pt3dadd( 12.8716, 184.949, -99.5953, 0.28 ) }
    dend_54 { pt3dadd( 13.1466, 186.487, -99.9399, 0.55 ) }
    dend_54 { pt3dadd( 13.3919, 187.632, -100.2, 0.28 ) }
    dend_54 { pt3dadd( 13.6398, 188.925, -100.522, 0.83 ) }
    dend_54 { pt3dadd( 14.0124, 190.731, -100.994, 0.28 ) }
    dend_54 { pt3dadd( 14.3442, 192.042, -101.376, 0.28 ) }
    dend_54 { pt3dadd( 14.8102, 193.479, -101.795, 0.28 ) }
    dend_54 { pt3dadd( 15.5796, 195.187, -102.157, 0.55 ) }
    dend_54 { pt3dadd( 16.3781, 196.533, -102.353, 0.28 ) }
    dend_54 { pt3dadd( 17.2435, 197.657, -102.418, 0.55 ) }
    dend_54 { pt3dadd( 18.474, 198.89, -102.355, 0.28 ) }
    dend_54 { pt3dadd( 20.8799, 200.776, -101.717, 0.55 ) }
    dend_54 { pt3dadd( 23.7457, 202.668, -100.383, 0.28 ) }
    dend_54 { pt3dadd( 25.0582, 203.516, -99.5229, 0.55 ) }
    dend_54 { pt3dadd( 25.9715, 204.027, -98.8471, 0.28 ) }
    dend_54 { pt3dadd( 26.5769, 204.328, -98.3314, 0.28 ) }
    dend_54 { pt3dadd( 29.3221, 205.56, -95.596, 0.55 ) }
    dend_54 { pt3dadd( 30.304, 205.965, -94.4742, 0.28 ) }
    dend_54 { pt3dadd( 31.4864, 206.775, -93.0604, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 25/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 10.9483, 179.114, -98.6363, 0.28 ) }
    dend_53 { pt3dadd( 10.1626, 180.518, -99.9069, 0.28 ) }
    dend_53 { pt3dadd( 9.72188, 181.195, -100.528, 0.83 ) }
    dend_53 { pt3dadd( 8.79796, 182.548, -101.741, 0.28 ) }
    dend_53 { pt3dadd( 7.76033, 184.147, -103.141, 1.11 ) }
    dend_53 { pt3dadd( 5.96275, 187.335, -105.772, 0.28 ) }
    dend_53 { pt3dadd( 5.33638, 188.575, -106.794, 0.55 ) }
    dend_53 { pt3dadd( 4.61561, 190.007, -108.132, 0.28 ) }
    dend_53 { pt3dadd( 4.39786, 190.501, -108.62, 0.28 ) }
    dend_53 { pt3dadd( 4.0355, 191.279, -109.472, 0.55 ) }
    dend_53 { pt3dadd( 3.35568, 192.514, -110.736, 0.28 ) }
    dend_53 { pt3dadd( 2.7902, 193.395, -111.574, 0.55 ) }
    dend_53 { pt3dadd( 1.30425, 195.527, -113.655, 0.28 ) }
    dend_53 { pt3dadd( 0.741343, 196.284, -114.385, 0.83 ) }
    dend_53 { pt3dadd( -0.899497, 198.445, -116.461, 0.28 ) }
    dend_53 { pt3dadd( -2.40626, 200.488, -118.377, 0.55 ) }
    dend_53 { pt3dadd( -3.13529, 201.562, -119.332, 0.28 ) }
    dend_53 { pt3dadd( -3.53108, 202.319, -119.882, 0.55 ) }
    dend_53 { pt3dadd( -4.32021, 204.56, -121.211, 0.28 ) }
    dend_53 { pt3dadd( -4.7228, 206.375, -122.054, 0.55 ) }
    dend_53 { pt3dadd( -4.75733, 207.908, -122.509, 0.28 ) }
    dend_53 { pt3dadd( -4.5717, 209.175, -122.759, 0.55 ) }
    dend_53 { pt3dadd( -4.13342, 211.101, -123.023, 0.28 ) }
    dend_53 { pt3dadd( -4.12547, 211.145, -123.03, 0.55 ) }
    dend_53 { pt3dadd( -3.98768, 212.972, -123.267, 0.28 ) }
    dend_53 { pt3dadd( -3.99217, 213.989, -123.363, 0.55 ) }
    dend_53 { pt3dadd( -4.21591, 215.687, -123.622, 0.28 ) }
    dend_53 { pt3dadd( -4.53374, 216.918, -123.995, 0.55 ) }
    dend_53 { pt3dadd( -5.86169, 219.693, -125.686, 0.28 ) }
    dend_53 { pt3dadd( -6.31866, 220.376, -126.248, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 3.72048, 123.13, -123.35, 0.28 ) }
    dend_51 { pt3dadd( 4.41813, 124.012, -124.93, 0.28 ) }
    dend_51 { pt3dadd( 5.01025, 124.823, -126.267, 0.55 ) }
    dend_51 { pt3dadd( 6.20434, 126.65, -129.032, 0.55 ) }
    dend_51 { pt3dadd( 6.63895, 127.459, -130.159, 0.28 ) }
    dend_51 { pt3dadd( 6.92643, 128.017, -130.841, 0.55 ) }
    dend_51 { pt3dadd( 7.39231, 128.989, -131.991, 0.28 ) }
    dend_51 { pt3dadd( 7.78922, 130.009, -133.075, 0.55 ) }
    dend_51 { pt3dadd( 7.9469, 130.54, -133.586, 0.55 ) }
    dend_51 { pt3dadd( 8.20082, 131.596, -134.465, 0.28 ) }
    dend_51 { pt3dadd( 8.48527, 133.004, -135.736, 0.55 ) }
    dend_51 { pt3dadd( 8.77089, 134.375, -137.128, 0.28 ) }
    dend_51 { pt3dadd( 8.96201, 135.034, -137.927, 0.55 ) }
    dend_51 { pt3dadd( 9.15559, 135.64, -138.721, 0.55 ) }
    dend_51 { pt3dadd( 9.53918, 136.567, -140.454, 0.55 ) }
    dend_51 { pt3dadd( 9.85708, 137.084, -141.84, 0.28 ) }
    dend_51 { pt3dadd( 9.89228, 137.138, -142.011, 0.83 ) }
    dend_51 { pt3dadd( 10.2266, 137.634, -143.527, 0.28 ) }
    dend_51 { pt3dadd( 10.5483, 138.148, -144.938, 0.55 ) }
    dend_51 { pt3dadd( 11.2824, 139.627, -148.161, 0.28 ) }
    dend_51 { pt3dadd( 11.7251, 140.588, -149.856, 0.55 ) }
    dend_51 { pt3dadd( 12.263, 141.717, -151.651, 0.28 ) }
    dend_51 { pt3dadd( 12.7778, 142.592, -152.967, 0.55 ) }
    dend_51 { pt3dadd( 13.403, 143.503, -154.235, 0.55 ) }
    dend_51 { pt3dadd( 14.1849, 144.581, -155.542, 0.28 ) }
    dend_51 { pt3dadd( 14.6515, 145.235, -156.167, 0.55 ) }
    dend_51 { pt3dadd( 15.7781, 146.582, -157.484, 0.55 ) }
    dend_51 { pt3dadd( 17.5292, 148.424, -159.626, 0.55 ) }
    dend_51 { pt3dadd( 18.554, 149.453, -160.979, 0.55 ) }
    dend_51 { pt3dadd( 19.2002, 150.061, -161.898, 0.55 ) }
    dend_51 { pt3dadd( 19.988, 150.822, -163.069, 0.28 ) }
    dend_51 { pt3dadd( 20.7706, 151.764, -164.363, 0.55 ) }
    dend_51 { pt3dadd( 21.7755, 153.268, -166.057, 0.55 ) }
    dend_51 { pt3dadd( 22.0823, 153.752, -166.529, 0.55 ) }
    dend_51 { pt3dadd( 22.5412, 154.527, -167.221, 0.55 ) }
    dend_51 { pt3dadd( 23.198, 155.66, -168.175, 0.55 ) }
    dend_51 { pt3dadd( 23.8346, 156.772, -169.008, 0.55 ) }
    dend_51 { pt3dadd( 24.5794, 158.121, -169.919, 0.55 ) }
    dend_51 { pt3dadd( 25.8734, 160.409, -171.33, 0.55 ) }
    dend_51 { pt3dadd( 26.3839, 161.375, -171.912, 0.28 ) }
    dend_51 { pt3dadd( 26.903, 162.383, -172.508, 0.55 ) }
    dend_51 { pt3dadd( 27.4845, 163.438, -173.132, 0.55 ) }
    dend_51 { pt3dadd( 27.993, 164.29, -173.619, 0.28 ) }
    dend_51 { pt3dadd( 28.5895, 165.365, -174.252, 0.55 ) }
    dend_51 { pt3dadd( 29.0034, 166.2, -174.782, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 29.6836, 167.558, -175.733, 0.55 ) }
    dend_51 { pt3dadd( 30.1608, 168.686, -176.527, 0.28 ) }
    dend_51 { pt3dadd( 30.4387, 169.462, -177.071, 0.28 ) }
    dend_51 { pt3dadd( 30.963, 171.027, -178.189, 0.55 ) }
    dend_51 { pt3dadd( 31.4792, 172.615, -179.312, 0.28 ) }
    dend_51 { pt3dadd( 31.8678, 173.837, -180.164, 0.55 ) }
    dend_51 { pt3dadd( 32.4019, 175.757, -181.406, 0.28 ) }
    dend_51 { pt3dadd( 32.5722, 176.428, -181.833, 0.55 ) }
    dend_51 { pt3dadd( 32.7775, 177.282, -182.333, 0.28 ) }
    dend_51 { pt3dadd( 33.0365, 178.25, -182.888, 0.28 ) }
    dend_51 { pt3dadd( 33.2537, 179.023, -183.276, 0.55 ) }
    dend_51 { pt3dadd( 33.3719, 179.648, -183.6, 0.28 ) }
    dend_51 { pt3dadd( 33.5818, 180.5, -184.113, 0.28 ) }
    dend_51 { pt3dadd( 33.7709, 181.264, -184.574, 0.55 ) }
    dend_51 { pt3dadd( 34.042, 182.914, -185.517, 0.28 ) }
    dend_51 { pt3dadd( 34.0393, 184.328, -186.365, 0.55 ) }
    dend_51 { pt3dadd( 33.9329, 185.434, -187.032, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 17/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 3.72048, 123.13, -123.35, 0.28 ) }
    dend_48 { pt3dadd( 4.56559, 124.632, -123.865, 0.28 ) }
    dend_48 { pt3dadd( 5.17765, 125.79, -124.242, 0.83 ) }
    dend_48 { pt3dadd( 5.95753, 127.488, -124.779, 0.55 ) }
    dend_48 { pt3dadd( 6.88754, 129.767, -125.362, 0.55 ) }
    dend_48 { pt3dadd( 7.93461, 132.718, -125.838, 0.55 ) }
    dend_48 { pt3dadd( 8.44557, 134.299, -125.989, 0.28 ) }
    dend_48 { pt3dadd( 8.95686, 135.754, -126.104, 0.55 ) }
    dend_48 { pt3dadd( 9.54298, 137.45, -126.188, 0.55 ) }
    dend_48 { pt3dadd( 10.444, 140.689, -126.157, 0.55 ) }
    dend_48 { pt3dadd( 11.0004, 143.447, -125.927, 0.28 ) }
    dend_48 { pt3dadd( 11.1771, 145.242, -125.61, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 29/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -75.1027, 79.5576, -62.1465, 0.28 ) }
    dend_42 { pt3dadd( -76.4443, 79.2824, -62.7078, 0.28 ) }
    dend_42 { pt3dadd( -77.243, 79.1185, -63.042, 0.28 ) }
    dend_42 { pt3dadd( -78.405, 78.8801, -63.5282, 0.28 ) }
    dend_42 { pt3dadd( -79.8442, 78.5848, -64.1304, 0.55 ) }
    dend_42 { pt3dadd( -82.0498, 78.1324, -65.0532, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 35/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -75.1027, 79.5576, -62.1465, 0.28 ) }
    dend_39 { pt3dadd( -75.8524, 80.1158, -63.9382, 0.28 ) }
    dend_39 { pt3dadd( -76.4968, 80.5803, -65.9102, 0.55 ) }
    dend_39 { pt3dadd( -76.8246, 80.7849, -67.1118, 0.55 ) }
    dend_39 { pt3dadd( -77.0904, 80.9772, -68.4395, 0.28 ) }
    dend_39 { pt3dadd( -77.6405, 81.4785, -71.8049, 0.83 ) }
    dend_39 { pt3dadd( -78.3352, 82.1426, -76.1582, 0.28 ) }
    dend_39 { pt3dadd( -78.4236, 82.2128, -76.888, 0.55 ) }
    dend_39 { pt3dadd( -78.554, 82.3752, -79.3151, 0.28 ) }
    dend_39 { pt3dadd( -78.5835, 82.4311, -81.3731, 0.55 ) }
    dend_39 { pt3dadd( -78.5546, 82.4325, -82.2164, 0.55 ) }
    dend_39 { pt3dadd( -78.3532, 82.4035, -84.1642, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 47/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -176.557, 146.73, 54.1692, 0.83 ) }
    dend_30 { pt3dadd( -178.742, 153.354, 56.9221, 0.83 ) }
    dend_30 { pt3dadd( -181.472, 160.136, 58.5017, 0.83 ) }
    dend_30 { pt3dadd( -183.076, 167.381, 59.1335, 0.83 ) }
    dend_30 { pt3dadd( -183.448, 174.729, 60.3042, 0.83 ) }
    dend_30 { pt3dadd( -183.407, 181.957, 62.1668, 0.83 ) }
    dend_30 { pt3dadd( -182.02, 188.848, 64.7411, 0.83 ) }
    dend_30 { pt3dadd( -180.319, 195.889, 66.5712, 0.83 ) }
    dend_30 { pt3dadd( -177.738, 202.878, 66.6367, 0.83 ) }
    dend_30 { pt3dadd( -174.367, 209.521, 66.251, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -176.557, 146.73, 54.1692, 0.55 ) }
    dend_29 { pt3dadd( -180.031, 154.181, 60.2252, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -218.591, 103.074, 56.484, 0.83 ) }
    dend_27 { pt3dadd( -226.866, 106.071, 61.1697, 0.83 ) }
    dend_27 { pt3dadd( -235.047, 110.604, 64.5535, 0.83 ) }
    dend_27 { pt3dadd( -242.965, 115.95, 67.2493, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 63/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -218.591, 103.074, 56.484, 0.55 ) }
    dend_26 { pt3dadd( -226.356, 104.757, 60.0056, 0.83 ) }
    dend_26 { pt3dadd( -233.962, 108.219, 62.3204, 0.83 ) }
    dend_26 { pt3dadd( -241.194, 112.48, 64.4343, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 67/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 81.3577, -23.3413, 176.17, 0.55 ) }
    dend_15 { pt3dadd( 84.2079, -26.1552, 181.959, 0.55 ) }
    dend_15 { pt3dadd( 86.9103, -28.246, 188.127, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 70/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 81.3577, -23.3413, 176.17, 0.28 ) }
    dend_14 { pt3dadd( 83.6012, -25.8384, 186.213, 0.55 ) }
    dend_14 { pt3dadd( 84.9291, -27.7401, 196.551, 0.55 ) }
    dend_14 { pt3dadd( 85.1493, -28.1541, 207.135, 0.55 ) }
    dend_14 { pt3dadd( 85.1411, -27.401, 217.694, 0.55 ) }
    dend_14 { pt3dadd( 87.1413, -27.5134, 228.097, 0.55 ) }
    dend_14 { pt3dadd( 90.2586, -27.2709, 238.22, 0.55 ) }
    dend_14 { pt3dadd( 91.8968, -25.6477, 248.546, 0.55 ) }
    dend_14 { pt3dadd( 93.2909, -24.2786, 258.947, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 115.185, -51.6789, 201.08, 0.55 ) }
    dend_12 { pt3dadd( 116.654, -55.8671, 211.018, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 81/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 115.185, -51.6789, 201.08, 0.28 ) }
    dend_11 { pt3dadd( 120.587, -55.6311, 207.783, 0.55 ) }
    dend_11 { pt3dadd( 125.758, -59.3025, 214.829, 0.55 ) }
    dend_11 { pt3dadd( 130.798, -61.4529, 222.594, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 85/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 252.004, -57.9922, 135.745, 0.83 ) }
    dend_8 { pt3dadd( 256.602, -60.8353, 145.394, 0.83 ) }
    dend_8 { pt3dadd( 258.978, -63.9586, 155.72, 0.83 ) }
    dend_8 { pt3dadd( 260.352, -66.335, 166.431, 0.83 ) }
    dend_8 { pt3dadd( 261.043, -68.2239, 177.31, 0.83 ) }
    dend_8 { pt3dadd( 261.95, -72.0203, 187.622, 0.83 ) }
    dend_8 { pt3dadd( 263.802, -75.697, 197.858, 0.83 ) }
    dend_8 { pt3dadd( 266.09, -78.5356, 208.291, 0.83 ) }
    dend_8 { pt3dadd( 268.723, -81.7223, 218.535, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 252.004, -57.9922, 135.745, 0.55 ) }
    dend_7 { pt3dadd( 255.196, -60.5019, 142.126, 0.83 ) }
    dend_7 { pt3dadd( 258.334, -63.3626, 148.374, 0.83 ) }
    dend_7 { pt3dadd( 261.792, -66.9276, 154.051, 0.83 ) }
    dend_7 { pt3dadd( 264.456, -70.7461, 159.967, 0.83 ) }
    dend_7 { pt3dadd( 267.945, -73.951, 165.847, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 271.376, -77.9232, 171.251, 0.83 ) }
    dend_7 { pt3dadd( 275.688, -82.1514, 175.765, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 260.557, -40.5208, 94.7444, 0.55 ) }
    dend_5 { pt3dadd( 265.491, -43.3196, 98.7994, 0.55 ) }
    dend_5 { pt3dadd( 270.368, -46.7041, 102.43, 0.55 ) }
    dend_5 { pt3dadd( 274.403, -50.2214, 106.873, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 260.557, -40.5208, 94.7444, 0.28 ) }
    dend_4 { pt3dadd( 267.002, -44.6897, 98.8182, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 8/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 11.1771, 145.242, -125.61, 0.28 ) }
    dend_50 { pt3dadd( 11.7163, 147.318, -126.113, 0.28 ) }
    dend_50 { pt3dadd( 12.0055, 148.717, -126.241, 0.55 ) }
    dend_50 { pt3dadd( 12.1146, 149.491, -126.268, 0.28 ) }
    dend_50 { pt3dadd( 12.149, 149.965, -126.282, 0.55 ) }
    dend_50 { pt3dadd( 12.2058, 151.427, -126.217, 0.28 ) }
    dend_50 { pt3dadd( 12.2718, 152.383, -126.224, 0.55 ) }
    dend_50 { pt3dadd( 12.5144, 154.261, -126.043, 0.28 ) }
    dend_50 { pt3dadd( 12.5831, 154.895, -125.982, 0.55 ) }
    dend_50 { pt3dadd( 12.6987, 157.05, -125.81, 0.28 ) }
    dend_50 { pt3dadd( 12.6277, 158.438, -125.807, 0.55 ) }
    dend_50 { pt3dadd( 12.2554, 160.987, -125.867, 0.28 ) }
    dend_50 { pt3dadd( 11.9383, 162.859, -125.967, 0.55 ) }
    dend_50 { pt3dadd( 11.7563, 164.163, -126.14, 0.28 ) }
    dend_50 { pt3dadd( 11.7133, 164.457, -126.185, 0.55 ) }
    dend_50 { pt3dadd( 10.9558, 166.585, -126.627, 0.28 ) }
    dend_50 { pt3dadd( 10.3334, 167.798, -126.974, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 25/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 11.1771, 145.242, -125.61, 0.28 ) }
    dend_49 { pt3dadd( 12.6855, 144.551, -126.577, 0.28 ) }
    dend_49 { pt3dadd( 12.8627, 144.487, -126.686, 0.55 ) }
    dend_49 { pt3dadd( 14.2448, 144.178, -127.472, 0.28 ) }
    dend_49 { pt3dadd( 15.749, 143.842, -128.327, 0.55 ) }
    dend_49 { pt3dadd( 18.5506, 143.216, -129.92, 0.28 ) }
    dend_49 { pt3dadd( 19.9042, 142.914, -130.689, 0.28 ) }
    dend_49 { pt3dadd( 20.5702, 142.716, -131.103, 0.28 ) }
    dend_49 { pt3dadd( 21.8612, 142.414, -131.956, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 34/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -78.3532, 82.4035, -84.1642, 0.28 ) }
    dend_41 { pt3dadd( -76.8598, 83.3897, -85.7935, 0.28 ) }
    dend_41 { pt3dadd( -75.9074, 84.0186, -86.8326, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -78.3532, 82.4035, -84.1642, 0.55 ) }
    dend_40 { pt3dadd( -79.1927, 83.2818, -85.4167, 0.55 ) }
    dend_40 { pt3dadd( -81.2655, 85.3921, -88.648, 0.55 ) }
    dend_40 { pt3dadd( -82.2747, 86.4163, -90.4159, 0.55 ) }
    dend_40 { pt3dadd( -83.0628, 87.1456, -91.7782, 0.28 ) }
    dend_40 { pt3dadd( -83.9159, 87.8763, -93.3546, 0.55 ) }
    dend_40 { pt3dadd( -85.134, 88.8374, -95.7565, 0.55 ) }
    dend_40 { pt3dadd( -85.7758, 89.3223, -97.0729, 0.55 ) }
    dend_40 { pt3dadd( -86.6538, 89.9452, -98.7755, 0.28 ) }
    dend_40 { pt3dadd( -87.6269, 90.5617, -100.974, 0.55 ) }
    dend_40 { pt3dadd( -88.7995, 91.1593, -103.76, 0.28 ) }
    dend_40 { pt3dadd( -89.5631, 91.4454, -105.558, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 49/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 86.9103, -28.246, 188.127, 0.83 ) }
    dend_17 { pt3dadd( 90.2442, -31.6902, 197.724, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 51/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 86.9103, -28.246, 188.127, 0.55 ) }
    dend_16 { pt3dadd( 91.1637, -31.996, 196.922, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_1 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_64 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_58 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_55 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_66 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_65 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_63 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_62 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_59 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_57 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_44 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_20 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_2 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_52 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_28 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_6 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_3 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_53 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_51 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_30 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_14 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_8 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_7 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_35 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_21 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_1 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_61 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_45 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_18 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_60 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_56 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_69 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_43 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_68 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_42 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_39 OneSecGrp_SectionRef_55.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_34 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_33 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_48 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_49 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_15 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_16 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_17 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_12 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_29 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_11 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_26 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_27 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_4 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_5 OneSecGrp_SectionRef_66.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_4, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_17, dend_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_17 all.append()
    dend_16 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 5
    dend_64 nseg = 3
    dend_58 nseg = 3
    dend_55 nseg = 3
    dend_32 nseg = 7
    dend_66 nseg = 13
    dend_65 nseg = 9
    dend_63 nseg = 7
    dend_62 nseg = 5
    dend_59 nseg = 5
    dend_57 nseg = 5
    dend_23 nseg = 3
    dend_22 nseg = 7
    dend_44 nseg = 7
    dend_37 nseg = 5
    dend_31 nseg = 3
    dend_24 nseg = 7
    dend_20 nseg = 5
    dend_19 nseg = 11
    dend_9 nseg = 5
    dend_2 nseg = 9
    dend_52 nseg = 7
    dend_47 nseg = 5
    dend_28 nseg = 3
    dend_25 nseg = 3
    dend_13 nseg = 5
    dend_10 nseg = 7
    dend_6 nseg = 5
    dend_3 nseg = 5
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_51 nseg = 5
    dend_30 nseg = 3
    dend_14 nseg = 5
    dend_8 nseg = 5
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_NBC_2f216c0d74_0_0


