// Cell: cIR216_L1_HAC_edfad4a560_0_0
/*
{
  "id" : "cIR216_L1_HAC_edfad4a560_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-9.19744, -0.241174, 0.0, 2.92638", "-8.31221, -0.24477, 0.0, 5.08419", "-7.42697, -0.248367, 0.0, 7.12364", "-6.54174, -0.251964, 0.0, 8.50976", "-5.65651, -0.25556, 0.0, 9.59414", "-4.77128, -0.259157, 0.0, 10.7537", "-3.88605, -0.262754, 0.0, 11.7809", "-3.00082, -0.26635, 0.0, 12.4194", "-2.11559, -0.269947, 0.0, 12.4804", "-1.23035, -0.273544, 0.0, 12.5628", "-0.345122, -0.27714, 0.0, 12.4791", "0.540109, -0.280737, 0.0, 12.378", "1.42534, -0.284334, 0.0, 12.1897", "2.31057, -0.28793, 0.0, 11.6678", "3.1958, -0.291527, 0.0, 10.8786", "4.08104, -0.295124, 0.0, 9.98639", "4.96627, -0.29872, 0.0, 9.13492", "5.8515, -0.302317, 0.0, 7.63372", "6.73673, -0.305914, 0.0, 5.29416", "7.62196, -0.30951, 0.0, 4.03796", "8.50719, -0.313107, 0.0, 2.33538" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-9.88158, -2.62694, 3.41, 1.03", "-10.5605, -3.25522, 4.20598, 1.03", "-11.2875, -4.10377, 5.19091, 0.74", "-11.977, -5.05532, 6.36076, 0.74", "-12.4612, -5.83931, 7.39801, 0.96", "-12.9636, -6.77277, 8.61749, 0.81", "-13.3785, -7.64628, 9.73635, 0.81", "-13.7731, -8.78681, 11.0123, 0.59", "-14.055, -10.1678, 12.4164, 0.59", "-14.1667, -11.6012, 13.6465, 0.59", "-14.1489, -12.6166, 14.4345, 0.52", "-14.0065, -14.161, 15.5884, 0.74", "-13.7276, -16.0538, 16.8972, 0.66", "-13.438, -17.6416, 17.8933, 0.66", "-13.0507, -19.4528, 18.9437, 0.52", "-12.698, -20.871, 19.7206, 0.52", "-12.2063, -22.703, 20.7608, 0.52", "-11.9525, -23.6177, 21.317, 0.59", "-11.7539, -24.315, 21.7949, 0.59", "-11.4764, -25.2115, 22.4596, 0.59", "-10.9939, -26.3896, 23.5615, 0.44", "-10.2715, -27.6502, 24.978, 0.37", "-9.70872, -28.4246, 26.0305, 0.37", "-9.167, -29.0902, 27.0658, 0.74", "-8.41654, -29.9616, 28.5795, 0.81", "-7.19934, -31.2645, 31.1346, 0.59", "-6.43435, -31.9273, 32.7206, 0.37", "-5.73358, -32.3964, 34.0793, 0.37", "-5.21871, -32.6686, 35.0492, 0.22", "-4.29989, -33.0652, 36.7782, 0.22", "-3.96895, -33.2072, 37.3892, 0.22", "-3.38018, -33.434, 38.383, 0.44", "-2.53134, -33.7067, 39.7186, 0.96", "-1.34299, -34.0002, 41.4015, 0.88", "-0.157398, -34.2167, 42.8967, 0.52", "0.763179, -34.3427, 43.9623, 0.37", "1.88072, -34.4742, 45.2844, 0.66", "2.85652, -34.5575, 46.5348, 0.66", "3.29351, -34.553, 47.1186, 0.66", "4.05781, -34.4496, 48.2246, 0.29", "4.94645, -34.1934, 49.5832, 0.44", "5.80925, -33.8192, 51.0025, 0.15", "6.68397, -33.3433, 52.5688, 0.15", "7.1094, -33.0739, 53.3681, 0.29", "7.94914, -32.5165, 54.9719, 0.29", "8.48285, -32.1433, 55.9387, 0.29", "9.03453, -31.7758, 56.8215, 0.29", "9.54077, -31.471, 57.5196, 0.52", "10.6479, -30.9025, 58.9605, 1.03", "11.092, -30.7129, 59.5485, 1.03", "11.7865, -30.4618, 60.5105, 0.29", "12.6954, -30.216, 61.9236, 0.29", "13.1545, -30.1569, 62.6801, 0.44", "14.2274, -30.1631, 64.4424, 0.44", "14.6247, -30.2057, 65.0758, 0.44", "15.3103, -30.2823, 66.1435, 0.44", "16.0292, -30.3609, 67.2223, 0.44", "17.2839, -30.4613, 68.9776, 1.4", "17.9572, -30.5006, 69.8856, 1.33", "19.0047, -30.5844, 71.226, 0.44", "20.1782, -30.7585, 72.6611, 0.44", "20.7609, -30.8804, 73.3344, 0.44", "21.6833, -31.1191, 74.3415, 0.44", "21.9955, -31.2133, 74.6637, 0.44", "23.0114, -31.5748, 75.6302, 1.18", "24.2842, -32.1917, 76.6441, 0.22", "24.57, -32.3446, 76.827, 0.22", "25.3268, -32.7344, 77.2953, 0.81", "26.0832, -33.0968, 77.7693, 0.81", "26.8802, -33.4265, 78.2794, 0.37", "28.5586, -33.9737, 79.3612, 0.37", "29.3918, -34.2008, 79.9397, 0.37", "30.5946, -34.5129, 80.8411, 0.37", "31.1327, -34.6775, 81.312, 0.37", "31.7626, -34.8883, 81.9263, 0.88", "32.1899, -35.0364, 82.4036, 1.03", "33.1273, -35.3891, 83.5551, 0.44", "33.6149, -35.6183, 84.2847, 0.44", "34.7584, -36.3032, 86.138, 0.52", "35.2981, -36.6762, 87.0978, 0.22", "36.2892, -37.3976, 88.9202, 0.44", "37.0981, -37.9841, 90.4461, 0.96", "38.1494, -38.6797, 92.3916, 0.96", "38.7635, -39.0301, 93.4448, 0.52", "39.7557, -39.4513, 94.8272, 0.52", "40.654, -39.7298, 95.8057, 0.29", "41.7099, -39.9448, 96.6371, 0.29", "42.369, -40.0369, 97.0716, 0.81", "43.0363, -40.1021, 97.4545, 1.33", "44.6983, -40.2336, 98.3889, 0.37", "45.9316, -40.3452, 99.1289, 0.96", "47.9064, -40.5259, 100.47, 0.15", "49.43, -40.6816, 101.603, 0.74", "50.3293, -40.7788, 102.338, 0.37", "51.0425, -40.8411, 102.983, 1.11", "52.8259, -40.9517, 104.759, 0.22", "53.8717, -40.9873, 105.814, 0.22", "54.543, -40.9891, 106.457, 0.22", "55.1631, -40.9782, 107.022, 1.03", "56.518, -40.9307, 108.206, 0.15", "57.592, -40.8677, 109.031, 0.81", "57.9755, -40.8509, 109.266, 0.81", "59.2768, -40.8437, 109.999, 0.22", "60.2614, -40.8492, 110.579, 0.22", "60.924, -40.8681, 111.031, 0.22", "61.9917, -40.9021, 111.83, 0.81", "63.2078, -40.9357, 112.928, 0.22", "64.3251, -40.9583, 114.104, 0.74", "65.8525, -40.9707, 115.907, 0.29", "66.8972, -40.9863, 117.203, 0.29", "67.4774, -41.0042, 118.002, 0.37", "68.581, -41.0411, 119.749, 0.37", "68.9257, -41.0396, 120.388, 0.37", "69.2195, -41.0224, 121.012, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000036716396236,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.99162, 0.153053, 4.41, 0.96", "-8.99162, 0.153053, 4.41, 0.96", "-9.45977, 1.16865, 5.29239, 0.96", "-9.90978, 2.3175, 6.30485, 1.03", "-10.331, 3.39298, 7.25266, 1.33", "-10.6023, 4.08582, 7.86325, 1.33", "-10.8307, 4.66887, 8.37708, 1.33", "-11.2138, 5.72612, 9.25697, 1.47", "-11.6457, 7.19841, 10.3109, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000036716396236
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "8.56837, -0.946945, -4.3, 0.59", "9.65348, -1.02418, -4.80037, 0.44", "10.127, -1.04827, -5.04212, 0.44", "10.9449, -1.05834, -5.48204, 0.66", "11.8503, -0.996977, -6.01664, 0.81", "13.0906, -0.795664, -6.81592, 0.52", "13.9107, -0.624238, -7.39209, 0.74", "14.3726, -0.516814, -7.75338, 0.74", "14.7538, -0.426684, -8.09025, 0.74", "15.5903, -0.22075, -8.90883, 0.81", "16.4525, -0.00192216, -9.8377, 0.66", "17.4302, 0.226712, -10.9437, 0.52", "18.3099, 0.377733, -11.9725, 0.66", "19.0045, 0.431715, -12.7913, 0.59", "19.731, 0.390483, -13.6941, 0.44", "20.3419, 0.24005, -14.5011, 0.44", "20.6366, 0.116421, -14.9202, 0.44", "21.2694, -0.19907, -15.8726, 0.44", "21.6536, -0.422843, -16.483, 0.15", "22.1706, -0.8011, -17.3893, 0.15", "22.6617, -1.32347, -18.3299, 0.15", "22.9533, -1.72598, -18.9099, 0.15", "28.622, -3.58805, -26.9348, 0.15", "35.1331, -6.40434, -33.9827, 0.15", "41.813, -10.9922, -39.842, 0.15", "48.4499, -15.4148, -45.8746, 0.15", "56.8314, -17.9168, -50.7213, 0.15", "64.6011, -20.0106, -56.6583, 0.15", "73.713, -20.1924, -60.7739, 0.15", "82.702, -20.1652, -65.1555, 0.15", "91.8396, -18.6633, -68.9302, 0.15", "101.323, -17.8019, -71.9842, 0.15", "110.585, -15.5819, -75.0297, 0.15", "119.688, -12.3095, -77.5663, 0.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000036716396236,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.04163, 6.13306, 1.12, 0.88", "-3.04163, 6.13306, 1.12, 0.88", "-3.29434, 6.82306, 1.2231, 0.88", "-3.54469, 7.60883, 1.47028, 0.81", "-3.72743, 8.3461, 1.78907, 0.66", "-3.82315, 8.86518, 2.06183, 0.66", "-3.89735, 9.40549, 2.38918, 0.66", "-3.99328, 10.2953, 2.97999, 0.66", "-4.10751, 11.1521, 3.56282, 0.66", "-4.25749, 11.9259, 4.04748, 0.66", "-4.53874, 12.9186, 4.53033, 0.88", "-4.96073, 14.1308, 4.903, 0.96", "-5.29235, 15.0711, 5.03376, 0.96", "-5.79114, 16.5518, 5.00317, 0.74", "-6.206, 17.8635, 4.82523, 0.74", "-6.75079, 19.5109, 4.49321, 0.81", "-7.17778, 20.7998, 4.13852, 0.74", "-7.61336, 22.2042, 3.65682, 0.66", "-7.89838, 23.371, 3.22353, 0.81", "-8.05646, 24.586, 2.76706, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000036716396236
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.22163, -2.99694, -2.2, 1.03", "-3.47843, -3.30264, -2.2, 1.03", "-3.96512, -3.88198, -2.2, 1.03", "-4.9726, -5.08127, -2.2, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000036716396236
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.88163, -2.97694, 4.68, 1.4", "-8.88163, -2.97694, 4.68, 1.4", "-9.93788, -3.4491, 4.50151, 1.4", "-11.2536, -3.93782, 4.38906, 1.03", "-12.7138, -4.46436, 4.39225, 1.03", "-13.8272, -4.89457, 4.46161, 0.96", "-14.6339, -5.24781, 4.53524, 0.96", "-16.1747, -6.02136, 4.76828, 0.74", "-17.3373, -6.69856, 5.00506, 0.96", "-18.6024, -7.54095, 5.3485, 1.47", "-20.0563, -8.58349, 5.81671, 1.11", "-21.7579, -9.9198, 6.40477, 1.18", "-23.2259, -11.2231, 6.94014, 1.11", "-24.1327, -12.1629, 7.28229, 1.25", "-25.1851, -13.3468, 7.63373, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000036716396236
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "7.96837, -3.67694, -2.46, 0.88", "8.34701, -4.78123, -2.13367, 0.88", "8.65329, -5.61121, -1.73627, 1.11", "8.98285, -6.47433, -1.34625, 1.11", "9.40047, -7.55444, -0.974972, 1.03", "9.77382, -8.59793, -0.687487, 0.88", "10.2008, -10.0206, -0.376396, 1.03", "10.5753, -11.6256, -0.14399, 1.03", "10.9233, -13.2179, -0.00654739, 0.74", "11.2775, -14.6725, 0.0664673, 0.88", "11.5418, -15.5637, 0.0474157, 0.88", "12.0669, -17.0025, -0.147999, 0.66", "12.4382, -17.8964, -0.355311, 0.66", "12.8927, -18.9338, -0.65442, 0.66", "13.3915, -19.9965, -0.95596, 0.74", "14.0153, -21.2314, -1.2891, 0.74", "14.4687, -22.083, -1.5452, 0.74", "14.8383, -22.8158, -1.80347, 0.74", "15.084, -23.4445, -2.06265, 0.74", "15.3134, -24.2942, -2.49195, 0.74", "15.4796, -25.2277, -2.99046, 0.74", "15.5515, -25.9711, -3.39762, 0.74", "15.5962, -26.8764, -3.96432, 0.66", "15.6295, -27.7463, -4.58782, 0.74", "15.7054, -29.0403, -5.63569, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000036716396236
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.50719, -0.313107, 0.0, 0.409209", "23.5071, -0.374051, 0.0, 0.409209", "38.5069, -0.434994, 0.0, 0.409209" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.6457, 7.19841, 10.3109, 1.47", "-11.51, 9.12097, 9.59011, 1.47", "-11.5262, 10.6433, 8.96027, 1.18", "-11.6665, 12.1187, 8.26123, 0.66", "-11.8682, 13.4609, 7.58848, 0.66", "-11.993, 14.1829, 7.21193, 0.66", "-12.1319, 15.0306, 6.79556, 0.74", "-12.3023, 16.0088, 6.37482, 0.59", "-12.4287, 16.8354, 5.97646, 0.59", "-12.4821, 17.3518, 5.69626, 0.74", "-12.491, 18.1671, 5.22231, 1.03", "-12.4196, 19.188, 4.68181, 0.66", "-12.2713, 20.2565, 4.20461, 0.81", "-12.042, 21.4415, 3.79143, 0.59", "-11.6881, 23.0687, 3.30048, 0.59", "-11.4288, 24.3371, 2.86815, 0.81", "-11.2196, 25.6544, 2.41365, 0.74", "-11.1191, 26.6416, 2.05142, 0.74", "-11.0796, 27.8053, 1.64381, 0.96", "-11.1264, 29.7246, 0.97702, 0.59", "-11.2898, 31.8426, 0.210906, 0.66", "-11.5039, 33.1389, -0.348403, 0.59", "-11.744, 34.1161, -0.87356, 0.81", "-11.9614, 34.8478, -1.33229, 0.59", "-12.2954, 35.833, -2.01957, 0.59", "-12.5431, 36.5659, -2.55713, 0.59", "-12.7828, 37.5065, -3.24238, 0.59", "-12.9111, 38.5869, -4.01951, 0.44", "-12.8687, 39.8499, -4.79233, 0.59", "-12.8131, 40.1981, -4.98059, 0.59", "-12.6276, 40.8987, -5.26472, 0.59", "-12.3652, 41.7137, -5.43512, 0.52", "-12.0521, 42.5526, -5.51905, 0.52", "-11.6522, 43.6302, -5.48779, 0.44", "-11.3481, 44.5766, -5.34776, 0.44", "-11.0931, 45.4474, -5.18788, 0.37", "-10.6765, 46.8766, -4.81397, 0.37", "-11.8946, 56.5688, -6.95313, 0.37", "-12.8709, 66.261, -9.21344, 0.37", "-15.3928, 75.8675, -10.3777, 0.37", "-15.9499, 85.8459, -10.0306, 0.37", "-16.0005, 95.7465, -8.62535, 0.37", "-14.6134, 105.336, -6.15219, 0.37", "-12.7114, 114.379, -2.33219, 0.37", "-10.6918, 122.602, 2.98799, 0.37", "-10.3577, 131.591, 7.35739, 0.37", "-11.0744, 140.958, 10.7837, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.6457, 7.19841, 10.3109, 0.81", "-12.1679, 7.80609, 13.3716, 0.81", "-12.4388, 8.23039, 15.5864, 0.81", "-12.5858, 8.55614, 17.4944, 0.81", "-12.6582, 8.82756, 19.3559, 0.81", "-12.671, 9.07858, 21.4006, 0.81", "-12.639, 9.22888, 23.0213, 0.81", "-12.4414, 9.42671, 25.8781, 0.81", "-12.049, 9.54192, 29.0059, 0.81", "-11.6751, 9.57169, 31.2078, 0.81", "-11.4654, 9.55078, 32.183, 0.81", "-10.9805, 9.41143, 34.166, 0.81", "-9.98628, 8.98681, 38.1453, 0.81", "-9.76897, 8.84818, 38.9497, 0.81" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-8.05646, 24.586, 2.76706, 0.52", "-7.93776, 25.7891, 1.93095, 0.52", "-7.99148, 26.5722, 1.49073, 0.52", "-8.05799, 27.4393, 1.17966, 0.52", "-8.0985, 28.0949, 1.02385, 0.52", "-8.1533, 29.1015, 0.854711, 0.88", "-8.28281, 30.6466, 0.710717, 0.52", "-8.4498, 31.7741, 0.744246, 0.66", "-8.71122, 33.4371, 0.949729, 0.66", "-8.82472, 34.3775, 1.15943, 0.96", "-8.88486, 35.1561, 1.38568, 0.96", "-8.97537, 36.6517, 1.92629, 0.59", "-9.0533, 37.4191, 2.25237, 0.66", "-9.23903, 38.3356, 2.7113, 0.66", "-9.63196, 39.5194, 3.31013, 0.81", "-9.88098, 40.1275, 3.63086, 0.81", "-10.2367, 40.8673, 4.05067, 0.81", "-10.8262, 41.8803, 4.65639, 0.52", "-11.3808, 42.6207, 5.16042, 0.52", "-11.9312, 43.1819, 5.57884, 0.52", "-12.7385, 43.8168, 6.16535, 0.52", "-13.4832, 44.3138, 6.75817, 0.52", "-14.0288, 44.6166, 7.20927, 0.66", "-15.0172, 44.9914, 8.03612, 0.66", "-15.6498, 45.143, 8.56664, 0.74", "-16.7039, 45.2972, 9.45297, 0.74", "-17.8332, 45.4067, 10.4341, 0.74", "-18.6673, 45.498, 11.2195, 0.74", "-19.5673, 45.6166, 12.1835, 0.37", "-20.7237, 45.8094, 13.3712, 0.37", "-21.4152, 45.9653, 14.0949, 0.37", "-22.2741, 46.241, 14.9492, 0.37", "-23.5888, 46.7865, 16.1668, 0.44", "-24.7444, 47.3463, 17.243, 0.44", "-26.3769, 48.2743, 18.7153, 0.22", "-27.7142, 49.1062, 19.7922, 0.22", "-28.967, 49.9422, 20.6971, 0.22", "-29.9674, 50.6309, 21.2277, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-8.05646, 24.586, 2.76706, 0.44", "-9.24804, 24.9263, 1.59163, 0.44", "-9.8217, 25.1138, 0.933106, 0.44", "-10.3736, 25.3155, 0.267225, 0.44", "-11.0185, 25.54, -0.464278, 0.44", "-11.4612, 25.7168, -0.919174, 0.52", "-12.1296, 26.0142, -1.57445, 0.52", "-12.9926, 26.43, -2.32769, 0.52", "-13.1757, 26.5268, -2.4864, 0.52", "-13.8774, 26.9039, -3.02809, 0.52", "-14.8358, 27.391, -3.71679, 0.37", "-15.5665, 27.7071, -4.18046, 0.37", "-16.1692, 27.9078, -4.51257, 0.44", "-16.9116, 28.0723, -4.92084, 0.44", "-17.5712, 28.1365, -5.32298, 0.44", "-18.2083, 28.1259, -5.76233, 0.44", "-18.9922, 28.021, -6.30965, 0.44", "-19.9155, 27.8723, -6.95592, 0.74", "-20.7036, 27.7469, -7.54289, 0.74", "-21.6407, 27.6036, -8.23005, 0.44", "-22.2609, 27.5194, -8.69681, 0.44", "-22.8612, 27.464, -9.13172, 0.66", "-23.6728, 27.4327, -9.68719, 0.22", "-24.3922, 27.4635, -10.0871, 0.22", "-25.457, 27.5951, -10.4113, 0.37", "-25.9906, 27.6842, -10.3423, 0.37", "-26.7024, 27.7719, -10.0361, 0.29", "-27.4468, 27.8094, -9.58675, 0.29", "-28.0518, 27.788, -9.15555, 0.52", "-29.4452, 27.6125, -8.07751, 0.22", "-31.2995, 27.1308, -6.56905, 0.22", "-31.9395, 26.9283, -6.02174, 0.22", "-32.4437, 26.7221, -5.58058, 0.22", "-33.064, 26.408, -5.04472, 0.22", "-33.7639, 25.9663, -4.46678, 0.22", "-34.6558, 25.1811, -3.95974, 0.22", "-43.8936, 24.4187, -7.71235, 0.22", "-53.0801, 22.1837, -10.9702, 0.22", "-62.0733, 22.0602, -15.3414, 0.22", "-71.5975, 20.8699, -18.1471, 0.22", "-81.265, 21.4871, -20.6289, 0.22", "-91.0066, 20.5609, -22.6888, 0.22", "-100.635, 18.6235, -24.5729, 0.22", "-109.924, 17.6843, -28.1545, 0.22", "-119.184, 15.2628, -31.0515, 0.22", "-127.842, 10.6379, -32.9601, 0.22", "-137.46, 8.25636, -34.3074, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.9726, -5.08127, -2.2, 0.52", "-6.17896, -6.25027, -1.6174, 0.52", "-7.16868, -7.14324, -1.20127, 0.66", "-7.90084, -7.78485, -0.96363, 0.66", "-8.97246, -8.75123, -0.613974, 0.66", "-10.2977, -9.98818, -0.120177, 0.74", "-10.8536, -10.5314, 0.0973992, 0.81", "-11.92, -11.5469, 0.507809, 0.74", "-13.1273, -12.6309, 0.918108, 0.81", "-14.5072, -13.827, 1.2994, 0.74", "-15.7247, -14.8462, 1.54292, 0.74", "-16.5933, -15.5472, 1.63618, 0.74", "-17.5869, -16.3601, 1.70271, 0.74", "-18.5626, -17.1853, 1.75837, 0.74", "-19.9303, -18.3563, 1.8047, 1.18", "-20.9202, -19.1824, 1.82866, 1.33", "-21.8566, -19.9413, 1.86957, 1.33", "-22.8819, -20.8265, 2.02405, 1.33", "-24.0027, -21.9497, 2.34427, 1.03", "-24.9509, -23.0555, 2.78257, 0.74", "-25.7053, -24.0733, 3.31933, 0.74", "-26.1196, -24.6872, 3.67818, 1.03", "-26.8617, -25.8836, 4.31729, 0.96", "-27.2237, -26.5127, 4.58878, 1.4", "-27.6775, -27.3395, 4.8248, 1.55", "-28.679, -29.1273, 5.14328, 0.88", "-29.8412, -30.9089, 5.09232, 1.25", "-30.9846, -32.3144, 4.75222, 1.25", "-31.8368, -33.1795, 4.35359, 1.11", "-32.8934, -34.1488, 3.78143, 1.11", "-33.7877, -34.8737, 3.20904, 1.55", "-35.9544, -36.3597, 1.55013, 1.11", "-37.1182, -37.0195, 0.574728, 1.11", "-38.0532, -37.4282, -0.139212, 1.4" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.9726, -5.08127, -2.2, 0.74", "-6.70427, -4.57601, -4.78006, 0.74", "-7.44294, -4.47422, -5.81636, 0.74", "-8.15734, -4.42712, -6.78749, 0.96", "-8.98944, -4.42264, -7.86568, 0.81", "-9.83425, -4.45818, -8.91693, 0.59", "-10.4785, -4.51246, -9.70493, 0.37", "-11.5335, -4.72355, -10.7944, 0.66", "-12.1417, -4.88143, -11.3811, 0.66", "-12.7691, -5.07064, -11.975, 0.59", "-13.4161, -5.25919, -12.5898, 0.59", "-14.0708, -5.41732, -13.2354, 0.81", "-14.7711, -5.52685, -13.9389, 0.81", "-15.4112, -5.55089, -14.5476, 0.66", "-16.1806, -5.48237, -15.2717, 0.81", "-16.9828, -5.29894, -15.9932, 0.88", "-17.7867, -5.00717, -16.6505, 0.88", "-18.1868, -4.80791, -16.936, 0.88", "-19.0841, -4.25978, -17.4254, 0.59", "-20.036, -3.57054, -17.8734, 0.44", "-20.6357, -3.0776, -18.0172, 0.44", "-21.0698, -2.693, -18.0046, 0.44", "-21.3364, -2.45276, -17.9257, 0.44", "-22.3366, -1.59753, -17.3917, 0.44", "-30.5339, -1.93495, -23.1093, 0.44", "-38.2225, -0.481231, -29.3361, 0.44", "-45.5466, -0.472035, -36.1447, 0.44", "-51.5519, -0.648751, -44.1388, 0.44", "-57.3038, -2.66367, -52.0669, 0.44", "-62.2071, -5.99757, -60.1194, 0.44", "-67.3607, -10.2617, -67.553, 0.44", "-71.6328, -15.8065, -74.6947, 0.44", "-75.2556, -20.8809, -82.5131, 0.44", "-78.8378, -26.0223, -90.3063, 0.44", "-81.7121, -32.929, -96.9422, 0.44", "-83.8769, -40.4537, -103.162, 0.44", "-87.5509, -48.6693, -107.522, 0.44" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-25.1851, -13.3468, 7.63373, 1.11", "-26.537, -14.858, 7.42529, 1.11", "-27.7684, -16.1399, 7.26634, 0.96", "-28.95, -17.2452, 7.19725, 0.81", "-30.3707, -18.4765, 7.28901, 0.81", "-31.4325, -19.271, 7.49473, 0.81", "-32.3268, -19.8241, 7.7539, 0.81", "-33.0453, -20.1372, 8.01891, 0.81", "-34.3471, -20.4612, 8.50525, 0.96", "-36.0494, -20.587, 9.08644, 0.96", "-38.1463, -20.5114, 9.7181, 0.88", "-40.0794, -20.3486, 10.1566, 0.74", "-41.8172, -20.1667, 10.4325, 1.4", "-42.9146, -20.0528, 10.5194, 1.4", "-45.1712, -19.7801, 10.5238, 0.88", "-46.363, -19.618, 10.4183, 0.96", "-47.5991, -19.4634, 10.214, 0.96", "-48.8572, -19.3611, 9.97063, 0.74", "-50.9835, -19.3692, 9.71213, 1.11" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.1851, -13.3468, 7.63373, 1.18", "-25.7967, -14.6302, 9.88981, 1.18", "-26.1467, -15.3282, 11.1249, 1.03", "-26.5457, -16.1317, 12.5776, 1.03", "-26.6853, -16.4128, 13.0859, 1.03", "-27.2552, -17.5603, 15.1608, 1.03", "-27.7381, -18.5327, 16.919, 1.18", "-27.8499, -18.7429, 17.3913, 1.18", "-28.2173, -19.4114, 18.9758, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "15.7054, -29.0403, -5.63569, 0.52", "15.5548, -29.4497, -6.34159, 0.52", "15.3524, -30.2119, -7.59093, 0.66", "15.2284, -31.0154, -8.87152, 0.88", "15.1808, -31.8825, -10.178, 0.74", "15.2075, -32.5848, -11.2114, 0.74", "15.2611, -33.0648, -11.9463, 0.59", "15.4453, -33.7868, -13.1058, 0.74", "15.7382, -34.4894, -14.3336, 0.88", "15.9413, -34.8273, -15.0693, 0.81", "16.1384, -35.0462, -15.8659, 0.66", "16.2936, -35.1327, -16.94, 0.66", "16.2927, -35.1141, -17.3673, 0.66", "16.1221, -34.9942, -18.5092, 0.66", "15.8925, -34.9071, -19.4717, 0.66", "15.6127, -34.8948, -20.5422, 0.66", "15.3128, -34.9979, -21.7396, 0.66", "15.1655, -35.1443, -22.5477, 0.52", "15.0756, -35.3349, -23.4697, 0.52", "15.1025, -35.4956, -24.3572, 0.52", "15.3276, -35.7519, -25.904, 0.52", "15.5439, -35.9082, -26.8251, 0.52", "15.807, -36.0528, -27.8027, 0.52", "16.0908, -36.1797, -28.8528, 0.52", "16.649, -36.4133, -31.2207, 0.52", "16.7594, -36.4599, -31.8717, 0.52", "16.8542, -36.5194, -32.6901, 0.37", "15.8434, -36.7824, -32.6303, 0.29", "15.1435, -36.9552, -32.4818, 0.29", "14.0824, -37.1902, -32.1486, 0.29", "12.9383, -37.4118, -31.6911, 0.29", "11.6536, -37.6183, -31.1721, 0.22", "10.2732, -37.787, -30.5882, 0.22", "8.69644, -37.9582, -29.8621, 0.22", "7.91105, -38.0223, -29.4497, 0.22", "7.16649, -38.0767, -28.9795, 0.29", "2.61652, -41.2325, -37.3065, 0.29", "-1.21144, -45.3904, -45.5562, 0.29", "-4.43081, -49.7158, -53.9781, 0.29", "-9.60466, -52.6238, -62.0263, 0.29", "-13.4986, -55.1663, -70.8792, 0.29", "-17.9005, -56.4177, -79.7706, 0.29", "-21.9404, -58.4819, -88.6823, 0.29", "-25.3523, -60.6245, -97.8348, 0.29", "-29.8585, -63.9911, -106.103, 0.29", "-32.9794, -66.119, -115.362, 0.29", "-34.9764, -68.6031, -124.84, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.7054, -29.0403, -5.63569, 0.59", "16.1119, -29.8906, -4.78216, 0.59", "16.6271, -31.0864, -3.6132, 0.59", "17.0187, -31.9704, -2.79032, 0.59", "17.4576, -32.8583, -1.93775, 0.74", "17.9631, -33.7764, -1.04414, 0.59", "18.5075, -34.6351, -0.188106, 0.88", "19.1887, -35.5108, 0.719898, 0.66", "19.7138, -35.9708, 1.20151, 0.44", "20.616, -36.45, 1.79354, 0.44", "21.1063, -36.6016, 2.05353, 0.88", "21.9635, -36.8008, 2.44674, 1.33", "22.7541, -36.9898, 2.78363, 1.25", "24.2666, -37.4615, 3.3995, 0.52", "25.4273, -38.0006, 3.8878, 0.59", "26.448, -38.7044, 4.3206, 0.59", "27.1337, -39.3905, 4.67835, 0.59", "27.8135, -40.3432, 5.14235, 0.74", "28.3123, -41.2785, 5.59333, 0.74", "28.5984, -42.009, 5.95465, 0.66", "28.7515, -42.5196, 6.20757, 0.66", "29.0654, -43.6842, 6.85856, 0.52", "29.3771, -44.6784, 7.56098, 0.52", "29.6872, -45.461, 8.29355, 0.88", "30.0188, -46.1008, 9.03935, 0.88", "30.3972, -46.676, 9.81808, 0.52", "30.8369, -47.2735, 10.6833, 0.52", "31.3542, -47.9694, 11.6638, 0.74", "31.8777, -48.6854, 12.6278, 0.81", "32.3716, -49.3483, 13.4683, 1.03", "32.879, -50.0062, 14.2324, 0.81", "33.4451, -50.7242, 14.9698, 0.66", "33.9496, -51.398, 15.5814, 0.59", "34.5293, -52.1724, 16.2708, 0.59", "34.92, -52.6731, 16.7234, 1.33", "35.2518, -53.0639, 17.0885, 1.99", "36.3283, -54.2025, 18.1711, 0.81", "37.3712, -55.185, 19.099, 0.44", "38.2884, -56.038, 19.8564, 0.44", "38.7296, -56.4803, 20.2026, 0.44", "39.2007, -57.0236, 20.5567, 0.74", "39.7593, -57.7501, 20.9147, 1.03", "40.3872, -58.6516, 21.1652, 0.88", "40.9845, -59.5153, 21.2458, 0.29", "41.3031, -59.9528, 21.2495, 0.29", "42.0372, -60.8378, 21.2396, 0.52", "42.5241, -61.3348, 21.2376, 0.52", "43.0108, -61.7717, 21.2176, 0.52", "43.6965, -62.3391, 21.2108, 0.52", "44.5678, -63.0481, 21.2656, 0.81", "45.2637, -63.665, 21.3455, 1.18", "45.8671, -64.2967, 21.4886, 1.18", "47.0582, -65.7921, 21.9415, 1.18", "47.9635, -67.0696, 22.3954, 0.44", "48.5562, -67.9264, 22.7432, 0.88", "49.085, -68.6792, 23.056, 0.66", "49.9956, -69.9834, 23.5824, 0.37", "50.4585, -70.6705, 23.857, 0.37", "51.0037, -71.5342, 24.2197, 0.88", "51.7909, -72.8969, 24.7337, 0.44", "52.3807, -73.966, 25.0939, 1.03", "53.1439, -75.3736, 25.5383, 1.25", "53.8778, -76.7878, 25.8753, 0.52", "54.4201, -78.0033, 26.144, 0.52", "54.7182, -78.7856, 26.3105, 0.52", "54.9671, -79.5039, 26.4453, 0.52", "55.1963, -80.1355, 26.5608, 0.44", "55.7112, -81.3488, 26.7705, 0.74", "56.2787, -82.5286, 27.1172, 0.44", "56.7042, -83.3364, 27.4221, 0.59", "57.1492, -84.178, 27.861, 0.44", "57.4508, -84.7636, 28.2327, 0.52", "57.9731, -85.7977, 28.9198, 0.74", "59.1404, -88.0007, 30.483, 0.52", "59.4862, -88.5819, 30.9119, 0.52", "60.12, -89.5604, 31.707, 1.18", "60.361, -89.8893, 31.998, 1.18", "61.1518, -90.8145, 32.8541, 0.59", "61.7421, -91.4292, 33.3964, 0.52", "62.7149, -92.34, 34.139, 1.03", "63.6226, -93.1194, 34.8429, 1.62", "64.7576, -94.0263, 35.6705, 0.81", "65.4862, -94.6134, 36.2352, 1.03", "66.0662, -95.0843, 36.7103, 0.37", "66.5576, -95.4852, 37.0837, 0.22", "67.0929, -95.9234, 37.4545, 0.52", "67.8232, -96.5176, 37.9253, 0.22", "69.0404, -97.4611, 38.5883, 0.74", "70.0927, -98.2039, 39.0675, 0.29", "70.631, -98.5348, 39.2706, 0.29", "71.4958, -98.9994, 39.5245, 0.52", "72.566, -99.5021, 39.6524, 0.74", "73.9463, -100.041, 39.5545, 1.11", "75.047, -100.429, 39.2742, 0.44", "75.8116, -100.698, 39.0228, 0.88", "76.3759, -100.919, 38.8397, 1.11", "78.1438, -101.715, 38.2659, 0.29", "79.2696, -102.319, 37.894, 0.29", "79.8763, -102.711, 37.7313, 0.29", "80.7945, -103.403, 37.5931, 0.29", "81.9663, -104.402, 37.6269, 0.81", "82.6293, -105.019, 37.7979, 0.81", "83.3309, -105.693, 38.1449, 0.81", "84.0055, -106.348, 38.5454, 0.37", "84.9907, -107.297, 39.1536, 0.88", "85.7456, -108.02, 39.6136, 1.62", "86.7545, -108.937, 40.2554, 0.44", "87.6816, -109.756, 40.8977, 0.22", "88.2086, -110.225, 41.2835, 0.22", "88.7152, -110.692, 41.6465, 0.22", "89.3883, -111.353, 42.0805, 0.74", "90.1179, -112.181, 42.5648, 0.15", "90.493, -112.721, 42.8245, 0.59", "90.7765, -113.341, 43.1048, 0.22", "90.8983, -113.796, 43.3178, 0.44", "90.9712, -114.524, 43.6639, 0.81", "90.9192, -116.023, 44.443, 0.44", "90.8149, -116.792, 44.903, 0.59", "90.5167, -118.287, 45.9138, 0.44", "90.3154, -119.073, 46.5063, 0.44", "90.0744, -119.874, 47.1498, 0.74", "89.7342, -120.914, 48.0128, 0.74", "89.3254, -122.124, 49.0566, 0.96", "88.96, -123.307, 50.0754, 0.44", "88.7822, -124.107, 50.742, 0.22", "88.7229, -124.549, 51.1055, 0.44", "88.664, -125.517, 51.9314, 0.15", "88.6643, -126.349, 52.6263, 0.81", "88.7026, -126.898, 53.121, 0.96", "88.8705, -128.328, 54.5456, 0.22", "88.9559, -128.956, 55.233, 0.22", "89.0708, -129.797, 56.2568, 0.22", "89.1154, -130.149, 56.7287, 0.88", "89.2015, -131.04, 58.0429, 0.44", "89.2461, -131.597, 58.9336, 0.52", "89.265, -132.21, 59.923, 0.15", "89.2618, -132.823, 60.8751, 0.15", "89.2396, -133.238, 61.4755, 0.52", "89.1079, -134.666, 63.4347, 0.07", "89.0477, -135.315, 64.2911, 0.07", "88.9813, -135.978, 65.1436, 0.07", "88.9204, -136.446, 65.7136, 0.29", "88.7209, -137.526, 66.9375, 0.07", "88.5075, -138.377, 67.8212, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "38.5069, -0.434994, 0.0, 0.15", "53.5068, -0.495938, 0.0, 0.15", "68.5067, -0.556882, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.76897, 8.84818, 38.9497, 0.59", "-9.40876, 9.27584, 40.191, 0.59", "-8.9742, 9.84203, 41.8716, 0.59", "-8.87615, 9.99781, 42.3605, 0.59", "-8.64875, 10.4188, 43.7948, 0.59", "-8.29984, 11.0572, 45.8538, 0.59", "-7.92927, 11.6918, 47.8078, 0.59", "-7.71979, 12.0584, 48.9198, 0.59", "-7.30857, 12.8106, 51.0274, 0.59", "-6.92086, 13.5414, 52.905, 0.59", "-6.57339, 14.264, 54.4615, 0.59", "-6.39915, 14.7481, 55.3272, 0.59", "-6.28021, 15.2139, 56.0616, 0.59", "-6.15654, 16.318, 57.6312, 0.59", "-6.16862, 16.8451, 58.3961, 0.59", "-6.25987, 17.6985, 59.7961, 0.44", "-6.41231, 18.6421, 61.4437, 0.44", "-6.50832, 19.2109, 62.4643, 0.44", "-6.63123, 20.1041, 64.073, 0.37", "-6.70834, 21.3571, 66.3561, 0.52", "-6.68572, 22.7227, 68.9377, 0.52", "-6.65244, 23.0859, 69.6644, 0.37", "-6.57245, 23.6519, 70.8402, 0.37", "-6.52155, 24.0352, 71.6588, 0.59", "-6.49172, 24.782, 73.3548, 0.59", "-6.50867, 24.9403, 73.703, 0.59", "-6.76127, 25.8964, 75.9273, 0.37", "-7.06519, 26.7296, 78.0241, 0.37", "-7.2033, 27.0835, 79.0066, 0.59", "-7.43784, 27.8385, 81.4214, 0.59", "-7.48104, 28.1611, 82.5848, 0.59", "-7.39772, 28.5769, 84.2507, 0.59", "-7.16034, 28.8602, 85.5327, 0.59", "-6.1285, 29.4444, 88.5735, 0.59", "-5.45487, 29.6333, 90.0146, 0.59", "-4.92966, 29.6891, 90.9031, 0.59", "-4.30497, 29.6764, 91.7985, 0.74", "-2.98348, 29.5579, 93.477, 0.88", "-1.43264, 29.3488, 95.3843, 0.44", "-0.206794, 29.1549, 96.9046, 0.44", "0.632331, 29.0172, 98.0252, 0.44", "1.47742, 28.8424, 99.2439, 0.52", "2.6465, 28.5032, 101.109, 0.52", "3.61924, 28.1722, 102.736, 0.52", "4.43177, 27.8933, 104.181, 0.52", "4.91585, 27.7539, 105.04, 0.52", "5.99916, 27.4593, 107.016, 0.52", "7.00497, 27.1942, 108.846, 0.52", "7.60025, 27.0355, 109.892, 0.52", "7.97381, 26.9488, 110.591, 0.52", "8.99725, 26.7188, 112.523, 0.37", "10.0395, 26.5241, 114.497, 0.37", "10.5376, 26.4647, 115.43, 0.66", "11.7558, 26.3671, 117.711, 0.66", "13.2404, 26.2502, 120.91, 0.66" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-9.76897, 8.84818, 38.9497, 0.66", "-8.49894, 8.92393, 39.8503, 0.66", "-7.18008, 9.07497, 40.8404, 0.66", "-6.07333, 9.25178, 41.7168, 0.81", "-4.24306, 9.6013, 43.227, 0.66", "-2.74296, 9.91573, 44.4908, 0.66", "-2.24016, 10.0201, 44.9114, 0.66", "-1.40719, 10.2383, 45.6378, 0.66", "-0.79776, 10.4187, 46.1756, 0.66", "-0.331522, 10.5421, 46.5562, 0.66", "0.31692, 10.6913, 46.9953, 0.66", "1.28258, 10.8564, 47.5691, 0.66", "2.44514, 11.0004, 48.1964, 0.88", "3.62201, 11.1183, 48.8011, 1.03", "5.12823, 11.2865, 49.5684, 0.74", "5.8925, 11.3958, 49.9881, 0.74", "6.91729, 11.5948, 50.6355, 0.74", "7.6277, 11.8202, 51.2446, 1.03", "8.3439, 12.1483, 52.1676, 1.03", "8.81596, 12.4416, 53.0372, 1.03", "9.23989, 12.8093, 54.092, 1.03", "9.68994, 13.2835, 55.5179, 0.81", "10.3383, 14.0559, 58.0022, 0.59", "11.0183, 14.8612, 60.8806, 0.59", "11.4946, 15.395, 63.0814, 0.59", "11.7917, 15.7024, 64.5356, 0.74", "12.3642, 16.2048, 67.162, 0.74", "12.7487, 16.4476, 68.6605, 0.74", "13.3066, 16.6339, 70.2117, 0.59", "14.5038, 16.8172, 72.2955, 0.59", "14.9616, 16.8303, 72.7572, 0.59", "16.0636, 16.8079, 73.4492, 0.66", "17.5351, 16.7968, 74.0581, 1.4", "18.9457, 16.826, 74.4784, 0.66", "20.8483, 16.9641, 74.9011, 1.18", "22.9964, 17.2157, 75.29, 0.44", "23.8856, 17.3443, 75.4727, 0.44", "25.168, 17.5386, 75.7963, 0.44", "27.0977, 17.8816, 76.3019, 0.22", "28.2735, 18.1159, 76.6768, 0.22", "30.0901, 18.4837, 77.2799, 0.22", "31.396, 18.7655, 77.7091, 0.22", "33.1895, 19.1569, 78.2491, 0.22", "34.6399, 19.4784, 78.6018, 0.44", "37.6545, 20.2136, 79.1098, 0.44", "39.1723, 20.6373, 79.1671, 0.44", "40.2713, 21.0244, 78.9882, 0.59", "41.8674, 21.6668, 78.5211, 0.44", "43.245, 22.2972, 77.8552, 0.52", "44.7352, 23.0256, 76.7938, 0.37", "45.9349, 23.6569, 75.5716, 0.37", "46.6842, 24.112, 74.6328, 0.37" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-38.0532, -37.4282, -0.139212, 0.66", "-37.3307, -38.6375, -1.58877, 0.66", "-36.9573, -39.333, -2.45333, 0.44", "-36.549, -40.2752, -3.68301, 0.66", "-36.2493, -41.1744, -4.82082, 0.15", "-36.0633, -41.9439, -5.801, 0.15", "-35.9814, -42.3236, -6.31362, 0.59", "-35.84, -43.093, -7.34078, 0.81", "-35.7251, -43.871, -8.43625, 0.81", "-35.6545, -44.3845, -9.12903, 0.59", "-35.5146, -45.3951, -10.4053, 0.37", "-35.4093, -46.3015, -11.4524, 0.37", "-35.3351, -47.0901, -12.2538, 0.29", "-35.2936, -47.7139, -12.8786, 0.29", "-35.2757, -48.3424, -13.6077, 0.66", "-35.2673, -48.9726, -14.389, 0.81", "-35.3016, -49.9087, -15.533, 0.52", "-35.3817, -50.6238, -16.4174, 0.37", "-35.6846, -52.2748, -18.6513, 0.29", "-35.9591, -53.5905, -20.6167, 0.29", "-36.0714, -54.1202, -21.5509, 0.29", "-33.6018, -60.7365, -28.6308, 0.29", "-31.8437, -67.1955, -36.0599, 0.29", "-28.2968, -74.3203, -42.1143, 0.29", "-23.6093, -81.9607, -46.5473, 0.29", "-19.6295, -90.5109, -49.8723, 0.29", "-16.7738, -99.1735, -53.9715, 0.29", "-14.888, -108.493, -57.0703, 0.29", "-14.766, -118.086, -59.8918, 0.29", "-15.9367, -127.835, -61.7821, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-38.0532, -37.4282, -0.139212, 1.03", "-38.7025, -38.7402, 0.393959, 1.03", "-39.4359, -40.0978, 0.858094, 1.03", "-39.835, -40.7251, 1.03739, 1.03", "-40.5886, -41.8189, 1.29252, 1.03", "-41.7602, -43.4222, 1.59878, 1.11", "-42.7093, -44.6929, 1.76387, 0.88", "-43.59, -45.8589, 1.76685, 0.59", "-44.6089, -47.1988, 1.62777, 0.66", "-45.2237, -48.0128, 1.48203, 0.66", "-45.9031, -48.923, 1.26637, 0.81", "-46.8302, -50.1443, 0.896009, 0.66", "-47.5597, -51.1734, 0.541115, 0.66", "-47.9215, -51.8056, 0.323714, 1.03", "-48.287, -52.5312, 0.0828243, 1.25", "-48.8428, -53.5563, -0.247848, 0.81", "-49.3693, -54.4038, -0.517795, 0.81", "-49.7818, -54.9174, -0.66721, 0.81", "-50.5172, -55.6366, -0.913361, 1.25", "-51.6353, -56.6586, -1.29381, 0.52", "-52.4367, -57.4088, -1.56886, 0.74", "-53.0023, -57.9421, -1.74549, 0.74", "-53.7836, -58.6465, -1.94148, 0.74", "-55.0205, -59.7237, -2.15039, 0.74", "-55.9533, -60.6213, -2.1942, 0.81", "-56.7765, -61.5714, -2.1485, 0.81", "-57.4724, -62.4543, -2.0443, 0.81", "-58.206, -63.4435, -1.93198, 0.66", "-59.1399, -64.8037, -1.80408, 1.25", "-60.1586, -66.3835, -1.66332, 0.52", "-60.626, -67.1978, -1.68649, 0.52", "-61.185, -68.3568, -1.90278, 0.59", "-61.8317, -69.8595, -2.35514, 0.81", "-62.3556, -71.1928, -2.87733, 1.33", "-62.6763, -72.0176, -3.27866, 1.55", "-63.3945, -73.6797, -4.18821, 0.66", "-64.0724, -75.0092, -4.85284, 0.66", "-64.704, -76.0791, -5.34739, 0.59", "-65.1426, -76.6957, -5.59059, 0.59", "-65.7785, -77.5262, -5.90344, 1.11", "-66.5444, -78.5298, -6.30643, 1.11", "-67.5889, -79.9969, -6.86284, 0.44", "-68.445, -81.4148, -7.43518, 0.59", "-68.947, -82.4599, -7.92429, 1.11", "-69.4221, -83.7349, -8.58897, 1.25", "-69.7437, -84.9638, -9.28042, 0.81", "-69.8589, -85.9445, -9.81715, 0.59", "-69.8504, -86.7813, -10.2375, 0.81", "-69.8036, -87.8814, -10.7037, 0.74", "-69.8209, -88.6678, -10.9856, 1.18", "-69.9864, -89.7942, -11.3036, 1.7", "-70.5271, -91.6114, -11.6146, 0.74", "-71.094, -92.778, -11.7279, 0.74", "-71.6931, -93.6056, -11.7709, 0.74", "-72.9637, -94.8664, -11.7947, 0.44", "-73.8046, -95.4728, -11.8186, 0.44", "-74.8923, -96.0076, -11.8573, 0.52", "-75.7042, -96.2734, -11.8893, 0.52", "-77.0542, -96.6107, -11.9402, 0.52", "-77.934, -96.8235, -11.9985, 0.44", "-78.6126, -97.0193, -12.0711, 0.44", "-79.0946, -97.198, -12.1187, 0.44", "-79.8893, -97.585, -12.1671, 0.74", "-80.5272, -98.0073, -12.1434, 0.74", "-81.4783, -98.7329, -12.0125, 0.37", "-82.2158, -99.3125, -11.8439, 0.22", "-82.9194, -99.8697, -11.6276, 0.22", "-83.4701, -100.331, -11.4268, 0.37", "-84.0987, -100.929, -11.1613, 0.37", "-84.6079, -101.508, -10.9677, 0.37", "-85.1744, -102.233, -10.8702, 0.37", "-85.4594, -102.613, -10.8889, 0.37", "-86.0727, -103.439, -11.0457, 0.44", "-86.7722, -104.452, -11.3264, 0.59", "-87.4088, -105.434, -11.6612, 0.88", "-88.0676, -106.46, -12.0512, 1.25", "-88.5656, -107.19, -12.3584, 1.4", "-89.7674, -108.767, -13.0669, 0.29", "-90.5024, -109.613, -13.4881, 0.44", "-90.8867, -110.015, -13.6975, 0.44", "-91.4189, -110.519, -13.9643, 0.88", "-91.9715, -111.001, -14.2285, 1.4", "-93.3602, -112.118, -14.9073, 0.37", "-93.9872, -112.555, -15.1582, 0.37", "-94.2958, -112.755, -15.2494, 0.37", "-95.2882, -113.42, -15.5072, 0.81", "-95.989, -113.946, -15.6766, 0.22", "-96.6048, -114.522, -15.7957, 0.44", "-97.4853, -115.637, -15.8878, 0.22", "-97.8007, -116.141, -15.9206, 0.22", "-98.1879, -116.879, -15.9805, 0.29", "-98.4886, -117.537, -16.0386, 0.29", "-98.834, -118.269, -16.1205, 0.29", "-99.3619, -119.336, -16.3339, 0.37", "-99.6238, -119.835, -16.4673, 0.37", "-99.9268, -120.368, -16.6116, 0.88", "-100.282, -120.995, -16.7635, 1.4", "-101.011, -122.299, -17.084, 0.44", "-101.588, -123.357, -17.3367, 0.44", "-101.874, -123.937, -17.4575, 0.88", "-102.247, -124.75, -17.6088, 1.4", "-102.662, -125.772, -17.7761, 0.37", "-102.963, -126.613, -17.8626, 0.37", "-103.217, -127.326, -17.9396, 0.37", "-103.654, -128.471, -18.083, 1.33", "-103.892, -129.022, -18.1857, 1.33", "-104.431, -130.117, -18.504, 0.29", "-104.921, -131.041, -18.9292, 0.52", "-105.549, -132.291, -19.771, 0.22", "-105.866, -132.924, -20.362, 0.22", "-106.087, -133.335, -20.8605, 0.37", "-106.435, -133.924, -21.7128, 0.81", "-106.759, -134.407, -22.5824, 0.81", "-107.071, -134.884, -23.572, 0.37", "-107.239, -135.259, -24.2998, 0.37", "-107.265, -135.359, -24.4833, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-50.9835, -19.3692, 9.71213, 0.44", "-51.7091, -20.9775, 9.45937, 0.44", "-52.44, -22.2479, 9.18242, 0.66", "-53.2008, -23.3722, 8.90414, 0.96", "-53.9752, -24.4848, 8.57649, 0.96", "-54.8795, -25.806, 8.13138, 0.59", "-55.6812, -26.9623, 7.69622, 0.74", "-56.5047, -28.0525, 7.21476, 1.03", "-57.1509, -28.8472, 6.80753, 1.11", "-58.253, -30.1719, 5.99711, 0.44", "-58.8595, -30.9335, 5.44735, 0.66", "-59.2722, -31.5488, 4.90519, 0.66", "-59.463, -31.9922, 4.48581, 0.66", "-59.5624, -32.631, 3.77603, 0.66", "-59.4982, -33.0082, 3.27578, 0.66", "-59.1162, -33.7663, 2.12941, 0.66", "-58.6913, -34.3447, 1.25193, 0.66", "-58.0912, -35.0443, 0.221679, 0.88", "-57.5687, -35.6484, -0.651912, 0.44", "-56.9638, -36.4428, -1.74475, 0.44", "-56.511, -37.2309, -2.7161, 0.52", "-56.2169, -38.1103, -3.58408, 0.22", "-56.1571, -38.6702, -4.03762, 0.52", "-56.2268, -39.6069, -4.71486, 0.66", "-56.4782, -40.7898, -5.50622, 1.11", "-56.8896, -41.9855, -6.26704, 0.88", "-57.3775, -43.0437, -6.92923, 0.59", "-58.0644, -44.2752, -7.68926, 0.37", "-58.414, -44.8548, -8.04849, 0.37", "-58.7603, -45.4247, -8.3948, 0.37", "-58.9977, -45.829, -8.65784, 0.37", "-59.4368, -46.5728, -9.22471, 0.37", "-59.7027, -47.0537, -9.62729, 0.52", "-60.1539, -47.9913, -10.4351, 0.29", "-60.3675, -48.4744, -10.8715, 0.66", "-60.8392, -49.5868, -11.9605, 0.22", "-61.1727, -50.3822, -12.8286, 0.81", "-61.4712, -51.0967, -13.6726, 1.03", "-61.7917, -51.8312, -14.6202, 1.03", "-62.2247, -52.7381, -15.9147, 0.37", "-62.5022, -53.277, -16.7692, 0.37", "-62.7742, -53.808, -17.6208, 0.37", "-62.8609, -54.0051, -17.9348, 0.37", "-63.0534, -54.5416, -18.8026, 0.74", "-63.1999, -55.2194, -19.9801, 0.74", "-63.2385, -55.7611, -21.0562, 0.74", "-63.2606, -56.1584, -22.0329, 0.52", "-63.3054, -56.48, -22.9192, 0.52", "-63.3523, -56.6027, -23.3199, 0.52", "-63.5077, -56.7781, -24.1165, 0.52", "-63.8421, -56.9353, -25.3169, 0.52", "-64.2379, -56.972, -26.4613, 0.52", "-64.5556, -56.9223, -27.4073, 0.37", "-64.8376, -56.8493, -28.3058, 0.37", "-65.2183, -56.7605, -29.5098, 0.37", "-65.4614, -56.7028, -30.3314, 0.37", "-65.6537, -56.604, -31.1624, 0.37", "-65.9397, -56.2529, -32.9365, 0.37", "-66.0252, -56.0005, -33.8712, 0.37", "-69.3294, -61.7391, -41.3645, 0.37", "-71.6877, -66.7673, -49.6805, 0.37", "-74.982, -70.9239, -58.1581, 0.37", "-79.3624, -74.2664, -66.5032, 0.37", "-82.8469, -78.7197, -74.7511, 0.37", "-84.8446, -83.4255, -83.3455, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-50.9835, -19.3692, 9.71213, 0.81", "-51.9339, -19.8473, 9.70975, 0.81", "-52.8646, -20.34, 9.72872, 0.81", "-53.9051, -20.8458, 9.8208, 0.66", "-55.644, -21.5565, 10.1184, 0.44", "-57.0351, -22.0268, 10.3751, 0.52", "-57.9315, -22.2817, 10.54, 0.52", "-58.9323, -22.5295, 10.755, 0.59", "-60.2834, -22.7921, 11.0846, 0.52", "-62.0111, -23.0122, 11.5338, 0.52", "-63.1133, -23.0642, 11.8295, 0.96", "-64.1807, -23.0193, 12.0914, 1.03", "-65.2437, -22.8793, 12.3657, 1.03", "-66.2435, -22.6313, 12.6555, 0.52", "-67.0345, -22.3067, 12.9394, 0.52", "-67.5004, -22.0189, 13.1384, 0.52", "-68.3775, -21.3469, 13.6769, 0.74", "-68.9204, -20.9042, 14.1031, 0.74", "-69.7965, -20.2623, 14.9179, 0.37", "-70.5958, -19.8032, 15.6377, 0.37", "-71.449, -19.5219, 16.3036, 0.74", "-72.6769, -19.3857, 17.0982, 1.11", "-73.9199, -19.4215, 17.7257, 1.11", "-75.164, -19.6019, 18.24, 0.59", "-76.505, -19.9472, 18.6795, 0.74", "-77.3856, -20.2647, 18.909, 0.96", "-78.3266, -20.6816, 19.1534, 1.03", "-79.3687, -21.2071, 19.3403, 0.66", "-80.3753, -21.7307, 19.4979, 0.59", "-81.1126, -22.11, 19.6448, 0.59", "-82.085, -22.603, 19.939, 0.52", "-83.0831, -23.0701, 20.2599, 0.52", "-83.6544, -23.3216, 20.4741, 0.52", "-84.4163, -23.6379, 20.8838, 0.44", "-85.0728, -23.8764, 21.3069, 0.44", "-85.4932, -24.0275, 21.6206, 1.11", "-86.1081, -24.2307, 22.1297, 1.25", "-87.2, -24.571, 23.0375, 0.81", "-88.4266, -24.894, 24.0334, 0.66", "-89.016, -25.0136, 24.4719, 0.96", "-89.8297, -25.1168, 25.0176, 1.33", "-91.1979, -25.2004, 25.8182, 0.59", "-92.1614, -25.2204, 26.2602, 0.74", "-93.2219, -25.2028, 26.581, 0.52", "-94.201, -25.1842, 26.764, 0.52", "-95.0683, -25.179, 26.8946, 0.66", "-96.2063, -25.1822, 27.056, 1.4", "-97.4492, -25.1966, 27.2585, 0.59", "-98.4492, -25.2193, 27.5169, 0.44", "-99.2328, -25.237, 27.7734, 0.44", "-100.177, -25.227, 28.1266, 0.66", "-101.492, -25.168, 28.6385, 1.11", "-102.586, -25.0913, 29.1083, 0.74", "-104.002, -24.9821, 29.809, 0.74", "-104.853, -24.9195, 30.2542, 1.03", "-105.568, -24.8399, 30.6556, 1.25", "-106.739, -24.6805, 31.3354, 0.59", "-107.848, -24.5095, 31.9869, 0.59", "-108.836, -24.3398, 32.5709, 0.59", "-109.823, -24.1255, 33.151, 0.88", "-111.358, -23.7527, 34.1115, 0.44", "-111.908, -23.5965, 34.4674, 0.44", "-112.696, -23.3286, 34.9788, 0.74", "-113.333, -23.1058, 35.3591, 0.74", "-114.178, -22.8059, 35.8347, 1.11", "-115.002, -22.5203, 36.2802, 1.55", "-116.588, -22.0385, 37.0044, 0.44", "-117.58, -21.7566, 37.4112, 0.74", "-118.359, -21.5406, 37.7424, 0.96", "-120.052, -21.0789, 38.3775, 0.22", "-121.131, -20.8138, 38.6707, 0.37", "-122.375, -20.5693, 38.8323, 0.22", "-122.999, -20.4871, 38.8181, 0.22", "-124.457, -20.3386, 38.6542, 0.22", "-125.796, -20.2092, 38.4925, 0.81", "-126.891, -20.1299, 38.4248, 1.62", "-128.911, -20.0123, 38.4995, 0.44", "-129.948, -19.9722, 38.5313, 0.44", "-131.206, -19.96, 38.5318, 0.44", "-132.747, -19.9889, 38.523, 0.29", "-134.457, -20.0472, 38.5954, 0.81", "-135.489, -20.0793, 38.6544, 0.52", "-138.096, -20.1056, 38.7342, 0.37", "-139.208, -20.0896, 38.726, 0.37", "-140.361, -20.0597, 38.6385, 0.37", "-141.303, -20.0272, 38.518, 0.74", "-142.196, -19.9742, 38.3863, 0.96", "-143.49, -19.8847, 38.2703, 0.29", "-144.312, -19.8423, 38.2851, 0.29", "-145.031, -19.8116, 38.3137, 0.29", "-146.034, -19.7629, 38.3976, 0.29", "-146.618, -19.7182, 38.4808, 1.03", "-147.642, -19.6024, 38.6766, 1.4", "-149.125, -19.3609, 39.0222, 0.44", "-150.368, -19.1022, 39.313, 0.59", "-151.408, -18.9239, 39.5256, 0.29", "-152.244, -18.761, 39.6811, 0.29", "-152.96, -18.6161, 39.8227, 0.74", "-153.603, -18.484, 39.956, 0.96", "-154.345, -18.3782, 40.0963, 0.44", "-156.274, -18.4709, 40.245, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-28.2173, -19.4114, 18.9758, 0.66", "-29.4157, -19.387, 19.6014, 0.66", "-30.9842, -19.3339, 20.3355, 0.66", "-31.9985, -19.3051, 20.8097, 0.66", "-33.2308, -19.2747, 21.3305, 0.66", "-34.2144, -19.2661, 21.7423, 0.66", "-35.6335, -19.2595, 22.3017, 0.66", "-36.6637, -19.2413, 22.6316, 0.66", "-37.8802, -19.2021, 22.999, 0.66", "-38.8458, -19.139, 23.2957, 0.66", "-40.1529, -18.9903, 23.6779, 0.66", "-41.0512, -18.8533, 23.9152, 0.66", "-41.996, -18.7012, 24.1433, 0.52", "-43.3348, -18.5172, 24.4637, 0.74", "-44.5472, -18.4517, 24.7384, 1.03", "-45.5625, -18.4982, 24.9877, 0.74", "-46.4541, -18.6291, 25.1797, 0.66", "-47.7055, -18.9261, 25.445, 0.74", "-49.1255, -19.3339, 25.7038, 0.88", "-50.5678, -19.7673, 25.9184, 0.52", "-51.4972, -20.0227, 26.0583, 0.52", "-52.9475, -20.3411, 26.2425, 0.59", "-53.6701, -20.4238, 26.3054, 0.52", "-54.9627, -20.3914, 26.3805, 0.66", "-55.8402, -20.2409, 26.4005, 0.44", "-56.8876, -19.9193, 26.4571, 0.66", "-57.577, -19.6617, 26.5346, 0.37", "-58.0781, -19.4602, 26.6378, 0.37", "-58.8971, -19.1663, 26.8857, 0.96", "-59.5997, -18.961, 27.1793, 1.25", "-61.4038, -18.5935, 28.1366, 0.74", "-62.9108, -18.4188, 29.0622, 0.37", "-63.8147, -18.3635, 29.6725, 0.37", "-64.9463, -18.3617, 30.4581, 0.59", "-66.0846, -18.4334, 31.2564, 0.66", "-67.1644, -18.5858, 31.9959, 0.59", "-67.8474, -18.7643, 32.4245, 1.03", "-68.098, -18.843, 32.5695, 1.03", "-69.2774, -19.1794, 33.1613, 0.29", "-70.1851, -19.3821, 33.5525, 0.29", "-70.9249, -19.4927, 33.8163, 0.66", "-71.9722, -19.5477, 34.1387, 0.44", "-73.1957, -19.5557, 34.5031, 0.44", "-73.8269, -19.5752, 34.686, 0.22", "-74.2377, -19.6032, 34.8115, 0.22", "-74.9015, -19.6361, 35.0196, 0.52", "-75.5549, -19.6371, 35.2303, 0.52", "-76.4707, -19.5886, 35.5228, 0.15", "-77.2524, -19.5566, 35.7918, 0.15", "-78.0194, -19.5446, 36.1077, 0.44", "-79.2143, -19.549, 36.6283, 0.88", "-79.6038, -19.5531, 36.8116, 0.88", "-80.5838, -19.5307, 37.2623, 0.22", "-81.4439, -19.4687, 37.6756, 0.22", "-82.0811, -19.4006, 38.0072, 0.22", "-83.134, -19.2739, 38.6054, 1.11", "-84.4241, -19.1289, 39.4396, 0.59", "-85.3983, -19.0382, 40.1601, 0.44", "-86.2722, -18.9707, 40.8887, 0.44", "-87.3015, -18.8874, 41.8139, 1.18", "-88.1673, -18.8098, 42.6365, 1.18", "-89.5082, -18.6794, 43.9408, 0.52", "-91.2156, -18.5023, 45.5377, 0.29", "-92.1669, -18.3972, 46.3701, 0.29", "-93.073, -18.2828, 47.0416, 0.29", "-93.8325, -18.1656, 47.5012, 0.96", "-94.6973, -17.9959, 47.9103, 0.44", "-95.827, -17.7069, 48.267, 1.25", "-97.3474, -17.2441, 48.5351, 0.22", "-98.5206, -16.876, 48.6672, 0.15", "-99.5154, -16.5683, 48.7755, 0.29", "-100.639, -16.2497, 48.9111, 1.11", "-101.656, -15.9715, 49.0297, 0.66", "-102.663, -15.7256, 49.1298, 0.22", "-103.575, -15.534, 49.1897, 0.66", "-104.665, -15.3473, 49.3016, 0.59", "-105.825, -15.2138, 49.4924, 1.18" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-28.2173, -19.4114, 18.9758, 0.74", "-28.5591, -19.9427, 20.0651, 0.74", "-29.15, -20.6224, 21.4588, 0.74", "-29.828, -21.258, 22.785, 1.11", "-30.8185, -22.0595, 24.4151, 0.74", "-31.604, -22.6555, 25.5834, 0.74", "-32.304, -23.1988, 26.6163, 0.74", "-33.1622, -23.8607, 27.8916, 0.88", "-33.8468, -24.4206, 28.92, 0.88", "-34.4456, -24.973, 29.9677, 0.96", "-35.1914, -25.8311, 31.6144, 0.74", "-35.7272, -26.5952, 33.0549, 1.11", "-36.0893, -27.3004, 34.3177, 1.47", "-36.4425, -28.3113, 36.0702, 0.96", "-36.7368, -29.5411, 38.1469, 0.96", "-36.8991, -30.6267, 39.9168, 1.4", "-36.9464, -30.9802, 40.4744, 1.11", "-37.1238, -31.8802, 41.8915, 0.88", "-37.3708, -32.7127, 43.1914, 0.88", "-37.674, -33.4022, 44.3139, 0.96", "-37.9183, -33.826, 45.0697, 1.18", "-38.4227, -34.5754, 46.5929, 0.59", "-38.8302, -35.1351, 47.8172, 0.59", "-39.1376, -35.5103, 48.67, 0.88", "-40.0085, -36.5102, 50.97, 0.59", "-40.6819, -37.2542, 52.7565, 1.4", "-41.0359, -37.6636, 53.7704, 1.4", "-41.432, -38.2262, 55.1023, 1.11", "-41.9177, -39.0366, 56.9708, 0.52", "-42.3254, -39.7192, 58.6014, 0.52", "-42.7294, -40.3942, 60.1063, 1.25", "-43.2029, -41.2348, 61.7915, 1.25", "-43.637, -42.1044, 63.3261, 0.74", "-43.9571, -42.8811, 64.5104, 1.03", "-44.3838, -44.2882, 66.2049, 0.52", "-44.6441, -45.5844, 67.3246, 1.47", "-44.7884, -46.8647, 68.1089, 0.44", "-44.8252, -47.8758, 68.5174, 0.44", "-44.8024, -48.609, 68.6962, 0.74", "-44.7206, -49.4832, 68.8127, 1.11", "-44.5409, -50.776, 69.0049, 0.44", "-44.3659, -51.9992, 69.2835, 1.03", "-44.2421, -53.0488, 69.6597, 1.33", "-44.1427, -54.2203, 70.2288, 0.44", "-44.0721, -55.4358, 70.9237, 0.37", "-44.0612, -57.4477, 72.1706, 1.03", "-44.1004, -58.0754, 72.5926, 1.25", "-44.2964, -59.6445, 73.7944, 0.59", "-44.5024, -60.7337, 74.8025, 1.03", "-44.6046, -61.1439, 75.2217, 1.03", "-44.8817, -62.0659, 76.2568, 0.22", "-45.1399, -62.8588, 77.2039, 0.74", "-45.5708, -64.0663, 78.7635, 0.44", "-46.0012, -65.0626, 80.0926, 0.88", "-46.2128, -65.496, 80.7224, 1.33", "-46.8253, -66.6636, 82.4459, 0.52", "-47.4117, -67.7105, 83.9949, 0.52", "-47.7504, -68.2729, 84.7546, 1.03", "-48.3547, -69.2297, 85.8652, 0.29", "-48.8763, -70.0204, 86.6682, 0.88", "-49.3369, -70.7113, 87.3062, 1.55", "-50.4141, -72.3372, 88.5098, 0.15", "-50.8162, -72.9729, 88.8722, 0.29", "-51.2697, -73.7421, 89.2315, 0.15", "-51.5653, -74.2923, 89.437, 0.29", "-52.1376, -75.3977, 89.765, 0.15", "-52.5884, -76.3055, 90.0019, 1.03", "-53.5616, -78.3424, 90.3927, 0.15", "-54.0898, -79.4741, 90.6134, 0.15", "-54.6291, -80.6141, 90.8338, 0.15", "-54.9365, -81.23, 90.941, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-107.265, -135.359, -24.4833, 0.37", "-107.427, -135.727, -24.6396, 0.37", "-107.539, -136.126, -24.8068, 0.37", "-107.689, -137.051, -25.0777, 0.37", "-107.876, -138.202, -25.4145, 0.37", "-107.967, -138.762, -25.5787, 0.37", "-108.068, -139.386, -25.7613, 0.37", "-108.184, -140.408, -26.0188, 0.37", "-108.198, -141.616, -26.2741, 0.52" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-107.265, -135.359, -24.4833, 0.15", "-107.426, -135.935, -25.661, 0.15", "-107.545, -136.405, -26.4653, 0.15", "-107.691, -137.092, -27.504, 0.15", "-107.835, -137.765, -28.3965, 0.15", "-108.006, -138.535, -29.2583, 0.15", "-108.158, -139.07, -29.7709, 0.22", "-108.472, -139.932, -30.391, 0.15", "-108.831, -140.679, -30.797, 0.15", "-109.229, -141.345, -31.0557, 0.15", "-109.943, -142.315, -31.3267, 0.15", "-110.892, -143.313, -31.5299, 0.15", "-111.424, -143.723, -31.5942, 0.22", "-112.245, -144.159, -31.6038, 0.15", "-112.827, -144.375, -31.5678, 0.15", "-113.345, -144.52, -31.508, 0.15", "-114.361, -144.754, -31.352, 0.15", "-115.285, -144.963, -31.1808, 0.22", "-116.379, -145.255, -30.9284, 0.22", "-117.808, -145.693, -30.5284, 0.15", "-118.759, -146.022, -30.1895, 0.15", "-119.336, -146.252, -29.9283, 0.15", "-119.796, -146.47, -29.6842, 0.22", "-120.492, -146.834, -29.2768, 0.15", "-120.915, -147.079, -29.0087, 0.22", "-122.008, -147.73, -28.2203, 0.15", "-122.721, -148.135, -27.6698, 0.15", "-123.379, -148.474, -27.1206, 1.03", "-131.161, -154.225, -29.6432, 1.03" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-156.274, -18.4709, 40.245, 0.22", "-155.977, -19.3586, 40.245, 0.22", "-155.765, -19.9991, 40.245, 0.22", "-155.677, -20.2955, 40.2108, 0.22", "-155.416, -21.1712, 40.1098, 0.81", "-155.145, -22.083, 40.0047, 0.15", "-154.994, -22.5903, 39.9461, 0.37", "-154.747, -23.2808, 39.8451, 0.15", "-154.326, -24.4841, 39.6249, 0.37" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-156.274, -18.4709, 40.245, 0.37", "-157.482, -18.4333, 40.119, 0.37", "-157.918, -18.3895, 40.0711, 0.37", "-158.606, -18.3088, 40.0008, 0.81", "-159.322, -18.2183, 39.9033, 0.88", "-160.325, -18.094, 39.7087, 0.22", "-161.228, -18.0048, 39.5127, 0.22", "-161.739, -17.9528, 39.3748, 0.22", "-162.592, -17.8564, 39.1296, 0.96", "-163.891, -17.6912, 38.6987, 0.22", "-164.845, -17.5674, 38.3243, 0.96", "-165.47, -17.5064, 38.0238, 1.18", "-166.7, -17.3999, 37.3645, 0.22", "-167.402, -17.319, 36.9604, 0.29", "-167.821, -17.2443, 36.6673, 0.29", "-168.404, -17.105, 36.1174, 0.29", "-168.783, -16.9928, 35.5039, 0.29", "-169.098, -16.8744, 34.8264, 0.81", "-169.264, -16.8021, 34.3398, 1.03", "-169.659, -16.5879, 32.9454, 1.03", "-170.054, -16.3313, 31.3823, 0.81", "-170.759, -15.8974, 28.4752, 0.81", "-170.917, -15.8099, 27.8063, 0.59", "-171.279, -15.6274, 26.1875, 0.59", "-171.525, -15.5026, 25.1078, 1.03", "-171.816, -15.3516, 23.9454, 1.03", "-172.195, -15.175, 22.5958, 0.59", "-172.585, -15.0288, 21.3823, 0.59", "-172.912, -14.9267, 20.3954, 0.59", "-173.182, -14.8508, 19.6663, 0.59", "-173.574, -14.7234, 18.5738, 0.96", "-174.005, -14.5213, 17.3345, 0.52", "-174.395, -14.2674, 16.1747, 0.52", "-174.871, -13.9307, 14.8192, 0.52", "-175.212, -13.6902, 13.8556, 0.52", "-175.627, -13.4188, 12.6725, 0.52", "-175.872, -13.2634, 12.0027, 0.52", "-176.085, -13.1436, 11.5012, 0.52", "-176.323, -13.0606, 11.0503, 0.52", "-176.742, -12.9751, 10.3991, 0.52", "-177.097, -12.9257, 9.90577, 0.52", "-177.432, -12.8609, 9.52719, 0.52", "-177.918, -12.6739, 8.96692, 0.37", "-178.549, -12.1978, 8.21168, 0.37", "-178.784, -11.9475, 7.92611, 0.81", "-178.941, -11.7541, 7.75868, 0.81", "-179.565, -10.9103, 7.15229, 0.22", "-180.162, -10.0785, 6.66216, 0.22", "-180.498, -9.63813, 6.41008, 0.22", "-180.778, -9.3321, 6.20685, 0.22", "-181.363, -8.84771, 5.74186, 0.59", "-181.67, -8.6367, 5.45546, 0.59", "-182.316, -8.25334, 4.79759, 0.15", "-183.138, -7.80763, 3.973, 0.66", "-183.745, -7.50576, 3.35107, 0.66", "-184.773, -6.9903, 2.29127, 0.29", "-185.493, -6.6289, 1.48168, 0.29", "-185.755, -6.48767, 1.17064, 0.29", "-186.162, -6.23894, 0.638447, 0.59", "-186.781, -5.79827, -0.235328, 0.59", "-187.25, -5.43293, -0.941645, 0.22", "-187.677, -5.06715, -1.66157, 0.22", "-187.954, -4.82616, -2.17677, 0.44", "-188.348, -4.42324, -3.16118, 0.44", "-188.66, -3.974, -4.27107, 0.44", "-188.794, -3.70568, -4.97689, 0.44", "-188.843, -3.62263, -5.24431, 0.44", "-188.942, -3.47471, -5.7354, 0.44", "-189.162, -3.20197, -6.7738, 0.44", "-189.269, -3.04375, -7.33532, 0.37", "-189.392, -2.61902, -8.55349, 0.37", "-189.42, -2.28781, -9.50917, 0.37" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-105.825, -15.2138, 49.4924, 0.22", "-106.771, -16.4547, 49.6319, 0.22", "-107.456, -17.3994, 49.7149, 0.22", "-107.73, -17.7748, 49.7261, 0.22", "-108.285, -18.5225, 49.6602, 0.22", "-108.817, -19.2442, 49.5403, 0.22", "-109.21, -19.7764, 49.4089, 0.22", "-109.624, -20.3538, 49.1945, 0.52", "-110.297, -21.2653, 48.7882, 0.22", "-110.996, -22.211, 48.288, 0.59", "-111.282, -22.5989, 48.0613, 0.59", "-112.299, -23.961, 47.2098, 0.15", "-112.807, -24.6306, 46.7704, 0.15", "-113.526, -25.5944, 46.1229, 0.15", "-114.156, -26.4673, 45.5547, 0.15", "-114.572, -27.0501, 45.2138, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-105.825, -15.2138, 49.4924, 0.15", "-106.944, -15.3192, 49.7826, 0.15", "-107.947, -15.375, 50.0511, 0.15", "-108.656, -15.3715, 50.2398, 0.44", "-109.684, -15.3032, 50.5914, 0.15", "-110.141, -15.2402, 50.7628, 0.37", "-110.499, -15.1683, 50.9003, 0.37", "-110.811, -15.0554, 51.0634, 0.37", "-111.173, -14.8464, 51.2924, 0.15", "-111.981, -14.2963, 51.8241, 0.15", "-112.47, -13.9211, 52.1372, 0.59", "-113.078, -13.4417, 52.5487, 0.74", "-114.122, -12.6677, 53.2729, 0.15", "-114.583, -12.3426, 53.5959, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-108.198, -141.616, -26.2741, 0.37", "-107.901, -141.656, -25.5058, 0.37", "-107.486, -141.77, -24.5424, 0.81", "-106.95, -141.986, -23.4101, 0.81", "-106.344, -142.274, -22.3504, 0.22", "-105.728, -142.567, -21.4482, 0.22", "-105.132, -142.831, -20.6795, 0.22", "-104.486, -143.099, -19.9874, 0.15", "-103.784, -143.383, -19.3941, 0.15", "-102.812, -143.789, -18.7091, 0.15", "-101.994, -144.134, -18.221, 0.15", "-101.195, -144.427, -17.8297, 0.15", "-100.454, -144.661, -17.5086, 0.15", "-99.6514, -144.835, -17.1412, 0.88", "-93.9098, -149.007, -10.0961, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-108.198, -141.616, -26.2741, 0.37", "-109.048, -142.938, -26.7407, 0.37", "-109.588, -143.815, -27.046, 0.37", "-110.176, -144.744, -27.3697, 0.52", "-110.533, -145.303, -27.57, 0.37", "-111.065, -146.157, -27.8897, 0.52", "-111.592, -147.033, -28.2374, 0.29", "-111.989, -147.729, -28.5113, 0.29", "-112.638, -148.884, -28.9857, 0.29", "-113.184, -149.877, -29.4192, 0.29", "-113.74, -150.871, -29.865, 0.29", "-114.103, -151.511, -30.1698, 0.29", "-114.412, -152.044, -30.452, 0.29", "-118.889, -159.624, -35.195, 0.29" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-189.42, -2.28781, -9.50917, 0.22", "-189.087, -3.61192, -10.0551, 0.22", "-188.886, -4.61102, -10.3275, 0.22", "-188.817, -5.00663, -10.4112, 0.29", "-188.742, -5.44069, -10.503, 0.29", "-188.576, -6.40166, -10.7063, 0.22", "-188.335, -7.7902, -11.0, 0.29", "-188.143, -8.81057, -11.0741, 0.15", "-188.059, -9.39445, -11.0741, 0.44", "-186.713, -19.2976, -11.416, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-189.42, -2.28781, -9.50917, 0.44", "-189.662, -2.00171, -9.89094, 0.44", "-190.035, -1.49958, -10.4787, 0.44", "-190.441, -0.928963, -11.1047, 0.66", "-190.65, -0.655421, -11.408, 0.29", "-191.26, 0.0349859, -12.1997, 0.22", "-191.614, 0.377623, -12.6303, 0.22", "-191.857, 0.574424, -12.9265, 0.22", "-192.206, 0.806917, -13.2844, 0.22", "-192.519, 0.989452, -13.5492, 0.22", "-192.984, 1.20488, -13.8895, 0.37", "-193.531, 1.41367, -14.2267, 0.37", "-194.235, 1.65869, -14.6565, 0.37", "-195.064, 1.94027, -15.1371, 0.37", "-195.806, 2.21676, -15.5329, 0.29", "-196.382, 2.49043, -15.8243, 0.29", "-196.739, 2.70453, -15.9877, 0.29", "-197.186, 3.03622, -16.1552, 0.29", "-197.676, 3.47921, -16.3029, 0.29", "-197.942, 3.79246, -16.375, 0.29", "-198.298, 4.34008, -16.4691, 0.29", "-198.577, 4.89923, -16.5463, 0.29", "-198.775, 5.37254, -16.6326, 0.29", "-198.934, 5.76429, -16.7135, 0.29", "-199.237, 6.43606, -16.88, 0.29", "-199.659, 7.20673, -17.1277, 0.29", "-199.924, 7.60781, -17.3044, 0.29", "-200.296, 8.0869, -17.5588, 0.29", "-200.727, 8.55205, -17.8674, 0.29", "-201.429, 9.15633, -18.3413, 0.22", "-201.97, 9.48844, -18.6754, 0.22", "-202.758, 9.91916, -19.1349, 0.22", "-203.116, 10.0932, -19.3358, 0.52", "-203.876, 10.4297, -19.7635, 0.88", "-204.722, 10.7511, -20.2759, 0.29", "-205.759, 11.0025, -20.9003, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-205.759, 11.0025, -20.9003, 0.15", "-206.886, 11.9883, -20.4988, 0.15", "-207.542, 12.5624, -20.2649, 0.15", "-208.423, 13.3331, -19.9509, 0.15", "-208.823, 13.6829, -19.8084, 0.15", "-209.745, 14.4899, -19.4797, 0.22", "-217.313, 20.6033, -17.1668, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-205.759, 11.0025, -20.9003, 0.29", "-206.512, 10.3313, -20.3989, 0.29", "-207.098, 9.80893, -20.0088, 0.37" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-207.098, 9.80893, -20.0088, 0.22", "-208.136, 9.40921, -19.7987, 0.22", "-209.226, 8.94148, -19.6026, 0.15", "-209.637, 8.74089, -19.5178, 0.29", "-210.533, 8.27869, -19.3041, 0.15", "-210.958, 8.04357, -19.1845, 0.29", "-211.227, 7.87859, -19.1029, 0.29", "-211.924, 7.3617, -18.8685, 0.15", "-212.507, 6.88116, -18.6476, 0.29", "-213.295, 6.201, -18.3148, 0.15", "-214.179, 5.41079, -17.8701, 0.07", "-214.633, 5.00164, -17.6109, 0.07", "-215.086, 4.61075, -17.329, 0.22", "-215.814, 4.03642, -16.8169, 0.15", "-216.186, 3.78056, -16.534, 0.22", "-216.833, 3.35735, -16.0013, 0.15", "-217.272, 3.11443, -15.6203, 0.15", "-217.724, 2.91101, -15.214, 0.15", "-218.441, 2.64256, -14.5375, 0.15", "-219.266, 2.36463, -13.7379, 0.52", "-226.003, -4.01915, -10.0149, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-207.098, 9.80893, -20.0088, 0.22", "-207.314, 9.2206, -19.7529, 0.22", "-207.697, 8.16007, -19.3115, 0.15", "-207.924, 7.42207, -19.0271, 0.15", "-208.153, 6.60371, -18.7387, 0.15", "-208.228, 6.29694, -18.6393, 0.15", "-208.348, 5.75034, -18.4773, 0.37", "-208.519, 5.05014, -18.26, 0.07", "-208.651, 4.50754, -18.08, 0.07", "-208.744, 4.08025, -17.904, 0.07", "-208.811, 3.73172, -17.7295, 0.07", "-208.9, 3.35025, -17.517, 0.15", "-209.349, 1.99728, -16.6988, 0.15", "-209.632, 1.42527, -16.3209, 0.15", "-209.966, 0.937326, -15.9858, 0.15", "-210.361, 0.408321, -15.6043, 0.15", "-210.799, -0.117033, -15.2137, 0.22", "-211.339, -0.690651, -14.7872, 0.22", "-211.943, -1.21698, -14.448, 0.22", "-212.785, -1.81126, -14.0892, 1.33", "-215.319, -10.0474, -9.01508, 1.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_33", "dend_32", "dend_29", "dend_20", "dend_3", "dend_0", "dend_37", "dend_34", "dend_31", "dend_30", "dend_22", "dend_21", "dend_9", "dend_4", "dend_2", "dend_1", "dend_36", "dend_35", "dend_28", "dend_23", "dend_19", "dend_10", "dend_6", "dend_5", "dend_25", "dend_24", "dend_18", "dend_11", "dend_8", "dend_7", "dend_27", "dend_26", "dend_17", "dend_12", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_33", "dend_32", "dend_29", "dend_20", "dend_3", "dend_0", "dend_37", "dend_34", "dend_31", "dend_30", "dend_22", "dend_21", "dend_9", "dend_4", "dend_2", "dend_1", "dend_36", "dend_35", "dend_28", "dend_23", "dend_19", "dend_10", "dend_6", "dend_5", "dend_25", "dend_24", "dend_18", "dend_11", "dend_8", "dend_7", "dend_27", "dend_26", "dend_17", "dend_12", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_33", "dend_32", "dend_29", "dend_20", "dend_3", "dend_0", "axon_0", "dend_37", "dend_34", "dend_31", "dend_30", "dend_22", "dend_21", "dend_9", "dend_4", "dend_2", "dend_1", "axon_1", "dend_36", "dend_35", "dend_28", "dend_23", "dend_19", "dend_10", "dend_6", "dend_5", "dend_25", "dend_24", "dend_18", "dend_11", "dend_8", "dend_7", "dend_27", "dend_26", "dend_17", "dend_12", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_20", "dend_20", "dend_20", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L1_HAC_edfad4a560_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_22
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_33, dend_32, dend_29, dend_20, dend_3, dend_0, dend_37, dend_34, dend_31, dend_30, dend_22, dend_21, dend_9, dend_4, dend_2, dend_1, dend_36, dend_35, dend_28, dend_23, dend_19, dend_10, dend_6, dend_5, dend_25, dend_24, dend_18, dend_11, dend_8, dend_7, dend_27, dend_26, dend_17, dend_12, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_33, dend_32, dend_29, dend_20, dend_3, dend_0, dend_37, dend_34, dend_31, dend_30, dend_22, dend_21, dend_9, dend_4, dend_2, dend_1, dend_36, dend_35, dend_28, dend_23, dend_19, dend_10, dend_6, dend_5, dend_25, dend_24, dend_18, dend_11, dend_8, dend_7, dend_27, dend_26, dend_17, dend_12, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_33, dend_32, dend_29, dend_20, dend_3, dend_0, axon_0, dend_37, dend_34, dend_31, dend_30, dend_22, dend_21, dend_9, dend_4, dend_2, dend_1, axon_1, dend_36, dend_35, dend_28, dend_23, dend_19, dend_10, dend_6, dend_5, dend_25, dend_24, dend_18, dend_11, dend_8, dend_7, dend_27, dend_26, dend_17, dend_12, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_20, dend_20, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.45000036716396236)
    connect dend_33(0), soma_0(0.45000036716396236)
    connect dend_32(0), soma_0(0.45000036716396236)
    connect dend_29(0), soma_0(0.45000036716396236)
    connect dend_20(0), soma_0(0.45000036716396236)
    connect dend_3(0), soma_0(0.45000036716396236)
    connect dend_0(0), soma_0(0.45000036716396236)
    connect axon_0(0), soma_0(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_28(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -9.19744, -0.241174, 0.0, 2.92638 ) }
    soma_0 { pt3dadd( -8.31221, -0.24477, 0.0, 5.08419 ) }
    soma_0 { pt3dadd( -7.42697, -0.248367, 0.0, 7.12364 ) }
    soma_0 { pt3dadd( -6.54174, -0.251964, 0.0, 8.50976 ) }
    soma_0 { pt3dadd( -5.65651, -0.25556, 0.0, 9.59414 ) }
    soma_0 { pt3dadd( -4.77128, -0.259157, 0.0, 10.7537 ) }
    soma_0 { pt3dadd( -3.88605, -0.262754, 0.0, 11.7809 ) }
    soma_0 { pt3dadd( -3.00082, -0.26635, 0.0, 12.4194 ) }
    soma_0 { pt3dadd( -2.11559, -0.269947, 0.0, 12.4804 ) }
    soma_0 { pt3dadd( -1.23035, -0.273544, 0.0, 12.5628 ) }
    soma_0 { pt3dadd( -0.345122, -0.27714, 0.0, 12.4791 ) }
    soma_0 { pt3dadd( 0.540109, -0.280737, 0.0, 12.378 ) }
    soma_0 { pt3dadd( 1.42534, -0.284334, 0.0, 12.1897 ) }
    soma_0 { pt3dadd( 2.31057, -0.28793, 0.0, 11.6678 ) }
    soma_0 { pt3dadd( 3.1958, -0.291527, 0.0, 10.8786 ) }
    soma_0 { pt3dadd( 4.08104, -0.295124, 0.0, 9.98639 ) }
    soma_0 { pt3dadd( 4.96627, -0.29872, 0.0, 9.13492 ) }
    soma_0 { pt3dadd( 5.8515, -0.302317, 0.0, 7.63372 ) }
    soma_0 { pt3dadd( 6.73673, -0.305914, 0.0, 5.29416 ) }
    soma_0 { pt3dadd( 7.62196, -0.30951, 0.0, 4.03796 ) }
    soma_0 { pt3dadd( 8.50719, -0.313107, 0.0, 2.33538 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -9.88158, -2.62694, 3.41, 1.03 ) }
    dend_38 { pt3dadd( -10.5605, -3.25522, 4.20598, 1.03 ) }
    dend_38 { pt3dadd( -11.2875, -4.10377, 5.19091, 0.74 ) }
    dend_38 { pt3dadd( -11.977, -5.05532, 6.36076, 0.74 ) }
    dend_38 { pt3dadd( -12.4612, -5.83931, 7.39801, 0.96 ) }
    dend_38 { pt3dadd( -12.9636, -6.77277, 8.61749, 0.81 ) }
    dend_38 { pt3dadd( -13.3785, -7.64628, 9.73635, 0.81 ) }
    dend_38 { pt3dadd( -13.7731, -8.78681, 11.0123, 0.59 ) }
    dend_38 { pt3dadd( -14.055, -10.1678, 12.4164, 0.59 ) }
    dend_38 { pt3dadd( -14.1667, -11.6012, 13.6465, 0.59 ) }
    dend_38 { pt3dadd( -14.1489, -12.6166, 14.4345, 0.52 ) }
    dend_38 { pt3dadd( -14.0065, -14.161, 15.5884, 0.74 ) }
    dend_38 { pt3dadd( -13.7276, -16.0538, 16.8972, 0.66 ) }
    dend_38 { pt3dadd( -13.438, -17.6416, 17.8933, 0.66 ) }
    dend_38 { pt3dadd( -13.0507, -19.4528, 18.9437, 0.52 ) }
    dend_38 { pt3dadd( -12.698, -20.871, 19.7206, 0.52 ) }
    dend_38 { pt3dadd( -12.2063, -22.703, 20.7608, 0.52 ) }
    dend_38 { pt3dadd( -11.9525, -23.6177, 21.317, 0.59 ) }
    dend_38 { pt3dadd( -11.7539, -24.315, 21.7949, 0.59 ) }
    dend_38 { pt3dadd( -11.4764, -25.2115, 22.4596, 0.59 ) }
    dend_38 { pt3dadd( -10.9939, -26.3896, 23.5615, 0.44 ) }
    dend_38 { pt3dadd( -10.2715, -27.6502, 24.978, 0.37 ) }
    dend_38 { pt3dadd( -9.70872, -28.4246, 26.0305, 0.37 ) }
    dend_38 { pt3dadd( -9.167, -29.0902, 27.0658, 0.74 ) }
    dend_38 { pt3dadd( -8.41654, -29.9616, 28.5795, 0.81 ) }
    dend_38 { pt3dadd( -7.19934, -31.2645, 31.1346, 0.59 ) }
    dend_38 { pt3dadd( -6.43435, -31.9273, 32.7206, 0.37 ) }
    dend_38 { pt3dadd( -5.73358, -32.3964, 34.0793, 0.37 ) }
    dend_38 { pt3dadd( -5.21871, -32.6686, 35.0492, 0.22 ) }
    dend_38 { pt3dadd( -4.29989, -33.0652, 36.7782, 0.22 ) }
    dend_38 { pt3dadd( -3.96895, -33.2072, 37.3892, 0.22 ) }
    dend_38 { pt3dadd( -3.38018, -33.434, 38.383, 0.44 ) }
    dend_38 { pt3dadd( -2.53134, -33.7067, 39.7186, 0.96 ) }
    dend_38 { pt3dadd( -1.34299, -34.0002, 41.4015, 0.88 ) }
    dend_38 { pt3dadd( -0.157398, -34.2167, 42.8967, 0.52 ) }
    dend_38 { pt3dadd( 0.763179, -34.3427, 43.9623, 0.37 ) }
    dend_38 { pt3dadd( 1.88072, -34.4742, 45.2844, 0.66 ) }
    dend_38 { pt3dadd( 2.85652, -34.5575, 46.5348, 0.66 ) }
    dend_38 { pt3dadd( 3.29351, -34.553, 47.1186, 0.66 ) }
    dend_38 { pt3dadd( 4.05781, -34.4496, 48.2246, 0.29 ) }
    dend_38 { pt3dadd( 4.94645, -34.1934, 49.5832, 0.44 ) }
    dend_38 { pt3dadd( 5.80925, -33.8192, 51.0025, 0.15 ) }
    dend_38 { pt3dadd( 6.68397, -33.3433, 52.5688, 0.15 ) }
    dend_38 { pt3dadd( 7.1094, -33.0739, 53.3681, 0.29 ) }
    dend_38 { pt3dadd( 7.94914, -32.5165, 54.9719, 0.29 ) }
    dend_38 { pt3dadd( 8.48285, -32.1433, 55.9387, 0.29 ) }
    dend_38 { pt3dadd( 9.03453, -31.7758, 56.8215, 0.29 ) }
    dend_38 { pt3dadd( 9.54077, -31.471, 57.5196, 0.52 ) }
    dend_38 { pt3dadd( 10.6479, -30.9025, 58.9605, 1.03 ) }
    dend_38 { pt3dadd( 11.092, -30.7129, 59.5485, 1.03 ) }
    dend_38 { pt3dadd( 11.7865, -30.4618, 60.5105, 0.29 ) }
    dend_38 { pt3dadd( 12.6954, -30.216, 61.9236, 0.29 ) }
    dend_38 { pt3dadd( 13.1545, -30.1569, 62.6801, 0.44 ) }
    dend_38 { pt3dadd( 14.2274, -30.1631, 64.4424, 0.44 ) }
    dend_38 { pt3dadd( 14.6247, -30.2057, 65.0758, 0.44 ) }
    dend_38 { pt3dadd( 15.3103, -30.2823, 66.1435, 0.44 ) }
    dend_38 { pt3dadd( 16.0292, -30.3609, 67.2223, 0.44 ) }
    dend_38 { pt3dadd( 17.2839, -30.4613, 68.9776, 1.4 ) }
    dend_38 { pt3dadd( 17.9572, -30.5006, 69.8856, 1.33 ) }
    dend_38 { pt3dadd( 19.0047, -30.5844, 71.226, 0.44 ) }
    dend_38 { pt3dadd( 20.1782, -30.7585, 72.6611, 0.44 ) }
    dend_38 { pt3dadd( 20.7609, -30.8804, 73.3344, 0.44 ) }
    dend_38 { pt3dadd( 21.6833, -31.1191, 74.3415, 0.44 ) }
    dend_38 { pt3dadd( 21.9955, -31.2133, 74.6637, 0.44 ) }
    dend_38 { pt3dadd( 23.0114, -31.5748, 75.6302, 1.18 ) }
    dend_38 { pt3dadd( 24.2842, -32.1917, 76.6441, 0.22 ) }
    dend_38 { pt3dadd( 24.57, -32.3446, 76.827, 0.22 ) }
    dend_38 { pt3dadd( 25.3268, -32.7344, 77.2953, 0.81 ) }
    dend_38 { pt3dadd( 26.0832, -33.0968, 77.7693, 0.81 ) }
    dend_38 { pt3dadd( 26.8802, -33.4265, 78.2794, 0.37 ) }
    dend_38 { pt3dadd( 28.5586, -33.9737, 79.3612, 0.37 ) }
    dend_38 { pt3dadd( 29.3918, -34.2008, 79.9397, 0.37 ) }
    dend_38 { pt3dadd( 30.5946, -34.5129, 80.8411, 0.37 ) }
    dend_38 { pt3dadd( 31.1327, -34.6775, 81.312, 0.37 ) }
    dend_38 { pt3dadd( 31.7626, -34.8883, 81.9263, 0.88 ) }
    dend_38 { pt3dadd( 32.1899, -35.0364, 82.4036, 1.03 ) }
    dend_38 { pt3dadd( 33.1273, -35.3891, 83.5551, 0.44 ) }
    dend_38 { pt3dadd( 33.6149, -35.6183, 84.2847, 0.44 ) }
    dend_38 { pt3dadd( 34.7584, -36.3032, 86.138, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_38 { pt3dadd( 35.2981, -36.6762, 87.0978, 0.22 ) }
    dend_38 { pt3dadd( 36.2892, -37.3976, 88.9202, 0.44 ) }
    dend_38 { pt3dadd( 37.0981, -37.9841, 90.4461, 0.96 ) }
    dend_38 { pt3dadd( 38.1494, -38.6797, 92.3916, 0.96 ) }
    dend_38 { pt3dadd( 38.7635, -39.0301, 93.4448, 0.52 ) }
    dend_38 { pt3dadd( 39.7557, -39.4513, 94.8272, 0.52 ) }
    dend_38 { pt3dadd( 40.654, -39.7298, 95.8057, 0.29 ) }
    dend_38 { pt3dadd( 41.7099, -39.9448, 96.6371, 0.29 ) }
    dend_38 { pt3dadd( 42.369, -40.0369, 97.0716, 0.81 ) }
    dend_38 { pt3dadd( 43.0363, -40.1021, 97.4545, 1.33 ) }
    dend_38 { pt3dadd( 44.6983, -40.2336, 98.3889, 0.37 ) }
    dend_38 { pt3dadd( 45.9316, -40.3452, 99.1289, 0.96 ) }
    dend_38 { pt3dadd( 47.9064, -40.5259, 100.47, 0.15 ) }
    dend_38 { pt3dadd( 49.43, -40.6816, 101.603, 0.74 ) }
    dend_38 { pt3dadd( 50.3293, -40.7788, 102.338, 0.37 ) }
    dend_38 { pt3dadd( 51.0425, -40.8411, 102.983, 1.11 ) }
    dend_38 { pt3dadd( 52.8259, -40.9517, 104.759, 0.22 ) }
    dend_38 { pt3dadd( 53.8717, -40.9873, 105.814, 0.22 ) }
    dend_38 { pt3dadd( 54.543, -40.9891, 106.457, 0.22 ) }
    dend_38 { pt3dadd( 55.1631, -40.9782, 107.022, 1.03 ) }
    dend_38 { pt3dadd( 56.518, -40.9307, 108.206, 0.15 ) }
    dend_38 { pt3dadd( 57.592, -40.8677, 109.031, 0.81 ) }
    dend_38 { pt3dadd( 57.9755, -40.8509, 109.266, 0.81 ) }
    dend_38 { pt3dadd( 59.2768, -40.8437, 109.999, 0.22 ) }
    dend_38 { pt3dadd( 60.2614, -40.8492, 110.579, 0.22 ) }
    dend_38 { pt3dadd( 60.924, -40.8681, 111.031, 0.22 ) }
    dend_38 { pt3dadd( 61.9917, -40.9021, 111.83, 0.81 ) }
    dend_38 { pt3dadd( 63.2078, -40.9357, 112.928, 0.22 ) }
    dend_38 { pt3dadd( 64.3251, -40.9583, 114.104, 0.74 ) }
    dend_38 { pt3dadd( 65.8525, -40.9707, 115.907, 0.29 ) }
    dend_38 { pt3dadd( 66.8972, -40.9863, 117.203, 0.29 ) }
    dend_38 { pt3dadd( 67.4774, -41.0042, 118.002, 0.37 ) }
    dend_38 { pt3dadd( 68.581, -41.0411, 119.749, 0.37 ) }
    dend_38 { pt3dadd( 68.9257, -41.0396, 120.388, 0.37 ) }
    dend_38 { pt3dadd( 69.2195, -41.0224, 121.012, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 35/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.99162, 0.153053, 4.41, 0.96 ) }
    dend_33 { pt3dadd( -8.99162, 0.153053, 4.41, 0.96 ) }
    dend_33 { pt3dadd( -9.45977, 1.16865, 5.29239, 0.96 ) }
    dend_33 { pt3dadd( -9.90978, 2.3175, 6.30485, 1.03 ) }
    dend_33 { pt3dadd( -10.331, 3.39298, 7.25266, 1.33 ) }
    dend_33 { pt3dadd( -10.6023, 4.08582, 7.86325, 1.33 ) }
    dend_33 { pt3dadd( -10.8307, 4.66887, 8.37708, 1.33 ) }
    dend_33 { pt3dadd( -11.2138, 5.72612, 9.25697, 1.47 ) }
    dend_33 { pt3dadd( -11.6457, 7.19841, 10.3109, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 44/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 8.56837, -0.946945, -4.3, 0.59 ) }
    dend_32 { pt3dadd( 9.65348, -1.02418, -4.80037, 0.44 ) }
    dend_32 { pt3dadd( 10.127, -1.04827, -5.04212, 0.44 ) }
    dend_32 { pt3dadd( 10.9449, -1.05834, -5.48204, 0.66 ) }
    dend_32 { pt3dadd( 11.8503, -0.996977, -6.01664, 0.81 ) }
    dend_32 { pt3dadd( 13.0906, -0.795664, -6.81592, 0.52 ) }
    dend_32 { pt3dadd( 13.9107, -0.624238, -7.39209, 0.74 ) }
    dend_32 { pt3dadd( 14.3726, -0.516814, -7.75338, 0.74 ) }
    dend_32 { pt3dadd( 14.7538, -0.426684, -8.09025, 0.74 ) }
    dend_32 { pt3dadd( 15.5903, -0.22075, -8.90883, 0.81 ) }
    dend_32 { pt3dadd( 16.4525, -0.00192216, -9.8377, 0.66 ) }
    dend_32 { pt3dadd( 17.4302, 0.226712, -10.9437, 0.52 ) }
    dend_32 { pt3dadd( 18.3099, 0.377733, -11.9725, 0.66 ) }
    dend_32 { pt3dadd( 19.0045, 0.431715, -12.7913, 0.59 ) }
    dend_32 { pt3dadd( 19.731, 0.390483, -13.6941, 0.44 ) }
    dend_32 { pt3dadd( 20.3419, 0.24005, -14.5011, 0.44 ) }
    dend_32 { pt3dadd( 20.6366, 0.116421, -14.9202, 0.44 ) }
    dend_32 { pt3dadd( 21.2694, -0.19907, -15.8726, 0.44 ) }
    dend_32 { pt3dadd( 21.6536, -0.422843, -16.483, 0.15 ) }
    dend_32 { pt3dadd( 22.1706, -0.8011, -17.3893, 0.15 ) }
    dend_32 { pt3dadd( 22.6617, -1.32347, -18.3299, 0.15 ) }
    dend_32 { pt3dadd( 22.9533, -1.72598, -18.9099, 0.15 ) }
    dend_32 { pt3dadd( 28.622, -3.58805, -26.9348, 0.15 ) }
    dend_32 { pt3dadd( 35.1331, -6.40434, -33.9827, 0.15 ) }
    dend_32 { pt3dadd( 41.813, -10.9922, -39.842, 0.15 ) }
    dend_32 { pt3dadd( 48.4499, -15.4148, -45.8746, 0.15 ) }
    dend_32 { pt3dadd( 56.8314, -17.9168, -50.7213, 0.15 ) }
    dend_32 { pt3dadd( 64.6011, -20.0106, -56.6583, 0.15 ) }
    dend_32 { pt3dadd( 73.713, -20.1924, -60.7739, 0.15 ) }
    dend_32 { pt3dadd( 82.702, -20.1652, -65.1555, 0.15 ) }
    dend_32 { pt3dadd( 91.8396, -18.6633, -68.9302, 0.15 ) }
    dend_32 { pt3dadd( 101.323, -17.8019, -71.9842, 0.15 ) }
    dend_32 { pt3dadd( 110.585, -15.5819, -75.0297, 0.15 ) }
    dend_32 { pt3dadd( 119.688, -12.3095, -77.5663, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 78/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.04163, 6.13306, 1.12, 0.88 ) }
    dend_29 { pt3dadd( -3.04163, 6.13306, 1.12, 0.88 ) }
    dend_29 { pt3dadd( -3.29434, 6.82306, 1.2231, 0.88 ) }
    dend_29 { pt3dadd( -3.54469, 7.60883, 1.47028, 0.81 ) }
    dend_29 { pt3dadd( -3.72743, 8.3461, 1.78907, 0.66 ) }
    dend_29 { pt3dadd( -3.82315, 8.86518, 2.06183, 0.66 ) }
    dend_29 { pt3dadd( -3.89735, 9.40549, 2.38918, 0.66 ) }
    dend_29 { pt3dadd( -3.99328, 10.2953, 2.97999, 0.66 ) }
    dend_29 { pt3dadd( -4.10751, 11.1521, 3.56282, 0.66 ) }
    dend_29 { pt3dadd( -4.25749, 11.9259, 4.04748, 0.66 ) }
    dend_29 { pt3dadd( -4.53874, 12.9186, 4.53033, 0.88 ) }
    dend_29 { pt3dadd( -4.96073, 14.1308, 4.903, 0.96 ) }
    dend_29 { pt3dadd( -5.29235, 15.0711, 5.03376, 0.96 ) }
    dend_29 { pt3dadd( -5.79114, 16.5518, 5.00317, 0.74 ) }
    dend_29 { pt3dadd( -6.206, 17.8635, 4.82523, 0.74 ) }
    dend_29 { pt3dadd( -6.75079, 19.5109, 4.49321, 0.81 ) }
    dend_29 { pt3dadd( -7.17778, 20.7998, 4.13852, 0.74 ) }
    dend_29 { pt3dadd( -7.61336, 22.2042, 3.65682, 0.66 ) }
    dend_29 { pt3dadd( -7.89838, 23.371, 3.22353, 0.81 ) }
    dend_29 { pt3dadd( -8.05646, 24.586, 2.76706, 0.96 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 98/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.22163, -2.99694, -2.2, 1.03 ) }
    dend_20 { pt3dadd( -3.47843, -3.30264, -2.2, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( -3.96512, -3.88198, -2.2, 1.03 ) }
    dend_20 { pt3dadd( -4.9726, -5.08127, -2.2, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 2/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.88163, -2.97694, 4.68, 1.4 ) }
    dend_3 { pt3dadd( -8.88163, -2.97694, 4.68, 1.4 ) }
    dend_3 { pt3dadd( -9.93788, -3.4491, 4.50151, 1.4 ) }
    dend_3 { pt3dadd( -11.2536, -3.93782, 4.38906, 1.03 ) }
    dend_3 { pt3dadd( -12.7138, -4.46436, 4.39225, 1.03 ) }
    dend_3 { pt3dadd( -13.8272, -4.89457, 4.46161, 0.96 ) }
    dend_3 { pt3dadd( -14.6339, -5.24781, 4.53524, 0.96 ) }
    dend_3 { pt3dadd( -16.1747, -6.02136, 4.76828, 0.74 ) }
    dend_3 { pt3dadd( -17.3373, -6.69856, 5.00506, 0.96 ) }
    dend_3 { pt3dadd( -18.6024, -7.54095, 5.3485, 1.47 ) }
    dend_3 { pt3dadd( -20.0563, -8.58349, 5.81671, 1.11 ) }
    dend_3 { pt3dadd( -21.7579, -9.9198, 6.40477, 1.18 ) }
    dend_3 { pt3dadd( -23.2259, -11.2231, 6.94014, 1.11 ) }
    dend_3 { pt3dadd( -24.1327, -12.1629, 7.28229, 1.25 ) }
    dend_3 { pt3dadd( -25.1851, -13.3468, 7.63373, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 17/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 7.96837, -3.67694, -2.46, 0.88 ) }
    dend_0 { pt3dadd( 8.34701, -4.78123, -2.13367, 0.88 ) }
    dend_0 { pt3dadd( 8.65329, -5.61121, -1.73627, 1.11 ) }
    dend_0 { pt3dadd( 8.98285, -6.47433, -1.34625, 1.11 ) }
    dend_0 { pt3dadd( 9.40047, -7.55444, -0.974972, 1.03 ) }
    dend_0 { pt3dadd( 9.77382, -8.59793, -0.687487, 0.88 ) }
    dend_0 { pt3dadd( 10.2008, -10.0206, -0.376396, 1.03 ) }
    dend_0 { pt3dadd( 10.5753, -11.6256, -0.14399, 1.03 ) }
    dend_0 { pt3dadd( 10.9233, -13.2179, -0.00654739, 0.74 ) }
    dend_0 { pt3dadd( 11.2775, -14.6725, 0.0664673, 0.88 ) }
    dend_0 { pt3dadd( 11.5418, -15.5637, 0.0474157, 0.88 ) }
    dend_0 { pt3dadd( 12.0669, -17.0025, -0.147999, 0.66 ) }
    dend_0 { pt3dadd( 12.4382, -17.8964, -0.355311, 0.66 ) }
    dend_0 { pt3dadd( 12.8927, -18.9338, -0.65442, 0.66 ) }
    dend_0 { pt3dadd( 13.3915, -19.9965, -0.95596, 0.74 ) }
    dend_0 { pt3dadd( 14.0153, -21.2314, -1.2891, 0.74 ) }
    dend_0 { pt3dadd( 14.4687, -22.083, -1.5452, 0.74 ) }
    dend_0 { pt3dadd( 14.8383, -22.8158, -1.80347, 0.74 ) }
    dend_0 { pt3dadd( 15.084, -23.4445, -2.06265, 0.74 ) }
    dend_0 { pt3dadd( 15.3134, -24.2942, -2.49195, 0.74 ) }
    dend_0 { pt3dadd( 15.4796, -25.2277, -2.99046, 0.74 ) }
    dend_0 { pt3dadd( 15.5515, -25.9711, -3.39762, 0.74 ) }
    dend_0 { pt3dadd( 15.5962, -26.8764, -3.96432, 0.66 ) }
    dend_0 { pt3dadd( 15.6295, -27.7463, -4.58782, 0.74 ) }
    dend_0 { pt3dadd( 15.7054, -29.0403, -5.63569, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 42/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.50719, -0.313107, 0.0, 0.409209 ) }
    axon_0 { pt3dadd( 23.5071, -0.374051, 0.0, 0.409209 ) }
    axon_0 { pt3dadd( 38.5069, -0.434994, 0.0, 0.409209 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 45/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.6457, 7.19841, 10.3109, 1.47 ) }
    dend_37 { pt3dadd( -11.51, 9.12097, 9.59011, 1.47 ) }
    dend_37 { pt3dadd( -11.5262, 10.6433, 8.96027, 1.18 ) }
    dend_37 { pt3dadd( -11.6665, 12.1187, 8.26123, 0.66 ) }
    dend_37 { pt3dadd( -11.8682, 13.4609, 7.58848, 0.66 ) }
    dend_37 { pt3dadd( -11.993, 14.1829, 7.21193, 0.66 ) }
    dend_37 { pt3dadd( -12.1319, 15.0306, 6.79556, 0.74 ) }
    dend_37 { pt3dadd( -12.3023, 16.0088, 6.37482, 0.59 ) }
    dend_37 { pt3dadd( -12.4287, 16.8354, 5.97646, 0.59 ) }
    dend_37 { pt3dadd( -12.4821, 17.3518, 5.69626, 0.74 ) }
    dend_37 { pt3dadd( -12.491, 18.1671, 5.22231, 1.03 ) }
    dend_37 { pt3dadd( -12.4196, 19.188, 4.68181, 0.66 ) }
    dend_37 { pt3dadd( -12.2713, 20.2565, 4.20461, 0.81 ) }
    dend_37 { pt3dadd( -12.042, 21.4415, 3.79143, 0.59 ) }
    dend_37 { pt3dadd( -11.6881, 23.0687, 3.30048, 0.59 ) }
    dend_37 { pt3dadd( -11.4288, 24.3371, 2.86815, 0.81 ) }
    dend_37 { pt3dadd( -11.2196, 25.6544, 2.41365, 0.74 ) }
    dend_37 { pt3dadd( -11.1191, 26.6416, 2.05142, 0.74 ) }
    dend_37 { pt3dadd( -11.0796, 27.8053, 1.64381, 0.96 ) }
    dend_37 { pt3dadd( -11.1264, 29.7246, 0.97702, 0.59 ) }
    dend_37 { pt3dadd( -11.2898, 31.8426, 0.210906, 0.66 ) }
    dend_37 { pt3dadd( -11.5039, 33.1389, -0.348403, 0.59 ) }
    dend_37 { pt3dadd( -11.744, 34.1161, -0.87356, 0.81 ) }
    dend_37 { pt3dadd( -11.9614, 34.8478, -1.33229, 0.59 ) }
    dend_37 { pt3dadd( -12.2954, 35.833, -2.01957, 0.59 ) }
    dend_37 { pt3dadd( -12.5431, 36.5659, -2.55713, 0.59 ) }
    dend_37 { pt3dadd( -12.7828, 37.5065, -3.24238, 0.59 ) }
    dend_37 { pt3dadd( -12.9111, 38.5869, -4.01951, 0.44 ) }
    dend_37 { pt3dadd( -12.8687, 39.8499, -4.79233, 0.59 ) }
    dend_37 { pt3dadd( -12.8131, 40.1981, -4.98059, 0.59 ) }
    dend_37 { pt3dadd( -12.6276, 40.8987, -5.26472, 0.59 ) }
    dend_37 { pt3dadd( -12.3652, 41.7137, -5.43512, 0.52 ) }
    dend_37 { pt3dadd( -12.0521, 42.5526, -5.51905, 0.52 ) }
    dend_37 { pt3dadd( -11.6522, 43.6302, -5.48779, 0.44 ) }
    dend_37 { pt3dadd( -11.3481, 44.5766, -5.34776, 0.44 ) }
    dend_37 { pt3dadd( -11.0931, 45.4474, -5.18788, 0.37 ) }
    dend_37 { pt3dadd( -10.6765, 46.8766, -4.81397, 0.37 ) }
    dend_37 { pt3dadd( -11.8946, 56.5688, -6.95313, 0.37 ) }
    dend_37 { pt3dadd( -12.8709, 66.261, -9.21344, 0.37 ) }
    dend_37 { pt3dadd( -15.3928, 75.8675, -10.3777, 0.37 ) }
    dend_37 { pt3dadd( -15.9499, 85.8459, -10.0306, 0.37 ) }
    dend_37 { pt3dadd( -16.0005, 95.7465, -8.62535, 0.37 ) }
    dend_37 { pt3dadd( -14.6134, 105.336, -6.15219, 0.37 ) }
    dend_37 { pt3dadd( -12.7114, 114.379, -2.33219, 0.37 ) }
    dend_37 { pt3dadd( -10.6918, 122.602, 2.98799, 0.37 ) }
    dend_37 { pt3dadd( -10.3577, 131.591, 7.35739, 0.37 ) }
    dend_37 { pt3dadd( -11.0744, 140.958, 10.7837, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 92/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.6457, 7.19841, 10.3109, 0.81 ) }
    dend_34 { pt3dadd( -12.1679, 7.80609, 13.3716, 0.81 ) }
    dend_34 { pt3dadd( -12.4388, 8.23039, 15.5864, 0.81 ) }
    dend_34 { pt3dadd( -12.5858, 8.55614, 17.4944, 0.81 ) }
    dend_34 { pt3dadd( -12.6582, 8.82756, 19.3559, 0.81 ) }
    dend_34 { pt3dadd( -12.671, 9.07858, 21.4006, 0.81 ) }
    dend_34 { pt3dadd( -12.639, 9.22888, 23.0213, 0.81 ) }
    dend_34 { pt3dadd( -12.4414, 9.42671, 25.8781, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( -12.049, 9.54192, 29.0059, 0.81 ) }
    dend_34 { pt3dadd( -11.6751, 9.57169, 31.2078, 0.81 ) }
    dend_34 { pt3dadd( -11.4654, 9.55078, 32.183, 0.81 ) }
    dend_34 { pt3dadd( -10.9805, 9.41143, 34.166, 0.81 ) }
    dend_34 { pt3dadd( -9.98628, 8.98681, 38.1453, 0.81 ) }
    dend_34 { pt3dadd( -9.76897, 8.84818, 38.9497, 0.81 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 6/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -8.05646, 24.586, 2.76706, 0.52 ) }
    dend_31 { pt3dadd( -7.93776, 25.7891, 1.93095, 0.52 ) }
    dend_31 { pt3dadd( -7.99148, 26.5722, 1.49073, 0.52 ) }
    dend_31 { pt3dadd( -8.05799, 27.4393, 1.17966, 0.52 ) }
    dend_31 { pt3dadd( -8.0985, 28.0949, 1.02385, 0.52 ) }
    dend_31 { pt3dadd( -8.1533, 29.1015, 0.854711, 0.88 ) }
    dend_31 { pt3dadd( -8.28281, 30.6466, 0.710717, 0.52 ) }
    dend_31 { pt3dadd( -8.4498, 31.7741, 0.744246, 0.66 ) }
    dend_31 { pt3dadd( -8.71122, 33.4371, 0.949729, 0.66 ) }
    dend_31 { pt3dadd( -8.82472, 34.3775, 1.15943, 0.96 ) }
    dend_31 { pt3dadd( -8.88486, 35.1561, 1.38568, 0.96 ) }
    dend_31 { pt3dadd( -8.97537, 36.6517, 1.92629, 0.59 ) }
    dend_31 { pt3dadd( -9.0533, 37.4191, 2.25237, 0.66 ) }
    dend_31 { pt3dadd( -9.23903, 38.3356, 2.7113, 0.66 ) }
    dend_31 { pt3dadd( -9.63196, 39.5194, 3.31013, 0.81 ) }
    dend_31 { pt3dadd( -9.88098, 40.1275, 3.63086, 0.81 ) }
    dend_31 { pt3dadd( -10.2367, 40.8673, 4.05067, 0.81 ) }
    dend_31 { pt3dadd( -10.8262, 41.8803, 4.65639, 0.52 ) }
    dend_31 { pt3dadd( -11.3808, 42.6207, 5.16042, 0.52 ) }
    dend_31 { pt3dadd( -11.9312, 43.1819, 5.57884, 0.52 ) }
    dend_31 { pt3dadd( -12.7385, 43.8168, 6.16535, 0.52 ) }
    dend_31 { pt3dadd( -13.4832, 44.3138, 6.75817, 0.52 ) }
    dend_31 { pt3dadd( -14.0288, 44.6166, 7.20927, 0.66 ) }
    dend_31 { pt3dadd( -15.0172, 44.9914, 8.03612, 0.66 ) }
    dend_31 { pt3dadd( -15.6498, 45.143, 8.56664, 0.74 ) }
    dend_31 { pt3dadd( -16.7039, 45.2972, 9.45297, 0.74 ) }
    dend_31 { pt3dadd( -17.8332, 45.4067, 10.4341, 0.74 ) }
    dend_31 { pt3dadd( -18.6673, 45.498, 11.2195, 0.74 ) }
    dend_31 { pt3dadd( -19.5673, 45.6166, 12.1835, 0.37 ) }
    dend_31 { pt3dadd( -20.7237, 45.8094, 13.3712, 0.37 ) }
    dend_31 { pt3dadd( -21.4152, 45.9653, 14.0949, 0.37 ) }
    dend_31 { pt3dadd( -22.2741, 46.241, 14.9492, 0.37 ) }
    dend_31 { pt3dadd( -23.5888, 46.7865, 16.1668, 0.44 ) }
    dend_31 { pt3dadd( -24.7444, 47.3463, 17.243, 0.44 ) }
    dend_31 { pt3dadd( -26.3769, 48.2743, 18.7153, 0.22 ) }
    dend_31 { pt3dadd( -27.7142, 49.1062, 19.7922, 0.22 ) }
    dend_31 { pt3dadd( -28.967, 49.9422, 20.6971, 0.22 ) }
    dend_31 { pt3dadd( -29.9674, 50.6309, 21.2277, 0.22 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 44/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -8.05646, 24.586, 2.76706, 0.44 ) }
    dend_30 { pt3dadd( -9.24804, 24.9263, 1.59163, 0.44 ) }
    dend_30 { pt3dadd( -9.8217, 25.1138, 0.933106, 0.44 ) }
    dend_30 { pt3dadd( -10.3736, 25.3155, 0.267225, 0.44 ) }
    dend_30 { pt3dadd( -11.0185, 25.54, -0.464278, 0.44 ) }
    dend_30 { pt3dadd( -11.4612, 25.7168, -0.919174, 0.52 ) }
    dend_30 { pt3dadd( -12.1296, 26.0142, -1.57445, 0.52 ) }
    dend_30 { pt3dadd( -12.9926, 26.43, -2.32769, 0.52 ) }
    dend_30 { pt3dadd( -13.1757, 26.5268, -2.4864, 0.52 ) }
    dend_30 { pt3dadd( -13.8774, 26.9039, -3.02809, 0.52 ) }
    dend_30 { pt3dadd( -14.8358, 27.391, -3.71679, 0.37 ) }
    dend_30 { pt3dadd( -15.5665, 27.7071, -4.18046, 0.37 ) }
    dend_30 { pt3dadd( -16.1692, 27.9078, -4.51257, 0.44 ) }
    dend_30 { pt3dadd( -16.9116, 28.0723, -4.92084, 0.44 ) }
    dend_30 { pt3dadd( -17.5712, 28.1365, -5.32298, 0.44 ) }
    dend_30 { pt3dadd( -18.2083, 28.1259, -5.76233, 0.44 ) }
    dend_30 { pt3dadd( -18.9922, 28.021, -6.30965, 0.44 ) }
    dend_30 { pt3dadd( -19.9155, 27.8723, -6.95592, 0.74 ) }
    dend_30 { pt3dadd( -20.7036, 27.7469, -7.54289, 0.74 ) }
    dend_30 { pt3dadd( -21.6407, 27.6036, -8.23005, 0.44 ) }
    dend_30 { pt3dadd( -22.2609, 27.5194, -8.69681, 0.44 ) }
    dend_30 { pt3dadd( -22.8612, 27.464, -9.13172, 0.66 ) }
    dend_30 { pt3dadd( -23.6728, 27.4327, -9.68719, 0.22 ) }
    dend_30 { pt3dadd( -24.3922, 27.4635, -10.0871, 0.22 ) }
    dend_30 { pt3dadd( -25.457, 27.5951, -10.4113, 0.37 ) }
    dend_30 { pt3dadd( -25.9906, 27.6842, -10.3423, 0.37 ) }
    dend_30 { pt3dadd( -26.7024, 27.7719, -10.0361, 0.29 ) }
    dend_30 { pt3dadd( -27.4468, 27.8094, -9.58675, 0.29 ) }
    dend_30 { pt3dadd( -28.0518, 27.788, -9.15555, 0.52 ) }
    dend_30 { pt3dadd( -29.4452, 27.6125, -8.07751, 0.22 ) }
    dend_30 { pt3dadd( -31.2995, 27.1308, -6.56905, 0.22 ) }
    dend_30 { pt3dadd( -31.9395, 26.9283, -6.02174, 0.22 ) }
    dend_30 { pt3dadd( -32.4437, 26.7221, -5.58058, 0.22 ) }
    dend_30 { pt3dadd( -33.064, 26.408, -5.04472, 0.22 ) }
    dend_30 { pt3dadd( -33.7639, 25.9663, -4.46678, 0.22 ) }
    dend_30 { pt3dadd( -34.6558, 25.1811, -3.95974, 0.22 ) }
    dend_30 { pt3dadd( -43.8936, 24.4187, -7.71235, 0.22 ) }
    dend_30 { pt3dadd( -53.0801, 22.1837, -10.9702, 0.22 ) }
    dend_30 { pt3dadd( -62.0733, 22.0602, -15.3414, 0.22 ) }
    dend_30 { pt3dadd( -71.5975, 20.8699, -18.1471, 0.22 ) }
    dend_30 { pt3dadd( -81.265, 21.4871, -20.6289, 0.22 ) }
    dend_30 { pt3dadd( -91.0066, 20.5609, -22.6888, 0.22 ) }
    dend_30 { pt3dadd( -100.635, 18.6235, -24.5729, 0.22 ) }
    dend_30 { pt3dadd( -109.924, 17.6843, -28.1545, 0.22 ) }
    dend_30 { pt3dadd( -119.184, 15.2628, -31.0515, 0.22 ) }
    dend_30 { pt3dadd( -127.842, 10.6379, -32.9601, 0.22 ) }
    dend_30 { pt3dadd( -137.46, 8.25636, -34.3074, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 91/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.9726, -5.08127, -2.2, 0.52 ) }
    dend_22 { pt3dadd( -6.17896, -6.25027, -1.6174, 0.52 ) }
    dend_22 { pt3dadd( -7.16868, -7.14324, -1.20127, 0.66 ) }
    dend_22 { pt3dadd( -7.90084, -7.78485, -0.96363, 0.66 ) }
    dend_22 { pt3dadd( -8.97246, -8.75123, -0.613974, 0.66 ) }
    dend_22 { pt3dadd( -10.2977, -9.98818, -0.120177, 0.74 ) }
    dend_22 { pt3dadd( -10.8536, -10.5314, 0.0973992, 0.81 ) }
    dend_22 { pt3dadd( -11.92, -11.5469, 0.507809, 0.74 ) }
    dend_22 { pt3dadd( -13.1273, -12.6309, 0.918108, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_22 { pt3dadd( -14.5072, -13.827, 1.2994, 0.74 ) }
    dend_22 { pt3dadd( -15.7247, -14.8462, 1.54292, 0.74 ) }
    dend_22 { pt3dadd( -16.5933, -15.5472, 1.63618, 0.74 ) }
    dend_22 { pt3dadd( -17.5869, -16.3601, 1.70271, 0.74 ) }
    dend_22 { pt3dadd( -18.5626, -17.1853, 1.75837, 0.74 ) }
    dend_22 { pt3dadd( -19.9303, -18.3563, 1.8047, 1.18 ) }
    dend_22 { pt3dadd( -20.9202, -19.1824, 1.82866, 1.33 ) }
    dend_22 { pt3dadd( -21.8566, -19.9413, 1.86957, 1.33 ) }
    dend_22 { pt3dadd( -22.8819, -20.8265, 2.02405, 1.33 ) }
    dend_22 { pt3dadd( -24.0027, -21.9497, 2.34427, 1.03 ) }
    dend_22 { pt3dadd( -24.9509, -23.0555, 2.78257, 0.74 ) }
    dend_22 { pt3dadd( -25.7053, -24.0733, 3.31933, 0.74 ) }
    dend_22 { pt3dadd( -26.1196, -24.6872, 3.67818, 1.03 ) }
    dend_22 { pt3dadd( -26.8617, -25.8836, 4.31729, 0.96 ) }
    dend_22 { pt3dadd( -27.2237, -26.5127, 4.58878, 1.4 ) }
    dend_22 { pt3dadd( -27.6775, -27.3395, 4.8248, 1.55 ) }
    dend_22 { pt3dadd( -28.679, -29.1273, 5.14328, 0.88 ) }
    dend_22 { pt3dadd( -29.8412, -30.9089, 5.09232, 1.25 ) }
    dend_22 { pt3dadd( -30.9846, -32.3144, 4.75222, 1.25 ) }
    dend_22 { pt3dadd( -31.8368, -33.1795, 4.35359, 1.11 ) }
    dend_22 { pt3dadd( -32.8934, -34.1488, 3.78143, 1.11 ) }
    dend_22 { pt3dadd( -33.7877, -34.8737, 3.20904, 1.55 ) }
    dend_22 { pt3dadd( -35.9544, -36.3597, 1.55013, 1.11 ) }
    dend_22 { pt3dadd( -37.1182, -37.0195, 0.574728, 1.11 ) }
    dend_22 { pt3dadd( -38.0532, -37.4282, -0.139212, 1.4 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 25/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.9726, -5.08127, -2.2, 0.74 ) }
    dend_21 { pt3dadd( -6.70427, -4.57601, -4.78006, 0.74 ) }
    dend_21 { pt3dadd( -7.44294, -4.47422, -5.81636, 0.74 ) }
    dend_21 { pt3dadd( -8.15734, -4.42712, -6.78749, 0.96 ) }
    dend_21 { pt3dadd( -8.98944, -4.42264, -7.86568, 0.81 ) }
    dend_21 { pt3dadd( -9.83425, -4.45818, -8.91693, 0.59 ) }
    dend_21 { pt3dadd( -10.4785, -4.51246, -9.70493, 0.37 ) }
    dend_21 { pt3dadd( -11.5335, -4.72355, -10.7944, 0.66 ) }
    dend_21 { pt3dadd( -12.1417, -4.88143, -11.3811, 0.66 ) }
    dend_21 { pt3dadd( -12.7691, -5.07064, -11.975, 0.59 ) }
    dend_21 { pt3dadd( -13.4161, -5.25919, -12.5898, 0.59 ) }
    dend_21 { pt3dadd( -14.0708, -5.41732, -13.2354, 0.81 ) }
    dend_21 { pt3dadd( -14.7711, -5.52685, -13.9389, 0.81 ) }
    dend_21 { pt3dadd( -15.4112, -5.55089, -14.5476, 0.66 ) }
    dend_21 { pt3dadd( -16.1806, -5.48237, -15.2717, 0.81 ) }
    dend_21 { pt3dadd( -16.9828, -5.29894, -15.9932, 0.88 ) }
    dend_21 { pt3dadd( -17.7867, -5.00717, -16.6505, 0.88 ) }
    dend_21 { pt3dadd( -18.1868, -4.80791, -16.936, 0.88 ) }
    dend_21 { pt3dadd( -19.0841, -4.25978, -17.4254, 0.59 ) }
    dend_21 { pt3dadd( -20.036, -3.57054, -17.8734, 0.44 ) }
    dend_21 { pt3dadd( -20.6357, -3.0776, -18.0172, 0.44 ) }
    dend_21 { pt3dadd( -21.0698, -2.693, -18.0046, 0.44 ) }
    dend_21 { pt3dadd( -21.3364, -2.45276, -17.9257, 0.44 ) }
    dend_21 { pt3dadd( -22.3366, -1.59753, -17.3917, 0.44 ) }
    dend_21 { pt3dadd( -30.5339, -1.93495, -23.1093, 0.44 ) }
    dend_21 { pt3dadd( -38.2225, -0.481231, -29.3361, 0.44 ) }
    dend_21 { pt3dadd( -45.5466, -0.472035, -36.1447, 0.44 ) }
    dend_21 { pt3dadd( -51.5519, -0.648751, -44.1388, 0.44 ) }
    dend_21 { pt3dadd( -57.3038, -2.66367, -52.0669, 0.44 ) }
    dend_21 { pt3dadd( -62.2071, -5.99757, -60.1194, 0.44 ) }
    dend_21 { pt3dadd( -67.3607, -10.2617, -67.553, 0.44 ) }
    dend_21 { pt3dadd( -71.6328, -15.8065, -74.6947, 0.44 ) }
    dend_21 { pt3dadd( -75.2556, -20.8809, -82.5131, 0.44 ) }
    dend_21 { pt3dadd( -78.8378, -26.0223, -90.3063, 0.44 ) }
    dend_21 { pt3dadd( -81.7121, -32.929, -96.9422, 0.44 ) }
    dend_21 { pt3dadd( -83.8769, -40.4537, -103.162, 0.44 ) }
    dend_21 { pt3dadd( -87.5509, -48.6693, -107.522, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 62/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -25.1851, -13.3468, 7.63373, 1.11 ) }
    dend_9 { pt3dadd( -26.537, -14.858, 7.42529, 1.11 ) }
    dend_9 { pt3dadd( -27.7684, -16.1399, 7.26634, 0.96 ) }
    dend_9 { pt3dadd( -28.95, -17.2452, 7.19725, 0.81 ) }
    dend_9 { pt3dadd( -30.3707, -18.4765, 7.28901, 0.81 ) }
    dend_9 { pt3dadd( -31.4325, -19.271, 7.49473, 0.81 ) }
    dend_9 { pt3dadd( -32.3268, -19.8241, 7.7539, 0.81 ) }
    dend_9 { pt3dadd( -33.0453, -20.1372, 8.01891, 0.81 ) }
    dend_9 { pt3dadd( -34.3471, -20.4612, 8.50525, 0.96 ) }
    dend_9 { pt3dadd( -36.0494, -20.587, 9.08644, 0.96 ) }
    dend_9 { pt3dadd( -38.1463, -20.5114, 9.7181, 0.88 ) }
    dend_9 { pt3dadd( -40.0794, -20.3486, 10.1566, 0.74 ) }
    dend_9 { pt3dadd( -41.8172, -20.1667, 10.4325, 1.4 ) }
    dend_9 { pt3dadd( -42.9146, -20.0528, 10.5194, 1.4 ) }
    dend_9 { pt3dadd( -45.1712, -19.7801, 10.5238, 0.88 ) }
    dend_9 { pt3dadd( -46.363, -19.618, 10.4183, 0.96 ) }
    dend_9 { pt3dadd( -47.5991, -19.4634, 10.214, 0.96 ) }
    dend_9 { pt3dadd( -48.8572, -19.3611, 9.97063, 0.74 ) }
    dend_9 { pt3dadd( -50.9835, -19.3692, 9.71213, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 81/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.1851, -13.3468, 7.63373, 1.18 ) }
    dend_4 { pt3dadd( -25.7967, -14.6302, 9.88981, 1.18 ) }
    dend_4 { pt3dadd( -26.1467, -15.3282, 11.1249, 1.03 ) }
    dend_4 { pt3dadd( -26.5457, -16.1317, 12.5776, 1.03 ) }
    dend_4 { pt3dadd( -26.6853, -16.4128, 13.0859, 1.03 ) }
    dend_4 { pt3dadd( -27.2552, -17.5603, 15.1608, 1.03 ) }
    dend_4 { pt3dadd( -27.7381, -18.5327, 16.919, 1.18 ) }
    dend_4 { pt3dadd( -27.8499, -18.7429, 17.3913, 1.18 ) }
    dend_4 { pt3dadd( -28.2173, -19.4114, 18.9758, 1.18 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 15.7054, -29.0403, -5.63569, 0.52 ) }
    dend_2 { pt3dadd( 15.5548, -29.4497, -6.34159, 0.52 ) }
    dend_2 { pt3dadd( 15.3524, -30.2119, -7.59093, 0.66 ) }
    dend_2 { pt3dadd( 15.2284, -31.0154, -8.87152, 0.88 ) }
    dend_2 { pt3dadd( 15.1808, -31.8825, -10.178, 0.74 ) }
    dend_2 { pt3dadd( 15.2075, -32.5848, -11.2114, 0.74 ) }
    dend_2 { pt3dadd( 15.2611, -33.0648, -11.9463, 0.59 ) }
    dend_2 { pt3dadd( 15.4453, -33.7868, -13.1058, 0.74 ) }
    dend_2 { pt3dadd( 15.7382, -34.4894, -14.3336, 0.88 ) }
    dend_2 { pt3dadd( 15.9413, -34.8273, -15.0693, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 16.1384, -35.0462, -15.8659, 0.66 ) }
    dend_2 { pt3dadd( 16.2936, -35.1327, -16.94, 0.66 ) }
    dend_2 { pt3dadd( 16.2927, -35.1141, -17.3673, 0.66 ) }
    dend_2 { pt3dadd( 16.1221, -34.9942, -18.5092, 0.66 ) }
    dend_2 { pt3dadd( 15.8925, -34.9071, -19.4717, 0.66 ) }
    dend_2 { pt3dadd( 15.6127, -34.8948, -20.5422, 0.66 ) }
    dend_2 { pt3dadd( 15.3128, -34.9979, -21.7396, 0.66 ) }
    dend_2 { pt3dadd( 15.1655, -35.1443, -22.5477, 0.52 ) }
    dend_2 { pt3dadd( 15.0756, -35.3349, -23.4697, 0.52 ) }
    dend_2 { pt3dadd( 15.1025, -35.4956, -24.3572, 0.52 ) }
    dend_2 { pt3dadd( 15.3276, -35.7519, -25.904, 0.52 ) }
    dend_2 { pt3dadd( 15.5439, -35.9082, -26.8251, 0.52 ) }
    dend_2 { pt3dadd( 15.807, -36.0528, -27.8027, 0.52 ) }
    dend_2 { pt3dadd( 16.0908, -36.1797, -28.8528, 0.52 ) }
    dend_2 { pt3dadd( 16.649, -36.4133, -31.2207, 0.52 ) }
    dend_2 { pt3dadd( 16.7594, -36.4599, -31.8717, 0.52 ) }
    dend_2 { pt3dadd( 16.8542, -36.5194, -32.6901, 0.37 ) }
    dend_2 { pt3dadd( 15.8434, -36.7824, -32.6303, 0.29 ) }
    dend_2 { pt3dadd( 15.1435, -36.9552, -32.4818, 0.29 ) }
    dend_2 { pt3dadd( 14.0824, -37.1902, -32.1486, 0.29 ) }
    dend_2 { pt3dadd( 12.9383, -37.4118, -31.6911, 0.29 ) }
    dend_2 { pt3dadd( 11.6536, -37.6183, -31.1721, 0.22 ) }
    dend_2 { pt3dadd( 10.2732, -37.787, -30.5882, 0.22 ) }
    dend_2 { pt3dadd( 8.69644, -37.9582, -29.8621, 0.22 ) }
    dend_2 { pt3dadd( 7.91105, -38.0223, -29.4497, 0.22 ) }
    dend_2 { pt3dadd( 7.16649, -38.0767, -28.9795, 0.29 ) }
    dend_2 { pt3dadd( 2.61652, -41.2325, -37.3065, 0.29 ) }
    dend_2 { pt3dadd( -1.21144, -45.3904, -45.5562, 0.29 ) }
    dend_2 { pt3dadd( -4.43081, -49.7158, -53.9781, 0.29 ) }
    dend_2 { pt3dadd( -9.60466, -52.6238, -62.0263, 0.29 ) }
    dend_2 { pt3dadd( -13.4986, -55.1663, -70.8792, 0.29 ) }
    dend_2 { pt3dadd( -17.9005, -56.4177, -79.7706, 0.29 ) }
    dend_2 { pt3dadd( -21.9404, -58.4819, -88.6823, 0.29 ) }
    dend_2 { pt3dadd( -25.3523, -60.6245, -97.8348, 0.29 ) }
    dend_2 { pt3dadd( -29.8585, -63.9911, -106.103, 0.29 ) }
    dend_2 { pt3dadd( -32.9794, -66.119, -115.362, 0.29 ) }
    dend_2 { pt3dadd( -34.9764, -68.6031, -124.84, 0.29 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 37/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.7054, -29.0403, -5.63569, 0.59 ) }
    dend_1 { pt3dadd( 16.1119, -29.8906, -4.78216, 0.59 ) }
    dend_1 { pt3dadd( 16.6271, -31.0864, -3.6132, 0.59 ) }
    dend_1 { pt3dadd( 17.0187, -31.9704, -2.79032, 0.59 ) }
    dend_1 { pt3dadd( 17.4576, -32.8583, -1.93775, 0.74 ) }
    dend_1 { pt3dadd( 17.9631, -33.7764, -1.04414, 0.59 ) }
    dend_1 { pt3dadd( 18.5075, -34.6351, -0.188106, 0.88 ) }
    dend_1 { pt3dadd( 19.1887, -35.5108, 0.719898, 0.66 ) }
    dend_1 { pt3dadd( 19.7138, -35.9708, 1.20151, 0.44 ) }
    dend_1 { pt3dadd( 20.616, -36.45, 1.79354, 0.44 ) }
    dend_1 { pt3dadd( 21.1063, -36.6016, 2.05353, 0.88 ) }
    dend_1 { pt3dadd( 21.9635, -36.8008, 2.44674, 1.33 ) }
    dend_1 { pt3dadd( 22.7541, -36.9898, 2.78363, 1.25 ) }
    dend_1 { pt3dadd( 24.2666, -37.4615, 3.3995, 0.52 ) }
    dend_1 { pt3dadd( 25.4273, -38.0006, 3.8878, 0.59 ) }
    dend_1 { pt3dadd( 26.448, -38.7044, 4.3206, 0.59 ) }
    dend_1 { pt3dadd( 27.1337, -39.3905, 4.67835, 0.59 ) }
    dend_1 { pt3dadd( 27.8135, -40.3432, 5.14235, 0.74 ) }
    dend_1 { pt3dadd( 28.3123, -41.2785, 5.59333, 0.74 ) }
    dend_1 { pt3dadd( 28.5984, -42.009, 5.95465, 0.66 ) }
    dend_1 { pt3dadd( 28.7515, -42.5196, 6.20757, 0.66 ) }
    dend_1 { pt3dadd( 29.0654, -43.6842, 6.85856, 0.52 ) }
    dend_1 { pt3dadd( 29.3771, -44.6784, 7.56098, 0.52 ) }
    dend_1 { pt3dadd( 29.6872, -45.461, 8.29355, 0.88 ) }
    dend_1 { pt3dadd( 30.0188, -46.1008, 9.03935, 0.88 ) }
    dend_1 { pt3dadd( 30.3972, -46.676, 9.81808, 0.52 ) }
    dend_1 { pt3dadd( 30.8369, -47.2735, 10.6833, 0.52 ) }
    dend_1 { pt3dadd( 31.3542, -47.9694, 11.6638, 0.74 ) }
    dend_1 { pt3dadd( 31.8777, -48.6854, 12.6278, 0.81 ) }
    dend_1 { pt3dadd( 32.3716, -49.3483, 13.4683, 1.03 ) }
    dend_1 { pt3dadd( 32.879, -50.0062, 14.2324, 0.81 ) }
    dend_1 { pt3dadd( 33.4451, -50.7242, 14.9698, 0.66 ) }
    dend_1 { pt3dadd( 33.9496, -51.398, 15.5814, 0.59 ) }
    dend_1 { pt3dadd( 34.5293, -52.1724, 16.2708, 0.59 ) }
    dend_1 { pt3dadd( 34.92, -52.6731, 16.7234, 1.33 ) }
    dend_1 { pt3dadd( 35.2518, -53.0639, 17.0885, 1.99 ) }
    dend_1 { pt3dadd( 36.3283, -54.2025, 18.1711, 0.81 ) }
    dend_1 { pt3dadd( 37.3712, -55.185, 19.099, 0.44 ) }
    dend_1 { pt3dadd( 38.2884, -56.038, 19.8564, 0.44 ) }
    dend_1 { pt3dadd( 38.7296, -56.4803, 20.2026, 0.44 ) }
    dend_1 { pt3dadd( 39.2007, -57.0236, 20.5567, 0.74 ) }
    dend_1 { pt3dadd( 39.7593, -57.7501, 20.9147, 1.03 ) }
    dend_1 { pt3dadd( 40.3872, -58.6516, 21.1652, 0.88 ) }
    dend_1 { pt3dadd( 40.9845, -59.5153, 21.2458, 0.29 ) }
    dend_1 { pt3dadd( 41.3031, -59.9528, 21.2495, 0.29 ) }
    dend_1 { pt3dadd( 42.0372, -60.8378, 21.2396, 0.52 ) }
    dend_1 { pt3dadd( 42.5241, -61.3348, 21.2376, 0.52 ) }
    dend_1 { pt3dadd( 43.0108, -61.7717, 21.2176, 0.52 ) }
    dend_1 { pt3dadd( 43.6965, -62.3391, 21.2108, 0.52 ) }
    dend_1 { pt3dadd( 44.5678, -63.0481, 21.2656, 0.81 ) }
    dend_1 { pt3dadd( 45.2637, -63.665, 21.3455, 1.18 ) }
    dend_1 { pt3dadd( 45.8671, -64.2967, 21.4886, 1.18 ) }
    dend_1 { pt3dadd( 47.0582, -65.7921, 21.9415, 1.18 ) }
    dend_1 { pt3dadd( 47.9635, -67.0696, 22.3954, 0.44 ) }
    dend_1 { pt3dadd( 48.5562, -67.9264, 22.7432, 0.88 ) }
    dend_1 { pt3dadd( 49.085, -68.6792, 23.056, 0.66 ) }
    dend_1 { pt3dadd( 49.9956, -69.9834, 23.5824, 0.37 ) }
    dend_1 { pt3dadd( 50.4585, -70.6705, 23.857, 0.37 ) }
    dend_1 { pt3dadd( 51.0037, -71.5342, 24.2197, 0.88 ) }
    dend_1 { pt3dadd( 51.7909, -72.8969, 24.7337, 0.44 ) }
    dend_1 { pt3dadd( 52.3807, -73.966, 25.0939, 1.03 ) }
    dend_1 { pt3dadd( 53.1439, -75.3736, 25.5383, 1.25 ) }
    dend_1 { pt3dadd( 53.8778, -76.7878, 25.8753, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 54.4201, -78.0033, 26.144, 0.52 ) }
    dend_1 { pt3dadd( 54.7182, -78.7856, 26.3105, 0.52 ) }
    dend_1 { pt3dadd( 54.9671, -79.5039, 26.4453, 0.52 ) }
    dend_1 { pt3dadd( 55.1963, -80.1355, 26.5608, 0.44 ) }
    dend_1 { pt3dadd( 55.7112, -81.3488, 26.7705, 0.74 ) }
    dend_1 { pt3dadd( 56.2787, -82.5286, 27.1172, 0.44 ) }
    dend_1 { pt3dadd( 56.7042, -83.3364, 27.4221, 0.59 ) }
    dend_1 { pt3dadd( 57.1492, -84.178, 27.861, 0.44 ) }
    dend_1 { pt3dadd( 57.4508, -84.7636, 28.2327, 0.52 ) }
    dend_1 { pt3dadd( 57.9731, -85.7977, 28.9198, 0.74 ) }
    dend_1 { pt3dadd( 59.1404, -88.0007, 30.483, 0.52 ) }
    dend_1 { pt3dadd( 59.4862, -88.5819, 30.9119, 0.52 ) }
    dend_1 { pt3dadd( 60.12, -89.5604, 31.707, 1.18 ) }
    dend_1 { pt3dadd( 60.361, -89.8893, 31.998, 1.18 ) }
    dend_1 { pt3dadd( 61.1518, -90.8145, 32.8541, 0.59 ) }
    dend_1 { pt3dadd( 61.7421, -91.4292, 33.3964, 0.52 ) }
    dend_1 { pt3dadd( 62.7149, -92.34, 34.139, 1.03 ) }
    dend_1 { pt3dadd( 63.6226, -93.1194, 34.8429, 1.62 ) }
    dend_1 { pt3dadd( 64.7576, -94.0263, 35.6705, 0.81 ) }
    dend_1 { pt3dadd( 65.4862, -94.6134, 36.2352, 1.03 ) }
    dend_1 { pt3dadd( 66.0662, -95.0843, 36.7103, 0.37 ) }
    dend_1 { pt3dadd( 66.5576, -95.4852, 37.0837, 0.22 ) }
    dend_1 { pt3dadd( 67.0929, -95.9234, 37.4545, 0.52 ) }
    dend_1 { pt3dadd( 67.8232, -96.5176, 37.9253, 0.22 ) }
    dend_1 { pt3dadd( 69.0404, -97.4611, 38.5883, 0.74 ) }
    dend_1 { pt3dadd( 70.0927, -98.2039, 39.0675, 0.29 ) }
    dend_1 { pt3dadd( 70.631, -98.5348, 39.2706, 0.29 ) }
    dend_1 { pt3dadd( 71.4958, -98.9994, 39.5245, 0.52 ) }
    dend_1 { pt3dadd( 72.566, -99.5021, 39.6524, 0.74 ) }
    dend_1 { pt3dadd( 73.9463, -100.041, 39.5545, 1.11 ) }
    dend_1 { pt3dadd( 75.047, -100.429, 39.2742, 0.44 ) }
    dend_1 { pt3dadd( 75.8116, -100.698, 39.0228, 0.88 ) }
    dend_1 { pt3dadd( 76.3759, -100.919, 38.8397, 1.11 ) }
    dend_1 { pt3dadd( 78.1438, -101.715, 38.2659, 0.29 ) }
    dend_1 { pt3dadd( 79.2696, -102.319, 37.894, 0.29 ) }
    dend_1 { pt3dadd( 79.8763, -102.711, 37.7313, 0.29 ) }
    dend_1 { pt3dadd( 80.7945, -103.403, 37.5931, 0.29 ) }
    dend_1 { pt3dadd( 81.9663, -104.402, 37.6269, 0.81 ) }
    dend_1 { pt3dadd( 82.6293, -105.019, 37.7979, 0.81 ) }
    dend_1 { pt3dadd( 83.3309, -105.693, 38.1449, 0.81 ) }
    dend_1 { pt3dadd( 84.0055, -106.348, 38.5454, 0.37 ) }
    dend_1 { pt3dadd( 84.9907, -107.297, 39.1536, 0.88 ) }
    dend_1 { pt3dadd( 85.7456, -108.02, 39.6136, 1.62 ) }
    dend_1 { pt3dadd( 86.7545, -108.937, 40.2554, 0.44 ) }
    dend_1 { pt3dadd( 87.6816, -109.756, 40.8977, 0.22 ) }
    dend_1 { pt3dadd( 88.2086, -110.225, 41.2835, 0.22 ) }
    dend_1 { pt3dadd( 88.7152, -110.692, 41.6465, 0.22 ) }
    dend_1 { pt3dadd( 89.3883, -111.353, 42.0805, 0.74 ) }
    dend_1 { pt3dadd( 90.1179, -112.181, 42.5648, 0.15 ) }
    dend_1 { pt3dadd( 90.493, -112.721, 42.8245, 0.59 ) }
    dend_1 { pt3dadd( 90.7765, -113.341, 43.1048, 0.22 ) }
    dend_1 { pt3dadd( 90.8983, -113.796, 43.3178, 0.44 ) }
    dend_1 { pt3dadd( 90.9712, -114.524, 43.6639, 0.81 ) }
    dend_1 { pt3dadd( 90.9192, -116.023, 44.443, 0.44 ) }
    dend_1 { pt3dadd( 90.8149, -116.792, 44.903, 0.59 ) }
    dend_1 { pt3dadd( 90.5167, -118.287, 45.9138, 0.44 ) }
    dend_1 { pt3dadd( 90.3154, -119.073, 46.5063, 0.44 ) }
    dend_1 { pt3dadd( 90.0744, -119.874, 47.1498, 0.74 ) }
    dend_1 { pt3dadd( 89.7342, -120.914, 48.0128, 0.74 ) }
    dend_1 { pt3dadd( 89.3254, -122.124, 49.0566, 0.96 ) }
    dend_1 { pt3dadd( 88.96, -123.307, 50.0754, 0.44 ) }
    dend_1 { pt3dadd( 88.7822, -124.107, 50.742, 0.22 ) }
    dend_1 { pt3dadd( 88.7229, -124.549, 51.1055, 0.44 ) }
    dend_1 { pt3dadd( 88.664, -125.517, 51.9314, 0.15 ) }
    dend_1 { pt3dadd( 88.6643, -126.349, 52.6263, 0.81 ) }
    dend_1 { pt3dadd( 88.7026, -126.898, 53.121, 0.96 ) }
    dend_1 { pt3dadd( 88.8705, -128.328, 54.5456, 0.22 ) }
    dend_1 { pt3dadd( 88.9559, -128.956, 55.233, 0.22 ) }
    dend_1 { pt3dadd( 89.0708, -129.797, 56.2568, 0.22 ) }
    dend_1 { pt3dadd( 89.1154, -130.149, 56.7287, 0.88 ) }
    dend_1 { pt3dadd( 89.2015, -131.04, 58.0429, 0.44 ) }
    dend_1 { pt3dadd( 89.2461, -131.597, 58.9336, 0.52 ) }
    dend_1 { pt3dadd( 89.265, -132.21, 59.923, 0.15 ) }
    dend_1 { pt3dadd( 89.2618, -132.823, 60.8751, 0.15 ) }
    dend_1 { pt3dadd( 89.2396, -133.238, 61.4755, 0.52 ) }
    dend_1 { pt3dadd( 89.1079, -134.666, 63.4347, 0.07 ) }
    dend_1 { pt3dadd( 89.0477, -135.315, 64.2911, 0.07 ) }
    dend_1 { pt3dadd( 88.9813, -135.978, 65.1436, 0.07 ) }
    dend_1 { pt3dadd( 88.9204, -136.446, 65.7136, 0.29 ) }
    dend_1 { pt3dadd( 88.7209, -137.526, 66.9375, 0.07 ) }
    dend_1 { pt3dadd( 88.5075, -138.377, 67.8212, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 81/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 38.5069, -0.434994, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 53.5068, -0.495938, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 68.5067, -0.556882, 0.0, 0.15 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 84/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.76897, 8.84818, 38.9497, 0.59 ) }
    dend_36 { pt3dadd( -9.40876, 9.27584, 40.191, 0.59 ) }
    dend_36 { pt3dadd( -8.9742, 9.84203, 41.8716, 0.59 ) }
    dend_36 { pt3dadd( -8.87615, 9.99781, 42.3605, 0.59 ) }
    dend_36 { pt3dadd( -8.64875, 10.4188, 43.7948, 0.59 ) }
    dend_36 { pt3dadd( -8.29984, 11.0572, 45.8538, 0.59 ) }
    dend_36 { pt3dadd( -7.92927, 11.6918, 47.8078, 0.59 ) }
    dend_36 { pt3dadd( -7.71979, 12.0584, 48.9198, 0.59 ) }
    dend_36 { pt3dadd( -7.30857, 12.8106, 51.0274, 0.59 ) }
    dend_36 { pt3dadd( -6.92086, 13.5414, 52.905, 0.59 ) }
    dend_36 { pt3dadd( -6.57339, 14.264, 54.4615, 0.59 ) }
    dend_36 { pt3dadd( -6.39915, 14.7481, 55.3272, 0.59 ) }
    dend_36 { pt3dadd( -6.28021, 15.2139, 56.0616, 0.59 ) }
    dend_36 { pt3dadd( -6.15654, 16.318, 57.6312, 0.59 ) }
    dend_36 { pt3dadd( -6.16862, 16.8451, 58.3961, 0.59 ) }
    dend_36 { pt3dadd( -6.25987, 17.6985, 59.7961, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( -6.41231, 18.6421, 61.4437, 0.44 ) }
    dend_36 { pt3dadd( -6.50832, 19.2109, 62.4643, 0.44 ) }
    dend_36 { pt3dadd( -6.63123, 20.1041, 64.073, 0.37 ) }
    dend_36 { pt3dadd( -6.70834, 21.3571, 66.3561, 0.52 ) }
    dend_36 { pt3dadd( -6.68572, 22.7227, 68.9377, 0.52 ) }
    dend_36 { pt3dadd( -6.65244, 23.0859, 69.6644, 0.37 ) }
    dend_36 { pt3dadd( -6.57245, 23.6519, 70.8402, 0.37 ) }
    dend_36 { pt3dadd( -6.52155, 24.0352, 71.6588, 0.59 ) }
    dend_36 { pt3dadd( -6.49172, 24.782, 73.3548, 0.59 ) }
    dend_36 { pt3dadd( -6.50867, 24.9403, 73.703, 0.59 ) }
    dend_36 { pt3dadd( -6.76127, 25.8964, 75.9273, 0.37 ) }
    dend_36 { pt3dadd( -7.06519, 26.7296, 78.0241, 0.37 ) }
    dend_36 { pt3dadd( -7.2033, 27.0835, 79.0066, 0.59 ) }
    dend_36 { pt3dadd( -7.43784, 27.8385, 81.4214, 0.59 ) }
    dend_36 { pt3dadd( -7.48104, 28.1611, 82.5848, 0.59 ) }
    dend_36 { pt3dadd( -7.39772, 28.5769, 84.2507, 0.59 ) }
    dend_36 { pt3dadd( -7.16034, 28.8602, 85.5327, 0.59 ) }
    dend_36 { pt3dadd( -6.1285, 29.4444, 88.5735, 0.59 ) }
    dend_36 { pt3dadd( -5.45487, 29.6333, 90.0146, 0.59 ) }
    dend_36 { pt3dadd( -4.92966, 29.6891, 90.9031, 0.59 ) }
    dend_36 { pt3dadd( -4.30497, 29.6764, 91.7985, 0.74 ) }
    dend_36 { pt3dadd( -2.98348, 29.5579, 93.477, 0.88 ) }
    dend_36 { pt3dadd( -1.43264, 29.3488, 95.3843, 0.44 ) }
    dend_36 { pt3dadd( -0.206794, 29.1549, 96.9046, 0.44 ) }
    dend_36 { pt3dadd( 0.632331, 29.0172, 98.0252, 0.44 ) }
    dend_36 { pt3dadd( 1.47742, 28.8424, 99.2439, 0.52 ) }
    dend_36 { pt3dadd( 2.6465, 28.5032, 101.109, 0.52 ) }
    dend_36 { pt3dadd( 3.61924, 28.1722, 102.736, 0.52 ) }
    dend_36 { pt3dadd( 4.43177, 27.8933, 104.181, 0.52 ) }
    dend_36 { pt3dadd( 4.91585, 27.7539, 105.04, 0.52 ) }
    dend_36 { pt3dadd( 5.99916, 27.4593, 107.016, 0.52 ) }
    dend_36 { pt3dadd( 7.00497, 27.1942, 108.846, 0.52 ) }
    dend_36 { pt3dadd( 7.60025, 27.0355, 109.892, 0.52 ) }
    dend_36 { pt3dadd( 7.97381, 26.9488, 110.591, 0.52 ) }
    dend_36 { pt3dadd( 8.99725, 26.7188, 112.523, 0.37 ) }
    dend_36 { pt3dadd( 10.0395, 26.5241, 114.497, 0.37 ) }
    dend_36 { pt3dadd( 10.5376, 26.4647, 115.43, 0.66 ) }
    dend_36 { pt3dadd( 11.7558, 26.3671, 117.711, 0.66 ) }
    dend_36 { pt3dadd( 13.2404, 26.2502, 120.91, 0.66 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 39/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -9.76897, 8.84818, 38.9497, 0.66 ) }
    dend_35 { pt3dadd( -8.49894, 8.92393, 39.8503, 0.66 ) }
    dend_35 { pt3dadd( -7.18008, 9.07497, 40.8404, 0.66 ) }
    dend_35 { pt3dadd( -6.07333, 9.25178, 41.7168, 0.81 ) }
    dend_35 { pt3dadd( -4.24306, 9.6013, 43.227, 0.66 ) }
    dend_35 { pt3dadd( -2.74296, 9.91573, 44.4908, 0.66 ) }
    dend_35 { pt3dadd( -2.24016, 10.0201, 44.9114, 0.66 ) }
    dend_35 { pt3dadd( -1.40719, 10.2383, 45.6378, 0.66 ) }
    dend_35 { pt3dadd( -0.79776, 10.4187, 46.1756, 0.66 ) }
    dend_35 { pt3dadd( -0.331522, 10.5421, 46.5562, 0.66 ) }
    dend_35 { pt3dadd( 0.31692, 10.6913, 46.9953, 0.66 ) }
    dend_35 { pt3dadd( 1.28258, 10.8564, 47.5691, 0.66 ) }
    dend_35 { pt3dadd( 2.44514, 11.0004, 48.1964, 0.88 ) }
    dend_35 { pt3dadd( 3.62201, 11.1183, 48.8011, 1.03 ) }
    dend_35 { pt3dadd( 5.12823, 11.2865, 49.5684, 0.74 ) }
    dend_35 { pt3dadd( 5.8925, 11.3958, 49.9881, 0.74 ) }
    dend_35 { pt3dadd( 6.91729, 11.5948, 50.6355, 0.74 ) }
    dend_35 { pt3dadd( 7.6277, 11.8202, 51.2446, 1.03 ) }
    dend_35 { pt3dadd( 8.3439, 12.1483, 52.1676, 1.03 ) }
    dend_35 { pt3dadd( 8.81596, 12.4416, 53.0372, 1.03 ) }
    dend_35 { pt3dadd( 9.23989, 12.8093, 54.092, 1.03 ) }
    dend_35 { pt3dadd( 9.68994, 13.2835, 55.5179, 0.81 ) }
    dend_35 { pt3dadd( 10.3383, 14.0559, 58.0022, 0.59 ) }
    dend_35 { pt3dadd( 11.0183, 14.8612, 60.8806, 0.59 ) }
    dend_35 { pt3dadd( 11.4946, 15.395, 63.0814, 0.59 ) }
    dend_35 { pt3dadd( 11.7917, 15.7024, 64.5356, 0.74 ) }
    dend_35 { pt3dadd( 12.3642, 16.2048, 67.162, 0.74 ) }
    dend_35 { pt3dadd( 12.7487, 16.4476, 68.6605, 0.74 ) }
    dend_35 { pt3dadd( 13.3066, 16.6339, 70.2117, 0.59 ) }
    dend_35 { pt3dadd( 14.5038, 16.8172, 72.2955, 0.59 ) }
    dend_35 { pt3dadd( 14.9616, 16.8303, 72.7572, 0.59 ) }
    dend_35 { pt3dadd( 16.0636, 16.8079, 73.4492, 0.66 ) }
    dend_35 { pt3dadd( 17.5351, 16.7968, 74.0581, 1.4 ) }
    dend_35 { pt3dadd( 18.9457, 16.826, 74.4784, 0.66 ) }
    dend_35 { pt3dadd( 20.8483, 16.9641, 74.9011, 1.18 ) }
    dend_35 { pt3dadd( 22.9964, 17.2157, 75.29, 0.44 ) }
    dend_35 { pt3dadd( 23.8856, 17.3443, 75.4727, 0.44 ) }
    dend_35 { pt3dadd( 25.168, 17.5386, 75.7963, 0.44 ) }
    dend_35 { pt3dadd( 27.0977, 17.8816, 76.3019, 0.22 ) }
    dend_35 { pt3dadd( 28.2735, 18.1159, 76.6768, 0.22 ) }
    dend_35 { pt3dadd( 30.0901, 18.4837, 77.2799, 0.22 ) }
    dend_35 { pt3dadd( 31.396, 18.7655, 77.7091, 0.22 ) }
    dend_35 { pt3dadd( 33.1895, 19.1569, 78.2491, 0.22 ) }
    dend_35 { pt3dadd( 34.6399, 19.4784, 78.6018, 0.44 ) }
    dend_35 { pt3dadd( 37.6545, 20.2136, 79.1098, 0.44 ) }
    dend_35 { pt3dadd( 39.1723, 20.6373, 79.1671, 0.44 ) }
    dend_35 { pt3dadd( 40.2713, 21.0244, 78.9882, 0.59 ) }
    dend_35 { pt3dadd( 41.8674, 21.6668, 78.5211, 0.44 ) }
    dend_35 { pt3dadd( 43.245, 22.2972, 77.8552, 0.52 ) }
    dend_35 { pt3dadd( 44.7352, 23.0256, 76.7938, 0.37 ) }
    dend_35 { pt3dadd( 45.9349, 23.6569, 75.5716, 0.37 ) }
    dend_35 { pt3dadd( 46.6842, 24.112, 74.6328, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_22 (entry count 91/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -38.0532, -37.4282, -0.139212, 0.66 ) }
    dend_28 { pt3dadd( -37.3307, -38.6375, -1.58877, 0.66 ) }
    dend_28 { pt3dadd( -36.9573, -39.333, -2.45333, 0.44 ) }
    dend_28 { pt3dadd( -36.549, -40.2752, -3.68301, 0.66 ) }
    dend_28 { pt3dadd( -36.2493, -41.1744, -4.82082, 0.15 ) }
    dend_28 { pt3dadd( -36.0633, -41.9439, -5.801, 0.15 ) }
    dend_28 { pt3dadd( -35.9814, -42.3236, -6.31362, 0.59 ) }
    dend_28 { pt3dadd( -35.84, -43.093, -7.34078, 0.81 ) }
    dend_28 { pt3dadd( -35.7251, -43.871, -8.43625, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( -35.6545, -44.3845, -9.12903, 0.59 ) }
    dend_28 { pt3dadd( -35.5146, -45.3951, -10.4053, 0.37 ) }
    dend_28 { pt3dadd( -35.4093, -46.3015, -11.4524, 0.37 ) }
    dend_28 { pt3dadd( -35.3351, -47.0901, -12.2538, 0.29 ) }
    dend_28 { pt3dadd( -35.2936, -47.7139, -12.8786, 0.29 ) }
    dend_28 { pt3dadd( -35.2757, -48.3424, -13.6077, 0.66 ) }
    dend_28 { pt3dadd( -35.2673, -48.9726, -14.389, 0.81 ) }
    dend_28 { pt3dadd( -35.3016, -49.9087, -15.533, 0.52 ) }
    dend_28 { pt3dadd( -35.3817, -50.6238, -16.4174, 0.37 ) }
    dend_28 { pt3dadd( -35.6846, -52.2748, -18.6513, 0.29 ) }
    dend_28 { pt3dadd( -35.9591, -53.5905, -20.6167, 0.29 ) }
    dend_28 { pt3dadd( -36.0714, -54.1202, -21.5509, 0.29 ) }
    dend_28 { pt3dadd( -33.6018, -60.7365, -28.6308, 0.29 ) }
    dend_28 { pt3dadd( -31.8437, -67.1955, -36.0599, 0.29 ) }
    dend_28 { pt3dadd( -28.2968, -74.3203, -42.1143, 0.29 ) }
    dend_28 { pt3dadd( -23.6093, -81.9607, -46.5473, 0.29 ) }
    dend_28 { pt3dadd( -19.6295, -90.5109, -49.8723, 0.29 ) }
    dend_28 { pt3dadd( -16.7738, -99.1735, -53.9715, 0.29 ) }
    dend_28 { pt3dadd( -14.888, -108.493, -57.0703, 0.29 ) }
    dend_28 { pt3dadd( -14.766, -118.086, -59.8918, 0.29 ) }
    dend_28 { pt3dadd( -15.9367, -127.835, -61.7821, 0.29 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -38.0532, -37.4282, -0.139212, 1.03 ) }
    dend_23 { pt3dadd( -38.7025, -38.7402, 0.393959, 1.03 ) }
    dend_23 { pt3dadd( -39.4359, -40.0978, 0.858094, 1.03 ) }
    dend_23 { pt3dadd( -39.835, -40.7251, 1.03739, 1.03 ) }
    dend_23 { pt3dadd( -40.5886, -41.8189, 1.29252, 1.03 ) }
    dend_23 { pt3dadd( -41.7602, -43.4222, 1.59878, 1.11 ) }
    dend_23 { pt3dadd( -42.7093, -44.6929, 1.76387, 0.88 ) }
    dend_23 { pt3dadd( -43.59, -45.8589, 1.76685, 0.59 ) }
    dend_23 { pt3dadd( -44.6089, -47.1988, 1.62777, 0.66 ) }
    dend_23 { pt3dadd( -45.2237, -48.0128, 1.48203, 0.66 ) }
    dend_23 { pt3dadd( -45.9031, -48.923, 1.26637, 0.81 ) }
    dend_23 { pt3dadd( -46.8302, -50.1443, 0.896009, 0.66 ) }
    dend_23 { pt3dadd( -47.5597, -51.1734, 0.541115, 0.66 ) }
    dend_23 { pt3dadd( -47.9215, -51.8056, 0.323714, 1.03 ) }
    dend_23 { pt3dadd( -48.287, -52.5312, 0.0828243, 1.25 ) }
    dend_23 { pt3dadd( -48.8428, -53.5563, -0.247848, 0.81 ) }
    dend_23 { pt3dadd( -49.3693, -54.4038, -0.517795, 0.81 ) }
    dend_23 { pt3dadd( -49.7818, -54.9174, -0.66721, 0.81 ) }
    dend_23 { pt3dadd( -50.5172, -55.6366, -0.913361, 1.25 ) }
    dend_23 { pt3dadd( -51.6353, -56.6586, -1.29381, 0.52 ) }
    dend_23 { pt3dadd( -52.4367, -57.4088, -1.56886, 0.74 ) }
    dend_23 { pt3dadd( -53.0023, -57.9421, -1.74549, 0.74 ) }
    dend_23 { pt3dadd( -53.7836, -58.6465, -1.94148, 0.74 ) }
    dend_23 { pt3dadd( -55.0205, -59.7237, -2.15039, 0.74 ) }
    dend_23 { pt3dadd( -55.9533, -60.6213, -2.1942, 0.81 ) }
    dend_23 { pt3dadd( -56.7765, -61.5714, -2.1485, 0.81 ) }
    dend_23 { pt3dadd( -57.4724, -62.4543, -2.0443, 0.81 ) }
    dend_23 { pt3dadd( -58.206, -63.4435, -1.93198, 0.66 ) }
    dend_23 { pt3dadd( -59.1399, -64.8037, -1.80408, 1.25 ) }
    dend_23 { pt3dadd( -60.1586, -66.3835, -1.66332, 0.52 ) }
    dend_23 { pt3dadd( -60.626, -67.1978, -1.68649, 0.52 ) }
    dend_23 { pt3dadd( -61.185, -68.3568, -1.90278, 0.59 ) }
    dend_23 { pt3dadd( -61.8317, -69.8595, -2.35514, 0.81 ) }
    dend_23 { pt3dadd( -62.3556, -71.1928, -2.87733, 1.33 ) }
    dend_23 { pt3dadd( -62.6763, -72.0176, -3.27866, 1.55 ) }
    dend_23 { pt3dadd( -63.3945, -73.6797, -4.18821, 0.66 ) }
    dend_23 { pt3dadd( -64.0724, -75.0092, -4.85284, 0.66 ) }
    dend_23 { pt3dadd( -64.704, -76.0791, -5.34739, 0.59 ) }
    dend_23 { pt3dadd( -65.1426, -76.6957, -5.59059, 0.59 ) }
    dend_23 { pt3dadd( -65.7785, -77.5262, -5.90344, 1.11 ) }
    dend_23 { pt3dadd( -66.5444, -78.5298, -6.30643, 1.11 ) }
    dend_23 { pt3dadd( -67.5889, -79.9969, -6.86284, 0.44 ) }
    dend_23 { pt3dadd( -68.445, -81.4148, -7.43518, 0.59 ) }
    dend_23 { pt3dadd( -68.947, -82.4599, -7.92429, 1.11 ) }
    dend_23 { pt3dadd( -69.4221, -83.7349, -8.58897, 1.25 ) }
    dend_23 { pt3dadd( -69.7437, -84.9638, -9.28042, 0.81 ) }
    dend_23 { pt3dadd( -69.8589, -85.9445, -9.81715, 0.59 ) }
    dend_23 { pt3dadd( -69.8504, -86.7813, -10.2375, 0.81 ) }
    dend_23 { pt3dadd( -69.8036, -87.8814, -10.7037, 0.74 ) }
    dend_23 { pt3dadd( -69.8209, -88.6678, -10.9856, 1.18 ) }
    dend_23 { pt3dadd( -69.9864, -89.7942, -11.3036, 1.7 ) }
    dend_23 { pt3dadd( -70.5271, -91.6114, -11.6146, 0.74 ) }
    dend_23 { pt3dadd( -71.094, -92.778, -11.7279, 0.74 ) }
    dend_23 { pt3dadd( -71.6931, -93.6056, -11.7709, 0.74 ) }
    dend_23 { pt3dadd( -72.9637, -94.8664, -11.7947, 0.44 ) }
    dend_23 { pt3dadd( -73.8046, -95.4728, -11.8186, 0.44 ) }
    dend_23 { pt3dadd( -74.8923, -96.0076, -11.8573, 0.52 ) }
    dend_23 { pt3dadd( -75.7042, -96.2734, -11.8893, 0.52 ) }
    dend_23 { pt3dadd( -77.0542, -96.6107, -11.9402, 0.52 ) }
    dend_23 { pt3dadd( -77.934, -96.8235, -11.9985, 0.44 ) }
    dend_23 { pt3dadd( -78.6126, -97.0193, -12.0711, 0.44 ) }
    dend_23 { pt3dadd( -79.0946, -97.198, -12.1187, 0.44 ) }
    dend_23 { pt3dadd( -79.8893, -97.585, -12.1671, 0.74 ) }
    dend_23 { pt3dadd( -80.5272, -98.0073, -12.1434, 0.74 ) }
    dend_23 { pt3dadd( -81.4783, -98.7329, -12.0125, 0.37 ) }
    dend_23 { pt3dadd( -82.2158, -99.3125, -11.8439, 0.22 ) }
    dend_23 { pt3dadd( -82.9194, -99.8697, -11.6276, 0.22 ) }
    dend_23 { pt3dadd( -83.4701, -100.331, -11.4268, 0.37 ) }
    dend_23 { pt3dadd( -84.0987, -100.929, -11.1613, 0.37 ) }
    dend_23 { pt3dadd( -84.6079, -101.508, -10.9677, 0.37 ) }
    dend_23 { pt3dadd( -85.1744, -102.233, -10.8702, 0.37 ) }
    dend_23 { pt3dadd( -85.4594, -102.613, -10.8889, 0.37 ) }
    dend_23 { pt3dadd( -86.0727, -103.439, -11.0457, 0.44 ) }
    dend_23 { pt3dadd( -86.7722, -104.452, -11.3264, 0.59 ) }
    dend_23 { pt3dadd( -87.4088, -105.434, -11.6612, 0.88 ) }
    dend_23 { pt3dadd( -88.0676, -106.46, -12.0512, 1.25 ) }
    dend_23 { pt3dadd( -88.5656, -107.19, -12.3584, 1.4 ) }
    dend_23 { pt3dadd( -89.7674, -108.767, -13.0669, 0.29 ) }
    dend_23 { pt3dadd( -90.5024, -109.613, -13.4881, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( -90.8867, -110.015, -13.6975, 0.44 ) }
    dend_23 { pt3dadd( -91.4189, -110.519, -13.9643, 0.88 ) }
    dend_23 { pt3dadd( -91.9715, -111.001, -14.2285, 1.4 ) }
    dend_23 { pt3dadd( -93.3602, -112.118, -14.9073, 0.37 ) }
    dend_23 { pt3dadd( -93.9872, -112.555, -15.1582, 0.37 ) }
    dend_23 { pt3dadd( -94.2958, -112.755, -15.2494, 0.37 ) }
    dend_23 { pt3dadd( -95.2882, -113.42, -15.5072, 0.81 ) }
    dend_23 { pt3dadd( -95.989, -113.946, -15.6766, 0.22 ) }
    dend_23 { pt3dadd( -96.6048, -114.522, -15.7957, 0.44 ) }
    dend_23 { pt3dadd( -97.4853, -115.637, -15.8878, 0.22 ) }
    dend_23 { pt3dadd( -97.8007, -116.141, -15.9206, 0.22 ) }
    dend_23 { pt3dadd( -98.1879, -116.879, -15.9805, 0.29 ) }
    dend_23 { pt3dadd( -98.4886, -117.537, -16.0386, 0.29 ) }
    dend_23 { pt3dadd( -98.834, -118.269, -16.1205, 0.29 ) }
    dend_23 { pt3dadd( -99.3619, -119.336, -16.3339, 0.37 ) }
    dend_23 { pt3dadd( -99.6238, -119.835, -16.4673, 0.37 ) }
    dend_23 { pt3dadd( -99.9268, -120.368, -16.6116, 0.88 ) }
    dend_23 { pt3dadd( -100.282, -120.995, -16.7635, 1.4 ) }
    dend_23 { pt3dadd( -101.011, -122.299, -17.084, 0.44 ) }
    dend_23 { pt3dadd( -101.588, -123.357, -17.3367, 0.44 ) }
    dend_23 { pt3dadd( -101.874, -123.937, -17.4575, 0.88 ) }
    dend_23 { pt3dadd( -102.247, -124.75, -17.6088, 1.4 ) }
    dend_23 { pt3dadd( -102.662, -125.772, -17.7761, 0.37 ) }
    dend_23 { pt3dadd( -102.963, -126.613, -17.8626, 0.37 ) }
    dend_23 { pt3dadd( -103.217, -127.326, -17.9396, 0.37 ) }
    dend_23 { pt3dadd( -103.654, -128.471, -18.083, 1.33 ) }
    dend_23 { pt3dadd( -103.892, -129.022, -18.1857, 1.33 ) }
    dend_23 { pt3dadd( -104.431, -130.117, -18.504, 0.29 ) }
    dend_23 { pt3dadd( -104.921, -131.041, -18.9292, 0.52 ) }
    dend_23 { pt3dadd( -105.549, -132.291, -19.771, 0.22 ) }
    dend_23 { pt3dadd( -105.866, -132.924, -20.362, 0.22 ) }
    dend_23 { pt3dadd( -106.087, -133.335, -20.8605, 0.37 ) }
    dend_23 { pt3dadd( -106.435, -133.924, -21.7128, 0.81 ) }
    dend_23 { pt3dadd( -106.759, -134.407, -22.5824, 0.81 ) }
    dend_23 { pt3dadd( -107.071, -134.884, -23.572, 0.37 ) }
    dend_23 { pt3dadd( -107.239, -135.259, -24.2998, 0.37 ) }
    dend_23 { pt3dadd( -107.265, -135.359, -24.4833, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 37/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -50.9835, -19.3692, 9.71213, 0.44 ) }
    dend_19 { pt3dadd( -51.7091, -20.9775, 9.45937, 0.44 ) }
    dend_19 { pt3dadd( -52.44, -22.2479, 9.18242, 0.66 ) }
    dend_19 { pt3dadd( -53.2008, -23.3722, 8.90414, 0.96 ) }
    dend_19 { pt3dadd( -53.9752, -24.4848, 8.57649, 0.96 ) }
    dend_19 { pt3dadd( -54.8795, -25.806, 8.13138, 0.59 ) }
    dend_19 { pt3dadd( -55.6812, -26.9623, 7.69622, 0.74 ) }
    dend_19 { pt3dadd( -56.5047, -28.0525, 7.21476, 1.03 ) }
    dend_19 { pt3dadd( -57.1509, -28.8472, 6.80753, 1.11 ) }
    dend_19 { pt3dadd( -58.253, -30.1719, 5.99711, 0.44 ) }
    dend_19 { pt3dadd( -58.8595, -30.9335, 5.44735, 0.66 ) }
    dend_19 { pt3dadd( -59.2722, -31.5488, 4.90519, 0.66 ) }
    dend_19 { pt3dadd( -59.463, -31.9922, 4.48581, 0.66 ) }
    dend_19 { pt3dadd( -59.5624, -32.631, 3.77603, 0.66 ) }
    dend_19 { pt3dadd( -59.4982, -33.0082, 3.27578, 0.66 ) }
    dend_19 { pt3dadd( -59.1162, -33.7663, 2.12941, 0.66 ) }
    dend_19 { pt3dadd( -58.6913, -34.3447, 1.25193, 0.66 ) }
    dend_19 { pt3dadd( -58.0912, -35.0443, 0.221679, 0.88 ) }
    dend_19 { pt3dadd( -57.5687, -35.6484, -0.651912, 0.44 ) }
    dend_19 { pt3dadd( -56.9638, -36.4428, -1.74475, 0.44 ) }
    dend_19 { pt3dadd( -56.511, -37.2309, -2.7161, 0.52 ) }
    dend_19 { pt3dadd( -56.2169, -38.1103, -3.58408, 0.22 ) }
    dend_19 { pt3dadd( -56.1571, -38.6702, -4.03762, 0.52 ) }
    dend_19 { pt3dadd( -56.2268, -39.6069, -4.71486, 0.66 ) }
    dend_19 { pt3dadd( -56.4782, -40.7898, -5.50622, 1.11 ) }
    dend_19 { pt3dadd( -56.8896, -41.9855, -6.26704, 0.88 ) }
    dend_19 { pt3dadd( -57.3775, -43.0437, -6.92923, 0.59 ) }
    dend_19 { pt3dadd( -58.0644, -44.2752, -7.68926, 0.37 ) }
    dend_19 { pt3dadd( -58.414, -44.8548, -8.04849, 0.37 ) }
    dend_19 { pt3dadd( -58.7603, -45.4247, -8.3948, 0.37 ) }
    dend_19 { pt3dadd( -58.9977, -45.829, -8.65784, 0.37 ) }
    dend_19 { pt3dadd( -59.4368, -46.5728, -9.22471, 0.37 ) }
    dend_19 { pt3dadd( -59.7027, -47.0537, -9.62729, 0.52 ) }
    dend_19 { pt3dadd( -60.1539, -47.9913, -10.4351, 0.29 ) }
    dend_19 { pt3dadd( -60.3675, -48.4744, -10.8715, 0.66 ) }
    dend_19 { pt3dadd( -60.8392, -49.5868, -11.9605, 0.22 ) }
    dend_19 { pt3dadd( -61.1727, -50.3822, -12.8286, 0.81 ) }
    dend_19 { pt3dadd( -61.4712, -51.0967, -13.6726, 1.03 ) }
    dend_19 { pt3dadd( -61.7917, -51.8312, -14.6202, 1.03 ) }
    dend_19 { pt3dadd( -62.2247, -52.7381, -15.9147, 0.37 ) }
    dend_19 { pt3dadd( -62.5022, -53.277, -16.7692, 0.37 ) }
    dend_19 { pt3dadd( -62.7742, -53.808, -17.6208, 0.37 ) }
    dend_19 { pt3dadd( -62.8609, -54.0051, -17.9348, 0.37 ) }
    dend_19 { pt3dadd( -63.0534, -54.5416, -18.8026, 0.74 ) }
    dend_19 { pt3dadd( -63.1999, -55.2194, -19.9801, 0.74 ) }
    dend_19 { pt3dadd( -63.2385, -55.7611, -21.0562, 0.74 ) }
    dend_19 { pt3dadd( -63.2606, -56.1584, -22.0329, 0.52 ) }
    dend_19 { pt3dadd( -63.3054, -56.48, -22.9192, 0.52 ) }
    dend_19 { pt3dadd( -63.3523, -56.6027, -23.3199, 0.52 ) }
    dend_19 { pt3dadd( -63.5077, -56.7781, -24.1165, 0.52 ) }
    dend_19 { pt3dadd( -63.8421, -56.9353, -25.3169, 0.52 ) }
    dend_19 { pt3dadd( -64.2379, -56.972, -26.4613, 0.52 ) }
    dend_19 { pt3dadd( -64.5556, -56.9223, -27.4073, 0.37 ) }
    dend_19 { pt3dadd( -64.8376, -56.8493, -28.3058, 0.37 ) }
    dend_19 { pt3dadd( -65.2183, -56.7605, -29.5098, 0.37 ) }
    dend_19 { pt3dadd( -65.4614, -56.7028, -30.3314, 0.37 ) }
    dend_19 { pt3dadd( -65.6537, -56.604, -31.1624, 0.37 ) }
    dend_19 { pt3dadd( -65.9397, -56.2529, -32.9365, 0.37 ) }
    dend_19 { pt3dadd( -66.0252, -56.0005, -33.8712, 0.37 ) }
    dend_19 { pt3dadd( -69.3294, -61.7391, -41.3645, 0.37 ) }
    dend_19 { pt3dadd( -71.6877, -66.7673, -49.6805, 0.37 ) }
    dend_19 { pt3dadd( -74.982, -70.9239, -58.1581, 0.37 ) }
    dend_19 { pt3dadd( -79.3624, -74.2664, -66.5032, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( -82.8469, -78.7197, -74.7511, 0.37 ) }
    dend_19 { pt3dadd( -84.8446, -83.4255, -83.3455, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 2/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -50.9835, -19.3692, 9.71213, 0.81 ) }
    dend_10 { pt3dadd( -51.9339, -19.8473, 9.70975, 0.81 ) }
    dend_10 { pt3dadd( -52.8646, -20.34, 9.72872, 0.81 ) }
    dend_10 { pt3dadd( -53.9051, -20.8458, 9.8208, 0.66 ) }
    dend_10 { pt3dadd( -55.644, -21.5565, 10.1184, 0.44 ) }
    dend_10 { pt3dadd( -57.0351, -22.0268, 10.3751, 0.52 ) }
    dend_10 { pt3dadd( -57.9315, -22.2817, 10.54, 0.52 ) }
    dend_10 { pt3dadd( -58.9323, -22.5295, 10.755, 0.59 ) }
    dend_10 { pt3dadd( -60.2834, -22.7921, 11.0846, 0.52 ) }
    dend_10 { pt3dadd( -62.0111, -23.0122, 11.5338, 0.52 ) }
    dend_10 { pt3dadd( -63.1133, -23.0642, 11.8295, 0.96 ) }
    dend_10 { pt3dadd( -64.1807, -23.0193, 12.0914, 1.03 ) }
    dend_10 { pt3dadd( -65.2437, -22.8793, 12.3657, 1.03 ) }
    dend_10 { pt3dadd( -66.2435, -22.6313, 12.6555, 0.52 ) }
    dend_10 { pt3dadd( -67.0345, -22.3067, 12.9394, 0.52 ) }
    dend_10 { pt3dadd( -67.5004, -22.0189, 13.1384, 0.52 ) }
    dend_10 { pt3dadd( -68.3775, -21.3469, 13.6769, 0.74 ) }
    dend_10 { pt3dadd( -68.9204, -20.9042, 14.1031, 0.74 ) }
    dend_10 { pt3dadd( -69.7965, -20.2623, 14.9179, 0.37 ) }
    dend_10 { pt3dadd( -70.5958, -19.8032, 15.6377, 0.37 ) }
    dend_10 { pt3dadd( -71.449, -19.5219, 16.3036, 0.74 ) }
    dend_10 { pt3dadd( -72.6769, -19.3857, 17.0982, 1.11 ) }
    dend_10 { pt3dadd( -73.9199, -19.4215, 17.7257, 1.11 ) }
    dend_10 { pt3dadd( -75.164, -19.6019, 18.24, 0.59 ) }
    dend_10 { pt3dadd( -76.505, -19.9472, 18.6795, 0.74 ) }
    dend_10 { pt3dadd( -77.3856, -20.2647, 18.909, 0.96 ) }
    dend_10 { pt3dadd( -78.3266, -20.6816, 19.1534, 1.03 ) }
    dend_10 { pt3dadd( -79.3687, -21.2071, 19.3403, 0.66 ) }
    dend_10 { pt3dadd( -80.3753, -21.7307, 19.4979, 0.59 ) }
    dend_10 { pt3dadd( -81.1126, -22.11, 19.6448, 0.59 ) }
    dend_10 { pt3dadd( -82.085, -22.603, 19.939, 0.52 ) }
    dend_10 { pt3dadd( -83.0831, -23.0701, 20.2599, 0.52 ) }
    dend_10 { pt3dadd( -83.6544, -23.3216, 20.4741, 0.52 ) }
    dend_10 { pt3dadd( -84.4163, -23.6379, 20.8838, 0.44 ) }
    dend_10 { pt3dadd( -85.0728, -23.8764, 21.3069, 0.44 ) }
    dend_10 { pt3dadd( -85.4932, -24.0275, 21.6206, 1.11 ) }
    dend_10 { pt3dadd( -86.1081, -24.2307, 22.1297, 1.25 ) }
    dend_10 { pt3dadd( -87.2, -24.571, 23.0375, 0.81 ) }
    dend_10 { pt3dadd( -88.4266, -24.894, 24.0334, 0.66 ) }
    dend_10 { pt3dadd( -89.016, -25.0136, 24.4719, 0.96 ) }
    dend_10 { pt3dadd( -89.8297, -25.1168, 25.0176, 1.33 ) }
    dend_10 { pt3dadd( -91.1979, -25.2004, 25.8182, 0.59 ) }
    dend_10 { pt3dadd( -92.1614, -25.2204, 26.2602, 0.74 ) }
    dend_10 { pt3dadd( -93.2219, -25.2028, 26.581, 0.52 ) }
    dend_10 { pt3dadd( -94.201, -25.1842, 26.764, 0.52 ) }
    dend_10 { pt3dadd( -95.0683, -25.179, 26.8946, 0.66 ) }
    dend_10 { pt3dadd( -96.2063, -25.1822, 27.056, 1.4 ) }
    dend_10 { pt3dadd( -97.4492, -25.1966, 27.2585, 0.59 ) }
    dend_10 { pt3dadd( -98.4492, -25.2193, 27.5169, 0.44 ) }
    dend_10 { pt3dadd( -99.2328, -25.237, 27.7734, 0.44 ) }
    dend_10 { pt3dadd( -100.177, -25.227, 28.1266, 0.66 ) }
    dend_10 { pt3dadd( -101.492, -25.168, 28.6385, 1.11 ) }
    dend_10 { pt3dadd( -102.586, -25.0913, 29.1083, 0.74 ) }
    dend_10 { pt3dadd( -104.002, -24.9821, 29.809, 0.74 ) }
    dend_10 { pt3dadd( -104.853, -24.9195, 30.2542, 1.03 ) }
    dend_10 { pt3dadd( -105.568, -24.8399, 30.6556, 1.25 ) }
    dend_10 { pt3dadd( -106.739, -24.6805, 31.3354, 0.59 ) }
    dend_10 { pt3dadd( -107.848, -24.5095, 31.9869, 0.59 ) }
    dend_10 { pt3dadd( -108.836, -24.3398, 32.5709, 0.59 ) }
    dend_10 { pt3dadd( -109.823, -24.1255, 33.151, 0.88 ) }
    dend_10 { pt3dadd( -111.358, -23.7527, 34.1115, 0.44 ) }
    dend_10 { pt3dadd( -111.908, -23.5965, 34.4674, 0.44 ) }
    dend_10 { pt3dadd( -112.696, -23.3286, 34.9788, 0.74 ) }
    dend_10 { pt3dadd( -113.333, -23.1058, 35.3591, 0.74 ) }
    dend_10 { pt3dadd( -114.178, -22.8059, 35.8347, 1.11 ) }
    dend_10 { pt3dadd( -115.002, -22.5203, 36.2802, 1.55 ) }
    dend_10 { pt3dadd( -116.588, -22.0385, 37.0044, 0.44 ) }
    dend_10 { pt3dadd( -117.58, -21.7566, 37.4112, 0.74 ) }
    dend_10 { pt3dadd( -118.359, -21.5406, 37.7424, 0.96 ) }
    dend_10 { pt3dadd( -120.052, -21.0789, 38.3775, 0.22 ) }
    dend_10 { pt3dadd( -121.131, -20.8138, 38.6707, 0.37 ) }
    dend_10 { pt3dadd( -122.375, -20.5693, 38.8323, 0.22 ) }
    dend_10 { pt3dadd( -122.999, -20.4871, 38.8181, 0.22 ) }
    dend_10 { pt3dadd( -124.457, -20.3386, 38.6542, 0.22 ) }
    dend_10 { pt3dadd( -125.796, -20.2092, 38.4925, 0.81 ) }
    dend_10 { pt3dadd( -126.891, -20.1299, 38.4248, 1.62 ) }
    dend_10 { pt3dadd( -128.911, -20.0123, 38.4995, 0.44 ) }
    dend_10 { pt3dadd( -129.948, -19.9722, 38.5313, 0.44 ) }
    dend_10 { pt3dadd( -131.206, -19.96, 38.5318, 0.44 ) }
    dend_10 { pt3dadd( -132.747, -19.9889, 38.523, 0.29 ) }
    dend_10 { pt3dadd( -134.457, -20.0472, 38.5954, 0.81 ) }
    dend_10 { pt3dadd( -135.489, -20.0793, 38.6544, 0.52 ) }
    dend_10 { pt3dadd( -138.096, -20.1056, 38.7342, 0.37 ) }
    dend_10 { pt3dadd( -139.208, -20.0896, 38.726, 0.37 ) }
    dend_10 { pt3dadd( -140.361, -20.0597, 38.6385, 0.37 ) }
    dend_10 { pt3dadd( -141.303, -20.0272, 38.518, 0.74 ) }
    dend_10 { pt3dadd( -142.196, -19.9742, 38.3863, 0.96 ) }
    dend_10 { pt3dadd( -143.49, -19.8847, 38.2703, 0.29 ) }
    dend_10 { pt3dadd( -144.312, -19.8423, 38.2851, 0.29 ) }
    dend_10 { pt3dadd( -145.031, -19.8116, 38.3137, 0.29 ) }
    dend_10 { pt3dadd( -146.034, -19.7629, 38.3976, 0.29 ) }
    dend_10 { pt3dadd( -146.618, -19.7182, 38.4808, 1.03 ) }
    dend_10 { pt3dadd( -147.642, -19.6024, 38.6766, 1.4 ) }
    dend_10 { pt3dadd( -149.125, -19.3609, 39.0222, 0.44 ) }
    dend_10 { pt3dadd( -150.368, -19.1022, 39.313, 0.59 ) }
    dend_10 { pt3dadd( -151.408, -18.9239, 39.5256, 0.29 ) }
    dend_10 { pt3dadd( -152.244, -18.761, 39.6811, 0.29 ) }
    dend_10 { pt3dadd( -152.96, -18.6161, 39.8227, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_10 { pt3dadd( -153.603, -18.484, 39.956, 0.96 ) }
    dend_10 { pt3dadd( -154.345, -18.3782, 40.0963, 0.44 ) }
    dend_10 { pt3dadd( -156.274, -18.4709, 40.245, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 3/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -28.2173, -19.4114, 18.9758, 0.66 ) }
    dend_6 { pt3dadd( -29.4157, -19.387, 19.6014, 0.66 ) }
    dend_6 { pt3dadd( -30.9842, -19.3339, 20.3355, 0.66 ) }
    dend_6 { pt3dadd( -31.9985, -19.3051, 20.8097, 0.66 ) }
    dend_6 { pt3dadd( -33.2308, -19.2747, 21.3305, 0.66 ) }
    dend_6 { pt3dadd( -34.2144, -19.2661, 21.7423, 0.66 ) }
    dend_6 { pt3dadd( -35.6335, -19.2595, 22.3017, 0.66 ) }
    dend_6 { pt3dadd( -36.6637, -19.2413, 22.6316, 0.66 ) }
    dend_6 { pt3dadd( -37.8802, -19.2021, 22.999, 0.66 ) }
    dend_6 { pt3dadd( -38.8458, -19.139, 23.2957, 0.66 ) }
    dend_6 { pt3dadd( -40.1529, -18.9903, 23.6779, 0.66 ) }
    dend_6 { pt3dadd( -41.0512, -18.8533, 23.9152, 0.66 ) }
    dend_6 { pt3dadd( -41.996, -18.7012, 24.1433, 0.52 ) }
    dend_6 { pt3dadd( -43.3348, -18.5172, 24.4637, 0.74 ) }
    dend_6 { pt3dadd( -44.5472, -18.4517, 24.7384, 1.03 ) }
    dend_6 { pt3dadd( -45.5625, -18.4982, 24.9877, 0.74 ) }
    dend_6 { pt3dadd( -46.4541, -18.6291, 25.1797, 0.66 ) }
    dend_6 { pt3dadd( -47.7055, -18.9261, 25.445, 0.74 ) }
    dend_6 { pt3dadd( -49.1255, -19.3339, 25.7038, 0.88 ) }
    dend_6 { pt3dadd( -50.5678, -19.7673, 25.9184, 0.52 ) }
    dend_6 { pt3dadd( -51.4972, -20.0227, 26.0583, 0.52 ) }
    dend_6 { pt3dadd( -52.9475, -20.3411, 26.2425, 0.59 ) }
    dend_6 { pt3dadd( -53.6701, -20.4238, 26.3054, 0.52 ) }
    dend_6 { pt3dadd( -54.9627, -20.3914, 26.3805, 0.66 ) }
    dend_6 { pt3dadd( -55.8402, -20.2409, 26.4005, 0.44 ) }
    dend_6 { pt3dadd( -56.8876, -19.9193, 26.4571, 0.66 ) }
    dend_6 { pt3dadd( -57.577, -19.6617, 26.5346, 0.37 ) }
    dend_6 { pt3dadd( -58.0781, -19.4602, 26.6378, 0.37 ) }
    dend_6 { pt3dadd( -58.8971, -19.1663, 26.8857, 0.96 ) }
    dend_6 { pt3dadd( -59.5997, -18.961, 27.1793, 1.25 ) }
    dend_6 { pt3dadd( -61.4038, -18.5935, 28.1366, 0.74 ) }
    dend_6 { pt3dadd( -62.9108, -18.4188, 29.0622, 0.37 ) }
    dend_6 { pt3dadd( -63.8147, -18.3635, 29.6725, 0.37 ) }
    dend_6 { pt3dadd( -64.9463, -18.3617, 30.4581, 0.59 ) }
    dend_6 { pt3dadd( -66.0846, -18.4334, 31.2564, 0.66 ) }
    dend_6 { pt3dadd( -67.1644, -18.5858, 31.9959, 0.59 ) }
    dend_6 { pt3dadd( -67.8474, -18.7643, 32.4245, 1.03 ) }
    dend_6 { pt3dadd( -68.098, -18.843, 32.5695, 1.03 ) }
    dend_6 { pt3dadd( -69.2774, -19.1794, 33.1613, 0.29 ) }
    dend_6 { pt3dadd( -70.1851, -19.3821, 33.5525, 0.29 ) }
    dend_6 { pt3dadd( -70.9249, -19.4927, 33.8163, 0.66 ) }
    dend_6 { pt3dadd( -71.9722, -19.5477, 34.1387, 0.44 ) }
    dend_6 { pt3dadd( -73.1957, -19.5557, 34.5031, 0.44 ) }
    dend_6 { pt3dadd( -73.8269, -19.5752, 34.686, 0.22 ) }
    dend_6 { pt3dadd( -74.2377, -19.6032, 34.8115, 0.22 ) }
    dend_6 { pt3dadd( -74.9015, -19.6361, 35.0196, 0.52 ) }
    dend_6 { pt3dadd( -75.5549, -19.6371, 35.2303, 0.52 ) }
    dend_6 { pt3dadd( -76.4707, -19.5886, 35.5228, 0.15 ) }
    dend_6 { pt3dadd( -77.2524, -19.5566, 35.7918, 0.15 ) }
    dend_6 { pt3dadd( -78.0194, -19.5446, 36.1077, 0.44 ) }
    dend_6 { pt3dadd( -79.2143, -19.549, 36.6283, 0.88 ) }
    dend_6 { pt3dadd( -79.6038, -19.5531, 36.8116, 0.88 ) }
    dend_6 { pt3dadd( -80.5838, -19.5307, 37.2623, 0.22 ) }
    dend_6 { pt3dadd( -81.4439, -19.4687, 37.6756, 0.22 ) }
    dend_6 { pt3dadd( -82.0811, -19.4006, 38.0072, 0.22 ) }
    dend_6 { pt3dadd( -83.134, -19.2739, 38.6054, 1.11 ) }
    dend_6 { pt3dadd( -84.4241, -19.1289, 39.4396, 0.59 ) }
    dend_6 { pt3dadd( -85.3983, -19.0382, 40.1601, 0.44 ) }
    dend_6 { pt3dadd( -86.2722, -18.9707, 40.8887, 0.44 ) }
    dend_6 { pt3dadd( -87.3015, -18.8874, 41.8139, 1.18 ) }
    dend_6 { pt3dadd( -88.1673, -18.8098, 42.6365, 1.18 ) }
    dend_6 { pt3dadd( -89.5082, -18.6794, 43.9408, 0.52 ) }
    dend_6 { pt3dadd( -91.2156, -18.5023, 45.5377, 0.29 ) }
    dend_6 { pt3dadd( -92.1669, -18.3972, 46.3701, 0.29 ) }
    dend_6 { pt3dadd( -93.073, -18.2828, 47.0416, 0.29 ) }
    dend_6 { pt3dadd( -93.8325, -18.1656, 47.5012, 0.96 ) }
    dend_6 { pt3dadd( -94.6973, -17.9959, 47.9103, 0.44 ) }
    dend_6 { pt3dadd( -95.827, -17.7069, 48.267, 1.25 ) }
    dend_6 { pt3dadd( -97.3474, -17.2441, 48.5351, 0.22 ) }
    dend_6 { pt3dadd( -98.5206, -16.876, 48.6672, 0.15 ) }
    dend_6 { pt3dadd( -99.5154, -16.5683, 48.7755, 0.29 ) }
    dend_6 { pt3dadd( -100.639, -16.2497, 48.9111, 1.11 ) }
    dend_6 { pt3dadd( -101.656, -15.9715, 49.0297, 0.66 ) }
    dend_6 { pt3dadd( -102.663, -15.7256, 49.1298, 0.22 ) }
    dend_6 { pt3dadd( -103.575, -15.534, 49.1897, 0.66 ) }
    dend_6 { pt3dadd( -104.665, -15.3473, 49.3016, 0.59 ) }
    dend_6 { pt3dadd( -105.825, -15.2138, 49.4924, 1.18 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 80/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -28.2173, -19.4114, 18.9758, 0.74 ) }
    dend_5 { pt3dadd( -28.5591, -19.9427, 20.0651, 0.74 ) }
    dend_5 { pt3dadd( -29.15, -20.6224, 21.4588, 0.74 ) }
    dend_5 { pt3dadd( -29.828, -21.258, 22.785, 1.11 ) }
    dend_5 { pt3dadd( -30.8185, -22.0595, 24.4151, 0.74 ) }
    dend_5 { pt3dadd( -31.604, -22.6555, 25.5834, 0.74 ) }
    dend_5 { pt3dadd( -32.304, -23.1988, 26.6163, 0.74 ) }
    dend_5 { pt3dadd( -33.1622, -23.8607, 27.8916, 0.88 ) }
    dend_5 { pt3dadd( -33.8468, -24.4206, 28.92, 0.88 ) }
    dend_5 { pt3dadd( -34.4456, -24.973, 29.9677, 0.96 ) }
    dend_5 { pt3dadd( -35.1914, -25.8311, 31.6144, 0.74 ) }
    dend_5 { pt3dadd( -35.7272, -26.5952, 33.0549, 1.11 ) }
    dend_5 { pt3dadd( -36.0893, -27.3004, 34.3177, 1.47 ) }
    dend_5 { pt3dadd( -36.4425, -28.3113, 36.0702, 0.96 ) }
    dend_5 { pt3dadd( -36.7368, -29.5411, 38.1469, 0.96 ) }
    dend_5 { pt3dadd( -36.8991, -30.6267, 39.9168, 1.4 ) }
    dend_5 { pt3dadd( -36.9464, -30.9802, 40.4744, 1.11 ) }
    dend_5 { pt3dadd( -37.1238, -31.8802, 41.8915, 0.88 ) }
    dend_5 { pt3dadd( -37.3708, -32.7127, 43.1914, 0.88 ) }
    dend_5 { pt3dadd( -37.674, -33.4022, 44.3139, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_5 { pt3dadd( -37.9183, -33.826, 45.0697, 1.18 ) }
    dend_5 { pt3dadd( -38.4227, -34.5754, 46.5929, 0.59 ) }
    dend_5 { pt3dadd( -38.8302, -35.1351, 47.8172, 0.59 ) }
    dend_5 { pt3dadd( -39.1376, -35.5103, 48.67, 0.88 ) }
    dend_5 { pt3dadd( -40.0085, -36.5102, 50.97, 0.59 ) }
    dend_5 { pt3dadd( -40.6819, -37.2542, 52.7565, 1.4 ) }
    dend_5 { pt3dadd( -41.0359, -37.6636, 53.7704, 1.4 ) }
    dend_5 { pt3dadd( -41.432, -38.2262, 55.1023, 1.11 ) }
    dend_5 { pt3dadd( -41.9177, -39.0366, 56.9708, 0.52 ) }
    dend_5 { pt3dadd( -42.3254, -39.7192, 58.6014, 0.52 ) }
    dend_5 { pt3dadd( -42.7294, -40.3942, 60.1063, 1.25 ) }
    dend_5 { pt3dadd( -43.2029, -41.2348, 61.7915, 1.25 ) }
    dend_5 { pt3dadd( -43.637, -42.1044, 63.3261, 0.74 ) }
    dend_5 { pt3dadd( -43.9571, -42.8811, 64.5104, 1.03 ) }
    dend_5 { pt3dadd( -44.3838, -44.2882, 66.2049, 0.52 ) }
    dend_5 { pt3dadd( -44.6441, -45.5844, 67.3246, 1.47 ) }
    dend_5 { pt3dadd( -44.7884, -46.8647, 68.1089, 0.44 ) }
    dend_5 { pt3dadd( -44.8252, -47.8758, 68.5174, 0.44 ) }
    dend_5 { pt3dadd( -44.8024, -48.609, 68.6962, 0.74 ) }
    dend_5 { pt3dadd( -44.7206, -49.4832, 68.8127, 1.11 ) }
    dend_5 { pt3dadd( -44.5409, -50.776, 69.0049, 0.44 ) }
    dend_5 { pt3dadd( -44.3659, -51.9992, 69.2835, 1.03 ) }
    dend_5 { pt3dadd( -44.2421, -53.0488, 69.6597, 1.33 ) }
    dend_5 { pt3dadd( -44.1427, -54.2203, 70.2288, 0.44 ) }
    dend_5 { pt3dadd( -44.0721, -55.4358, 70.9237, 0.37 ) }
    dend_5 { pt3dadd( -44.0612, -57.4477, 72.1706, 1.03 ) }
    dend_5 { pt3dadd( -44.1004, -58.0754, 72.5926, 1.25 ) }
    dend_5 { pt3dadd( -44.2964, -59.6445, 73.7944, 0.59 ) }
    dend_5 { pt3dadd( -44.5024, -60.7337, 74.8025, 1.03 ) }
    dend_5 { pt3dadd( -44.6046, -61.1439, 75.2217, 1.03 ) }
    dend_5 { pt3dadd( -44.8817, -62.0659, 76.2568, 0.22 ) }
    dend_5 { pt3dadd( -45.1399, -62.8588, 77.2039, 0.74 ) }
    dend_5 { pt3dadd( -45.5708, -64.0663, 78.7635, 0.44 ) }
    dend_5 { pt3dadd( -46.0012, -65.0626, 80.0926, 0.88 ) }
    dend_5 { pt3dadd( -46.2128, -65.496, 80.7224, 1.33 ) }
    dend_5 { pt3dadd( -46.8253, -66.6636, 82.4459, 0.52 ) }
    dend_5 { pt3dadd( -47.4117, -67.7105, 83.9949, 0.52 ) }
    dend_5 { pt3dadd( -47.7504, -68.2729, 84.7546, 1.03 ) }
    dend_5 { pt3dadd( -48.3547, -69.2297, 85.8652, 0.29 ) }
    dend_5 { pt3dadd( -48.8763, -70.0204, 86.6682, 0.88 ) }
    dend_5 { pt3dadd( -49.3369, -70.7113, 87.3062, 1.55 ) }
    dend_5 { pt3dadd( -50.4141, -72.3372, 88.5098, 0.15 ) }
    dend_5 { pt3dadd( -50.8162, -72.9729, 88.8722, 0.29 ) }
    dend_5 { pt3dadd( -51.2697, -73.7421, 89.2315, 0.15 ) }
    dend_5 { pt3dadd( -51.5653, -74.2923, 89.437, 0.29 ) }
    dend_5 { pt3dadd( -52.1376, -75.3977, 89.765, 0.15 ) }
    dend_5 { pt3dadd( -52.5884, -76.3055, 90.0019, 1.03 ) }
    dend_5 { pt3dadd( -53.5616, -78.3424, 90.3927, 0.15 ) }
    dend_5 { pt3dadd( -54.0898, -79.4741, 90.6134, 0.15 ) }
    dend_5 { pt3dadd( -54.6291, -80.6141, 90.8338, 0.15 ) }
    dend_5 { pt3dadd( -54.9365, -81.23, 90.941, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 51/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -107.265, -135.359, -24.4833, 0.37 ) }
    dend_25 { pt3dadd( -107.427, -135.727, -24.6396, 0.37 ) }
    dend_25 { pt3dadd( -107.539, -136.126, -24.8068, 0.37 ) }
    dend_25 { pt3dadd( -107.689, -137.051, -25.0777, 0.37 ) }
    dend_25 { pt3dadd( -107.876, -138.202, -25.4145, 0.37 ) }
    dend_25 { pt3dadd( -107.967, -138.762, -25.5787, 0.37 ) }
    dend_25 { pt3dadd( -108.068, -139.386, -25.7613, 0.37 ) }
    dend_25 { pt3dadd( -108.184, -140.408, -26.0188, 0.37 ) }
    dend_25 { pt3dadd( -108.198, -141.616, -26.2741, 0.52 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 60/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -107.265, -135.359, -24.4833, 0.15 ) }
    dend_24 { pt3dadd( -107.426, -135.935, -25.661, 0.15 ) }
    dend_24 { pt3dadd( -107.545, -136.405, -26.4653, 0.15 ) }
    dend_24 { pt3dadd( -107.691, -137.092, -27.504, 0.15 ) }
    dend_24 { pt3dadd( -107.835, -137.765, -28.3965, 0.15 ) }
    dend_24 { pt3dadd( -108.006, -138.535, -29.2583, 0.15 ) }
    dend_24 { pt3dadd( -108.158, -139.07, -29.7709, 0.22 ) }
    dend_24 { pt3dadd( -108.472, -139.932, -30.391, 0.15 ) }
    dend_24 { pt3dadd( -108.831, -140.679, -30.797, 0.15 ) }
    dend_24 { pt3dadd( -109.229, -141.345, -31.0557, 0.15 ) }
    dend_24 { pt3dadd( -109.943, -142.315, -31.3267, 0.15 ) }
    dend_24 { pt3dadd( -110.892, -143.313, -31.5299, 0.15 ) }
    dend_24 { pt3dadd( -111.424, -143.723, -31.5942, 0.22 ) }
    dend_24 { pt3dadd( -112.245, -144.159, -31.6038, 0.15 ) }
    dend_24 { pt3dadd( -112.827, -144.375, -31.5678, 0.15 ) }
    dend_24 { pt3dadd( -113.345, -144.52, -31.508, 0.15 ) }
    dend_24 { pt3dadd( -114.361, -144.754, -31.352, 0.15 ) }
    dend_24 { pt3dadd( -115.285, -144.963, -31.1808, 0.22 ) }
    dend_24 { pt3dadd( -116.379, -145.255, -30.9284, 0.22 ) }
    dend_24 { pt3dadd( -117.808, -145.693, -30.5284, 0.15 ) }
    dend_24 { pt3dadd( -118.759, -146.022, -30.1895, 0.15 ) }
    dend_24 { pt3dadd( -119.336, -146.252, -29.9283, 0.15 ) }
    dend_24 { pt3dadd( -119.796, -146.47, -29.6842, 0.22 ) }
    dend_24 { pt3dadd( -120.492, -146.834, -29.2768, 0.15 ) }
    dend_24 { pt3dadd( -120.915, -147.079, -29.0087, 0.22 ) }
    dend_24 { pt3dadd( -122.008, -147.73, -28.2203, 0.15 ) }
    dend_24 { pt3dadd( -122.721, -148.135, -27.6698, 0.15 ) }
    dend_24 { pt3dadd( -123.379, -148.474, -27.1206, 1.03 ) }
    dend_24 { pt3dadd( -131.161, -154.225, -29.6432, 1.03 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -156.274, -18.4709, 40.245, 0.22 ) }
    dend_18 { pt3dadd( -155.977, -19.3586, 40.245, 0.22 ) }
    dend_18 { pt3dadd( -155.765, -19.9991, 40.245, 0.22 ) }
    dend_18 { pt3dadd( -155.677, -20.2955, 40.2108, 0.22 ) }
    dend_18 { pt3dadd( -155.416, -21.1712, 40.1098, 0.81 ) }
    dend_18 { pt3dadd( -155.145, -22.083, 40.0047, 0.15 ) }
    dend_18 { pt3dadd( -154.994, -22.5903, 39.9461, 0.37 ) }
    dend_18 { pt3dadd( -154.747, -23.2808, 39.8451, 0.15 ) }
    dend_18 { pt3dadd( -154.326, -24.4841, 39.6249, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -156.274, -18.4709, 40.245, 0.37 ) }
    dend_11 { pt3dadd( -157.482, -18.4333, 40.119, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_11 { pt3dadd( -157.918, -18.3895, 40.0711, 0.37 ) }
    dend_11 { pt3dadd( -158.606, -18.3088, 40.0008, 0.81 ) }
    dend_11 { pt3dadd( -159.322, -18.2183, 39.9033, 0.88 ) }
    dend_11 { pt3dadd( -160.325, -18.094, 39.7087, 0.22 ) }
    dend_11 { pt3dadd( -161.228, -18.0048, 39.5127, 0.22 ) }
    dend_11 { pt3dadd( -161.739, -17.9528, 39.3748, 0.22 ) }
    dend_11 { pt3dadd( -162.592, -17.8564, 39.1296, 0.96 ) }
    dend_11 { pt3dadd( -163.891, -17.6912, 38.6987, 0.22 ) }
    dend_11 { pt3dadd( -164.845, -17.5674, 38.3243, 0.96 ) }
    dend_11 { pt3dadd( -165.47, -17.5064, 38.0238, 1.18 ) }
    dend_11 { pt3dadd( -166.7, -17.3999, 37.3645, 0.22 ) }
    dend_11 { pt3dadd( -167.402, -17.319, 36.9604, 0.29 ) }
    dend_11 { pt3dadd( -167.821, -17.2443, 36.6673, 0.29 ) }
    dend_11 { pt3dadd( -168.404, -17.105, 36.1174, 0.29 ) }
    dend_11 { pt3dadd( -168.783, -16.9928, 35.5039, 0.29 ) }
    dend_11 { pt3dadd( -169.098, -16.8744, 34.8264, 0.81 ) }
    dend_11 { pt3dadd( -169.264, -16.8021, 34.3398, 1.03 ) }
    dend_11 { pt3dadd( -169.659, -16.5879, 32.9454, 1.03 ) }
    dend_11 { pt3dadd( -170.054, -16.3313, 31.3823, 0.81 ) }
    dend_11 { pt3dadd( -170.759, -15.8974, 28.4752, 0.81 ) }
    dend_11 { pt3dadd( -170.917, -15.8099, 27.8063, 0.59 ) }
    dend_11 { pt3dadd( -171.279, -15.6274, 26.1875, 0.59 ) }
    dend_11 { pt3dadd( -171.525, -15.5026, 25.1078, 1.03 ) }
    dend_11 { pt3dadd( -171.816, -15.3516, 23.9454, 1.03 ) }
    dend_11 { pt3dadd( -172.195, -15.175, 22.5958, 0.59 ) }
    dend_11 { pt3dadd( -172.585, -15.0288, 21.3823, 0.59 ) }
    dend_11 { pt3dadd( -172.912, -14.9267, 20.3954, 0.59 ) }
    dend_11 { pt3dadd( -173.182, -14.8508, 19.6663, 0.59 ) }
    dend_11 { pt3dadd( -173.574, -14.7234, 18.5738, 0.96 ) }
    dend_11 { pt3dadd( -174.005, -14.5213, 17.3345, 0.52 ) }
    dend_11 { pt3dadd( -174.395, -14.2674, 16.1747, 0.52 ) }
    dend_11 { pt3dadd( -174.871, -13.9307, 14.8192, 0.52 ) }
    dend_11 { pt3dadd( -175.212, -13.6902, 13.8556, 0.52 ) }
    dend_11 { pt3dadd( -175.627, -13.4188, 12.6725, 0.52 ) }
    dend_11 { pt3dadd( -175.872, -13.2634, 12.0027, 0.52 ) }
    dend_11 { pt3dadd( -176.085, -13.1436, 11.5012, 0.52 ) }
    dend_11 { pt3dadd( -176.323, -13.0606, 11.0503, 0.52 ) }
    dend_11 { pt3dadd( -176.742, -12.9751, 10.3991, 0.52 ) }
    dend_11 { pt3dadd( -177.097, -12.9257, 9.90577, 0.52 ) }
    dend_11 { pt3dadd( -177.432, -12.8609, 9.52719, 0.52 ) }
    dend_11 { pt3dadd( -177.918, -12.6739, 8.96692, 0.37 ) }
    dend_11 { pt3dadd( -178.549, -12.1978, 8.21168, 0.37 ) }
    dend_11 { pt3dadd( -178.784, -11.9475, 7.92611, 0.81 ) }
    dend_11 { pt3dadd( -178.941, -11.7541, 7.75868, 0.81 ) }
    dend_11 { pt3dadd( -179.565, -10.9103, 7.15229, 0.22 ) }
    dend_11 { pt3dadd( -180.162, -10.0785, 6.66216, 0.22 ) }
    dend_11 { pt3dadd( -180.498, -9.63813, 6.41008, 0.22 ) }
    dend_11 { pt3dadd( -180.778, -9.3321, 6.20685, 0.22 ) }
    dend_11 { pt3dadd( -181.363, -8.84771, 5.74186, 0.59 ) }
    dend_11 { pt3dadd( -181.67, -8.6367, 5.45546, 0.59 ) }
    dend_11 { pt3dadd( -182.316, -8.25334, 4.79759, 0.15 ) }
    dend_11 { pt3dadd( -183.138, -7.80763, 3.973, 0.66 ) }
    dend_11 { pt3dadd( -183.745, -7.50576, 3.35107, 0.66 ) }
    dend_11 { pt3dadd( -184.773, -6.9903, 2.29127, 0.29 ) }
    dend_11 { pt3dadd( -185.493, -6.6289, 1.48168, 0.29 ) }
    dend_11 { pt3dadd( -185.755, -6.48767, 1.17064, 0.29 ) }
    dend_11 { pt3dadd( -186.162, -6.23894, 0.638447, 0.59 ) }
    dend_11 { pt3dadd( -186.781, -5.79827, -0.235328, 0.59 ) }
    dend_11 { pt3dadd( -187.25, -5.43293, -0.941645, 0.22 ) }
    dend_11 { pt3dadd( -187.677, -5.06715, -1.66157, 0.22 ) }
    dend_11 { pt3dadd( -187.954, -4.82616, -2.17677, 0.44 ) }
    dend_11 { pt3dadd( -188.348, -4.42324, -3.16118, 0.44 ) }
    dend_11 { pt3dadd( -188.66, -3.974, -4.27107, 0.44 ) }
    dend_11 { pt3dadd( -188.794, -3.70568, -4.97689, 0.44 ) }
    dend_11 { pt3dadd( -188.843, -3.62263, -5.24431, 0.44 ) }
    dend_11 { pt3dadd( -188.942, -3.47471, -5.7354, 0.44 ) }
    dend_11 { pt3dadd( -189.162, -3.20197, -6.7738, 0.44 ) }
    dend_11 { pt3dadd( -189.269, -3.04375, -7.33532, 0.37 ) }
    dend_11 { pt3dadd( -189.392, -2.61902, -8.55349, 0.37 ) }
    dend_11 { pt3dadd( -189.42, -2.28781, -9.50917, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -105.825, -15.2138, 49.4924, 0.22 ) }
    dend_8 { pt3dadd( -106.771, -16.4547, 49.6319, 0.22 ) }
    dend_8 { pt3dadd( -107.456, -17.3994, 49.7149, 0.22 ) }
    dend_8 { pt3dadd( -107.73, -17.7748, 49.7261, 0.22 ) }
    dend_8 { pt3dadd( -108.285, -18.5225, 49.6602, 0.22 ) }
    dend_8 { pt3dadd( -108.817, -19.2442, 49.5403, 0.22 ) }
    dend_8 { pt3dadd( -109.21, -19.7764, 49.4089, 0.22 ) }
    dend_8 { pt3dadd( -109.624, -20.3538, 49.1945, 0.52 ) }
    dend_8 { pt3dadd( -110.297, -21.2653, 48.7882, 0.22 ) }
    dend_8 { pt3dadd( -110.996, -22.211, 48.288, 0.59 ) }
    dend_8 { pt3dadd( -111.282, -22.5989, 48.0613, 0.59 ) }
    dend_8 { pt3dadd( -112.299, -23.961, 47.2098, 0.15 ) }
    dend_8 { pt3dadd( -112.807, -24.6306, 46.7704, 0.15 ) }
    dend_8 { pt3dadd( -113.526, -25.5944, 46.1229, 0.15 ) }
    dend_8 { pt3dadd( -114.156, -26.4673, 45.5547, 0.15 ) }
    dend_8 { pt3dadd( -114.572, -27.0501, 45.2138, 0.88 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 86/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -105.825, -15.2138, 49.4924, 0.15 ) }
    dend_7 { pt3dadd( -106.944, -15.3192, 49.7826, 0.15 ) }
    dend_7 { pt3dadd( -107.947, -15.375, 50.0511, 0.15 ) }
    dend_7 { pt3dadd( -108.656, -15.3715, 50.2398, 0.44 ) }
    dend_7 { pt3dadd( -109.684, -15.3032, 50.5914, 0.15 ) }
    dend_7 { pt3dadd( -110.141, -15.2402, 50.7628, 0.37 ) }
    dend_7 { pt3dadd( -110.499, -15.1683, 50.9003, 0.37 ) }
    dend_7 { pt3dadd( -110.811, -15.0554, 51.0634, 0.37 ) }
    dend_7 { pt3dadd( -111.173, -14.8464, 51.2924, 0.15 ) }
    dend_7 { pt3dadd( -111.981, -14.2963, 51.8241, 0.15 ) }
    dend_7 { pt3dadd( -112.47, -13.9211, 52.1372, 0.59 ) }
    dend_7 { pt3dadd( -113.078, -13.4417, 52.5487, 0.74 ) }
    dend_7 { pt3dadd( -114.122, -12.6677, 53.2729, 0.15 ) }
    dend_7 { pt3dadd( -114.583, -12.3426, 53.5959, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 0/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -108.198, -141.616, -26.2741, 0.37 ) }
    dend_27 { pt3dadd( -107.901, -141.656, -25.5058, 0.37 ) }
    dend_27 { pt3dadd( -107.486, -141.77, -24.5424, 0.81 ) }
    dend_27 { pt3dadd( -106.95, -141.986, -23.4101, 0.81 ) }
    dend_27 { pt3dadd( -106.344, -142.274, -22.3504, 0.22 ) }
    dend_27 { pt3dadd( -105.728, -142.567, -21.4482, 0.22 ) }
    dend_27 { pt3dadd( -105.132, -142.831, -20.6795, 0.22 ) }
    dend_27 { pt3dadd( -104.486, -143.099, -19.9874, 0.15 ) }
    dend_27 { pt3dadd( -103.784, -143.383, -19.3941, 0.15 ) }
    dend_27 { pt3dadd( -102.812, -143.789, -18.7091, 0.15 ) }
    dend_27 { pt3dadd( -101.994, -144.134, -18.221, 0.15 ) }
    dend_27 { pt3dadd( -101.195, -144.427, -17.8297, 0.15 ) }
    dend_27 { pt3dadd( -100.454, -144.661, -17.5086, 0.15 ) }
    dend_27 { pt3dadd( -99.6514, -144.835, -17.1412, 0.88 ) }
    dend_27 { pt3dadd( -93.9098, -149.007, -10.0961, 0.88 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 15/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -108.198, -141.616, -26.2741, 0.37 ) }
    dend_26 { pt3dadd( -109.048, -142.938, -26.7407, 0.37 ) }
    dend_26 { pt3dadd( -109.588, -143.815, -27.046, 0.37 ) }
    dend_26 { pt3dadd( -110.176, -144.744, -27.3697, 0.52 ) }
    dend_26 { pt3dadd( -110.533, -145.303, -27.57, 0.37 ) }
    dend_26 { pt3dadd( -111.065, -146.157, -27.8897, 0.52 ) }
    dend_26 { pt3dadd( -111.592, -147.033, -28.2374, 0.29 ) }
    dend_26 { pt3dadd( -111.989, -147.729, -28.5113, 0.29 ) }
    dend_26 { pt3dadd( -112.638, -148.884, -28.9857, 0.29 ) }
    dend_26 { pt3dadd( -113.184, -149.877, -29.4192, 0.29 ) }
    dend_26 { pt3dadd( -113.74, -150.871, -29.865, 0.29 ) }
    dend_26 { pt3dadd( -114.103, -151.511, -30.1698, 0.29 ) }
    dend_26 { pt3dadd( -114.412, -152.044, -30.452, 0.29 ) }
    dend_26 { pt3dadd( -118.889, -159.624, -35.195, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 29/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -189.42, -2.28781, -9.50917, 0.22 ) }
    dend_17 { pt3dadd( -189.087, -3.61192, -10.0551, 0.22 ) }
    dend_17 { pt3dadd( -188.886, -4.61102, -10.3275, 0.22 ) }
    dend_17 { pt3dadd( -188.817, -5.00663, -10.4112, 0.29 ) }
    dend_17 { pt3dadd( -188.742, -5.44069, -10.503, 0.29 ) }
    dend_17 { pt3dadd( -188.576, -6.40166, -10.7063, 0.22 ) }
    dend_17 { pt3dadd( -188.335, -7.7902, -11.0, 0.29 ) }
    dend_17 { pt3dadd( -188.143, -8.81057, -11.0741, 0.15 ) }
    dend_17 { pt3dadd( -188.059, -9.39445, -11.0741, 0.44 ) }
    dend_17 { pt3dadd( -186.713, -19.2976, -11.416, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -189.42, -2.28781, -9.50917, 0.44 ) }
    dend_12 { pt3dadd( -189.662, -2.00171, -9.89094, 0.44 ) }
    dend_12 { pt3dadd( -190.035, -1.49958, -10.4787, 0.44 ) }
    dend_12 { pt3dadd( -190.441, -0.928963, -11.1047, 0.66 ) }
    dend_12 { pt3dadd( -190.65, -0.655421, -11.408, 0.29 ) }
    dend_12 { pt3dadd( -191.26, 0.0349859, -12.1997, 0.22 ) }
    dend_12 { pt3dadd( -191.614, 0.377623, -12.6303, 0.22 ) }
    dend_12 { pt3dadd( -191.857, 0.574424, -12.9265, 0.22 ) }
    dend_12 { pt3dadd( -192.206, 0.806917, -13.2844, 0.22 ) }
    dend_12 { pt3dadd( -192.519, 0.989452, -13.5492, 0.22 ) }
    dend_12 { pt3dadd( -192.984, 1.20488, -13.8895, 0.37 ) }
    dend_12 { pt3dadd( -193.531, 1.41367, -14.2267, 0.37 ) }
    dend_12 { pt3dadd( -194.235, 1.65869, -14.6565, 0.37 ) }
    dend_12 { pt3dadd( -195.064, 1.94027, -15.1371, 0.37 ) }
    dend_12 { pt3dadd( -195.806, 2.21676, -15.5329, 0.29 ) }
    dend_12 { pt3dadd( -196.382, 2.49043, -15.8243, 0.29 ) }
    dend_12 { pt3dadd( -196.739, 2.70453, -15.9877, 0.29 ) }
    dend_12 { pt3dadd( -197.186, 3.03622, -16.1552, 0.29 ) }
    dend_12 { pt3dadd( -197.676, 3.47921, -16.3029, 0.29 ) }
    dend_12 { pt3dadd( -197.942, 3.79246, -16.375, 0.29 ) }
    dend_12 { pt3dadd( -198.298, 4.34008, -16.4691, 0.29 ) }
    dend_12 { pt3dadd( -198.577, 4.89923, -16.5463, 0.29 ) }
    dend_12 { pt3dadd( -198.775, 5.37254, -16.6326, 0.29 ) }
    dend_12 { pt3dadd( -198.934, 5.76429, -16.7135, 0.29 ) }
    dend_12 { pt3dadd( -199.237, 6.43606, -16.88, 0.29 ) }
    dend_12 { pt3dadd( -199.659, 7.20673, -17.1277, 0.29 ) }
    dend_12 { pt3dadd( -199.924, 7.60781, -17.3044, 0.29 ) }
    dend_12 { pt3dadd( -200.296, 8.0869, -17.5588, 0.29 ) }
    dend_12 { pt3dadd( -200.727, 8.55205, -17.8674, 0.29 ) }
    dend_12 { pt3dadd( -201.429, 9.15633, -18.3413, 0.22 ) }
    dend_12 { pt3dadd( -201.97, 9.48844, -18.6754, 0.22 ) }
    dend_12 { pt3dadd( -202.758, 9.91916, -19.1349, 0.22 ) }
    dend_12 { pt3dadd( -203.116, 10.0932, -19.3358, 0.52 ) }
    dend_12 { pt3dadd( -203.876, 10.4297, -19.7635, 0.88 ) }
    dend_12 { pt3dadd( -204.722, 10.7511, -20.2759, 0.29 ) }
    dend_12 { pt3dadd( -205.759, 11.0025, -20.9003, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 75/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -205.759, 11.0025, -20.9003, 0.15 ) }
    dend_16 { pt3dadd( -206.886, 11.9883, -20.4988, 0.15 ) }
    dend_16 { pt3dadd( -207.542, 12.5624, -20.2649, 0.15 ) }
    dend_16 { pt3dadd( -208.423, 13.3331, -19.9509, 0.15 ) }
    dend_16 { pt3dadd( -208.823, 13.6829, -19.8084, 0.15 ) }
    dend_16 { pt3dadd( -209.745, 14.4899, -19.4797, 0.22 ) }
    dend_16 { pt3dadd( -217.313, 20.6033, -17.1668, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 82/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -205.759, 11.0025, -20.9003, 0.29 ) }
    dend_13 { pt3dadd( -206.512, 10.3313, -20.3989, 0.29 ) }
    dend_13 { pt3dadd( -207.098, 9.80893, -20.0088, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 85/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -207.098, 9.80893, -20.0088, 0.22 ) }
    dend_15 { pt3dadd( -208.136, 9.40921, -19.7987, 0.22 ) }
    dend_15 { pt3dadd( -209.226, 8.94148, -19.6026, 0.15 ) }
    dend_15 { pt3dadd( -209.637, 8.74089, -19.5178, 0.29 ) }
    dend_15 { pt3dadd( -210.533, 8.27869, -19.3041, 0.15 ) }
    dend_15 { pt3dadd( -210.958, 8.04357, -19.1845, 0.29 ) }
    dend_15 { pt3dadd( -211.227, 7.87859, -19.1029, 0.29 ) }
    dend_15 { pt3dadd( -211.924, 7.3617, -18.8685, 0.15 ) }
    dend_15 { pt3dadd( -212.507, 6.88116, -18.6476, 0.29 ) }
    dend_15 { pt3dadd( -213.295, 6.201, -18.3148, 0.15 ) }
    dend_15 { pt3dadd( -214.179, 5.41079, -17.8701, 0.07 ) }
    dend_15 { pt3dadd( -214.633, 5.00164, -17.6109, 0.07 ) }
    dend_15 { pt3dadd( -215.086, 4.61075, -17.329, 0.22 ) }
    dend_15 { pt3dadd( -215.814, 4.03642, -16.8169, 0.15 ) }
    dend_15 { pt3dadd( -216.186, 3.78056, -16.534, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -216.833, 3.35735, -16.0013, 0.15 ) }
    dend_15 { pt3dadd( -217.272, 3.11443, -15.6203, 0.15 ) }
    dend_15 { pt3dadd( -217.724, 2.91101, -15.214, 0.15 ) }
    dend_15 { pt3dadd( -218.441, 2.64256, -14.5375, 0.15 ) }
    dend_15 { pt3dadd( -219.266, 2.36463, -13.7379, 0.52 ) }
    dend_15 { pt3dadd( -226.003, -4.01915, -10.0149, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 6/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -207.098, 9.80893, -20.0088, 0.22 ) }
    dend_14 { pt3dadd( -207.314, 9.2206, -19.7529, 0.22 ) }
    dend_14 { pt3dadd( -207.697, 8.16007, -19.3115, 0.15 ) }
    dend_14 { pt3dadd( -207.924, 7.42207, -19.0271, 0.15 ) }
    dend_14 { pt3dadd( -208.153, 6.60371, -18.7387, 0.15 ) }
    dend_14 { pt3dadd( -208.228, 6.29694, -18.6393, 0.15 ) }
    dend_14 { pt3dadd( -208.348, 5.75034, -18.4773, 0.37 ) }
    dend_14 { pt3dadd( -208.519, 5.05014, -18.26, 0.07 ) }
    dend_14 { pt3dadd( -208.651, 4.50754, -18.08, 0.07 ) }
    dend_14 { pt3dadd( -208.744, 4.08025, -17.904, 0.07 ) }
    dend_14 { pt3dadd( -208.811, 3.73172, -17.7295, 0.07 ) }
    dend_14 { pt3dadd( -208.9, 3.35025, -17.517, 0.15 ) }
    dend_14 { pt3dadd( -209.349, 1.99728, -16.6988, 0.15 ) }
    dend_14 { pt3dadd( -209.632, 1.42527, -16.3209, 0.15 ) }
    dend_14 { pt3dadd( -209.966, 0.937326, -15.9858, 0.15 ) }
    dend_14 { pt3dadd( -210.361, 0.408321, -15.6043, 0.15 ) }
    dend_14 { pt3dadd( -210.799, -0.117033, -15.2137, 0.22 ) }
    dend_14 { pt3dadd( -211.339, -0.690651, -14.7872, 0.22 ) }
    dend_14 { pt3dadd( -211.943, -1.21698, -14.448, 0.22 ) }
    dend_14 { pt3dadd( -212.785, -1.81126, -14.0892, 1.33 ) }
    dend_14 { pt3dadd( -215.319, -10.0474, -9.01508, 1.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_33, dend_32, dend_29, dend_20, dend_3, dend_0, dend_37, dend_34, dend_31, dend_30, dend_22, dend_21, dend_9, dend_4, dend_2, dend_1, dend_36, dend_35, dend_28, dend_23, dend_19, dend_10, dend_6, dend_5, dend_25, dend_24, dend_18, dend_11, dend_8, dend_7, dend_27, dend_26, dend_17, dend_12, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_33, dend_32, dend_29, dend_20, dend_3, dend_0, dend_37, dend_34, dend_31, dend_30, dend_22, dend_21, dend_9, dend_4, dend_2, dend_1, dend_36, dend_35, dend_28, dend_23, dend_19, dend_10, dend_6, dend_5, dend_25, dend_24, dend_18, dend_11, dend_8, dend_7, dend_27, dend_26, dend_17, dend_12, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_33, dend_32, dend_29, dend_20, dend_3, dend_0, axon_0, dend_37, dend_34, dend_31, dend_30, dend_22, dend_21, dend_9, dend_4, dend_2, dend_1, axon_1, dend_36, dend_35, dend_28, dend_23, dend_19, dend_10, dend_6, dend_5, dend_25, dend_24, dend_18, dend_11, dend_8, dend_7, dend_27, dend_26, dend_17, dend_12, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_5 = new SectionList()
    dend_38 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_37 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_30 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_22 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_21 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_36 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_35 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_33 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_29 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_4 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_34 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_25 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_26 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_27 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_24 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_17 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_20, dend_20, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 9
    dend_32 nseg = 7
    dend_37 nseg = 7
    dend_31 nseg = 3
    dend_30 nseg = 7
    dend_22 nseg = 3
    dend_21 nseg = 7
    dend_2 nseg = 7
    dend_1 nseg = 9
    dend_36 nseg = 5
    dend_35 nseg = 5
    dend_28 nseg = 5
    dend_23 nseg = 7
    dend_19 nseg = 7
    dend_10 nseg = 5
    dend_6 nseg = 5
    dend_5 nseg = 5
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L1_HAC_edfad4a560_0_0


