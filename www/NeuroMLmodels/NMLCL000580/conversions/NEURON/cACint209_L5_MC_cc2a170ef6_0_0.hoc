// Cell: cACint209_L5_MC_cc2a170ef6_0_0
/*
{
  "id" : "cACint209_L5_MC_cc2a170ef6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.17537, -14.7229, -2.53722, 2.53523", "-1.02989, -13.1729, -2.2784, 3.64948", "-0.88442, -11.6229, -2.01957, 3.41389", "-0.738945, -10.0728, -1.76074, 3.47667", "-0.59347, -8.52283, -1.50191, 3.57555", "-0.447995, -6.97282, -1.24309, 4.84916", "-0.302521, -5.42281, -0.984259, 6.03461", "-0.157046, -3.87279, -0.725432, 8.00123", "-0.0115709, -2.32278, -0.466604, 10.0186", "0.133904, -0.772764, -0.207777, 11.7516", "0.279379, 0.77725, 0.0510504, 12.805", "0.424853, 2.32726, 0.309878, 13.399", "0.570328, 3.87728, 0.568705, 12.814", "0.715803, 5.42729, 0.827533, 11.7031", "0.861278, 6.97731, 1.08636, 10.4832", "1.00675, 8.52732, 1.34519, 8.29813", "1.15223, 10.0773, 1.60401, 6.48815", "1.2977, 11.6273, 1.86284, 4.91847", "1.44318, 13.1774, 2.12167, 3.42411", "1.58865, 14.7274, 2.3805, 2.66266", "1.73413, 16.2774, 2.63932, 1.76809" ]
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "2.72633, 16.5012, 2.1726, 2.76", "2.91726, 16.7675, 2.33733, 2.76", "3.55004, 17.7574, 2.8234, 2.43", "4.79853, 19.8806, 3.70223, 2.43", "5.36038, 20.9248, 4.06758, 2.43", "5.91325, 21.9729, 4.38875, 2.43", "6.31864, 22.7331, 4.58648, 2.43", "6.85079, 23.7714, 4.78823, 2.43", "7.13881, 24.3709, 4.86429, 2.27", "7.54437, 25.2683, 4.86429, 2.11", "7.88606, 25.9983, 4.86429, 2.11", "8.60913, 27.4569, 4.86429, 2.11", "8.88749, 27.9717, 4.86429, 2.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000002819660706
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-0.133663, 3.5612, -1.1374, 2.11", "-0.398194, 3.08399, -0.653581, 2.11", "-3.07726, -1.34874, 3.40019, 1.46", "-4.00526, -2.82995, 4.57922, 1.46", "-4.91851, -4.28371, 5.58375, 1.46", "-5.90616, -5.85998, 6.52544, 1.3", "-7.7056, -8.83559, 8.1177, 1.3", "-8.52804, -10.249, 8.67928, 1.14", "-9.61523, -12.1809, 9.0859, 1.14", "-10.5395, -13.8834, 9.4376, 0.97", "-11.5575, -15.8609, 9.80304, 0.97", "-12.1306, -17.0619, 9.95719, 0.81", "-12.9973, -19.0446, 9.9664, 0.81", "-13.8168, -21.195, 9.9733, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000002819660706
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "6.62633, 4.9012, -3.6174, 4.05", "7.29175, 4.40667, -4.65623, 4.05", "8.98363, 3.14929, -7.29756, 1.95", "9.06513, 3.08872, -7.4248, 1.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000002819660706
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.696337, -14.7788, -4.4274, 2.76", "1.01634, -15.4288, -4.4274, 2.76" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000002819660706
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.73413, 16.2774, 2.63932, 0.65", "3.13578, 31.2118, 2.63932, 0.65", "4.53743, 46.1461, 2.63932, 0.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "8.88749, 27.9717, 4.86429, 1.78", "10.3177, 29.5533, 5.43624, 1.78", "11.4385, 30.7927, 5.88443, 1.78", "12.8133, 32.313, 6.43422, 1.78" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "8.88749, 27.9717, 4.86429, 1.46", "7.4565, 29.7166, 4.3221, 1.46", "6.8467, 30.5451, 4.13035, 1.46", "6.48843, 31.0759, 3.93561, 1.14", "5.91082, 32.1186, 3.51579, 0.81", "5.64654, 32.6742, 3.30626, 0.65", "5.09821, 33.8745, 2.88248, 0.65", "4.77917, 34.6175, 2.83495, 0.65", "3.82328, 36.4066, 3.02035, 0.97", "2.88524, 37.9048, 3.34975, 0.97", "1.97453, 39.3486, 3.74011, 0.97", "1.49408, 40.1023, 3.95487, 0.97", "-0.788852, 43.9368, 4.88942, 0.81", "-1.80784, 45.8045, 5.28429, 0.81", "-2.80783, 47.8056, 5.65438, 0.81", "-3.8651, 50.2009, 6.02157, 0.81", "-4.64345, 52.2203, 6.26621, 0.81", "-5.5716, 55.0627, 6.49124, 0.81", "-6.05419, 57.1224, 6.54214, 0.81", "-6.41653, 59.5129, 6.63534, 0.81", "-6.68668, 62.6416, 6.81196, 0.81", "-6.73007, 64.1798, 6.93366, 0.81", "-6.6246, 66.1517, 7.14411, 0.81", "-6.24293, 68.2375, 8.12264, 0.81", "-6.0597, 68.7677, 8.58116, 1.3", "-5.81228, 69.3685, 9.23136, 1.3", "-5.74819, 69.5154, 9.40114, 1.78", "-5.48049, 70.2618, 10.2582, 1.78", "-3.70007, 76.6069, 17.4914, 1.14", "-3.4911, 78.1328, 19.0866, 1.14", "-3.44878, 80.1228, 20.8002, 1.14", "-3.5386, 81.552, 21.7984, 1.14", "-3.7388, 83.2339, 22.7878, 1.14", "-3.82964, 83.7738, 23.0172, 0.65", "-4.29287, 85.9975, 23.4402, 0.65", "-4.94572, 88.8622, 24.0974, 0.65", "-5.11057, 89.6363, 24.3129, 0.65", "-5.79887, 92.91, 25.3646, 0.65", "-6.02919, 94.4445, 25.9294, 0.65", "-6.3441, 96.9089, 26.9599, 0.65" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-13.8168, -21.195, 9.9733, 0.81", "-14.581, -23.0464, 11.6362, 0.81", "-15.2204, -24.5952, 13.0275, 0.81", "-16.3464, -27.3231, 15.4777, 0.81", "-16.788, -28.393, 16.4387, 0.81" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-13.8168, -21.195, 9.9733, 0.49", "-12.6532, -22.1618, 10.7425, 0.49", "-9.9637, -23.8306, 11.4751, 0.49", "-8.7129, -24.3721, 11.789, 0.49", "-7.62851, -24.7569, 12.0242, 0.32", "-5.71552, -25.4357, 12.4391, 0.32", "-3.33438, -26.2807, 12.9556, 0.32", "-1.93434, -26.7098, 13.0694, 0.32", "1.15511, -27.4206, 12.9571, 0.32", "3.39085, -27.7511, 12.936, 0.32" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "9.06513, 3.08872, -7.4248, 1.95", "10.3684, 2.26179, -7.13971, 1.95", "11.6731, 1.53565, -6.79828, 1.95", "13.1836, 0.670023, -6.53272, 1.3", "13.8892, 0.247249, -6.44133, 1.3", "14.7052, -0.21787, -6.37488, 1.3", "16.9077, -1.41847, -6.25852, 1.3", "18.5995, -2.40163, -6.24015, 1.3", "20.267, -3.47931, -6.23266, 1.14", "20.9062, -3.97357, -6.23477, 1.14", "23.299, -6.07794, -6.30787, 1.14", "24.8558, -7.50035, -6.41537, 1.14", "26.0518, -8.6999, -6.58186, 1.14", "26.8066, -9.56574, -6.65808, 1.14", "28.5147, -11.648, -6.66308, 1.14", "28.6047, -11.7803, -6.66345, 1.14" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "9.06513, 3.08872, -7.4248, 0.81", "6.01199, 2.26055, -3.327, 0.81", "5.40982, 2.01123, -2.52417, 0.81", "4.75697, 1.67169, -1.66661, 0.81", "4.0963, 1.25162, -0.77468, 0.81", "2.11868, -0.206204, 1.71875, 0.81", "1.77671, -0.483075, 2.10462, 0.81", "0.518839, -1.78862, 3.23152, 0.81", "0.13591, -2.24416, 3.54338, 0.81", "-1.31557, -4.22525, 4.73881, 0.81", "-2.37869, -5.93101, 5.60501, 0.81", "-3.34416, -7.62581, 6.28229, 0.81", "-4.44765, -9.548, 7.12395, 0.81", "-5.2528, -10.9496, 7.73774, 0.81", "-6.86324, -13.5947, 8.93909, 0.81", "-7.81923, -15.0198, 9.54574, 0.81", "-8.58253, -16.0857, 9.9953, 0.81", "-11.6242, -19.8964, 11.7477, 0.81", "-12.2311, -20.5894, 12.0826, 1.3", "-13.2342, -21.6472, 12.5791, 1.3", "-15.306, -23.5151, 13.3347, 0.97", "-17.2205, -25.0358, 13.967, 0.97", "-19.3259, -26.6727, 14.551, 0.97" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "1.01634, -15.4288, -4.4274, 2.11", "2.28005, -18.4641, -3.70491, 2.11", "3.18916, -20.6477, -3.18515, 2.11", "3.75026, -21.9954, -2.86436, 2.11", "4.48475, -23.7595, -2.44444, 1.95", "5.29563, -25.7072, -1.98084, 1.95", "5.9676, -27.3212, -1.59666, 1.95" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.01634, -15.4288, -4.4274, 1.3", "-0.46528, -18.8834, -9.383, 1.3", "-0.987746, -19.857, -10.713, 1.3", "-2.03974, -21.5141, -12.9426, 1.3", "-2.66728, -22.4623, -14.1322, 1.3", "-3.70735, -23.9351, -16.118, 1.3", "-4.15872, -24.5363, -16.915, 1.3", "-5.18316, -25.8021, -18.2507, 1.3", "-5.53576, -26.2283, -18.7185, 1.62", "-6.31205, -27.1425, -19.5664, 1.3", "-8.4623, -29.8271, -21.9314, 1.3", "-9.42856, -31.3888, -23.1221, 1.3", "-9.84277, -32.3239, -23.6514, 1.3", "-10.5478, -34.1962, -24.3303, 1.3", "-11.2629, -35.9301, -24.6599, 1.3", "-12.0441, -37.2571, -24.734, 1.3", "-12.8306, -38.4076, -24.673, 1.3", "-14.8942, -40.856, -24.5526, 1.3", "-16.6031, -42.5477, -24.7599, 1.3", "-18.4308, -44.1012, -25.1845, 1.3", "-21.1618, -46.1729, -26.2353, 1.3", "-22.9549, -47.4573, -26.9619, 1.3", "-25.0985, -48.9801, -27.9333, 1.3", "-30.2039, -52.6612, -30.5866, 1.3", "-31.3732, -53.5438, -31.2065, 1.3", "-33.336, -55.1239, -32.1569, 1.3", "-35.7466, -57.389, -33.0695, 1.3", "-37.0944, -58.8057, -33.2609, 1.3", "-38.1425, -60.1259, -32.8762, 1.3", "-38.8005, -61.0558, -32.3159, 1.3", "-40.0168, -63.0532, -31.0164, 1.3", "-40.7233, -64.4104, -30.1612, 1.3", "-41.443, -65.8724, -29.4013, 1.14", "-42.7525, -68.546, -27.9685, 1.14", "-43.6371, -70.4131, -27.0294, 1.14", "-44.7281, -72.7575, -26.0223, 1.14", "-45.6481, -74.8287, -25.3261, 1.14", "-46.3007, -76.5293, -24.8288, 1.14", "-47.0264, -78.6665, -24.3345, 1.14", "-47.4541, -80.1345, -24.1494, 1.14", "-47.9989, -82.2632, -23.9345, 1.14", "-48.4088, -84.0323, -23.8099, 1.14", "-48.9074, -86.3074, -23.7071, 1.14", "-49.1873, -87.6159, -23.6641, 1.14", "-49.6393, -89.6735, -23.4664, 1.14", "-49.8742, -90.7563, -23.149, 1.14", "-50.2871, -92.561, -22.2597, 1.14", "-50.6545, -94.0002, -21.1854, 1.14", "-50.9245, -95.0299, -20.2336, 1.14", "-51.6215, -97.7492, -17.2862, 1.14", "-52.1827, -99.9959, -14.6874, 1.14", "-52.3937, -100.815, -13.7847, 1.14", "-53.0029, -103.047, -11.4489, 1.14", "-53.2709, -103.885, -10.7003, 1.14", "-54.1563, -106.214, -9.21815, 1.14", "-54.9184, -107.874, -8.6799, 1.14", "-56.1708, -110.341, -8.35082, 1.14", "-56.4108, -110.806, -8.33466, 1.62", "-57.2868, -112.486, -8.25885, 1.62", "-58.0487, -113.986, -8.10201, 1.3", "-58.7201, -115.367, -7.89434, 1.3", "-59.5903, -117.173, -7.39915, 1.3", "-60.8599, -119.869, -6.39755, 1.3", "-62.4451, -123.199, -5.05518, 1.3", "-63.0991, -124.608, -4.46601, 1.3", "-63.5533, -125.547, -4.08005, 1.3", "-64.3453, -127.128, -3.47453, 1.3", "-65.0514, -128.438, -2.89358, 1.14", "-65.9081, -129.999, -2.18932, 1.14", "-66.5948, -131.325, -1.50509, 0.97", "-67.4228, -132.935, -0.474056, 0.97", "-68.078, -134.286, 0.46482, 0.97", "-69.7011, -137.632, 3.02768, 0.97", "-70.3951, -138.977, 4.18673, 0.97", "-71.9107, -141.628, 6.6693, 0.97", "-72.7221, -142.886, 7.92668, 0.97", "-73.5963, -144.147, 9.2221, 0.97", "-74.7178, -145.582, 10.6139, 0.97", "-75.4409, -146.418, 11.1961, 0.97", "-76.4711, -147.464, 11.8869, 0.97", "-77.5437, -148.483, 12.4252, 0.97", "-78.9079, -149.751, 13.1554, 0.97", "-80.0915, -150.798, 13.7747, 0.97", "-82.2844, -152.983, 14.7748, 0.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.53743, 46.1461, 2.63932, 0.558814", "5.93908, 61.0805, 2.63932, 0.558814", "7.34073, 76.0149, 2.63932, 0.558814" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "12.8133, 32.313, 6.43422, 1.3", "15.2264, 33.8695, 1.62539, 1.3", "16.6816, 34.7331, -1.13877, 1.14", "18.1994, 35.6337, -4.02161, 1.14", "20.9597, 37.2717, -9.2647, 1.14", "21.4056, 37.5363, -10.1116, 0.16", "21.9892, 37.8827, -11.2203, 0.16", "22.2799, 38.0517, -11.7141, 0.16" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "12.8133, 32.313, 6.43422, 0.97", "13.4354, 34.2214, 6.14781, 0.97", "14.2861, 36.1573, 5.63501, 0.97", "14.9065, 37.3305, 5.45835, 0.97", "15.3505, 38.0777, 5.40299, 0.97", "16.5452, 40.0884, 5.25401, 0.97", "18.3761, 43.1698, 5.02571, 0.97", "19.4724, 44.8032, 4.79331, 0.97", "21.5604, 47.4767, 4.39579, 0.81", "22.8601, 48.952, 4.20766, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-16.788, -28.393, 16.4387, 0.32", "-15.3973, -28.6888, 15.8429, 0.32", "-13.7263, -29.0441, 15.1268, 0.32", "-10.1167, -29.8117, 13.5801, 0.32", "-7.75352, -30.3142, 12.5675, 0.32", "-6.09042, -30.6678, 11.8549, 0.32" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-16.788, -28.393, 16.4387, 0.49", "-16.4119, -29.1297, 16.104, 0.49", "-15.9976, -29.9414, 15.7351, 0.49", "-14.6467, -32.5877, 14.5326, 0.49", "-14.1141, -33.6312, 14.0584, 0.49" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "28.6047, -11.7803, -6.66345, 1.14", "29.7018, -16.7663, -10.2459, 1.14", "29.8962, -17.7518, -10.8778, 1.14", "30.0832, -18.7492, -11.3943, 0.81", "30.3371, -20.3136, -12.1041, 0.81", "30.6901, -22.323, -12.9482, 0.81", "31.1452, -24.8038, -14.144, 0.81", "31.4496, -26.8835, -14.9579, 0.81", "31.6785, -28.82, -15.8031, 0.81", "31.8366, -30.4111, -16.59, 0.81", "31.9387, -31.5762, -17.2137, 0.81", "32.4266, -34.6157, -18.8877, 0.81", "33.1195, -36.714, -19.9133, 0.81", "33.7007, -37.9228, -20.5119, 0.81", "34.3936, -39.0577, -21.3712, 0.81", "34.9315, -39.8453, -22.0473, 0.81", "36.117, -41.5558, -23.393, 0.81", "37.3253, -43.2014, -24.457, 0.81", "37.9585, -44.0221, -24.9944, 0.81", "40.4456, -47.7087, -27.258, 0.81", "40.8857, -48.6329, -27.8613, 0.81", "41.3865, -50.4626, -29.1384, 0.81", "41.5173, -51.5964, -30.1724, 0.81", "41.5964, -52.4883, -31.0258, 0.81", "41.6732, -53.1297, -31.54, 0.81", "42.0479, -55.7719, -33.2606, 0.81", "42.227, -56.7076, -33.9093, 0.81", "42.8878, -60.2291, -36.3369, 0.81", "43.1795, -61.975, -37.3895, 0.81", "43.4673, -63.7747, -38.2347, 0.81", "43.6575, -64.9898, -38.7134, 0.81", "43.8809, -66.2286, -39.0521, 0.81", "44.2937, -68.1975, -39.48, 0.81", "44.5862, -69.6501, -39.6797, 0.81", "44.904, -71.1911, -40.2138, 0.81", "45.4178, -73.3935, -41.2577, 0.81", "45.8527, -75.1653, -42.1721, 0.81", "46.5471, -77.8695, -43.5897, 0.81", "47.259, -80.2849, -44.8173, 0.81", "49.1625, -85.881, -47.5916, 0.81", "49.9818, -88.1605, -48.6146, 0.81", "50.6937, -90.0408, -49.3303, 0.81", "51.4213, -91.8659, -49.9655, 0.81", "52.4813, -94.3894, -50.704, 0.81", "53.7603, -97.2598, -51.306, 0.81", "55.062, -100.125, -51.5669, 0.81", "56.08, -102.297, -51.7656, 0.81", "56.7611, -103.732, -51.9968, 1.3", "57.5072, -105.388, -52.378, 1.3", "57.7907, -106.116, -52.5906, 0.49", "58.2604, -107.632, -53.0814, 0.49", "58.5359, -108.699, -53.4684, 0.49", "59.3932, -112.65, -54.8426, 0.49", "59.6712, -114.025, -55.2488, 0.49", "60.1743, -116.714, -55.9024, 0.49", "60.4911, -118.307, -56.2011, 0.49", "60.9849, -121.029, -56.5595, 0.49", "61.3727, -123.249, -56.7343, 0.49", "61.9312, -126.237, -56.7151, 0.49", "62.2369, -127.808, -56.7022, 0.49", "62.6376, -129.854, -56.6808, 0.49", "62.9249, -131.329, -56.6613, 0.49" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "28.6047, -11.7803, -6.66345, 0.97", "29.8783, -15.146, -6.92413, 0.97", "30.2711, -16.3913, -6.89436, 0.97", "30.5487, -17.2197, -6.84815, 0.65", "31.1459, -18.7412, -6.74523, 0.65", "31.8824, -20.2264, -6.63952, 0.65", "33.692, -23.2683, -6.41764, 0.65", "34.3373, -24.2106, -6.27297, 1.14", "35.2014, -25.3044, -6.16098, 1.14", "36.6425, -26.7995, -6.11222, 1.14", "38.662, -28.4662, -6.20612, 1.14", "39.8873, -29.2637, -6.3478, 1.14", "40.9273, -29.7922, -6.52584, 1.14", "42.6083, -30.5917, -6.79602, 1.14", "44.3344, -31.4376, -7.15179, 1.14", "45.2356, -31.8809, -7.35465, 1.14", "47.3997, -32.9615, -7.84716, 1.14", "48.9594, -33.7683, -8.1848, 1.14", "50.1085, -34.3636, -8.39585, 1.14", "52.0601, -35.2925, -8.64792, 1.14", "53.8688, -36.1055, -8.93335, 1.14", "54.7349, -36.5081, -9.1023, 1.14" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "5.9676, -27.3212, -1.59666, 1.3", "8.47129, -29.0152, -3.10994, 1.3", "9.7112, -29.8554, -3.66746, 1.3", "10.6214, -30.5201, -4.00309, 1.3", "12.4304, -31.9439, -4.5593, 1.14", "13.3474, -32.7138, -4.80712, 1.14", "14.7102, -33.937, -5.12878, 1.14", "16.1853, -35.4427, -5.28752, 1.14", "17.0742, -36.4985, -5.44611, 1.14", "18.0373, -37.7866, -5.65636, 1.14", "18.5243, -38.4962, -5.78956, 0.97", "19.4777, -39.9527, -6.09142, 0.97", "20.1924, -41.1248, -6.35781, 0.97", "22.0455, -44.3092, -7.42293, 0.97", "23.0077, -45.9736, -8.09297, 0.97", "23.8054, -47.3785, -8.72734, 0.97", "24.9381, -49.3587, -9.68743, 0.97", "25.7351, -50.7425, -10.3923, 0.97", "27.8237, -54.2318, -12.0274, 0.97", "28.9567, -55.9708, -12.6872, 0.97", "29.0427, -56.094, -12.7421, 1.46", "29.5072, -56.7016, -13.021, 1.46", "30.16, -57.423, -13.3843, 1.46", "31.6874, -58.8272, -13.9284, 1.14", "32.6637, -59.6104, -14.1031, 1.14", "34.9228, -61.3108, -14.563, 1.14", "36.4558, -62.5093, -14.8105, 1.14", "37.4521, -63.347, -14.8813, 1.14", "38.9633, -64.7714, -14.8385, 1.14", "39.2403, -65.0743, -14.7992, 1.62", "39.7313, -65.7273, -14.6154, 1.62", "40.7219, -67.2691, -14.0666, 1.3", "41.6334, -68.8385, -13.5548, 1.3", "42.3183, -70.0129, -13.2415, 1.3", "42.932, -70.986, -13.0414, 1.3", "43.5879, -71.9179, -13.0112, 1.3", "44.4101, -73.0455, -13.1559, 1.14", "45.2627, -74.1823, -13.4614, 1.14", "46.3138, -75.519, -13.9091, 1.14", "46.8154, -76.1528, -14.0776, 1.14", "48.5509, -78.2887, -14.5028, 1.14", "49.7028, -79.6579, -14.6705, 1.14", "50.6614, -80.8014, -14.789, 1.14", "51.6109, -81.9964, -14.9183, 1.14", "52.9491, -83.7664, -15.094, 1.14", "53.6555, -84.702, -15.1646, 1.14", "54.7631, -86.0293, -15.1998, 1.14", "56.0332, -87.3484, -15.2993, 1.14", "56.8624, -88.1239, -15.4031, 1.14", "57.6407, -88.7287, -15.523, 1.14", "58.5873, -89.3613, -15.6493, 1.14", "59.276, -89.7867, -15.6792, 1.14", "60.6114, -90.5526, -15.635, 1.14", "62.0855, -91.3736, -15.5034, 1.14", "63.8238, -92.3007, -15.3496, 1.14", "64.9489, -92.9146, -15.2195, 0.97", "66.4412, -93.8119, -15.0181, 0.97", "67.3961, -94.4526, -14.9397, 0.97", "69.0011, -95.6171, -14.8975, 1.3", "70.2183, -96.541, -14.9331, 1.3", "71.8032, -97.7655, -15.0658, 0.97", "73.0513, -98.769, -15.3583, 0.97", "74.9134, -100.285, -15.8855, 0.97", "76.2712, -101.396, -16.3527, 1.46", "77.1621, -102.147, -16.7533, 1.46", "77.969, -102.844, -17.2278, 1.14", "80.1298, -104.735, -18.94, 1.62" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.9676, -27.3212, -1.59666, 1.62", "5.91148, -30.4441, -2.38086, 1.62", "6.02719, -34.3889, -3.06879, 1.62", "6.12973, -36.6675, -3.39223, 1.62", "6.20161, -38.9296, -3.66849, 1.62", "6.2238, -40.5392, -3.91719, 1.62", "6.28818, -43.4312, -4.4102, 1.46", "6.36164, -48.2872, -5.02808, 1.46", "6.37457, -49.584, -5.11936, 1.46", "6.33041, -51.3439, -5.16871, 1.46", "6.12649, -54.9449, -5.12256, 1.46", "5.85777, -58.2923, -5.02797, 1.46", "5.59367, -61.3237, -4.88777, 1.46", "5.403, -63.1067, -4.76886, 1.46", "4.99951, -66.9243, -4.45219, 1.46", "4.67515, -69.6788, -4.16407, 1.46", "4.36362, -71.8436, -3.87331, 1.46", "3.94613, -74.1964, -3.66821, 1.46", "3.77491, -75.2786, -3.658, 1.46", "3.63102, -76.4148, -3.68105, 1.46", "3.56073, -78.2482, -3.79796, 1.46", "3.61887, -79.7161, -3.85099, 1.46", "3.78948, -81.3229, -3.96706, 1.46", "4.04499, -83.0855, -4.14674, 1.46", "4.34897, -84.8057, -4.34729, 1.46", "4.71614, -86.8812, -4.59513, 1.46", "4.8604, -88.1281, -4.74145, 1.46", "4.99802, -91.247, -5.06962, 1.3", "5.01292, -93.2442, -5.24873, 1.3", "4.90712, -95.1457, -5.24738, 1.3", "4.66468, -97.919, -5.0882, 1.3", "4.49393, -100.536, -4.7324, 1.3", "4.41472, -103.638, -4.14604, 1.3", "4.46162, -106.054, -3.58132, 1.3", "4.81711, -111.358, -2.27644, 1.3", "4.94014, -112.58, -1.94766, 1.3", "5.52183, -116.752, -0.70557, 1.3", "5.93709, -118.974, 0.0133392, 1.3", "6.31555, -120.932, 0.702725, 1.3", "6.56556, -122.11, 1.11425, 1.78" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-82.2844, -152.983, 14.7748, 0.49", "-83.847, -154.451, 14.4342, 0.49", "-85.496, -156.001, 14.0749, 0.32", "-86.1812, -156.644, 13.9255, 0.32", "-88.2892, -158.625, 13.4661, 0.32" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-82.2844, -152.983, 14.7748, 0.32", "-82.5727, -153.65, 14.2649, 0.32", "-83.3281, -155.106, 13.2969, 0.32", "-84.9783, -158.286, 11.1823, 0.32", "-85.533, -159.355, 10.4714, 0.32", "-86.243, -160.723, 9.56161, 0.32", "-87.0669, -162.311, 8.50582, 0.32", "-87.4896, -163.088, 7.98872, 0.32" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "22.8601, 48.952, 4.20766, 0.81", "25.4151, 53.1684, 5.71819, 0.81", "25.9146, 54.2679, 5.98586, 0.81", "26.4848, 55.9003, 6.27299, 0.81", "27.1716, 58.3596, 6.59892, 0.81", "27.4318, 59.5664, 6.72409, 0.81", "27.9138, 62.3538, 6.9641, 0.81", "28.1261, 64.8941, 6.9641, 0.81", "28.1807, 67.1634, 6.9641, 0.81", "28.0625, 69.6058, 6.9641, 0.81", "27.7589, 72.0839, 6.9641, 0.81", "27.485, 73.6879, 7.03683, 0.81", "26.9539, 76.4634, 7.26365, 0.81", "26.8795, 76.9865, 7.32163, 0.81", "26.5434, 79.514, 7.65081, 0.81", "26.176, 82.2481, 7.95141, 0.81", "25.6791, 86.158, 8.2688, 0.81", "25.5128, 87.4185, 8.27388, 0.81", "25.1776, 90.2914, 8.23884, 0.81", "24.7979, 93.5406, 8.11839, 0.81", "24.534, 96.1749, 7.87588, 0.81", "24.3809, 97.7071, 7.56815, 0.81", "23.9282, 100.637, 6.41085, 0.81" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "22.8601, 48.952, 4.20766, 0.49", "18.6591, 53.2894, 7.09724, 0.49", "17.6786, 54.3583, 7.60565, 0.49", "16.3646, 55.8824, 8.12032, 0.49", "14.5364, 58.0451, 8.67655, 0.49", "13.5013, 59.265, 8.93115, 0.49", "12.3126, 60.6689, 9.1767, 0.49", "11.1392, 62.075, 9.1767, 0.49", "9.51814, 63.9489, 9.22913, 0.49", "8.1093, 65.4659, 9.30965, 0.49", "6.90057, 66.6997, 9.38947, 0.49", "5.77728, 67.8666, 9.47605, 0.49", "4.39929, 69.1752, 9.59992, 0.49", "3.45608, 70.0209, 9.70596, 0.49", "2.71666, 70.6005, 9.81536, 0.49" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "62.9249, -131.329, -56.6613, 0.81", "63.2795, -132.552, -57.1654, 0.81", "63.9232, -134.83, -58.2983, 0.81", "64.4477, -136.389, -59.0226, 0.81", "65.8046, -139.661, -60.4563, 0.81", "66.5928, -141.211, -61.0982, 0.81", "67.5064, -142.789, -61.8062, 0.65", "69.5286, -145.713, -63.2308, 0.65", "72.0539, -148.669, -64.8082, 0.65", "73.6499, -150.277, -65.8215, 0.65", "75.8428, -152.201, -67.1555, 0.65", "77.8826, -153.81, -68.4569, 0.65", "80.1935, -155.541, -69.8659, 0.65", "82.6144, -157.34, -71.2425, 0.65", "85.4292, -159.487, -72.8265, 0.65", "87.2304, -161.05, -73.7698, 0.65", "88.3752, -162.157, -74.2438, 0.65", "90.8035, -164.74, -74.8751, 0.65", "91.9764, -166.158, -75.1469, 0.65", "93.7774, -168.556, -75.4862, 0.65", "95.0985, -170.456, -75.6716, 0.65", "96.7071, -173.231, -76.0049, 0.65", "97.7688, -175.533, -76.4059, 0.65", "99.1058, -179.392, -77.3596, 0.65", "99.3827, -180.597, -77.803, 0.65", "99.5403, -182.106, -78.4785, 0.65", "99.5583, -184.81, -79.8033, 0.65", "99.3576, -187.187, -81.0027, 0.65", "99.1188, -188.948, -81.8429, 0.65", "98.3238, -194.99, -84.4107, 0.65", "98.0723, -197.2, -85.2955, 0.65", "97.8997, -199.473, -86.107, 0.65", "97.8938, -200.894, -86.5242, 0.65", "98.0241, -204.088, -87.1961, 0.49", "98.172, -206.373, -87.4952, 0.49", "98.3259, -207.754, -87.5048, 0.49", "98.7779, -210.495, -87.5197, 0.49", "99.1589, -212.539, -87.5255, 0.49", "99.2998, -213.591, -87.78, 0.49", "99.3855, -214.896, -88.2376, 0.49", "99.342, -216.256, -88.7658, 0.49", "99.2413, -217.066, -89.0958, 0.49", "98.8026, -219.388, -90.1806, 0.49", "96.8776, -227.521, -94.3664, 0.49", "95.8699, -231.488, -96.5871, 0.49", "95.2048, -233.749, -97.9762, 0.49", "94.6784, -235.384, -99.078, 0.49" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "62.9249, -131.329, -56.6613, 0.49", "62.7624, -134.596, -58.7521, 0.49", "62.6228, -135.941, -59.489, 0.49", "62.342, -138.099, -60.245, 0.49", "61.995, -140.91, -60.7381, 0.49", "61.6699, -143.209, -60.519, 0.49", "61.4165, -144.793, -59.875, 0.49", "61.1867, -145.999, -59.0217, 0.49", "60.5555, -148.749, -56.6528, 0.49", "60.0018, -150.755, -54.5656, 0.32", "58.8829, -154.283, -50.5645, 0.81", "57.9798, -156.848, -47.654, 0.81", "57.518, -158.213, -46.1882, 0.81", "57.1152, -159.375, -45.1089, 0.32", "56.3917, -161.438, -43.6231, 0.32", "55.8103, -163.103, -42.7021, 0.32", "54.9494, -165.984, -41.8274, 0.32", "54.5245, -167.768, -41.4579, 0.32", "53.9691, -170.875, -40.812, 0.32", "53.7691, -172.476, -40.5237, 0.32", "53.6032, -174.376, -40.2725, 0.32", "53.5304, -176.424, -39.9154, 0.32", "53.5184, -178.427, -39.4083, 0.32", "53.4748, -179.041, -39.186, 0.32", "53.4362, -179.553, -38.9115, 0.32" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "54.7349, -36.5081, -9.1023, 0.65", "56.6329, -37.1607, -10.2876, 0.65", "58.2881, -37.7621, -11.549, 0.65", "60.5401, -38.5669, -13.3155, 0.65", "61.8749, -39.0763, -14.3938, 0.65", "66.7918, -41.1028, -18.3693, 0.65", "68.2966, -41.7907, -19.6302, 0.65", "70.449, -42.977, -21.5497, 0.65", "72.5884, -44.2975, -23.6917, 0.65", "73.7445, -45.1179, -24.9442, 0.65", "74.9753, -46.1393, -26.2328, 0.65", "76.1262, -47.2238, -27.2165, 0.65", "77.2261, -48.167, -28.0674, 0.65", "79.5664, -49.9576, -29.608, 0.65", "80.7635, -50.7694, -30.1809, 0.65", "83.3486, -52.1192, -31.0057, 0.65", "85.6406, -53.0492, -31.5534, 0.65", "89.3196, -54.3345, -32.2131, 0.65", "90.9208, -54.8712, -32.4399, 0.65", "96.3003, -56.7386, -32.6646, 0.65", "99.3755, -57.7265, -32.6297, 0.65", "101.667, -58.4312, -32.474, 0.65", "104.424, -59.3157, -32.1966, 0.65", "106.231, -60.0425, -31.9591, 0.65", "108.556, -61.1589, -31.7351, 0.65", "110.418, -62.1628, -31.6706, 0.65", "113.101, -63.7288, -31.3949, 0.65", "114.727, -64.6821, -31.1947, 0.65", "116.384, -65.6069, -31.0323, 0.65", "118.802, -66.9472, -30.9035, 0.65", "120.192, -67.7644, -30.9035, 0.65", "122.006, -68.9438, -30.9035, 0.65", "123.402, -69.9015, -30.9035, 0.65", "124.945, -70.9151, -30.9035, 0.65", "126.469, -71.7922, -30.9035, 0.65", "127.914, -72.5286, -30.9035, 0.65", "129.684, -73.3594, -30.9035, 0.65", "131.043, -74.0008, -30.9207, 0.65", "132.712, -74.7829, -30.976, 0.65", "134.354, -75.4983, -31.1233, 0.65", "135.513, -75.9732, -31.4684, 0.65", "136.841, -76.4542, -31.9598, 0.65", "138.195, -76.9361, -32.4968, 0.65", "141.375, -78.0408, -33.7022, 0.65", "143.591, -78.8308, -34.4556, 0.65", "149.989, -81.1999, -36.2768, 0.65", "152.239, -82.0549, -36.7794, 0.65", "155.521, -83.3289, -37.2937, 0.65", "159.508, -84.8903, -37.6674, 0.65", "163.697, -86.7247, -37.8088, 0.65", "165.682, -87.7259, -37.7438, 0.65", "169.135, -89.7036, -37.4019, 0.65", "173.217, -92.4461, -37.0682, 0.65", "175.331, -94.1054, -36.893, 0.65", "177.553, -96.2514, -36.7184, 0.65", "179.086, -98.023, -36.6594, 0.65", "179.701, -98.8499, -36.6846, 1.14", "180.478, -100.279, -36.7546, 1.14", "180.923, -101.511, -36.8271, 1.14", "181.209, -102.269, -36.9124, 0.65", "181.769, -103.236, -37.0856, 0.65", "182.414, -104.161, -37.2878, 0.65", "183.16, -105.059, -37.8583, 0.65", "184.177, -106.228, -38.8596, 0.65", "185.802, -107.925, -40.4593, 0.65", "187.105, -109.198, -41.7055, 0.65", "187.757, -109.838, -42.3881, 0.16", "191.744, -113.848, -46.9384, 0.16", "193.21, -115.368, -48.6735, 0.16", "194.608, -116.927, -50.3499, 0.16", "194.969, -117.397, -50.7673, 0.16", "196.473, -119.487, -52.2687, 0.16", "197.072, -120.392, -52.6191, 0.16", "197.957, -122.066, -52.5107, 0.16", "198.822, -124.379, -52.214, 0.16", "199.281, -126.161, -51.9455, 0.16", "199.659, -127.91, -51.6659, 0.16", "200.203, -130.531, -51.1137, 0.16", "200.682, -133.064, -50.6359, 0.16", "201.102, -135.913, -50.2322, 0.16", "201.298, -137.602, -50.1397, 0.16", "201.421, -140.276, -50.0158, 0.65" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "54.7349, -36.5081, -9.1023, 0.97", "56.736, -37.484, -7.13488, 0.97", "58.2952, -38.2901, -5.86056, 0.97", "61.0953, -40.022, -3.27276, 0.97", "62.3529, -40.9566, -2.06066, 0.97", "63.0838, -41.6457, -1.21629, 0.65", "64.1916, -42.7412, 0.0847095, 0.65", "64.7504, -43.3925, 0.744256, 0.65", "67.119, -46.5366, 3.62173, 0.81", "67.9225, -47.6585, 4.50412, 0.81", "69.941, -50.9048, 7.13853, 0.81", "70.6206, -52.0673, 8.05515, 0.81", "71.4363, -53.3508, 9.05536, 0.81", "72.1456, -54.2836, 9.77023, 0.81", "72.9728, -55.2129, 10.3884, 0.65", "75.4971, -57.5801, 12.0935, 0.65", "76.8682, -58.7479, 12.9184, 0.65", "78.5214, -60.2349, 14.0363, 0.65", "79.9152, -61.498, 15.0771, 0.65", "80.6609, -62.1762, 15.6992, 0.65", "82.2766, -63.5658, 17.1028, 0.65", "83.233, -64.3212, 17.8808, 0.65", "84.0915, -65.0944, 18.7354, 0.65", "84.7541, -65.8411, 19.551, 0.65", "85.9699, -67.4196, 21.1435, 0.65", "86.7524, -68.3295, 22.2304, 0.65" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "80.1298, -104.735, -18.94, 1.14", "82.7318, -107.224, -18.2822, 1.14", "84.0854, -108.419, -18.0529, 1.14", "85.1111, -109.236, -18.004, 0.97", "86.3909, -110.13, -18.0066, 0.97", "87.2803, -110.756, -17.9975, 0.97", "89.1058, -112.085, -17.9711, 0.97", "90.142, -112.873, -18.0472, 0.97", "92.2334, -114.606, -18.1619, 0.97", "93.3982, -115.743, -18.1978, 0.97", "94.5746, -117.068, -18.1957, 0.97", "95.3291, -118.046, -18.2366, 0.97", "96.3844, -119.699, -18.3565, 0.97", "97.3191, -121.238, -18.6065, 0.97", "98.2001, -122.655, -18.9443, 0.97", "98.9953, -123.885, -19.2532, 0.81", "100.077, -125.427, -19.6581, 0.81", "100.697, -126.334, -19.9605, 0.81", "102.275, -128.672, -20.8361, 0.81", "103.641, -130.609, -21.7347, 0.81", "104.876, -132.339, -22.691, 0.81", "106.0, -133.953, -23.595, 0.81", "107.851, -136.701, -25.2513, 0.81", "108.764, -138.06, -26.1343, 0.81", "110.137, -140.252, -27.6011, 0.81", "111.305, -142.14, -28.9727, 0.81", "112.336, -143.805, -30.2609, 0.81", "113.488, -145.647, -31.5102, 0.81", "114.334, -147.084, -32.334, 0.81", "114.596, -147.639, -32.6075, 1.46", "115.085, -148.971, -33.0828, 1.46", "115.695, -150.944, -33.6531, 1.14", "116.461, -153.633, -34.4085, 0.97", "117.394, -156.822, -35.0889, 0.97", "118.114, -159.114, -35.6219, 0.97", "118.996, -161.467, -36.1824, 0.49", "119.195, -161.901, -36.2927, 0.49", "120.201, -163.76, -36.7736, 0.49", "121.258, -165.417, -37.2788, 0.49", "122.145, -166.461, -37.4747, 0.49", "122.965, -167.265, -37.6391, 0.49", "124.089, -168.282, -37.7086, 0.49", "124.252, -168.439, -37.6957, 0.81", "125.22, -169.395, -37.4752, 0.81", "127.082, -171.371, -36.9406, 0.81", "127.869, -172.294, -36.7255, 0.81", "129.425, -174.251, -36.2422, 0.81", "130.37, -175.498, -35.8983, 0.81", "131.165, -176.546, -35.6099, 0.81", "132.309, -178.066, -35.1873, 0.81", "134.015, -180.264, -34.6601, 0.81" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "80.1298, -104.735, -18.94, 0.81", "80.9992, -107.144, -19.7418, 0.81", "81.7578, -108.767, -20.3658, 0.81", "82.9581, -111.278, -21.2616, 0.81", "83.6961, -112.862, -21.7781, 0.65", "84.5745, -114.725, -22.4792, 0.65", "85.904, -117.261, -23.6051, 0.65", "87.3976, -119.776, -24.8267, 0.65", "89.1979, -122.329, -26.3634, 0.65", "90.2455, -123.597, -27.1388, 0.65", "92.5324, -125.962, -28.6484, 0.65", "94.768, -128.066, -29.9848, 0.65", "95.5911, -128.819, -30.4071, 0.65", "98.3385, -131.085, -31.749, 0.65", "101.009, -133.116, -33.3603, 0.65", "102.605, -134.424, -34.4708, 0.65", "103.507, -135.332, -35.1789, 0.65", "104.532, -136.724, -36.2375, 0.65", "106.904, -140.387, -39.268, 0.65", "108.161, -142.831, -41.4764, 0.65", "108.585, -143.753, -42.4633, 0.65", "108.983, -144.813, -43.7344, 0.65", "109.272, -145.683, -44.8941, 0.65" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "6.56556, -122.11, 1.11425, 1.3", "6.56732, -125.022, 1.90657, 1.3", "6.42372, -126.167, 2.1242, 1.3", "6.04819, -127.76, 2.18385, 1.3", "5.77028, -128.759, 2.13642, 0.97", "5.45361, -129.956, 2.04478, 0.97", "5.07963, -131.443, 1.94444, 0.97", "4.84122, -132.362, 1.83695, 0.97", "4.44296, -134.174, 1.53581, 0.97", "4.12786, -136.253, 1.12143, 0.97", "3.95244, -138.268, 0.518128, 0.97", "3.90763, -139.571, 0.0190066, 0.97", "3.90475, -141.289, -0.802686, 0.97", "3.94335, -143.584, -2.24458, 0.97", "4.01285, -144.509, -2.92537, 0.97", "4.39961, -146.82, -4.93169, 0.97", "4.70267, -147.872, -5.92207, 0.97", "5.60046, -149.901, -7.95351, 0.97", "6.86579, -152.044, -10.0219, 0.97", "7.75399, -153.28, -11.0037, 0.97", "8.9841, -154.82, -11.9992, 0.97", "10.3328, -156.403, -12.7473, 0.97", "12.1375, -158.557, -13.5522, 0.97", "13.6161, -160.36, -13.944, 0.97", "15.4035, -162.738, -14.1561, 0.97", "16.4961, -164.4, -14.2, 0.81", "17.6158, -166.301, -14.1881, 0.81", "18.7139, -168.343, -14.0627, 0.81", "19.8604, -170.655, -13.7011, 0.81", "20.928, -172.906, -13.2294, 0.81", "21.4756, -174.105, -12.9077, 0.81" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "6.56556, -122.11, 1.11425, 0.65", "4.96817, -123.508, 0.836033, 0.65", "3.78508, -124.479, 0.692625, 0.65", "3.0184, -125.093, 0.623619, 0.81", "1.87443, -126.054, 0.537461, 0.81", "0.88377, -126.894, 0.474337, 0.81", "0.265694, -127.423, 0.46671, 0.81", "-1.41364, -129.075, 0.628214, 0.81", "-2.38579, -130.204, 0.772876, 0.81", "-3.00599, -130.971, 0.8855, 0.81", "-3.67645, -131.816, 1.01797, 0.81", "-4.4636, -132.79, 1.16111, 0.81", "-5.60863, -134.365, 1.35065, 0.81", "-6.43586, -135.658, 1.47814, 0.81", "-7.38691, -137.285, 1.60211, 0.81", "-8.14982, -138.721, 1.67897, 0.81", "-9.29729, -141.096, 1.5897, 0.81", "-10.3029, -143.618, 1.27479, 0.81", "-10.542, -144.543, 1.10918, 0.81", "-10.5862, -146.141, 0.751672, 0.81", "-10.3364, -147.392, 0.346472, 0.81", "-9.40503, -150.062, -0.696538, 0.81", "-8.38713, -152.244, -1.7413, 0.81", "-7.44161, -154.126, -2.77029, 0.81", "-6.66173, -155.908, -3.77021, 0.81", "-5.83524, -158.254, -4.99393, 0.81", "-5.67985, -159.114, -5.35332, 0.49", "-5.81795, -160.351, -5.49702, 0.49", "-6.57224, -161.466, -5.11599, 0.49", "-7.57809, -162.623, -4.33138, 0.49", "-8.88441, -164.075, -2.83824, 0.49", "-9.35017, -164.653, -2.10572, 0.49", "-10.4728, -166.432, 0.292611, 0.49", "-10.8093, -167.187, 1.45086, 0.49", "-11.0126, -167.911, 2.57984, 0.49", "-11.1563, -169.15, 4.33374, 0.49", "-11.1683, -169.707, 5.00287, 0.49", "-11.176, -170.282, 5.57946, 0.49", "-11.2169, -172.176, 7.00041, 0.49", "-11.1795, -173.703, 7.9905, 0.49", "-11.1493, -174.852, 8.59721, 0.49", "-11.0948, -176.627, 9.32799, 0.49", "-11.0004, -178.338, 9.94676, 0.49", "-10.9393, -179.32, 10.2518, 0.16", "-10.7666, -180.902, 10.5691, 0.16", "-10.5889, -181.703, 10.7248, 0.16", "-10.4157, -182.248, 10.8013, 0.16", "-9.9907, -183.147, 10.7874, 0.16" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "23.9282, 100.637, 6.41085, 0.81", "25.7628, 103.964, 5.44886, 0.81", "26.4786, 105.245, 4.76311, 0.65", "27.2757, 106.635, 3.89929, 0.65", "28.3975, 108.32, 2.58551, 0.65", "29.1903, 109.384, 1.65227, 0.65", "29.7244, 110.077, 0.968391, 0.49", "31.901, 112.907, -2.15286, 0.49", "32.1959, 113.27, -2.66568, 0.49", "33.3076, 114.67, -4.83924, 0.49", "33.7592, 115.325, -5.85062, 0.49", "34.8427, 117.187, -8.49246, 0.49", "35.5496, 118.667, -10.259, 0.49", "36.2087, 120.5, -11.8127, 0.49", "36.6021, 122.324, -12.9361, 0.49", "36.6953, 123.887, -13.448, 0.49", "36.6745, 125.367, -13.6841, 0.49", "36.5583, 127.448, -13.7499, 0.49", "36.3528, 130.369, -13.7851, 0.49", "36.1592, 132.629, -13.8663, 0.49", "35.739, 136.853, -14.208, 0.49", "35.5452, 139.109, -14.4736, 0.49", "35.463, 140.407, -14.6278, 0.49", "35.3511, 143.673, -15.0064, 0.49", "35.4108, 145.857, -15.4381, 0.49", "35.556, 147.26, -15.7669, 0.49", "35.9228, 149.332, -16.1249, 0.49", "36.4769, 151.954, -16.2846, 0.49", "36.8293, 153.449, -16.1784, 0.49", "37.6807, 156.669, -15.5034, 0.49", "37.99, 157.864, -15.1892, 0.49", "39.0092, 162.125, -14.3201, 0.49", "39.3303, 163.602, -14.0293, 0.49", "39.3589, 163.773, -14.004, 0.16", "39.532, 165.425, -13.6511, 0.16", "39.6169, 167.146, -13.0657, 0.16", "39.5814, 170.559, -12.6695, 0.16" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "23.9282, 100.637, 6.41085, 0.49", "23.5427, 101.672, 6.84089, 0.49", "22.8524, 103.525, 7.61097, 0.49", "22.1743, 105.346, 8.36752, 0.49", "21.4862, 107.193, 9.13513, 0.49", "20.4828, 109.887, 10.2545, 1.14", "19.3467, 112.937, 11.5219, 1.14" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "2.71666, 70.6005, 9.81536, 0.16", "2.66132, 70.9257, 9.82224, 0.16", "2.57446, 71.4362, 9.83305, 0.16", "2.37581, 72.6036, 9.85778, 0.16", "2.13205, 74.0361, 9.88812, 0.16", "1.99653, 74.8325, 9.90498, 0.16" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "2.71666, 70.6005, 9.81536, 0.65", "2.03149, 71.4394, 9.10567, 0.65", "1.37931, 72.8596, 7.93901, 0.65", "0.974692, 73.7842, 7.35189, 0.49", "0.516423, 74.8706, 6.78137, 0.49", "-0.052054, 76.1245, 6.242, 0.49", "-1.41868, 79.0707, 5.17024, 0.49", "-2.17189, 80.8178, 4.63604, 0.49", "-3.19609, 83.4321, 3.94104, 0.49", "-3.76985, 84.8283, 3.63574, 0.49", "-4.86384, 87.0943, 3.26912, 0.49", "-5.72534, 88.6066, 3.13592, 0.49", "-5.93535, 88.9671, 3.13592, 0.49", "-6.95003, 90.7547, 3.13592, 0.49", "-7.72604, 92.3264, 3.13592, 0.49", "-8.52008, 94.0277, 2.89133, 0.49", "-9.35993, 95.8986, 2.37904, 0.49", "-10.2023, 97.7072, 1.68751, 0.49", "-11.0635, 99.3222, 0.942677, 0.49", "-11.7927, 100.576, 0.132409, 0.49", "-13.8874, 104.289, -2.71798, 0.49", "-14.3623, 105.198, -3.45601, 0.49", "-14.9416, 106.301, -4.37259, 0.49", "-15.9508, 107.866, -5.90992, 0.49", "-17.2945, 109.688, -7.83497, 0.49", "-17.9831, 110.557, -8.77483, 0.49", "-19.1374, 111.955, -9.92017, 0.49", "-19.7821, 112.656, -10.4437, 0.49", "-22.3662, 115.089, -12.287, 0.49", "-23.2488, 115.861, -12.8575, 0.49", "-25.5045, 117.689, -14.0734, 0.49", "-28.2748, 119.91, -15.7389, 0.49", "-29.6343, 121.14, -16.6359, 0.49", "-31.6658, 123.39, -18.1035, 0.49", "-32.4791, 124.627, -18.7326, 0.49", "-33.085, 125.859, -19.445, 0.49", "-34.0405, 128.407, -20.9161, 0.49", "-34.721, 130.475, -22.066, 0.49", "-34.9876, 131.336, -22.4414, 0.49", "-35.5878, 133.138, -23.0243, 0.32", "-36.8254, 136.638, -23.9342, 0.32", "-38.0745, 139.76, -24.6029, 0.32", "-39.6921, 143.298, -25.1467, 0.32", "-41.2403, 146.301, -25.5408, 0.32", "-42.3517, 148.316, -25.7361, 0.32", "-43.6398, 150.57, -25.8845, 0.32", "-44.3767, 151.875, -25.8679, 0.32", "-45.5957, 153.997, -25.8357, 0.32", "-46.3932, 155.304, -25.8087, 0.32", "-47.8406, 157.391, -25.7508, 0.32" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "134.015, -180.264, -34.6601, 0.49", "133.314, -181.341, -35.1781, 0.49", "132.613, -182.418, -35.6966, 0.97", "132.285, -182.923, -35.9398, 0.97" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "134.015, -180.264, -34.6601, 0.32", "135.295, -180.694, -43.5901, 0.32" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "21.4756, -174.105, -12.9077, 0.81", "21.8436, -175.977, -13.0478, 0.81", "21.9865, -177.119, -13.1095, 0.81", "22.1186, -179.224, -13.0095, 0.81", "22.1747, -180.37, -12.8983, 0.81", "22.2647, -182.33, -12.6659, 0.97", "22.3354, -183.47, -12.5213, 0.97", "22.5174, -185.92, -12.1236, 0.97", "22.8749, -188.357, -11.7171, 0.97", "23.3347, -190.34, -11.4573, 0.97", "23.6693, -191.274, -11.3779, 0.97", "24.3901, -192.779, -11.325, 0.97", "25.5371, -194.726, -11.3601, 0.97", "26.8918, -196.789, -11.5092, 0.97", "28.1194, -198.661, -11.7383, 0.97", "29.1651, -200.421, -11.9474, 0.97", "29.7846, -201.606, -12.1404, 0.97", "30.5282, -203.457, -12.501, 0.97", "31.0974, -205.46, -12.9266, 0.97", "31.3071, -206.726, -13.1897, 0.97", "31.4529, -208.448, -13.4963, 0.97", "31.6242, -210.79, -13.9266, 0.97", "31.8908, -213.019, -14.3259, 0.97", "32.133, -214.291, -14.5395, 0.97", "32.5633, -215.696, -14.8102, 0.97", "33.5863, -218.565, -15.3592, 0.97", "34.1654, -220.085, -15.6194, 0.97", "34.7472, -221.803, -15.9225, 0.97", "35.1216, -223.118, -16.2172, 0.97", "35.6743, -225.709, -16.859, 0.97", "36.0151, -227.941, -17.4371, 0.81", "36.195, -229.664, -17.8884, 0.81", "36.337, -232.589, -18.5773, 0.81", "36.3703, -234.511, -18.9615, 0.81", "36.3969, -236.111, -19.2098, 0.81", "36.4666, -237.74, -19.3676, 0.81", "36.6087, -238.896, -19.4515, 0.81", "36.9903, -241.164, -19.5571, 0.81", "37.3987, -243.247, -19.6824, 0.81", "37.6881, -244.906, -19.8495, 0.81", "37.9579, -246.688, -20.1, 0.81", "38.2286, -248.701, -20.5417, 0.81", "38.3989, -250.156, -20.9031, 0.81", "38.7467, -253.479, -21.8774, 0.81", "38.9259, -255.56, -22.592, 0.81", "38.9932, -256.87, -23.1106, 0.81", "39.0164, -259.458, -24.2966, 0.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "21.4756, -174.105, -12.9077, 0.16", "23.4756, -174.255, -10.0177, 0.16" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "19.3467, 112.937, 11.5219, 0.81", "19.794, 115.776, 14.6306, 0.81", "19.7957, 117.076, 15.7607, 0.81", "19.5195, 118.72, 16.7827, 0.65", "19.3005, 120.022, 17.5929, 0.65", "19.1395, 120.98, 18.1889, 0.65", "18.8928, 122.448, 19.1016, 0.65", "18.3582, 123.632, 19.2476, 0.65", "17.6267, 124.722, 19.2435, 0.65" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "19.3467, 112.937, 11.5219, 0.49", "20.0139, 115.703, 10.9693, 0.49", "20.6112, 117.579, 10.9714, 0.49", "21.1792, 119.656, 11.1851, 0.49", "21.4636, 121.302, 11.6897, 0.49", "21.6479, 122.921, 12.3163, 0.49", "21.7778, 124.682, 13.03, 0.49", "22.0167, 126.869, 14.2726, 0.49", "22.2729, 128.718, 15.4514, 0.49", "22.5897, 131.869, 17.4785, 0.49", "22.5543, 133.389, 18.4386, 0.49", "22.3204, 134.773, 19.2853, 0.49", "21.6002, 137.199, 20.733, 0.49", "21.0732, 138.836, 21.5444, 0.49", "20.5197, 140.419, 22.2853, 0.49", "18.6164, 142.413, 22.4928, 0.49", "16.3892, 142.772, 22.1944, 0.16", "14.7462, 142.87, 21.9137, 0.16" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-47.8406, 157.391, -25.7508, 0.32", "-47.7093, 159.111, -26.3631, 0.32", "-47.8211, 160.026, -26.7596, 0.32", "-48.1456, 161.125, -27.2263, 0.32", "-48.8459, 162.854, -27.9158, 0.32", "-49.4996, 164.356, -28.4708, 0.32", "-51.143, 168.063, -29.7251, 0.32", "-52.0286, 169.868, -30.1982, 0.32", "-53.1528, 172.001, -30.5815, 0.81", "-53.907, 173.404, -30.7172, 0.32", "-54.4397, 174.424, -30.708, 0.97", "-55.027, 175.794, -30.5023, 0.32", "-56.0182, 178.894, -29.48, 0.97", "-56.0855, 179.206, -29.3698, 0.16", "-56.2984, 180.734, -28.8454, 0.16", "-56.4594, 182.046, -28.4278, 0.65", "-56.4633, 182.075, -28.4204, 0.16", "-56.5732, 183.039, -28.2859, 0.16", "-56.6659, 183.938, -28.1158, 0.16", "-56.7668, 185.33, -27.5745, 0.81", "-56.7757, 185.53, -27.4701, 0.16", "-56.8036, 186.241, -27.0739, 0.16", "-56.8642, 187.426, -26.4485, 1.14", "-57.1334, 191.256, -25.489, 0.16", "-57.2329, 191.733, -25.919, 0.16", "-57.5484, 193.223, -27.428, 0.81", "-57.675, 193.951, -28.195, 0.16", "-57.7557, 194.748, -29.0649, 0.16", "-57.8557, 201.247, -35.9998, 0.16", "-57.7157, 202.666, -37.4339, 0.16", "-57.4131, 204.469, -39.0869, 0.16", "-57.2004, 205.43, -39.8487, 0.16", "-56.6825, 207.272, -40.9016, 0.16", "-55.7785, 209.873, -41.567, 0.16", "-54.9196, 212.125, -41.4222, 0.97", "-53.7937, 214.96, -41.2836, 0.16", "-53.2554, 216.562, -41.2622, 0.16", "-52.7821, 218.701, -41.3279, 0.16", "-52.6325, 220.093, -41.4436, 0.16", "-52.5947, 221.104, -41.6021, 0.81", "-52.49, 223.526, -41.948, 0.16", "-52.3208, 225.145, -42.1324, 0.16", "-52.2106, 226.271, -42.3538, 0.16", "-52.1558, 227.389, -42.6821, 0.16", "-52.156, 227.599, -42.744, 0.16", "-52.1399, 229.527, -43.2116, 0.16" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-47.8406, 157.391, -25.7508, 0.16", "-50.3465, 158.008, -26.2903, 0.16", "-51.4489, 158.286, -26.5425, 0.32", "-53.3164, 158.703, -26.9502, 0.32", "-55.4708, 159.219, -27.3912, 0.32", "-58.4197, 159.964, -28.1847, 0.32", "-59.9598, 160.394, -28.5215, 0.81", "-60.762, 160.66, -28.7319, 0.32", "-62.2938, 161.198, -29.0926, 0.32", "-63.7863, 161.715, -29.3782, 0.32", "-66.1198, 162.444, -29.6263, 0.32", "-69.5561, 163.436, -29.9363, 0.97", "-70.8418, 163.83, -30.1747, 0.16", "-71.9099, 164.17, -30.4376, 0.16", "-73.3284, 164.606, -30.8503, 0.16", "-73.8442, 164.73, -31.0162, 0.16", "-76.513, 165.21, -31.8451, 0.49", "-77.5241, 165.338, -32.2221, 0.49", "-78.4468, 165.399, -32.5886, 0.49", "-79.5341, 165.41, -33.0398, 0.32", "-81.9348, 165.281, -34.0262, 0.32", "-83.1645, 165.167, -34.5002, 0.32", "-84.3882, 165.002, -34.9066, 0.97", "-87.4289, 164.378, -35.9697, 0.16", "-88.6537, 164.038, -36.3907, 0.16", "-89.3557, 163.773, -36.6898, 0.16", "-89.5426, 163.67, -36.7849, 0.32", "-89.8821, 163.443, -36.9797, 0.32", "-90.9363, 162.554, -37.5785, 0.32", "-91.7536, 161.736, -37.9907, 0.32", "-93.9233, 159.178, -39.1514, 0.65", "-94.8689, 157.963, -39.612, 0.16", "-95.4221, 157.233, -39.8304, 0.16", "-96.0678, 156.427, -40.1415, 0.16", "-96.2101, 156.267, -40.2134, 0.65", "-97.1008, 155.349, -40.6173, 0.65", "-97.9707, 154.508, -40.8902, 0.65", "-99.008, 153.662, -41.2623, 0.16", "-101.323, 151.892, -42.2831, 0.16", "-102.652, 150.991, -42.9861, 0.16", "-103.726, 150.349, -43.6102, 0.16" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "132.285, -182.923, -35.9398, 0.65", "132.065, -184.51, -35.787, 0.65", "131.907, -186.227, -35.4314, 0.65", "131.88, -187.658, -35.0991, 0.65", "131.908, -188.46, -34.9073, 0.65", "132.088, -190.043, -34.5277, 0.65", "132.59, -192.571, -33.9376, 0.65", "133.546, -195.264, -33.1222, 0.65", "134.328, -196.691, -32.5364, 0.65", "134.797, -197.297, -32.224, 0.65", "135.987, -198.483, -31.4407, 0.65", "137.187, -199.469, -30.6815, 0.32", "139.815, -201.329, -29.1677, 0.32", "140.461, -201.739, -28.852, 0.32", "141.925, -202.627, -28.0428, 0.32", "143.775, -203.848, -26.9532, 0.32", "144.848, -204.691, -26.2172, 0.32", "145.893, -205.65, -25.4635, 0.32", "147.355, -207.106, -24.5159, 0.97", "149.102, -208.81, -23.4201, 0.65", "150.391, -210.064, -22.5961, 0.65", "153.199, -212.952, -20.8349, 0.65", "154.112, -214.004, -20.2599, 0.65", "156.226, -216.785, -18.9335, 0.65", "157.075, -218.076, -18.4469, 0.65", "158.188, -219.985, -17.9053, 0.65", "159.212, -222.022, -17.5759, 0.49", "160.377, -224.879, -17.4975, 0.49", "160.606, -225.507, -17.5182, 0.49", "161.326, -227.796, -17.7123, 0.49", "162.301, -230.661, -17.8309, 0.49", "163.824, -234.593, -17.8516, 0.49", "164.583, -236.329, -17.8579, 0.49", "165.808, -238.928, -17.8546, 0.49", "166.743, -240.822, -17.8385, 0.49", "168.796, -244.964, -17.7467, 0.49", "169.677, -246.826, -17.6666, 0.49", "171.052, -250.166, -17.3159, 0.49", "171.626, -252.061, -17.1883, 0.49", "171.879, -253.221, -17.1749, 0.65", "172.086, -254.656, -17.2747, 0.65", "172.318, -256.597, -17.5943, 0.65", "172.581, -258.157, -17.8207, 0.65", "172.669, -258.513, -17.8337, 0.49", "173.377, -260.542, -18.0807, 0.49", "173.901, -261.737, -18.2907, 0.49", "175.28, -264.223, -18.8152, 0.49", "176.534, -266.251, -19.277, 0.32", "177.393, -267.624, -19.6012, 0.32", "179.084, -270.604, -20.0743, 0.32", "179.677, -271.768, -20.165, 0.32", "180.44, -273.249, -20.2838, 0.32", "181.082, -274.598, -20.3748, 0.81", "181.53, -275.525, -20.4165, 0.81", "182.915, -278.525, -20.5952, 0.49", "183.645, -280.085, -20.5602, 0.49", "185.04, -283.063, -20.5824, 0.16", "185.724, -284.619, -20.6808, 0.16", "186.085, -285.363, -20.8125, 0.16", "186.745, -286.603, -21.2728, 0.16" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "132.285, -182.923, -35.9398, 0.16", "132.914, -185.085, -36.5701, 0.16", "133.685, -187.385, -37.627, 0.32", "134.125, -188.649, -38.2311, 0.32", "134.772, -190.193, -38.946, 0.32", "135.333, -191.493, -39.762, 0.32", "136.394, -194.05, -41.5348, 0.32", "137.747, -197.249, -43.9468, 0.32", "138.23, -198.428, -44.8228, 0.32", "138.995, -200.407, -46.3534, 0.32", "140.589, -204.966, -49.8324, 0.32", "140.873, -205.829, -50.4445, 0.32", "141.404, -207.239, -51.3407, 0.32", "142.202, -209.108, -52.1522, 0.32", "143.021, -210.65, -52.6615, 0.32", "144.222, -212.343, -53.0488, 0.32", "145.619, -213.755, -53.1417, 0.32", "147.59, -215.357, -53.2503, 0.32", "149.301, -216.512, -53.2886, 0.65", "150.57, -217.234, -53.2919, 0.65", "153.321, -218.597, -53.2645, 0.49", "157.184, -220.417, -53.0277, 0.49", "159.384, -221.528, -52.7905, 0.49", "161.713, -222.851, -52.4263, 0.49", "163.102, -223.776, -52.1426, 0.97", "164.326, -224.785, -51.6696, 0.97", "166.374, -226.86, -50.4987, 0.65", "167.524, -228.317, -49.6152, 0.65", "168.76, -230.098, -48.5037, 0.32", "169.683, -231.612, -47.5612, 0.32", "172.141, -235.973, -44.7654, 0.32", "173.808, -239.035, -42.7527, 0.32", "174.763, -240.633, -41.6759, 0.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "39.0164, -259.458, -24.2966, 0.81", "42.0485, -263.018, -21.2318, 0.81", "43.7543, -264.934, -19.8992, 0.81", "44.9658, -266.254, -19.1494, 0.65", "46.831, -268.219, -18.2836, 0.65", "47.2365, -268.621, -18.1323, 0.97", "48.3152, -269.612, -17.864, 0.97", "49.8528, -270.953, -17.8968, 0.97", "51.0965, -271.967, -17.9332, 0.97", "53.3745, -273.715, -18.043, 0.81", "54.4255, -274.496, -18.0633, 0.81", "56.4252, -276.074, -17.9596, 0.81", "57.4336, -277.0, -17.7903, 0.81", "59.3275, -279.178, -17.1865, 0.81", "59.6824, -279.673, -16.9596, 0.81", "60.172, -280.451, -16.6162, 0.81", "60.9205, -281.665, -16.1183, 0.81", "62.4739, -284.127, -15.2773, 0.81", "63.2975, -285.33, -15.0194, 0.65", "64.9303, -287.452, -14.9871, 0.65", "67.2553, -290.061, -15.2573, 0.65", "67.9491, -290.742, -15.334, 0.65", "70.1462, -292.747, -15.5382, 0.65", "70.5887, -293.128, -15.4936, 0.65", "72.1935, -294.378, -15.2, 0.65", "74.0052, -295.766, -14.762, 0.65", "76.4183, -297.607, -13.8985, 0.65", "77.8109, -298.708, -13.3902, 0.65", "80.3324, -300.746, -12.4923, 0.65", "82.8029, -302.923, -11.6907, 0.65", "83.6147, -303.7, -11.3739, 0.65", "85.0488, -305.122, -10.8636, 0.65", "86.2808, -306.316, -10.5421, 0.65", "88.1296, -307.991, -10.0882, 0.65", "89.7831, -309.41, -9.70611, 0.65", "91.7246, -311.144, -8.86658, 0.65", "92.8968, -312.138, -8.26334, 0.65", "93.6013, -312.672, -7.84029, 0.65", "95.2669, -313.793, -6.86338, 0.65", "96.7436, -314.655, -6.06302, 0.65", "99.2634, -316.035, -4.94217, 0.65", "100.539, -316.778, -4.565, 0.65", "102.637, -318.083, -4.09538, 0.65", "104.374, -319.243, -3.87024, 0.65", "105.595, -320.061, -3.85805, 0.65", "106.842, -320.882, -3.96282, 0.65", "108.854, -322.189, -4.2836, 0.65", "109.794, -322.863, -4.42951, 0.49", "110.997, -323.795, -4.60089, 0.49", "112.377, -324.861, -4.69928, 0.49", "113.598, -325.79, -4.77604, 0.49", "114.826, -326.631, -4.83566, 0.49", "116.013, -327.369, -4.81185, 0.49", "116.94, -327.93, -4.72424, 0.65", "118.092, -328.593, -4.56481, 0.65", "118.769, -329.02, -4.43972, 0.65", "119.419, -329.482, -4.29457, 0.49", "120.762, -330.444, -3.94535, 0.49", "121.929, -331.313, -3.59579, 0.49", "122.791, -332.055, -3.2971, 0.49", "123.662, -332.971, -2.95376, 0.49", "124.412, -333.908, -2.65366, 0.49" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "39.0164, -259.458, -24.2966, 0.32", "39.7471, -260.705, -24.3097, 0.32", "40.3752, -261.944, -24.4714, 0.32", "41.0772, -263.522, -24.7574, 0.49", "41.3931, -264.495, -25.1261, 0.49", "41.7549, -265.876, -25.7021, 0.49", "42.5507, -268.833, -26.9172, 0.49", "42.8145, -269.791, -27.3563, 0.49", "43.0283, -270.533, -27.7673, 0.49", "44.0438, -273.607, -29.5943, 0.49", "44.9448, -276.31, -31.1347, 0.49", "45.4137, -277.676, -31.8503, 0.81", "45.8335, -278.914, -32.3231, 0.81", "46.7934, -281.76, -33.1733, 0.65", "47.7073, -284.594, -33.7826, 0.65", "48.1147, -285.999, -33.9913, 0.65", "48.4433, -287.419, -34.1847, 0.49", "49.0176, -290.702, -34.5395, 0.32", "49.1681, -292.161, -34.6271, 0.32", "49.2101, -293.344, -34.6066, 0.32", "49.084, -295.259, -34.6123, 0.32", "48.9406, -296.542, -34.8407, 0.32", "48.9406, -296.542, -34.8407, 0.65", "48.6443, -298.173, -35.7635, 0.65", "48.4838, -298.978, -36.2346, 0.65", "48.1947, -300.575, -37.1558, 0.49", "47.8148, -303.782, -39.5525, 0.49", "47.7427, -305.034, -40.5431, 0.49", "47.7814, -307.32, -42.3962, 0.49", "48.017, -308.81, -43.7227, 0.49", "48.2737, -309.822, -44.6452, 0.49", "50.2394, -314.753, -49.1369, 0.49", "51.345, -316.904, -50.973, 0.81", "51.7058, -317.562, -51.5501, 0.81", "53.227, -320.189, -53.7969, 0.49", "53.7464, -321.192, -54.6067, 0.49", "54.4799, -322.996, -55.6845, 0.49", "54.7016, -323.767, -55.9164, 0.49", "55.3822, -326.814, -56.7312, 0.49", "55.5238, -327.767, -56.9114, 0.49", "55.6297, -329.552, -56.9831, 0.49", "55.7568, -332.451, -56.9422, 0.49", "55.7233, -333.921, -56.775, 0.32", "55.7781, -335.244, -56.4166, 0.32" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "124.412, -333.908, -2.65366, 0.49", "123.611, -335.083, -2.54435, 0.49", "123.098, -335.834, -2.47444, 0.49", "122.401, -336.856, -2.37935, 0.49" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "124.412, -333.908, -2.65366, 0.49", "125.064, -334.23, -2.71079, 0.49", "126.224, -334.897, -2.79367, 0.49", "127.109, -335.481, -2.84824, 0.49", "128.297, -336.343, -2.78507, 0.49", "129.367, -337.095, -2.68139, 0.49", "130.218, -337.696, -2.5791, 0.49", "131.492, -338.665, -2.37754, 0.49", "132.315, -339.36, -2.1796, 0.49", "134.56, -341.367, -1.51137, 0.49", "135.177, -341.949, -1.27733, 0.49", "136.064, -342.782, -0.909038, 0.49", "137.023, -343.695, -0.484252, 0.49", "139.094, -345.706, 0.455419, 0.49", "139.636, -346.243, 0.739236, 0.49", "140.664, -347.404, 1.3334, 0.49", "141.844, -348.794, 2.05726, 0.32", "141.844, -348.794, 2.05726, 0.16", "142.455, -349.505, 2.50452, 0.16", "143.745, -351.196, 3.57934, 0.16", "144.838, -352.723, 4.5945, 0.16" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "55.7781, -335.244, -56.4166, 0.32", "58.5381, -333.454, -56.4166, 0.32" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "55.7781, -335.244, -56.4166, 0.32", "55.9148, -336.483, -56.3767, 0.32", "56.0026, -337.458, -56.3524, 0.49", "56.077, -338.538, -56.179, 0.97", "56.2543, -340.594, -55.7415, 0.97", "56.3689, -341.541, -55.5176, 0.97", "56.4984, -342.476, -55.2913, 0.65", "56.7079, -343.888, -54.94, 0.65", "57.2363, -346.988, -54.159, 0.97", "57.4028, -347.762, -53.9704, 0.49", "57.6502, -348.665, -53.8296, 0.65", "58.0275, -349.908, -53.7663, 0.65", "58.5318, -351.63, -53.8585, 0.65", "58.9076, -353.115, -54.02, 1.14", "59.2284, -354.784, -54.3015, 1.14", "59.5558, -357.367, -54.6394, 0.65", "59.667, -358.813, -54.8086, 0.65", "59.7131, -360.403, -54.9609, 0.65", "59.6812, -362.365, -55.0927, 0.65", "59.5776, -363.83, -55.1469, 0.65", "59.3689, -365.811, -55.1614, 0.65", "59.2237, -367.125, -55.1705, 0.97", "59.107, -368.972, -55.3196, 0.97", "59.0971, -370.112, -55.4889, 0.65", "59.1462, -371.78, -55.8243, 0.65", "59.2232, -372.754, -56.0199, 0.65", "59.4645, -374.296, -56.3102, 0.65", "59.9554, -376.608, -56.6895, 0.65", "60.3915, -378.498, -56.9691, 0.65", "60.7487, -380.247, -57.1757, 0.65", "61.0782, -382.05, -57.3232, 0.65", "61.3531, -383.748, -57.4985, 0.65", "61.4705, -384.654, -57.5986, 0.65", "61.6289, -386.511, -57.903, 0.65", "61.754, -388.357, -58.043, 1.14", "61.787, -389.334, -58.1227, 1.14", "61.7935, -391.937, -58.3192, 0.81", "61.8052, -393.234, -58.4057, 0.81", "61.85, -394.418, -58.4709, 0.81", "61.9671, -398.868, -58.6476, 0.81", "62.0011, -402.264, -58.7117, 0.65", "61.9016, -404.87, -58.8135, 0.65", "61.8312, -405.85, -58.857, 0.49", "61.7719, -407.026, -58.9785, 0.49", "61.6612, -408.629, -59.2425, 0.49", "61.5573, -410.161, -59.6853, 0.49", "61.4057, -412.878, -60.2285, 0.49", "61.3002, -414.399, -60.5033, 0.49", "61.164, -416.15, -60.9443, 1.14", "60.9911, -418.575, -61.6638, 1.14", "60.8869, -420.787, -62.3692, 0.97", "60.7335, -423.433, -63.2212, 0.65", "60.636, -425.25, -63.7705, 0.65", "60.4118, -428.874, -64.9179, 0.32", "60.3356, -430.28, -65.3014, 0.32", "60.3621, -431.558, -65.5777, 0.65", "60.4087, -432.699, -65.7353, 0.65", "60.4397, -433.364, -65.8215, 0.49", "60.5396, -435.365, -65.8467, 0.49", "60.5464, -437.131, -65.6491, 0.49", "60.4541, -438.429, -65.5025, 0.49", "60.2681, -439.709, -65.368, 0.49", "60.0534, -440.83, -65.267, 0.49", "59.8286, -441.836, -65.2585, 0.49", "59.5409, -442.893, -65.2835, 0.49", "59.121, -444.278, -65.4088, 0.49", "58.7157, -445.516, -65.5455, 0.49", "58.2682, -446.903, -65.7339, 0.49", "57.6913, -449.032, -66.0879, 0.81" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "57.6913, -449.032, -66.0879, 0.49", "58.7726, -452.086, -67.2563, 0.49", "59.3774, -453.912, -67.841, 0.49", "60.1951, -456.591, -68.5371, 0.97", "60.5882, -458.028, -68.8595, 0.65", "60.8671, -459.239, -69.0905, 0.65", "61.1097, -460.508, -69.442, 0.65", "61.302, -462.07, -69.8682, 0.65", "61.4276, -463.933, -70.5215, 0.65", "61.391, -464.751, -70.8281, 0.65", "61.1595, -466.453, -71.4237, 0.65", "60.3293, -470.356, -72.7984, 0.65", "60.0706, -471.414, -73.1714, 0.65", "59.7379, -472.8, -73.6348, 1.14", "59.3667, -474.464, -74.1072, 0.65", "59.1905, -475.896, -74.4969, 0.65", "59.1961, -476.532, -74.6323, 0.65", "59.3581, -477.55, -74.7577, 0.65", "59.6766, -478.781, -75.08, 0.65", "59.8993, -479.528, -75.3352, 0.65", "60.6741, -482.019, -76.3254, 0.65", "61.1148, -483.464, -76.8518, 0.65", "61.5009, -484.942, -77.3964, 0.65", "61.9818, -487.2, -78.1846, 0.65", "62.3325, -489.082, -78.7979, 1.14", "62.4383, -489.709, -79.0074, 0.81", "63.0124, -493.462, -80.312, 1.3", "63.2503, -495.238, -80.9852, 0.81", "63.495, -497.052, -81.6756, 0.81", "63.5904, -497.595, -81.8723, 0.49", "64.2855, -500.914, -83.1387, 0.49", "64.7188, -502.797, -83.8516, 0.49", "65.1666, -504.608, -84.6032, 0.49", "65.656, -506.324, -85.2672, 0.49", "66.1037, -507.769, -85.8031, 0.65", "66.2192, -508.102, -85.9061, 0.49", "66.7805, -509.577, -86.2094, 0.49", "67.3587, -511.151, -86.466, 0.49", "67.8785, -512.712, -86.708, 0.49", "68.298, -514.393, -86.9245, 0.49", "68.6203, -516.313, -87.1112, 0.49", "68.807, -517.918, -87.2199, 0.49", "68.9167, -519.419, -87.2139, 0.49", "68.9776, -521.074, -87.0974, 0.49", "69.0093, -523.34, -86.8837, 0.49", "69.0151, -525.149, -86.6813, 0.97", "69.0719, -526.29, -86.5411, 0.97", "69.2991, -528.274, -86.2813, 0.49", "69.7326, -530.504, -86.0278, 0.65", "70.1579, -532.348, -85.8516, 0.49", "70.4687, -533.704, -85.7511, 0.49", "70.9014, -536.231, -85.6478, 0.81", "70.9558, -536.898, -85.6481, 0.32", "70.8632, -539.526, -85.7925, 0.32", "70.6188, -540.899, -85.8679, 0.32", "70.2143, -542.223, -85.9337, 0.32", "69.2984, -544.593, -86.033, 0.81", "68.8964, -545.55, -86.0614, 1.46", "68.5812, -546.365, -86.0748, 0.81", "67.7639, -548.665, -86.0748, 0.81", "67.4756, -549.779, -86.0748, 0.65", "67.3057, -550.757, -86.0748, 0.65", "67.0203, -553.522, -86.0748, 0.65", "66.9778, -554.171, -86.0748, 1.14", "66.9216, -555.2, -86.0748, 1.14", "66.8358, -556.348, -86.0748, 0.32", "66.7919, -556.712, -86.0748, 0.32", "66.625, -557.678, -86.0748, 0.32", "66.3638, -558.626, -86.0748, 0.32", "65.8795, -560.098, -86.0748, 0.32", "65.5414, -560.936, -86.0748, 0.81", "65.0027, -562.077, -86.1572, 0.81", "64.8328, -562.394, -86.1973, 0.81", "64.3162, -563.29, -86.3495, 0.49", "63.6948, -564.28, -86.4853, 0.49", "62.8778, -565.779, -86.9399, 1.14", "62.2843, -567.231, -87.5534, 0.32", "62.0168, -568.115, -88.0267, 0.32", "61.7571, -569.204, -88.8502, 0.32", "61.5576, -570.49, -90.013, 1.14", "61.2884, -573.624, -93.5076, 0.32", "61.2745, -574.298, -94.3052, 0.32", "61.261, -575.482, -95.6568, 0.32", "61.29, -577.308, -97.8434, 0.32", "61.3091, -578.047, -98.7684, 0.32", "61.3445, -580.212, -101.493, 0.32", "61.2038, -582.281, -103.824, 0.32", "61.1016, -583.328, -105.015, 0.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "57.6913, -449.032, -66.0879, 0.32", "57.6653, -451.409, -64.6921, 0.32", "57.6377, -453.571, -63.5604, 0.97", "57.6452, -454.619, -63.0841, 0.32", "57.7961, -458.196, -61.6902, 0.81", "57.9036, -459.964, -61.0887, 0.32", "57.9424, -460.586, -60.9029, 0.32", "58.0495, -461.743, -60.6754, 0.32", "58.1634, -463.259, -60.4516, 1.3", "58.191, -464.863, -60.3469, 1.3", "58.1469, -465.681, -60.3883, 0.32", "57.9875, -466.852, -60.4647, 0.32", "57.8223, -467.929, -60.5734, 0.32", "57.7677, -468.28, -60.6195, 0.32", "57.5881, -469.516, -60.811, 0.32", "57.5054, -470.385, -60.9521, 0.32", "57.5413, -472.957, -61.3364, 0.81", "57.6558, -474.087, -61.486, 0.32", "57.7595, -474.763, -61.5359, 1.3", "57.9606, -475.913, -61.5686, 1.3", "58.1586, -476.933, -61.5554, 0.16", "58.4446, -478.762, -61.4549, 0.16", "58.6258, -480.212, -61.3065, 0.16", "58.817, -482.021, -60.9262, 0.49", "58.8821, -482.821, -60.6939, 0.16", "58.9541, -483.893, -60.3099, 0.16", "59.0481, -485.611, -59.615, 0.16", "59.0685, -486.148, -59.3829, 0.16", "59.1581, -489.693, -57.9153, 0.49", "59.1732, -490.718, -57.54, 0.16", "59.1823, -491.353, -57.3284, 0.16", "59.2172, -492.951, -56.8717, 0.32", "59.2919, -494.409, -56.5493, 0.32", "59.3876, -496.029, -56.1946, 0.32", "59.4817, -497.159, -55.9979, 1.46", "59.5739, -497.858, -55.8319, 0.16", "59.7212, -498.894, -55.5357, 0.16", "59.9097, -500.366, -55.0415, 0.97", "60.0694, -502.664, -53.9205, 0.16", "60.0725, -503.819, -53.2379, 0.16", "60.046, -504.316, -52.9204, 0.65", "59.8807, -505.564, -52.0336, 0.65", "59.6238, -506.584, -51.2628, 0.65", "58.6908, -509.113, -49.4089, 0.32", "58.3627, -509.882, -48.8728, 0.32", "58.0921, -510.509, -48.4391, 0.32", "57.5178, -511.953, -47.484, 0.32", "57.1607, -512.932, -46.9202, 0.32", "56.6512, -514.484, -46.2083, 0.32", "55.9227, -517.003, -45.4225, 0.32", "55.4746, -518.688, -44.9884, 0.32", "55.1843, -519.892, -44.7389, 0.32", "54.9111, -521.359, -44.5324, 0.32", "54.7699, -522.326, -44.4265, 0.32", "54.5237, -524.061, -44.3189, 0.32", "54.3663, -525.145, -44.311, 0.32", "54.1862, -526.315, -44.2826, 0.32", "54.0173, -527.281, -44.2568, 0.65", "53.6722, -528.78, -44.1857, 0.65", "53.3687, -529.978, -44.1313, 0.65", "53.0522, -531.072, -44.0879, 0.65", "52.6073, -532.658, -44.0465, 0.65", "52.2038, -534.093, -44.0474, 0.65", "51.701, -535.747, -44.0578, 0.65" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_39", "dend_34", "dend_25", "dend_0", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_4", "dend_1", "dend_53", "dend_42", "dend_38", "dend_37", "dend_31", "dend_28", "dend_18", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_33", "dend_32", "dend_30", "dend_29", "dend_20", "dend_19", "dend_7", "dend_6", "dend_52", "dend_49", "dend_47", "dend_44", "dend_22", "dend_21", "dend_9", "dend_8", "dend_51", "dend_50", "dend_46", "dend_45", "dend_24", "dend_23", "dend_15", "dend_10", "dend_17", "dend_16", "dend_14", "dend_11", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_39", "dend_34", "dend_25", "dend_0", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_4", "dend_1", "dend_53", "dend_42", "dend_38", "dend_37", "dend_31", "dend_28", "dend_18", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_33", "dend_32", "dend_30", "dend_29", "dend_20", "dend_19", "dend_7", "dend_6", "dend_52", "dend_49", "dend_47", "dend_44", "dend_22", "dend_21", "dend_9", "dend_8", "dend_51", "dend_50", "dend_46", "dend_45", "dend_24", "dend_23", "dend_15", "dend_10", "dend_17", "dend_16", "dend_14", "dend_11", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_39", "dend_34", "dend_25", "dend_0", "axon_0", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_4", "dend_1", "axon_1", "dend_53", "dend_42", "dend_38", "dend_37", "dend_31", "dend_28", "dend_18", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_33", "dend_32", "dend_30", "dend_29", "dend_20", "dend_19", "dend_7", "dend_6", "dend_52", "dend_49", "dend_47", "dend_44", "dend_22", "dend_21", "dend_9", "dend_8", "dend_51", "dend_50", "dend_46", "dend_45", "dend_24", "dend_23", "dend_15", "dend_10", "dend_17", "dend_16", "dend_14", "dend_11", "dend_13", "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_25", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_22", "dend_22", "dend_22", "dend_21", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_MC_cc2a170ef6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_41
create dend_53
public dend_53
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_18, id: dend_18, parent: dend_4
create dend_18
public dend_18
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_39, dend_34, dend_25, dend_0, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_4, dend_1, dend_53, dend_42, dend_38, dend_37, dend_31, dend_28, dend_18, dend_5, dend_3, dend_2, dend_48, dend_43, dend_33, dend_32, dend_30, dend_29, dend_20, dend_19, dend_7, dend_6, dend_52, dend_49, dend_47, dend_44, dend_22, dend_21, dend_9, dend_8, dend_51, dend_50, dend_46, dend_45, dend_24, dend_23, dend_15, dend_10, dend_17, dend_16, dend_14, dend_11, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_39, dend_34, dend_25, dend_0, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_4, dend_1, dend_53, dend_42, dend_38, dend_37, dend_31, dend_28, dend_18, dend_5, dend_3, dend_2, dend_48, dend_43, dend_33, dend_32, dend_30, dend_29, dend_20, dend_19, dend_7, dend_6, dend_52, dend_49, dend_47, dend_44, dend_22, dend_21, dend_9, dend_8, dend_51, dend_50, dend_46, dend_45, dend_24, dend_23, dend_15, dend_10, dend_17, dend_16, dend_14, dend_11, dend_13, dend_12]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_39, dend_34, dend_25, dend_0, axon_0, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_4, dend_1, axon_1, dend_53, dend_42, dend_38, dend_37, dend_31, dend_28, dend_18, dend_5, dend_3, dend_2, dend_48, dend_43, dend_33, dend_32, dend_30, dend_29, dend_20, dend_19, dend_7, dend_6, dend_52, dend_49, dend_47, dend_44, dend_22, dend_21, dend_9, dend_8, dend_51, dend_50, dend_46, dend_45, dend_24, dend_23, dend_15, dend_10, dend_17, dend_16, dend_14, dend_11, dend_13, dend_12]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_53
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_22, dend_22, dend_22, dend_21, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_39(0), soma_0(0.45000002819660706)
    connect dend_34(0), soma_0(0.45000002819660706)
    connect dend_25(0), soma_0(0.45000002819660706)
    connect dend_0(0), soma_0(0.45000002819660706)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_18(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.17537, -14.7229, -2.53722, 2.53523 ) }
    soma_0 { pt3dadd( -1.02989, -13.1729, -2.2784, 3.64948 ) }
    soma_0 { pt3dadd( -0.88442, -11.6229, -2.01957, 3.41389 ) }
    soma_0 { pt3dadd( -0.738945, -10.0728, -1.76074, 3.47667 ) }
    soma_0 { pt3dadd( -0.59347, -8.52283, -1.50191, 3.57555 ) }
    soma_0 { pt3dadd( -0.447995, -6.97282, -1.24309, 4.84916 ) }
    soma_0 { pt3dadd( -0.302521, -5.42281, -0.984259, 6.03461 ) }
    soma_0 { pt3dadd( -0.157046, -3.87279, -0.725432, 8.00123 ) }
    soma_0 { pt3dadd( -0.0115709, -2.32278, -0.466604, 10.0186 ) }
    soma_0 { pt3dadd( 0.133904, -0.772764, -0.207777, 11.7516 ) }
    soma_0 { pt3dadd( 0.279379, 0.77725, 0.0510504, 12.805 ) }
    soma_0 { pt3dadd( 0.424853, 2.32726, 0.309878, 13.399 ) }
    soma_0 { pt3dadd( 0.570328, 3.87728, 0.568705, 12.814 ) }
    soma_0 { pt3dadd( 0.715803, 5.42729, 0.827533, 11.7031 ) }
    soma_0 { pt3dadd( 0.861278, 6.97731, 1.08636, 10.4832 ) }
    soma_0 { pt3dadd( 1.00675, 8.52732, 1.34519, 8.29813 ) }
    soma_0 { pt3dadd( 1.15223, 10.0773, 1.60401, 6.48815 ) }
    soma_0 { pt3dadd( 1.2977, 11.6273, 1.86284, 4.91847 ) }
    soma_0 { pt3dadd( 1.44318, 13.1774, 2.12167, 3.42411 ) }
    soma_0 { pt3dadd( 1.58865, 14.7274, 2.3805, 2.66266 ) }
    soma_0 { pt3dadd( 1.73413, 16.2774, 2.63932, 1.76809 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 21/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 2.72633, 16.5012, 2.1726, 2.76 ) }
    dend_39 { pt3dadd( 2.91726, 16.7675, 2.33733, 2.76 ) }
    dend_39 { pt3dadd( 3.55004, 17.7574, 2.8234, 2.43 ) }
    dend_39 { pt3dadd( 4.79853, 19.8806, 3.70223, 2.43 ) }
    dend_39 { pt3dadd( 5.36038, 20.9248, 4.06758, 2.43 ) }
    dend_39 { pt3dadd( 5.91325, 21.9729, 4.38875, 2.43 ) }
    dend_39 { pt3dadd( 6.31864, 22.7331, 4.58648, 2.43 ) }
    dend_39 { pt3dadd( 6.85079, 23.7714, 4.78823, 2.43 ) }
    dend_39 { pt3dadd( 7.13881, 24.3709, 4.86429, 2.27 ) }
    dend_39 { pt3dadd( 7.54437, 25.2683, 4.86429, 2.11 ) }
    dend_39 { pt3dadd( 7.88606, 25.9983, 4.86429, 2.11 ) }
    dend_39 { pt3dadd( 8.60913, 27.4569, 4.86429, 2.11 ) }
    dend_39 { pt3dadd( 8.88749, 27.9717, 4.86429, 2.11 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 34/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -0.133663, 3.5612, -1.1374, 2.11 ) }
    dend_34 { pt3dadd( -0.398194, 3.08399, -0.653581, 2.11 ) }
    dend_34 { pt3dadd( -3.07726, -1.34874, 3.40019, 1.46 ) }
    dend_34 { pt3dadd( -4.00526, -2.82995, 4.57922, 1.46 ) }
    dend_34 { pt3dadd( -4.91851, -4.28371, 5.58375, 1.46 ) }
    dend_34 { pt3dadd( -5.90616, -5.85998, 6.52544, 1.3 ) }
    dend_34 { pt3dadd( -7.7056, -8.83559, 8.1177, 1.3 ) }
    dend_34 { pt3dadd( -8.52804, -10.249, 8.67928, 1.14 ) }
    dend_34 { pt3dadd( -9.61523, -12.1809, 9.0859, 1.14 ) }
    dend_34 { pt3dadd( -10.5395, -13.8834, 9.4376, 0.97 ) }
    dend_34 { pt3dadd( -11.5575, -15.8609, 9.80304, 0.97 ) }
    dend_34 { pt3dadd( -12.1306, -17.0619, 9.95719, 0.81 ) }
    dend_34 { pt3dadd( -12.9973, -19.0446, 9.9664, 0.81 ) }
    dend_34 { pt3dadd( -13.8168, -21.195, 9.9733, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 48/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 6.62633, 4.9012, -3.6174, 4.05 ) }
    dend_25 { pt3dadd( 7.29175, 4.40667, -4.65623, 4.05 ) }
    dend_25 { pt3dadd( 8.98363, 3.14929, -7.29756, 1.95 ) }
    dend_25 { pt3dadd( 9.06513, 3.08872, -7.4248, 1.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 52/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.696337, -14.7788, -4.4274, 2.76 ) }
    dend_0 { pt3dadd( 1.01634, -15.4288, -4.4274, 2.76 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 54/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.73413, 16.2774, 2.63932, 0.65 ) }
    axon_0 { pt3dadd( 3.13578, 31.2118, 2.63932, 0.65 ) }
    axon_0 { pt3dadd( 4.53743, 46.1461, 2.63932, 0.65 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 57/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 8.88749, 27.9717, 4.86429, 1.78 ) }
    dend_41 { pt3dadd( 10.3177, 29.5533, 5.43624, 1.78 ) }
    dend_41 { pt3dadd( 11.4385, 30.7927, 5.88443, 1.78 ) }
    dend_41 { pt3dadd( 12.8133, 32.313, 6.43422, 1.78 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 61/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 8.88749, 27.9717, 4.86429, 1.46 ) }
    dend_40 { pt3dadd( 7.4565, 29.7166, 4.3221, 1.46 ) }
    dend_40 { pt3dadd( 6.8467, 30.5451, 4.13035, 1.46 ) }
    dend_40 { pt3dadd( 6.48843, 31.0759, 3.93561, 1.14 ) }
    dend_40 { pt3dadd( 5.91082, 32.1186, 3.51579, 0.81 ) }
    dend_40 { pt3dadd( 5.64654, 32.6742, 3.30626, 0.65 ) }
    dend_40 { pt3dadd( 5.09821, 33.8745, 2.88248, 0.65 ) }
    dend_40 { pt3dadd( 4.77917, 34.6175, 2.83495, 0.65 ) }
    dend_40 { pt3dadd( 3.82328, 36.4066, 3.02035, 0.97 ) }
    dend_40 { pt3dadd( 2.88524, 37.9048, 3.34975, 0.97 ) }
    dend_40 { pt3dadd( 1.97453, 39.3486, 3.74011, 0.97 ) }
    dend_40 { pt3dadd( 1.49408, 40.1023, 3.95487, 0.97 ) }
    dend_40 { pt3dadd( -0.788852, 43.9368, 4.88942, 0.81 ) }
    dend_40 { pt3dadd( -1.80784, 45.8045, 5.28429, 0.81 ) }
    dend_40 { pt3dadd( -2.80783, 47.8056, 5.65438, 0.81 ) }
    dend_40 { pt3dadd( -3.8651, 50.2009, 6.02157, 0.81 ) }
    dend_40 { pt3dadd( -4.64345, 52.2203, 6.26621, 0.81 ) }
    dend_40 { pt3dadd( -5.5716, 55.0627, 6.49124, 0.81 ) }
    dend_40 { pt3dadd( -6.05419, 57.1224, 6.54214, 0.81 ) }
    dend_40 { pt3dadd( -6.41653, 59.5129, 6.63534, 0.81 ) }
    dend_40 { pt3dadd( -6.68668, 62.6416, 6.81196, 0.81 ) }
    dend_40 { pt3dadd( -6.73007, 64.1798, 6.93366, 0.81 ) }
    dend_40 { pt3dadd( -6.6246, 66.1517, 7.14411, 0.81 ) }
    dend_40 { pt3dadd( -6.24293, 68.2375, 8.12264, 0.81 ) }
    dend_40 { pt3dadd( -6.0597, 68.7677, 8.58116, 1.3 ) }
    dend_40 { pt3dadd( -5.81228, 69.3685, 9.23136, 1.3 ) }
    dend_40 { pt3dadd( -5.74819, 69.5154, 9.40114, 1.78 ) }
    dend_40 { pt3dadd( -5.48049, 70.2618, 10.2582, 1.78 ) }
    dend_40 { pt3dadd( -3.70007, 76.6069, 17.4914, 1.14 ) }
    dend_40 { pt3dadd( -3.4911, 78.1328, 19.0866, 1.14 ) }
    dend_40 { pt3dadd( -3.44878, 80.1228, 20.8002, 1.14 ) }
    dend_40 { pt3dadd( -3.5386, 81.552, 21.7984, 1.14 ) }
    dend_40 { pt3dadd( -3.7388, 83.2339, 22.7878, 1.14 ) }
    dend_40 { pt3dadd( -3.82964, 83.7738, 23.0172, 0.65 ) }
    dend_40 { pt3dadd( -4.29287, 85.9975, 23.4402, 0.65 ) }
    dend_40 { pt3dadd( -4.94572, 88.8622, 24.0974, 0.65 ) }
    dend_40 { pt3dadd( -5.11057, 89.6363, 24.3129, 0.65 ) }
    dend_40 { pt3dadd( -5.79887, 92.91, 25.3646, 0.65 ) }
    dend_40 { pt3dadd( -6.02919, 94.4445, 25.9294, 0.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_40 { pt3dadd( -6.3441, 96.9089, 26.9599, 0.65 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 1/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -13.8168, -21.195, 9.9733, 0.81 ) }
    dend_36 { pt3dadd( -14.581, -23.0464, 11.6362, 0.81 ) }
    dend_36 { pt3dadd( -15.2204, -24.5952, 13.0275, 0.81 ) }
    dend_36 { pt3dadd( -16.3464, -27.3231, 15.4777, 0.81 ) }
    dend_36 { pt3dadd( -16.788, -28.393, 16.4387, 0.81 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -13.8168, -21.195, 9.9733, 0.49 ) }
    dend_35 { pt3dadd( -12.6532, -22.1618, 10.7425, 0.49 ) }
    dend_35 { pt3dadd( -9.9637, -23.8306, 11.4751, 0.49 ) }
    dend_35 { pt3dadd( -8.7129, -24.3721, 11.789, 0.49 ) }
    dend_35 { pt3dadd( -7.62851, -24.7569, 12.0242, 0.32 ) }
    dend_35 { pt3dadd( -5.71552, -25.4357, 12.4391, 0.32 ) }
    dend_35 { pt3dadd( -3.33438, -26.2807, 12.9556, 0.32 ) }
    dend_35 { pt3dadd( -1.93434, -26.7098, 13.0694, 0.32 ) }
    dend_35 { pt3dadd( 1.15511, -27.4206, 12.9571, 0.32 ) }
    dend_35 { pt3dadd( 3.39085, -27.7511, 12.936, 0.32 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 16/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 9.06513, 3.08872, -7.4248, 1.95 ) }
    dend_27 { pt3dadd( 10.3684, 2.26179, -7.13971, 1.95 ) }
    dend_27 { pt3dadd( 11.6731, 1.53565, -6.79828, 1.95 ) }
    dend_27 { pt3dadd( 13.1836, 0.670023, -6.53272, 1.3 ) }
    dend_27 { pt3dadd( 13.8892, 0.247249, -6.44133, 1.3 ) }
    dend_27 { pt3dadd( 14.7052, -0.21787, -6.37488, 1.3 ) }
    dend_27 { pt3dadd( 16.9077, -1.41847, -6.25852, 1.3 ) }
    dend_27 { pt3dadd( 18.5995, -2.40163, -6.24015, 1.3 ) }
    dend_27 { pt3dadd( 20.267, -3.47931, -6.23266, 1.14 ) }
    dend_27 { pt3dadd( 20.9062, -3.97357, -6.23477, 1.14 ) }
    dend_27 { pt3dadd( 23.299, -6.07794, -6.30787, 1.14 ) }
    dend_27 { pt3dadd( 24.8558, -7.50035, -6.41537, 1.14 ) }
    dend_27 { pt3dadd( 26.0518, -8.6999, -6.58186, 1.14 ) }
    dend_27 { pt3dadd( 26.8066, -9.56574, -6.65808, 1.14 ) }
    dend_27 { pt3dadd( 28.5147, -11.648, -6.66308, 1.14 ) }
    dend_27 { pt3dadd( 28.6047, -11.7803, -6.66345, 1.14 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 9.06513, 3.08872, -7.4248, 0.81 ) }
    dend_26 { pt3dadd( 6.01199, 2.26055, -3.327, 0.81 ) }
    dend_26 { pt3dadd( 5.40982, 2.01123, -2.52417, 0.81 ) }
    dend_26 { pt3dadd( 4.75697, 1.67169, -1.66661, 0.81 ) }
    dend_26 { pt3dadd( 4.0963, 1.25162, -0.77468, 0.81 ) }
    dend_26 { pt3dadd( 2.11868, -0.206204, 1.71875, 0.81 ) }
    dend_26 { pt3dadd( 1.77671, -0.483075, 2.10462, 0.81 ) }
    dend_26 { pt3dadd( 0.518839, -1.78862, 3.23152, 0.81 ) }
    dend_26 { pt3dadd( 0.13591, -2.24416, 3.54338, 0.81 ) }
    dend_26 { pt3dadd( -1.31557, -4.22525, 4.73881, 0.81 ) }
    dend_26 { pt3dadd( -2.37869, -5.93101, 5.60501, 0.81 ) }
    dend_26 { pt3dadd( -3.34416, -7.62581, 6.28229, 0.81 ) }
    dend_26 { pt3dadd( -4.44765, -9.548, 7.12395, 0.81 ) }
    dend_26 { pt3dadd( -5.2528, -10.9496, 7.73774, 0.81 ) }
    dend_26 { pt3dadd( -6.86324, -13.5947, 8.93909, 0.81 ) }
    dend_26 { pt3dadd( -7.81923, -15.0198, 9.54574, 0.81 ) }
    dend_26 { pt3dadd( -8.58253, -16.0857, 9.9953, 0.81 ) }
    dend_26 { pt3dadd( -11.6242, -19.8964, 11.7477, 0.81 ) }
    dend_26 { pt3dadd( -12.2311, -20.5894, 12.0826, 1.3 ) }
    dend_26 { pt3dadd( -13.2342, -21.6472, 12.5791, 1.3 ) }
    dend_26 { pt3dadd( -15.306, -23.5151, 13.3347, 0.97 ) }
    dend_26 { pt3dadd( -17.2205, -25.0358, 13.967, 0.97 ) }
    dend_26 { pt3dadd( -19.3259, -26.6727, 14.551, 0.97 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 55/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 1.01634, -15.4288, -4.4274, 2.11 ) }
    dend_4 { pt3dadd( 2.28005, -18.4641, -3.70491, 2.11 ) }
    dend_4 { pt3dadd( 3.18916, -20.6477, -3.18515, 2.11 ) }
    dend_4 { pt3dadd( 3.75026, -21.9954, -2.86436, 2.11 ) }
    dend_4 { pt3dadd( 4.48475, -23.7595, -2.44444, 1.95 ) }
    dend_4 { pt3dadd( 5.29563, -25.7072, -1.98084, 1.95 ) }
    dend_4 { pt3dadd( 5.9676, -27.3212, -1.59666, 1.95 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.01634, -15.4288, -4.4274, 1.3 ) }
    dend_1 { pt3dadd( -0.46528, -18.8834, -9.383, 1.3 ) }
    dend_1 { pt3dadd( -0.987746, -19.857, -10.713, 1.3 ) }
    dend_1 { pt3dadd( -2.03974, -21.5141, -12.9426, 1.3 ) }
    dend_1 { pt3dadd( -2.66728, -22.4623, -14.1322, 1.3 ) }
    dend_1 { pt3dadd( -3.70735, -23.9351, -16.118, 1.3 ) }
    dend_1 { pt3dadd( -4.15872, -24.5363, -16.915, 1.3 ) }
    dend_1 { pt3dadd( -5.18316, -25.8021, -18.2507, 1.3 ) }
    dend_1 { pt3dadd( -5.53576, -26.2283, -18.7185, 1.62 ) }
    dend_1 { pt3dadd( -6.31205, -27.1425, -19.5664, 1.3 ) }
    dend_1 { pt3dadd( -8.4623, -29.8271, -21.9314, 1.3 ) }
    dend_1 { pt3dadd( -9.42856, -31.3888, -23.1221, 1.3 ) }
    dend_1 { pt3dadd( -9.84277, -32.3239, -23.6514, 1.3 ) }
    dend_1 { pt3dadd( -10.5478, -34.1962, -24.3303, 1.3 ) }
    dend_1 { pt3dadd( -11.2629, -35.9301, -24.6599, 1.3 ) }
    dend_1 { pt3dadd( -12.0441, -37.2571, -24.734, 1.3 ) }
    dend_1 { pt3dadd( -12.8306, -38.4076, -24.673, 1.3 ) }
    dend_1 { pt3dadd( -14.8942, -40.856, -24.5526, 1.3 ) }
    dend_1 { pt3dadd( -16.6031, -42.5477, -24.7599, 1.3 ) }
    dend_1 { pt3dadd( -18.4308, -44.1012, -25.1845, 1.3 ) }
    dend_1 { pt3dadd( -21.1618, -46.1729, -26.2353, 1.3 ) }
    dend_1 { pt3dadd( -22.9549, -47.4573, -26.9619, 1.3 ) }
    dend_1 { pt3dadd( -25.0985, -48.9801, -27.9333, 1.3 ) }
    dend_1 { pt3dadd( -30.2039, -52.6612, -30.5866, 1.3 ) }
    dend_1 { pt3dadd( -31.3732, -53.5438, -31.2065, 1.3 ) }
    dend_1 { pt3dadd( -33.336, -55.1239, -32.1569, 1.3 ) }
    dend_1 { pt3dadd( -35.7466, -57.389, -33.0695, 1.3 ) }
    dend_1 { pt3dadd( -37.0944, -58.8057, -33.2609, 1.3 ) }
    dend_1 { pt3dadd( -38.1425, -60.1259, -32.8762, 1.3 ) }
    dend_1 { pt3dadd( -38.8005, -61.0558, -32.3159, 1.3 ) }
    dend_1 { pt3dadd( -40.0168, -63.0532, -31.0164, 1.3 ) }
    dend_1 { pt3dadd( -40.7233, -64.4104, -30.1612, 1.3 ) }
    dend_1 { pt3dadd( -41.443, -65.8724, -29.4013, 1.14 ) }
    dend_1 { pt3dadd( -42.7525, -68.546, -27.9685, 1.14 ) }
    dend_1 { pt3dadd( -43.6371, -70.4131, -27.0294, 1.14 ) }
    dend_1 { pt3dadd( -44.7281, -72.7575, -26.0223, 1.14 ) }
    dend_1 { pt3dadd( -45.6481, -74.8287, -25.3261, 1.14 ) }
    dend_1 { pt3dadd( -46.3007, -76.5293, -24.8288, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( -47.0264, -78.6665, -24.3345, 1.14 ) }
    dend_1 { pt3dadd( -47.4541, -80.1345, -24.1494, 1.14 ) }
    dend_1 { pt3dadd( -47.9989, -82.2632, -23.9345, 1.14 ) }
    dend_1 { pt3dadd( -48.4088, -84.0323, -23.8099, 1.14 ) }
    dend_1 { pt3dadd( -48.9074, -86.3074, -23.7071, 1.14 ) }
    dend_1 { pt3dadd( -49.1873, -87.6159, -23.6641, 1.14 ) }
    dend_1 { pt3dadd( -49.6393, -89.6735, -23.4664, 1.14 ) }
    dend_1 { pt3dadd( -49.8742, -90.7563, -23.149, 1.14 ) }
    dend_1 { pt3dadd( -50.2871, -92.561, -22.2597, 1.14 ) }
    dend_1 { pt3dadd( -50.6545, -94.0002, -21.1854, 1.14 ) }
    dend_1 { pt3dadd( -50.9245, -95.0299, -20.2336, 1.14 ) }
    dend_1 { pt3dadd( -51.6215, -97.7492, -17.2862, 1.14 ) }
    dend_1 { pt3dadd( -52.1827, -99.9959, -14.6874, 1.14 ) }
    dend_1 { pt3dadd( -52.3937, -100.815, -13.7847, 1.14 ) }
    dend_1 { pt3dadd( -53.0029, -103.047, -11.4489, 1.14 ) }
    dend_1 { pt3dadd( -53.2709, -103.885, -10.7003, 1.14 ) }
    dend_1 { pt3dadd( -54.1563, -106.214, -9.21815, 1.14 ) }
    dend_1 { pt3dadd( -54.9184, -107.874, -8.6799, 1.14 ) }
    dend_1 { pt3dadd( -56.1708, -110.341, -8.35082, 1.14 ) }
    dend_1 { pt3dadd( -56.4108, -110.806, -8.33466, 1.62 ) }
    dend_1 { pt3dadd( -57.2868, -112.486, -8.25885, 1.62 ) }
    dend_1 { pt3dadd( -58.0487, -113.986, -8.10201, 1.3 ) }
    dend_1 { pt3dadd( -58.7201, -115.367, -7.89434, 1.3 ) }
    dend_1 { pt3dadd( -59.5903, -117.173, -7.39915, 1.3 ) }
    dend_1 { pt3dadd( -60.8599, -119.869, -6.39755, 1.3 ) }
    dend_1 { pt3dadd( -62.4451, -123.199, -5.05518, 1.3 ) }
    dend_1 { pt3dadd( -63.0991, -124.608, -4.46601, 1.3 ) }
    dend_1 { pt3dadd( -63.5533, -125.547, -4.08005, 1.3 ) }
    dend_1 { pt3dadd( -64.3453, -127.128, -3.47453, 1.3 ) }
    dend_1 { pt3dadd( -65.0514, -128.438, -2.89358, 1.14 ) }
    dend_1 { pt3dadd( -65.9081, -129.999, -2.18932, 1.14 ) }
    dend_1 { pt3dadd( -66.5948, -131.325, -1.50509, 0.97 ) }
    dend_1 { pt3dadd( -67.4228, -132.935, -0.474056, 0.97 ) }
    dend_1 { pt3dadd( -68.078, -134.286, 0.46482, 0.97 ) }
    dend_1 { pt3dadd( -69.7011, -137.632, 3.02768, 0.97 ) }
    dend_1 { pt3dadd( -70.3951, -138.977, 4.18673, 0.97 ) }
    dend_1 { pt3dadd( -71.9107, -141.628, 6.6693, 0.97 ) }
    dend_1 { pt3dadd( -72.7221, -142.886, 7.92668, 0.97 ) }
    dend_1 { pt3dadd( -73.5963, -144.147, 9.2221, 0.97 ) }
    dend_1 { pt3dadd( -74.7178, -145.582, 10.6139, 0.97 ) }
    dend_1 { pt3dadd( -75.4409, -146.418, 11.1961, 0.97 ) }
    dend_1 { pt3dadd( -76.4711, -147.464, 11.8869, 0.97 ) }
    dend_1 { pt3dadd( -77.5437, -148.483, 12.4252, 0.97 ) }
    dend_1 { pt3dadd( -78.9079, -149.751, 13.1554, 0.97 ) }
    dend_1 { pt3dadd( -80.0915, -150.798, 13.7747, 0.97 ) }
    dend_1 { pt3dadd( -82.2844, -152.983, 14.7748, 0.81 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 46/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.53743, 46.1461, 2.63932, 0.558814 ) }
    axon_1 { pt3dadd( 5.93908, 61.0805, 2.63932, 0.558814 ) }
    axon_1 { pt3dadd( 7.34073, 76.0149, 2.63932, 0.558814 ) }
    // Section: dend_53, id: dend_53, parent: dend_41 (entry count 49/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 12.8133, 32.313, 6.43422, 1.3 ) }
    dend_53 { pt3dadd( 15.2264, 33.8695, 1.62539, 1.3 ) }
    dend_53 { pt3dadd( 16.6816, 34.7331, -1.13877, 1.14 ) }
    dend_53 { pt3dadd( 18.1994, 35.6337, -4.02161, 1.14 ) }
    dend_53 { pt3dadd( 20.9597, 37.2717, -9.2647, 1.14 ) }
    dend_53 { pt3dadd( 21.4056, 37.5363, -10.1116, 0.16 ) }
    dend_53 { pt3dadd( 21.9892, 37.8827, -11.2203, 0.16 ) }
    dend_53 { pt3dadd( 22.2799, 38.0517, -11.7141, 0.16 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 57/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 12.8133, 32.313, 6.43422, 0.97 ) }
    dend_42 { pt3dadd( 13.4354, 34.2214, 6.14781, 0.97 ) }
    dend_42 { pt3dadd( 14.2861, 36.1573, 5.63501, 0.97 ) }
    dend_42 { pt3dadd( 14.9065, 37.3305, 5.45835, 0.97 ) }
    dend_42 { pt3dadd( 15.3505, 38.0777, 5.40299, 0.97 ) }
    dend_42 { pt3dadd( 16.5452, 40.0884, 5.25401, 0.97 ) }
    dend_42 { pt3dadd( 18.3761, 43.1698, 5.02571, 0.97 ) }
    dend_42 { pt3dadd( 19.4724, 44.8032, 4.79331, 0.97 ) }
    dend_42 { pt3dadd( 21.5604, 47.4767, 4.39579, 0.81 ) }
    dend_42 { pt3dadd( 22.8601, 48.952, 4.20766, 0.81 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 67/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -16.788, -28.393, 16.4387, 0.32 ) }
    dend_38 { pt3dadd( -15.3973, -28.6888, 15.8429, 0.32 ) }
    dend_38 { pt3dadd( -13.7263, -29.0441, 15.1268, 0.32 ) }
    dend_38 { pt3dadd( -10.1167, -29.8117, 13.5801, 0.32 ) }
    dend_38 { pt3dadd( -7.75352, -30.3142, 12.5675, 0.32 ) }
    dend_38 { pt3dadd( -6.09042, -30.6678, 11.8549, 0.32 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 73/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -16.788, -28.393, 16.4387, 0.49 ) }
    dend_37 { pt3dadd( -16.4119, -29.1297, 16.104, 0.49 ) }
    dend_37 { pt3dadd( -15.9976, -29.9414, 15.7351, 0.49 ) }
    dend_37 { pt3dadd( -14.6467, -32.5877, 14.5326, 0.49 ) }
    dend_37 { pt3dadd( -14.1141, -33.6312, 14.0584, 0.49 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 78/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 28.6047, -11.7803, -6.66345, 1.14 ) }
    dend_31 { pt3dadd( 29.7018, -16.7663, -10.2459, 1.14 ) }
    dend_31 { pt3dadd( 29.8962, -17.7518, -10.8778, 1.14 ) }
    dend_31 { pt3dadd( 30.0832, -18.7492, -11.3943, 0.81 ) }
    dend_31 { pt3dadd( 30.3371, -20.3136, -12.1041, 0.81 ) }
    dend_31 { pt3dadd( 30.6901, -22.323, -12.9482, 0.81 ) }
    dend_31 { pt3dadd( 31.1452, -24.8038, -14.144, 0.81 ) }
    dend_31 { pt3dadd( 31.4496, -26.8835, -14.9579, 0.81 ) }
    dend_31 { pt3dadd( 31.6785, -28.82, -15.8031, 0.81 ) }
    dend_31 { pt3dadd( 31.8366, -30.4111, -16.59, 0.81 ) }
    dend_31 { pt3dadd( 31.9387, -31.5762, -17.2137, 0.81 ) }
    dend_31 { pt3dadd( 32.4266, -34.6157, -18.8877, 0.81 ) }
    dend_31 { pt3dadd( 33.1195, -36.714, -19.9133, 0.81 ) }
    dend_31 { pt3dadd( 33.7007, -37.9228, -20.5119, 0.81 ) }
    dend_31 { pt3dadd( 34.3936, -39.0577, -21.3712, 0.81 ) }
    dend_31 { pt3dadd( 34.9315, -39.8453, -22.0473, 0.81 ) }
    dend_31 { pt3dadd( 36.117, -41.5558, -23.393, 0.81 ) }
    dend_31 { pt3dadd( 37.3253, -43.2014, -24.457, 0.81 ) }
    dend_31 { pt3dadd( 37.9585, -44.0221, -24.9944, 0.81 ) }
    dend_31 { pt3dadd( 40.4456, -47.7087, -27.258, 0.81 ) }
    dend_31 { pt3dadd( 40.8857, -48.6329, -27.8613, 0.81 ) }
    dend_31 { pt3dadd( 41.3865, -50.4626, -29.1384, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_31 { pt3dadd( 41.5173, -51.5964, -30.1724, 0.81 ) }
    dend_31 { pt3dadd( 41.5964, -52.4883, -31.0258, 0.81 ) }
    dend_31 { pt3dadd( 41.6732, -53.1297, -31.54, 0.81 ) }
    dend_31 { pt3dadd( 42.0479, -55.7719, -33.2606, 0.81 ) }
    dend_31 { pt3dadd( 42.227, -56.7076, -33.9093, 0.81 ) }
    dend_31 { pt3dadd( 42.8878, -60.2291, -36.3369, 0.81 ) }
    dend_31 { pt3dadd( 43.1795, -61.975, -37.3895, 0.81 ) }
    dend_31 { pt3dadd( 43.4673, -63.7747, -38.2347, 0.81 ) }
    dend_31 { pt3dadd( 43.6575, -64.9898, -38.7134, 0.81 ) }
    dend_31 { pt3dadd( 43.8809, -66.2286, -39.0521, 0.81 ) }
    dend_31 { pt3dadd( 44.2937, -68.1975, -39.48, 0.81 ) }
    dend_31 { pt3dadd( 44.5862, -69.6501, -39.6797, 0.81 ) }
    dend_31 { pt3dadd( 44.904, -71.1911, -40.2138, 0.81 ) }
    dend_31 { pt3dadd( 45.4178, -73.3935, -41.2577, 0.81 ) }
    dend_31 { pt3dadd( 45.8527, -75.1653, -42.1721, 0.81 ) }
    dend_31 { pt3dadd( 46.5471, -77.8695, -43.5897, 0.81 ) }
    dend_31 { pt3dadd( 47.259, -80.2849, -44.8173, 0.81 ) }
    dend_31 { pt3dadd( 49.1625, -85.881, -47.5916, 0.81 ) }
    dend_31 { pt3dadd( 49.9818, -88.1605, -48.6146, 0.81 ) }
    dend_31 { pt3dadd( 50.6937, -90.0408, -49.3303, 0.81 ) }
    dend_31 { pt3dadd( 51.4213, -91.8659, -49.9655, 0.81 ) }
    dend_31 { pt3dadd( 52.4813, -94.3894, -50.704, 0.81 ) }
    dend_31 { pt3dadd( 53.7603, -97.2598, -51.306, 0.81 ) }
    dend_31 { pt3dadd( 55.062, -100.125, -51.5669, 0.81 ) }
    dend_31 { pt3dadd( 56.08, -102.297, -51.7656, 0.81 ) }
    dend_31 { pt3dadd( 56.7611, -103.732, -51.9968, 1.3 ) }
    dend_31 { pt3dadd( 57.5072, -105.388, -52.378, 1.3 ) }
    dend_31 { pt3dadd( 57.7907, -106.116, -52.5906, 0.49 ) }
    dend_31 { pt3dadd( 58.2604, -107.632, -53.0814, 0.49 ) }
    dend_31 { pt3dadd( 58.5359, -108.699, -53.4684, 0.49 ) }
    dend_31 { pt3dadd( 59.3932, -112.65, -54.8426, 0.49 ) }
    dend_31 { pt3dadd( 59.6712, -114.025, -55.2488, 0.49 ) }
    dend_31 { pt3dadd( 60.1743, -116.714, -55.9024, 0.49 ) }
    dend_31 { pt3dadd( 60.4911, -118.307, -56.2011, 0.49 ) }
    dend_31 { pt3dadd( 60.9849, -121.029, -56.5595, 0.49 ) }
    dend_31 { pt3dadd( 61.3727, -123.249, -56.7343, 0.49 ) }
    dend_31 { pt3dadd( 61.9312, -126.237, -56.7151, 0.49 ) }
    dend_31 { pt3dadd( 62.2369, -127.808, -56.7022, 0.49 ) }
    dend_31 { pt3dadd( 62.6376, -129.854, -56.6808, 0.49 ) }
    dend_31 { pt3dadd( 62.9249, -131.329, -56.6613, 0.49 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 40/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 28.6047, -11.7803, -6.66345, 0.97 ) }
    dend_28 { pt3dadd( 29.8783, -15.146, -6.92413, 0.97 ) }
    dend_28 { pt3dadd( 30.2711, -16.3913, -6.89436, 0.97 ) }
    dend_28 { pt3dadd( 30.5487, -17.2197, -6.84815, 0.65 ) }
    dend_28 { pt3dadd( 31.1459, -18.7412, -6.74523, 0.65 ) }
    dend_28 { pt3dadd( 31.8824, -20.2264, -6.63952, 0.65 ) }
    dend_28 { pt3dadd( 33.692, -23.2683, -6.41764, 0.65 ) }
    dend_28 { pt3dadd( 34.3373, -24.2106, -6.27297, 1.14 ) }
    dend_28 { pt3dadd( 35.2014, -25.3044, -6.16098, 1.14 ) }
    dend_28 { pt3dadd( 36.6425, -26.7995, -6.11222, 1.14 ) }
    dend_28 { pt3dadd( 38.662, -28.4662, -6.20612, 1.14 ) }
    dend_28 { pt3dadd( 39.8873, -29.2637, -6.3478, 1.14 ) }
    dend_28 { pt3dadd( 40.9273, -29.7922, -6.52584, 1.14 ) }
    dend_28 { pt3dadd( 42.6083, -30.5917, -6.79602, 1.14 ) }
    dend_28 { pt3dadd( 44.3344, -31.4376, -7.15179, 1.14 ) }
    dend_28 { pt3dadd( 45.2356, -31.8809, -7.35465, 1.14 ) }
    dend_28 { pt3dadd( 47.3997, -32.9615, -7.84716, 1.14 ) }
    dend_28 { pt3dadd( 48.9594, -33.7683, -8.1848, 1.14 ) }
    dend_28 { pt3dadd( 50.1085, -34.3636, -8.39585, 1.14 ) }
    dend_28 { pt3dadd( 52.0601, -35.2925, -8.64792, 1.14 ) }
    dend_28 { pt3dadd( 53.8688, -36.1055, -8.93335, 1.14 ) }
    dend_28 { pt3dadd( 54.7349, -36.5081, -9.1023, 1.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_4 (entry count 62/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 5.9676, -27.3212, -1.59666, 1.3 ) }
    dend_18 { pt3dadd( 8.47129, -29.0152, -3.10994, 1.3 ) }
    dend_18 { pt3dadd( 9.7112, -29.8554, -3.66746, 1.3 ) }
    dend_18 { pt3dadd( 10.6214, -30.5201, -4.00309, 1.3 ) }
    dend_18 { pt3dadd( 12.4304, -31.9439, -4.5593, 1.14 ) }
    dend_18 { pt3dadd( 13.3474, -32.7138, -4.80712, 1.14 ) }
    dend_18 { pt3dadd( 14.7102, -33.937, -5.12878, 1.14 ) }
    dend_18 { pt3dadd( 16.1853, -35.4427, -5.28752, 1.14 ) }
    dend_18 { pt3dadd( 17.0742, -36.4985, -5.44611, 1.14 ) }
    dend_18 { pt3dadd( 18.0373, -37.7866, -5.65636, 1.14 ) }
    dend_18 { pt3dadd( 18.5243, -38.4962, -5.78956, 0.97 ) }
    dend_18 { pt3dadd( 19.4777, -39.9527, -6.09142, 0.97 ) }
    dend_18 { pt3dadd( 20.1924, -41.1248, -6.35781, 0.97 ) }
    dend_18 { pt3dadd( 22.0455, -44.3092, -7.42293, 0.97 ) }
    dend_18 { pt3dadd( 23.0077, -45.9736, -8.09297, 0.97 ) }
    dend_18 { pt3dadd( 23.8054, -47.3785, -8.72734, 0.97 ) }
    dend_18 { pt3dadd( 24.9381, -49.3587, -9.68743, 0.97 ) }
    dend_18 { pt3dadd( 25.7351, -50.7425, -10.3923, 0.97 ) }
    dend_18 { pt3dadd( 27.8237, -54.2318, -12.0274, 0.97 ) }
    dend_18 { pt3dadd( 28.9567, -55.9708, -12.6872, 0.97 ) }
    dend_18 { pt3dadd( 29.0427, -56.094, -12.7421, 1.46 ) }
    dend_18 { pt3dadd( 29.5072, -56.7016, -13.021, 1.46 ) }
    dend_18 { pt3dadd( 30.16, -57.423, -13.3843, 1.46 ) }
    dend_18 { pt3dadd( 31.6874, -58.8272, -13.9284, 1.14 ) }
    dend_18 { pt3dadd( 32.6637, -59.6104, -14.1031, 1.14 ) }
    dend_18 { pt3dadd( 34.9228, -61.3108, -14.563, 1.14 ) }
    dend_18 { pt3dadd( 36.4558, -62.5093, -14.8105, 1.14 ) }
    dend_18 { pt3dadd( 37.4521, -63.347, -14.8813, 1.14 ) }
    dend_18 { pt3dadd( 38.9633, -64.7714, -14.8385, 1.14 ) }
    dend_18 { pt3dadd( 39.2403, -65.0743, -14.7992, 1.62 ) }
    dend_18 { pt3dadd( 39.7313, -65.7273, -14.6154, 1.62 ) }
    dend_18 { pt3dadd( 40.7219, -67.2691, -14.0666, 1.3 ) }
    dend_18 { pt3dadd( 41.6334, -68.8385, -13.5548, 1.3 ) }
    dend_18 { pt3dadd( 42.3183, -70.0129, -13.2415, 1.3 ) }
    dend_18 { pt3dadd( 42.932, -70.986, -13.0414, 1.3 ) }
    dend_18 { pt3dadd( 43.5879, -71.9179, -13.0112, 1.3 ) }
    dend_18 { pt3dadd( 44.4101, -73.0455, -13.1559, 1.14 ) }
    dend_18 { pt3dadd( 45.2627, -74.1823, -13.4614, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_18 { pt3dadd( 46.3138, -75.519, -13.9091, 1.14 ) }
    dend_18 { pt3dadd( 46.8154, -76.1528, -14.0776, 1.14 ) }
    dend_18 { pt3dadd( 48.5509, -78.2887, -14.5028, 1.14 ) }
    dend_18 { pt3dadd( 49.7028, -79.6579, -14.6705, 1.14 ) }
    dend_18 { pt3dadd( 50.6614, -80.8014, -14.789, 1.14 ) }
    dend_18 { pt3dadd( 51.6109, -81.9964, -14.9183, 1.14 ) }
    dend_18 { pt3dadd( 52.9491, -83.7664, -15.094, 1.14 ) }
    dend_18 { pt3dadd( 53.6555, -84.702, -15.1646, 1.14 ) }
    dend_18 { pt3dadd( 54.7631, -86.0293, -15.1998, 1.14 ) }
    dend_18 { pt3dadd( 56.0332, -87.3484, -15.2993, 1.14 ) }
    dend_18 { pt3dadd( 56.8624, -88.1239, -15.4031, 1.14 ) }
    dend_18 { pt3dadd( 57.6407, -88.7287, -15.523, 1.14 ) }
    dend_18 { pt3dadd( 58.5873, -89.3613, -15.6493, 1.14 ) }
    dend_18 { pt3dadd( 59.276, -89.7867, -15.6792, 1.14 ) }
    dend_18 { pt3dadd( 60.6114, -90.5526, -15.635, 1.14 ) }
    dend_18 { pt3dadd( 62.0855, -91.3736, -15.5034, 1.14 ) }
    dend_18 { pt3dadd( 63.8238, -92.3007, -15.3496, 1.14 ) }
    dend_18 { pt3dadd( 64.9489, -92.9146, -15.2195, 0.97 ) }
    dend_18 { pt3dadd( 66.4412, -93.8119, -15.0181, 0.97 ) }
    dend_18 { pt3dadd( 67.3961, -94.4526, -14.9397, 0.97 ) }
    dend_18 { pt3dadd( 69.0011, -95.6171, -14.8975, 1.3 ) }
    dend_18 { pt3dadd( 70.2183, -96.541, -14.9331, 1.3 ) }
    dend_18 { pt3dadd( 71.8032, -97.7655, -15.0658, 0.97 ) }
    dend_18 { pt3dadd( 73.0513, -98.769, -15.3583, 0.97 ) }
    dend_18 { pt3dadd( 74.9134, -100.285, -15.8855, 0.97 ) }
    dend_18 { pt3dadd( 76.2712, -101.396, -16.3527, 1.46 ) }
    dend_18 { pt3dadd( 77.1621, -102.147, -16.7533, 1.46 ) }
    dend_18 { pt3dadd( 77.969, -102.844, -17.2278, 1.14 ) }
    dend_18 { pt3dadd( 80.1298, -104.735, -18.94, 1.62 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 29/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.9676, -27.3212, -1.59666, 1.62 ) }
    dend_5 { pt3dadd( 5.91148, -30.4441, -2.38086, 1.62 ) }
    dend_5 { pt3dadd( 6.02719, -34.3889, -3.06879, 1.62 ) }
    dend_5 { pt3dadd( 6.12973, -36.6675, -3.39223, 1.62 ) }
    dend_5 { pt3dadd( 6.20161, -38.9296, -3.66849, 1.62 ) }
    dend_5 { pt3dadd( 6.2238, -40.5392, -3.91719, 1.62 ) }
    dend_5 { pt3dadd( 6.28818, -43.4312, -4.4102, 1.46 ) }
    dend_5 { pt3dadd( 6.36164, -48.2872, -5.02808, 1.46 ) }
    dend_5 { pt3dadd( 6.37457, -49.584, -5.11936, 1.46 ) }
    dend_5 { pt3dadd( 6.33041, -51.3439, -5.16871, 1.46 ) }
    dend_5 { pt3dadd( 6.12649, -54.9449, -5.12256, 1.46 ) }
    dend_5 { pt3dadd( 5.85777, -58.2923, -5.02797, 1.46 ) }
    dend_5 { pt3dadd( 5.59367, -61.3237, -4.88777, 1.46 ) }
    dend_5 { pt3dadd( 5.403, -63.1067, -4.76886, 1.46 ) }
    dend_5 { pt3dadd( 4.99951, -66.9243, -4.45219, 1.46 ) }
    dend_5 { pt3dadd( 4.67515, -69.6788, -4.16407, 1.46 ) }
    dend_5 { pt3dadd( 4.36362, -71.8436, -3.87331, 1.46 ) }
    dend_5 { pt3dadd( 3.94613, -74.1964, -3.66821, 1.46 ) }
    dend_5 { pt3dadd( 3.77491, -75.2786, -3.658, 1.46 ) }
    dend_5 { pt3dadd( 3.63102, -76.4148, -3.68105, 1.46 ) }
    dend_5 { pt3dadd( 3.56073, -78.2482, -3.79796, 1.46 ) }
    dend_5 { pt3dadd( 3.61887, -79.7161, -3.85099, 1.46 ) }
    dend_5 { pt3dadd( 3.78948, -81.3229, -3.96706, 1.46 ) }
    dend_5 { pt3dadd( 4.04499, -83.0855, -4.14674, 1.46 ) }
    dend_5 { pt3dadd( 4.34897, -84.8057, -4.34729, 1.46 ) }
    dend_5 { pt3dadd( 4.71614, -86.8812, -4.59513, 1.46 ) }
    dend_5 { pt3dadd( 4.8604, -88.1281, -4.74145, 1.46 ) }
    dend_5 { pt3dadd( 4.99802, -91.247, -5.06962, 1.3 ) }
    dend_5 { pt3dadd( 5.01292, -93.2442, -5.24873, 1.3 ) }
    dend_5 { pt3dadd( 4.90712, -95.1457, -5.24738, 1.3 ) }
    dend_5 { pt3dadd( 4.66468, -97.919, -5.0882, 1.3 ) }
    dend_5 { pt3dadd( 4.49393, -100.536, -4.7324, 1.3 ) }
    dend_5 { pt3dadd( 4.41472, -103.638, -4.14604, 1.3 ) }
    dend_5 { pt3dadd( 4.46162, -106.054, -3.58132, 1.3 ) }
    dend_5 { pt3dadd( 4.81711, -111.358, -2.27644, 1.3 ) }
    dend_5 { pt3dadd( 4.94014, -112.58, -1.94766, 1.3 ) }
    dend_5 { pt3dadd( 5.52183, -116.752, -0.70557, 1.3 ) }
    dend_5 { pt3dadd( 5.93709, -118.974, 0.0133392, 1.3 ) }
    dend_5 { pt3dadd( 6.31555, -120.932, 0.702725, 1.3 ) }
    dend_5 { pt3dadd( 6.56556, -122.11, 1.11425, 1.78 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -82.2844, -152.983, 14.7748, 0.49 ) }
    dend_3 { pt3dadd( -83.847, -154.451, 14.4342, 0.49 ) }
    dend_3 { pt3dadd( -85.496, -156.001, 14.0749, 0.32 ) }
    dend_3 { pt3dadd( -86.1812, -156.644, 13.9255, 0.32 ) }
    dend_3 { pt3dadd( -88.2892, -158.625, 13.4661, 0.32 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -82.2844, -152.983, 14.7748, 0.32 ) }
    dend_2 { pt3dadd( -82.5727, -153.65, 14.2649, 0.32 ) }
    dend_2 { pt3dadd( -83.3281, -155.106, 13.2969, 0.32 ) }
    dend_2 { pt3dadd( -84.9783, -158.286, 11.1823, 0.32 ) }
    dend_2 { pt3dadd( -85.533, -159.355, 10.4714, 0.32 ) }
    dend_2 { pt3dadd( -86.243, -160.723, 9.56161, 0.32 ) }
    dend_2 { pt3dadd( -87.0669, -162.311, 8.50582, 0.32 ) }
    dend_2 { pt3dadd( -87.4896, -163.088, 7.98872, 0.32 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 82/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 22.8601, 48.952, 4.20766, 0.81 ) }
    dend_48 { pt3dadd( 25.4151, 53.1684, 5.71819, 0.81 ) }
    dend_48 { pt3dadd( 25.9146, 54.2679, 5.98586, 0.81 ) }
    dend_48 { pt3dadd( 26.4848, 55.9003, 6.27299, 0.81 ) }
    dend_48 { pt3dadd( 27.1716, 58.3596, 6.59892, 0.81 ) }
    dend_48 { pt3dadd( 27.4318, 59.5664, 6.72409, 0.81 ) }
    dend_48 { pt3dadd( 27.9138, 62.3538, 6.9641, 0.81 ) }
    dend_48 { pt3dadd( 28.1261, 64.8941, 6.9641, 0.81 ) }
    dend_48 { pt3dadd( 28.1807, 67.1634, 6.9641, 0.81 ) }
    dend_48 { pt3dadd( 28.0625, 69.6058, 6.9641, 0.81 ) }
    dend_48 { pt3dadd( 27.7589, 72.0839, 6.9641, 0.81 ) }
    dend_48 { pt3dadd( 27.485, 73.6879, 7.03683, 0.81 ) }
    dend_48 { pt3dadd( 26.9539, 76.4634, 7.26365, 0.81 ) }
    dend_48 { pt3dadd( 26.8795, 76.9865, 7.32163, 0.81 ) }
    dend_48 { pt3dadd( 26.5434, 79.514, 7.65081, 0.81 ) }
    dend_48 { pt3dadd( 26.176, 82.2481, 7.95141, 0.81 ) }
    dend_48 { pt3dadd( 25.6791, 86.158, 8.2688, 0.81 ) }
    dend_48 { pt3dadd( 25.5128, 87.4185, 8.27388, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_48 { pt3dadd( 25.1776, 90.2914, 8.23884, 0.81 ) }
    dend_48 { pt3dadd( 24.7979, 93.5406, 8.11839, 0.81 ) }
    dend_48 { pt3dadd( 24.534, 96.1749, 7.87588, 0.81 ) }
    dend_48 { pt3dadd( 24.3809, 97.7071, 7.56815, 0.81 ) }
    dend_48 { pt3dadd( 23.9282, 100.637, 6.41085, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 5/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 22.8601, 48.952, 4.20766, 0.49 ) }
    dend_43 { pt3dadd( 18.6591, 53.2894, 7.09724, 0.49 ) }
    dend_43 { pt3dadd( 17.6786, 54.3583, 7.60565, 0.49 ) }
    dend_43 { pt3dadd( 16.3646, 55.8824, 8.12032, 0.49 ) }
    dend_43 { pt3dadd( 14.5364, 58.0451, 8.67655, 0.49 ) }
    dend_43 { pt3dadd( 13.5013, 59.265, 8.93115, 0.49 ) }
    dend_43 { pt3dadd( 12.3126, 60.6689, 9.1767, 0.49 ) }
    dend_43 { pt3dadd( 11.1392, 62.075, 9.1767, 0.49 ) }
    dend_43 { pt3dadd( 9.51814, 63.9489, 9.22913, 0.49 ) }
    dend_43 { pt3dadd( 8.1093, 65.4659, 9.30965, 0.49 ) }
    dend_43 { pt3dadd( 6.90057, 66.6997, 9.38947, 0.49 ) }
    dend_43 { pt3dadd( 5.77728, 67.8666, 9.47605, 0.49 ) }
    dend_43 { pt3dadd( 4.39929, 69.1752, 9.59992, 0.49 ) }
    dend_43 { pt3dadd( 3.45608, 70.0209, 9.70596, 0.49 ) }
    dend_43 { pt3dadd( 2.71666, 70.6005, 9.81536, 0.49 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 20/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 62.9249, -131.329, -56.6613, 0.81 ) }
    dend_33 { pt3dadd( 63.2795, -132.552, -57.1654, 0.81 ) }
    dend_33 { pt3dadd( 63.9232, -134.83, -58.2983, 0.81 ) }
    dend_33 { pt3dadd( 64.4477, -136.389, -59.0226, 0.81 ) }
    dend_33 { pt3dadd( 65.8046, -139.661, -60.4563, 0.81 ) }
    dend_33 { pt3dadd( 66.5928, -141.211, -61.0982, 0.81 ) }
    dend_33 { pt3dadd( 67.5064, -142.789, -61.8062, 0.65 ) }
    dend_33 { pt3dadd( 69.5286, -145.713, -63.2308, 0.65 ) }
    dend_33 { pt3dadd( 72.0539, -148.669, -64.8082, 0.65 ) }
    dend_33 { pt3dadd( 73.6499, -150.277, -65.8215, 0.65 ) }
    dend_33 { pt3dadd( 75.8428, -152.201, -67.1555, 0.65 ) }
    dend_33 { pt3dadd( 77.8826, -153.81, -68.4569, 0.65 ) }
    dend_33 { pt3dadd( 80.1935, -155.541, -69.8659, 0.65 ) }
    dend_33 { pt3dadd( 82.6144, -157.34, -71.2425, 0.65 ) }
    dend_33 { pt3dadd( 85.4292, -159.487, -72.8265, 0.65 ) }
    dend_33 { pt3dadd( 87.2304, -161.05, -73.7698, 0.65 ) }
    dend_33 { pt3dadd( 88.3752, -162.157, -74.2438, 0.65 ) }
    dend_33 { pt3dadd( 90.8035, -164.74, -74.8751, 0.65 ) }
    dend_33 { pt3dadd( 91.9764, -166.158, -75.1469, 0.65 ) }
    dend_33 { pt3dadd( 93.7774, -168.556, -75.4862, 0.65 ) }
    dend_33 { pt3dadd( 95.0985, -170.456, -75.6716, 0.65 ) }
    dend_33 { pt3dadd( 96.7071, -173.231, -76.0049, 0.65 ) }
    dend_33 { pt3dadd( 97.7688, -175.533, -76.4059, 0.65 ) }
    dend_33 { pt3dadd( 99.1058, -179.392, -77.3596, 0.65 ) }
    dend_33 { pt3dadd( 99.3827, -180.597, -77.803, 0.65 ) }
    dend_33 { pt3dadd( 99.5403, -182.106, -78.4785, 0.65 ) }
    dend_33 { pt3dadd( 99.5583, -184.81, -79.8033, 0.65 ) }
    dend_33 { pt3dadd( 99.3576, -187.187, -81.0027, 0.65 ) }
    dend_33 { pt3dadd( 99.1188, -188.948, -81.8429, 0.65 ) }
    dend_33 { pt3dadd( 98.3238, -194.99, -84.4107, 0.65 ) }
    dend_33 { pt3dadd( 98.0723, -197.2, -85.2955, 0.65 ) }
    dend_33 { pt3dadd( 97.8997, -199.473, -86.107, 0.65 ) }
    dend_33 { pt3dadd( 97.8938, -200.894, -86.5242, 0.65 ) }
    dend_33 { pt3dadd( 98.0241, -204.088, -87.1961, 0.49 ) }
    dend_33 { pt3dadd( 98.172, -206.373, -87.4952, 0.49 ) }
    dend_33 { pt3dadd( 98.3259, -207.754, -87.5048, 0.49 ) }
    dend_33 { pt3dadd( 98.7779, -210.495, -87.5197, 0.49 ) }
    dend_33 { pt3dadd( 99.1589, -212.539, -87.5255, 0.49 ) }
    dend_33 { pt3dadd( 99.2998, -213.591, -87.78, 0.49 ) }
    dend_33 { pt3dadd( 99.3855, -214.896, -88.2376, 0.49 ) }
    dend_33 { pt3dadd( 99.342, -216.256, -88.7658, 0.49 ) }
    dend_33 { pt3dadd( 99.2413, -217.066, -89.0958, 0.49 ) }
    dend_33 { pt3dadd( 98.8026, -219.388, -90.1806, 0.49 ) }
    dend_33 { pt3dadd( 96.8776, -227.521, -94.3664, 0.49 ) }
    dend_33 { pt3dadd( 95.8699, -231.488, -96.5871, 0.49 ) }
    dend_33 { pt3dadd( 95.2048, -233.749, -97.9762, 0.49 ) }
    dend_33 { pt3dadd( 94.6784, -235.384, -99.078, 0.49 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 67/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 62.9249, -131.329, -56.6613, 0.49 ) }
    dend_32 { pt3dadd( 62.7624, -134.596, -58.7521, 0.49 ) }
    dend_32 { pt3dadd( 62.6228, -135.941, -59.489, 0.49 ) }
    dend_32 { pt3dadd( 62.342, -138.099, -60.245, 0.49 ) }
    dend_32 { pt3dadd( 61.995, -140.91, -60.7381, 0.49 ) }
    dend_32 { pt3dadd( 61.6699, -143.209, -60.519, 0.49 ) }
    dend_32 { pt3dadd( 61.4165, -144.793, -59.875, 0.49 ) }
    dend_32 { pt3dadd( 61.1867, -145.999, -59.0217, 0.49 ) }
    dend_32 { pt3dadd( 60.5555, -148.749, -56.6528, 0.49 ) }
    dend_32 { pt3dadd( 60.0018, -150.755, -54.5656, 0.32 ) }
    dend_32 { pt3dadd( 58.8829, -154.283, -50.5645, 0.81 ) }
    dend_32 { pt3dadd( 57.9798, -156.848, -47.654, 0.81 ) }
    dend_32 { pt3dadd( 57.518, -158.213, -46.1882, 0.81 ) }
    dend_32 { pt3dadd( 57.1152, -159.375, -45.1089, 0.32 ) }
    dend_32 { pt3dadd( 56.3917, -161.438, -43.6231, 0.32 ) }
    dend_32 { pt3dadd( 55.8103, -163.103, -42.7021, 0.32 ) }
    dend_32 { pt3dadd( 54.9494, -165.984, -41.8274, 0.32 ) }
    dend_32 { pt3dadd( 54.5245, -167.768, -41.4579, 0.32 ) }
    dend_32 { pt3dadd( 53.9691, -170.875, -40.812, 0.32 ) }
    dend_32 { pt3dadd( 53.7691, -172.476, -40.5237, 0.32 ) }
    dend_32 { pt3dadd( 53.6032, -174.376, -40.2725, 0.32 ) }
    dend_32 { pt3dadd( 53.5304, -176.424, -39.9154, 0.32 ) }
    dend_32 { pt3dadd( 53.5184, -178.427, -39.4083, 0.32 ) }
    dend_32 { pt3dadd( 53.4748, -179.041, -39.186, 0.32 ) }
    dend_32 { pt3dadd( 53.4362, -179.553, -38.9115, 0.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 92/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 54.7349, -36.5081, -9.1023, 0.65 ) }
    dend_30 { pt3dadd( 56.6329, -37.1607, -10.2876, 0.65 ) }
    dend_30 { pt3dadd( 58.2881, -37.7621, -11.549, 0.65 ) }
    dend_30 { pt3dadd( 60.5401, -38.5669, -13.3155, 0.65 ) }
    dend_30 { pt3dadd( 61.8749, -39.0763, -14.3938, 0.65 ) }
    dend_30 { pt3dadd( 66.7918, -41.1028, -18.3693, 0.65 ) }
    dend_30 { pt3dadd( 68.2966, -41.7907, -19.6302, 0.65 ) }
    dend_30 { pt3dadd( 70.449, -42.977, -21.5497, 0.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( 72.5884, -44.2975, -23.6917, 0.65 ) }
    dend_30 { pt3dadd( 73.7445, -45.1179, -24.9442, 0.65 ) }
    dend_30 { pt3dadd( 74.9753, -46.1393, -26.2328, 0.65 ) }
    dend_30 { pt3dadd( 76.1262, -47.2238, -27.2165, 0.65 ) }
    dend_30 { pt3dadd( 77.2261, -48.167, -28.0674, 0.65 ) }
    dend_30 { pt3dadd( 79.5664, -49.9576, -29.608, 0.65 ) }
    dend_30 { pt3dadd( 80.7635, -50.7694, -30.1809, 0.65 ) }
    dend_30 { pt3dadd( 83.3486, -52.1192, -31.0057, 0.65 ) }
    dend_30 { pt3dadd( 85.6406, -53.0492, -31.5534, 0.65 ) }
    dend_30 { pt3dadd( 89.3196, -54.3345, -32.2131, 0.65 ) }
    dend_30 { pt3dadd( 90.9208, -54.8712, -32.4399, 0.65 ) }
    dend_30 { pt3dadd( 96.3003, -56.7386, -32.6646, 0.65 ) }
    dend_30 { pt3dadd( 99.3755, -57.7265, -32.6297, 0.65 ) }
    dend_30 { pt3dadd( 101.667, -58.4312, -32.474, 0.65 ) }
    dend_30 { pt3dadd( 104.424, -59.3157, -32.1966, 0.65 ) }
    dend_30 { pt3dadd( 106.231, -60.0425, -31.9591, 0.65 ) }
    dend_30 { pt3dadd( 108.556, -61.1589, -31.7351, 0.65 ) }
    dend_30 { pt3dadd( 110.418, -62.1628, -31.6706, 0.65 ) }
    dend_30 { pt3dadd( 113.101, -63.7288, -31.3949, 0.65 ) }
    dend_30 { pt3dadd( 114.727, -64.6821, -31.1947, 0.65 ) }
    dend_30 { pt3dadd( 116.384, -65.6069, -31.0323, 0.65 ) }
    dend_30 { pt3dadd( 118.802, -66.9472, -30.9035, 0.65 ) }
    dend_30 { pt3dadd( 120.192, -67.7644, -30.9035, 0.65 ) }
    dend_30 { pt3dadd( 122.006, -68.9438, -30.9035, 0.65 ) }
    dend_30 { pt3dadd( 123.402, -69.9015, -30.9035, 0.65 ) }
    dend_30 { pt3dadd( 124.945, -70.9151, -30.9035, 0.65 ) }
    dend_30 { pt3dadd( 126.469, -71.7922, -30.9035, 0.65 ) }
    dend_30 { pt3dadd( 127.914, -72.5286, -30.9035, 0.65 ) }
    dend_30 { pt3dadd( 129.684, -73.3594, -30.9035, 0.65 ) }
    dend_30 { pt3dadd( 131.043, -74.0008, -30.9207, 0.65 ) }
    dend_30 { pt3dadd( 132.712, -74.7829, -30.976, 0.65 ) }
    dend_30 { pt3dadd( 134.354, -75.4983, -31.1233, 0.65 ) }
    dend_30 { pt3dadd( 135.513, -75.9732, -31.4684, 0.65 ) }
    dend_30 { pt3dadd( 136.841, -76.4542, -31.9598, 0.65 ) }
    dend_30 { pt3dadd( 138.195, -76.9361, -32.4968, 0.65 ) }
    dend_30 { pt3dadd( 141.375, -78.0408, -33.7022, 0.65 ) }
    dend_30 { pt3dadd( 143.591, -78.8308, -34.4556, 0.65 ) }
    dend_30 { pt3dadd( 149.989, -81.1999, -36.2768, 0.65 ) }
    dend_30 { pt3dadd( 152.239, -82.0549, -36.7794, 0.65 ) }
    dend_30 { pt3dadd( 155.521, -83.3289, -37.2937, 0.65 ) }
    dend_30 { pt3dadd( 159.508, -84.8903, -37.6674, 0.65 ) }
    dend_30 { pt3dadd( 163.697, -86.7247, -37.8088, 0.65 ) }
    dend_30 { pt3dadd( 165.682, -87.7259, -37.7438, 0.65 ) }
    dend_30 { pt3dadd( 169.135, -89.7036, -37.4019, 0.65 ) }
    dend_30 { pt3dadd( 173.217, -92.4461, -37.0682, 0.65 ) }
    dend_30 { pt3dadd( 175.331, -94.1054, -36.893, 0.65 ) }
    dend_30 { pt3dadd( 177.553, -96.2514, -36.7184, 0.65 ) }
    dend_30 { pt3dadd( 179.086, -98.023, -36.6594, 0.65 ) }
    dend_30 { pt3dadd( 179.701, -98.8499, -36.6846, 1.14 ) }
    dend_30 { pt3dadd( 180.478, -100.279, -36.7546, 1.14 ) }
    dend_30 { pt3dadd( 180.923, -101.511, -36.8271, 1.14 ) }
    dend_30 { pt3dadd( 181.209, -102.269, -36.9124, 0.65 ) }
    dend_30 { pt3dadd( 181.769, -103.236, -37.0856, 0.65 ) }
    dend_30 { pt3dadd( 182.414, -104.161, -37.2878, 0.65 ) }
    dend_30 { pt3dadd( 183.16, -105.059, -37.8583, 0.65 ) }
    dend_30 { pt3dadd( 184.177, -106.228, -38.8596, 0.65 ) }
    dend_30 { pt3dadd( 185.802, -107.925, -40.4593, 0.65 ) }
    dend_30 { pt3dadd( 187.105, -109.198, -41.7055, 0.65 ) }
    dend_30 { pt3dadd( 187.757, -109.838, -42.3881, 0.16 ) }
    dend_30 { pt3dadd( 191.744, -113.848, -46.9384, 0.16 ) }
    dend_30 { pt3dadd( 193.21, -115.368, -48.6735, 0.16 ) }
    dend_30 { pt3dadd( 194.608, -116.927, -50.3499, 0.16 ) }
    dend_30 { pt3dadd( 194.969, -117.397, -50.7673, 0.16 ) }
    dend_30 { pt3dadd( 196.473, -119.487, -52.2687, 0.16 ) }
    dend_30 { pt3dadd( 197.072, -120.392, -52.6191, 0.16 ) }
    dend_30 { pt3dadd( 197.957, -122.066, -52.5107, 0.16 ) }
    dend_30 { pt3dadd( 198.822, -124.379, -52.214, 0.16 ) }
    dend_30 { pt3dadd( 199.281, -126.161, -51.9455, 0.16 ) }
    dend_30 { pt3dadd( 199.659, -127.91, -51.6659, 0.16 ) }
    dend_30 { pt3dadd( 200.203, -130.531, -51.1137, 0.16 ) }
    dend_30 { pt3dadd( 200.682, -133.064, -50.6359, 0.16 ) }
    dend_30 { pt3dadd( 201.102, -135.913, -50.2322, 0.16 ) }
    dend_30 { pt3dadd( 201.298, -137.602, -50.1397, 0.16 ) }
    dend_30 { pt3dadd( 201.421, -140.276, -50.0158, 0.65 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 74/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 54.7349, -36.5081, -9.1023, 0.97 ) }
    dend_29 { pt3dadd( 56.736, -37.484, -7.13488, 0.97 ) }
    dend_29 { pt3dadd( 58.2952, -38.2901, -5.86056, 0.97 ) }
    dend_29 { pt3dadd( 61.0953, -40.022, -3.27276, 0.97 ) }
    dend_29 { pt3dadd( 62.3529, -40.9566, -2.06066, 0.97 ) }
    dend_29 { pt3dadd( 63.0838, -41.6457, -1.21629, 0.65 ) }
    dend_29 { pt3dadd( 64.1916, -42.7412, 0.0847095, 0.65 ) }
    dend_29 { pt3dadd( 64.7504, -43.3925, 0.744256, 0.65 ) }
    dend_29 { pt3dadd( 67.119, -46.5366, 3.62173, 0.81 ) }
    dend_29 { pt3dadd( 67.9225, -47.6585, 4.50412, 0.81 ) }
    dend_29 { pt3dadd( 69.941, -50.9048, 7.13853, 0.81 ) }
    dend_29 { pt3dadd( 70.6206, -52.0673, 8.05515, 0.81 ) }
    dend_29 { pt3dadd( 71.4363, -53.3508, 9.05536, 0.81 ) }
    dend_29 { pt3dadd( 72.1456, -54.2836, 9.77023, 0.81 ) }
    dend_29 { pt3dadd( 72.9728, -55.2129, 10.3884, 0.65 ) }
    dend_29 { pt3dadd( 75.4971, -57.5801, 12.0935, 0.65 ) }
    dend_29 { pt3dadd( 76.8682, -58.7479, 12.9184, 0.65 ) }
    dend_29 { pt3dadd( 78.5214, -60.2349, 14.0363, 0.65 ) }
    dend_29 { pt3dadd( 79.9152, -61.498, 15.0771, 0.65 ) }
    dend_29 { pt3dadd( 80.6609, -62.1762, 15.6992, 0.65 ) }
    dend_29 { pt3dadd( 82.2766, -63.5658, 17.1028, 0.65 ) }
    dend_29 { pt3dadd( 83.233, -64.3212, 17.8808, 0.65 ) }
    dend_29 { pt3dadd( 84.0915, -65.0944, 18.7354, 0.65 ) }
    dend_29 { pt3dadd( 84.7541, -65.8411, 19.551, 0.65 ) }
    dend_29 { pt3dadd( 85.9699, -67.4196, 21.1435, 0.65 ) }
    dend_29 { pt3dadd( 86.7524, -68.3295, 22.2304, 0.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 80.1298, -104.735, -18.94, 1.14 ) }
    dend_20 { pt3dadd( 82.7318, -107.224, -18.2822, 1.14 ) }
    dend_20 { pt3dadd( 84.0854, -108.419, -18.0529, 1.14 ) }
    dend_20 { pt3dadd( 85.1111, -109.236, -18.004, 0.97 ) }
    dend_20 { pt3dadd( 86.3909, -110.13, -18.0066, 0.97 ) }
    dend_20 { pt3dadd( 87.2803, -110.756, -17.9975, 0.97 ) }
    dend_20 { pt3dadd( 89.1058, -112.085, -17.9711, 0.97 ) }
    dend_20 { pt3dadd( 90.142, -112.873, -18.0472, 0.97 ) }
    dend_20 { pt3dadd( 92.2334, -114.606, -18.1619, 0.97 ) }
    dend_20 { pt3dadd( 93.3982, -115.743, -18.1978, 0.97 ) }
    dend_20 { pt3dadd( 94.5746, -117.068, -18.1957, 0.97 ) }
    dend_20 { pt3dadd( 95.3291, -118.046, -18.2366, 0.97 ) }
    dend_20 { pt3dadd( 96.3844, -119.699, -18.3565, 0.97 ) }
    dend_20 { pt3dadd( 97.3191, -121.238, -18.6065, 0.97 ) }
    dend_20 { pt3dadd( 98.2001, -122.655, -18.9443, 0.97 ) }
    dend_20 { pt3dadd( 98.9953, -123.885, -19.2532, 0.81 ) }
    dend_20 { pt3dadd( 100.077, -125.427, -19.6581, 0.81 ) }
    dend_20 { pt3dadd( 100.697, -126.334, -19.9605, 0.81 ) }
    dend_20 { pt3dadd( 102.275, -128.672, -20.8361, 0.81 ) }
    dend_20 { pt3dadd( 103.641, -130.609, -21.7347, 0.81 ) }
    dend_20 { pt3dadd( 104.876, -132.339, -22.691, 0.81 ) }
    dend_20 { pt3dadd( 106.0, -133.953, -23.595, 0.81 ) }
    dend_20 { pt3dadd( 107.851, -136.701, -25.2513, 0.81 ) }
    dend_20 { pt3dadd( 108.764, -138.06, -26.1343, 0.81 ) }
    dend_20 { pt3dadd( 110.137, -140.252, -27.6011, 0.81 ) }
    dend_20 { pt3dadd( 111.305, -142.14, -28.9727, 0.81 ) }
    dend_20 { pt3dadd( 112.336, -143.805, -30.2609, 0.81 ) }
    dend_20 { pt3dadd( 113.488, -145.647, -31.5102, 0.81 ) }
    dend_20 { pt3dadd( 114.334, -147.084, -32.334, 0.81 ) }
    dend_20 { pt3dadd( 114.596, -147.639, -32.6075, 1.46 ) }
    dend_20 { pt3dadd( 115.085, -148.971, -33.0828, 1.46 ) }
    dend_20 { pt3dadd( 115.695, -150.944, -33.6531, 1.14 ) }
    dend_20 { pt3dadd( 116.461, -153.633, -34.4085, 0.97 ) }
    dend_20 { pt3dadd( 117.394, -156.822, -35.0889, 0.97 ) }
    dend_20 { pt3dadd( 118.114, -159.114, -35.6219, 0.97 ) }
    dend_20 { pt3dadd( 118.996, -161.467, -36.1824, 0.49 ) }
    dend_20 { pt3dadd( 119.195, -161.901, -36.2927, 0.49 ) }
    dend_20 { pt3dadd( 120.201, -163.76, -36.7736, 0.49 ) }
    dend_20 { pt3dadd( 121.258, -165.417, -37.2788, 0.49 ) }
    dend_20 { pt3dadd( 122.145, -166.461, -37.4747, 0.49 ) }
    dend_20 { pt3dadd( 122.965, -167.265, -37.6391, 0.49 ) }
    dend_20 { pt3dadd( 124.089, -168.282, -37.7086, 0.49 ) }
    dend_20 { pt3dadd( 124.252, -168.439, -37.6957, 0.81 ) }
    dend_20 { pt3dadd( 125.22, -169.395, -37.4752, 0.81 ) }
    dend_20 { pt3dadd( 127.082, -171.371, -36.9406, 0.81 ) }
    dend_20 { pt3dadd( 127.869, -172.294, -36.7255, 0.81 ) }
    dend_20 { pt3dadd( 129.425, -174.251, -36.2422, 0.81 ) }
    dend_20 { pt3dadd( 130.37, -175.498, -35.8983, 0.81 ) }
    dend_20 { pt3dadd( 131.165, -176.546, -35.6099, 0.81 ) }
    dend_20 { pt3dadd( 132.309, -178.066, -35.1873, 0.81 ) }
    dend_20 { pt3dadd( 134.015, -180.264, -34.6601, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 51/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 80.1298, -104.735, -18.94, 0.81 ) }
    dend_19 { pt3dadd( 80.9992, -107.144, -19.7418, 0.81 ) }
    dend_19 { pt3dadd( 81.7578, -108.767, -20.3658, 0.81 ) }
    dend_19 { pt3dadd( 82.9581, -111.278, -21.2616, 0.81 ) }
    dend_19 { pt3dadd( 83.6961, -112.862, -21.7781, 0.65 ) }
    dend_19 { pt3dadd( 84.5745, -114.725, -22.4792, 0.65 ) }
    dend_19 { pt3dadd( 85.904, -117.261, -23.6051, 0.65 ) }
    dend_19 { pt3dadd( 87.3976, -119.776, -24.8267, 0.65 ) }
    dend_19 { pt3dadd( 89.1979, -122.329, -26.3634, 0.65 ) }
    dend_19 { pt3dadd( 90.2455, -123.597, -27.1388, 0.65 ) }
    dend_19 { pt3dadd( 92.5324, -125.962, -28.6484, 0.65 ) }
    dend_19 { pt3dadd( 94.768, -128.066, -29.9848, 0.65 ) }
    dend_19 { pt3dadd( 95.5911, -128.819, -30.4071, 0.65 ) }
    dend_19 { pt3dadd( 98.3385, -131.085, -31.749, 0.65 ) }
    dend_19 { pt3dadd( 101.009, -133.116, -33.3603, 0.65 ) }
    dend_19 { pt3dadd( 102.605, -134.424, -34.4708, 0.65 ) }
    dend_19 { pt3dadd( 103.507, -135.332, -35.1789, 0.65 ) }
    dend_19 { pt3dadd( 104.532, -136.724, -36.2375, 0.65 ) }
    dend_19 { pt3dadd( 106.904, -140.387, -39.268, 0.65 ) }
    dend_19 { pt3dadd( 108.161, -142.831, -41.4764, 0.65 ) }
    dend_19 { pt3dadd( 108.585, -143.753, -42.4633, 0.65 ) }
    dend_19 { pt3dadd( 108.983, -144.813, -43.7344, 0.65 ) }
    dend_19 { pt3dadd( 109.272, -145.683, -44.8941, 0.65 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 74/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 6.56556, -122.11, 1.11425, 1.3 ) }
    dend_7 { pt3dadd( 6.56732, -125.022, 1.90657, 1.3 ) }
    dend_7 { pt3dadd( 6.42372, -126.167, 2.1242, 1.3 ) }
    dend_7 { pt3dadd( 6.04819, -127.76, 2.18385, 1.3 ) }
    dend_7 { pt3dadd( 5.77028, -128.759, 2.13642, 0.97 ) }
    dend_7 { pt3dadd( 5.45361, -129.956, 2.04478, 0.97 ) }
    dend_7 { pt3dadd( 5.07963, -131.443, 1.94444, 0.97 ) }
    dend_7 { pt3dadd( 4.84122, -132.362, 1.83695, 0.97 ) }
    dend_7 { pt3dadd( 4.44296, -134.174, 1.53581, 0.97 ) }
    dend_7 { pt3dadd( 4.12786, -136.253, 1.12143, 0.97 ) }
    dend_7 { pt3dadd( 3.95244, -138.268, 0.518128, 0.97 ) }
    dend_7 { pt3dadd( 3.90763, -139.571, 0.0190066, 0.97 ) }
    dend_7 { pt3dadd( 3.90475, -141.289, -0.802686, 0.97 ) }
    dend_7 { pt3dadd( 3.94335, -143.584, -2.24458, 0.97 ) }
    dend_7 { pt3dadd( 4.01285, -144.509, -2.92537, 0.97 ) }
    dend_7 { pt3dadd( 4.39961, -146.82, -4.93169, 0.97 ) }
    dend_7 { pt3dadd( 4.70267, -147.872, -5.92207, 0.97 ) }
    dend_7 { pt3dadd( 5.60046, -149.901, -7.95351, 0.97 ) }
    dend_7 { pt3dadd( 6.86579, -152.044, -10.0219, 0.97 ) }
    dend_7 { pt3dadd( 7.75399, -153.28, -11.0037, 0.97 ) }
    dend_7 { pt3dadd( 8.9841, -154.82, -11.9992, 0.97 ) }
    dend_7 { pt3dadd( 10.3328, -156.403, -12.7473, 0.97 ) }
    dend_7 { pt3dadd( 12.1375, -158.557, -13.5522, 0.97 ) }
    dend_7 { pt3dadd( 13.6161, -160.36, -13.944, 0.97 ) }
    dend_7 { pt3dadd( 15.4035, -162.738, -14.1561, 0.97 ) }
    dend_7 { pt3dadd( 16.4961, -164.4, -14.2, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_7 { pt3dadd( 17.6158, -166.301, -14.1881, 0.81 ) }
    dend_7 { pt3dadd( 18.7139, -168.343, -14.0627, 0.81 ) }
    dend_7 { pt3dadd( 19.8604, -170.655, -13.7011, 0.81 ) }
    dend_7 { pt3dadd( 20.928, -172.906, -13.2294, 0.81 ) }
    dend_7 { pt3dadd( 21.4756, -174.105, -12.9077, 0.81 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 5/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 6.56556, -122.11, 1.11425, 0.65 ) }
    dend_6 { pt3dadd( 4.96817, -123.508, 0.836033, 0.65 ) }
    dend_6 { pt3dadd( 3.78508, -124.479, 0.692625, 0.65 ) }
    dend_6 { pt3dadd( 3.0184, -125.093, 0.623619, 0.81 ) }
    dend_6 { pt3dadd( 1.87443, -126.054, 0.537461, 0.81 ) }
    dend_6 { pt3dadd( 0.88377, -126.894, 0.474337, 0.81 ) }
    dend_6 { pt3dadd( 0.265694, -127.423, 0.46671, 0.81 ) }
    dend_6 { pt3dadd( -1.41364, -129.075, 0.628214, 0.81 ) }
    dend_6 { pt3dadd( -2.38579, -130.204, 0.772876, 0.81 ) }
    dend_6 { pt3dadd( -3.00599, -130.971, 0.8855, 0.81 ) }
    dend_6 { pt3dadd( -3.67645, -131.816, 1.01797, 0.81 ) }
    dend_6 { pt3dadd( -4.4636, -132.79, 1.16111, 0.81 ) }
    dend_6 { pt3dadd( -5.60863, -134.365, 1.35065, 0.81 ) }
    dend_6 { pt3dadd( -6.43586, -135.658, 1.47814, 0.81 ) }
    dend_6 { pt3dadd( -7.38691, -137.285, 1.60211, 0.81 ) }
    dend_6 { pt3dadd( -8.14982, -138.721, 1.67897, 0.81 ) }
    dend_6 { pt3dadd( -9.29729, -141.096, 1.5897, 0.81 ) }
    dend_6 { pt3dadd( -10.3029, -143.618, 1.27479, 0.81 ) }
    dend_6 { pt3dadd( -10.542, -144.543, 1.10918, 0.81 ) }
    dend_6 { pt3dadd( -10.5862, -146.141, 0.751672, 0.81 ) }
    dend_6 { pt3dadd( -10.3364, -147.392, 0.346472, 0.81 ) }
    dend_6 { pt3dadd( -9.40503, -150.062, -0.696538, 0.81 ) }
    dend_6 { pt3dadd( -8.38713, -152.244, -1.7413, 0.81 ) }
    dend_6 { pt3dadd( -7.44161, -154.126, -2.77029, 0.81 ) }
    dend_6 { pt3dadd( -6.66173, -155.908, -3.77021, 0.81 ) }
    dend_6 { pt3dadd( -5.83524, -158.254, -4.99393, 0.81 ) }
    dend_6 { pt3dadd( -5.67985, -159.114, -5.35332, 0.49 ) }
    dend_6 { pt3dadd( -5.81795, -160.351, -5.49702, 0.49 ) }
    dend_6 { pt3dadd( -6.57224, -161.466, -5.11599, 0.49 ) }
    dend_6 { pt3dadd( -7.57809, -162.623, -4.33138, 0.49 ) }
    dend_6 { pt3dadd( -8.88441, -164.075, -2.83824, 0.49 ) }
    dend_6 { pt3dadd( -9.35017, -164.653, -2.10572, 0.49 ) }
    dend_6 { pt3dadd( -10.4728, -166.432, 0.292611, 0.49 ) }
    dend_6 { pt3dadd( -10.8093, -167.187, 1.45086, 0.49 ) }
    dend_6 { pt3dadd( -11.0126, -167.911, 2.57984, 0.49 ) }
    dend_6 { pt3dadd( -11.1563, -169.15, 4.33374, 0.49 ) }
    dend_6 { pt3dadd( -11.1683, -169.707, 5.00287, 0.49 ) }
    dend_6 { pt3dadd( -11.176, -170.282, 5.57946, 0.49 ) }
    dend_6 { pt3dadd( -11.2169, -172.176, 7.00041, 0.49 ) }
    dend_6 { pt3dadd( -11.1795, -173.703, 7.9905, 0.49 ) }
    dend_6 { pt3dadd( -11.1493, -174.852, 8.59721, 0.49 ) }
    dend_6 { pt3dadd( -11.0948, -176.627, 9.32799, 0.49 ) }
    dend_6 { pt3dadd( -11.0004, -178.338, 9.94676, 0.49 ) }
    dend_6 { pt3dadd( -10.9393, -179.32, 10.2518, 0.16 ) }
    dend_6 { pt3dadd( -10.7666, -180.902, 10.5691, 0.16 ) }
    dend_6 { pt3dadd( -10.5889, -181.703, 10.7248, 0.16 ) }
    dend_6 { pt3dadd( -10.4157, -182.248, 10.8013, 0.16 ) }
    dend_6 { pt3dadd( -9.9907, -183.147, 10.7874, 0.16 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 53/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 23.9282, 100.637, 6.41085, 0.81 ) }
    dend_52 { pt3dadd( 25.7628, 103.964, 5.44886, 0.81 ) }
    dend_52 { pt3dadd( 26.4786, 105.245, 4.76311, 0.65 ) }
    dend_52 { pt3dadd( 27.2757, 106.635, 3.89929, 0.65 ) }
    dend_52 { pt3dadd( 28.3975, 108.32, 2.58551, 0.65 ) }
    dend_52 { pt3dadd( 29.1903, 109.384, 1.65227, 0.65 ) }
    dend_52 { pt3dadd( 29.7244, 110.077, 0.968391, 0.49 ) }
    dend_52 { pt3dadd( 31.901, 112.907, -2.15286, 0.49 ) }
    dend_52 { pt3dadd( 32.1959, 113.27, -2.66568, 0.49 ) }
    dend_52 { pt3dadd( 33.3076, 114.67, -4.83924, 0.49 ) }
    dend_52 { pt3dadd( 33.7592, 115.325, -5.85062, 0.49 ) }
    dend_52 { pt3dadd( 34.8427, 117.187, -8.49246, 0.49 ) }
    dend_52 { pt3dadd( 35.5496, 118.667, -10.259, 0.49 ) }
    dend_52 { pt3dadd( 36.2087, 120.5, -11.8127, 0.49 ) }
    dend_52 { pt3dadd( 36.6021, 122.324, -12.9361, 0.49 ) }
    dend_52 { pt3dadd( 36.6953, 123.887, -13.448, 0.49 ) }
    dend_52 { pt3dadd( 36.6745, 125.367, -13.6841, 0.49 ) }
    dend_52 { pt3dadd( 36.5583, 127.448, -13.7499, 0.49 ) }
    dend_52 { pt3dadd( 36.3528, 130.369, -13.7851, 0.49 ) }
    dend_52 { pt3dadd( 36.1592, 132.629, -13.8663, 0.49 ) }
    dend_52 { pt3dadd( 35.739, 136.853, -14.208, 0.49 ) }
    dend_52 { pt3dadd( 35.5452, 139.109, -14.4736, 0.49 ) }
    dend_52 { pt3dadd( 35.463, 140.407, -14.6278, 0.49 ) }
    dend_52 { pt3dadd( 35.3511, 143.673, -15.0064, 0.49 ) }
    dend_52 { pt3dadd( 35.4108, 145.857, -15.4381, 0.49 ) }
    dend_52 { pt3dadd( 35.556, 147.26, -15.7669, 0.49 ) }
    dend_52 { pt3dadd( 35.9228, 149.332, -16.1249, 0.49 ) }
    dend_52 { pt3dadd( 36.4769, 151.954, -16.2846, 0.49 ) }
    dend_52 { pt3dadd( 36.8293, 153.449, -16.1784, 0.49 ) }
    dend_52 { pt3dadd( 37.6807, 156.669, -15.5034, 0.49 ) }
    dend_52 { pt3dadd( 37.99, 157.864, -15.1892, 0.49 ) }
    dend_52 { pt3dadd( 39.0092, 162.125, -14.3201, 0.49 ) }
    dend_52 { pt3dadd( 39.3303, 163.602, -14.0293, 0.49 ) }
    dend_52 { pt3dadd( 39.3589, 163.773, -14.004, 0.16 ) }
    dend_52 { pt3dadd( 39.532, 165.425, -13.6511, 0.16 ) }
    dend_52 { pt3dadd( 39.6169, 167.146, -13.0657, 0.16 ) }
    dend_52 { pt3dadd( 39.5814, 170.559, -12.6695, 0.16 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 90/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 23.9282, 100.637, 6.41085, 0.49 ) }
    dend_49 { pt3dadd( 23.5427, 101.672, 6.84089, 0.49 ) }
    dend_49 { pt3dadd( 22.8524, 103.525, 7.61097, 0.49 ) }
    dend_49 { pt3dadd( 22.1743, 105.346, 8.36752, 0.49 ) }
    dend_49 { pt3dadd( 21.4862, 107.193, 9.13513, 0.49 ) }
    dend_49 { pt3dadd( 20.4828, 109.887, 10.2545, 1.14 ) }
    dend_49 { pt3dadd( 19.3467, 112.937, 11.5219, 1.14 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 97/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 2.71666, 70.6005, 9.81536, 0.16 ) }
    dend_47 { pt3dadd( 2.66132, 70.9257, 9.82224, 0.16 ) }
    dend_47 { pt3dadd( 2.57446, 71.4362, 9.83305, 0.16 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 2.37581, 72.6036, 9.85778, 0.16 ) }
    dend_47 { pt3dadd( 2.13205, 74.0361, 9.88812, 0.16 ) }
    dend_47 { pt3dadd( 1.99653, 74.8325, 9.90498, 0.16 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 3/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 2.71666, 70.6005, 9.81536, 0.65 ) }
    dend_44 { pt3dadd( 2.03149, 71.4394, 9.10567, 0.65 ) }
    dend_44 { pt3dadd( 1.37931, 72.8596, 7.93901, 0.65 ) }
    dend_44 { pt3dadd( 0.974692, 73.7842, 7.35189, 0.49 ) }
    dend_44 { pt3dadd( 0.516423, 74.8706, 6.78137, 0.49 ) }
    dend_44 { pt3dadd( -0.052054, 76.1245, 6.242, 0.49 ) }
    dend_44 { pt3dadd( -1.41868, 79.0707, 5.17024, 0.49 ) }
    dend_44 { pt3dadd( -2.17189, 80.8178, 4.63604, 0.49 ) }
    dend_44 { pt3dadd( -3.19609, 83.4321, 3.94104, 0.49 ) }
    dend_44 { pt3dadd( -3.76985, 84.8283, 3.63574, 0.49 ) }
    dend_44 { pt3dadd( -4.86384, 87.0943, 3.26912, 0.49 ) }
    dend_44 { pt3dadd( -5.72534, 88.6066, 3.13592, 0.49 ) }
    dend_44 { pt3dadd( -5.93535, 88.9671, 3.13592, 0.49 ) }
    dend_44 { pt3dadd( -6.95003, 90.7547, 3.13592, 0.49 ) }
    dend_44 { pt3dadd( -7.72604, 92.3264, 3.13592, 0.49 ) }
    dend_44 { pt3dadd( -8.52008, 94.0277, 2.89133, 0.49 ) }
    dend_44 { pt3dadd( -9.35993, 95.8986, 2.37904, 0.49 ) }
    dend_44 { pt3dadd( -10.2023, 97.7072, 1.68751, 0.49 ) }
    dend_44 { pt3dadd( -11.0635, 99.3222, 0.942677, 0.49 ) }
    dend_44 { pt3dadd( -11.7927, 100.576, 0.132409, 0.49 ) }
    dend_44 { pt3dadd( -13.8874, 104.289, -2.71798, 0.49 ) }
    dend_44 { pt3dadd( -14.3623, 105.198, -3.45601, 0.49 ) }
    dend_44 { pt3dadd( -14.9416, 106.301, -4.37259, 0.49 ) }
    dend_44 { pt3dadd( -15.9508, 107.866, -5.90992, 0.49 ) }
    dend_44 { pt3dadd( -17.2945, 109.688, -7.83497, 0.49 ) }
    dend_44 { pt3dadd( -17.9831, 110.557, -8.77483, 0.49 ) }
    dend_44 { pt3dadd( -19.1374, 111.955, -9.92017, 0.49 ) }
    dend_44 { pt3dadd( -19.7821, 112.656, -10.4437, 0.49 ) }
    dend_44 { pt3dadd( -22.3662, 115.089, -12.287, 0.49 ) }
    dend_44 { pt3dadd( -23.2488, 115.861, -12.8575, 0.49 ) }
    dend_44 { pt3dadd( -25.5045, 117.689, -14.0734, 0.49 ) }
    dend_44 { pt3dadd( -28.2748, 119.91, -15.7389, 0.49 ) }
    dend_44 { pt3dadd( -29.6343, 121.14, -16.6359, 0.49 ) }
    dend_44 { pt3dadd( -31.6658, 123.39, -18.1035, 0.49 ) }
    dend_44 { pt3dadd( -32.4791, 124.627, -18.7326, 0.49 ) }
    dend_44 { pt3dadd( -33.085, 125.859, -19.445, 0.49 ) }
    dend_44 { pt3dadd( -34.0405, 128.407, -20.9161, 0.49 ) }
    dend_44 { pt3dadd( -34.721, 130.475, -22.066, 0.49 ) }
    dend_44 { pt3dadd( -34.9876, 131.336, -22.4414, 0.49 ) }
    dend_44 { pt3dadd( -35.5878, 133.138, -23.0243, 0.32 ) }
    dend_44 { pt3dadd( -36.8254, 136.638, -23.9342, 0.32 ) }
    dend_44 { pt3dadd( -38.0745, 139.76, -24.6029, 0.32 ) }
    dend_44 { pt3dadd( -39.6921, 143.298, -25.1467, 0.32 ) }
    dend_44 { pt3dadd( -41.2403, 146.301, -25.5408, 0.32 ) }
    dend_44 { pt3dadd( -42.3517, 148.316, -25.7361, 0.32 ) }
    dend_44 { pt3dadd( -43.6398, 150.57, -25.8845, 0.32 ) }
    dend_44 { pt3dadd( -44.3767, 151.875, -25.8679, 0.32 ) }
    dend_44 { pt3dadd( -45.5957, 153.997, -25.8357, 0.32 ) }
    dend_44 { pt3dadd( -46.3932, 155.304, -25.8087, 0.32 ) }
    dend_44 { pt3dadd( -47.8406, 157.391, -25.7508, 0.32 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 53/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 134.015, -180.264, -34.6601, 0.49 ) }
    dend_22 { pt3dadd( 133.314, -181.341, -35.1781, 0.49 ) }
    dend_22 { pt3dadd( 132.613, -182.418, -35.6966, 0.97 ) }
    dend_22 { pt3dadd( 132.285, -182.923, -35.9398, 0.97 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 134.015, -180.264, -34.6601, 0.32 ) }
    dend_21 { pt3dadd( 135.295, -180.694, -43.5901, 0.32 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 21.4756, -174.105, -12.9077, 0.81 ) }
    dend_9 { pt3dadd( 21.8436, -175.977, -13.0478, 0.81 ) }
    dend_9 { pt3dadd( 21.9865, -177.119, -13.1095, 0.81 ) }
    dend_9 { pt3dadd( 22.1186, -179.224, -13.0095, 0.81 ) }
    dend_9 { pt3dadd( 22.1747, -180.37, -12.8983, 0.81 ) }
    dend_9 { pt3dadd( 22.2647, -182.33, -12.6659, 0.97 ) }
    dend_9 { pt3dadd( 22.3354, -183.47, -12.5213, 0.97 ) }
    dend_9 { pt3dadd( 22.5174, -185.92, -12.1236, 0.97 ) }
    dend_9 { pt3dadd( 22.8749, -188.357, -11.7171, 0.97 ) }
    dend_9 { pt3dadd( 23.3347, -190.34, -11.4573, 0.97 ) }
    dend_9 { pt3dadd( 23.6693, -191.274, -11.3779, 0.97 ) }
    dend_9 { pt3dadd( 24.3901, -192.779, -11.325, 0.97 ) }
    dend_9 { pt3dadd( 25.5371, -194.726, -11.3601, 0.97 ) }
    dend_9 { pt3dadd( 26.8918, -196.789, -11.5092, 0.97 ) }
    dend_9 { pt3dadd( 28.1194, -198.661, -11.7383, 0.97 ) }
    dend_9 { pt3dadd( 29.1651, -200.421, -11.9474, 0.97 ) }
    dend_9 { pt3dadd( 29.7846, -201.606, -12.1404, 0.97 ) }
    dend_9 { pt3dadd( 30.5282, -203.457, -12.501, 0.97 ) }
    dend_9 { pt3dadd( 31.0974, -205.46, -12.9266, 0.97 ) }
    dend_9 { pt3dadd( 31.3071, -206.726, -13.1897, 0.97 ) }
    dend_9 { pt3dadd( 31.4529, -208.448, -13.4963, 0.97 ) }
    dend_9 { pt3dadd( 31.6242, -210.79, -13.9266, 0.97 ) }
    dend_9 { pt3dadd( 31.8908, -213.019, -14.3259, 0.97 ) }
    dend_9 { pt3dadd( 32.133, -214.291, -14.5395, 0.97 ) }
    dend_9 { pt3dadd( 32.5633, -215.696, -14.8102, 0.97 ) }
    dend_9 { pt3dadd( 33.5863, -218.565, -15.3592, 0.97 ) }
    dend_9 { pt3dadd( 34.1654, -220.085, -15.6194, 0.97 ) }
    dend_9 { pt3dadd( 34.7472, -221.803, -15.9225, 0.97 ) }
    dend_9 { pt3dadd( 35.1216, -223.118, -16.2172, 0.97 ) }
    dend_9 { pt3dadd( 35.6743, -225.709, -16.859, 0.97 ) }
    dend_9 { pt3dadd( 36.0151, -227.941, -17.4371, 0.81 ) }
    dend_9 { pt3dadd( 36.195, -229.664, -17.8884, 0.81 ) }
    dend_9 { pt3dadd( 36.337, -232.589, -18.5773, 0.81 ) }
    dend_9 { pt3dadd( 36.3703, -234.511, -18.9615, 0.81 ) }
    dend_9 { pt3dadd( 36.3969, -236.111, -19.2098, 0.81 ) }
    dend_9 { pt3dadd( 36.4666, -237.74, -19.3676, 0.81 ) }
    dend_9 { pt3dadd( 36.6087, -238.896, -19.4515, 0.81 ) }
    dend_9 { pt3dadd( 36.9903, -241.164, -19.5571, 0.81 ) }
    dend_9 { pt3dadd( 37.3987, -243.247, -19.6824, 0.81 ) }
    dend_9 { pt3dadd( 37.6881, -244.906, -19.8495, 0.81 ) }
    dend_9 { pt3dadd( 37.9579, -246.688, -20.1, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_9 { pt3dadd( 38.2286, -248.701, -20.5417, 0.81 ) }
    dend_9 { pt3dadd( 38.3989, -250.156, -20.9031, 0.81 ) }
    dend_9 { pt3dadd( 38.7467, -253.479, -21.8774, 0.81 ) }
    dend_9 { pt3dadd( 38.9259, -255.56, -22.592, 0.81 ) }
    dend_9 { pt3dadd( 38.9932, -256.87, -23.1106, 0.81 ) }
    dend_9 { pt3dadd( 39.0164, -259.458, -24.2966, 0.81 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 6/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 21.4756, -174.105, -12.9077, 0.16 ) }
    dend_8 { pt3dadd( 23.4756, -174.255, -10.0177, 0.16 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 8/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 19.3467, 112.937, 11.5219, 0.81 ) }
    dend_51 { pt3dadd( 19.794, 115.776, 14.6306, 0.81 ) }
    dend_51 { pt3dadd( 19.7957, 117.076, 15.7607, 0.81 ) }
    dend_51 { pt3dadd( 19.5195, 118.72, 16.7827, 0.65 ) }
    dend_51 { pt3dadd( 19.3005, 120.022, 17.5929, 0.65 ) }
    dend_51 { pt3dadd( 19.1395, 120.98, 18.1889, 0.65 ) }
    dend_51 { pt3dadd( 18.8928, 122.448, 19.1016, 0.65 ) }
    dend_51 { pt3dadd( 18.3582, 123.632, 19.2476, 0.65 ) }
    dend_51 { pt3dadd( 17.6267, 124.722, 19.2435, 0.65 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 17/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 19.3467, 112.937, 11.5219, 0.49 ) }
    dend_50 { pt3dadd( 20.0139, 115.703, 10.9693, 0.49 ) }
    dend_50 { pt3dadd( 20.6112, 117.579, 10.9714, 0.49 ) }
    dend_50 { pt3dadd( 21.1792, 119.656, 11.1851, 0.49 ) }
    dend_50 { pt3dadd( 21.4636, 121.302, 11.6897, 0.49 ) }
    dend_50 { pt3dadd( 21.6479, 122.921, 12.3163, 0.49 ) }
    dend_50 { pt3dadd( 21.7778, 124.682, 13.03, 0.49 ) }
    dend_50 { pt3dadd( 22.0167, 126.869, 14.2726, 0.49 ) }
    dend_50 { pt3dadd( 22.2729, 128.718, 15.4514, 0.49 ) }
    dend_50 { pt3dadd( 22.5897, 131.869, 17.4785, 0.49 ) }
    dend_50 { pt3dadd( 22.5543, 133.389, 18.4386, 0.49 ) }
    dend_50 { pt3dadd( 22.3204, 134.773, 19.2853, 0.49 ) }
    dend_50 { pt3dadd( 21.6002, 137.199, 20.733, 0.49 ) }
    dend_50 { pt3dadd( 21.0732, 138.836, 21.5444, 0.49 ) }
    dend_50 { pt3dadd( 20.5197, 140.419, 22.2853, 0.49 ) }
    dend_50 { pt3dadd( 18.6164, 142.413, 22.4928, 0.49 ) }
    dend_50 { pt3dadd( 16.3892, 142.772, 22.1944, 0.16 ) }
    dend_50 { pt3dadd( 14.7462, 142.87, 21.9137, 0.16 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 35/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -47.8406, 157.391, -25.7508, 0.32 ) }
    dend_46 { pt3dadd( -47.7093, 159.111, -26.3631, 0.32 ) }
    dend_46 { pt3dadd( -47.8211, 160.026, -26.7596, 0.32 ) }
    dend_46 { pt3dadd( -48.1456, 161.125, -27.2263, 0.32 ) }
    dend_46 { pt3dadd( -48.8459, 162.854, -27.9158, 0.32 ) }
    dend_46 { pt3dadd( -49.4996, 164.356, -28.4708, 0.32 ) }
    dend_46 { pt3dadd( -51.143, 168.063, -29.7251, 0.32 ) }
    dend_46 { pt3dadd( -52.0286, 169.868, -30.1982, 0.32 ) }
    dend_46 { pt3dadd( -53.1528, 172.001, -30.5815, 0.81 ) }
    dend_46 { pt3dadd( -53.907, 173.404, -30.7172, 0.32 ) }
    dend_46 { pt3dadd( -54.4397, 174.424, -30.708, 0.97 ) }
    dend_46 { pt3dadd( -55.027, 175.794, -30.5023, 0.32 ) }
    dend_46 { pt3dadd( -56.0182, 178.894, -29.48, 0.97 ) }
    dend_46 { pt3dadd( -56.0855, 179.206, -29.3698, 0.16 ) }
    dend_46 { pt3dadd( -56.2984, 180.734, -28.8454, 0.16 ) }
    dend_46 { pt3dadd( -56.4594, 182.046, -28.4278, 0.65 ) }
    dend_46 { pt3dadd( -56.4633, 182.075, -28.4204, 0.16 ) }
    dend_46 { pt3dadd( -56.5732, 183.039, -28.2859, 0.16 ) }
    dend_46 { pt3dadd( -56.6659, 183.938, -28.1158, 0.16 ) }
    dend_46 { pt3dadd( -56.7668, 185.33, -27.5745, 0.81 ) }
    dend_46 { pt3dadd( -56.7757, 185.53, -27.4701, 0.16 ) }
    dend_46 { pt3dadd( -56.8036, 186.241, -27.0739, 0.16 ) }
    dend_46 { pt3dadd( -56.8642, 187.426, -26.4485, 1.14 ) }
    dend_46 { pt3dadd( -57.1334, 191.256, -25.489, 0.16 ) }
    dend_46 { pt3dadd( -57.2329, 191.733, -25.919, 0.16 ) }
    dend_46 { pt3dadd( -57.5484, 193.223, -27.428, 0.81 ) }
    dend_46 { pt3dadd( -57.675, 193.951, -28.195, 0.16 ) }
    dend_46 { pt3dadd( -57.7557, 194.748, -29.0649, 0.16 ) }
    dend_46 { pt3dadd( -57.8557, 201.247, -35.9998, 0.16 ) }
    dend_46 { pt3dadd( -57.7157, 202.666, -37.4339, 0.16 ) }
    dend_46 { pt3dadd( -57.4131, 204.469, -39.0869, 0.16 ) }
    dend_46 { pt3dadd( -57.2004, 205.43, -39.8487, 0.16 ) }
    dend_46 { pt3dadd( -56.6825, 207.272, -40.9016, 0.16 ) }
    dend_46 { pt3dadd( -55.7785, 209.873, -41.567, 0.16 ) }
    dend_46 { pt3dadd( -54.9196, 212.125, -41.4222, 0.97 ) }
    dend_46 { pt3dadd( -53.7937, 214.96, -41.2836, 0.16 ) }
    dend_46 { pt3dadd( -53.2554, 216.562, -41.2622, 0.16 ) }
    dend_46 { pt3dadd( -52.7821, 218.701, -41.3279, 0.16 ) }
    dend_46 { pt3dadd( -52.6325, 220.093, -41.4436, 0.16 ) }
    dend_46 { pt3dadd( -52.5947, 221.104, -41.6021, 0.81 ) }
    dend_46 { pt3dadd( -52.49, 223.526, -41.948, 0.16 ) }
    dend_46 { pt3dadd( -52.3208, 225.145, -42.1324, 0.16 ) }
    dend_46 { pt3dadd( -52.2106, 226.271, -42.3538, 0.16 ) }
    dend_46 { pt3dadd( -52.1558, 227.389, -42.6821, 0.16 ) }
    dend_46 { pt3dadd( -52.156, 227.599, -42.744, 0.16 ) }
    dend_46 { pt3dadd( -52.1399, 229.527, -43.2116, 0.16 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -47.8406, 157.391, -25.7508, 0.16 ) }
    dend_45 { pt3dadd( -50.3465, 158.008, -26.2903, 0.16 ) }
    dend_45 { pt3dadd( -51.4489, 158.286, -26.5425, 0.32 ) }
    dend_45 { pt3dadd( -53.3164, 158.703, -26.9502, 0.32 ) }
    dend_45 { pt3dadd( -55.4708, 159.219, -27.3912, 0.32 ) }
    dend_45 { pt3dadd( -58.4197, 159.964, -28.1847, 0.32 ) }
    dend_45 { pt3dadd( -59.9598, 160.394, -28.5215, 0.81 ) }
    dend_45 { pt3dadd( -60.762, 160.66, -28.7319, 0.32 ) }
    dend_45 { pt3dadd( -62.2938, 161.198, -29.0926, 0.32 ) }
    dend_45 { pt3dadd( -63.7863, 161.715, -29.3782, 0.32 ) }
    dend_45 { pt3dadd( -66.1198, 162.444, -29.6263, 0.32 ) }
    dend_45 { pt3dadd( -69.5561, 163.436, -29.9363, 0.97 ) }
    dend_45 { pt3dadd( -70.8418, 163.83, -30.1747, 0.16 ) }
    dend_45 { pt3dadd( -71.9099, 164.17, -30.4376, 0.16 ) }
    dend_45 { pt3dadd( -73.3284, 164.606, -30.8503, 0.16 ) }
    dend_45 { pt3dadd( -73.8442, 164.73, -31.0162, 0.16 ) }
    dend_45 { pt3dadd( -76.513, 165.21, -31.8451, 0.49 ) }
    dend_45 { pt3dadd( -77.5241, 165.338, -32.2221, 0.49 ) }
    dend_45 { pt3dadd( -78.4468, 165.399, -32.5886, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( -79.5341, 165.41, -33.0398, 0.32 ) }
    dend_45 { pt3dadd( -81.9348, 165.281, -34.0262, 0.32 ) }
    dend_45 { pt3dadd( -83.1645, 165.167, -34.5002, 0.32 ) }
    dend_45 { pt3dadd( -84.3882, 165.002, -34.9066, 0.97 ) }
    dend_45 { pt3dadd( -87.4289, 164.378, -35.9697, 0.16 ) }
    dend_45 { pt3dadd( -88.6537, 164.038, -36.3907, 0.16 ) }
    dend_45 { pt3dadd( -89.3557, 163.773, -36.6898, 0.16 ) }
    dend_45 { pt3dadd( -89.5426, 163.67, -36.7849, 0.32 ) }
    dend_45 { pt3dadd( -89.8821, 163.443, -36.9797, 0.32 ) }
    dend_45 { pt3dadd( -90.9363, 162.554, -37.5785, 0.32 ) }
    dend_45 { pt3dadd( -91.7536, 161.736, -37.9907, 0.32 ) }
    dend_45 { pt3dadd( -93.9233, 159.178, -39.1514, 0.65 ) }
    dend_45 { pt3dadd( -94.8689, 157.963, -39.612, 0.16 ) }
    dend_45 { pt3dadd( -95.4221, 157.233, -39.8304, 0.16 ) }
    dend_45 { pt3dadd( -96.0678, 156.427, -40.1415, 0.16 ) }
    dend_45 { pt3dadd( -96.2101, 156.267, -40.2134, 0.65 ) }
    dend_45 { pt3dadd( -97.1008, 155.349, -40.6173, 0.65 ) }
    dend_45 { pt3dadd( -97.9707, 154.508, -40.8902, 0.65 ) }
    dend_45 { pt3dadd( -99.008, 153.662, -41.2623, 0.16 ) }
    dend_45 { pt3dadd( -101.323, 151.892, -42.2831, 0.16 ) }
    dend_45 { pt3dadd( -102.652, 150.991, -42.9861, 0.16 ) }
    dend_45 { pt3dadd( -103.726, 150.349, -43.6102, 0.16 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 132.285, -182.923, -35.9398, 0.65 ) }
    dend_24 { pt3dadd( 132.065, -184.51, -35.787, 0.65 ) }
    dend_24 { pt3dadd( 131.907, -186.227, -35.4314, 0.65 ) }
    dend_24 { pt3dadd( 131.88, -187.658, -35.0991, 0.65 ) }
    dend_24 { pt3dadd( 131.908, -188.46, -34.9073, 0.65 ) }
    dend_24 { pt3dadd( 132.088, -190.043, -34.5277, 0.65 ) }
    dend_24 { pt3dadd( 132.59, -192.571, -33.9376, 0.65 ) }
    dend_24 { pt3dadd( 133.546, -195.264, -33.1222, 0.65 ) }
    dend_24 { pt3dadd( 134.328, -196.691, -32.5364, 0.65 ) }
    dend_24 { pt3dadd( 134.797, -197.297, -32.224, 0.65 ) }
    dend_24 { pt3dadd( 135.987, -198.483, -31.4407, 0.65 ) }
    dend_24 { pt3dadd( 137.187, -199.469, -30.6815, 0.32 ) }
    dend_24 { pt3dadd( 139.815, -201.329, -29.1677, 0.32 ) }
    dend_24 { pt3dadd( 140.461, -201.739, -28.852, 0.32 ) }
    dend_24 { pt3dadd( 141.925, -202.627, -28.0428, 0.32 ) }
    dend_24 { pt3dadd( 143.775, -203.848, -26.9532, 0.32 ) }
    dend_24 { pt3dadd( 144.848, -204.691, -26.2172, 0.32 ) }
    dend_24 { pt3dadd( 145.893, -205.65, -25.4635, 0.32 ) }
    dend_24 { pt3dadd( 147.355, -207.106, -24.5159, 0.97 ) }
    dend_24 { pt3dadd( 149.102, -208.81, -23.4201, 0.65 ) }
    dend_24 { pt3dadd( 150.391, -210.064, -22.5961, 0.65 ) }
    dend_24 { pt3dadd( 153.199, -212.952, -20.8349, 0.65 ) }
    dend_24 { pt3dadd( 154.112, -214.004, -20.2599, 0.65 ) }
    dend_24 { pt3dadd( 156.226, -216.785, -18.9335, 0.65 ) }
    dend_24 { pt3dadd( 157.075, -218.076, -18.4469, 0.65 ) }
    dend_24 { pt3dadd( 158.188, -219.985, -17.9053, 0.65 ) }
    dend_24 { pt3dadd( 159.212, -222.022, -17.5759, 0.49 ) }
    dend_24 { pt3dadd( 160.377, -224.879, -17.4975, 0.49 ) }
    dend_24 { pt3dadd( 160.606, -225.507, -17.5182, 0.49 ) }
    dend_24 { pt3dadd( 161.326, -227.796, -17.7123, 0.49 ) }
    dend_24 { pt3dadd( 162.301, -230.661, -17.8309, 0.49 ) }
    dend_24 { pt3dadd( 163.824, -234.593, -17.8516, 0.49 ) }
    dend_24 { pt3dadd( 164.583, -236.329, -17.8579, 0.49 ) }
    dend_24 { pt3dadd( 165.808, -238.928, -17.8546, 0.49 ) }
    dend_24 { pt3dadd( 166.743, -240.822, -17.8385, 0.49 ) }
    dend_24 { pt3dadd( 168.796, -244.964, -17.7467, 0.49 ) }
    dend_24 { pt3dadd( 169.677, -246.826, -17.6666, 0.49 ) }
    dend_24 { pt3dadd( 171.052, -250.166, -17.3159, 0.49 ) }
    dend_24 { pt3dadd( 171.626, -252.061, -17.1883, 0.49 ) }
    dend_24 { pt3dadd( 171.879, -253.221, -17.1749, 0.65 ) }
    dend_24 { pt3dadd( 172.086, -254.656, -17.2747, 0.65 ) }
    dend_24 { pt3dadd( 172.318, -256.597, -17.5943, 0.65 ) }
    dend_24 { pt3dadd( 172.581, -258.157, -17.8207, 0.65 ) }
    dend_24 { pt3dadd( 172.669, -258.513, -17.8337, 0.49 ) }
    dend_24 { pt3dadd( 173.377, -260.542, -18.0807, 0.49 ) }
    dend_24 { pt3dadd( 173.901, -261.737, -18.2907, 0.49 ) }
    dend_24 { pt3dadd( 175.28, -264.223, -18.8152, 0.49 ) }
    dend_24 { pt3dadd( 176.534, -266.251, -19.277, 0.32 ) }
    dend_24 { pt3dadd( 177.393, -267.624, -19.6012, 0.32 ) }
    dend_24 { pt3dadd( 179.084, -270.604, -20.0743, 0.32 ) }
    dend_24 { pt3dadd( 179.677, -271.768, -20.165, 0.32 ) }
    dend_24 { pt3dadd( 180.44, -273.249, -20.2838, 0.32 ) }
    dend_24 { pt3dadd( 181.082, -274.598, -20.3748, 0.81 ) }
    dend_24 { pt3dadd( 181.53, -275.525, -20.4165, 0.81 ) }
    dend_24 { pt3dadd( 182.915, -278.525, -20.5952, 0.49 ) }
    dend_24 { pt3dadd( 183.645, -280.085, -20.5602, 0.49 ) }
    dend_24 { pt3dadd( 185.04, -283.063, -20.5824, 0.16 ) }
    dend_24 { pt3dadd( 185.724, -284.619, -20.6808, 0.16 ) }
    dend_24 { pt3dadd( 186.085, -285.363, -20.8125, 0.16 ) }
    dend_24 { pt3dadd( 186.745, -286.603, -21.2728, 0.16 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 82/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 132.285, -182.923, -35.9398, 0.16 ) }
    dend_23 { pt3dadd( 132.914, -185.085, -36.5701, 0.16 ) }
    dend_23 { pt3dadd( 133.685, -187.385, -37.627, 0.32 ) }
    dend_23 { pt3dadd( 134.125, -188.649, -38.2311, 0.32 ) }
    dend_23 { pt3dadd( 134.772, -190.193, -38.946, 0.32 ) }
    dend_23 { pt3dadd( 135.333, -191.493, -39.762, 0.32 ) }
    dend_23 { pt3dadd( 136.394, -194.05, -41.5348, 0.32 ) }
    dend_23 { pt3dadd( 137.747, -197.249, -43.9468, 0.32 ) }
    dend_23 { pt3dadd( 138.23, -198.428, -44.8228, 0.32 ) }
    dend_23 { pt3dadd( 138.995, -200.407, -46.3534, 0.32 ) }
    dend_23 { pt3dadd( 140.589, -204.966, -49.8324, 0.32 ) }
    dend_23 { pt3dadd( 140.873, -205.829, -50.4445, 0.32 ) }
    dend_23 { pt3dadd( 141.404, -207.239, -51.3407, 0.32 ) }
    dend_23 { pt3dadd( 142.202, -209.108, -52.1522, 0.32 ) }
    dend_23 { pt3dadd( 143.021, -210.65, -52.6615, 0.32 ) }
    dend_23 { pt3dadd( 144.222, -212.343, -53.0488, 0.32 ) }
    dend_23 { pt3dadd( 145.619, -213.755, -53.1417, 0.32 ) }
    dend_23 { pt3dadd( 147.59, -215.357, -53.2503, 0.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 149.301, -216.512, -53.2886, 0.65 ) }
    dend_23 { pt3dadd( 150.57, -217.234, -53.2919, 0.65 ) }
    dend_23 { pt3dadd( 153.321, -218.597, -53.2645, 0.49 ) }
    dend_23 { pt3dadd( 157.184, -220.417, -53.0277, 0.49 ) }
    dend_23 { pt3dadd( 159.384, -221.528, -52.7905, 0.49 ) }
    dend_23 { pt3dadd( 161.713, -222.851, -52.4263, 0.49 ) }
    dend_23 { pt3dadd( 163.102, -223.776, -52.1426, 0.97 ) }
    dend_23 { pt3dadd( 164.326, -224.785, -51.6696, 0.97 ) }
    dend_23 { pt3dadd( 166.374, -226.86, -50.4987, 0.65 ) }
    dend_23 { pt3dadd( 167.524, -228.317, -49.6152, 0.65 ) }
    dend_23 { pt3dadd( 168.76, -230.098, -48.5037, 0.32 ) }
    dend_23 { pt3dadd( 169.683, -231.612, -47.5612, 0.32 ) }
    dend_23 { pt3dadd( 172.141, -235.973, -44.7654, 0.32 ) }
    dend_23 { pt3dadd( 173.808, -239.035, -42.7527, 0.32 ) }
    dend_23 { pt3dadd( 174.763, -240.633, -41.6759, 0.32 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 15/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 39.0164, -259.458, -24.2966, 0.81 ) }
    dend_15 { pt3dadd( 42.0485, -263.018, -21.2318, 0.81 ) }
    dend_15 { pt3dadd( 43.7543, -264.934, -19.8992, 0.81 ) }
    dend_15 { pt3dadd( 44.9658, -266.254, -19.1494, 0.65 ) }
    dend_15 { pt3dadd( 46.831, -268.219, -18.2836, 0.65 ) }
    dend_15 { pt3dadd( 47.2365, -268.621, -18.1323, 0.97 ) }
    dend_15 { pt3dadd( 48.3152, -269.612, -17.864, 0.97 ) }
    dend_15 { pt3dadd( 49.8528, -270.953, -17.8968, 0.97 ) }
    dend_15 { pt3dadd( 51.0965, -271.967, -17.9332, 0.97 ) }
    dend_15 { pt3dadd( 53.3745, -273.715, -18.043, 0.81 ) }
    dend_15 { pt3dadd( 54.4255, -274.496, -18.0633, 0.81 ) }
    dend_15 { pt3dadd( 56.4252, -276.074, -17.9596, 0.81 ) }
    dend_15 { pt3dadd( 57.4336, -277.0, -17.7903, 0.81 ) }
    dend_15 { pt3dadd( 59.3275, -279.178, -17.1865, 0.81 ) }
    dend_15 { pt3dadd( 59.6824, -279.673, -16.9596, 0.81 ) }
    dend_15 { pt3dadd( 60.172, -280.451, -16.6162, 0.81 ) }
    dend_15 { pt3dadd( 60.9205, -281.665, -16.1183, 0.81 ) }
    dend_15 { pt3dadd( 62.4739, -284.127, -15.2773, 0.81 ) }
    dend_15 { pt3dadd( 63.2975, -285.33, -15.0194, 0.65 ) }
    dend_15 { pt3dadd( 64.9303, -287.452, -14.9871, 0.65 ) }
    dend_15 { pt3dadd( 67.2553, -290.061, -15.2573, 0.65 ) }
    dend_15 { pt3dadd( 67.9491, -290.742, -15.334, 0.65 ) }
    dend_15 { pt3dadd( 70.1462, -292.747, -15.5382, 0.65 ) }
    dend_15 { pt3dadd( 70.5887, -293.128, -15.4936, 0.65 ) }
    dend_15 { pt3dadd( 72.1935, -294.378, -15.2, 0.65 ) }
    dend_15 { pt3dadd( 74.0052, -295.766, -14.762, 0.65 ) }
    dend_15 { pt3dadd( 76.4183, -297.607, -13.8985, 0.65 ) }
    dend_15 { pt3dadd( 77.8109, -298.708, -13.3902, 0.65 ) }
    dend_15 { pt3dadd( 80.3324, -300.746, -12.4923, 0.65 ) }
    dend_15 { pt3dadd( 82.8029, -302.923, -11.6907, 0.65 ) }
    dend_15 { pt3dadd( 83.6147, -303.7, -11.3739, 0.65 ) }
    dend_15 { pt3dadd( 85.0488, -305.122, -10.8636, 0.65 ) }
    dend_15 { pt3dadd( 86.2808, -306.316, -10.5421, 0.65 ) }
    dend_15 { pt3dadd( 88.1296, -307.991, -10.0882, 0.65 ) }
    dend_15 { pt3dadd( 89.7831, -309.41, -9.70611, 0.65 ) }
    dend_15 { pt3dadd( 91.7246, -311.144, -8.86658, 0.65 ) }
    dend_15 { pt3dadd( 92.8968, -312.138, -8.26334, 0.65 ) }
    dend_15 { pt3dadd( 93.6013, -312.672, -7.84029, 0.65 ) }
    dend_15 { pt3dadd( 95.2669, -313.793, -6.86338, 0.65 ) }
    dend_15 { pt3dadd( 96.7436, -314.655, -6.06302, 0.65 ) }
    dend_15 { pt3dadd( 99.2634, -316.035, -4.94217, 0.65 ) }
    dend_15 { pt3dadd( 100.539, -316.778, -4.565, 0.65 ) }
    dend_15 { pt3dadd( 102.637, -318.083, -4.09538, 0.65 ) }
    dend_15 { pt3dadd( 104.374, -319.243, -3.87024, 0.65 ) }
    dend_15 { pt3dadd( 105.595, -320.061, -3.85805, 0.65 ) }
    dend_15 { pt3dadd( 106.842, -320.882, -3.96282, 0.65 ) }
    dend_15 { pt3dadd( 108.854, -322.189, -4.2836, 0.65 ) }
    dend_15 { pt3dadd( 109.794, -322.863, -4.42951, 0.49 ) }
    dend_15 { pt3dadd( 110.997, -323.795, -4.60089, 0.49 ) }
    dend_15 { pt3dadd( 112.377, -324.861, -4.69928, 0.49 ) }
    dend_15 { pt3dadd( 113.598, -325.79, -4.77604, 0.49 ) }
    dend_15 { pt3dadd( 114.826, -326.631, -4.83566, 0.49 ) }
    dend_15 { pt3dadd( 116.013, -327.369, -4.81185, 0.49 ) }
    dend_15 { pt3dadd( 116.94, -327.93, -4.72424, 0.65 ) }
    dend_15 { pt3dadd( 118.092, -328.593, -4.56481, 0.65 ) }
    dend_15 { pt3dadd( 118.769, -329.02, -4.43972, 0.65 ) }
    dend_15 { pt3dadd( 119.419, -329.482, -4.29457, 0.49 ) }
    dend_15 { pt3dadd( 120.762, -330.444, -3.94535, 0.49 ) }
    dend_15 { pt3dadd( 121.929, -331.313, -3.59579, 0.49 ) }
    dend_15 { pt3dadd( 122.791, -332.055, -3.2971, 0.49 ) }
    dend_15 { pt3dadd( 123.662, -332.971, -2.95376, 0.49 ) }
    dend_15 { pt3dadd( 124.412, -333.908, -2.65366, 0.49 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 77/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 39.0164, -259.458, -24.2966, 0.32 ) }
    dend_10 { pt3dadd( 39.7471, -260.705, -24.3097, 0.32 ) }
    dend_10 { pt3dadd( 40.3752, -261.944, -24.4714, 0.32 ) }
    dend_10 { pt3dadd( 41.0772, -263.522, -24.7574, 0.49 ) }
    dend_10 { pt3dadd( 41.3931, -264.495, -25.1261, 0.49 ) }
    dend_10 { pt3dadd( 41.7549, -265.876, -25.7021, 0.49 ) }
    dend_10 { pt3dadd( 42.5507, -268.833, -26.9172, 0.49 ) }
    dend_10 { pt3dadd( 42.8145, -269.791, -27.3563, 0.49 ) }
    dend_10 { pt3dadd( 43.0283, -270.533, -27.7673, 0.49 ) }
    dend_10 { pt3dadd( 44.0438, -273.607, -29.5943, 0.49 ) }
    dend_10 { pt3dadd( 44.9448, -276.31, -31.1347, 0.49 ) }
    dend_10 { pt3dadd( 45.4137, -277.676, -31.8503, 0.81 ) }
    dend_10 { pt3dadd( 45.8335, -278.914, -32.3231, 0.81 ) }
    dend_10 { pt3dadd( 46.7934, -281.76, -33.1733, 0.65 ) }
    dend_10 { pt3dadd( 47.7073, -284.594, -33.7826, 0.65 ) }
    dend_10 { pt3dadd( 48.1147, -285.999, -33.9913, 0.65 ) }
    dend_10 { pt3dadd( 48.4433, -287.419, -34.1847, 0.49 ) }
    dend_10 { pt3dadd( 49.0176, -290.702, -34.5395, 0.32 ) }
    dend_10 { pt3dadd( 49.1681, -292.161, -34.6271, 0.32 ) }
    dend_10 { pt3dadd( 49.2101, -293.344, -34.6066, 0.32 ) }
    dend_10 { pt3dadd( 49.084, -295.259, -34.6123, 0.32 ) }
    dend_10 { pt3dadd( 48.9406, -296.542, -34.8407, 0.32 ) }
    dend_10 { pt3dadd( 48.9406, -296.542, -34.8407, 0.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_10 { pt3dadd( 48.6443, -298.173, -35.7635, 0.65 ) }
    dend_10 { pt3dadd( 48.4838, -298.978, -36.2346, 0.65 ) }
    dend_10 { pt3dadd( 48.1947, -300.575, -37.1558, 0.49 ) }
    dend_10 { pt3dadd( 47.8148, -303.782, -39.5525, 0.49 ) }
    dend_10 { pt3dadd( 47.7427, -305.034, -40.5431, 0.49 ) }
    dend_10 { pt3dadd( 47.7814, -307.32, -42.3962, 0.49 ) }
    dend_10 { pt3dadd( 48.017, -308.81, -43.7227, 0.49 ) }
    dend_10 { pt3dadd( 48.2737, -309.822, -44.6452, 0.49 ) }
    dend_10 { pt3dadd( 50.2394, -314.753, -49.1369, 0.49 ) }
    dend_10 { pt3dadd( 51.345, -316.904, -50.973, 0.81 ) }
    dend_10 { pt3dadd( 51.7058, -317.562, -51.5501, 0.81 ) }
    dend_10 { pt3dadd( 53.227, -320.189, -53.7969, 0.49 ) }
    dend_10 { pt3dadd( 53.7464, -321.192, -54.6067, 0.49 ) }
    dend_10 { pt3dadd( 54.4799, -322.996, -55.6845, 0.49 ) }
    dend_10 { pt3dadd( 54.7016, -323.767, -55.9164, 0.49 ) }
    dend_10 { pt3dadd( 55.3822, -326.814, -56.7312, 0.49 ) }
    dend_10 { pt3dadd( 55.5238, -327.767, -56.9114, 0.49 ) }
    dend_10 { pt3dadd( 55.6297, -329.552, -56.9831, 0.49 ) }
    dend_10 { pt3dadd( 55.7568, -332.451, -56.9422, 0.49 ) }
    dend_10 { pt3dadd( 55.7233, -333.921, -56.775, 0.32 ) }
    dend_10 { pt3dadd( 55.7781, -335.244, -56.4166, 0.32 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 21/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 124.412, -333.908, -2.65366, 0.49 ) }
    dend_17 { pt3dadd( 123.611, -335.083, -2.54435, 0.49 ) }
    dend_17 { pt3dadd( 123.098, -335.834, -2.47444, 0.49 ) }
    dend_17 { pt3dadd( 122.401, -336.856, -2.37935, 0.49 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 124.412, -333.908, -2.65366, 0.49 ) }
    dend_16 { pt3dadd( 125.064, -334.23, -2.71079, 0.49 ) }
    dend_16 { pt3dadd( 126.224, -334.897, -2.79367, 0.49 ) }
    dend_16 { pt3dadd( 127.109, -335.481, -2.84824, 0.49 ) }
    dend_16 { pt3dadd( 128.297, -336.343, -2.78507, 0.49 ) }
    dend_16 { pt3dadd( 129.367, -337.095, -2.68139, 0.49 ) }
    dend_16 { pt3dadd( 130.218, -337.696, -2.5791, 0.49 ) }
    dend_16 { pt3dadd( 131.492, -338.665, -2.37754, 0.49 ) }
    dend_16 { pt3dadd( 132.315, -339.36, -2.1796, 0.49 ) }
    dend_16 { pt3dadd( 134.56, -341.367, -1.51137, 0.49 ) }
    dend_16 { pt3dadd( 135.177, -341.949, -1.27733, 0.49 ) }
    dend_16 { pt3dadd( 136.064, -342.782, -0.909038, 0.49 ) }
    dend_16 { pt3dadd( 137.023, -343.695, -0.484252, 0.49 ) }
    dend_16 { pt3dadd( 139.094, -345.706, 0.455419, 0.49 ) }
    dend_16 { pt3dadd( 139.636, -346.243, 0.739236, 0.49 ) }
    dend_16 { pt3dadd( 140.664, -347.404, 1.3334, 0.49 ) }
    dend_16 { pt3dadd( 141.844, -348.794, 2.05726, 0.32 ) }
    dend_16 { pt3dadd( 141.844, -348.794, 2.05726, 0.16 ) }
    dend_16 { pt3dadd( 142.455, -349.505, 2.50452, 0.16 ) }
    dend_16 { pt3dadd( 143.745, -351.196, 3.57934, 0.16 ) }
    dend_16 { pt3dadd( 144.838, -352.723, 4.5945, 0.16 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 46/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 55.7781, -335.244, -56.4166, 0.32 ) }
    dend_14 { pt3dadd( 58.5381, -333.454, -56.4166, 0.32 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 48/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 55.7781, -335.244, -56.4166, 0.32 ) }
    dend_11 { pt3dadd( 55.9148, -336.483, -56.3767, 0.32 ) }
    dend_11 { pt3dadd( 56.0026, -337.458, -56.3524, 0.49 ) }
    dend_11 { pt3dadd( 56.077, -338.538, -56.179, 0.97 ) }
    dend_11 { pt3dadd( 56.2543, -340.594, -55.7415, 0.97 ) }
    dend_11 { pt3dadd( 56.3689, -341.541, -55.5176, 0.97 ) }
    dend_11 { pt3dadd( 56.4984, -342.476, -55.2913, 0.65 ) }
    dend_11 { pt3dadd( 56.7079, -343.888, -54.94, 0.65 ) }
    dend_11 { pt3dadd( 57.2363, -346.988, -54.159, 0.97 ) }
    dend_11 { pt3dadd( 57.4028, -347.762, -53.9704, 0.49 ) }
    dend_11 { pt3dadd( 57.6502, -348.665, -53.8296, 0.65 ) }
    dend_11 { pt3dadd( 58.0275, -349.908, -53.7663, 0.65 ) }
    dend_11 { pt3dadd( 58.5318, -351.63, -53.8585, 0.65 ) }
    dend_11 { pt3dadd( 58.9076, -353.115, -54.02, 1.14 ) }
    dend_11 { pt3dadd( 59.2284, -354.784, -54.3015, 1.14 ) }
    dend_11 { pt3dadd( 59.5558, -357.367, -54.6394, 0.65 ) }
    dend_11 { pt3dadd( 59.667, -358.813, -54.8086, 0.65 ) }
    dend_11 { pt3dadd( 59.7131, -360.403, -54.9609, 0.65 ) }
    dend_11 { pt3dadd( 59.6812, -362.365, -55.0927, 0.65 ) }
    dend_11 { pt3dadd( 59.5776, -363.83, -55.1469, 0.65 ) }
    dend_11 { pt3dadd( 59.3689, -365.811, -55.1614, 0.65 ) }
    dend_11 { pt3dadd( 59.2237, -367.125, -55.1705, 0.97 ) }
    dend_11 { pt3dadd( 59.107, -368.972, -55.3196, 0.97 ) }
    dend_11 { pt3dadd( 59.0971, -370.112, -55.4889, 0.65 ) }
    dend_11 { pt3dadd( 59.1462, -371.78, -55.8243, 0.65 ) }
    dend_11 { pt3dadd( 59.2232, -372.754, -56.0199, 0.65 ) }
    dend_11 { pt3dadd( 59.4645, -374.296, -56.3102, 0.65 ) }
    dend_11 { pt3dadd( 59.9554, -376.608, -56.6895, 0.65 ) }
    dend_11 { pt3dadd( 60.3915, -378.498, -56.9691, 0.65 ) }
    dend_11 { pt3dadd( 60.7487, -380.247, -57.1757, 0.65 ) }
    dend_11 { pt3dadd( 61.0782, -382.05, -57.3232, 0.65 ) }
    dend_11 { pt3dadd( 61.3531, -383.748, -57.4985, 0.65 ) }
    dend_11 { pt3dadd( 61.4705, -384.654, -57.5986, 0.65 ) }
    dend_11 { pt3dadd( 61.6289, -386.511, -57.903, 0.65 ) }
    dend_11 { pt3dadd( 61.754, -388.357, -58.043, 1.14 ) }
    dend_11 { pt3dadd( 61.787, -389.334, -58.1227, 1.14 ) }
    dend_11 { pt3dadd( 61.7935, -391.937, -58.3192, 0.81 ) }
    dend_11 { pt3dadd( 61.8052, -393.234, -58.4057, 0.81 ) }
    dend_11 { pt3dadd( 61.85, -394.418, -58.4709, 0.81 ) }
    dend_11 { pt3dadd( 61.9671, -398.868, -58.6476, 0.81 ) }
    dend_11 { pt3dadd( 62.0011, -402.264, -58.7117, 0.65 ) }
    dend_11 { pt3dadd( 61.9016, -404.87, -58.8135, 0.65 ) }
    dend_11 { pt3dadd( 61.8312, -405.85, -58.857, 0.49 ) }
    dend_11 { pt3dadd( 61.7719, -407.026, -58.9785, 0.49 ) }
    dend_11 { pt3dadd( 61.6612, -408.629, -59.2425, 0.49 ) }
    dend_11 { pt3dadd( 61.5573, -410.161, -59.6853, 0.49 ) }
    dend_11 { pt3dadd( 61.4057, -412.878, -60.2285, 0.49 ) }
    dend_11 { pt3dadd( 61.3002, -414.399, -60.5033, 0.49 ) }
    dend_11 { pt3dadd( 61.164, -416.15, -60.9443, 1.14 ) }
    dend_11 { pt3dadd( 60.9911, -418.575, -61.6638, 1.14 ) }
    dend_11 { pt3dadd( 60.8869, -420.787, -62.3692, 0.97 ) }
    dend_11 { pt3dadd( 60.7335, -423.433, -63.2212, 0.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 60.636, -425.25, -63.7705, 0.65 ) }
    dend_11 { pt3dadd( 60.4118, -428.874, -64.9179, 0.32 ) }
    dend_11 { pt3dadd( 60.3356, -430.28, -65.3014, 0.32 ) }
    dend_11 { pt3dadd( 60.3621, -431.558, -65.5777, 0.65 ) }
    dend_11 { pt3dadd( 60.4087, -432.699, -65.7353, 0.65 ) }
    dend_11 { pt3dadd( 60.4397, -433.364, -65.8215, 0.49 ) }
    dend_11 { pt3dadd( 60.5396, -435.365, -65.8467, 0.49 ) }
    dend_11 { pt3dadd( 60.5464, -437.131, -65.6491, 0.49 ) }
    dend_11 { pt3dadd( 60.4541, -438.429, -65.5025, 0.49 ) }
    dend_11 { pt3dadd( 60.2681, -439.709, -65.368, 0.49 ) }
    dend_11 { pt3dadd( 60.0534, -440.83, -65.267, 0.49 ) }
    dend_11 { pt3dadd( 59.8286, -441.836, -65.2585, 0.49 ) }
    dend_11 { pt3dadd( 59.5409, -442.893, -65.2835, 0.49 ) }
    dend_11 { pt3dadd( 59.121, -444.278, -65.4088, 0.49 ) }
    dend_11 { pt3dadd( 58.7157, -445.516, -65.5455, 0.49 ) }
    dend_11 { pt3dadd( 58.2682, -446.903, -65.7339, 0.49 ) }
    dend_11 { pt3dadd( 57.6913, -449.032, -66.0879, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 17/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 57.6913, -449.032, -66.0879, 0.49 ) }
    dend_13 { pt3dadd( 58.7726, -452.086, -67.2563, 0.49 ) }
    dend_13 { pt3dadd( 59.3774, -453.912, -67.841, 0.49 ) }
    dend_13 { pt3dadd( 60.1951, -456.591, -68.5371, 0.97 ) }
    dend_13 { pt3dadd( 60.5882, -458.028, -68.8595, 0.65 ) }
    dend_13 { pt3dadd( 60.8671, -459.239, -69.0905, 0.65 ) }
    dend_13 { pt3dadd( 61.1097, -460.508, -69.442, 0.65 ) }
    dend_13 { pt3dadd( 61.302, -462.07, -69.8682, 0.65 ) }
    dend_13 { pt3dadd( 61.4276, -463.933, -70.5215, 0.65 ) }
    dend_13 { pt3dadd( 61.391, -464.751, -70.8281, 0.65 ) }
    dend_13 { pt3dadd( 61.1595, -466.453, -71.4237, 0.65 ) }
    dend_13 { pt3dadd( 60.3293, -470.356, -72.7984, 0.65 ) }
    dend_13 { pt3dadd( 60.0706, -471.414, -73.1714, 0.65 ) }
    dend_13 { pt3dadd( 59.7379, -472.8, -73.6348, 1.14 ) }
    dend_13 { pt3dadd( 59.3667, -474.464, -74.1072, 0.65 ) }
    dend_13 { pt3dadd( 59.1905, -475.896, -74.4969, 0.65 ) }
    dend_13 { pt3dadd( 59.1961, -476.532, -74.6323, 0.65 ) }
    dend_13 { pt3dadd( 59.3581, -477.55, -74.7577, 0.65 ) }
    dend_13 { pt3dadd( 59.6766, -478.781, -75.08, 0.65 ) }
    dend_13 { pt3dadd( 59.8993, -479.528, -75.3352, 0.65 ) }
    dend_13 { pt3dadd( 60.6741, -482.019, -76.3254, 0.65 ) }
    dend_13 { pt3dadd( 61.1148, -483.464, -76.8518, 0.65 ) }
    dend_13 { pt3dadd( 61.5009, -484.942, -77.3964, 0.65 ) }
    dend_13 { pt3dadd( 61.9818, -487.2, -78.1846, 0.65 ) }
    dend_13 { pt3dadd( 62.3325, -489.082, -78.7979, 1.14 ) }
    dend_13 { pt3dadd( 62.4383, -489.709, -79.0074, 0.81 ) }
    dend_13 { pt3dadd( 63.0124, -493.462, -80.312, 1.3 ) }
    dend_13 { pt3dadd( 63.2503, -495.238, -80.9852, 0.81 ) }
    dend_13 { pt3dadd( 63.495, -497.052, -81.6756, 0.81 ) }
    dend_13 { pt3dadd( 63.5904, -497.595, -81.8723, 0.49 ) }
    dend_13 { pt3dadd( 64.2855, -500.914, -83.1387, 0.49 ) }
    dend_13 { pt3dadd( 64.7188, -502.797, -83.8516, 0.49 ) }
    dend_13 { pt3dadd( 65.1666, -504.608, -84.6032, 0.49 ) }
    dend_13 { pt3dadd( 65.656, -506.324, -85.2672, 0.49 ) }
    dend_13 { pt3dadd( 66.1037, -507.769, -85.8031, 0.65 ) }
    dend_13 { pt3dadd( 66.2192, -508.102, -85.9061, 0.49 ) }
    dend_13 { pt3dadd( 66.7805, -509.577, -86.2094, 0.49 ) }
    dend_13 { pt3dadd( 67.3587, -511.151, -86.466, 0.49 ) }
    dend_13 { pt3dadd( 67.8785, -512.712, -86.708, 0.49 ) }
    dend_13 { pt3dadd( 68.298, -514.393, -86.9245, 0.49 ) }
    dend_13 { pt3dadd( 68.6203, -516.313, -87.1112, 0.49 ) }
    dend_13 { pt3dadd( 68.807, -517.918, -87.2199, 0.49 ) }
    dend_13 { pt3dadd( 68.9167, -519.419, -87.2139, 0.49 ) }
    dend_13 { pt3dadd( 68.9776, -521.074, -87.0974, 0.49 ) }
    dend_13 { pt3dadd( 69.0093, -523.34, -86.8837, 0.49 ) }
    dend_13 { pt3dadd( 69.0151, -525.149, -86.6813, 0.97 ) }
    dend_13 { pt3dadd( 69.0719, -526.29, -86.5411, 0.97 ) }
    dend_13 { pt3dadd( 69.2991, -528.274, -86.2813, 0.49 ) }
    dend_13 { pt3dadd( 69.7326, -530.504, -86.0278, 0.65 ) }
    dend_13 { pt3dadd( 70.1579, -532.348, -85.8516, 0.49 ) }
    dend_13 { pt3dadd( 70.4687, -533.704, -85.7511, 0.49 ) }
    dend_13 { pt3dadd( 70.9014, -536.231, -85.6478, 0.81 ) }
    dend_13 { pt3dadd( 70.9558, -536.898, -85.6481, 0.32 ) }
    dend_13 { pt3dadd( 70.8632, -539.526, -85.7925, 0.32 ) }
    dend_13 { pt3dadd( 70.6188, -540.899, -85.8679, 0.32 ) }
    dend_13 { pt3dadd( 70.2143, -542.223, -85.9337, 0.32 ) }
    dend_13 { pt3dadd( 69.2984, -544.593, -86.033, 0.81 ) }
    dend_13 { pt3dadd( 68.8964, -545.55, -86.0614, 1.46 ) }
    dend_13 { pt3dadd( 68.5812, -546.365, -86.0748, 0.81 ) }
    dend_13 { pt3dadd( 67.7639, -548.665, -86.0748, 0.81 ) }
    dend_13 { pt3dadd( 67.4756, -549.779, -86.0748, 0.65 ) }
    dend_13 { pt3dadd( 67.3057, -550.757, -86.0748, 0.65 ) }
    dend_13 { pt3dadd( 67.0203, -553.522, -86.0748, 0.65 ) }
    dend_13 { pt3dadd( 66.9778, -554.171, -86.0748, 1.14 ) }
    dend_13 { pt3dadd( 66.9216, -555.2, -86.0748, 1.14 ) }
    dend_13 { pt3dadd( 66.8358, -556.348, -86.0748, 0.32 ) }
    dend_13 { pt3dadd( 66.7919, -556.712, -86.0748, 0.32 ) }
    dend_13 { pt3dadd( 66.625, -557.678, -86.0748, 0.32 ) }
    dend_13 { pt3dadd( 66.3638, -558.626, -86.0748, 0.32 ) }
    dend_13 { pt3dadd( 65.8795, -560.098, -86.0748, 0.32 ) }
    dend_13 { pt3dadd( 65.5414, -560.936, -86.0748, 0.81 ) }
    dend_13 { pt3dadd( 65.0027, -562.077, -86.1572, 0.81 ) }
    dend_13 { pt3dadd( 64.8328, -562.394, -86.1973, 0.81 ) }
    dend_13 { pt3dadd( 64.3162, -563.29, -86.3495, 0.49 ) }
    dend_13 { pt3dadd( 63.6948, -564.28, -86.4853, 0.49 ) }
    dend_13 { pt3dadd( 62.8778, -565.779, -86.9399, 1.14 ) }
    dend_13 { pt3dadd( 62.2843, -567.231, -87.5534, 0.32 ) }
    dend_13 { pt3dadd( 62.0168, -568.115, -88.0267, 0.32 ) }
    dend_13 { pt3dadd( 61.7571, -569.204, -88.8502, 0.32 ) }
    dend_13 { pt3dadd( 61.5576, -570.49, -90.013, 1.14 ) }
    dend_13 { pt3dadd( 61.2884, -573.624, -93.5076, 0.32 ) }
    dend_13 { pt3dadd( 61.2745, -574.298, -94.3052, 0.32 ) }
    dend_13 { pt3dadd( 61.261, -575.482, -95.6568, 0.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_13 { pt3dadd( 61.29, -577.308, -97.8434, 0.32 ) }
    dend_13 { pt3dadd( 61.3091, -578.047, -98.7684, 0.32 ) }
    dend_13 { pt3dadd( 61.3445, -580.212, -101.493, 0.32 ) }
    dend_13 { pt3dadd( 61.2038, -582.281, -103.824, 0.32 ) }
    dend_13 { pt3dadd( 61.1016, -583.328, -105.015, 0.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 5/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 57.6913, -449.032, -66.0879, 0.32 ) }
    dend_12 { pt3dadd( 57.6653, -451.409, -64.6921, 0.32 ) }
    dend_12 { pt3dadd( 57.6377, -453.571, -63.5604, 0.97 ) }
    dend_12 { pt3dadd( 57.6452, -454.619, -63.0841, 0.32 ) }
    dend_12 { pt3dadd( 57.7961, -458.196, -61.6902, 0.81 ) }
    dend_12 { pt3dadd( 57.9036, -459.964, -61.0887, 0.32 ) }
    dend_12 { pt3dadd( 57.9424, -460.586, -60.9029, 0.32 ) }
    dend_12 { pt3dadd( 58.0495, -461.743, -60.6754, 0.32 ) }
    dend_12 { pt3dadd( 58.1634, -463.259, -60.4516, 1.3 ) }
    dend_12 { pt3dadd( 58.191, -464.863, -60.3469, 1.3 ) }
    dend_12 { pt3dadd( 58.1469, -465.681, -60.3883, 0.32 ) }
    dend_12 { pt3dadd( 57.9875, -466.852, -60.4647, 0.32 ) }
    dend_12 { pt3dadd( 57.8223, -467.929, -60.5734, 0.32 ) }
    dend_12 { pt3dadd( 57.7677, -468.28, -60.6195, 0.32 ) }
    dend_12 { pt3dadd( 57.5881, -469.516, -60.811, 0.32 ) }
    dend_12 { pt3dadd( 57.5054, -470.385, -60.9521, 0.32 ) }
    dend_12 { pt3dadd( 57.5413, -472.957, -61.3364, 0.81 ) }
    dend_12 { pt3dadd( 57.6558, -474.087, -61.486, 0.32 ) }
    dend_12 { pt3dadd( 57.7595, -474.763, -61.5359, 1.3 ) }
    dend_12 { pt3dadd( 57.9606, -475.913, -61.5686, 1.3 ) }
    dend_12 { pt3dadd( 58.1586, -476.933, -61.5554, 0.16 ) }
    dend_12 { pt3dadd( 58.4446, -478.762, -61.4549, 0.16 ) }
    dend_12 { pt3dadd( 58.6258, -480.212, -61.3065, 0.16 ) }
    dend_12 { pt3dadd( 58.817, -482.021, -60.9262, 0.49 ) }
    dend_12 { pt3dadd( 58.8821, -482.821, -60.6939, 0.16 ) }
    dend_12 { pt3dadd( 58.9541, -483.893, -60.3099, 0.16 ) }
    dend_12 { pt3dadd( 59.0481, -485.611, -59.615, 0.16 ) }
    dend_12 { pt3dadd( 59.0685, -486.148, -59.3829, 0.16 ) }
    dend_12 { pt3dadd( 59.1581, -489.693, -57.9153, 0.49 ) }
    dend_12 { pt3dadd( 59.1732, -490.718, -57.54, 0.16 ) }
    dend_12 { pt3dadd( 59.1823, -491.353, -57.3284, 0.16 ) }
    dend_12 { pt3dadd( 59.2172, -492.951, -56.8717, 0.32 ) }
    dend_12 { pt3dadd( 59.2919, -494.409, -56.5493, 0.32 ) }
    dend_12 { pt3dadd( 59.3876, -496.029, -56.1946, 0.32 ) }
    dend_12 { pt3dadd( 59.4817, -497.159, -55.9979, 1.46 ) }
    dend_12 { pt3dadd( 59.5739, -497.858, -55.8319, 0.16 ) }
    dend_12 { pt3dadd( 59.7212, -498.894, -55.5357, 0.16 ) }
    dend_12 { pt3dadd( 59.9097, -500.366, -55.0415, 0.97 ) }
    dend_12 { pt3dadd( 60.0694, -502.664, -53.9205, 0.16 ) }
    dend_12 { pt3dadd( 60.0725, -503.819, -53.2379, 0.16 ) }
    dend_12 { pt3dadd( 60.046, -504.316, -52.9204, 0.65 ) }
    dend_12 { pt3dadd( 59.8807, -505.564, -52.0336, 0.65 ) }
    dend_12 { pt3dadd( 59.6238, -506.584, -51.2628, 0.65 ) }
    dend_12 { pt3dadd( 58.6908, -509.113, -49.4089, 0.32 ) }
    dend_12 { pt3dadd( 58.3627, -509.882, -48.8728, 0.32 ) }
    dend_12 { pt3dadd( 58.0921, -510.509, -48.4391, 0.32 ) }
    dend_12 { pt3dadd( 57.5178, -511.953, -47.484, 0.32 ) }
    dend_12 { pt3dadd( 57.1607, -512.932, -46.9202, 0.32 ) }
    dend_12 { pt3dadd( 56.6512, -514.484, -46.2083, 0.32 ) }
    dend_12 { pt3dadd( 55.9227, -517.003, -45.4225, 0.32 ) }
    dend_12 { pt3dadd( 55.4746, -518.688, -44.9884, 0.32 ) }
    dend_12 { pt3dadd( 55.1843, -519.892, -44.7389, 0.32 ) }
    dend_12 { pt3dadd( 54.9111, -521.359, -44.5324, 0.32 ) }
    dend_12 { pt3dadd( 54.7699, -522.326, -44.4265, 0.32 ) }
    dend_12 { pt3dadd( 54.5237, -524.061, -44.3189, 0.32 ) }
    dend_12 { pt3dadd( 54.3663, -525.145, -44.311, 0.32 ) }
    dend_12 { pt3dadd( 54.1862, -526.315, -44.2826, 0.32 ) }
    dend_12 { pt3dadd( 54.0173, -527.281, -44.2568, 0.65 ) }
    dend_12 { pt3dadd( 53.6722, -528.78, -44.1857, 0.65 ) }
    dend_12 { pt3dadd( 53.3687, -529.978, -44.1313, 0.65 ) }
    dend_12 { pt3dadd( 53.0522, -531.072, -44.0879, 0.65 ) }
    dend_12 { pt3dadd( 52.6073, -532.658, -44.0465, 0.65 ) }
    dend_12 { pt3dadd( 52.2038, -534.093, -44.0474, 0.65 ) }
    dend_12 { pt3dadd( 51.701, -535.747, -44.0578, 0.65 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_39, dend_34, dend_25, dend_0, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_4, dend_1, dend_53, dend_42, dend_38, dend_37, dend_31, dend_28, dend_18, dend_5, dend_3, dend_2, dend_48, dend_43, dend_33, dend_32, dend_30, dend_29, dend_20, dend_19, dend_7, dend_6, dend_52, dend_49, dend_47, dend_44, dend_22, dend_21, dend_9, dend_8, dend_51, dend_50, dend_46, dend_45, dend_24, dend_23, dend_15, dend_10, dend_17, dend_16, dend_14, dend_11, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_39, dend_34, dend_25, dend_0, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_4, dend_1, dend_53, dend_42, dend_38, dend_37, dend_31, dend_28, dend_18, dend_5, dend_3, dend_2, dend_48, dend_43, dend_33, dend_32, dend_30, dend_29, dend_20, dend_19, dend_7, dend_6, dend_52, dend_49, dend_47, dend_44, dend_22, dend_21, dend_9, dend_8, dend_51, dend_50, dend_46, dend_45, dend_24, dend_23, dend_15, dend_10, dend_17, dend_16, dend_14, dend_11, dend_13, dend_12]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_39, dend_34, dend_25, dend_0, axon_0, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_4, dend_1, axon_1, dend_53, dend_42, dend_38, dend_37, dend_31, dend_28, dend_18, dend_5, dend_3, dend_2, dend_48, dend_43, dend_33, dend_32, dend_30, dend_29, dend_20, dend_19, dend_7, dend_6, dend_52, dend_49, dend_47, dend_44, dend_22, dend_21, dend_9, dend_8, dend_51, dend_50, dend_46, dend_45, dend_24, dend_23, dend_15, dend_10, dend_17, dend_16, dend_14, dend_11, dend_13, dend_12]}
    ModelViewParmSubset_5 = new SectionList()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_40 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_18 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_5 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_48 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_33 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_30 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_6 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_52 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_44 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_9 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_46 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_24 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_15 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_11 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_13 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_12 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_25 OneSecGrp_SectionRef_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_39 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_4 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_27 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_34 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_42 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_53 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_37 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_28 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_3 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_22 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_14 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_17 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_16 OneSecGrp_SectionRef_53.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_22, dend_22, dend_22, dend_21, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 5
    dend_26 nseg = 3
    dend_1 nseg = 9
    dend_31 nseg = 7
    dend_18 nseg = 5
    dend_5 nseg = 5
    dend_48 nseg = 3
    dend_33 nseg = 7
    dend_32 nseg = 3
    dend_30 nseg = 11
    dend_29 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_52 nseg = 5
    dend_44 nseg = 5
    dend_9 nseg = 5
    dend_46 nseg = 5
    dend_45 nseg = 3
    dend_24 nseg = 7
    dend_23 nseg = 5
    dend_15 nseg = 5
    dend_10 nseg = 5
    dend_11 nseg = 5
    dend_13 nseg = 7
    dend_12 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_MC_cc2a170ef6_0_0


