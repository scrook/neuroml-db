// Cell: cNAC187_L23_ChC_88b9ee8f5d_0_0
/*
{
  "id" : "cNAC187_L23_ChC_88b9ee8f5d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.96523, -8.50396, 0.0192879, 2.77292", "-4.44098, -7.63716, 0.0179479, 3.51612", "-3.91674, -6.77037, 0.0166079, 5.09768", "-3.3925, -5.90357, 0.0152679, 6.03936", "-2.86825, -5.03677, 0.0139278, 6.97148", "-2.34401, -4.16997, 0.0125878, 7.92835", "-1.81976, -3.30317, 0.0112478, 9.28613", "-1.29552, -2.43637, 0.00990778, 9.94241", "-0.771277, -1.56957, 0.00856776, 10.1843", "-0.247034, -0.702773, 0.00722774, 10.3452", "0.27721, 0.164025, 0.00588772, 10.228", "0.801453, 1.03082, 0.0045477, 9.54324", "1.3257, 1.89762, 0.00320768, 8.78219", "1.84994, 2.76442, 0.00186766, 7.98349", "2.37418, 3.63122, 5.27637E-4, 7.19659", "2.89843, 4.49802, -8.12382E-4, 6.4097", "3.42267, 5.36482, -0.0021524, 5.30941", "3.94692, 6.23162, -0.00349242, 4.2542", "4.47116, 7.09842, -0.00483244, 3.4094", "4.9954, 7.96521, -0.00617246, 2.28943", "5.51965, 8.83201, -0.00751248, 1.46335" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.16275, -9.55365, 5.04691, 2.4", "-4.89057, -17.3958, 3.04032, 2.22", "-5.48035, -23.7505, 1.41428, 2.22", "-6.19358, -31.4355, -0.552114, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "6.23725, 4.22235, -2.37309, 0.55", "8.53074, 6.58613, -3.76352, 0.55", "11.0101, 9.1414, -5.26658, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.56725, 8.32785, -2.03309, 1.94", "4.74753, 9.82417, -3.21778, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.51965, 8.83201, -0.00751248, 0.83", "13.2824, 21.6671, -0.00751248, 0.83", "21.0451, 34.5022, -0.00751248, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-6.19358, -31.4355, -0.552114, 0.83", "-3.63964, -32.8916, -1.13493, 0.83", "-1.57403, -34.0693, -1.60632, 0.83", "1.48471, -35.8133, -2.30434, 0.83", "3.3418, -36.8721, -2.72814, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-6.19358, -31.4355, -0.552114, 2.22", "-7.1479, -33.2085, -2.18405, 2.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "11.0101, 9.1414, -5.26658, 0.55", "12.43, 10.539, -5.47386, 0.55", "13.7334, 11.8508, -5.63115, 1.11", "15.1778, 13.3473, -5.77018, 0.55", "16.0654, 14.334, -5.83889, 0.55", "17.5127, 16.0596, -6.05417, 0.83", "18.5799, 17.4576, -6.32026, 0.55", "19.265, 18.5141, -6.55776, 0.55", "20.2738, 20.2879, -7.01157, 1.11", "21.1312, 22.0509, -7.52955, 1.11", "22.116, 24.4029, -8.38318, 0.55", "22.938, 26.8236, -9.3576, 0.83", "23.401, 28.3992, -10.0593, 0.55", "23.5611, 29.0255, -10.3488, 0.55", "23.9828, 30.9194, -11.248, 1.11", "24.3824, 32.8712, -12.1374, 0.28", "24.5592, 33.7281, -12.4588, 0.55", "24.9551, 35.6638, -13.1782, 0.28", "25.1557, 36.6842, -13.5609, 0.83", "25.5275, 38.5643, -14.2753, 0.28", "25.6767, 39.4215, -14.5819, 0.83", "25.946, 41.397, -15.2671, 0.83", "26.318, 44.255, -16.3845, 0.28", "26.413, 45.1015, -16.7523, 0.55", "26.5523, 46.3478, -17.3363, 0.28", "26.6862, 47.5099, -17.8853, 1.11", "27.0658, 50.7477, -19.4231, 0.28", "27.2777, 52.4929, -20.2437, 0.83", "27.5444, 54.4481, -21.074, 0.28", "27.6917, 55.3632, -21.4326, 0.55", "28.0069, 57.0069, -22.0767, 0.28", "28.1579, 57.6569, -22.3078, 0.55", "28.3958, 58.6493, -22.5968, 0.28", "28.6083, 59.5901, -22.8817, 0.83", "28.9406, 61.1709, -23.3468, 0.83", "29.655, 65.1016, -24.5954, 0.28", "29.9266, 66.85, -25.1196, 0.55", "30.1456, 68.6268, -25.6234, 0.28", "30.4837, 71.8801, -26.4862, 0.55", "30.7409, 74.5139, -27.1011, 0.28", "30.8421, 75.9007, -27.3653, 0.55", "31.0137, 77.9626, -27.6708, 0.28", "31.1985, 79.7692, -27.9903, 0.55", "31.3197, 80.7031, -28.109, 0.55", "31.7787, 83.5799, -28.2473, 0.28", "31.9914, 84.6917, -28.2947, 0.55", "32.6736, 87.7777, -28.3745, 0.28", "32.9201, 88.82, -28.3969, 0.55", "33.5161, 91.1968, -28.3807, 0.28", "34.0307, 93.346, -28.3847, 0.55", "34.7082, 96.2677, -28.3955, 0.28", "34.8846, 97.055, -28.3939, 0.55", "35.325, 99.0286, -28.4256, 0.28", "35.7912, 101.097, -28.5672, 0.55", "36.3508, 103.545, -28.8848, 0.28", "36.7372, 105.28, -29.1503, 0.55", "37.2211, 107.439, -29.5324, 0.28", "37.8513, 110.283, -30.089, 0.55", "38.3947, 112.704, -30.6205, 0.28", "38.6449, 113.797, -30.8709, 0.55", "39.2421, 116.332, -31.4373, 0.55", "39.7171, 118.272, -31.834, 0.28", "39.9797, 119.343, -32.0168, 0.55", "40.312, 120.749, -32.1546, 0.28", "40.5791, 121.827, -32.2033, 0.55", "40.8285, 122.803, -32.1887, 0.55", "41.2827, 124.573, -32.0181, 0.28", "41.441, 125.252, -31.9257, 0.55", "41.908, 127.257, -31.6768, 0.28", "42.1646, 128.34, -31.5364, 0.83", "42.4939, 129.738, -31.4492, 0.28", "42.7517, 130.62, -31.4949, 0.55", "43.2161, 131.963, -31.7176, 0.28", "43.6212, 132.846, -31.8951, 0.55", "44.6894, 134.678, -32.3004, 0.28", "45.6135, 136.103, -32.6489, 0.55", "47.1702, 138.25, -33.1988, 0.28", "47.995, 139.29, -33.4699, 0.55", "49.7302, 141.248, -33.9871, 0.28", "50.987, 142.581, -34.4379, 0.28", "51.3275, 142.905, -34.5831, 0.28", "52.9833, 144.347, -35.3159, 0.28", "54.2375, 145.415, -35.8938, 0.83", "57.3829, 148.071, -37.4941, 0.28", "58.8709, 149.308, -38.3758, 0.55", "61.136, 151.117, -39.8066, 0.28", "61.8121, 151.638, -40.2422, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "11.0101, 9.1414, -5.26658, 0.55", "11.8016, 11.8536, -5.71769, 0.55", "12.6465, 14.8005, -6.0791, 0.55", "13.0953, 16.5071, -6.20439, 0.55", "13.8442, 19.5635, -6.52074, 0.55", "14.2903, 21.5055, -6.71895, 0.28", "14.9236, 24.0619, -6.96876, 1.11", "15.545, 26.7377, -7.2623, 0.55", "15.9023, 28.5165, -7.48336, 0.55", "16.4671, 31.9179, -7.81818, 0.83", "16.8562, 34.3745, -8.03907, 0.55", "17.3416, 37.836, -8.2924, 0.55", "17.7636, 41.1319, -8.59494, 0.55", "18.1311, 44.1684, -8.97157, 0.55", "18.5619, 47.7712, -9.39597, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.74753, 9.82417, -3.21778, 0.83", "6.27062, 10.9969, -3.24565, 0.83", "8.15643, 12.449, -3.28014, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.74753, 9.82417, -3.21778, 1.11", "4.1936, 13.2496, -2.4402, 1.11", "3.86779, 15.2643, -1.98285, 0.83", "3.20378, 19.3705, -1.05075, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.0451, 34.5022, -0.00751248, 0.28", "28.8079, 47.3373, -0.00751248, 0.28", "36.5706, 60.1724, -0.00751248, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "3.3418, -36.8721, -2.72814, 0.55", "5.77202, -38.6621, -2.02188, 0.55", "8.17902, -40.4349, -1.32237, 0.55", "10.1728, -41.9034, -0.74297, 0.28", "12.1423, -43.3541, -0.170584, 0.55", "14.6305, -45.1867, 0.552514, 0.55", "16.4911, -46.5572, 1.09323, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "3.3418, -36.8721, -2.72814, 0.55", "4.93153, -37.7155, -2.49471, 0.55", "7.00412, -38.7185, -2.28694, 0.55", "8.44623, -39.3581, -2.14633, 0.83", "10.5453, -40.304, -2.02243, 0.55", "12.4933, -41.1711, -1.93342, 0.55", "14.9049, -42.2225, -1.811, 0.83", "16.62, -42.9061, -1.77998, 0.28", "18.3195, -43.5141, -1.77191, 0.55", "20.3628, -44.2588, -1.91294, 0.28", "21.5641, -44.7259, -2.08136, 0.55", "23.4506, -45.5037, -2.49578, 0.55", "25.1155, -46.244, -2.92716, 0.55", "26.8811, -47.0488, -3.41909, 0.55", "30.0783, -48.4507, -4.39961, 0.55", "31.5381, -49.0933, -4.87303, 0.28", "32.5177, -49.571, -5.20901, 0.55", "33.9151, -50.2987, -5.70376, 0.55", "35.6549, -51.2717, -6.29337, 0.55", "37.7692, -52.5045, -6.93701, 0.55", "39.8834, -53.748, -7.48888, 0.55", "41.416, -54.6765, -7.87989, 0.55", "43.2083, -55.7736, -8.34507, 0.55", "44.7146, -56.7063, -8.77208, 0.55", "46.1313, -57.6299, -9.20285, 0.55", "48.2136, -58.9729, -9.81229, 0.55", "49.747, -59.8925, -10.2507, 0.55", "51.471, -60.8773, -10.7839, 0.83", "53.2313, -61.8874, -11.347, 0.83", "54.7645, -62.7692, -11.8612, 0.55", "56.4785, -63.7584, -12.5398, 0.55", "57.6013, -64.4068, -13.0024, 0.83", "59.5668, -65.4536, -13.7999, 0.28", "60.9482, -66.1192, -14.3271, 0.55", "64.0003, -67.4501, -15.3409, 0.55", "66.9044, -68.6047, -16.2572, 0.55", "68.2089, -69.0984, -16.6505, 0.28", "69.9312, -69.6859, -17.0759, 0.55", "72.7123, -70.5657, -17.6318, 0.28", "74.3401, -71.115, -17.8762, 0.28", "75.7119, -71.6071, -18.0728, 0.28", "77.394, -72.3159, -18.3455, 0.55", "78.777, -73.014, -18.6527, 0.55", "80.8059, -74.3, -19.2683, 0.55", "82.8299, -75.7652, -20.061, 0.55", "85.1199, -77.4613, -21.1278, 0.55", "86.4846, -78.5201, -21.7643, 0.28", "87.499, -79.3421, -22.2518, 0.55", "89.5212, -81.0585, -23.2704, 0.55", "91.441, -82.7144, -24.1824, 0.55", "93.1516, -84.1643, -24.9626, 0.83", "94.5732, -85.4138, -25.4784, 0.83", "95.2812, -85.9918, -25.7114, 0.83", "96.8818, -87.2018, -26.1692, 0.28", "98.0389, -87.9666, -26.3759, 0.83", "100.379, -89.3119, -26.587, 0.28", "101.935, -90.0751, -26.7058, 0.83", "104.163, -91.0228, -26.7296, 0.55", "105.704, -91.5691, -26.6105, 0.55", "109.114, -92.6129, -25.9827, 0.55", "110.825, -93.0981, -25.4209, 0.55", "112.526, -93.5506, -24.5815, 0.55", "115.101, -94.2612, -22.7471, 0.55", "116.001, -94.5821, -21.8789, 0.55", "117.024, -95.0233, -20.7032, 0.83", "118.828, -96.0406, -18.3216, 0.28", "119.401, -96.4254, -17.5444, 0.55", "121.145, -97.664, -15.2142, 0.28", "122.691, -98.8634, -13.4624, 0.55", "123.33, -99.3969, -12.8399, 0.55", "124.718, -100.563, -11.7662, 0.28", "125.551, -101.263, -11.3306, 0.28", "126.343, -101.92, -11.0272, 0.55", "127.991, -103.176, -10.6544, 0.28", "128.954, -103.829, -10.498, 0.28", "129.584, -104.213, -10.4041, 0.55", "131.395, -105.115, -10.1277, 0.28", "133.106, -105.897, -9.83173, 0.55", "134.6, -106.45, -9.53331, 0.28", "135.997, -106.891, -9.2323, 0.55", "138.199, -107.52, -8.73844, 0.28", "139.97, -107.971, -8.31975, 0.28", "142.216, -108.466, -7.72549, 0.55", "144.106, -108.855, -7.17835, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-7.1479, -33.2085, -2.18405, 0.55", "-8.76727, -34.9492, -3.17388, 0.55", "-9.63358, -35.79, -3.63605, 0.55", "-11.0571, -37.1954, -4.32682, 0.83", "-13.5436, -39.8645, -5.57164, 0.55", "-15.2233, -41.7901, -6.38688, 0.55", "-16.9839, -43.8646, -7.22156, 0.83", "-18.5642, -45.8374, -7.95659, 0.55", "-19.7368, -47.2898, -8.41221, 1.11", "-21.0206, -48.9127, -8.76746, 0.28", "-22.3918, -50.8257, -8.9656, 0.55", "-23.0252, -51.8265, -9.07199, 0.28", "-24.2581, -53.7243, -9.22387, 0.55", "-25.1402, -54.9357, -9.25256, 0.28", "-27.1321, -57.2804, -9.21204, 0.83", "-29.3712, -59.542, -9.03433, 0.55", "-31.7215, -61.8224, -8.82636, 0.55", "-33.8774, -63.836, -8.61256, 0.55", "-36.2633, -65.9026, -8.37131, 0.55", "-38.2934, -67.5307, -8.16748, 0.55", "-40.6069, -69.1021, -7.83753, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-7.1479, -33.2085, -2.18405, 1.66", "-6.09354, -35.9674, -1.9326, 1.66", "-4.54513, -40.019, -1.56333, 0.83", "-2.60253, -45.1021, -1.10005, 0.83", "-0.854791, -49.6753, -0.683251, 0.83", "0.488843, -53.1911, -0.362816, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "18.5619, 47.7712, -9.39597, 0.55", "19.6519, 50.7867, -11.1607, 0.55", "21.1583, 54.4348, -13.403, 0.55", "22.8601, 58.5096, -15.7181, 0.28", "24.3558, 62.1153, -17.6193, 0.83", "25.3649, 64.6116, -18.8733, 0.55", "26.708, 67.9189, -20.4613, 0.55", "28.3986, 71.823, -22.2512, 0.55", "30.4336, 76.174, -23.8051, 0.83", "31.8823, 79.2178, -24.5067, 0.28", "32.2715, 80.0586, -24.6265, 0.28", "33.67, 83.1682, -24.8784, 0.55", "34.9287, 86.0508, -25.0009, 0.55", "37.4753, 91.9657, -25.2598, 0.55", "38.7199, 94.8797, -25.4624, 0.55", "41.3091, 101.042, -26.0611, 0.55", "42.8663, 104.832, -26.5216, 0.55", "44.6979, 109.449, -27.2335, 0.55", "46.6926, 114.583, -28.4388, 0.55", "47.6644, 116.905, -29.2152, 0.55", "48.5002, 118.624, -29.9922, 0.28", "49.1147, 119.657, -30.5858, 0.55", "50.2535, 121.216, -31.6006, 0.28", "52.5261, 123.956, -33.4743, 0.55", "56.3454, 128.22, -36.1967, 0.55", "59.3658, 131.609, -38.4471, 0.55", "61.1053, 133.524, -39.7304, 0.55", "65.1124, 137.816, -42.803, 0.55", "66.7152, 139.614, -44.0547, 0.55", "68.0618, 141.279, -45.1217, 0.28", "69.7951, 143.833, -46.7096, 0.55", "71.2252, 146.354, -48.0672, 0.55", "72.597, 149.558, -49.6859, 0.55", "73.726, 153.219, -51.3007, 0.55", "74.8533, 157.554, -53.1877, 0.55", "75.4227, 159.936, -54.1933, 0.55", "75.9523, 162.229, -55.0571, 0.55", "76.657, 165.027, -56.1928, 0.55", "78.0149, 169.239, -58.0174, 0.55", "79.8641, 173.26, -60.1616, 0.55", "80.9258, 174.967, -61.3304, 0.55", "81.9743, 176.357, -62.4281, 0.55", "85.0525, 179.897, -65.6002, 0.55", "86.3, 181.167, -66.8066, 0.55", "88.4064, 183.176, -68.8609, 0.55", "90.8612, 185.483, -71.1464, 0.55", "92.3038, 186.883, -72.5249, 0.28", "93.3436, 187.902, -73.6011, 0.28", "94.4533, 189.035, -74.8068, 0.55", "97.3585, 191.917, -77.9729, 0.55", "100.361, 194.832, -81.3049, 0.55", "101.801, 196.089, -82.9381, 0.83", "105.423, 199.345, -88.217, 0.55", "107.373, 201.053, -91.6472, 0.55", "108.772, 202.337, -94.4316, 0.55", "110.872, 204.313, -99.209, 0.55", "113.627, 206.981, -105.879, 0.55", "118.024, 211.076, -117.098, 0.55", "121.243, 214.092, -125.747, 0.55", "122.423, 215.186, -129.106, 0.55", "124.878, 217.463, -136.522, 0.55", "126.228, 218.668, -140.661, 0.55", "128.427, 220.751, -147.319, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "18.5619, 47.7712, -9.39597, 0.28", "18.2762, 51.6359, -8.5846, 0.28", "18.1603, 53.6574, -8.14659, 0.83", "18.0528, 56.8396, -7.42855, 0.55", "17.9739, 59.9918, -6.72313, 0.55", "17.9019, 64.1805, -5.83666, 0.28", "17.8741, 66.9491, -5.29042, 0.28", "17.8979, 68.0117, -5.10969, 0.55", "17.9648, 70.2024, -4.73525, 0.28", "18.0322, 71.458, -4.54917, 0.55", "18.1568, 73.0219, -4.35002, 0.28", "18.346, 74.6006, -4.32587, 0.55", "18.6018, 76.8852, -4.42643, 0.28", "18.6018, 76.8852, -4.42643, 0.55", "19.1271, 79.6534, -4.75169, 0.55", "19.7769, 82.1859, -5.23855, 0.83", "20.8167, 85.312, -6.06423, 0.55", "21.4355, 86.885, -6.55764, 0.55", "22.6602, 89.6889, -7.42617, 0.55", "23.8858, 92.3273, -8.18495, 0.28", "25.9002, 96.4897, -9.26141, 0.83", "27.1832, 99.1473, -9.84102, 0.28", "28.1172, 101.047, -10.0748, 0.55", "29.6525, 104.224, -10.3462, 0.28", "30.3235, 105.71, -10.3815, 0.55", "31.3433, 108.279, -10.1865, 0.28", "31.7829, 109.641, -9.9316, 0.55", "32.6824, 112.683, -9.29972, 0.28", "33.4292, 115.045, -8.77985, 0.55", "34.2195, 117.423, -8.27972, 0.28", "35.0264, 119.951, -7.78535, 0.55", "35.9068, 122.642, -7.31686, 0.28", "37.1591, 126.575, -6.78267, 0.55", "37.9948, 128.963, -6.52706, 0.28", "38.4026, 130.054, -6.36189, 0.55", "39.2417, 132.13, -6.02017, 0.28", "39.8983, 133.63, -5.77129, 0.55", "40.8694, 135.816, -5.41731, 0.55", "41.8111, 137.963, -4.96588, 0.55", "43.4385, 141.637, -4.01996, 0.55", "44.767, 144.736, -3.09489, 0.55", "46.1145, 147.94, -2.1173, 0.55", "47.7362, 152.076, -0.907553, 0.55", "49.3689, 156.47, 0.303006, 0.55", "50.2528, 158.987, 0.909393, 0.28", "51.1254, 161.338, 1.41083, 0.55", "52.0201, 163.736, 1.85479, 0.55", "52.5898, 165.234, 2.07879, 0.83", "53.9125, 168.858, 2.43866, 0.28", "55.0565, 172.149, 1.67355, 0.55", "56.113, 175.221, 0.111068, 0.28", "56.452, 176.259, -0.628078, 0.55", "57.4674, 179.616, -3.25238, 0.55", "57.9335, 181.361, -4.74946, 0.55", "60.8149, 193.453, -15.6736, 0.28", "61.339, 195.868, -17.8156, 0.28", "61.7893, 198.12, -19.7135, 0.55", "62.3808, 201.043, -22.1616, 0.55", "62.6511, 202.375, -23.2412, 0.55", "63.3168, 205.45, -24.7874, 0.55", "64.1459, 209.151, -24.5568, 0.55", "64.4872, 210.766, -24.5076, 0.55", "71.7237, 222.901, -23.6282, 0.55", "80.1849, 234.131, -24.6408, 0.55", "87.1797, 246.439, -23.9864, 0.55", "94.192, 258.753, -23.6489, 0.55", "99.2679, 271.95, -21.9302, 0.55", "105.907, 283.942, -18.4926, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "8.15643, 12.449, -3.28014, 0.55", "9.85663, 13.4786, -3.51824, 0.55", "11.4712, 14.4689, -3.64708, 0.83", "13.1446, 15.5182, -3.72769, 0.28", "14.3567, 16.2724, -3.7129, 0.55", "15.7732, 17.1401, -3.65342, 0.28", "16.8383, 17.7636, -3.62089, 0.83", "18.457, 18.6696, -3.52382, 0.55", "19.7786, 19.3748, -3.40111, 0.83", "21.4737, 20.2105, -3.21889, 0.28", "22.5901, 20.7086, -3.122, 0.55", "24.5731, 21.5288, -2.99294, 0.28", "26.1916, 22.1756, -2.94678, 0.83", "27.499, 22.6856, -2.97144, 0.28", "29.0875, 23.2824, -3.05786, 0.55", "30.9522, 23.973, -3.22729, 0.28", "31.7683, 24.2791, -3.31694, 0.83", "33.5902, 24.986, -3.52861, 0.28", "34.1554, 25.2034, -3.61575, 0.55", "35.8882, 25.8768, -3.95535, 0.83", "37.3721, 26.4408, -4.27246, 0.28", "38.4699, 26.8581, -4.53298, 0.83", "39.4631, 27.259, -4.78165, 0.28", "39.8549, 27.4224, -4.87764, 0.55", "41.0744, 27.9701, -5.1655, 0.28", "42.3844, 28.622, -5.50795, 0.83", "43.7721, 29.3719, -5.85742, 0.28", "44.3393, 29.7024, -5.97858, 0.55", "45.7734, 30.5796, -6.25412, 0.28", "46.7933, 31.2706, -6.4131, 0.55", "48.8227, 32.7442, -6.68877, 0.28", "49.4977, 33.2799, -6.7564, 0.83", "51.0107, 34.5323, -6.84893, 0.28", "51.9545, 35.3547, -6.88562, 0.83", "54.2234, 37.479, -6.91737, 0.28", "55.1571, 38.3791, -6.85943, 0.83", "56.8586, 40.0204, -6.6581, 0.28", "57.4279, 40.5624, -6.57254, 0.55", "58.2141, 41.3037, -6.4138, 0.28", "58.5606, 41.6151, -6.31517, 0.55", "60.3138, 43.0547, -5.63762, 0.28", "61.3127, 43.8447, -5.26232, 0.55", "62.6777, 44.8918, -4.81644, 0.28", "63.1589, 45.2401, -4.64918, 0.83", "65.4505, 46.8086, -3.88477, 0.28", "66.5337, 47.5323, -3.53227, 0.55", "68.0956, 48.5774, -3.05191, 0.28", "69.1898, 49.3023, -2.72062, 0.83", "71.7913, 50.9891, -2.01572, 0.28", "73.5338, 52.0918, -1.4915, 0.55", "74.7774, 52.8651, -1.10393, 0.28", "75.409, 53.2507, -0.885633, 0.55", "76.7658, 54.0438, -0.356901, 0.28", "77.4039, 54.4126, -0.113288, 0.55", "79.9622, 55.8928, 0.721164, 0.28", "80.9704, 56.4619, 1.03371, 0.83", "83.3249, 57.691, 1.77558, 0.28", "84.0851, 58.0564, 2.04166, 0.28", "84.8698, 58.4102, 2.31062, 0.55", "86.0136, 58.9191, 2.69306, 0.28", "86.9561, 59.3198, 2.9475, 0.55", "89.0164, 60.1311, 3.57273, 0.28", "90.4, 60.6314, 4.04896, 0.83", "91.5882, 61.0661, 4.55316, 0.28", "92.578, 61.4094, 5.07615, 0.55", "99.2284, 65.1944, 4.7881, 0.55", "106.096, 68.3113, 3.65794, 0.55", "113.04, 71.4495, 4.05677, 0.55", "120.441, 73.1, 3.99021, 0.55", "127.646, 75.406, 3.28107, 0.55", "134.5, 78.0499, 1.30261, 0.55", "141.128, 80.8134, -1.21711, 0.55", "147.736, 81.9883, -4.71878, 0.55", "154.517, 82.5924, -8.01311, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.15643, 12.449, -3.28014, 0.55", "9.72945, 15.7911, -0.949867, 0.55", "11.9482, 20.2075, 2.06217, 0.83", "12.9519, 21.9627, 3.23797, 0.55", "13.9913, 23.7415, 4.51226, 0.83", "16.0927, 27.2026, 7.34694, 0.83", "17.241, 28.9574, 8.89705, 0.55", "18.525, 30.6511, 10.5619, 0.55", "19.4882, 31.7631, 11.8965, 0.55", "21.4635, 33.8029, 14.5108, 0.55", "23.5661, 35.9444, 17.5848, 0.55", "24.2495, 36.7851, 18.6675, 0.55", "29.4627, 43.8615, 24.0358, 0.55", "34.8442, 50.7101, 29.5051, 0.55", "39.1762, 58.4951, 34.7651, 0.55", "43.827, 65.9594, 40.1741, 0.55", "47.1574, 75.0131, 44.1392, 0.55", "52.4171, 83.1644, 47.7881, 0.55", "58.9637, 90.6218, 50.5885, 0.55", "64.6239, 98.5743, 54.0271, 0.55", "69.1908, 107.002, 58.0267, 0.55", "73.3682, 115.864, 61.5585, 0.55", "76.1075, 124.73, 66.2946, 0.55", "77.6131, 134.0, 70.862, 0.55", "78.0698, 143.132, 75.8779, 0.55", "78.6225, 152.027, 81.265, 0.55", "78.3041, 161.51, 85.6398, 0.55", "78.4608, 170.905, 90.2005, 0.55", "79.4969, 179.927, 95.3194, 0.55", "80.6975, 188.972, 100.367, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.20378, 19.3705, -1.05075, 0.28", "1.73251, 19.5465, -1.32466, 0.28", "1.11188, 19.6188, -1.4641, 0.55", "-2.11932, 19.9952, -2.19012, 0.28", "-2.99702, 20.0974, -2.38733, 0.55", "-6.30273, 20.4825, -3.13009, 0.28", "-8.01107, 20.6815, -3.51394, 0.28", "-8.69404, 20.7494, -3.69608, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "3.20378, 19.3705, -1.05075, 0.83", "3.55931, 21.661, -0.249079, 0.83", "3.97622, 24.3469, 0.691005, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "16.4911, -46.5572, 1.09323, 0.55", "17.6899, -46.8958, 2.9115, 0.55", "18.4373, -46.9291, 3.97432, 0.55", "19.7712, -46.7849, 5.75971, 0.55", "20.5379, -46.5969, 6.77162, 0.55", "21.7218, -46.3066, 8.33416, 0.55", "22.6888, -46.0695, 9.61036, 0.55", "23.9342, -45.6204, 11.1229, 0.55", "25.0362, -45.0658, 12.4709, 0.55", "26.9465, -43.8825, 14.6556, 0.55", "30.7226, -42.2243, 19.7351, 0.55", "33.9333, -40.0572, 25.0288, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "16.4911, -46.5572, 1.09323, 0.55", "19.1262, -48.3102, 1.11923, 0.55", "22.3449, -50.4369, 1.1491, 0.28", "24.7672, -52.0674, 1.13263, 0.83", "27.7145, -54.067, 1.16257, 0.28", "30.2174, -55.8128, 1.21276, 0.28", "31.6095, -56.8132, 1.24124, 0.55", "33.3132, -58.1987, 1.28381, 0.28", "33.8932, -58.7316, 1.34239, 0.55", "35.9097, -60.693, 1.69198, 0.28", "36.4026, -61.1898, 1.78564, 0.83", "37.5788, -62.482, 2.12591, 0.28", "38.399, -63.3968, 2.40793, 0.55", "40.7122, -66.0314, 3.28334, 0.28", "41.3383, -66.7249, 3.53716, 0.55", "42.8026, -68.348, 4.136, 0.28", "43.8269, -69.41, 4.59464, 0.55", "45.6713, -71.2133, 5.54951, 0.28", "46.6229, -72.0614, 6.19552, 0.55", "48.3901, -73.5788, 7.45365, 0.28", "49.0456, -74.0923, 7.91578, 0.55", "50.9583, -75.5237, 9.20548, 0.28", "52.0559, -76.2827, 9.88076, 0.55", "57.0323, -79.524, 12.4491, 0.28", "58.8998, -80.5173, 13.1841, 0.55", "60.7014, -81.302, 13.6431, 0.28", "62.3619, -81.869, 13.8063, 0.55", "65.0403, -82.513, 13.6716, 0.28", "66.8104, -82.8607, 13.4263, 0.55", "70.1488, -83.2548, 12.6097, 0.28", "72.0557, -83.4037, 12.228, 0.55", "74.7568, -83.5544, 11.6935, 0.28", "76.4134, -83.5191, 11.3322, 0.55", "87.5617, -88.763, 11.0165, 0.55", "98.1455, -94.8862, 12.8378, 0.55", "109.492, -99.6484, 12.7467, 0.55", "121.026, -103.318, 14.7654, 0.55", "132.038, -107.794, 17.9127, 0.55", "142.764, -110.536, 23.153, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-40.6069, -69.1021, -7.83753, 0.28", "-41.264, -69.2957, -7.18619, 0.28", "-41.52, -69.3807, -6.94885, 0.55", "-42.8472, -69.6708, -5.46789, 0.28", "-43.3761, -69.8, -4.83551, 0.55", "-44.9579, -70.3072, -2.86546, 0.28", "-45.175, -70.3925, -2.58797, 0.55", "-45.7527, -70.6975, -1.78596, 0.55", "-47.2212, -71.6511, 0.465951, 0.55", "-47.6203, -71.976, 1.12563, 0.28", "-48.0578, -72.2989, 1.77484, 0.55", "-48.4122, -72.5543, 2.21088, 0.28", "-48.7466, -72.8084, 2.63489, 0.55", "-49.3214, -73.3072, 3.38237, 0.28", "-49.6684, -73.6362, 3.74996, 0.55", "-50.7505, -74.4391, 4.88856, 0.28", "-51.5788, -74.9256, 5.76056, 0.55", "-55.2249, -75.9278, 10.2955, 0.55", "-58.9368, -75.6873, 14.859, 0.55", "-62.9273, -74.5336, 19.035, 0.55", "-66.5174, -73.895, 23.6567, 0.55", "-70.5338, -74.0078, 27.963, 0.55", "-74.9251, -73.9765, 31.886, 0.55", "-79.0757, -75.1349, 35.9276, 0.55", "-82.5443, -75.1129, 40.6864, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-40.6069, -69.1021, -7.83753, 0.28", "-41.969, -70.3708, -7.87103, 0.28", "-42.3255, -70.6834, -7.8842, 0.55", "-43.4601, -71.728, -7.89929, 0.28", "-44.7304, -72.8653, -7.90548, 0.55", "-47.0514, -74.9111, -7.8079, 0.55", "-48.6556, -76.3267, -7.70205, 0.28", "-50.4337, -77.8754, -7.50847, 0.55", "-52.6786, -79.8657, -7.19382, 0.55", "-55.254, -82.2752, -6.72264, 0.55", "-56.6286, -83.5948, -6.43077, 0.28", "-57.362, -84.3321, -6.25108, 0.55", "-58.2229, -85.2395, -6.03448, 0.28", "-59.5692, -86.6311, -5.72621, 0.55", "-60.7486, -87.8351, -5.55001, 0.28", "-61.7194, -88.8144, -5.35015, 0.55", "-62.693, -89.7783, -5.13844, 0.28", "-64.399, -91.3689, -4.72882, 0.55", "-66.6257, -93.3263, -4.19405, 0.55", "-67.703, -94.2461, -3.91928, 0.55", "-71.0603, -97.0612, -3.04721, 0.55", "-72.5591, -98.3462, -2.63964, 0.55", "-74.2023, -99.8136, -2.17232, 0.28", "-75.5098, -101.069, -1.80707, 0.28", "-76.4713, -102.084, -1.57309, 0.55", "-77.3665, -103.14, -1.43805, 0.55", "-78.3067, -104.364, -1.48126, 0.28", "-79.0063, -105.364, -1.53466, 0.55", "-79.6026, -106.266, -1.59442, 0.28", "-80.5715, -107.65, -1.6646, 0.55", "-81.8185, -109.267, -1.72631, 0.55", "-82.9563, -110.676, -1.78817, 0.55", "-84.3573, -112.328, -1.85841, 0.28", "-85.7477, -113.835, -1.90683, 0.55", "-86.8492, -114.951, -1.91155, 0.55", "-87.9668, -115.978, -1.92053, 0.55", "-89.3549, -117.175, -1.92883, 0.83", "-95.7612, -122.792, -1.3147, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "0.488843, -53.1911, -0.362816, 0.83", "1.81874, -54.0589, -0.43301, 0.83", "3.2673, -54.9322, -0.495066, 0.83", "5.48008, -56.1713, -0.571379, 0.83", "8.01547, -57.5018, -0.639192, 0.83", "10.9624, -59.0072, -0.698001, 0.83", "13.3408, -60.2222, -0.745464, 0.83", "17.0831, -62.074, -0.833651, 0.83", "18.7803, -62.9031, -0.877866, 0.55", "20.3101, -63.5741, -0.914646, 0.55", "21.7744, -64.203, -0.927612, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.488843, -53.1911, -0.362816, 1.11", "-1.09126, -54.8862, -2.42275, 1.11", "-5.59627, -59.7188, -8.29578, 0.83", "-7.32196, -61.57, -10.5455, 0.83", "-8.64321, -62.9873, -12.268, 0.83", "-10.2845, -64.748, -14.4078, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "128.427, 220.751, -147.319, 0.55", "130.048, 220.775, -147.561, 0.55", "133.327, 220.584, -148.5, 0.55", "134.409, 220.508, -148.861, 0.55", "136.708, 220.345, -149.702, 0.55", "140.202, 220.153, -151.163, 0.55", "143.675, 219.963, -152.617, 0.55", "149.211, 219.606, -155.18, 0.55", "150.457, 219.484, -155.832, 0.83", "152.85, 219.239, -157.177, 0.28", "155.434, 219.058, -158.781, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "128.427, 220.751, -147.319, 0.55", "128.951, 222.823, -150.465, 0.55", "129.664, 225.643, -154.747, 0.55", "130.524, 229.045, -159.914, 0.28", "130.787, 230.084, -161.49, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "105.907, 283.942, -18.4926, 0.55", "106.361, 290.969, -17.8222, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "105.907, 283.942, -18.4926, 0.55", "112.499, 289.771, -21.0321, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "154.517, 82.5924, -8.01311, 0.55", "161.986, 87.2066, -4.7137, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "154.517, 82.5924, -8.01311, 0.55", "164.062, 85.3323, -11.7237, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "80.6975, 188.972, 100.367, 0.55", "85.4967, 201.116, 107.354, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "80.6975, 188.972, 100.367, 0.55", "83.7991, 195.702, 104.496, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.97622, 24.3469, 0.691005, 0.83", "4.8199, 25.9694, 0.850878, 0.83", "5.67958, 27.8111, 1.11621, 0.83", "6.31739, 29.4784, 1.43318, 0.28", "6.5403, 30.1286, 1.54034, 1.11", "7.20636, 32.1705, 1.88244, 0.28", "7.67102, 33.6301, 2.10203, 0.83", "8.22016, 35.5279, 2.35102, 0.28", "8.79309, 37.5471, 2.61574, 0.83", "9.53675, 40.1731, 2.99267, 0.55", "9.88512, 41.4377, 3.19496, 1.11", "10.4526, 43.5072, 3.55605, 0.55", "10.9783, 45.411, 3.8533, 0.83", "11.497, 47.1887, 4.07255, 0.28", "12.0022, 48.8761, 4.25925, 0.83", "12.3943, 50.284, 4.50765, 0.28", "12.594, 51.071, 4.66552, 0.55", "12.974, 52.6603, 5.01249, 0.28", "13.2234, 53.7613, 5.24406, 0.83", "13.6837, 55.7687, 5.62024, 0.83", "14.2511, 58.0147, 6.04821, 0.28", "14.5076, 59.1293, 6.35957, 0.55", "14.6897, 60.1445, 6.69412, 0.28", "14.8, 60.8067, 6.92809, 0.55", "14.9855, 62.0547, 7.34081, 0.28", "15.1211, 63.0411, 7.61831, 0.83", "15.5139, 65.8124, 8.20723, 0.55", "15.6494, 66.8248, 8.41757, 0.83", "15.8138, 68.1926, 8.69472, 0.55", "16.0, 69.7997, 8.89549, 0.55", "16.1695, 71.1939, 8.97919, 0.28", "16.2995, 72.1346, 9.00387, 0.55", "16.5398, 73.6054, 8.97602, 0.28", "16.5751, 73.8297, 8.97737, 0.55", "16.8517, 75.8094, 9.02436, 0.28", "17.068, 77.1406, 9.06, 0.55", "17.2763, 78.2719, 9.14257, 0.28", "17.5311, 79.4926, 9.27981, 0.83", "17.8815, 80.8195, 9.4724, 0.83", "18.1552, 81.7591, 9.64328, 0.28", "18.5281, 82.8918, 9.97609, 0.55", "19.0519, 84.4131, 10.3575, 0.28", "19.129, 84.632, 10.4027, 0.55", "19.7319, 86.2514, 10.6867, 0.28", "19.8889, 86.7108, 10.7713, 0.55", "20.4422, 88.8254, 11.0878, 0.28", "20.8769, 90.8368, 11.3903, 0.55", "21.011, 91.6418, 11.5064, 0.28", "21.1669, 92.7994, 11.6969, 0.55", "21.4016, 95.1135, 12.1669, 0.55", "21.5267, 96.5443, 12.4832, 0.28", "21.6457, 98.1071, 12.8463, 0.55", "21.7593, 99.5258, 13.3074, 0.28", "21.7933, 99.9496, 13.4612, 0.55", "21.8532, 101.0, 13.8683, 0.28", "21.8992, 101.892, 14.2088, 0.83", "24.8037, 109.597, 15.3678, 0.83", "27.3898, 117.262, 17.2833, 0.83", "28.8263, 125.236, 19.2521, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.97622, 24.3469, 0.691005, 0.55", "2.49972, 27.2024, 2.23142, 0.55", "2.20493, 27.807, 2.54588, 0.55", "0.719245, 31.0526, 4.13092, 0.83", "-0.900599, 34.7032, 5.72429, 0.55", "-1.48748, 36.0556, 6.27815, 0.55", "-2.25009, 37.9156, 6.98856, 0.55", "-3.08249, 40.069, 7.63606, 0.83", "-4.21604, 42.8573, 8.34154, 0.28", "-4.95181, 44.693, 8.67124, 0.55", "-5.46976, 46.0266, 8.80996, 0.28", "-6.3499, 48.145, 9.01175, 0.83", "-7.70365, 51.2859, 9.33721, 0.55", "-8.31901, 52.7294, 9.52043, 0.55", "-9.85615, 56.4932, 10.1379, 0.55", "-10.686, 58.5331, 10.4424, 0.28", "-11.6403, 61.0089, 10.9445, 0.55", "-12.5215, 63.3945, 11.3991, 0.28", "-13.3908, 65.8731, 11.8518, 0.28", "-14.1621, 68.0578, 12.1855, 0.55", "-15.6633, 72.094, 12.7204, 0.55", "-17.5856, 77.3563, 13.0516, 0.28", "-19.0773, 81.4574, 13.2307, 0.83", "-20.2614, 84.7829, 13.4294, 0.55", "-21.4198, 88.108, 13.6941, 0.55", "-22.1796, 90.5444, 13.9275, 0.55", "-23.2833, 94.6411, 14.443, 0.28", "-24.1223, 98.096, 14.8798, 0.55", "-24.6619, 100.998, 15.4557, 0.55", "-24.8982, 102.59, 15.7984, 0.28", "-25.1228, 104.053, 16.1475, 0.83", "-25.6223, 106.636, 16.8323, 0.28", "-26.1944, 108.832, 17.4829, 0.55", "-27.2344, 112.036, 18.3954, 0.55", "-28.2363, 114.523, 19.132, 0.55", "-28.9975, 116.138, 19.7335, 0.28", "-29.3753, 116.837, 20.0335, 0.55", "-30.2199, 118.351, 20.8133, 0.55", "-31.9213, 121.15, 22.3873, 0.28", "-33.5308, 123.534, 23.8286, 0.55", "-35.1134, 125.672, 25.0165, 0.28", "-35.7762, 126.531, 25.5173, 0.55", "-37.3039, 128.399, 26.6925, 0.28", "-39.3105, 130.642, 28.1834, 0.55", "-41.172, 132.438, 29.4372, 0.28", "-42.6123, 133.732, 30.3889, 0.55", "-46.2732, 137.12, 33.0009, 0.55", "-47.4932, 138.218, 33.9065, 0.55", "-49.1217, 139.656, 35.1232, 0.55", "-50.7836, 141.25, 36.4038, 0.55", "-53.7975, 144.345, 38.9511, 0.55", "-55.8182, 146.47, 40.7896, 0.55", "-57.2443, 147.894, 41.8555, 0.55", "-59.892, 150.607, 43.8344, 0.55", "-62.181, 153.017, 45.6047, 0.55", "-64.5453, 155.571, 47.4696, 0.83", "-67.3921, 158.463, 49.6079, 0.28", "-70.9321, 161.903, 51.8165, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "33.9333, -40.0572, 25.0288, 0.55", "41.9562, -37.3419, 31.8384, 0.55", "49.9309, -36.199, 39.0981, 0.55", "57.5243, -34.0222, 46.5415, 0.55", "64.2724, -32.8093, 54.9397, 0.55", "71.9036, -30.9223, 62.4182, 0.55", "78.6472, -26.9166, 69.9641, 0.55", "85.4951, -22.1967, 77.0238, 0.55", "94.0837, -17.578, 81.9932, 0.55", "102.192, -12.3864, 87.2284, 0.55", "110.019, -5.82395, 91.4071, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "33.9333, -40.0572, 25.0288, 0.55", "39.7432, -37.8118, 35.2373, 0.55", "46.6886, -37.8034, 44.9201, 0.55", "53.6359, -39.2529, 54.4896, 0.55", "61.9046, -41.5803, 62.7662, 0.55", "69.5673, -43.6899, 71.6517, 0.55", "76.1016, -46.1731, 81.3062, 0.55", "81.1718, -48.7493, 91.7766, 0.55", "85.463, -49.8636, 102.838, 0.55", "88.2773, -51.1231, 114.352, 0.55", "89.8352, -51.8036, 126.165, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "142.764, -110.536, 23.153, 0.55", "151.192, -114.601, 25.7585, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "142.764, -110.536, 23.153, 0.55", "149.905, -115.046, 21.7035, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-82.5443, -75.1129, 40.6864, 0.55", "-92.0657, -75.4522, 47.9258, 0.55", "-99.9586, -76.3974, 56.916, 0.55", "-107.406, -79.3615, 65.9381, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-82.5443, -75.1129, 40.6864, 0.55", "-92.5268, -75.2381, 47.5692, 0.55", "-102.42, -76.611, 54.4842, 0.55", "-113.628, -78.1722, 58.8373, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "21.7744, -64.203, -0.927612, 0.55", "24.1642, -64.2759, -1.37954, 0.55", "26.1612, -64.3652, -1.72815, 0.55", "28.3261, -64.4048, -2.08137, 0.55", "30.679, -64.4498, -2.41414, 0.55", "33.6623, -64.4276, -2.79875, 0.55", "35.8483, -64.3751, -3.06368, 0.55", "38.3396, -64.1849, -3.35945, 0.55", "39.7215, -64.002, -3.50592, 0.55", "42.5271, -63.3697, -3.75674, 0.55", "43.9478, -62.9405, -3.8475, 0.55", "45.0206, -62.5493, -3.89327, 0.55", "47.5319, -61.486, -3.99205, 0.55", "49.2305, -60.6493, -4.06287, 0.83", "50.3526, -60.0422, -4.10654, 0.55", "51.8397, -59.1305, -4.15797, 0.55", "55.0235, -57.0196, -4.25993, 0.55", "55.9276, -56.3659, -4.28414, 0.55", "56.4913, -55.9107, -4.3007, 0.83", "58.3083, -54.2942, -4.35732, 0.55", "59.4492, -53.1595, -4.37298, 0.55", "60.841, -51.6007, -4.32705, 0.55", "62.3432, -49.6636, -4.2133, 0.55", "64.3321, -46.9496, -3.97944, 0.55", "65.1723, -45.7598, -3.84967, 0.28", "66.6338, -43.6165, -3.54212, 0.55", "67.9687, -41.6385, -3.20922, 0.28", "68.592, -40.6959, -3.03902, 0.55", "69.3705, -39.4604, -2.82251, 0.28", "69.6446, -39.0401, -2.77225, 0.55", "70.6163, -37.6971, -2.73462, 0.55", "72.5821, -35.3265, -2.85389, 0.55", "73.8233, -33.9524, -2.99312, 0.55", "74.9513, -32.7955, -3.13011, 0.55", "77.314, -30.4697, -3.44299, 0.55", "79.74, -28.1128, -3.82117, 0.55", "81.6945, -26.2319, -4.1746, 0.55", "83.0133, -25.0135, -4.42148, 0.55", "83.9961, -24.154, -4.58956, 0.83", "84.5311, -23.697, -4.67259, 0.83", "85.8309, -22.6061, -4.82319, 0.55", "86.3669, -22.1347, -4.88624, 0.83", "87.8855, -20.7294, -5.07768, 0.28", "89.1815, -19.5273, -5.22623, 0.55", "90.0033, -18.7698, -5.28477, 0.55", "91.1684, -17.6898, -5.34198, 0.55", "92.6239, -16.3603, -5.37386, 0.28", "93.7545, -15.3554, -5.39799, 0.55", "95.0003, -14.334, -5.43783, 0.83", "96.2093, -13.4704, -5.48507, 0.55", "97.9485, -12.4872, -5.46707, 0.28", "99.9583, -11.5409, -5.39016, 0.55", "101.535, -10.9357, -5.29194, 0.55", "103.7, -10.2519, -5.14792, 0.55", "105.673, -9.73203, -5.01287, 0.55", "108.477, -9.07864, -4.81319, 0.55", "110.096, -8.75368, -4.64826, 0.55", "112.495, -8.21892, -4.3815, 0.55", "113.589, -7.89504, -4.25263, 0.28", "115.525, -7.08679, -4.02273, 0.55", "116.241, -6.74335, -3.95262, 0.28", "116.884, -6.39131, -3.91906, 0.83", "118.974, -5.26994, -3.75271, 0.55", "120.596, -4.24349, -3.59979, 0.28", "121.9, -3.26729, -3.45288, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "21.7744, -64.203, -0.927612, 0.55", "23.1516, -65.8353, -0.884791, 0.55", "24.6852, -67.6395, -0.793618, 0.55", "26.5248, -69.8725, -0.421173, 0.28", "27.2479, -70.7597, -0.225252, 0.28", "28.1699, -71.9669, 0.236807, 0.55", "29.0615, -73.1606, 0.778348, 0.28", "30.1448, -74.6211, 1.55998, 0.55", "31.823, -77.0051, 2.98889, 0.28", "32.7823, -78.3448, 3.90241, 0.55", "35.2288, -81.6241, 6.26325, 0.55", "36.7374, -83.6535, 7.70358, 0.55", "37.6874, -84.8683, 8.53882, 0.28", "38.1227, -85.4237, 8.91037, 0.55", "39.975, -87.7354, 10.3412, 0.28", "40.7839, -88.7808, 10.9923, 0.55", "42.2757, -90.7179, 12.1395, 0.55", "43.6493, -92.5296, 13.3089, 0.55", "45.0382, -94.4422, 14.5627, 0.28", "45.3741, -94.9109, 14.8661, 0.55", "46.8833, -97.2125, 16.3375, 0.28", "47.0128, -97.4125, 16.4822, 0.55", "47.7757, -98.6908, 17.5608, 0.28", "48.0805, -99.3735, 18.1191, 0.55", "54.0599, -105.875, 23.8885, 0.55", "58.3475, -113.814, 29.5314, 0.55", "60.8477, -122.852, 34.7361, 0.55", "64.419, -132.094, 38.8826, 0.55", "68.6274, -140.545, 43.8713, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-10.2845, -64.748, -14.4078, 0.55", "-10.8526, -64.3442, -15.7966, 0.55", "-12.165, -63.439, -18.7906, 0.55", "-14.1688, -61.8716, -22.9967, 0.28", "-14.7205, -61.44, -24.1549, 0.83", "-16.5526, -60.0069, -28.0008, 0.55", "-18.1973, -58.7203, -31.4533, 0.55", "-18.7031, -58.3388, -32.6166, 0.28", "-19.6779, -57.7529, -34.9417, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-10.2845, -64.748, -14.4078, 0.83", "-11.3424, -66.5205, -14.3176, 0.83", "-12.6534, -68.7173, -14.2059, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "28.8263, 125.236, 19.2521, 0.83", "31.4466, 132.93, 20.7025, 0.83", "35.1572, 140.247, 21.4309, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "28.8263, 125.236, 19.2521, 0.55", "28.9994, 138.978, 21.9968, 0.83", "29.6136, 152.923, 23.4992, 0.83", "28.89, 166.595, 26.4279, 0.83", "29.9069, 180.23, 29.4853, 0.83", "30.2466, 193.858, 32.6888, 0.83", "28.9275, 207.762, 33.9215, 0.83", "26.9141, 221.63, 34.1848, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-70.9321, 161.903, 51.8165, 0.28", "-73.6301, 161.027, 56.1569, 0.28", "-74.4502, 160.761, 57.4763, 0.28", "-75.5569, 160.401, 59.2565, 0.55", "-76.572, 160.072, 60.8896, 0.28", "-77.6041, 159.737, 62.55, 0.28", "-79.4422, 159.14, 65.507, 0.83", "-85.4067, 156.097, 74.5821, 0.83", "-90.2999, 154.232, 84.5453, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-70.9321, 161.903, 51.8165, 0.28", "-72.5196, 163.547, 53.2241, 0.28", "-74.16, 165.179, 54.7523, 0.55", "-75.5693, 166.621, 56.1513, 0.55", "-75.9146, 166.976, 56.5231, 0.55", "-76.6947, 167.846, 57.4261, 0.28", "-77.4276, 168.663, 58.2654, 0.55", "-78.2943, 169.619, 59.3982, 0.28", "-78.8618, 170.198, 60.1721, 0.28", "-79.9515, 171.326, 61.7707, 0.55", "-81.0749, 172.476, 63.4674, 0.28", "-82.1535, 173.575, 65.1482, 0.55", "-83.5986, 174.98, 67.297, 0.28", "-84.1775, 175.537, 68.1585, 0.55", "-87.7172, 179.395, 74.0281, 0.55", "-91.2239, 182.633, 80.2453, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-12.6534, -68.7173, -14.2059, 0.55", "-12.4518, -70.9306, -14.5324, 0.55", "-12.3495, -74.1859, -15.0117, 0.55", "-12.3001, -79.2429, -15.8175, 0.55", "-12.589, -85.0635, -16.7779, 0.55", "-12.9833, -89.3961, -17.6137, 0.55", "-13.4779, -92.6184, -18.3151, 0.55", "-14.0589, -94.7887, -18.8438, 0.55", "-15.2473, -98.4373, -19.773, 0.55", "-16.8953, -102.773, -20.9386, 0.55", "-18.2295, -106.369, -22.0079, 0.55", "-19.7348, -110.648, -23.2755, 0.55", "-21.6556, -116.94, -25.2155, 0.55", "-22.9253, -121.612, -26.6463, 0.55", "-24.4398, -127.946, -28.4811, 0.55", "-25.4022, -133.317, -29.9523, 0.55", "-25.9115, -136.885, -30.7723, 0.55", "-26.3187, -141.173, -31.5973, 0.55", "-26.473, -143.59, -31.9811, 0.55", "-26.7685, -149.0, -32.6446, 0.55", "-26.7547, -151.094, -32.796, 0.55", "-26.763, -156.044, -32.9287, 0.55", "-26.6386, -159.978, -32.9637, 0.55", "-26.5015, -162.581, -32.8803, 0.55", "-26.3887, -164.343, -32.807, 0.55", "-26.0592, -167.064, -32.6574, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-12.6534, -68.7173, -14.2059, 0.55", "-13.47, -71.6009, -13.5993, 0.55", "-14.3299, -75.2505, -12.9206, 0.55", "-14.9219, -78.0675, -12.4783, 0.55", "-15.9141, -83.1683, -11.7748, 0.55", "-16.3504, -85.2119, -11.5144, 0.55", "-16.9055, -87.694, -11.1961, 0.55", "-17.4051, -89.9814, -10.913, 0.55", "-18.5225, -94.6716, -10.296, 0.55", "-19.2298, -97.0893, -9.84488, 0.55", "-20.0722, -99.6439, -9.11405, 0.55", "-21.3624, -103.024, -7.89871, 0.55", "-22.4979, -105.696, -6.74453, 0.55", "-23.5201, -107.94, -5.64691, 0.55", "-24.752, -110.602, -4.17592, 0.55", "-26.1969, -113.951, -2.18995, 0.55", "-26.7126, -115.441, -1.32458, 0.55", "-26.9693, -116.428, -0.780872, 0.83", "-27.2412, -118.458, 0.195691, 0.83", "-27.2702, -120.133, 0.836896, 0.83", "-26.8276, -123.886, 2.028, 0.55", "-26.3165, -126.548, 2.71469, 0.83", "-25.93, -128.351, 3.27612, 0.55", "-25.5931, -130.031, 3.85265, 0.55", "-25.0202, -133.006, 4.97742, 0.55", "-24.7606, -134.956, 5.79586, 0.55", "-24.7518, -136.505, 6.48704, 0.55", "-25.2399, -140.195, 8.23988, 0.55", "-25.6582, -142.229, 9.16643, 0.55", "-26.0734, -143.969, 9.87248, 0.55", "-26.6842, -146.77, 10.8496, 0.55", "-27.3969, -150.148, 11.8218, 0.55", "-27.8116, -152.317, 12.3545, 0.55", "-28.2593, -155.036, 12.9161, 0.55", "-29.0469, -160.043, 13.8556, 0.55", "-29.7759, -164.747, 14.5708, 0.55", "-30.0828, -167.009, 14.8819, 0.55", "-30.5175, -170.509, 15.3671, 0.55", "-31.2262, -175.741, 16.1151, 0.83", "-32.1378, -181.32, 16.9225, 0.83", "-32.5629, -183.656, 17.2429, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "26.9141, 221.63, 34.1848, 0.83", "26.8887, 232.537, 35.0067, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "26.9141, 221.63, 34.1848, 0.55", "26.7455, 229.846, 35.5672, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-26.0592, -167.064, -32.6574, 0.55", "-25.1898, -168.758, -33.636, 0.55", "-24.3014, -170.47, -34.5787, 0.55", "-22.8036, -173.451, -36.1282, 0.55", "-21.3442, -176.329, -37.6284, 0.55", "-20.3319, -178.244, -38.6122, 0.55", "-19.3255, -180.087, -39.5368, 0.55", "-17.7502, -183.172, -40.9495, 0.55", "-16.6014, -185.418, -41.9009, 0.55", "-16.0856, -186.47, -42.3023, 0.55", "-14.4576, -189.898, -43.522, 0.83", "-13.3414, -192.287, -44.3685, 0.55", "-11.8564, -195.281, -45.4279, 0.55", "-10.6809, -197.662, -46.2473, 0.55", "-9.23743, -200.623, -47.2276, 0.55", "-7.45972, -204.368, -48.4135, 0.55", "-6.3625, -206.764, -49.1715, 0.55", "-5.33866, -209.085, -49.9206, 0.55", "-4.66045, -210.627, -50.3976, 0.55", "-4.16895, -211.919, -50.7159, 0.28", "-3.87316, -212.88, -50.8655, 0.55", "-3.59637, -214.003, -51.0035, 0.28", "-3.28818, -215.695, -51.2044, 0.55", "-2.84162, -218.177, -51.5692, 0.28", "-2.24655, -220.806, -51.9454, 0.55", "-1.65272, -223.238, -52.3128, 0.55", "-1.20284, -225.164, -52.617, 0.55", "-0.57639, -227.606, -53.068, 0.55", "0.00617146, -229.784, -53.3871, 0.55", "0.884267, -233.242, -53.9625, 0.83", "1.38077, -235.136, -54.2728, 0.28", "2.04914, -237.942, -54.6994, 0.28", "2.6349, -240.69, -55.0908, 0.28", "3.72991, -246.15, -55.8797, 0.55", "4.45873, -250.137, -56.4876, 1.66", "5.24282, -254.506, -57.2022, 0.55", "6.05364, -258.724, -57.8994, 0.55", "6.93749, -263.46, -58.6832, 0.28", "7.51867, -267.083, -59.2731, 0.55", "8.09371, -271.084, -59.9179, 0.28", "8.39964, -273.438, -60.1873, 0.83", "8.72409, -276.465, -60.4731, 0.55", "9.03613, -279.362, -60.6709, 0.55", "9.22272, -282.236, -60.7765, 0.83", "9.30891, -285.097, -60.8266, 0.28", "9.30891, -285.097, -60.8266, 0.55", "9.25442, -286.934, -60.8861, 0.28", "9.21785, -287.634, -60.9138, 0.55", "9.18345, -289.61, -61.0916, 0.28", "9.1972, -291.365, -61.3757, 0.55", "9.26465, -294.575, -62.1637, 0.28", "9.29613, -295.347, -62.3598, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-26.0592, -167.064, -32.6574, 0.55", "-25.9134, -168.786, -32.6772, 0.55", "-25.8546, -169.63, -32.674, 0.28", "-25.7726, -170.501, -32.6688, 0.55", "-25.4412, -173.06, -32.6662, 0.28", "-25.3952, -173.342, -32.6854, 0.55", "-24.9891, -175.55, -32.9092, 0.28", "-24.7728, -176.547, -33.0348, 0.55", "-24.483, -177.908, -33.2357, 0.28", "-24.1506, -179.73, -33.5368, 0.55", "-23.7738, -182.244, -33.9963, 0.28", "-23.7167, -182.854, -34.1194, 0.55", "-23.729, -184.242, -34.4149, 0.28", "-23.7491, -184.839, -34.548, 0.55", "-23.944, -186.508, -34.9052, 0.28", "-24.1168, -187.308, -35.0525, 0.55", "-24.5968, -188.884, -35.2246, 0.28", "-25.2414, -190.796, -35.484, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-32.5629, -183.656, 17.2429, 0.55", "-33.2479, -184.923, 16.9715, 0.55", "-35.0092, -188.181, 16.2739, 0.55", "-36.922, -191.719, 15.5163, 0.55", "-38.2358, -194.149, 14.9959, 0.55", "-43.7413, -202.798, 13.7997, 0.55", "-49.3182, -211.378, 12.4992, 0.55", "-56.8153, -218.296, 12.2687, 0.55", "-64.6497, -224.72, 11.3568, 0.55", "-72.8138, -230.683, 10.4956, 0.55", "-81.4818, -235.856, 11.0907, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-32.5629, -183.656, 17.2429, 0.55", "-33.2847, -185.814, 17.9132, 0.55", "-33.975, -188.572, 18.6973, 0.55", "-35.4847, -194.603, 20.412, 0.55", "-36.9407, -200.42, 22.0657, 0.55", "-37.9203, -204.333, 23.1782, 0.55", "-38.897, -208.235, 24.2875, 0.55", "-40.0918, -213.132, 25.7876, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-25.2414, -190.796, -35.484, 0.28", "-26.4677, -194.38, -35.9015, 0.28", "-26.8176, -195.487, -36.0686, 0.55", "-27.8186, -198.573, -36.5354, 0.28", "-28.2769, -199.985, -36.7491, 0.55", "-29.3108, -203.172, -37.2313, 0.28", "-30.0151, -205.343, -37.5597, 0.83", "-30.6701, -207.628, -38.0423, 0.28", "-31.1308, -209.33, -38.4352, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-25.2414, -190.796, -35.484, 0.55", "-25.0833, -192.346, -35.1322, 0.55", "-24.8345, -194.505, -34.5426, 0.55", "-24.6416, -196.903, -33.9231, 0.55", "-24.5139, -198.543, -33.514, 0.55", "-24.4164, -199.791, -33.2183, 0.28", "-24.2687, -202.168, -32.6874, 0.55", "-24.1324, -204.657, -32.1348, 0.28", "-24.0338, -207.599, -31.687, 0.55", "-24.0178, -209.248, -31.5356, 0.28", "-24.0551, -210.452, -31.4835, 0.55", "-24.1321, -211.79, -31.4518, 0.28", "-24.2205, -212.971, -31.4634, 0.55", "-24.4686, -216.04, -31.7055, 0.28", "-24.6815, -218.602, -31.9875, 0.28", "-24.8548, -220.155, -32.2005, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-40.0918, -213.132, 25.7876, 0.28", "-37.0328, -213.943, 25.5051, 0.28", "-36.2212, -214.158, 25.4301, 0.55", "-33.8929, -214.775, 25.2151, 0.28", "-32.3224, -215.191, 25.07, 0.55", "-29.8715, -215.841, 24.8436, 0.28", "-28.7041, -216.15, 24.7358, 0.55", "-15.6648, -220.799, 22.9106, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-40.0918, -213.132, 25.7876, 0.55", "-40.444, -217.124, 26.0002, 0.55", "-40.421, -228.929, 28.3321, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-15.6648, -220.799, 22.9106, 0.55", "-5.61453, -224.103, 20.8371, 0.55", "4.84737, -225.921, 19.1663, 0.55", "15.3747, -227.279, 17.5079, 0.55", "25.7801, -226.521, 14.9593, 0.55", "36.4172, -225.708, 13.7186, 0.55", "46.6587, -223.182, 11.5639, 0.55", "56.7039, -219.213, 11.1913, 0.55", "65.671, -213.008, 11.0372, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-15.6648, -220.799, 22.9106, 0.55", "-7.30376, -223.335, 22.4579, 0.55", "0.978503, -225.969, 23.5001, 0.55", "9.34304, -227.719, 25.2941, 0.55", "17.8974, -229.448, 25.5344, 0.55", "25.9995, -232.564, 26.7731, 0.55", "33.6822, -236.884, 26.6309, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_0", "axon_0", "axon_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_58", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_32", "dend_32", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_9", "dend_8", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_ChC_88b9ee8f5d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_54, id: dend_54, parent: dend_28
create dend_54
public dend_54
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_29
create dend_49
public dend_49
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_31
create dend_45
public dend_45
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.4999999999991157)
    connect dend_19(0), soma_0(0.4999999999991157)
    connect dend_0(0), soma_0(0.4999999999991157)
    connect axon_0(0), soma_0(1.0)
    connect dend_54(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.96523, -8.50396, 0.0192879, 2.77292 ) }
    soma_0 { pt3dadd( -4.44098, -7.63716, 0.0179479, 3.51612 ) }
    soma_0 { pt3dadd( -3.91674, -6.77037, 0.0166079, 5.09768 ) }
    soma_0 { pt3dadd( -3.3925, -5.90357, 0.0152679, 6.03936 ) }
    soma_0 { pt3dadd( -2.86825, -5.03677, 0.0139278, 6.97148 ) }
    soma_0 { pt3dadd( -2.34401, -4.16997, 0.0125878, 7.92835 ) }
    soma_0 { pt3dadd( -1.81976, -3.30317, 0.0112478, 9.28613 ) }
    soma_0 { pt3dadd( -1.29552, -2.43637, 0.00990778, 9.94241 ) }
    soma_0 { pt3dadd( -0.771277, -1.56957, 0.00856776, 10.1843 ) }
    soma_0 { pt3dadd( -0.247034, -0.702773, 0.00722774, 10.3452 ) }
    soma_0 { pt3dadd( 0.27721, 0.164025, 0.00588772, 10.228 ) }
    soma_0 { pt3dadd( 0.801453, 1.03082, 0.0045477, 9.54324 ) }
    soma_0 { pt3dadd( 1.3257, 1.89762, 0.00320768, 8.78219 ) }
    soma_0 { pt3dadd( 1.84994, 2.76442, 0.00186766, 7.98349 ) }
    soma_0 { pt3dadd( 2.37418, 3.63122, 5.27637E-4, 7.19659 ) }
    soma_0 { pt3dadd( 2.89843, 4.49802, -8.12382E-4, 6.4097 ) }
    soma_0 { pt3dadd( 3.42267, 5.36482, -0.0021524, 5.30941 ) }
    soma_0 { pt3dadd( 3.94692, 6.23162, -0.00349242, 4.2542 ) }
    soma_0 { pt3dadd( 4.47116, 7.09842, -0.00483244, 3.4094 ) }
    soma_0 { pt3dadd( 4.9954, 7.96521, -0.00617246, 2.28943 ) }
    soma_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 1.46335 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.16275, -9.55365, 5.04691, 2.4 ) }
    dend_28 { pt3dadd( -4.89057, -17.3958, 3.04032, 2.22 ) }
    dend_28 { pt3dadd( -5.48035, -23.7505, 1.41428, 2.22 ) }
    dend_28 { pt3dadd( -6.19358, -31.4355, -0.552114, 2.49 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 25/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 6.23725, 4.22235, -2.37309, 0.55 ) }
    dend_19 { pt3dadd( 8.53074, 6.58613, -3.76352, 0.55 ) }
    dend_19 { pt3dadd( 11.0101, 9.1414, -5.26658, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.56725, 8.32785, -2.03309, 1.94 ) }
    dend_0 { pt3dadd( 4.74753, 9.82417, -3.21778, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 30/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 13.2824, 21.6671, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_28 (entry count 33/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -6.19358, -31.4355, -0.552114, 0.83 ) }
    dend_54 { pt3dadd( -3.63964, -32.8916, -1.13493, 0.83 ) }
    dend_54 { pt3dadd( -1.57403, -34.0693, -1.60632, 0.83 ) }
    dend_54 { pt3dadd( 1.48471, -35.8133, -2.30434, 0.83 ) }
    dend_54 { pt3dadd( 3.3418, -36.8721, -2.72814, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -6.19358, -31.4355, -0.552114, 2.22 ) }
    dend_29 { pt3dadd( -7.1479, -33.2085, -2.18405, 2.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 11.0101, 9.1414, -5.26658, 0.55 ) }
    dend_27 { pt3dadd( 12.43, 10.539, -5.47386, 0.55 ) }
    dend_27 { pt3dadd( 13.7334, 11.8508, -5.63115, 1.11 ) }
    dend_27 { pt3dadd( 15.1778, 13.3473, -5.77018, 0.55 ) }
    dend_27 { pt3dadd( 16.0654, 14.334, -5.83889, 0.55 ) }
    dend_27 { pt3dadd( 17.5127, 16.0596, -6.05417, 0.83 ) }
    dend_27 { pt3dadd( 18.5799, 17.4576, -6.32026, 0.55 ) }
    dend_27 { pt3dadd( 19.265, 18.5141, -6.55776, 0.55 ) }
    dend_27 { pt3dadd( 20.2738, 20.2879, -7.01157, 1.11 ) }
    dend_27 { pt3dadd( 21.1312, 22.0509, -7.52955, 1.11 ) }
    dend_27 { pt3dadd( 22.116, 24.4029, -8.38318, 0.55 ) }
    dend_27 { pt3dadd( 22.938, 26.8236, -9.3576, 0.83 ) }
    dend_27 { pt3dadd( 23.401, 28.3992, -10.0593, 0.55 ) }
    dend_27 { pt3dadd( 23.5611, 29.0255, -10.3488, 0.55 ) }
    dend_27 { pt3dadd( 23.9828, 30.9194, -11.248, 1.11 ) }
    dend_27 { pt3dadd( 24.3824, 32.8712, -12.1374, 0.28 ) }
    dend_27 { pt3dadd( 24.5592, 33.7281, -12.4588, 0.55 ) }
    dend_27 { pt3dadd( 24.9551, 35.6638, -13.1782, 0.28 ) }
    dend_27 { pt3dadd( 25.1557, 36.6842, -13.5609, 0.83 ) }
    dend_27 { pt3dadd( 25.5275, 38.5643, -14.2753, 0.28 ) }
    dend_27 { pt3dadd( 25.6767, 39.4215, -14.5819, 0.83 ) }
    dend_27 { pt3dadd( 25.946, 41.397, -15.2671, 0.83 ) }
    dend_27 { pt3dadd( 26.318, 44.255, -16.3845, 0.28 ) }
    dend_27 { pt3dadd( 26.413, 45.1015, -16.7523, 0.55 ) }
    dend_27 { pt3dadd( 26.5523, 46.3478, -17.3363, 0.28 ) }
    dend_27 { pt3dadd( 26.6862, 47.5099, -17.8853, 1.11 ) }
    dend_27 { pt3dadd( 27.0658, 50.7477, -19.4231, 0.28 ) }
    dend_27 { pt3dadd( 27.2777, 52.4929, -20.2437, 0.83 ) }
    dend_27 { pt3dadd( 27.5444, 54.4481, -21.074, 0.28 ) }
    dend_27 { pt3dadd( 27.6917, 55.3632, -21.4326, 0.55 ) }
    dend_27 { pt3dadd( 28.0069, 57.0069, -22.0767, 0.28 ) }
    dend_27 { pt3dadd( 28.1579, 57.6569, -22.3078, 0.55 ) }
    dend_27 { pt3dadd( 28.3958, 58.6493, -22.5968, 0.28 ) }
    dend_27 { pt3dadd( 28.6083, 59.5901, -22.8817, 0.83 ) }
    dend_27 { pt3dadd( 28.9406, 61.1709, -23.3468, 0.83 ) }
    dend_27 { pt3dadd( 29.655, 65.1016, -24.5954, 0.28 ) }
    dend_27 { pt3dadd( 29.9266, 66.85, -25.1196, 0.55 ) }
    dend_27 { pt3dadd( 30.1456, 68.6268, -25.6234, 0.28 ) }
    dend_27 { pt3dadd( 30.4837, 71.8801, -26.4862, 0.55 ) }
    dend_27 { pt3dadd( 30.7409, 74.5139, -27.1011, 0.28 ) }
    dend_27 { pt3dadd( 30.8421, 75.9007, -27.3653, 0.55 ) }
    dend_27 { pt3dadd( 31.0137, 77.9626, -27.6708, 0.28 ) }
    dend_27 { pt3dadd( 31.1985, 79.7692, -27.9903, 0.55 ) }
    dend_27 { pt3dadd( 31.3197, 80.7031, -28.109, 0.55 ) }
    dend_27 { pt3dadd( 31.7787, 83.5799, -28.2473, 0.28 ) }
    dend_27 { pt3dadd( 31.9914, 84.6917, -28.2947, 0.55 ) }
    dend_27 { pt3dadd( 32.6736, 87.7777, -28.3745, 0.28 ) }
    dend_27 { pt3dadd( 32.9201, 88.82, -28.3969, 0.55 ) }
    dend_27 { pt3dadd( 33.5161, 91.1968, -28.3807, 0.28 ) }
    dend_27 { pt3dadd( 34.0307, 93.346, -28.3847, 0.55 ) }
    dend_27 { pt3dadd( 34.7082, 96.2677, -28.3955, 0.28 ) }
    dend_27 { pt3dadd( 34.8846, 97.055, -28.3939, 0.55 ) }
    dend_27 { pt3dadd( 35.325, 99.0286, -28.4256, 0.28 ) }
    dend_27 { pt3dadd( 35.7912, 101.097, -28.5672, 0.55 ) }
    dend_27 { pt3dadd( 36.3508, 103.545, -28.8848, 0.28 ) }
    dend_27 { pt3dadd( 36.7372, 105.28, -29.1503, 0.55 ) }
    dend_27 { pt3dadd( 37.2211, 107.439, -29.5324, 0.28 ) }
    dend_27 { pt3dadd( 37.8513, 110.283, -30.089, 0.55 ) }
    dend_27 { pt3dadd( 38.3947, 112.704, -30.6205, 0.28 ) }
    dend_27 { pt3dadd( 38.6449, 113.797, -30.8709, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 39.2421, 116.332, -31.4373, 0.55 ) }
    dend_27 { pt3dadd( 39.7171, 118.272, -31.834, 0.28 ) }
    dend_27 { pt3dadd( 39.9797, 119.343, -32.0168, 0.55 ) }
    dend_27 { pt3dadd( 40.312, 120.749, -32.1546, 0.28 ) }
    dend_27 { pt3dadd( 40.5791, 121.827, -32.2033, 0.55 ) }
    dend_27 { pt3dadd( 40.8285, 122.803, -32.1887, 0.55 ) }
    dend_27 { pt3dadd( 41.2827, 124.573, -32.0181, 0.28 ) }
    dend_27 { pt3dadd( 41.441, 125.252, -31.9257, 0.55 ) }
    dend_27 { pt3dadd( 41.908, 127.257, -31.6768, 0.28 ) }
    dend_27 { pt3dadd( 42.1646, 128.34, -31.5364, 0.83 ) }
    dend_27 { pt3dadd( 42.4939, 129.738, -31.4492, 0.28 ) }
    dend_27 { pt3dadd( 42.7517, 130.62, -31.4949, 0.55 ) }
    dend_27 { pt3dadd( 43.2161, 131.963, -31.7176, 0.28 ) }
    dend_27 { pt3dadd( 43.6212, 132.846, -31.8951, 0.55 ) }
    dend_27 { pt3dadd( 44.6894, 134.678, -32.3004, 0.28 ) }
    dend_27 { pt3dadd( 45.6135, 136.103, -32.6489, 0.55 ) }
    dend_27 { pt3dadd( 47.1702, 138.25, -33.1988, 0.28 ) }
    dend_27 { pt3dadd( 47.995, 139.29, -33.4699, 0.55 ) }
    dend_27 { pt3dadd( 49.7302, 141.248, -33.9871, 0.28 ) }
    dend_27 { pt3dadd( 50.987, 142.581, -34.4379, 0.28 ) }
    dend_27 { pt3dadd( 51.3275, 142.905, -34.5831, 0.28 ) }
    dend_27 { pt3dadd( 52.9833, 144.347, -35.3159, 0.28 ) }
    dend_27 { pt3dadd( 54.2375, 145.415, -35.8938, 0.83 ) }
    dend_27 { pt3dadd( 57.3829, 148.071, -37.4941, 0.28 ) }
    dend_27 { pt3dadd( 58.8709, 149.308, -38.3758, 0.55 ) }
    dend_27 { pt3dadd( 61.136, 151.117, -39.8066, 0.28 ) }
    dend_27 { pt3dadd( 61.8121, 151.638, -40.2422, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 11.0101, 9.1414, -5.26658, 0.55 ) }
    dend_20 { pt3dadd( 11.8016, 11.8536, -5.71769, 0.55 ) }
    dend_20 { pt3dadd( 12.6465, 14.8005, -6.0791, 0.55 ) }
    dend_20 { pt3dadd( 13.0953, 16.5071, -6.20439, 0.55 ) }
    dend_20 { pt3dadd( 13.8442, 19.5635, -6.52074, 0.55 ) }
    dend_20 { pt3dadd( 14.2903, 21.5055, -6.71895, 0.28 ) }
    dend_20 { pt3dadd( 14.9236, 24.0619, -6.96876, 1.11 ) }
    dend_20 { pt3dadd( 15.545, 26.7377, -7.2623, 0.55 ) }
    dend_20 { pt3dadd( 15.9023, 28.5165, -7.48336, 0.55 ) }
    dend_20 { pt3dadd( 16.4671, 31.9179, -7.81818, 0.83 ) }
    dend_20 { pt3dadd( 16.8562, 34.3745, -8.03907, 0.55 ) }
    dend_20 { pt3dadd( 17.3416, 37.836, -8.2924, 0.55 ) }
    dend_20 { pt3dadd( 17.7636, 41.1319, -8.59494, 0.55 ) }
    dend_20 { pt3dadd( 18.1311, 44.1684, -8.97157, 0.55 ) }
    dend_20 { pt3dadd( 18.5619, 47.7712, -9.39597, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 42/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.74753, 9.82417, -3.21778, 0.83 ) }
    dend_12 { pt3dadd( 6.27062, 10.9969, -3.24565, 0.83 ) }
    dend_12 { pt3dadd( 8.15643, 12.449, -3.28014, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.74753, 9.82417, -3.21778, 1.11 ) }
    dend_1 { pt3dadd( 4.1936, 13.2496, -2.4402, 1.11 ) }
    dend_1 { pt3dadd( 3.86779, 15.2643, -1.98285, 0.83 ) }
    dend_1 { pt3dadd( 3.20378, 19.3705, -1.05075, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 28.8079, 47.3373, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 36.5706, 60.1724, -0.00751248, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 52/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 3.3418, -36.8721, -2.72814, 0.55 ) }
    dend_56 { pt3dadd( 5.77202, -38.6621, -2.02188, 0.55 ) }
    dend_56 { pt3dadd( 8.17902, -40.4349, -1.32237, 0.55 ) }
    dend_56 { pt3dadd( 10.1728, -41.9034, -0.74297, 0.28 ) }
    dend_56 { pt3dadd( 12.1423, -43.3541, -0.170584, 0.55 ) }
    dend_56 { pt3dadd( 14.6305, -45.1867, 0.552514, 0.55 ) }
    dend_56 { pt3dadd( 16.4911, -46.5572, 1.09323, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 59/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 3.3418, -36.8721, -2.72814, 0.55 ) }
    dend_55 { pt3dadd( 4.93153, -37.7155, -2.49471, 0.55 ) }
    dend_55 { pt3dadd( 7.00412, -38.7185, -2.28694, 0.55 ) }
    dend_55 { pt3dadd( 8.44623, -39.3581, -2.14633, 0.83 ) }
    dend_55 { pt3dadd( 10.5453, -40.304, -2.02243, 0.55 ) }
    dend_55 { pt3dadd( 12.4933, -41.1711, -1.93342, 0.55 ) }
    dend_55 { pt3dadd( 14.9049, -42.2225, -1.811, 0.83 ) }
    dend_55 { pt3dadd( 16.62, -42.9061, -1.77998, 0.28 ) }
    dend_55 { pt3dadd( 18.3195, -43.5141, -1.77191, 0.55 ) }
    dend_55 { pt3dadd( 20.3628, -44.2588, -1.91294, 0.28 ) }
    dend_55 { pt3dadd( 21.5641, -44.7259, -2.08136, 0.55 ) }
    dend_55 { pt3dadd( 23.4506, -45.5037, -2.49578, 0.55 ) }
    dend_55 { pt3dadd( 25.1155, -46.244, -2.92716, 0.55 ) }
    dend_55 { pt3dadd( 26.8811, -47.0488, -3.41909, 0.55 ) }
    dend_55 { pt3dadd( 30.0783, -48.4507, -4.39961, 0.55 ) }
    dend_55 { pt3dadd( 31.5381, -49.0933, -4.87303, 0.28 ) }
    dend_55 { pt3dadd( 32.5177, -49.571, -5.20901, 0.55 ) }
    dend_55 { pt3dadd( 33.9151, -50.2987, -5.70376, 0.55 ) }
    dend_55 { pt3dadd( 35.6549, -51.2717, -6.29337, 0.55 ) }
    dend_55 { pt3dadd( 37.7692, -52.5045, -6.93701, 0.55 ) }
    dend_55 { pt3dadd( 39.8834, -53.748, -7.48888, 0.55 ) }
    dend_55 { pt3dadd( 41.416, -54.6765, -7.87989, 0.55 ) }
    dend_55 { pt3dadd( 43.2083, -55.7736, -8.34507, 0.55 ) }
    dend_55 { pt3dadd( 44.7146, -56.7063, -8.77208, 0.55 ) }
    dend_55 { pt3dadd( 46.1313, -57.6299, -9.20285, 0.55 ) }
    dend_55 { pt3dadd( 48.2136, -58.9729, -9.81229, 0.55 ) }
    dend_55 { pt3dadd( 49.747, -59.8925, -10.2507, 0.55 ) }
    dend_55 { pt3dadd( 51.471, -60.8773, -10.7839, 0.83 ) }
    dend_55 { pt3dadd( 53.2313, -61.8874, -11.347, 0.83 ) }
    dend_55 { pt3dadd( 54.7645, -62.7692, -11.8612, 0.55 ) }
    dend_55 { pt3dadd( 56.4785, -63.7584, -12.5398, 0.55 ) }
    dend_55 { pt3dadd( 57.6013, -64.4068, -13.0024, 0.83 ) }
    dend_55 { pt3dadd( 59.5668, -65.4536, -13.7999, 0.28 ) }
    dend_55 { pt3dadd( 60.9482, -66.1192, -14.3271, 0.55 ) }
    dend_55 { pt3dadd( 64.0003, -67.4501, -15.3409, 0.55 ) }
    dend_55 { pt3dadd( 66.9044, -68.6047, -16.2572, 0.55 ) }
    dend_55 { pt3dadd( 68.2089, -69.0984, -16.6505, 0.28 ) }
    dend_55 { pt3dadd( 69.9312, -69.6859, -17.0759, 0.55 ) }
    dend_55 { pt3dadd( 72.7123, -70.5657, -17.6318, 0.28 ) }
    dend_55 { pt3dadd( 74.3401, -71.115, -17.8762, 0.28 ) }
    dend_55 { pt3dadd( 75.7119, -71.6071, -18.0728, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_55 { pt3dadd( 77.394, -72.3159, -18.3455, 0.55 ) }
    dend_55 { pt3dadd( 78.777, -73.014, -18.6527, 0.55 ) }
    dend_55 { pt3dadd( 80.8059, -74.3, -19.2683, 0.55 ) }
    dend_55 { pt3dadd( 82.8299, -75.7652, -20.061, 0.55 ) }
    dend_55 { pt3dadd( 85.1199, -77.4613, -21.1278, 0.55 ) }
    dend_55 { pt3dadd( 86.4846, -78.5201, -21.7643, 0.28 ) }
    dend_55 { pt3dadd( 87.499, -79.3421, -22.2518, 0.55 ) }
    dend_55 { pt3dadd( 89.5212, -81.0585, -23.2704, 0.55 ) }
    dend_55 { pt3dadd( 91.441, -82.7144, -24.1824, 0.55 ) }
    dend_55 { pt3dadd( 93.1516, -84.1643, -24.9626, 0.83 ) }
    dend_55 { pt3dadd( 94.5732, -85.4138, -25.4784, 0.83 ) }
    dend_55 { pt3dadd( 95.2812, -85.9918, -25.7114, 0.83 ) }
    dend_55 { pt3dadd( 96.8818, -87.2018, -26.1692, 0.28 ) }
    dend_55 { pt3dadd( 98.0389, -87.9666, -26.3759, 0.83 ) }
    dend_55 { pt3dadd( 100.379, -89.3119, -26.587, 0.28 ) }
    dend_55 { pt3dadd( 101.935, -90.0751, -26.7058, 0.83 ) }
    dend_55 { pt3dadd( 104.163, -91.0228, -26.7296, 0.55 ) }
    dend_55 { pt3dadd( 105.704, -91.5691, -26.6105, 0.55 ) }
    dend_55 { pt3dadd( 109.114, -92.6129, -25.9827, 0.55 ) }
    dend_55 { pt3dadd( 110.825, -93.0981, -25.4209, 0.55 ) }
    dend_55 { pt3dadd( 112.526, -93.5506, -24.5815, 0.55 ) }
    dend_55 { pt3dadd( 115.101, -94.2612, -22.7471, 0.55 ) }
    dend_55 { pt3dadd( 116.001, -94.5821, -21.8789, 0.55 ) }
    dend_55 { pt3dadd( 117.024, -95.0233, -20.7032, 0.83 ) }
    dend_55 { pt3dadd( 118.828, -96.0406, -18.3216, 0.28 ) }
    dend_55 { pt3dadd( 119.401, -96.4254, -17.5444, 0.55 ) }
    dend_55 { pt3dadd( 121.145, -97.664, -15.2142, 0.28 ) }
    dend_55 { pt3dadd( 122.691, -98.8634, -13.4624, 0.55 ) }
    dend_55 { pt3dadd( 123.33, -99.3969, -12.8399, 0.55 ) }
    dend_55 { pt3dadd( 124.718, -100.563, -11.7662, 0.28 ) }
    dend_55 { pt3dadd( 125.551, -101.263, -11.3306, 0.28 ) }
    dend_55 { pt3dadd( 126.343, -101.92, -11.0272, 0.55 ) }
    dend_55 { pt3dadd( 127.991, -103.176, -10.6544, 0.28 ) }
    dend_55 { pt3dadd( 128.954, -103.829, -10.498, 0.28 ) }
    dend_55 { pt3dadd( 129.584, -104.213, -10.4041, 0.55 ) }
    dend_55 { pt3dadd( 131.395, -105.115, -10.1277, 0.28 ) }
    dend_55 { pt3dadd( 133.106, -105.897, -9.83173, 0.55 ) }
    dend_55 { pt3dadd( 134.6, -106.45, -9.53331, 0.28 ) }
    dend_55 { pt3dadd( 135.997, -106.891, -9.2323, 0.55 ) }
    dend_55 { pt3dadd( 138.199, -107.52, -8.73844, 0.28 ) }
    dend_55 { pt3dadd( 139.97, -107.971, -8.31975, 0.28 ) }
    dend_55 { pt3dadd( 142.216, -108.466, -7.72549, 0.55 ) }
    dend_55 { pt3dadd( 144.106, -108.855, -7.17835, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_29 (entry count 43/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -7.1479, -33.2085, -2.18405, 0.55 ) }
    dend_49 { pt3dadd( -8.76727, -34.9492, -3.17388, 0.55 ) }
    dend_49 { pt3dadd( -9.63358, -35.79, -3.63605, 0.55 ) }
    dend_49 { pt3dadd( -11.0571, -37.1954, -4.32682, 0.83 ) }
    dend_49 { pt3dadd( -13.5436, -39.8645, -5.57164, 0.55 ) }
    dend_49 { pt3dadd( -15.2233, -41.7901, -6.38688, 0.55 ) }
    dend_49 { pt3dadd( -16.9839, -43.8646, -7.22156, 0.83 ) }
    dend_49 { pt3dadd( -18.5642, -45.8374, -7.95659, 0.55 ) }
    dend_49 { pt3dadd( -19.7368, -47.2898, -8.41221, 1.11 ) }
    dend_49 { pt3dadd( -21.0206, -48.9127, -8.76746, 0.28 ) }
    dend_49 { pt3dadd( -22.3918, -50.8257, -8.9656, 0.55 ) }
    dend_49 { pt3dadd( -23.0252, -51.8265, -9.07199, 0.28 ) }
    dend_49 { pt3dadd( -24.2581, -53.7243, -9.22387, 0.55 ) }
    dend_49 { pt3dadd( -25.1402, -54.9357, -9.25256, 0.28 ) }
    dend_49 { pt3dadd( -27.1321, -57.2804, -9.21204, 0.83 ) }
    dend_49 { pt3dadd( -29.3712, -59.542, -9.03433, 0.55 ) }
    dend_49 { pt3dadd( -31.7215, -61.8224, -8.82636, 0.55 ) }
    dend_49 { pt3dadd( -33.8774, -63.836, -8.61256, 0.55 ) }
    dend_49 { pt3dadd( -36.2633, -65.9026, -8.37131, 0.55 ) }
    dend_49 { pt3dadd( -38.2934, -67.5307, -8.16748, 0.55 ) }
    dend_49 { pt3dadd( -40.6069, -69.1021, -7.83753, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 64/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -7.1479, -33.2085, -2.18405, 1.66 ) }
    dend_30 { pt3dadd( -6.09354, -35.9674, -1.9326, 1.66 ) }
    dend_30 { pt3dadd( -4.54513, -40.019, -1.56333, 0.83 ) }
    dend_30 { pt3dadd( -2.60253, -45.1021, -1.10005, 0.83 ) }
    dend_30 { pt3dadd( -0.854791, -49.6753, -0.683251, 0.83 ) }
    dend_30 { pt3dadd( 0.488843, -53.1911, -0.362816, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 18.5619, 47.7712, -9.39597, 0.55 ) }
    dend_24 { pt3dadd( 19.6519, 50.7867, -11.1607, 0.55 ) }
    dend_24 { pt3dadd( 21.1583, 54.4348, -13.403, 0.55 ) }
    dend_24 { pt3dadd( 22.8601, 58.5096, -15.7181, 0.28 ) }
    dend_24 { pt3dadd( 24.3558, 62.1153, -17.6193, 0.83 ) }
    dend_24 { pt3dadd( 25.3649, 64.6116, -18.8733, 0.55 ) }
    dend_24 { pt3dadd( 26.708, 67.9189, -20.4613, 0.55 ) }
    dend_24 { pt3dadd( 28.3986, 71.823, -22.2512, 0.55 ) }
    dend_24 { pt3dadd( 30.4336, 76.174, -23.8051, 0.83 ) }
    dend_24 { pt3dadd( 31.8823, 79.2178, -24.5067, 0.28 ) }
    dend_24 { pt3dadd( 32.2715, 80.0586, -24.6265, 0.28 ) }
    dend_24 { pt3dadd( 33.67, 83.1682, -24.8784, 0.55 ) }
    dend_24 { pt3dadd( 34.9287, 86.0508, -25.0009, 0.55 ) }
    dend_24 { pt3dadd( 37.4753, 91.9657, -25.2598, 0.55 ) }
    dend_24 { pt3dadd( 38.7199, 94.8797, -25.4624, 0.55 ) }
    dend_24 { pt3dadd( 41.3091, 101.042, -26.0611, 0.55 ) }
    dend_24 { pt3dadd( 42.8663, 104.832, -26.5216, 0.55 ) }
    dend_24 { pt3dadd( 44.6979, 109.449, -27.2335, 0.55 ) }
    dend_24 { pt3dadd( 46.6926, 114.583, -28.4388, 0.55 ) }
    dend_24 { pt3dadd( 47.6644, 116.905, -29.2152, 0.55 ) }
    dend_24 { pt3dadd( 48.5002, 118.624, -29.9922, 0.28 ) }
    dend_24 { pt3dadd( 49.1147, 119.657, -30.5858, 0.55 ) }
    dend_24 { pt3dadd( 50.2535, 121.216, -31.6006, 0.28 ) }
    dend_24 { pt3dadd( 52.5261, 123.956, -33.4743, 0.55 ) }
    dend_24 { pt3dadd( 56.3454, 128.22, -36.1967, 0.55 ) }
    dend_24 { pt3dadd( 59.3658, 131.609, -38.4471, 0.55 ) }
    dend_24 { pt3dadd( 61.1053, 133.524, -39.7304, 0.55 ) }
    dend_24 { pt3dadd( 65.1124, 137.816, -42.803, 0.55 ) }
    dend_24 { pt3dadd( 66.7152, 139.614, -44.0547, 0.55 ) }
    dend_24 { pt3dadd( 68.0618, 141.279, -45.1217, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( 69.7951, 143.833, -46.7096, 0.55 ) }
    dend_24 { pt3dadd( 71.2252, 146.354, -48.0672, 0.55 ) }
    dend_24 { pt3dadd( 72.597, 149.558, -49.6859, 0.55 ) }
    dend_24 { pt3dadd( 73.726, 153.219, -51.3007, 0.55 ) }
    dend_24 { pt3dadd( 74.8533, 157.554, -53.1877, 0.55 ) }
    dend_24 { pt3dadd( 75.4227, 159.936, -54.1933, 0.55 ) }
    dend_24 { pt3dadd( 75.9523, 162.229, -55.0571, 0.55 ) }
    dend_24 { pt3dadd( 76.657, 165.027, -56.1928, 0.55 ) }
    dend_24 { pt3dadd( 78.0149, 169.239, -58.0174, 0.55 ) }
    dend_24 { pt3dadd( 79.8641, 173.26, -60.1616, 0.55 ) }
    dend_24 { pt3dadd( 80.9258, 174.967, -61.3304, 0.55 ) }
    dend_24 { pt3dadd( 81.9743, 176.357, -62.4281, 0.55 ) }
    dend_24 { pt3dadd( 85.0525, 179.897, -65.6002, 0.55 ) }
    dend_24 { pt3dadd( 86.3, 181.167, -66.8066, 0.55 ) }
    dend_24 { pt3dadd( 88.4064, 183.176, -68.8609, 0.55 ) }
    dend_24 { pt3dadd( 90.8612, 185.483, -71.1464, 0.55 ) }
    dend_24 { pt3dadd( 92.3038, 186.883, -72.5249, 0.28 ) }
    dend_24 { pt3dadd( 93.3436, 187.902, -73.6011, 0.28 ) }
    dend_24 { pt3dadd( 94.4533, 189.035, -74.8068, 0.55 ) }
    dend_24 { pt3dadd( 97.3585, 191.917, -77.9729, 0.55 ) }
    dend_24 { pt3dadd( 100.361, 194.832, -81.3049, 0.55 ) }
    dend_24 { pt3dadd( 101.801, 196.089, -82.9381, 0.83 ) }
    dend_24 { pt3dadd( 105.423, 199.345, -88.217, 0.55 ) }
    dend_24 { pt3dadd( 107.373, 201.053, -91.6472, 0.55 ) }
    dend_24 { pt3dadd( 108.772, 202.337, -94.4316, 0.55 ) }
    dend_24 { pt3dadd( 110.872, 204.313, -99.209, 0.55 ) }
    dend_24 { pt3dadd( 113.627, 206.981, -105.879, 0.55 ) }
    dend_24 { pt3dadd( 118.024, 211.076, -117.098, 0.55 ) }
    dend_24 { pt3dadd( 121.243, 214.092, -125.747, 0.55 ) }
    dend_24 { pt3dadd( 122.423, 215.186, -129.106, 0.55 ) }
    dend_24 { pt3dadd( 124.878, 217.463, -136.522, 0.55 ) }
    dend_24 { pt3dadd( 126.228, 218.668, -140.661, 0.55 ) }
    dend_24 { pt3dadd( 128.427, 220.751, -147.319, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 33/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 18.5619, 47.7712, -9.39597, 0.28 ) }
    dend_21 { pt3dadd( 18.2762, 51.6359, -8.5846, 0.28 ) }
    dend_21 { pt3dadd( 18.1603, 53.6574, -8.14659, 0.83 ) }
    dend_21 { pt3dadd( 18.0528, 56.8396, -7.42855, 0.55 ) }
    dend_21 { pt3dadd( 17.9739, 59.9918, -6.72313, 0.55 ) }
    dend_21 { pt3dadd( 17.9019, 64.1805, -5.83666, 0.28 ) }
    dend_21 { pt3dadd( 17.8741, 66.9491, -5.29042, 0.28 ) }
    dend_21 { pt3dadd( 17.8979, 68.0117, -5.10969, 0.55 ) }
    dend_21 { pt3dadd( 17.9648, 70.2024, -4.73525, 0.28 ) }
    dend_21 { pt3dadd( 18.0322, 71.458, -4.54917, 0.55 ) }
    dend_21 { pt3dadd( 18.1568, 73.0219, -4.35002, 0.28 ) }
    dend_21 { pt3dadd( 18.346, 74.6006, -4.32587, 0.55 ) }
    dend_21 { pt3dadd( 18.6018, 76.8852, -4.42643, 0.28 ) }
    dend_21 { pt3dadd( 18.6018, 76.8852, -4.42643, 0.55 ) }
    dend_21 { pt3dadd( 19.1271, 79.6534, -4.75169, 0.55 ) }
    dend_21 { pt3dadd( 19.7769, 82.1859, -5.23855, 0.83 ) }
    dend_21 { pt3dadd( 20.8167, 85.312, -6.06423, 0.55 ) }
    dend_21 { pt3dadd( 21.4355, 86.885, -6.55764, 0.55 ) }
    dend_21 { pt3dadd( 22.6602, 89.6889, -7.42617, 0.55 ) }
    dend_21 { pt3dadd( 23.8858, 92.3273, -8.18495, 0.28 ) }
    dend_21 { pt3dadd( 25.9002, 96.4897, -9.26141, 0.83 ) }
    dend_21 { pt3dadd( 27.1832, 99.1473, -9.84102, 0.28 ) }
    dend_21 { pt3dadd( 28.1172, 101.047, -10.0748, 0.55 ) }
    dend_21 { pt3dadd( 29.6525, 104.224, -10.3462, 0.28 ) }
    dend_21 { pt3dadd( 30.3235, 105.71, -10.3815, 0.55 ) }
    dend_21 { pt3dadd( 31.3433, 108.279, -10.1865, 0.28 ) }
    dend_21 { pt3dadd( 31.7829, 109.641, -9.9316, 0.55 ) }
    dend_21 { pt3dadd( 32.6824, 112.683, -9.29972, 0.28 ) }
    dend_21 { pt3dadd( 33.4292, 115.045, -8.77985, 0.55 ) }
    dend_21 { pt3dadd( 34.2195, 117.423, -8.27972, 0.28 ) }
    dend_21 { pt3dadd( 35.0264, 119.951, -7.78535, 0.55 ) }
    dend_21 { pt3dadd( 35.9068, 122.642, -7.31686, 0.28 ) }
    dend_21 { pt3dadd( 37.1591, 126.575, -6.78267, 0.55 ) }
    dend_21 { pt3dadd( 37.9948, 128.963, -6.52706, 0.28 ) }
    dend_21 { pt3dadd( 38.4026, 130.054, -6.36189, 0.55 ) }
    dend_21 { pt3dadd( 39.2417, 132.13, -6.02017, 0.28 ) }
    dend_21 { pt3dadd( 39.8983, 133.63, -5.77129, 0.55 ) }
    dend_21 { pt3dadd( 40.8694, 135.816, -5.41731, 0.55 ) }
    dend_21 { pt3dadd( 41.8111, 137.963, -4.96588, 0.55 ) }
    dend_21 { pt3dadd( 43.4385, 141.637, -4.01996, 0.55 ) }
    dend_21 { pt3dadd( 44.767, 144.736, -3.09489, 0.55 ) }
    dend_21 { pt3dadd( 46.1145, 147.94, -2.1173, 0.55 ) }
    dend_21 { pt3dadd( 47.7362, 152.076, -0.907553, 0.55 ) }
    dend_21 { pt3dadd( 49.3689, 156.47, 0.303006, 0.55 ) }
    dend_21 { pt3dadd( 50.2528, 158.987, 0.909393, 0.28 ) }
    dend_21 { pt3dadd( 51.1254, 161.338, 1.41083, 0.55 ) }
    dend_21 { pt3dadd( 52.0201, 163.736, 1.85479, 0.55 ) }
    dend_21 { pt3dadd( 52.5898, 165.234, 2.07879, 0.83 ) }
    dend_21 { pt3dadd( 53.9125, 168.858, 2.43866, 0.28 ) }
    dend_21 { pt3dadd( 55.0565, 172.149, 1.67355, 0.55 ) }
    dend_21 { pt3dadd( 56.113, 175.221, 0.111068, 0.28 ) }
    dend_21 { pt3dadd( 56.452, 176.259, -0.628078, 0.55 ) }
    dend_21 { pt3dadd( 57.4674, 179.616, -3.25238, 0.55 ) }
    dend_21 { pt3dadd( 57.9335, 181.361, -4.74946, 0.55 ) }
    dend_21 { pt3dadd( 60.8149, 193.453, -15.6736, 0.28 ) }
    dend_21 { pt3dadd( 61.339, 195.868, -17.8156, 0.28 ) }
    dend_21 { pt3dadd( 61.7893, 198.12, -19.7135, 0.55 ) }
    dend_21 { pt3dadd( 62.3808, 201.043, -22.1616, 0.55 ) }
    dend_21 { pt3dadd( 62.6511, 202.375, -23.2412, 0.55 ) }
    dend_21 { pt3dadd( 63.3168, 205.45, -24.7874, 0.55 ) }
    dend_21 { pt3dadd( 64.1459, 209.151, -24.5568, 0.55 ) }
    dend_21 { pt3dadd( 64.4872, 210.766, -24.5076, 0.55 ) }
    dend_21 { pt3dadd( 71.7237, 222.901, -23.6282, 0.55 ) }
    dend_21 { pt3dadd( 80.1849, 234.131, -24.6408, 0.55 ) }
    dend_21 { pt3dadd( 87.1797, 246.439, -23.9864, 0.55 ) }
    dend_21 { pt3dadd( 94.192, 258.753, -23.6489, 0.55 ) }
    dend_21 { pt3dadd( 99.2679, 271.95, -21.9302, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( 105.907, 283.942, -18.4926, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 8.15643, 12.449, -3.28014, 0.55 ) }
    dend_16 { pt3dadd( 9.85663, 13.4786, -3.51824, 0.55 ) }
    dend_16 { pt3dadd( 11.4712, 14.4689, -3.64708, 0.83 ) }
    dend_16 { pt3dadd( 13.1446, 15.5182, -3.72769, 0.28 ) }
    dend_16 { pt3dadd( 14.3567, 16.2724, -3.7129, 0.55 ) }
    dend_16 { pt3dadd( 15.7732, 17.1401, -3.65342, 0.28 ) }
    dend_16 { pt3dadd( 16.8383, 17.7636, -3.62089, 0.83 ) }
    dend_16 { pt3dadd( 18.457, 18.6696, -3.52382, 0.55 ) }
    dend_16 { pt3dadd( 19.7786, 19.3748, -3.40111, 0.83 ) }
    dend_16 { pt3dadd( 21.4737, 20.2105, -3.21889, 0.28 ) }
    dend_16 { pt3dadd( 22.5901, 20.7086, -3.122, 0.55 ) }
    dend_16 { pt3dadd( 24.5731, 21.5288, -2.99294, 0.28 ) }
    dend_16 { pt3dadd( 26.1916, 22.1756, -2.94678, 0.83 ) }
    dend_16 { pt3dadd( 27.499, 22.6856, -2.97144, 0.28 ) }
    dend_16 { pt3dadd( 29.0875, 23.2824, -3.05786, 0.55 ) }
    dend_16 { pt3dadd( 30.9522, 23.973, -3.22729, 0.28 ) }
    dend_16 { pt3dadd( 31.7683, 24.2791, -3.31694, 0.83 ) }
    dend_16 { pt3dadd( 33.5902, 24.986, -3.52861, 0.28 ) }
    dend_16 { pt3dadd( 34.1554, 25.2034, -3.61575, 0.55 ) }
    dend_16 { pt3dadd( 35.8882, 25.8768, -3.95535, 0.83 ) }
    dend_16 { pt3dadd( 37.3721, 26.4408, -4.27246, 0.28 ) }
    dend_16 { pt3dadd( 38.4699, 26.8581, -4.53298, 0.83 ) }
    dend_16 { pt3dadd( 39.4631, 27.259, -4.78165, 0.28 ) }
    dend_16 { pt3dadd( 39.8549, 27.4224, -4.87764, 0.55 ) }
    dend_16 { pt3dadd( 41.0744, 27.9701, -5.1655, 0.28 ) }
    dend_16 { pt3dadd( 42.3844, 28.622, -5.50795, 0.83 ) }
    dend_16 { pt3dadd( 43.7721, 29.3719, -5.85742, 0.28 ) }
    dend_16 { pt3dadd( 44.3393, 29.7024, -5.97858, 0.55 ) }
    dend_16 { pt3dadd( 45.7734, 30.5796, -6.25412, 0.28 ) }
    dend_16 { pt3dadd( 46.7933, 31.2706, -6.4131, 0.55 ) }
    dend_16 { pt3dadd( 48.8227, 32.7442, -6.68877, 0.28 ) }
    dend_16 { pt3dadd( 49.4977, 33.2799, -6.7564, 0.83 ) }
    dend_16 { pt3dadd( 51.0107, 34.5323, -6.84893, 0.28 ) }
    dend_16 { pt3dadd( 51.9545, 35.3547, -6.88562, 0.83 ) }
    dend_16 { pt3dadd( 54.2234, 37.479, -6.91737, 0.28 ) }
    dend_16 { pt3dadd( 55.1571, 38.3791, -6.85943, 0.83 ) }
    dend_16 { pt3dadd( 56.8586, 40.0204, -6.6581, 0.28 ) }
    dend_16 { pt3dadd( 57.4279, 40.5624, -6.57254, 0.55 ) }
    dend_16 { pt3dadd( 58.2141, 41.3037, -6.4138, 0.28 ) }
    dend_16 { pt3dadd( 58.5606, 41.6151, -6.31517, 0.55 ) }
    dend_16 { pt3dadd( 60.3138, 43.0547, -5.63762, 0.28 ) }
    dend_16 { pt3dadd( 61.3127, 43.8447, -5.26232, 0.55 ) }
    dend_16 { pt3dadd( 62.6777, 44.8918, -4.81644, 0.28 ) }
    dend_16 { pt3dadd( 63.1589, 45.2401, -4.64918, 0.83 ) }
    dend_16 { pt3dadd( 65.4505, 46.8086, -3.88477, 0.28 ) }
    dend_16 { pt3dadd( 66.5337, 47.5323, -3.53227, 0.55 ) }
    dend_16 { pt3dadd( 68.0956, 48.5774, -3.05191, 0.28 ) }
    dend_16 { pt3dadd( 69.1898, 49.3023, -2.72062, 0.83 ) }
    dend_16 { pt3dadd( 71.7913, 50.9891, -2.01572, 0.28 ) }
    dend_16 { pt3dadd( 73.5338, 52.0918, -1.4915, 0.55 ) }
    dend_16 { pt3dadd( 74.7774, 52.8651, -1.10393, 0.28 ) }
    dend_16 { pt3dadd( 75.409, 53.2507, -0.885633, 0.55 ) }
    dend_16 { pt3dadd( 76.7658, 54.0438, -0.356901, 0.28 ) }
    dend_16 { pt3dadd( 77.4039, 54.4126, -0.113288, 0.55 ) }
    dend_16 { pt3dadd( 79.9622, 55.8928, 0.721164, 0.28 ) }
    dend_16 { pt3dadd( 80.9704, 56.4619, 1.03371, 0.83 ) }
    dend_16 { pt3dadd( 83.3249, 57.691, 1.77558, 0.28 ) }
    dend_16 { pt3dadd( 84.0851, 58.0564, 2.04166, 0.28 ) }
    dend_16 { pt3dadd( 84.8698, 58.4102, 2.31062, 0.55 ) }
    dend_16 { pt3dadd( 86.0136, 58.9191, 2.69306, 0.28 ) }
    dend_16 { pt3dadd( 86.9561, 59.3198, 2.9475, 0.55 ) }
    dend_16 { pt3dadd( 89.0164, 60.1311, 3.57273, 0.28 ) }
    dend_16 { pt3dadd( 90.4, 60.6314, 4.04896, 0.83 ) }
    dend_16 { pt3dadd( 91.5882, 61.0661, 4.55316, 0.28 ) }
    dend_16 { pt3dadd( 92.578, 61.4094, 5.07615, 0.55 ) }
    dend_16 { pt3dadd( 99.2284, 65.1944, 4.7881, 0.55 ) }
    dend_16 { pt3dadd( 106.096, 68.3113, 3.65794, 0.55 ) }
    dend_16 { pt3dadd( 113.04, 71.4495, 4.05677, 0.55 ) }
    dend_16 { pt3dadd( 120.441, 73.1, 3.99021, 0.55 ) }
    dend_16 { pt3dadd( 127.646, 75.406, 3.28107, 0.55 ) }
    dend_16 { pt3dadd( 134.5, 78.0499, 1.30261, 0.55 ) }
    dend_16 { pt3dadd( 141.128, 80.8134, -1.21711, 0.55 ) }
    dend_16 { pt3dadd( 147.736, 81.9883, -4.71878, 0.55 ) }
    dend_16 { pt3dadd( 154.517, 82.5924, -8.01311, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.15643, 12.449, -3.28014, 0.55 ) }
    dend_13 { pt3dadd( 9.72945, 15.7911, -0.949867, 0.55 ) }
    dend_13 { pt3dadd( 11.9482, 20.2075, 2.06217, 0.83 ) }
    dend_13 { pt3dadd( 12.9519, 21.9627, 3.23797, 0.55 ) }
    dend_13 { pt3dadd( 13.9913, 23.7415, 4.51226, 0.83 ) }
    dend_13 { pt3dadd( 16.0927, 27.2026, 7.34694, 0.83 ) }
    dend_13 { pt3dadd( 17.241, 28.9574, 8.89705, 0.55 ) }
    dend_13 { pt3dadd( 18.525, 30.6511, 10.5619, 0.55 ) }
    dend_13 { pt3dadd( 19.4882, 31.7631, 11.8965, 0.55 ) }
    dend_13 { pt3dadd( 21.4635, 33.8029, 14.5108, 0.55 ) }
    dend_13 { pt3dadd( 23.5661, 35.9444, 17.5848, 0.55 ) }
    dend_13 { pt3dadd( 24.2495, 36.7851, 18.6675, 0.55 ) }
    dend_13 { pt3dadd( 29.4627, 43.8615, 24.0358, 0.55 ) }
    dend_13 { pt3dadd( 34.8442, 50.7101, 29.5051, 0.55 ) }
    dend_13 { pt3dadd( 39.1762, 58.4951, 34.7651, 0.55 ) }
    dend_13 { pt3dadd( 43.827, 65.9594, 40.1741, 0.55 ) }
    dend_13 { pt3dadd( 47.1574, 75.0131, 44.1392, 0.55 ) }
    dend_13 { pt3dadd( 52.4171, 83.1644, 47.7881, 0.55 ) }
    dend_13 { pt3dadd( 58.9637, 90.6218, 50.5885, 0.55 ) }
    dend_13 { pt3dadd( 64.6239, 98.5743, 54.0271, 0.55 ) }
    dend_13 { pt3dadd( 69.1908, 107.002, 58.0267, 0.55 ) }
    dend_13 { pt3dadd( 73.3682, 115.864, 61.5585, 0.55 ) }
    dend_13 { pt3dadd( 76.1075, 124.73, 66.2946, 0.55 ) }
    dend_13 { pt3dadd( 77.6131, 134.0, 70.862, 0.55 ) }
    dend_13 { pt3dadd( 78.0698, 143.132, 75.8779, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( 78.6225, 152.027, 81.265, 0.55 ) }
    dend_13 { pt3dadd( 78.3041, 161.51, 85.6398, 0.55 ) }
    dend_13 { pt3dadd( 78.4608, 170.905, 90.2005, 0.55 ) }
    dend_13 { pt3dadd( 79.4969, 179.927, 95.3194, 0.55 ) }
    dend_13 { pt3dadd( 80.6975, 188.972, 100.367, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 5/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.20378, 19.3705, -1.05075, 0.28 ) }
    dend_11 { pt3dadd( 1.73251, 19.5465, -1.32466, 0.28 ) }
    dend_11 { pt3dadd( 1.11188, 19.6188, -1.4641, 0.55 ) }
    dend_11 { pt3dadd( -2.11932, 19.9952, -2.19012, 0.28 ) }
    dend_11 { pt3dadd( -2.99702, 20.0974, -2.38733, 0.55 ) }
    dend_11 { pt3dadd( -6.30273, 20.4825, -3.13009, 0.28 ) }
    dend_11 { pt3dadd( -8.01107, 20.6815, -3.51394, 0.28 ) }
    dend_11 { pt3dadd( -8.69404, 20.7494, -3.69608, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 3.20378, 19.3705, -1.05075, 0.83 ) }
    dend_2 { pt3dadd( 3.55931, 21.661, -0.249079, 0.83 ) }
    dend_2 { pt3dadd( 3.97622, 24.3469, 0.691005, 0.83 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 16/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 16.4911, -46.5572, 1.09323, 0.55 ) }
    dend_60 { pt3dadd( 17.6899, -46.8958, 2.9115, 0.55 ) }
    dend_60 { pt3dadd( 18.4373, -46.9291, 3.97432, 0.55 ) }
    dend_60 { pt3dadd( 19.7712, -46.7849, 5.75971, 0.55 ) }
    dend_60 { pt3dadd( 20.5379, -46.5969, 6.77162, 0.55 ) }
    dend_60 { pt3dadd( 21.7218, -46.3066, 8.33416, 0.55 ) }
    dend_60 { pt3dadd( 22.6888, -46.0695, 9.61036, 0.55 ) }
    dend_60 { pt3dadd( 23.9342, -45.6204, 11.1229, 0.55 ) }
    dend_60 { pt3dadd( 25.0362, -45.0658, 12.4709, 0.55 ) }
    dend_60 { pt3dadd( 26.9465, -43.8825, 14.6556, 0.55 ) }
    dend_60 { pt3dadd( 30.7226, -42.2243, 19.7351, 0.55 ) }
    dend_60 { pt3dadd( 33.9333, -40.0572, 25.0288, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 28/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 16.4911, -46.5572, 1.09323, 0.55 ) }
    dend_57 { pt3dadd( 19.1262, -48.3102, 1.11923, 0.55 ) }
    dend_57 { pt3dadd( 22.3449, -50.4369, 1.1491, 0.28 ) }
    dend_57 { pt3dadd( 24.7672, -52.0674, 1.13263, 0.83 ) }
    dend_57 { pt3dadd( 27.7145, -54.067, 1.16257, 0.28 ) }
    dend_57 { pt3dadd( 30.2174, -55.8128, 1.21276, 0.28 ) }
    dend_57 { pt3dadd( 31.6095, -56.8132, 1.24124, 0.55 ) }
    dend_57 { pt3dadd( 33.3132, -58.1987, 1.28381, 0.28 ) }
    dend_57 { pt3dadd( 33.8932, -58.7316, 1.34239, 0.55 ) }
    dend_57 { pt3dadd( 35.9097, -60.693, 1.69198, 0.28 ) }
    dend_57 { pt3dadd( 36.4026, -61.1898, 1.78564, 0.83 ) }
    dend_57 { pt3dadd( 37.5788, -62.482, 2.12591, 0.28 ) }
    dend_57 { pt3dadd( 38.399, -63.3968, 2.40793, 0.55 ) }
    dend_57 { pt3dadd( 40.7122, -66.0314, 3.28334, 0.28 ) }
    dend_57 { pt3dadd( 41.3383, -66.7249, 3.53716, 0.55 ) }
    dend_57 { pt3dadd( 42.8026, -68.348, 4.136, 0.28 ) }
    dend_57 { pt3dadd( 43.8269, -69.41, 4.59464, 0.55 ) }
    dend_57 { pt3dadd( 45.6713, -71.2133, 5.54951, 0.28 ) }
    dend_57 { pt3dadd( 46.6229, -72.0614, 6.19552, 0.55 ) }
    dend_57 { pt3dadd( 48.3901, -73.5788, 7.45365, 0.28 ) }
    dend_57 { pt3dadd( 49.0456, -74.0923, 7.91578, 0.55 ) }
    dend_57 { pt3dadd( 50.9583, -75.5237, 9.20548, 0.28 ) }
    dend_57 { pt3dadd( 52.0559, -76.2827, 9.88076, 0.55 ) }
    dend_57 { pt3dadd( 57.0323, -79.524, 12.4491, 0.28 ) }
    dend_57 { pt3dadd( 58.8998, -80.5173, 13.1841, 0.55 ) }
    dend_57 { pt3dadd( 60.7014, -81.302, 13.6431, 0.28 ) }
    dend_57 { pt3dadd( 62.3619, -81.869, 13.8063, 0.55 ) }
    dend_57 { pt3dadd( 65.0403, -82.513, 13.6716, 0.28 ) }
    dend_57 { pt3dadd( 66.8104, -82.8607, 13.4263, 0.55 ) }
    dend_57 { pt3dadd( 70.1488, -83.2548, 12.6097, 0.28 ) }
    dend_57 { pt3dadd( 72.0557, -83.4037, 12.228, 0.55 ) }
    dend_57 { pt3dadd( 74.7568, -83.5544, 11.6935, 0.28 ) }
    dend_57 { pt3dadd( 76.4134, -83.5191, 11.3322, 0.55 ) }
    dend_57 { pt3dadd( 87.5617, -88.763, 11.0165, 0.55 ) }
    dend_57 { pt3dadd( 98.1455, -94.8862, 12.8378, 0.55 ) }
    dend_57 { pt3dadd( 109.492, -99.6484, 12.7467, 0.55 ) }
    dend_57 { pt3dadd( 121.026, -103.318, 14.7654, 0.55 ) }
    dend_57 { pt3dadd( 132.038, -107.794, 17.9127, 0.55 ) }
    dend_57 { pt3dadd( 142.764, -110.536, 23.153, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -40.6069, -69.1021, -7.83753, 0.28 ) }
    dend_51 { pt3dadd( -41.264, -69.2957, -7.18619, 0.28 ) }
    dend_51 { pt3dadd( -41.52, -69.3807, -6.94885, 0.55 ) }
    dend_51 { pt3dadd( -42.8472, -69.6708, -5.46789, 0.28 ) }
    dend_51 { pt3dadd( -43.3761, -69.8, -4.83551, 0.55 ) }
    dend_51 { pt3dadd( -44.9579, -70.3072, -2.86546, 0.28 ) }
    dend_51 { pt3dadd( -45.175, -70.3925, -2.58797, 0.55 ) }
    dend_51 { pt3dadd( -45.7527, -70.6975, -1.78596, 0.55 ) }
    dend_51 { pt3dadd( -47.2212, -71.6511, 0.465951, 0.55 ) }
    dend_51 { pt3dadd( -47.6203, -71.976, 1.12563, 0.28 ) }
    dend_51 { pt3dadd( -48.0578, -72.2989, 1.77484, 0.55 ) }
    dend_51 { pt3dadd( -48.4122, -72.5543, 2.21088, 0.28 ) }
    dend_51 { pt3dadd( -48.7466, -72.8084, 2.63489, 0.55 ) }
    dend_51 { pt3dadd( -49.3214, -73.3072, 3.38237, 0.28 ) }
    dend_51 { pt3dadd( -49.6684, -73.6362, 3.74996, 0.55 ) }
    dend_51 { pt3dadd( -50.7505, -74.4391, 4.88856, 0.28 ) }
    dend_51 { pt3dadd( -51.5788, -74.9256, 5.76056, 0.55 ) }
    dend_51 { pt3dadd( -55.2249, -75.9278, 10.2955, 0.55 ) }
    dend_51 { pt3dadd( -58.9368, -75.6873, 14.859, 0.55 ) }
    dend_51 { pt3dadd( -62.9273, -74.5336, 19.035, 0.55 ) }
    dend_51 { pt3dadd( -66.5174, -73.895, 23.6567, 0.55 ) }
    dend_51 { pt3dadd( -70.5338, -74.0078, 27.963, 0.55 ) }
    dend_51 { pt3dadd( -74.9251, -73.9765, 31.886, 0.55 ) }
    dend_51 { pt3dadd( -79.0757, -75.1349, 35.9276, 0.55 ) }
    dend_51 { pt3dadd( -82.5443, -75.1129, 40.6864, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 92/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -40.6069, -69.1021, -7.83753, 0.28 ) }
    dend_50 { pt3dadd( -41.969, -70.3708, -7.87103, 0.28 ) }
    dend_50 { pt3dadd( -42.3255, -70.6834, -7.8842, 0.55 ) }
    dend_50 { pt3dadd( -43.4601, -71.728, -7.89929, 0.28 ) }
    dend_50 { pt3dadd( -44.7304, -72.8653, -7.90548, 0.55 ) }
    dend_50 { pt3dadd( -47.0514, -74.9111, -7.8079, 0.55 ) }
    dend_50 { pt3dadd( -48.6556, -76.3267, -7.70205, 0.28 ) }
    dend_50 { pt3dadd( -50.4337, -77.8754, -7.50847, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( -52.6786, -79.8657, -7.19382, 0.55 ) }
    dend_50 { pt3dadd( -55.254, -82.2752, -6.72264, 0.55 ) }
    dend_50 { pt3dadd( -56.6286, -83.5948, -6.43077, 0.28 ) }
    dend_50 { pt3dadd( -57.362, -84.3321, -6.25108, 0.55 ) }
    dend_50 { pt3dadd( -58.2229, -85.2395, -6.03448, 0.28 ) }
    dend_50 { pt3dadd( -59.5692, -86.6311, -5.72621, 0.55 ) }
    dend_50 { pt3dadd( -60.7486, -87.8351, -5.55001, 0.28 ) }
    dend_50 { pt3dadd( -61.7194, -88.8144, -5.35015, 0.55 ) }
    dend_50 { pt3dadd( -62.693, -89.7783, -5.13844, 0.28 ) }
    dend_50 { pt3dadd( -64.399, -91.3689, -4.72882, 0.55 ) }
    dend_50 { pt3dadd( -66.6257, -93.3263, -4.19405, 0.55 ) }
    dend_50 { pt3dadd( -67.703, -94.2461, -3.91928, 0.55 ) }
    dend_50 { pt3dadd( -71.0603, -97.0612, -3.04721, 0.55 ) }
    dend_50 { pt3dadd( -72.5591, -98.3462, -2.63964, 0.55 ) }
    dend_50 { pt3dadd( -74.2023, -99.8136, -2.17232, 0.28 ) }
    dend_50 { pt3dadd( -75.5098, -101.069, -1.80707, 0.28 ) }
    dend_50 { pt3dadd( -76.4713, -102.084, -1.57309, 0.55 ) }
    dend_50 { pt3dadd( -77.3665, -103.14, -1.43805, 0.55 ) }
    dend_50 { pt3dadd( -78.3067, -104.364, -1.48126, 0.28 ) }
    dend_50 { pt3dadd( -79.0063, -105.364, -1.53466, 0.55 ) }
    dend_50 { pt3dadd( -79.6026, -106.266, -1.59442, 0.28 ) }
    dend_50 { pt3dadd( -80.5715, -107.65, -1.6646, 0.55 ) }
    dend_50 { pt3dadd( -81.8185, -109.267, -1.72631, 0.55 ) }
    dend_50 { pt3dadd( -82.9563, -110.676, -1.78817, 0.55 ) }
    dend_50 { pt3dadd( -84.3573, -112.328, -1.85841, 0.28 ) }
    dend_50 { pt3dadd( -85.7477, -113.835, -1.90683, 0.55 ) }
    dend_50 { pt3dadd( -86.8492, -114.951, -1.91155, 0.55 ) }
    dend_50 { pt3dadd( -87.9668, -115.978, -1.92053, 0.55 ) }
    dend_50 { pt3dadd( -89.3549, -117.175, -1.92883, 0.83 ) }
    dend_50 { pt3dadd( -95.7612, -122.792, -1.3147, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 30/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 0.488843, -53.1911, -0.362816, 0.83 ) }
    dend_46 { pt3dadd( 1.81874, -54.0589, -0.43301, 0.83 ) }
    dend_46 { pt3dadd( 3.2673, -54.9322, -0.495066, 0.83 ) }
    dend_46 { pt3dadd( 5.48008, -56.1713, -0.571379, 0.83 ) }
    dend_46 { pt3dadd( 8.01547, -57.5018, -0.639192, 0.83 ) }
    dend_46 { pt3dadd( 10.9624, -59.0072, -0.698001, 0.83 ) }
    dend_46 { pt3dadd( 13.3408, -60.2222, -0.745464, 0.83 ) }
    dend_46 { pt3dadd( 17.0831, -62.074, -0.833651, 0.83 ) }
    dend_46 { pt3dadd( 18.7803, -62.9031, -0.877866, 0.55 ) }
    dend_46 { pt3dadd( 20.3101, -63.5741, -0.914646, 0.55 ) }
    dend_46 { pt3dadd( 21.7744, -64.203, -0.927612, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 41/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.488843, -53.1911, -0.362816, 1.11 ) }
    dend_31 { pt3dadd( -1.09126, -54.8862, -2.42275, 1.11 ) }
    dend_31 { pt3dadd( -5.59627, -59.7188, -8.29578, 0.83 ) }
    dend_31 { pt3dadd( -7.32196, -61.57, -10.5455, 0.83 ) }
    dend_31 { pt3dadd( -8.64321, -62.9873, -12.268, 0.83 ) }
    dend_31 { pt3dadd( -10.2845, -64.748, -14.4078, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 128.427, 220.751, -147.319, 0.55 ) }
    dend_26 { pt3dadd( 130.048, 220.775, -147.561, 0.55 ) }
    dend_26 { pt3dadd( 133.327, 220.584, -148.5, 0.55 ) }
    dend_26 { pt3dadd( 134.409, 220.508, -148.861, 0.55 ) }
    dend_26 { pt3dadd( 136.708, 220.345, -149.702, 0.55 ) }
    dend_26 { pt3dadd( 140.202, 220.153, -151.163, 0.55 ) }
    dend_26 { pt3dadd( 143.675, 219.963, -152.617, 0.55 ) }
    dend_26 { pt3dadd( 149.211, 219.606, -155.18, 0.55 ) }
    dend_26 { pt3dadd( 150.457, 219.484, -155.832, 0.83 ) }
    dend_26 { pt3dadd( 152.85, 219.239, -157.177, 0.28 ) }
    dend_26 { pt3dadd( 155.434, 219.058, -158.781, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 58/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 128.427, 220.751, -147.319, 0.55 ) }
    dend_25 { pt3dadd( 128.951, 222.823, -150.465, 0.55 ) }
    dend_25 { pt3dadd( 129.664, 225.643, -154.747, 0.55 ) }
    dend_25 { pt3dadd( 130.524, 229.045, -159.914, 0.28 ) }
    dend_25 { pt3dadd( 130.787, 230.084, -161.49, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 63/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 105.907, 283.942, -18.4926, 0.55 ) }
    dend_23 { pt3dadd( 106.361, 290.969, -17.8222, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 65/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 105.907, 283.942, -18.4926, 0.55 ) }
    dend_22 { pt3dadd( 112.499, 289.771, -21.0321, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 67/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 154.517, 82.5924, -8.01311, 0.55 ) }
    dend_18 { pt3dadd( 161.986, 87.2066, -4.7137, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 69/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 154.517, 82.5924, -8.01311, 0.55 ) }
    dend_17 { pt3dadd( 164.062, 85.3323, -11.7237, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 80.6975, 188.972, 100.367, 0.55 ) }
    dend_15 { pt3dadd( 85.4967, 201.116, 107.354, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 80.6975, 188.972, 100.367, 0.55 ) }
    dend_14 { pt3dadd( 83.7991, 195.702, 104.496, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 75/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.97622, 24.3469, 0.691005, 0.83 ) }
    dend_6 { pt3dadd( 4.8199, 25.9694, 0.850878, 0.83 ) }
    dend_6 { pt3dadd( 5.67958, 27.8111, 1.11621, 0.83 ) }
    dend_6 { pt3dadd( 6.31739, 29.4784, 1.43318, 0.28 ) }
    dend_6 { pt3dadd( 6.5403, 30.1286, 1.54034, 1.11 ) }
    dend_6 { pt3dadd( 7.20636, 32.1705, 1.88244, 0.28 ) }
    dend_6 { pt3dadd( 7.67102, 33.6301, 2.10203, 0.83 ) }
    dend_6 { pt3dadd( 8.22016, 35.5279, 2.35102, 0.28 ) }
    dend_6 { pt3dadd( 8.79309, 37.5471, 2.61574, 0.83 ) }
    dend_6 { pt3dadd( 9.53675, 40.1731, 2.99267, 0.55 ) }
    dend_6 { pt3dadd( 9.88512, 41.4377, 3.19496, 1.11 ) }
    dend_6 { pt3dadd( 10.4526, 43.5072, 3.55605, 0.55 ) }
    dend_6 { pt3dadd( 10.9783, 45.411, 3.8533, 0.83 ) }
    dend_6 { pt3dadd( 11.497, 47.1887, 4.07255, 0.28 ) }
    dend_6 { pt3dadd( 12.0022, 48.8761, 4.25925, 0.83 ) }
    dend_6 { pt3dadd( 12.3943, 50.284, 4.50765, 0.28 ) }
    dend_6 { pt3dadd( 12.594, 51.071, 4.66552, 0.55 ) }
    dend_6 { pt3dadd( 12.974, 52.6603, 5.01249, 0.28 ) }
    dend_6 { pt3dadd( 13.2234, 53.7613, 5.24406, 0.83 ) }
    dend_6 { pt3dadd( 13.6837, 55.7687, 5.62024, 0.83 ) }
    dend_6 { pt3dadd( 14.2511, 58.0147, 6.04821, 0.28 ) }
    dend_6 { pt3dadd( 14.5076, 59.1293, 6.35957, 0.55 ) }
    dend_6 { pt3dadd( 14.6897, 60.1445, 6.69412, 0.28 ) }
    dend_6 { pt3dadd( 14.8, 60.8067, 6.92809, 0.55 ) }
    dend_6 { pt3dadd( 14.9855, 62.0547, 7.34081, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( 15.1211, 63.0411, 7.61831, 0.83 ) }
    dend_6 { pt3dadd( 15.5139, 65.8124, 8.20723, 0.55 ) }
    dend_6 { pt3dadd( 15.6494, 66.8248, 8.41757, 0.83 ) }
    dend_6 { pt3dadd( 15.8138, 68.1926, 8.69472, 0.55 ) }
    dend_6 { pt3dadd( 16.0, 69.7997, 8.89549, 0.55 ) }
    dend_6 { pt3dadd( 16.1695, 71.1939, 8.97919, 0.28 ) }
    dend_6 { pt3dadd( 16.2995, 72.1346, 9.00387, 0.55 ) }
    dend_6 { pt3dadd( 16.5398, 73.6054, 8.97602, 0.28 ) }
    dend_6 { pt3dadd( 16.5751, 73.8297, 8.97737, 0.55 ) }
    dend_6 { pt3dadd( 16.8517, 75.8094, 9.02436, 0.28 ) }
    dend_6 { pt3dadd( 17.068, 77.1406, 9.06, 0.55 ) }
    dend_6 { pt3dadd( 17.2763, 78.2719, 9.14257, 0.28 ) }
    dend_6 { pt3dadd( 17.5311, 79.4926, 9.27981, 0.83 ) }
    dend_6 { pt3dadd( 17.8815, 80.8195, 9.4724, 0.83 ) }
    dend_6 { pt3dadd( 18.1552, 81.7591, 9.64328, 0.28 ) }
    dend_6 { pt3dadd( 18.5281, 82.8918, 9.97609, 0.55 ) }
    dend_6 { pt3dadd( 19.0519, 84.4131, 10.3575, 0.28 ) }
    dend_6 { pt3dadd( 19.129, 84.632, 10.4027, 0.55 ) }
    dend_6 { pt3dadd( 19.7319, 86.2514, 10.6867, 0.28 ) }
    dend_6 { pt3dadd( 19.8889, 86.7108, 10.7713, 0.55 ) }
    dend_6 { pt3dadd( 20.4422, 88.8254, 11.0878, 0.28 ) }
    dend_6 { pt3dadd( 20.8769, 90.8368, 11.3903, 0.55 ) }
    dend_6 { pt3dadd( 21.011, 91.6418, 11.5064, 0.28 ) }
    dend_6 { pt3dadd( 21.1669, 92.7994, 11.6969, 0.55 ) }
    dend_6 { pt3dadd( 21.4016, 95.1135, 12.1669, 0.55 ) }
    dend_6 { pt3dadd( 21.5267, 96.5443, 12.4832, 0.28 ) }
    dend_6 { pt3dadd( 21.6457, 98.1071, 12.8463, 0.55 ) }
    dend_6 { pt3dadd( 21.7593, 99.5258, 13.3074, 0.28 ) }
    dend_6 { pt3dadd( 21.7933, 99.9496, 13.4612, 0.55 ) }
    dend_6 { pt3dadd( 21.8532, 101.0, 13.8683, 0.28 ) }
    dend_6 { pt3dadd( 21.8992, 101.892, 14.2088, 0.83 ) }
    dend_6 { pt3dadd( 24.8037, 109.597, 15.3678, 0.83 ) }
    dend_6 { pt3dadd( 27.3898, 117.262, 17.2833, 0.83 ) }
    dend_6 { pt3dadd( 28.8263, 125.236, 19.2521, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 34/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.97622, 24.3469, 0.691005, 0.55 ) }
    dend_3 { pt3dadd( 2.49972, 27.2024, 2.23142, 0.55 ) }
    dend_3 { pt3dadd( 2.20493, 27.807, 2.54588, 0.55 ) }
    dend_3 { pt3dadd( 0.719245, 31.0526, 4.13092, 0.83 ) }
    dend_3 { pt3dadd( -0.900599, 34.7032, 5.72429, 0.55 ) }
    dend_3 { pt3dadd( -1.48748, 36.0556, 6.27815, 0.55 ) }
    dend_3 { pt3dadd( -2.25009, 37.9156, 6.98856, 0.55 ) }
    dend_3 { pt3dadd( -3.08249, 40.069, 7.63606, 0.83 ) }
    dend_3 { pt3dadd( -4.21604, 42.8573, 8.34154, 0.28 ) }
    dend_3 { pt3dadd( -4.95181, 44.693, 8.67124, 0.55 ) }
    dend_3 { pt3dadd( -5.46976, 46.0266, 8.80996, 0.28 ) }
    dend_3 { pt3dadd( -6.3499, 48.145, 9.01175, 0.83 ) }
    dend_3 { pt3dadd( -7.70365, 51.2859, 9.33721, 0.55 ) }
    dend_3 { pt3dadd( -8.31901, 52.7294, 9.52043, 0.55 ) }
    dend_3 { pt3dadd( -9.85615, 56.4932, 10.1379, 0.55 ) }
    dend_3 { pt3dadd( -10.686, 58.5331, 10.4424, 0.28 ) }
    dend_3 { pt3dadd( -11.6403, 61.0089, 10.9445, 0.55 ) }
    dend_3 { pt3dadd( -12.5215, 63.3945, 11.3991, 0.28 ) }
    dend_3 { pt3dadd( -13.3908, 65.8731, 11.8518, 0.28 ) }
    dend_3 { pt3dadd( -14.1621, 68.0578, 12.1855, 0.55 ) }
    dend_3 { pt3dadd( -15.6633, 72.094, 12.7204, 0.55 ) }
    dend_3 { pt3dadd( -17.5856, 77.3563, 13.0516, 0.28 ) }
    dend_3 { pt3dadd( -19.0773, 81.4574, 13.2307, 0.83 ) }
    dend_3 { pt3dadd( -20.2614, 84.7829, 13.4294, 0.55 ) }
    dend_3 { pt3dadd( -21.4198, 88.108, 13.6941, 0.55 ) }
    dend_3 { pt3dadd( -22.1796, 90.5444, 13.9275, 0.55 ) }
    dend_3 { pt3dadd( -23.2833, 94.6411, 14.443, 0.28 ) }
    dend_3 { pt3dadd( -24.1223, 98.096, 14.8798, 0.55 ) }
    dend_3 { pt3dadd( -24.6619, 100.998, 15.4557, 0.55 ) }
    dend_3 { pt3dadd( -24.8982, 102.59, 15.7984, 0.28 ) }
    dend_3 { pt3dadd( -25.1228, 104.053, 16.1475, 0.83 ) }
    dend_3 { pt3dadd( -25.6223, 106.636, 16.8323, 0.28 ) }
    dend_3 { pt3dadd( -26.1944, 108.832, 17.4829, 0.55 ) }
    dend_3 { pt3dadd( -27.2344, 112.036, 18.3954, 0.55 ) }
    dend_3 { pt3dadd( -28.2363, 114.523, 19.132, 0.55 ) }
    dend_3 { pt3dadd( -28.9975, 116.138, 19.7335, 0.28 ) }
    dend_3 { pt3dadd( -29.3753, 116.837, 20.0335, 0.55 ) }
    dend_3 { pt3dadd( -30.2199, 118.351, 20.8133, 0.55 ) }
    dend_3 { pt3dadd( -31.9213, 121.15, 22.3873, 0.28 ) }
    dend_3 { pt3dadd( -33.5308, 123.534, 23.8286, 0.55 ) }
    dend_3 { pt3dadd( -35.1134, 125.672, 25.0165, 0.28 ) }
    dend_3 { pt3dadd( -35.7762, 126.531, 25.5173, 0.55 ) }
    dend_3 { pt3dadd( -37.3039, 128.399, 26.6925, 0.28 ) }
    dend_3 { pt3dadd( -39.3105, 130.642, 28.1834, 0.55 ) }
    dend_3 { pt3dadd( -41.172, 132.438, 29.4372, 0.28 ) }
    dend_3 { pt3dadd( -42.6123, 133.732, 30.3889, 0.55 ) }
    dend_3 { pt3dadd( -46.2732, 137.12, 33.0009, 0.55 ) }
    dend_3 { pt3dadd( -47.4932, 138.218, 33.9065, 0.55 ) }
    dend_3 { pt3dadd( -49.1217, 139.656, 35.1232, 0.55 ) }
    dend_3 { pt3dadd( -50.7836, 141.25, 36.4038, 0.55 ) }
    dend_3 { pt3dadd( -53.7975, 144.345, 38.9511, 0.55 ) }
    dend_3 { pt3dadd( -55.8182, 146.47, 40.7896, 0.55 ) }
    dend_3 { pt3dadd( -57.2443, 147.894, 41.8555, 0.55 ) }
    dend_3 { pt3dadd( -59.892, 150.607, 43.8344, 0.55 ) }
    dend_3 { pt3dadd( -62.181, 153.017, 45.6047, 0.55 ) }
    dend_3 { pt3dadd( -64.5453, 155.571, 47.4696, 0.83 ) }
    dend_3 { pt3dadd( -67.3921, 158.463, 49.6079, 0.28 ) }
    dend_3 { pt3dadd( -70.9321, 161.903, 51.8165, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 92/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 33.9333, -40.0572, 25.0288, 0.55 ) }
    dend_62 { pt3dadd( 41.9562, -37.3419, 31.8384, 0.55 ) }
    dend_62 { pt3dadd( 49.9309, -36.199, 39.0981, 0.55 ) }
    dend_62 { pt3dadd( 57.5243, -34.0222, 46.5415, 0.55 ) }
    dend_62 { pt3dadd( 64.2724, -32.8093, 54.9397, 0.55 ) }
    dend_62 { pt3dadd( 71.9036, -30.9223, 62.4182, 0.55 ) }
    dend_62 { pt3dadd( 78.6472, -26.9166, 69.9641, 0.55 ) }
    dend_62 { pt3dadd( 85.4951, -22.1967, 77.0238, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_62 { pt3dadd( 94.0837, -17.578, 81.9932, 0.55 ) }
    dend_62 { pt3dadd( 102.192, -12.3864, 87.2284, 0.55 ) }
    dend_62 { pt3dadd( 110.019, -5.82395, 91.4071, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 33.9333, -40.0572, 25.0288, 0.55 ) }
    dend_61 { pt3dadd( 39.7432, -37.8118, 35.2373, 0.55 ) }
    dend_61 { pt3dadd( 46.6886, -37.8034, 44.9201, 0.55 ) }
    dend_61 { pt3dadd( 53.6359, -39.2529, 54.4896, 0.55 ) }
    dend_61 { pt3dadd( 61.9046, -41.5803, 62.7662, 0.55 ) }
    dend_61 { pt3dadd( 69.5673, -43.6899, 71.6517, 0.55 ) }
    dend_61 { pt3dadd( 76.1016, -46.1731, 81.3062, 0.55 ) }
    dend_61 { pt3dadd( 81.1718, -48.7493, 91.7766, 0.55 ) }
    dend_61 { pt3dadd( 85.463, -49.8636, 102.838, 0.55 ) }
    dend_61 { pt3dadd( 88.2773, -51.1231, 114.352, 0.55 ) }
    dend_61 { pt3dadd( 89.8352, -51.8036, 126.165, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 14/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 142.764, -110.536, 23.153, 0.55 ) }
    dend_59 { pt3dadd( 151.192, -114.601, 25.7585, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 16/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 142.764, -110.536, 23.153, 0.55 ) }
    dend_58 { pt3dadd( 149.905, -115.046, 21.7035, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 18/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -82.5443, -75.1129, 40.6864, 0.55 ) }
    dend_53 { pt3dadd( -92.0657, -75.4522, 47.9258, 0.55 ) }
    dend_53 { pt3dadd( -99.9586, -76.3974, 56.916, 0.55 ) }
    dend_53 { pt3dadd( -107.406, -79.3615, 65.9381, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 22/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -82.5443, -75.1129, 40.6864, 0.55 ) }
    dend_52 { pt3dadd( -92.5268, -75.2381, 47.5692, 0.55 ) }
    dend_52 { pt3dadd( -102.42, -76.611, 54.4842, 0.55 ) }
    dend_52 { pt3dadd( -113.628, -78.1722, 58.8373, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 21.7744, -64.203, -0.927612, 0.55 ) }
    dend_48 { pt3dadd( 24.1642, -64.2759, -1.37954, 0.55 ) }
    dend_48 { pt3dadd( 26.1612, -64.3652, -1.72815, 0.55 ) }
    dend_48 { pt3dadd( 28.3261, -64.4048, -2.08137, 0.55 ) }
    dend_48 { pt3dadd( 30.679, -64.4498, -2.41414, 0.55 ) }
    dend_48 { pt3dadd( 33.6623, -64.4276, -2.79875, 0.55 ) }
    dend_48 { pt3dadd( 35.8483, -64.3751, -3.06368, 0.55 ) }
    dend_48 { pt3dadd( 38.3396, -64.1849, -3.35945, 0.55 ) }
    dend_48 { pt3dadd( 39.7215, -64.002, -3.50592, 0.55 ) }
    dend_48 { pt3dadd( 42.5271, -63.3697, -3.75674, 0.55 ) }
    dend_48 { pt3dadd( 43.9478, -62.9405, -3.8475, 0.55 ) }
    dend_48 { pt3dadd( 45.0206, -62.5493, -3.89327, 0.55 ) }
    dend_48 { pt3dadd( 47.5319, -61.486, -3.99205, 0.55 ) }
    dend_48 { pt3dadd( 49.2305, -60.6493, -4.06287, 0.83 ) }
    dend_48 { pt3dadd( 50.3526, -60.0422, -4.10654, 0.55 ) }
    dend_48 { pt3dadd( 51.8397, -59.1305, -4.15797, 0.55 ) }
    dend_48 { pt3dadd( 55.0235, -57.0196, -4.25993, 0.55 ) }
    dend_48 { pt3dadd( 55.9276, -56.3659, -4.28414, 0.55 ) }
    dend_48 { pt3dadd( 56.4913, -55.9107, -4.3007, 0.83 ) }
    dend_48 { pt3dadd( 58.3083, -54.2942, -4.35732, 0.55 ) }
    dend_48 { pt3dadd( 59.4492, -53.1595, -4.37298, 0.55 ) }
    dend_48 { pt3dadd( 60.841, -51.6007, -4.32705, 0.55 ) }
    dend_48 { pt3dadd( 62.3432, -49.6636, -4.2133, 0.55 ) }
    dend_48 { pt3dadd( 64.3321, -46.9496, -3.97944, 0.55 ) }
    dend_48 { pt3dadd( 65.1723, -45.7598, -3.84967, 0.28 ) }
    dend_48 { pt3dadd( 66.6338, -43.6165, -3.54212, 0.55 ) }
    dend_48 { pt3dadd( 67.9687, -41.6385, -3.20922, 0.28 ) }
    dend_48 { pt3dadd( 68.592, -40.6959, -3.03902, 0.55 ) }
    dend_48 { pt3dadd( 69.3705, -39.4604, -2.82251, 0.28 ) }
    dend_48 { pt3dadd( 69.6446, -39.0401, -2.77225, 0.55 ) }
    dend_48 { pt3dadd( 70.6163, -37.6971, -2.73462, 0.55 ) }
    dend_48 { pt3dadd( 72.5821, -35.3265, -2.85389, 0.55 ) }
    dend_48 { pt3dadd( 73.8233, -33.9524, -2.99312, 0.55 ) }
    dend_48 { pt3dadd( 74.9513, -32.7955, -3.13011, 0.55 ) }
    dend_48 { pt3dadd( 77.314, -30.4697, -3.44299, 0.55 ) }
    dend_48 { pt3dadd( 79.74, -28.1128, -3.82117, 0.55 ) }
    dend_48 { pt3dadd( 81.6945, -26.2319, -4.1746, 0.55 ) }
    dend_48 { pt3dadd( 83.0133, -25.0135, -4.42148, 0.55 ) }
    dend_48 { pt3dadd( 83.9961, -24.154, -4.58956, 0.83 ) }
    dend_48 { pt3dadd( 84.5311, -23.697, -4.67259, 0.83 ) }
    dend_48 { pt3dadd( 85.8309, -22.6061, -4.82319, 0.55 ) }
    dend_48 { pt3dadd( 86.3669, -22.1347, -4.88624, 0.83 ) }
    dend_48 { pt3dadd( 87.8855, -20.7294, -5.07768, 0.28 ) }
    dend_48 { pt3dadd( 89.1815, -19.5273, -5.22623, 0.55 ) }
    dend_48 { pt3dadd( 90.0033, -18.7698, -5.28477, 0.55 ) }
    dend_48 { pt3dadd( 91.1684, -17.6898, -5.34198, 0.55 ) }
    dend_48 { pt3dadd( 92.6239, -16.3603, -5.37386, 0.28 ) }
    dend_48 { pt3dadd( 93.7545, -15.3554, -5.39799, 0.55 ) }
    dend_48 { pt3dadd( 95.0003, -14.334, -5.43783, 0.83 ) }
    dend_48 { pt3dadd( 96.2093, -13.4704, -5.48507, 0.55 ) }
    dend_48 { pt3dadd( 97.9485, -12.4872, -5.46707, 0.28 ) }
    dend_48 { pt3dadd( 99.9583, -11.5409, -5.39016, 0.55 ) }
    dend_48 { pt3dadd( 101.535, -10.9357, -5.29194, 0.55 ) }
    dend_48 { pt3dadd( 103.7, -10.2519, -5.14792, 0.55 ) }
    dend_48 { pt3dadd( 105.673, -9.73203, -5.01287, 0.55 ) }
    dend_48 { pt3dadd( 108.477, -9.07864, -4.81319, 0.55 ) }
    dend_48 { pt3dadd( 110.096, -8.75368, -4.64826, 0.55 ) }
    dend_48 { pt3dadd( 112.495, -8.21892, -4.3815, 0.55 ) }
    dend_48 { pt3dadd( 113.589, -7.89504, -4.25263, 0.28 ) }
    dend_48 { pt3dadd( 115.525, -7.08679, -4.02273, 0.55 ) }
    dend_48 { pt3dadd( 116.241, -6.74335, -3.95262, 0.28 ) }
    dend_48 { pt3dadd( 116.884, -6.39131, -3.91906, 0.83 ) }
    dend_48 { pt3dadd( 118.974, -5.26994, -3.75271, 0.55 ) }
    dend_48 { pt3dadd( 120.596, -4.24349, -3.59979, 0.28 ) }
    dend_48 { pt3dadd( 121.9, -3.26729, -3.45288, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 91/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 21.7744, -64.203, -0.927612, 0.55 ) }
    dend_47 { pt3dadd( 23.1516, -65.8353, -0.884791, 0.55 ) }
    dend_47 { pt3dadd( 24.6852, -67.6395, -0.793618, 0.55 ) }
    dend_47 { pt3dadd( 26.5248, -69.8725, -0.421173, 0.28 ) }
    dend_47 { pt3dadd( 27.2479, -70.7597, -0.225252, 0.28 ) }
    dend_47 { pt3dadd( 28.1699, -71.9669, 0.236807, 0.55 ) }
    dend_47 { pt3dadd( 29.0615, -73.1606, 0.778348, 0.28 ) }
    dend_47 { pt3dadd( 30.1448, -74.6211, 1.55998, 0.55 ) }
    dend_47 { pt3dadd( 31.823, -77.0051, 2.98889, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 32.7823, -78.3448, 3.90241, 0.55 ) }
    dend_47 { pt3dadd( 35.2288, -81.6241, 6.26325, 0.55 ) }
    dend_47 { pt3dadd( 36.7374, -83.6535, 7.70358, 0.55 ) }
    dend_47 { pt3dadd( 37.6874, -84.8683, 8.53882, 0.28 ) }
    dend_47 { pt3dadd( 38.1227, -85.4237, 8.91037, 0.55 ) }
    dend_47 { pt3dadd( 39.975, -87.7354, 10.3412, 0.28 ) }
    dend_47 { pt3dadd( 40.7839, -88.7808, 10.9923, 0.55 ) }
    dend_47 { pt3dadd( 42.2757, -90.7179, 12.1395, 0.55 ) }
    dend_47 { pt3dadd( 43.6493, -92.5296, 13.3089, 0.55 ) }
    dend_47 { pt3dadd( 45.0382, -94.4422, 14.5627, 0.28 ) }
    dend_47 { pt3dadd( 45.3741, -94.9109, 14.8661, 0.55 ) }
    dend_47 { pt3dadd( 46.8833, -97.2125, 16.3375, 0.28 ) }
    dend_47 { pt3dadd( 47.0128, -97.4125, 16.4822, 0.55 ) }
    dend_47 { pt3dadd( 47.7757, -98.6908, 17.5608, 0.28 ) }
    dend_47 { pt3dadd( 48.0805, -99.3735, 18.1191, 0.55 ) }
    dend_47 { pt3dadd( 54.0599, -105.875, 23.8885, 0.55 ) }
    dend_47 { pt3dadd( 58.3475, -113.814, 29.5314, 0.55 ) }
    dend_47 { pt3dadd( 60.8477, -122.852, 34.7361, 0.55 ) }
    dend_47 { pt3dadd( 64.419, -132.094, 38.8826, 0.55 ) }
    dend_47 { pt3dadd( 68.6274, -140.545, 43.8713, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_31 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -10.2845, -64.748, -14.4078, 0.55 ) }
    dend_45 { pt3dadd( -10.8526, -64.3442, -15.7966, 0.55 ) }
    dend_45 { pt3dadd( -12.165, -63.439, -18.7906, 0.55 ) }
    dend_45 { pt3dadd( -14.1688, -61.8716, -22.9967, 0.28 ) }
    dend_45 { pt3dadd( -14.7205, -61.44, -24.1549, 0.83 ) }
    dend_45 { pt3dadd( -16.5526, -60.0069, -28.0008, 0.55 ) }
    dend_45 { pt3dadd( -18.1973, -58.7203, -31.4533, 0.55 ) }
    dend_45 { pt3dadd( -18.7031, -58.3388, -32.6166, 0.28 ) }
    dend_45 { pt3dadd( -19.6779, -57.7529, -34.9417, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -10.2845, -64.748, -14.4078, 0.83 ) }
    dend_32 { pt3dadd( -11.3424, -66.5205, -14.3176, 0.83 ) }
    dend_32 { pt3dadd( -12.6534, -68.7173, -14.2059, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 28.8263, 125.236, 19.2521, 0.83 ) }
    dend_10 { pt3dadd( 31.4466, 132.93, 20.7025, 0.83 ) }
    dend_10 { pt3dadd( 35.1572, 140.247, 21.4309, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 28.8263, 125.236, 19.2521, 0.55 ) }
    dend_7 { pt3dadd( 28.9994, 138.978, 21.9968, 0.83 ) }
    dend_7 { pt3dadd( 29.6136, 152.923, 23.4992, 0.83 ) }
    dend_7 { pt3dadd( 28.89, 166.595, 26.4279, 0.83 ) }
    dend_7 { pt3dadd( 29.9069, 180.23, 29.4853, 0.83 ) }
    dend_7 { pt3dadd( 30.2466, 193.858, 32.6888, 0.83 ) }
    dend_7 { pt3dadd( 28.9275, 207.762, 33.9215, 0.83 ) }
    dend_7 { pt3dadd( 26.9141, 221.63, 34.1848, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 43/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -70.9321, 161.903, 51.8165, 0.28 ) }
    dend_5 { pt3dadd( -73.6301, 161.027, 56.1569, 0.28 ) }
    dend_5 { pt3dadd( -74.4502, 160.761, 57.4763, 0.28 ) }
    dend_5 { pt3dadd( -75.5569, 160.401, 59.2565, 0.55 ) }
    dend_5 { pt3dadd( -76.572, 160.072, 60.8896, 0.28 ) }
    dend_5 { pt3dadd( -77.6041, 159.737, 62.55, 0.28 ) }
    dend_5 { pt3dadd( -79.4422, 159.14, 65.507, 0.83 ) }
    dend_5 { pt3dadd( -85.4067, 156.097, 74.5821, 0.83 ) }
    dend_5 { pt3dadd( -90.2999, 154.232, 84.5453, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 52/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -70.9321, 161.903, 51.8165, 0.28 ) }
    dend_4 { pt3dadd( -72.5196, 163.547, 53.2241, 0.28 ) }
    dend_4 { pt3dadd( -74.16, 165.179, 54.7523, 0.55 ) }
    dend_4 { pt3dadd( -75.5693, 166.621, 56.1513, 0.55 ) }
    dend_4 { pt3dadd( -75.9146, 166.976, 56.5231, 0.55 ) }
    dend_4 { pt3dadd( -76.6947, 167.846, 57.4261, 0.28 ) }
    dend_4 { pt3dadd( -77.4276, 168.663, 58.2654, 0.55 ) }
    dend_4 { pt3dadd( -78.2943, 169.619, 59.3982, 0.28 ) }
    dend_4 { pt3dadd( -78.8618, 170.198, 60.1721, 0.28 ) }
    dend_4 { pt3dadd( -79.9515, 171.326, 61.7707, 0.55 ) }
    dend_4 { pt3dadd( -81.0749, 172.476, 63.4674, 0.28 ) }
    dend_4 { pt3dadd( -82.1535, 173.575, 65.1482, 0.55 ) }
    dend_4 { pt3dadd( -83.5986, 174.98, 67.297, 0.28 ) }
    dend_4 { pt3dadd( -84.1775, 175.537, 68.1585, 0.55 ) }
    dend_4 { pt3dadd( -87.7172, 179.395, 74.0281, 0.55 ) }
    dend_4 { pt3dadd( -91.2239, 182.633, 80.2453, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -12.6534, -68.7173, -14.2059, 0.55 ) }
    dend_40 { pt3dadd( -12.4518, -70.9306, -14.5324, 0.55 ) }
    dend_40 { pt3dadd( -12.3495, -74.1859, -15.0117, 0.55 ) }
    dend_40 { pt3dadd( -12.3001, -79.2429, -15.8175, 0.55 ) }
    dend_40 { pt3dadd( -12.589, -85.0635, -16.7779, 0.55 ) }
    dend_40 { pt3dadd( -12.9833, -89.3961, -17.6137, 0.55 ) }
    dend_40 { pt3dadd( -13.4779, -92.6184, -18.3151, 0.55 ) }
    dend_40 { pt3dadd( -14.0589, -94.7887, -18.8438, 0.55 ) }
    dend_40 { pt3dadd( -15.2473, -98.4373, -19.773, 0.55 ) }
    dend_40 { pt3dadd( -16.8953, -102.773, -20.9386, 0.55 ) }
    dend_40 { pt3dadd( -18.2295, -106.369, -22.0079, 0.55 ) }
    dend_40 { pt3dadd( -19.7348, -110.648, -23.2755, 0.55 ) }
    dend_40 { pt3dadd( -21.6556, -116.94, -25.2155, 0.55 ) }
    dend_40 { pt3dadd( -22.9253, -121.612, -26.6463, 0.55 ) }
    dend_40 { pt3dadd( -24.4398, -127.946, -28.4811, 0.55 ) }
    dend_40 { pt3dadd( -25.4022, -133.317, -29.9523, 0.55 ) }
    dend_40 { pt3dadd( -25.9115, -136.885, -30.7723, 0.55 ) }
    dend_40 { pt3dadd( -26.3187, -141.173, -31.5973, 0.55 ) }
    dend_40 { pt3dadd( -26.473, -143.59, -31.9811, 0.55 ) }
    dend_40 { pt3dadd( -26.7685, -149.0, -32.6446, 0.55 ) }
    dend_40 { pt3dadd( -26.7547, -151.094, -32.796, 0.55 ) }
    dend_40 { pt3dadd( -26.763, -156.044, -32.9287, 0.55 ) }
    dend_40 { pt3dadd( -26.6386, -159.978, -32.9637, 0.55 ) }
    dend_40 { pt3dadd( -26.5015, -162.581, -32.8803, 0.55 ) }
    dend_40 { pt3dadd( -26.3887, -164.343, -32.807, 0.55 ) }
    dend_40 { pt3dadd( -26.0592, -167.064, -32.6574, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -12.6534, -68.7173, -14.2059, 0.55 ) }
    dend_33 { pt3dadd( -13.47, -71.6009, -13.5993, 0.55 ) }
    dend_33 { pt3dadd( -14.3299, -75.2505, -12.9206, 0.55 ) }
    dend_33 { pt3dadd( -14.9219, -78.0675, -12.4783, 0.55 ) }
    dend_33 { pt3dadd( -15.9141, -83.1683, -11.7748, 0.55 ) }
    dend_33 { pt3dadd( -16.3504, -85.2119, -11.5144, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_33 { pt3dadd( -16.9055, -87.694, -11.1961, 0.55 ) }
    dend_33 { pt3dadd( -17.4051, -89.9814, -10.913, 0.55 ) }
    dend_33 { pt3dadd( -18.5225, -94.6716, -10.296, 0.55 ) }
    dend_33 { pt3dadd( -19.2298, -97.0893, -9.84488, 0.55 ) }
    dend_33 { pt3dadd( -20.0722, -99.6439, -9.11405, 0.55 ) }
    dend_33 { pt3dadd( -21.3624, -103.024, -7.89871, 0.55 ) }
    dend_33 { pt3dadd( -22.4979, -105.696, -6.74453, 0.55 ) }
    dend_33 { pt3dadd( -23.5201, -107.94, -5.64691, 0.55 ) }
    dend_33 { pt3dadd( -24.752, -110.602, -4.17592, 0.55 ) }
    dend_33 { pt3dadd( -26.1969, -113.951, -2.18995, 0.55 ) }
    dend_33 { pt3dadd( -26.7126, -115.441, -1.32458, 0.55 ) }
    dend_33 { pt3dadd( -26.9693, -116.428, -0.780872, 0.83 ) }
    dend_33 { pt3dadd( -27.2412, -118.458, 0.195691, 0.83 ) }
    dend_33 { pt3dadd( -27.2702, -120.133, 0.836896, 0.83 ) }
    dend_33 { pt3dadd( -26.8276, -123.886, 2.028, 0.55 ) }
    dend_33 { pt3dadd( -26.3165, -126.548, 2.71469, 0.83 ) }
    dend_33 { pt3dadd( -25.93, -128.351, 3.27612, 0.55 ) }
    dend_33 { pt3dadd( -25.5931, -130.031, 3.85265, 0.55 ) }
    dend_33 { pt3dadd( -25.0202, -133.006, 4.97742, 0.55 ) }
    dend_33 { pt3dadd( -24.7606, -134.956, 5.79586, 0.55 ) }
    dend_33 { pt3dadd( -24.7518, -136.505, 6.48704, 0.55 ) }
    dend_33 { pt3dadd( -25.2399, -140.195, 8.23988, 0.55 ) }
    dend_33 { pt3dadd( -25.6582, -142.229, 9.16643, 0.55 ) }
    dend_33 { pt3dadd( -26.0734, -143.969, 9.87248, 0.55 ) }
    dend_33 { pt3dadd( -26.6842, -146.77, 10.8496, 0.55 ) }
    dend_33 { pt3dadd( -27.3969, -150.148, 11.8218, 0.55 ) }
    dend_33 { pt3dadd( -27.8116, -152.317, 12.3545, 0.55 ) }
    dend_33 { pt3dadd( -28.2593, -155.036, 12.9161, 0.55 ) }
    dend_33 { pt3dadd( -29.0469, -160.043, 13.8556, 0.55 ) }
    dend_33 { pt3dadd( -29.7759, -164.747, 14.5708, 0.55 ) }
    dend_33 { pt3dadd( -30.0828, -167.009, 14.8819, 0.55 ) }
    dend_33 { pt3dadd( -30.5175, -170.509, 15.3671, 0.55 ) }
    dend_33 { pt3dadd( -31.2262, -175.741, 16.1151, 0.83 ) }
    dend_33 { pt3dadd( -32.1378, -181.32, 16.9225, 0.83 ) }
    dend_33 { pt3dadd( -32.5629, -183.656, 17.2429, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 26.9141, 221.63, 34.1848, 0.83 ) }
    dend_9 { pt3dadd( 26.8887, 232.537, 35.0067, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 26.9141, 221.63, 34.1848, 0.55 ) }
    dend_8 { pt3dadd( 26.7455, 229.846, 35.5672, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 39/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -26.0592, -167.064, -32.6574, 0.55 ) }
    dend_44 { pt3dadd( -25.1898, -168.758, -33.636, 0.55 ) }
    dend_44 { pt3dadd( -24.3014, -170.47, -34.5787, 0.55 ) }
    dend_44 { pt3dadd( -22.8036, -173.451, -36.1282, 0.55 ) }
    dend_44 { pt3dadd( -21.3442, -176.329, -37.6284, 0.55 ) }
    dend_44 { pt3dadd( -20.3319, -178.244, -38.6122, 0.55 ) }
    dend_44 { pt3dadd( -19.3255, -180.087, -39.5368, 0.55 ) }
    dend_44 { pt3dadd( -17.7502, -183.172, -40.9495, 0.55 ) }
    dend_44 { pt3dadd( -16.6014, -185.418, -41.9009, 0.55 ) }
    dend_44 { pt3dadd( -16.0856, -186.47, -42.3023, 0.55 ) }
    dend_44 { pt3dadd( -14.4576, -189.898, -43.522, 0.83 ) }
    dend_44 { pt3dadd( -13.3414, -192.287, -44.3685, 0.55 ) }
    dend_44 { pt3dadd( -11.8564, -195.281, -45.4279, 0.55 ) }
    dend_44 { pt3dadd( -10.6809, -197.662, -46.2473, 0.55 ) }
    dend_44 { pt3dadd( -9.23743, -200.623, -47.2276, 0.55 ) }
    dend_44 { pt3dadd( -7.45972, -204.368, -48.4135, 0.55 ) }
    dend_44 { pt3dadd( -6.3625, -206.764, -49.1715, 0.55 ) }
    dend_44 { pt3dadd( -5.33866, -209.085, -49.9206, 0.55 ) }
    dend_44 { pt3dadd( -4.66045, -210.627, -50.3976, 0.55 ) }
    dend_44 { pt3dadd( -4.16895, -211.919, -50.7159, 0.28 ) }
    dend_44 { pt3dadd( -3.87316, -212.88, -50.8655, 0.55 ) }
    dend_44 { pt3dadd( -3.59637, -214.003, -51.0035, 0.28 ) }
    dend_44 { pt3dadd( -3.28818, -215.695, -51.2044, 0.55 ) }
    dend_44 { pt3dadd( -2.84162, -218.177, -51.5692, 0.28 ) }
    dend_44 { pt3dadd( -2.24655, -220.806, -51.9454, 0.55 ) }
    dend_44 { pt3dadd( -1.65272, -223.238, -52.3128, 0.55 ) }
    dend_44 { pt3dadd( -1.20284, -225.164, -52.617, 0.55 ) }
    dend_44 { pt3dadd( -0.57639, -227.606, -53.068, 0.55 ) }
    dend_44 { pt3dadd( 0.00617146, -229.784, -53.3871, 0.55 ) }
    dend_44 { pt3dadd( 0.884267, -233.242, -53.9625, 0.83 ) }
    dend_44 { pt3dadd( 1.38077, -235.136, -54.2728, 0.28 ) }
    dend_44 { pt3dadd( 2.04914, -237.942, -54.6994, 0.28 ) }
    dend_44 { pt3dadd( 2.6349, -240.69, -55.0908, 0.28 ) }
    dend_44 { pt3dadd( 3.72991, -246.15, -55.8797, 0.55 ) }
    dend_44 { pt3dadd( 4.45873, -250.137, -56.4876, 1.66 ) }
    dend_44 { pt3dadd( 5.24282, -254.506, -57.2022, 0.55 ) }
    dend_44 { pt3dadd( 6.05364, -258.724, -57.8994, 0.55 ) }
    dend_44 { pt3dadd( 6.93749, -263.46, -58.6832, 0.28 ) }
    dend_44 { pt3dadd( 7.51867, -267.083, -59.2731, 0.55 ) }
    dend_44 { pt3dadd( 8.09371, -271.084, -59.9179, 0.28 ) }
    dend_44 { pt3dadd( 8.39964, -273.438, -60.1873, 0.83 ) }
    dend_44 { pt3dadd( 8.72409, -276.465, -60.4731, 0.55 ) }
    dend_44 { pt3dadd( 9.03613, -279.362, -60.6709, 0.55 ) }
    dend_44 { pt3dadd( 9.22272, -282.236, -60.7765, 0.83 ) }
    dend_44 { pt3dadd( 9.30891, -285.097, -60.8266, 0.28 ) }
    dend_44 { pt3dadd( 9.30891, -285.097, -60.8266, 0.55 ) }
    dend_44 { pt3dadd( 9.25442, -286.934, -60.8861, 0.28 ) }
    dend_44 { pt3dadd( 9.21785, -287.634, -60.9138, 0.55 ) }
    dend_44 { pt3dadd( 9.18345, -289.61, -61.0916, 0.28 ) }
    dend_44 { pt3dadd( 9.1972, -291.365, -61.3757, 0.55 ) }
    dend_44 { pt3dadd( 9.26465, -294.575, -62.1637, 0.28 ) }
    dend_44 { pt3dadd( 9.29613, -295.347, -62.3598, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 91/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -26.0592, -167.064, -32.6574, 0.55 ) }
    dend_41 { pt3dadd( -25.9134, -168.786, -32.6772, 0.55 ) }
    dend_41 { pt3dadd( -25.8546, -169.63, -32.674, 0.28 ) }
    dend_41 { pt3dadd( -25.7726, -170.501, -32.6688, 0.55 ) }
    dend_41 { pt3dadd( -25.4412, -173.06, -32.6662, 0.28 ) }
    dend_41 { pt3dadd( -25.3952, -173.342, -32.6854, 0.55 ) }
    dend_41 { pt3dadd( -24.9891, -175.55, -32.9092, 0.28 ) }
    dend_41 { pt3dadd( -24.7728, -176.547, -33.0348, 0.55 ) }
    dend_41 { pt3dadd( -24.483, -177.908, -33.2357, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -24.1506, -179.73, -33.5368, 0.55 ) }
    dend_41 { pt3dadd( -23.7738, -182.244, -33.9963, 0.28 ) }
    dend_41 { pt3dadd( -23.7167, -182.854, -34.1194, 0.55 ) }
    dend_41 { pt3dadd( -23.729, -184.242, -34.4149, 0.28 ) }
    dend_41 { pt3dadd( -23.7491, -184.839, -34.548, 0.55 ) }
    dend_41 { pt3dadd( -23.944, -186.508, -34.9052, 0.28 ) }
    dend_41 { pt3dadd( -24.1168, -187.308, -35.0525, 0.55 ) }
    dend_41 { pt3dadd( -24.5968, -188.884, -35.2246, 0.28 ) }
    dend_41 { pt3dadd( -25.2414, -190.796, -35.484, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -32.5629, -183.656, 17.2429, 0.55 ) }
    dend_39 { pt3dadd( -33.2479, -184.923, 16.9715, 0.55 ) }
    dend_39 { pt3dadd( -35.0092, -188.181, 16.2739, 0.55 ) }
    dend_39 { pt3dadd( -36.922, -191.719, 15.5163, 0.55 ) }
    dend_39 { pt3dadd( -38.2358, -194.149, 14.9959, 0.55 ) }
    dend_39 { pt3dadd( -43.7413, -202.798, 13.7997, 0.55 ) }
    dend_39 { pt3dadd( -49.3182, -211.378, 12.4992, 0.55 ) }
    dend_39 { pt3dadd( -56.8153, -218.296, 12.2687, 0.55 ) }
    dend_39 { pt3dadd( -64.6497, -224.72, 11.3568, 0.55 ) }
    dend_39 { pt3dadd( -72.8138, -230.683, 10.4956, 0.55 ) }
    dend_39 { pt3dadd( -81.4818, -235.856, 11.0907, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -32.5629, -183.656, 17.2429, 0.55 ) }
    dend_34 { pt3dadd( -33.2847, -185.814, 17.9132, 0.55 ) }
    dend_34 { pt3dadd( -33.975, -188.572, 18.6973, 0.55 ) }
    dend_34 { pt3dadd( -35.4847, -194.603, 20.412, 0.55 ) }
    dend_34 { pt3dadd( -36.9407, -200.42, 22.0657, 0.55 ) }
    dend_34 { pt3dadd( -37.9203, -204.333, 23.1782, 0.55 ) }
    dend_34 { pt3dadd( -38.897, -208.235, 24.2875, 0.55 ) }
    dend_34 { pt3dadd( -40.0918, -213.132, 25.7876, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 28/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -25.2414, -190.796, -35.484, 0.28 ) }
    dend_43 { pt3dadd( -26.4677, -194.38, -35.9015, 0.28 ) }
    dend_43 { pt3dadd( -26.8176, -195.487, -36.0686, 0.55 ) }
    dend_43 { pt3dadd( -27.8186, -198.573, -36.5354, 0.28 ) }
    dend_43 { pt3dadd( -28.2769, -199.985, -36.7491, 0.55 ) }
    dend_43 { pt3dadd( -29.3108, -203.172, -37.2313, 0.28 ) }
    dend_43 { pt3dadd( -30.0151, -205.343, -37.5597, 0.83 ) }
    dend_43 { pt3dadd( -30.6701, -207.628, -38.0423, 0.28 ) }
    dend_43 { pt3dadd( -31.1308, -209.33, -38.4352, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 37/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -25.2414, -190.796, -35.484, 0.55 ) }
    dend_42 { pt3dadd( -25.0833, -192.346, -35.1322, 0.55 ) }
    dend_42 { pt3dadd( -24.8345, -194.505, -34.5426, 0.55 ) }
    dend_42 { pt3dadd( -24.6416, -196.903, -33.9231, 0.55 ) }
    dend_42 { pt3dadd( -24.5139, -198.543, -33.514, 0.55 ) }
    dend_42 { pt3dadd( -24.4164, -199.791, -33.2183, 0.28 ) }
    dend_42 { pt3dadd( -24.2687, -202.168, -32.6874, 0.55 ) }
    dend_42 { pt3dadd( -24.1324, -204.657, -32.1348, 0.28 ) }
    dend_42 { pt3dadd( -24.0338, -207.599, -31.687, 0.55 ) }
    dend_42 { pt3dadd( -24.0178, -209.248, -31.5356, 0.28 ) }
    dend_42 { pt3dadd( -24.0551, -210.452, -31.4835, 0.55 ) }
    dend_42 { pt3dadd( -24.1321, -211.79, -31.4518, 0.28 ) }
    dend_42 { pt3dadd( -24.2205, -212.971, -31.4634, 0.55 ) }
    dend_42 { pt3dadd( -24.4686, -216.04, -31.7055, 0.28 ) }
    dend_42 { pt3dadd( -24.6815, -218.602, -31.9875, 0.28 ) }
    dend_42 { pt3dadd( -24.8548, -220.155, -32.2005, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -40.0918, -213.132, 25.7876, 0.28 ) }
    dend_36 { pt3dadd( -37.0328, -213.943, 25.5051, 0.28 ) }
    dend_36 { pt3dadd( -36.2212, -214.158, 25.4301, 0.55 ) }
    dend_36 { pt3dadd( -33.8929, -214.775, 25.2151, 0.28 ) }
    dend_36 { pt3dadd( -32.3224, -215.191, 25.07, 0.55 ) }
    dend_36 { pt3dadd( -29.8715, -215.841, 24.8436, 0.28 ) }
    dend_36 { pt3dadd( -28.7041, -216.15, 24.7358, 0.55 ) }
    dend_36 { pt3dadd( -15.6648, -220.799, 22.9106, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 61/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -40.0918, -213.132, 25.7876, 0.55 ) }
    dend_35 { pt3dadd( -40.444, -217.124, 26.0002, 0.55 ) }
    dend_35 { pt3dadd( -40.421, -228.929, 28.3321, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -15.6648, -220.799, 22.9106, 0.55 ) }
    dend_38 { pt3dadd( -5.61453, -224.103, 20.8371, 0.55 ) }
    dend_38 { pt3dadd( 4.84737, -225.921, 19.1663, 0.55 ) }
    dend_38 { pt3dadd( 15.3747, -227.279, 17.5079, 0.55 ) }
    dend_38 { pt3dadd( 25.7801, -226.521, 14.9593, 0.55 ) }
    dend_38 { pt3dadd( 36.4172, -225.708, 13.7186, 0.55 ) }
    dend_38 { pt3dadd( 46.6587, -223.182, 11.5639, 0.55 ) }
    dend_38 { pt3dadd( 56.7039, -219.213, 11.1913, 0.55 ) }
    dend_38 { pt3dadd( 65.671, -213.008, 11.0372, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 73/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -15.6648, -220.799, 22.9106, 0.55 ) }
    dend_37 { pt3dadd( -7.30376, -223.335, 22.4579, 0.55 ) }
    dend_37 { pt3dadd( 0.978503, -225.969, 23.5001, 0.55 ) }
    dend_37 { pt3dadd( 9.34304, -227.719, 25.2941, 0.55 ) }
    dend_37 { pt3dadd( 17.8974, -229.448, 25.5344, 0.55 ) }
    dend_37 { pt3dadd( 25.9995, -232.564, 26.7731, 0.55 ) }
    dend_37 { pt3dadd( 33.6822, -236.884, 26.6309, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_51 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_62 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_61 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_48 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_47 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_4 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_40 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_44 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_38 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_29 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_54 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_46 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_52 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_41 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_58 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_5 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_34 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_9 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_35 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_36 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 9
    dend_55 nseg = 9
    dend_49 nseg = 3
    dend_24 nseg = 13
    dend_21 nseg = 13
    dend_16 nseg = 9
    dend_13 nseg = 11
    dend_57 nseg = 7
    dend_51 nseg = 3
    dend_50 nseg = 3
    dend_6 nseg = 5
    dend_3 nseg = 9
    dend_62 nseg = 5
    dend_61 nseg = 5
    dend_48 nseg = 7
    dend_47 nseg = 5
    dend_7 nseg = 5
    dend_4 nseg = 3
    dend_40 nseg = 5
    dend_33 nseg = 7
    dend_44 nseg = 7
    dend_39 nseg = 3
    dend_38 nseg = 5
    dend_37 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_ChC_88b9ee8f5d_0_0


