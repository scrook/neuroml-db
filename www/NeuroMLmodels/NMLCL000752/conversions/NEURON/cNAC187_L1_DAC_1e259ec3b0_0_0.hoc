// Cell: cNAC187_L1_DAC_1e259ec3b0_0_0
/*
{
  "id" : "cNAC187_L1_DAC_1e259ec3b0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.75396, -1.69873, 0.0, 3.08762", "-6.06994, -1.48169, 0.0, 5.50494", "-5.38592, -1.26466, 0.0, 7.586", "-4.7019, -1.04762, 0.0, 9.07928", "-4.01788, -0.83058, 0.0, 9.80903", "-3.33386, -0.613542, 0.0, 10.4869", "-2.64984, -0.396504, 0.0, 11.0081", "-1.96582, -0.179466, 0.0, 11.2696", "-1.28181, 0.0375719, 0.0, 11.2491", "-0.597787, 0.25461, 0.0, 11.2286", "0.0862322, 0.471648, 0.0, 10.9284", "0.770251, 0.688686, 0.0, 10.6193", "1.45427, 0.905724, 0.0, 10.3107", "2.13829, 1.12276, 0.0, 10.0061", "2.82231, 1.3398, 0.0, 9.46628", "3.50633, 1.55684, 0.0, 8.90647", "4.19035, 1.77388, 0.0, 8.28779", "4.87437, 1.99091, 0.0, 7.49413", "5.55838, 2.20795, 0.0, 6.16104", "6.2424, 2.42499, 0.0, 4.63664", "6.92642, 2.64203, 0.0, 2.62676" ]
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-0.00559795, 4.03038, 12.17, 1.14", "0.443433, 4.91453, 12.2497, 1.14", "1.01813, 6.48929, 12.1024, 1.37", "1.52164, 8.30934, 11.8877, 1.14", "1.96532, 10.1552, 11.6612, 0.91", "2.39661, 12.5844, 11.5236, 0.91", "2.52665, 14.3286, 11.5611, 0.91", "2.63281, 16.9248, 11.5747, 0.91", "2.59144, 19.0461, 11.5304, 0.91", "2.46505, 20.4769, 11.4841, 1.37", "1.92799, 23.2885, 11.6017, 1.37", "1.07511, 26.3465, 12.2832, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009067800606
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.9044, 4.73763, -3.28, 0.91", "6.9044, 4.73763, -3.28, 0.91", "8.16243, 6.12713, -3.44745, 0.91", "9.42938, 7.5265, -3.61609, 0.91", "10.5276, 8.73955, -3.76228, 0.91", "11.9022, 10.2578, -3.94524, 0.68", "12.6847, 11.1221, -4.0494, 0.91", "14.0099, 12.5891, -4.24365, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009067800606
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.0044, 1.94963, -2.71, 5.24", "6.42659, 2.01386, -3.98632, 4.33", "6.74333, 2.06204, -4.94388, 4.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009067800606
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.9156, 1.33463, -4.53, 1.14", "-4.9156, 1.33463, -4.53, 1.14", "-6.07404, 1.57986, -4.8825, 1.14", "-7.61881, 1.83894, -5.39983, 1.14", "-9.60871, 2.07996, -6.1683, 0.91", "-10.9257, 2.17875, -6.72194, 1.14", "-12.158, 2.27117, -7.23993, 1.14", "-13.4778, 2.33988, -7.82277, 0.91", "-14.7089, 2.34396, -8.4218, 0.91", "-15.8876, 2.25499, -9.04899, 0.91", "-17.1362, 2.05849, -9.80631, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009067800606
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.2444, -2.78587, 8.47, 0.68", "4.87586, -3.82651, 8.01289, 0.68", "5.39023, -4.71202, 7.63963, 0.68", "5.87592, -5.5961, 7.29391, 0.68", "6.57679, -7.07826, 6.78834, 0.68", "6.92174, -7.93029, 6.5585, 0.68", "7.28972, -9.02458, 6.35557, 0.46", "7.55528, -10.1616, 6.26488, 0.46", "7.66302, -10.8671, 6.28748, 0.68", "7.72605, -12.267, 6.45945, 0.46", "7.66479, -13.4136, 6.68345, 0.68", "7.52972, -14.7433, 7.02685, 0.68", "7.42299, -15.6437, 7.2905, 0.68", "7.31991, -16.5435, 7.58909, 0.46", "7.2489, -17.7861, 7.99658, 0.68", "7.27098, -18.9128, 8.36333, 0.46", "7.37593, -20.063, 8.69856, 0.68", "7.56725, -21.2336, 9.00489, 0.91", "7.88978, -22.7378, 9.3869, 0.46", "8.30301, -24.1176, 9.74309, 0.46", "8.77409, -25.3798, 10.0479, 0.46", "9.11786, -26.2156, 10.2453, 0.46", "9.87817, -28.0172, 10.6314, 0.23", "10.078, -28.4703, 10.7254, 0.91", "10.9495, -30.4238, 11.1011, 0.46", "11.7044, -32.2306, 11.4617, 0.46", "12.3819, -33.9323, 11.7921, 0.23", "12.9727, -35.572, 12.1308, 0.68", "13.2374, -36.385, 12.2879, 0.23", "13.4434, -37.0633, 12.4121, 0.46", "13.8637, -38.6833, 12.6797, 0.23", "14.2266, -40.1921, 12.9374, 0.23", "14.6699, -42.3084, 13.281, 0.23", "14.8819, -43.5329, 13.4985, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009067800606,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.8756, -5.04087, 1.64, 0.91", "-3.8756, -5.04087, 1.64, 0.91", "-4.26739, -6.65556, 0.987105, 0.91", "-4.75004, -8.64468, 0.182809, 0.91", "-5.15209, -10.3015, -0.487163, 1.14", "-5.58386, -12.081, -1.20668, 0.91", "-6.00932, -13.8344, -1.91568, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009067800606
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.92642, 2.64203, 0.0, 0.504625", "21.224, 7.17861, 0.0, 0.504625", "35.5215, 11.7152, 0.0, 0.504625" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "1.07511, 26.3465, 12.2832, 0.68", "-0.0173529, 26.3731, 12.8308, 0.68", "-1.58107, 26.5641, 14.0758, 0.68", "-2.48688, 26.67, 15.0756, 0.68", "-3.72385, 26.7316, 16.6096, 0.68", "-4.17237, 26.6783, 17.3121, 0.68", "-5.01432, 26.3903, 18.9144, 0.68", "-5.87794, 25.7478, 21.2061, 0.68", "-6.45976, 25.0933, 23.2023, 0.68", "-6.73654, 24.5828, 24.4281, 0.68", "-7.20939, 23.2621, 27.022, 0.68", "-7.4626, 22.3658, 28.4692, 0.68", "-7.87686, 20.8486, 30.5774, 0.68", "-8.12655, 19.9717, 31.617, 0.68", "-8.49185, 18.7735, 33.0198, 0.68", "-8.86407, 17.7506, 34.2683, 0.68", "-9.28749, 16.711, 35.4389, 0.46", "-9.52201, 16.0763, 36.0898, 0.46", "-9.98771, 14.2894, 37.5597, 0.23" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "1.07511, 26.3465, 12.2832, 0.68", "1.36559, 28.356, 11.7196, 0.68", "1.85745, 30.9724, 11.058, 0.68", "2.30226, 32.8311, 10.6715, 0.68", "2.97468, 35.2675, 10.2175, 0.68", "3.31935, 36.4711, 10.0169, 0.91", "3.8744, 38.4475, 9.7186, 0.91", "4.57378, 40.7026, 9.43935, 0.91", "5.34501, 42.8162, 9.20632, 0.91", "5.73683, 43.9212, 9.08876, 0.91", "6.31983, 45.7844, 8.91333, 0.68", "6.64185, 46.8576, 8.81853, 0.68", "7.09193, 48.2001, 8.71592, 0.68", "7.94757, 50.4848, 8.41047, 0.68", "8.77939, 52.6448, 7.89911, 0.68", "9.52796, 54.5707, 7.28608, 0.68", "9.7209, 55.0343, 7.12496, 0.91", "10.8078, 57.5602, 6.13056, 0.68", "12.0488, 60.5942, 4.80581, 0.68", "13.0331, 63.0336, 3.67508, 0.68", "13.7834, 64.9437, 2.75069, 0.68", "14.5327, 66.8258, 1.77414, 0.46", "15.3973, 69.1266, 0.573265, 0.46", "16.1645, 71.5097, -0.660667, 0.68", "16.6501, 73.1116, -1.46312, 0.46", "17.3474, 75.4897, -2.75769, 0.46", "17.9382, 77.5982, -4.0032, 0.46", "18.3958, 79.2077, -5.09165, 0.46", "18.9217, 80.9569, -6.36361, 0.68", "19.5189, 83.0188, -8.06164, 0.46", "20.0969, 85.3673, -10.0742, 0.91", "20.406, 86.885, -11.4946, 0.46", "20.8396, 89.0922, -13.4794, 0.46", "21.4173, 91.5679, -15.919, 0.23", "22.1262, 94.0024, -18.4638, 0.23", "22.6875, 95.4747, -20.0357, 0.23", "23.681, 98.005, -22.7852, 0.23", "24.6242, 100.398, -25.4593, 0.23", "26.4839, 104.941, -30.4711, 0.23", "27.0594, 106.06, -31.7651, 0.23", "28.6681, 108.389, -34.5538, 0.46" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "14.0099, 12.5891, -4.24365, 0.91", "15.0316, 13.3804, -4.93722, 0.91", "16.9292, 15.14, -6.44312, 0.91", "18.3213, 16.568, -7.70761, 0.68", "19.2715, 17.7298, -8.75322, 0.68", "20.0287, 18.78, -9.7216, 0.68", "20.7461, 19.7705, -10.658, 0.68", "21.7805, 21.2657, -12.1341, 0.68", "22.808, 22.8801, -13.694, 0.91", "23.9917, 24.9291, -15.5734, 0.68", "24.9572, 26.6644, -17.0568, 0.68", "25.7166, 27.9265, -18.1125, 0.68", "26.4121, 28.9749, -19.0102, 0.68", "27.3368, 30.3383, -20.204, 0.68", "28.1811, 31.6445, -21.3226, 0.68", "28.7922, 32.5943, -22.1398, 0.68", "30.158, 34.8574, -24.1033, 0.91", "31.5659, 37.4008, -26.3038, 0.68", "32.351, 38.8308, -27.622, 0.68", "33.1797, 40.2329, -29.0764, 0.68", "33.9933, 41.4392, -30.4927, 0.68", "34.7879, 42.4486, -31.7736, 0.68", "35.6824, 43.3654, -32.9781, 0.91", "37.5908, 44.8502, -35.0697, 0.46", "39.2239, 45.9254, -36.6708, 0.46", "41.1981, 47.1171, -38.4577, 0.46", "42.5173, 47.8858, -39.6258, 0.46", "44.4666, 48.9687, -41.2403, 0.68", "46.5331, 50.0822, -42.8755, 0.46", "48.6623, 51.2083, -44.433, 0.23", "49.6206, 51.751, -45.1186, 0.46", "51.3943, 52.7275, -46.472, 0.46", "52.7536, 53.507, -47.7463, 0.68", "54.0625, 54.3495, -49.2502, 0.46", "55.4783, 55.3457, -51.2046, 0.68", "56.2026, 55.8587, -52.281, 0.68", "57.7349, 57.0032, -54.6623, 0.68", "59.8257, 58.666, -57.9487, 0.68", "60.8413, 59.4982, -59.6697, 0.91", "61.9588, 60.3991, -61.6458, 1.14", "63.072, 61.221, -63.5777, 0.68", "64.5005, 62.1216, -65.811, 0.68", "65.9642, 62.9297, -67.8015, 0.91", "68.072, 63.8487, -70.2172, 0.91", "69.7451, 64.5025, -71.9834, 0.46", "70.9544, 64.989, -73.1823, 0.46", "72.2376, 65.5549, -74.4252, 0.46", "73.9222, 66.4147, -75.9736, 0.68", "76.1971, 67.7699, -77.9674, 0.91", "78.2725, 69.1983, -79.7047, 0.46", "80.5433, 70.9097, -81.6727, 0.68", "81.5893, 71.7607, -82.6592, 0.68", "83.1516, 73.0619, -84.2902, 0.23", "83.9541, 73.7246, -85.1765, 0.46", "85.5528, 74.8953, -87.223, 0.46", "86.9312, 75.6592, -89.3955, 0.23", "87.5115, 75.8914, -90.5648, 0.46", "88.5344, 76.222, -93.0122, 0.23", "89.5668, 76.4581, -95.8112, 0.68", "91.1907, 76.6849, -100.787, 0.68", "92.8351, 76.756, -106.384, 0.68", "93.8455, 76.738, -109.83, 0.68", "94.3443, 76.7269, -111.384, 0.68", "95.1757, 76.6943, -114.008, 0.68", "96.3437, 76.6238, -117.777, 0.68", "97.8393, 76.6156, -122.119, 0.23", "99.4033, 76.6225, -125.792, 0.68", "101.524, 76.6337, -129.929, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "14.0099, 12.5891, -4.24365, 0.68", "14.7703, 13.9368, -4.34546, 0.68", "15.5892, 15.1674, -4.52571, 0.68", "16.1436, 15.9599, -4.66963, 0.91", "17.2351, 17.4786, -4.95277, 0.68", "17.8634, 18.3595, -5.18155, 0.91", "19.4768, 20.5507, -5.91908, 0.68", "20.6782, 22.0861, -6.60851, 0.91", "21.1285, 22.6861, -6.89164, 0.91", "21.9393, 23.8026, -7.39597, 0.46", "23.1892, 25.628, -8.13558, 0.68", "24.41, 27.5142, -8.71123, 0.46", "25.2273, 28.8205, -8.9988, 0.91", "26.3964, 30.522, -9.27004, 0.68", "27.7437, 32.2773, -9.49546, 0.68", "28.7266, 33.4376, -9.54217, 0.68", "30.6543, 35.601, -9.37362, 0.68", "32.2081, 37.353, -9.09892, 0.23", "33.6202, 38.9384, -8.79725, 0.68", "34.6112, 40.0526, -8.58452, 0.46", "35.9985, 41.6524, -8.34191, 0.46", "36.9491, 42.7888, -8.22284, 0.68", "38.3627, 44.7578, -8.15135, 0.46", "39.0241, 45.7947, -8.17305, 0.46", "40.0891, 47.4892, -8.34708, 0.91", "41.3738, 49.3388, -8.72034, 0.68", "42.3365, 50.5858, -9.1429, 0.68", "43.3802, 51.8526, -9.68609, 0.68", "44.2244, 52.8834, -10.2324, 0.68", "45.704, 54.8254, -11.3895, 0.91", "46.7399, 56.298, -12.3344, 0.23", "47.6034, 57.6293, -13.2071, 0.46", "48.5401, 59.1935, -14.2818, 0.46", "49.5654, 61.0213, -15.5739, 0.46", "50.2949, 62.5588, -16.6787, 0.46", "50.5267, 63.1892, -17.1446, 0.68", "50.7978, 64.1013, -17.8484, 0.46", "51.2274, 65.6378, -19.0653, 0.46", "51.6409, 67.2055, -20.4357, 0.46", "51.9748, 68.8972, -22.0142, 0.68", "52.2439, 70.6745, -23.9161, 0.46", "52.4651, 72.1987, -25.7496, 0.68", "52.528, 72.6351, -26.3407, 0.46", "52.7883, 74.4797, -29.1744, 0.46", "53.0042, 75.7451, -31.3303, 0.46", "53.393, 77.2088, -34.0324, 0.46", "53.8135, 78.2184, -36.0429, 0.46", "54.2065, 79.0633, -37.7928, 0.46", "54.9983, 80.6179, -41.0929, 0.23", "55.7264, 81.8043, -43.6227, 0.46", "56.4573, 82.7863, -45.7766, 0.23", "57.3354, 83.9654, -48.2598, 0.46" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "6.74333, 2.06204, -4.94388, 2.28", "6.6323, 2.40885, -7.99673, 2.28", "6.52957, 2.72973, -10.8213, 2.28", "6.45584, 2.96001, -12.8484, 2.28", "6.36934, 3.2302, -15.2267, 2.28", "6.27035, 3.5394, -17.9484, 2.28", "6.19988, 3.75949, -19.8858, 2.28" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "6.74333, 2.06204, -4.94388, 3.64", "7.19098, 1.9085, -5.31773, 3.64", "8.7185, 1.58961, -6.43726, 3.42", "10.4488, 1.37813, -7.58585, 3.19", "11.274, 1.35291, -8.08092, 2.51", "12.6213, 1.41178, -8.83502, 1.59", "14.782, 1.69641, -9.90058, 1.37", "17.1092, 2.1077, -10.9483, 1.37", "18.4365, 2.42424, -11.4688, 1.59", "20.0656, 2.91032, -12.0411, 1.37", "21.4885, 3.40833, -12.5482, 1.14", "23.8424, 4.45667, -13.2562, 0.91" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-17.1362, 2.05849, -9.80631, 0.91", "-17.8956, 2.88151, -10.9945, 0.91", "-18.7199, 3.74172, -12.2036, 0.91", "-19.4196, 4.4691, -13.1625, 0.91", "-20.1536, 5.252, -14.0519, 0.68", "-21.0477, 6.20561, -15.1353, 0.91", "-22.0069, 7.22877, -16.2977, 0.91", "-22.8605, 8.19701, -17.2927, 0.91", "-23.6311, 9.10884, -18.159, 0.91", "-24.7809, 10.458, -19.3313, 0.91" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-17.1362, 2.05849, -9.80631, 0.46", "-17.8267, 0.664071, -9.88624, 0.46", "-18.3798, -0.802208, -9.93482, 0.46", "-18.9766, -2.6615, -9.95824, 0.46", "-19.4071, -4.0733, -9.96472, 0.68", "-19.9175, -5.75945, -9.96178, 0.46", "-20.4665, -7.59039, -9.94656, 0.46", "-21.2795, -10.4206, -9.87371, 0.46", "-21.6696, -11.7364, -9.84146, 0.46", "-22.1539, -13.2355, -9.78776, 0.68", "-22.7847, -14.9344, -9.71673, 0.46", "-23.8611, -17.227, -9.59515, 0.46", "-24.4371, -18.2331, -9.53928, 0.46", "-25.371, -19.6287, -9.45903, 0.68", "-26.2283, -20.8162, -9.3897, 0.23", "-26.8238, -21.6184, -9.33775, 0.68", "-28.5254, -23.8485, -9.18817, 0.46", "-29.407, -25.018, -9.13424, 0.68", "-30.1184, -26.0321, -9.10493, 0.23", "-30.8946, -27.3047, -9.08594, 0.46", "-31.9257, -29.1763, -9.12329, 0.23", "-32.0742, -29.4896, -9.13705, 0.46", "-32.9289, -31.565, -9.31044, 0.23", "-33.3556, -32.7235, -9.43443, 0.68", "-34.3713, -35.9071, -9.85274, 0.23", "-34.9153, -37.8378, -10.138, 0.46", "-35.1243, -38.6115, -10.2602, 0.23", "-35.5819, -40.3124, -10.5198, 0.23", "-36.0494, -42.1102, -10.7938, 0.68", "-36.5888, -44.0106, -11.108, 0.23", "-36.797, -44.6509, -11.2162, 0.23", "-37.1394, -45.5826, -11.3364, 0.91", "-37.6991, -46.9382, -11.4697, 0.46", "-37.9541, -47.5403, -11.5067, 0.46", "-38.6998, -49.2615, -11.5848, 0.23", "-39.0247, -50.1037, -11.6003, 1.14", "-39.6373, -52.0572, -11.6119, 0.23", "-40.1454, -54.0451, -11.6128, 0.23", "-40.3289, -54.8259, -11.6136, 0.46", "-40.4557, -55.3848, -11.639, 0.91", "-40.9701, -57.7497, -11.897, 0.23", "-41.3294, -59.3016, -12.1485, 0.46", "-41.7729, -61.2124, -12.5187, 0.23", "-42.4024, -63.8062, -13.1058, 0.23", "-43.0079, -66.064, -13.6808, 0.23", "-43.4751, -67.6095, -14.1366, 0.23", "-43.8625, -68.7036, -14.5542, 0.68" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.00932, -13.8344, -1.91568, 0.91", "-5.67343, -15.3716, -2.36397, 0.91", "-5.50094, -16.5198, -2.57066, 0.68", "-5.33558, -17.9889, -2.71493, 0.68", "-5.20642, -19.0571, -2.76872, 0.91", "-5.00772, -20.3988, -2.84022, 0.68", "-4.73481, -22.0208, -2.94475, 0.68", "-4.4471, -23.7524, -2.99543, 0.91", "-4.1933, -25.3772, -3.01899, 0.91", "-3.96046, -26.878, -3.05535, 0.68", "-3.68612, -28.423, -3.14179, 0.91", "-3.44403, -29.6015, -3.26557, 0.91", "-3.02733, -31.4812, -3.54905, 0.46", "-2.7202, -32.7904, -3.78898, 0.68", "-2.30808, -34.4431, -4.10884, 0.68", "-1.827, -36.3121, -4.44644, 0.68", "-1.43794, -37.8044, -4.67005, 0.46", "-1.132, -38.8808, -4.80928, 0.91", "-0.72452, -40.2438, -4.96657, 0.91", "-0.15273, -42.3791, -5.17314, 0.46", "0.0468728, -43.2809, -5.23463, 0.91", "0.284098, -44.6348, -5.28142, 0.46", "0.507698, -46.0514, -5.29389, 0.46", "0.619848, -46.9606, -5.29647, 0.68", "0.700628, -48.2711, -5.32152, 0.46", "0.726283, -49.3552, -5.34912, 0.46", "0.761331, -51.2764, -5.44037, 0.68", "0.809664, -52.7337, -5.52779, 0.46", "0.852767, -53.575, -5.59533, 0.46", "0.991064, -55.0912, -5.74197, 0.91", "1.15103, -56.5049, -5.88958, 0.46", "1.34063, -57.9217, -6.05697, 0.46", "1.49354, -58.7446, -6.16084, 0.91", "1.77759, -59.9359, -6.29794, 0.46", "2.09609, -61.0389, -6.39926, 0.91", "2.52439, -62.3402, -6.49383, 0.46", "3.04994, -63.7663, -6.57668, 0.68", "3.94262, -66.0408, -6.64382, 0.23", "4.55749, -67.6016, -6.67108, 0.91", "5.08593, -68.9303, -6.682, 0.46", "5.74464, -70.5238, -6.72084, 0.91", "6.41028, -72.1248, -6.78476, 0.46", "6.91379, -73.396, -6.8589, 0.68", "7.51253, -74.9759, -6.97607, 0.46", "8.01107, -76.3459, -7.09187, 0.46", "8.56675, -78.0607, -7.23795, 0.68", "9.09244, -79.8919, -7.38322, 0.46", "9.37425, -81.0205, -7.47306, 0.68", "9.56603, -81.8361, -7.53612, 0.91", "9.95192, -83.7159, -7.64002, 0.46", "10.226, -85.3824, -7.69033, 0.68", "10.3694, -86.4783, -7.69411, 0.46", "10.4305, -87.0169, -7.68719, 0.68", "10.5812, -88.4301, -7.64686, 0.23", "10.6944, -89.5171, -7.62625, 0.46", "10.8864, -91.1308, -7.61317, 0.91", "11.229, -93.2904, -7.60018, 0.23", "11.422, -94.4359, -7.55982, 0.23", "11.5633, -95.2722, -7.49383, 0.68", "11.9453, -97.4783, -7.28995, 0.23", "12.1598, -98.6429, -7.1742, 0.46", "12.5179, -100.447, -6.97595, 0.23", "13.1609, -103.48, -6.59988, 0.23", "13.412, -104.581, -6.44769, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.00932, -13.8344, -1.91568, 0.46", "-6.38797, -14.6445, -3.93704, 0.46", "-7.07756, -15.797, -5.75809, 0.46", "-7.18001, -15.9621, -5.92931, 0.46", "-7.64518, -16.7023, -6.5197, 0.46", "-8.03824, -17.309, -6.9554, 0.46", "-8.9417, -18.6651, -7.92878, 0.46", "-10.1191, -20.3279, -8.924, 0.46", "-10.9695, -21.4565, -9.52012, 0.46", "-12.0819, -22.9, -10.2017, 0.68", "-13.7059, -24.9403, -11.1129, 0.68", "-15.1886, -26.7439, -11.9141, 0.68", "-16.3169, -28.0764, -12.5172, 0.46", "-17.2943, -29.2784, -13.0707, 0.46", "-18.4853, -30.8841, -13.7656, 0.68", "-19.2161, -31.9854, -14.1822, 0.46", "-19.7537, -32.907, -14.4717, 0.68", "-20.5819, -34.5659, -14.9749, 0.46", "-21.3051, -36.2191, -15.5188, 0.68", "-22.3641, -38.692, -16.4042, 0.46", "-23.1822, -40.5876, -17.1395, 0.68", "-24.1178, -42.6327, -17.934, 0.46", "-24.9699, -44.4032, -18.6775, 0.46", "-25.9089, -46.186, -19.479, 0.68", "-26.9995, -47.9906, -20.3888, 0.46", "-27.8305, -49.1841, -21.0346, 0.46", "-28.8814, -50.5277, -21.7922, 0.68", "-30.1517, -52.0027, -22.6342, 0.46", "-31.8017, -53.7546, -23.6099, 0.68", "-33.4484, -55.3704, -24.5149, 0.68", "-34.8165, -56.7065, -25.2509, 0.68", "-36.4662, -58.2347, -26.0813, 0.23", "-37.0492, -58.7462, -26.3689, 0.46", "-38.9436, -60.3111, -27.2596, 0.46", "-40.6367, -61.6871, -28.0733, 0.23", "-42.0003, -62.8307, -28.7424, 0.68", "-43.1352, -63.7924, -29.3172, 0.23", "-44.317, -64.8328, -29.9206, 0.23", "-45.4795, -65.8593, -30.5253, 0.68", "-46.7727, -67.0589, -31.2078, 0.23", "-47.4655, -67.7435, -31.6023, 0.68", "-48.8203, -69.1593, -32.4465, 0.23", "-50.4357, -70.9559, -33.5135, 0.23", "-51.5842, -72.2506, -34.2468, 0.68", "-53.6651, -74.5077, -35.5396, 0.23", "-54.599, -75.5019, -36.0945, 0.68", "-56.009, -76.9426, -36.8292, 0.23", "-57.1772, -78.0722, -37.3806, 0.68", "-58.9091, -79.6566, -38.1535, 0.46", "-60.4006, -80.9822, -38.7662, 0.23", "-62.0311, -82.3902, -39.4763, 0.23", "-63.7951, -83.8943, -40.3844, 0.68", "-65.6019, -85.3305, -41.4898, 0.46", "-66.8984, -86.3409, -42.4265, 0.23", "-68.0033, -87.183, -43.3474, 0.46", "-69.7711, -88.5135, -44.9726, 0.23", "-71.525, -89.7498, -46.8095, 0.23", "-73.0655, -90.8804, -48.5707, 0.23", "-73.4264, -91.1587, -48.9786, 0.46", "-74.1571, -91.7685, -49.7832, 0.23", "-74.8207, -92.3389, -50.4875, 0.68", "-76.9222, -94.1759, -52.4909, 0.23", "-79.0428, -96.0477, -54.3813, 0.23", "-79.9729, -96.8711, -55.2269, 0.46", "-81.1173, -97.8392, -56.2544, 0.23", "-82.812, -99.2037, -57.6866, 0.23", "-83.6853, -99.8912, -58.3923, 0.68", "-86.838, -102.457, -60.8799, 0.23", "-88.4774, -103.731, -62.1694, 0.23", "-89.1673, -104.262, -62.7207, 0.46", "-91.3115, -105.918, -64.4498, 0.23", "-93.0516, -107.4, -65.8896, 0.68", "-94.9158, -109.178, -67.4853, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.5215, 11.7152, 0.0, 0.46", "49.819, 16.2518, 0.0, 0.46", "64.1165, 20.7884, 0.0, 0.46" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "6.19988, 3.75949, -19.8858, 1.37", "6.21156, 6.85149, -19.8457, 1.37", "6.2117, 10.2591, -19.8581, 1.37", "6.21183, 13.4607, -19.8697, 1.59", "6.21197, 17.0379, -19.8826, 1.37", "6.2121, 20.1224, -19.8938, 1.37", "6.21221, 22.7256, -19.9032, 1.59", "6.19372, 24.2629, -20.0066, 1.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.19988, 3.75949, -19.8858, 1.37", "5.06688, 5.07459, -19.8004, 1.37", "3.52105, 6.83554, -19.9185, 1.14", "1.77937, 8.63415, -20.3175, 1.14", "-0.0614511, 10.3395, -20.9334, 0.91", "-1.40636, 11.4851, -21.5437, 0.91", "-2.78364, 12.6401, -22.2628, 0.68", "-4.27469, 13.9216, -23.2483, 0.68", "-5.6328, 15.1068, -24.4477, 0.68", "-6.3685, 15.7131, -25.282, 0.68", "-7.34317, 16.4593, -26.7006, 0.68", "-8.0087, 16.9691, -27.9706, 0.91", "-8.99188, 17.7126, -30.3918, 0.91", "-9.66011, 18.1942, -32.1894, 0.68", "-10.0911, 18.4718, -33.3296, 0.68", "-11.1935, 18.8641, -36.0842, 0.68", "-12.2191, 19.0123, -38.325, 0.68", "-13.4322, 19.03, -40.8582, 0.68", "-14.3272, 19.0177, -42.6258, 0.68", "-14.9218, 19.0132, -43.646, 0.68", "-16.4295, 19.1146, -45.8931, 0.68", "-17.4111, 19.2192, -47.0642, 0.46", "-18.5521, 19.4398, -48.2898, 0.46", "-19.6915, 19.7052, -49.5247, 0.46", "-20.4722, 19.8415, -50.4525, 0.46", "-21.425, 19.8754, -51.4772, 0.46", "-22.9019, 19.8167, -52.8153, 0.68", "-24.1976, 19.5796, -53.9339, 0.68", "-25.3252, 19.2956, -54.8084, 0.68", "-26.5884, 18.9473, -55.7204, 0.68", "-28.4795, 18.4951, -57.1409, 0.91", "-30.2856, 18.1723, -58.5111, 0.91", "-31.9561, 17.9459, -59.7707, 0.91", "-34.0491, 17.7135, -61.2642, 0.91", "-35.7217, 17.6337, -62.3801, 0.68", "-38.1449, 17.5727, -63.8958, 0.68", "-40.079, 17.5579, -65.1249, 0.91", "-41.8239, 17.5995, -66.1713, 0.68", "-43.3579, 17.7401, -67.0466, 0.68", "-44.9238, 17.9419, -67.91, 0.68", "-46.97, 18.2237, -68.9661, 0.68", "-48.8361, 18.4277, -69.8155, 0.68", "-50.1505, 18.5355, -70.4953, 0.68", "-51.7023, 18.6788, -71.4446, 0.68", "-53.2492, 18.7885, -72.4518, 0.91", "-54.14, 18.8183, -73.089, 0.91", "-55.4345, 18.846, -74.0332, 0.68", "-57.3927, 18.8289, -75.4477, 0.68", "-59.0888, 18.8176, -76.714, 0.68", "-60.9689, 18.9128, -78.0782, 0.91", "-62.8085, 19.1878, -79.4748, 0.68", "-63.7145, 19.4376, -80.1688, 0.68", "-64.568, 19.7863, -80.8262, 0.68", "-65.4055, 20.2183, -81.4204, 0.68", "-66.6219, 20.9992, -82.3302, 0.91", "-68.1358, 22.2632, -83.699, 0.68", "-69.4188, 23.5581, -85.0371, 0.68", "-70.236, 24.4812, -86.1064, 0.68", "-71.0121, 25.3903, -87.2601, 1.14", "-71.6233, 26.129, -88.2433, 0.68", "-72.5413, 27.3965, -89.8501, 0.68", "-73.2151, 28.4183, -90.9961, 0.91", "-74.5689, 30.4113, -93.0725, 0.91", "-75.1305, 31.1208, -93.7895, 0.91", "-75.6083, 31.6858, -94.331, 0.68", "-76.7689, 32.9344, -95.5516, 0.68", "-77.3999, 33.5544, -96.1955, 0.68", "-78.3894, 34.4198, -97.233, 0.91", "-79.9979, 35.6127, -98.9799, 0.46", "-81.5576, 36.5514, -100.758, 0.68", "-83.4839, 37.4844, -103.183, 0.68", "-85.3164, 38.1928, -105.659, 0.68", "-86.9506, 38.818, -108.059, 0.68", "-88.4464, 39.3546, -110.46, 0.68", "-89.2287, 39.6167, -111.784, 0.91", "-91.3269, 40.1996, -115.385, 0.68", "-92.2026, 40.4291, -116.895, 0.91", "-94.309, 40.9355, -120.66, 0.68", "-95.7147, 41.2979, -123.236, 0.68", "-97.3804, 41.6583, -126.169, 0.68", "-98.3278, 41.8178, -127.737, 0.68", "-99.3466, 41.807, -129.212, 0.68", "-100.575, 41.5869, -130.782, 0.68", "-101.361, 41.2877, -131.562, 0.68", "-103.527, 40.2938, -133.146, 0.68", "-106.219, 38.8797, -134.631, 0.46", "-108.46, 37.8077, -135.598, 0.46", "-109.125, 37.5209, -135.848, 0.46", "-110.339, 37.035, -136.313, 0.91", "-112.266, 36.3037, -137.236, 0.46", "-113.496, 35.893, -137.929, 0.91", "-114.797, 35.4313, -138.832, 0.23", "-116.223, 34.8735, -139.913, 0.68", "-117.67, 34.2739, -141.231, 0.68", "-119.038, 33.7569, -142.73, 0.46", "-119.588, 33.5982, -143.436, 0.68", "-120.991, 33.3502, -145.539, 0.46", "-121.715, 33.3431, -146.86, 0.91", "-123.262, 33.8022, -150.255, 0.23", "-124.399, 34.3358, -152.929, 0.23", "-125.234, 34.8767, -155.015, 0.23", "-125.758, 35.3296, -156.436, 0.23", "-126.475, 36.205, -158.534, 0.23", "-127.29, 37.6495, -161.465, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "23.8424, 4.45667, -13.2562, 0.68", "24.0191, 4.57793, -11.4087, 0.68", "24.4565, 4.68493, -8.69808, 0.68", "24.9787, 4.87379, -5.83731, 0.68", "25.427, 5.1171, -3.62421, 0.68", "26.0058, 5.56751, -0.775311, 0.68", "26.466, 5.96842, 1.3431, 0.68", "27.2393, 6.59555, 4.33441, 0.68", "28.1308, 7.1898, 7.20079, 0.68", "29.0753, 7.6166, 9.8864, 0.68", "29.8699, 7.76587, 12.0925, 0.68", "30.5028, 7.73465, 13.6971, 0.68", "31.2089, 7.52712, 15.1547, 0.68", "32.2834, 6.99768, 17.1345, 0.68", "33.4055, 6.34001, 18.928, 0.68", "34.8122, 5.46062, 20.8159, 0.91", "36.6346, 4.44415, 22.7741, 0.68", "37.7734, 3.9213, 23.8883, 0.68", "39.6994, 3.37155, 25.5991, 0.68", "41.4353, 3.11077, 26.851, 0.68", "43.5557, 2.90073, 28.1273, 0.68", "45.8836, 2.52395, 29.287, 0.68", "48.3807, 2.07748, 30.441, 0.68", "50.9597, 1.53468, 31.5401, 0.68", "53.8493, 0.795023, 32.6672, 0.68", "56.401, 0.100823, 33.6674, 0.68", "60.073, -0.869006, 35.2386, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "23.8424, 4.45667, -13.2562, 0.68", "24.5089, 5.34622, -13.1909, 0.68", "25.2475, 6.33763, -13.065, 0.68", "26.2622, 7.6989, -12.98, 0.68", "27.3198, 9.11767, -12.8913, 0.46", "28.3585, 10.5112, -12.8043, 0.68", "29.497, 12.0385, -12.7089, 0.91", "30.1717, 12.991, -12.585, 0.68", "31.2525, 14.4985, -12.2834, 0.91" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-24.7809, 10.458, -19.3313, 0.68", "-25.5681, 11.4359, -20.3633, 0.68", "-26.1493, 11.9989, -21.0947, 0.68", "-26.997, 12.6142, -22.0991, 0.91", "-27.7628, 13.0723, -22.98, 0.91", "-28.6399, 13.5338, -23.9635, 0.68", "-29.429, 13.8982, -24.8789, 0.91", "-30.0465, 14.1196, -25.6052, 0.46", "-30.8621, 14.4495, -26.6066, 0.68", "-31.5051, 14.8167, -27.5128, 0.46", "-31.8417, 15.1361, -28.0719, 0.68", "-32.613, 16.333, -29.5655, 0.68", "-33.0981, 17.3366, -30.5811, 0.68", "-33.6438, 18.5628, -31.6523, 0.91", "-34.2147, 19.8785, -32.7954, 0.68", "-34.6995, 20.8761, -33.7489, 0.91", "-35.1176, 21.6389, -34.5632, 0.68", "-35.8153, 22.7803, -35.8826, 0.68", "-36.4328, 23.649, -36.9905, 0.91", "-37.3679, 24.7961, -38.6327, 0.91", "-38.2682, 25.7755, -40.1152, 0.91", "-39.0038, 26.5024, -41.3753, 0.91", "-39.9092, 27.3119, -42.9553, 0.91", "-40.7652, 28.014, -44.4788, 0.68", "-41.4495, 28.4664, -45.6036, 0.68", "-42.3489, 28.914, -46.8324, 0.68", "-43.9668, 29.5296, -48.8107, 0.91", "-45.0422, 29.8254, -50.0722, 0.91", "-45.9033, 30.0115, -51.1038, 0.91", "-46.8748, 30.2097, -52.3781, 0.46", "-47.8093, 30.4484, -53.7638, 0.46", "-48.3084, 30.6223, -54.6865, 0.46", "-49.0762, 30.9696, -56.1513, 0.46", "-49.4008, 31.107, -56.7964, 0.46", "-49.8358, 31.2667, -57.6431, 0.46", "-50.4179, 31.376, -58.8111, 0.46", "-51.1485, 31.3885, -60.0561, 0.46", "-51.8956, 31.3369, -61.1442, 0.46", "-52.7113, 31.2502, -62.1575, 0.91", "-54.1424, 31.0918, -63.8003, 0.46", "-55.5306, 30.9627, -65.2604, 0.46", "-57.1743, 30.831, -66.8759, 0.23", "-57.7872, 30.7816, -67.4684, 0.23", "-58.2352, 30.7431, -67.939, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-24.7809, 10.458, -19.3313, 0.23", "-26.0266, 10.9592, -20.5664, 0.23", "-26.3461, 11.0294, -20.8318, 0.46", "-27.6407, 11.2124, -21.6698, 0.46", "-28.8984, 11.3735, -22.3619, 0.23", "-29.9649, 11.4694, -22.9173, 0.23", "-31.3687, 11.5611, -23.6208, 0.68", "-33.4362, 11.5576, -24.5981, 0.23", "-35.1203, 11.5174, -25.3081, 0.46", "-36.3751, 11.4361, -25.7867, 0.23", "-37.7273, 11.3258, -26.2753, 0.23", "-38.8253, 11.2464, -26.7023, 0.46", "-40.1319, 11.1202, -27.2155, 0.23", "-41.6077, 10.9745, -27.7867, 0.46", "-43.1221, 10.7989, -28.3627, 0.23", "-44.3356, 10.6484, -28.7619, 0.46", "-45.846, 10.4808, -29.1592, 0.46", "-47.2504, 10.3699, -29.4935, 0.46", "-48.8066, 10.3369, -29.8608, 0.23", "-50.2267, 10.4033, -30.1084, 0.23", "-51.8298, 10.5889, -30.2444, 0.68", "-53.1298, 10.8094, -30.2048, 0.23", "-55.5592, 11.2938, -30.0074, 0.23", "-57.4438, 11.7813, -29.7925, 0.68", "-59.9916, 12.6048, -29.3318, 0.46", "-61.3441, 13.1546, -29.0144, 0.46", "-63.1229, 14.045, -28.3419, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.19372, 24.2629, -20.0066, 0.68", "6.29409, 23.8769, -21.1702, 0.68", "6.31868, 23.4467, -22.5042, 0.68", "6.32283, 23.0158, -23.9031, 0.68", "6.31889, 22.705, -24.9587, 0.91", "6.34589, 22.2678, -26.5217, 0.91", "6.42172, 21.7187, -28.8441, 0.91", "6.45188, 21.3593, -30.6338, 0.91", "6.49298, 21.2183, -31.6701, 0.91", "6.58999, 21.1641, -32.6116, 0.91", "6.74872, 21.1956, -33.4664, 0.91", "7.11438, 21.3402, -34.8818, 0.91", "7.41164, 21.4341, -35.8522, 0.91", "7.73548, 21.4418, -36.9702, 0.91", "7.84357, 21.3983, -37.5588, 0.91", "7.97078, 21.2296, -39.2256, 0.91", "7.91247, 21.1108, -40.3628, 0.91", "7.70634, 20.9215, -42.0724, 0.91", "7.53783, 20.766, -43.2762, 0.91", "7.3187, 20.5257, -45.007, 0.91", "7.25672, 20.3122, -46.2794, 0.91", "7.39395, 19.9829, -48.0895, 0.91", "7.58474, 19.8415, -49.142, 0.91", "7.9786, 19.7311, -50.777, 0.91", "8.39696, 19.6886, -52.2413, 0.91", "8.97144, 19.6849, -53.9213, 0.91", "9.44863, 19.7085, -55.2472, 0.91", "10.2642, 19.818, -57.3073, 0.91", "10.7764, 19.9321, -58.6458, 0.91", "11.3075, 20.1199, -60.0739, 0.91", "11.8008, 20.352, -61.4509, 0.68", "12.2334, 20.5846, -62.6675, 0.68", "12.6704, 20.8454, -63.8781, 0.68", "12.9824, 21.0232, -64.6792, 0.68", "13.3524, 21.2554, -65.7569, 0.91", "13.9413, 21.6406, -67.4262, 0.91", "14.3701, 22.041, -68.9181, 0.91", "14.7693, 22.6288, -70.7031, 0.91", "14.9632, 23.1207, -72.0001, 0.91", "15.1767, 23.9374, -73.897, 0.91", "15.3336, 25.4344, -77.2678, 0.91" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "6.19372, 24.2629, -20.0066, 0.68", "5.24262, 26.2613, -19.5499, 0.68", "4.74084, 27.3156, -19.309, 0.91" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "60.073, -0.869006, 35.2386, 0.46", "60.3568, -2.43008, 35.4781, 0.46", "60.7155, -4.4266, 36.0058, 0.23", "61.0228, -6.03619, 36.634, 0.23", "61.3954, -7.9626, 37.5722, 0.23", "61.6011, -8.87939, 38.0275, 0.23", "61.9286, -10.3384, 38.752, 0.68", "62.4003, -12.2965, 39.8559, 0.23", "62.8346, -14.0988, 40.9833, 0.46", "63.5539, -16.8907, 42.8068, 0.23", "64.4583, -20.5418, 45.2666, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "60.073, -0.869006, 35.2386, 0.68", "61.2003, -1.09976, 36.051, 0.68", "63.1684, -1.58342, 37.5934, 0.46", "64.2652, -1.97634, 38.4992, 0.46", "65.6753, -2.61602, 39.6304, 0.46", "67.5413, -3.56779, 40.9777, 0.68", "69.305, -4.52355, 42.101, 0.46", "71.136, -5.61335, 43.1047, 0.46", "72.7221, -6.58676, 43.9229, 0.46", "74.382, -7.54052, 44.8417, 0.68", "75.7044, -8.3058, 45.5935, 0.68", "76.6972, -8.96138, 46.308, 0.46", "78.2556, -10.2025, 47.5227, 0.46", "79.6527, -11.4818, 48.8513, 0.46", "81.0712, -12.8179, 50.5623, 0.46", "81.7938, -13.489, 51.6342, 0.46", "83.1664, -14.6627, 53.8631, 0.46", "84.4415, -15.754, 56.0722, 0.46", "85.364, -16.5753, 57.6973, 0.46", "86.3607, -17.4695, 59.5296, 0.46", "87.3289, -18.2159, 61.2982, 0.46", "88.4867, -18.9223, 63.3085, 0.46", "89.0353, -19.1723, 64.2384, 0.46", "89.9839, -19.5151, 65.9299, 0.23", "90.8986, -19.925, 67.535, 0.23", "91.7983, -20.5821, 69.221, 0.46" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "31.2525, 14.4985, -12.2834, 0.68", "33.0959, 16.522, -11.8628, 0.68", "34.2668, 17.7597, -11.9114, 0.46", "35.5259, 19.1361, -12.2574, 0.46", "37.1077, 20.8109, -12.7064, 0.46", "38.3622, 22.1767, -13.0695, 0.46", "39.5964, 23.5742, -13.4313, 0.46", "41.5369, 25.6742, -14.0967, 0.46", "43.928, 28.1541, -14.9112, 0.46", "45.624, 29.8261, -15.4082, 0.46", "47.9559, 32.0105, -15.9725, 0.68", "49.4459, 33.3765, -16.2619, 0.46", "50.3679, 34.2262, -16.4422, 0.46", "52.2911, 35.8892, -16.6903, 0.46", "53.96, 37.3491, -16.8715, 0.46", "54.9396, 38.2815, -17.0191, 0.46", "56.1209, 39.4635, -17.2066, 0.46", "57.8877, 41.4401, -17.5193, 0.68", "60.2427, 44.4304, -18.0811, 0.46", "62.2534, 47.2161, -18.7547, 0.46", "64.139, 49.7943, -19.5409, 0.68", "65.2828, 51.3288, -20.0614, 0.46", "67.3474, 54.0797, -21.0499, 0.46", "68.635, 55.7288, -21.7337, 0.46", "70.2725, 57.7519, -22.7068, 0.68", "72.2954, 60.1279, -23.9719, 0.46", "74.0608, 62.0834, -25.0897, 0.68", "75.3258, 63.4091, -25.884, 0.46", "77.3499, 65.3225, -27.0545, 0.46", "79.0955, 66.9015, -27.8489, 0.46" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "31.2525, 14.4985, -12.2834, 0.68", "32.0432, 14.8971, -12.9785, 0.68", "33.4431, 15.455, -14.1274, 0.68", "34.5375, 15.8064, -15.0099, 0.68", "35.682, 16.1615, -16.0199, 0.46", "37.2978, 16.7415, -17.6732, 0.46", "38.2166, 17.119, -18.7989, 0.46", "38.7321, 17.352, -19.5462, 0.46", "39.0148, 17.5203, -20.0309, 0.46", "39.6225, 18.0129, -21.2459, 0.46", "40.3551, 18.6924, -22.6936, 0.46", "41.4696, 19.697, -24.7229, 0.46", "42.349, 20.3699, -26.1105, 0.46", "43.5026, 21.1434, -27.7213, 0.46", "44.5903, 21.7498, -28.9644, 0.68", "46.303, 22.4706, -30.565, 0.23", "47.6003, 22.8736, -31.6503, 0.46", "49.2556, 23.2272, -32.9326, 0.23", "50.1546, 23.3336, -33.651, 0.46", "51.6761, 23.4663, -34.9872, 0.68", "53.0434, 23.5669, -36.3602, 0.46", "54.1357, 23.6492, -37.726, 0.46", "54.6788, 23.7041, -38.6121, 0.46", "56.0637, 23.7947, -41.6154, 0.46", "56.5876, 23.7662, -43.0245, 0.46", "56.9372, 23.6965, -44.133, 0.46", "57.4623, 23.4874, -45.7953, 0.46", "58.4428, 23.0023, -48.4002, 0.46", "58.9865, 22.7047, -49.559, 0.46", "59.6993, 22.245, -50.7199, 0.23", "60.3643, 21.8334, -51.6038, 0.23", "62.0234, 20.8751, -53.4362, 0.23", "63.1307, 20.2537, -54.4521, 0.46", "64.6507, 19.3982, -55.6645, 0.23", "65.8184, 18.7843, -56.5624, 0.68", "67.0745, 18.1675, -57.5006, 0.23", "67.8151, 17.8113, -58.0286, 0.46", "68.9201, 17.298, -58.726, 0.23", "69.5029, 17.0082, -59.0845, 0.23", "71.2199, 16.1531, -60.1224, 0.23", "71.9604, 15.7957, -60.5771, 0.46", "73.5945, 14.9945, -61.5455, 0.23", "74.6214, 14.5266, -62.181, 0.23", "75.5888, 14.0869, -62.8119, 0.46" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-58.2352, 30.7431, -67.939, 0.46", "-59.2959, 30.6349, -68.6449, 0.46", "-61.2699, 30.4765, -69.9416, 0.68", "-62.5672, 30.4419, -70.8994, 0.46", "-63.27, 30.4841, -71.5038, 0.91", "-63.6421, 30.5503, -71.8542, 0.23", "-64.2839, 30.7206, -72.4649, 0.23", "-65.2461, 31.1026, -73.4311, 0.68", "-66.368, 31.6787, -74.7398, 0.46", "-67.2114, 32.1018, -75.8453, 0.46", "-67.9446, 32.4406, -76.8545, 0.46", "-68.8032, 32.7915, -78.0025, 0.91", "-70.1132, 33.2794, -79.7104, 0.91", "-71.5708, 33.7181, -81.4631, 0.46", "-72.9351, 34.0032, -82.9345, 0.46", "-74.0058, 34.1803, -83.9526, 0.23", "-74.9731, 34.3382, -84.7302, 0.46", "-76.3506, 34.6129, -85.6277, 0.23", "-77.1432, 34.7893, -86.047, 0.46", "-78.4002, 35.1065, -86.5511, 0.46", "-80.3471, 35.6678, -87.1282, 0.46", "-82.5967, 36.3455, -87.6429, 0.46", "-83.589, 36.6523, -87.817, 0.46" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-58.2352, 30.7431, -67.939, 0.23", "-56.992, 29.8618, -70.0602, 0.23", "-55.9288, 29.1082, -71.8741, 0.23", "-55.5035, 28.8067, -72.5997, 0.46", "-54.917, 28.391, -73.6003, 0.23", "-54.3778, 28.0087, -74.5203, 0.46" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "15.3336, 25.4344, -77.2678, 0.68", "15.551, 25.5415, -79.2314, 0.68", "15.8869, 25.5404, -81.6896, 0.68", "16.1873, 25.4726, -83.2467, 0.68", "16.7594, 25.3132, -85.4188, 0.68", "17.3316, 25.1481, -87.1977, 0.68", "18.1999, 24.9055, -89.414, 0.68", "19.5232, 24.4638, -91.9875, 0.68", "20.547, 24.0823, -93.4979, 0.68", "22.3488, 23.4229, -95.5351, 0.68", "23.5219, 23.0125, -96.5238, 0.68", "25.0759, 22.5206, -97.6663, 0.46", "26.4387, 22.0836, -98.4815, 0.68", "28.1192, 21.5695, -99.3708, 0.46", "30.602, 20.828, -100.682, 0.68", "32.7587, 20.1888, -101.916, 0.46", "35.6394, 19.3257, -103.789, 0.46", "38.0428, 18.5811, -105.601, 0.46", "40.042, 17.9292, -107.342, 0.46", "41.4175, 17.4124, -108.756, 0.46", "42.9475, 16.7128, -110.557, 0.46", "43.7162, 16.2848, -111.621, 0.46", "44.8171, 15.5375, -113.305, 0.23", "46.0286, 14.5928, -115.36, 0.23", "47.043, 13.6022, -117.145, 0.68", "47.7672, 12.8061, -118.441, 0.68", "48.9491, 11.3757, -120.32, 0.68", "49.9643, 10.0247, -121.673, 0.68", "50.7029, 8.96229, -122.626, 0.68", "51.1832, 8.23556, -123.164, 0.68", "51.7874, 7.31462, -123.685, 0.68", "53.6378, 4.5473, -124.792, 0.23", "55.5159, 1.79643, -125.286, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "15.3336, 25.4344, -77.2678, 0.68", "13.4842, 26.6219, -79.4931, 0.68", "11.277, 27.9039, -82.167, 0.68", "9.59447, 28.7507, -84.4523, 0.68", "7.91436, 29.4202, -86.9033, 0.68", "6.74141, 29.822, -88.7406, 0.91", "5.22759, 30.2271, -91.1755, 0.91", "4.14953, 30.371, -92.9964, 0.91", "2.18168, 30.3099, -96.6088, 0.91", "0.952604, 30.1385, -99.0648, 0.91", "-0.299653, 29.902, -101.747, 0.91", "-1.42093, 29.7134, -104.222, 0.68", "-2.35936, 29.5488, -106.317, 0.68", "-3.55477, 29.4062, -108.868, 0.68", "-5.13655, 29.3215, -112.041, 0.68", "-6.91701, 29.3335, -115.637, 0.68", "-8.04435, 29.3624, -117.893, 0.68" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "4.74084, 27.3156, -19.309, 0.68", "3.65163, 27.9306, -20.237, 0.68", "2.09247, 29.034, -21.7185, 0.68", "1.01361, 29.9254, -22.7952, 0.68", "-0.260291, 30.9951, -23.9342, 0.68", "-1.28219, 31.8623, -24.8312, 0.91", "-3.51695, 33.7624, -26.7588, 0.68", "-4.73333, 34.8281, -27.7836, 0.68", "-5.75981, 35.7534, -28.5724, 0.68", "-7.52472, 37.3379, -29.81, 0.68", "-9.48501, 39.0079, -31.0294, 0.68", "-10.5449, 39.8885, -31.6415, 0.68", "-11.6704, 40.7482, -32.1993, 0.68", "-12.8153, 41.5518, -32.7068, 0.91", "-14.1808, 42.487, -33.2883, 0.68", "-15.9337, 43.7027, -34.0609, 0.68", "-17.6623, 44.8732, -34.7607, 0.46", "-18.8779, 45.6508, -35.2771, 0.46", "-20.0811, 46.4074, -35.8277, 0.68", "-21.2789, 47.1335, -36.4194, 0.68", "-22.5901, 47.8698, -37.0834, 0.68", "-23.4721, 48.383, -37.5863, 0.68", "-25.068, 49.2882, -38.5372, 0.68", "-26.4116, 50.0453, -39.4121, 0.68", "-27.3756, 50.5396, -40.0868, 0.68", "-29.1152, 51.404, -41.317, 0.68", "-30.9457, 52.3014, -42.6094, 0.68", "-33.2288, 53.4013, -44.2512, 0.46", "-35.7988, 54.6152, -46.1557, 0.46", "-37.8773, 55.4854, -47.7101, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.74084, 27.3156, -19.309, 0.91", "5.39928, 29.0344, -21.1705, 0.91", "6.08048, 30.8126, -23.0963, 0.91", "6.87194, 32.8786, -25.3338, 0.91", "7.16901, 33.654, -26.1736, 0.91" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "79.0955, 66.9015, -27.8489, 0.46", "80.3702, 67.8321, -29.2762, 0.46", "82.2496, 69.3331, -31.3929, 0.23", "83.4791, 70.3329, -32.7765, 0.23", "84.3018, 71.0445, -33.7487, 0.46", "86.1025, 72.6349, -36.0564, 0.23", "86.9648, 73.3815, -37.2153, 0.46", "87.6702, 73.9301, -38.2392, 0.68", "88.9061, 74.6841, -40.2154, 0.46", "90.0425, 75.2165, -42.0826, 0.68", "91.3952, 75.7094, -44.315, 0.46", "92.7674, 76.0841, -46.6665, 0.68", "94.6152, 76.3307, -49.9256, 0.68", "96.2276, 76.3638, -52.6765, 0.68", "97.8487, 76.325, -55.217, 0.23", "99.2735, 76.2536, -57.2495, 0.46", "101.348, 76.1636, -60.1198, 0.46", "103.848, 76.0947, -63.5779, 0.46", "106.1, 76.13, -66.7791, 0.46", "107.515, 76.1828, -68.9483, 0.23", "107.835, 76.1919, -69.4915, 0.46", "109.636, 76.2888, -72.7899, 0.46", "110.768, 76.3936, -75.1493, 0.46", "111.91, 76.4779, -77.878, 0.46", "113.517, 76.4006, -82.2188, 0.23", "114.426, 76.2463, -84.7957, 0.23", "115.207, 76.0382, -87.1055, 0.68", "116.003, 75.7895, -89.3305, 0.68", "117.41, 75.3074, -93.224, 0.68", "118.691, 74.8849, -96.4938, 0.68", "120.521, 74.3491, -100.792, 0.68", "122.009, 73.9835, -103.823, 0.68", "123.655, 73.6078, -107.0, 0.23", "125.035, 73.4027, -109.484, 0.23", "125.997, 73.358, -111.191, 0.23", "126.714, 73.3756, -112.332, 0.23", "129.439, 73.5589, -115.527, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "79.0955, 66.9015, -27.8489, 0.46", "81.0709, 67.7916, -27.1829, 0.46", "82.7506, 68.5769, -26.6901, 0.46", "85.0616, 69.707, -26.1228, 0.68", "86.634, 70.4407, -25.8384, 0.46", "88.3702, 71.2181, -25.5898, 0.46", "89.5238, 71.7628, -25.4609, 0.46", "90.4288, 72.2131, -25.4313, 0.46", "92.2018, 73.2044, -25.5419, 0.23", "94.0312, 74.2773, -25.7713, 0.23", "95.0612, 74.8975, -25.9463, 0.23", "96.4732, 75.785, -26.1953, 0.46", "98.1023, 76.8733, -26.4737, 0.46", "99.3779, 77.7536, -26.671, 0.46", "101.337, 79.1365, -27.0081, 0.23", "102.729, 80.1488, -27.2807, 0.46", "103.864, 80.9473, -27.5596, 0.68", "105.33, 81.912, -27.9701, 0.46", "106.923, 82.9708, -28.4801, 0.46", "108.604, 84.0553, -29.0194, 0.23", "110.115, 84.9994, -29.5383, 0.46", "111.088, 85.5667, -29.8897, 0.46", "112.419, 86.2846, -30.4373, 0.23", "113.199, 86.6981, -30.794, 0.46", "114.976, 87.635, -31.5891, 0.23", "116.606, 88.4797, -32.1961, 0.23", "118.175, 89.3232, -32.7447, 0.46", "119.662, 90.1553, -33.2129, 0.46", "121.663, 91.2665, -33.793, 0.23", "123.792, 92.4613, -34.326, 0.23", "126.32, 93.8834, -34.9037, 0.23", "128.408, 95.0172, -35.2821, 0.46", "129.803, 95.7114, -35.4746, 0.23", "131.336, 96.4492, -35.6842, 0.46", "133.366, 97.3305, -35.9662, 0.46", "135.211, 98.084, -36.2576, 0.46", "137.23, 98.8179, -36.624, 0.46", "139.96, 99.7018, -37.1324, 0.46", "142.004, 100.342, -37.5081, 0.46", "143.919, 100.899, -37.8991, 0.23", "145.73, 101.358, -38.3351, 0.46", "148.463, 101.979, -39.1143, 0.23", "150.258, 102.337, -39.7214, 0.46", "152.177, 102.689, -40.4325, 0.23", "154.766, 103.081, -41.4309, 0.23", "156.743, 103.362, -42.3165, 0.23", "159.098, 103.591, -43.5378, 0.23", "160.26, 103.696, -44.2791, 0.46" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-83.589, 36.6523, -87.817, 0.23", "-84.6732, 38.1254, -89.8118, 0.23", "-85.4801, 39.2217, -91.2962, 0.23", "-86.4179, 40.4961, -93.0217, 0.23", "-86.9937, 41.2784, -94.0811, 0.46", "-87.6882, 42.222, -95.3588, 0.23", "-89.2053, 44.2834, -98.15, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-83.589, 36.6523, -87.817, 0.23", "-84.5274, 34.3887, -88.8477, 0.23", "-85.4114, 32.2565, -89.8186, 0.23", "-86.0233, 30.7802, -90.4908, 0.46", "-87.1336, 28.1022, -91.7103, 0.23", "-88.352, 25.1632, -93.0485, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "7.16901, 33.654, -26.1736, 0.46", "6.20612, 35.3959, -28.2575, 0.46", "5.33224, 37.0478, -29.9873, 0.46", "4.35912, 39.0752, -32.0196, 0.46", "3.82974, 40.3436, -33.2115, 0.46", "3.11915, 42.1713, -34.907, 0.46", "2.471, 43.8053, -36.4465, 0.46", "1.95981, 45.442, -37.8545, 0.68", "1.40572, 47.3345, -39.3778, 0.68", "0.930297, 48.9321, -40.6485, 0.91", "0.256503, 51.1599, -42.2587, 0.68", "-0.453737, 53.4389, -43.8281, 0.68", "-1.20214, 55.5967, -45.2813, 0.68", "-1.90359, 57.4246, -46.4886, 0.68", "-2.64717, 59.1834, -47.6205, 0.68", "-3.76963, 61.577, -49.2009, 0.68", "-4.82837, 63.6367, -50.549, 0.68", "-6.54813, 66.5479, -52.5641, 0.68", "-7.45834, 67.8001, -53.5579, 0.68", "-8.95935, 69.6433, -55.2453, 0.68", "-9.78171, 70.5126, -56.1691, 0.68", "-10.6947, 71.3265, -57.1737, 0.91", "-11.7649, 72.1317, -58.2059, 0.68", "-13.3212, 73.1574, -59.6024, 0.91", "-15.413, 74.5057, -61.6494, 0.46", "-17.561, 76.0076, -63.8442, 0.46", "-19.0438, 77.1729, -65.413, 0.23", "-19.6962, 77.7331, -66.154, 0.46", "-21.4082, 79.3023, -68.2268, 0.46", "-23.2589, 80.9791, -70.3903, 0.46", "-24.6208, 82.2892, -72.0865, 0.46", "-25.724, 83.5286, -73.6941, 0.46", "-26.9097, 85.0804, -75.6824, 0.46", "-28.3957, 87.0532, -78.1987, 0.46", "-29.5247, 88.5223, -80.0337, 0.46", "-31.2117, 90.5857, -82.6905, 0.46", "-32.278, 91.9348, -84.6332, 0.46", "-33.1624, 93.3092, -86.6274, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "7.16901, 33.654, -26.1736, 0.68", "7.986, 34.3352, -27.162, 0.68", "8.98526, 35.1023, -27.968, 0.68", "9.97294, 35.8347, -28.6188, 0.68", "10.7324, 36.3924, -29.1122, 0.68", "11.6762, 37.0798, -29.775, 0.46", "12.7076, 37.8811, -30.577, 0.68", "13.6785, 38.6572, -31.3122, 0.68", "14.3546, 39.2249, -31.8068, 0.46", "15.2348, 40.0559, -32.5815, 0.91", "15.9684, 40.859, -33.3881, 0.91", "16.8769, 41.9699, -34.6167, 0.68", "17.3602, 42.6709, -35.4312, 0.68", "17.7442, 43.2793, -36.1583, 0.91", "18.6844, 44.8018, -37.9815, 0.68", "19.2079, 45.6748, -38.9754, 0.68", "19.5452, 46.2117, -39.5916, 0.68", "20.2898, 47.2476, -40.8578, 0.68", "20.7858, 47.88, -41.7054, 0.68", "21.1881, 48.3503, -42.3912, 0.68", "21.7494, 48.8886, -43.2583, 0.68", "22.3721, 49.4207, -44.3093, 0.68", "22.8547, 49.7953, -45.1355, 0.68", "23.7011, 50.3313, -46.5602, 0.68", "24.1117, 50.5341, -47.2469, 0.68", "24.7857, 50.7748, -48.2976, 0.68", "25.9861, 51.0707, -50.0473, 0.68", "26.7037, 51.1827, -50.9884, 0.68", "27.589, 51.2103, -52.0454, 0.68", "28.2128, 51.175, -52.7257, 0.68", "29.6131, 51.0254, -54.2235, 0.68", "30.161, 50.9557, -54.7874, 0.68", "31.4779, 50.7644, -55.9766, 0.68", "32.5834, 50.596, -56.9141, 0.68", "33.7855, 50.4421, -57.8868, 0.68", "34.5859, 50.3863, -58.5595, 0.68", "35.1993, 50.3432, -59.1644, 0.68", "36.5962, 50.3142, -60.652, 0.68", "37.1426, 50.3068, -61.2606, 0.68", "38.5402, 50.2542, -62.7943, 0.68", "39.5773, 50.1857, -63.9567, 0.68", "41.2545, 50.0446, -65.9816, 0.68", "42.5502, 49.9123, -67.7351, 0.23", "43.1344, 49.8427, -68.6234, 0.23", "43.7394, 49.7394, -69.548, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_34", "dend_13", "dend_4", "dend_3", "dend_0", "dend_39", "dend_38", "dend_36", "dend_35", "dend_23", "dend_14", "dend_6", "dend_5", "dend_2", "dend_1", "dend_25", "dend_24", "dend_20", "dend_15", "dend_8", "dend_7", "dend_31", "dend_26", "dend_22", "dend_21", "dend_17", "dend_16", "dend_10", "dend_9", "dend_33", "dend_32", "dend_30", "dend_27", "dend_19", "dend_18", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_37", "dend_34", "dend_13", "dend_4", "dend_3", "dend_0", "dend_39", "dend_38", "dend_36", "dend_35", "dend_23", "dend_14", "dend_6", "dend_5", "dend_2", "dend_1", "dend_25", "dend_24", "dend_20", "dend_15", "dend_8", "dend_7", "dend_31", "dend_26", "dend_22", "dend_21", "dend_17", "dend_16", "dend_10", "dend_9", "dend_33", "dend_32", "dend_30", "dend_27", "dend_19", "dend_18", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_DAC_1e259ec3b0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_34, dend_13, dend_4, dend_3, dend_0, dend_39, dend_38, dend_36, dend_35, dend_23, dend_14, dend_6, dend_5, dend_2, dend_1, dend_25, dend_24, dend_20, dend_15, dend_8, dend_7, dend_31, dend_26, dend_22, dend_21, dend_17, dend_16, dend_10, dend_9, dend_33, dend_32, dend_30, dend_27, dend_19, dend_18, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_34, dend_13, dend_4, dend_3, dend_0, dend_39, dend_38, dend_36, dend_35, dend_23, dend_14, dend_6, dend_5, dend_2, dend_1, dend_25, dend_24, dend_20, dend_15, dend_8, dend_7, dend_31, dend_26, dend_22, dend_21, dend_17, dend_16, dend_10, dend_9, dend_33, dend_32, dend_30, dend_27, dend_19, dend_18, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_37(0), soma_0(0.45000009067800606)
    connect dend_34(0), soma_0(0.45000009067800606)
    connect dend_13(0), soma_0(0.45000009067800606)
    connect dend_4(0), soma_0(0.45000009067800606)
    connect dend_3(0), soma_0(0.45000009067800606)
    connect dend_0(0), soma_0(0.45000009067800606)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.75396, -1.69873, 0.0, 3.08762 ) }
    soma_0 { pt3dadd( -6.06994, -1.48169, 0.0, 5.50494 ) }
    soma_0 { pt3dadd( -5.38592, -1.26466, 0.0, 7.586 ) }
    soma_0 { pt3dadd( -4.7019, -1.04762, 0.0, 9.07928 ) }
    soma_0 { pt3dadd( -4.01788, -0.83058, 0.0, 9.80903 ) }
    soma_0 { pt3dadd( -3.33386, -0.613542, 0.0, 10.4869 ) }
    soma_0 { pt3dadd( -2.64984, -0.396504, 0.0, 11.0081 ) }
    soma_0 { pt3dadd( -1.96582, -0.179466, 0.0, 11.2696 ) }
    soma_0 { pt3dadd( -1.28181, 0.0375719, 0.0, 11.2491 ) }
    soma_0 { pt3dadd( -0.597787, 0.25461, 0.0, 11.2286 ) }
    soma_0 { pt3dadd( 0.0862322, 0.471648, 0.0, 10.9284 ) }
    soma_0 { pt3dadd( 0.770251, 0.688686, 0.0, 10.6193 ) }
    soma_0 { pt3dadd( 1.45427, 0.905724, 0.0, 10.3107 ) }
    soma_0 { pt3dadd( 2.13829, 1.12276, 0.0, 10.0061 ) }
    soma_0 { pt3dadd( 2.82231, 1.3398, 0.0, 9.46628 ) }
    soma_0 { pt3dadd( 3.50633, 1.55684, 0.0, 8.90647 ) }
    soma_0 { pt3dadd( 4.19035, 1.77388, 0.0, 8.28779 ) }
    soma_0 { pt3dadd( 4.87437, 1.99091, 0.0, 7.49413 ) }
    soma_0 { pt3dadd( 5.55838, 2.20795, 0.0, 6.16104 ) }
    soma_0 { pt3dadd( 6.2424, 2.42499, 0.0, 4.63664 ) }
    soma_0 { pt3dadd( 6.92642, 2.64203, 0.0, 2.62676 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -0.00559795, 4.03038, 12.17, 1.14 ) }
    dend_37 { pt3dadd( 0.443433, 4.91453, 12.2497, 1.14 ) }
    dend_37 { pt3dadd( 1.01813, 6.48929, 12.1024, 1.37 ) }
    dend_37 { pt3dadd( 1.52164, 8.30934, 11.8877, 1.14 ) }
    dend_37 { pt3dadd( 1.96532, 10.1552, 11.6612, 0.91 ) }
    dend_37 { pt3dadd( 2.39661, 12.5844, 11.5236, 0.91 ) }
    dend_37 { pt3dadd( 2.52665, 14.3286, 11.5611, 0.91 ) }
    dend_37 { pt3dadd( 2.63281, 16.9248, 11.5747, 0.91 ) }
    dend_37 { pt3dadd( 2.59144, 19.0461, 11.5304, 0.91 ) }
    dend_37 { pt3dadd( 2.46505, 20.4769, 11.4841, 1.37 ) }
    dend_37 { pt3dadd( 1.92799, 23.2885, 11.6017, 1.37 ) }
    dend_37 { pt3dadd( 1.07511, 26.3465, 12.2832, 0.91 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 33/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.9044, 4.73763, -3.28, 0.91 ) }
    dend_34 { pt3dadd( 6.9044, 4.73763, -3.28, 0.91 ) }
    dend_34 { pt3dadd( 8.16243, 6.12713, -3.44745, 0.91 ) }
    dend_34 { pt3dadd( 9.42938, 7.5265, -3.61609, 0.91 ) }
    dend_34 { pt3dadd( 10.5276, 8.73955, -3.76228, 0.91 ) }
    dend_34 { pt3dadd( 11.9022, 10.2578, -3.94524, 0.68 ) }
    dend_34 { pt3dadd( 12.6847, 11.1221, -4.0494, 0.91 ) }
    dend_34 { pt3dadd( 14.0099, 12.5891, -4.24365, 0.91 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.0044, 1.94963, -2.71, 5.24 ) }
    dend_13 { pt3dadd( 6.42659, 2.01386, -3.98632, 4.33 ) }
    dend_13 { pt3dadd( 6.74333, 2.06204, -4.94388, 4.33 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.9156, 1.33463, -4.53, 1.14 ) }
    dend_4 { pt3dadd( -4.9156, 1.33463, -4.53, 1.14 ) }
    dend_4 { pt3dadd( -6.07404, 1.57986, -4.8825, 1.14 ) }
    dend_4 { pt3dadd( -7.61881, 1.83894, -5.39983, 1.14 ) }
    dend_4 { pt3dadd( -9.60871, 2.07996, -6.1683, 0.91 ) }
    dend_4 { pt3dadd( -10.9257, 2.17875, -6.72194, 1.14 ) }
    dend_4 { pt3dadd( -12.158, 2.27117, -7.23993, 1.14 ) }
    dend_4 { pt3dadd( -13.4778, 2.33988, -7.82277, 0.91 ) }
    dend_4 { pt3dadd( -14.7089, 2.34396, -8.4218, 0.91 ) }
    dend_4 { pt3dadd( -15.8876, 2.25499, -9.04899, 0.91 ) }
    dend_4 { pt3dadd( -17.1362, 2.05849, -9.80631, 0.91 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.2444, -2.78587, 8.47, 0.68 ) }
    dend_3 { pt3dadd( 4.87586, -3.82651, 8.01289, 0.68 ) }
    dend_3 { pt3dadd( 5.39023, -4.71202, 7.63963, 0.68 ) }
    dend_3 { pt3dadd( 5.87592, -5.5961, 7.29391, 0.68 ) }
    dend_3 { pt3dadd( 6.57679, -7.07826, 6.78834, 0.68 ) }
    dend_3 { pt3dadd( 6.92174, -7.93029, 6.5585, 0.68 ) }
    dend_3 { pt3dadd( 7.28972, -9.02458, 6.35557, 0.46 ) }
    dend_3 { pt3dadd( 7.55528, -10.1616, 6.26488, 0.46 ) }
    dend_3 { pt3dadd( 7.66302, -10.8671, 6.28748, 0.68 ) }
    dend_3 { pt3dadd( 7.72605, -12.267, 6.45945, 0.46 ) }
    dend_3 { pt3dadd( 7.66479, -13.4136, 6.68345, 0.68 ) }
    dend_3 { pt3dadd( 7.52972, -14.7433, 7.02685, 0.68 ) }
    dend_3 { pt3dadd( 7.42299, -15.6437, 7.2905, 0.68 ) }
    dend_3 { pt3dadd( 7.31991, -16.5435, 7.58909, 0.46 ) }
    dend_3 { pt3dadd( 7.2489, -17.7861, 7.99658, 0.68 ) }
    dend_3 { pt3dadd( 7.27098, -18.9128, 8.36333, 0.46 ) }
    dend_3 { pt3dadd( 7.37593, -20.063, 8.69856, 0.68 ) }
    dend_3 { pt3dadd( 7.56725, -21.2336, 9.00489, 0.91 ) }
    dend_3 { pt3dadd( 7.88978, -22.7378, 9.3869, 0.46 ) }
    dend_3 { pt3dadd( 8.30301, -24.1176, 9.74309, 0.46 ) }
    dend_3 { pt3dadd( 8.77409, -25.3798, 10.0479, 0.46 ) }
    dend_3 { pt3dadd( 9.11786, -26.2156, 10.2453, 0.46 ) }
    dend_3 { pt3dadd( 9.87817, -28.0172, 10.6314, 0.23 ) }
    dend_3 { pt3dadd( 10.078, -28.4703, 10.7254, 0.91 ) }
    dend_3 { pt3dadd( 10.9495, -30.4238, 11.1011, 0.46 ) }
    dend_3 { pt3dadd( 11.7044, -32.2306, 11.4617, 0.46 ) }
    dend_3 { pt3dadd( 12.3819, -33.9323, 11.7921, 0.23 ) }
    dend_3 { pt3dadd( 12.9727, -35.572, 12.1308, 0.68 ) }
    dend_3 { pt3dadd( 13.2374, -36.385, 12.2879, 0.23 ) }
    dend_3 { pt3dadd( 13.4434, -37.0633, 12.4121, 0.46 ) }
    dend_3 { pt3dadd( 13.8637, -38.6833, 12.6797, 0.23 ) }
    dend_3 { pt3dadd( 14.2266, -40.1921, 12.9374, 0.23 ) }
    dend_3 { pt3dadd( 14.6699, -42.3084, 13.281, 0.23 ) }
    dend_3 { pt3dadd( 14.8819, -43.5329, 13.4985, 0.91 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 89/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.8756, -5.04087, 1.64, 0.91 ) }
    dend_0 { pt3dadd( -3.8756, -5.04087, 1.64, 0.91 ) }
    dend_0 { pt3dadd( -4.26739, -6.65556, 0.987105, 0.91 ) }
    dend_0 { pt3dadd( -4.75004, -8.64468, 0.182809, 0.91 ) }
    dend_0 { pt3dadd( -5.15209, -10.3015, -0.487163, 1.14 ) }
    dend_0 { pt3dadd( -5.58386, -12.081, -1.20668, 0.91 ) }
    dend_0 { pt3dadd( -6.00932, -13.8344, -1.91568, 0.91 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 96/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.92642, 2.64203, 0.0, 0.504625 ) }
    axon_0 { pt3dadd( 21.224, 7.17861, 0.0, 0.504625 ) }
    axon_0 { pt3dadd( 35.5215, 11.7152, 0.0, 0.504625 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 99/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 1.07511, 26.3465, 12.2832, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( -0.0173529, 26.3731, 12.8308, 0.68 ) }
    dend_39 { pt3dadd( -1.58107, 26.5641, 14.0758, 0.68 ) }
    dend_39 { pt3dadd( -2.48688, 26.67, 15.0756, 0.68 ) }
    dend_39 { pt3dadd( -3.72385, 26.7316, 16.6096, 0.68 ) }
    dend_39 { pt3dadd( -4.17237, 26.6783, 17.3121, 0.68 ) }
    dend_39 { pt3dadd( -5.01432, 26.3903, 18.9144, 0.68 ) }
    dend_39 { pt3dadd( -5.87794, 25.7478, 21.2061, 0.68 ) }
    dend_39 { pt3dadd( -6.45976, 25.0933, 23.2023, 0.68 ) }
    dend_39 { pt3dadd( -6.73654, 24.5828, 24.4281, 0.68 ) }
    dend_39 { pt3dadd( -7.20939, 23.2621, 27.022, 0.68 ) }
    dend_39 { pt3dadd( -7.4626, 22.3658, 28.4692, 0.68 ) }
    dend_39 { pt3dadd( -7.87686, 20.8486, 30.5774, 0.68 ) }
    dend_39 { pt3dadd( -8.12655, 19.9717, 31.617, 0.68 ) }
    dend_39 { pt3dadd( -8.49185, 18.7735, 33.0198, 0.68 ) }
    dend_39 { pt3dadd( -8.86407, 17.7506, 34.2683, 0.68 ) }
    dend_39 { pt3dadd( -9.28749, 16.711, 35.4389, 0.46 ) }
    dend_39 { pt3dadd( -9.52201, 16.0763, 36.0898, 0.46 ) }
    dend_39 { pt3dadd( -9.98771, 14.2894, 37.5597, 0.23 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 18/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 1.07511, 26.3465, 12.2832, 0.68 ) }
    dend_38 { pt3dadd( 1.36559, 28.356, 11.7196, 0.68 ) }
    dend_38 { pt3dadd( 1.85745, 30.9724, 11.058, 0.68 ) }
    dend_38 { pt3dadd( 2.30226, 32.8311, 10.6715, 0.68 ) }
    dend_38 { pt3dadd( 2.97468, 35.2675, 10.2175, 0.68 ) }
    dend_38 { pt3dadd( 3.31935, 36.4711, 10.0169, 0.91 ) }
    dend_38 { pt3dadd( 3.8744, 38.4475, 9.7186, 0.91 ) }
    dend_38 { pt3dadd( 4.57378, 40.7026, 9.43935, 0.91 ) }
    dend_38 { pt3dadd( 5.34501, 42.8162, 9.20632, 0.91 ) }
    dend_38 { pt3dadd( 5.73683, 43.9212, 9.08876, 0.91 ) }
    dend_38 { pt3dadd( 6.31983, 45.7844, 8.91333, 0.68 ) }
    dend_38 { pt3dadd( 6.64185, 46.8576, 8.81853, 0.68 ) }
    dend_38 { pt3dadd( 7.09193, 48.2001, 8.71592, 0.68 ) }
    dend_38 { pt3dadd( 7.94757, 50.4848, 8.41047, 0.68 ) }
    dend_38 { pt3dadd( 8.77939, 52.6448, 7.89911, 0.68 ) }
    dend_38 { pt3dadd( 9.52796, 54.5707, 7.28608, 0.68 ) }
    dend_38 { pt3dadd( 9.7209, 55.0343, 7.12496, 0.91 ) }
    dend_38 { pt3dadd( 10.8078, 57.5602, 6.13056, 0.68 ) }
    dend_38 { pt3dadd( 12.0488, 60.5942, 4.80581, 0.68 ) }
    dend_38 { pt3dadd( 13.0331, 63.0336, 3.67508, 0.68 ) }
    dend_38 { pt3dadd( 13.7834, 64.9437, 2.75069, 0.68 ) }
    dend_38 { pt3dadd( 14.5327, 66.8258, 1.77414, 0.46 ) }
    dend_38 { pt3dadd( 15.3973, 69.1266, 0.573265, 0.46 ) }
    dend_38 { pt3dadd( 16.1645, 71.5097, -0.660667, 0.68 ) }
    dend_38 { pt3dadd( 16.6501, 73.1116, -1.46312, 0.46 ) }
    dend_38 { pt3dadd( 17.3474, 75.4897, -2.75769, 0.46 ) }
    dend_38 { pt3dadd( 17.9382, 77.5982, -4.0032, 0.46 ) }
    dend_38 { pt3dadd( 18.3958, 79.2077, -5.09165, 0.46 ) }
    dend_38 { pt3dadd( 18.9217, 80.9569, -6.36361, 0.68 ) }
    dend_38 { pt3dadd( 19.5189, 83.0188, -8.06164, 0.46 ) }
    dend_38 { pt3dadd( 20.0969, 85.3673, -10.0742, 0.91 ) }
    dend_38 { pt3dadd( 20.406, 86.885, -11.4946, 0.46 ) }
    dend_38 { pt3dadd( 20.8396, 89.0922, -13.4794, 0.46 ) }
    dend_38 { pt3dadd( 21.4173, 91.5679, -15.919, 0.23 ) }
    dend_38 { pt3dadd( 22.1262, 94.0024, -18.4638, 0.23 ) }
    dend_38 { pt3dadd( 22.6875, 95.4747, -20.0357, 0.23 ) }
    dend_38 { pt3dadd( 23.681, 98.005, -22.7852, 0.23 ) }
    dend_38 { pt3dadd( 24.6242, 100.398, -25.4593, 0.23 ) }
    dend_38 { pt3dadd( 26.4839, 104.941, -30.4711, 0.23 ) }
    dend_38 { pt3dadd( 27.0594, 106.06, -31.7651, 0.23 ) }
    dend_38 { pt3dadd( 28.6681, 108.389, -34.5538, 0.46 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 59/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 14.0099, 12.5891, -4.24365, 0.91 ) }
    dend_36 { pt3dadd( 15.0316, 13.3804, -4.93722, 0.91 ) }
    dend_36 { pt3dadd( 16.9292, 15.14, -6.44312, 0.91 ) }
    dend_36 { pt3dadd( 18.3213, 16.568, -7.70761, 0.68 ) }
    dend_36 { pt3dadd( 19.2715, 17.7298, -8.75322, 0.68 ) }
    dend_36 { pt3dadd( 20.0287, 18.78, -9.7216, 0.68 ) }
    dend_36 { pt3dadd( 20.7461, 19.7705, -10.658, 0.68 ) }
    dend_36 { pt3dadd( 21.7805, 21.2657, -12.1341, 0.68 ) }
    dend_36 { pt3dadd( 22.808, 22.8801, -13.694, 0.91 ) }
    dend_36 { pt3dadd( 23.9917, 24.9291, -15.5734, 0.68 ) }
    dend_36 { pt3dadd( 24.9572, 26.6644, -17.0568, 0.68 ) }
    dend_36 { pt3dadd( 25.7166, 27.9265, -18.1125, 0.68 ) }
    dend_36 { pt3dadd( 26.4121, 28.9749, -19.0102, 0.68 ) }
    dend_36 { pt3dadd( 27.3368, 30.3383, -20.204, 0.68 ) }
    dend_36 { pt3dadd( 28.1811, 31.6445, -21.3226, 0.68 ) }
    dend_36 { pt3dadd( 28.7922, 32.5943, -22.1398, 0.68 ) }
    dend_36 { pt3dadd( 30.158, 34.8574, -24.1033, 0.91 ) }
    dend_36 { pt3dadd( 31.5659, 37.4008, -26.3038, 0.68 ) }
    dend_36 { pt3dadd( 32.351, 38.8308, -27.622, 0.68 ) }
    dend_36 { pt3dadd( 33.1797, 40.2329, -29.0764, 0.68 ) }
    dend_36 { pt3dadd( 33.9933, 41.4392, -30.4927, 0.68 ) }
    dend_36 { pt3dadd( 34.7879, 42.4486, -31.7736, 0.68 ) }
    dend_36 { pt3dadd( 35.6824, 43.3654, -32.9781, 0.91 ) }
    dend_36 { pt3dadd( 37.5908, 44.8502, -35.0697, 0.46 ) }
    dend_36 { pt3dadd( 39.2239, 45.9254, -36.6708, 0.46 ) }
    dend_36 { pt3dadd( 41.1981, 47.1171, -38.4577, 0.46 ) }
    dend_36 { pt3dadd( 42.5173, 47.8858, -39.6258, 0.46 ) }
    dend_36 { pt3dadd( 44.4666, 48.9687, -41.2403, 0.68 ) }
    dend_36 { pt3dadd( 46.5331, 50.0822, -42.8755, 0.46 ) }
    dend_36 { pt3dadd( 48.6623, 51.2083, -44.433, 0.23 ) }
    dend_36 { pt3dadd( 49.6206, 51.751, -45.1186, 0.46 ) }
    dend_36 { pt3dadd( 51.3943, 52.7275, -46.472, 0.46 ) }
    dend_36 { pt3dadd( 52.7536, 53.507, -47.7463, 0.68 ) }
    dend_36 { pt3dadd( 54.0625, 54.3495, -49.2502, 0.46 ) }
    dend_36 { pt3dadd( 55.4783, 55.3457, -51.2046, 0.68 ) }
    dend_36 { pt3dadd( 56.2026, 55.8587, -52.281, 0.68 ) }
    dend_36 { pt3dadd( 57.7349, 57.0032, -54.6623, 0.68 ) }
    dend_36 { pt3dadd( 59.8257, 58.666, -57.9487, 0.68 ) }
    dend_36 { pt3dadd( 60.8413, 59.4982, -59.6697, 0.91 ) }
    dend_36 { pt3dadd( 61.9588, 60.3991, -61.6458, 1.14 ) }
    dend_36 { pt3dadd( 63.072, 61.221, -63.5777, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( 64.5005, 62.1216, -65.811, 0.68 ) }
    dend_36 { pt3dadd( 65.9642, 62.9297, -67.8015, 0.91 ) }
    dend_36 { pt3dadd( 68.072, 63.8487, -70.2172, 0.91 ) }
    dend_36 { pt3dadd( 69.7451, 64.5025, -71.9834, 0.46 ) }
    dend_36 { pt3dadd( 70.9544, 64.989, -73.1823, 0.46 ) }
    dend_36 { pt3dadd( 72.2376, 65.5549, -74.4252, 0.46 ) }
    dend_36 { pt3dadd( 73.9222, 66.4147, -75.9736, 0.68 ) }
    dend_36 { pt3dadd( 76.1971, 67.7699, -77.9674, 0.91 ) }
    dend_36 { pt3dadd( 78.2725, 69.1983, -79.7047, 0.46 ) }
    dend_36 { pt3dadd( 80.5433, 70.9097, -81.6727, 0.68 ) }
    dend_36 { pt3dadd( 81.5893, 71.7607, -82.6592, 0.68 ) }
    dend_36 { pt3dadd( 83.1516, 73.0619, -84.2902, 0.23 ) }
    dend_36 { pt3dadd( 83.9541, 73.7246, -85.1765, 0.46 ) }
    dend_36 { pt3dadd( 85.5528, 74.8953, -87.223, 0.46 ) }
    dend_36 { pt3dadd( 86.9312, 75.6592, -89.3955, 0.23 ) }
    dend_36 { pt3dadd( 87.5115, 75.8914, -90.5648, 0.46 ) }
    dend_36 { pt3dadd( 88.5344, 76.222, -93.0122, 0.23 ) }
    dend_36 { pt3dadd( 89.5668, 76.4581, -95.8112, 0.68 ) }
    dend_36 { pt3dadd( 91.1907, 76.6849, -100.787, 0.68 ) }
    dend_36 { pt3dadd( 92.8351, 76.756, -106.384, 0.68 ) }
    dend_36 { pt3dadd( 93.8455, 76.738, -109.83, 0.68 ) }
    dend_36 { pt3dadd( 94.3443, 76.7269, -111.384, 0.68 ) }
    dend_36 { pt3dadd( 95.1757, 76.6943, -114.008, 0.68 ) }
    dend_36 { pt3dadd( 96.3437, 76.6238, -117.777, 0.68 ) }
    dend_36 { pt3dadd( 97.8393, 76.6156, -122.119, 0.23 ) }
    dend_36 { pt3dadd( 99.4033, 76.6225, -125.792, 0.68 ) }
    dend_36 { pt3dadd( 101.524, 76.6337, -129.929, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 14.0099, 12.5891, -4.24365, 0.68 ) }
    dend_35 { pt3dadd( 14.7703, 13.9368, -4.34546, 0.68 ) }
    dend_35 { pt3dadd( 15.5892, 15.1674, -4.52571, 0.68 ) }
    dend_35 { pt3dadd( 16.1436, 15.9599, -4.66963, 0.91 ) }
    dend_35 { pt3dadd( 17.2351, 17.4786, -4.95277, 0.68 ) }
    dend_35 { pt3dadd( 17.8634, 18.3595, -5.18155, 0.91 ) }
    dend_35 { pt3dadd( 19.4768, 20.5507, -5.91908, 0.68 ) }
    dend_35 { pt3dadd( 20.6782, 22.0861, -6.60851, 0.91 ) }
    dend_35 { pt3dadd( 21.1285, 22.6861, -6.89164, 0.91 ) }
    dend_35 { pt3dadd( 21.9393, 23.8026, -7.39597, 0.46 ) }
    dend_35 { pt3dadd( 23.1892, 25.628, -8.13558, 0.68 ) }
    dend_35 { pt3dadd( 24.41, 27.5142, -8.71123, 0.46 ) }
    dend_35 { pt3dadd( 25.2273, 28.8205, -8.9988, 0.91 ) }
    dend_35 { pt3dadd( 26.3964, 30.522, -9.27004, 0.68 ) }
    dend_35 { pt3dadd( 27.7437, 32.2773, -9.49546, 0.68 ) }
    dend_35 { pt3dadd( 28.7266, 33.4376, -9.54217, 0.68 ) }
    dend_35 { pt3dadd( 30.6543, 35.601, -9.37362, 0.68 ) }
    dend_35 { pt3dadd( 32.2081, 37.353, -9.09892, 0.23 ) }
    dend_35 { pt3dadd( 33.6202, 38.9384, -8.79725, 0.68 ) }
    dend_35 { pt3dadd( 34.6112, 40.0526, -8.58452, 0.46 ) }
    dend_35 { pt3dadd( 35.9985, 41.6524, -8.34191, 0.46 ) }
    dend_35 { pt3dadd( 36.9491, 42.7888, -8.22284, 0.68 ) }
    dend_35 { pt3dadd( 38.3627, 44.7578, -8.15135, 0.46 ) }
    dend_35 { pt3dadd( 39.0241, 45.7947, -8.17305, 0.46 ) }
    dend_35 { pt3dadd( 40.0891, 47.4892, -8.34708, 0.91 ) }
    dend_35 { pt3dadd( 41.3738, 49.3388, -8.72034, 0.68 ) }
    dend_35 { pt3dadd( 42.3365, 50.5858, -9.1429, 0.68 ) }
    dend_35 { pt3dadd( 43.3802, 51.8526, -9.68609, 0.68 ) }
    dend_35 { pt3dadd( 44.2244, 52.8834, -10.2324, 0.68 ) }
    dend_35 { pt3dadd( 45.704, 54.8254, -11.3895, 0.91 ) }
    dend_35 { pt3dadd( 46.7399, 56.298, -12.3344, 0.23 ) }
    dend_35 { pt3dadd( 47.6034, 57.6293, -13.2071, 0.46 ) }
    dend_35 { pt3dadd( 48.5401, 59.1935, -14.2818, 0.46 ) }
    dend_35 { pt3dadd( 49.5654, 61.0213, -15.5739, 0.46 ) }
    dend_35 { pt3dadd( 50.2949, 62.5588, -16.6787, 0.46 ) }
    dend_35 { pt3dadd( 50.5267, 63.1892, -17.1446, 0.68 ) }
    dend_35 { pt3dadd( 50.7978, 64.1013, -17.8484, 0.46 ) }
    dend_35 { pt3dadd( 51.2274, 65.6378, -19.0653, 0.46 ) }
    dend_35 { pt3dadd( 51.6409, 67.2055, -20.4357, 0.46 ) }
    dend_35 { pt3dadd( 51.9748, 68.8972, -22.0142, 0.68 ) }
    dend_35 { pt3dadd( 52.2439, 70.6745, -23.9161, 0.46 ) }
    dend_35 { pt3dadd( 52.4651, 72.1987, -25.7496, 0.68 ) }
    dend_35 { pt3dadd( 52.528, 72.6351, -26.3407, 0.46 ) }
    dend_35 { pt3dadd( 52.7883, 74.4797, -29.1744, 0.46 ) }
    dend_35 { pt3dadd( 53.0042, 75.7451, -31.3303, 0.46 ) }
    dend_35 { pt3dadd( 53.393, 77.2088, -34.0324, 0.46 ) }
    dend_35 { pt3dadd( 53.8135, 78.2184, -36.0429, 0.46 ) }
    dend_35 { pt3dadd( 54.2065, 79.0633, -37.7928, 0.46 ) }
    dend_35 { pt3dadd( 54.9983, 80.6179, -41.0929, 0.23 ) }
    dend_35 { pt3dadd( 55.7264, 81.8043, -43.6227, 0.46 ) }
    dend_35 { pt3dadd( 56.4573, 82.7863, -45.7766, 0.23 ) }
    dend_35 { pt3dadd( 57.3354, 83.9654, -48.2598, 0.46 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 79/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 6.74333, 2.06204, -4.94388, 2.28 ) }
    dend_23 { pt3dadd( 6.6323, 2.40885, -7.99673, 2.28 ) }
    dend_23 { pt3dadd( 6.52957, 2.72973, -10.8213, 2.28 ) }
    dend_23 { pt3dadd( 6.45584, 2.96001, -12.8484, 2.28 ) }
    dend_23 { pt3dadd( 6.36934, 3.2302, -15.2267, 2.28 ) }
    dend_23 { pt3dadd( 6.27035, 3.5394, -17.9484, 2.28 ) }
    dend_23 { pt3dadd( 6.19988, 3.75949, -19.8858, 2.28 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 86/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 6.74333, 2.06204, -4.94388, 3.64 ) }
    dend_14 { pt3dadd( 7.19098, 1.9085, -5.31773, 3.64 ) }
    dend_14 { pt3dadd( 8.7185, 1.58961, -6.43726, 3.42 ) }
    dend_14 { pt3dadd( 10.4488, 1.37813, -7.58585, 3.19 ) }
    dend_14 { pt3dadd( 11.274, 1.35291, -8.08092, 2.51 ) }
    dend_14 { pt3dadd( 12.6213, 1.41178, -8.83502, 1.59 ) }
    dend_14 { pt3dadd( 14.782, 1.69641, -9.90058, 1.37 ) }
    dend_14 { pt3dadd( 17.1092, 2.1077, -10.9483, 1.37 ) }
    dend_14 { pt3dadd( 18.4365, 2.42424, -11.4688, 1.59 ) }
    dend_14 { pt3dadd( 20.0656, 2.91032, -12.0411, 1.37 ) }
    dend_14 { pt3dadd( 21.4885, 3.40833, -12.5482, 1.14 ) }
    dend_14 { pt3dadd( 23.8424, 4.45667, -13.2562, 0.91 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 98/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -17.1362, 2.05849, -9.80631, 0.91 ) }
    dend_6 { pt3dadd( -17.8956, 2.88151, -10.9945, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_6 { pt3dadd( -18.7199, 3.74172, -12.2036, 0.91 ) }
    dend_6 { pt3dadd( -19.4196, 4.4691, -13.1625, 0.91 ) }
    dend_6 { pt3dadd( -20.1536, 5.252, -14.0519, 0.68 ) }
    dend_6 { pt3dadd( -21.0477, 6.20561, -15.1353, 0.91 ) }
    dend_6 { pt3dadd( -22.0069, 7.22877, -16.2977, 0.91 ) }
    dend_6 { pt3dadd( -22.8605, 8.19701, -17.2927, 0.91 ) }
    dend_6 { pt3dadd( -23.6311, 9.10884, -18.159, 0.91 ) }
    dend_6 { pt3dadd( -24.7809, 10.458, -19.3313, 0.91 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -17.1362, 2.05849, -9.80631, 0.46 ) }
    dend_5 { pt3dadd( -17.8267, 0.664071, -9.88624, 0.46 ) }
    dend_5 { pt3dadd( -18.3798, -0.802208, -9.93482, 0.46 ) }
    dend_5 { pt3dadd( -18.9766, -2.6615, -9.95824, 0.46 ) }
    dend_5 { pt3dadd( -19.4071, -4.0733, -9.96472, 0.68 ) }
    dend_5 { pt3dadd( -19.9175, -5.75945, -9.96178, 0.46 ) }
    dend_5 { pt3dadd( -20.4665, -7.59039, -9.94656, 0.46 ) }
    dend_5 { pt3dadd( -21.2795, -10.4206, -9.87371, 0.46 ) }
    dend_5 { pt3dadd( -21.6696, -11.7364, -9.84146, 0.46 ) }
    dend_5 { pt3dadd( -22.1539, -13.2355, -9.78776, 0.68 ) }
    dend_5 { pt3dadd( -22.7847, -14.9344, -9.71673, 0.46 ) }
    dend_5 { pt3dadd( -23.8611, -17.227, -9.59515, 0.46 ) }
    dend_5 { pt3dadd( -24.4371, -18.2331, -9.53928, 0.46 ) }
    dend_5 { pt3dadd( -25.371, -19.6287, -9.45903, 0.68 ) }
    dend_5 { pt3dadd( -26.2283, -20.8162, -9.3897, 0.23 ) }
    dend_5 { pt3dadd( -26.8238, -21.6184, -9.33775, 0.68 ) }
    dend_5 { pt3dadd( -28.5254, -23.8485, -9.18817, 0.46 ) }
    dend_5 { pt3dadd( -29.407, -25.018, -9.13424, 0.68 ) }
    dend_5 { pt3dadd( -30.1184, -26.0321, -9.10493, 0.23 ) }
    dend_5 { pt3dadd( -30.8946, -27.3047, -9.08594, 0.46 ) }
    dend_5 { pt3dadd( -31.9257, -29.1763, -9.12329, 0.23 ) }
    dend_5 { pt3dadd( -32.0742, -29.4896, -9.13705, 0.46 ) }
    dend_5 { pt3dadd( -32.9289, -31.565, -9.31044, 0.23 ) }
    dend_5 { pt3dadd( -33.3556, -32.7235, -9.43443, 0.68 ) }
    dend_5 { pt3dadd( -34.3713, -35.9071, -9.85274, 0.23 ) }
    dend_5 { pt3dadd( -34.9153, -37.8378, -10.138, 0.46 ) }
    dend_5 { pt3dadd( -35.1243, -38.6115, -10.2602, 0.23 ) }
    dend_5 { pt3dadd( -35.5819, -40.3124, -10.5198, 0.23 ) }
    dend_5 { pt3dadd( -36.0494, -42.1102, -10.7938, 0.68 ) }
    dend_5 { pt3dadd( -36.5888, -44.0106, -11.108, 0.23 ) }
    dend_5 { pt3dadd( -36.797, -44.6509, -11.2162, 0.23 ) }
    dend_5 { pt3dadd( -37.1394, -45.5826, -11.3364, 0.91 ) }
    dend_5 { pt3dadd( -37.6991, -46.9382, -11.4697, 0.46 ) }
    dend_5 { pt3dadd( -37.9541, -47.5403, -11.5067, 0.46 ) }
    dend_5 { pt3dadd( -38.6998, -49.2615, -11.5848, 0.23 ) }
    dend_5 { pt3dadd( -39.0247, -50.1037, -11.6003, 1.14 ) }
    dend_5 { pt3dadd( -39.6373, -52.0572, -11.6119, 0.23 ) }
    dend_5 { pt3dadd( -40.1454, -54.0451, -11.6128, 0.23 ) }
    dend_5 { pt3dadd( -40.3289, -54.8259, -11.6136, 0.46 ) }
    dend_5 { pt3dadd( -40.4557, -55.3848, -11.639, 0.91 ) }
    dend_5 { pt3dadd( -40.9701, -57.7497, -11.897, 0.23 ) }
    dend_5 { pt3dadd( -41.3294, -59.3016, -12.1485, 0.46 ) }
    dend_5 { pt3dadd( -41.7729, -61.2124, -12.5187, 0.23 ) }
    dend_5 { pt3dadd( -42.4024, -63.8062, -13.1058, 0.23 ) }
    dend_5 { pt3dadd( -43.0079, -66.064, -13.6808, 0.23 ) }
    dend_5 { pt3dadd( -43.4751, -67.6095, -14.1366, 0.23 ) }
    dend_5 { pt3dadd( -43.8625, -68.7036, -14.5542, 0.68 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 55/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.00932, -13.8344, -1.91568, 0.91 ) }
    dend_2 { pt3dadd( -5.67343, -15.3716, -2.36397, 0.91 ) }
    dend_2 { pt3dadd( -5.50094, -16.5198, -2.57066, 0.68 ) }
    dend_2 { pt3dadd( -5.33558, -17.9889, -2.71493, 0.68 ) }
    dend_2 { pt3dadd( -5.20642, -19.0571, -2.76872, 0.91 ) }
    dend_2 { pt3dadd( -5.00772, -20.3988, -2.84022, 0.68 ) }
    dend_2 { pt3dadd( -4.73481, -22.0208, -2.94475, 0.68 ) }
    dend_2 { pt3dadd( -4.4471, -23.7524, -2.99543, 0.91 ) }
    dend_2 { pt3dadd( -4.1933, -25.3772, -3.01899, 0.91 ) }
    dend_2 { pt3dadd( -3.96046, -26.878, -3.05535, 0.68 ) }
    dend_2 { pt3dadd( -3.68612, -28.423, -3.14179, 0.91 ) }
    dend_2 { pt3dadd( -3.44403, -29.6015, -3.26557, 0.91 ) }
    dend_2 { pt3dadd( -3.02733, -31.4812, -3.54905, 0.46 ) }
    dend_2 { pt3dadd( -2.7202, -32.7904, -3.78898, 0.68 ) }
    dend_2 { pt3dadd( -2.30808, -34.4431, -4.10884, 0.68 ) }
    dend_2 { pt3dadd( -1.827, -36.3121, -4.44644, 0.68 ) }
    dend_2 { pt3dadd( -1.43794, -37.8044, -4.67005, 0.46 ) }
    dend_2 { pt3dadd( -1.132, -38.8808, -4.80928, 0.91 ) }
    dend_2 { pt3dadd( -0.72452, -40.2438, -4.96657, 0.91 ) }
    dend_2 { pt3dadd( -0.15273, -42.3791, -5.17314, 0.46 ) }
    dend_2 { pt3dadd( 0.0468728, -43.2809, -5.23463, 0.91 ) }
    dend_2 { pt3dadd( 0.284098, -44.6348, -5.28142, 0.46 ) }
    dend_2 { pt3dadd( 0.507698, -46.0514, -5.29389, 0.46 ) }
    dend_2 { pt3dadd( 0.619848, -46.9606, -5.29647, 0.68 ) }
    dend_2 { pt3dadd( 0.700628, -48.2711, -5.32152, 0.46 ) }
    dend_2 { pt3dadd( 0.726283, -49.3552, -5.34912, 0.46 ) }
    dend_2 { pt3dadd( 0.761331, -51.2764, -5.44037, 0.68 ) }
    dend_2 { pt3dadd( 0.809664, -52.7337, -5.52779, 0.46 ) }
    dend_2 { pt3dadd( 0.852767, -53.575, -5.59533, 0.46 ) }
    dend_2 { pt3dadd( 0.991064, -55.0912, -5.74197, 0.91 ) }
    dend_2 { pt3dadd( 1.15103, -56.5049, -5.88958, 0.46 ) }
    dend_2 { pt3dadd( 1.34063, -57.9217, -6.05697, 0.46 ) }
    dend_2 { pt3dadd( 1.49354, -58.7446, -6.16084, 0.91 ) }
    dend_2 { pt3dadd( 1.77759, -59.9359, -6.29794, 0.46 ) }
    dend_2 { pt3dadd( 2.09609, -61.0389, -6.39926, 0.91 ) }
    dend_2 { pt3dadd( 2.52439, -62.3402, -6.49383, 0.46 ) }
    dend_2 { pt3dadd( 3.04994, -63.7663, -6.57668, 0.68 ) }
    dend_2 { pt3dadd( 3.94262, -66.0408, -6.64382, 0.23 ) }
    dend_2 { pt3dadd( 4.55749, -67.6016, -6.67108, 0.91 ) }
    dend_2 { pt3dadd( 5.08593, -68.9303, -6.682, 0.46 ) }
    dend_2 { pt3dadd( 5.74464, -70.5238, -6.72084, 0.91 ) }
    dend_2 { pt3dadd( 6.41028, -72.1248, -6.78476, 0.46 ) }
    dend_2 { pt3dadd( 6.91379, -73.396, -6.8589, 0.68 ) }
    dend_2 { pt3dadd( 7.51253, -74.9759, -6.97607, 0.46 ) }
    dend_2 { pt3dadd( 8.01107, -76.3459, -7.09187, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( 8.56675, -78.0607, -7.23795, 0.68 ) }
    dend_2 { pt3dadd( 9.09244, -79.8919, -7.38322, 0.46 ) }
    dend_2 { pt3dadd( 9.37425, -81.0205, -7.47306, 0.68 ) }
    dend_2 { pt3dadd( 9.56603, -81.8361, -7.53612, 0.91 ) }
    dend_2 { pt3dadd( 9.95192, -83.7159, -7.64002, 0.46 ) }
    dend_2 { pt3dadd( 10.226, -85.3824, -7.69033, 0.68 ) }
    dend_2 { pt3dadd( 10.3694, -86.4783, -7.69411, 0.46 ) }
    dend_2 { pt3dadd( 10.4305, -87.0169, -7.68719, 0.68 ) }
    dend_2 { pt3dadd( 10.5812, -88.4301, -7.64686, 0.23 ) }
    dend_2 { pt3dadd( 10.6944, -89.5171, -7.62625, 0.46 ) }
    dend_2 { pt3dadd( 10.8864, -91.1308, -7.61317, 0.91 ) }
    dend_2 { pt3dadd( 11.229, -93.2904, -7.60018, 0.23 ) }
    dend_2 { pt3dadd( 11.422, -94.4359, -7.55982, 0.23 ) }
    dend_2 { pt3dadd( 11.5633, -95.2722, -7.49383, 0.68 ) }
    dend_2 { pt3dadd( 11.9453, -97.4783, -7.28995, 0.23 ) }
    dend_2 { pt3dadd( 12.1598, -98.6429, -7.1742, 0.46 ) }
    dend_2 { pt3dadd( 12.5179, -100.447, -6.97595, 0.23 ) }
    dend_2 { pt3dadd( 13.1609, -103.48, -6.59988, 0.23 ) }
    dend_2 { pt3dadd( 13.412, -104.581, -6.44769, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.00932, -13.8344, -1.91568, 0.46 ) }
    dend_1 { pt3dadd( -6.38797, -14.6445, -3.93704, 0.46 ) }
    dend_1 { pt3dadd( -7.07756, -15.797, -5.75809, 0.46 ) }
    dend_1 { pt3dadd( -7.18001, -15.9621, -5.92931, 0.46 ) }
    dend_1 { pt3dadd( -7.64518, -16.7023, -6.5197, 0.46 ) }
    dend_1 { pt3dadd( -8.03824, -17.309, -6.9554, 0.46 ) }
    dend_1 { pt3dadd( -8.9417, -18.6651, -7.92878, 0.46 ) }
    dend_1 { pt3dadd( -10.1191, -20.3279, -8.924, 0.46 ) }
    dend_1 { pt3dadd( -10.9695, -21.4565, -9.52012, 0.46 ) }
    dend_1 { pt3dadd( -12.0819, -22.9, -10.2017, 0.68 ) }
    dend_1 { pt3dadd( -13.7059, -24.9403, -11.1129, 0.68 ) }
    dend_1 { pt3dadd( -15.1886, -26.7439, -11.9141, 0.68 ) }
    dend_1 { pt3dadd( -16.3169, -28.0764, -12.5172, 0.46 ) }
    dend_1 { pt3dadd( -17.2943, -29.2784, -13.0707, 0.46 ) }
    dend_1 { pt3dadd( -18.4853, -30.8841, -13.7656, 0.68 ) }
    dend_1 { pt3dadd( -19.2161, -31.9854, -14.1822, 0.46 ) }
    dend_1 { pt3dadd( -19.7537, -32.907, -14.4717, 0.68 ) }
    dend_1 { pt3dadd( -20.5819, -34.5659, -14.9749, 0.46 ) }
    dend_1 { pt3dadd( -21.3051, -36.2191, -15.5188, 0.68 ) }
    dend_1 { pt3dadd( -22.3641, -38.692, -16.4042, 0.46 ) }
    dend_1 { pt3dadd( -23.1822, -40.5876, -17.1395, 0.68 ) }
    dend_1 { pt3dadd( -24.1178, -42.6327, -17.934, 0.46 ) }
    dend_1 { pt3dadd( -24.9699, -44.4032, -18.6775, 0.46 ) }
    dend_1 { pt3dadd( -25.9089, -46.186, -19.479, 0.68 ) }
    dend_1 { pt3dadd( -26.9995, -47.9906, -20.3888, 0.46 ) }
    dend_1 { pt3dadd( -27.8305, -49.1841, -21.0346, 0.46 ) }
    dend_1 { pt3dadd( -28.8814, -50.5277, -21.7922, 0.68 ) }
    dend_1 { pt3dadd( -30.1517, -52.0027, -22.6342, 0.46 ) }
    dend_1 { pt3dadd( -31.8017, -53.7546, -23.6099, 0.68 ) }
    dend_1 { pt3dadd( -33.4484, -55.3704, -24.5149, 0.68 ) }
    dend_1 { pt3dadd( -34.8165, -56.7065, -25.2509, 0.68 ) }
    dend_1 { pt3dadd( -36.4662, -58.2347, -26.0813, 0.23 ) }
    dend_1 { pt3dadd( -37.0492, -58.7462, -26.3689, 0.46 ) }
    dend_1 { pt3dadd( -38.9436, -60.3111, -27.2596, 0.46 ) }
    dend_1 { pt3dadd( -40.6367, -61.6871, -28.0733, 0.23 ) }
    dend_1 { pt3dadd( -42.0003, -62.8307, -28.7424, 0.68 ) }
    dend_1 { pt3dadd( -43.1352, -63.7924, -29.3172, 0.23 ) }
    dend_1 { pt3dadd( -44.317, -64.8328, -29.9206, 0.23 ) }
    dend_1 { pt3dadd( -45.4795, -65.8593, -30.5253, 0.68 ) }
    dend_1 { pt3dadd( -46.7727, -67.0589, -31.2078, 0.23 ) }
    dend_1 { pt3dadd( -47.4655, -67.7435, -31.6023, 0.68 ) }
    dend_1 { pt3dadd( -48.8203, -69.1593, -32.4465, 0.23 ) }
    dend_1 { pt3dadd( -50.4357, -70.9559, -33.5135, 0.23 ) }
    dend_1 { pt3dadd( -51.5842, -72.2506, -34.2468, 0.68 ) }
    dend_1 { pt3dadd( -53.6651, -74.5077, -35.5396, 0.23 ) }
    dend_1 { pt3dadd( -54.599, -75.5019, -36.0945, 0.68 ) }
    dend_1 { pt3dadd( -56.009, -76.9426, -36.8292, 0.23 ) }
    dend_1 { pt3dadd( -57.1772, -78.0722, -37.3806, 0.68 ) }
    dend_1 { pt3dadd( -58.9091, -79.6566, -38.1535, 0.46 ) }
    dend_1 { pt3dadd( -60.4006, -80.9822, -38.7662, 0.23 ) }
    dend_1 { pt3dadd( -62.0311, -82.3902, -39.4763, 0.23 ) }
    dend_1 { pt3dadd( -63.7951, -83.8943, -40.3844, 0.68 ) }
    dend_1 { pt3dadd( -65.6019, -85.3305, -41.4898, 0.46 ) }
    dend_1 { pt3dadd( -66.8984, -86.3409, -42.4265, 0.23 ) }
    dend_1 { pt3dadd( -68.0033, -87.183, -43.3474, 0.46 ) }
    dend_1 { pt3dadd( -69.7711, -88.5135, -44.9726, 0.23 ) }
    dend_1 { pt3dadd( -71.525, -89.7498, -46.8095, 0.23 ) }
    dend_1 { pt3dadd( -73.0655, -90.8804, -48.5707, 0.23 ) }
    dend_1 { pt3dadd( -73.4264, -91.1587, -48.9786, 0.46 ) }
    dend_1 { pt3dadd( -74.1571, -91.7685, -49.7832, 0.23 ) }
    dend_1 { pt3dadd( -74.8207, -92.3389, -50.4875, 0.68 ) }
    dend_1 { pt3dadd( -76.9222, -94.1759, -52.4909, 0.23 ) }
    dend_1 { pt3dadd( -79.0428, -96.0477, -54.3813, 0.23 ) }
    dend_1 { pt3dadd( -79.9729, -96.8711, -55.2269, 0.46 ) }
    dend_1 { pt3dadd( -81.1173, -97.8392, -56.2544, 0.23 ) }
    dend_1 { pt3dadd( -82.812, -99.2037, -57.6866, 0.23 ) }
    dend_1 { pt3dadd( -83.6853, -99.8912, -58.3923, 0.68 ) }
    dend_1 { pt3dadd( -86.838, -102.457, -60.8799, 0.23 ) }
    dend_1 { pt3dadd( -88.4774, -103.731, -62.1694, 0.23 ) }
    dend_1 { pt3dadd( -89.1673, -104.262, -62.7207, 0.46 ) }
    dend_1 { pt3dadd( -91.3115, -105.918, -64.4498, 0.23 ) }
    dend_1 { pt3dadd( -93.0516, -107.4, -65.8896, 0.68 ) }
    dend_1 { pt3dadd( -94.9158, -109.178, -67.4853, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 92/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.5215, 11.7152, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 49.819, 16.2518, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 64.1165, 20.7884, 0.0, 0.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 95/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 6.19988, 3.75949, -19.8858, 1.37 ) }
    dend_25 { pt3dadd( 6.21156, 6.85149, -19.8457, 1.37 ) }
    dend_25 { pt3dadd( 6.2117, 10.2591, -19.8581, 1.37 ) }
    dend_25 { pt3dadd( 6.21183, 13.4607, -19.8697, 1.59 ) }
    dend_25 { pt3dadd( 6.21197, 17.0379, -19.8826, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_25 { pt3dadd( 6.2121, 20.1224, -19.8938, 1.37 ) }
    dend_25 { pt3dadd( 6.21221, 22.7256, -19.9032, 1.59 ) }
    dend_25 { pt3dadd( 6.19372, 24.2629, -20.0066, 1.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.19988, 3.75949, -19.8858, 1.37 ) }
    dend_24 { pt3dadd( 5.06688, 5.07459, -19.8004, 1.37 ) }
    dend_24 { pt3dadd( 3.52105, 6.83554, -19.9185, 1.14 ) }
    dend_24 { pt3dadd( 1.77937, 8.63415, -20.3175, 1.14 ) }
    dend_24 { pt3dadd( -0.0614511, 10.3395, -20.9334, 0.91 ) }
    dend_24 { pt3dadd( -1.40636, 11.4851, -21.5437, 0.91 ) }
    dend_24 { pt3dadd( -2.78364, 12.6401, -22.2628, 0.68 ) }
    dend_24 { pt3dadd( -4.27469, 13.9216, -23.2483, 0.68 ) }
    dend_24 { pt3dadd( -5.6328, 15.1068, -24.4477, 0.68 ) }
    dend_24 { pt3dadd( -6.3685, 15.7131, -25.282, 0.68 ) }
    dend_24 { pt3dadd( -7.34317, 16.4593, -26.7006, 0.68 ) }
    dend_24 { pt3dadd( -8.0087, 16.9691, -27.9706, 0.91 ) }
    dend_24 { pt3dadd( -8.99188, 17.7126, -30.3918, 0.91 ) }
    dend_24 { pt3dadd( -9.66011, 18.1942, -32.1894, 0.68 ) }
    dend_24 { pt3dadd( -10.0911, 18.4718, -33.3296, 0.68 ) }
    dend_24 { pt3dadd( -11.1935, 18.8641, -36.0842, 0.68 ) }
    dend_24 { pt3dadd( -12.2191, 19.0123, -38.325, 0.68 ) }
    dend_24 { pt3dadd( -13.4322, 19.03, -40.8582, 0.68 ) }
    dend_24 { pt3dadd( -14.3272, 19.0177, -42.6258, 0.68 ) }
    dend_24 { pt3dadd( -14.9218, 19.0132, -43.646, 0.68 ) }
    dend_24 { pt3dadd( -16.4295, 19.1146, -45.8931, 0.68 ) }
    dend_24 { pt3dadd( -17.4111, 19.2192, -47.0642, 0.46 ) }
    dend_24 { pt3dadd( -18.5521, 19.4398, -48.2898, 0.46 ) }
    dend_24 { pt3dadd( -19.6915, 19.7052, -49.5247, 0.46 ) }
    dend_24 { pt3dadd( -20.4722, 19.8415, -50.4525, 0.46 ) }
    dend_24 { pt3dadd( -21.425, 19.8754, -51.4772, 0.46 ) }
    dend_24 { pt3dadd( -22.9019, 19.8167, -52.8153, 0.68 ) }
    dend_24 { pt3dadd( -24.1976, 19.5796, -53.9339, 0.68 ) }
    dend_24 { pt3dadd( -25.3252, 19.2956, -54.8084, 0.68 ) }
    dend_24 { pt3dadd( -26.5884, 18.9473, -55.7204, 0.68 ) }
    dend_24 { pt3dadd( -28.4795, 18.4951, -57.1409, 0.91 ) }
    dend_24 { pt3dadd( -30.2856, 18.1723, -58.5111, 0.91 ) }
    dend_24 { pt3dadd( -31.9561, 17.9459, -59.7707, 0.91 ) }
    dend_24 { pt3dadd( -34.0491, 17.7135, -61.2642, 0.91 ) }
    dend_24 { pt3dadd( -35.7217, 17.6337, -62.3801, 0.68 ) }
    dend_24 { pt3dadd( -38.1449, 17.5727, -63.8958, 0.68 ) }
    dend_24 { pt3dadd( -40.079, 17.5579, -65.1249, 0.91 ) }
    dend_24 { pt3dadd( -41.8239, 17.5995, -66.1713, 0.68 ) }
    dend_24 { pt3dadd( -43.3579, 17.7401, -67.0466, 0.68 ) }
    dend_24 { pt3dadd( -44.9238, 17.9419, -67.91, 0.68 ) }
    dend_24 { pt3dadd( -46.97, 18.2237, -68.9661, 0.68 ) }
    dend_24 { pt3dadd( -48.8361, 18.4277, -69.8155, 0.68 ) }
    dend_24 { pt3dadd( -50.1505, 18.5355, -70.4953, 0.68 ) }
    dend_24 { pt3dadd( -51.7023, 18.6788, -71.4446, 0.68 ) }
    dend_24 { pt3dadd( -53.2492, 18.7885, -72.4518, 0.91 ) }
    dend_24 { pt3dadd( -54.14, 18.8183, -73.089, 0.91 ) }
    dend_24 { pt3dadd( -55.4345, 18.846, -74.0332, 0.68 ) }
    dend_24 { pt3dadd( -57.3927, 18.8289, -75.4477, 0.68 ) }
    dend_24 { pt3dadd( -59.0888, 18.8176, -76.714, 0.68 ) }
    dend_24 { pt3dadd( -60.9689, 18.9128, -78.0782, 0.91 ) }
    dend_24 { pt3dadd( -62.8085, 19.1878, -79.4748, 0.68 ) }
    dend_24 { pt3dadd( -63.7145, 19.4376, -80.1688, 0.68 ) }
    dend_24 { pt3dadd( -64.568, 19.7863, -80.8262, 0.68 ) }
    dend_24 { pt3dadd( -65.4055, 20.2183, -81.4204, 0.68 ) }
    dend_24 { pt3dadd( -66.6219, 20.9992, -82.3302, 0.91 ) }
    dend_24 { pt3dadd( -68.1358, 22.2632, -83.699, 0.68 ) }
    dend_24 { pt3dadd( -69.4188, 23.5581, -85.0371, 0.68 ) }
    dend_24 { pt3dadd( -70.236, 24.4812, -86.1064, 0.68 ) }
    dend_24 { pt3dadd( -71.0121, 25.3903, -87.2601, 1.14 ) }
    dend_24 { pt3dadd( -71.6233, 26.129, -88.2433, 0.68 ) }
    dend_24 { pt3dadd( -72.5413, 27.3965, -89.8501, 0.68 ) }
    dend_24 { pt3dadd( -73.2151, 28.4183, -90.9961, 0.91 ) }
    dend_24 { pt3dadd( -74.5689, 30.4113, -93.0725, 0.91 ) }
    dend_24 { pt3dadd( -75.1305, 31.1208, -93.7895, 0.91 ) }
    dend_24 { pt3dadd( -75.6083, 31.6858, -94.331, 0.68 ) }
    dend_24 { pt3dadd( -76.7689, 32.9344, -95.5516, 0.68 ) }
    dend_24 { pt3dadd( -77.3999, 33.5544, -96.1955, 0.68 ) }
    dend_24 { pt3dadd( -78.3894, 34.4198, -97.233, 0.91 ) }
    dend_24 { pt3dadd( -79.9979, 35.6127, -98.9799, 0.46 ) }
    dend_24 { pt3dadd( -81.5576, 36.5514, -100.758, 0.68 ) }
    dend_24 { pt3dadd( -83.4839, 37.4844, -103.183, 0.68 ) }
    dend_24 { pt3dadd( -85.3164, 38.1928, -105.659, 0.68 ) }
    dend_24 { pt3dadd( -86.9506, 38.818, -108.059, 0.68 ) }
    dend_24 { pt3dadd( -88.4464, 39.3546, -110.46, 0.68 ) }
    dend_24 { pt3dadd( -89.2287, 39.6167, -111.784, 0.91 ) }
    dend_24 { pt3dadd( -91.3269, 40.1996, -115.385, 0.68 ) }
    dend_24 { pt3dadd( -92.2026, 40.4291, -116.895, 0.91 ) }
    dend_24 { pt3dadd( -94.309, 40.9355, -120.66, 0.68 ) }
    dend_24 { pt3dadd( -95.7147, 41.2979, -123.236, 0.68 ) }
    dend_24 { pt3dadd( -97.3804, 41.6583, -126.169, 0.68 ) }
    dend_24 { pt3dadd( -98.3278, 41.8178, -127.737, 0.68 ) }
    dend_24 { pt3dadd( -99.3466, 41.807, -129.212, 0.68 ) }
    dend_24 { pt3dadd( -100.575, 41.5869, -130.782, 0.68 ) }
    dend_24 { pt3dadd( -101.361, 41.2877, -131.562, 0.68 ) }
    dend_24 { pt3dadd( -103.527, 40.2938, -133.146, 0.68 ) }
    dend_24 { pt3dadd( -106.219, 38.8797, -134.631, 0.46 ) }
    dend_24 { pt3dadd( -108.46, 37.8077, -135.598, 0.46 ) }
    dend_24 { pt3dadd( -109.125, 37.5209, -135.848, 0.46 ) }
    dend_24 { pt3dadd( -110.339, 37.035, -136.313, 0.91 ) }
    dend_24 { pt3dadd( -112.266, 36.3037, -137.236, 0.46 ) }
    dend_24 { pt3dadd( -113.496, 35.893, -137.929, 0.91 ) }
    dend_24 { pt3dadd( -114.797, 35.4313, -138.832, 0.23 ) }
    dend_24 { pt3dadd( -116.223, 34.8735, -139.913, 0.68 ) }
    dend_24 { pt3dadd( -117.67, 34.2739, -141.231, 0.68 ) }
    dend_24 { pt3dadd( -119.038, 33.7569, -142.73, 0.46 ) }
    dend_24 { pt3dadd( -119.588, 33.5982, -143.436, 0.68 ) }
    dend_24 { pt3dadd( -120.991, 33.3502, -145.539, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -121.715, 33.3431, -146.86, 0.91 ) }
    dend_24 { pt3dadd( -123.262, 33.8022, -150.255, 0.23 ) }
    dend_24 { pt3dadd( -124.399, 34.3358, -152.929, 0.23 ) }
    dend_24 { pt3dadd( -125.234, 34.8767, -155.015, 0.23 ) }
    dend_24 { pt3dadd( -125.758, 35.3296, -156.436, 0.23 ) }
    dend_24 { pt3dadd( -126.475, 36.205, -158.534, 0.23 ) }
    dend_24 { pt3dadd( -127.29, 37.6495, -161.465, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 7/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 23.8424, 4.45667, -13.2562, 0.68 ) }
    dend_20 { pt3dadd( 24.0191, 4.57793, -11.4087, 0.68 ) }
    dend_20 { pt3dadd( 24.4565, 4.68493, -8.69808, 0.68 ) }
    dend_20 { pt3dadd( 24.9787, 4.87379, -5.83731, 0.68 ) }
    dend_20 { pt3dadd( 25.427, 5.1171, -3.62421, 0.68 ) }
    dend_20 { pt3dadd( 26.0058, 5.56751, -0.775311, 0.68 ) }
    dend_20 { pt3dadd( 26.466, 5.96842, 1.3431, 0.68 ) }
    dend_20 { pt3dadd( 27.2393, 6.59555, 4.33441, 0.68 ) }
    dend_20 { pt3dadd( 28.1308, 7.1898, 7.20079, 0.68 ) }
    dend_20 { pt3dadd( 29.0753, 7.6166, 9.8864, 0.68 ) }
    dend_20 { pt3dadd( 29.8699, 7.76587, 12.0925, 0.68 ) }
    dend_20 { pt3dadd( 30.5028, 7.73465, 13.6971, 0.68 ) }
    dend_20 { pt3dadd( 31.2089, 7.52712, 15.1547, 0.68 ) }
    dend_20 { pt3dadd( 32.2834, 6.99768, 17.1345, 0.68 ) }
    dend_20 { pt3dadd( 33.4055, 6.34001, 18.928, 0.68 ) }
    dend_20 { pt3dadd( 34.8122, 5.46062, 20.8159, 0.91 ) }
    dend_20 { pt3dadd( 36.6346, 4.44415, 22.7741, 0.68 ) }
    dend_20 { pt3dadd( 37.7734, 3.9213, 23.8883, 0.68 ) }
    dend_20 { pt3dadd( 39.6994, 3.37155, 25.5991, 0.68 ) }
    dend_20 { pt3dadd( 41.4353, 3.11077, 26.851, 0.68 ) }
    dend_20 { pt3dadd( 43.5557, 2.90073, 28.1273, 0.68 ) }
    dend_20 { pt3dadd( 45.8836, 2.52395, 29.287, 0.68 ) }
    dend_20 { pt3dadd( 48.3807, 2.07748, 30.441, 0.68 ) }
    dend_20 { pt3dadd( 50.9597, 1.53468, 31.5401, 0.68 ) }
    dend_20 { pt3dadd( 53.8493, 0.795023, 32.6672, 0.68 ) }
    dend_20 { pt3dadd( 56.401, 0.100823, 33.6674, 0.68 ) }
    dend_20 { pt3dadd( 60.073, -0.869006, 35.2386, 0.68 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 34/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 23.8424, 4.45667, -13.2562, 0.68 ) }
    dend_15 { pt3dadd( 24.5089, 5.34622, -13.1909, 0.68 ) }
    dend_15 { pt3dadd( 25.2475, 6.33763, -13.065, 0.68 ) }
    dend_15 { pt3dadd( 26.2622, 7.6989, -12.98, 0.68 ) }
    dend_15 { pt3dadd( 27.3198, 9.11767, -12.8913, 0.46 ) }
    dend_15 { pt3dadd( 28.3585, 10.5112, -12.8043, 0.68 ) }
    dend_15 { pt3dadd( 29.497, 12.0385, -12.7089, 0.91 ) }
    dend_15 { pt3dadd( 30.1717, 12.991, -12.585, 0.68 ) }
    dend_15 { pt3dadd( 31.2525, 14.4985, -12.2834, 0.91 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 43/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -24.7809, 10.458, -19.3313, 0.68 ) }
    dend_8 { pt3dadd( -25.5681, 11.4359, -20.3633, 0.68 ) }
    dend_8 { pt3dadd( -26.1493, 11.9989, -21.0947, 0.68 ) }
    dend_8 { pt3dadd( -26.997, 12.6142, -22.0991, 0.91 ) }
    dend_8 { pt3dadd( -27.7628, 13.0723, -22.98, 0.91 ) }
    dend_8 { pt3dadd( -28.6399, 13.5338, -23.9635, 0.68 ) }
    dend_8 { pt3dadd( -29.429, 13.8982, -24.8789, 0.91 ) }
    dend_8 { pt3dadd( -30.0465, 14.1196, -25.6052, 0.46 ) }
    dend_8 { pt3dadd( -30.8621, 14.4495, -26.6066, 0.68 ) }
    dend_8 { pt3dadd( -31.5051, 14.8167, -27.5128, 0.46 ) }
    dend_8 { pt3dadd( -31.8417, 15.1361, -28.0719, 0.68 ) }
    dend_8 { pt3dadd( -32.613, 16.333, -29.5655, 0.68 ) }
    dend_8 { pt3dadd( -33.0981, 17.3366, -30.5811, 0.68 ) }
    dend_8 { pt3dadd( -33.6438, 18.5628, -31.6523, 0.91 ) }
    dend_8 { pt3dadd( -34.2147, 19.8785, -32.7954, 0.68 ) }
    dend_8 { pt3dadd( -34.6995, 20.8761, -33.7489, 0.91 ) }
    dend_8 { pt3dadd( -35.1176, 21.6389, -34.5632, 0.68 ) }
    dend_8 { pt3dadd( -35.8153, 22.7803, -35.8826, 0.68 ) }
    dend_8 { pt3dadd( -36.4328, 23.649, -36.9905, 0.91 ) }
    dend_8 { pt3dadd( -37.3679, 24.7961, -38.6327, 0.91 ) }
    dend_8 { pt3dadd( -38.2682, 25.7755, -40.1152, 0.91 ) }
    dend_8 { pt3dadd( -39.0038, 26.5024, -41.3753, 0.91 ) }
    dend_8 { pt3dadd( -39.9092, 27.3119, -42.9553, 0.91 ) }
    dend_8 { pt3dadd( -40.7652, 28.014, -44.4788, 0.68 ) }
    dend_8 { pt3dadd( -41.4495, 28.4664, -45.6036, 0.68 ) }
    dend_8 { pt3dadd( -42.3489, 28.914, -46.8324, 0.68 ) }
    dend_8 { pt3dadd( -43.9668, 29.5296, -48.8107, 0.91 ) }
    dend_8 { pt3dadd( -45.0422, 29.8254, -50.0722, 0.91 ) }
    dend_8 { pt3dadd( -45.9033, 30.0115, -51.1038, 0.91 ) }
    dend_8 { pt3dadd( -46.8748, 30.2097, -52.3781, 0.46 ) }
    dend_8 { pt3dadd( -47.8093, 30.4484, -53.7638, 0.46 ) }
    dend_8 { pt3dadd( -48.3084, 30.6223, -54.6865, 0.46 ) }
    dend_8 { pt3dadd( -49.0762, 30.9696, -56.1513, 0.46 ) }
    dend_8 { pt3dadd( -49.4008, 31.107, -56.7964, 0.46 ) }
    dend_8 { pt3dadd( -49.8358, 31.2667, -57.6431, 0.46 ) }
    dend_8 { pt3dadd( -50.4179, 31.376, -58.8111, 0.46 ) }
    dend_8 { pt3dadd( -51.1485, 31.3885, -60.0561, 0.46 ) }
    dend_8 { pt3dadd( -51.8956, 31.3369, -61.1442, 0.46 ) }
    dend_8 { pt3dadd( -52.7113, 31.2502, -62.1575, 0.91 ) }
    dend_8 { pt3dadd( -54.1424, 31.0918, -63.8003, 0.46 ) }
    dend_8 { pt3dadd( -55.5306, 30.9627, -65.2604, 0.46 ) }
    dend_8 { pt3dadd( -57.1743, 30.831, -66.8759, 0.23 ) }
    dend_8 { pt3dadd( -57.7872, 30.7816, -67.4684, 0.23 ) }
    dend_8 { pt3dadd( -58.2352, 30.7431, -67.939, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 87/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -24.7809, 10.458, -19.3313, 0.23 ) }
    dend_7 { pt3dadd( -26.0266, 10.9592, -20.5664, 0.23 ) }
    dend_7 { pt3dadd( -26.3461, 11.0294, -20.8318, 0.46 ) }
    dend_7 { pt3dadd( -27.6407, 11.2124, -21.6698, 0.46 ) }
    dend_7 { pt3dadd( -28.8984, 11.3735, -22.3619, 0.23 ) }
    dend_7 { pt3dadd( -29.9649, 11.4694, -22.9173, 0.23 ) }
    dend_7 { pt3dadd( -31.3687, 11.5611, -23.6208, 0.68 ) }
    dend_7 { pt3dadd( -33.4362, 11.5576, -24.5981, 0.23 ) }
    dend_7 { pt3dadd( -35.1203, 11.5174, -25.3081, 0.46 ) }
    dend_7 { pt3dadd( -36.3751, 11.4361, -25.7867, 0.23 ) }
    dend_7 { pt3dadd( -37.7273, 11.3258, -26.2753, 0.23 ) }
    dend_7 { pt3dadd( -38.8253, 11.2464, -26.7023, 0.46 ) }
    dend_7 { pt3dadd( -40.1319, 11.1202, -27.2155, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( -41.6077, 10.9745, -27.7867, 0.46 ) }
    dend_7 { pt3dadd( -43.1221, 10.7989, -28.3627, 0.23 ) }
    dend_7 { pt3dadd( -44.3356, 10.6484, -28.7619, 0.46 ) }
    dend_7 { pt3dadd( -45.846, 10.4808, -29.1592, 0.46 ) }
    dend_7 { pt3dadd( -47.2504, 10.3699, -29.4935, 0.46 ) }
    dend_7 { pt3dadd( -48.8066, 10.3369, -29.8608, 0.23 ) }
    dend_7 { pt3dadd( -50.2267, 10.4033, -30.1084, 0.23 ) }
    dend_7 { pt3dadd( -51.8298, 10.5889, -30.2444, 0.68 ) }
    dend_7 { pt3dadd( -53.1298, 10.8094, -30.2048, 0.23 ) }
    dend_7 { pt3dadd( -55.5592, 11.2938, -30.0074, 0.23 ) }
    dend_7 { pt3dadd( -57.4438, 11.7813, -29.7925, 0.68 ) }
    dend_7 { pt3dadd( -59.9916, 12.6048, -29.3318, 0.46 ) }
    dend_7 { pt3dadd( -61.3441, 13.1546, -29.0144, 0.46 ) }
    dend_7 { pt3dadd( -63.1229, 14.045, -28.3419, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 14/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.19372, 24.2629, -20.0066, 0.68 ) }
    dend_31 { pt3dadd( 6.29409, 23.8769, -21.1702, 0.68 ) }
    dend_31 { pt3dadd( 6.31868, 23.4467, -22.5042, 0.68 ) }
    dend_31 { pt3dadd( 6.32283, 23.0158, -23.9031, 0.68 ) }
    dend_31 { pt3dadd( 6.31889, 22.705, -24.9587, 0.91 ) }
    dend_31 { pt3dadd( 6.34589, 22.2678, -26.5217, 0.91 ) }
    dend_31 { pt3dadd( 6.42172, 21.7187, -28.8441, 0.91 ) }
    dend_31 { pt3dadd( 6.45188, 21.3593, -30.6338, 0.91 ) }
    dend_31 { pt3dadd( 6.49298, 21.2183, -31.6701, 0.91 ) }
    dend_31 { pt3dadd( 6.58999, 21.1641, -32.6116, 0.91 ) }
    dend_31 { pt3dadd( 6.74872, 21.1956, -33.4664, 0.91 ) }
    dend_31 { pt3dadd( 7.11438, 21.3402, -34.8818, 0.91 ) }
    dend_31 { pt3dadd( 7.41164, 21.4341, -35.8522, 0.91 ) }
    dend_31 { pt3dadd( 7.73548, 21.4418, -36.9702, 0.91 ) }
    dend_31 { pt3dadd( 7.84357, 21.3983, -37.5588, 0.91 ) }
    dend_31 { pt3dadd( 7.97078, 21.2296, -39.2256, 0.91 ) }
    dend_31 { pt3dadd( 7.91247, 21.1108, -40.3628, 0.91 ) }
    dend_31 { pt3dadd( 7.70634, 20.9215, -42.0724, 0.91 ) }
    dend_31 { pt3dadd( 7.53783, 20.766, -43.2762, 0.91 ) }
    dend_31 { pt3dadd( 7.3187, 20.5257, -45.007, 0.91 ) }
    dend_31 { pt3dadd( 7.25672, 20.3122, -46.2794, 0.91 ) }
    dend_31 { pt3dadd( 7.39395, 19.9829, -48.0895, 0.91 ) }
    dend_31 { pt3dadd( 7.58474, 19.8415, -49.142, 0.91 ) }
    dend_31 { pt3dadd( 7.9786, 19.7311, -50.777, 0.91 ) }
    dend_31 { pt3dadd( 8.39696, 19.6886, -52.2413, 0.91 ) }
    dend_31 { pt3dadd( 8.97144, 19.6849, -53.9213, 0.91 ) }
    dend_31 { pt3dadd( 9.44863, 19.7085, -55.2472, 0.91 ) }
    dend_31 { pt3dadd( 10.2642, 19.818, -57.3073, 0.91 ) }
    dend_31 { pt3dadd( 10.7764, 19.9321, -58.6458, 0.91 ) }
    dend_31 { pt3dadd( 11.3075, 20.1199, -60.0739, 0.91 ) }
    dend_31 { pt3dadd( 11.8008, 20.352, -61.4509, 0.68 ) }
    dend_31 { pt3dadd( 12.2334, 20.5846, -62.6675, 0.68 ) }
    dend_31 { pt3dadd( 12.6704, 20.8454, -63.8781, 0.68 ) }
    dend_31 { pt3dadd( 12.9824, 21.0232, -64.6792, 0.68 ) }
    dend_31 { pt3dadd( 13.3524, 21.2554, -65.7569, 0.91 ) }
    dend_31 { pt3dadd( 13.9413, 21.6406, -67.4262, 0.91 ) }
    dend_31 { pt3dadd( 14.3701, 22.041, -68.9181, 0.91 ) }
    dend_31 { pt3dadd( 14.7693, 22.6288, -70.7031, 0.91 ) }
    dend_31 { pt3dadd( 14.9632, 23.1207, -72.0001, 0.91 ) }
    dend_31 { pt3dadd( 15.1767, 23.9374, -73.897, 0.91 ) }
    dend_31 { pt3dadd( 15.3336, 25.4344, -77.2678, 0.91 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 55/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 6.19372, 24.2629, -20.0066, 0.68 ) }
    dend_26 { pt3dadd( 5.24262, 26.2613, -19.5499, 0.68 ) }
    dend_26 { pt3dadd( 4.74084, 27.3156, -19.309, 0.91 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 58/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 60.073, -0.869006, 35.2386, 0.46 ) }
    dend_22 { pt3dadd( 60.3568, -2.43008, 35.4781, 0.46 ) }
    dend_22 { pt3dadd( 60.7155, -4.4266, 36.0058, 0.23 ) }
    dend_22 { pt3dadd( 61.0228, -6.03619, 36.634, 0.23 ) }
    dend_22 { pt3dadd( 61.3954, -7.9626, 37.5722, 0.23 ) }
    dend_22 { pt3dadd( 61.6011, -8.87939, 38.0275, 0.23 ) }
    dend_22 { pt3dadd( 61.9286, -10.3384, 38.752, 0.68 ) }
    dend_22 { pt3dadd( 62.4003, -12.2965, 39.8559, 0.23 ) }
    dend_22 { pt3dadd( 62.8346, -14.0988, 40.9833, 0.46 ) }
    dend_22 { pt3dadd( 63.5539, -16.8907, 42.8068, 0.23 ) }
    dend_22 { pt3dadd( 64.4583, -20.5418, 45.2666, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 69/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 60.073, -0.869006, 35.2386, 0.68 ) }
    dend_21 { pt3dadd( 61.2003, -1.09976, 36.051, 0.68 ) }
    dend_21 { pt3dadd( 63.1684, -1.58342, 37.5934, 0.46 ) }
    dend_21 { pt3dadd( 64.2652, -1.97634, 38.4992, 0.46 ) }
    dend_21 { pt3dadd( 65.6753, -2.61602, 39.6304, 0.46 ) }
    dend_21 { pt3dadd( 67.5413, -3.56779, 40.9777, 0.68 ) }
    dend_21 { pt3dadd( 69.305, -4.52355, 42.101, 0.46 ) }
    dend_21 { pt3dadd( 71.136, -5.61335, 43.1047, 0.46 ) }
    dend_21 { pt3dadd( 72.7221, -6.58676, 43.9229, 0.46 ) }
    dend_21 { pt3dadd( 74.382, -7.54052, 44.8417, 0.68 ) }
    dend_21 { pt3dadd( 75.7044, -8.3058, 45.5935, 0.68 ) }
    dend_21 { pt3dadd( 76.6972, -8.96138, 46.308, 0.46 ) }
    dend_21 { pt3dadd( 78.2556, -10.2025, 47.5227, 0.46 ) }
    dend_21 { pt3dadd( 79.6527, -11.4818, 48.8513, 0.46 ) }
    dend_21 { pt3dadd( 81.0712, -12.8179, 50.5623, 0.46 ) }
    dend_21 { pt3dadd( 81.7938, -13.489, 51.6342, 0.46 ) }
    dend_21 { pt3dadd( 83.1664, -14.6627, 53.8631, 0.46 ) }
    dend_21 { pt3dadd( 84.4415, -15.754, 56.0722, 0.46 ) }
    dend_21 { pt3dadd( 85.364, -16.5753, 57.6973, 0.46 ) }
    dend_21 { pt3dadd( 86.3607, -17.4695, 59.5296, 0.46 ) }
    dend_21 { pt3dadd( 87.3289, -18.2159, 61.2982, 0.46 ) }
    dend_21 { pt3dadd( 88.4867, -18.9223, 63.3085, 0.46 ) }
    dend_21 { pt3dadd( 89.0353, -19.1723, 64.2384, 0.46 ) }
    dend_21 { pt3dadd( 89.9839, -19.5151, 65.9299, 0.23 ) }
    dend_21 { pt3dadd( 90.8986, -19.925, 67.535, 0.23 ) }
    dend_21 { pt3dadd( 91.7983, -20.5821, 69.221, 0.46 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 95/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 31.2525, 14.4985, -12.2834, 0.68 ) }
    dend_17 { pt3dadd( 33.0959, 16.522, -11.8628, 0.68 ) }
    dend_17 { pt3dadd( 34.2668, 17.7597, -11.9114, 0.46 ) }
    dend_17 { pt3dadd( 35.5259, 19.1361, -12.2574, 0.46 ) }
    dend_17 { pt3dadd( 37.1077, 20.8109, -12.7064, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 38.3622, 22.1767, -13.0695, 0.46 ) }
    dend_17 { pt3dadd( 39.5964, 23.5742, -13.4313, 0.46 ) }
    dend_17 { pt3dadd( 41.5369, 25.6742, -14.0967, 0.46 ) }
    dend_17 { pt3dadd( 43.928, 28.1541, -14.9112, 0.46 ) }
    dend_17 { pt3dadd( 45.624, 29.8261, -15.4082, 0.46 ) }
    dend_17 { pt3dadd( 47.9559, 32.0105, -15.9725, 0.68 ) }
    dend_17 { pt3dadd( 49.4459, 33.3765, -16.2619, 0.46 ) }
    dend_17 { pt3dadd( 50.3679, 34.2262, -16.4422, 0.46 ) }
    dend_17 { pt3dadd( 52.2911, 35.8892, -16.6903, 0.46 ) }
    dend_17 { pt3dadd( 53.96, 37.3491, -16.8715, 0.46 ) }
    dend_17 { pt3dadd( 54.9396, 38.2815, -17.0191, 0.46 ) }
    dend_17 { pt3dadd( 56.1209, 39.4635, -17.2066, 0.46 ) }
    dend_17 { pt3dadd( 57.8877, 41.4401, -17.5193, 0.68 ) }
    dend_17 { pt3dadd( 60.2427, 44.4304, -18.0811, 0.46 ) }
    dend_17 { pt3dadd( 62.2534, 47.2161, -18.7547, 0.46 ) }
    dend_17 { pt3dadd( 64.139, 49.7943, -19.5409, 0.68 ) }
    dend_17 { pt3dadd( 65.2828, 51.3288, -20.0614, 0.46 ) }
    dend_17 { pt3dadd( 67.3474, 54.0797, -21.0499, 0.46 ) }
    dend_17 { pt3dadd( 68.635, 55.7288, -21.7337, 0.46 ) }
    dend_17 { pt3dadd( 70.2725, 57.7519, -22.7068, 0.68 ) }
    dend_17 { pt3dadd( 72.2954, 60.1279, -23.9719, 0.46 ) }
    dend_17 { pt3dadd( 74.0608, 62.0834, -25.0897, 0.68 ) }
    dend_17 { pt3dadd( 75.3258, 63.4091, -25.884, 0.46 ) }
    dend_17 { pt3dadd( 77.3499, 65.3225, -27.0545, 0.46 ) }
    dend_17 { pt3dadd( 79.0955, 66.9015, -27.8489, 0.46 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 31.2525, 14.4985, -12.2834, 0.68 ) }
    dend_16 { pt3dadd( 32.0432, 14.8971, -12.9785, 0.68 ) }
    dend_16 { pt3dadd( 33.4431, 15.455, -14.1274, 0.68 ) }
    dend_16 { pt3dadd( 34.5375, 15.8064, -15.0099, 0.68 ) }
    dend_16 { pt3dadd( 35.682, 16.1615, -16.0199, 0.46 ) }
    dend_16 { pt3dadd( 37.2978, 16.7415, -17.6732, 0.46 ) }
    dend_16 { pt3dadd( 38.2166, 17.119, -18.7989, 0.46 ) }
    dend_16 { pt3dadd( 38.7321, 17.352, -19.5462, 0.46 ) }
    dend_16 { pt3dadd( 39.0148, 17.5203, -20.0309, 0.46 ) }
    dend_16 { pt3dadd( 39.6225, 18.0129, -21.2459, 0.46 ) }
    dend_16 { pt3dadd( 40.3551, 18.6924, -22.6936, 0.46 ) }
    dend_16 { pt3dadd( 41.4696, 19.697, -24.7229, 0.46 ) }
    dend_16 { pt3dadd( 42.349, 20.3699, -26.1105, 0.46 ) }
    dend_16 { pt3dadd( 43.5026, 21.1434, -27.7213, 0.46 ) }
    dend_16 { pt3dadd( 44.5903, 21.7498, -28.9644, 0.68 ) }
    dend_16 { pt3dadd( 46.303, 22.4706, -30.565, 0.23 ) }
    dend_16 { pt3dadd( 47.6003, 22.8736, -31.6503, 0.46 ) }
    dend_16 { pt3dadd( 49.2556, 23.2272, -32.9326, 0.23 ) }
    dend_16 { pt3dadd( 50.1546, 23.3336, -33.651, 0.46 ) }
    dend_16 { pt3dadd( 51.6761, 23.4663, -34.9872, 0.68 ) }
    dend_16 { pt3dadd( 53.0434, 23.5669, -36.3602, 0.46 ) }
    dend_16 { pt3dadd( 54.1357, 23.6492, -37.726, 0.46 ) }
    dend_16 { pt3dadd( 54.6788, 23.7041, -38.6121, 0.46 ) }
    dend_16 { pt3dadd( 56.0637, 23.7947, -41.6154, 0.46 ) }
    dend_16 { pt3dadd( 56.5876, 23.7662, -43.0245, 0.46 ) }
    dend_16 { pt3dadd( 56.9372, 23.6965, -44.133, 0.46 ) }
    dend_16 { pt3dadd( 57.4623, 23.4874, -45.7953, 0.46 ) }
    dend_16 { pt3dadd( 58.4428, 23.0023, -48.4002, 0.46 ) }
    dend_16 { pt3dadd( 58.9865, 22.7047, -49.559, 0.46 ) }
    dend_16 { pt3dadd( 59.6993, 22.245, -50.7199, 0.23 ) }
    dend_16 { pt3dadd( 60.3643, 21.8334, -51.6038, 0.23 ) }
    dend_16 { pt3dadd( 62.0234, 20.8751, -53.4362, 0.23 ) }
    dend_16 { pt3dadd( 63.1307, 20.2537, -54.4521, 0.46 ) }
    dend_16 { pt3dadd( 64.6507, 19.3982, -55.6645, 0.23 ) }
    dend_16 { pt3dadd( 65.8184, 18.7843, -56.5624, 0.68 ) }
    dend_16 { pt3dadd( 67.0745, 18.1675, -57.5006, 0.23 ) }
    dend_16 { pt3dadd( 67.8151, 17.8113, -58.0286, 0.46 ) }
    dend_16 { pt3dadd( 68.9201, 17.298, -58.726, 0.23 ) }
    dend_16 { pt3dadd( 69.5029, 17.0082, -59.0845, 0.23 ) }
    dend_16 { pt3dadd( 71.2199, 16.1531, -60.1224, 0.23 ) }
    dend_16 { pt3dadd( 71.9604, 15.7957, -60.5771, 0.46 ) }
    dend_16 { pt3dadd( 73.5945, 14.9945, -61.5455, 0.23 ) }
    dend_16 { pt3dadd( 74.6214, 14.5266, -62.181, 0.23 ) }
    dend_16 { pt3dadd( 75.5888, 14.0869, -62.8119, 0.46 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 69/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -58.2352, 30.7431, -67.939, 0.46 ) }
    dend_10 { pt3dadd( -59.2959, 30.6349, -68.6449, 0.46 ) }
    dend_10 { pt3dadd( -61.2699, 30.4765, -69.9416, 0.68 ) }
    dend_10 { pt3dadd( -62.5672, 30.4419, -70.8994, 0.46 ) }
    dend_10 { pt3dadd( -63.27, 30.4841, -71.5038, 0.91 ) }
    dend_10 { pt3dadd( -63.6421, 30.5503, -71.8542, 0.23 ) }
    dend_10 { pt3dadd( -64.2839, 30.7206, -72.4649, 0.23 ) }
    dend_10 { pt3dadd( -65.2461, 31.1026, -73.4311, 0.68 ) }
    dend_10 { pt3dadd( -66.368, 31.6787, -74.7398, 0.46 ) }
    dend_10 { pt3dadd( -67.2114, 32.1018, -75.8453, 0.46 ) }
    dend_10 { pt3dadd( -67.9446, 32.4406, -76.8545, 0.46 ) }
    dend_10 { pt3dadd( -68.8032, 32.7915, -78.0025, 0.91 ) }
    dend_10 { pt3dadd( -70.1132, 33.2794, -79.7104, 0.91 ) }
    dend_10 { pt3dadd( -71.5708, 33.7181, -81.4631, 0.46 ) }
    dend_10 { pt3dadd( -72.9351, 34.0032, -82.9345, 0.46 ) }
    dend_10 { pt3dadd( -74.0058, 34.1803, -83.9526, 0.23 ) }
    dend_10 { pt3dadd( -74.9731, 34.3382, -84.7302, 0.46 ) }
    dend_10 { pt3dadd( -76.3506, 34.6129, -85.6277, 0.23 ) }
    dend_10 { pt3dadd( -77.1432, 34.7893, -86.047, 0.46 ) }
    dend_10 { pt3dadd( -78.4002, 35.1065, -86.5511, 0.46 ) }
    dend_10 { pt3dadd( -80.3471, 35.6678, -87.1282, 0.46 ) }
    dend_10 { pt3dadd( -82.5967, 36.3455, -87.6429, 0.46 ) }
    dend_10 { pt3dadd( -83.589, 36.6523, -87.817, 0.46 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -58.2352, 30.7431, -67.939, 0.23 ) }
    dend_9 { pt3dadd( -56.992, 29.8618, -70.0602, 0.23 ) }
    dend_9 { pt3dadd( -55.9288, 29.1082, -71.8741, 0.23 ) }
    dend_9 { pt3dadd( -55.5035, 28.8067, -72.5997, 0.46 ) }
    dend_9 { pt3dadd( -54.917, 28.391, -73.6003, 0.23 ) }
    dend_9 { pt3dadd( -54.3778, 28.0087, -74.5203, 0.46 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 98/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 15.3336, 25.4344, -77.2678, 0.68 ) }
    dend_33 { pt3dadd( 15.551, 25.5415, -79.2314, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_33 { pt3dadd( 15.8869, 25.5404, -81.6896, 0.68 ) }
    dend_33 { pt3dadd( 16.1873, 25.4726, -83.2467, 0.68 ) }
    dend_33 { pt3dadd( 16.7594, 25.3132, -85.4188, 0.68 ) }
    dend_33 { pt3dadd( 17.3316, 25.1481, -87.1977, 0.68 ) }
    dend_33 { pt3dadd( 18.1999, 24.9055, -89.414, 0.68 ) }
    dend_33 { pt3dadd( 19.5232, 24.4638, -91.9875, 0.68 ) }
    dend_33 { pt3dadd( 20.547, 24.0823, -93.4979, 0.68 ) }
    dend_33 { pt3dadd( 22.3488, 23.4229, -95.5351, 0.68 ) }
    dend_33 { pt3dadd( 23.5219, 23.0125, -96.5238, 0.68 ) }
    dend_33 { pt3dadd( 25.0759, 22.5206, -97.6663, 0.46 ) }
    dend_33 { pt3dadd( 26.4387, 22.0836, -98.4815, 0.68 ) }
    dend_33 { pt3dadd( 28.1192, 21.5695, -99.3708, 0.46 ) }
    dend_33 { pt3dadd( 30.602, 20.828, -100.682, 0.68 ) }
    dend_33 { pt3dadd( 32.7587, 20.1888, -101.916, 0.46 ) }
    dend_33 { pt3dadd( 35.6394, 19.3257, -103.789, 0.46 ) }
    dend_33 { pt3dadd( 38.0428, 18.5811, -105.601, 0.46 ) }
    dend_33 { pt3dadd( 40.042, 17.9292, -107.342, 0.46 ) }
    dend_33 { pt3dadd( 41.4175, 17.4124, -108.756, 0.46 ) }
    dend_33 { pt3dadd( 42.9475, 16.7128, -110.557, 0.46 ) }
    dend_33 { pt3dadd( 43.7162, 16.2848, -111.621, 0.46 ) }
    dend_33 { pt3dadd( 44.8171, 15.5375, -113.305, 0.23 ) }
    dend_33 { pt3dadd( 46.0286, 14.5928, -115.36, 0.23 ) }
    dend_33 { pt3dadd( 47.043, 13.6022, -117.145, 0.68 ) }
    dend_33 { pt3dadd( 47.7672, 12.8061, -118.441, 0.68 ) }
    dend_33 { pt3dadd( 48.9491, 11.3757, -120.32, 0.68 ) }
    dend_33 { pt3dadd( 49.9643, 10.0247, -121.673, 0.68 ) }
    dend_33 { pt3dadd( 50.7029, 8.96229, -122.626, 0.68 ) }
    dend_33 { pt3dadd( 51.1832, 8.23556, -123.164, 0.68 ) }
    dend_33 { pt3dadd( 51.7874, 7.31462, -123.685, 0.68 ) }
    dend_33 { pt3dadd( 53.6378, 4.5473, -124.792, 0.23 ) }
    dend_33 { pt3dadd( 55.5159, 1.79643, -125.286, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 31/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 15.3336, 25.4344, -77.2678, 0.68 ) }
    dend_32 { pt3dadd( 13.4842, 26.6219, -79.4931, 0.68 ) }
    dend_32 { pt3dadd( 11.277, 27.9039, -82.167, 0.68 ) }
    dend_32 { pt3dadd( 9.59447, 28.7507, -84.4523, 0.68 ) }
    dend_32 { pt3dadd( 7.91436, 29.4202, -86.9033, 0.68 ) }
    dend_32 { pt3dadd( 6.74141, 29.822, -88.7406, 0.91 ) }
    dend_32 { pt3dadd( 5.22759, 30.2271, -91.1755, 0.91 ) }
    dend_32 { pt3dadd( 4.14953, 30.371, -92.9964, 0.91 ) }
    dend_32 { pt3dadd( 2.18168, 30.3099, -96.6088, 0.91 ) }
    dend_32 { pt3dadd( 0.952604, 30.1385, -99.0648, 0.91 ) }
    dend_32 { pt3dadd( -0.299653, 29.902, -101.747, 0.91 ) }
    dend_32 { pt3dadd( -1.42093, 29.7134, -104.222, 0.68 ) }
    dend_32 { pt3dadd( -2.35936, 29.5488, -106.317, 0.68 ) }
    dend_32 { pt3dadd( -3.55477, 29.4062, -108.868, 0.68 ) }
    dend_32 { pt3dadd( -5.13655, 29.3215, -112.041, 0.68 ) }
    dend_32 { pt3dadd( -6.91701, 29.3335, -115.637, 0.68 ) }
    dend_32 { pt3dadd( -8.04435, 29.3624, -117.893, 0.68 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 48/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 4.74084, 27.3156, -19.309, 0.68 ) }
    dend_30 { pt3dadd( 3.65163, 27.9306, -20.237, 0.68 ) }
    dend_30 { pt3dadd( 2.09247, 29.034, -21.7185, 0.68 ) }
    dend_30 { pt3dadd( 1.01361, 29.9254, -22.7952, 0.68 ) }
    dend_30 { pt3dadd( -0.260291, 30.9951, -23.9342, 0.68 ) }
    dend_30 { pt3dadd( -1.28219, 31.8623, -24.8312, 0.91 ) }
    dend_30 { pt3dadd( -3.51695, 33.7624, -26.7588, 0.68 ) }
    dend_30 { pt3dadd( -4.73333, 34.8281, -27.7836, 0.68 ) }
    dend_30 { pt3dadd( -5.75981, 35.7534, -28.5724, 0.68 ) }
    dend_30 { pt3dadd( -7.52472, 37.3379, -29.81, 0.68 ) }
    dend_30 { pt3dadd( -9.48501, 39.0079, -31.0294, 0.68 ) }
    dend_30 { pt3dadd( -10.5449, 39.8885, -31.6415, 0.68 ) }
    dend_30 { pt3dadd( -11.6704, 40.7482, -32.1993, 0.68 ) }
    dend_30 { pt3dadd( -12.8153, 41.5518, -32.7068, 0.91 ) }
    dend_30 { pt3dadd( -14.1808, 42.487, -33.2883, 0.68 ) }
    dend_30 { pt3dadd( -15.9337, 43.7027, -34.0609, 0.68 ) }
    dend_30 { pt3dadd( -17.6623, 44.8732, -34.7607, 0.46 ) }
    dend_30 { pt3dadd( -18.8779, 45.6508, -35.2771, 0.46 ) }
    dend_30 { pt3dadd( -20.0811, 46.4074, -35.8277, 0.68 ) }
    dend_30 { pt3dadd( -21.2789, 47.1335, -36.4194, 0.68 ) }
    dend_30 { pt3dadd( -22.5901, 47.8698, -37.0834, 0.68 ) }
    dend_30 { pt3dadd( -23.4721, 48.383, -37.5863, 0.68 ) }
    dend_30 { pt3dadd( -25.068, 49.2882, -38.5372, 0.68 ) }
    dend_30 { pt3dadd( -26.4116, 50.0453, -39.4121, 0.68 ) }
    dend_30 { pt3dadd( -27.3756, 50.5396, -40.0868, 0.68 ) }
    dend_30 { pt3dadd( -29.1152, 51.404, -41.317, 0.68 ) }
    dend_30 { pt3dadd( -30.9457, 52.3014, -42.6094, 0.68 ) }
    dend_30 { pt3dadd( -33.2288, 53.4013, -44.2512, 0.46 ) }
    dend_30 { pt3dadd( -35.7988, 54.6152, -46.1557, 0.46 ) }
    dend_30 { pt3dadd( -37.8773, 55.4854, -47.7101, 0.23 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 78/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.74084, 27.3156, -19.309, 0.91 ) }
    dend_27 { pt3dadd( 5.39928, 29.0344, -21.1705, 0.91 ) }
    dend_27 { pt3dadd( 6.08048, 30.8126, -23.0963, 0.91 ) }
    dend_27 { pt3dadd( 6.87194, 32.8786, -25.3338, 0.91 ) }
    dend_27 { pt3dadd( 7.16901, 33.654, -26.1736, 0.91 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 83/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 79.0955, 66.9015, -27.8489, 0.46 ) }
    dend_19 { pt3dadd( 80.3702, 67.8321, -29.2762, 0.46 ) }
    dend_19 { pt3dadd( 82.2496, 69.3331, -31.3929, 0.23 ) }
    dend_19 { pt3dadd( 83.4791, 70.3329, -32.7765, 0.23 ) }
    dend_19 { pt3dadd( 84.3018, 71.0445, -33.7487, 0.46 ) }
    dend_19 { pt3dadd( 86.1025, 72.6349, -36.0564, 0.23 ) }
    dend_19 { pt3dadd( 86.9648, 73.3815, -37.2153, 0.46 ) }
    dend_19 { pt3dadd( 87.6702, 73.9301, -38.2392, 0.68 ) }
    dend_19 { pt3dadd( 88.9061, 74.6841, -40.2154, 0.46 ) }
    dend_19 { pt3dadd( 90.0425, 75.2165, -42.0826, 0.68 ) }
    dend_19 { pt3dadd( 91.3952, 75.7094, -44.315, 0.46 ) }
    dend_19 { pt3dadd( 92.7674, 76.0841, -46.6665, 0.68 ) }
    dend_19 { pt3dadd( 94.6152, 76.3307, -49.9256, 0.68 ) }
    dend_19 { pt3dadd( 96.2276, 76.3638, -52.6765, 0.68 ) }
    dend_19 { pt3dadd( 97.8487, 76.325, -55.217, 0.23 ) }
    dend_19 { pt3dadd( 99.2735, 76.2536, -57.2495, 0.46 ) }
    dend_19 { pt3dadd( 101.348, 76.1636, -60.1198, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( 103.848, 76.0947, -63.5779, 0.46 ) }
    dend_19 { pt3dadd( 106.1, 76.13, -66.7791, 0.46 ) }
    dend_19 { pt3dadd( 107.515, 76.1828, -68.9483, 0.23 ) }
    dend_19 { pt3dadd( 107.835, 76.1919, -69.4915, 0.46 ) }
    dend_19 { pt3dadd( 109.636, 76.2888, -72.7899, 0.46 ) }
    dend_19 { pt3dadd( 110.768, 76.3936, -75.1493, 0.46 ) }
    dend_19 { pt3dadd( 111.91, 76.4779, -77.878, 0.46 ) }
    dend_19 { pt3dadd( 113.517, 76.4006, -82.2188, 0.23 ) }
    dend_19 { pt3dadd( 114.426, 76.2463, -84.7957, 0.23 ) }
    dend_19 { pt3dadd( 115.207, 76.0382, -87.1055, 0.68 ) }
    dend_19 { pt3dadd( 116.003, 75.7895, -89.3305, 0.68 ) }
    dend_19 { pt3dadd( 117.41, 75.3074, -93.224, 0.68 ) }
    dend_19 { pt3dadd( 118.691, 74.8849, -96.4938, 0.68 ) }
    dend_19 { pt3dadd( 120.521, 74.3491, -100.792, 0.68 ) }
    dend_19 { pt3dadd( 122.009, 73.9835, -103.823, 0.68 ) }
    dend_19 { pt3dadd( 123.655, 73.6078, -107.0, 0.23 ) }
    dend_19 { pt3dadd( 125.035, 73.4027, -109.484, 0.23 ) }
    dend_19 { pt3dadd( 125.997, 73.358, -111.191, 0.23 ) }
    dend_19 { pt3dadd( 126.714, 73.3756, -112.332, 0.23 ) }
    dend_19 { pt3dadd( 129.439, 73.5589, -115.527, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 20/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 79.0955, 66.9015, -27.8489, 0.46 ) }
    dend_18 { pt3dadd( 81.0709, 67.7916, -27.1829, 0.46 ) }
    dend_18 { pt3dadd( 82.7506, 68.5769, -26.6901, 0.46 ) }
    dend_18 { pt3dadd( 85.0616, 69.707, -26.1228, 0.68 ) }
    dend_18 { pt3dadd( 86.634, 70.4407, -25.8384, 0.46 ) }
    dend_18 { pt3dadd( 88.3702, 71.2181, -25.5898, 0.46 ) }
    dend_18 { pt3dadd( 89.5238, 71.7628, -25.4609, 0.46 ) }
    dend_18 { pt3dadd( 90.4288, 72.2131, -25.4313, 0.46 ) }
    dend_18 { pt3dadd( 92.2018, 73.2044, -25.5419, 0.23 ) }
    dend_18 { pt3dadd( 94.0312, 74.2773, -25.7713, 0.23 ) }
    dend_18 { pt3dadd( 95.0612, 74.8975, -25.9463, 0.23 ) }
    dend_18 { pt3dadd( 96.4732, 75.785, -26.1953, 0.46 ) }
    dend_18 { pt3dadd( 98.1023, 76.8733, -26.4737, 0.46 ) }
    dend_18 { pt3dadd( 99.3779, 77.7536, -26.671, 0.46 ) }
    dend_18 { pt3dadd( 101.337, 79.1365, -27.0081, 0.23 ) }
    dend_18 { pt3dadd( 102.729, 80.1488, -27.2807, 0.46 ) }
    dend_18 { pt3dadd( 103.864, 80.9473, -27.5596, 0.68 ) }
    dend_18 { pt3dadd( 105.33, 81.912, -27.9701, 0.46 ) }
    dend_18 { pt3dadd( 106.923, 82.9708, -28.4801, 0.46 ) }
    dend_18 { pt3dadd( 108.604, 84.0553, -29.0194, 0.23 ) }
    dend_18 { pt3dadd( 110.115, 84.9994, -29.5383, 0.46 ) }
    dend_18 { pt3dadd( 111.088, 85.5667, -29.8897, 0.46 ) }
    dend_18 { pt3dadd( 112.419, 86.2846, -30.4373, 0.23 ) }
    dend_18 { pt3dadd( 113.199, 86.6981, -30.794, 0.46 ) }
    dend_18 { pt3dadd( 114.976, 87.635, -31.5891, 0.23 ) }
    dend_18 { pt3dadd( 116.606, 88.4797, -32.1961, 0.23 ) }
    dend_18 { pt3dadd( 118.175, 89.3232, -32.7447, 0.46 ) }
    dend_18 { pt3dadd( 119.662, 90.1553, -33.2129, 0.46 ) }
    dend_18 { pt3dadd( 121.663, 91.2665, -33.793, 0.23 ) }
    dend_18 { pt3dadd( 123.792, 92.4613, -34.326, 0.23 ) }
    dend_18 { pt3dadd( 126.32, 93.8834, -34.9037, 0.23 ) }
    dend_18 { pt3dadd( 128.408, 95.0172, -35.2821, 0.46 ) }
    dend_18 { pt3dadd( 129.803, 95.7114, -35.4746, 0.23 ) }
    dend_18 { pt3dadd( 131.336, 96.4492, -35.6842, 0.46 ) }
    dend_18 { pt3dadd( 133.366, 97.3305, -35.9662, 0.46 ) }
    dend_18 { pt3dadd( 135.211, 98.084, -36.2576, 0.46 ) }
    dend_18 { pt3dadd( 137.23, 98.8179, -36.624, 0.46 ) }
    dend_18 { pt3dadd( 139.96, 99.7018, -37.1324, 0.46 ) }
    dend_18 { pt3dadd( 142.004, 100.342, -37.5081, 0.46 ) }
    dend_18 { pt3dadd( 143.919, 100.899, -37.8991, 0.23 ) }
    dend_18 { pt3dadd( 145.73, 101.358, -38.3351, 0.46 ) }
    dend_18 { pt3dadd( 148.463, 101.979, -39.1143, 0.23 ) }
    dend_18 { pt3dadd( 150.258, 102.337, -39.7214, 0.46 ) }
    dend_18 { pt3dadd( 152.177, 102.689, -40.4325, 0.23 ) }
    dend_18 { pt3dadd( 154.766, 103.081, -41.4309, 0.23 ) }
    dend_18 { pt3dadd( 156.743, 103.362, -42.3165, 0.23 ) }
    dend_18 { pt3dadd( 159.098, 103.591, -43.5378, 0.23 ) }
    dend_18 { pt3dadd( 160.26, 103.696, -44.2791, 0.46 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 68/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -83.589, 36.6523, -87.817, 0.23 ) }
    dend_12 { pt3dadd( -84.6732, 38.1254, -89.8118, 0.23 ) }
    dend_12 { pt3dadd( -85.4801, 39.2217, -91.2962, 0.23 ) }
    dend_12 { pt3dadd( -86.4179, 40.4961, -93.0217, 0.23 ) }
    dend_12 { pt3dadd( -86.9937, 41.2784, -94.0811, 0.46 ) }
    dend_12 { pt3dadd( -87.6882, 42.222, -95.3588, 0.23 ) }
    dend_12 { pt3dadd( -89.2053, 44.2834, -98.15, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -83.589, 36.6523, -87.817, 0.23 ) }
    dend_11 { pt3dadd( -84.5274, 34.3887, -88.8477, 0.23 ) }
    dend_11 { pt3dadd( -85.4114, 32.2565, -89.8186, 0.23 ) }
    dend_11 { pt3dadd( -86.0233, 30.7802, -90.4908, 0.46 ) }
    dend_11 { pt3dadd( -87.1336, 28.1022, -91.7103, 0.23 ) }
    dend_11 { pt3dadd( -88.352, 25.1632, -93.0485, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 81/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 7.16901, 33.654, -26.1736, 0.46 ) }
    dend_29 { pt3dadd( 6.20612, 35.3959, -28.2575, 0.46 ) }
    dend_29 { pt3dadd( 5.33224, 37.0478, -29.9873, 0.46 ) }
    dend_29 { pt3dadd( 4.35912, 39.0752, -32.0196, 0.46 ) }
    dend_29 { pt3dadd( 3.82974, 40.3436, -33.2115, 0.46 ) }
    dend_29 { pt3dadd( 3.11915, 42.1713, -34.907, 0.46 ) }
    dend_29 { pt3dadd( 2.471, 43.8053, -36.4465, 0.46 ) }
    dend_29 { pt3dadd( 1.95981, 45.442, -37.8545, 0.68 ) }
    dend_29 { pt3dadd( 1.40572, 47.3345, -39.3778, 0.68 ) }
    dend_29 { pt3dadd( 0.930297, 48.9321, -40.6485, 0.91 ) }
    dend_29 { pt3dadd( 0.256503, 51.1599, -42.2587, 0.68 ) }
    dend_29 { pt3dadd( -0.453737, 53.4389, -43.8281, 0.68 ) }
    dend_29 { pt3dadd( -1.20214, 55.5967, -45.2813, 0.68 ) }
    dend_29 { pt3dadd( -1.90359, 57.4246, -46.4886, 0.68 ) }
    dend_29 { pt3dadd( -2.64717, 59.1834, -47.6205, 0.68 ) }
    dend_29 { pt3dadd( -3.76963, 61.577, -49.2009, 0.68 ) }
    dend_29 { pt3dadd( -4.82837, 63.6367, -50.549, 0.68 ) }
    dend_29 { pt3dadd( -6.54813, 66.5479, -52.5641, 0.68 ) }
    dend_29 { pt3dadd( -7.45834, 67.8001, -53.5579, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_29 { pt3dadd( -8.95935, 69.6433, -55.2453, 0.68 ) }
    dend_29 { pt3dadd( -9.78171, 70.5126, -56.1691, 0.68 ) }
    dend_29 { pt3dadd( -10.6947, 71.3265, -57.1737, 0.91 ) }
    dend_29 { pt3dadd( -11.7649, 72.1317, -58.2059, 0.68 ) }
    dend_29 { pt3dadd( -13.3212, 73.1574, -59.6024, 0.91 ) }
    dend_29 { pt3dadd( -15.413, 74.5057, -61.6494, 0.46 ) }
    dend_29 { pt3dadd( -17.561, 76.0076, -63.8442, 0.46 ) }
    dend_29 { pt3dadd( -19.0438, 77.1729, -65.413, 0.23 ) }
    dend_29 { pt3dadd( -19.6962, 77.7331, -66.154, 0.46 ) }
    dend_29 { pt3dadd( -21.4082, 79.3023, -68.2268, 0.46 ) }
    dend_29 { pt3dadd( -23.2589, 80.9791, -70.3903, 0.46 ) }
    dend_29 { pt3dadd( -24.6208, 82.2892, -72.0865, 0.46 ) }
    dend_29 { pt3dadd( -25.724, 83.5286, -73.6941, 0.46 ) }
    dend_29 { pt3dadd( -26.9097, 85.0804, -75.6824, 0.46 ) }
    dend_29 { pt3dadd( -28.3957, 87.0532, -78.1987, 0.46 ) }
    dend_29 { pt3dadd( -29.5247, 88.5223, -80.0337, 0.46 ) }
    dend_29 { pt3dadd( -31.2117, 90.5857, -82.6905, 0.46 ) }
    dend_29 { pt3dadd( -32.278, 91.9348, -84.6332, 0.46 ) }
    dend_29 { pt3dadd( -33.1624, 93.3092, -86.6274, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 7.16901, 33.654, -26.1736, 0.68 ) }
    dend_28 { pt3dadd( 7.986, 34.3352, -27.162, 0.68 ) }
    dend_28 { pt3dadd( 8.98526, 35.1023, -27.968, 0.68 ) }
    dend_28 { pt3dadd( 9.97294, 35.8347, -28.6188, 0.68 ) }
    dend_28 { pt3dadd( 10.7324, 36.3924, -29.1122, 0.68 ) }
    dend_28 { pt3dadd( 11.6762, 37.0798, -29.775, 0.46 ) }
    dend_28 { pt3dadd( 12.7076, 37.8811, -30.577, 0.68 ) }
    dend_28 { pt3dadd( 13.6785, 38.6572, -31.3122, 0.68 ) }
    dend_28 { pt3dadd( 14.3546, 39.2249, -31.8068, 0.46 ) }
    dend_28 { pt3dadd( 15.2348, 40.0559, -32.5815, 0.91 ) }
    dend_28 { pt3dadd( 15.9684, 40.859, -33.3881, 0.91 ) }
    dend_28 { pt3dadd( 16.8769, 41.9699, -34.6167, 0.68 ) }
    dend_28 { pt3dadd( 17.3602, 42.6709, -35.4312, 0.68 ) }
    dend_28 { pt3dadd( 17.7442, 43.2793, -36.1583, 0.91 ) }
    dend_28 { pt3dadd( 18.6844, 44.8018, -37.9815, 0.68 ) }
    dend_28 { pt3dadd( 19.2079, 45.6748, -38.9754, 0.68 ) }
    dend_28 { pt3dadd( 19.5452, 46.2117, -39.5916, 0.68 ) }
    dend_28 { pt3dadd( 20.2898, 47.2476, -40.8578, 0.68 ) }
    dend_28 { pt3dadd( 20.7858, 47.88, -41.7054, 0.68 ) }
    dend_28 { pt3dadd( 21.1881, 48.3503, -42.3912, 0.68 ) }
    dend_28 { pt3dadd( 21.7494, 48.8886, -43.2583, 0.68 ) }
    dend_28 { pt3dadd( 22.3721, 49.4207, -44.3093, 0.68 ) }
    dend_28 { pt3dadd( 22.8547, 49.7953, -45.1355, 0.68 ) }
    dend_28 { pt3dadd( 23.7011, 50.3313, -46.5602, 0.68 ) }
    dend_28 { pt3dadd( 24.1117, 50.5341, -47.2469, 0.68 ) }
    dend_28 { pt3dadd( 24.7857, 50.7748, -48.2976, 0.68 ) }
    dend_28 { pt3dadd( 25.9861, 51.0707, -50.0473, 0.68 ) }
    dend_28 { pt3dadd( 26.7037, 51.1827, -50.9884, 0.68 ) }
    dend_28 { pt3dadd( 27.589, 51.2103, -52.0454, 0.68 ) }
    dend_28 { pt3dadd( 28.2128, 51.175, -52.7257, 0.68 ) }
    dend_28 { pt3dadd( 29.6131, 51.0254, -54.2235, 0.68 ) }
    dend_28 { pt3dadd( 30.161, 50.9557, -54.7874, 0.68 ) }
    dend_28 { pt3dadd( 31.4779, 50.7644, -55.9766, 0.68 ) }
    dend_28 { pt3dadd( 32.5834, 50.596, -56.9141, 0.68 ) }
    dend_28 { pt3dadd( 33.7855, 50.4421, -57.8868, 0.68 ) }
    dend_28 { pt3dadd( 34.5859, 50.3863, -58.5595, 0.68 ) }
    dend_28 { pt3dadd( 35.1993, 50.3432, -59.1644, 0.68 ) }
    dend_28 { pt3dadd( 36.5962, 50.3142, -60.652, 0.68 ) }
    dend_28 { pt3dadd( 37.1426, 50.3068, -61.2606, 0.68 ) }
    dend_28 { pt3dadd( 38.5402, 50.2542, -62.7943, 0.68 ) }
    dend_28 { pt3dadd( 39.5773, 50.1857, -63.9567, 0.68 ) }
    dend_28 { pt3dadd( 41.2545, 50.0446, -65.9816, 0.68 ) }
    dend_28 { pt3dadd( 42.5502, 49.9123, -67.7351, 0.23 ) }
    dend_28 { pt3dadd( 43.1344, 49.8427, -68.6234, 0.23 ) }
    dend_28 { pt3dadd( 43.7394, 49.7394, -69.548, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_34, dend_13, dend_4, dend_3, dend_0, dend_39, dend_38, dend_36, dend_35, dend_23, dend_14, dend_6, dend_5, dend_2, dend_1, dend_25, dend_24, dend_20, dend_15, dend_8, dend_7, dend_31, dend_26, dend_22, dend_21, dend_17, dend_16, dend_10, dend_9, dend_33, dend_32, dend_30, dend_27, dend_19, dend_18, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_34, dend_13, dend_4, dend_3, dend_0, dend_39, dend_38, dend_36, dend_35, dend_23, dend_14, dend_6, dend_5, dend_2, dend_1, dend_25, dend_24, dend_20, dend_15, dend_8, dend_7, dend_31, dend_26, dend_22, dend_21, dend_17, dend_16, dend_10, dend_9, dend_33, dend_32, dend_30, dend_27, dend_19, dend_18, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_35 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_5 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_20 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_8 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_7 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_31 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_21 OneSecGrp_SectionRef_29.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_16 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_30 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_19 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_29 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_28 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_13 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_34 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_4 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_14 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_37 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_15 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_25 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_22 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_11 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_3 nseg = 3
    dend_38 nseg = 5
    dend_36 nseg = 9
    dend_35 nseg = 5
    dend_5 nseg = 3
    dend_2 nseg = 5
    dend_1 nseg = 7
    dend_24 nseg = 11
    dend_20 nseg = 3
    dend_8 nseg = 3
    dend_7 nseg = 3
    dend_31 nseg = 3
    dend_21 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_30 nseg = 3
    dend_19 nseg = 5
    dend_18 nseg = 5
    dend_29 nseg = 5
    dend_28 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_DAC_1e259ec3b0_0_0


