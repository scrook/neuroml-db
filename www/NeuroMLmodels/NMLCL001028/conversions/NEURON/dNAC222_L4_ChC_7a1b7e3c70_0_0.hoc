// Cell: dNAC222_L4_ChC_7a1b7e3c70_0_0
/*
{
  "id" : "dNAC222_L4_ChC_7a1b7e3c70_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 11.1147, -3.45834, 0.37", "-0.0717928, 12.7905, -3.57917, 0.37", "-0.149292, 13.2457, -3.66645, 0.74", "-0.099351, 13.6045, -3.80037, 0.74", "0.32099, 14.7062, -4.30975, 0.37", "0.734486, 15.587, -4.68841, 0.66", "1.21778, 16.4961, -5.09289, 1.33", "1.67301, 17.174, -5.40837, 1.33", "2.43912, 18.2936, -5.93839, 0.74", "3.01138, 19.1887, -6.33753, 0.74", "3.88343, 20.6684, -6.99611, 1.25", "4.43298, 21.858, -7.50305, 2.06", "4.71176, 22.7462, -7.84165, 2.06", "4.9038, 23.949, -8.26007, 1.4", "4.8309, 25.3382, -8.72605, 0.74", "4.50954, 26.2493, -9.03449, 1.11", "3.95038, 26.9475, -9.27325, 1.11", "3.14419, 27.5442, -9.4623, 0.81", "2.08242, 28.0482, -9.72286, 0.81", "0.784995, 28.4578, -10.0655, 0.81", "-0.479968, 28.7581, -10.4359, 0.96", "-1.52429, 29.0048, -10.7539, 1.11", "-2.46246, 29.2549, -11.0931, 1.11", "-4.50047, 29.9318, -11.9832, 1.11", "-5.10262, 30.21, -12.3106, 1.11", "-6.07396, 30.9498, -12.9831, 0.59", "-6.64795, 31.7432, -13.4692, 0.96", "-6.98744, 32.4758, -13.7908, 1.25", "-7.22705, 33.1364, -14.0112, 1.55", "-7.3724, 33.5525, -14.1061, 1.55", "-7.89147, 34.8303, -14.3704, 0.74", "-8.70699, 36.3757, -14.6852, 0.96", "-9.38237, 37.3125, -14.9124, 0.66", "-9.94289, 37.902, -15.0895, 0.66", "-10.843, 38.6343, -15.3702, 0.81", "-11.5901, 39.1156, -15.6108, 0.96", "-12.5731, 39.6323, -15.9529, 1.47", "-13.4788, 40.0784, -16.2857, 1.62", "-14.334, 40.5647, -16.6091, 1.47", "-15.1301, 41.1102, -16.9261, 1.11", "-16.0294, 41.8603, -17.3102, 0.81", "-17.0882, 42.9771, -17.8303, 0.66", "-17.6572, 43.7477, -18.1462, 0.81", "-18.3889, 45.0482, -18.6188, 1.03", "-18.6717, 45.7259, -18.8576, 1.25", "-18.8731, 46.3564, -19.0902, 1.25", "-19.2371, 47.7175, -19.6418, 0.96", "-19.5083, 48.768, -20.1285, 0.81", "-19.8865, 50.064, -20.8105, 0.59", "-20.1982, 50.9645, -21.3169, 0.59", "-20.627, 52.0315, -21.9241, 0.59", "-21.0981, 53.0789, -22.4994, 0.59", "-21.5546, 54.0597, -22.9458, 0.44", "-21.987, 55.0836, -23.2879, 0.66", "-22.3223, 56.1775, -23.4754, 0.74", "-22.4309, 56.864, -23.5085, 0.96", "-22.4411, 57.6322, -23.4837, 0.96", "-22.2733, 59.3372, -23.4507, 0.52", "-22.0414, 60.7198, -23.4699, 0.59", "-21.7342, 62.2878, -23.5529, 0.59", "-21.5759, 63.1639, -23.639, 0.96", "-21.4544, 64.1748, -23.7892, 0.96", "-21.4163, 65.9697, -24.1681, 0.66", "-21.6092, 67.2035, -24.5582, 0.66", "-22.0345, 68.203, -24.9642, 0.96", "-22.5265, 68.809, -25.2339, 1.03", "-23.1544, 69.2984, -25.49, 1.03", "-23.9891, 69.7435, -25.7979, 1.03", "-25.1141, 70.1617, -26.2443, 0.74", "-25.9994, 70.4191, -26.6845, 0.74", "-26.5901, 70.5575, -27.0428, 0.52", "-27.8968, 70.8057, -28.0078, 0.52", "-29.0027, 70.9719, -28.9232, 0.52", "-30.1303, 71.1037, -29.9004, 1.11", "-30.7435, 71.1603, -30.4145, 1.4", "-31.4399, 71.2046, -30.9371, 1.4", "-32.6301, 71.2358, -31.6793, 0.81", "-33.364, 71.2514, -31.9794, 0.59", "-34.4691, 71.3053, -32.2154, 0.44", "-35.5793, 71.4106, -32.2795, 0.44", "-36.705, 71.5873, -32.2465, 0.74", "-37.7808, 71.882, -32.1624, 1.33", "-39.0892, 72.4625, -32.0863, 0.88", "-39.6691, 72.8507, -32.1675, 0.59", "-40.0284, 73.1911, -32.3145, 0.59", "-40.5339, 73.7935, -32.6841, 0.74", "-41.1593, 74.6383, -33.3309, 0.96", "-41.9667, 75.738, -34.3206, 0.59", "-42.8022, 76.8116, -35.4211, 0.59", "-43.2369, 77.3509, -35.9704, 0.81", "-43.7859, 77.9678, -36.5726, 0.96", "-44.3122, 78.4683, -37.0233, 1.03", "-45.2034, 79.2293, -37.5944, 0.66", "-45.4765, 79.4705, -37.7361, 0.66", "-46.2097, 80.2292, -38.0892, 0.81", "-46.8566, 81.0507, -38.4701, 0.81", "-47.3484, 81.8985, -38.8444, 0.66", "-47.7492, 82.8014, -39.2265, 0.66", "-48.2481, 84.2057, -39.8101, 0.52", "-48.5334, 85.0825, -40.1862, 0.81", "-48.7434, 85.7363, -40.4787, 0.74", "-49.2511, 87.1391, -41.0991, 0.59", "-49.5608, 87.8248, -41.377, 0.74", "-49.9748, 88.5034, -41.6175, 0.96", "-50.6141, 89.3185, -41.8079, 0.96", "-51.1736, 89.948, -41.8997, 0.74", "-51.948, 90.7657, -41.9631, 1.03", "-52.507, 91.3384, -41.9131, 1.25", "-52.8991, 91.7719, -41.8329, 0.81", "-53.731, 92.7955, -41.5749, 0.59", "-54.2379, 93.4902, -41.3615, 0.66", "-54.6586, 94.1198, -41.1477, 0.66", "-55.7496, 95.8627, -40.5112, 0.88", "-56.3027, 96.7555, -40.1597, 1.11", "-56.6829, 97.3659, -39.8951, 1.03", "-57.1455, 98.1029, -39.5659, 1.25", "-57.3182, 98.3769, -39.4324, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 9.92519, -4.39834, 1.11", "5.03639, 10.7771, -4.93378, 1.11", "5.69762, 11.4573, -5.37503, 1.11", "6.75257, 12.595, -6.0783, 1.11", "7.47616, 13.4145, -6.60774, 0.96", "8.67467, 14.6313, -7.39007, 1.55", "9.71707, 15.6041, -8.01971, 1.62", "10.331, 16.1151, -8.36348, 1.62", "11.2796, 16.8241, -8.7811, 1.25", "12.8701, 17.89, -9.26934, 0.96", "15.2998, 19.3545, -9.71238, 0.88", "16.4403, 19.9497, -9.7816, 1.55", "17.6856, 20.51, -9.75154, 1.84", "19.5534, 21.2626, -9.60523, 1.11", "20.5338, 21.6406, -9.47686, 1.03", "21.631, 22.1072, -9.26318, 1.25", "22.6923, 22.6925, -9.04075, 0.88", "23.671, 23.3621, -8.83647, 0.88", "24.5875, 24.0935, -8.64781, 0.88", "25.6636, 25.0036, -8.4189, 0.88", "26.5838, 25.8323, -8.12253, 0.96", "27.5359, 26.7604, -7.76674, 0.96", "28.4048, 27.7001, -7.37932, 0.81", "29.6834, 29.1679, -6.69662, 1.11", "30.5219, 30.0981, -6.16595, 1.4", "31.488, 31.0313, -5.44817, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.55044, 2.16166, 1.62", "4.32842, 8.85708, 2.5768, 1.62", "4.95948, 9.22429, 3.14512, 1.25", "6.10752, 9.73683, 4.29771, 1.25", "6.71462, 9.96992, 4.94811, 1.25", "7.34807, 10.1354, 5.70791, 1.92", "7.61612, 10.1808, 6.04927, 2.5", "8.19903, 10.1963, 6.85612, 2.5", "9.40473, 10.0511, 8.65042, 1.77", "10.241, 9.79619, 9.89221, 0.96", "11.421, 9.31111, 11.6401, 0.88", "11.7583, 9.15392, 12.1477, 0.88", "12.0244, 9.03477, 12.5361, 1.4", "12.2875, 8.93686, 12.8756, 1.4", "13.247, 8.72625, 13.8474, 0.66", "13.654, 8.74977, 14.1721, 0.66", "14.6204, 9.12554, 14.7442, 0.88", "15.2277, 9.45909, 15.0544, 0.88", "15.9903, 9.95707, 15.3565, 0.74", "16.5587, 10.3787, 15.5268, 1.4", "17.213, 10.9057, 15.6459, 2.06", "17.8573, 11.4083, 15.696, 1.84", "18.6299, 11.9832, 15.652, 1.18", "19.4338, 12.538, 15.6277, 1.18", "19.7602, 12.7348, 15.6739, 1.03", "20.3059, 12.9989, 15.9005, 1.03", "20.6669, 13.1421, 16.2645, 0.59", "21.0021, 13.2937, 16.8014, 0.59", "21.659, 13.6445, 18.1392, 0.88", "22.4231, 14.1201, 19.899, 1.62", "22.7514, 14.3533, 20.6642, 1.62", "23.5154, 14.9411, 22.434, 0.88", "23.8712, 15.2142, 23.2053, 0.88", "24.1995, 15.4746, 23.8431, 1.47", "24.4301, 15.66, 24.2089, 1.47", "25.0235, 16.1004, 24.9221, 0.81", "25.3544, 16.3026, 25.2414, 0.59", "25.7083, 16.4664, 25.5203, 0.59", "26.5717, 16.8223, 26.2084, 1.25", "27.9296, 17.4008, 27.3407, 0.74", "28.355, 17.6235, 27.7375, 0.29", "28.7335, 17.8389, 28.1385, 0.29", "28.9502, 17.9625, 28.4001, 0.59", "29.5242, 18.3017, 29.1075, 1.11", "29.8142, 18.4521, 29.4545, 1.11", "30.4366, 18.988, 30.1997, 1.11", "30.7882, 19.4756, 30.792, 0.59", "30.7978, 18.0772, 30.8895, 0.59", "30.9183, 16.6354, 31.2521, 0.52", "31.0015, 15.6283, 31.5029, 0.59", "36.3523, 17.3001, 36.2724, 0.59", "41.964, 19.6131, 40.4198, 0.59", "46.6018, 22.9608, 45.0046, 0.59", "51.1965, 26.9855, 49.0255, 0.59", "56.5392, 31.3042, 51.5066, 0.59", "61.3524, 35.8495, 54.5755, 0.59", "66.4309, 39.5942, 58.2873, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.27869, 1.60166, 1.69", "-3.56761, 6.27869, 1.60166, 1.69", "-4.0733, 6.5493, 1.86107, 1.69", "-4.70089, 6.81611, 2.21202, 1.4", "-5.15848, 6.98249, 2.54695, 1.03", "-5.79389, 7.22045, 3.06852, 0.88", "-6.23559, 7.39945, 3.45606, 0.88", "-6.80375, 7.60457, 4.01921, 0.59", "-7.32887, 7.78334, 4.59088, 0.44", "-8.30717, 8.10404, 5.72389, 0.37", "-8.64662, 8.21526, 6.13083, 0.37", "-9.20204, 8.40104, 6.81222, 0.37", "-10.525, 8.86443, 8.50986, 1.03", "-10.8277, 8.9831, 8.91199, 1.62", "-17.9861, 9.55633, 13.1322, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.17031, -14.5883, 0.74", "-5.47595, -2.22384, -14.5776, 0.74", "-7.35587, -3.41412, -14.5675, 1.03", "-9.00015, -4.43474, -14.5926, 1.25", "-10.315, -5.263, -14.6271, 1.62", "-11.3924, -5.93028, -14.661, 1.84", "-12.8052, -6.75376, -14.6704, 1.84", "-14.0567, -7.39724, -14.6136, 1.99", "-15.3717, -7.97991, -14.4883, 2.21", "-16.9081, -8.54507, -14.2661, 2.65", "-17.998, -8.88018, -14.0915, 2.5", "-19.8396, -9.37543, -13.8116, 1.77", "-21.79, -9.87517, -13.5781, 1.33", "-23.1161, -10.224, -13.5154, 1.18", "-24.6883, -10.6537, -13.6153, 1.11", "-25.8056, -10.9978, -13.931, 1.11", "-26.9566, -11.4022, -14.6342, 1.11", "-28.0563, -11.821, -15.7129, 1.4", "-29.1509, -12.2148, -17.1075, 1.03", "-30.0727, -12.5087, -18.4587, 0.88", "-31.4444, -12.8457, -20.6724, 0.88", "-32.9267, -13.0798, -23.2867, 1.47", "-34.048, -13.1842, -25.3601, 1.77", "-35.3032, -13.2048, -27.7722, 1.84", "-35.7471, -13.1786, -28.6477, 2.06", "-36.5512, -13.0793, -30.2763, 1.77", "-37.7899, -12.8235, -32.7232, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -1.96006, 9.10166, 2.06", "-5.36761, -1.96006, 9.10166, 2.06", "-6.24298, -1.87476, 9.56467, 2.06", "-6.90109, -1.84102, 9.88624, 2.06", "-8.60873, -1.86635, 10.6803, 1.84", "-9.55941, -1.95186, 11.1096, 1.84", "-10.2867, -2.07066, 11.4345, 1.99", "-11.5954, -2.39129, 12.0175, 1.55", "-12.6602, -2.77225, 12.4799, 1.03", "-13.5209, -3.18034, 12.8249, 0.88", "-14.3566, -3.69121, 13.0673, 1.18", "-15.032, -4.15666, 13.2148, 1.18", "-15.5498, -4.54642, 13.3004, 1.47", "-16.3181, -5.18337, 13.3674, 1.25", "-17.0746, -5.83684, 13.4673, 1.03", "-17.7568, -6.41906, 13.62, 1.62", "-18.4402, -6.98895, 13.8739, 1.69", "-18.967, -7.40217, 14.145, 1.33", "-19.908, -8.08171, 14.7854, 1.03", "-21.0672, -8.7825, 15.7937, 0.88", "-21.8776, -9.15495, 16.6917, 1.11", "-22.5798, -9.34076, 17.6138, 1.33", "-23.0177, -9.35962, 18.2619, 1.33", "-23.4493, -9.2503, 18.9314, 1.18", "-23.963, -8.96196, 19.7052, 0.88", "-24.6936, -8.42665, 20.6493, 1.18", "-25.1492, -8.1042, 21.162, 1.33", "-25.5507, -7.89305, 21.562, 1.33", "-26.2431, -7.69621, 22.2105, 0.59", "-27.1927, -7.74528, 23.0176, 0.52", "-27.6745, -8.03086, 23.3698, 0.59", "-28.3463, -8.9205, 23.9001, 0.59", "-28.9932, -10.1439, 24.5451, 0.59", "-29.3286, -10.8733, 24.9219, 1.03", "-29.7126, -11.7841, 25.4355, 1.03", "-30.0301, -12.5416, 25.9056, 1.03", "-30.6286, -13.8073, 26.8646, 1.03", "-31.1959, -14.6423, 27.7725, 0.66", "-31.6739, -15.0276, 28.471, 0.66", "-32.5161, -15.3465, 29.5777, 0.74", "-33.1115, -15.4476, 30.3079, 0.81", "-33.6654, -15.4851, 30.9619, 0.52", "-34.6692, -15.4993, 32.0539, 0.52", "-35.0992, -15.5298, 32.5263, 0.44", "-35.7251, -15.7981, 33.3585, 0.37", "-36.0261, -16.2136, 33.8465, 0.37", "-36.3053, -16.844, 34.3453, 1.11", "-36.5437, -17.4907, 34.7352, 1.4", "-36.7732, -18.3425, 35.1553, 1.4", "-37.0553, -19.6355, 35.7345, 0.81", "-37.2453, -20.6092, 36.1223, 0.29", "-37.4146, -21.2532, 36.3894, 0.29", "-37.6147, -21.7702, 36.6178, 0.29", "-43.1216, -25.3941, 42.7419, 0.29", "-49.7858, -29.1086, 47.5081, 0.29", "-55.8829, -32.8149, 52.9871, 0.29", "-61.541, -35.3736, 59.5249, 0.29", "-67.2127, -38.0459, 66.0029, 0.29", "-73.738, -42.0142, 70.7461, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.61631, 6.85166, 1.77", "-2.19761, -5.61631, 6.85166, 1.77", "-2.17898, -6.76183, 6.99727, 1.77", "-2.14936, -8.72575, 7.23641, 1.47", "-2.13302, -10.7022, 7.4528, 1.25", "-2.16092, -12.2121, 7.599, 1.62", "-2.21667, -13.486, 7.70917, 1.92", "-2.2931, -14.5972, 7.80669, 2.14", "-2.43157, -15.9807, 7.92574, 2.14", "-2.71706, -17.9012, 8.0911, 1.55", "-3.08045, -19.7074, 8.2358, 1.33", "-3.40955, -21.0759, 8.35764, 1.55", "-3.65396, -21.9402, 8.4375, 1.92", "-4.00126, -22.9886, 8.57121, 2.21", "-4.26138, -23.6795, 8.67964, 2.5", "-4.56553, -24.495, 8.83529, 2.5", "-4.84511, -25.3945, 9.02119, 2.36", "-5.14589, -26.6286, 9.28341, 1.69", "-5.435, -28.2467, 9.61363, 1.25", "-5.58205, -29.7588, 9.91131, 1.4", "-5.58828, -31.1005, 10.1433, 1.62", "-5.43708, -32.7381, 10.3888, 2.06", "-5.25302, -33.7474, 10.5285, 2.36", "-5.06684, -34.4017, 10.6072, 2.36", "-4.60749, -35.6488, 10.7337, 2.14", "-3.85952, -37.3988, 10.8965, 1.62", "-3.19948, -38.8728, 11.0172, 1.25", "-2.52248, -40.3934, 11.1578, 1.03", "-1.79985, -42.1031, 11.3504, 1.03", "-1.26157, -43.5349, 11.5477, 1.03", "-0.675539, -45.3882, 11.8696, 1.03", "-0.419998, -46.4919, 12.1041, 0.96", "-0.34248, -47.3639, 12.3193, 0.96", "-0.447687, -48.1412, 12.5342, 0.96", "-0.931468, -49.1649, 12.892, 0.96", "-1.40461, -49.7213, 13.1171, 0.88", "-1.90096, -50.1324, 13.2933, 1.18", "-2.70222, -50.7033, 13.5182, 1.18", "-3.47841, -51.225, 13.7173, 1.33", "-4.3721, -51.8167, 13.9657, 1.33", "-5.14048, -52.3326, 14.2064, 1.4", "-5.96418, -52.9209, 14.504, 1.55", "-6.75318, -53.544, 14.8542, 1.55", "-7.64622, -54.3953, 15.3571, 1.84", "-8.18703, -55.017, 15.7138, 2.14", "-8.71672, -55.7665, 16.0965, 1.99", "-9.4555, -57.1201, 16.7084, 0.88", "-9.95997, -58.3702, 17.1894, 0.88", "-10.3853, -59.8469, 17.6692, 0.81", "-10.6233, -61.1524, 17.9949, 0.74", "-10.8443, -62.8007, 18.3525, 0.74", "-10.9526, -64.3406, 18.6377, 1.03", "-10.9483, -65.7242, 18.8209, 1.4", "-10.9001, -66.585, 18.888, 1.69", "-10.8002, -67.5501, 18.9145, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -9.75031, -2.20834, 3.39", "1.44239, -9.75031, -2.20834, 3.39", "1.72307, -10.6081, -2.28763, 3.39", "1.94971, -11.3001, -2.38461, 3.02", "2.17918, -12.0007, -2.48281, 3.02", "2.48093, -12.9221, -2.61194, 3.02", "2.80507, -13.9118, -2.75065, 3.24", "3.04951, -14.6416, -2.86386, 3.54", "3.32703, -15.4279, -3.0144, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-57.3182, 98.3769, -39.4324, 0.44", "-58.7331, 99.6984, -40.1403, 0.44", "-59.3638, 100.347, -40.4548, 0.37", "-59.6341, 100.715, -40.5732, 0.66", "-60.0337, 101.39, -40.7377, 0.66", "-60.4001, 102.154, -40.8896, 0.59", "-60.6153, 102.727, -40.9947, 0.81", "-60.747, 103.446, -41.0671, 0.81", "-60.7785, 105.075, -41.2629, 0.52", "-60.6601, 105.827, -41.3926, 0.52", "-60.2794, 106.948, -41.684, 0.44", "-59.744, 107.97, -42.0767, 0.44", "-59.0633, 108.909, -42.5806, 0.74", "-58.4775, 109.537, -43.0088, 0.74", "-57.5351, 110.36, -43.7271, 0.44", "-56.8157, 110.925, -44.2372, 0.59", "-56.0943, 111.473, -44.7515, 0.59", "-55.3771, 112.042, -45.2992, 0.59", "-54.8234, 112.551, -45.7835, 0.37", "-54.4247, 112.96, -46.1713, 0.37", "-53.8289, 113.608, -46.7895, 0.59", "-53.2457, 114.223, -47.4058, 0.37", "-52.7203, 114.749, -47.9549, 0.81", "-52.1736, 115.274, -48.5308, 0.81", "-51.184, 116.235, -49.621, 0.44", "-50.4277, 116.994, -50.4829, 0.44", "-49.9048, 117.512, -51.1167, 0.81", "-49.378, 118.042, -51.7733, 0.44", "-49.0973, 118.347, -52.1551, 0.59", "-48.4477, 119.126, -53.1571, 0.59", "-48.0994, 119.685, -53.9317, 0.44", "-47.7911, 120.478, -55.0188, 0.44", "-47.6716, 121.153, -56.0267, 0.96", "-47.6781, 121.466, -56.5472, 1.18", "-47.7429, 121.751, -57.0629, 1.18", "-48.2036, 122.45, -58.8036, 0.44", "-48.6905, 122.933, -60.1648, 0.37", "-49.2281, 123.27, -61.5455, 0.66", "-49.4896, 123.395, -62.1882, 0.66", "-49.9191, 123.571, -63.2098, 0.66", "-51.5623, 124.157, -67.2908, 0.44", "-51.8457, 124.243, -68.0189, 0.44", "-53.312, 124.663, -71.8994, 0.29", "-53.6194, 124.775, -72.7268, 0.29", "-53.9586, 124.935, -73.6754, 0.29", "-54.6537, 125.378, -75.7025, 0.74", "-55.4082, 126.097, -78.0255, 0.44", "-55.5605, 126.301, -78.539, 0.44", "-55.837, 126.878, -79.5083, 0.37", "-56.0801, 127.512, -80.3831, 0.88", "-56.4161, 128.639, -81.5236, 0.29", "-56.5558, 129.127, -81.8675, 0.52", "-56.8485, 130.042, -82.38, 0.15", "-57.1598, 130.849, -82.8411, 0.22", "-57.6902, 132.113, -83.5588, 0.22", "-58.2029, 133.225, -84.141, 0.22", "-58.6844, 134.275, -84.6531, 0.22", "-59.4469, 135.808, -85.4472, 1.47", "-60.0419, 136.925, -86.0834, 0.66", "-60.4134, 137.637, -86.5125, 0.96", "-60.9789, 138.814, -87.229, 0.22", "-61.3217, 139.617, -87.6615, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-57.3182, 98.3769, -39.4324, 0.37", "-57.0247, 99.9592, -39.3396, 0.37", "-56.815, 100.729, -39.382, 0.37", "-56.6187, 101.467, -39.3475, 0.37", "-56.3883, 102.589, -39.1883, 0.74", "-56.2719, 103.55, -38.9959, 0.29", "-56.2485, 104.692, -38.7215, 0.29", "-56.2581, 105.231, -38.5797, 0.52", "-56.3344, 106.445, -38.0671, 0.44", "-56.4056, 107.229, -37.6547, 0.29", "-56.4633, 107.916, -37.2666, 0.29", "-56.4996, 108.679, -36.8127, 0.29", "-56.4826, 109.958, -36.0928, 0.44", "-56.4127, 110.988, -35.5392, 0.44", "-56.2153, 112.279, -34.9447, 0.52", "-55.95, 113.294, -34.5124, 0.37", "-55.6536, 114.097, -34.1913, 0.37", "-55.2493, 114.95, -33.8986, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "31.488, 31.0313, -5.44817, 0.29", "32.3083, 30.755, -4.28653, 0.29", "33.0783, 30.5337, -3.33572, 0.59", "33.8335, 30.3176, -2.51779, 0.74", "34.2477, 30.2042, -2.10459, 0.37", "34.8843, 30.0482, -1.42496, 0.37", "35.2375, 29.9705, -1.01901, 0.66", "35.5006, 29.943, -0.698813, 0.96", "35.877, 29.9394, -0.0861402, 1.25", "36.4408, 30.0021, 1.08123, 0.37", "36.9478, 30.1503, 2.30964, 0.37", "37.1138, 30.2235, 2.74044, 0.37", "37.4776, 30.3992, 3.61645, 0.74", "38.1339, 30.6922, 4.94544, 0.66", "38.6806, 30.9125, 5.83998, 0.52", "39.1173, 31.0362, 6.34344, 0.66", "39.6624, 31.1249, 6.76798, 0.66", "40.4109, 31.1945, 7.20286, 0.37", "41.2819, 31.2137, 7.57192, 0.52", "41.7681, 31.1909, 7.73261, 0.52", "42.6171, 31.1212, 7.99035, 0.66", "43.094, 31.0666, 8.12748, 0.88", "43.7293, 30.9965, 8.29513, 0.88", "44.4664, 30.9399, 8.52312, 0.66", "45.3892, 30.917, 8.82597, 0.29", "46.1974, 30.944, 9.08654, 0.29", "47.4213, 31.0904, 9.46719, 0.88", "47.7602, 31.1458, 9.57114, 0.88", "49.1178, 31.4169, 9.96773, 0.29", "50.165, 31.6663, 10.246, 0.29", "51.1662, 31.9393, 10.4849, 0.96", "52.3569, 32.2937, 10.7479, 0.29", "53.2228, 32.5576, 10.9353, 0.29", "54.0244, 32.7864, 11.0902, 0.81", "54.6544, 32.9531, 11.1754, 0.81", "55.2133, 33.092, 11.2469, 0.81", "56.0602, 33.2838, 11.3502, 0.59", "57.0454, 33.4687, 11.4717, 0.29", "57.9149, 33.6617, 11.5907, 0.81", "58.7735, 33.8549, 11.716, 0.22", "59.5355, 34.012, 11.8259, 0.22", "60.0185, 34.0927, 11.8858, 0.52", "60.6846, 34.1766, 11.9273, 0.22", "67.5492, 35.2448, 16.0629, 0.22", "73.9299, 36.5202, 20.858, 0.22", "81.2151, 36.4473, 24.3753, 0.22", "88.4403, 34.9827, 27.6944, 0.22", "95.6504, 34.4988, 31.3313, 0.22", "101.647, 33.013, 36.547, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "31.488, 31.0313, -5.44817, 0.81", "32.8117, 31.154, -4.98756, 0.81", "33.44, 31.1422, -4.8046, 1.03", "35.112, 31.0351, -4.48032, 0.96", "36.029, 30.9845, -4.35272, 0.96", "37.0987, 30.9722, -4.23995, 0.59", "37.843, 31.0025, -4.17977, 0.66", "38.8417, 31.0493, -4.13216, 0.66", "40.0328, 31.2032, -4.15002, 0.59", "40.6576, 31.3835, -4.23374, 0.81", "41.4471, 31.7504, -4.36602, 0.96", "42.1734, 32.1799, -4.49567, 1.25", "42.6983, 32.504, -4.58268, 1.4", "43.3582, 32.8978, -4.66198, 1.4", "44.4365, 33.4406, -4.72783, 0.59", "44.876, 33.5861, -4.74205, 0.59", "45.7919, 33.7137, -4.74528, 0.59", "46.794, 33.7049, -4.7235, 1.03", "47.5066, 33.6263, -4.69258, 1.18", "48.1267, 33.5083, -4.6287, 1.18", "49.1284, 33.2594, -4.46496, 0.74", "50.0915, 32.9982, -4.2422, 0.66", "50.5491, 32.8765, -4.11644, 0.96", "51.1459, 32.7436, -3.94867, 0.96", "52.2165, 32.5566, -3.65846, 1.03", "52.7219, 32.5007, -3.52404, 1.03", "54.127, 32.5003, -3.17913, 0.59", "54.8888, 32.5832, -3.01601, 0.59", "56.2478, 32.831, -2.77636, 0.59", "56.9127, 32.9976, -2.68834, 0.81", "57.5339, 33.2076, -2.64301, 0.81", "58.7992, 33.7312, -2.62569, 0.37", "59.5955, 34.0854, -2.66533, 0.66", "60.3024, 34.3739, -2.70619, 0.74", "60.7461, 34.5267, -2.74065, 0.74", "61.6141, 34.7352, -2.82331, 0.74", "62.5453, 34.8343, -2.92263, 0.52", "63.8413, 34.8054, -3.06886, 0.74", "64.8175, 34.7246, -3.15601, 0.88", "65.3524, 34.6721, -3.17418, 0.96", "65.8837, 34.6268, -3.1588, 1.18", "66.6914, 34.5849, -3.07801, 1.18", "67.3049, 34.6075, -2.95832, 0.66", "68.3916, 34.8312, -2.62485, 0.59", "69.1046, 35.0891, -2.27858, 0.59", "69.5765, 35.3094, -1.98974, 0.74", "69.945, 35.5178, -1.72354, 0.74", "70.3082, 35.7473, -1.42748, 0.74", "71.0005, 36.2146, -0.799705, 0.59", "71.9177, 36.868, 0.117732, 0.96", "72.3547, 37.1721, 0.559941, 1.25", "72.592, 37.3305, 0.817781, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "66.4309, 39.5942, 58.2873, 0.29", "73.1592, 43.5964, 65.4058, 0.29", "80.9645, 47.2849, 71.5214, 0.29", "89.2078, 51.5536, 76.5593, 0.29", "96.1956, 55.77, 83.2839, 0.29", "102.943, 61.109, 89.3857, 0.29", "108.28, 67.3946, 95.9387, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "66.4309, 39.5942, 58.2873, 0.29", "71.0156, 41.7307, 62.1524, 0.29", "74.9075, 45.0408, 65.9085, 0.29", "78.0479, 48.8426, 69.8785, 0.29", "81.5265, 51.6494, 74.3979, 0.29", "84.8238, 54.8054, 78.8108, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-37.7899, -12.8235, -32.7232, 0.74", "-39.4221, -13.9254, -33.0898, 0.74", "-40.2967, -14.3558, -33.2553, 0.74", "-41.0351, -14.6275, -33.4058, 0.74", "-42.1963, -14.8573, -33.784, 0.66", "-43.0368, -14.9088, -34.1483, 0.66", "-43.9254, -14.8988, -34.5863, 0.59", "-44.536, -14.7775, -34.8966, 1.25", "-45.0307, -14.6343, -35.1825, 1.25", "-46.5376, -14.1735, -36.1324, 0.66", "-47.2872, -13.9734, -36.6262, 0.66", "-47.6931, -13.9264, -36.9015, 0.96", "-48.2985, -13.9823, -37.3062, 0.96", "-48.7222, -14.1378, -37.6877, 0.96", "-49.3682, -14.646, -38.6273, 0.74", "-49.7113, -15.0779, -39.352, 0.52", "-50.0541, -15.6183, -40.2592, 0.81", "-50.2747, -16.017, -40.9315, 1.03", "-51.0753, -17.6239, -43.6818, 1.25", "-51.6166, -18.7618, -45.6792, 0.66", "-51.8848, -19.3075, -46.6676, 0.66", "-52.0547, -19.5823, -47.1867, 1.11", "-52.2118, -19.745, -47.4976, 1.33", "-52.449, -19.9063, -47.7604, 1.18", "-52.8423, -20.0981, -47.9068, 1.18", "-53.7507, -20.5157, -48.1147, 0.59", "-54.6871, -21.01, -48.3565, 0.52", "-55.4248, -21.4728, -48.6082, 0.52", "-56.0336, -21.9385, -48.9243, 0.81", "-56.6267, -22.4977, -49.381, 0.66", "-57.1809, -23.0881, -49.914, 0.66", "-57.5792, -23.5608, -50.3809, 1.33", "-57.8459, -23.8947, -50.7199, 1.33", "-58.6775, -24.9426, -51.797, 0.66", "-59.4098, -25.8339, -52.713, 0.52", "-59.7564, -26.222, -53.1232, 0.52", "-60.2098, -26.6524, -53.5355, 0.96", "-60.5376, -26.9233, -53.7486, 1.18", "-60.7764, -27.1048, -53.8372, 1.18", "-61.2819, -27.4926, -53.8835, 0.81", "-61.9799, -28.065, -53.8269, 0.74", "-62.851, -28.8459, -53.6664, 0.59", "-63.2888, -29.232, -53.5516, 0.74", "-63.8737, -29.7211, -53.3664, 0.74", "-64.5012, -30.1903, -53.1575, 0.59", "-65.0932, -30.604, -52.9508, 0.44", "-65.757, -31.0609, -52.7111, 0.44", "-66.3958, -31.4969, -52.5095, 0.44", "-67.0711, -32.005, -52.3017, 0.44", "-68.1836, -32.9445, -51.9688, 0.44", "-68.4623, -33.2301, -51.8809, 0.96", "-68.9774, -33.9397, -51.7317, 1.18", "-69.3111, -34.59, -51.6461, 0.81", "-69.6939, -35.6904, -51.6111, 0.59", "-69.8248, -36.1787, -51.6506, 0.74", "-70.0266, -36.9716, -51.7696, 0.66", "-70.2835, -37.7435, -51.923, 0.66", "-70.5278, -38.3094, -52.0606, 0.81", "-71.0684, -39.3375, -52.3183, 0.59", "-71.5989, -40.2308, -52.5318, 0.52", "-72.0976, -41.0971, -52.7117, 0.81", "-72.5395, -41.941, -52.8469, 1.4", "-72.7456, -42.4433, -52.8635, 1.69", "-73.0369, -43.4273, -52.7732, 0.52", "-73.2408, -44.2457, -52.7009, 0.44", "-73.4166, -45.0907, -52.7421, 0.44", "-73.545, -45.6994, -52.8981, 0.29", "-73.8562, -46.8436, -53.3665, 1.4", "-73.9358, -47.0721, -53.4795, 1.4", "-74.8184, -49.1019, -54.7605, 0.52", "-75.3916, -50.2214, -55.5579, 0.52", "-75.719, -50.7989, -55.9914, 0.52", "-76.2152, -51.658, -56.6356, 0.74", "-76.542, -52.233, -57.0503, 0.88", "-77.231, -53.533, -57.8381, 0.44", "-77.5465, -54.1785, -58.1224, 0.59", "-77.9175, -54.8961, -58.4083, 0.59", "-78.3392, -55.6222, -58.7286, 0.37", "-78.6057, -56.0605, -58.9367, 0.59", "-79.1099, -56.8367, -59.3002, 0.81", "-79.6068, -57.5333, -59.5714, 1.18", "-79.9313, -57.9599, -59.744, 1.18", "-80.8272, -59.0179, -60.2468, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-37.7899, -12.8235, -32.7232, 0.81", "-38.2293, -11.1212, -32.811, 0.81", "-38.4684, -10.4948, -32.7901, 0.81", "-38.8759, -9.74405, -32.7178, 0.81", "-39.3505, -9.16153, -32.6353, 0.88", "-39.9582, -8.70585, -32.5718, 0.66", "-41.1142, -8.08931, -32.5172, 0.59", "-41.9637, -7.93215, -32.5222, 0.59", "-42.741, -7.92695, -32.6664, 0.59", "-43.7828, -8.05632, -33.0307, 0.74", "-44.9046, -8.29749, -33.6391, 1.03", "-45.2969, -8.39495, -33.8958, 1.62", "-45.827, -8.52333, -34.2878, 1.92", "-47.5002, -8.87242, -35.5043, 0.88", "-48.1412, -8.9857, -35.9624, 0.66", "-49.0819, -9.14326, -36.6037, 0.66", "-50.3516, -9.34863, -37.4211, 0.66", "-50.9148, -9.42549, -37.7676, 0.66", "-52.1354, -9.5178, -38.4502, 0.66", "-52.9081, -9.51984, -38.8424, 0.44", "-53.8743, -9.46039, -39.367, 0.44", "-54.5745, -9.37348, -39.7909, 0.44", "-55.3888, -9.2247, -40.3862, 0.66", "-55.9531, -9.1005, -40.8347, 0.66", "-56.6145, -8.90871, -41.373, 0.66", "-57.1833, -8.708, -41.7934, 0.66", "-57.8273, -8.41858, -42.2231, 0.44", "-58.2726, -8.18868, -42.5091, 0.74", "-58.9339, -7.8255, -42.9161, 0.74", "-59.522, -7.49478, -43.2745, 0.74", "-60.0233, -7.21284, -43.5663, 0.74", "-60.5985, -6.8957, -43.8864, 0.37", "-61.4643, -6.5351, -44.3872, 0.37", "-61.8469, -6.4672, -44.6253, 0.37", "-62.261, -6.49857, -44.9187, 0.88", "-62.8209, -6.61943, -45.331, 1.18", "-63.2788, -6.74956, -45.7052, 1.33", "-64.4464, -7.1262, -46.7369, 0.44", "-65.2774, -7.37206, -47.5409, 0.44", "-65.9273, -7.50409, -48.2703, 0.44", "-66.496, -7.51811, -48.9872, 0.88", "-67.0826, -7.3703, -49.7867, 1.03", "-67.3116, -7.22463, -50.1044, 1.03", "-67.8813, -6.61116, -50.797, 0.44", "-68.2217, -6.19915, -51.1727, 0.44", "-68.6351, -5.74885, -51.5287, 0.44", "-68.9884, -5.45179, -51.792, 0.59", "-69.5946, -5.08202, -52.1637, 0.59", "-70.2313, -4.83235, -52.5249, 0.74", "-71.4297, -4.61315, -53.1474, 0.37", "-72.1949, -4.59716, -53.554, 0.37", "-73.3429, -4.73591, -54.1842, 0.59", "-73.7972, -4.84729, -54.4479, 0.88", "-74.6801, -5.17654, -55.0115, 0.66", "-75.278, -5.44811, -55.4122, 0.74", "-75.9187, -5.77614, -55.8362, 0.59", "-76.47, -6.07924, -56.2258, 0.52", "-76.9857, -6.35957, -56.5906, 0.88", "-77.9267, -6.80609, -57.2859, 0.59", "-78.4702, -7.01115, -57.7003, 0.44", "-79.0671, -7.17905, -58.1709, 1.03", "-79.4817, -7.25639, -58.4977, 1.33", "-79.7375, -7.28022, -58.6912, 1.4", "-80.8178, -7.31601, -59.4435, 0.44", "-81.2559, -7.32135, -59.7308, 0.44", "-81.9043, -7.3139, -60.1304, 0.44", "-82.5883, -7.28451, -60.5214, 0.44", "-83.6972, -7.22782, -61.1505, 0.59", "-84.4587, -7.19014, -61.6446, 0.88", "-85.1434, -7.13489, -62.2066, 1.11", "-86.0123, -7.03657, -63.0347, 0.52", "-86.6249, -6.93112, -63.6851, 0.52", "-87.1292, -6.82045, -64.2568, 1.03", "-88.2403, -6.55586, -65.6072, 1.25", "-89.5622, -6.29393, -67.2021, 0.52", "-90.0195, -6.22266, -67.7383, 0.59", "-90.6387, -6.15338, -68.4201, 0.59", "-91.6284, -6.04479, -69.3769, 0.44", "-92.3183, -5.95948, -69.924, 0.44", "-93.3406, -5.78357, -70.5934, 0.44", "-93.8837, -5.65853, -70.9374, 0.44", "-94.6046, -5.40595, -71.5347, 0.66", "-95.0917, -5.14934, -72.0658, 0.88", "-95.3358, -4.95785, -72.3911, 0.88", "-96.0034, -4.26073, -73.4022, 0.52", "-96.3899, -3.74893, -74.0645, 0.52", "-96.8986, -2.94282, -75.1071, 0.81", "-97.2291, -2.31248, -75.8957, 0.44", "-97.406, -1.92271, -76.3811, 0.44", "-97.5818, -1.41622, -76.9838, 0.74", "-97.6657, -1.0339, -77.3889, 0.96", "-97.757, -0.0418539, -78.2625, 0.66", "-97.7859, 0.578793, -78.7836, 0.44", "-97.8289, 1.25294, -79.3885, 0.44", "-97.9282, 1.88963, -80.0382, 0.44", "-98.0051, 2.10747, -80.2955, 0.44", "-98.3426, 2.55957, -80.9044, 0.96", "-99.2546, 3.05917, -81.7954, 0.66", "-99.89, 3.26813, -82.287, 0.96", "-100.202, 3.35029, -82.4833, 1.25", "-100.575, 3.43842, -82.692, 1.25", "-101.164, 3.59511, -83.0118, 1.25", "-102.167, 3.96471, -83.5711, 0.37", "-102.75, 4.31928, -83.8925, 0.37", "-103.123, 4.62012, -84.1393, 0.66", "-103.406, 4.86884, -84.3257, 0.81", "-103.849, 5.26512, -84.5882, 0.81", "-104.541, 5.88378, -84.9135, 0.44", "-105.026, 6.28282, -85.0606, 0.44", "-105.934, 6.92999, -85.238, 0.44", "-106.951, 7.6125, -85.3677, 0.44", "-107.727, 8.12924, -85.4249, 0.66", "-108.538, 8.66511, -85.4422, 0.96", "-109.362, 9.20271, -85.4006, 0.59", "-110.061, 9.67633, -85.3387, 0.44", "-110.781, 10.175, -85.2684, 0.44", "-111.479, 10.6546, -85.2447, 0.44", "-112.091, 11.0224, -85.2985, 0.44", "-112.809, 11.3501, -85.467, 0.74", "-113.171, 11.4689, -85.5967, 0.74", "-114.219, 11.7048, -86.0222, 0.52", "-114.699, 11.7855, -86.2408, 0.59", "-115.591, 11.9163, -86.6793, 0.44", "-116.254, 12.0399, -87.0213, 0.44", "-117.068, 12.2686, -87.4948, 0.37", "-117.873, 12.5769, -87.9716, 0.52", "-118.499, 12.8892, -88.3566, 1.11", "-118.979, 13.1725, -88.6925, 1.25", "-119.535, 13.5395, -89.1506, 0.37", "-120.324, 14.0705, -89.9018, 0.37", "-120.858, 14.4038, -90.4659, 0.29", "-121.282, 14.6446, -90.9645, 0.29", "-122.043, 15.0608, -91.9141, 0.59", "-122.64, 15.4037, -92.6957, 0.59", "-122.976, 15.6099, -93.1414, 0.29", "-123.24, 15.7945, -93.4648, 0.37", "-123.655, 16.14, -93.9434, 0.37", "-124.224, 16.6679, -94.4922, 0.44", "-124.706, 17.1463, -94.843, 0.44", "-125.169, 17.6091, -95.1068, 0.44", "-125.736, 18.1297, -95.3932, 0.37", "-125.972, 18.3164, -95.4971, 0.37", "-126.589, 18.7169, -95.7187, 0.88", "-126.954, 18.9131, -95.8325, 1.11", "-127.614, 19.2393, -96.0291, 1.11", "-128.648, 19.7755, -96.3307, 0.37", "-129.445, 20.2328, -96.5591, 0.37", "-129.895, 20.5396, -96.6846, 0.66", "-130.548, 21.1264, -96.9061, 0.66", "-131.041, 21.7016, -97.1152, 0.37", "-131.432, 22.3022, -97.333, 0.52", "-131.568, 22.5648, -97.4287, 0.66", "-131.759, 22.9911, -97.5791, 0.66", "-132.276, 24.1696, -97.9805, 0.37", "-132.53, 24.6841, -98.1298, 0.37", "-132.837, 25.1262, -98.2049, 0.37", "-133.186, 25.4864, -98.2062, 0.88", "-133.773, 25.9649, -98.1377, 0.81", "-134.07, 26.1667, -98.0843, 0.81", "-134.827, 26.6285, -97.9152, 0.29", "-135.824, 27.2152, -97.6836, 0.29", "-136.441, 27.6151, -97.4912, 0.52", "-137.179, 28.1472, -97.2446, 0.44", "-137.537, 28.4217, -97.1242, 0.44", "-138.005, 28.8085, -96.9463, 0.81", "-138.546, 29.3197, -96.718, 0.81", "-139.533, 30.4178, -96.2492, 0.29", "-139.924, 30.8862, -96.0525, 0.44", "-140.29, 31.3375, -95.8416, 0.29", "-140.7, 31.8182, -95.6156, 0.29", "-141.246, 32.4157, -95.3496, 0.29", "-141.67, 32.8483, -95.1805, 0.29", "-142.18, 33.3215, -95.0186, 0.59", "-143.165, 34.2117, -94.691, 0.22", "-143.801, 34.7767, -94.4813, 0.22", "-144.144, 35.0551, -94.3665, 0.52", "-144.468, 35.2807, -94.2497, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-73.738, -42.0142, 70.7461, 0.29", "-78.7438, -45.2957, 75.6313, 0.29", "-82.5437, -49.5988, 80.7543, 0.29", "-86.121, -53.7672, 86.1445, 0.29", "-89.2313, -58.3429, 91.4733, 0.29", "-91.2383, -63.1339, 97.1127, 0.29", "-93.8736, -67.9542, 102.467, 0.29", "-96.5271, -72.7918, 107.795, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-73.738, -42.0142, 70.7461, 0.29", "-80.9673, -45.9082, 77.0541, 0.29", "-88.2861, -50.9093, 82.3529, 0.29", "-94.8965, -56.57, 87.8837, 0.29", "-100.58, -62.6718, 93.934, 0.29", "-105.838, -69.4078, 99.653, 0.29", "-110.179, -77.2217, 104.657, 0.29", "-115.177, -84.1389, 110.384, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.8002, -67.5501, 18.9145, 0.66", "-11.4593, -70.8703, 17.5777, 0.66", "-11.6291, -71.7503, 17.2572, 1.03", "-11.8173, -72.6682, 17.0344, 1.03", "-12.1886, -74.4185, 16.7758, 1.03", "-12.4451, -75.741, 16.6834, 1.03", "-12.7197, -77.3525, 16.6789, 0.81", "-12.9264, -78.7856, 16.945, 0.81", "-13.0627, -80.8752, 17.5514, 1.4", "-13.0622, -81.7662, 17.8901, 1.62", "-12.9836, -83.0883, 18.5399, 1.4", "-12.8729, -83.9558, 19.0129, 1.92", "-12.6442, -85.1289, 19.6869, 1.4", "-12.1941, -86.8986, 20.7418, 1.69", "-11.8386, -88.0803, 21.394, 1.11", "-11.3539, -89.6672, 22.2257, 0.81", "-11.1369, -90.4185, 22.5917, 1.11", "-10.9032, -91.3191, 22.9873, 1.25", "-10.4717, -93.3343, 23.7802, 0.96", "-10.3317, -94.3626, 24.1163, 0.74", "-10.2882, -95.3553, 24.3719, 0.81", "-10.4253, -96.8828, 24.608, 0.52", "-10.6529, -97.9882, 24.6753, 0.88", "-10.9305, -98.9321, 24.6106, 0.88", "-11.2934, -99.9802, 24.3637, 0.88", "-11.6148, -100.915, 24.0567, 0.66", "-11.8886, -101.919, 23.6233, 0.66", "-12.0985, -103.335, 22.8183, 0.88", "-12.1325, -104.279, 22.1922, 1.33", "-12.0979, -105.001, 21.6953, 1.47", "-12.0385, -105.679, 21.2338, 1.62", "-11.9282, -107.062, 20.3558, 0.74", "-11.8672, -108.628, 19.5408, 0.74", "-11.9294, -109.846, 19.0809, 0.74", "-12.0589, -110.814, 18.8728, 0.74", "-12.2972, -112.145, 18.7776, 0.66", "-12.5486, -113.523, 18.8824, 0.66", "-12.8681, -115.499, 19.321, 0.96", "-12.972, -116.511, 19.6554, 0.88", "-12.9802, -117.412, 19.9999, 0.88", "-12.8265, -119.087, 20.664, 0.52", "-12.5442, -120.62, 21.281, 1.18", "-12.3694, -121.371, 21.538, 1.62", "-12.1686, -122.22, 21.754, 1.62", "-11.922, -123.423, 22.0153, 0.96", "-11.7751, -124.359, 22.1916, 0.96", "-11.6497, -125.78, 22.4129, 0.66", "-11.6648, -127.662, 22.6147, 0.52", "-11.8151, -129.359, 22.7965, 0.59", "-12.1552, -131.32, 23.0055, 0.74", "-12.2898, -131.832, 23.0647, 1.11", "-12.6616, -132.815, 23.2224, 1.25", "-13.47, -134.398, 23.5439, 0.88", "-14.0143, -135.191, 23.7621, 0.66", "-14.6097, -135.896, 23.9876, 0.66", "-15.1981, -136.523, 24.1843, 0.59", "-16.3561, -137.789, 24.5245, 0.59", "-16.9953, -138.518, 24.6711, 0.44", "-17.7403, -139.462, 24.7741, 0.44", "-18.3336, -140.339, 24.78, 0.74", "-18.7955, -141.151, 24.7393, 0.74", "-19.1784, -141.923, 24.6605, 0.66", "-19.646, -143.05, 24.4788, 1.03", "-19.994, -143.944, 24.3437, 1.4", "-20.3659, -144.948, 24.2049, 1.4", "-20.6952, -145.818, 24.0913, 1.47", "-21.2233, -147.195, 23.9351, 0.74", "-21.6303, -148.268, 23.8039, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.8002, -67.5501, 18.9145, 0.44", "-10.0601, -68.1919, 19.4747, 0.44", "-9.62858, -68.743, 19.8667, 0.44", "-9.33501, -69.4518, 20.252, 0.37", "-9.0343, -70.8293, 20.8211, 0.59", "-8.99663, -71.365, 20.9924, 0.52", "-9.02043, -72.0523, 21.1797, 0.44", "-9.25383, -73.1555, 21.4797, 0.44", "-9.58452, -74.0818, 21.765, 0.44", "-9.86507, -74.6423, 21.9825, 0.59", "-10.2887, -75.2834, 22.3482, 0.59", "-10.7313, -75.8277, 22.9104, 0.37", "-11.3015, -76.4352, 23.8675, 0.59", "-11.7828, -76.9103, 24.8498, 0.88", "-12.0829, -77.1777, 25.498, 0.81", "-12.6928, -77.6886, 26.8071, 1.03", "-13.3132, -78.1994, 28.1006, 0.88", "-13.8905, -78.6869, 29.1778, 0.44", "-14.3805, -79.1575, 29.949, 0.44", "-14.7102, -79.526, 30.382, 0.66", "-15.1856, -80.0677, 30.8428, 0.66", "-15.638, -80.5469, 31.103, 0.66", "-16.3224, -81.2189, 31.3215, 0.66", "-16.9229, -81.7942, 31.4651, 1.33", "-17.1932, -82.0655, 31.5097, 1.47", "-17.7192, -82.6025, 31.5876, 1.03", "-18.3781, -83.2937, 31.6905, 0.81", "-18.9331, -83.8776, 31.7909, 0.74", "-19.5924, -84.5785, 31.9348, 0.52", "-20.055, -85.0976, 32.054, 0.44", "-22.7958, -91.466, 37.0212, 0.44", "-24.5451, -98.3755, 41.6663, 0.44", "-27.0666, -105.218, 46.0525, 0.44", "-31.4228, -111.516, 49.8095, 0.44", "-35.6118, -116.857, 55.033, 0.44", "-38.9328, -122.294, 60.7533, 0.44", "-42.493, -127.92, 66.1264, 0.44", "-47.6991, -133.051, 70.6015, 0.44", "-54.3954, -137.412, 73.758, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.32703, -15.4279, -3.0144, 1.47", "2.6982, -17.1894, -3.44085, 1.47", "2.05778, -19.4543, -3.81438, 1.33", "1.64237, -21.2578, -3.98024, 1.55", "1.37426, -22.7197, -3.99512, 1.55", "1.15268, -24.2336, -3.82729, 1.77", "0.90299, -26.1695, -3.40862, 1.77", "0.797228, -27.3613, -2.98429, 2.14", "0.715778, -28.355, -2.51857, 2.58", "0.59785, -29.6257, -1.88631, 2.36", "0.328993, -31.9605, -0.839869, 1.77", "0.046689, -33.9791, -0.150766, 1.47", "-0.199669, -35.6762, 0.196521, 1.18", "-0.438312, -37.4826, 0.370819, 1.11", "-0.614787, -39.0918, 0.353464, 1.33", "-0.783291, -41.2898, 0.0820074, 1.25", "-0.826777, -43.2149, -0.336713, 1.47", "-0.769395, -44.9395, -0.773168, 1.62", "-0.681071, -46.2334, -1.10824, 2.14", "-0.624311, -47.1261, -1.32175, 2.58", "-0.595694, -48.4096, -1.57474, 2.43", "-0.671351, -50.476, -1.89526, 2.14", "-0.846908, -52.1453, -2.11591, 1.92", "-1.15342, -53.802, -2.30374, 1.47", "-1.70698, -55.8503, -2.51929, 1.25", "-2.28909, -57.5406, -2.63263, 1.11", "-2.81793, -58.8052, -2.65286, 1.4", "-3.20215, -59.6183, -2.63376, 1.55", "-3.80309, -60.8598, -2.54663, 1.18", "-4.36426, -62.1265, -2.37891, 0.88", "-4.85953, -63.4582, -2.20661, 1.18", "-5.23912, -64.7607, -2.05064, 1.03", "-5.54514, -65.9863, -1.89901, 1.03", "-5.9122, -67.8032, -1.7001, 1.47", "-6.06893, -68.9572, -1.60455, 1.77", "-6.2059, -70.773, -1.53677, 1.77", "-6.27062, -72.1714, -1.59821, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.32703, -15.4279, -3.0144, 1.77", "3.86326, -17.8597, -3.61064, 1.77", "4.10415, -19.0769, -3.88618, 1.99", "4.38114, -20.4766, -4.20302, 1.99", "4.75907, -22.3863, -4.63533, 3.17", "4.92931, -23.2465, -4.83007, 3.76", "5.22062, -24.7186, -5.16329, 4.2", "5.38542, -26.0212, -5.3901, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205316", "5.97663, 56.3268, -0.359339, 0.205316", "7.46769, 71.2525, -0.359339, 0.205316" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-55.2493, 114.95, -33.8986, 0.29", "-55.3975, 115.709, -34.1233, 0.29", "-55.6735, 116.784, -34.7051, 0.29", "-55.8925, 117.724, -35.3065, 0.29", "-56.0916, 118.713, -36.0213, 0.29", "-56.2222, 119.41, -36.5755, 0.29", "-56.4195, 120.551, -37.4974, 0.29", "-56.7748, 122.556, -39.2995, 0.29", "-56.8887, 123.166, -39.8831, 0.37", "-57.0451, 123.897, -40.6026, 0.37", "-57.2735, 124.795, -41.5075, 0.37", "-57.461, 125.532, -42.2589, 0.22", "-57.6557, 126.307, -43.0185, 0.22", "-57.8838, 127.192, -43.6975, 1.03", "-57.9456, 127.354, -43.8117, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-55.2493, 114.95, -33.8986, 0.52", "-56.4438, 116.299, -33.3223, 0.52", "-56.9789, 117.012, -33.0228, 0.52", "-57.5009, 117.833, -32.7188, 0.44", "-57.7268, 118.251, -32.5877, 0.59", "-57.96, 118.757, -32.4508, 0.59", "-58.3782, 119.727, -32.1881, 0.37", "-58.8571, 120.982, -31.9381, 0.37", "-59.134, 121.794, -31.7687, 0.37", "-59.414, 122.612, -31.5894, 0.37", "-59.726, 123.508, -31.3694, 0.29", "-60.0224, 124.313, -31.1556, 0.29", "-60.3812, 125.157, -30.9093, 0.81", "-60.5625, 125.495, -30.8052, 0.81", "-60.8872, 126.006, -30.6335, 0.74", "-61.358, 126.65, -30.4457, 0.74", "-61.8001, 127.154, -30.3578, 0.96", "-62.2748, 127.622, -30.3506, 0.96", "-62.6046, 127.931, -30.3983, 0.59", "-63.2589, 128.573, -30.6005, 0.29", "-63.874, 129.224, -30.912, 0.29", "-64.544, 129.986, -31.3494, 0.29", "-65.012, 130.562, -31.6828, 0.22", "-65.7097, 131.458, -32.1996, 0.22", "-66.2524, 132.195, -32.6163, 0.74", "-66.8559, 133.075, -33.0595, 0.37", "-67.3251, 133.85, -33.3776, 0.37", "-67.7443, 134.618, -33.6518, 0.81", "-68.0454, 135.138, -33.8367, 1.18", "-68.3403, 135.546, -33.9739, 1.18", "-69.1172, 136.419, -34.289, 0.29", "-69.9472, 137.286, -34.6011, 0.29", "-70.4832, 137.805, -34.8142, 0.29", "-71.0385, 138.3, -35.0487, 0.29", "-71.8686, 138.979, -35.385, 0.74", "-72.4795, 139.379, -35.6138, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "101.647, 33.013, 36.547, 0.29", "111.801, 33.9487, 43.4122, 0.29", "121.637, 34.7063, 50.7466, 0.29", "131.99, 36.584, 57.0899, 0.29", "141.739, 40.0475, 63.688, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "101.647, 33.013, 36.547, 0.29", "113.678, 32.8334, 42.681, 0.29", "125.571, 34.9684, 48.684, 0.29", "138.221, 37.9346, 52.3105, 0.29", "149.703, 42.297, 57.8207, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "72.592, 37.3305, 0.817781, 0.44", "73.895, 37.3018, 0.426804, 0.44", "74.3859, 37.3614, 0.20735, 0.37", "75.2607, 37.5572, -0.233148, 0.59", "75.7368, 37.6874, -0.479804, 0.74", "76.9562, 38.06, -1.09394, 0.37", "78.2111, 38.4771, -1.69592, 0.29", "78.9559, 38.8167, -2.08825, 0.29", "79.4868, 39.1032, -2.34341, 0.88", "79.6814, 39.2256, -2.43532, 1.11", "80.1612, 39.5476, -2.63452, 1.11", "80.6067, 39.8445, -2.73191, 1.18", "81.4212, 40.2743, -2.75705, 0.74", "81.9734, 40.5518, -2.7459, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "72.592, 37.3305, 0.817781, 0.29", "73.5042, 38.0493, 1.36242, 0.29", "73.9348, 38.3832, 1.63678, 0.29", "74.4864, 38.8108, 1.98819, 0.66", "75.0818, 39.2725, 2.36756, 0.29", "75.5276, 39.6182, 2.6516, 0.29", "76.4212, 40.3109, 3.22087, 0.29", "76.9372, 40.6531, 3.58505, 0.29", "84.4876, 46.515, 7.31152, 0.29", "91.0956, 52.5976, 12.2319, 0.29", "96.3267, 59.9974, 16.8993, 0.29", "102.608, 66.6463, 21.4673, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-80.8272, -59.0179, -60.2468, 0.81", "-81.1171, -59.9369, -60.9826, 0.81", "-81.1703, -60.0507, -61.0826, 0.81", "-81.8779, -61.169, -62.1028, 0.37", "-82.0951, -61.4512, -62.3526, 0.52", "-82.3065, -61.7169, -62.5818, 0.66", "-82.5521, -62.0314, -62.8409, 0.66", "-83.1039, -62.6352, -63.3371, 0.37", "-83.4504, -63.0123, -63.6597, 0.37", "-83.9853, -63.5697, -64.147, 0.37", "-84.3105, -63.9155, -64.46, 0.66", "-84.8316, -64.4594, -64.9554, 1.11", "-85.0792, -64.7018, -65.1742, 1.25", "-85.8918, -65.4662, -65.9509, 0.22", "-86.2179, -65.7406, -66.2814, 0.29", "-86.4942, -65.9416, -66.5694, 0.59", "-86.807, -66.1415, -66.8801, 0.81", "-87.1381, -66.359, -67.2141, 0.81", "-88.0192, -67.0086, -68.0483, 0.37", "-88.2888, -67.2292, -68.2752, 0.37", "-88.747, -67.6958, -68.6525, 0.59", "-88.9237, -67.9035, -68.7864, 0.81", "-89.5871, -68.7565, -69.2141, 0.44", "-90.0642, -69.3965, -69.4439, 0.44", "-90.4627, -69.9316, -69.5719, 0.37", "-90.9517, -70.5971, -69.7058, 0.37", "-91.315, -71.085, -69.8041, 0.66", "-91.6005, -71.445, -69.8959, 0.81", "-91.8805, -71.7704, -69.9761, 0.81", "-92.3959, -72.3415, -70.1372, 0.29", "-92.6945, -72.6491, -70.2233, 0.96", "-93.4271, -73.3479, -70.3858, 0.29", "-93.901, -73.7985, -70.4683, 0.29", "-94.3788, -74.2381, -70.5179, 0.44", "-94.6503, -74.4773, -70.5399, 0.44", "-95.0954, -74.8496, -70.5502, 0.29", "-95.3384, -75.0629, -70.5683, 0.59", "-95.7159, -75.4224, -70.5962, 0.59", "-96.0696, -75.7977, -70.641, 0.52", "-96.6171, -76.3702, -70.7564, 0.37", "-96.9627, -76.732, -70.849, 0.88", "-97.6056, -77.4129, -71.0436, 0.44", "-97.9671, -77.8061, -71.1508, 0.59", "-98.2636, -78.129, -71.234, 0.59", "-98.624, -78.5139, -71.3123, 0.59", "-99.0028, -78.8917, -71.3563, 0.37", "-99.303, -79.1442, -71.3693, 0.37", "-99.7954, -79.4759, -71.3471, 0.29", "-99.9812, -79.5799, -71.3267, 0.29", "-100.461, -79.8234, -71.2384, 0.88", "-100.791, -79.9826, -71.1524, 1.18", "-101.34, -80.2085, -71.0003, 0.29", "-101.739, -80.3543, -70.8965, 0.29", "-102.331, -80.5826, -70.7757, 0.29", "-102.602, -80.7014, -70.729, 0.88", "-102.865, -80.8336, -70.6958, 0.88", "-103.721, -81.3104, -70.6543, 0.22", "-104.007, -81.4872, -70.6688, 0.22", "-104.626, -81.874, -70.7423, 0.59", "-104.762, -81.9609, -70.7674, 0.59", "-105.309, -82.3103, -70.8802, 0.22", "-105.623, -82.5175, -70.9522, 0.44", "-106.065, -82.8508, -71.0647, 0.22", "-106.675, -83.3025, -71.214, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-80.8272, -59.0179, -60.2468, 0.29", "-82.2676, -58.738, -60.6031, 0.29", "-83.1826, -58.5957, -60.7711, 0.29", "-84.0913, -58.4938, -60.9322, 0.66", "-84.5322, -58.4684, -61.0058, 0.66", "-86.103, -58.4204, -61.2413, 0.29", "-86.7834, -58.4133, -61.3447, 0.29", "-87.3061, -58.4176, -61.371, 0.66", "-87.8116, -58.4382, -61.382, 0.66", "-89.5539, -58.5402, -61.4058, 0.29", "-90.1627, -58.5614, -61.4309, 0.52", "-90.733, -58.5611, -61.4813, 0.52", "-92.2746, -58.4539, -61.6486, 0.22", "-92.9778, -58.3613, -61.7356, 0.59", "-93.4254, -58.2749, -61.7829, 0.74", "-94.2799, -58.061, -61.8859, 0.29", "-94.7048, -57.94, -61.9484, 0.29", "-95.2508, -57.7593, -62.0422, 0.96", "-95.7608, -57.559, -62.1909, 0.96", "-97.1551, -56.9741, -62.5599, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-21.6303, -148.268, 23.8039, 0.29", "-21.4249, -148.274, 24.4776, 0.29", "-20.931, -148.333, 25.9341, 0.29", "-20.5799, -148.414, 26.9719, 0.59", "-20.1193, -148.626, 28.417, 0.66", "-19.4653, -149.08, 30.4316, 0.59", "-19.0127, -149.534, 31.74, 0.29", "-18.6854, -149.978, 32.4955, 0.52", "-18.4957, -150.509, 32.7531, 0.66", "-18.2273, -151.691, 32.8009, 0.37", "-17.914, -153.211, 32.6568, 0.29", "-17.6841, -154.416, 32.4553, 0.29", "-17.477, -155.614, 32.1941, 0.29", "-17.2748, -156.701, 31.9393, 0.29", "-16.9744, -157.984, 31.6274, 0.29", "-16.6604, -159.08, 31.3598, 0.29", "-12.5573, -166.038, 37.3247, 0.29", "-8.95285, -171.758, 44.8037, 0.29", "-3.35171, -177.701, 50.7025, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-21.6303, -148.268, 23.8039, 0.74", "-22.1969, -148.951, 23.5465, 0.74", "-22.6893, -149.656, 23.3225, 0.52", "-23.0623, -150.254, 23.1601, 0.52", "-23.6424, -151.347, 22.9186, 0.59", "-23.8728, -151.904, 22.8487, 0.96", "-24.0448, -152.507, 22.7968, 1.18", "-24.0967, -153.019, 22.7237, 1.18", "-24.066, -153.502, 22.6527, 0.96", "-23.9232, -154.209, 22.5009, 0.66", "-23.5957, -155.208, 22.1109, 0.52", "-23.2307, -156.1, 21.6919, 0.52", "-22.7651, -157.042, 21.1508, 0.29", "-22.5565, -157.394, 20.9018, 0.37", "-21.985, -158.206, 20.1599, 0.29", "-21.3711, -158.932, 19.216, 0.29", "-21.5496, -166.968, 17.391, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-6.27062, -72.1714, -1.59821, 0.37", "-9.81839, -73.6261, -1.32905, 0.37", "-11.5029, -74.3598, -0.661867, 0.37", "-12.7481, -74.9255, -0.00701427, 0.37", "-13.5936, -75.32, 0.45368, 0.37", "-14.6596, -75.8294, 1.0769, 0.59", "-15.6928, -76.3375, 1.69196, 0.74", "-16.4889, -76.7221, 2.31715, 0.52", "-17.0904, -77.0184, 2.7961, 0.59", "-17.6257, -77.3384, 3.18757, 0.74", "-18.5466, -77.8963, 3.7466, 0.52", "-19.1258, -78.2359, 4.02546, 0.52", "-19.6699, -78.5291, 4.22986, 0.74", "-20.2808, -78.8398, 4.43066, 0.74", "-20.8641, -79.1458, 4.611, 0.52", "-21.7094, -79.585, 4.86029, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.27062, -72.1714, -1.59821, 0.88", "-6.53642, -73.5272, -1.60733, 0.88", "-7.02408, -75.2343, -1.42609, 0.66", "-7.47402, -76.4347, -0.971351, 0.74", "-7.85878, -77.2335, -0.544759, 0.88", "-8.54388, -78.4443, 0.169325, 0.88", "-8.98661, -79.1771, 0.603335, 1.03", "-9.52582, -79.9782, 1.15832, 1.03", "-10.7401, -81.8432, 2.47074, 1.03", "-11.4247, -83.0148, 3.22424, 1.03", "-11.9761, -84.196, 3.85445, 0.88", "-12.2661, -85.2069, 4.22942, 0.88", "-12.3215, -86.1469, 4.45112, 0.88", "-12.0149, -87.9657, 4.57564, 1.25", "-11.7984, -88.6257, 4.56366, 1.55", "-11.3723, -89.5516, 4.56817, 1.55", "-10.6454, -90.8321, 4.6873, 1.55", "-10.113, -91.6279, 4.85691, 1.55", "-9.05286, -93.0015, 5.34342, 1.03", "-8.16357, -93.9799, 5.86957, 1.03", "-7.39023, -94.7484, 6.38097, 0.81", "-6.11309, -95.8857, 7.29966, 0.81", "-5.19622, -96.6295, 7.97826, 1.03", "-4.30477, -97.2762, 8.59327, 1.03", "-3.29344, -97.9456, 9.21274, 1.03", "-2.47129, -98.4942, 9.61999, 0.88", "-1.22269, -99.402, 10.1302, 0.88", "-0.605188, -99.8913, 10.323, 0.96", "0.10134, -100.526, 10.5079, 0.96", "1.05722, -101.496, 10.7256, 1.33", "1.55998, -102.08, 10.8144, 1.62", "1.97779, -102.612, 10.8873, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.38542, -26.0212, -5.3901, 0.66", "5.54841, -29.8885, -2.29327, 0.66", "5.50765, -31.1551, -1.41475, 0.88", "5.42027, -33.6676, 0.0974969, 1.03", "5.41611, -34.8645, 0.753609, 1.03", "5.45708, -35.9189, 1.30821, 1.03", "5.57195, -37.2199, 1.98553, 0.37", "5.69984, -38.6188, 2.55094, 0.37", "6.03724, -40.0137, 3.09138, 0.59", "6.71563, -41.2086, 3.54188, 0.81", "7.31209, -41.8828, 3.87318, 0.81", "8.00798, -42.4758, 4.28049, 0.52", "8.66173, -42.9555, 4.69811, 0.81", "9.62125, -43.6467, 5.36971, 1.25", "9.99551, -43.9931, 5.68776, 1.69", "10.4142, -44.6105, 6.16092, 1.69", "10.832, -46.1057, 7.00089, 0.96", "10.8824, -47.08, 7.39676, 0.66", "10.8514, -47.8409, 7.65481, 0.81", "10.7471, -49.4359, 8.17076, 0.44", "10.7294, -50.703, 8.60623, 0.44", "10.7977, -51.7019, 8.97338, 0.44", "11.0002, -52.6002, 9.42015, 0.88", "11.5158, -53.77, 10.3035, 1.25", "12.209, -54.8605, 11.3647, 0.66", "12.8673, -55.6876, 12.2787, 0.52", "13.275, -56.171, 12.8191, 0.52", "14.2614, -57.4205, 14.1562, 0.74", "15.0566, -58.5365, 15.2225, 1.25", "15.3667, -59.016, 15.5971, 1.25", "15.8647, -59.8426, 16.1044, 0.52", "16.4827, -60.9138, 16.5761, 0.44", "17.2991, -62.3337, 17.0026, 0.37", "17.8076, -63.1713, 17.1346, 0.37", "18.3566, -64.0117, 17.2019, 0.96", "18.7883, -64.6364, 17.2381, 1.33", "20.0962, -66.3343, 17.3256, 0.29", "20.5847, -66.8819, 17.3523, 0.29", "21.0864, -67.3743, 17.3672, 0.29", "21.2734, -67.557, 17.3743, 0.44", "26.0192, -77.7473, 21.6443, 0.44", "32.4477, -87.411, 24.8732, 0.44", "37.8317, -97.9513, 26.9011, 0.44", "43.7334, -108.095, 29.5275, 0.44", "49.0348, -118.328, 32.952, 0.44", "54.0497, -128.948, 35.441, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.38542, -26.0212, -5.3901, 1.03", "5.34454, -27.9226, -5.68993, 1.03", "5.50597, -29.8148, -5.96105, 1.03", "5.77673, -31.1849, -6.1409, 0.96", "6.14064, -32.4797, -6.29965, 0.96", "6.59439, -33.7319, -6.44262, 0.96", "6.96669, -34.5758, -6.49846, 1.18", "7.76066, -35.7156, -6.4326, 1.47", "8.58844, -36.6208, -6.2617, 2.21", "8.94343, -36.9758, -6.15208, 2.21", "9.49143, -37.556, -5.90578, 1.99", "10.4318, -38.7082, -5.33592, 1.33", "11.256, -39.9989, -4.68685, 0.88", "11.7402, -41.0468, -4.17025, 0.74", "12.0115, -42.0439, -3.73456, 0.74", "12.1657, -43.2458, -3.29015, 1.33", "12.1852, -43.9786, -3.07263, 1.62", "12.1555, -44.7811, -2.89679, 1.92", "12.1097, -45.6407, -2.78018, 1.69", "12.1056, -47.2747, -2.66155, 1.33", "12.2319, -48.9253, -2.63114, 1.03", "12.4207, -50.057, -2.66396, 0.88", "12.7019, -51.0989, -2.7252, 1.03", "13.188, -52.456, -2.84005, 1.03", "13.7848, -53.8116, -3.0004, 1.03", "14.353, -54.9602, -3.19621, 1.33", "14.772, -55.8229, -3.40123, 1.69", "15.2182, -56.8709, -3.71055, 1.47", "15.4633, -57.6058, -3.96982, 1.03", "15.7203, -58.7271, -4.41205, 0.96", "15.8624, -59.7502, -4.86535, 0.96", "15.9446, -61.0043, -5.44794, 1.4", "15.9705, -62.3363, -6.05972, 1.4", "15.9845, -63.4997, -6.58454, 1.55", "16.0209, -64.1327, -6.84514, 1.77", "16.1656, -65.3494, -7.27871, 0.96", "16.3939, -66.4422, -7.57948, 0.66", "16.7327, -67.47, -7.72632, 0.66", "17.22, -68.4588, -7.73935, 0.96", "17.868, -69.4343, -7.65402, 1.11", "18.2199, -69.8589, -7.59366, 1.4", "18.5449, -70.1943, -7.53856, 1.4", "19.2281, -70.8914, -7.42613, 1.4", "20.0342, -71.8013, -7.32118, 0.66", "20.388, -72.2895, -7.31188, 0.52", "20.7834, -72.9859, -7.35165, 0.52", "21.2906, -74.1275, -7.42302, 0.81", "21.7344, -75.4062, -7.45301, 1.03", "21.9479, -76.2509, -7.4661, 1.03", "22.1376, -77.3914, -7.45207, 1.03", "22.2608, -78.5261, -7.49152, 1.03", "22.3448, -79.705, -7.57636, 0.88", "22.4405, -81.1428, -7.78393, 1.03", "22.5532, -82.4226, -8.05253, 0.52", "22.7055, -83.6311, -8.40085, 0.52", "22.9737, -85.3874, -9.08954, 0.88", "23.0992, -86.1024, -9.44314, 1.11", "23.3032, -87.2325, -10.0902, 0.59", "23.3864, -87.7114, -10.3635, 0.59", "23.5461, -88.7911, -10.8275, 0.52", "23.6379, -89.9466, -11.0849, 0.52", "23.5914, -90.8896, -11.0161, 1.11", "23.4502, -91.6883, -10.8185, 1.25", "23.123, -92.8969, -10.3594, 1.18", "22.7565, -94.0785, -9.83308, 0.52", "22.4975, -94.9008, -9.40154, 0.52", "22.1978, -96.0283, -8.82452, 0.52", "22.1104, -96.4529, -8.64815, 0.81", "22.0057, -97.2303, -8.43435, 0.74", "21.9052, -98.2298, -8.31795, 0.74", "21.7975, -99.2192, -8.30844, 1.03", "21.5996, -100.525, -8.40895, 0.66", "21.4105, -101.385, -8.52439, 0.52", "21.0843, -102.374, -8.70771, 1.11", "20.7262, -103.198, -8.95184, 1.11", "20.1465, -104.362, -9.40357, 0.81", "19.5183, -105.572, -9.97553, 0.66", "19.0902, -106.42, -10.4052, 0.88", "18.5839, -107.576, -11.0478, 0.66", "18.0133, -109.099, -12.0463, 0.59", "17.71, -110.095, -12.7866, 0.88", "17.4953, -110.966, -13.4845, 1.18", "17.3548, -111.596, -13.9961, 0.96", "17.1805, -112.429, -14.6748, 0.96", "16.8683, -113.952, -15.8211, 0.52", "16.7538, -114.455, -16.1545, 0.81", "16.5275, -115.44, -16.7423, 0.66", "16.3627, -116.196, -17.0694, 0.66", "16.1822, -117.134, -17.3, 0.96", "16.0141, -118.296, -17.1938, 0.88", "15.9224, -119.32, -16.8714, 0.88", "15.8546, -120.213, -16.5297, 0.37", "15.7739, -121.848, -15.85, 1.03", "15.7285, -122.709, -15.5132, 1.03", "15.5517, -124.611, -14.8255, 0.44", "15.3985, -125.989, -14.4818, 0.44", "15.3283, -126.787, -14.4663, 0.74", "15.3185, -127.607, -14.7224, 0.74", "15.3924, -128.738, -15.3694, 0.44", "15.5092, -129.643, -15.9911, 0.66", "15.7491, -130.945, -16.9857, 0.44", "16.1467, -132.808, -18.4189, 0.88", "16.6163, -134.854, -19.9091, 0.52", "16.8734, -135.897, -20.6458, 0.74", "17.2463, -137.3, -21.5944, 1.33", "17.4495, -138.098, -22.0932, 1.33", "17.7803, -139.744, -22.9734, 0.74", "17.9254, -140.794, -23.41, 0.66", "18.0122, -142.286, -23.9048, 0.66", "17.9783, -143.322, -24.2322, 0.81", "17.8278, -144.376, -24.5774, 0.59", "17.6494, -145.082, -24.7914, 1.18", "17.5315, -145.409, -24.8885, 1.18", "17.0524, -146.565, -25.2141, 0.44", "16.6276, -147.574, -25.4019, 0.44", "16.3116, -148.426, -25.5024, 1.03", "16.1578, -149.037, -25.5191, 1.4", "16.0328, -150.341, -25.3365, 0.52", "16.0309, -151.226, -25.1575, 0.52", "16.1947, -152.398, -24.7925, 0.74", "16.2998, -152.825, -24.5963, 0.74", "16.563, -153.682, -24.0332, 0.59", "16.936, -154.656, -23.1864, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.38542, -26.0212, -5.3901, 0.88", "7.70726, -26.0378, -9.08851, 0.88", "8.40867, -25.9986, -10.0477, 0.88", "9.14735, -25.9438, -10.911, 1.03", "9.66853, -25.8998, -11.4405, 1.33", "10.159, -25.8615, -11.9008, 1.62", "10.8779, -25.8179, -12.5397, 1.84", "11.5275, -25.7291, -12.9922, 1.47", "12.2551, -25.6431, -13.6472, 1.18", "12.6729, -25.5877, -14.4042, 0.81", "13.0129, -25.5265, -15.4285, 0.81", "13.1968, -25.5055, -16.1432, 1.11", "13.5368, -25.5345, -17.7674, 1.33", "13.8663, -25.6162, -19.5357, 1.77", "14.5992, -25.9101, -23.6053, 1.47", "14.8509, -26.027, -24.8844, 1.11", "15.1404, -26.1503, -26.1236, 1.11", "15.6027, -26.3017, -27.633, 0.81", "15.9458, -26.3864, -28.4164, 0.96", "16.599, -26.4644, -29.417, 0.88", "17.183, -26.402, -30.1216, 0.74", "17.6094, -26.2309, -30.7021, 0.59", "18.1062, -25.8517, -31.5619, 1.03", "18.4595, -25.4932, -32.2333, 1.55", "18.7792, -25.1407, -32.8613, 1.69", "19.7121, -24.0797, -34.7912, 1.69", "19.994, -23.7686, -35.4035, 1.69", "20.7099, -23.0544, -36.9239, 0.88", "21.1371, -22.7115, -37.7443, 0.81", "21.6932, -22.3912, -38.6325, 1.11", "22.4775, -22.1029, -39.6673, 1.18", "23.2566, -21.9812, -40.468, 0.59", "23.6176, -21.9872, -40.8014, 0.59", "24.5462, -22.1797, -41.5084, 0.96", "25.2259, -22.4496, -41.9867, 1.18", "25.8244, -22.7807, -42.3517, 1.18", "26.4605, -23.1837, -42.6635, 1.4", "27.2084, -23.6867, -42.9846, 1.4", "27.9067, -24.1351, -43.272, 1.11", "28.4033, -24.4039, -43.4648, 1.11", "29.0143, -24.6344, -43.6991, 1.03", "29.8136, -24.815, -44.0001, 1.03", "30.5102, -24.8803, -44.2565, 1.03", "31.314, -24.8735, -44.5452, 0.96", "32.4179, -24.7729, -44.9462, 0.88", "33.6266, -24.5921, -45.3578, 0.88", "34.4319, -24.427, -45.6168, 1.03", "35.06, -24.2775, -45.8293, 1.11", "35.5677, -24.1536, -46.0248, 1.18", "36.0054, -24.0697, -46.2574, 1.18", "36.8147, -24.0212, -46.9092, 0.81", "37.3422, -24.1016, -47.5092, 0.74", "37.9922, -24.3101, -48.395, 1.18", "38.4707, -24.5116, -49.1145, 1.4", "39.409, -24.9619, -50.6622, 1.18", "40.1079, -25.3036, -51.9055, 0.88", "40.6053, -25.5301, -52.8895, 0.74", "41.1091, -25.7066, -53.8811, 0.74", "41.5825, -25.7846, -54.748, 1.11", "42.0964, -25.7727, -55.6472, 1.4", "42.6171, -25.7082, -56.5169, 1.4", "43.3367, -25.6253, -57.7426, 1.11", "43.7498, -25.6087, -58.4881, 0.74", "44.2604, -25.6783, -59.4575, 0.66", "44.8635, -25.914, -60.6402, 0.81", "45.4982, -26.3071, -61.7837, 0.74", "46.0383, -26.7239, -62.7189, 1.25", "46.3483, -26.9738, -63.2141, 1.69", "46.7629, -27.272, -63.8326, 1.69", "47.2206, -27.4914, -64.404, 1.4", "47.9738, -27.6247, -65.1627, 0.88", "49.1053, -27.5233, -66.1507, 0.81", "49.6275, -27.4146, -66.5701, 0.81", "50.3717, -27.2478, -67.1078, 0.81", "51.3543, -27.0343, -67.7239, 0.81", "51.985, -26.9249, -68.0615, 0.81", "52.8965, -26.8439, -68.4833, 0.81", "53.5287, -26.8794, -68.7143, 0.96", "54.4962, -27.1105, -69.0848, 0.96", "55.133, -27.3887, -69.3928, 1.18", "55.6749, -27.7198, -69.7406, 1.47", "56.2123, -28.096, -70.1408, 1.47", "56.9824, -28.6541, -70.7614, 0.74", "57.8678, -29.2619, -71.5113, 0.74", "58.9378, -29.9192, -72.4694, 0.66", "59.9186, -30.4613, -73.4094, 0.74", "60.5266, -30.7393, -74.0053, 0.81", "61.2245, -30.9675, -74.6811, 0.81", "61.5822, -31.0301, -75.0132, 1.11", "62.4441, -31.0466, -75.7923, 1.25", "62.8107, -31.0015, -76.1684, 1.62", "63.1814, -30.9062, -76.6693, 1.62", "63.8588, -30.6811, -77.766, 0.59", "64.2613, -30.5364, -78.5013, 0.59", "64.8579, -30.3333, -79.6299, 0.88", "65.658, -30.0924, -81.1511, 1.4", "66.483, -29.8974, -82.6456, 0.74", "66.9824, -29.8165, -83.4971, 0.59", "67.4286, -29.7829, -84.1696, 0.81", "67.8647, -29.7904, -84.6667, 0.81", "68.3289, -29.826, -85.0156, 0.96", "68.8394, -29.8601, -85.2819, 0.96", "69.4612, -29.8824, -85.5627, 0.59", "70.4217, -29.8676, -86.0204, 0.59", "71.3461, -29.7969, -86.4683, 0.66", "71.8642, -29.7267, -86.7793, 1.03", "72.6891, -29.5835, -87.3456, 1.03", "73.4162, -29.3891, -88.1498, 0.59", "73.7423, -29.2595, -88.6485, 0.59", "74.1375, -29.0661, -89.391, 0.59", "74.714, -28.8037, -90.5879, 1.11", "74.9726, -28.7181, -91.1266, 1.33", "76.4708, -28.3789, -94.0488, 1.03", "76.7534, -28.3273, -94.5433, 1.4", "77.3428, -28.2303, -95.4469, 0.81", "77.9712, -28.1285, -96.2709, 0.74", "78.8212, -27.9882, -97.174, 0.59", "79.4137, -27.8866, -97.6989, 0.59", "80.4252, -27.7144, -98.3724, 0.59", "81.6216, -27.4511, -99.1702, 0.88", "82.0456, -27.307, -99.4505, 1.25", "82.4214, -27.1315, -99.6976, 1.55", "82.9725, -26.8258, -100.075, 1.55", "83.4135, -26.57, -100.396, 1.33", "83.957, -26.2524, -100.798, 0.66", "84.6539, -25.8632, -101.308, 0.66", "85.103, -25.6305, -101.697, 0.66", "85.8824, -25.2294, -102.525, 0.66", "86.1679, -25.1225, -103.064, 0.66", "86.3204, -25.0899, -103.457, 0.96", "86.4895, -25.0791, -103.961, 0.96", "86.9909, -25.1285, -105.499, 0.74", "87.296, -25.186, -106.411, 1.62", "88.5631, -25.4591, -109.931, 0.66", "88.7619, -25.4899, -110.445, 0.66", "89.0877, -25.5161, -111.175, 1.11", "89.5445, -25.5294, -112.044, 1.11", "90.0552, -25.5014, -112.802, 0.52", "90.6029, -25.4145, -113.429, 0.52", "91.3409, -25.1897, -114.094, 1.25", "91.9068, -24.9849, -114.614, 0.88", "92.9778, -24.5132, -115.612, 0.44", "93.5914, -24.1928, -116.173, 0.44", "94.5035, -23.6569, -116.987, 0.52", "95.1092, -23.269, -117.517, 0.88", "95.4119, -23.0668, -117.772, 1.11", "95.6564, -22.8747, -118.03, 1.11", "95.8372, -22.6987, -118.283, 1.11", "96.3517, -22.0804, -119.336, 0.52", "96.5176, -21.8414, -119.874, 0.52", "96.7227, -21.5299, -120.7, 0.81", "97.1943, -20.8627, -122.675, 0.81", "97.4259, -20.565, -123.589, 1.11", "97.5405, -20.4431, -123.957, 1.92", "98.3206, -19.8071, -125.814, 0.59", "98.436, -19.7378, -126.008, 0.59", "98.9285, -19.5356, -126.529, 0.88", "99.6348, -19.3337, -127.007, 0.44", "100.821, -19.0624, -127.709, 0.44", "101.768, -18.8812, -128.23, 0.74", "102.299, -18.8077, -128.542, 0.74", "103.047, -18.7688, -129.146, 0.52", "103.459, -18.8, -129.62, 0.52", "104.029, -18.919, -130.491, 0.59", "104.233, -18.9695, -130.859, 0.59", "105.097, -19.1429, -132.55, 0.59", "105.663, -19.1985, -133.667, 0.81", "106.191, -19.1841, -134.722, 1.4", "106.479, -19.1183, -135.254, 1.55", "107.185, -18.7748, -136.349, 0.44", "107.507, -18.5378, -136.742, 0.88", "107.939, -18.1663, -137.108, 0.88", "108.414, -17.7562, -137.491, 0.59", "109.149, -17.1629, -138.093, 0.59", "109.622, -16.8379, -138.577, 0.81", "110.141, -16.5615, -139.204, 0.81", "110.798, -16.2738, -140.142, 0.52", "111.501, -15.9918, -141.34, 0.74", "111.69, -15.9048, -141.855, 0.74", "111.957, -15.6694, -143.367, 0.37", "112.001, -15.5236, -144.162, 0.37", "111.966, -15.2399, -145.422, 0.37", "111.869, -14.929, -146.523, 0.59", "111.566, -13.9369, -149.539, 0.88", "111.442, -13.4542, -150.917, 0.52", "111.414, -13.3002, -151.407, 0.52", "111.395, -13.0501, -152.481, 0.52", "111.44, -12.8924, -153.287, 0.81", "111.574, -12.7226, -154.239, 0.59", "111.747, -12.6046, -154.985, 0.59", "112.375, -12.3222, -157.393, 1.18", "113.08, -12.0916, -160.367, 0.74", "113.231, -12.0597, -161.136, 0.74", "113.347, -12.0455, -161.899, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-57.9456, 127.354, -43.8117, 0.29", "-59.578, 127.421, -43.4699, 0.29", "-60.8909, 127.647, -43.2773, 0.29", "-61.5943, 127.903, -43.3237, 0.59", "-62.4014, 128.342, -43.4893, 0.59", "-63.0531, 128.777, -43.6556, 0.59", "-63.7391, 129.303, -43.8366, 0.44", "-64.2604, 129.884, -44.0599, 0.59", "-65.2411, 131.019, -44.619, 0.37", "-65.7357, 131.557, -44.9229, 0.29", "-66.2443, 132.053, -45.2017, 0.59", "-66.8009, 132.56, -45.4781, 0.59", "-68.0125, 133.634, -46.0526, 0.29", "-69.1472, 134.655, -46.6321, 0.29", "-69.6877, 135.138, -46.9452, 0.29", "-70.7765, 136.035, -47.6811, 0.29", "-71.512, 136.572, -48.2535, 0.29", "-72.3218, 137.116, -48.9324, 0.52", "-73.0729, 137.613, -49.5914, 0.66", "-74.1909, 138.396, -50.6356, 0.44", "-75.1157, 139.011, -51.5711, 0.59", "-76.328, 139.679, -52.8785, 0.96", "-76.805, 139.868, -53.3423, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-57.9456, 127.354, -43.8117, 0.66", "-56.628, 127.155, -44.6917, 0.66", "-55.5753, 126.995, -45.3947, 0.29", "-54.8111, 126.88, -45.9051, 0.44", "-53.8691, 126.737, -46.5343, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-72.4795, 139.379, -35.6138, 0.29", "-73.1644, 139.997, -36.1775, 0.29", "-74.0449, 140.707, -36.8839, 0.59", "-74.6247, 141.175, -37.3588, 0.44", "-75.4607, 141.9, -38.0651, 0.88", "-75.8363, 142.268, -38.4146, 1.03", "-76.6815, 143.205, -39.2711, 0.52", "-76.9604, 143.546, -39.5868, 0.44", "-77.4957, 144.289, -40.2058, 0.66", "-77.8951, 144.899, -40.6814, 0.88", "-78.6315, 146.105, -41.5241, 0.59", "-79.1105, 146.907, -42.0406, 0.74", "-79.589, 147.729, -42.5244, 0.74", "-80.258, 148.816, -43.1461, 0.37", "-80.5686, 149.275, -43.4, 0.37", "-81.3003, 150.25, -43.9035, 0.66", "-81.8086, 150.839, -44.1707, 0.66", "-82.3426, 151.37, -44.3811, 0.52", "-83.1149, 152.031, -44.5927, 0.88", "-83.6408, 152.424, -44.6812, 0.88", "-84.4094, 152.93, -44.726, 0.52", "-85.3273, 153.482, -44.6996, 0.52", "-86.4561, 154.155, -44.6097, 0.88", "-87.1792, 154.609, -44.5319, 0.88", "-88.0705, 155.191, -44.4115, 0.52", "-88.8293, 155.705, -44.3023, 0.44", "-89.6921, 156.3, -44.1821, 0.37", "-90.5326, 156.929, -44.0696, 0.37", "-91.3676, 157.611, -43.976, 0.29", "-92.726, 158.798, -43.8629, 0.29", "-93.361, 159.367, -43.8208, 0.29", "-94.0939, 160.007, -43.7714, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-72.4795, 139.379, -35.6138, 0.29", "-74.1821, 138.243, -34.8753, 0.29", "-75.1087, 137.625, -34.4733, 0.29", "-75.7651, 137.187, -34.1885, 0.22", "-76.6027, 136.629, -33.8252, 0.22", "-77.5346, 136.007, -33.4209, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "141.739, 40.0475, 63.688, 0.29", "143.75, 45.3673, 70.492, 0.29", "146.341, 49.8185, 77.743, 0.29", "149.87, 53.9226, 84.8122, 0.29", "152.645, 56.7569, 92.8129, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "141.739, 40.0475, 63.688, 0.29", "152.832, 37.2754, 69.6884, 0.29", "164.254, 36.909, 75.7273, 0.29", "175.173, 38.9988, 82.3073, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "81.9734, 40.5518, -2.7459, 0.37", "82.1771, 41.2474, -2.55828, 0.37", "82.4401, 42.2825, -2.23529, 0.37", "82.6307, 43.0324, -2.0013, 0.22", "83.0313, 44.609, -1.50936, 0.22", "83.3367, 45.8107, -1.13442, 0.66", "83.7044, 47.2579, -0.682867, 1.11", "83.7819, 47.6191, -0.547791, 1.11", "86.4343, 56.595, 1.05035, 1.11", "89.6104, 65.4319, 2.48374, 1.11", "93.3436, 73.9045, 4.71059, 1.11", "97.0564, 82.07, 7.97377, 1.11", "101.812, 90.1759, 9.55843, 1.11", "106.751, 98.121, 11.4208, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "81.9734, 40.5518, -2.7459, 0.44", "82.9951, 40.7759, -2.67553, 0.44", "84.0889, 40.9643, -2.5883, 0.44", "85.2621, 41.1419, -2.41254, 0.74", "85.9758, 41.2406, -2.27738, 1.03", "86.6443, 41.3283, -2.12951, 1.03", "87.1727, 41.392, -2.02961, 1.03", "88.066, 41.4896, -1.94513, 0.66", "89.298, 41.6548, -1.96007, 0.66", "89.7332, 41.7452, -2.03348, 0.81", "90.3948, 41.9505, -2.22786, 0.44", "91.7408, 42.5049, -2.75158, 0.44", "93.3406, 43.3062, -3.46734, 0.37", "93.9017, 43.6211, -3.7565, 0.37", "94.7685, 44.1288, -4.23501, 0.37", "95.8102, 44.767, -4.78237, 0.66", "96.4184, 45.1591, -5.06854, 0.66", "97.2729, 45.7217, -5.35442, 0.37", "97.7852, 46.0416, -5.4602, 0.37", "98.4357, 46.4365, -5.57887, 0.59", "99.014, 46.7916, -5.70236, 0.59", "99.5748, 47.1285, -5.92095, 0.44", "100.524, 47.6218, -6.3535, 0.66", "100.697, 47.6977, -6.43514, 0.96", "101.358, 47.9201, -6.71872, 0.96", "102.323, 48.1414, -7.10382, 1.11", "104.545, 48.4988, -7.87358, 0.44", "105.79, 48.6519, -8.23955, 0.44", "106.76, 48.7577, -8.47427, 0.37", "107.954, 48.9007, -8.75537, 0.37", "108.681, 49.0067, -8.90846, 0.29", "109.687, 49.2294, -9.10231, 0.22", "110.37, 49.5184, -9.27727, 0.59", "110.73, 49.7922, -9.45086, 0.59", "111.769, 50.7087, -10.1794, 0.29", "112.209, 51.1009, -10.5208, 0.37", "112.731, 51.5305, -10.9236, 0.52", "113.301, 51.8908, -11.3413, 0.74", "114.106, 52.2572, -12.0143, 0.96", "115.537, 52.7718, -13.4157, 0.29", "116.087, 52.9587, -14.0513, 0.52", "116.331, 53.0494, -14.389, 0.81", "117.128, 53.4163, -15.6766, 1.11", "118.561, 54.2183, -18.3359, 0.81", "119.179, 54.6598, -19.6295, 0.96", "119.826, 55.2533, -21.1136, 0.66", "120.31, 55.7519, -22.2277, 0.52", "120.801, 56.2859, -23.2266, 0.52", "121.017, 56.526, -23.547, 0.74", "121.599, 57.0039, -23.941, 0.74", "121.988, 57.237, -24.0935, 0.96", "122.598, 57.4961, -24.2693, 0.96", "123.596, 57.8494, -24.6284, 0.74", "124.578, 58.2054, -25.0752, 0.44", "125.655, 58.6792, -25.771, 0.44", "126.062, 58.9049, -26.1142, 0.96", "126.789, 59.4244, -26.9505, 1.18", "127.788, 60.3216, -28.4304, 0.66", "128.144, 60.7094, -29.095, 0.66", "128.775, 61.4962, -30.5133, 0.59", "129.007, 61.8161, -31.0477, 0.52", "129.666, 62.7128, -32.4213, 0.52", "129.851, 62.9884, -32.7763, 0.96", "130.25, 63.5799, -33.4278, 0.96", "131.006, 64.7304, -34.5229, 0.59", "131.658, 65.7906, -35.3452, 0.59", "132.072, 66.4953, -35.8303, 0.88", "132.673, 67.5508, -36.431, 0.74", "133.211, 68.4027, -36.8775, 0.74", "133.85, 69.2683, -37.2631, 0.88", "134.262, 69.686, -37.4431, 0.88", "135.044, 70.2492, -37.7776, 0.37", "135.874, 70.7134, -38.136, 0.37", "137.185, 71.2858, -38.6982, 0.37", "138.106, 71.6382, -39.1318, 0.37", "139.18, 72.0166, -39.6883, 0.37", "139.83, 72.2623, -40.0342, 0.59", "140.635, 72.5984, -40.46, 0.74", "141.176, 72.8558, -40.7589, 0.74", "142.197, 73.4271, -41.3766, 0.44", "142.742, 73.7374, -41.6947, 0.37", "144.339, 74.5449, -42.4337, 0.37", "145.098, 74.8563, -42.7118, 0.74", "145.501, 74.9842, -42.829, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "102.608, 66.6463, 21.4673, 0.29", "109.326, 73.2737, 25.9259, 0.29", "116.332, 80.6201, 28.3041, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "102.608, 66.6463, 21.4673, 0.29", "110.93, 74.4386, 27.6175, 0.29", "119.682, 80.9952, 34.6156, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-21.5496, -166.968, 17.391, 0.29", "-17.8008, -178.154, 15.1446, 0.29", "-15.6504, -189.923, 14.5063, 0.29", "-13.9854, -201.545, 12.0704, 0.29", "-13.8705, -213.481, 11.0984, 0.29", "-14.8279, -225.377, 10.0709, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-21.5496, -166.968, 17.391, 0.29", "-24.1063, -174.006, 13.7134, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.97779, -102.612, 10.8873, 0.37", "1.22256, -103.742, 9.81107, 0.37", "0.743418, -104.34, 9.26092, 0.37", "0.258591, -104.86, 8.77043, 0.44", "-0.337204, -105.424, 8.23417, 0.74", "-0.942857, -105.944, 7.74578, 0.59", "-1.58653, -106.43, 7.28752, 0.59", "-1.99239, -106.631, 7.08844, 0.74", "-2.68453, -106.854, 6.82348, 0.88", "-3.13016, -106.944, 6.69692, 1.18", "-3.58739, -106.996, 6.59832, 0.59", "-4.2883, -107.036, 6.46707, 0.44", "-4.98333, -107.064, 6.33354, 0.52", "-5.30309, -107.089, 6.26278, 0.74", "-5.84486, -107.201, 6.14241, 0.74", "-6.22744, -107.354, 6.03596, 0.59", "-6.6091, -107.599, 5.91222, 0.59", "-7.09535, -108.051, 5.73863, 0.59", "-7.59779, -108.668, 5.55963, 0.44", "-8.15795, -109.487, 5.37456, 0.37", "-8.47353, -110.037, 5.28084, 1.03", "-8.67858, -110.451, 5.22014, 1.03", "-8.83745, -110.832, 5.17347, 0.96", "-9.09457, -111.619, 5.10418, 0.66", "-9.27951, -112.327, 5.05402, 0.66", "-9.44732, -113.135, 4.98912, 0.88", "-9.52851, -113.631, 4.94911, 1.03", "-9.61072, -114.335, 4.8831, 0.88", "-9.68097, -115.239, 4.78209, 0.52", "-9.71248, -115.946, 4.68877, 0.52", "-9.72666, -116.482, 4.60404, 0.96", "-9.73811, -116.832, 4.54106, 0.96", "-9.80071, -117.692, 4.36113, 0.59", "-9.89269, -118.378, 4.19891, 0.66", "-10.0073, -118.89, 4.06035, 0.81", "-10.1892, -119.515, 3.86871, 0.81", "-10.3166, -119.864, 3.74788, 0.81", "-10.5623, -120.499, 3.4732, 0.44", "-10.6886, -120.831, 3.30535, 0.81", "-10.8417, -121.31, 3.03487, 0.81", "-10.9974, -121.993, 2.63383, 0.52", "-11.0543, -122.547, 2.30715, 0.52", "-11.0426, -123.556, 1.7206, 0.74", "-10.9975, -124.048, 1.44551, 1.11", "-10.9518, -124.503, 1.21138, 1.11", "-10.9068, -125.081, 0.947985, 0.96", "-10.8966, -125.73, 0.68844, 0.59", "-10.9568, -126.533, 0.406306, 0.44", "-11.1544, -127.423, 0.135421, 0.44", "-11.3823, -128.093, -0.0605385, 0.44", "-11.6447, -128.72, -0.227695, 0.74", "-11.8449, -129.18, -0.341186, 0.74", "-12.0403, -129.626, -0.436253, 0.74", "-12.3827, -130.422, -0.579107, 0.66", "-12.6282, -131.016, -0.668017, 0.44", "-12.938, -131.783, -0.774726, 0.44", "-13.4278, -132.853, -0.898399, 0.44", "-13.7099, -133.35, -0.938652, 0.88", "-14.0445, -133.814, -0.955663, 1.18", "-14.3086, -134.114, -0.947006, 1.18", "-14.6433, -134.44, -0.922628, 1.03", "-15.6032, -135.237, -0.842678, 0.66", "-16.4922, -135.876, -0.755559, 0.66", "-17.2481, -136.399, -0.678649, 1.25", "-17.6495, -136.681, -0.63605, 1.55", "-18.1341, -137.028, -0.584662, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "1.97779, -102.612, 10.8873, 0.74", "1.15913, -103.845, 10.182, 0.74", "0.197681, -105.26, 9.35694, 0.74", "-0.300398, -106.105, 8.94804, 0.74", "-0.776976, -107.051, 8.55321, 0.81", "-1.65866, -109.22, 7.80866, 0.52", "-2.19881, -110.945, 7.3162, 0.74", "-2.38682, -111.863, 7.11609, 0.74", "-2.2442, -113.895, 6.95108, 0.74", "-1.85537, -114.9, 6.96664, 0.81", "-1.04554, -116.115, 7.09157, 0.66", "-0.532519, -116.713, 7.19224, 1.11", "-0.00190949, -117.297, 7.26871, 1.11", "0.65337, -118.04, 7.2832, 0.81", "1.43767, -119.05, 7.14631, 0.81", "2.12314, -120.036, 6.96042, 0.96", "2.71891, -120.956, 6.76752, 0.88", "3.42831, -122.086, 6.54585, 0.96", "3.91282, -122.928, 6.37475, 1.11", "4.4281, -123.98, 6.13297, 1.11", "4.82417, -124.966, 5.88188, 0.74", "5.29606, -126.506, 5.48257, 0.66", "5.48646, -127.312, 5.27734, 0.66", "5.79269, -129.178, 4.854, 0.66", "5.94296, -131.137, 4.47211, 0.59", "5.92672, -132.273, 4.27282, 0.96", "5.79158, -133.688, 4.04606, 1.18", "5.61531, -134.742, 3.90944, 1.03", "5.36662, -135.981, 3.7833, 0.88", "5.0617, -137.588, 3.67897, 0.74", "4.88727, -138.983, 3.69862, 0.59", "4.79298, -140.162, 3.78903, 0.59", "4.73561, -141.14, 3.94506, 1.4", "4.68345, -141.86, 4.12596, 1.4", "4.58123, -143.698, 4.75378, 0.88", "4.56461, -145.854, 5.74387, 0.66", "4.57292, -146.756, 6.22969, 0.88", "4.58319, -147.902, 6.88865, 0.88", "4.56921, -149.686, 7.93218, 0.59", "4.5095, -150.825, 8.59209, 0.81", "4.30742, -152.711, 9.63757, 0.81", "4.15881, -153.685, 10.0834, 1.11", "4.03428, -154.486, 10.3956, 1.11", "3.86212, -155.639, 10.7251, 0.52", "3.72769, -156.731, 10.948, 0.74", "3.6104, -157.706, 11.087, 1.03", "3.54887, -158.522, 11.1366, 1.25", "3.57617, -159.324, 11.2145, 1.33", "3.78672, -160.638, 11.485, 1.03", "4.17744, -161.862, 11.8402, 0.74", "4.64754, -162.851, 12.1824, 0.44", "5.20942, -163.747, 12.5294, 0.29", "6.20875, -164.972, 13.0613, 0.29", "7.59639, -166.312, 13.7182, 0.29", "8.4097, -166.907, 14.0484, 0.29", "9.16924, -167.321, 14.2775, 0.88", "9.7999, -167.614, 14.4355, 0.88", "10.8396, -168.063, 14.6541, 0.52", "11.3073, -168.265, 14.6997, 0.52", "12.151, -168.67, 14.7635, 0.52", "12.8123, -169.118, 14.8813, 0.52", "13.6736, -169.962, 15.0316, 0.52", "14.0761, -170.504, 15.0808, 0.88", "14.4943, -171.177, 15.0821, 0.88", "14.9904, -172.004, 14.9904, 1.11", "15.5051, -172.773, 14.8559, 0.66", "16.5013, -173.997, 14.5224, 0.66", "16.9891, -174.433, 14.3602, 0.66", "17.8649, -175.05, 14.1121, 0.66", "18.5841, -175.488, 13.9408, 0.52", "19.8048, -176.229, 13.6325, 0.66", "20.2054, -176.471, 13.5729, 0.66", "21.114, -177.014, 13.5971, 0.44", "21.8913, -177.486, 13.7354, 0.44", "23.0025, -178.201, 14.0879, 0.52", "24.3636, -179.121, 14.7036, 0.66", "25.5473, -179.962, 15.3271, 0.44", "26.8303, -180.88, 16.0678, 0.81", "28.0214, -181.734, 16.7296, 0.52", "28.7981, -182.295, 17.1187, 0.74", "29.7284, -182.98, 17.5073, 0.29", "30.2083, -183.357, 17.6284, 0.52", "30.8868, -183.952, 17.5988, 0.59", "32.1571, -185.145, 17.4065, 0.37", "33.0569, -186.02, 17.1721, 0.66", "33.5636, -186.515, 17.0098, 1.03", "34.369, -187.302, 16.7159, 1.03", "35.2675, -188.173, 16.4372, 0.74", "36.7485, -189.566, 16.138, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "16.936, -154.656, -23.1864, 0.44", "16.8517, -156.193, -23.058, 0.44", "16.7824, -157.267, -22.9671, 0.81", "16.7156, -158.091, -22.8979, 1.18", "16.6149, -159.193, -22.8099, 0.74", "16.5069, -160.339, -22.7247, 0.44", "16.409, -161.347, -22.654, 0.96", "16.3028, -162.392, -22.5872, 0.96", "16.1949, -163.384, -22.5306, 1.18", "15.9758, -164.864, -22.4484, 0.74", "15.6842, -166.202, -22.4106, 0.66", "15.3627, -167.291, -22.4133, 0.66", "14.8783, -168.652, -22.484, 0.66", "14.6086, -169.323, -22.5518, 1.03", "14.1997, -170.252, -22.6883, 0.81", "13.5586, -171.729, -23.0322, 0.52", "13.2486, -172.618, -23.2577, 0.44", "13.0031, -173.74, -23.5125, 0.37", "12.9451, -174.382, -23.6221, 0.66", "12.9271, -175.091, -23.6848, 0.66", "12.9701, -176.947, -23.7848, 0.44", "13.0216, -178.814, -23.7961, 0.44", "13.003, -180.304, -23.7572, 0.66", "12.8993, -181.617, -23.6866, 0.81", "12.6571, -183.043, -23.6171, 0.96", "12.2003, -184.543, -23.5412, 1.11", "11.692, -185.705, -23.482, 0.81", "11.1672, -186.727, -23.4909, 0.88", "10.7523, -187.522, -23.5398, 0.66", "10.1663, -188.642, -23.6484, 0.29", "9.43247, -190.076, -23.808, 0.29", "9.00705, -190.907, -23.8844, 0.52", "8.34086, -192.196, -24.0161, 0.52", "7.7852, -193.255, -24.1196, 0.37", "7.25693, -194.208, -24.2021, 0.29", "6.73746, -195.039, -24.2437, 0.29", "6.50563, -195.34, -24.2607, 0.88", "5.9505, -195.846, -24.2964, 1.11", "5.25009, -196.288, -24.324, 0.44", "4.35328, -196.719, -24.3456, 0.37", "3.48006, -197.064, -24.3754, 0.59", "2.69249, -197.328, -24.415, 0.74", "1.65148, -197.651, -24.4793, 0.44", "0.747877, -197.934, -24.5308, 0.37", "0.150646, -198.144, -24.5577, 0.88", "-0.530001, -198.436, -24.5704, 1.11", "-1.01282, -198.687, -24.558, 1.11", "-1.50293, -198.957, -24.5184, 1.11", "-2.70728, -199.654, -24.3812, 0.29", "-3.49954, -200.133, -24.2873, 0.59", "-4.02377, -200.459, -24.2208, 0.59", "-5.30254, -201.324, -24.0382, 0.29", "-6.07485, -201.909, -23.9095, 0.29", "-6.67382, -202.424, -23.8002, 0.52", "-7.36833, -203.087, -23.669, 0.52", "-7.73389, -203.454, -23.598, 0.81", "-8.34653, -204.178, -23.4776, 0.81", "-8.94129, -205.095, -23.3578, 0.29", "-9.61298, -206.33, -23.21, 0.29", "-9.97678, -207.053, -23.1174, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.936, -154.656, -23.1864, 0.22", "17.7887, -155.093, -23.193, 0.22", "18.6878, -155.553, -23.1999, 0.22", "19.7733, -156.108, -23.2082, 0.22", "20.5204, -156.49, -23.214, 0.22", "21.3133, -156.896, -23.2201, 0.22", "22.129, -157.313, -23.2264, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "113.347, -12.0455, -161.899, 0.74", "115.025, -13.7979, -164.304, 0.74", "115.502, -14.3862, -164.863, 0.44", "115.873, -14.8221, -165.222, 0.74", "116.495, -15.4676, -165.726, 0.52", "117.383, -16.2641, -166.328, 0.52", "118.368, -17.0303, -166.958, 0.52", "119.165, -17.5778, -167.293, 0.52", "120.008, -18.0655, -167.641, 0.52", "121.084, -18.5183, -168.139, 0.52", "121.994, -18.74, -168.592, 0.74", "122.949, -18.8255, -169.104, 1.03", "123.301, -18.8228, -169.308, 1.4", "123.648, -18.8054, -169.522, 1.4", "125.015, -18.7356, -170.441, 0.44", "125.552, -18.7366, -170.746, 0.74", "126.388, -18.8003, -171.09, 0.74", "126.993, -18.8823, -171.237, 0.96", "127.593, -19.0019, -171.286, 0.96", "128.408, -19.2308, -171.26, 0.96", "130.39, -20.0033, -170.964, 0.66", "131.215, -20.4141, -170.779, 0.81", "131.708, -20.7145, -170.628, 0.81", "132.902, -21.5259, -170.213, 0.52", "133.788, -22.1633, -169.904, 0.52", "134.742, -22.8739, -169.616, 0.52", "135.637, -23.5343, -169.458, 0.52", "136.768, -24.3328, -169.339, 0.44", "137.37, -24.7172, -169.354, 0.96", "137.978, -25.0466, -169.532, 1.11", "138.786, -25.417, -169.993, 0.44", "139.43, -25.7139, -170.606, 0.37", "139.832, -25.9403, -171.184, 0.37", "140.387, -26.3247, -172.31, 0.66", "140.93, -26.7647, -173.718, 0.74", "141.14, -26.945, -174.362, 0.81", "141.421, -27.1799, -175.359, 0.81", "141.774, -27.4385, -176.685, 0.66", "142.127, -27.6354, -177.858, 0.66", "142.498, -27.8057, -178.904, 0.29", "142.776, -27.9251, -179.588, 0.59", "143.094, -28.0459, -180.286, 0.74", "143.402, -28.1477, -180.939, 0.44", "143.823, -28.2726, -181.767, 0.37", "144.26, -28.4209, -182.606, 0.37", "144.691, -28.5975, -183.403, 0.59", "145.032, -28.7668, -184.025, 0.59", "145.816, -29.268, -185.788, 0.29", "146.255, -29.6539, -187.024, 0.29", "146.446, -29.8832, -187.713, 0.29", "146.6, -30.1035, -188.323, 0.74", "146.741, -30.3406, -188.944, 0.74", "147.209, -31.4836, -191.509, 0.37", "147.307, -31.917, -192.308, 0.52", "147.331, -32.3057, -192.993, 0.81", "147.32, -32.7292, -193.784, 0.37", "147.293, -33.0845, -194.538, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "113.347, -12.0455, -161.899, 0.88", "113.623, -11.6325, -163.332, 0.88", "113.714, -11.5584, -163.975, 1.25", "113.768, -11.5452, -164.629, 1.25", "113.807, -11.5352, -165.551, 0.59", "113.91, -11.5086, -168.016, 0.59", "114.014, -11.4818, -170.492, 0.96", "114.046, -11.544, -171.83, 1.11", "114.033, -11.7514, -174.279, 1.25", "113.975, -11.9429, -175.835, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-94.0939, 160.007, -43.7714, 0.22", "-93.7435, 159.149, -42.9153, 0.22", "-93.5252, 158.614, -42.3819, 0.22", "-93.0363, 157.417, -41.1876, 0.22", "-92.7381, 156.686, -40.4589, 0.22", "-92.4818, 156.058, -39.8327, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-94.0939, 160.007, -43.7714, 0.22", "-94.7087, 160.947, -43.2474, 0.22", "-95.2492, 161.799, -42.8014, 0.22", "-95.7633, 162.609, -42.3772, 0.22", "-96.2551, 163.385, -41.9713, 0.22", "-96.9956, 164.552, -41.3604, 0.22", "-97.3733, 165.147, -41.0487, 0.37", "-97.7253, 165.799, -40.7369, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "152.645, 56.7569, 92.8129, 0.29", "157.494, 62.5981, 104.145, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "152.645, 56.7569, 92.8129, 0.29", "154.627, 59.8249, 98.821, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "175.173, 38.9988, 82.3073, 0.29", "178.358, 35.1875, 74.1062, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "175.173, 38.9988, 82.3073, 0.29", "163.085, 42.5227, 83.5977, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "145.501, 74.9842, -42.829, 0.37", "144.953, 74.9262, -43.5617, 0.37", "144.339, 74.6762, -44.7746, 0.66", "144.081, 74.3658, -45.7283, 0.29", "143.909, 74.0586, -46.6, 0.29", "143.714, 73.6824, -47.6997, 0.29", "143.299, 72.9151, -50.1014, 0.29", "143.125, 72.5208, -51.2105, 0.81", "142.685, 71.2423, -54.5372, 0.44", "142.572, 70.7729, -55.7037, 0.96", "142.518, 70.3858, -56.7127, 1.18", "142.503, 69.9078, -58.0434, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "145.501, 74.9842, -42.829, 0.37", "146.862, 75.308, -42.7073, 0.37", "148.435, 75.9133, -42.6284, 0.29", "149.011, 76.1855, -42.6097, 0.66", "149.571, 76.4925, -42.5879, 0.66", "150.264, 76.9459, -42.5894, 0.37", "151.227, 77.6117, -42.6178, 0.37", "152.263, 78.4362, -42.6898, 0.81", "152.681, 78.8175, -42.6989, 1.11", "153.257, 79.3806, -42.683, 1.33", "154.394, 80.6231, -42.5964, 0.44", "155.037, 81.4339, -42.4842, 0.52", "155.839, 82.6125, -42.2624, 1.03", "156.655, 84.0229, -41.9609, 0.52", "157.02, 84.7437, -41.7787, 0.66", "157.366, 85.5535, -41.5466, 0.66", "157.803, 86.8871, -41.1236, 0.44", "157.967, 87.6264, -40.9415, 0.29", "158.14, 88.5415, -40.7899, 0.44", "158.401, 89.5803, -40.7163, 0.66", "158.689, 90.4409, -40.6952, 0.37", "159.071, 91.426, -40.7249, 0.37", "159.702, 93.018, -40.8581, 0.29", "160.091, 94.0445, -40.951, 0.29", "160.636, 95.7731, -41.1335, 0.29", "160.912, 96.9658, -41.2295, 0.29", "161.035, 97.9024, -41.2667, 1.55", "161.047, 98.6845, -41.2612, 1.18", "160.905, 99.5331, -41.1645, 0.96", "160.385, 100.917, -40.9129, 0.52", "159.443, 102.52, -40.5294, 0.29", "158.688, 103.502, -40.2685, 0.29", "158.288, 103.961, -40.1459, 0.29", "157.181, 105.199, -39.855, 0.22", "156.847, 105.578, -39.7906, 0.66", "156.447, 106.055, -39.7395, 0.66", "155.796, 106.945, -39.7434, 0.37", "155.333, 107.841, -39.7901, 0.29", "155.037, 108.738, -39.9057, 0.22", "154.867, 109.554, -39.9964, 0.22", "154.702, 110.835, -40.0472, 0.22", "154.68, 111.422, -40.0379, 0.29", "154.714, 112.314, -39.9718, 0.29", "154.828, 113.66, -39.8198, 0.29", "155.075, 115.41, -39.6054, 0.29", "155.258, 116.502, -39.4512, 0.29", "155.451, 117.385, -39.3114, 0.29", "155.726, 118.544, -39.1038, 0.29", "156.203, 120.303, -38.75, 0.29", "156.645, 121.659, -38.4716, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-14.8279, -225.377, 10.0709, 0.29", "-14.944, -235.154, 8.10036, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-14.8279, -225.377, 10.0709, 0.29", "-4.78641, -222.454, 12.4757, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-18.1341, -137.028, -0.584662, 0.37", "-18.8315, -138.79, -1.04684, 0.37", "-19.1646, -139.631, -1.26764, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-18.1341, -137.028, -0.584662, 0.29", "-19.7073, -136.944, -2.6024, 0.29", "-20.1782, -136.919, -3.17684, 0.22", "-20.8239, -136.942, -3.90391, 0.22", "-21.22, -136.995, -4.30953, 1.47", "-21.5137, -137.034, -4.61029, 1.69", "-21.7943, -137.071, -4.89765, 1.69", "-22.6736, -137.146, -5.49128, 0.96", "-23.2795, -137.272, -5.96315, 0.29", "-23.7754, -137.477, -6.40295, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "36.7485, -189.566, 16.138, 0.29", "36.5958, -190.175, 15.205, 0.29", "36.4626, -190.706, 14.3913, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "36.7485, -189.566, 16.138, 0.29", "37.1923, -187.241, 15.1823, 0.29", "37.751, -185.751, 13.9742, 0.29", "38.248, -185.058, 12.8587, 0.29", "38.7302, -184.386, 11.7763, 0.52", "40.0942, -182.484, 8.71483, 0.44", "40.5518, -181.846, 7.68758, 0.29", "41.3459, -181.888, 5.86155, 0.29", "41.6347, -182.047, 5.19056, 0.29", "44.6911, -175.503, -4.23479, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.97678, -207.053, -23.1174, 0.22", "-9.92852, -207.927, -22.9897, 0.22", "-9.83139, -208.929, -22.7994, 0.22", "-9.67074, -210.23, -22.561, 0.22", "-9.52579, -211.297, -22.3712, 0.22", "-9.32033, -212.67, -22.1473, 0.22", "-9.15733, -213.759, -21.9697, 0.22", "-8.96817, -215.03, -21.7776, 0.22", "-8.82321, -215.834, -21.6727, 0.37", "-8.75651, -216.11, -21.6389, 0.37", "-8.53649, -216.88, -21.5377, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.97678, -207.053, -23.1174, 1.55", "-10.6867, -207.421, -23.3532, 1.55", "-11.1009, -207.691, -23.5044, 1.55", "-11.9223, -208.25, -23.8023, 0.29", "-13.1297, -209.067, -24.2077, 0.44", "-13.4301, -209.249, -24.333, 0.44", "-14.6745, -209.878, -24.9291, 0.29", "-15.4484, -210.214, -25.3346, 0.29", "-16.218, -210.498, -25.7344, 0.29", "-17.0754, -210.746, -26.1557, 0.29", "-18.7936, -211.068, -26.8928, 0.29", "-20.3209, -211.189, -27.4897, 0.29", "-21.289, -211.149, -27.8334, 0.22", "-22.2656, -211.04, -28.1468, 0.22", "-23.0319, -210.929, -28.3682, 0.22", "-23.8779, -210.787, -28.5719, 0.22", "-24.9527, -210.613, -28.7063, 0.22", "-25.7608, -210.44, -28.7767, 0.22", "-26.3179, -210.27, -28.8431, 0.52", "-26.8063, -210.079, -28.9212, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "113.975, -11.9429, -175.835, 0.81", "115.708, -11.872, -177.845, 0.81", "117.053, -11.9092, -179.313, 0.88", "118.106, -12.0096, -180.5, 0.37", "118.413, -12.0381, -180.84, 0.37", "119.082, -12.1004, -181.583, 0.66", "119.518, -12.141, -182.067, 0.74", "119.656, -12.1547, -182.262, 0.74", "120.51, -12.3383, -183.135, 0.37", "120.933, -12.4761, -183.57, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "113.975, -11.9429, -175.835, 0.44", "114.531, -11.2494, -177.177, 0.44", "114.924, -10.7597, -178.124, 0.44", "115.141, -10.4891, -178.648, 0.44", "115.568, -9.95736, -179.676, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "142.503, 69.9078, -58.0434, 0.96", "141.807, 69.5965, -61.5473, 0.96", "140.884, 69.2272, -65.0574, 0.59", "140.655, 69.145, -65.8976, 0.59", "140.455, 69.082, -66.6991, 0.37", "140.048, 68.9939, -68.5637, 0.29", "139.802, 68.9671, -69.769, 0.29", "139.628, 69.0245, -70.5515, 0.66", "139.374, 69.3235, -72.0154, 0.22", "139.278, 69.503, -72.9063, 0.22", "139.166, 69.7092, -74.0471, 0.88", "139.085, 69.8345, -74.7408, 0.88", "138.768, 70.1498, -76.6321, 0.37", "138.571, 70.228, -77.516, 0.96", "138.345, 70.2352, -78.3953, 1.11", "137.926, 70.1721, -80.0744, 0.44", "137.701, 70.1201, -81.1019, 0.37", "137.551, 70.0852, -81.9161, 0.52", "136.975, 69.9837, -85.3947, 0.37", "136.796, 69.9819, -87.047, 0.96", "136.704, 70.0387, -88.3304, 0.96", "136.638, 70.1199, -89.6347, 0.52", "136.604, 70.1505, -90.6102, 1.33", "136.561, 70.1511, -91.7894, 1.33", "136.257, 70.1045, -96.6285, 0.52", "136.215, 70.0942, -97.1737, 0.52", "136.106, 70.0537, -98.3411, 0.52", "135.562, 69.7733, -103.272, 0.44", "135.252, 69.6366, -105.512, 0.59", "135.029, 69.587, -106.841, 0.59", "134.745, 69.6034, -108.094, 0.88", "134.631, 69.6384, -108.52, 1.25", "134.371, 69.7972, -109.248, 1.47", "133.622, 70.4405, -110.644, 0.29", "132.903, 71.1327, -111.851, 0.29", "132.605, 71.4259, -112.324, 0.29", "132.076, 71.9609, -113.107, 0.29", "131.744, 72.3258, -113.611, 0.29", "130.957, 73.2565, -114.819, 0.29", "130.646, 73.6158, -115.294, 0.29", "130.207, 74.0192, -115.905, 0.96", "129.924, 74.291, -116.342, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "142.503, 69.9078, -58.0434, 0.15", "142.973, 71.0926, -58.1632, 0.15", "143.231, 71.7418, -58.2288, 0.15", "143.438, 72.2635, -58.2815, 0.81", "143.618, 72.7163, -58.3273, 1.03", "143.855, 73.3132, -58.3877, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-19.1646, -139.631, -1.26764, 0.52", "-19.5203, -140.332, -1.64211, 0.52", "-19.9968, -141.47, -2.14327, 0.52", "-20.5621, -142.928, -2.61215, 0.37", "-20.8201, -143.601, -2.81438, 0.52", "-21.1665, -144.506, -3.07084, 0.44", "-21.5677, -145.512, -3.3543, 0.37", "-21.9762, -146.535, -3.59195, 0.29", "-22.3951, -147.62, -3.76905, 0.29", "-22.8963, -149.033, -3.96914, 1.03", "-23.0423, -149.43, -4.02638, 1.18", "-23.5052, -150.56, -4.19977, 0.88", "-23.8439, -151.368, -4.34164, 0.44", "-24.2395, -152.416, -4.57173, 0.37", "-24.4061, -153.025, -4.75125, 0.59", "-24.4922, -153.592, -4.94598, 0.44", "-24.5312, -154.736, -5.41383, 0.44", "-24.4752, -155.542, -5.78265, 0.44", "-24.3301, -156.774, -6.36615, 0.52", "-24.198, -157.92, -6.89307, 0.66", "-24.1116, -158.876, -7.23759, 0.88", "-24.0814, -159.551, -7.3808, 0.88", "-24.1128, -160.599, -7.39161, 0.52", "-24.2793, -161.524, -7.19162, 0.29", "-24.6313, -162.647, -6.73821, 0.29", "-25.1754, -163.932, -6.15941, 0.29", "-25.615, -164.78, -5.80166, 0.96", "-25.9269, -165.343, -5.63702, 1.18", "-26.2516, -165.96, -5.51941, 1.18", "-26.7689, -167.108, -5.47709, 0.59", "-27.1537, -168.305, -5.55236, 0.52", "-27.4234, -169.465, -5.67532, 0.52", "-27.7197, -170.958, -5.89315, 0.66", "-27.8809, -171.946, -6.04483, 0.66", "-28.0031, -173.009, -6.20832, 0.81", "-28.0418, -174.549, -6.39304, 0.81", "-27.9297, -175.663, -6.38348, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-19.1646, -139.631, -1.26764, 0.37", "-19.6612, -139.54, -0.287795, 0.37", "-20.3687, -139.483, 0.961838, 0.37", "-20.7285, -139.458, 1.53745, 0.37", "-21.5722, -139.385, 2.77052, 0.29", "-22.0961, -139.32, 3.4838, 0.29", "-22.7171, -139.242, 4.32944, 0.29", "-23.3114, -139.191, 5.14964, 0.37", "-23.6408, -139.188, 5.52145, 0.37", "-23.9973, -139.201, 5.85272, 0.29", "-24.4417, -139.193, 6.15015, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "36.4626, -190.706, 14.3913, 0.22", "35.8589, -191.487, 14.7338, 0.22", "34.9891, -192.611, 15.2273, 0.22", "34.4946, -193.25, 15.5079, 0.29", "34.2251, -193.599, 15.6608, 0.29", "33.5268, -194.501, 16.057, 0.22", "33.0705, -195.091, 16.3159, 0.22", "29.0104, -202.769, 18.1111, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "36.4626, -190.706, 14.3913, 0.37", "36.4894, -191.527, 14.8216, 0.37", "36.4022, -192.276, 15.124, 0.96", "36.1791, -193.214, 15.4039, 0.59", "35.9545, -193.934, 15.5412, 0.59", "35.7163, -194.697, 15.6867, 0.22", "35.4895, -195.424, 15.8253, 0.22", "35.1477, -196.204, 15.9191, 0.22", "34.7826, -196.868, 15.9098, 0.22", "34.3066, -197.555, 15.8159, 0.22", "33.466, -204.291, 17.5559, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "115.568, -9.95736, -179.676, 0.37", "115.148, -9.27999, -186.103, 0.37", "115.072, -9.13382, -187.189, 0.66", "114.997, -8.97722, -188.029, 0.66", "114.958, -8.88637, -188.428, 0.96", "114.866, -8.59272, -189.435, 1.11", "114.783, -8.18281, -190.594, 1.11", "114.841, -7.34877, -191.928, 0.81", "114.943, -6.62497, -192.866, 1.4", "114.995, -6.36755, -193.141, 1.4", "115.287, -5.3369, -194.02, 0.37", "115.572, -4.5926, -194.486, 0.37", "116.012, -3.70468, -194.876, 0.37", "116.416, -2.99752, -195.078, 0.66", "116.752, -2.41578, -195.192, 0.66", "117.148, -1.56313, -195.324, 0.29", "117.377, -0.884061, -195.394, 0.52", "117.496, -0.377362, -195.439, 0.52", "117.649, 0.488123, -195.545, 0.29", "117.8, 1.38902, -195.697, 1.03", "118.032, 2.73917, -196.016, 0.66", "118.184, 3.59842, -196.257, 0.44", "118.242, 3.90448, -196.348, 0.66", "118.42, 4.85035, -196.646, 0.37", "118.526, 5.32388, -196.79, 0.52", "118.779, 6.22751, -197.034, 0.37", "119.002, 6.83485, -197.156, 0.37", "119.249, 7.47922, -197.282, 0.37", "119.488, 8.21121, -197.403, 0.37", "119.682, 8.92352, -197.491, 0.96", "119.764, 9.22281, -197.524, 0.96", "120.136, 10.4102, -197.646, 0.29", "120.455, 11.3696, -197.76, 0.29", "120.767, 12.2581, -197.883, 0.29", "121.031, 13.0018, -197.996, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "115.568, -9.95736, -179.676, 0.52", "114.988, -5.23563, -181.637, 0.52", "114.942, -4.84502, -181.779, 0.52", "114.717, -3.00231, -182.371, 0.37", "114.654, -2.48656, -182.536, 0.29", "114.463, -0.9263, -183.037, 0.29", "114.302, 0.400131, -183.463, 0.29", "114.257, 1.68149, -183.524, 0.29", "114.228, 2.23615, -183.561, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "129.924, 74.291, -116.342, 0.29", "129.293, 74.9237, -118.975, 0.29", "129.146, 74.9278, -119.778, 0.29", "128.973, 74.8291, -120.903, 0.29", "128.681, 74.6465, -122.936, 0.29", "128.564, 74.6038, -123.707, 0.44", "128.404, 74.5458, -124.755, 0.44", "127.897, 74.2238, -127.819, 0.29", "127.686, 74.0061, -129.283, 0.29", "127.593, 73.8518, -130.147, 0.29", "127.463, 73.6111, -131.466, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "129.924, 74.291, -116.342, 0.22", "128.872, 73.589, -115.729, 0.22", "128.01, 73.0909, -115.224, 0.22", "126.943, 72.5602, -114.57, 1.4", "125.747, 71.9649, -113.836, 0.22", "124.413, 71.3007, -113.017, 1.84", "123.244, 70.7189, -112.3, 0.22", "122.244, 70.2982, -111.611, 0.22", "121.315, 69.96, -110.937, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "143.855, 73.3132, -58.3877, 0.74", "143.722, 73.728, -58.3775, 0.74", "143.481, 74.3851, -58.3486, 0.22", "143.306, 74.7735, -58.335, 0.22", "142.911, 75.5239, -58.3043, 0.22", "142.537, 76.1855, -58.2394, 1.33", "142.352, 76.5138, -58.188, 1.33", "141.959, 77.1751, -58.0314, 0.22", "141.66, 77.6352, -57.8893, 0.22", "141.457, 77.9183, -57.7908, 0.22", "140.989, 78.5207, -57.5942, 0.22", "140.653, 78.9759, -57.4123, 0.22", "140.467, 79.2873, -57.2875, 0.37", "140.318, 79.6219, -57.1587, 0.37", "140.201, 80.0215, -57.0042, 0.37", "140.14, 80.3367, -56.8995, 0.15", "139.967, 81.2101, -56.6742, 0.22", "139.819, 81.9299, -56.5175, 0.22", "139.706, 82.4339, -56.4023, 0.22", "139.454, 83.3355, -56.2152, 0.22", "139.232, 83.9516, -56.0848, 0.22", "138.908, 84.7157, -55.9118, 0.22", "138.775, 84.9898, -55.8494, 0.74", "138.177, 86.0848, -55.5759, 0.29", "137.797, 86.7291, -55.4192, 0.29", "137.42, 87.3574, -55.2784, 0.29", "137.155, 87.8194, -55.1493, 0.29", "136.87, 88.3893, -54.9408, 0.52", "136.624, 88.9095, -54.7222, 0.37", "136.324, 89.5978, -54.4134, 0.29", "136.254, 89.7675, -54.332, 0.37", "135.981, 90.43, -54.0137, 0.37", "135.598, 91.3041, -53.5831, 0.37", "135.288, 91.9711, -53.2367, 0.22", "135.122, 92.3366, -53.0329, 0.22", "134.942, 92.7284, -52.8106, 0.74", "134.837, 92.9455, -52.6956, 0.88", "134.488, 93.628, -52.3994, 0.59", "134.043, 94.4154, -52.1515, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "143.855, 73.3132, -58.3877, 0.29", "145.058, 73.6537, -58.9527, 0.29", "146.155, 73.803, -59.6302, 0.29", "147.248, 73.8711, -60.3761, 1.03", "147.765, 73.8859, -60.7478, 1.03", "149.05, 73.87, -61.6282, 0.44", "150.031, 73.8384, -62.2539, 0.29", "151.339, 73.6949, -63.0691, 0.96", "151.781, 73.629, -63.3271, 0.96", "153.085, 73.4528, -63.9977, 0.22", "154.088, 73.3642, -64.4586, 0.22", "155.131, 73.3464, -64.8351, 0.22", "156.265, 73.4037, -65.1916, 0.22", "157.578, 73.5674, -65.5642, 0.22", "158.397, 73.721, -65.7904, 0.52", "159.067, 73.921, -65.9658, 0.29", "159.902, 74.3069, -66.1739, 1.03", "160.439, 74.6701, -66.2527, 1.03", "160.897, 75.1279, -66.2697, 0.88", "161.342, 75.6598, -66.2284, 0.66", "161.879, 76.3936, -66.1218, 0.37", "162.402, 77.2177, -65.9463, 0.59", "162.989, 78.2833, -65.6641, 0.29", "163.486, 79.2404, -65.3483, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-27.9297, -175.663, -6.38348, 0.74", "-28.0868, -176.216, -6.15156, 0.74", "-28.3856, -177.037, -5.76202, 0.66", "-28.6524, -177.58, -5.4672, 0.52", "-29.0667, -178.241, -5.07456, 0.37", "-29.3125, -178.604, -4.86115, 0.74", "-29.5118, -178.912, -4.67572, 1.03", "-29.7863, -179.321, -4.42015, 0.74", "-30.178, -179.912, -4.05857, 0.52", "-30.5563, -180.567, -3.7002, 0.52", "-30.7962, -181.089, -3.4709, 0.66", "-31.1045, -181.992, -3.16947, 0.88", "-31.1869, -182.312, -3.09055, 1.18", "-31.2834, -182.825, -2.99903, 0.81", "-31.3782, -183.55, -2.91591, 0.52", "-31.4581, -184.162, -2.88542, 0.52", "-31.5821, -184.887, -2.88067, 0.52", "-31.6612, -185.232, -2.89613, 0.52", "-31.8337, -185.91, -2.92942, 0.52", "-32.0248, -186.581, -2.9593, 0.52", "-32.2078, -187.145, -2.99145, 1.03", "-32.3546, -187.556, -3.01271, 1.25", "-32.5741, -188.068, -3.03173, 0.66", "-32.8334, -188.567, -3.04429, 0.29", "-33.22, -189.06, -3.02875, 0.29", "-33.4867, -189.004, -2.9535, 0.52", "-34.1635, -188.589, -2.71942, 0.29", "-34.6902, -188.195, -2.53263, 0.29", "-35.2429, -187.703, -2.3287, 0.22", "-35.3466, -187.597, -2.29043, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-27.9297, -175.663, -6.38348, 0.22", "-28.5154, -177.558, -6.96049, 0.22", "-28.7489, -178.315, -7.20124, 0.22", "-29.1497, -179.823, -7.6838, 0.22", "-29.5483, -181.534, -8.21622, 0.22", "-29.8714, -182.921, -8.64767, 0.22", "-30.4985, -185.612, -9.48518, 0.22", "-30.7778, -186.772, -9.79864, 0.22", "-31.325, -189.055, -10.4622, 0.22", "-31.5914, -190.32, -10.8832, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "121.031, 13.0018, -197.996, 0.29", "121.878, 12.378, -198.538, 0.29", "122.366, 12.0193, -198.85, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "121.031, 13.0018, -197.996, 0.37", "121.361, 13.7214, -197.998, 0.37", "121.75, 14.5687, -198.0, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_ChC_7a1b7e3c70_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 11.1147, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( -0.0717928, 12.7905, -3.57917, 0.37 ) }
    dend_78 { pt3dadd( -0.149292, 13.2457, -3.66645, 0.74 ) }
    dend_78 { pt3dadd( -0.099351, 13.6045, -3.80037, 0.74 ) }
    dend_78 { pt3dadd( 0.32099, 14.7062, -4.30975, 0.37 ) }
    dend_78 { pt3dadd( 0.734486, 15.587, -4.68841, 0.66 ) }
    dend_78 { pt3dadd( 1.21778, 16.4961, -5.09289, 1.33 ) }
    dend_78 { pt3dadd( 1.67301, 17.174, -5.40837, 1.33 ) }
    dend_78 { pt3dadd( 2.43912, 18.2936, -5.93839, 0.74 ) }
    dend_78 { pt3dadd( 3.01138, 19.1887, -6.33753, 0.74 ) }
    dend_78 { pt3dadd( 3.88343, 20.6684, -6.99611, 1.25 ) }
    dend_78 { pt3dadd( 4.43298, 21.858, -7.50305, 2.06 ) }
    dend_78 { pt3dadd( 4.71176, 22.7462, -7.84165, 2.06 ) }
    dend_78 { pt3dadd( 4.9038, 23.949, -8.26007, 1.4 ) }
    dend_78 { pt3dadd( 4.8309, 25.3382, -8.72605, 0.74 ) }
    dend_78 { pt3dadd( 4.50954, 26.2493, -9.03449, 1.11 ) }
    dend_78 { pt3dadd( 3.95038, 26.9475, -9.27325, 1.11 ) }
    dend_78 { pt3dadd( 3.14419, 27.5442, -9.4623, 0.81 ) }
    dend_78 { pt3dadd( 2.08242, 28.0482, -9.72286, 0.81 ) }
    dend_78 { pt3dadd( 0.784995, 28.4578, -10.0655, 0.81 ) }
    dend_78 { pt3dadd( -0.479968, 28.7581, -10.4359, 0.96 ) }
    dend_78 { pt3dadd( -1.52429, 29.0048, -10.7539, 1.11 ) }
    dend_78 { pt3dadd( -2.46246, 29.2549, -11.0931, 1.11 ) }
    dend_78 { pt3dadd( -4.50047, 29.9318, -11.9832, 1.11 ) }
    dend_78 { pt3dadd( -5.10262, 30.21, -12.3106, 1.11 ) }
    dend_78 { pt3dadd( -6.07396, 30.9498, -12.9831, 0.59 ) }
    dend_78 { pt3dadd( -6.64795, 31.7432, -13.4692, 0.96 ) }
    dend_78 { pt3dadd( -6.98744, 32.4758, -13.7908, 1.25 ) }
    dend_78 { pt3dadd( -7.22705, 33.1364, -14.0112, 1.55 ) }
    dend_78 { pt3dadd( -7.3724, 33.5525, -14.1061, 1.55 ) }
    dend_78 { pt3dadd( -7.89147, 34.8303, -14.3704, 0.74 ) }
    dend_78 { pt3dadd( -8.70699, 36.3757, -14.6852, 0.96 ) }
    dend_78 { pt3dadd( -9.38237, 37.3125, -14.9124, 0.66 ) }
    dend_78 { pt3dadd( -9.94289, 37.902, -15.0895, 0.66 ) }
    dend_78 { pt3dadd( -10.843, 38.6343, -15.3702, 0.81 ) }
    dend_78 { pt3dadd( -11.5901, 39.1156, -15.6108, 0.96 ) }
    dend_78 { pt3dadd( -12.5731, 39.6323, -15.9529, 1.47 ) }
    dend_78 { pt3dadd( -13.4788, 40.0784, -16.2857, 1.62 ) }
    dend_78 { pt3dadd( -14.334, 40.5647, -16.6091, 1.47 ) }
    dend_78 { pt3dadd( -15.1301, 41.1102, -16.9261, 1.11 ) }
    dend_78 { pt3dadd( -16.0294, 41.8603, -17.3102, 0.81 ) }
    dend_78 { pt3dadd( -17.0882, 42.9771, -17.8303, 0.66 ) }
    dend_78 { pt3dadd( -17.6572, 43.7477, -18.1462, 0.81 ) }
    dend_78 { pt3dadd( -18.3889, 45.0482, -18.6188, 1.03 ) }
    dend_78 { pt3dadd( -18.6717, 45.7259, -18.8576, 1.25 ) }
    dend_78 { pt3dadd( -18.8731, 46.3564, -19.0902, 1.25 ) }
    dend_78 { pt3dadd( -19.2371, 47.7175, -19.6418, 0.96 ) }
    dend_78 { pt3dadd( -19.5083, 48.768, -20.1285, 0.81 ) }
    dend_78 { pt3dadd( -19.8865, 50.064, -20.8105, 0.59 ) }
    dend_78 { pt3dadd( -20.1982, 50.9645, -21.3169, 0.59 ) }
    dend_78 { pt3dadd( -20.627, 52.0315, -21.9241, 0.59 ) }
    dend_78 { pt3dadd( -21.0981, 53.0789, -22.4994, 0.59 ) }
    dend_78 { pt3dadd( -21.5546, 54.0597, -22.9458, 0.44 ) }
    dend_78 { pt3dadd( -21.987, 55.0836, -23.2879, 0.66 ) }
    dend_78 { pt3dadd( -22.3223, 56.1775, -23.4754, 0.74 ) }
    dend_78 { pt3dadd( -22.4309, 56.864, -23.5085, 0.96 ) }
    dend_78 { pt3dadd( -22.4411, 57.6322, -23.4837, 0.96 ) }
    dend_78 { pt3dadd( -22.2733, 59.3372, -23.4507, 0.52 ) }
    dend_78 { pt3dadd( -22.0414, 60.7198, -23.4699, 0.59 ) }
    dend_78 { pt3dadd( -21.7342, 62.2878, -23.5529, 0.59 ) }
    dend_78 { pt3dadd( -21.5759, 63.1639, -23.639, 0.96 ) }
    dend_78 { pt3dadd( -21.4544, 64.1748, -23.7892, 0.96 ) }
    dend_78 { pt3dadd( -21.4163, 65.9697, -24.1681, 0.66 ) }
    dend_78 { pt3dadd( -21.6092, 67.2035, -24.5582, 0.66 ) }
    dend_78 { pt3dadd( -22.0345, 68.203, -24.9642, 0.96 ) }
    dend_78 { pt3dadd( -22.5265, 68.809, -25.2339, 1.03 ) }
    dend_78 { pt3dadd( -23.1544, 69.2984, -25.49, 1.03 ) }
    dend_78 { pt3dadd( -23.9891, 69.7435, -25.7979, 1.03 ) }
    dend_78 { pt3dadd( -25.1141, 70.1617, -26.2443, 0.74 ) }
    dend_78 { pt3dadd( -25.9994, 70.4191, -26.6845, 0.74 ) }
    dend_78 { pt3dadd( -26.5901, 70.5575, -27.0428, 0.52 ) }
    dend_78 { pt3dadd( -27.8968, 70.8057, -28.0078, 0.52 ) }
    dend_78 { pt3dadd( -29.0027, 70.9719, -28.9232, 0.52 ) }
    dend_78 { pt3dadd( -30.1303, 71.1037, -29.9004, 1.11 ) }
    dend_78 { pt3dadd( -30.7435, 71.1603, -30.4145, 1.4 ) }
    dend_78 { pt3dadd( -31.4399, 71.2046, -30.9371, 1.4 ) }
    dend_78 { pt3dadd( -32.6301, 71.2358, -31.6793, 0.81 ) }
    dend_78 { pt3dadd( -33.364, 71.2514, -31.9794, 0.59 ) }
    dend_78 { pt3dadd( -34.4691, 71.3053, -32.2154, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -35.5793, 71.4106, -32.2795, 0.44 ) }
    dend_78 { pt3dadd( -36.705, 71.5873, -32.2465, 0.74 ) }
    dend_78 { pt3dadd( -37.7808, 71.882, -32.1624, 1.33 ) }
    dend_78 { pt3dadd( -39.0892, 72.4625, -32.0863, 0.88 ) }
    dend_78 { pt3dadd( -39.6691, 72.8507, -32.1675, 0.59 ) }
    dend_78 { pt3dadd( -40.0284, 73.1911, -32.3145, 0.59 ) }
    dend_78 { pt3dadd( -40.5339, 73.7935, -32.6841, 0.74 ) }
    dend_78 { pt3dadd( -41.1593, 74.6383, -33.3309, 0.96 ) }
    dend_78 { pt3dadd( -41.9667, 75.738, -34.3206, 0.59 ) }
    dend_78 { pt3dadd( -42.8022, 76.8116, -35.4211, 0.59 ) }
    dend_78 { pt3dadd( -43.2369, 77.3509, -35.9704, 0.81 ) }
    dend_78 { pt3dadd( -43.7859, 77.9678, -36.5726, 0.96 ) }
    dend_78 { pt3dadd( -44.3122, 78.4683, -37.0233, 1.03 ) }
    dend_78 { pt3dadd( -45.2034, 79.2293, -37.5944, 0.66 ) }
    dend_78 { pt3dadd( -45.4765, 79.4705, -37.7361, 0.66 ) }
    dend_78 { pt3dadd( -46.2097, 80.2292, -38.0892, 0.81 ) }
    dend_78 { pt3dadd( -46.8566, 81.0507, -38.4701, 0.81 ) }
    dend_78 { pt3dadd( -47.3484, 81.8985, -38.8444, 0.66 ) }
    dend_78 { pt3dadd( -47.7492, 82.8014, -39.2265, 0.66 ) }
    dend_78 { pt3dadd( -48.2481, 84.2057, -39.8101, 0.52 ) }
    dend_78 { pt3dadd( -48.5334, 85.0825, -40.1862, 0.81 ) }
    dend_78 { pt3dadd( -48.7434, 85.7363, -40.4787, 0.74 ) }
    dend_78 { pt3dadd( -49.2511, 87.1391, -41.0991, 0.59 ) }
    dend_78 { pt3dadd( -49.5608, 87.8248, -41.377, 0.74 ) }
    dend_78 { pt3dadd( -49.9748, 88.5034, -41.6175, 0.96 ) }
    dend_78 { pt3dadd( -50.6141, 89.3185, -41.8079, 0.96 ) }
    dend_78 { pt3dadd( -51.1736, 89.948, -41.8997, 0.74 ) }
    dend_78 { pt3dadd( -51.948, 90.7657, -41.9631, 1.03 ) }
    dend_78 { pt3dadd( -52.507, 91.3384, -41.9131, 1.25 ) }
    dend_78 { pt3dadd( -52.8991, 91.7719, -41.8329, 0.81 ) }
    dend_78 { pt3dadd( -53.731, 92.7955, -41.5749, 0.59 ) }
    dend_78 { pt3dadd( -54.2379, 93.4902, -41.3615, 0.66 ) }
    dend_78 { pt3dadd( -54.6586, 94.1198, -41.1477, 0.66 ) }
    dend_78 { pt3dadd( -55.7496, 95.8627, -40.5112, 0.88 ) }
    dend_78 { pt3dadd( -56.3027, 96.7555, -40.1597, 1.11 ) }
    dend_78 { pt3dadd( -56.6829, 97.3659, -39.8951, 1.03 ) }
    dend_78 { pt3dadd( -57.1455, 98.1029, -39.5659, 1.25 ) }
    dend_78 { pt3dadd( -57.3182, 98.3769, -39.4324, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 9.92519, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 5.03639, 10.7771, -4.93378, 1.11 ) }
    dend_53 { pt3dadd( 5.69762, 11.4573, -5.37503, 1.11 ) }
    dend_53 { pt3dadd( 6.75257, 12.595, -6.0783, 1.11 ) }
    dend_53 { pt3dadd( 7.47616, 13.4145, -6.60774, 0.96 ) }
    dend_53 { pt3dadd( 8.67467, 14.6313, -7.39007, 1.55 ) }
    dend_53 { pt3dadd( 9.71707, 15.6041, -8.01971, 1.62 ) }
    dend_53 { pt3dadd( 10.331, 16.1151, -8.36348, 1.62 ) }
    dend_53 { pt3dadd( 11.2796, 16.8241, -8.7811, 1.25 ) }
    dend_53 { pt3dadd( 12.8701, 17.89, -9.26934, 0.96 ) }
    dend_53 { pt3dadd( 15.2998, 19.3545, -9.71238, 0.88 ) }
    dend_53 { pt3dadd( 16.4403, 19.9497, -9.7816, 1.55 ) }
    dend_53 { pt3dadd( 17.6856, 20.51, -9.75154, 1.84 ) }
    dend_53 { pt3dadd( 19.5534, 21.2626, -9.60523, 1.11 ) }
    dend_53 { pt3dadd( 20.5338, 21.6406, -9.47686, 1.03 ) }
    dend_53 { pt3dadd( 21.631, 22.1072, -9.26318, 1.25 ) }
    dend_53 { pt3dadd( 22.6923, 22.6925, -9.04075, 0.88 ) }
    dend_53 { pt3dadd( 23.671, 23.3621, -8.83647, 0.88 ) }
    dend_53 { pt3dadd( 24.5875, 24.0935, -8.64781, 0.88 ) }
    dend_53 { pt3dadd( 25.6636, 25.0036, -8.4189, 0.88 ) }
    dend_53 { pt3dadd( 26.5838, 25.8323, -8.12253, 0.96 ) }
    dend_53 { pt3dadd( 27.5359, 26.7604, -7.76674, 0.96 ) }
    dend_53 { pt3dadd( 28.4048, 27.7001, -7.37932, 0.81 ) }
    dend_53 { pt3dadd( 29.6834, 29.1679, -6.69662, 1.11 ) }
    dend_53 { pt3dadd( 30.5219, 30.0981, -6.16595, 1.4 ) }
    dend_53 { pt3dadd( 31.488, 31.0313, -5.44817, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.55044, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.32842, 8.85708, 2.5768, 1.62 ) }
    dend_50 { pt3dadd( 4.95948, 9.22429, 3.14512, 1.25 ) }
    dend_50 { pt3dadd( 6.10752, 9.73683, 4.29771, 1.25 ) }
    dend_50 { pt3dadd( 6.71462, 9.96992, 4.94811, 1.25 ) }
    dend_50 { pt3dadd( 7.34807, 10.1354, 5.70791, 1.92 ) }
    dend_50 { pt3dadd( 7.61612, 10.1808, 6.04927, 2.5 ) }
    dend_50 { pt3dadd( 8.19903, 10.1963, 6.85612, 2.5 ) }
    dend_50 { pt3dadd( 9.40473, 10.0511, 8.65042, 1.77 ) }
    dend_50 { pt3dadd( 10.241, 9.79619, 9.89221, 0.96 ) }
    dend_50 { pt3dadd( 11.421, 9.31111, 11.6401, 0.88 ) }
    dend_50 { pt3dadd( 11.7583, 9.15392, 12.1477, 0.88 ) }
    dend_50 { pt3dadd( 12.0244, 9.03477, 12.5361, 1.4 ) }
    dend_50 { pt3dadd( 12.2875, 8.93686, 12.8756, 1.4 ) }
    dend_50 { pt3dadd( 13.247, 8.72625, 13.8474, 0.66 ) }
    dend_50 { pt3dadd( 13.654, 8.74977, 14.1721, 0.66 ) }
    dend_50 { pt3dadd( 14.6204, 9.12554, 14.7442, 0.88 ) }
    dend_50 { pt3dadd( 15.2277, 9.45909, 15.0544, 0.88 ) }
    dend_50 { pt3dadd( 15.9903, 9.95707, 15.3565, 0.74 ) }
    dend_50 { pt3dadd( 16.5587, 10.3787, 15.5268, 1.4 ) }
    dend_50 { pt3dadd( 17.213, 10.9057, 15.6459, 2.06 ) }
    dend_50 { pt3dadd( 17.8573, 11.4083, 15.696, 1.84 ) }
    dend_50 { pt3dadd( 18.6299, 11.9832, 15.652, 1.18 ) }
    dend_50 { pt3dadd( 19.4338, 12.538, 15.6277, 1.18 ) }
    dend_50 { pt3dadd( 19.7602, 12.7348, 15.6739, 1.03 ) }
    dend_50 { pt3dadd( 20.3059, 12.9989, 15.9005, 1.03 ) }
    dend_50 { pt3dadd( 20.6669, 13.1421, 16.2645, 0.59 ) }
    dend_50 { pt3dadd( 21.0021, 13.2937, 16.8014, 0.59 ) }
    dend_50 { pt3dadd( 21.659, 13.6445, 18.1392, 0.88 ) }
    dend_50 { pt3dadd( 22.4231, 14.1201, 19.899, 1.62 ) }
    dend_50 { pt3dadd( 22.7514, 14.3533, 20.6642, 1.62 ) }
    dend_50 { pt3dadd( 23.5154, 14.9411, 22.434, 0.88 ) }
    dend_50 { pt3dadd( 23.8712, 15.2142, 23.2053, 0.88 ) }
    dend_50 { pt3dadd( 24.1995, 15.4746, 23.8431, 1.47 ) }
    dend_50 { pt3dadd( 24.4301, 15.66, 24.2089, 1.47 ) }
    dend_50 { pt3dadd( 25.0235, 16.1004, 24.9221, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 25.3544, 16.3026, 25.2414, 0.59 ) }
    dend_50 { pt3dadd( 25.7083, 16.4664, 25.5203, 0.59 ) }
    dend_50 { pt3dadd( 26.5717, 16.8223, 26.2084, 1.25 ) }
    dend_50 { pt3dadd( 27.9296, 17.4008, 27.3407, 0.74 ) }
    dend_50 { pt3dadd( 28.355, 17.6235, 27.7375, 0.29 ) }
    dend_50 { pt3dadd( 28.7335, 17.8389, 28.1385, 0.29 ) }
    dend_50 { pt3dadd( 28.9502, 17.9625, 28.4001, 0.59 ) }
    dend_50 { pt3dadd( 29.5242, 18.3017, 29.1075, 1.11 ) }
    dend_50 { pt3dadd( 29.8142, 18.4521, 29.4545, 1.11 ) }
    dend_50 { pt3dadd( 30.4366, 18.988, 30.1997, 1.11 ) }
    dend_50 { pt3dadd( 30.7882, 19.4756, 30.792, 0.59 ) }
    dend_50 { pt3dadd( 30.7978, 18.0772, 30.8895, 0.59 ) }
    dend_50 { pt3dadd( 30.9183, 16.6354, 31.2521, 0.52 ) }
    dend_50 { pt3dadd( 31.0015, 15.6283, 31.5029, 0.59 ) }
    dend_50 { pt3dadd( 36.3523, 17.3001, 36.2724, 0.59 ) }
    dend_50 { pt3dadd( 41.964, 19.6131, 40.4198, 0.59 ) }
    dend_50 { pt3dadd( 46.6018, 22.9608, 45.0046, 0.59 ) }
    dend_50 { pt3dadd( 51.1965, 26.9855, 49.0255, 0.59 ) }
    dend_50 { pt3dadd( 56.5392, 31.3042, 51.5066, 0.59 ) }
    dend_50 { pt3dadd( 61.3524, 35.8495, 54.5755, 0.59 ) }
    dend_50 { pt3dadd( 66.4309, 39.5942, 58.2873, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.27869, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.27869, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.0733, 6.5493, 1.86107, 1.69 ) }
    dend_49 { pt3dadd( -4.70089, 6.81611, 2.21202, 1.4 ) }
    dend_49 { pt3dadd( -5.15848, 6.98249, 2.54695, 1.03 ) }
    dend_49 { pt3dadd( -5.79389, 7.22045, 3.06852, 0.88 ) }
    dend_49 { pt3dadd( -6.23559, 7.39945, 3.45606, 0.88 ) }
    dend_49 { pt3dadd( -6.80375, 7.60457, 4.01921, 0.59 ) }
    dend_49 { pt3dadd( -7.32887, 7.78334, 4.59088, 0.44 ) }
    dend_49 { pt3dadd( -8.30717, 8.10404, 5.72389, 0.37 ) }
    dend_49 { pt3dadd( -8.64662, 8.21526, 6.13083, 0.37 ) }
    dend_49 { pt3dadd( -9.20204, 8.40104, 6.81222, 0.37 ) }
    dend_49 { pt3dadd( -10.525, 8.86443, 8.50986, 1.03 ) }
    dend_49 { pt3dadd( -10.8277, 8.9831, 8.91199, 1.62 ) }
    dend_49 { pt3dadd( -17.9861, 9.55633, 13.1322, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.17031, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -5.47595, -2.22384, -14.5776, 0.74 ) }
    dend_44 { pt3dadd( -7.35587, -3.41412, -14.5675, 1.03 ) }
    dend_44 { pt3dadd( -9.00015, -4.43474, -14.5926, 1.25 ) }
    dend_44 { pt3dadd( -10.315, -5.263, -14.6271, 1.62 ) }
    dend_44 { pt3dadd( -11.3924, -5.93028, -14.661, 1.84 ) }
    dend_44 { pt3dadd( -12.8052, -6.75376, -14.6704, 1.84 ) }
    dend_44 { pt3dadd( -14.0567, -7.39724, -14.6136, 1.99 ) }
    dend_44 { pt3dadd( -15.3717, -7.97991, -14.4883, 2.21 ) }
    dend_44 { pt3dadd( -16.9081, -8.54507, -14.2661, 2.65 ) }
    dend_44 { pt3dadd( -17.998, -8.88018, -14.0915, 2.5 ) }
    dend_44 { pt3dadd( -19.8396, -9.37543, -13.8116, 1.77 ) }
    dend_44 { pt3dadd( -21.79, -9.87517, -13.5781, 1.33 ) }
    dend_44 { pt3dadd( -23.1161, -10.224, -13.5154, 1.18 ) }
    dend_44 { pt3dadd( -24.6883, -10.6537, -13.6153, 1.11 ) }
    dend_44 { pt3dadd( -25.8056, -10.9978, -13.931, 1.11 ) }
    dend_44 { pt3dadd( -26.9566, -11.4022, -14.6342, 1.11 ) }
    dend_44 { pt3dadd( -28.0563, -11.821, -15.7129, 1.4 ) }
    dend_44 { pt3dadd( -29.1509, -12.2148, -17.1075, 1.03 ) }
    dend_44 { pt3dadd( -30.0727, -12.5087, -18.4587, 0.88 ) }
    dend_44 { pt3dadd( -31.4444, -12.8457, -20.6724, 0.88 ) }
    dend_44 { pt3dadd( -32.9267, -13.0798, -23.2867, 1.47 ) }
    dend_44 { pt3dadd( -34.048, -13.1842, -25.3601, 1.77 ) }
    dend_44 { pt3dadd( -35.3032, -13.2048, -27.7722, 1.84 ) }
    dend_44 { pt3dadd( -35.7471, -13.1786, -28.6477, 2.06 ) }
    dend_44 { pt3dadd( -36.5512, -13.0793, -30.2763, 1.77 ) }
    dend_44 { pt3dadd( -37.7899, -12.8235, -32.7232, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -1.96006, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -1.96006, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.24298, -1.87476, 9.56467, 2.06 ) }
    dend_41 { pt3dadd( -6.90109, -1.84102, 9.88624, 2.06 ) }
    dend_41 { pt3dadd( -8.60873, -1.86635, 10.6803, 1.84 ) }
    dend_41 { pt3dadd( -9.55941, -1.95186, 11.1096, 1.84 ) }
    dend_41 { pt3dadd( -10.2867, -2.07066, 11.4345, 1.99 ) }
    dend_41 { pt3dadd( -11.5954, -2.39129, 12.0175, 1.55 ) }
    dend_41 { pt3dadd( -12.6602, -2.77225, 12.4799, 1.03 ) }
    dend_41 { pt3dadd( -13.5209, -3.18034, 12.8249, 0.88 ) }
    dend_41 { pt3dadd( -14.3566, -3.69121, 13.0673, 1.18 ) }
    dend_41 { pt3dadd( -15.032, -4.15666, 13.2148, 1.18 ) }
    dend_41 { pt3dadd( -15.5498, -4.54642, 13.3004, 1.47 ) }
    dend_41 { pt3dadd( -16.3181, -5.18337, 13.3674, 1.25 ) }
    dend_41 { pt3dadd( -17.0746, -5.83684, 13.4673, 1.03 ) }
    dend_41 { pt3dadd( -17.7568, -6.41906, 13.62, 1.62 ) }
    dend_41 { pt3dadd( -18.4402, -6.98895, 13.8739, 1.69 ) }
    dend_41 { pt3dadd( -18.967, -7.40217, 14.145, 1.33 ) }
    dend_41 { pt3dadd( -19.908, -8.08171, 14.7854, 1.03 ) }
    dend_41 { pt3dadd( -21.0672, -8.7825, 15.7937, 0.88 ) }
    dend_41 { pt3dadd( -21.8776, -9.15495, 16.6917, 1.11 ) }
    dend_41 { pt3dadd( -22.5798, -9.34076, 17.6138, 1.33 ) }
    dend_41 { pt3dadd( -23.0177, -9.35962, 18.2619, 1.33 ) }
    dend_41 { pt3dadd( -23.4493, -9.2503, 18.9314, 1.18 ) }
    dend_41 { pt3dadd( -23.963, -8.96196, 19.7052, 0.88 ) }
    dend_41 { pt3dadd( -24.6936, -8.42665, 20.6493, 1.18 ) }
    dend_41 { pt3dadd( -25.1492, -8.1042, 21.162, 1.33 ) }
    dend_41 { pt3dadd( -25.5507, -7.89305, 21.562, 1.33 ) }
    dend_41 { pt3dadd( -26.2431, -7.69621, 22.2105, 0.59 ) }
    dend_41 { pt3dadd( -27.1927, -7.74528, 23.0176, 0.52 ) }
    dend_41 { pt3dadd( -27.6745, -8.03086, 23.3698, 0.59 ) }
    dend_41 { pt3dadd( -28.3463, -8.9205, 23.9001, 0.59 ) }
    dend_41 { pt3dadd( -28.9932, -10.1439, 24.5451, 0.59 ) }
    dend_41 { pt3dadd( -29.3286, -10.8733, 24.9219, 1.03 ) }
    dend_41 { pt3dadd( -29.7126, -11.7841, 25.4355, 1.03 ) }
    dend_41 { pt3dadd( -30.0301, -12.5416, 25.9056, 1.03 ) }
    dend_41 { pt3dadd( -30.6286, -13.8073, 26.8646, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -31.1959, -14.6423, 27.7725, 0.66 ) }
    dend_41 { pt3dadd( -31.6739, -15.0276, 28.471, 0.66 ) }
    dend_41 { pt3dadd( -32.5161, -15.3465, 29.5777, 0.74 ) }
    dend_41 { pt3dadd( -33.1115, -15.4476, 30.3079, 0.81 ) }
    dend_41 { pt3dadd( -33.6654, -15.4851, 30.9619, 0.52 ) }
    dend_41 { pt3dadd( -34.6692, -15.4993, 32.0539, 0.52 ) }
    dend_41 { pt3dadd( -35.0992, -15.5298, 32.5263, 0.44 ) }
    dend_41 { pt3dadd( -35.7251, -15.7981, 33.3585, 0.37 ) }
    dend_41 { pt3dadd( -36.0261, -16.2136, 33.8465, 0.37 ) }
    dend_41 { pt3dadd( -36.3053, -16.844, 34.3453, 1.11 ) }
    dend_41 { pt3dadd( -36.5437, -17.4907, 34.7352, 1.4 ) }
    dend_41 { pt3dadd( -36.7732, -18.3425, 35.1553, 1.4 ) }
    dend_41 { pt3dadd( -37.0553, -19.6355, 35.7345, 0.81 ) }
    dend_41 { pt3dadd( -37.2453, -20.6092, 36.1223, 0.29 ) }
    dend_41 { pt3dadd( -37.4146, -21.2532, 36.3894, 0.29 ) }
    dend_41 { pt3dadd( -37.6147, -21.7702, 36.6178, 0.29 ) }
    dend_41 { pt3dadd( -43.1216, -25.3941, 42.7419, 0.29 ) }
    dend_41 { pt3dadd( -49.7858, -29.1086, 47.5081, 0.29 ) }
    dend_41 { pt3dadd( -55.8829, -32.8149, 52.9871, 0.29 ) }
    dend_41 { pt3dadd( -61.541, -35.3736, 59.5249, 0.29 ) }
    dend_41 { pt3dadd( -67.2127, -38.0459, 66.0029, 0.29 ) }
    dend_41 { pt3dadd( -73.738, -42.0142, 70.7461, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.61631, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.61631, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.17898, -6.76183, 6.99727, 1.77 ) }
    dend_32 { pt3dadd( -2.14936, -8.72575, 7.23641, 1.47 ) }
    dend_32 { pt3dadd( -2.13302, -10.7022, 7.4528, 1.25 ) }
    dend_32 { pt3dadd( -2.16092, -12.2121, 7.599, 1.62 ) }
    dend_32 { pt3dadd( -2.21667, -13.486, 7.70917, 1.92 ) }
    dend_32 { pt3dadd( -2.2931, -14.5972, 7.80669, 2.14 ) }
    dend_32 { pt3dadd( -2.43157, -15.9807, 7.92574, 2.14 ) }
    dend_32 { pt3dadd( -2.71706, -17.9012, 8.0911, 1.55 ) }
    dend_32 { pt3dadd( -3.08045, -19.7074, 8.2358, 1.33 ) }
    dend_32 { pt3dadd( -3.40955, -21.0759, 8.35764, 1.55 ) }
    dend_32 { pt3dadd( -3.65396, -21.9402, 8.4375, 1.92 ) }
    dend_32 { pt3dadd( -4.00126, -22.9886, 8.57121, 2.21 ) }
    dend_32 { pt3dadd( -4.26138, -23.6795, 8.67964, 2.5 ) }
    dend_32 { pt3dadd( -4.56553, -24.495, 8.83529, 2.5 ) }
    dend_32 { pt3dadd( -4.84511, -25.3945, 9.02119, 2.36 ) }
    dend_32 { pt3dadd( -5.14589, -26.6286, 9.28341, 1.69 ) }
    dend_32 { pt3dadd( -5.435, -28.2467, 9.61363, 1.25 ) }
    dend_32 { pt3dadd( -5.58205, -29.7588, 9.91131, 1.4 ) }
    dend_32 { pt3dadd( -5.58828, -31.1005, 10.1433, 1.62 ) }
    dend_32 { pt3dadd( -5.43708, -32.7381, 10.3888, 2.06 ) }
    dend_32 { pt3dadd( -5.25302, -33.7474, 10.5285, 2.36 ) }
    dend_32 { pt3dadd( -5.06684, -34.4017, 10.6072, 2.36 ) }
    dend_32 { pt3dadd( -4.60749, -35.6488, 10.7337, 2.14 ) }
    dend_32 { pt3dadd( -3.85952, -37.3988, 10.8965, 1.62 ) }
    dend_32 { pt3dadd( -3.19948, -38.8728, 11.0172, 1.25 ) }
    dend_32 { pt3dadd( -2.52248, -40.3934, 11.1578, 1.03 ) }
    dend_32 { pt3dadd( -1.79985, -42.1031, 11.3504, 1.03 ) }
    dend_32 { pt3dadd( -1.26157, -43.5349, 11.5477, 1.03 ) }
    dend_32 { pt3dadd( -0.675539, -45.3882, 11.8696, 1.03 ) }
    dend_32 { pt3dadd( -0.419998, -46.4919, 12.1041, 0.96 ) }
    dend_32 { pt3dadd( -0.34248, -47.3639, 12.3193, 0.96 ) }
    dend_32 { pt3dadd( -0.447687, -48.1412, 12.5342, 0.96 ) }
    dend_32 { pt3dadd( -0.931468, -49.1649, 12.892, 0.96 ) }
    dend_32 { pt3dadd( -1.40461, -49.7213, 13.1171, 0.88 ) }
    dend_32 { pt3dadd( -1.90096, -50.1324, 13.2933, 1.18 ) }
    dend_32 { pt3dadd( -2.70222, -50.7033, 13.5182, 1.18 ) }
    dend_32 { pt3dadd( -3.47841, -51.225, 13.7173, 1.33 ) }
    dend_32 { pt3dadd( -4.3721, -51.8167, 13.9657, 1.33 ) }
    dend_32 { pt3dadd( -5.14048, -52.3326, 14.2064, 1.4 ) }
    dend_32 { pt3dadd( -5.96418, -52.9209, 14.504, 1.55 ) }
    dend_32 { pt3dadd( -6.75318, -53.544, 14.8542, 1.55 ) }
    dend_32 { pt3dadd( -7.64622, -54.3953, 15.3571, 1.84 ) }
    dend_32 { pt3dadd( -8.18703, -55.017, 15.7138, 2.14 ) }
    dend_32 { pt3dadd( -8.71672, -55.7665, 16.0965, 1.99 ) }
    dend_32 { pt3dadd( -9.4555, -57.1201, 16.7084, 0.88 ) }
    dend_32 { pt3dadd( -9.95997, -58.3702, 17.1894, 0.88 ) }
    dend_32 { pt3dadd( -10.3853, -59.8469, 17.6692, 0.81 ) }
    dend_32 { pt3dadd( -10.6233, -61.1524, 17.9949, 0.74 ) }
    dend_32 { pt3dadd( -10.8443, -62.8007, 18.3525, 0.74 ) }
    dend_32 { pt3dadd( -10.9526, -64.3406, 18.6377, 1.03 ) }
    dend_32 { pt3dadd( -10.9483, -65.7242, 18.8209, 1.4 ) }
    dend_32 { pt3dadd( -10.9001, -66.585, 18.888, 1.69 ) }
    dend_32 { pt3dadd( -10.8002, -67.5501, 18.9145, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -9.75031, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -9.75031, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.72307, -10.6081, -2.28763, 3.39 ) }
    dend_0 { pt3dadd( 1.94971, -11.3001, -2.38461, 3.02 ) }
    dend_0 { pt3dadd( 2.17918, -12.0007, -2.48281, 3.02 ) }
    dend_0 { pt3dadd( 2.48093, -12.9221, -2.61194, 3.02 ) }
    dend_0 { pt3dadd( 2.80507, -13.9118, -2.75065, 3.24 ) }
    dend_0 { pt3dadd( 3.04951, -14.6416, -2.86386, 3.54 ) }
    dend_0 { pt3dadd( 3.32703, -15.4279, -3.0144, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -57.3182, 98.3769, -39.4324, 0.44 ) }
    dend_88 { pt3dadd( -58.7331, 99.6984, -40.1403, 0.44 ) }
    dend_88 { pt3dadd( -59.3638, 100.347, -40.4548, 0.37 ) }
    dend_88 { pt3dadd( -59.6341, 100.715, -40.5732, 0.66 ) }
    dend_88 { pt3dadd( -60.0337, 101.39, -40.7377, 0.66 ) }
    dend_88 { pt3dadd( -60.4001, 102.154, -40.8896, 0.59 ) }
    dend_88 { pt3dadd( -60.6153, 102.727, -40.9947, 0.81 ) }
    dend_88 { pt3dadd( -60.747, 103.446, -41.0671, 0.81 ) }
    dend_88 { pt3dadd( -60.7785, 105.075, -41.2629, 0.52 ) }
    dend_88 { pt3dadd( -60.6601, 105.827, -41.3926, 0.52 ) }
    dend_88 { pt3dadd( -60.2794, 106.948, -41.684, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -59.744, 107.97, -42.0767, 0.44 ) }
    dend_88 { pt3dadd( -59.0633, 108.909, -42.5806, 0.74 ) }
    dend_88 { pt3dadd( -58.4775, 109.537, -43.0088, 0.74 ) }
    dend_88 { pt3dadd( -57.5351, 110.36, -43.7271, 0.44 ) }
    dend_88 { pt3dadd( -56.8157, 110.925, -44.2372, 0.59 ) }
    dend_88 { pt3dadd( -56.0943, 111.473, -44.7515, 0.59 ) }
    dend_88 { pt3dadd( -55.3771, 112.042, -45.2992, 0.59 ) }
    dend_88 { pt3dadd( -54.8234, 112.551, -45.7835, 0.37 ) }
    dend_88 { pt3dadd( -54.4247, 112.96, -46.1713, 0.37 ) }
    dend_88 { pt3dadd( -53.8289, 113.608, -46.7895, 0.59 ) }
    dend_88 { pt3dadd( -53.2457, 114.223, -47.4058, 0.37 ) }
    dend_88 { pt3dadd( -52.7203, 114.749, -47.9549, 0.81 ) }
    dend_88 { pt3dadd( -52.1736, 115.274, -48.5308, 0.81 ) }
    dend_88 { pt3dadd( -51.184, 116.235, -49.621, 0.44 ) }
    dend_88 { pt3dadd( -50.4277, 116.994, -50.4829, 0.44 ) }
    dend_88 { pt3dadd( -49.9048, 117.512, -51.1167, 0.81 ) }
    dend_88 { pt3dadd( -49.378, 118.042, -51.7733, 0.44 ) }
    dend_88 { pt3dadd( -49.0973, 118.347, -52.1551, 0.59 ) }
    dend_88 { pt3dadd( -48.4477, 119.126, -53.1571, 0.59 ) }
    dend_88 { pt3dadd( -48.0994, 119.685, -53.9317, 0.44 ) }
    dend_88 { pt3dadd( -47.7911, 120.478, -55.0188, 0.44 ) }
    dend_88 { pt3dadd( -47.6716, 121.153, -56.0267, 0.96 ) }
    dend_88 { pt3dadd( -47.6781, 121.466, -56.5472, 1.18 ) }
    dend_88 { pt3dadd( -47.7429, 121.751, -57.0629, 1.18 ) }
    dend_88 { pt3dadd( -48.2036, 122.45, -58.8036, 0.44 ) }
    dend_88 { pt3dadd( -48.6905, 122.933, -60.1648, 0.37 ) }
    dend_88 { pt3dadd( -49.2281, 123.27, -61.5455, 0.66 ) }
    dend_88 { pt3dadd( -49.4896, 123.395, -62.1882, 0.66 ) }
    dend_88 { pt3dadd( -49.9191, 123.571, -63.2098, 0.66 ) }
    dend_88 { pt3dadd( -51.5623, 124.157, -67.2908, 0.44 ) }
    dend_88 { pt3dadd( -51.8457, 124.243, -68.0189, 0.44 ) }
    dend_88 { pt3dadd( -53.312, 124.663, -71.8994, 0.29 ) }
    dend_88 { pt3dadd( -53.6194, 124.775, -72.7268, 0.29 ) }
    dend_88 { pt3dadd( -53.9586, 124.935, -73.6754, 0.29 ) }
    dend_88 { pt3dadd( -54.6537, 125.378, -75.7025, 0.74 ) }
    dend_88 { pt3dadd( -55.4082, 126.097, -78.0255, 0.44 ) }
    dend_88 { pt3dadd( -55.5605, 126.301, -78.539, 0.44 ) }
    dend_88 { pt3dadd( -55.837, 126.878, -79.5083, 0.37 ) }
    dend_88 { pt3dadd( -56.0801, 127.512, -80.3831, 0.88 ) }
    dend_88 { pt3dadd( -56.4161, 128.639, -81.5236, 0.29 ) }
    dend_88 { pt3dadd( -56.5558, 129.127, -81.8675, 0.52 ) }
    dend_88 { pt3dadd( -56.8485, 130.042, -82.38, 0.15 ) }
    dend_88 { pt3dadd( -57.1598, 130.849, -82.8411, 0.22 ) }
    dend_88 { pt3dadd( -57.6902, 132.113, -83.5588, 0.22 ) }
    dend_88 { pt3dadd( -58.2029, 133.225, -84.141, 0.22 ) }
    dend_88 { pt3dadd( -58.6844, 134.275, -84.6531, 0.22 ) }
    dend_88 { pt3dadd( -59.4469, 135.808, -85.4472, 1.47 ) }
    dend_88 { pt3dadd( -60.0419, 136.925, -86.0834, 0.66 ) }
    dend_88 { pt3dadd( -60.4134, 137.637, -86.5125, 0.96 ) }
    dend_88 { pt3dadd( -60.9789, 138.814, -87.229, 0.22 ) }
    dend_88 { pt3dadd( -61.3217, 139.617, -87.6615, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -57.3182, 98.3769, -39.4324, 0.37 ) }
    dend_79 { pt3dadd( -57.0247, 99.9592, -39.3396, 0.37 ) }
    dend_79 { pt3dadd( -56.815, 100.729, -39.382, 0.37 ) }
    dend_79 { pt3dadd( -56.6187, 101.467, -39.3475, 0.37 ) }
    dend_79 { pt3dadd( -56.3883, 102.589, -39.1883, 0.74 ) }
    dend_79 { pt3dadd( -56.2719, 103.55, -38.9959, 0.29 ) }
    dend_79 { pt3dadd( -56.2485, 104.692, -38.7215, 0.29 ) }
    dend_79 { pt3dadd( -56.2581, 105.231, -38.5797, 0.52 ) }
    dend_79 { pt3dadd( -56.3344, 106.445, -38.0671, 0.44 ) }
    dend_79 { pt3dadd( -56.4056, 107.229, -37.6547, 0.29 ) }
    dend_79 { pt3dadd( -56.4633, 107.916, -37.2666, 0.29 ) }
    dend_79 { pt3dadd( -56.4996, 108.679, -36.8127, 0.29 ) }
    dend_79 { pt3dadd( -56.4826, 109.958, -36.0928, 0.44 ) }
    dend_79 { pt3dadd( -56.4127, 110.988, -35.5392, 0.44 ) }
    dend_79 { pt3dadd( -56.2153, 112.279, -34.9447, 0.52 ) }
    dend_79 { pt3dadd( -55.95, 113.294, -34.5124, 0.37 ) }
    dend_79 { pt3dadd( -55.6536, 114.097, -34.1913, 0.37 ) }
    dend_79 { pt3dadd( -55.2493, 114.95, -33.8986, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 31.488, 31.0313, -5.44817, 0.29 ) }
    dend_69 { pt3dadd( 32.3083, 30.755, -4.28653, 0.29 ) }
    dend_69 { pt3dadd( 33.0783, 30.5337, -3.33572, 0.59 ) }
    dend_69 { pt3dadd( 33.8335, 30.3176, -2.51779, 0.74 ) }
    dend_69 { pt3dadd( 34.2477, 30.2042, -2.10459, 0.37 ) }
    dend_69 { pt3dadd( 34.8843, 30.0482, -1.42496, 0.37 ) }
    dend_69 { pt3dadd( 35.2375, 29.9705, -1.01901, 0.66 ) }
    dend_69 { pt3dadd( 35.5006, 29.943, -0.698813, 0.96 ) }
    dend_69 { pt3dadd( 35.877, 29.9394, -0.0861402, 1.25 ) }
    dend_69 { pt3dadd( 36.4408, 30.0021, 1.08123, 0.37 ) }
    dend_69 { pt3dadd( 36.9478, 30.1503, 2.30964, 0.37 ) }
    dend_69 { pt3dadd( 37.1138, 30.2235, 2.74044, 0.37 ) }
    dend_69 { pt3dadd( 37.4776, 30.3992, 3.61645, 0.74 ) }
    dend_69 { pt3dadd( 38.1339, 30.6922, 4.94544, 0.66 ) }
    dend_69 { pt3dadd( 38.6806, 30.9125, 5.83998, 0.52 ) }
    dend_69 { pt3dadd( 39.1173, 31.0362, 6.34344, 0.66 ) }
    dend_69 { pt3dadd( 39.6624, 31.1249, 6.76798, 0.66 ) }
    dend_69 { pt3dadd( 40.4109, 31.1945, 7.20286, 0.37 ) }
    dend_69 { pt3dadd( 41.2819, 31.2137, 7.57192, 0.52 ) }
    dend_69 { pt3dadd( 41.7681, 31.1909, 7.73261, 0.52 ) }
    dend_69 { pt3dadd( 42.6171, 31.1212, 7.99035, 0.66 ) }
    dend_69 { pt3dadd( 43.094, 31.0666, 8.12748, 0.88 ) }
    dend_69 { pt3dadd( 43.7293, 30.9965, 8.29513, 0.88 ) }
    dend_69 { pt3dadd( 44.4664, 30.9399, 8.52312, 0.66 ) }
    dend_69 { pt3dadd( 45.3892, 30.917, 8.82597, 0.29 ) }
    dend_69 { pt3dadd( 46.1974, 30.944, 9.08654, 0.29 ) }
    dend_69 { pt3dadd( 47.4213, 31.0904, 9.46719, 0.88 ) }
    dend_69 { pt3dadd( 47.7602, 31.1458, 9.57114, 0.88 ) }
    dend_69 { pt3dadd( 49.1178, 31.4169, 9.96773, 0.29 ) }
    dend_69 { pt3dadd( 50.165, 31.6663, 10.246, 0.29 ) }
    dend_69 { pt3dadd( 51.1662, 31.9393, 10.4849, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 52.3569, 32.2937, 10.7479, 0.29 ) }
    dend_69 { pt3dadd( 53.2228, 32.5576, 10.9353, 0.29 ) }
    dend_69 { pt3dadd( 54.0244, 32.7864, 11.0902, 0.81 ) }
    dend_69 { pt3dadd( 54.6544, 32.9531, 11.1754, 0.81 ) }
    dend_69 { pt3dadd( 55.2133, 33.092, 11.2469, 0.81 ) }
    dend_69 { pt3dadd( 56.0602, 33.2838, 11.3502, 0.59 ) }
    dend_69 { pt3dadd( 57.0454, 33.4687, 11.4717, 0.29 ) }
    dend_69 { pt3dadd( 57.9149, 33.6617, 11.5907, 0.81 ) }
    dend_69 { pt3dadd( 58.7735, 33.8549, 11.716, 0.22 ) }
    dend_69 { pt3dadd( 59.5355, 34.012, 11.8259, 0.22 ) }
    dend_69 { pt3dadd( 60.0185, 34.0927, 11.8858, 0.52 ) }
    dend_69 { pt3dadd( 60.6846, 34.1766, 11.9273, 0.22 ) }
    dend_69 { pt3dadd( 67.5492, 35.2448, 16.0629, 0.22 ) }
    dend_69 { pt3dadd( 73.9299, 36.5202, 20.858, 0.22 ) }
    dend_69 { pt3dadd( 81.2151, 36.4473, 24.3753, 0.22 ) }
    dend_69 { pt3dadd( 88.4403, 34.9827, 27.6944, 0.22 ) }
    dend_69 { pt3dadd( 95.6504, 34.4988, 31.3313, 0.22 ) }
    dend_69 { pt3dadd( 101.647, 33.013, 36.547, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 31.488, 31.0313, -5.44817, 0.81 ) }
    dend_54 { pt3dadd( 32.8117, 31.154, -4.98756, 0.81 ) }
    dend_54 { pt3dadd( 33.44, 31.1422, -4.8046, 1.03 ) }
    dend_54 { pt3dadd( 35.112, 31.0351, -4.48032, 0.96 ) }
    dend_54 { pt3dadd( 36.029, 30.9845, -4.35272, 0.96 ) }
    dend_54 { pt3dadd( 37.0987, 30.9722, -4.23995, 0.59 ) }
    dend_54 { pt3dadd( 37.843, 31.0025, -4.17977, 0.66 ) }
    dend_54 { pt3dadd( 38.8417, 31.0493, -4.13216, 0.66 ) }
    dend_54 { pt3dadd( 40.0328, 31.2032, -4.15002, 0.59 ) }
    dend_54 { pt3dadd( 40.6576, 31.3835, -4.23374, 0.81 ) }
    dend_54 { pt3dadd( 41.4471, 31.7504, -4.36602, 0.96 ) }
    dend_54 { pt3dadd( 42.1734, 32.1799, -4.49567, 1.25 ) }
    dend_54 { pt3dadd( 42.6983, 32.504, -4.58268, 1.4 ) }
    dend_54 { pt3dadd( 43.3582, 32.8978, -4.66198, 1.4 ) }
    dend_54 { pt3dadd( 44.4365, 33.4406, -4.72783, 0.59 ) }
    dend_54 { pt3dadd( 44.876, 33.5861, -4.74205, 0.59 ) }
    dend_54 { pt3dadd( 45.7919, 33.7137, -4.74528, 0.59 ) }
    dend_54 { pt3dadd( 46.794, 33.7049, -4.7235, 1.03 ) }
    dend_54 { pt3dadd( 47.5066, 33.6263, -4.69258, 1.18 ) }
    dend_54 { pt3dadd( 48.1267, 33.5083, -4.6287, 1.18 ) }
    dend_54 { pt3dadd( 49.1284, 33.2594, -4.46496, 0.74 ) }
    dend_54 { pt3dadd( 50.0915, 32.9982, -4.2422, 0.66 ) }
    dend_54 { pt3dadd( 50.5491, 32.8765, -4.11644, 0.96 ) }
    dend_54 { pt3dadd( 51.1459, 32.7436, -3.94867, 0.96 ) }
    dend_54 { pt3dadd( 52.2165, 32.5566, -3.65846, 1.03 ) }
    dend_54 { pt3dadd( 52.7219, 32.5007, -3.52404, 1.03 ) }
    dend_54 { pt3dadd( 54.127, 32.5003, -3.17913, 0.59 ) }
    dend_54 { pt3dadd( 54.8888, 32.5832, -3.01601, 0.59 ) }
    dend_54 { pt3dadd( 56.2478, 32.831, -2.77636, 0.59 ) }
    dend_54 { pt3dadd( 56.9127, 32.9976, -2.68834, 0.81 ) }
    dend_54 { pt3dadd( 57.5339, 33.2076, -2.64301, 0.81 ) }
    dend_54 { pt3dadd( 58.7992, 33.7312, -2.62569, 0.37 ) }
    dend_54 { pt3dadd( 59.5955, 34.0854, -2.66533, 0.66 ) }
    dend_54 { pt3dadd( 60.3024, 34.3739, -2.70619, 0.74 ) }
    dend_54 { pt3dadd( 60.7461, 34.5267, -2.74065, 0.74 ) }
    dend_54 { pt3dadd( 61.6141, 34.7352, -2.82331, 0.74 ) }
    dend_54 { pt3dadd( 62.5453, 34.8343, -2.92263, 0.52 ) }
    dend_54 { pt3dadd( 63.8413, 34.8054, -3.06886, 0.74 ) }
    dend_54 { pt3dadd( 64.8175, 34.7246, -3.15601, 0.88 ) }
    dend_54 { pt3dadd( 65.3524, 34.6721, -3.17418, 0.96 ) }
    dend_54 { pt3dadd( 65.8837, 34.6268, -3.1588, 1.18 ) }
    dend_54 { pt3dadd( 66.6914, 34.5849, -3.07801, 1.18 ) }
    dend_54 { pt3dadd( 67.3049, 34.6075, -2.95832, 0.66 ) }
    dend_54 { pt3dadd( 68.3916, 34.8312, -2.62485, 0.59 ) }
    dend_54 { pt3dadd( 69.1046, 35.0891, -2.27858, 0.59 ) }
    dend_54 { pt3dadd( 69.5765, 35.3094, -1.98974, 0.74 ) }
    dend_54 { pt3dadd( 69.945, 35.5178, -1.72354, 0.74 ) }
    dend_54 { pt3dadd( 70.3082, 35.7473, -1.42748, 0.74 ) }
    dend_54 { pt3dadd( 71.0005, 36.2146, -0.799705, 0.59 ) }
    dend_54 { pt3dadd( 71.9177, 36.868, 0.117732, 0.96 ) }
    dend_54 { pt3dadd( 72.3547, 37.1721, 0.559941, 1.25 ) }
    dend_54 { pt3dadd( 72.592, 37.3305, 0.817781, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 66.4309, 39.5942, 58.2873, 0.29 ) }
    dend_52 { pt3dadd( 73.1592, 43.5964, 65.4058, 0.29 ) }
    dend_52 { pt3dadd( 80.9645, 47.2849, 71.5214, 0.29 ) }
    dend_52 { pt3dadd( 89.2078, 51.5536, 76.5593, 0.29 ) }
    dend_52 { pt3dadd( 96.1956, 55.77, 83.2839, 0.29 ) }
    dend_52 { pt3dadd( 102.943, 61.109, 89.3857, 0.29 ) }
    dend_52 { pt3dadd( 108.28, 67.3946, 95.9387, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 66.4309, 39.5942, 58.2873, 0.29 ) }
    dend_51 { pt3dadd( 71.0156, 41.7307, 62.1524, 0.29 ) }
    dend_51 { pt3dadd( 74.9075, 45.0408, 65.9085, 0.29 ) }
    dend_51 { pt3dadd( 78.0479, 48.8426, 69.8785, 0.29 ) }
    dend_51 { pt3dadd( 81.5265, 51.6494, 74.3979, 0.29 ) }
    dend_51 { pt3dadd( 84.8238, 54.8054, 78.8108, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -37.7899, -12.8235, -32.7232, 0.74 ) }
    dend_46 { pt3dadd( -39.4221, -13.9254, -33.0898, 0.74 ) }
    dend_46 { pt3dadd( -40.2967, -14.3558, -33.2553, 0.74 ) }
    dend_46 { pt3dadd( -41.0351, -14.6275, -33.4058, 0.74 ) }
    dend_46 { pt3dadd( -42.1963, -14.8573, -33.784, 0.66 ) }
    dend_46 { pt3dadd( -43.0368, -14.9088, -34.1483, 0.66 ) }
    dend_46 { pt3dadd( -43.9254, -14.8988, -34.5863, 0.59 ) }
    dend_46 { pt3dadd( -44.536, -14.7775, -34.8966, 1.25 ) }
    dend_46 { pt3dadd( -45.0307, -14.6343, -35.1825, 1.25 ) }
    dend_46 { pt3dadd( -46.5376, -14.1735, -36.1324, 0.66 ) }
    dend_46 { pt3dadd( -47.2872, -13.9734, -36.6262, 0.66 ) }
    dend_46 { pt3dadd( -47.6931, -13.9264, -36.9015, 0.96 ) }
    dend_46 { pt3dadd( -48.2985, -13.9823, -37.3062, 0.96 ) }
    dend_46 { pt3dadd( -48.7222, -14.1378, -37.6877, 0.96 ) }
    dend_46 { pt3dadd( -49.3682, -14.646, -38.6273, 0.74 ) }
    dend_46 { pt3dadd( -49.7113, -15.0779, -39.352, 0.52 ) }
    dend_46 { pt3dadd( -50.0541, -15.6183, -40.2592, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -50.2747, -16.017, -40.9315, 1.03 ) }
    dend_46 { pt3dadd( -51.0753, -17.6239, -43.6818, 1.25 ) }
    dend_46 { pt3dadd( -51.6166, -18.7618, -45.6792, 0.66 ) }
    dend_46 { pt3dadd( -51.8848, -19.3075, -46.6676, 0.66 ) }
    dend_46 { pt3dadd( -52.0547, -19.5823, -47.1867, 1.11 ) }
    dend_46 { pt3dadd( -52.2118, -19.745, -47.4976, 1.33 ) }
    dend_46 { pt3dadd( -52.449, -19.9063, -47.7604, 1.18 ) }
    dend_46 { pt3dadd( -52.8423, -20.0981, -47.9068, 1.18 ) }
    dend_46 { pt3dadd( -53.7507, -20.5157, -48.1147, 0.59 ) }
    dend_46 { pt3dadd( -54.6871, -21.01, -48.3565, 0.52 ) }
    dend_46 { pt3dadd( -55.4248, -21.4728, -48.6082, 0.52 ) }
    dend_46 { pt3dadd( -56.0336, -21.9385, -48.9243, 0.81 ) }
    dend_46 { pt3dadd( -56.6267, -22.4977, -49.381, 0.66 ) }
    dend_46 { pt3dadd( -57.1809, -23.0881, -49.914, 0.66 ) }
    dend_46 { pt3dadd( -57.5792, -23.5608, -50.3809, 1.33 ) }
    dend_46 { pt3dadd( -57.8459, -23.8947, -50.7199, 1.33 ) }
    dend_46 { pt3dadd( -58.6775, -24.9426, -51.797, 0.66 ) }
    dend_46 { pt3dadd( -59.4098, -25.8339, -52.713, 0.52 ) }
    dend_46 { pt3dadd( -59.7564, -26.222, -53.1232, 0.52 ) }
    dend_46 { pt3dadd( -60.2098, -26.6524, -53.5355, 0.96 ) }
    dend_46 { pt3dadd( -60.5376, -26.9233, -53.7486, 1.18 ) }
    dend_46 { pt3dadd( -60.7764, -27.1048, -53.8372, 1.18 ) }
    dend_46 { pt3dadd( -61.2819, -27.4926, -53.8835, 0.81 ) }
    dend_46 { pt3dadd( -61.9799, -28.065, -53.8269, 0.74 ) }
    dend_46 { pt3dadd( -62.851, -28.8459, -53.6664, 0.59 ) }
    dend_46 { pt3dadd( -63.2888, -29.232, -53.5516, 0.74 ) }
    dend_46 { pt3dadd( -63.8737, -29.7211, -53.3664, 0.74 ) }
    dend_46 { pt3dadd( -64.5012, -30.1903, -53.1575, 0.59 ) }
    dend_46 { pt3dadd( -65.0932, -30.604, -52.9508, 0.44 ) }
    dend_46 { pt3dadd( -65.757, -31.0609, -52.7111, 0.44 ) }
    dend_46 { pt3dadd( -66.3958, -31.4969, -52.5095, 0.44 ) }
    dend_46 { pt3dadd( -67.0711, -32.005, -52.3017, 0.44 ) }
    dend_46 { pt3dadd( -68.1836, -32.9445, -51.9688, 0.44 ) }
    dend_46 { pt3dadd( -68.4623, -33.2301, -51.8809, 0.96 ) }
    dend_46 { pt3dadd( -68.9774, -33.9397, -51.7317, 1.18 ) }
    dend_46 { pt3dadd( -69.3111, -34.59, -51.6461, 0.81 ) }
    dend_46 { pt3dadd( -69.6939, -35.6904, -51.6111, 0.59 ) }
    dend_46 { pt3dadd( -69.8248, -36.1787, -51.6506, 0.74 ) }
    dend_46 { pt3dadd( -70.0266, -36.9716, -51.7696, 0.66 ) }
    dend_46 { pt3dadd( -70.2835, -37.7435, -51.923, 0.66 ) }
    dend_46 { pt3dadd( -70.5278, -38.3094, -52.0606, 0.81 ) }
    dend_46 { pt3dadd( -71.0684, -39.3375, -52.3183, 0.59 ) }
    dend_46 { pt3dadd( -71.5989, -40.2308, -52.5318, 0.52 ) }
    dend_46 { pt3dadd( -72.0976, -41.0971, -52.7117, 0.81 ) }
    dend_46 { pt3dadd( -72.5395, -41.941, -52.8469, 1.4 ) }
    dend_46 { pt3dadd( -72.7456, -42.4433, -52.8635, 1.69 ) }
    dend_46 { pt3dadd( -73.0369, -43.4273, -52.7732, 0.52 ) }
    dend_46 { pt3dadd( -73.2408, -44.2457, -52.7009, 0.44 ) }
    dend_46 { pt3dadd( -73.4166, -45.0907, -52.7421, 0.44 ) }
    dend_46 { pt3dadd( -73.545, -45.6994, -52.8981, 0.29 ) }
    dend_46 { pt3dadd( -73.8562, -46.8436, -53.3665, 1.4 ) }
    dend_46 { pt3dadd( -73.9358, -47.0721, -53.4795, 1.4 ) }
    dend_46 { pt3dadd( -74.8184, -49.1019, -54.7605, 0.52 ) }
    dend_46 { pt3dadd( -75.3916, -50.2214, -55.5579, 0.52 ) }
    dend_46 { pt3dadd( -75.719, -50.7989, -55.9914, 0.52 ) }
    dend_46 { pt3dadd( -76.2152, -51.658, -56.6356, 0.74 ) }
    dend_46 { pt3dadd( -76.542, -52.233, -57.0503, 0.88 ) }
    dend_46 { pt3dadd( -77.231, -53.533, -57.8381, 0.44 ) }
    dend_46 { pt3dadd( -77.5465, -54.1785, -58.1224, 0.59 ) }
    dend_46 { pt3dadd( -77.9175, -54.8961, -58.4083, 0.59 ) }
    dend_46 { pt3dadd( -78.3392, -55.6222, -58.7286, 0.37 ) }
    dend_46 { pt3dadd( -78.6057, -56.0605, -58.9367, 0.59 ) }
    dend_46 { pt3dadd( -79.1099, -56.8367, -59.3002, 0.81 ) }
    dend_46 { pt3dadd( -79.6068, -57.5333, -59.5714, 1.18 ) }
    dend_46 { pt3dadd( -79.9313, -57.9599, -59.744, 1.18 ) }
    dend_46 { pt3dadd( -80.8272, -59.0179, -60.2468, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -37.7899, -12.8235, -32.7232, 0.81 ) }
    dend_45 { pt3dadd( -38.2293, -11.1212, -32.811, 0.81 ) }
    dend_45 { pt3dadd( -38.4684, -10.4948, -32.7901, 0.81 ) }
    dend_45 { pt3dadd( -38.8759, -9.74405, -32.7178, 0.81 ) }
    dend_45 { pt3dadd( -39.3505, -9.16153, -32.6353, 0.88 ) }
    dend_45 { pt3dadd( -39.9582, -8.70585, -32.5718, 0.66 ) }
    dend_45 { pt3dadd( -41.1142, -8.08931, -32.5172, 0.59 ) }
    dend_45 { pt3dadd( -41.9637, -7.93215, -32.5222, 0.59 ) }
    dend_45 { pt3dadd( -42.741, -7.92695, -32.6664, 0.59 ) }
    dend_45 { pt3dadd( -43.7828, -8.05632, -33.0307, 0.74 ) }
    dend_45 { pt3dadd( -44.9046, -8.29749, -33.6391, 1.03 ) }
    dend_45 { pt3dadd( -45.2969, -8.39495, -33.8958, 1.62 ) }
    dend_45 { pt3dadd( -45.827, -8.52333, -34.2878, 1.92 ) }
    dend_45 { pt3dadd( -47.5002, -8.87242, -35.5043, 0.88 ) }
    dend_45 { pt3dadd( -48.1412, -8.9857, -35.9624, 0.66 ) }
    dend_45 { pt3dadd( -49.0819, -9.14326, -36.6037, 0.66 ) }
    dend_45 { pt3dadd( -50.3516, -9.34863, -37.4211, 0.66 ) }
    dend_45 { pt3dadd( -50.9148, -9.42549, -37.7676, 0.66 ) }
    dend_45 { pt3dadd( -52.1354, -9.5178, -38.4502, 0.66 ) }
    dend_45 { pt3dadd( -52.9081, -9.51984, -38.8424, 0.44 ) }
    dend_45 { pt3dadd( -53.8743, -9.46039, -39.367, 0.44 ) }
    dend_45 { pt3dadd( -54.5745, -9.37348, -39.7909, 0.44 ) }
    dend_45 { pt3dadd( -55.3888, -9.2247, -40.3862, 0.66 ) }
    dend_45 { pt3dadd( -55.9531, -9.1005, -40.8347, 0.66 ) }
    dend_45 { pt3dadd( -56.6145, -8.90871, -41.373, 0.66 ) }
    dend_45 { pt3dadd( -57.1833, -8.708, -41.7934, 0.66 ) }
    dend_45 { pt3dadd( -57.8273, -8.41858, -42.2231, 0.44 ) }
    dend_45 { pt3dadd( -58.2726, -8.18868, -42.5091, 0.74 ) }
    dend_45 { pt3dadd( -58.9339, -7.8255, -42.9161, 0.74 ) }
    dend_45 { pt3dadd( -59.522, -7.49478, -43.2745, 0.74 ) }
    dend_45 { pt3dadd( -60.0233, -7.21284, -43.5663, 0.74 ) }
    dend_45 { pt3dadd( -60.5985, -6.8957, -43.8864, 0.37 ) }
    dend_45 { pt3dadd( -61.4643, -6.5351, -44.3872, 0.37 ) }
    dend_45 { pt3dadd( -61.8469, -6.4672, -44.6253, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -62.261, -6.49857, -44.9187, 0.88 ) }
    dend_45 { pt3dadd( -62.8209, -6.61943, -45.331, 1.18 ) }
    dend_45 { pt3dadd( -63.2788, -6.74956, -45.7052, 1.33 ) }
    dend_45 { pt3dadd( -64.4464, -7.1262, -46.7369, 0.44 ) }
    dend_45 { pt3dadd( -65.2774, -7.37206, -47.5409, 0.44 ) }
    dend_45 { pt3dadd( -65.9273, -7.50409, -48.2703, 0.44 ) }
    dend_45 { pt3dadd( -66.496, -7.51811, -48.9872, 0.88 ) }
    dend_45 { pt3dadd( -67.0826, -7.3703, -49.7867, 1.03 ) }
    dend_45 { pt3dadd( -67.3116, -7.22463, -50.1044, 1.03 ) }
    dend_45 { pt3dadd( -67.8813, -6.61116, -50.797, 0.44 ) }
    dend_45 { pt3dadd( -68.2217, -6.19915, -51.1727, 0.44 ) }
    dend_45 { pt3dadd( -68.6351, -5.74885, -51.5287, 0.44 ) }
    dend_45 { pt3dadd( -68.9884, -5.45179, -51.792, 0.59 ) }
    dend_45 { pt3dadd( -69.5946, -5.08202, -52.1637, 0.59 ) }
    dend_45 { pt3dadd( -70.2313, -4.83235, -52.5249, 0.74 ) }
    dend_45 { pt3dadd( -71.4297, -4.61315, -53.1474, 0.37 ) }
    dend_45 { pt3dadd( -72.1949, -4.59716, -53.554, 0.37 ) }
    dend_45 { pt3dadd( -73.3429, -4.73591, -54.1842, 0.59 ) }
    dend_45 { pt3dadd( -73.7972, -4.84729, -54.4479, 0.88 ) }
    dend_45 { pt3dadd( -74.6801, -5.17654, -55.0115, 0.66 ) }
    dend_45 { pt3dadd( -75.278, -5.44811, -55.4122, 0.74 ) }
    dend_45 { pt3dadd( -75.9187, -5.77614, -55.8362, 0.59 ) }
    dend_45 { pt3dadd( -76.47, -6.07924, -56.2258, 0.52 ) }
    dend_45 { pt3dadd( -76.9857, -6.35957, -56.5906, 0.88 ) }
    dend_45 { pt3dadd( -77.9267, -6.80609, -57.2859, 0.59 ) }
    dend_45 { pt3dadd( -78.4702, -7.01115, -57.7003, 0.44 ) }
    dend_45 { pt3dadd( -79.0671, -7.17905, -58.1709, 1.03 ) }
    dend_45 { pt3dadd( -79.4817, -7.25639, -58.4977, 1.33 ) }
    dend_45 { pt3dadd( -79.7375, -7.28022, -58.6912, 1.4 ) }
    dend_45 { pt3dadd( -80.8178, -7.31601, -59.4435, 0.44 ) }
    dend_45 { pt3dadd( -81.2559, -7.32135, -59.7308, 0.44 ) }
    dend_45 { pt3dadd( -81.9043, -7.3139, -60.1304, 0.44 ) }
    dend_45 { pt3dadd( -82.5883, -7.28451, -60.5214, 0.44 ) }
    dend_45 { pt3dadd( -83.6972, -7.22782, -61.1505, 0.59 ) }
    dend_45 { pt3dadd( -84.4587, -7.19014, -61.6446, 0.88 ) }
    dend_45 { pt3dadd( -85.1434, -7.13489, -62.2066, 1.11 ) }
    dend_45 { pt3dadd( -86.0123, -7.03657, -63.0347, 0.52 ) }
    dend_45 { pt3dadd( -86.6249, -6.93112, -63.6851, 0.52 ) }
    dend_45 { pt3dadd( -87.1292, -6.82045, -64.2568, 1.03 ) }
    dend_45 { pt3dadd( -88.2403, -6.55586, -65.6072, 1.25 ) }
    dend_45 { pt3dadd( -89.5622, -6.29393, -67.2021, 0.52 ) }
    dend_45 { pt3dadd( -90.0195, -6.22266, -67.7383, 0.59 ) }
    dend_45 { pt3dadd( -90.6387, -6.15338, -68.4201, 0.59 ) }
    dend_45 { pt3dadd( -91.6284, -6.04479, -69.3769, 0.44 ) }
    dend_45 { pt3dadd( -92.3183, -5.95948, -69.924, 0.44 ) }
    dend_45 { pt3dadd( -93.3406, -5.78357, -70.5934, 0.44 ) }
    dend_45 { pt3dadd( -93.8837, -5.65853, -70.9374, 0.44 ) }
    dend_45 { pt3dadd( -94.6046, -5.40595, -71.5347, 0.66 ) }
    dend_45 { pt3dadd( -95.0917, -5.14934, -72.0658, 0.88 ) }
    dend_45 { pt3dadd( -95.3358, -4.95785, -72.3911, 0.88 ) }
    dend_45 { pt3dadd( -96.0034, -4.26073, -73.4022, 0.52 ) }
    dend_45 { pt3dadd( -96.3899, -3.74893, -74.0645, 0.52 ) }
    dend_45 { pt3dadd( -96.8986, -2.94282, -75.1071, 0.81 ) }
    dend_45 { pt3dadd( -97.2291, -2.31248, -75.8957, 0.44 ) }
    dend_45 { pt3dadd( -97.406, -1.92271, -76.3811, 0.44 ) }
    dend_45 { pt3dadd( -97.5818, -1.41622, -76.9838, 0.74 ) }
    dend_45 { pt3dadd( -97.6657, -1.0339, -77.3889, 0.96 ) }
    dend_45 { pt3dadd( -97.757, -0.0418539, -78.2625, 0.66 ) }
    dend_45 { pt3dadd( -97.7859, 0.578793, -78.7836, 0.44 ) }
    dend_45 { pt3dadd( -97.8289, 1.25294, -79.3885, 0.44 ) }
    dend_45 { pt3dadd( -97.9282, 1.88963, -80.0382, 0.44 ) }
    dend_45 { pt3dadd( -98.0051, 2.10747, -80.2955, 0.44 ) }
    dend_45 { pt3dadd( -98.3426, 2.55957, -80.9044, 0.96 ) }
    dend_45 { pt3dadd( -99.2546, 3.05917, -81.7954, 0.66 ) }
    dend_45 { pt3dadd( -99.89, 3.26813, -82.287, 0.96 ) }
    dend_45 { pt3dadd( -100.202, 3.35029, -82.4833, 1.25 ) }
    dend_45 { pt3dadd( -100.575, 3.43842, -82.692, 1.25 ) }
    dend_45 { pt3dadd( -101.164, 3.59511, -83.0118, 1.25 ) }
    dend_45 { pt3dadd( -102.167, 3.96471, -83.5711, 0.37 ) }
    dend_45 { pt3dadd( -102.75, 4.31928, -83.8925, 0.37 ) }
    dend_45 { pt3dadd( -103.123, 4.62012, -84.1393, 0.66 ) }
    dend_45 { pt3dadd( -103.406, 4.86884, -84.3257, 0.81 ) }
    dend_45 { pt3dadd( -103.849, 5.26512, -84.5882, 0.81 ) }
    dend_45 { pt3dadd( -104.541, 5.88378, -84.9135, 0.44 ) }
    dend_45 { pt3dadd( -105.026, 6.28282, -85.0606, 0.44 ) }
    dend_45 { pt3dadd( -105.934, 6.92999, -85.238, 0.44 ) }
    dend_45 { pt3dadd( -106.951, 7.6125, -85.3677, 0.44 ) }
    dend_45 { pt3dadd( -107.727, 8.12924, -85.4249, 0.66 ) }
    dend_45 { pt3dadd( -108.538, 8.66511, -85.4422, 0.96 ) }
    dend_45 { pt3dadd( -109.362, 9.20271, -85.4006, 0.59 ) }
    dend_45 { pt3dadd( -110.061, 9.67633, -85.3387, 0.44 ) }
    dend_45 { pt3dadd( -110.781, 10.175, -85.2684, 0.44 ) }
    dend_45 { pt3dadd( -111.479, 10.6546, -85.2447, 0.44 ) }
    dend_45 { pt3dadd( -112.091, 11.0224, -85.2985, 0.44 ) }
    dend_45 { pt3dadd( -112.809, 11.3501, -85.467, 0.74 ) }
    dend_45 { pt3dadd( -113.171, 11.4689, -85.5967, 0.74 ) }
    dend_45 { pt3dadd( -114.219, 11.7048, -86.0222, 0.52 ) }
    dend_45 { pt3dadd( -114.699, 11.7855, -86.2408, 0.59 ) }
    dend_45 { pt3dadd( -115.591, 11.9163, -86.6793, 0.44 ) }
    dend_45 { pt3dadd( -116.254, 12.0399, -87.0213, 0.44 ) }
    dend_45 { pt3dadd( -117.068, 12.2686, -87.4948, 0.37 ) }
    dend_45 { pt3dadd( -117.873, 12.5769, -87.9716, 0.52 ) }
    dend_45 { pt3dadd( -118.499, 12.8892, -88.3566, 1.11 ) }
    dend_45 { pt3dadd( -118.979, 13.1725, -88.6925, 1.25 ) }
    dend_45 { pt3dadd( -119.535, 13.5395, -89.1506, 0.37 ) }
    dend_45 { pt3dadd( -120.324, 14.0705, -89.9018, 0.37 ) }
    dend_45 { pt3dadd( -120.858, 14.4038, -90.4659, 0.29 ) }
    dend_45 { pt3dadd( -121.282, 14.6446, -90.9645, 0.29 ) }
    dend_45 { pt3dadd( -122.043, 15.0608, -91.9141, 0.59 ) }
    dend_45 { pt3dadd( -122.64, 15.4037, -92.6957, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -122.976, 15.6099, -93.1414, 0.29 ) }
    dend_45 { pt3dadd( -123.24, 15.7945, -93.4648, 0.37 ) }
    dend_45 { pt3dadd( -123.655, 16.14, -93.9434, 0.37 ) }
    dend_45 { pt3dadd( -124.224, 16.6679, -94.4922, 0.44 ) }
    dend_45 { pt3dadd( -124.706, 17.1463, -94.843, 0.44 ) }
    dend_45 { pt3dadd( -125.169, 17.6091, -95.1068, 0.44 ) }
    dend_45 { pt3dadd( -125.736, 18.1297, -95.3932, 0.37 ) }
    dend_45 { pt3dadd( -125.972, 18.3164, -95.4971, 0.37 ) }
    dend_45 { pt3dadd( -126.589, 18.7169, -95.7187, 0.88 ) }
    dend_45 { pt3dadd( -126.954, 18.9131, -95.8325, 1.11 ) }
    dend_45 { pt3dadd( -127.614, 19.2393, -96.0291, 1.11 ) }
    dend_45 { pt3dadd( -128.648, 19.7755, -96.3307, 0.37 ) }
    dend_45 { pt3dadd( -129.445, 20.2328, -96.5591, 0.37 ) }
    dend_45 { pt3dadd( -129.895, 20.5396, -96.6846, 0.66 ) }
    dend_45 { pt3dadd( -130.548, 21.1264, -96.9061, 0.66 ) }
    dend_45 { pt3dadd( -131.041, 21.7016, -97.1152, 0.37 ) }
    dend_45 { pt3dadd( -131.432, 22.3022, -97.333, 0.52 ) }
    dend_45 { pt3dadd( -131.568, 22.5648, -97.4287, 0.66 ) }
    dend_45 { pt3dadd( -131.759, 22.9911, -97.5791, 0.66 ) }
    dend_45 { pt3dadd( -132.276, 24.1696, -97.9805, 0.37 ) }
    dend_45 { pt3dadd( -132.53, 24.6841, -98.1298, 0.37 ) }
    dend_45 { pt3dadd( -132.837, 25.1262, -98.2049, 0.37 ) }
    dend_45 { pt3dadd( -133.186, 25.4864, -98.2062, 0.88 ) }
    dend_45 { pt3dadd( -133.773, 25.9649, -98.1377, 0.81 ) }
    dend_45 { pt3dadd( -134.07, 26.1667, -98.0843, 0.81 ) }
    dend_45 { pt3dadd( -134.827, 26.6285, -97.9152, 0.29 ) }
    dend_45 { pt3dadd( -135.824, 27.2152, -97.6836, 0.29 ) }
    dend_45 { pt3dadd( -136.441, 27.6151, -97.4912, 0.52 ) }
    dend_45 { pt3dadd( -137.179, 28.1472, -97.2446, 0.44 ) }
    dend_45 { pt3dadd( -137.537, 28.4217, -97.1242, 0.44 ) }
    dend_45 { pt3dadd( -138.005, 28.8085, -96.9463, 0.81 ) }
    dend_45 { pt3dadd( -138.546, 29.3197, -96.718, 0.81 ) }
    dend_45 { pt3dadd( -139.533, 30.4178, -96.2492, 0.29 ) }
    dend_45 { pt3dadd( -139.924, 30.8862, -96.0525, 0.44 ) }
    dend_45 { pt3dadd( -140.29, 31.3375, -95.8416, 0.29 ) }
    dend_45 { pt3dadd( -140.7, 31.8182, -95.6156, 0.29 ) }
    dend_45 { pt3dadd( -141.246, 32.4157, -95.3496, 0.29 ) }
    dend_45 { pt3dadd( -141.67, 32.8483, -95.1805, 0.29 ) }
    dend_45 { pt3dadd( -142.18, 33.3215, -95.0186, 0.59 ) }
    dend_45 { pt3dadd( -143.165, 34.2117, -94.691, 0.22 ) }
    dend_45 { pt3dadd( -143.801, 34.7767, -94.4813, 0.22 ) }
    dend_45 { pt3dadd( -144.144, 35.0551, -94.3665, 0.52 ) }
    dend_45 { pt3dadd( -144.468, 35.2807, -94.2497, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -73.738, -42.0142, 70.7461, 0.29 ) }
    dend_43 { pt3dadd( -78.7438, -45.2957, 75.6313, 0.29 ) }
    dend_43 { pt3dadd( -82.5437, -49.5988, 80.7543, 0.29 ) }
    dend_43 { pt3dadd( -86.121, -53.7672, 86.1445, 0.29 ) }
    dend_43 { pt3dadd( -89.2313, -58.3429, 91.4733, 0.29 ) }
    dend_43 { pt3dadd( -91.2383, -63.1339, 97.1127, 0.29 ) }
    dend_43 { pt3dadd( -93.8736, -67.9542, 102.467, 0.29 ) }
    dend_43 { pt3dadd( -96.5271, -72.7918, 107.795, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -73.738, -42.0142, 70.7461, 0.29 ) }
    dend_42 { pt3dadd( -80.9673, -45.9082, 77.0541, 0.29 ) }
    dend_42 { pt3dadd( -88.2861, -50.9093, 82.3529, 0.29 ) }
    dend_42 { pt3dadd( -94.8965, -56.57, 87.8837, 0.29 ) }
    dend_42 { pt3dadd( -100.58, -62.6718, 93.934, 0.29 ) }
    dend_42 { pt3dadd( -105.838, -69.4078, 99.653, 0.29 ) }
    dend_42 { pt3dadd( -110.179, -77.2217, 104.657, 0.29 ) }
    dend_42 { pt3dadd( -115.177, -84.1389, 110.384, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.8002, -67.5501, 18.9145, 0.66 ) }
    dend_34 { pt3dadd( -11.4593, -70.8703, 17.5777, 0.66 ) }
    dend_34 { pt3dadd( -11.6291, -71.7503, 17.2572, 1.03 ) }
    dend_34 { pt3dadd( -11.8173, -72.6682, 17.0344, 1.03 ) }
    dend_34 { pt3dadd( -12.1886, -74.4185, 16.7758, 1.03 ) }
    dend_34 { pt3dadd( -12.4451, -75.741, 16.6834, 1.03 ) }
    dend_34 { pt3dadd( -12.7197, -77.3525, 16.6789, 0.81 ) }
    dend_34 { pt3dadd( -12.9264, -78.7856, 16.945, 0.81 ) }
    dend_34 { pt3dadd( -13.0627, -80.8752, 17.5514, 1.4 ) }
    dend_34 { pt3dadd( -13.0622, -81.7662, 17.8901, 1.62 ) }
    dend_34 { pt3dadd( -12.9836, -83.0883, 18.5399, 1.4 ) }
    dend_34 { pt3dadd( -12.8729, -83.9558, 19.0129, 1.92 ) }
    dend_34 { pt3dadd( -12.6442, -85.1289, 19.6869, 1.4 ) }
    dend_34 { pt3dadd( -12.1941, -86.8986, 20.7418, 1.69 ) }
    dend_34 { pt3dadd( -11.8386, -88.0803, 21.394, 1.11 ) }
    dend_34 { pt3dadd( -11.3539, -89.6672, 22.2257, 0.81 ) }
    dend_34 { pt3dadd( -11.1369, -90.4185, 22.5917, 1.11 ) }
    dend_34 { pt3dadd( -10.9032, -91.3191, 22.9873, 1.25 ) }
    dend_34 { pt3dadd( -10.4717, -93.3343, 23.7802, 0.96 ) }
    dend_34 { pt3dadd( -10.3317, -94.3626, 24.1163, 0.74 ) }
    dend_34 { pt3dadd( -10.2882, -95.3553, 24.3719, 0.81 ) }
    dend_34 { pt3dadd( -10.4253, -96.8828, 24.608, 0.52 ) }
    dend_34 { pt3dadd( -10.6529, -97.9882, 24.6753, 0.88 ) }
    dend_34 { pt3dadd( -10.9305, -98.9321, 24.6106, 0.88 ) }
    dend_34 { pt3dadd( -11.2934, -99.9802, 24.3637, 0.88 ) }
    dend_34 { pt3dadd( -11.6148, -100.915, 24.0567, 0.66 ) }
    dend_34 { pt3dadd( -11.8886, -101.919, 23.6233, 0.66 ) }
    dend_34 { pt3dadd( -12.0985, -103.335, 22.8183, 0.88 ) }
    dend_34 { pt3dadd( -12.1325, -104.279, 22.1922, 1.33 ) }
    dend_34 { pt3dadd( -12.0979, -105.001, 21.6953, 1.47 ) }
    dend_34 { pt3dadd( -12.0385, -105.679, 21.2338, 1.62 ) }
    dend_34 { pt3dadd( -11.9282, -107.062, 20.3558, 0.74 ) }
    dend_34 { pt3dadd( -11.8672, -108.628, 19.5408, 0.74 ) }
    dend_34 { pt3dadd( -11.9294, -109.846, 19.0809, 0.74 ) }
    dend_34 { pt3dadd( -12.0589, -110.814, 18.8728, 0.74 ) }
    dend_34 { pt3dadd( -12.2972, -112.145, 18.7776, 0.66 ) }
    dend_34 { pt3dadd( -12.5486, -113.523, 18.8824, 0.66 ) }
    dend_34 { pt3dadd( -12.8681, -115.499, 19.321, 0.96 ) }
    dend_34 { pt3dadd( -12.972, -116.511, 19.6554, 0.88 ) }
    dend_34 { pt3dadd( -12.9802, -117.412, 19.9999, 0.88 ) }
    dend_34 { pt3dadd( -12.8265, -119.087, 20.664, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -12.5442, -120.62, 21.281, 1.18 ) }
    dend_34 { pt3dadd( -12.3694, -121.371, 21.538, 1.62 ) }
    dend_34 { pt3dadd( -12.1686, -122.22, 21.754, 1.62 ) }
    dend_34 { pt3dadd( -11.922, -123.423, 22.0153, 0.96 ) }
    dend_34 { pt3dadd( -11.7751, -124.359, 22.1916, 0.96 ) }
    dend_34 { pt3dadd( -11.6497, -125.78, 22.4129, 0.66 ) }
    dend_34 { pt3dadd( -11.6648, -127.662, 22.6147, 0.52 ) }
    dend_34 { pt3dadd( -11.8151, -129.359, 22.7965, 0.59 ) }
    dend_34 { pt3dadd( -12.1552, -131.32, 23.0055, 0.74 ) }
    dend_34 { pt3dadd( -12.2898, -131.832, 23.0647, 1.11 ) }
    dend_34 { pt3dadd( -12.6616, -132.815, 23.2224, 1.25 ) }
    dend_34 { pt3dadd( -13.47, -134.398, 23.5439, 0.88 ) }
    dend_34 { pt3dadd( -14.0143, -135.191, 23.7621, 0.66 ) }
    dend_34 { pt3dadd( -14.6097, -135.896, 23.9876, 0.66 ) }
    dend_34 { pt3dadd( -15.1981, -136.523, 24.1843, 0.59 ) }
    dend_34 { pt3dadd( -16.3561, -137.789, 24.5245, 0.59 ) }
    dend_34 { pt3dadd( -16.9953, -138.518, 24.6711, 0.44 ) }
    dend_34 { pt3dadd( -17.7403, -139.462, 24.7741, 0.44 ) }
    dend_34 { pt3dadd( -18.3336, -140.339, 24.78, 0.74 ) }
    dend_34 { pt3dadd( -18.7955, -141.151, 24.7393, 0.74 ) }
    dend_34 { pt3dadd( -19.1784, -141.923, 24.6605, 0.66 ) }
    dend_34 { pt3dadd( -19.646, -143.05, 24.4788, 1.03 ) }
    dend_34 { pt3dadd( -19.994, -143.944, 24.3437, 1.4 ) }
    dend_34 { pt3dadd( -20.3659, -144.948, 24.2049, 1.4 ) }
    dend_34 { pt3dadd( -20.6952, -145.818, 24.0913, 1.47 ) }
    dend_34 { pt3dadd( -21.2233, -147.195, 23.9351, 0.74 ) }
    dend_34 { pt3dadd( -21.6303, -148.268, 23.8039, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.8002, -67.5501, 18.9145, 0.44 ) }
    dend_33 { pt3dadd( -10.0601, -68.1919, 19.4747, 0.44 ) }
    dend_33 { pt3dadd( -9.62858, -68.743, 19.8667, 0.44 ) }
    dend_33 { pt3dadd( -9.33501, -69.4518, 20.252, 0.37 ) }
    dend_33 { pt3dadd( -9.0343, -70.8293, 20.8211, 0.59 ) }
    dend_33 { pt3dadd( -8.99663, -71.365, 20.9924, 0.52 ) }
    dend_33 { pt3dadd( -9.02043, -72.0523, 21.1797, 0.44 ) }
    dend_33 { pt3dadd( -9.25383, -73.1555, 21.4797, 0.44 ) }
    dend_33 { pt3dadd( -9.58452, -74.0818, 21.765, 0.44 ) }
    dend_33 { pt3dadd( -9.86507, -74.6423, 21.9825, 0.59 ) }
    dend_33 { pt3dadd( -10.2887, -75.2834, 22.3482, 0.59 ) }
    dend_33 { pt3dadd( -10.7313, -75.8277, 22.9104, 0.37 ) }
    dend_33 { pt3dadd( -11.3015, -76.4352, 23.8675, 0.59 ) }
    dend_33 { pt3dadd( -11.7828, -76.9103, 24.8498, 0.88 ) }
    dend_33 { pt3dadd( -12.0829, -77.1777, 25.498, 0.81 ) }
    dend_33 { pt3dadd( -12.6928, -77.6886, 26.8071, 1.03 ) }
    dend_33 { pt3dadd( -13.3132, -78.1994, 28.1006, 0.88 ) }
    dend_33 { pt3dadd( -13.8905, -78.6869, 29.1778, 0.44 ) }
    dend_33 { pt3dadd( -14.3805, -79.1575, 29.949, 0.44 ) }
    dend_33 { pt3dadd( -14.7102, -79.526, 30.382, 0.66 ) }
    dend_33 { pt3dadd( -15.1856, -80.0677, 30.8428, 0.66 ) }
    dend_33 { pt3dadd( -15.638, -80.5469, 31.103, 0.66 ) }
    dend_33 { pt3dadd( -16.3224, -81.2189, 31.3215, 0.66 ) }
    dend_33 { pt3dadd( -16.9229, -81.7942, 31.4651, 1.33 ) }
    dend_33 { pt3dadd( -17.1932, -82.0655, 31.5097, 1.47 ) }
    dend_33 { pt3dadd( -17.7192, -82.6025, 31.5876, 1.03 ) }
    dend_33 { pt3dadd( -18.3781, -83.2937, 31.6905, 0.81 ) }
    dend_33 { pt3dadd( -18.9331, -83.8776, 31.7909, 0.74 ) }
    dend_33 { pt3dadd( -19.5924, -84.5785, 31.9348, 0.52 ) }
    dend_33 { pt3dadd( -20.055, -85.0976, 32.054, 0.44 ) }
    dend_33 { pt3dadd( -22.7958, -91.466, 37.0212, 0.44 ) }
    dend_33 { pt3dadd( -24.5451, -98.3755, 41.6663, 0.44 ) }
    dend_33 { pt3dadd( -27.0666, -105.218, 46.0525, 0.44 ) }
    dend_33 { pt3dadd( -31.4228, -111.516, 49.8095, 0.44 ) }
    dend_33 { pt3dadd( -35.6118, -116.857, 55.033, 0.44 ) }
    dend_33 { pt3dadd( -38.9328, -122.294, 60.7533, 0.44 ) }
    dend_33 { pt3dadd( -42.493, -127.92, 66.1264, 0.44 ) }
    dend_33 { pt3dadd( -47.6991, -133.051, 70.6015, 0.44 ) }
    dend_33 { pt3dadd( -54.3954, -137.412, 73.758, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.32703, -15.4279, -3.0144, 1.47 ) }
    dend_17 { pt3dadd( 2.6982, -17.1894, -3.44085, 1.47 ) }
    dend_17 { pt3dadd( 2.05778, -19.4543, -3.81438, 1.33 ) }
    dend_17 { pt3dadd( 1.64237, -21.2578, -3.98024, 1.55 ) }
    dend_17 { pt3dadd( 1.37426, -22.7197, -3.99512, 1.55 ) }
    dend_17 { pt3dadd( 1.15268, -24.2336, -3.82729, 1.77 ) }
    dend_17 { pt3dadd( 0.90299, -26.1695, -3.40862, 1.77 ) }
    dend_17 { pt3dadd( 0.797228, -27.3613, -2.98429, 2.14 ) }
    dend_17 { pt3dadd( 0.715778, -28.355, -2.51857, 2.58 ) }
    dend_17 { pt3dadd( 0.59785, -29.6257, -1.88631, 2.36 ) }
    dend_17 { pt3dadd( 0.328993, -31.9605, -0.839869, 1.77 ) }
    dend_17 { pt3dadd( 0.046689, -33.9791, -0.150766, 1.47 ) }
    dend_17 { pt3dadd( -0.199669, -35.6762, 0.196521, 1.18 ) }
    dend_17 { pt3dadd( -0.438312, -37.4826, 0.370819, 1.11 ) }
    dend_17 { pt3dadd( -0.614787, -39.0918, 0.353464, 1.33 ) }
    dend_17 { pt3dadd( -0.783291, -41.2898, 0.0820074, 1.25 ) }
    dend_17 { pt3dadd( -0.826777, -43.2149, -0.336713, 1.47 ) }
    dend_17 { pt3dadd( -0.769395, -44.9395, -0.773168, 1.62 ) }
    dend_17 { pt3dadd( -0.681071, -46.2334, -1.10824, 2.14 ) }
    dend_17 { pt3dadd( -0.624311, -47.1261, -1.32175, 2.58 ) }
    dend_17 { pt3dadd( -0.595694, -48.4096, -1.57474, 2.43 ) }
    dend_17 { pt3dadd( -0.671351, -50.476, -1.89526, 2.14 ) }
    dend_17 { pt3dadd( -0.846908, -52.1453, -2.11591, 1.92 ) }
    dend_17 { pt3dadd( -1.15342, -53.802, -2.30374, 1.47 ) }
    dend_17 { pt3dadd( -1.70698, -55.8503, -2.51929, 1.25 ) }
    dend_17 { pt3dadd( -2.28909, -57.5406, -2.63263, 1.11 ) }
    dend_17 { pt3dadd( -2.81793, -58.8052, -2.65286, 1.4 ) }
    dend_17 { pt3dadd( -3.20215, -59.6183, -2.63376, 1.55 ) }
    dend_17 { pt3dadd( -3.80309, -60.8598, -2.54663, 1.18 ) }
    dend_17 { pt3dadd( -4.36426, -62.1265, -2.37891, 0.88 ) }
    dend_17 { pt3dadd( -4.85953, -63.4582, -2.20661, 1.18 ) }
    dend_17 { pt3dadd( -5.23912, -64.7607, -2.05064, 1.03 ) }
    dend_17 { pt3dadd( -5.54514, -65.9863, -1.89901, 1.03 ) }
    dend_17 { pt3dadd( -5.9122, -67.8032, -1.7001, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -6.06893, -68.9572, -1.60455, 1.77 ) }
    dend_17 { pt3dadd( -6.2059, -70.773, -1.53677, 1.77 ) }
    dend_17 { pt3dadd( -6.27062, -72.1714, -1.59821, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.32703, -15.4279, -3.0144, 1.77 ) }
    dend_1 { pt3dadd( 3.86326, -17.8597, -3.61064, 1.77 ) }
    dend_1 { pt3dadd( 4.10415, -19.0769, -3.88618, 1.99 ) }
    dend_1 { pt3dadd( 4.38114, -20.4766, -4.20302, 1.99 ) }
    dend_1 { pt3dadd( 4.75907, -22.3863, -4.63533, 3.17 ) }
    dend_1 { pt3dadd( 4.92931, -23.2465, -4.83007, 3.76 ) }
    dend_1 { pt3dadd( 5.22062, -24.7186, -5.16329, 4.2 ) }
    dend_1 { pt3dadd( 5.38542, -26.0212, -5.3901, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205316 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205316 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205316 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -55.2493, 114.95, -33.8986, 0.29 ) }
    dend_85 { pt3dadd( -55.3975, 115.709, -34.1233, 0.29 ) }
    dend_85 { pt3dadd( -55.6735, 116.784, -34.7051, 0.29 ) }
    dend_85 { pt3dadd( -55.8925, 117.724, -35.3065, 0.29 ) }
    dend_85 { pt3dadd( -56.0916, 118.713, -36.0213, 0.29 ) }
    dend_85 { pt3dadd( -56.2222, 119.41, -36.5755, 0.29 ) }
    dend_85 { pt3dadd( -56.4195, 120.551, -37.4974, 0.29 ) }
    dend_85 { pt3dadd( -56.7748, 122.556, -39.2995, 0.29 ) }
    dend_85 { pt3dadd( -56.8887, 123.166, -39.8831, 0.37 ) }
    dend_85 { pt3dadd( -57.0451, 123.897, -40.6026, 0.37 ) }
    dend_85 { pt3dadd( -57.2735, 124.795, -41.5075, 0.37 ) }
    dend_85 { pt3dadd( -57.461, 125.532, -42.2589, 0.22 ) }
    dend_85 { pt3dadd( -57.6557, 126.307, -43.0185, 0.22 ) }
    dend_85 { pt3dadd( -57.8838, 127.192, -43.6975, 1.03 ) }
    dend_85 { pt3dadd( -57.9456, 127.354, -43.8117, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -55.2493, 114.95, -33.8986, 0.52 ) }
    dend_80 { pt3dadd( -56.4438, 116.299, -33.3223, 0.52 ) }
    dend_80 { pt3dadd( -56.9789, 117.012, -33.0228, 0.52 ) }
    dend_80 { pt3dadd( -57.5009, 117.833, -32.7188, 0.44 ) }
    dend_80 { pt3dadd( -57.7268, 118.251, -32.5877, 0.59 ) }
    dend_80 { pt3dadd( -57.96, 118.757, -32.4508, 0.59 ) }
    dend_80 { pt3dadd( -58.3782, 119.727, -32.1881, 0.37 ) }
    dend_80 { pt3dadd( -58.8571, 120.982, -31.9381, 0.37 ) }
    dend_80 { pt3dadd( -59.134, 121.794, -31.7687, 0.37 ) }
    dend_80 { pt3dadd( -59.414, 122.612, -31.5894, 0.37 ) }
    dend_80 { pt3dadd( -59.726, 123.508, -31.3694, 0.29 ) }
    dend_80 { pt3dadd( -60.0224, 124.313, -31.1556, 0.29 ) }
    dend_80 { pt3dadd( -60.3812, 125.157, -30.9093, 0.81 ) }
    dend_80 { pt3dadd( -60.5625, 125.495, -30.8052, 0.81 ) }
    dend_80 { pt3dadd( -60.8872, 126.006, -30.6335, 0.74 ) }
    dend_80 { pt3dadd( -61.358, 126.65, -30.4457, 0.74 ) }
    dend_80 { pt3dadd( -61.8001, 127.154, -30.3578, 0.96 ) }
    dend_80 { pt3dadd( -62.2748, 127.622, -30.3506, 0.96 ) }
    dend_80 { pt3dadd( -62.6046, 127.931, -30.3983, 0.59 ) }
    dend_80 { pt3dadd( -63.2589, 128.573, -30.6005, 0.29 ) }
    dend_80 { pt3dadd( -63.874, 129.224, -30.912, 0.29 ) }
    dend_80 { pt3dadd( -64.544, 129.986, -31.3494, 0.29 ) }
    dend_80 { pt3dadd( -65.012, 130.562, -31.6828, 0.22 ) }
    dend_80 { pt3dadd( -65.7097, 131.458, -32.1996, 0.22 ) }
    dend_80 { pt3dadd( -66.2524, 132.195, -32.6163, 0.74 ) }
    dend_80 { pt3dadd( -66.8559, 133.075, -33.0595, 0.37 ) }
    dend_80 { pt3dadd( -67.3251, 133.85, -33.3776, 0.37 ) }
    dend_80 { pt3dadd( -67.7443, 134.618, -33.6518, 0.81 ) }
    dend_80 { pt3dadd( -68.0454, 135.138, -33.8367, 1.18 ) }
    dend_80 { pt3dadd( -68.3403, 135.546, -33.9739, 1.18 ) }
    dend_80 { pt3dadd( -69.1172, 136.419, -34.289, 0.29 ) }
    dend_80 { pt3dadd( -69.9472, 137.286, -34.6011, 0.29 ) }
    dend_80 { pt3dadd( -70.4832, 137.805, -34.8142, 0.29 ) }
    dend_80 { pt3dadd( -71.0385, 138.3, -35.0487, 0.29 ) }
    dend_80 { pt3dadd( -71.8686, 138.979, -35.385, 0.74 ) }
    dend_80 { pt3dadd( -72.4795, 139.379, -35.6138, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 101.647, 33.013, 36.547, 0.29 ) }
    dend_71 { pt3dadd( 111.801, 33.9487, 43.4122, 0.29 ) }
    dend_71 { pt3dadd( 121.637, 34.7063, 50.7466, 0.29 ) }
    dend_71 { pt3dadd( 131.99, 36.584, 57.0899, 0.29 ) }
    dend_71 { pt3dadd( 141.739, 40.0475, 63.688, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 101.647, 33.013, 36.547, 0.29 ) }
    dend_70 { pt3dadd( 113.678, 32.8334, 42.681, 0.29 ) }
    dend_70 { pt3dadd( 125.571, 34.9684, 48.684, 0.29 ) }
    dend_70 { pt3dadd( 138.221, 37.9346, 52.3105, 0.29 ) }
    dend_70 { pt3dadd( 149.703, 42.297, 57.8207, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 72.592, 37.3305, 0.817781, 0.44 ) }
    dend_58 { pt3dadd( 73.895, 37.3018, 0.426804, 0.44 ) }
    dend_58 { pt3dadd( 74.3859, 37.3614, 0.20735, 0.37 ) }
    dend_58 { pt3dadd( 75.2607, 37.5572, -0.233148, 0.59 ) }
    dend_58 { pt3dadd( 75.7368, 37.6874, -0.479804, 0.74 ) }
    dend_58 { pt3dadd( 76.9562, 38.06, -1.09394, 0.37 ) }
    dend_58 { pt3dadd( 78.2111, 38.4771, -1.69592, 0.29 ) }
    dend_58 { pt3dadd( 78.9559, 38.8167, -2.08825, 0.29 ) }
    dend_58 { pt3dadd( 79.4868, 39.1032, -2.34341, 0.88 ) }
    dend_58 { pt3dadd( 79.6814, 39.2256, -2.43532, 1.11 ) }
    dend_58 { pt3dadd( 80.1612, 39.5476, -2.63452, 1.11 ) }
    dend_58 { pt3dadd( 80.6067, 39.8445, -2.73191, 1.18 ) }
    dend_58 { pt3dadd( 81.4212, 40.2743, -2.75705, 0.74 ) }
    dend_58 { pt3dadd( 81.9734, 40.5518, -2.7459, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 72.592, 37.3305, 0.817781, 0.29 ) }
    dend_55 { pt3dadd( 73.5042, 38.0493, 1.36242, 0.29 ) }
    dend_55 { pt3dadd( 73.9348, 38.3832, 1.63678, 0.29 ) }
    dend_55 { pt3dadd( 74.4864, 38.8108, 1.98819, 0.66 ) }
    dend_55 { pt3dadd( 75.0818, 39.2725, 2.36756, 0.29 ) }
    dend_55 { pt3dadd( 75.5276, 39.6182, 2.6516, 0.29 ) }
    dend_55 { pt3dadd( 76.4212, 40.3109, 3.22087, 0.29 ) }
    dend_55 { pt3dadd( 76.9372, 40.6531, 3.58505, 0.29 ) }
    dend_55 { pt3dadd( 84.4876, 46.515, 7.31152, 0.29 ) }
    dend_55 { pt3dadd( 91.0956, 52.5976, 12.2319, 0.29 ) }
    dend_55 { pt3dadd( 96.3267, 59.9974, 16.8993, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 102.608, 66.6463, 21.4673, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -80.8272, -59.0179, -60.2468, 0.81 ) }
    dend_48 { pt3dadd( -81.1171, -59.9369, -60.9826, 0.81 ) }
    dend_48 { pt3dadd( -81.1703, -60.0507, -61.0826, 0.81 ) }
    dend_48 { pt3dadd( -81.8779, -61.169, -62.1028, 0.37 ) }
    dend_48 { pt3dadd( -82.0951, -61.4512, -62.3526, 0.52 ) }
    dend_48 { pt3dadd( -82.3065, -61.7169, -62.5818, 0.66 ) }
    dend_48 { pt3dadd( -82.5521, -62.0314, -62.8409, 0.66 ) }
    dend_48 { pt3dadd( -83.1039, -62.6352, -63.3371, 0.37 ) }
    dend_48 { pt3dadd( -83.4504, -63.0123, -63.6597, 0.37 ) }
    dend_48 { pt3dadd( -83.9853, -63.5697, -64.147, 0.37 ) }
    dend_48 { pt3dadd( -84.3105, -63.9155, -64.46, 0.66 ) }
    dend_48 { pt3dadd( -84.8316, -64.4594, -64.9554, 1.11 ) }
    dend_48 { pt3dadd( -85.0792, -64.7018, -65.1742, 1.25 ) }
    dend_48 { pt3dadd( -85.8918, -65.4662, -65.9509, 0.22 ) }
    dend_48 { pt3dadd( -86.2179, -65.7406, -66.2814, 0.29 ) }
    dend_48 { pt3dadd( -86.4942, -65.9416, -66.5694, 0.59 ) }
    dend_48 { pt3dadd( -86.807, -66.1415, -66.8801, 0.81 ) }
    dend_48 { pt3dadd( -87.1381, -66.359, -67.2141, 0.81 ) }
    dend_48 { pt3dadd( -88.0192, -67.0086, -68.0483, 0.37 ) }
    dend_48 { pt3dadd( -88.2888, -67.2292, -68.2752, 0.37 ) }
    dend_48 { pt3dadd( -88.747, -67.6958, -68.6525, 0.59 ) }
    dend_48 { pt3dadd( -88.9237, -67.9035, -68.7864, 0.81 ) }
    dend_48 { pt3dadd( -89.5871, -68.7565, -69.2141, 0.44 ) }
    dend_48 { pt3dadd( -90.0642, -69.3965, -69.4439, 0.44 ) }
    dend_48 { pt3dadd( -90.4627, -69.9316, -69.5719, 0.37 ) }
    dend_48 { pt3dadd( -90.9517, -70.5971, -69.7058, 0.37 ) }
    dend_48 { pt3dadd( -91.315, -71.085, -69.8041, 0.66 ) }
    dend_48 { pt3dadd( -91.6005, -71.445, -69.8959, 0.81 ) }
    dend_48 { pt3dadd( -91.8805, -71.7704, -69.9761, 0.81 ) }
    dend_48 { pt3dadd( -92.3959, -72.3415, -70.1372, 0.29 ) }
    dend_48 { pt3dadd( -92.6945, -72.6491, -70.2233, 0.96 ) }
    dend_48 { pt3dadd( -93.4271, -73.3479, -70.3858, 0.29 ) }
    dend_48 { pt3dadd( -93.901, -73.7985, -70.4683, 0.29 ) }
    dend_48 { pt3dadd( -94.3788, -74.2381, -70.5179, 0.44 ) }
    dend_48 { pt3dadd( -94.6503, -74.4773, -70.5399, 0.44 ) }
    dend_48 { pt3dadd( -95.0954, -74.8496, -70.5502, 0.29 ) }
    dend_48 { pt3dadd( -95.3384, -75.0629, -70.5683, 0.59 ) }
    dend_48 { pt3dadd( -95.7159, -75.4224, -70.5962, 0.59 ) }
    dend_48 { pt3dadd( -96.0696, -75.7977, -70.641, 0.52 ) }
    dend_48 { pt3dadd( -96.6171, -76.3702, -70.7564, 0.37 ) }
    dend_48 { pt3dadd( -96.9627, -76.732, -70.849, 0.88 ) }
    dend_48 { pt3dadd( -97.6056, -77.4129, -71.0436, 0.44 ) }
    dend_48 { pt3dadd( -97.9671, -77.8061, -71.1508, 0.59 ) }
    dend_48 { pt3dadd( -98.2636, -78.129, -71.234, 0.59 ) }
    dend_48 { pt3dadd( -98.624, -78.5139, -71.3123, 0.59 ) }
    dend_48 { pt3dadd( -99.0028, -78.8917, -71.3563, 0.37 ) }
    dend_48 { pt3dadd( -99.303, -79.1442, -71.3693, 0.37 ) }
    dend_48 { pt3dadd( -99.7954, -79.4759, -71.3471, 0.29 ) }
    dend_48 { pt3dadd( -99.9812, -79.5799, -71.3267, 0.29 ) }
    dend_48 { pt3dadd( -100.461, -79.8234, -71.2384, 0.88 ) }
    dend_48 { pt3dadd( -100.791, -79.9826, -71.1524, 1.18 ) }
    dend_48 { pt3dadd( -101.34, -80.2085, -71.0003, 0.29 ) }
    dend_48 { pt3dadd( -101.739, -80.3543, -70.8965, 0.29 ) }
    dend_48 { pt3dadd( -102.331, -80.5826, -70.7757, 0.29 ) }
    dend_48 { pt3dadd( -102.602, -80.7014, -70.729, 0.88 ) }
    dend_48 { pt3dadd( -102.865, -80.8336, -70.6958, 0.88 ) }
    dend_48 { pt3dadd( -103.721, -81.3104, -70.6543, 0.22 ) }
    dend_48 { pt3dadd( -104.007, -81.4872, -70.6688, 0.22 ) }
    dend_48 { pt3dadd( -104.626, -81.874, -70.7423, 0.59 ) }
    dend_48 { pt3dadd( -104.762, -81.9609, -70.7674, 0.59 ) }
    dend_48 { pt3dadd( -105.309, -82.3103, -70.8802, 0.22 ) }
    dend_48 { pt3dadd( -105.623, -82.5175, -70.9522, 0.44 ) }
    dend_48 { pt3dadd( -106.065, -82.8508, -71.0647, 0.22 ) }
    dend_48 { pt3dadd( -106.675, -83.3025, -71.214, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -80.8272, -59.0179, -60.2468, 0.29 ) }
    dend_47 { pt3dadd( -82.2676, -58.738, -60.6031, 0.29 ) }
    dend_47 { pt3dadd( -83.1826, -58.5957, -60.7711, 0.29 ) }
    dend_47 { pt3dadd( -84.0913, -58.4938, -60.9322, 0.66 ) }
    dend_47 { pt3dadd( -84.5322, -58.4684, -61.0058, 0.66 ) }
    dend_47 { pt3dadd( -86.103, -58.4204, -61.2413, 0.29 ) }
    dend_47 { pt3dadd( -86.7834, -58.4133, -61.3447, 0.29 ) }
    dend_47 { pt3dadd( -87.3061, -58.4176, -61.371, 0.66 ) }
    dend_47 { pt3dadd( -87.8116, -58.4382, -61.382, 0.66 ) }
    dend_47 { pt3dadd( -89.5539, -58.5402, -61.4058, 0.29 ) }
    dend_47 { pt3dadd( -90.1627, -58.5614, -61.4309, 0.52 ) }
    dend_47 { pt3dadd( -90.733, -58.5611, -61.4813, 0.52 ) }
    dend_47 { pt3dadd( -92.2746, -58.4539, -61.6486, 0.22 ) }
    dend_47 { pt3dadd( -92.9778, -58.3613, -61.7356, 0.59 ) }
    dend_47 { pt3dadd( -93.4254, -58.2749, -61.7829, 0.74 ) }
    dend_47 { pt3dadd( -94.2799, -58.061, -61.8859, 0.29 ) }
    dend_47 { pt3dadd( -94.7048, -57.94, -61.9484, 0.29 ) }
    dend_47 { pt3dadd( -95.2508, -57.7593, -62.0422, 0.96 ) }
    dend_47 { pt3dadd( -95.7608, -57.559, -62.1909, 0.96 ) }
    dend_47 { pt3dadd( -97.1551, -56.9741, -62.5599, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -21.6303, -148.268, 23.8039, 0.29 ) }
    dend_40 { pt3dadd( -21.4249, -148.274, 24.4776, 0.29 ) }
    dend_40 { pt3dadd( -20.931, -148.333, 25.9341, 0.29 ) }
    dend_40 { pt3dadd( -20.5799, -148.414, 26.9719, 0.59 ) }
    dend_40 { pt3dadd( -20.1193, -148.626, 28.417, 0.66 ) }
    dend_40 { pt3dadd( -19.4653, -149.08, 30.4316, 0.59 ) }
    dend_40 { pt3dadd( -19.0127, -149.534, 31.74, 0.29 ) }
    dend_40 { pt3dadd( -18.6854, -149.978, 32.4955, 0.52 ) }
    dend_40 { pt3dadd( -18.4957, -150.509, 32.7531, 0.66 ) }
    dend_40 { pt3dadd( -18.2273, -151.691, 32.8009, 0.37 ) }
    dend_40 { pt3dadd( -17.914, -153.211, 32.6568, 0.29 ) }
    dend_40 { pt3dadd( -17.6841, -154.416, 32.4553, 0.29 ) }
    dend_40 { pt3dadd( -17.477, -155.614, 32.1941, 0.29 ) }
    dend_40 { pt3dadd( -17.2748, -156.701, 31.9393, 0.29 ) }
    dend_40 { pt3dadd( -16.9744, -157.984, 31.6274, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -16.6604, -159.08, 31.3598, 0.29 ) }
    dend_40 { pt3dadd( -12.5573, -166.038, 37.3247, 0.29 ) }
    dend_40 { pt3dadd( -8.95285, -171.758, 44.8037, 0.29 ) }
    dend_40 { pt3dadd( -3.35171, -177.701, 50.7025, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -21.6303, -148.268, 23.8039, 0.74 ) }
    dend_35 { pt3dadd( -22.1969, -148.951, 23.5465, 0.74 ) }
    dend_35 { pt3dadd( -22.6893, -149.656, 23.3225, 0.52 ) }
    dend_35 { pt3dadd( -23.0623, -150.254, 23.1601, 0.52 ) }
    dend_35 { pt3dadd( -23.6424, -151.347, 22.9186, 0.59 ) }
    dend_35 { pt3dadd( -23.8728, -151.904, 22.8487, 0.96 ) }
    dend_35 { pt3dadd( -24.0448, -152.507, 22.7968, 1.18 ) }
    dend_35 { pt3dadd( -24.0967, -153.019, 22.7237, 1.18 ) }
    dend_35 { pt3dadd( -24.066, -153.502, 22.6527, 0.96 ) }
    dend_35 { pt3dadd( -23.9232, -154.209, 22.5009, 0.66 ) }
    dend_35 { pt3dadd( -23.5957, -155.208, 22.1109, 0.52 ) }
    dend_35 { pt3dadd( -23.2307, -156.1, 21.6919, 0.52 ) }
    dend_35 { pt3dadd( -22.7651, -157.042, 21.1508, 0.29 ) }
    dend_35 { pt3dadd( -22.5565, -157.394, 20.9018, 0.37 ) }
    dend_35 { pt3dadd( -21.985, -158.206, 20.1599, 0.29 ) }
    dend_35 { pt3dadd( -21.3711, -158.932, 19.216, 0.29 ) }
    dend_35 { pt3dadd( -21.5496, -166.968, 17.391, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -6.27062, -72.1714, -1.59821, 0.37 ) }
    dend_31 { pt3dadd( -9.81839, -73.6261, -1.32905, 0.37 ) }
    dend_31 { pt3dadd( -11.5029, -74.3598, -0.661867, 0.37 ) }
    dend_31 { pt3dadd( -12.7481, -74.9255, -0.00701427, 0.37 ) }
    dend_31 { pt3dadd( -13.5936, -75.32, 0.45368, 0.37 ) }
    dend_31 { pt3dadd( -14.6596, -75.8294, 1.0769, 0.59 ) }
    dend_31 { pt3dadd( -15.6928, -76.3375, 1.69196, 0.74 ) }
    dend_31 { pt3dadd( -16.4889, -76.7221, 2.31715, 0.52 ) }
    dend_31 { pt3dadd( -17.0904, -77.0184, 2.7961, 0.59 ) }
    dend_31 { pt3dadd( -17.6257, -77.3384, 3.18757, 0.74 ) }
    dend_31 { pt3dadd( -18.5466, -77.8963, 3.7466, 0.52 ) }
    dend_31 { pt3dadd( -19.1258, -78.2359, 4.02546, 0.52 ) }
    dend_31 { pt3dadd( -19.6699, -78.5291, 4.22986, 0.74 ) }
    dend_31 { pt3dadd( -20.2808, -78.8398, 4.43066, 0.74 ) }
    dend_31 { pt3dadd( -20.8641, -79.1458, 4.611, 0.52 ) }
    dend_31 { pt3dadd( -21.7094, -79.585, 4.86029, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.27062, -72.1714, -1.59821, 0.88 ) }
    dend_18 { pt3dadd( -6.53642, -73.5272, -1.60733, 0.88 ) }
    dend_18 { pt3dadd( -7.02408, -75.2343, -1.42609, 0.66 ) }
    dend_18 { pt3dadd( -7.47402, -76.4347, -0.971351, 0.74 ) }
    dend_18 { pt3dadd( -7.85878, -77.2335, -0.544759, 0.88 ) }
    dend_18 { pt3dadd( -8.54388, -78.4443, 0.169325, 0.88 ) }
    dend_18 { pt3dadd( -8.98661, -79.1771, 0.603335, 1.03 ) }
    dend_18 { pt3dadd( -9.52582, -79.9782, 1.15832, 1.03 ) }
    dend_18 { pt3dadd( -10.7401, -81.8432, 2.47074, 1.03 ) }
    dend_18 { pt3dadd( -11.4247, -83.0148, 3.22424, 1.03 ) }
    dend_18 { pt3dadd( -11.9761, -84.196, 3.85445, 0.88 ) }
    dend_18 { pt3dadd( -12.2661, -85.2069, 4.22942, 0.88 ) }
    dend_18 { pt3dadd( -12.3215, -86.1469, 4.45112, 0.88 ) }
    dend_18 { pt3dadd( -12.0149, -87.9657, 4.57564, 1.25 ) }
    dend_18 { pt3dadd( -11.7984, -88.6257, 4.56366, 1.55 ) }
    dend_18 { pt3dadd( -11.3723, -89.5516, 4.56817, 1.55 ) }
    dend_18 { pt3dadd( -10.6454, -90.8321, 4.6873, 1.55 ) }
    dend_18 { pt3dadd( -10.113, -91.6279, 4.85691, 1.55 ) }
    dend_18 { pt3dadd( -9.05286, -93.0015, 5.34342, 1.03 ) }
    dend_18 { pt3dadd( -8.16357, -93.9799, 5.86957, 1.03 ) }
    dend_18 { pt3dadd( -7.39023, -94.7484, 6.38097, 0.81 ) }
    dend_18 { pt3dadd( -6.11309, -95.8857, 7.29966, 0.81 ) }
    dend_18 { pt3dadd( -5.19622, -96.6295, 7.97826, 1.03 ) }
    dend_18 { pt3dadd( -4.30477, -97.2762, 8.59327, 1.03 ) }
    dend_18 { pt3dadd( -3.29344, -97.9456, 9.21274, 1.03 ) }
    dend_18 { pt3dadd( -2.47129, -98.4942, 9.61999, 0.88 ) }
    dend_18 { pt3dadd( -1.22269, -99.402, 10.1302, 0.88 ) }
    dend_18 { pt3dadd( -0.605188, -99.8913, 10.323, 0.96 ) }
    dend_18 { pt3dadd( 0.10134, -100.526, 10.5079, 0.96 ) }
    dend_18 { pt3dadd( 1.05722, -101.496, 10.7256, 1.33 ) }
    dend_18 { pt3dadd( 1.55998, -102.08, 10.8144, 1.62 ) }
    dend_18 { pt3dadd( 1.97779, -102.612, 10.8873, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.38542, -26.0212, -5.3901, 0.66 ) }
    dend_16 { pt3dadd( 5.54841, -29.8885, -2.29327, 0.66 ) }
    dend_16 { pt3dadd( 5.50765, -31.1551, -1.41475, 0.88 ) }
    dend_16 { pt3dadd( 5.42027, -33.6676, 0.0974969, 1.03 ) }
    dend_16 { pt3dadd( 5.41611, -34.8645, 0.753609, 1.03 ) }
    dend_16 { pt3dadd( 5.45708, -35.9189, 1.30821, 1.03 ) }
    dend_16 { pt3dadd( 5.57195, -37.2199, 1.98553, 0.37 ) }
    dend_16 { pt3dadd( 5.69984, -38.6188, 2.55094, 0.37 ) }
    dend_16 { pt3dadd( 6.03724, -40.0137, 3.09138, 0.59 ) }
    dend_16 { pt3dadd( 6.71563, -41.2086, 3.54188, 0.81 ) }
    dend_16 { pt3dadd( 7.31209, -41.8828, 3.87318, 0.81 ) }
    dend_16 { pt3dadd( 8.00798, -42.4758, 4.28049, 0.52 ) }
    dend_16 { pt3dadd( 8.66173, -42.9555, 4.69811, 0.81 ) }
    dend_16 { pt3dadd( 9.62125, -43.6467, 5.36971, 1.25 ) }
    dend_16 { pt3dadd( 9.99551, -43.9931, 5.68776, 1.69 ) }
    dend_16 { pt3dadd( 10.4142, -44.6105, 6.16092, 1.69 ) }
    dend_16 { pt3dadd( 10.832, -46.1057, 7.00089, 0.96 ) }
    dend_16 { pt3dadd( 10.8824, -47.08, 7.39676, 0.66 ) }
    dend_16 { pt3dadd( 10.8514, -47.8409, 7.65481, 0.81 ) }
    dend_16 { pt3dadd( 10.7471, -49.4359, 8.17076, 0.44 ) }
    dend_16 { pt3dadd( 10.7294, -50.703, 8.60623, 0.44 ) }
    dend_16 { pt3dadd( 10.7977, -51.7019, 8.97338, 0.44 ) }
    dend_16 { pt3dadd( 11.0002, -52.6002, 9.42015, 0.88 ) }
    dend_16 { pt3dadd( 11.5158, -53.77, 10.3035, 1.25 ) }
    dend_16 { pt3dadd( 12.209, -54.8605, 11.3647, 0.66 ) }
    dend_16 { pt3dadd( 12.8673, -55.6876, 12.2787, 0.52 ) }
    dend_16 { pt3dadd( 13.275, -56.171, 12.8191, 0.52 ) }
    dend_16 { pt3dadd( 14.2614, -57.4205, 14.1562, 0.74 ) }
    dend_16 { pt3dadd( 15.0566, -58.5365, 15.2225, 1.25 ) }
    dend_16 { pt3dadd( 15.3667, -59.016, 15.5971, 1.25 ) }
    dend_16 { pt3dadd( 15.8647, -59.8426, 16.1044, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 16.4827, -60.9138, 16.5761, 0.44 ) }
    dend_16 { pt3dadd( 17.2991, -62.3337, 17.0026, 0.37 ) }
    dend_16 { pt3dadd( 17.8076, -63.1713, 17.1346, 0.37 ) }
    dend_16 { pt3dadd( 18.3566, -64.0117, 17.2019, 0.96 ) }
    dend_16 { pt3dadd( 18.7883, -64.6364, 17.2381, 1.33 ) }
    dend_16 { pt3dadd( 20.0962, -66.3343, 17.3256, 0.29 ) }
    dend_16 { pt3dadd( 20.5847, -66.8819, 17.3523, 0.29 ) }
    dend_16 { pt3dadd( 21.0864, -67.3743, 17.3672, 0.29 ) }
    dend_16 { pt3dadd( 21.2734, -67.557, 17.3743, 0.44 ) }
    dend_16 { pt3dadd( 26.0192, -77.7473, 21.6443, 0.44 ) }
    dend_16 { pt3dadd( 32.4477, -87.411, 24.8732, 0.44 ) }
    dend_16 { pt3dadd( 37.8317, -97.9513, 26.9011, 0.44 ) }
    dend_16 { pt3dadd( 43.7334, -108.095, 29.5275, 0.44 ) }
    dend_16 { pt3dadd( 49.0348, -118.328, 32.952, 0.44 ) }
    dend_16 { pt3dadd( 54.0497, -128.948, 35.441, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.38542, -26.0212, -5.3901, 1.03 ) }
    dend_11 { pt3dadd( 5.34454, -27.9226, -5.68993, 1.03 ) }
    dend_11 { pt3dadd( 5.50597, -29.8148, -5.96105, 1.03 ) }
    dend_11 { pt3dadd( 5.77673, -31.1849, -6.1409, 0.96 ) }
    dend_11 { pt3dadd( 6.14064, -32.4797, -6.29965, 0.96 ) }
    dend_11 { pt3dadd( 6.59439, -33.7319, -6.44262, 0.96 ) }
    dend_11 { pt3dadd( 6.96669, -34.5758, -6.49846, 1.18 ) }
    dend_11 { pt3dadd( 7.76066, -35.7156, -6.4326, 1.47 ) }
    dend_11 { pt3dadd( 8.58844, -36.6208, -6.2617, 2.21 ) }
    dend_11 { pt3dadd( 8.94343, -36.9758, -6.15208, 2.21 ) }
    dend_11 { pt3dadd( 9.49143, -37.556, -5.90578, 1.99 ) }
    dend_11 { pt3dadd( 10.4318, -38.7082, -5.33592, 1.33 ) }
    dend_11 { pt3dadd( 11.256, -39.9989, -4.68685, 0.88 ) }
    dend_11 { pt3dadd( 11.7402, -41.0468, -4.17025, 0.74 ) }
    dend_11 { pt3dadd( 12.0115, -42.0439, -3.73456, 0.74 ) }
    dend_11 { pt3dadd( 12.1657, -43.2458, -3.29015, 1.33 ) }
    dend_11 { pt3dadd( 12.1852, -43.9786, -3.07263, 1.62 ) }
    dend_11 { pt3dadd( 12.1555, -44.7811, -2.89679, 1.92 ) }
    dend_11 { pt3dadd( 12.1097, -45.6407, -2.78018, 1.69 ) }
    dend_11 { pt3dadd( 12.1056, -47.2747, -2.66155, 1.33 ) }
    dend_11 { pt3dadd( 12.2319, -48.9253, -2.63114, 1.03 ) }
    dend_11 { pt3dadd( 12.4207, -50.057, -2.66396, 0.88 ) }
    dend_11 { pt3dadd( 12.7019, -51.0989, -2.7252, 1.03 ) }
    dend_11 { pt3dadd( 13.188, -52.456, -2.84005, 1.03 ) }
    dend_11 { pt3dadd( 13.7848, -53.8116, -3.0004, 1.03 ) }
    dend_11 { pt3dadd( 14.353, -54.9602, -3.19621, 1.33 ) }
    dend_11 { pt3dadd( 14.772, -55.8229, -3.40123, 1.69 ) }
    dend_11 { pt3dadd( 15.2182, -56.8709, -3.71055, 1.47 ) }
    dend_11 { pt3dadd( 15.4633, -57.6058, -3.96982, 1.03 ) }
    dend_11 { pt3dadd( 15.7203, -58.7271, -4.41205, 0.96 ) }
    dend_11 { pt3dadd( 15.8624, -59.7502, -4.86535, 0.96 ) }
    dend_11 { pt3dadd( 15.9446, -61.0043, -5.44794, 1.4 ) }
    dend_11 { pt3dadd( 15.9705, -62.3363, -6.05972, 1.4 ) }
    dend_11 { pt3dadd( 15.9845, -63.4997, -6.58454, 1.55 ) }
    dend_11 { pt3dadd( 16.0209, -64.1327, -6.84514, 1.77 ) }
    dend_11 { pt3dadd( 16.1656, -65.3494, -7.27871, 0.96 ) }
    dend_11 { pt3dadd( 16.3939, -66.4422, -7.57948, 0.66 ) }
    dend_11 { pt3dadd( 16.7327, -67.47, -7.72632, 0.66 ) }
    dend_11 { pt3dadd( 17.22, -68.4588, -7.73935, 0.96 ) }
    dend_11 { pt3dadd( 17.868, -69.4343, -7.65402, 1.11 ) }
    dend_11 { pt3dadd( 18.2199, -69.8589, -7.59366, 1.4 ) }
    dend_11 { pt3dadd( 18.5449, -70.1943, -7.53856, 1.4 ) }
    dend_11 { pt3dadd( 19.2281, -70.8914, -7.42613, 1.4 ) }
    dend_11 { pt3dadd( 20.0342, -71.8013, -7.32118, 0.66 ) }
    dend_11 { pt3dadd( 20.388, -72.2895, -7.31188, 0.52 ) }
    dend_11 { pt3dadd( 20.7834, -72.9859, -7.35165, 0.52 ) }
    dend_11 { pt3dadd( 21.2906, -74.1275, -7.42302, 0.81 ) }
    dend_11 { pt3dadd( 21.7344, -75.4062, -7.45301, 1.03 ) }
    dend_11 { pt3dadd( 21.9479, -76.2509, -7.4661, 1.03 ) }
    dend_11 { pt3dadd( 22.1376, -77.3914, -7.45207, 1.03 ) }
    dend_11 { pt3dadd( 22.2608, -78.5261, -7.49152, 1.03 ) }
    dend_11 { pt3dadd( 22.3448, -79.705, -7.57636, 0.88 ) }
    dend_11 { pt3dadd( 22.4405, -81.1428, -7.78393, 1.03 ) }
    dend_11 { pt3dadd( 22.5532, -82.4226, -8.05253, 0.52 ) }
    dend_11 { pt3dadd( 22.7055, -83.6311, -8.40085, 0.52 ) }
    dend_11 { pt3dadd( 22.9737, -85.3874, -9.08954, 0.88 ) }
    dend_11 { pt3dadd( 23.0992, -86.1024, -9.44314, 1.11 ) }
    dend_11 { pt3dadd( 23.3032, -87.2325, -10.0902, 0.59 ) }
    dend_11 { pt3dadd( 23.3864, -87.7114, -10.3635, 0.59 ) }
    dend_11 { pt3dadd( 23.5461, -88.7911, -10.8275, 0.52 ) }
    dend_11 { pt3dadd( 23.6379, -89.9466, -11.0849, 0.52 ) }
    dend_11 { pt3dadd( 23.5914, -90.8896, -11.0161, 1.11 ) }
    dend_11 { pt3dadd( 23.4502, -91.6883, -10.8185, 1.25 ) }
    dend_11 { pt3dadd( 23.123, -92.8969, -10.3594, 1.18 ) }
    dend_11 { pt3dadd( 22.7565, -94.0785, -9.83308, 0.52 ) }
    dend_11 { pt3dadd( 22.4975, -94.9008, -9.40154, 0.52 ) }
    dend_11 { pt3dadd( 22.1978, -96.0283, -8.82452, 0.52 ) }
    dend_11 { pt3dadd( 22.1104, -96.4529, -8.64815, 0.81 ) }
    dend_11 { pt3dadd( 22.0057, -97.2303, -8.43435, 0.74 ) }
    dend_11 { pt3dadd( 21.9052, -98.2298, -8.31795, 0.74 ) }
    dend_11 { pt3dadd( 21.7975, -99.2192, -8.30844, 1.03 ) }
    dend_11 { pt3dadd( 21.5996, -100.525, -8.40895, 0.66 ) }
    dend_11 { pt3dadd( 21.4105, -101.385, -8.52439, 0.52 ) }
    dend_11 { pt3dadd( 21.0843, -102.374, -8.70771, 1.11 ) }
    dend_11 { pt3dadd( 20.7262, -103.198, -8.95184, 1.11 ) }
    dend_11 { pt3dadd( 20.1465, -104.362, -9.40357, 0.81 ) }
    dend_11 { pt3dadd( 19.5183, -105.572, -9.97553, 0.66 ) }
    dend_11 { pt3dadd( 19.0902, -106.42, -10.4052, 0.88 ) }
    dend_11 { pt3dadd( 18.5839, -107.576, -11.0478, 0.66 ) }
    dend_11 { pt3dadd( 18.0133, -109.099, -12.0463, 0.59 ) }
    dend_11 { pt3dadd( 17.71, -110.095, -12.7866, 0.88 ) }
    dend_11 { pt3dadd( 17.4953, -110.966, -13.4845, 1.18 ) }
    dend_11 { pt3dadd( 17.3548, -111.596, -13.9961, 0.96 ) }
    dend_11 { pt3dadd( 17.1805, -112.429, -14.6748, 0.96 ) }
    dend_11 { pt3dadd( 16.8683, -113.952, -15.8211, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 16.7538, -114.455, -16.1545, 0.81 ) }
    dend_11 { pt3dadd( 16.5275, -115.44, -16.7423, 0.66 ) }
    dend_11 { pt3dadd( 16.3627, -116.196, -17.0694, 0.66 ) }
    dend_11 { pt3dadd( 16.1822, -117.134, -17.3, 0.96 ) }
    dend_11 { pt3dadd( 16.0141, -118.296, -17.1938, 0.88 ) }
    dend_11 { pt3dadd( 15.9224, -119.32, -16.8714, 0.88 ) }
    dend_11 { pt3dadd( 15.8546, -120.213, -16.5297, 0.37 ) }
    dend_11 { pt3dadd( 15.7739, -121.848, -15.85, 1.03 ) }
    dend_11 { pt3dadd( 15.7285, -122.709, -15.5132, 1.03 ) }
    dend_11 { pt3dadd( 15.5517, -124.611, -14.8255, 0.44 ) }
    dend_11 { pt3dadd( 15.3985, -125.989, -14.4818, 0.44 ) }
    dend_11 { pt3dadd( 15.3283, -126.787, -14.4663, 0.74 ) }
    dend_11 { pt3dadd( 15.3185, -127.607, -14.7224, 0.74 ) }
    dend_11 { pt3dadd( 15.3924, -128.738, -15.3694, 0.44 ) }
    dend_11 { pt3dadd( 15.5092, -129.643, -15.9911, 0.66 ) }
    dend_11 { pt3dadd( 15.7491, -130.945, -16.9857, 0.44 ) }
    dend_11 { pt3dadd( 16.1467, -132.808, -18.4189, 0.88 ) }
    dend_11 { pt3dadd( 16.6163, -134.854, -19.9091, 0.52 ) }
    dend_11 { pt3dadd( 16.8734, -135.897, -20.6458, 0.74 ) }
    dend_11 { pt3dadd( 17.2463, -137.3, -21.5944, 1.33 ) }
    dend_11 { pt3dadd( 17.4495, -138.098, -22.0932, 1.33 ) }
    dend_11 { pt3dadd( 17.7803, -139.744, -22.9734, 0.74 ) }
    dend_11 { pt3dadd( 17.9254, -140.794, -23.41, 0.66 ) }
    dend_11 { pt3dadd( 18.0122, -142.286, -23.9048, 0.66 ) }
    dend_11 { pt3dadd( 17.9783, -143.322, -24.2322, 0.81 ) }
    dend_11 { pt3dadd( 17.8278, -144.376, -24.5774, 0.59 ) }
    dend_11 { pt3dadd( 17.6494, -145.082, -24.7914, 1.18 ) }
    dend_11 { pt3dadd( 17.5315, -145.409, -24.8885, 1.18 ) }
    dend_11 { pt3dadd( 17.0524, -146.565, -25.2141, 0.44 ) }
    dend_11 { pt3dadd( 16.6276, -147.574, -25.4019, 0.44 ) }
    dend_11 { pt3dadd( 16.3116, -148.426, -25.5024, 1.03 ) }
    dend_11 { pt3dadd( 16.1578, -149.037, -25.5191, 1.4 ) }
    dend_11 { pt3dadd( 16.0328, -150.341, -25.3365, 0.52 ) }
    dend_11 { pt3dadd( 16.0309, -151.226, -25.1575, 0.52 ) }
    dend_11 { pt3dadd( 16.1947, -152.398, -24.7925, 0.74 ) }
    dend_11 { pt3dadd( 16.2998, -152.825, -24.5963, 0.74 ) }
    dend_11 { pt3dadd( 16.563, -153.682, -24.0332, 0.59 ) }
    dend_11 { pt3dadd( 16.936, -154.656, -23.1864, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.38542, -26.0212, -5.3901, 0.88 ) }
    dend_2 { pt3dadd( 7.70726, -26.0378, -9.08851, 0.88 ) }
    dend_2 { pt3dadd( 8.40867, -25.9986, -10.0477, 0.88 ) }
    dend_2 { pt3dadd( 9.14735, -25.9438, -10.911, 1.03 ) }
    dend_2 { pt3dadd( 9.66853, -25.8998, -11.4405, 1.33 ) }
    dend_2 { pt3dadd( 10.159, -25.8615, -11.9008, 1.62 ) }
    dend_2 { pt3dadd( 10.8779, -25.8179, -12.5397, 1.84 ) }
    dend_2 { pt3dadd( 11.5275, -25.7291, -12.9922, 1.47 ) }
    dend_2 { pt3dadd( 12.2551, -25.6431, -13.6472, 1.18 ) }
    dend_2 { pt3dadd( 12.6729, -25.5877, -14.4042, 0.81 ) }
    dend_2 { pt3dadd( 13.0129, -25.5265, -15.4285, 0.81 ) }
    dend_2 { pt3dadd( 13.1968, -25.5055, -16.1432, 1.11 ) }
    dend_2 { pt3dadd( 13.5368, -25.5345, -17.7674, 1.33 ) }
    dend_2 { pt3dadd( 13.8663, -25.6162, -19.5357, 1.77 ) }
    dend_2 { pt3dadd( 14.5992, -25.9101, -23.6053, 1.47 ) }
    dend_2 { pt3dadd( 14.8509, -26.027, -24.8844, 1.11 ) }
    dend_2 { pt3dadd( 15.1404, -26.1503, -26.1236, 1.11 ) }
    dend_2 { pt3dadd( 15.6027, -26.3017, -27.633, 0.81 ) }
    dend_2 { pt3dadd( 15.9458, -26.3864, -28.4164, 0.96 ) }
    dend_2 { pt3dadd( 16.599, -26.4644, -29.417, 0.88 ) }
    dend_2 { pt3dadd( 17.183, -26.402, -30.1216, 0.74 ) }
    dend_2 { pt3dadd( 17.6094, -26.2309, -30.7021, 0.59 ) }
    dend_2 { pt3dadd( 18.1062, -25.8517, -31.5619, 1.03 ) }
    dend_2 { pt3dadd( 18.4595, -25.4932, -32.2333, 1.55 ) }
    dend_2 { pt3dadd( 18.7792, -25.1407, -32.8613, 1.69 ) }
    dend_2 { pt3dadd( 19.7121, -24.0797, -34.7912, 1.69 ) }
    dend_2 { pt3dadd( 19.994, -23.7686, -35.4035, 1.69 ) }
    dend_2 { pt3dadd( 20.7099, -23.0544, -36.9239, 0.88 ) }
    dend_2 { pt3dadd( 21.1371, -22.7115, -37.7443, 0.81 ) }
    dend_2 { pt3dadd( 21.6932, -22.3912, -38.6325, 1.11 ) }
    dend_2 { pt3dadd( 22.4775, -22.1029, -39.6673, 1.18 ) }
    dend_2 { pt3dadd( 23.2566, -21.9812, -40.468, 0.59 ) }
    dend_2 { pt3dadd( 23.6176, -21.9872, -40.8014, 0.59 ) }
    dend_2 { pt3dadd( 24.5462, -22.1797, -41.5084, 0.96 ) }
    dend_2 { pt3dadd( 25.2259, -22.4496, -41.9867, 1.18 ) }
    dend_2 { pt3dadd( 25.8244, -22.7807, -42.3517, 1.18 ) }
    dend_2 { pt3dadd( 26.4605, -23.1837, -42.6635, 1.4 ) }
    dend_2 { pt3dadd( 27.2084, -23.6867, -42.9846, 1.4 ) }
    dend_2 { pt3dadd( 27.9067, -24.1351, -43.272, 1.11 ) }
    dend_2 { pt3dadd( 28.4033, -24.4039, -43.4648, 1.11 ) }
    dend_2 { pt3dadd( 29.0143, -24.6344, -43.6991, 1.03 ) }
    dend_2 { pt3dadd( 29.8136, -24.815, -44.0001, 1.03 ) }
    dend_2 { pt3dadd( 30.5102, -24.8803, -44.2565, 1.03 ) }
    dend_2 { pt3dadd( 31.314, -24.8735, -44.5452, 0.96 ) }
    dend_2 { pt3dadd( 32.4179, -24.7729, -44.9462, 0.88 ) }
    dend_2 { pt3dadd( 33.6266, -24.5921, -45.3578, 0.88 ) }
    dend_2 { pt3dadd( 34.4319, -24.427, -45.6168, 1.03 ) }
    dend_2 { pt3dadd( 35.06, -24.2775, -45.8293, 1.11 ) }
    dend_2 { pt3dadd( 35.5677, -24.1536, -46.0248, 1.18 ) }
    dend_2 { pt3dadd( 36.0054, -24.0697, -46.2574, 1.18 ) }
    dend_2 { pt3dadd( 36.8147, -24.0212, -46.9092, 0.81 ) }
    dend_2 { pt3dadd( 37.3422, -24.1016, -47.5092, 0.74 ) }
    dend_2 { pt3dadd( 37.9922, -24.3101, -48.395, 1.18 ) }
    dend_2 { pt3dadd( 38.4707, -24.5116, -49.1145, 1.4 ) }
    dend_2 { pt3dadd( 39.409, -24.9619, -50.6622, 1.18 ) }
    dend_2 { pt3dadd( 40.1079, -25.3036, -51.9055, 0.88 ) }
    dend_2 { pt3dadd( 40.6053, -25.5301, -52.8895, 0.74 ) }
    dend_2 { pt3dadd( 41.1091, -25.7066, -53.8811, 0.74 ) }
    dend_2 { pt3dadd( 41.5825, -25.7846, -54.748, 1.11 ) }
    dend_2 { pt3dadd( 42.0964, -25.7727, -55.6472, 1.4 ) }
    dend_2 { pt3dadd( 42.6171, -25.7082, -56.5169, 1.4 ) }
    dend_2 { pt3dadd( 43.3367, -25.6253, -57.7426, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 43.7498, -25.6087, -58.4881, 0.74 ) }
    dend_2 { pt3dadd( 44.2604, -25.6783, -59.4575, 0.66 ) }
    dend_2 { pt3dadd( 44.8635, -25.914, -60.6402, 0.81 ) }
    dend_2 { pt3dadd( 45.4982, -26.3071, -61.7837, 0.74 ) }
    dend_2 { pt3dadd( 46.0383, -26.7239, -62.7189, 1.25 ) }
    dend_2 { pt3dadd( 46.3483, -26.9738, -63.2141, 1.69 ) }
    dend_2 { pt3dadd( 46.7629, -27.272, -63.8326, 1.69 ) }
    dend_2 { pt3dadd( 47.2206, -27.4914, -64.404, 1.4 ) }
    dend_2 { pt3dadd( 47.9738, -27.6247, -65.1627, 0.88 ) }
    dend_2 { pt3dadd( 49.1053, -27.5233, -66.1507, 0.81 ) }
    dend_2 { pt3dadd( 49.6275, -27.4146, -66.5701, 0.81 ) }
    dend_2 { pt3dadd( 50.3717, -27.2478, -67.1078, 0.81 ) }
    dend_2 { pt3dadd( 51.3543, -27.0343, -67.7239, 0.81 ) }
    dend_2 { pt3dadd( 51.985, -26.9249, -68.0615, 0.81 ) }
    dend_2 { pt3dadd( 52.8965, -26.8439, -68.4833, 0.81 ) }
    dend_2 { pt3dadd( 53.5287, -26.8794, -68.7143, 0.96 ) }
    dend_2 { pt3dadd( 54.4962, -27.1105, -69.0848, 0.96 ) }
    dend_2 { pt3dadd( 55.133, -27.3887, -69.3928, 1.18 ) }
    dend_2 { pt3dadd( 55.6749, -27.7198, -69.7406, 1.47 ) }
    dend_2 { pt3dadd( 56.2123, -28.096, -70.1408, 1.47 ) }
    dend_2 { pt3dadd( 56.9824, -28.6541, -70.7614, 0.74 ) }
    dend_2 { pt3dadd( 57.8678, -29.2619, -71.5113, 0.74 ) }
    dend_2 { pt3dadd( 58.9378, -29.9192, -72.4694, 0.66 ) }
    dend_2 { pt3dadd( 59.9186, -30.4613, -73.4094, 0.74 ) }
    dend_2 { pt3dadd( 60.5266, -30.7393, -74.0053, 0.81 ) }
    dend_2 { pt3dadd( 61.2245, -30.9675, -74.6811, 0.81 ) }
    dend_2 { pt3dadd( 61.5822, -31.0301, -75.0132, 1.11 ) }
    dend_2 { pt3dadd( 62.4441, -31.0466, -75.7923, 1.25 ) }
    dend_2 { pt3dadd( 62.8107, -31.0015, -76.1684, 1.62 ) }
    dend_2 { pt3dadd( 63.1814, -30.9062, -76.6693, 1.62 ) }
    dend_2 { pt3dadd( 63.8588, -30.6811, -77.766, 0.59 ) }
    dend_2 { pt3dadd( 64.2613, -30.5364, -78.5013, 0.59 ) }
    dend_2 { pt3dadd( 64.8579, -30.3333, -79.6299, 0.88 ) }
    dend_2 { pt3dadd( 65.658, -30.0924, -81.1511, 1.4 ) }
    dend_2 { pt3dadd( 66.483, -29.8974, -82.6456, 0.74 ) }
    dend_2 { pt3dadd( 66.9824, -29.8165, -83.4971, 0.59 ) }
    dend_2 { pt3dadd( 67.4286, -29.7829, -84.1696, 0.81 ) }
    dend_2 { pt3dadd( 67.8647, -29.7904, -84.6667, 0.81 ) }
    dend_2 { pt3dadd( 68.3289, -29.826, -85.0156, 0.96 ) }
    dend_2 { pt3dadd( 68.8394, -29.8601, -85.2819, 0.96 ) }
    dend_2 { pt3dadd( 69.4612, -29.8824, -85.5627, 0.59 ) }
    dend_2 { pt3dadd( 70.4217, -29.8676, -86.0204, 0.59 ) }
    dend_2 { pt3dadd( 71.3461, -29.7969, -86.4683, 0.66 ) }
    dend_2 { pt3dadd( 71.8642, -29.7267, -86.7793, 1.03 ) }
    dend_2 { pt3dadd( 72.6891, -29.5835, -87.3456, 1.03 ) }
    dend_2 { pt3dadd( 73.4162, -29.3891, -88.1498, 0.59 ) }
    dend_2 { pt3dadd( 73.7423, -29.2595, -88.6485, 0.59 ) }
    dend_2 { pt3dadd( 74.1375, -29.0661, -89.391, 0.59 ) }
    dend_2 { pt3dadd( 74.714, -28.8037, -90.5879, 1.11 ) }
    dend_2 { pt3dadd( 74.9726, -28.7181, -91.1266, 1.33 ) }
    dend_2 { pt3dadd( 76.4708, -28.3789, -94.0488, 1.03 ) }
    dend_2 { pt3dadd( 76.7534, -28.3273, -94.5433, 1.4 ) }
    dend_2 { pt3dadd( 77.3428, -28.2303, -95.4469, 0.81 ) }
    dend_2 { pt3dadd( 77.9712, -28.1285, -96.2709, 0.74 ) }
    dend_2 { pt3dadd( 78.8212, -27.9882, -97.174, 0.59 ) }
    dend_2 { pt3dadd( 79.4137, -27.8866, -97.6989, 0.59 ) }
    dend_2 { pt3dadd( 80.4252, -27.7144, -98.3724, 0.59 ) }
    dend_2 { pt3dadd( 81.6216, -27.4511, -99.1702, 0.88 ) }
    dend_2 { pt3dadd( 82.0456, -27.307, -99.4505, 1.25 ) }
    dend_2 { pt3dadd( 82.4214, -27.1315, -99.6976, 1.55 ) }
    dend_2 { pt3dadd( 82.9725, -26.8258, -100.075, 1.55 ) }
    dend_2 { pt3dadd( 83.4135, -26.57, -100.396, 1.33 ) }
    dend_2 { pt3dadd( 83.957, -26.2524, -100.798, 0.66 ) }
    dend_2 { pt3dadd( 84.6539, -25.8632, -101.308, 0.66 ) }
    dend_2 { pt3dadd( 85.103, -25.6305, -101.697, 0.66 ) }
    dend_2 { pt3dadd( 85.8824, -25.2294, -102.525, 0.66 ) }
    dend_2 { pt3dadd( 86.1679, -25.1225, -103.064, 0.66 ) }
    dend_2 { pt3dadd( 86.3204, -25.0899, -103.457, 0.96 ) }
    dend_2 { pt3dadd( 86.4895, -25.0791, -103.961, 0.96 ) }
    dend_2 { pt3dadd( 86.9909, -25.1285, -105.499, 0.74 ) }
    dend_2 { pt3dadd( 87.296, -25.186, -106.411, 1.62 ) }
    dend_2 { pt3dadd( 88.5631, -25.4591, -109.931, 0.66 ) }
    dend_2 { pt3dadd( 88.7619, -25.4899, -110.445, 0.66 ) }
    dend_2 { pt3dadd( 89.0877, -25.5161, -111.175, 1.11 ) }
    dend_2 { pt3dadd( 89.5445, -25.5294, -112.044, 1.11 ) }
    dend_2 { pt3dadd( 90.0552, -25.5014, -112.802, 0.52 ) }
    dend_2 { pt3dadd( 90.6029, -25.4145, -113.429, 0.52 ) }
    dend_2 { pt3dadd( 91.3409, -25.1897, -114.094, 1.25 ) }
    dend_2 { pt3dadd( 91.9068, -24.9849, -114.614, 0.88 ) }
    dend_2 { pt3dadd( 92.9778, -24.5132, -115.612, 0.44 ) }
    dend_2 { pt3dadd( 93.5914, -24.1928, -116.173, 0.44 ) }
    dend_2 { pt3dadd( 94.5035, -23.6569, -116.987, 0.52 ) }
    dend_2 { pt3dadd( 95.1092, -23.269, -117.517, 0.88 ) }
    dend_2 { pt3dadd( 95.4119, -23.0668, -117.772, 1.11 ) }
    dend_2 { pt3dadd( 95.6564, -22.8747, -118.03, 1.11 ) }
    dend_2 { pt3dadd( 95.8372, -22.6987, -118.283, 1.11 ) }
    dend_2 { pt3dadd( 96.3517, -22.0804, -119.336, 0.52 ) }
    dend_2 { pt3dadd( 96.5176, -21.8414, -119.874, 0.52 ) }
    dend_2 { pt3dadd( 96.7227, -21.5299, -120.7, 0.81 ) }
    dend_2 { pt3dadd( 97.1943, -20.8627, -122.675, 0.81 ) }
    dend_2 { pt3dadd( 97.4259, -20.565, -123.589, 1.11 ) }
    dend_2 { pt3dadd( 97.5405, -20.4431, -123.957, 1.92 ) }
    dend_2 { pt3dadd( 98.3206, -19.8071, -125.814, 0.59 ) }
    dend_2 { pt3dadd( 98.436, -19.7378, -126.008, 0.59 ) }
    dend_2 { pt3dadd( 98.9285, -19.5356, -126.529, 0.88 ) }
    dend_2 { pt3dadd( 99.6348, -19.3337, -127.007, 0.44 ) }
    dend_2 { pt3dadd( 100.821, -19.0624, -127.709, 0.44 ) }
    dend_2 { pt3dadd( 101.768, -18.8812, -128.23, 0.74 ) }
    dend_2 { pt3dadd( 102.299, -18.8077, -128.542, 0.74 ) }
    dend_2 { pt3dadd( 103.047, -18.7688, -129.146, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 103.459, -18.8, -129.62, 0.52 ) }
    dend_2 { pt3dadd( 104.029, -18.919, -130.491, 0.59 ) }
    dend_2 { pt3dadd( 104.233, -18.9695, -130.859, 0.59 ) }
    dend_2 { pt3dadd( 105.097, -19.1429, -132.55, 0.59 ) }
    dend_2 { pt3dadd( 105.663, -19.1985, -133.667, 0.81 ) }
    dend_2 { pt3dadd( 106.191, -19.1841, -134.722, 1.4 ) }
    dend_2 { pt3dadd( 106.479, -19.1183, -135.254, 1.55 ) }
    dend_2 { pt3dadd( 107.185, -18.7748, -136.349, 0.44 ) }
    dend_2 { pt3dadd( 107.507, -18.5378, -136.742, 0.88 ) }
    dend_2 { pt3dadd( 107.939, -18.1663, -137.108, 0.88 ) }
    dend_2 { pt3dadd( 108.414, -17.7562, -137.491, 0.59 ) }
    dend_2 { pt3dadd( 109.149, -17.1629, -138.093, 0.59 ) }
    dend_2 { pt3dadd( 109.622, -16.8379, -138.577, 0.81 ) }
    dend_2 { pt3dadd( 110.141, -16.5615, -139.204, 0.81 ) }
    dend_2 { pt3dadd( 110.798, -16.2738, -140.142, 0.52 ) }
    dend_2 { pt3dadd( 111.501, -15.9918, -141.34, 0.74 ) }
    dend_2 { pt3dadd( 111.69, -15.9048, -141.855, 0.74 ) }
    dend_2 { pt3dadd( 111.957, -15.6694, -143.367, 0.37 ) }
    dend_2 { pt3dadd( 112.001, -15.5236, -144.162, 0.37 ) }
    dend_2 { pt3dadd( 111.966, -15.2399, -145.422, 0.37 ) }
    dend_2 { pt3dadd( 111.869, -14.929, -146.523, 0.59 ) }
    dend_2 { pt3dadd( 111.566, -13.9369, -149.539, 0.88 ) }
    dend_2 { pt3dadd( 111.442, -13.4542, -150.917, 0.52 ) }
    dend_2 { pt3dadd( 111.414, -13.3002, -151.407, 0.52 ) }
    dend_2 { pt3dadd( 111.395, -13.0501, -152.481, 0.52 ) }
    dend_2 { pt3dadd( 111.44, -12.8924, -153.287, 0.81 ) }
    dend_2 { pt3dadd( 111.574, -12.7226, -154.239, 0.59 ) }
    dend_2 { pt3dadd( 111.747, -12.6046, -154.985, 0.59 ) }
    dend_2 { pt3dadd( 112.375, -12.3222, -157.393, 1.18 ) }
    dend_2 { pt3dadd( 113.08, -12.0916, -160.367, 0.74 ) }
    dend_2 { pt3dadd( 113.231, -12.0597, -161.136, 0.74 ) }
    dend_2 { pt3dadd( 113.347, -12.0455, -161.899, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -57.9456, 127.354, -43.8117, 0.29 ) }
    dend_87 { pt3dadd( -59.578, 127.421, -43.4699, 0.29 ) }
    dend_87 { pt3dadd( -60.8909, 127.647, -43.2773, 0.29 ) }
    dend_87 { pt3dadd( -61.5943, 127.903, -43.3237, 0.59 ) }
    dend_87 { pt3dadd( -62.4014, 128.342, -43.4893, 0.59 ) }
    dend_87 { pt3dadd( -63.0531, 128.777, -43.6556, 0.59 ) }
    dend_87 { pt3dadd( -63.7391, 129.303, -43.8366, 0.44 ) }
    dend_87 { pt3dadd( -64.2604, 129.884, -44.0599, 0.59 ) }
    dend_87 { pt3dadd( -65.2411, 131.019, -44.619, 0.37 ) }
    dend_87 { pt3dadd( -65.7357, 131.557, -44.9229, 0.29 ) }
    dend_87 { pt3dadd( -66.2443, 132.053, -45.2017, 0.59 ) }
    dend_87 { pt3dadd( -66.8009, 132.56, -45.4781, 0.59 ) }
    dend_87 { pt3dadd( -68.0125, 133.634, -46.0526, 0.29 ) }
    dend_87 { pt3dadd( -69.1472, 134.655, -46.6321, 0.29 ) }
    dend_87 { pt3dadd( -69.6877, 135.138, -46.9452, 0.29 ) }
    dend_87 { pt3dadd( -70.7765, 136.035, -47.6811, 0.29 ) }
    dend_87 { pt3dadd( -71.512, 136.572, -48.2535, 0.29 ) }
    dend_87 { pt3dadd( -72.3218, 137.116, -48.9324, 0.52 ) }
    dend_87 { pt3dadd( -73.0729, 137.613, -49.5914, 0.66 ) }
    dend_87 { pt3dadd( -74.1909, 138.396, -50.6356, 0.44 ) }
    dend_87 { pt3dadd( -75.1157, 139.011, -51.5711, 0.59 ) }
    dend_87 { pt3dadd( -76.328, 139.679, -52.8785, 0.96 ) }
    dend_87 { pt3dadd( -76.805, 139.868, -53.3423, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -57.9456, 127.354, -43.8117, 0.66 ) }
    dend_86 { pt3dadd( -56.628, 127.155, -44.6917, 0.66 ) }
    dend_86 { pt3dadd( -55.5753, 126.995, -45.3947, 0.29 ) }
    dend_86 { pt3dadd( -54.8111, 126.88, -45.9051, 0.44 ) }
    dend_86 { pt3dadd( -53.8691, 126.737, -46.5343, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -72.4795, 139.379, -35.6138, 0.29 ) }
    dend_82 { pt3dadd( -73.1644, 139.997, -36.1775, 0.29 ) }
    dend_82 { pt3dadd( -74.0449, 140.707, -36.8839, 0.59 ) }
    dend_82 { pt3dadd( -74.6247, 141.175, -37.3588, 0.44 ) }
    dend_82 { pt3dadd( -75.4607, 141.9, -38.0651, 0.88 ) }
    dend_82 { pt3dadd( -75.8363, 142.268, -38.4146, 1.03 ) }
    dend_82 { pt3dadd( -76.6815, 143.205, -39.2711, 0.52 ) }
    dend_82 { pt3dadd( -76.9604, 143.546, -39.5868, 0.44 ) }
    dend_82 { pt3dadd( -77.4957, 144.289, -40.2058, 0.66 ) }
    dend_82 { pt3dadd( -77.8951, 144.899, -40.6814, 0.88 ) }
    dend_82 { pt3dadd( -78.6315, 146.105, -41.5241, 0.59 ) }
    dend_82 { pt3dadd( -79.1105, 146.907, -42.0406, 0.74 ) }
    dend_82 { pt3dadd( -79.589, 147.729, -42.5244, 0.74 ) }
    dend_82 { pt3dadd( -80.258, 148.816, -43.1461, 0.37 ) }
    dend_82 { pt3dadd( -80.5686, 149.275, -43.4, 0.37 ) }
    dend_82 { pt3dadd( -81.3003, 150.25, -43.9035, 0.66 ) }
    dend_82 { pt3dadd( -81.8086, 150.839, -44.1707, 0.66 ) }
    dend_82 { pt3dadd( -82.3426, 151.37, -44.3811, 0.52 ) }
    dend_82 { pt3dadd( -83.1149, 152.031, -44.5927, 0.88 ) }
    dend_82 { pt3dadd( -83.6408, 152.424, -44.6812, 0.88 ) }
    dend_82 { pt3dadd( -84.4094, 152.93, -44.726, 0.52 ) }
    dend_82 { pt3dadd( -85.3273, 153.482, -44.6996, 0.52 ) }
    dend_82 { pt3dadd( -86.4561, 154.155, -44.6097, 0.88 ) }
    dend_82 { pt3dadd( -87.1792, 154.609, -44.5319, 0.88 ) }
    dend_82 { pt3dadd( -88.0705, 155.191, -44.4115, 0.52 ) }
    dend_82 { pt3dadd( -88.8293, 155.705, -44.3023, 0.44 ) }
    dend_82 { pt3dadd( -89.6921, 156.3, -44.1821, 0.37 ) }
    dend_82 { pt3dadd( -90.5326, 156.929, -44.0696, 0.37 ) }
    dend_82 { pt3dadd( -91.3676, 157.611, -43.976, 0.29 ) }
    dend_82 { pt3dadd( -92.726, 158.798, -43.8629, 0.29 ) }
    dend_82 { pt3dadd( -93.361, 159.367, -43.8208, 0.29 ) }
    dend_82 { pt3dadd( -94.0939, 160.007, -43.7714, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -72.4795, 139.379, -35.6138, 0.29 ) }
    dend_81 { pt3dadd( -74.1821, 138.243, -34.8753, 0.29 ) }
    dend_81 { pt3dadd( -75.1087, 137.625, -34.4733, 0.29 ) }
    dend_81 { pt3dadd( -75.7651, 137.187, -34.1885, 0.22 ) }
    dend_81 { pt3dadd( -76.6027, 136.629, -33.8252, 0.22 ) }
    dend_81 { pt3dadd( -77.5346, 136.007, -33.4209, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 141.739, 40.0475, 63.688, 0.29 ) }
    dend_75 { pt3dadd( 143.75, 45.3673, 70.492, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 146.341, 49.8185, 77.743, 0.29 ) }
    dend_75 { pt3dadd( 149.87, 53.9226, 84.8122, 0.29 ) }
    dend_75 { pt3dadd( 152.645, 56.7569, 92.8129, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 141.739, 40.0475, 63.688, 0.29 ) }
    dend_72 { pt3dadd( 152.832, 37.2754, 69.6884, 0.29 ) }
    dend_72 { pt3dadd( 164.254, 36.909, 75.7273, 0.29 ) }
    dend_72 { pt3dadd( 175.173, 38.9988, 82.3073, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 81.9734, 40.5518, -2.7459, 0.37 ) }
    dend_68 { pt3dadd( 82.1771, 41.2474, -2.55828, 0.37 ) }
    dend_68 { pt3dadd( 82.4401, 42.2825, -2.23529, 0.37 ) }
    dend_68 { pt3dadd( 82.6307, 43.0324, -2.0013, 0.22 ) }
    dend_68 { pt3dadd( 83.0313, 44.609, -1.50936, 0.22 ) }
    dend_68 { pt3dadd( 83.3367, 45.8107, -1.13442, 0.66 ) }
    dend_68 { pt3dadd( 83.7044, 47.2579, -0.682867, 1.11 ) }
    dend_68 { pt3dadd( 83.7819, 47.6191, -0.547791, 1.11 ) }
    dend_68 { pt3dadd( 86.4343, 56.595, 1.05035, 1.11 ) }
    dend_68 { pt3dadd( 89.6104, 65.4319, 2.48374, 1.11 ) }
    dend_68 { pt3dadd( 93.3436, 73.9045, 4.71059, 1.11 ) }
    dend_68 { pt3dadd( 97.0564, 82.07, 7.97377, 1.11 ) }
    dend_68 { pt3dadd( 101.812, 90.1759, 9.55843, 1.11 ) }
    dend_68 { pt3dadd( 106.751, 98.121, 11.4208, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 81.9734, 40.5518, -2.7459, 0.44 ) }
    dend_59 { pt3dadd( 82.9951, 40.7759, -2.67553, 0.44 ) }
    dend_59 { pt3dadd( 84.0889, 40.9643, -2.5883, 0.44 ) }
    dend_59 { pt3dadd( 85.2621, 41.1419, -2.41254, 0.74 ) }
    dend_59 { pt3dadd( 85.9758, 41.2406, -2.27738, 1.03 ) }
    dend_59 { pt3dadd( 86.6443, 41.3283, -2.12951, 1.03 ) }
    dend_59 { pt3dadd( 87.1727, 41.392, -2.02961, 1.03 ) }
    dend_59 { pt3dadd( 88.066, 41.4896, -1.94513, 0.66 ) }
    dend_59 { pt3dadd( 89.298, 41.6548, -1.96007, 0.66 ) }
    dend_59 { pt3dadd( 89.7332, 41.7452, -2.03348, 0.81 ) }
    dend_59 { pt3dadd( 90.3948, 41.9505, -2.22786, 0.44 ) }
    dend_59 { pt3dadd( 91.7408, 42.5049, -2.75158, 0.44 ) }
    dend_59 { pt3dadd( 93.3406, 43.3062, -3.46734, 0.37 ) }
    dend_59 { pt3dadd( 93.9017, 43.6211, -3.7565, 0.37 ) }
    dend_59 { pt3dadd( 94.7685, 44.1288, -4.23501, 0.37 ) }
    dend_59 { pt3dadd( 95.8102, 44.767, -4.78237, 0.66 ) }
    dend_59 { pt3dadd( 96.4184, 45.1591, -5.06854, 0.66 ) }
    dend_59 { pt3dadd( 97.2729, 45.7217, -5.35442, 0.37 ) }
    dend_59 { pt3dadd( 97.7852, 46.0416, -5.4602, 0.37 ) }
    dend_59 { pt3dadd( 98.4357, 46.4365, -5.57887, 0.59 ) }
    dend_59 { pt3dadd( 99.014, 46.7916, -5.70236, 0.59 ) }
    dend_59 { pt3dadd( 99.5748, 47.1285, -5.92095, 0.44 ) }
    dend_59 { pt3dadd( 100.524, 47.6218, -6.3535, 0.66 ) }
    dend_59 { pt3dadd( 100.697, 47.6977, -6.43514, 0.96 ) }
    dend_59 { pt3dadd( 101.358, 47.9201, -6.71872, 0.96 ) }
    dend_59 { pt3dadd( 102.323, 48.1414, -7.10382, 1.11 ) }
    dend_59 { pt3dadd( 104.545, 48.4988, -7.87358, 0.44 ) }
    dend_59 { pt3dadd( 105.79, 48.6519, -8.23955, 0.44 ) }
    dend_59 { pt3dadd( 106.76, 48.7577, -8.47427, 0.37 ) }
    dend_59 { pt3dadd( 107.954, 48.9007, -8.75537, 0.37 ) }
    dend_59 { pt3dadd( 108.681, 49.0067, -8.90846, 0.29 ) }
    dend_59 { pt3dadd( 109.687, 49.2294, -9.10231, 0.22 ) }
    dend_59 { pt3dadd( 110.37, 49.5184, -9.27727, 0.59 ) }
    dend_59 { pt3dadd( 110.73, 49.7922, -9.45086, 0.59 ) }
    dend_59 { pt3dadd( 111.769, 50.7087, -10.1794, 0.29 ) }
    dend_59 { pt3dadd( 112.209, 51.1009, -10.5208, 0.37 ) }
    dend_59 { pt3dadd( 112.731, 51.5305, -10.9236, 0.52 ) }
    dend_59 { pt3dadd( 113.301, 51.8908, -11.3413, 0.74 ) }
    dend_59 { pt3dadd( 114.106, 52.2572, -12.0143, 0.96 ) }
    dend_59 { pt3dadd( 115.537, 52.7718, -13.4157, 0.29 ) }
    dend_59 { pt3dadd( 116.087, 52.9587, -14.0513, 0.52 ) }
    dend_59 { pt3dadd( 116.331, 53.0494, -14.389, 0.81 ) }
    dend_59 { pt3dadd( 117.128, 53.4163, -15.6766, 1.11 ) }
    dend_59 { pt3dadd( 118.561, 54.2183, -18.3359, 0.81 ) }
    dend_59 { pt3dadd( 119.179, 54.6598, -19.6295, 0.96 ) }
    dend_59 { pt3dadd( 119.826, 55.2533, -21.1136, 0.66 ) }
    dend_59 { pt3dadd( 120.31, 55.7519, -22.2277, 0.52 ) }
    dend_59 { pt3dadd( 120.801, 56.2859, -23.2266, 0.52 ) }
    dend_59 { pt3dadd( 121.017, 56.526, -23.547, 0.74 ) }
    dend_59 { pt3dadd( 121.599, 57.0039, -23.941, 0.74 ) }
    dend_59 { pt3dadd( 121.988, 57.237, -24.0935, 0.96 ) }
    dend_59 { pt3dadd( 122.598, 57.4961, -24.2693, 0.96 ) }
    dend_59 { pt3dadd( 123.596, 57.8494, -24.6284, 0.74 ) }
    dend_59 { pt3dadd( 124.578, 58.2054, -25.0752, 0.44 ) }
    dend_59 { pt3dadd( 125.655, 58.6792, -25.771, 0.44 ) }
    dend_59 { pt3dadd( 126.062, 58.9049, -26.1142, 0.96 ) }
    dend_59 { pt3dadd( 126.789, 59.4244, -26.9505, 1.18 ) }
    dend_59 { pt3dadd( 127.788, 60.3216, -28.4304, 0.66 ) }
    dend_59 { pt3dadd( 128.144, 60.7094, -29.095, 0.66 ) }
    dend_59 { pt3dadd( 128.775, 61.4962, -30.5133, 0.59 ) }
    dend_59 { pt3dadd( 129.007, 61.8161, -31.0477, 0.52 ) }
    dend_59 { pt3dadd( 129.666, 62.7128, -32.4213, 0.52 ) }
    dend_59 { pt3dadd( 129.851, 62.9884, -32.7763, 0.96 ) }
    dend_59 { pt3dadd( 130.25, 63.5799, -33.4278, 0.96 ) }
    dend_59 { pt3dadd( 131.006, 64.7304, -34.5229, 0.59 ) }
    dend_59 { pt3dadd( 131.658, 65.7906, -35.3452, 0.59 ) }
    dend_59 { pt3dadd( 132.072, 66.4953, -35.8303, 0.88 ) }
    dend_59 { pt3dadd( 132.673, 67.5508, -36.431, 0.74 ) }
    dend_59 { pt3dadd( 133.211, 68.4027, -36.8775, 0.74 ) }
    dend_59 { pt3dadd( 133.85, 69.2683, -37.2631, 0.88 ) }
    dend_59 { pt3dadd( 134.262, 69.686, -37.4431, 0.88 ) }
    dend_59 { pt3dadd( 135.044, 70.2492, -37.7776, 0.37 ) }
    dend_59 { pt3dadd( 135.874, 70.7134, -38.136, 0.37 ) }
    dend_59 { pt3dadd( 137.185, 71.2858, -38.6982, 0.37 ) }
    dend_59 { pt3dadd( 138.106, 71.6382, -39.1318, 0.37 ) }
    dend_59 { pt3dadd( 139.18, 72.0166, -39.6883, 0.37 ) }
    dend_59 { pt3dadd( 139.83, 72.2623, -40.0342, 0.59 ) }
    dend_59 { pt3dadd( 140.635, 72.5984, -40.46, 0.74 ) }
    dend_59 { pt3dadd( 141.176, 72.8558, -40.7589, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 142.197, 73.4271, -41.3766, 0.44 ) }
    dend_59 { pt3dadd( 142.742, 73.7374, -41.6947, 0.37 ) }
    dend_59 { pt3dadd( 144.339, 74.5449, -42.4337, 0.37 ) }
    dend_59 { pt3dadd( 145.098, 74.8563, -42.7118, 0.74 ) }
    dend_59 { pt3dadd( 145.501, 74.9842, -42.829, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 102.608, 66.6463, 21.4673, 0.29 ) }
    dend_57 { pt3dadd( 109.326, 73.2737, 25.9259, 0.29 ) }
    dend_57 { pt3dadd( 116.332, 80.6201, 28.3041, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 102.608, 66.6463, 21.4673, 0.29 ) }
    dend_56 { pt3dadd( 110.93, 74.4386, 27.6175, 0.29 ) }
    dend_56 { pt3dadd( 119.682, 80.9952, 34.6156, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -21.5496, -166.968, 17.391, 0.29 ) }
    dend_37 { pt3dadd( -17.8008, -178.154, 15.1446, 0.29 ) }
    dend_37 { pt3dadd( -15.6504, -189.923, 14.5063, 0.29 ) }
    dend_37 { pt3dadd( -13.9854, -201.545, 12.0704, 0.29 ) }
    dend_37 { pt3dadd( -13.8705, -213.481, 11.0984, 0.29 ) }
    dend_37 { pt3dadd( -14.8279, -225.377, 10.0709, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -21.5496, -166.968, 17.391, 0.29 ) }
    dend_36 { pt3dadd( -24.1063, -174.006, 13.7134, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.97779, -102.612, 10.8873, 0.37 ) }
    dend_24 { pt3dadd( 1.22256, -103.742, 9.81107, 0.37 ) }
    dend_24 { pt3dadd( 0.743418, -104.34, 9.26092, 0.37 ) }
    dend_24 { pt3dadd( 0.258591, -104.86, 8.77043, 0.44 ) }
    dend_24 { pt3dadd( -0.337204, -105.424, 8.23417, 0.74 ) }
    dend_24 { pt3dadd( -0.942857, -105.944, 7.74578, 0.59 ) }
    dend_24 { pt3dadd( -1.58653, -106.43, 7.28752, 0.59 ) }
    dend_24 { pt3dadd( -1.99239, -106.631, 7.08844, 0.74 ) }
    dend_24 { pt3dadd( -2.68453, -106.854, 6.82348, 0.88 ) }
    dend_24 { pt3dadd( -3.13016, -106.944, 6.69692, 1.18 ) }
    dend_24 { pt3dadd( -3.58739, -106.996, 6.59832, 0.59 ) }
    dend_24 { pt3dadd( -4.2883, -107.036, 6.46707, 0.44 ) }
    dend_24 { pt3dadd( -4.98333, -107.064, 6.33354, 0.52 ) }
    dend_24 { pt3dadd( -5.30309, -107.089, 6.26278, 0.74 ) }
    dend_24 { pt3dadd( -5.84486, -107.201, 6.14241, 0.74 ) }
    dend_24 { pt3dadd( -6.22744, -107.354, 6.03596, 0.59 ) }
    dend_24 { pt3dadd( -6.6091, -107.599, 5.91222, 0.59 ) }
    dend_24 { pt3dadd( -7.09535, -108.051, 5.73863, 0.59 ) }
    dend_24 { pt3dadd( -7.59779, -108.668, 5.55963, 0.44 ) }
    dend_24 { pt3dadd( -8.15795, -109.487, 5.37456, 0.37 ) }
    dend_24 { pt3dadd( -8.47353, -110.037, 5.28084, 1.03 ) }
    dend_24 { pt3dadd( -8.67858, -110.451, 5.22014, 1.03 ) }
    dend_24 { pt3dadd( -8.83745, -110.832, 5.17347, 0.96 ) }
    dend_24 { pt3dadd( -9.09457, -111.619, 5.10418, 0.66 ) }
    dend_24 { pt3dadd( -9.27951, -112.327, 5.05402, 0.66 ) }
    dend_24 { pt3dadd( -9.44732, -113.135, 4.98912, 0.88 ) }
    dend_24 { pt3dadd( -9.52851, -113.631, 4.94911, 1.03 ) }
    dend_24 { pt3dadd( -9.61072, -114.335, 4.8831, 0.88 ) }
    dend_24 { pt3dadd( -9.68097, -115.239, 4.78209, 0.52 ) }
    dend_24 { pt3dadd( -9.71248, -115.946, 4.68877, 0.52 ) }
    dend_24 { pt3dadd( -9.72666, -116.482, 4.60404, 0.96 ) }
    dend_24 { pt3dadd( -9.73811, -116.832, 4.54106, 0.96 ) }
    dend_24 { pt3dadd( -9.80071, -117.692, 4.36113, 0.59 ) }
    dend_24 { pt3dadd( -9.89269, -118.378, 4.19891, 0.66 ) }
    dend_24 { pt3dadd( -10.0073, -118.89, 4.06035, 0.81 ) }
    dend_24 { pt3dadd( -10.1892, -119.515, 3.86871, 0.81 ) }
    dend_24 { pt3dadd( -10.3166, -119.864, 3.74788, 0.81 ) }
    dend_24 { pt3dadd( -10.5623, -120.499, 3.4732, 0.44 ) }
    dend_24 { pt3dadd( -10.6886, -120.831, 3.30535, 0.81 ) }
    dend_24 { pt3dadd( -10.8417, -121.31, 3.03487, 0.81 ) }
    dend_24 { pt3dadd( -10.9974, -121.993, 2.63383, 0.52 ) }
    dend_24 { pt3dadd( -11.0543, -122.547, 2.30715, 0.52 ) }
    dend_24 { pt3dadd( -11.0426, -123.556, 1.7206, 0.74 ) }
    dend_24 { pt3dadd( -10.9975, -124.048, 1.44551, 1.11 ) }
    dend_24 { pt3dadd( -10.9518, -124.503, 1.21138, 1.11 ) }
    dend_24 { pt3dadd( -10.9068, -125.081, 0.947985, 0.96 ) }
    dend_24 { pt3dadd( -10.8966, -125.73, 0.68844, 0.59 ) }
    dend_24 { pt3dadd( -10.9568, -126.533, 0.406306, 0.44 ) }
    dend_24 { pt3dadd( -11.1544, -127.423, 0.135421, 0.44 ) }
    dend_24 { pt3dadd( -11.3823, -128.093, -0.0605385, 0.44 ) }
    dend_24 { pt3dadd( -11.6447, -128.72, -0.227695, 0.74 ) }
    dend_24 { pt3dadd( -11.8449, -129.18, -0.341186, 0.74 ) }
    dend_24 { pt3dadd( -12.0403, -129.626, -0.436253, 0.74 ) }
    dend_24 { pt3dadd( -12.3827, -130.422, -0.579107, 0.66 ) }
    dend_24 { pt3dadd( -12.6282, -131.016, -0.668017, 0.44 ) }
    dend_24 { pt3dadd( -12.938, -131.783, -0.774726, 0.44 ) }
    dend_24 { pt3dadd( -13.4278, -132.853, -0.898399, 0.44 ) }
    dend_24 { pt3dadd( -13.7099, -133.35, -0.938652, 0.88 ) }
    dend_24 { pt3dadd( -14.0445, -133.814, -0.955663, 1.18 ) }
    dend_24 { pt3dadd( -14.3086, -134.114, -0.947006, 1.18 ) }
    dend_24 { pt3dadd( -14.6433, -134.44, -0.922628, 1.03 ) }
    dend_24 { pt3dadd( -15.6032, -135.237, -0.842678, 0.66 ) }
    dend_24 { pt3dadd( -16.4922, -135.876, -0.755559, 0.66 ) }
    dend_24 { pt3dadd( -17.2481, -136.399, -0.678649, 1.25 ) }
    dend_24 { pt3dadd( -17.6495, -136.681, -0.63605, 1.55 ) }
    dend_24 { pt3dadd( -18.1341, -137.028, -0.584662, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 1.97779, -102.612, 10.8873, 0.74 ) }
    dend_19 { pt3dadd( 1.15913, -103.845, 10.182, 0.74 ) }
    dend_19 { pt3dadd( 0.197681, -105.26, 9.35694, 0.74 ) }
    dend_19 { pt3dadd( -0.300398, -106.105, 8.94804, 0.74 ) }
    dend_19 { pt3dadd( -0.776976, -107.051, 8.55321, 0.81 ) }
    dend_19 { pt3dadd( -1.65866, -109.22, 7.80866, 0.52 ) }
    dend_19 { pt3dadd( -2.19881, -110.945, 7.3162, 0.74 ) }
    dend_19 { pt3dadd( -2.38682, -111.863, 7.11609, 0.74 ) }
    dend_19 { pt3dadd( -2.2442, -113.895, 6.95108, 0.74 ) }
    dend_19 { pt3dadd( -1.85537, -114.9, 6.96664, 0.81 ) }
    dend_19 { pt3dadd( -1.04554, -116.115, 7.09157, 0.66 ) }
    dend_19 { pt3dadd( -0.532519, -116.713, 7.19224, 1.11 ) }
    dend_19 { pt3dadd( -0.00190949, -117.297, 7.26871, 1.11 ) }
    dend_19 { pt3dadd( 0.65337, -118.04, 7.2832, 0.81 ) }
    dend_19 { pt3dadd( 1.43767, -119.05, 7.14631, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 2.12314, -120.036, 6.96042, 0.96 ) }
    dend_19 { pt3dadd( 2.71891, -120.956, 6.76752, 0.88 ) }
    dend_19 { pt3dadd( 3.42831, -122.086, 6.54585, 0.96 ) }
    dend_19 { pt3dadd( 3.91282, -122.928, 6.37475, 1.11 ) }
    dend_19 { pt3dadd( 4.4281, -123.98, 6.13297, 1.11 ) }
    dend_19 { pt3dadd( 4.82417, -124.966, 5.88188, 0.74 ) }
    dend_19 { pt3dadd( 5.29606, -126.506, 5.48257, 0.66 ) }
    dend_19 { pt3dadd( 5.48646, -127.312, 5.27734, 0.66 ) }
    dend_19 { pt3dadd( 5.79269, -129.178, 4.854, 0.66 ) }
    dend_19 { pt3dadd( 5.94296, -131.137, 4.47211, 0.59 ) }
    dend_19 { pt3dadd( 5.92672, -132.273, 4.27282, 0.96 ) }
    dend_19 { pt3dadd( 5.79158, -133.688, 4.04606, 1.18 ) }
    dend_19 { pt3dadd( 5.61531, -134.742, 3.90944, 1.03 ) }
    dend_19 { pt3dadd( 5.36662, -135.981, 3.7833, 0.88 ) }
    dend_19 { pt3dadd( 5.0617, -137.588, 3.67897, 0.74 ) }
    dend_19 { pt3dadd( 4.88727, -138.983, 3.69862, 0.59 ) }
    dend_19 { pt3dadd( 4.79298, -140.162, 3.78903, 0.59 ) }
    dend_19 { pt3dadd( 4.73561, -141.14, 3.94506, 1.4 ) }
    dend_19 { pt3dadd( 4.68345, -141.86, 4.12596, 1.4 ) }
    dend_19 { pt3dadd( 4.58123, -143.698, 4.75378, 0.88 ) }
    dend_19 { pt3dadd( 4.56461, -145.854, 5.74387, 0.66 ) }
    dend_19 { pt3dadd( 4.57292, -146.756, 6.22969, 0.88 ) }
    dend_19 { pt3dadd( 4.58319, -147.902, 6.88865, 0.88 ) }
    dend_19 { pt3dadd( 4.56921, -149.686, 7.93218, 0.59 ) }
    dend_19 { pt3dadd( 4.5095, -150.825, 8.59209, 0.81 ) }
    dend_19 { pt3dadd( 4.30742, -152.711, 9.63757, 0.81 ) }
    dend_19 { pt3dadd( 4.15881, -153.685, 10.0834, 1.11 ) }
    dend_19 { pt3dadd( 4.03428, -154.486, 10.3956, 1.11 ) }
    dend_19 { pt3dadd( 3.86212, -155.639, 10.7251, 0.52 ) }
    dend_19 { pt3dadd( 3.72769, -156.731, 10.948, 0.74 ) }
    dend_19 { pt3dadd( 3.6104, -157.706, 11.087, 1.03 ) }
    dend_19 { pt3dadd( 3.54887, -158.522, 11.1366, 1.25 ) }
    dend_19 { pt3dadd( 3.57617, -159.324, 11.2145, 1.33 ) }
    dend_19 { pt3dadd( 3.78672, -160.638, 11.485, 1.03 ) }
    dend_19 { pt3dadd( 4.17744, -161.862, 11.8402, 0.74 ) }
    dend_19 { pt3dadd( 4.64754, -162.851, 12.1824, 0.44 ) }
    dend_19 { pt3dadd( 5.20942, -163.747, 12.5294, 0.29 ) }
    dend_19 { pt3dadd( 6.20875, -164.972, 13.0613, 0.29 ) }
    dend_19 { pt3dadd( 7.59639, -166.312, 13.7182, 0.29 ) }
    dend_19 { pt3dadd( 8.4097, -166.907, 14.0484, 0.29 ) }
    dend_19 { pt3dadd( 9.16924, -167.321, 14.2775, 0.88 ) }
    dend_19 { pt3dadd( 9.7999, -167.614, 14.4355, 0.88 ) }
    dend_19 { pt3dadd( 10.8396, -168.063, 14.6541, 0.52 ) }
    dend_19 { pt3dadd( 11.3073, -168.265, 14.6997, 0.52 ) }
    dend_19 { pt3dadd( 12.151, -168.67, 14.7635, 0.52 ) }
    dend_19 { pt3dadd( 12.8123, -169.118, 14.8813, 0.52 ) }
    dend_19 { pt3dadd( 13.6736, -169.962, 15.0316, 0.52 ) }
    dend_19 { pt3dadd( 14.0761, -170.504, 15.0808, 0.88 ) }
    dend_19 { pt3dadd( 14.4943, -171.177, 15.0821, 0.88 ) }
    dend_19 { pt3dadd( 14.9904, -172.004, 14.9904, 1.11 ) }
    dend_19 { pt3dadd( 15.5051, -172.773, 14.8559, 0.66 ) }
    dend_19 { pt3dadd( 16.5013, -173.997, 14.5224, 0.66 ) }
    dend_19 { pt3dadd( 16.9891, -174.433, 14.3602, 0.66 ) }
    dend_19 { pt3dadd( 17.8649, -175.05, 14.1121, 0.66 ) }
    dend_19 { pt3dadd( 18.5841, -175.488, 13.9408, 0.52 ) }
    dend_19 { pt3dadd( 19.8048, -176.229, 13.6325, 0.66 ) }
    dend_19 { pt3dadd( 20.2054, -176.471, 13.5729, 0.66 ) }
    dend_19 { pt3dadd( 21.114, -177.014, 13.5971, 0.44 ) }
    dend_19 { pt3dadd( 21.8913, -177.486, 13.7354, 0.44 ) }
    dend_19 { pt3dadd( 23.0025, -178.201, 14.0879, 0.52 ) }
    dend_19 { pt3dadd( 24.3636, -179.121, 14.7036, 0.66 ) }
    dend_19 { pt3dadd( 25.5473, -179.962, 15.3271, 0.44 ) }
    dend_19 { pt3dadd( 26.8303, -180.88, 16.0678, 0.81 ) }
    dend_19 { pt3dadd( 28.0214, -181.734, 16.7296, 0.52 ) }
    dend_19 { pt3dadd( 28.7981, -182.295, 17.1187, 0.74 ) }
    dend_19 { pt3dadd( 29.7284, -182.98, 17.5073, 0.29 ) }
    dend_19 { pt3dadd( 30.2083, -183.357, 17.6284, 0.52 ) }
    dend_19 { pt3dadd( 30.8868, -183.952, 17.5988, 0.59 ) }
    dend_19 { pt3dadd( 32.1571, -185.145, 17.4065, 0.37 ) }
    dend_19 { pt3dadd( 33.0569, -186.02, 17.1721, 0.66 ) }
    dend_19 { pt3dadd( 33.5636, -186.515, 17.0098, 1.03 ) }
    dend_19 { pt3dadd( 34.369, -187.302, 16.7159, 1.03 ) }
    dend_19 { pt3dadd( 35.2675, -188.173, 16.4372, 0.74 ) }
    dend_19 { pt3dadd( 36.7485, -189.566, 16.138, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 16.936, -154.656, -23.1864, 0.44 ) }
    dend_13 { pt3dadd( 16.8517, -156.193, -23.058, 0.44 ) }
    dend_13 { pt3dadd( 16.7824, -157.267, -22.9671, 0.81 ) }
    dend_13 { pt3dadd( 16.7156, -158.091, -22.8979, 1.18 ) }
    dend_13 { pt3dadd( 16.6149, -159.193, -22.8099, 0.74 ) }
    dend_13 { pt3dadd( 16.5069, -160.339, -22.7247, 0.44 ) }
    dend_13 { pt3dadd( 16.409, -161.347, -22.654, 0.96 ) }
    dend_13 { pt3dadd( 16.3028, -162.392, -22.5872, 0.96 ) }
    dend_13 { pt3dadd( 16.1949, -163.384, -22.5306, 1.18 ) }
    dend_13 { pt3dadd( 15.9758, -164.864, -22.4484, 0.74 ) }
    dend_13 { pt3dadd( 15.6842, -166.202, -22.4106, 0.66 ) }
    dend_13 { pt3dadd( 15.3627, -167.291, -22.4133, 0.66 ) }
    dend_13 { pt3dadd( 14.8783, -168.652, -22.484, 0.66 ) }
    dend_13 { pt3dadd( 14.6086, -169.323, -22.5518, 1.03 ) }
    dend_13 { pt3dadd( 14.1997, -170.252, -22.6883, 0.81 ) }
    dend_13 { pt3dadd( 13.5586, -171.729, -23.0322, 0.52 ) }
    dend_13 { pt3dadd( 13.2486, -172.618, -23.2577, 0.44 ) }
    dend_13 { pt3dadd( 13.0031, -173.74, -23.5125, 0.37 ) }
    dend_13 { pt3dadd( 12.9451, -174.382, -23.6221, 0.66 ) }
    dend_13 { pt3dadd( 12.9271, -175.091, -23.6848, 0.66 ) }
    dend_13 { pt3dadd( 12.9701, -176.947, -23.7848, 0.44 ) }
    dend_13 { pt3dadd( 13.0216, -178.814, -23.7961, 0.44 ) }
    dend_13 { pt3dadd( 13.003, -180.304, -23.7572, 0.66 ) }
    dend_13 { pt3dadd( 12.8993, -181.617, -23.6866, 0.81 ) }
    dend_13 { pt3dadd( 12.6571, -183.043, -23.6171, 0.96 ) }
    dend_13 { pt3dadd( 12.2003, -184.543, -23.5412, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 11.692, -185.705, -23.482, 0.81 ) }
    dend_13 { pt3dadd( 11.1672, -186.727, -23.4909, 0.88 ) }
    dend_13 { pt3dadd( 10.7523, -187.522, -23.5398, 0.66 ) }
    dend_13 { pt3dadd( 10.1663, -188.642, -23.6484, 0.29 ) }
    dend_13 { pt3dadd( 9.43247, -190.076, -23.808, 0.29 ) }
    dend_13 { pt3dadd( 9.00705, -190.907, -23.8844, 0.52 ) }
    dend_13 { pt3dadd( 8.34086, -192.196, -24.0161, 0.52 ) }
    dend_13 { pt3dadd( 7.7852, -193.255, -24.1196, 0.37 ) }
    dend_13 { pt3dadd( 7.25693, -194.208, -24.2021, 0.29 ) }
    dend_13 { pt3dadd( 6.73746, -195.039, -24.2437, 0.29 ) }
    dend_13 { pt3dadd( 6.50563, -195.34, -24.2607, 0.88 ) }
    dend_13 { pt3dadd( 5.9505, -195.846, -24.2964, 1.11 ) }
    dend_13 { pt3dadd( 5.25009, -196.288, -24.324, 0.44 ) }
    dend_13 { pt3dadd( 4.35328, -196.719, -24.3456, 0.37 ) }
    dend_13 { pt3dadd( 3.48006, -197.064, -24.3754, 0.59 ) }
    dend_13 { pt3dadd( 2.69249, -197.328, -24.415, 0.74 ) }
    dend_13 { pt3dadd( 1.65148, -197.651, -24.4793, 0.44 ) }
    dend_13 { pt3dadd( 0.747877, -197.934, -24.5308, 0.37 ) }
    dend_13 { pt3dadd( 0.150646, -198.144, -24.5577, 0.88 ) }
    dend_13 { pt3dadd( -0.530001, -198.436, -24.5704, 1.11 ) }
    dend_13 { pt3dadd( -1.01282, -198.687, -24.558, 1.11 ) }
    dend_13 { pt3dadd( -1.50293, -198.957, -24.5184, 1.11 ) }
    dend_13 { pt3dadd( -2.70728, -199.654, -24.3812, 0.29 ) }
    dend_13 { pt3dadd( -3.49954, -200.133, -24.2873, 0.59 ) }
    dend_13 { pt3dadd( -4.02377, -200.459, -24.2208, 0.59 ) }
    dend_13 { pt3dadd( -5.30254, -201.324, -24.0382, 0.29 ) }
    dend_13 { pt3dadd( -6.07485, -201.909, -23.9095, 0.29 ) }
    dend_13 { pt3dadd( -6.67382, -202.424, -23.8002, 0.52 ) }
    dend_13 { pt3dadd( -7.36833, -203.087, -23.669, 0.52 ) }
    dend_13 { pt3dadd( -7.73389, -203.454, -23.598, 0.81 ) }
    dend_13 { pt3dadd( -8.34653, -204.178, -23.4776, 0.81 ) }
    dend_13 { pt3dadd( -8.94129, -205.095, -23.3578, 0.29 ) }
    dend_13 { pt3dadd( -9.61298, -206.33, -23.21, 0.29 ) }
    dend_13 { pt3dadd( -9.97678, -207.053, -23.1174, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.936, -154.656, -23.1864, 0.22 ) }
    dend_12 { pt3dadd( 17.7887, -155.093, -23.193, 0.22 ) }
    dend_12 { pt3dadd( 18.6878, -155.553, -23.1999, 0.22 ) }
    dend_12 { pt3dadd( 19.7733, -156.108, -23.2082, 0.22 ) }
    dend_12 { pt3dadd( 20.5204, -156.49, -23.214, 0.22 ) }
    dend_12 { pt3dadd( 21.3133, -156.896, -23.2201, 0.22 ) }
    dend_12 { pt3dadd( 22.129, -157.313, -23.2264, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 113.347, -12.0455, -161.899, 0.74 ) }
    dend_10 { pt3dadd( 115.025, -13.7979, -164.304, 0.74 ) }
    dend_10 { pt3dadd( 115.502, -14.3862, -164.863, 0.44 ) }
    dend_10 { pt3dadd( 115.873, -14.8221, -165.222, 0.74 ) }
    dend_10 { pt3dadd( 116.495, -15.4676, -165.726, 0.52 ) }
    dend_10 { pt3dadd( 117.383, -16.2641, -166.328, 0.52 ) }
    dend_10 { pt3dadd( 118.368, -17.0303, -166.958, 0.52 ) }
    dend_10 { pt3dadd( 119.165, -17.5778, -167.293, 0.52 ) }
    dend_10 { pt3dadd( 120.008, -18.0655, -167.641, 0.52 ) }
    dend_10 { pt3dadd( 121.084, -18.5183, -168.139, 0.52 ) }
    dend_10 { pt3dadd( 121.994, -18.74, -168.592, 0.74 ) }
    dend_10 { pt3dadd( 122.949, -18.8255, -169.104, 1.03 ) }
    dend_10 { pt3dadd( 123.301, -18.8228, -169.308, 1.4 ) }
    dend_10 { pt3dadd( 123.648, -18.8054, -169.522, 1.4 ) }
    dend_10 { pt3dadd( 125.015, -18.7356, -170.441, 0.44 ) }
    dend_10 { pt3dadd( 125.552, -18.7366, -170.746, 0.74 ) }
    dend_10 { pt3dadd( 126.388, -18.8003, -171.09, 0.74 ) }
    dend_10 { pt3dadd( 126.993, -18.8823, -171.237, 0.96 ) }
    dend_10 { pt3dadd( 127.593, -19.0019, -171.286, 0.96 ) }
    dend_10 { pt3dadd( 128.408, -19.2308, -171.26, 0.96 ) }
    dend_10 { pt3dadd( 130.39, -20.0033, -170.964, 0.66 ) }
    dend_10 { pt3dadd( 131.215, -20.4141, -170.779, 0.81 ) }
    dend_10 { pt3dadd( 131.708, -20.7145, -170.628, 0.81 ) }
    dend_10 { pt3dadd( 132.902, -21.5259, -170.213, 0.52 ) }
    dend_10 { pt3dadd( 133.788, -22.1633, -169.904, 0.52 ) }
    dend_10 { pt3dadd( 134.742, -22.8739, -169.616, 0.52 ) }
    dend_10 { pt3dadd( 135.637, -23.5343, -169.458, 0.52 ) }
    dend_10 { pt3dadd( 136.768, -24.3328, -169.339, 0.44 ) }
    dend_10 { pt3dadd( 137.37, -24.7172, -169.354, 0.96 ) }
    dend_10 { pt3dadd( 137.978, -25.0466, -169.532, 1.11 ) }
    dend_10 { pt3dadd( 138.786, -25.417, -169.993, 0.44 ) }
    dend_10 { pt3dadd( 139.43, -25.7139, -170.606, 0.37 ) }
    dend_10 { pt3dadd( 139.832, -25.9403, -171.184, 0.37 ) }
    dend_10 { pt3dadd( 140.387, -26.3247, -172.31, 0.66 ) }
    dend_10 { pt3dadd( 140.93, -26.7647, -173.718, 0.74 ) }
    dend_10 { pt3dadd( 141.14, -26.945, -174.362, 0.81 ) }
    dend_10 { pt3dadd( 141.421, -27.1799, -175.359, 0.81 ) }
    dend_10 { pt3dadd( 141.774, -27.4385, -176.685, 0.66 ) }
    dend_10 { pt3dadd( 142.127, -27.6354, -177.858, 0.66 ) }
    dend_10 { pt3dadd( 142.498, -27.8057, -178.904, 0.29 ) }
    dend_10 { pt3dadd( 142.776, -27.9251, -179.588, 0.59 ) }
    dend_10 { pt3dadd( 143.094, -28.0459, -180.286, 0.74 ) }
    dend_10 { pt3dadd( 143.402, -28.1477, -180.939, 0.44 ) }
    dend_10 { pt3dadd( 143.823, -28.2726, -181.767, 0.37 ) }
    dend_10 { pt3dadd( 144.26, -28.4209, -182.606, 0.37 ) }
    dend_10 { pt3dadd( 144.691, -28.5975, -183.403, 0.59 ) }
    dend_10 { pt3dadd( 145.032, -28.7668, -184.025, 0.59 ) }
    dend_10 { pt3dadd( 145.816, -29.268, -185.788, 0.29 ) }
    dend_10 { pt3dadd( 146.255, -29.6539, -187.024, 0.29 ) }
    dend_10 { pt3dadd( 146.446, -29.8832, -187.713, 0.29 ) }
    dend_10 { pt3dadd( 146.6, -30.1035, -188.323, 0.74 ) }
    dend_10 { pt3dadd( 146.741, -30.3406, -188.944, 0.74 ) }
    dend_10 { pt3dadd( 147.209, -31.4836, -191.509, 0.37 ) }
    dend_10 { pt3dadd( 147.307, -31.917, -192.308, 0.52 ) }
    dend_10 { pt3dadd( 147.331, -32.3057, -192.993, 0.81 ) }
    dend_10 { pt3dadd( 147.32, -32.7292, -193.784, 0.37 ) }
    dend_10 { pt3dadd( 147.293, -33.0845, -194.538, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 113.347, -12.0455, -161.899, 0.88 ) }
    dend_3 { pt3dadd( 113.623, -11.6325, -163.332, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 113.714, -11.5584, -163.975, 1.25 ) }
    dend_3 { pt3dadd( 113.768, -11.5452, -164.629, 1.25 ) }
    dend_3 { pt3dadd( 113.807, -11.5352, -165.551, 0.59 ) }
    dend_3 { pt3dadd( 113.91, -11.5086, -168.016, 0.59 ) }
    dend_3 { pt3dadd( 114.014, -11.4818, -170.492, 0.96 ) }
    dend_3 { pt3dadd( 114.046, -11.544, -171.83, 1.11 ) }
    dend_3 { pt3dadd( 114.033, -11.7514, -174.279, 1.25 ) }
    dend_3 { pt3dadd( 113.975, -11.9429, -175.835, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -94.0939, 160.007, -43.7714, 0.22 ) }
    dend_84 { pt3dadd( -93.7435, 159.149, -42.9153, 0.22 ) }
    dend_84 { pt3dadd( -93.5252, 158.614, -42.3819, 0.22 ) }
    dend_84 { pt3dadd( -93.0363, 157.417, -41.1876, 0.22 ) }
    dend_84 { pt3dadd( -92.7381, 156.686, -40.4589, 0.22 ) }
    dend_84 { pt3dadd( -92.4818, 156.058, -39.8327, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -94.0939, 160.007, -43.7714, 0.22 ) }
    dend_83 { pt3dadd( -94.7087, 160.947, -43.2474, 0.22 ) }
    dend_83 { pt3dadd( -95.2492, 161.799, -42.8014, 0.22 ) }
    dend_83 { pt3dadd( -95.7633, 162.609, -42.3772, 0.22 ) }
    dend_83 { pt3dadd( -96.2551, 163.385, -41.9713, 0.22 ) }
    dend_83 { pt3dadd( -96.9956, 164.552, -41.3604, 0.22 ) }
    dend_83 { pt3dadd( -97.3733, 165.147, -41.0487, 0.37 ) }
    dend_83 { pt3dadd( -97.7253, 165.799, -40.7369, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 152.645, 56.7569, 92.8129, 0.29 ) }
    dend_77 { pt3dadd( 157.494, 62.5981, 104.145, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 152.645, 56.7569, 92.8129, 0.29 ) }
    dend_76 { pt3dadd( 154.627, 59.8249, 98.821, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 175.173, 38.9988, 82.3073, 0.29 ) }
    dend_74 { pt3dadd( 178.358, 35.1875, 74.1062, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 175.173, 38.9988, 82.3073, 0.29 ) }
    dend_73 { pt3dadd( 163.085, 42.5227, 83.5977, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 145.501, 74.9842, -42.829, 0.37 ) }
    dend_61 { pt3dadd( 144.953, 74.9262, -43.5617, 0.37 ) }
    dend_61 { pt3dadd( 144.339, 74.6762, -44.7746, 0.66 ) }
    dend_61 { pt3dadd( 144.081, 74.3658, -45.7283, 0.29 ) }
    dend_61 { pt3dadd( 143.909, 74.0586, -46.6, 0.29 ) }
    dend_61 { pt3dadd( 143.714, 73.6824, -47.6997, 0.29 ) }
    dend_61 { pt3dadd( 143.299, 72.9151, -50.1014, 0.29 ) }
    dend_61 { pt3dadd( 143.125, 72.5208, -51.2105, 0.81 ) }
    dend_61 { pt3dadd( 142.685, 71.2423, -54.5372, 0.44 ) }
    dend_61 { pt3dadd( 142.572, 70.7729, -55.7037, 0.96 ) }
    dend_61 { pt3dadd( 142.518, 70.3858, -56.7127, 1.18 ) }
    dend_61 { pt3dadd( 142.503, 69.9078, -58.0434, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 145.501, 74.9842, -42.829, 0.37 ) }
    dend_60 { pt3dadd( 146.862, 75.308, -42.7073, 0.37 ) }
    dend_60 { pt3dadd( 148.435, 75.9133, -42.6284, 0.29 ) }
    dend_60 { pt3dadd( 149.011, 76.1855, -42.6097, 0.66 ) }
    dend_60 { pt3dadd( 149.571, 76.4925, -42.5879, 0.66 ) }
    dend_60 { pt3dadd( 150.264, 76.9459, -42.5894, 0.37 ) }
    dend_60 { pt3dadd( 151.227, 77.6117, -42.6178, 0.37 ) }
    dend_60 { pt3dadd( 152.263, 78.4362, -42.6898, 0.81 ) }
    dend_60 { pt3dadd( 152.681, 78.8175, -42.6989, 1.11 ) }
    dend_60 { pt3dadd( 153.257, 79.3806, -42.683, 1.33 ) }
    dend_60 { pt3dadd( 154.394, 80.6231, -42.5964, 0.44 ) }
    dend_60 { pt3dadd( 155.037, 81.4339, -42.4842, 0.52 ) }
    dend_60 { pt3dadd( 155.839, 82.6125, -42.2624, 1.03 ) }
    dend_60 { pt3dadd( 156.655, 84.0229, -41.9609, 0.52 ) }
    dend_60 { pt3dadd( 157.02, 84.7437, -41.7787, 0.66 ) }
    dend_60 { pt3dadd( 157.366, 85.5535, -41.5466, 0.66 ) }
    dend_60 { pt3dadd( 157.803, 86.8871, -41.1236, 0.44 ) }
    dend_60 { pt3dadd( 157.967, 87.6264, -40.9415, 0.29 ) }
    dend_60 { pt3dadd( 158.14, 88.5415, -40.7899, 0.44 ) }
    dend_60 { pt3dadd( 158.401, 89.5803, -40.7163, 0.66 ) }
    dend_60 { pt3dadd( 158.689, 90.4409, -40.6952, 0.37 ) }
    dend_60 { pt3dadd( 159.071, 91.426, -40.7249, 0.37 ) }
    dend_60 { pt3dadd( 159.702, 93.018, -40.8581, 0.29 ) }
    dend_60 { pt3dadd( 160.091, 94.0445, -40.951, 0.29 ) }
    dend_60 { pt3dadd( 160.636, 95.7731, -41.1335, 0.29 ) }
    dend_60 { pt3dadd( 160.912, 96.9658, -41.2295, 0.29 ) }
    dend_60 { pt3dadd( 161.035, 97.9024, -41.2667, 1.55 ) }
    dend_60 { pt3dadd( 161.047, 98.6845, -41.2612, 1.18 ) }
    dend_60 { pt3dadd( 160.905, 99.5331, -41.1645, 0.96 ) }
    dend_60 { pt3dadd( 160.385, 100.917, -40.9129, 0.52 ) }
    dend_60 { pt3dadd( 159.443, 102.52, -40.5294, 0.29 ) }
    dend_60 { pt3dadd( 158.688, 103.502, -40.2685, 0.29 ) }
    dend_60 { pt3dadd( 158.288, 103.961, -40.1459, 0.29 ) }
    dend_60 { pt3dadd( 157.181, 105.199, -39.855, 0.22 ) }
    dend_60 { pt3dadd( 156.847, 105.578, -39.7906, 0.66 ) }
    dend_60 { pt3dadd( 156.447, 106.055, -39.7395, 0.66 ) }
    dend_60 { pt3dadd( 155.796, 106.945, -39.7434, 0.37 ) }
    dend_60 { pt3dadd( 155.333, 107.841, -39.7901, 0.29 ) }
    dend_60 { pt3dadd( 155.037, 108.738, -39.9057, 0.22 ) }
    dend_60 { pt3dadd( 154.867, 109.554, -39.9964, 0.22 ) }
    dend_60 { pt3dadd( 154.702, 110.835, -40.0472, 0.22 ) }
    dend_60 { pt3dadd( 154.68, 111.422, -40.0379, 0.29 ) }
    dend_60 { pt3dadd( 154.714, 112.314, -39.9718, 0.29 ) }
    dend_60 { pt3dadd( 154.828, 113.66, -39.8198, 0.29 ) }
    dend_60 { pt3dadd( 155.075, 115.41, -39.6054, 0.29 ) }
    dend_60 { pt3dadd( 155.258, 116.502, -39.4512, 0.29 ) }
    dend_60 { pt3dadd( 155.451, 117.385, -39.3114, 0.29 ) }
    dend_60 { pt3dadd( 155.726, 118.544, -39.1038, 0.29 ) }
    dend_60 { pt3dadd( 156.203, 120.303, -38.75, 0.29 ) }
    dend_60 { pt3dadd( 156.645, 121.659, -38.4716, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -14.8279, -225.377, 10.0709, 0.29 ) }
    dend_39 { pt3dadd( -14.944, -235.154, 8.10036, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -14.8279, -225.377, 10.0709, 0.29 ) }
    dend_38 { pt3dadd( -4.78641, -222.454, 12.4757, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -18.1341, -137.028, -0.584662, 0.37 ) }
    dend_26 { pt3dadd( -18.8315, -138.79, -1.04684, 0.37 ) }
    dend_26 { pt3dadd( -19.1646, -139.631, -1.26764, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -18.1341, -137.028, -0.584662, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -19.7073, -136.944, -2.6024, 0.29 ) }
    dend_25 { pt3dadd( -20.1782, -136.919, -3.17684, 0.22 ) }
    dend_25 { pt3dadd( -20.8239, -136.942, -3.90391, 0.22 ) }
    dend_25 { pt3dadd( -21.22, -136.995, -4.30953, 1.47 ) }
    dend_25 { pt3dadd( -21.5137, -137.034, -4.61029, 1.69 ) }
    dend_25 { pt3dadd( -21.7943, -137.071, -4.89765, 1.69 ) }
    dend_25 { pt3dadd( -22.6736, -137.146, -5.49128, 0.96 ) }
    dend_25 { pt3dadd( -23.2795, -137.272, -5.96315, 0.29 ) }
    dend_25 { pt3dadd( -23.7754, -137.477, -6.40295, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 36.7485, -189.566, 16.138, 0.29 ) }
    dend_21 { pt3dadd( 36.5958, -190.175, 15.205, 0.29 ) }
    dend_21 { pt3dadd( 36.4626, -190.706, 14.3913, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 36.7485, -189.566, 16.138, 0.29 ) }
    dend_20 { pt3dadd( 37.1923, -187.241, 15.1823, 0.29 ) }
    dend_20 { pt3dadd( 37.751, -185.751, 13.9742, 0.29 ) }
    dend_20 { pt3dadd( 38.248, -185.058, 12.8587, 0.29 ) }
    dend_20 { pt3dadd( 38.7302, -184.386, 11.7763, 0.52 ) }
    dend_20 { pt3dadd( 40.0942, -182.484, 8.71483, 0.44 ) }
    dend_20 { pt3dadd( 40.5518, -181.846, 7.68758, 0.29 ) }
    dend_20 { pt3dadd( 41.3459, -181.888, 5.86155, 0.29 ) }
    dend_20 { pt3dadd( 41.6347, -182.047, 5.19056, 0.29 ) }
    dend_20 { pt3dadd( 44.6911, -175.503, -4.23479, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.97678, -207.053, -23.1174, 0.22 ) }
    dend_15 { pt3dadd( -9.92852, -207.927, -22.9897, 0.22 ) }
    dend_15 { pt3dadd( -9.83139, -208.929, -22.7994, 0.22 ) }
    dend_15 { pt3dadd( -9.67074, -210.23, -22.561, 0.22 ) }
    dend_15 { pt3dadd( -9.52579, -211.297, -22.3712, 0.22 ) }
    dend_15 { pt3dadd( -9.32033, -212.67, -22.1473, 0.22 ) }
    dend_15 { pt3dadd( -9.15733, -213.759, -21.9697, 0.22 ) }
    dend_15 { pt3dadd( -8.96817, -215.03, -21.7776, 0.22 ) }
    dend_15 { pt3dadd( -8.82321, -215.834, -21.6727, 0.37 ) }
    dend_15 { pt3dadd( -8.75651, -216.11, -21.6389, 0.37 ) }
    dend_15 { pt3dadd( -8.53649, -216.88, -21.5377, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.97678, -207.053, -23.1174, 1.55 ) }
    dend_14 { pt3dadd( -10.6867, -207.421, -23.3532, 1.55 ) }
    dend_14 { pt3dadd( -11.1009, -207.691, -23.5044, 1.55 ) }
    dend_14 { pt3dadd( -11.9223, -208.25, -23.8023, 0.29 ) }
    dend_14 { pt3dadd( -13.1297, -209.067, -24.2077, 0.44 ) }
    dend_14 { pt3dadd( -13.4301, -209.249, -24.333, 0.44 ) }
    dend_14 { pt3dadd( -14.6745, -209.878, -24.9291, 0.29 ) }
    dend_14 { pt3dadd( -15.4484, -210.214, -25.3346, 0.29 ) }
    dend_14 { pt3dadd( -16.218, -210.498, -25.7344, 0.29 ) }
    dend_14 { pt3dadd( -17.0754, -210.746, -26.1557, 0.29 ) }
    dend_14 { pt3dadd( -18.7936, -211.068, -26.8928, 0.29 ) }
    dend_14 { pt3dadd( -20.3209, -211.189, -27.4897, 0.29 ) }
    dend_14 { pt3dadd( -21.289, -211.149, -27.8334, 0.22 ) }
    dend_14 { pt3dadd( -22.2656, -211.04, -28.1468, 0.22 ) }
    dend_14 { pt3dadd( -23.0319, -210.929, -28.3682, 0.22 ) }
    dend_14 { pt3dadd( -23.8779, -210.787, -28.5719, 0.22 ) }
    dend_14 { pt3dadd( -24.9527, -210.613, -28.7063, 0.22 ) }
    dend_14 { pt3dadd( -25.7608, -210.44, -28.7767, 0.22 ) }
    dend_14 { pt3dadd( -26.3179, -210.27, -28.8431, 0.52 ) }
    dend_14 { pt3dadd( -26.8063, -210.079, -28.9212, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 113.975, -11.9429, -175.835, 0.81 ) }
    dend_9 { pt3dadd( 115.708, -11.872, -177.845, 0.81 ) }
    dend_9 { pt3dadd( 117.053, -11.9092, -179.313, 0.88 ) }
    dend_9 { pt3dadd( 118.106, -12.0096, -180.5, 0.37 ) }
    dend_9 { pt3dadd( 118.413, -12.0381, -180.84, 0.37 ) }
    dend_9 { pt3dadd( 119.082, -12.1004, -181.583, 0.66 ) }
    dend_9 { pt3dadd( 119.518, -12.141, -182.067, 0.74 ) }
    dend_9 { pt3dadd( 119.656, -12.1547, -182.262, 0.74 ) }
    dend_9 { pt3dadd( 120.51, -12.3383, -183.135, 0.37 ) }
    dend_9 { pt3dadd( 120.933, -12.4761, -183.57, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 113.975, -11.9429, -175.835, 0.44 ) }
    dend_4 { pt3dadd( 114.531, -11.2494, -177.177, 0.44 ) }
    dend_4 { pt3dadd( 114.924, -10.7597, -178.124, 0.44 ) }
    dend_4 { pt3dadd( 115.141, -10.4891, -178.648, 0.44 ) }
    dend_4 { pt3dadd( 115.568, -9.95736, -179.676, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 142.503, 69.9078, -58.0434, 0.96 ) }
    dend_65 { pt3dadd( 141.807, 69.5965, -61.5473, 0.96 ) }
    dend_65 { pt3dadd( 140.884, 69.2272, -65.0574, 0.59 ) }
    dend_65 { pt3dadd( 140.655, 69.145, -65.8976, 0.59 ) }
    dend_65 { pt3dadd( 140.455, 69.082, -66.6991, 0.37 ) }
    dend_65 { pt3dadd( 140.048, 68.9939, -68.5637, 0.29 ) }
    dend_65 { pt3dadd( 139.802, 68.9671, -69.769, 0.29 ) }
    dend_65 { pt3dadd( 139.628, 69.0245, -70.5515, 0.66 ) }
    dend_65 { pt3dadd( 139.374, 69.3235, -72.0154, 0.22 ) }
    dend_65 { pt3dadd( 139.278, 69.503, -72.9063, 0.22 ) }
    dend_65 { pt3dadd( 139.166, 69.7092, -74.0471, 0.88 ) }
    dend_65 { pt3dadd( 139.085, 69.8345, -74.7408, 0.88 ) }
    dend_65 { pt3dadd( 138.768, 70.1498, -76.6321, 0.37 ) }
    dend_65 { pt3dadd( 138.571, 70.228, -77.516, 0.96 ) }
    dend_65 { pt3dadd( 138.345, 70.2352, -78.3953, 1.11 ) }
    dend_65 { pt3dadd( 137.926, 70.1721, -80.0744, 0.44 ) }
    dend_65 { pt3dadd( 137.701, 70.1201, -81.1019, 0.37 ) }
    dend_65 { pt3dadd( 137.551, 70.0852, -81.9161, 0.52 ) }
    dend_65 { pt3dadd( 136.975, 69.9837, -85.3947, 0.37 ) }
    dend_65 { pt3dadd( 136.796, 69.9819, -87.047, 0.96 ) }
    dend_65 { pt3dadd( 136.704, 70.0387, -88.3304, 0.96 ) }
    dend_65 { pt3dadd( 136.638, 70.1199, -89.6347, 0.52 ) }
    dend_65 { pt3dadd( 136.604, 70.1505, -90.6102, 1.33 ) }
    dend_65 { pt3dadd( 136.561, 70.1511, -91.7894, 1.33 ) }
    dend_65 { pt3dadd( 136.257, 70.1045, -96.6285, 0.52 ) }
    dend_65 { pt3dadd( 136.215, 70.0942, -97.1737, 0.52 ) }
    dend_65 { pt3dadd( 136.106, 70.0537, -98.3411, 0.52 ) }
    dend_65 { pt3dadd( 135.562, 69.7733, -103.272, 0.44 ) }
    dend_65 { pt3dadd( 135.252, 69.6366, -105.512, 0.59 ) }
    dend_65 { pt3dadd( 135.029, 69.587, -106.841, 0.59 ) }
    dend_65 { pt3dadd( 134.745, 69.6034, -108.094, 0.88 ) }
    dend_65 { pt3dadd( 134.631, 69.6384, -108.52, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 134.371, 69.7972, -109.248, 1.47 ) }
    dend_65 { pt3dadd( 133.622, 70.4405, -110.644, 0.29 ) }
    dend_65 { pt3dadd( 132.903, 71.1327, -111.851, 0.29 ) }
    dend_65 { pt3dadd( 132.605, 71.4259, -112.324, 0.29 ) }
    dend_65 { pt3dadd( 132.076, 71.9609, -113.107, 0.29 ) }
    dend_65 { pt3dadd( 131.744, 72.3258, -113.611, 0.29 ) }
    dend_65 { pt3dadd( 130.957, 73.2565, -114.819, 0.29 ) }
    dend_65 { pt3dadd( 130.646, 73.6158, -115.294, 0.29 ) }
    dend_65 { pt3dadd( 130.207, 74.0192, -115.905, 0.96 ) }
    dend_65 { pt3dadd( 129.924, 74.291, -116.342, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 142.503, 69.9078, -58.0434, 0.15 ) }
    dend_62 { pt3dadd( 142.973, 71.0926, -58.1632, 0.15 ) }
    dend_62 { pt3dadd( 143.231, 71.7418, -58.2288, 0.15 ) }
    dend_62 { pt3dadd( 143.438, 72.2635, -58.2815, 0.81 ) }
    dend_62 { pt3dadd( 143.618, 72.7163, -58.3273, 1.03 ) }
    dend_62 { pt3dadd( 143.855, 73.3132, -58.3877, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -19.1646, -139.631, -1.26764, 0.52 ) }
    dend_28 { pt3dadd( -19.5203, -140.332, -1.64211, 0.52 ) }
    dend_28 { pt3dadd( -19.9968, -141.47, -2.14327, 0.52 ) }
    dend_28 { pt3dadd( -20.5621, -142.928, -2.61215, 0.37 ) }
    dend_28 { pt3dadd( -20.8201, -143.601, -2.81438, 0.52 ) }
    dend_28 { pt3dadd( -21.1665, -144.506, -3.07084, 0.44 ) }
    dend_28 { pt3dadd( -21.5677, -145.512, -3.3543, 0.37 ) }
    dend_28 { pt3dadd( -21.9762, -146.535, -3.59195, 0.29 ) }
    dend_28 { pt3dadd( -22.3951, -147.62, -3.76905, 0.29 ) }
    dend_28 { pt3dadd( -22.8963, -149.033, -3.96914, 1.03 ) }
    dend_28 { pt3dadd( -23.0423, -149.43, -4.02638, 1.18 ) }
    dend_28 { pt3dadd( -23.5052, -150.56, -4.19977, 0.88 ) }
    dend_28 { pt3dadd( -23.8439, -151.368, -4.34164, 0.44 ) }
    dend_28 { pt3dadd( -24.2395, -152.416, -4.57173, 0.37 ) }
    dend_28 { pt3dadd( -24.4061, -153.025, -4.75125, 0.59 ) }
    dend_28 { pt3dadd( -24.4922, -153.592, -4.94598, 0.44 ) }
    dend_28 { pt3dadd( -24.5312, -154.736, -5.41383, 0.44 ) }
    dend_28 { pt3dadd( -24.4752, -155.542, -5.78265, 0.44 ) }
    dend_28 { pt3dadd( -24.3301, -156.774, -6.36615, 0.52 ) }
    dend_28 { pt3dadd( -24.198, -157.92, -6.89307, 0.66 ) }
    dend_28 { pt3dadd( -24.1116, -158.876, -7.23759, 0.88 ) }
    dend_28 { pt3dadd( -24.0814, -159.551, -7.3808, 0.88 ) }
    dend_28 { pt3dadd( -24.1128, -160.599, -7.39161, 0.52 ) }
    dend_28 { pt3dadd( -24.2793, -161.524, -7.19162, 0.29 ) }
    dend_28 { pt3dadd( -24.6313, -162.647, -6.73821, 0.29 ) }
    dend_28 { pt3dadd( -25.1754, -163.932, -6.15941, 0.29 ) }
    dend_28 { pt3dadd( -25.615, -164.78, -5.80166, 0.96 ) }
    dend_28 { pt3dadd( -25.9269, -165.343, -5.63702, 1.18 ) }
    dend_28 { pt3dadd( -26.2516, -165.96, -5.51941, 1.18 ) }
    dend_28 { pt3dadd( -26.7689, -167.108, -5.47709, 0.59 ) }
    dend_28 { pt3dadd( -27.1537, -168.305, -5.55236, 0.52 ) }
    dend_28 { pt3dadd( -27.4234, -169.465, -5.67532, 0.52 ) }
    dend_28 { pt3dadd( -27.7197, -170.958, -5.89315, 0.66 ) }
    dend_28 { pt3dadd( -27.8809, -171.946, -6.04483, 0.66 ) }
    dend_28 { pt3dadd( -28.0031, -173.009, -6.20832, 0.81 ) }
    dend_28 { pt3dadd( -28.0418, -174.549, -6.39304, 0.81 ) }
    dend_28 { pt3dadd( -27.9297, -175.663, -6.38348, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -19.1646, -139.631, -1.26764, 0.37 ) }
    dend_27 { pt3dadd( -19.6612, -139.54, -0.287795, 0.37 ) }
    dend_27 { pt3dadd( -20.3687, -139.483, 0.961838, 0.37 ) }
    dend_27 { pt3dadd( -20.7285, -139.458, 1.53745, 0.37 ) }
    dend_27 { pt3dadd( -21.5722, -139.385, 2.77052, 0.29 ) }
    dend_27 { pt3dadd( -22.0961, -139.32, 3.4838, 0.29 ) }
    dend_27 { pt3dadd( -22.7171, -139.242, 4.32944, 0.29 ) }
    dend_27 { pt3dadd( -23.3114, -139.191, 5.14964, 0.37 ) }
    dend_27 { pt3dadd( -23.6408, -139.188, 5.52145, 0.37 ) }
    dend_27 { pt3dadd( -23.9973, -139.201, 5.85272, 0.29 ) }
    dend_27 { pt3dadd( -24.4417, -139.193, 6.15015, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 36.4626, -190.706, 14.3913, 0.22 ) }
    dend_23 { pt3dadd( 35.8589, -191.487, 14.7338, 0.22 ) }
    dend_23 { pt3dadd( 34.9891, -192.611, 15.2273, 0.22 ) }
    dend_23 { pt3dadd( 34.4946, -193.25, 15.5079, 0.29 ) }
    dend_23 { pt3dadd( 34.2251, -193.599, 15.6608, 0.29 ) }
    dend_23 { pt3dadd( 33.5268, -194.501, 16.057, 0.22 ) }
    dend_23 { pt3dadd( 33.0705, -195.091, 16.3159, 0.22 ) }
    dend_23 { pt3dadd( 29.0104, -202.769, 18.1111, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 36.4626, -190.706, 14.3913, 0.37 ) }
    dend_22 { pt3dadd( 36.4894, -191.527, 14.8216, 0.37 ) }
    dend_22 { pt3dadd( 36.4022, -192.276, 15.124, 0.96 ) }
    dend_22 { pt3dadd( 36.1791, -193.214, 15.4039, 0.59 ) }
    dend_22 { pt3dadd( 35.9545, -193.934, 15.5412, 0.59 ) }
    dend_22 { pt3dadd( 35.7163, -194.697, 15.6867, 0.22 ) }
    dend_22 { pt3dadd( 35.4895, -195.424, 15.8253, 0.22 ) }
    dend_22 { pt3dadd( 35.1477, -196.204, 15.9191, 0.22 ) }
    dend_22 { pt3dadd( 34.7826, -196.868, 15.9098, 0.22 ) }
    dend_22 { pt3dadd( 34.3066, -197.555, 15.8159, 0.22 ) }
    dend_22 { pt3dadd( 33.466, -204.291, 17.5559, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 115.568, -9.95736, -179.676, 0.37 ) }
    dend_6 { pt3dadd( 115.148, -9.27999, -186.103, 0.37 ) }
    dend_6 { pt3dadd( 115.072, -9.13382, -187.189, 0.66 ) }
    dend_6 { pt3dadd( 114.997, -8.97722, -188.029, 0.66 ) }
    dend_6 { pt3dadd( 114.958, -8.88637, -188.428, 0.96 ) }
    dend_6 { pt3dadd( 114.866, -8.59272, -189.435, 1.11 ) }
    dend_6 { pt3dadd( 114.783, -8.18281, -190.594, 1.11 ) }
    dend_6 { pt3dadd( 114.841, -7.34877, -191.928, 0.81 ) }
    dend_6 { pt3dadd( 114.943, -6.62497, -192.866, 1.4 ) }
    dend_6 { pt3dadd( 114.995, -6.36755, -193.141, 1.4 ) }
    dend_6 { pt3dadd( 115.287, -5.3369, -194.02, 0.37 ) }
    dend_6 { pt3dadd( 115.572, -4.5926, -194.486, 0.37 ) }
    dend_6 { pt3dadd( 116.012, -3.70468, -194.876, 0.37 ) }
    dend_6 { pt3dadd( 116.416, -2.99752, -195.078, 0.66 ) }
    dend_6 { pt3dadd( 116.752, -2.41578, -195.192, 0.66 ) }
    dend_6 { pt3dadd( 117.148, -1.56313, -195.324, 0.29 ) }
    dend_6 { pt3dadd( 117.377, -0.884061, -195.394, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 117.496, -0.377362, -195.439, 0.52 ) }
    dend_6 { pt3dadd( 117.649, 0.488123, -195.545, 0.29 ) }
    dend_6 { pt3dadd( 117.8, 1.38902, -195.697, 1.03 ) }
    dend_6 { pt3dadd( 118.032, 2.73917, -196.016, 0.66 ) }
    dend_6 { pt3dadd( 118.184, 3.59842, -196.257, 0.44 ) }
    dend_6 { pt3dadd( 118.242, 3.90448, -196.348, 0.66 ) }
    dend_6 { pt3dadd( 118.42, 4.85035, -196.646, 0.37 ) }
    dend_6 { pt3dadd( 118.526, 5.32388, -196.79, 0.52 ) }
    dend_6 { pt3dadd( 118.779, 6.22751, -197.034, 0.37 ) }
    dend_6 { pt3dadd( 119.002, 6.83485, -197.156, 0.37 ) }
    dend_6 { pt3dadd( 119.249, 7.47922, -197.282, 0.37 ) }
    dend_6 { pt3dadd( 119.488, 8.21121, -197.403, 0.37 ) }
    dend_6 { pt3dadd( 119.682, 8.92352, -197.491, 0.96 ) }
    dend_6 { pt3dadd( 119.764, 9.22281, -197.524, 0.96 ) }
    dend_6 { pt3dadd( 120.136, 10.4102, -197.646, 0.29 ) }
    dend_6 { pt3dadd( 120.455, 11.3696, -197.76, 0.29 ) }
    dend_6 { pt3dadd( 120.767, 12.2581, -197.883, 0.29 ) }
    dend_6 { pt3dadd( 121.031, 13.0018, -197.996, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 115.568, -9.95736, -179.676, 0.52 ) }
    dend_5 { pt3dadd( 114.988, -5.23563, -181.637, 0.52 ) }
    dend_5 { pt3dadd( 114.942, -4.84502, -181.779, 0.52 ) }
    dend_5 { pt3dadd( 114.717, -3.00231, -182.371, 0.37 ) }
    dend_5 { pt3dadd( 114.654, -2.48656, -182.536, 0.29 ) }
    dend_5 { pt3dadd( 114.463, -0.9263, -183.037, 0.29 ) }
    dend_5 { pt3dadd( 114.302, 0.400131, -183.463, 0.29 ) }
    dend_5 { pt3dadd( 114.257, 1.68149, -183.524, 0.29 ) }
    dend_5 { pt3dadd( 114.228, 2.23615, -183.561, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 129.924, 74.291, -116.342, 0.29 ) }
    dend_67 { pt3dadd( 129.293, 74.9237, -118.975, 0.29 ) }
    dend_67 { pt3dadd( 129.146, 74.9278, -119.778, 0.29 ) }
    dend_67 { pt3dadd( 128.973, 74.8291, -120.903, 0.29 ) }
    dend_67 { pt3dadd( 128.681, 74.6465, -122.936, 0.29 ) }
    dend_67 { pt3dadd( 128.564, 74.6038, -123.707, 0.44 ) }
    dend_67 { pt3dadd( 128.404, 74.5458, -124.755, 0.44 ) }
    dend_67 { pt3dadd( 127.897, 74.2238, -127.819, 0.29 ) }
    dend_67 { pt3dadd( 127.686, 74.0061, -129.283, 0.29 ) }
    dend_67 { pt3dadd( 127.593, 73.8518, -130.147, 0.29 ) }
    dend_67 { pt3dadd( 127.463, 73.6111, -131.466, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 129.924, 74.291, -116.342, 0.22 ) }
    dend_66 { pt3dadd( 128.872, 73.589, -115.729, 0.22 ) }
    dend_66 { pt3dadd( 128.01, 73.0909, -115.224, 0.22 ) }
    dend_66 { pt3dadd( 126.943, 72.5602, -114.57, 1.4 ) }
    dend_66 { pt3dadd( 125.747, 71.9649, -113.836, 0.22 ) }
    dend_66 { pt3dadd( 124.413, 71.3007, -113.017, 1.84 ) }
    dend_66 { pt3dadd( 123.244, 70.7189, -112.3, 0.22 ) }
    dend_66 { pt3dadd( 122.244, 70.2982, -111.611, 0.22 ) }
    dend_66 { pt3dadd( 121.315, 69.96, -110.937, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 143.855, 73.3132, -58.3877, 0.74 ) }
    dend_64 { pt3dadd( 143.722, 73.728, -58.3775, 0.74 ) }
    dend_64 { pt3dadd( 143.481, 74.3851, -58.3486, 0.22 ) }
    dend_64 { pt3dadd( 143.306, 74.7735, -58.335, 0.22 ) }
    dend_64 { pt3dadd( 142.911, 75.5239, -58.3043, 0.22 ) }
    dend_64 { pt3dadd( 142.537, 76.1855, -58.2394, 1.33 ) }
    dend_64 { pt3dadd( 142.352, 76.5138, -58.188, 1.33 ) }
    dend_64 { pt3dadd( 141.959, 77.1751, -58.0314, 0.22 ) }
    dend_64 { pt3dadd( 141.66, 77.6352, -57.8893, 0.22 ) }
    dend_64 { pt3dadd( 141.457, 77.9183, -57.7908, 0.22 ) }
    dend_64 { pt3dadd( 140.989, 78.5207, -57.5942, 0.22 ) }
    dend_64 { pt3dadd( 140.653, 78.9759, -57.4123, 0.22 ) }
    dend_64 { pt3dadd( 140.467, 79.2873, -57.2875, 0.37 ) }
    dend_64 { pt3dadd( 140.318, 79.6219, -57.1587, 0.37 ) }
    dend_64 { pt3dadd( 140.201, 80.0215, -57.0042, 0.37 ) }
    dend_64 { pt3dadd( 140.14, 80.3367, -56.8995, 0.15 ) }
    dend_64 { pt3dadd( 139.967, 81.2101, -56.6742, 0.22 ) }
    dend_64 { pt3dadd( 139.819, 81.9299, -56.5175, 0.22 ) }
    dend_64 { pt3dadd( 139.706, 82.4339, -56.4023, 0.22 ) }
    dend_64 { pt3dadd( 139.454, 83.3355, -56.2152, 0.22 ) }
    dend_64 { pt3dadd( 139.232, 83.9516, -56.0848, 0.22 ) }
    dend_64 { pt3dadd( 138.908, 84.7157, -55.9118, 0.22 ) }
    dend_64 { pt3dadd( 138.775, 84.9898, -55.8494, 0.74 ) }
    dend_64 { pt3dadd( 138.177, 86.0848, -55.5759, 0.29 ) }
    dend_64 { pt3dadd( 137.797, 86.7291, -55.4192, 0.29 ) }
    dend_64 { pt3dadd( 137.42, 87.3574, -55.2784, 0.29 ) }
    dend_64 { pt3dadd( 137.155, 87.8194, -55.1493, 0.29 ) }
    dend_64 { pt3dadd( 136.87, 88.3893, -54.9408, 0.52 ) }
    dend_64 { pt3dadd( 136.624, 88.9095, -54.7222, 0.37 ) }
    dend_64 { pt3dadd( 136.324, 89.5978, -54.4134, 0.29 ) }
    dend_64 { pt3dadd( 136.254, 89.7675, -54.332, 0.37 ) }
    dend_64 { pt3dadd( 135.981, 90.43, -54.0137, 0.37 ) }
    dend_64 { pt3dadd( 135.598, 91.3041, -53.5831, 0.37 ) }
    dend_64 { pt3dadd( 135.288, 91.9711, -53.2367, 0.22 ) }
    dend_64 { pt3dadd( 135.122, 92.3366, -53.0329, 0.22 ) }
    dend_64 { pt3dadd( 134.942, 92.7284, -52.8106, 0.74 ) }
    dend_64 { pt3dadd( 134.837, 92.9455, -52.6956, 0.88 ) }
    dend_64 { pt3dadd( 134.488, 93.628, -52.3994, 0.59 ) }
    dend_64 { pt3dadd( 134.043, 94.4154, -52.1515, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 143.855, 73.3132, -58.3877, 0.29 ) }
    dend_63 { pt3dadd( 145.058, 73.6537, -58.9527, 0.29 ) }
    dend_63 { pt3dadd( 146.155, 73.803, -59.6302, 0.29 ) }
    dend_63 { pt3dadd( 147.248, 73.8711, -60.3761, 1.03 ) }
    dend_63 { pt3dadd( 147.765, 73.8859, -60.7478, 1.03 ) }
    dend_63 { pt3dadd( 149.05, 73.87, -61.6282, 0.44 ) }
    dend_63 { pt3dadd( 150.031, 73.8384, -62.2539, 0.29 ) }
    dend_63 { pt3dadd( 151.339, 73.6949, -63.0691, 0.96 ) }
    dend_63 { pt3dadd( 151.781, 73.629, -63.3271, 0.96 ) }
    dend_63 { pt3dadd( 153.085, 73.4528, -63.9977, 0.22 ) }
    dend_63 { pt3dadd( 154.088, 73.3642, -64.4586, 0.22 ) }
    dend_63 { pt3dadd( 155.131, 73.3464, -64.8351, 0.22 ) }
    dend_63 { pt3dadd( 156.265, 73.4037, -65.1916, 0.22 ) }
    dend_63 { pt3dadd( 157.578, 73.5674, -65.5642, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 158.397, 73.721, -65.7904, 0.52 ) }
    dend_63 { pt3dadd( 159.067, 73.921, -65.9658, 0.29 ) }
    dend_63 { pt3dadd( 159.902, 74.3069, -66.1739, 1.03 ) }
    dend_63 { pt3dadd( 160.439, 74.6701, -66.2527, 1.03 ) }
    dend_63 { pt3dadd( 160.897, 75.1279, -66.2697, 0.88 ) }
    dend_63 { pt3dadd( 161.342, 75.6598, -66.2284, 0.66 ) }
    dend_63 { pt3dadd( 161.879, 76.3936, -66.1218, 0.37 ) }
    dend_63 { pt3dadd( 162.402, 77.2177, -65.9463, 0.59 ) }
    dend_63 { pt3dadd( 162.989, 78.2833, -65.6641, 0.29 ) }
    dend_63 { pt3dadd( 163.486, 79.2404, -65.3483, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -27.9297, -175.663, -6.38348, 0.74 ) }
    dend_30 { pt3dadd( -28.0868, -176.216, -6.15156, 0.74 ) }
    dend_30 { pt3dadd( -28.3856, -177.037, -5.76202, 0.66 ) }
    dend_30 { pt3dadd( -28.6524, -177.58, -5.4672, 0.52 ) }
    dend_30 { pt3dadd( -29.0667, -178.241, -5.07456, 0.37 ) }
    dend_30 { pt3dadd( -29.3125, -178.604, -4.86115, 0.74 ) }
    dend_30 { pt3dadd( -29.5118, -178.912, -4.67572, 1.03 ) }
    dend_30 { pt3dadd( -29.7863, -179.321, -4.42015, 0.74 ) }
    dend_30 { pt3dadd( -30.178, -179.912, -4.05857, 0.52 ) }
    dend_30 { pt3dadd( -30.5563, -180.567, -3.7002, 0.52 ) }
    dend_30 { pt3dadd( -30.7962, -181.089, -3.4709, 0.66 ) }
    dend_30 { pt3dadd( -31.1045, -181.992, -3.16947, 0.88 ) }
    dend_30 { pt3dadd( -31.1869, -182.312, -3.09055, 1.18 ) }
    dend_30 { pt3dadd( -31.2834, -182.825, -2.99903, 0.81 ) }
    dend_30 { pt3dadd( -31.3782, -183.55, -2.91591, 0.52 ) }
    dend_30 { pt3dadd( -31.4581, -184.162, -2.88542, 0.52 ) }
    dend_30 { pt3dadd( -31.5821, -184.887, -2.88067, 0.52 ) }
    dend_30 { pt3dadd( -31.6612, -185.232, -2.89613, 0.52 ) }
    dend_30 { pt3dadd( -31.8337, -185.91, -2.92942, 0.52 ) }
    dend_30 { pt3dadd( -32.0248, -186.581, -2.9593, 0.52 ) }
    dend_30 { pt3dadd( -32.2078, -187.145, -2.99145, 1.03 ) }
    dend_30 { pt3dadd( -32.3546, -187.556, -3.01271, 1.25 ) }
    dend_30 { pt3dadd( -32.5741, -188.068, -3.03173, 0.66 ) }
    dend_30 { pt3dadd( -32.8334, -188.567, -3.04429, 0.29 ) }
    dend_30 { pt3dadd( -33.22, -189.06, -3.02875, 0.29 ) }
    dend_30 { pt3dadd( -33.4867, -189.004, -2.9535, 0.52 ) }
    dend_30 { pt3dadd( -34.1635, -188.589, -2.71942, 0.29 ) }
    dend_30 { pt3dadd( -34.6902, -188.195, -2.53263, 0.29 ) }
    dend_30 { pt3dadd( -35.2429, -187.703, -2.3287, 0.22 ) }
    dend_30 { pt3dadd( -35.3466, -187.597, -2.29043, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -27.9297, -175.663, -6.38348, 0.22 ) }
    dend_29 { pt3dadd( -28.5154, -177.558, -6.96049, 0.22 ) }
    dend_29 { pt3dadd( -28.7489, -178.315, -7.20124, 0.22 ) }
    dend_29 { pt3dadd( -29.1497, -179.823, -7.6838, 0.22 ) }
    dend_29 { pt3dadd( -29.5483, -181.534, -8.21622, 0.22 ) }
    dend_29 { pt3dadd( -29.8714, -182.921, -8.64767, 0.22 ) }
    dend_29 { pt3dadd( -30.4985, -185.612, -9.48518, 0.22 ) }
    dend_29 { pt3dadd( -30.7778, -186.772, -9.79864, 0.22 ) }
    dend_29 { pt3dadd( -31.325, -189.055, -10.4622, 0.22 ) }
    dend_29 { pt3dadd( -31.5914, -190.32, -10.8832, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 121.031, 13.0018, -197.996, 0.29 ) }
    dend_8 { pt3dadd( 121.878, 12.378, -198.538, 0.29 ) }
    dend_8 { pt3dadd( 122.366, 12.0193, -198.85, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 121.031, 13.0018, -197.996, 0.37 ) }
    dend_7 { pt3dadd( 121.361, 13.7214, -197.998, 0.37 ) }
    dend_7 { pt3dadd( 121.75, 14.5687, -198.0, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_78 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 ModelViewParmSubset_3.append()
    dend_88 ModelViewParmSubset_3.append()
    dend_79 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_85 ModelViewParmSubset_3.append()
    dend_80 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_87 ModelViewParmSubset_3.append()
    dend_86 ModelViewParmSubset_3.append()
    dend_82 ModelViewParmSubset_3.append()
    dend_81 ModelViewParmSubset_3.append()
    dend_75 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_84 ModelViewParmSubset_3.append()
    dend_83 ModelViewParmSubset_3.append()
    dend_77 ModelViewParmSubset_3.append()
    dend_76 ModelViewParmSubset_3.append()
    dend_74 ModelViewParmSubset_3.append()
    dend_73 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 7
    dend_50 nseg = 5
    dend_44 nseg = 3
    dend_41 nseg = 5
    dend_32 nseg = 3
    dend_88 nseg = 3
    dend_69 nseg = 5
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_46 nseg = 3
    dend_45 nseg = 7
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 5
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_71 nseg = 3
    dend_70 nseg = 3
    dend_55 nseg = 3
    dend_40 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_11 nseg = 7
    dend_2 nseg = 11
    dend_68 nseg = 3
    dend_59 nseg = 5
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_ChC_7a1b7e3c70_0_0


