// Cell: bIR215_L4_BTC_22df25e508_0_0
/*
{
  "id" : "bIR215_L4_BTC_22df25e508_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.5025, 1.8584, 2.77", "2.26589, -15.9214, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 10.2775, -3.7416, 1.38", "-6.31171, 12.2743, -3.96364, 1.38", "-8.21108, 15.4009, -4.31129, 1.66", "-9.83285, 18.0704, -4.60813, 1.38", "-11.1297, 20.2052, -4.84551, 1.11", "-12.1539, 21.8912, -5.03298, 1.11", "-14.5218, 25.7889, -5.46638, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.4475, 6.4384, 1.38", "6.01576, 10.2718, 7.46486, 1.38", "6.14019, 12.6355, 8.10154, 1.38", "6.50901, 16.7684, 9.35014, 1.38", "7.01314, 21.1766, 10.7451, 1.38", "7.39258, 24.4944, 11.7951, 1.38", "7.73116, 27.455, 12.732, 0.83", "7.95228, 30.3331, 13.707, 1.38", "8.27612, 33.7485, 14.9148, 1.38", "9.01601, 37.8215, 16.3302, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.64226", "6.19422, -24.7888, -0.978947, 0.64226", "9.61231, -39.3941, -0.978947, 0.64226" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.26589, -15.9214, 1.8584, 2.22", "4.73802, -20.5625, 1.37752, 2.22", "6.02405, -22.9768, 1.12736, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.26589, -15.9214, 1.8584, 0.83", "-0.688612, -18.2939, 2.36253, 0.83", "-2.77153, -19.9503, 2.97472, 1.11", "-5.64526, -22.2356, 3.81934, 0.83", "-7.85255, -23.991, 4.46807, 0.83", "-11.595, -26.9671, 5.56802, 1.38", "-15.1721, -29.8118, 6.61936, 1.38", "-18.3693, -32.0714, 7.80197, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.5218, 25.7889, -5.46638, 0.55", "-17.1174, 26.7873, -3.69353, 0.55", "-18.2941, 27.1197, -2.59375, 0.55", "-19.1109, 27.3094, -1.72598, 0.55", "-20.4432, 27.5589, -0.244504, 1.11", "-22.7789, 27.8996, 2.36638, 0.83", "-25.1249, 28.1263, 5.05362, 0.83", "-27.5436, 28.1487, 8.06468, 0.55", "-28.8557, 28.064, 9.73127, 1.38", "-29.8082, 27.9315, 10.9634, 0.28", "-30.6761, 27.7409, 12.1043, 0.83", "-31.7134, 27.5148, 13.5132, 0.28", "-32.4224, 27.3524, 14.5258, 0.55", "-33.3347, 27.2063, 15.7435, 0.55", "-34.7846, 27.0392, 17.6562, 0.55", "-36.0399, 26.904, 19.295, 0.55", "-38.1656, 26.7567, 22.1052, 0.55", "-39.0719, 26.7183, 23.2601, 0.55", "-40.8274, 26.6664, 25.4081, 0.83", "-42.074, 26.6597, 26.8724, 0.83", "-43.087, 26.6619, 27.9783, 0.83", "-45.2598, 26.7125, 30.2748, 0.83", "-46.0774, 26.7124, 31.0995, 0.83", "-48.0249, 26.6943, 33.1701, 0.83", "-50.6715, 26.5964, 36.0605, 0.83", "-51.3373, 26.5909, 36.7786, 0.83", "-52.801, 26.6122, 38.3011, 0.28", "-53.6427, 26.5849, 39.0957, 0.83", "-55.6866, 26.4852, 40.9396, 0.28", "-57.1597, 26.3831, 42.1257, 0.83", "-58.917, 26.244, 43.4086, 0.28", "-59.3, 26.2112, 43.6803, 0.55", "-61.5254, 26.0776, 45.1163, 0.55", "-63.1451, 26.029, 46.0849, 0.28", "-65.054, 25.9533, 46.9953, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.5218, 25.7889, -5.46638, 1.11", "-15.4005, 28.9711, -7.45321, 1.11", "-15.9067, 30.7082, -8.37619, 1.11", "-16.5171, 32.8033, -9.48937, 1.11", "-17.0303, 34.5645, -10.4252, 1.11", "-17.6346, 36.6383, -11.5271, 0.83", "-18.2534, 38.7622, -12.6556, 0.83", "-18.7064, 40.4369, -13.3067, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.01601, 37.8215, 16.3302, 0.83", "7.87408, 41.6561, 18.0348, 0.83", "7.01999, 44.5241, 19.3098, 0.83", "6.35845, 46.7455, 20.2973, 0.83", "5.32609, 50.2121, 21.8384, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.01601, 37.8215, 16.3302, 0.83", "12.2668, 40.3961, 16.6554, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.64226", "13.0304, -53.9995, -0.978947, 0.64226", "16.4485, -68.6049, -0.978947, 0.64226" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "6.02405, -22.9768, 1.12736, 0.83", "6.97331, -23.9753, -0.721058, 0.83", "7.52146, -24.4144, -1.81558, 0.83", "8.19644, -24.8626, -3.18938, 0.83", "10.9038, -26.5803, -8.85594, 0.83", "12.4068, -27.523, -11.9959, 0.83", "14.6593, -28.9358, -16.7017, 0.55", "15.6532, -29.5438, -19.0317, 0.83", "16.7474, -30.163, -21.748, 0.83", "17.7745, -30.6576, -24.3211, 1.11", "17.992, -30.73, -24.7508, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.02405, -22.9768, 1.12736, 1.66", "7.11735, -25.8128, 1.19202, 1.66", "8.69462, -29.2332, 1.24361, 1.11", "9.88675, -31.501, 1.27718, 1.11", "12.1223, -35.0301, 1.67057, 1.11", "14.0307, -38.043, 2.00641, 1.11", "15.3656, -40.1504, 2.24133, 1.38", "16.9551, -42.4019, 2.51786, 1.11", "17.9605, -43.6541, 2.73389, 1.11", "22.2637, -47.9909, 3.85472, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-18.3693, -32.0714, 7.80197, 0.28", "-18.5957, -35.0834, 11.3906, 0.28", "-18.7816, -36.3447, 13.0226, 1.11", "-19.4205, -40.5627, 18.7986, 0.55", "-19.585, -41.8613, 20.5397, 0.83", "-19.9493, -44.736, 24.3938, 0.83", "-20.3691, -48.0493, 28.8358, 0.55", "-20.6346, -49.9346, 31.4721, 1.11", "-21.0568, -53.2253, 36.2593, 0.55", "-21.2694, -54.3917, 37.9333, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-18.3693, -32.0714, 7.80197, 0.83", "-22.9203, -32.5396, 9.05933, 0.83", "-26.3305, -32.8636, 9.95553, 1.11", "-29.7001, -33.082, 10.7637, 0.83", "-33.485, -33.2515, 11.5718, 0.83", "-38.1525, -33.4606, 12.5684, 0.83", "-42.608, -33.6602, 13.5196, 0.83", "-47.4933, -33.8719, 14.4907, 1.11", "-52.6325, -34.0138, 15.3506, 1.11", "-57.1864, -34.0783, 16.0172, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-65.054, 25.9533, 46.9953, 0.28", "-64.4611, 24.2115, 48.3008, 0.28", "-64.2505, 23.5931, 48.7644, 0.83", "-63.1878, 20.4716, 51.1042, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-65.054, 25.9533, 46.9953, 0.28", "-68.1671, 26.9966, 48.7445, 0.28", "-69.3474, 27.363, 48.9628, 0.55", "-72.0607, 28.0989, 49.0487, 0.28", "-74.531, 28.7028, 48.9845, 0.83", "-77.4734, 29.4222, 48.9079, 0.28", "-80.296, 30.1122, 48.8345, 0.28", "-85.2797, 31.2001, 47.9259, 0.28", "-86.3191, 31.4176, 47.628, 0.83", "-87.9705, 31.7692, 46.913, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-18.7064, 40.4369, -13.3067, 0.55", "-20.2875, 40.8195, -13.92, 0.55", "-23.075, 41.494, -15.0014, 0.55", "-25.7662, 42.1452, -16.0454, 0.83", "-30.6216, 43.3201, -17.9289, 0.55", "-33.665, 44.0565, -19.1095, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-18.7064, 40.4369, -13.3067, 0.55", "-17.4165, 44.6975, -13.6414, 0.55", "-16.891, 46.7978, -13.6924, 0.55", "-16.5257, 48.588, -13.59, 0.83", "-16.0872, 50.9369, -13.346, 0.55", "-15.8189, 52.4449, -13.1793, 0.83", "-15.4183, 54.6898, -12.8988, 0.55", "-15.1634, 56.3898, -12.5915, 0.83", "-14.7076, 58.8422, -12.1946, 0.28", "-14.3916, 60.2195, -12.0027, 0.83", "-13.777, 62.4963, -11.7221, 0.55", "-13.2582, 64.2866, -11.5282, 0.83", "-12.3958, 67.0384, -11.2842, 0.55", "-11.3323, 70.1291, -11.0858, 0.83", "-10.2757, 73.005, -10.9983, 0.83", "-8.84276, 76.834, -10.8701, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "5.32609, 50.2121, 21.8384, 0.83", "6.4134, 54.2213, 22.8312, 0.83", "7.39851, 58.6304, 23.9127, 0.83", "7.91364, 61.3566, 24.6824, 0.83", "8.55002, 65.1414, 25.848, 0.83", "9.21787, 69.4023, 27.1822, 0.83", "9.87, 74.1228, 28.6662, 0.83", "10.3883, 78.6155, 30.1528, 0.83", "10.8426, 83.0725, 31.7314, 0.83", "11.0423, 85.753, 32.6519, 0.55", "11.1787, 88.6759, 33.5425, 0.55", "11.2905, 91.1274, 34.1228, 0.83", "11.4134, 93.3235, 34.4627, 0.83", "11.5742, 95.3518, 34.6561, 0.55", "11.7991, 97.9201, 34.6618, 0.83", "11.9893, 100.006, 34.6037, 0.55", "12.1354, 101.797, 34.5418, 0.83", "12.3182, 104.576, 34.4582, 0.55", "12.4333, 107.368, 34.3419, 0.83", "12.4656, 109.91, 34.0109, 0.55", "12.4383, 111.291, 33.7671, 0.55", "12.3397, 113.43, 33.371, 0.83", "12.1231, 116.486, 32.7787, 0.83", "11.9212, 119.018, 32.2928, 0.55", "11.3464, 124.749, 31.1658, 0.83", "10.9781, 128.073, 30.5149, 0.83", "10.5465, 132.127, 29.7813, 0.83", "10.3113, 134.59, 29.4437, 0.83", "10.0996, 136.562, 29.2975, 0.83", "9.87324, 138.503, 29.3103, 0.55", "9.58833, 140.712, 29.4825, 0.55", "9.17396, 143.226, 29.6716, 0.83", "8.24455, 147.889, 30.005, 0.83", "7.49201, 151.577, 30.2385, 1.11", "6.88633, 154.377, 30.3948, 0.55", "6.14391, 157.445, 30.5693, 1.11", "4.94197, 161.744, 30.8428, 0.83", "3.86441, 165.307, 31.0226, 0.83", "3.09864, 167.677, 31.0588, 0.83", "2.37002, 170.045, 31.0126, 0.55", "1.39903, 173.375, 30.8681, 0.55", "1.19282, 174.163, 30.8134, 0.55", "0.541599, 177.093, 30.6227, 0.55", "0.11835, 179.237, 30.4192, 0.28", "-0.463442, 182.689, 29.9323, 0.55", "-0.973358, 186.636, 29.2081, 0.55", "-1.19673, 188.867, 28.7359, 0.55", "-1.55249, 192.759, 27.8951, 0.83", "-1.88917, 196.876, 26.9886, 0.83", "-2.16441, 199.801, 26.22, 0.83", "-2.37147, 201.491, 25.6915, 0.55", "-2.57109, 202.99, 25.18, 0.83", "-2.98254, 205.392, 24.4113, 0.83", "-3.64814, 208.424, 23.5114, 0.83", "-4.57004, 212.231, 22.6709, 0.83", "-5.19275, 214.632, 22.2272, 0.83", "-5.81851, 216.856, 21.7612, 0.83", "-6.74207, 220.0, 21.0246, 0.55", "-7.7849, 223.277, 20.2444, 0.55", "-8.53638, 225.661, 19.7163, 0.55", "-9.33157, 228.311, 19.1453, 0.83", "-10.4999, 232.356, 18.2068, 1.11", "-11.577, 236.596, 17.3001, 0.55", "-12.0494, 239.075, 16.8732, 0.55", "-12.4883, 241.962, 16.4843, 0.55", "-12.7894, 244.836, 16.1777, 0.83", "-12.9254, 248.318, 15.904, 0.83", "-12.8471, 253.126, 15.6213, 0.83", "-12.4601, 258.893, 15.18, 0.83", "-12.1186, 262.247, 14.8259, 0.55", "-11.7134, 265.57, 14.3855, 0.55", "-11.1208, 269.738, 13.7481, 0.83", "-10.8799, 271.69, 13.3959, 0.83", "-10.6738, 274.77, 12.8041, 0.83", "-10.6874, 278.4, 12.1978, 0.83", "-10.9461, 281.391, 11.8779, 0.28", "-11.2086, 282.935, 11.7916, 0.83", "-12.2115, 287.332, 11.6863, 0.83", "-13.1566, 290.825, 11.7229, 0.83", "-14.2718, 294.207, 11.9302, 0.83", "-15.5629, 297.675, 12.3009, 0.83", "-16.494, 299.975, 12.6177, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.32609, 50.2121, 21.8384, 0.83", "4.28665, 51.2083, 23.3613, 0.83", "3.54868, 52.1118, 24.5704, 0.55", "2.3594, 53.5785, 26.5147, 0.55", "1.2451, 54.9516, 28.3278, 0.55", "-0.0157389, 56.3436, 30.3095, 0.55", "-0.956318, 57.2431, 31.7675, 0.55", "-2.56587, 58.494, 34.29, 0.55", "-3.73309, 59.1662, 36.0213, 0.55", "-5.39216, 59.7295, 38.1885, 0.55", "-8.09763, 59.9048, 41.2642, 0.55", "-9.74014, 59.6734, 42.8764, 0.55", "-11.5454, 59.0081, 44.4573, 0.55", "-12.6373, 58.3798, 45.2648, 0.55", "-13.5238, 57.6953, 45.8231, 0.55", "-15.1835, 56.0876, 46.6657, 0.28", "-15.9925, 55.1503, 47.0074, 0.83", "-17.0732, 53.781, 47.445, 0.55", "-17.7653, 52.7694, 47.6629, 0.55", "-18.6114, 51.2192, 47.8295, 0.55", "-19.3691, 49.5875, 47.8921, 0.83", "-19.9983, 48.1328, 47.8794, 0.55", "-20.534, 46.8971, 47.811, 0.55", "-21.783, 43.9976, 47.5571, 0.55", "-23.0581, 41.2373, 47.2801, 0.83", "-24.0974, 39.196, 47.0319, 0.83", "-25.2627, 37.1489, 46.6318, 0.83", "-26.7008, 34.8694, 46.1405, 0.55", "-27.3996, 33.8343, 45.9555, 0.28", "-28.2953, 32.6089, 45.8079, 0.55", "-29.3863, 31.2905, 45.674, 0.28", "-31.7388, 28.5985, 45.5255, 0.55", "-33.2032, 27.0011, 45.5149, 0.55", "-34.6199, 25.4788, 45.608, 0.28", "-35.8891, 24.1136, 45.754, 0.55", "-38.041, 21.6618, 46.0716, 0.55", "-38.7711, 20.776, 46.2211, 0.83", "-40.0259, 19.1179, 46.5375, 0.55", "-41.7231, 16.6413, 46.8685, 0.55", "-42.8141, 14.7066, 47.0132, 0.83", "-43.826, 12.3524, 47.1169, 0.55", "-44.3755, 10.5178, 47.1303, 0.55", "-44.7879, 8.66164, 47.0927, 0.55", "-44.9269, 7.67041, 47.0452, 0.83", "-45.1415, 5.11035, 46.8489, 0.55", "-45.2698, 2.10744, 46.5684, 0.28", "-45.3797, -2.24033, 46.1473, 0.28", "-45.4364, -4.06928, 45.9085, 0.83", "-45.5458, -7.66048, 45.3917, 0.28", "-45.5877, -8.91982, 45.2201, 0.83", "-45.6183, -9.70527, 45.1224, 0.28", "-45.6354, -10.9394, 44.9385, 0.83", "-45.6805, -13.4001, 44.5748, 0.28", "-45.7323, -14.3438, 44.4712, 0.55", "-45.9563, -16.4766, 44.3189, 0.28", "-46.1162, -17.7098, 44.2487, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.2668, 40.3961, 16.6554, 0.83", "13.8588, 41.1678, 15.1293, 0.83", "15.749, 42.2036, 13.4313, 0.83", "16.8999, 42.8917, 12.4821, 0.83", "23.6755, 47.1545, 7.54386, 0.55", "25.5015, 48.368, 6.44411, 0.55", "26.4727, 49.0428, 5.98136, 0.55", "27.7104, 49.9198, 5.5199, 0.55", "28.8797, 50.8314, 5.30139, 1.11", "30.117, 51.9749, 5.38756, 0.55", "32.0062, 54.0168, 6.09006, 0.55", "33.6039, 55.8822, 6.75547, 0.55", "34.6114, 57.1078, 7.22623, 0.55", "35.7853, 58.6849, 7.92642, 0.83", "37.065, 60.646, 8.8325, 0.55", "37.9515, 62.2436, 9.54223, 1.11", "38.7856, 63.9328, 10.3053, 0.55", "39.5648, 65.6039, 11.064, 0.83", "40.8945, 68.5158, 12.3328, 0.55", "41.5979, 70.0401, 12.9662, 0.55", "42.5727, 72.1449, 13.7706, 0.55", "43.4002, 73.7769, 14.3139, 0.55", "43.9323, 74.7826, 14.601, 0.28", "45.051, 76.7593, 15.08, 0.55", "45.9358, 78.2321, 15.3578, 0.28", "46.7775, 79.5592, 15.5953, 0.55", "48.3972, 82.0432, 16.0109, 0.55", "49.2882, 83.4466, 16.2125, 0.55", "50.5406, 85.3931, 16.4663, 0.28", "52.0247, 87.3058, 16.1435, 0.83", "53.4354, 88.9247, 15.5579, 0.28", "53.7789, 89.2671, 15.3738, 0.55", "54.6679, 89.9835, 14.7815, 0.28", "55.2642, 90.3965, 14.344, 0.83", "62.8748, 95.1114, 8.49107, 0.55", "65.8352, 96.8056, 6.29339, 0.55", "66.7372, 97.3202, 5.65992, 0.83", "68.777, 98.5743, 4.49382, 0.55", "69.7202, 99.2266, 4.12316, 0.55", "70.6042, 100.118, 4.14183, 0.83", "71.3666, 101.386, 4.74524, 0.28", "71.7354, 102.074, 4.94395, 0.55", "72.5508, 104.083, 5.56195, 0.28", "72.9354, 105.452, 6.09417, 0.55", "73.2603, 106.638, 6.53463, 0.28", "73.5358, 107.821, 6.80268, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.2668, 40.3961, 16.6554, 0.55", "12.5829, 39.8356, 18.3459, 0.55", "13.0573, 38.9945, 20.8826, 0.28", "13.3062, 38.5532, 22.2135, 0.55", "13.7634, 37.7426, 24.6583, 0.55", "14.3612, 36.6827, 27.8548, 0.55", "14.688, 36.1032, 29.6025, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "17.992, -30.73, -24.7508, 0.55", "15.8373, -29.0158, -26.4878, 0.55", "15.2841, -28.5284, -27.2513, 0.83", "14.0603, -27.422, -29.1532, 0.55", "13.5512, -26.989, -29.9276, 0.55", "11.4389, -25.3611, -33.9673, 0.28", "11.0102, -25.0736, -34.8315, 0.83", "9.44561, -24.1859, -38.7103, 0.55", "9.28296, -24.1128, -39.1387, 0.55", "8.85823, -23.9732, -40.3146, 0.83", "6.93432, -23.4989, -45.4841, 0.55", "6.55043, -23.436, -46.461, 0.55", "6.12726, -23.3709, -47.5807, 0.83", "5.25429, -23.1838, -50.1312, 0.55", "5.08473, -23.1125, -50.6835, 0.55", "4.8123, -22.9101, -51.7495, 0.55", "3.78807, -21.7788, -56.0823, 0.28", "3.54257, -21.4318, -57.2978, 0.83", "2.76286, -20.1107, -61.4213, 0.55", "2.57811, -19.7165, -62.4831, 0.83", "1.67127, -17.4192, -67.8141, 0.55", "1.46543, -16.6535, -69.3193, 0.28", "1.36626, -16.1395, -70.1974, 0.83", "1.24325, -15.1674, -71.6958, 0.55", "1.18758, -14.3715, -72.7344, 0.83", "1.20721, -12.427, -75.0177, 0.55", "1.47152, -9.4612, -77.8722, 0.28", "1.53311, -9.00851, -78.2918, 0.55", "1.73348, -7.80488, -79.3776, 0.28", "1.82657, -7.31684, -79.8134, 0.55", "2.15749, -5.66447, -81.2504, 0.28", "2.28822, -5.08304, -81.7296, 0.55", "2.67998, -3.26112, -83.2199, 0.28", "2.82345, -2.58725, -83.8081, 0.55", "3.09014, -1.09842, -85.1285, 0.28", "3.13286, -0.763716, -85.4313, 0.55", "3.25813, 0.57553, -86.5691, 0.28", "3.29635, 1.03939, -86.9582, 0.55", "3.34903, 2.47819, -88.1203, 0.28", "3.33821, 3.19477, -88.7866, 0.55", "3.19181, 5.28061, -90.7594, 0.28", "3.09175, 6.13006, -91.5987, 0.55", "2.7727, 8.46942, -94.2082, 0.28", "2.68377, 9.17791, -95.0625, 0.55", "2.48408, 11.4636, -98.1739, 0.28", "2.42125, 12.2252, -99.3056, 0.28", "2.34955, 13.1138, -100.702, 0.55", "2.16531, 14.6447, -103.124, 0.28", "2.12735, 14.9311, -103.541, 0.55", "1.97982, 16.1572, -105.483, 0.28", "1.90091, 16.7443, -106.407, 0.83", "1.69236, 17.9367, -108.288, 0.55", "1.565, 18.7109, -109.508, 0.55", "1.35522, 20.0993, -111.603, 0.55", "0.96801, 23.5556, -117.018, 0.83", "0.887339, 24.7503, -118.969, 0.28", "0.8815, 25.3829, -120.049, 0.55", "1.03838, 27.7325, -124.324, 0.55", "1.14298, 28.3532, -125.467, 0.55", "1.61166, 30.3569, -129.344, 0.83", "1.95995, 31.6393, -131.972, 0.28", "2.15432, 32.3069, -133.761, 0.55", "2.39451, 32.8533, -135.984, 0.28", "2.49661, 32.992, -136.954, 0.83", "2.9951, 33.3585, -142.467, 0.55", "3.15976, 33.3485, -144.596, 0.55", "3.40578, 33.1111, -149.475, 0.55", "3.42256, 32.6662, -156.742, 0.55", "3.36801, 32.5518, -158.433, 0.55", "3.13315, 32.2778, -162.683, 0.55", "2.78151, 32.0456, -167.129, 0.55", "2.42049, 31.9236, -170.588, 0.55", "1.66138, 31.7891, -175.789, 0.55", "0.701345, 31.7529, -181.064, 0.55", "0.478577, 31.7618, -182.245, 0.55", "-0.497554, 31.7695, -187.422, 0.55", "-0.738206, 31.7677, -188.669, 0.28", "-0.792975, 31.7627, -188.97, 0.55", "-2.9152, 31.2893, -200.721, 0.28", "-3.12267, 31.2353, -201.781, 0.83", "-4.36437, 30.8104, -208.03, 0.28", "-4.44674, 30.7805, -208.431, 0.55", "-5.05987, 30.5885, -211.349, 0.28", "-5.32083, 30.505, -212.532, 0.55", "-5.97278, 30.2415, -214.774, 0.28", "-6.19058, 30.1449, -215.549, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "17.992, -30.73, -24.7508, 0.55", "19.8432, -30.8226, -27.0813, 0.55", "21.4125, -30.8621, -28.8577, 0.55", "24.8933, -30.9399, -33.014, 0.83", "25.8264, -31.0031, -34.1311, 0.83", "26.921, -31.1076, -35.4236, 0.83", "27.8459, -31.1901, -36.4848, 0.83", "29.4874, -31.323, -38.307, 0.83", "32.2419, -31.6367, -41.3634, 0.83", "33.9464, -31.7733, -43.1466, 0.83", "35.7864, -31.8614, -45.1747, 0.83", "37.8267, -31.896, -47.4278, 0.83", "39.6784, -31.8888, -49.4761, 0.83", "42.6956, -31.8438, -52.7003, 0.83", "44.5675, -31.747, -54.6078, 0.83", "46.9338, -31.5012, -57.0553, 0.83", "48.4405, -31.2963, -58.6454, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "22.2637, -47.9909, 3.85472, 0.55", "24.5462, -47.7459, 4.38153, 0.55", "26.4494, -47.6319, 4.87712, 0.28", "27.6564, -47.6329, 5.23062, 0.55", "29.7037, -47.6934, 5.86137, 1.11", "33.4248, -47.9097, 7.18306, 0.55", "34.8524, -48.019, 7.74419, 0.55", "36.436, -48.2, 8.45825, 0.83", "38.116, -48.4117, 9.27143, 0.28", "38.116, -48.4117, 9.27143, 0.83", "40.9683, -49.132, 10.9357, 0.28", "41.7349, -49.3676, 11.4028, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.2637, -47.9909, 3.85472, 0.83", "24.4544, -50.9295, 3.57291, 0.83", "26.5127, -53.0729, 3.10985, 0.55", "27.9482, -54.2472, 2.64547, 0.83", "29.1195, -55.2053, 2.26657, 0.83", "30.7428, -56.5333, 1.74143, 0.83", "32.1685, -57.6995, 1.28022, 0.83", "35.2112, -59.5329, 0.137538, 0.83", "37.5498, -60.6592, -0.930496, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-57.1864, -34.0783, 16.0172, 0.55", "-58.1962, -31.6078, 14.823, 0.55", "-59.4384, -28.2003, 13.2104, 0.83", "-61.1336, -23.4426, 10.8514, 0.55", "-61.8751, -21.1338, 9.77775, 0.55", "-62.8751, -17.7586, 8.28106, 1.11", "-63.7369, -14.7524, 7.00996, 0.83", "-64.5815, -11.5835, 5.71364, 0.55", "-64.9001, -10.2871, 5.21647, 0.55", "-65.7935, -7.11816, 4.24447, 0.55", "-65.9809, -6.47517, 4.04836, 1.11", "-66.5244, -4.90343, 3.86839, 0.55", "-67.2397, -3.32333, 4.14535, 0.83", "-68.0634, -1.86114, 4.72643, 0.55", "-69.1344, -0.163898, 5.54075, 0.55", "-69.9769, 1.0343, 6.10888, 0.83", "-73.9196, 6.78431, 8.03145, 0.55", "-74.9585, 8.39626, 8.40647, 0.83", "-76.2885, 10.4993, 8.65949, 0.55", "-77.7475, 12.6949, 8.70817, 0.55", "-79.1221, 14.7405, 8.42796, 1.11", "-81.5952, 18.6113, 7.39992, 0.55", "-82.358, 19.8781, 6.94415, 0.55", "-84.2511, 23.2404, 5.72356, 0.55", "-85.4292, 25.446, 4.91343, 0.55", "-86.9357, 28.2971, 3.94524, 1.11", "-88.6485, 31.476, 2.98512, 0.55", "-89.7321, 33.4122, 2.54596, 1.11", "-91.1134, 35.8142, 2.0312, 0.28", "-91.6046, 36.6507, 1.89684, 0.55", "-92.446, 37.9971, 1.76283, 0.28", "-93.6709, 39.7239, 1.77481, 0.83", "-95.7041, 42.2534, 1.93002, 0.28", "-96.4798, 43.1891, 2.05837, 0.55", "-99.746, 47.001, 2.85328, 0.28", "-100.982, 48.4691, 3.20044, 0.83", "-102.727, 50.6063, 3.71022, 0.55", "-104.479, 52.8022, 4.22741, 0.55", "-106.237, 55.0479, 4.69886, 0.55", "-107.547, 56.8103, 5.04562, 0.83", "-109.036, 58.9365, 5.39257, 0.28", "-110.404, 61.037, 5.68478, 0.55", "-111.947, 63.8237, 5.88573, 0.55", "-112.202, 64.3968, 5.90401, 0.83", "-113.136, 67.0184, 5.63629, 0.28", "-113.491, 68.522, 5.36187, 0.55", "-113.679, 69.7671, 4.9426, 0.28", "-113.955, 72.2777, 3.65661, 0.55", "-114.133, 74.9012, 2.01317, 0.55", "-114.371, 78.6159, -0.526895, 0.28", "-114.443, 81.0581, -2.65457, 0.83", "-114.446, 84.5402, -6.06165, 0.55", "-114.378, 87.0389, -8.69163, 0.55", "-114.357, 88.0827, -9.83934, 0.55", "-114.351, 89.6558, -11.7362, 0.83", "-114.488, 93.9875, -16.9024, 0.28", "-114.565, 94.8709, -17.9947, 0.83", "-114.75, 96.1017, -19.4012, 0.28", "-115.046, 97.37, -20.6832, 0.55", "-116.337, 100.44, -23.5427, 0.83", "-116.993, 101.434, -24.0356, 0.83", "-118.33, 103.051, -24.0177, 0.28", "-119.014, 103.828, -23.8164, 0.55", "-120.645, 105.669, -22.9923, 0.28", "-121.783, 107.106, -22.2184, 0.55", "-124.796, 111.168, -18.8356, 0.28", "-125.375, 111.988, -18.0538, 0.55", "-126.218, 113.347, -16.7334, 0.28", "-126.835, 114.45, -15.6289, 0.83", "-127.788, 116.29, -13.755, 0.83", "-130.232, 121.705, -8.52786, 0.28", "-130.551, 122.528, -7.80803, 0.55", "-131.573, 125.439, -5.36625, 0.28", "-132.108, 127.115, -4.0354, 0.83", "-132.636, 128.955, -2.67711, 0.28", "-133.035, 130.493, -1.70733, 0.83", "-133.766, 133.851, -0.227072, 0.28", "-134.061, 135.391, 0.336605, 0.83", "-134.545, 138.294, 1.10755, 0.28", "-134.812, 140.068, 1.28504, 0.55", "-135.051, 141.917, 1.18466, 0.28", "-135.288, 144.071, 0.611801, 0.55", "-135.558, 146.696, -0.510731, 0.28", "-135.656, 147.789, -1.0966, 0.83", "-135.881, 150.472, -2.72389, 0.28", "-136.066, 152.456, -4.23733, 0.83", "-136.388, 155.985, -7.09556, 0.28", "-136.475, 157.121, -8.19307, 0.83", "-136.589, 159.125, -10.3947, 0.28", "-136.608, 159.91, -11.4092, 0.83", "-136.609, 164.456, -17.7383, 0.28", "-136.598, 166.19, -20.4596, 0.83", "-136.496, 170.107, -26.9676, 0.28", "-136.403, 171.501, -29.4631, 0.83", "-136.212, 173.99, -34.1826, 0.28", "-136.151, 174.757, -35.7089, 0.55", "-136.052, 177.069, -40.0882, 0.28", "-136.066, 177.828, -41.4821, 0.28", "-136.271, 179.767, -44.4922, 0.55", "-137.085, 182.666, -48.9674, 0.28", "-137.866, 184.658, -51.9933, 0.83", "-138.63, 186.441, -54.9774, 0.28", "-139.038, 187.319, -56.456, 0.55", "-139.783, 188.733, -58.6349, 0.28", "-143.643, 195.449, -67.7881, 0.28", "-144.104, 196.25, -68.7798, 0.83", "-147.146, 201.57, -74.9783, 0.28", "-147.467, 202.156, -75.6847, 0.83", "-151.058, 209.1, -83.1513, 0.28", "-151.371, 209.816, -83.6167, 0.55", "-152.61, 213.206, -83.1595, 0.28", "-152.994, 214.244, -83.1203, 0.55", "-153.638, 215.792, -82.9634, 0.28", "-154.106, 217.164, -83.6646, 0.55", "-154.768, 219.341, -85.4792, 0.28", "-155.082, 220.368, -86.349, 1.11", "-155.992, 222.693, -88.2316, 0.28", "-156.385, 223.632, -89.0783, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-57.1864, -34.0783, 16.0172, 0.55", "-61.4501, -36.428, 15.9686, 0.55", "-63.3582, -37.353, 15.9762, 0.55", "-66.3174, -38.6633, 16.083, 0.83", "-69.3485, -40.0057, 16.2344, 0.55", "-71.8875, -41.2469, 16.5192, 0.55", "-73.0703, -41.8895, 16.6996, 0.83", "-74.7737, -42.9466, 17.1363, 0.55", "-77.7238, -44.8952, 18.4113, 0.55", "-79.1848, -45.9692, 19.2838, 0.55", "-81.7728, -48.1265, 21.1703, 0.55", "-82.8923, -49.1537, 22.1694, 0.28", "-85.3566, -51.6094, 24.6497, 0.83", "-88.19, -54.4853, 27.8651, 0.55", "-88.6938, -54.9839, 28.4735, 0.55", "-90.3194, -56.4719, 30.3644, 0.83", "-92.3051, -58.0671, 32.4304, 0.55", "-93.7872, -59.1619, 33.8717, 0.83", "-97.8548, -62.0155, 37.2373, 0.55", "-99.7144, -63.2992, 38.448, 0.83", "-102.065, -64.8095, 39.718, 0.28", "-103.934, -65.8965, 40.4779, 0.55", "-106.007, -67.0168, 40.9913, 0.55", "-109.06, -68.5882, 41.389, 0.28", "-110.385, -69.255, 41.3668, 0.28", "-111.534, -69.8021, 41.3135, 0.55", "-114.625, -71.4196, 41.2032, 0.28", "-115.783, -72.1187, 41.295, 0.55", "-116.347, -72.4983, 41.3619, 0.28", "-117.848, -73.5874, 41.6903, 0.28", "-118.847, -74.319, 41.9174, 0.55", "-120.822, -75.8813, 42.3837, 0.28", "-122.794, -77.6383, 42.828, 0.55", "-125.229, -79.7899, 43.4376, 0.28", "-127.058, -81.4597, 43.935, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-63.1878, 20.4716, 51.1042, 0.28", "-65.9943, 22.4076, 51.1028, 0.28", "-66.7621, 23.0039, 51.0668, 0.55", "-68.4129, 24.3317, 50.9904, 0.28", "-68.7803, 24.6586, 50.967, 0.55", "-72.2272, 27.9775, 50.7046, 0.28", "-74.8719, 30.6666, 50.5749, 0.28", "-76.4211, 32.4601, 50.4778, 0.28", "-77.5141, 33.8494, 50.4047, 0.55", "-79.9936, 37.1315, 50.103, 0.28", "-80.9012, 38.3824, 50.008, 0.55", "-82.2705, 40.4287, 49.9133, 0.28", "-82.9809, 41.6041, 49.8525, 0.55", "-84.0899, 43.5621, 49.7524, 0.28", "-85.5033, 46.2551, 49.5213, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-63.1878, 20.4716, 51.1042, 0.28", "-60.9422, 19.2308, 48.8118, 0.28", "-60.3444, 18.9008, 48.0863, 0.83", "-57.373, 17.58, 44.8058, 0.28", "-57.0582, 17.4492, 44.4754, 0.83", "-54.1801, 16.3864, 41.8354, 0.28", "-53.3101, 16.077, 41.1038, 0.83", "-47.4976, 14.2367, 36.5499, 0.28", "-44.1584, 13.244, 34.1338, 0.28", "-43.4051, 13.0441, 33.6535, 1.11", "-39.3856, 12.031, 31.3717, 0.28", "-38.2033, 11.7172, 30.7061, 0.55", "-33.8998, 10.5007, 28.2065, 0.28", "-31.8946, 9.88561, 27.0726, 0.28", "-30.6719, 9.45981, 26.2975, 0.55", "-28.8588, 8.80673, 25.059, 0.28", "-23.7043, 6.63609, 20.9882, 0.28", "-21.0323, 5.44723, 18.7971, 0.28", "-20.4622, 5.13371, 18.3184, 0.83", "-19.2388, 4.36732, 17.2815, 0.28", "-19.2388, 4.36732, 17.2815, 0.83", "-16.5463, 2.55312, 15.1882, 0.28", "-15.8179, 2.01978, 14.7863, 0.83", "-13.7834, 0.0763073, 13.4144, 0.28", "-12.5799, -1.17187, 12.5403, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-33.665, 44.0565, -19.1095, 0.28", "-35.2543, 42.2047, -19.9697, 0.28", "-36.5072, 40.7528, -20.791, 0.83", "-37.8677, 39.1647, -21.6652, 0.55", "-39.293, 37.5289, -22.7786, 1.11", "-43.2274, 32.8382, -26.34, 0.28", "-43.5063, 32.5156, -26.6307, 0.83", "-44.7874, 31.0529, -28.2185, 0.83", "-45.5858, 30.1347, -29.3126, 0.83", "-48.5369, 26.7777, -33.6052, 0.28", "-49.2977, 25.9286, -34.6886, 0.83", "-52.1119, 23.1022, -38.9008, 0.28", "-52.6221, 22.6053, -39.7076, 0.55", "-53.5033, 21.7675, -41.1421, 0.55", "-54.4169, 20.9123, -42.6879, 0.55", "-55.6086, 19.8296, -44.6526, 1.11", "-60.5105, 15.5107, -53.3602, 0.55", "-61.2007, 14.8851, -54.7162, 0.28", "-61.4044, 14.7186, -55.1308, 0.55", "-62.7638, 13.7189, -57.9001, 0.28", "-63.3288, 13.2911, -59.1434, 0.83", "-66.5995, 10.7941, -66.6649, 0.28", "-66.7461, 10.6832, -66.9853, 0.55", "-70.0359, 8.22561, -74.1214, 0.28", "-70.6181, 7.75647, -75.4118, 0.55", "-72.304, 6.33935, -78.9847, 0.28", "-72.598, 6.0748, -79.5988, 0.83", "-74.0064, 4.72352, -82.3725, 0.28", "-74.708, 4.03857, -83.744, 0.83", "-78.091, 0.43107, -90.3117, 0.28", "-78.9274, -0.444391, -91.7894, 0.83", "-82.2206, -3.80936, -97.068, 0.55", "-82.6371, -4.24907, -97.7205, 0.83", "-84.9102, -6.75212, -101.2, 0.28", "-85.6127, -7.55313, -102.209, 0.55", "-88.4445, -10.9336, -105.985, 0.28", "-89.453, -12.1782, -107.339, 0.83", "-94.3526, -18.4026, -113.46, 0.28", "-94.5987, -18.7201, -113.768, 0.83", "-96.0903, -20.7368, -115.634, 0.28", "-96.4708, -21.2417, -116.133, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-33.665, 44.0565, -19.1095, 0.55", "-34.7641, 47.1721, -19.6698, 0.55", "-35.5992, 49.5206, -20.1575, 0.55", "-36.5052, 51.9718, -20.8229, 0.28", "-37.1117, 53.5873, -21.3045, 1.38", "-38.0495, 55.9334, -22.0947, 0.55", "-39.1217, 58.548, -23.0103, 0.55", "-39.5914, 59.6644, -23.3783, 0.83", "-40.4458, 61.6452, -24.1032, 0.28", "-40.9002, 62.7717, -24.5509, 0.55", "-41.6275, 64.7557, -25.3078, 0.28", "-42.1071, 66.2041, -25.7698, 0.83", "-42.923, 69.2054, -26.4652, 0.28", "-43.3145, 70.8126, -26.8622, 0.55", "-43.7011, 72.7317, -27.3401, 0.28", "-43.9692, 74.3375, -27.8514, 0.83", "-44.3137, 77.3118, -28.9379, 0.28", "-44.5779, 79.9124, -30.0928, 0.83", "-44.8841, 84.2368, -32.3002, 0.28", "-44.9344, 85.7206, -33.1381, 0.83", "-45.0896, 89.7205, -35.7977, 0.28", "-45.1447, 91.5476, -37.1642, 0.83", "-45.1923, 93.7722, -38.962, 0.28", "-45.2524, 95.5166, -40.4502, 0.55", "-45.3091, 97.2615, -41.9281, 0.83", "-45.5709, 101.135, -45.1384, 0.28", "-45.7333, 102.664, -46.3181, 0.83", "-46.0329, 104.744, -47.8507, 0.83", "-46.4098, 106.842, -49.271, 0.28", "-46.8882, 108.47, -50.3347, 0.83", "-47.4853, 110.124, -51.2869, 0.28", "-47.9514, 111.324, -51.8531, 0.55", "-48.3704, 112.202, -52.2402, 0.28", "-49.3579, 114.038, -52.8837, 0.55", "-51.2506, 117.504, -53.7129, 0.28", "-52.0274, 118.75, -53.9361, 0.55", "-52.9356, 120.107, -54.0991, 0.28", "-53.9694, 121.576, -54.1994, 0.83", "-55.3395, 123.476, -54.1951, 0.28", "-56.6709, 125.345, -54.0657, 0.83", "-58.5968, 128.15, -53.6835, 0.28", "-59.3668, 129.26, -53.5724, 0.83", "-60.2509, 130.572, -53.473, 0.28", "-61.3851, 132.373, -53.4122, 0.28", "-61.8947, 133.231, -53.4849, 0.55", "-63.0378, 135.384, -53.9155, 0.28", "-63.9797, 137.232, -54.6453, 0.55", "-64.5205, 138.278, -55.2074, 0.55", "-65.3169, 139.824, -56.1755, 0.83", "-66.9063, 142.617, -58.2415, 0.28", "-68.1143, 144.627, -59.888, 0.83", "-69.931, 147.374, -62.4766, 0.28", "-70.6507, 148.367, -63.4896, 0.28", "-71.6403, 149.742, -64.9514, 0.83", "-73.5148, 152.316, -67.8254, 0.28", "-74.1962, 153.275, -68.8533, 0.83", "-76.5734, 156.828, -72.5182, 0.28", "-77.7193, 158.562, -74.2682, 1.11", "-79.9587, 161.962, -77.7704, 0.28", "-80.8581, 163.388, -79.2849, 0.55", "-81.5991, 164.733, -80.616, 0.28", "-82.1621, 165.845, -81.6346, 0.55", "-83.4507, 168.8, -84.1558, 0.28", "-84.0173, 169.967, -85.2472, 0.55", "-84.938, 171.744, -86.9644, 0.28", "-85.5527, 172.881, -88.1851, 0.55", "-86.276, 174.228, -89.7507, 0.28", "-87.3113, 176.208, -92.1293, 0.55", "-89.0397, 179.89, -96.3398, 0.28", "-89.7595, 181.397, -98.1483, 0.55", "-90.7557, 183.541, -100.757, 0.28", "-91.287, 184.715, -102.286, 0.83", "-91.9131, 186.308, -104.363, 0.28", "-92.3358, 187.439, -105.899, 0.83", "-93.0002, 189.388, -108.542, 0.28", "-93.3477, 190.25, -109.826, 0.55", "-93.8338, 191.445, -111.702, 0.28", "-94.2372, 192.432, -113.37, 0.55", "-95.3673, 195.333, -118.039, 0.28", "-95.7603, 196.354, -119.583, 0.28", "-96.6552, 198.702, -122.564, 0.55", "-97.3805, 200.711, -124.803, 0.28", "-97.7758, 201.833, -125.849, 0.55", "-98.8781, 204.913, -128.141, 0.28", "-99.5987, 206.752, -129.042, 0.83", "-100.84, 209.476, -129.957, 0.28", "-101.331, 210.332, -130.107, 0.55", "-102.25, 211.627, -130.21, 0.28", "-103.266, 212.827, -130.281, 0.55", "-105.678, 215.254, -130.313, 0.28", "-106.234, 215.789, -130.285, 0.55", "-109.794, 219.133, -130.19, 0.28", "-110.676, 220.041, -130.212, 0.55", "-111.834, 221.428, -130.284, 0.28", "-112.969, 222.886, -130.397, 0.55", "-114.703, 225.44, -130.662, 0.28", "-115.704, 227.088, -130.827, 0.55", "-117.395, 230.972, -130.995, 0.28", "-117.967, 232.541, -131.101, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.84276, 76.834, -10.8701, 0.55", "-6.95147, 78.6942, -11.1624, 0.55", "-4.03735, 81.8035, -13.0671, 0.55", "-2.8273, 83.148, -14.2189, 0.83", "-1.82884, 84.2651, -15.2735, 0.83", "0.960079, 87.4423, -18.4288, 0.28", "1.98731, 88.633, -19.592, 0.83", "5.63502, 93.1324, -25.0529, 0.55", "6.38172, 94.1465, -26.5238, 0.28", "6.70467, 94.6214, -27.2958, 0.28", "7.17844, 95.4078, -28.6899, 0.55", "7.65665, 96.3381, -30.3528, 0.55", "9.09695, 99.5546, -35.8316, 0.28", "9.71752, 101.067, -38.1801, 0.83", "11.0434, 104.368, -43.0559, 0.83", "12.2062, 107.275, -47.1923, 0.83", "13.7265, 110.998, -52.3534, 0.28", "14.2685, 112.295, -54.0774, 0.28", "14.5803, 113.008, -54.8959, 0.55", "16.1243, 116.179, -58.0863, 0.28", "16.3786, 116.655, -58.4961, 0.55", "18.3048, 119.76, -60.9604, 0.28", "19.1232, 120.845, -62.0407, 0.55", "19.9739, 121.833, -63.1851, 0.28", "20.3176, 122.206, -63.646, 0.55", "22.84, 124.65, -66.8697, 0.28", "23.634, 125.363, -67.8138, 0.55", "28.0566, 128.938, -72.7587, 0.28", "29.3354, 129.951, -74.1394, 0.28", "30.6655, 130.999, -75.4938, 0.55", "33.4991, 133.226, -78.401, 0.28", "34.3976, 133.922, -79.2627, 0.55", "38.0766, 136.728, -82.6937, 0.28", "39.9313, 138.103, -84.3148, 0.28", "41.5797, 139.312, -85.7834, 0.83", "47.4219, 143.428, -90.7342, 0.28", "48.9606, 144.474, -91.9632, 0.28", "51.1089, 145.89, -93.5588, 0.55", "52.9613, 147.087, -94.7857, 0.28", "54.3022, 147.88, -95.6782, 0.55", "55.6016, 148.619, -96.4596, 0.28", "56.3608, 149.057, -96.6895, 0.55", "58.1441, 150.153, -97.2384, 0.28", "60.5773, 151.91, -97.6704, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-8.84276, 76.834, -10.8701, 0.55", "-9.88845, 80.356, -9.54423, 0.55", "-10.4194, 82.7116, -8.50264, 0.55", "-10.6414, 83.7118, -8.05187, 0.55", "-10.9783, 85.3117, -7.34276, 0.55", "-11.2565, 86.6653, -6.80834, 0.55", "-11.9049, 89.9207, -5.52863, 0.28", "-12.1167, 91.0684, -5.06511, 0.55", "-12.3524, 92.6724, -4.29024, 0.55", "-12.4952, 93.4417, -3.85802, 0.83", "-12.9216, 95.1722, -2.79818, 0.28", "-13.3075, 96.626, -1.91698, 0.83", "-14.0853, 99.2676, -0.311087, 0.28", "-14.1735, 99.5686, -0.0878636, 0.83", "-14.7452, 101.862, 1.84806, 0.55", "-14.9777, 102.899, 2.8146, 0.55", "-15.2785, 104.424, 4.28736, 0.83", "-15.7606, 107.201, 7.02838, 0.55", "-16.0741, 109.334, 9.15725, 0.83", "-16.2048, 110.415, 10.2624, 0.28", "-16.2814, 111.373, 11.1819, 0.83", "-16.402, 112.796, 12.5352, 0.83", "-16.6951, 115.298, 14.8151, 0.83", "-16.9834, 117.415, 16.3758, 0.28", "-17.1126, 118.141, 16.8557, 0.83", "-17.5562, 120.33, 18.3416, 0.83", "-17.9735, 122.245, 19.6662, 0.28", "-18.197, 123.239, 20.3915, 0.55", "-18.6667, 125.218, 21.7469, 0.28", "-19.2663, 127.25, 23.2144, 0.55", "-20.1403, 129.894, 25.2621, 0.28", "-20.3599, 130.484, 25.7591, 0.83", "-20.8079, 131.678, 26.7449, 0.28", "-21.3527, 133.105, 27.9842, 0.55", "-22.1076, 135.174, 29.9899, 0.28", "-22.2377, 135.574, 30.3565, 0.55", "-22.5045, 136.436, 31.1851, 0.28", "-22.7431, 137.334, 32.1587, 0.83", "-22.9594, 138.514, 33.5121, 0.28", "-23.1195, 139.978, 35.2966, 0.55", "-23.2016, 140.964, 36.6458, 0.28", "-23.2535, 141.58, 37.45, 0.83", "-23.3242, 142.895, 39.0708, 0.83", "-23.3769, 144.233, 40.5958, 0.55", "-23.3762, 144.973, 41.3462, 0.83", "-23.3328, 149.162, 45.1493, 0.55", "-23.3033, 150.758, 46.4163, 0.83", "-23.1186, 156.067, 49.9456, 0.28", "-23.0778, 157.218, 50.4435, 0.55", "-22.9467, 159.542, 51.0056, 0.28", "-22.8385, 160.946, 51.1863, 0.83", "-22.5635, 163.869, 51.027, 0.28", "-22.4162, 165.643, 50.7358, 0.55", "-22.0423, 170.65, 48.8097, 0.28", "-21.9181, 172.854, 47.8656, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.494, 299.975, 12.6177, 0.55", "-16.4818, 302.886, 12.5529, 0.55", "-16.6252, 306.349, 12.4773, 0.55", "-16.7955, 309.675, 12.4108, 0.83", "-16.9292, 311.974, 12.3876, 0.55", "-17.0888, 314.83, 12.3965, 1.11", "-17.2674, 319.212, 12.4433, 0.55", "-17.3407, 322.319, 12.5071, 1.11", "-17.3338, 324.673, 12.4948, 0.83", "-17.174, 326.899, 12.4278, 0.55", "-16.6748, 329.826, 12.2683, 0.55", "-15.95, 332.365, 12.0316, 0.83", "-14.7927, 335.03, 11.5688, 0.55", "-13.3178, 337.671, 10.887, 0.83", "-11.9839, 339.678, 10.2419, 0.83", "-10.7165, 341.331, 9.60465, 0.83", "-9.60069, 342.653, 9.0578, 1.11", "-7.2126, 345.422, 7.80262, 0.83", "-6.19336, 346.621, 7.26085, 0.55", "-4.55749, 348.551, 6.46456, 0.83", "-2.19651, 351.532, 5.29962, 0.55", "-0.697584, 353.393, 4.58044, 1.11", "1.5705, 356.219, 3.55796, 0.55", "2.35844, 357.221, 3.25313, 0.55", "3.42612, 358.629, 2.84885, 0.55", "5.78855, 362.018, 2.04095, 0.55", "6.68488, 363.431, 1.80785, 0.28", "7.22527, 364.398, 1.70695, 0.55", "8.16208, 366.26, 1.64277, 0.28", "8.89683, 367.905, 1.5913, 0.83", "10.1343, 371.008, 1.51077, 0.55", "10.5311, 372.047, 1.50881, 0.83", "11.3265, 374.282, 1.48185, 0.55", "11.8318, 375.729, 1.43462, 0.83", "13.3441, 380.134, 1.22379, 0.28", "14.3443, 383.049, 1.022, 0.83", "15.3798, 386.062, 0.765936, 0.28", "16.274, 388.718, 0.517599, 0.55", "17.1769, 391.522, 0.242183, 0.55", "17.8857, 394.062, -0.0648852, 0.55", "18.2, 395.47, -0.263026, 0.28", "18.44, 396.828, -0.466866, 0.55", "18.7559, 399.454, -0.846247, 0.28", "18.8658, 401.002, -1.13675, 0.55", "18.9449, 403.815, -1.78822, 0.28", "18.9566, 405.728, -2.26826, 0.28", "18.9451, 408.401, -2.96658, 0.83", "18.9017, 410.797, -3.62715, 0.83", "18.8159, 415.369, -4.887, 0.55", "18.8176, 417.936, -5.54979, 0.55", "18.8931, 419.603, -5.91353, 0.55", "18.9852, 420.554, -6.13793, 0.28", "19.1692, 421.896, -6.45333, 0.55", "19.3862, 423.039, -6.68016, 0.28", "19.5866, 424.111, -6.90238, 1.11", "20.0258, 427.343, -7.85159, 0.55", "20.186, 429.693, -8.63134, 0.55", "20.2083, 431.753, -9.42401, 0.28", "20.1506, 432.916, -9.95877, 0.83", "19.8778, 436.259, -11.7352, 0.55", "19.6744, 438.421, -12.97, 0.83", "19.4155, 440.804, -14.4497, 0.83", "19.216, 443.22, -16.0603, 0.55", "19.1231, 445.126, -17.4216, 0.28", "19.0906, 446.989, -18.7696, 0.55", "19.0946, 448.701, -20.0012, 0.55", "19.122, 450.95, -21.6891, 1.11", "19.1847, 453.912, -23.8643, 0.55", "19.213, 455.196, -24.7428, 0.55", "19.2122, 456.582, -25.708, 0.55", "19.0524, 459.85, -28.0141, 0.55", "18.9606, 461.499, -29.2119, 0.83", "18.7554, 464.993, -31.586, 0.28", "18.6816, 466.04, -32.2583, 0.55", "18.509, 469.028, -34.0745, 0.28", "18.4606, 470.49, -34.9159, 0.55", "18.4579, 472.789, -36.0971, 0.28", "18.4158, 475.086, -37.1464, 0.55", "18.3952, 476.279, -37.6292, 0.28", "18.3835, 478.24, -38.3215, 0.55", "18.4782, 481.51, -39.2018, 0.55", "18.5515, 483.201, -39.6799, 0.28", "18.5355, 484.688, -40.1176, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.494, 299.975, 12.6177, 0.55", "-18.146, 301.357, 12.2314, 0.55", "-20.0884, 303.085, 11.8786, 1.11", "-22.2336, 304.882, 11.6005, 0.55", "-22.9373, 305.479, 11.4733, 0.83", "-24.6163, 306.935, 11.1407, 0.55", "-26.0077, 308.091, 10.8728, 0.55", "-27.0906, 308.973, 10.6628, 0.83", "-30.3015, 311.517, 10.0464, 0.55", "-32.6875, 313.362, 9.68149, 0.55", "-33.5303, 314.009, 9.52804, 0.83", "-35.8382, 315.739, 9.0847, 0.55", "-36.2114, 316.014, 9.00604, 0.83", "-37.4361, 316.95, 8.78921, 0.28", "-37.6318, 317.115, 8.77702, 0.55", "-38.8089, 318.105, 8.8949, 0.28", "-39.5379, 318.767, 9.01483, 0.55", "-40.3711, 319.491, 9.13507, 0.55", "-42.6446, 321.357, 9.41551, 0.55", "-44.2001, 322.634, 9.57509, 0.55", "-45.4134, 323.666, 9.59649, 0.83", "-47.0718, 325.129, 9.53494, 0.83", "-49.197, 327.139, 9.17987, 0.55", "-50.7421, 328.671, 8.76152, 0.55", "-52.3963, 330.402, 8.14704, 1.11", "-54.1954, 332.552, 7.32816, 0.55", "-54.6673, 333.182, 7.07345, 0.83", "-56.085, 335.358, 6.28196, 0.28", "-56.7656, 336.551, 5.6556, 0.55", "-57.2082, 337.361, 5.11622, 0.28", "-57.6122, 338.16, 4.53773, 0.83", "-58.3957, 339.883, 3.23491, 0.28", "-59.0653, 341.452, 2.01089, 0.83", "-61.411, 347.585, -2.77856, 0.55", "-61.8281, 348.772, -3.71667, 0.55", "-62.1719, 349.853, -4.56267, 0.83", "-62.5738, 351.238, -5.58727, 0.28", "-62.7326, 351.919, -6.01795, 0.55", "-62.9436, 352.94, -6.52228, 0.28", "-63.1625, 354.329, -6.80352, 0.55", "-63.516, 356.286, -7.22761, 0.55", "-63.7307, 357.401, -7.46452, 0.55", "-63.9664, 358.647, -7.70613, 0.83", "-64.3174, 360.639, -8.10062, 0.28", "-64.6019, 362.313, -8.41363, 0.83", "-64.8763, 364.382, -8.75937, 0.55", "-64.9787, 365.208, -8.87219, 0.55", "-65.1326, 366.779, -9.02113, 0.83", "-65.2166, 367.605, -9.05397, 0.55", "-65.3611, 369.156, -8.9716, 0.83", "-65.5882, 370.575, -8.85797, 0.28", "-65.726, 371.16, -8.85676, 0.28", "-66.2242, 372.724, -8.98272, 0.28", "-66.4677, 373.398, -9.09716, 0.83", "-67.1078, 374.967, -9.53526, 0.55", "-67.9099, 376.698, -10.3819, 0.83", "-69.1792, 379.046, -11.8749, 0.28", "-69.6391, 379.768, -12.4689, 0.55", "-70.1976, 380.474, -13.2245, 0.28", "-70.6646, 380.971, -13.7953, 0.83", "-72.4861, 382.785, -15.9279, 0.83", "-73.0909, 383.365, -16.5926, 0.83", "-75.0125, 385.157, -18.4809, 0.83", "-77.2585, 387.218, -20.5613, 0.55", "-78.6275, 388.432, -21.7721, 0.55", "-79.8562, 389.531, -22.8192, 0.55", "-81.188, 390.744, -23.8871, 0.55", "-83.095, 392.648, -25.442, 0.55", "-84.5733, 394.236, -26.5376, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "48.4405, -31.2963, -58.6454, 0.55", "49.0196, -30.687, -59.6169, 0.55", "49.5876, -30.0245, -60.6089, 0.83", "50.7297, -28.6325, -62.6325, 0.28", "51.303, -27.9024, -63.6392, 0.83", "52.6873, -26.1045, -65.9956, 0.28", "53.1623, -25.4811, -66.7733, 0.55", "54.1968, -24.0393, -68.5757, 0.55", "55.2525, -22.4497, -70.3816, 0.55", "56.1534, -21.0717, -71.8455, 0.28", "56.5224, -20.4998, -72.42, 0.28", "56.8954, -19.9198, -72.974, 0.55", "57.7139, -18.7042, -74.1128, 0.28", "58.8464, -17.0508, -75.4847, 0.55", "60.1464, -15.0321, -77.2054, 0.28", "60.4834, -14.5109, -77.6664, 0.55", "61.8164, -12.3121, -79.5829, 0.28", "62.6665, -10.8522, -80.8552, 0.28", "63.6262, -9.16689, -82.3723, 0.83", "65.0777, -6.44089, -84.9223, 0.55", "65.4241, -5.7771, -85.5619, 0.55", "66.1192, -4.45949, -86.9601, 0.55", "66.836, -3.1845, -88.4324, 0.83", "67.9308, -1.38297, -90.6208, 0.28", "68.2865, -0.868072, -91.2438, 0.55", "69.3011, 0.40297, -92.5895, 0.28", "69.4937, 0.62527, -92.8239, 0.55", "70.4478, 1.55708, -93.7865, 0.55", "71.9106, 2.88668, -94.9779, 0.28", "72.4556, 3.36944, -95.3468, 0.55", "73.7966, 4.4942, -96.1829, 0.28", "74.3522, 4.94734, -96.4917, 0.55", "75.5695, 5.85062, -97.136, 0.28", "76.3638, 6.33239, -97.545, 0.55", "76.8145, 6.56131, -97.748, 0.55", "78.0762, 7.22533, -98.2503, 0.28", "78.9138, 7.69336, -98.5287, 0.28", "79.724, 8.21682, -98.809, 0.55", "81.6519, 9.64171, -99.4777, 0.28", "82.9586, 10.7802, -99.9397, 0.55", "84.1465, 11.9804, -100.336, 0.55", "85.1945, 13.2362, -100.663, 0.83", "86.6781, 15.3159, -101.073, 0.28", "87.1929, 16.1793, -101.202, 0.28", "88.0155, 17.9055, -101.354, 0.55", "88.769, 19.7609, -101.45, 0.28", "89.0795, 20.6047, -101.464, 0.55", "89.5394, 21.9755, -101.414, 0.55", "90.1875, 24.019, -101.232, 0.28", "90.5676, 25.2615, -101.115, 0.55", "91.121, 27.1883, -100.934, 0.28", "91.7104, 29.3741, -100.758, 0.55", "92.2977, 31.6348, -100.597, 0.55", "92.543, 32.6493, -100.533, 0.55", "92.9897, 34.6879, -100.454, 0.55", "93.3945, 36.5743, -100.457, 0.55", "93.7688, 38.5125, -100.518, 0.55", "94.1049, 40.3553, -100.6, 0.28", "94.282, 41.3206, -100.682, 0.55", "94.8423, 44.358, -100.98, 0.28", "95.1799, 46.3895, -101.247, 0.28", "95.326, 47.4088, -101.406, 0.55", "95.5851, 49.2122, -101.713, 0.28", "95.8112, 50.8358, -102.005, 0.55", "95.9758, 52.0786, -102.22, 0.55", "96.3672, 55.5783, -102.785, 0.28", "96.5527, 57.7473, -103.122, 0.28", "96.6105, 58.6304, -103.251, 0.55", "96.6947, 60.4113, -103.487, 0.55", "96.7917, 62.827, -103.719, 0.28", "96.8584, 64.6973, -103.868, 0.55", "96.9099, 66.4256, -103.944, 0.28", "96.9019, 67.9075, -103.994, 0.55", "96.8858, 68.799, -104.004, 0.28", "96.8799, 69.4072, -103.956, 0.55", "96.8629, 71.1753, -103.685, 0.28", "96.8757, 72.0458, -103.49, 0.55", "96.9899, 74.9363, -102.727, 0.28", "97.1114, 76.9274, -102.163, 0.55", "97.3065, 79.5684, -101.358, 0.28", "97.4362, 80.9932, -100.908, 0.55", "97.6156, 82.6243, -100.366, 0.28", "97.795, 84.0836, -99.8534, 0.55", "97.9783, 85.4585, -99.3613, 0.28", "98.1046, 86.5183, -98.9901, 0.55", "98.3591, 89.1499, -98.1308, 0.28", "98.4846, 90.4913, -97.6593, 0.55", "98.6255, 92.4134, -96.949, 0.28", "98.6709, 93.1278, -96.6609, 0.55", "98.742, 94.9397, -95.8978, 0.28", "98.767, 96.8455, -95.0954, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "48.4405, -31.2963, -58.6454, 0.28", "52.0382, -31.4627, -59.991, 0.28", "53.111, -31.5035, -60.4528, 0.55", "54.5714, -31.4637, -61.1586, 0.55", "56.8006, -31.3393, -62.2471, 0.28", "58.1231, -31.2651, -62.8651, 0.55", "62.7425, -30.9453, -64.8936, 0.28", "63.9795, -30.7801, -65.3878, 0.55", "66.9048, -30.2524, -66.4588, 0.28", "68.149, -29.9683, -66.8639, 0.28", "70.1799, -29.4334, -67.4017, 0.55", "72.0648, -28.9398, -67.7927, 0.55", "76.6367, -27.8127, -68.3437, 0.28", "78.3533, -27.4834, -68.5211, 0.55", "80.3121, -27.2482, -68.7013, 0.55", "83.9225, -27.0198, -69.0654, 0.28", "86.3036, -27.0408, -69.3214, 0.55", "89.306, -27.3807, -69.5968, 0.28", "90.9245, -27.7609, -69.7151, 0.55", "93.912, -28.732, -69.8966, 0.28", "95.1868, -29.2986, -69.9358, 0.55", "96.5883, -30.0991, -69.9186, 0.55", "98.4017, -31.3992, -69.7253, 0.28", "99.4301, -32.2921, -69.5374, 0.28", "100.521, -33.4942, -69.2442, 0.55", "101.864, -35.3624, -68.7618, 0.28", "102.04, -35.6538, -68.685, 0.55", "103.49, -38.4751, -68.0513, 0.28", "103.635, -38.8061, -68.0169, 0.83", "105.485, -43.3098, -67.9208, 0.28", "105.843, -44.1613, -68.0732, 0.55", "106.713, -46.2558, -68.7695, 0.28", "107.251, -47.5522, -69.3417, 0.55", "108.511, -50.4763, -71.0574, 0.28", "108.668, -50.845, -71.2936, 0.55", "110.526, -55.1097, -74.3925, 0.28", "110.765, -55.6981, -74.8052, 0.55", "110.921, -56.056, -75.0579, 0.55", "111.496, -57.3828, -75.8254, 0.28", "111.978, -58.5005, -76.3413, 0.55", "112.844, -60.4413, -77.0534, 0.28", "113.209, -61.2391, -77.3027, 0.55", "115.553, -65.9851, -78.9256, 0.28", "116.054, -66.9495, -79.2672, 0.55", "116.647, -68.0402, -79.7196, 0.28", "118.626, -71.529, -81.301, 0.28", "119.239, -72.6657, -81.7857, 0.55", "120.933, -75.9585, -83.0791, 0.28", "121.056, -76.2422, -83.1672, 0.55", "122.495, -79.9744, -84.2607, 0.28", "123.092, -81.8417, -84.6485, 0.55", "123.748, -84.2773, -84.9043, 0.28", "124.02, -85.3065, -84.8953, 0.55", "124.582, -87.4318, -84.7007, 0.28", "124.849, -88.3645, -84.5871, 0.55", "126.017, -91.9504, -84.3452, 0.28", "127.072, -94.8555, -84.336, 0.28", "127.599, -96.0922, -84.4393, 0.55", "128.995, -99.0775, -84.826, 0.28", "129.464, -99.9756, -84.9687, 0.55", "132.656, -105.869, -86.0065, 0.28", "133.94, -108.066, -86.4768, 0.55", "135.969, -111.26, -87.204, 0.28", "136.38, -111.883, -87.3512, 0.55", "138.456, -114.805, -88.0381, 0.28", "138.757, -115.195, -88.1169, 0.55", "140.031, -116.44, -88.1558, 0.28", "140.929, -117.186, -88.2243, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "41.7349, -49.3676, 11.4028, 0.55", "42.7369, -49.1108, 12.4166, 0.55", "44.7453, -48.5183, 14.4715, 0.55", "48.4145, -47.4141, 18.1532, 0.55", "51.2334, -46.5814, 20.9362, 0.55", "53.7859, -45.8888, 23.4221, 0.28", "55.2013, -45.5264, 24.7735, 0.83", "56.9727, -45.11, 26.4932, 0.55", "58.3109, -44.872, 27.7528, 0.28", "58.9733, -44.7878, 28.2767, 0.55", "60.3842, -44.6356, 29.2924, 0.28", "60.8573, -44.5981, 29.6305, 0.55", "62.9073, -44.6006, 30.9113, 0.28", "64.2234, -44.7885, 31.6434, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "41.7349, -49.3676, 11.4028, 0.28", "48.1611, -52.6249, 5.72155, 0.28", "49.0708, -52.9967, 5.01712, 0.83", "52.2481, -54.0901, 2.75126, 0.28", "53.1823, -54.2906, 2.15741, 0.83", "55.3708, -54.5694, 0.849567, 0.28", "56.2995, -54.6173, 0.324052, 0.83", "59.1, -54.1234, -0.683019, 0.28", "59.6996, -53.8772, -0.925044, 0.83", "62.6774, -52.0177, -2.23559, 0.28", "63.3972, -51.538, -2.56819, 0.28", "64.4138, -50.8246, -3.05557, 0.55", "66.3625, -49.4767, -3.56822, 0.28", "69.411, -47.4084, -3.89404, 0.28", "70.1952, -46.9015, -3.80912, 0.83", "75.8953, -43.4132, -2.27303, 0.28", "76.883, -42.8666, -1.90083, 0.55", "84.0984, -39.1497, 1.79467, 0.28", "84.8736, -38.7659, 2.28468, 0.83", "89.5436, -36.374, 5.84138, 0.28", "90.1639, -36.0156, 6.37809, 0.55", "92.0075, -34.8213, 8.20537, 0.28", "93.7367, -33.6668, 9.89506, 0.55", "95.8904, -32.184, 11.7154, 0.28", "96.7557, -31.557, 12.3894, 0.55", "99.4334, -29.2857, 14.008, 0.28", "100.399, -28.3484, 14.6172, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "37.5498, -60.6592, -0.930496, 0.55", "38.3885, -60.8397, -1.06275, 0.55", "39.7323, -61.1373, -1.28106, 0.55", "40.7089, -61.363, -1.45158, 0.28", "41.4038, -61.5223, -1.56871, 0.55", "42.4835, -61.7675, -1.72749, 0.55", "42.9426, -61.8892, -1.78308, 0.28", "43.2619, -61.9755, -1.83075, 0.55", "43.6184, -62.1009, -1.88243, 0.28", "44.1455, -62.3235, -1.96466, 0.55", "44.9111, -62.6909, -2.05172, 0.55", "46.0019, -63.2348, -2.15659, 0.55", "47.4896, -63.8848, -2.44316, 1.38", "48.4408, -64.2544, -2.68145, 0.83", "49.2526, -64.5282, -2.90984, 0.55", "50.2787, -64.8273, -3.22964, 0.28", "51.5401, -65.1366, -3.65373, 0.83", "53.9408, -65.5438, -4.57824, 0.28", "54.2542, -65.5924, -4.7141, 0.28", "55.0526, -65.7122, -5.12474, 0.55", "55.59, -65.7873, -5.42267, 0.55", "56.0812, -65.8616, -5.72357, 0.55", "57.4361, -66.1541, -6.54145, 0.55", "58.743, -66.5311, -7.31258, 0.28", "59.5452, -66.7889, -7.81375, 0.83", "60.0378, -66.9572, -8.13393, 0.83", "61.3351, -67.4074, -8.96612, 0.55", "61.8565, -67.5989, -9.28207, 0.83", "62.558, -67.8847, -9.62687, 0.28", "63.0489, -68.0821, -9.8127, 0.55", "63.3416, -68.2226, -9.90013, 0.28", "63.4813, -68.3038, -9.93256, 0.55", "64.1342, -68.699, -10.0132, 0.28", "64.8656, -69.1334, -10.1494, 0.28", "65.4279, -69.4764, -10.2527, 0.83", "65.9093, -69.8011, -10.3621, 0.55", "67.1187, -70.672, -10.6636, 0.28", "67.4805, -70.9467, -10.7798, 0.83", "68.6398, -71.88, -11.2112, 0.28", "69.0777, -72.2809, -11.4048, 0.83", "69.8219, -73.0172, -11.7318, 0.28", "70.0338, -73.2277, -11.8289, 0.83", "70.9066, -74.1381, -12.2445, 0.28", "71.4317, -74.7013, -12.4927, 0.28", "71.8871, -75.1899, -12.66, 0.55", "72.4236, -75.7147, -12.8599, 0.55", "73.3121, -76.5082, -13.155, 0.55", "73.7876, -76.911, -13.2974, 0.28", "74.0437, -77.1163, -13.372, 0.55", "74.9081, -77.7592, -13.6708, 0.28", "75.5612, -78.2042, -13.8878, 0.55", "76.2498, -78.6821, -14.1341, 0.28", "76.4527, -78.8282, -14.1969, 0.83", "77.3324, -79.4352, -14.4908, 0.28", "77.5378, -79.5662, -14.5581, 0.55", "78.0717, -79.8668, -14.7317, 0.55", "78.9494, -80.3767, -14.9329, 0.28", "78.9843, -80.3958, -14.9411, 0.55", "79.7831, -80.7735, -15.1568, 0.28", "80.0999, -80.9078, -15.2404, 0.55", "80.9669, -81.263, -15.5225, 0.28", "81.5441, -81.4802, -15.7319, 0.55", "82.5928, -81.828, -16.1295, 0.55", "83.5105, -82.1253, -16.5017, 0.28", "84.0744, -82.3165, -16.7427, 0.83", "85.0459, -82.6616, -17.1681, 0.28", "85.2511, -82.7299, -17.2414, 0.55", "86.0049, -82.9493, -17.4604, 0.28", "86.248, -83.0169, -17.4863, 0.55", "87.3829, -83.2924, -17.486, 0.28", "87.7408, -83.3644, -17.4641, 0.83", "89.0928, -83.585, -17.2251, 0.28", "89.3414, -83.6194, -17.1667, 0.55", "90.3239, -83.6947, -16.826, 0.28", "91.1535, -83.6904, -16.4959, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "37.5498, -60.6592, -0.930496, 0.55", "38.5725, -61.1485, -2.17146, 0.55", "40.6331, -62.2241, -4.84909, 0.55", "42.4137, -63.1567, -7.1004, 0.28", "43.7318, -63.8051, -8.72884, 0.83", "45.9557, -64.8097, -11.3045, 0.28", "46.4883, -65.021, -11.9211, 0.55", "46.95, -65.1767, -12.4833, 0.55", "47.9401, -65.3939, -13.5993, 0.55", "49.5092, -65.6702, -15.2622, 0.55", "50.3825, -65.7993, -16.166, 0.55", "52.9167, -66.0775, -18.4616, 0.83", "54.4928, -66.2105, -19.8622, 0.28", "55.1227, -66.2423, -20.4479, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-96.4708, -21.2417, -116.133, 0.28", "-97.2823, -21.3771, -115.877, 0.28", "-98.3366, -21.5531, -115.544, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-96.4708, -21.2417, -116.133, 0.28", "-98.4028, -23.9565, -118.199, 0.28", "-98.9677, -24.7503, -118.803, 0.55", "-100.735, -27.2337, -120.692, 0.28", "-101.518, -28.3328, -121.528, 0.83", "-104.941, -33.1432, -125.188, 0.28", "-105.503, -33.9338, -125.79, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-84.5733, 394.236, -26.5376, 0.55", "-84.9102, 395.148, -27.874, 0.55", "-85.3007, 396.215, -29.238, 0.28", "-85.6899, 397.278, -30.5983, 0.55", "-86.8158, 400.353, -34.5316, 0.28", "-86.9452, 400.707, -34.9837, 0.55", "-87.78, 402.987, -37.9002, 0.28", "-88.0949, 404.006, -39.5039, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-84.5733, 394.236, -26.5376, 0.28", "-86.0388, 393.533, -27.0448, 0.28", "-86.8546, 393.142, -27.327, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "98.767, 96.8455, -95.0954, 0.28", "95.1319, 97.09, -96.0931, 0.28", "93.8999, 97.1729, -96.4313, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "98.767, 96.8455, -95.0954, 0.28", "98.0952, 99.0592, -95.3267, 0.28", "96.7774, 103.222, -95.7161, 0.28", "96.3822, 104.339, -95.7762, 0.55", "94.7734, 108.405, -95.8108, 0.28", "93.8489, 110.742, -95.8307, 0.55", "92.6545, 113.761, -95.8563, 0.28", "91.9627, 115.351, -95.7899, 0.55", "90.7377, 117.88, -95.5175, 0.28", "89.6757, 119.906, -95.2751, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "55.1227, -66.2423, -20.4479, 0.55", "54.4291, -67.5681, -22.1262, 0.55", "54.1292, -68.2123, -22.9311, 0.28", "53.9164, -68.6218, -23.4702, 0.83", "52.5087, -71.0387, -26.6322, 0.28", "52.1145, -71.7401, -27.5125, 0.83", "50.4052, -74.8431, -31.2157, 0.28", "50.1653, -75.272, -31.7253, 0.83", "48.5863, -77.7663, -34.7453, 0.28", "48.0914, -78.4742, -35.5637, 0.55", "45.7797, -81.4033, -38.8651, 0.28", "45.2996, -81.9751, -39.5355, 0.28", "44.246, -83.1478, -40.9787, 0.83", "41.1171, -86.4966, -45.2798, 0.28", "40.2626, -87.3977, -46.4999, 0.55", "38.5907, -89.1199, -48.9466, 0.55", "37.3288, -90.3415, -50.7559, 0.55", "35.1721, -92.477, -53.8914, 0.28", "34.5871, -93.1166, -54.7701, 0.83", "32.6443, -95.4042, -57.6406, 0.28", "32.2738, -95.8775, -58.1735, 0.55", "30.6074, -98.1262, -60.2132, 0.28", "30.0814, -98.7892, -60.741, 0.55", "28.0348, -101.394, -62.509, 0.28", "27.8474, -101.618, -62.665, 0.83", "26.6931, -102.894, -63.4541, 0.28", "25.7354, -103.905, -64.0107, 0.55", "22.7626, -106.877, -65.6115, 0.28", "21.8641, -107.779, -66.038, 0.83", "17.9492, -111.711, -67.5909, 0.28", "16.2691, -113.429, -68.2185, 0.55", "14.0803, -115.755, -69.0533, 0.55", "11.6694, -118.449, -69.9033, 0.28", "9.66902, -120.815, -70.4678, 0.55", "8.25594, -122.554, -70.952, 0.28", "8.05405, -122.822, -71.0275, 0.55", "6.81381, -124.414, -71.5864, 0.28", "5.8251, -125.576, -72.053, 0.55", "4.70617, -126.76, -72.6042, 0.55", "2.72305, -128.58, -73.7082, 0.28", "1.85062, -129.296, -74.1661, 0.55", "0.587212, -130.291, -74.8136, 0.28", "-0.232669, -130.891, -75.1964, 0.55", "-2.46762, -132.462, -76.2428, 0.28", "-3.21934, -132.972, -76.6299, 0.55", "-5.09528, -134.283, -77.6013, 0.28", "-6.25808, -135.175, -78.3791, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "55.1227, -66.2423, -20.4479, 0.28", "59.2624, -65.8086, -20.9842, 0.28", "59.864, -65.7698, -21.1161, 0.83", "62.6495, -65.7291, -21.7436, 0.28", "63.6182, -65.6915, -21.971, 0.28", "64.8219, -65.6991, -22.2933, 0.55", "66.9361, -65.7758, -23.1274, 0.28", "69.1927, -65.9768, -24.32, 0.55", "70.5323, -66.1808, -25.0565, 0.55", "72.1945, -66.5431, -26.1471, 0.55", "75.0728, -67.2389, -28.2719, 0.83", "78.4879, -68.1373, -31.0763, 0.28", "79.6582, -68.4667, -32.1021, 0.28", "80.2585, -68.6823, -32.694, 0.83", "84.2384, -70.2152, -36.8132, 0.28", "85.3618, -70.7271, -38.064, 0.83", "86.3058, -71.2264, -39.1835, 0.83", "87.9841, -72.2395, -41.1361, 0.83", "90.8345, -74.0939, -44.5127, 0.55", "93.3098, -75.963, -47.4437, 0.55", "96.381, -78.7247, -50.9768, 0.55", "97.8275, -80.2987, -52.7205, 0.55", "99.0434, -81.893, -54.2405, 0.28", "99.1792, -82.1109, -54.4063, 0.55", "100.876, -85.5378, -56.3777, 0.28", "101.406, -86.8721, -56.9684, 0.55", "102.902, -90.8425, -58.4026, 0.28", "103.78, -93.0816, -59.0879, 0.55", "104.792, -95.4775, -59.7283, 0.28", "105.635, -97.2502, -60.0779, 0.55", "107.764, -101.334, -60.5763, 0.28", "108.323, -102.299, -60.6197, 1.11", "111.524, -107.03, -60.3981, 0.28", "113.27, -109.277, -60.1033, 0.55", "115.103, -111.314, -59.4076, 0.28", "115.756, -111.928, -59.031, 0.55", "117.541, -113.396, -57.6784, 0.28", "118.759, -114.302, -56.6033, 0.28", "121.138, -115.809, -54.1559, 0.55", "124.645, -118.045, -50.3292, 0.55", "126.01, -118.919, -48.8079, 0.28", "126.295, -119.08, -48.5076, 0.55", "128.417, -120.097, -46.4786, 0.28", "128.79, -120.262, -46.1482, 0.55", "130.571, -120.868, -44.8747, 0.28", "131.4, -121.068, -44.4302, 0.55", "134.688, -121.449, -42.5403, 0.28", "135.706, -121.433, -41.8219, 0.55", "137.308, -121.179, -40.686, 0.28", "137.809, -121.017, -40.2245, 0.55", "139.203, -120.346, -38.7099, 0.28", "140.384, -119.7, -37.3026, 0.55", "142.426, -118.333, -34.2959, 0.28", "143.932, -117.186, -31.845, 0.55", "147.006, -114.437, -26.4041, 0.28", "147.441, -114.022, -25.5794, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L4_BTC_22df25e508_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.5025, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.26589, -15.9214, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 10.2775, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -6.31171, 12.2743, -3.96364, 1.38 ) }
    dend_11 { pt3dadd( -8.21108, 15.4009, -4.31129, 1.66 ) }
    dend_11 { pt3dadd( -9.83285, 18.0704, -4.60813, 1.38 ) }
    dend_11 { pt3dadd( -11.1297, 20.2052, -4.84551, 1.11 ) }
    dend_11 { pt3dadd( -12.1539, 21.8912, -5.03298, 1.11 ) }
    dend_11 { pt3dadd( -14.5218, 25.7889, -5.46638, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.4475, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01576, 10.2718, 7.46486, 1.38 ) }
    dend_0 { pt3dadd( 6.14019, 12.6355, 8.10154, 1.38 ) }
    dend_0 { pt3dadd( 6.50901, 16.7684, 9.35014, 1.38 ) }
    dend_0 { pt3dadd( 7.01314, 21.1766, 10.7451, 1.38 ) }
    dend_0 { pt3dadd( 7.39258, 24.4944, 11.7951, 1.38 ) }
    dend_0 { pt3dadd( 7.73116, 27.455, 12.732, 0.83 ) }
    dend_0 { pt3dadd( 7.95228, 30.3331, 13.707, 1.38 ) }
    dend_0 { pt3dadd( 8.27612, 33.7485, 14.9148, 1.38 ) }
    dend_0 { pt3dadd( 9.01601, 37.8215, 16.3302, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.64226 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.64226 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.64226 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.26589, -15.9214, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 4.73802, -20.5625, 1.37752, 2.22 ) }
    dend_32 { pt3dadd( 6.02405, -22.9768, 1.12736, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.26589, -15.9214, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( -0.688612, -18.2939, 2.36253, 0.83 ) }
    dend_27 { pt3dadd( -2.77153, -19.9503, 2.97472, 1.11 ) }
    dend_27 { pt3dadd( -5.64526, -22.2356, 3.81934, 0.83 ) }
    dend_27 { pt3dadd( -7.85255, -23.991, 4.46807, 0.83 ) }
    dend_27 { pt3dadd( -11.595, -26.9671, 5.56802, 1.38 ) }
    dend_27 { pt3dadd( -15.1721, -29.8118, 6.61936, 1.38 ) }
    dend_27 { pt3dadd( -18.3693, -32.0714, 7.80197, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.5218, 25.7889, -5.46638, 0.55 ) }
    dend_21 { pt3dadd( -17.1174, 26.7873, -3.69353, 0.55 ) }
    dend_21 { pt3dadd( -18.2941, 27.1197, -2.59375, 0.55 ) }
    dend_21 { pt3dadd( -19.1109, 27.3094, -1.72598, 0.55 ) }
    dend_21 { pt3dadd( -20.4432, 27.5589, -0.244504, 1.11 ) }
    dend_21 { pt3dadd( -22.7789, 27.8996, 2.36638, 0.83 ) }
    dend_21 { pt3dadd( -25.1249, 28.1263, 5.05362, 0.83 ) }
    dend_21 { pt3dadd( -27.5436, 28.1487, 8.06468, 0.55 ) }
    dend_21 { pt3dadd( -28.8557, 28.064, 9.73127, 1.38 ) }
    dend_21 { pt3dadd( -29.8082, 27.9315, 10.9634, 0.28 ) }
    dend_21 { pt3dadd( -30.6761, 27.7409, 12.1043, 0.83 ) }
    dend_21 { pt3dadd( -31.7134, 27.5148, 13.5132, 0.28 ) }
    dend_21 { pt3dadd( -32.4224, 27.3524, 14.5258, 0.55 ) }
    dend_21 { pt3dadd( -33.3347, 27.2063, 15.7435, 0.55 ) }
    dend_21 { pt3dadd( -34.7846, 27.0392, 17.6562, 0.55 ) }
    dend_21 { pt3dadd( -36.0399, 26.904, 19.295, 0.55 ) }
    dend_21 { pt3dadd( -38.1656, 26.7567, 22.1052, 0.55 ) }
    dend_21 { pt3dadd( -39.0719, 26.7183, 23.2601, 0.55 ) }
    dend_21 { pt3dadd( -40.8274, 26.6664, 25.4081, 0.83 ) }
    dend_21 { pt3dadd( -42.074, 26.6597, 26.8724, 0.83 ) }
    dend_21 { pt3dadd( -43.087, 26.6619, 27.9783, 0.83 ) }
    dend_21 { pt3dadd( -45.2598, 26.7125, 30.2748, 0.83 ) }
    dend_21 { pt3dadd( -46.0774, 26.7124, 31.0995, 0.83 ) }
    dend_21 { pt3dadd( -48.0249, 26.6943, 33.1701, 0.83 ) }
    dend_21 { pt3dadd( -50.6715, 26.5964, 36.0605, 0.83 ) }
    dend_21 { pt3dadd( -51.3373, 26.5909, 36.7786, 0.83 ) }
    dend_21 { pt3dadd( -52.801, 26.6122, 38.3011, 0.28 ) }
    dend_21 { pt3dadd( -53.6427, 26.5849, 39.0957, 0.83 ) }
    dend_21 { pt3dadd( -55.6866, 26.4852, 40.9396, 0.28 ) }
    dend_21 { pt3dadd( -57.1597, 26.3831, 42.1257, 0.83 ) }
    dend_21 { pt3dadd( -58.917, 26.244, 43.4086, 0.28 ) }
    dend_21 { pt3dadd( -59.3, 26.2112, 43.6803, 0.55 ) }
    dend_21 { pt3dadd( -61.5254, 26.0776, 45.1163, 0.55 ) }
    dend_21 { pt3dadd( -63.1451, 26.029, 46.0849, 0.28 ) }
    dend_21 { pt3dadd( -65.054, 25.9533, 46.9953, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.5218, 25.7889, -5.46638, 1.11 ) }
    dend_12 { pt3dadd( -15.4005, 28.9711, -7.45321, 1.11 ) }
    dend_12 { pt3dadd( -15.9067, 30.7082, -8.37619, 1.11 ) }
    dend_12 { pt3dadd( -16.5171, 32.8033, -9.48937, 1.11 ) }
    dend_12 { pt3dadd( -17.0303, 34.5645, -10.4252, 1.11 ) }
    dend_12 { pt3dadd( -17.6346, 36.6383, -11.5271, 0.83 ) }
    dend_12 { pt3dadd( -18.2534, 38.7622, -12.6556, 0.83 ) }
    dend_12 { pt3dadd( -18.7064, 40.4369, -13.3067, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.01601, 37.8215, 16.3302, 0.83 ) }
    dend_4 { pt3dadd( 7.87408, 41.6561, 18.0348, 0.83 ) }
    dend_4 { pt3dadd( 7.01999, 44.5241, 19.3098, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 6.35845, 46.7455, 20.2973, 0.83 ) }
    dend_4 { pt3dadd( 5.32609, 50.2121, 21.8384, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.01601, 37.8215, 16.3302, 0.83 ) }
    dend_1 { pt3dadd( 12.2668, 40.3961, 16.6554, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.64226 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.64226 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.64226 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 6.02405, -22.9768, 1.12736, 0.83 ) }
    dend_42 { pt3dadd( 6.97331, -23.9753, -0.721058, 0.83 ) }
    dend_42 { pt3dadd( 7.52146, -24.4144, -1.81558, 0.83 ) }
    dend_42 { pt3dadd( 8.19644, -24.8626, -3.18938, 0.83 ) }
    dend_42 { pt3dadd( 10.9038, -26.5803, -8.85594, 0.83 ) }
    dend_42 { pt3dadd( 12.4068, -27.523, -11.9959, 0.83 ) }
    dend_42 { pt3dadd( 14.6593, -28.9358, -16.7017, 0.55 ) }
    dend_42 { pt3dadd( 15.6532, -29.5438, -19.0317, 0.83 ) }
    dend_42 { pt3dadd( 16.7474, -30.163, -21.748, 0.83 ) }
    dend_42 { pt3dadd( 17.7745, -30.6576, -24.3211, 1.11 ) }
    dend_42 { pt3dadd( 17.992, -30.73, -24.7508, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.02405, -22.9768, 1.12736, 1.66 ) }
    dend_33 { pt3dadd( 7.11735, -25.8128, 1.19202, 1.66 ) }
    dend_33 { pt3dadd( 8.69462, -29.2332, 1.24361, 1.11 ) }
    dend_33 { pt3dadd( 9.88675, -31.501, 1.27718, 1.11 ) }
    dend_33 { pt3dadd( 12.1223, -35.0301, 1.67057, 1.11 ) }
    dend_33 { pt3dadd( 14.0307, -38.043, 2.00641, 1.11 ) }
    dend_33 { pt3dadd( 15.3656, -40.1504, 2.24133, 1.38 ) }
    dend_33 { pt3dadd( 16.9551, -42.4019, 2.51786, 1.11 ) }
    dend_33 { pt3dadd( 17.9605, -43.6541, 2.73389, 1.11 ) }
    dend_33 { pt3dadd( 22.2637, -47.9909, 3.85472, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -18.3693, -32.0714, 7.80197, 0.28 ) }
    dend_31 { pt3dadd( -18.5957, -35.0834, 11.3906, 0.28 ) }
    dend_31 { pt3dadd( -18.7816, -36.3447, 13.0226, 1.11 ) }
    dend_31 { pt3dadd( -19.4205, -40.5627, 18.7986, 0.55 ) }
    dend_31 { pt3dadd( -19.585, -41.8613, 20.5397, 0.83 ) }
    dend_31 { pt3dadd( -19.9493, -44.736, 24.3938, 0.83 ) }
    dend_31 { pt3dadd( -20.3691, -48.0493, 28.8358, 0.55 ) }
    dend_31 { pt3dadd( -20.6346, -49.9346, 31.4721, 1.11 ) }
    dend_31 { pt3dadd( -21.0568, -53.2253, 36.2593, 0.55 ) }
    dend_31 { pt3dadd( -21.2694, -54.3917, 37.9333, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -18.3693, -32.0714, 7.80197, 0.83 ) }
    dend_28 { pt3dadd( -22.9203, -32.5396, 9.05933, 0.83 ) }
    dend_28 { pt3dadd( -26.3305, -32.8636, 9.95553, 1.11 ) }
    dend_28 { pt3dadd( -29.7001, -33.082, 10.7637, 0.83 ) }
    dend_28 { pt3dadd( -33.485, -33.2515, 11.5718, 0.83 ) }
    dend_28 { pt3dadd( -38.1525, -33.4606, 12.5684, 0.83 ) }
    dend_28 { pt3dadd( -42.608, -33.6602, 13.5196, 0.83 ) }
    dend_28 { pt3dadd( -47.4933, -33.8719, 14.4907, 1.11 ) }
    dend_28 { pt3dadd( -52.6325, -34.0138, 15.3506, 1.11 ) }
    dend_28 { pt3dadd( -57.1864, -34.0783, 16.0172, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -65.054, 25.9533, 46.9953, 0.28 ) }
    dend_23 { pt3dadd( -64.4611, 24.2115, 48.3008, 0.28 ) }
    dend_23 { pt3dadd( -64.2505, 23.5931, 48.7644, 0.83 ) }
    dend_23 { pt3dadd( -63.1878, 20.4716, 51.1042, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -65.054, 25.9533, 46.9953, 0.28 ) }
    dend_22 { pt3dadd( -68.1671, 26.9966, 48.7445, 0.28 ) }
    dend_22 { pt3dadd( -69.3474, 27.363, 48.9628, 0.55 ) }
    dend_22 { pt3dadd( -72.0607, 28.0989, 49.0487, 0.28 ) }
    dend_22 { pt3dadd( -74.531, 28.7028, 48.9845, 0.83 ) }
    dend_22 { pt3dadd( -77.4734, 29.4222, 48.9079, 0.28 ) }
    dend_22 { pt3dadd( -80.296, 30.1122, 48.8345, 0.28 ) }
    dend_22 { pt3dadd( -85.2797, 31.2001, 47.9259, 0.28 ) }
    dend_22 { pt3dadd( -86.3191, 31.4176, 47.628, 0.83 ) }
    dend_22 { pt3dadd( -87.9705, 31.7692, 46.913, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -18.7064, 40.4369, -13.3067, 0.55 ) }
    dend_16 { pt3dadd( -20.2875, 40.8195, -13.92, 0.55 ) }
    dend_16 { pt3dadd( -23.075, 41.494, -15.0014, 0.55 ) }
    dend_16 { pt3dadd( -25.7662, 42.1452, -16.0454, 0.83 ) }
    dend_16 { pt3dadd( -30.6216, 43.3201, -17.9289, 0.55 ) }
    dend_16 { pt3dadd( -33.665, 44.0565, -19.1095, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -18.7064, 40.4369, -13.3067, 0.55 ) }
    dend_13 { pt3dadd( -17.4165, 44.6975, -13.6414, 0.55 ) }
    dend_13 { pt3dadd( -16.891, 46.7978, -13.6924, 0.55 ) }
    dend_13 { pt3dadd( -16.5257, 48.588, -13.59, 0.83 ) }
    dend_13 { pt3dadd( -16.0872, 50.9369, -13.346, 0.55 ) }
    dend_13 { pt3dadd( -15.8189, 52.4449, -13.1793, 0.83 ) }
    dend_13 { pt3dadd( -15.4183, 54.6898, -12.8988, 0.55 ) }
    dend_13 { pt3dadd( -15.1634, 56.3898, -12.5915, 0.83 ) }
    dend_13 { pt3dadd( -14.7076, 58.8422, -12.1946, 0.28 ) }
    dend_13 { pt3dadd( -14.3916, 60.2195, -12.0027, 0.83 ) }
    dend_13 { pt3dadd( -13.777, 62.4963, -11.7221, 0.55 ) }
    dend_13 { pt3dadd( -13.2582, 64.2866, -11.5282, 0.83 ) }
    dend_13 { pt3dadd( -12.3958, 67.0384, -11.2842, 0.55 ) }
    dend_13 { pt3dadd( -11.3323, 70.1291, -11.0858, 0.83 ) }
    dend_13 { pt3dadd( -10.2757, 73.005, -10.9983, 0.83 ) }
    dend_13 { pt3dadd( -8.84276, 76.834, -10.8701, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 5.32609, 50.2121, 21.8384, 0.83 ) }
    dend_6 { pt3dadd( 6.4134, 54.2213, 22.8312, 0.83 ) }
    dend_6 { pt3dadd( 7.39851, 58.6304, 23.9127, 0.83 ) }
    dend_6 { pt3dadd( 7.91364, 61.3566, 24.6824, 0.83 ) }
    dend_6 { pt3dadd( 8.55002, 65.1414, 25.848, 0.83 ) }
    dend_6 { pt3dadd( 9.21787, 69.4023, 27.1822, 0.83 ) }
    dend_6 { pt3dadd( 9.87, 74.1228, 28.6662, 0.83 ) }
    dend_6 { pt3dadd( 10.3883, 78.6155, 30.1528, 0.83 ) }
    dend_6 { pt3dadd( 10.8426, 83.0725, 31.7314, 0.83 ) }
    dend_6 { pt3dadd( 11.0423, 85.753, 32.6519, 0.55 ) }
    dend_6 { pt3dadd( 11.1787, 88.6759, 33.5425, 0.55 ) }
    dend_6 { pt3dadd( 11.2905, 91.1274, 34.1228, 0.83 ) }
    dend_6 { pt3dadd( 11.4134, 93.3235, 34.4627, 0.83 ) }
    dend_6 { pt3dadd( 11.5742, 95.3518, 34.6561, 0.55 ) }
    dend_6 { pt3dadd( 11.7991, 97.9201, 34.6618, 0.83 ) }
    dend_6 { pt3dadd( 11.9893, 100.006, 34.6037, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 12.1354, 101.797, 34.5418, 0.83 ) }
    dend_6 { pt3dadd( 12.3182, 104.576, 34.4582, 0.55 ) }
    dend_6 { pt3dadd( 12.4333, 107.368, 34.3419, 0.83 ) }
    dend_6 { pt3dadd( 12.4656, 109.91, 34.0109, 0.55 ) }
    dend_6 { pt3dadd( 12.4383, 111.291, 33.7671, 0.55 ) }
    dend_6 { pt3dadd( 12.3397, 113.43, 33.371, 0.83 ) }
    dend_6 { pt3dadd( 12.1231, 116.486, 32.7787, 0.83 ) }
    dend_6 { pt3dadd( 11.9212, 119.018, 32.2928, 0.55 ) }
    dend_6 { pt3dadd( 11.3464, 124.749, 31.1658, 0.83 ) }
    dend_6 { pt3dadd( 10.9781, 128.073, 30.5149, 0.83 ) }
    dend_6 { pt3dadd( 10.5465, 132.127, 29.7813, 0.83 ) }
    dend_6 { pt3dadd( 10.3113, 134.59, 29.4437, 0.83 ) }
    dend_6 { pt3dadd( 10.0996, 136.562, 29.2975, 0.83 ) }
    dend_6 { pt3dadd( 9.87324, 138.503, 29.3103, 0.55 ) }
    dend_6 { pt3dadd( 9.58833, 140.712, 29.4825, 0.55 ) }
    dend_6 { pt3dadd( 9.17396, 143.226, 29.6716, 0.83 ) }
    dend_6 { pt3dadd( 8.24455, 147.889, 30.005, 0.83 ) }
    dend_6 { pt3dadd( 7.49201, 151.577, 30.2385, 1.11 ) }
    dend_6 { pt3dadd( 6.88633, 154.377, 30.3948, 0.55 ) }
    dend_6 { pt3dadd( 6.14391, 157.445, 30.5693, 1.11 ) }
    dend_6 { pt3dadd( 4.94197, 161.744, 30.8428, 0.83 ) }
    dend_6 { pt3dadd( 3.86441, 165.307, 31.0226, 0.83 ) }
    dend_6 { pt3dadd( 3.09864, 167.677, 31.0588, 0.83 ) }
    dend_6 { pt3dadd( 2.37002, 170.045, 31.0126, 0.55 ) }
    dend_6 { pt3dadd( 1.39903, 173.375, 30.8681, 0.55 ) }
    dend_6 { pt3dadd( 1.19282, 174.163, 30.8134, 0.55 ) }
    dend_6 { pt3dadd( 0.541599, 177.093, 30.6227, 0.55 ) }
    dend_6 { pt3dadd( 0.11835, 179.237, 30.4192, 0.28 ) }
    dend_6 { pt3dadd( -0.463442, 182.689, 29.9323, 0.55 ) }
    dend_6 { pt3dadd( -0.973358, 186.636, 29.2081, 0.55 ) }
    dend_6 { pt3dadd( -1.19673, 188.867, 28.7359, 0.55 ) }
    dend_6 { pt3dadd( -1.55249, 192.759, 27.8951, 0.83 ) }
    dend_6 { pt3dadd( -1.88917, 196.876, 26.9886, 0.83 ) }
    dend_6 { pt3dadd( -2.16441, 199.801, 26.22, 0.83 ) }
    dend_6 { pt3dadd( -2.37147, 201.491, 25.6915, 0.55 ) }
    dend_6 { pt3dadd( -2.57109, 202.99, 25.18, 0.83 ) }
    dend_6 { pt3dadd( -2.98254, 205.392, 24.4113, 0.83 ) }
    dend_6 { pt3dadd( -3.64814, 208.424, 23.5114, 0.83 ) }
    dend_6 { pt3dadd( -4.57004, 212.231, 22.6709, 0.83 ) }
    dend_6 { pt3dadd( -5.19275, 214.632, 22.2272, 0.83 ) }
    dend_6 { pt3dadd( -5.81851, 216.856, 21.7612, 0.83 ) }
    dend_6 { pt3dadd( -6.74207, 220.0, 21.0246, 0.55 ) }
    dend_6 { pt3dadd( -7.7849, 223.277, 20.2444, 0.55 ) }
    dend_6 { pt3dadd( -8.53638, 225.661, 19.7163, 0.55 ) }
    dend_6 { pt3dadd( -9.33157, 228.311, 19.1453, 0.83 ) }
    dend_6 { pt3dadd( -10.4999, 232.356, 18.2068, 1.11 ) }
    dend_6 { pt3dadd( -11.577, 236.596, 17.3001, 0.55 ) }
    dend_6 { pt3dadd( -12.0494, 239.075, 16.8732, 0.55 ) }
    dend_6 { pt3dadd( -12.4883, 241.962, 16.4843, 0.55 ) }
    dend_6 { pt3dadd( -12.7894, 244.836, 16.1777, 0.83 ) }
    dend_6 { pt3dadd( -12.9254, 248.318, 15.904, 0.83 ) }
    dend_6 { pt3dadd( -12.8471, 253.126, 15.6213, 0.83 ) }
    dend_6 { pt3dadd( -12.4601, 258.893, 15.18, 0.83 ) }
    dend_6 { pt3dadd( -12.1186, 262.247, 14.8259, 0.55 ) }
    dend_6 { pt3dadd( -11.7134, 265.57, 14.3855, 0.55 ) }
    dend_6 { pt3dadd( -11.1208, 269.738, 13.7481, 0.83 ) }
    dend_6 { pt3dadd( -10.8799, 271.69, 13.3959, 0.83 ) }
    dend_6 { pt3dadd( -10.6738, 274.77, 12.8041, 0.83 ) }
    dend_6 { pt3dadd( -10.6874, 278.4, 12.1978, 0.83 ) }
    dend_6 { pt3dadd( -10.9461, 281.391, 11.8779, 0.28 ) }
    dend_6 { pt3dadd( -11.2086, 282.935, 11.7916, 0.83 ) }
    dend_6 { pt3dadd( -12.2115, 287.332, 11.6863, 0.83 ) }
    dend_6 { pt3dadd( -13.1566, 290.825, 11.7229, 0.83 ) }
    dend_6 { pt3dadd( -14.2718, 294.207, 11.9302, 0.83 ) }
    dend_6 { pt3dadd( -15.5629, 297.675, 12.3009, 0.83 ) }
    dend_6 { pt3dadd( -16.494, 299.975, 12.6177, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.32609, 50.2121, 21.8384, 0.83 ) }
    dend_5 { pt3dadd( 4.28665, 51.2083, 23.3613, 0.83 ) }
    dend_5 { pt3dadd( 3.54868, 52.1118, 24.5704, 0.55 ) }
    dend_5 { pt3dadd( 2.3594, 53.5785, 26.5147, 0.55 ) }
    dend_5 { pt3dadd( 1.2451, 54.9516, 28.3278, 0.55 ) }
    dend_5 { pt3dadd( -0.0157389, 56.3436, 30.3095, 0.55 ) }
    dend_5 { pt3dadd( -0.956318, 57.2431, 31.7675, 0.55 ) }
    dend_5 { pt3dadd( -2.56587, 58.494, 34.29, 0.55 ) }
    dend_5 { pt3dadd( -3.73309, 59.1662, 36.0213, 0.55 ) }
    dend_5 { pt3dadd( -5.39216, 59.7295, 38.1885, 0.55 ) }
    dend_5 { pt3dadd( -8.09763, 59.9048, 41.2642, 0.55 ) }
    dend_5 { pt3dadd( -9.74014, 59.6734, 42.8764, 0.55 ) }
    dend_5 { pt3dadd( -11.5454, 59.0081, 44.4573, 0.55 ) }
    dend_5 { pt3dadd( -12.6373, 58.3798, 45.2648, 0.55 ) }
    dend_5 { pt3dadd( -13.5238, 57.6953, 45.8231, 0.55 ) }
    dend_5 { pt3dadd( -15.1835, 56.0876, 46.6657, 0.28 ) }
    dend_5 { pt3dadd( -15.9925, 55.1503, 47.0074, 0.83 ) }
    dend_5 { pt3dadd( -17.0732, 53.781, 47.445, 0.55 ) }
    dend_5 { pt3dadd( -17.7653, 52.7694, 47.6629, 0.55 ) }
    dend_5 { pt3dadd( -18.6114, 51.2192, 47.8295, 0.55 ) }
    dend_5 { pt3dadd( -19.3691, 49.5875, 47.8921, 0.83 ) }
    dend_5 { pt3dadd( -19.9983, 48.1328, 47.8794, 0.55 ) }
    dend_5 { pt3dadd( -20.534, 46.8971, 47.811, 0.55 ) }
    dend_5 { pt3dadd( -21.783, 43.9976, 47.5571, 0.55 ) }
    dend_5 { pt3dadd( -23.0581, 41.2373, 47.2801, 0.83 ) }
    dend_5 { pt3dadd( -24.0974, 39.196, 47.0319, 0.83 ) }
    dend_5 { pt3dadd( -25.2627, 37.1489, 46.6318, 0.83 ) }
    dend_5 { pt3dadd( -26.7008, 34.8694, 46.1405, 0.55 ) }
    dend_5 { pt3dadd( -27.3996, 33.8343, 45.9555, 0.28 ) }
    dend_5 { pt3dadd( -28.2953, 32.6089, 45.8079, 0.55 ) }
    dend_5 { pt3dadd( -29.3863, 31.2905, 45.674, 0.28 ) }
    dend_5 { pt3dadd( -31.7388, 28.5985, 45.5255, 0.55 ) }
    dend_5 { pt3dadd( -33.2032, 27.0011, 45.5149, 0.55 ) }
    dend_5 { pt3dadd( -34.6199, 25.4788, 45.608, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -35.8891, 24.1136, 45.754, 0.55 ) }
    dend_5 { pt3dadd( -38.041, 21.6618, 46.0716, 0.55 ) }
    dend_5 { pt3dadd( -38.7711, 20.776, 46.2211, 0.83 ) }
    dend_5 { pt3dadd( -40.0259, 19.1179, 46.5375, 0.55 ) }
    dend_5 { pt3dadd( -41.7231, 16.6413, 46.8685, 0.55 ) }
    dend_5 { pt3dadd( -42.8141, 14.7066, 47.0132, 0.83 ) }
    dend_5 { pt3dadd( -43.826, 12.3524, 47.1169, 0.55 ) }
    dend_5 { pt3dadd( -44.3755, 10.5178, 47.1303, 0.55 ) }
    dend_5 { pt3dadd( -44.7879, 8.66164, 47.0927, 0.55 ) }
    dend_5 { pt3dadd( -44.9269, 7.67041, 47.0452, 0.83 ) }
    dend_5 { pt3dadd( -45.1415, 5.11035, 46.8489, 0.55 ) }
    dend_5 { pt3dadd( -45.2698, 2.10744, 46.5684, 0.28 ) }
    dend_5 { pt3dadd( -45.3797, -2.24033, 46.1473, 0.28 ) }
    dend_5 { pt3dadd( -45.4364, -4.06928, 45.9085, 0.83 ) }
    dend_5 { pt3dadd( -45.5458, -7.66048, 45.3917, 0.28 ) }
    dend_5 { pt3dadd( -45.5877, -8.91982, 45.2201, 0.83 ) }
    dend_5 { pt3dadd( -45.6183, -9.70527, 45.1224, 0.28 ) }
    dend_5 { pt3dadd( -45.6354, -10.9394, 44.9385, 0.83 ) }
    dend_5 { pt3dadd( -45.6805, -13.4001, 44.5748, 0.28 ) }
    dend_5 { pt3dadd( -45.7323, -14.3438, 44.4712, 0.55 ) }
    dend_5 { pt3dadd( -45.9563, -16.4766, 44.3189, 0.28 ) }
    dend_5 { pt3dadd( -46.1162, -17.7098, 44.2487, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.2668, 40.3961, 16.6554, 0.83 ) }
    dend_3 { pt3dadd( 13.8588, 41.1678, 15.1293, 0.83 ) }
    dend_3 { pt3dadd( 15.749, 42.2036, 13.4313, 0.83 ) }
    dend_3 { pt3dadd( 16.8999, 42.8917, 12.4821, 0.83 ) }
    dend_3 { pt3dadd( 23.6755, 47.1545, 7.54386, 0.55 ) }
    dend_3 { pt3dadd( 25.5015, 48.368, 6.44411, 0.55 ) }
    dend_3 { pt3dadd( 26.4727, 49.0428, 5.98136, 0.55 ) }
    dend_3 { pt3dadd( 27.7104, 49.9198, 5.5199, 0.55 ) }
    dend_3 { pt3dadd( 28.8797, 50.8314, 5.30139, 1.11 ) }
    dend_3 { pt3dadd( 30.117, 51.9749, 5.38756, 0.55 ) }
    dend_3 { pt3dadd( 32.0062, 54.0168, 6.09006, 0.55 ) }
    dend_3 { pt3dadd( 33.6039, 55.8822, 6.75547, 0.55 ) }
    dend_3 { pt3dadd( 34.6114, 57.1078, 7.22623, 0.55 ) }
    dend_3 { pt3dadd( 35.7853, 58.6849, 7.92642, 0.83 ) }
    dend_3 { pt3dadd( 37.065, 60.646, 8.8325, 0.55 ) }
    dend_3 { pt3dadd( 37.9515, 62.2436, 9.54223, 1.11 ) }
    dend_3 { pt3dadd( 38.7856, 63.9328, 10.3053, 0.55 ) }
    dend_3 { pt3dadd( 39.5648, 65.6039, 11.064, 0.83 ) }
    dend_3 { pt3dadd( 40.8945, 68.5158, 12.3328, 0.55 ) }
    dend_3 { pt3dadd( 41.5979, 70.0401, 12.9662, 0.55 ) }
    dend_3 { pt3dadd( 42.5727, 72.1449, 13.7706, 0.55 ) }
    dend_3 { pt3dadd( 43.4002, 73.7769, 14.3139, 0.55 ) }
    dend_3 { pt3dadd( 43.9323, 74.7826, 14.601, 0.28 ) }
    dend_3 { pt3dadd( 45.051, 76.7593, 15.08, 0.55 ) }
    dend_3 { pt3dadd( 45.9358, 78.2321, 15.3578, 0.28 ) }
    dend_3 { pt3dadd( 46.7775, 79.5592, 15.5953, 0.55 ) }
    dend_3 { pt3dadd( 48.3972, 82.0432, 16.0109, 0.55 ) }
    dend_3 { pt3dadd( 49.2882, 83.4466, 16.2125, 0.55 ) }
    dend_3 { pt3dadd( 50.5406, 85.3931, 16.4663, 0.28 ) }
    dend_3 { pt3dadd( 52.0247, 87.3058, 16.1435, 0.83 ) }
    dend_3 { pt3dadd( 53.4354, 88.9247, 15.5579, 0.28 ) }
    dend_3 { pt3dadd( 53.7789, 89.2671, 15.3738, 0.55 ) }
    dend_3 { pt3dadd( 54.6679, 89.9835, 14.7815, 0.28 ) }
    dend_3 { pt3dadd( 55.2642, 90.3965, 14.344, 0.83 ) }
    dend_3 { pt3dadd( 62.8748, 95.1114, 8.49107, 0.55 ) }
    dend_3 { pt3dadd( 65.8352, 96.8056, 6.29339, 0.55 ) }
    dend_3 { pt3dadd( 66.7372, 97.3202, 5.65992, 0.83 ) }
    dend_3 { pt3dadd( 68.777, 98.5743, 4.49382, 0.55 ) }
    dend_3 { pt3dadd( 69.7202, 99.2266, 4.12316, 0.55 ) }
    dend_3 { pt3dadd( 70.6042, 100.118, 4.14183, 0.83 ) }
    dend_3 { pt3dadd( 71.3666, 101.386, 4.74524, 0.28 ) }
    dend_3 { pt3dadd( 71.7354, 102.074, 4.94395, 0.55 ) }
    dend_3 { pt3dadd( 72.5508, 104.083, 5.56195, 0.28 ) }
    dend_3 { pt3dadd( 72.9354, 105.452, 6.09417, 0.55 ) }
    dend_3 { pt3dadd( 73.2603, 106.638, 6.53463, 0.28 ) }
    dend_3 { pt3dadd( 73.5358, 107.821, 6.80268, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.2668, 40.3961, 16.6554, 0.55 ) }
    dend_2 { pt3dadd( 12.5829, 39.8356, 18.3459, 0.55 ) }
    dend_2 { pt3dadd( 13.0573, 38.9945, 20.8826, 0.28 ) }
    dend_2 { pt3dadd( 13.3062, 38.5532, 22.2135, 0.55 ) }
    dend_2 { pt3dadd( 13.7634, 37.7426, 24.6583, 0.55 ) }
    dend_2 { pt3dadd( 14.3612, 36.6827, 27.8548, 0.55 ) }
    dend_2 { pt3dadd( 14.688, 36.1032, 29.6025, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 17.992, -30.73, -24.7508, 0.55 ) }
    dend_48 { pt3dadd( 15.8373, -29.0158, -26.4878, 0.55 ) }
    dend_48 { pt3dadd( 15.2841, -28.5284, -27.2513, 0.83 ) }
    dend_48 { pt3dadd( 14.0603, -27.422, -29.1532, 0.55 ) }
    dend_48 { pt3dadd( 13.5512, -26.989, -29.9276, 0.55 ) }
    dend_48 { pt3dadd( 11.4389, -25.3611, -33.9673, 0.28 ) }
    dend_48 { pt3dadd( 11.0102, -25.0736, -34.8315, 0.83 ) }
    dend_48 { pt3dadd( 9.44561, -24.1859, -38.7103, 0.55 ) }
    dend_48 { pt3dadd( 9.28296, -24.1128, -39.1387, 0.55 ) }
    dend_48 { pt3dadd( 8.85823, -23.9732, -40.3146, 0.83 ) }
    dend_48 { pt3dadd( 6.93432, -23.4989, -45.4841, 0.55 ) }
    dend_48 { pt3dadd( 6.55043, -23.436, -46.461, 0.55 ) }
    dend_48 { pt3dadd( 6.12726, -23.3709, -47.5807, 0.83 ) }
    dend_48 { pt3dadd( 5.25429, -23.1838, -50.1312, 0.55 ) }
    dend_48 { pt3dadd( 5.08473, -23.1125, -50.6835, 0.55 ) }
    dend_48 { pt3dadd( 4.8123, -22.9101, -51.7495, 0.55 ) }
    dend_48 { pt3dadd( 3.78807, -21.7788, -56.0823, 0.28 ) }
    dend_48 { pt3dadd( 3.54257, -21.4318, -57.2978, 0.83 ) }
    dend_48 { pt3dadd( 2.76286, -20.1107, -61.4213, 0.55 ) }
    dend_48 { pt3dadd( 2.57811, -19.7165, -62.4831, 0.83 ) }
    dend_48 { pt3dadd( 1.67127, -17.4192, -67.8141, 0.55 ) }
    dend_48 { pt3dadd( 1.46543, -16.6535, -69.3193, 0.28 ) }
    dend_48 { pt3dadd( 1.36626, -16.1395, -70.1974, 0.83 ) }
    dend_48 { pt3dadd( 1.24325, -15.1674, -71.6958, 0.55 ) }
    dend_48 { pt3dadd( 1.18758, -14.3715, -72.7344, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( 1.20721, -12.427, -75.0177, 0.55 ) }
    dend_48 { pt3dadd( 1.47152, -9.4612, -77.8722, 0.28 ) }
    dend_48 { pt3dadd( 1.53311, -9.00851, -78.2918, 0.55 ) }
    dend_48 { pt3dadd( 1.73348, -7.80488, -79.3776, 0.28 ) }
    dend_48 { pt3dadd( 1.82657, -7.31684, -79.8134, 0.55 ) }
    dend_48 { pt3dadd( 2.15749, -5.66447, -81.2504, 0.28 ) }
    dend_48 { pt3dadd( 2.28822, -5.08304, -81.7296, 0.55 ) }
    dend_48 { pt3dadd( 2.67998, -3.26112, -83.2199, 0.28 ) }
    dend_48 { pt3dadd( 2.82345, -2.58725, -83.8081, 0.55 ) }
    dend_48 { pt3dadd( 3.09014, -1.09842, -85.1285, 0.28 ) }
    dend_48 { pt3dadd( 3.13286, -0.763716, -85.4313, 0.55 ) }
    dend_48 { pt3dadd( 3.25813, 0.57553, -86.5691, 0.28 ) }
    dend_48 { pt3dadd( 3.29635, 1.03939, -86.9582, 0.55 ) }
    dend_48 { pt3dadd( 3.34903, 2.47819, -88.1203, 0.28 ) }
    dend_48 { pt3dadd( 3.33821, 3.19477, -88.7866, 0.55 ) }
    dend_48 { pt3dadd( 3.19181, 5.28061, -90.7594, 0.28 ) }
    dend_48 { pt3dadd( 3.09175, 6.13006, -91.5987, 0.55 ) }
    dend_48 { pt3dadd( 2.7727, 8.46942, -94.2082, 0.28 ) }
    dend_48 { pt3dadd( 2.68377, 9.17791, -95.0625, 0.55 ) }
    dend_48 { pt3dadd( 2.48408, 11.4636, -98.1739, 0.28 ) }
    dend_48 { pt3dadd( 2.42125, 12.2252, -99.3056, 0.28 ) }
    dend_48 { pt3dadd( 2.34955, 13.1138, -100.702, 0.55 ) }
    dend_48 { pt3dadd( 2.16531, 14.6447, -103.124, 0.28 ) }
    dend_48 { pt3dadd( 2.12735, 14.9311, -103.541, 0.55 ) }
    dend_48 { pt3dadd( 1.97982, 16.1572, -105.483, 0.28 ) }
    dend_48 { pt3dadd( 1.90091, 16.7443, -106.407, 0.83 ) }
    dend_48 { pt3dadd( 1.69236, 17.9367, -108.288, 0.55 ) }
    dend_48 { pt3dadd( 1.565, 18.7109, -109.508, 0.55 ) }
    dend_48 { pt3dadd( 1.35522, 20.0993, -111.603, 0.55 ) }
    dend_48 { pt3dadd( 0.96801, 23.5556, -117.018, 0.83 ) }
    dend_48 { pt3dadd( 0.887339, 24.7503, -118.969, 0.28 ) }
    dend_48 { pt3dadd( 0.8815, 25.3829, -120.049, 0.55 ) }
    dend_48 { pt3dadd( 1.03838, 27.7325, -124.324, 0.55 ) }
    dend_48 { pt3dadd( 1.14298, 28.3532, -125.467, 0.55 ) }
    dend_48 { pt3dadd( 1.61166, 30.3569, -129.344, 0.83 ) }
    dend_48 { pt3dadd( 1.95995, 31.6393, -131.972, 0.28 ) }
    dend_48 { pt3dadd( 2.15432, 32.3069, -133.761, 0.55 ) }
    dend_48 { pt3dadd( 2.39451, 32.8533, -135.984, 0.28 ) }
    dend_48 { pt3dadd( 2.49661, 32.992, -136.954, 0.83 ) }
    dend_48 { pt3dadd( 2.9951, 33.3585, -142.467, 0.55 ) }
    dend_48 { pt3dadd( 3.15976, 33.3485, -144.596, 0.55 ) }
    dend_48 { pt3dadd( 3.40578, 33.1111, -149.475, 0.55 ) }
    dend_48 { pt3dadd( 3.42256, 32.6662, -156.742, 0.55 ) }
    dend_48 { pt3dadd( 3.36801, 32.5518, -158.433, 0.55 ) }
    dend_48 { pt3dadd( 3.13315, 32.2778, -162.683, 0.55 ) }
    dend_48 { pt3dadd( 2.78151, 32.0456, -167.129, 0.55 ) }
    dend_48 { pt3dadd( 2.42049, 31.9236, -170.588, 0.55 ) }
    dend_48 { pt3dadd( 1.66138, 31.7891, -175.789, 0.55 ) }
    dend_48 { pt3dadd( 0.701345, 31.7529, -181.064, 0.55 ) }
    dend_48 { pt3dadd( 0.478577, 31.7618, -182.245, 0.55 ) }
    dend_48 { pt3dadd( -0.497554, 31.7695, -187.422, 0.55 ) }
    dend_48 { pt3dadd( -0.738206, 31.7677, -188.669, 0.28 ) }
    dend_48 { pt3dadd( -0.792975, 31.7627, -188.97, 0.55 ) }
    dend_48 { pt3dadd( -2.9152, 31.2893, -200.721, 0.28 ) }
    dend_48 { pt3dadd( -3.12267, 31.2353, -201.781, 0.83 ) }
    dend_48 { pt3dadd( -4.36437, 30.8104, -208.03, 0.28 ) }
    dend_48 { pt3dadd( -4.44674, 30.7805, -208.431, 0.55 ) }
    dend_48 { pt3dadd( -5.05987, 30.5885, -211.349, 0.28 ) }
    dend_48 { pt3dadd( -5.32083, 30.505, -212.532, 0.55 ) }
    dend_48 { pt3dadd( -5.97278, 30.2415, -214.774, 0.28 ) }
    dend_48 { pt3dadd( -6.19058, 30.1449, -215.549, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 17.992, -30.73, -24.7508, 0.55 ) }
    dend_43 { pt3dadd( 19.8432, -30.8226, -27.0813, 0.55 ) }
    dend_43 { pt3dadd( 21.4125, -30.8621, -28.8577, 0.55 ) }
    dend_43 { pt3dadd( 24.8933, -30.9399, -33.014, 0.83 ) }
    dend_43 { pt3dadd( 25.8264, -31.0031, -34.1311, 0.83 ) }
    dend_43 { pt3dadd( 26.921, -31.1076, -35.4236, 0.83 ) }
    dend_43 { pt3dadd( 27.8459, -31.1901, -36.4848, 0.83 ) }
    dend_43 { pt3dadd( 29.4874, -31.323, -38.307, 0.83 ) }
    dend_43 { pt3dadd( 32.2419, -31.6367, -41.3634, 0.83 ) }
    dend_43 { pt3dadd( 33.9464, -31.7733, -43.1466, 0.83 ) }
    dend_43 { pt3dadd( 35.7864, -31.8614, -45.1747, 0.83 ) }
    dend_43 { pt3dadd( 37.8267, -31.896, -47.4278, 0.83 ) }
    dend_43 { pt3dadd( 39.6784, -31.8888, -49.4761, 0.83 ) }
    dend_43 { pt3dadd( 42.6956, -31.8438, -52.7003, 0.83 ) }
    dend_43 { pt3dadd( 44.5675, -31.747, -54.6078, 0.83 ) }
    dend_43 { pt3dadd( 46.9338, -31.5012, -57.0553, 0.83 ) }
    dend_43 { pt3dadd( 48.4405, -31.2963, -58.6454, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 22.2637, -47.9909, 3.85472, 0.55 ) }
    dend_39 { pt3dadd( 24.5462, -47.7459, 4.38153, 0.55 ) }
    dend_39 { pt3dadd( 26.4494, -47.6319, 4.87712, 0.28 ) }
    dend_39 { pt3dadd( 27.6564, -47.6329, 5.23062, 0.55 ) }
    dend_39 { pt3dadd( 29.7037, -47.6934, 5.86137, 1.11 ) }
    dend_39 { pt3dadd( 33.4248, -47.9097, 7.18306, 0.55 ) }
    dend_39 { pt3dadd( 34.8524, -48.019, 7.74419, 0.55 ) }
    dend_39 { pt3dadd( 36.436, -48.2, 8.45825, 0.83 ) }
    dend_39 { pt3dadd( 38.116, -48.4117, 9.27143, 0.28 ) }
    dend_39 { pt3dadd( 38.116, -48.4117, 9.27143, 0.83 ) }
    dend_39 { pt3dadd( 40.9683, -49.132, 10.9357, 0.28 ) }
    dend_39 { pt3dadd( 41.7349, -49.3676, 11.4028, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.2637, -47.9909, 3.85472, 0.83 ) }
    dend_34 { pt3dadd( 24.4544, -50.9295, 3.57291, 0.83 ) }
    dend_34 { pt3dadd( 26.5127, -53.0729, 3.10985, 0.55 ) }
    dend_34 { pt3dadd( 27.9482, -54.2472, 2.64547, 0.83 ) }
    dend_34 { pt3dadd( 29.1195, -55.2053, 2.26657, 0.83 ) }
    dend_34 { pt3dadd( 30.7428, -56.5333, 1.74143, 0.83 ) }
    dend_34 { pt3dadd( 32.1685, -57.6995, 1.28022, 0.83 ) }
    dend_34 { pt3dadd( 35.2112, -59.5329, 0.137538, 0.83 ) }
    dend_34 { pt3dadd( 37.5498, -60.6592, -0.930496, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -57.1864, -34.0783, 16.0172, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -58.1962, -31.6078, 14.823, 0.55 ) }
    dend_30 { pt3dadd( -59.4384, -28.2003, 13.2104, 0.83 ) }
    dend_30 { pt3dadd( -61.1336, -23.4426, 10.8514, 0.55 ) }
    dend_30 { pt3dadd( -61.8751, -21.1338, 9.77775, 0.55 ) }
    dend_30 { pt3dadd( -62.8751, -17.7586, 8.28106, 1.11 ) }
    dend_30 { pt3dadd( -63.7369, -14.7524, 7.00996, 0.83 ) }
    dend_30 { pt3dadd( -64.5815, -11.5835, 5.71364, 0.55 ) }
    dend_30 { pt3dadd( -64.9001, -10.2871, 5.21647, 0.55 ) }
    dend_30 { pt3dadd( -65.7935, -7.11816, 4.24447, 0.55 ) }
    dend_30 { pt3dadd( -65.9809, -6.47517, 4.04836, 1.11 ) }
    dend_30 { pt3dadd( -66.5244, -4.90343, 3.86839, 0.55 ) }
    dend_30 { pt3dadd( -67.2397, -3.32333, 4.14535, 0.83 ) }
    dend_30 { pt3dadd( -68.0634, -1.86114, 4.72643, 0.55 ) }
    dend_30 { pt3dadd( -69.1344, -0.163898, 5.54075, 0.55 ) }
    dend_30 { pt3dadd( -69.9769, 1.0343, 6.10888, 0.83 ) }
    dend_30 { pt3dadd( -73.9196, 6.78431, 8.03145, 0.55 ) }
    dend_30 { pt3dadd( -74.9585, 8.39626, 8.40647, 0.83 ) }
    dend_30 { pt3dadd( -76.2885, 10.4993, 8.65949, 0.55 ) }
    dend_30 { pt3dadd( -77.7475, 12.6949, 8.70817, 0.55 ) }
    dend_30 { pt3dadd( -79.1221, 14.7405, 8.42796, 1.11 ) }
    dend_30 { pt3dadd( -81.5952, 18.6113, 7.39992, 0.55 ) }
    dend_30 { pt3dadd( -82.358, 19.8781, 6.94415, 0.55 ) }
    dend_30 { pt3dadd( -84.2511, 23.2404, 5.72356, 0.55 ) }
    dend_30 { pt3dadd( -85.4292, 25.446, 4.91343, 0.55 ) }
    dend_30 { pt3dadd( -86.9357, 28.2971, 3.94524, 1.11 ) }
    dend_30 { pt3dadd( -88.6485, 31.476, 2.98512, 0.55 ) }
    dend_30 { pt3dadd( -89.7321, 33.4122, 2.54596, 1.11 ) }
    dend_30 { pt3dadd( -91.1134, 35.8142, 2.0312, 0.28 ) }
    dend_30 { pt3dadd( -91.6046, 36.6507, 1.89684, 0.55 ) }
    dend_30 { pt3dadd( -92.446, 37.9971, 1.76283, 0.28 ) }
    dend_30 { pt3dadd( -93.6709, 39.7239, 1.77481, 0.83 ) }
    dend_30 { pt3dadd( -95.7041, 42.2534, 1.93002, 0.28 ) }
    dend_30 { pt3dadd( -96.4798, 43.1891, 2.05837, 0.55 ) }
    dend_30 { pt3dadd( -99.746, 47.001, 2.85328, 0.28 ) }
    dend_30 { pt3dadd( -100.982, 48.4691, 3.20044, 0.83 ) }
    dend_30 { pt3dadd( -102.727, 50.6063, 3.71022, 0.55 ) }
    dend_30 { pt3dadd( -104.479, 52.8022, 4.22741, 0.55 ) }
    dend_30 { pt3dadd( -106.237, 55.0479, 4.69886, 0.55 ) }
    dend_30 { pt3dadd( -107.547, 56.8103, 5.04562, 0.83 ) }
    dend_30 { pt3dadd( -109.036, 58.9365, 5.39257, 0.28 ) }
    dend_30 { pt3dadd( -110.404, 61.037, 5.68478, 0.55 ) }
    dend_30 { pt3dadd( -111.947, 63.8237, 5.88573, 0.55 ) }
    dend_30 { pt3dadd( -112.202, 64.3968, 5.90401, 0.83 ) }
    dend_30 { pt3dadd( -113.136, 67.0184, 5.63629, 0.28 ) }
    dend_30 { pt3dadd( -113.491, 68.522, 5.36187, 0.55 ) }
    dend_30 { pt3dadd( -113.679, 69.7671, 4.9426, 0.28 ) }
    dend_30 { pt3dadd( -113.955, 72.2777, 3.65661, 0.55 ) }
    dend_30 { pt3dadd( -114.133, 74.9012, 2.01317, 0.55 ) }
    dend_30 { pt3dadd( -114.371, 78.6159, -0.526895, 0.28 ) }
    dend_30 { pt3dadd( -114.443, 81.0581, -2.65457, 0.83 ) }
    dend_30 { pt3dadd( -114.446, 84.5402, -6.06165, 0.55 ) }
    dend_30 { pt3dadd( -114.378, 87.0389, -8.69163, 0.55 ) }
    dend_30 { pt3dadd( -114.357, 88.0827, -9.83934, 0.55 ) }
    dend_30 { pt3dadd( -114.351, 89.6558, -11.7362, 0.83 ) }
    dend_30 { pt3dadd( -114.488, 93.9875, -16.9024, 0.28 ) }
    dend_30 { pt3dadd( -114.565, 94.8709, -17.9947, 0.83 ) }
    dend_30 { pt3dadd( -114.75, 96.1017, -19.4012, 0.28 ) }
    dend_30 { pt3dadd( -115.046, 97.37, -20.6832, 0.55 ) }
    dend_30 { pt3dadd( -116.337, 100.44, -23.5427, 0.83 ) }
    dend_30 { pt3dadd( -116.993, 101.434, -24.0356, 0.83 ) }
    dend_30 { pt3dadd( -118.33, 103.051, -24.0177, 0.28 ) }
    dend_30 { pt3dadd( -119.014, 103.828, -23.8164, 0.55 ) }
    dend_30 { pt3dadd( -120.645, 105.669, -22.9923, 0.28 ) }
    dend_30 { pt3dadd( -121.783, 107.106, -22.2184, 0.55 ) }
    dend_30 { pt3dadd( -124.796, 111.168, -18.8356, 0.28 ) }
    dend_30 { pt3dadd( -125.375, 111.988, -18.0538, 0.55 ) }
    dend_30 { pt3dadd( -126.218, 113.347, -16.7334, 0.28 ) }
    dend_30 { pt3dadd( -126.835, 114.45, -15.6289, 0.83 ) }
    dend_30 { pt3dadd( -127.788, 116.29, -13.755, 0.83 ) }
    dend_30 { pt3dadd( -130.232, 121.705, -8.52786, 0.28 ) }
    dend_30 { pt3dadd( -130.551, 122.528, -7.80803, 0.55 ) }
    dend_30 { pt3dadd( -131.573, 125.439, -5.36625, 0.28 ) }
    dend_30 { pt3dadd( -132.108, 127.115, -4.0354, 0.83 ) }
    dend_30 { pt3dadd( -132.636, 128.955, -2.67711, 0.28 ) }
    dend_30 { pt3dadd( -133.035, 130.493, -1.70733, 0.83 ) }
    dend_30 { pt3dadd( -133.766, 133.851, -0.227072, 0.28 ) }
    dend_30 { pt3dadd( -134.061, 135.391, 0.336605, 0.83 ) }
    dend_30 { pt3dadd( -134.545, 138.294, 1.10755, 0.28 ) }
    dend_30 { pt3dadd( -134.812, 140.068, 1.28504, 0.55 ) }
    dend_30 { pt3dadd( -135.051, 141.917, 1.18466, 0.28 ) }
    dend_30 { pt3dadd( -135.288, 144.071, 0.611801, 0.55 ) }
    dend_30 { pt3dadd( -135.558, 146.696, -0.510731, 0.28 ) }
    dend_30 { pt3dadd( -135.656, 147.789, -1.0966, 0.83 ) }
    dend_30 { pt3dadd( -135.881, 150.472, -2.72389, 0.28 ) }
    dend_30 { pt3dadd( -136.066, 152.456, -4.23733, 0.83 ) }
    dend_30 { pt3dadd( -136.388, 155.985, -7.09556, 0.28 ) }
    dend_30 { pt3dadd( -136.475, 157.121, -8.19307, 0.83 ) }
    dend_30 { pt3dadd( -136.589, 159.125, -10.3947, 0.28 ) }
    dend_30 { pt3dadd( -136.608, 159.91, -11.4092, 0.83 ) }
    dend_30 { pt3dadd( -136.609, 164.456, -17.7383, 0.28 ) }
    dend_30 { pt3dadd( -136.598, 166.19, -20.4596, 0.83 ) }
    dend_30 { pt3dadd( -136.496, 170.107, -26.9676, 0.28 ) }
    dend_30 { pt3dadd( -136.403, 171.501, -29.4631, 0.83 ) }
    dend_30 { pt3dadd( -136.212, 173.99, -34.1826, 0.28 ) }
    dend_30 { pt3dadd( -136.151, 174.757, -35.7089, 0.55 ) }
    dend_30 { pt3dadd( -136.052, 177.069, -40.0882, 0.28 ) }
    dend_30 { pt3dadd( -136.066, 177.828, -41.4821, 0.28 ) }
    dend_30 { pt3dadd( -136.271, 179.767, -44.4922, 0.55 ) }
    dend_30 { pt3dadd( -137.085, 182.666, -48.9674, 0.28 ) }
    dend_30 { pt3dadd( -137.866, 184.658, -51.9933, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -138.63, 186.441, -54.9774, 0.28 ) }
    dend_30 { pt3dadd( -139.038, 187.319, -56.456, 0.55 ) }
    dend_30 { pt3dadd( -139.783, 188.733, -58.6349, 0.28 ) }
    dend_30 { pt3dadd( -143.643, 195.449, -67.7881, 0.28 ) }
    dend_30 { pt3dadd( -144.104, 196.25, -68.7798, 0.83 ) }
    dend_30 { pt3dadd( -147.146, 201.57, -74.9783, 0.28 ) }
    dend_30 { pt3dadd( -147.467, 202.156, -75.6847, 0.83 ) }
    dend_30 { pt3dadd( -151.058, 209.1, -83.1513, 0.28 ) }
    dend_30 { pt3dadd( -151.371, 209.816, -83.6167, 0.55 ) }
    dend_30 { pt3dadd( -152.61, 213.206, -83.1595, 0.28 ) }
    dend_30 { pt3dadd( -152.994, 214.244, -83.1203, 0.55 ) }
    dend_30 { pt3dadd( -153.638, 215.792, -82.9634, 0.28 ) }
    dend_30 { pt3dadd( -154.106, 217.164, -83.6646, 0.55 ) }
    dend_30 { pt3dadd( -154.768, 219.341, -85.4792, 0.28 ) }
    dend_30 { pt3dadd( -155.082, 220.368, -86.349, 1.11 ) }
    dend_30 { pt3dadd( -155.992, 222.693, -88.2316, 0.28 ) }
    dend_30 { pt3dadd( -156.385, 223.632, -89.0783, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -57.1864, -34.0783, 16.0172, 0.55 ) }
    dend_29 { pt3dadd( -61.4501, -36.428, 15.9686, 0.55 ) }
    dend_29 { pt3dadd( -63.3582, -37.353, 15.9762, 0.55 ) }
    dend_29 { pt3dadd( -66.3174, -38.6633, 16.083, 0.83 ) }
    dend_29 { pt3dadd( -69.3485, -40.0057, 16.2344, 0.55 ) }
    dend_29 { pt3dadd( -71.8875, -41.2469, 16.5192, 0.55 ) }
    dend_29 { pt3dadd( -73.0703, -41.8895, 16.6996, 0.83 ) }
    dend_29 { pt3dadd( -74.7737, -42.9466, 17.1363, 0.55 ) }
    dend_29 { pt3dadd( -77.7238, -44.8952, 18.4113, 0.55 ) }
    dend_29 { pt3dadd( -79.1848, -45.9692, 19.2838, 0.55 ) }
    dend_29 { pt3dadd( -81.7728, -48.1265, 21.1703, 0.55 ) }
    dend_29 { pt3dadd( -82.8923, -49.1537, 22.1694, 0.28 ) }
    dend_29 { pt3dadd( -85.3566, -51.6094, 24.6497, 0.83 ) }
    dend_29 { pt3dadd( -88.19, -54.4853, 27.8651, 0.55 ) }
    dend_29 { pt3dadd( -88.6938, -54.9839, 28.4735, 0.55 ) }
    dend_29 { pt3dadd( -90.3194, -56.4719, 30.3644, 0.83 ) }
    dend_29 { pt3dadd( -92.3051, -58.0671, 32.4304, 0.55 ) }
    dend_29 { pt3dadd( -93.7872, -59.1619, 33.8717, 0.83 ) }
    dend_29 { pt3dadd( -97.8548, -62.0155, 37.2373, 0.55 ) }
    dend_29 { pt3dadd( -99.7144, -63.2992, 38.448, 0.83 ) }
    dend_29 { pt3dadd( -102.065, -64.8095, 39.718, 0.28 ) }
    dend_29 { pt3dadd( -103.934, -65.8965, 40.4779, 0.55 ) }
    dend_29 { pt3dadd( -106.007, -67.0168, 40.9913, 0.55 ) }
    dend_29 { pt3dadd( -109.06, -68.5882, 41.389, 0.28 ) }
    dend_29 { pt3dadd( -110.385, -69.255, 41.3668, 0.28 ) }
    dend_29 { pt3dadd( -111.534, -69.8021, 41.3135, 0.55 ) }
    dend_29 { pt3dadd( -114.625, -71.4196, 41.2032, 0.28 ) }
    dend_29 { pt3dadd( -115.783, -72.1187, 41.295, 0.55 ) }
    dend_29 { pt3dadd( -116.347, -72.4983, 41.3619, 0.28 ) }
    dend_29 { pt3dadd( -117.848, -73.5874, 41.6903, 0.28 ) }
    dend_29 { pt3dadd( -118.847, -74.319, 41.9174, 0.55 ) }
    dend_29 { pt3dadd( -120.822, -75.8813, 42.3837, 0.28 ) }
    dend_29 { pt3dadd( -122.794, -77.6383, 42.828, 0.55 ) }
    dend_29 { pt3dadd( -125.229, -79.7899, 43.4376, 0.28 ) }
    dend_29 { pt3dadd( -127.058, -81.4597, 43.935, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -63.1878, 20.4716, 51.1042, 0.28 ) }
    dend_25 { pt3dadd( -65.9943, 22.4076, 51.1028, 0.28 ) }
    dend_25 { pt3dadd( -66.7621, 23.0039, 51.0668, 0.55 ) }
    dend_25 { pt3dadd( -68.4129, 24.3317, 50.9904, 0.28 ) }
    dend_25 { pt3dadd( -68.7803, 24.6586, 50.967, 0.55 ) }
    dend_25 { pt3dadd( -72.2272, 27.9775, 50.7046, 0.28 ) }
    dend_25 { pt3dadd( -74.8719, 30.6666, 50.5749, 0.28 ) }
    dend_25 { pt3dadd( -76.4211, 32.4601, 50.4778, 0.28 ) }
    dend_25 { pt3dadd( -77.5141, 33.8494, 50.4047, 0.55 ) }
    dend_25 { pt3dadd( -79.9936, 37.1315, 50.103, 0.28 ) }
    dend_25 { pt3dadd( -80.9012, 38.3824, 50.008, 0.55 ) }
    dend_25 { pt3dadd( -82.2705, 40.4287, 49.9133, 0.28 ) }
    dend_25 { pt3dadd( -82.9809, 41.6041, 49.8525, 0.55 ) }
    dend_25 { pt3dadd( -84.0899, 43.5621, 49.7524, 0.28 ) }
    dend_25 { pt3dadd( -85.5033, 46.2551, 49.5213, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -63.1878, 20.4716, 51.1042, 0.28 ) }
    dend_24 { pt3dadd( -60.9422, 19.2308, 48.8118, 0.28 ) }
    dend_24 { pt3dadd( -60.3444, 18.9008, 48.0863, 0.83 ) }
    dend_24 { pt3dadd( -57.373, 17.58, 44.8058, 0.28 ) }
    dend_24 { pt3dadd( -57.0582, 17.4492, 44.4754, 0.83 ) }
    dend_24 { pt3dadd( -54.1801, 16.3864, 41.8354, 0.28 ) }
    dend_24 { pt3dadd( -53.3101, 16.077, 41.1038, 0.83 ) }
    dend_24 { pt3dadd( -47.4976, 14.2367, 36.5499, 0.28 ) }
    dend_24 { pt3dadd( -44.1584, 13.244, 34.1338, 0.28 ) }
    dend_24 { pt3dadd( -43.4051, 13.0441, 33.6535, 1.11 ) }
    dend_24 { pt3dadd( -39.3856, 12.031, 31.3717, 0.28 ) }
    dend_24 { pt3dadd( -38.2033, 11.7172, 30.7061, 0.55 ) }
    dend_24 { pt3dadd( -33.8998, 10.5007, 28.2065, 0.28 ) }
    dend_24 { pt3dadd( -31.8946, 9.88561, 27.0726, 0.28 ) }
    dend_24 { pt3dadd( -30.6719, 9.45981, 26.2975, 0.55 ) }
    dend_24 { pt3dadd( -28.8588, 8.80673, 25.059, 0.28 ) }
    dend_24 { pt3dadd( -23.7043, 6.63609, 20.9882, 0.28 ) }
    dend_24 { pt3dadd( -21.0323, 5.44723, 18.7971, 0.28 ) }
    dend_24 { pt3dadd( -20.4622, 5.13371, 18.3184, 0.83 ) }
    dend_24 { pt3dadd( -19.2388, 4.36732, 17.2815, 0.28 ) }
    dend_24 { pt3dadd( -19.2388, 4.36732, 17.2815, 0.83 ) }
    dend_24 { pt3dadd( -16.5463, 2.55312, 15.1882, 0.28 ) }
    dend_24 { pt3dadd( -15.8179, 2.01978, 14.7863, 0.83 ) }
    dend_24 { pt3dadd( -13.7834, 0.0763073, 13.4144, 0.28 ) }
    dend_24 { pt3dadd( -12.5799, -1.17187, 12.5403, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -33.665, 44.0565, -19.1095, 0.28 ) }
    dend_18 { pt3dadd( -35.2543, 42.2047, -19.9697, 0.28 ) }
    dend_18 { pt3dadd( -36.5072, 40.7528, -20.791, 0.83 ) }
    dend_18 { pt3dadd( -37.8677, 39.1647, -21.6652, 0.55 ) }
    dend_18 { pt3dadd( -39.293, 37.5289, -22.7786, 1.11 ) }
    dend_18 { pt3dadd( -43.2274, 32.8382, -26.34, 0.28 ) }
    dend_18 { pt3dadd( -43.5063, 32.5156, -26.6307, 0.83 ) }
    dend_18 { pt3dadd( -44.7874, 31.0529, -28.2185, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -45.5858, 30.1347, -29.3126, 0.83 ) }
    dend_18 { pt3dadd( -48.5369, 26.7777, -33.6052, 0.28 ) }
    dend_18 { pt3dadd( -49.2977, 25.9286, -34.6886, 0.83 ) }
    dend_18 { pt3dadd( -52.1119, 23.1022, -38.9008, 0.28 ) }
    dend_18 { pt3dadd( -52.6221, 22.6053, -39.7076, 0.55 ) }
    dend_18 { pt3dadd( -53.5033, 21.7675, -41.1421, 0.55 ) }
    dend_18 { pt3dadd( -54.4169, 20.9123, -42.6879, 0.55 ) }
    dend_18 { pt3dadd( -55.6086, 19.8296, -44.6526, 1.11 ) }
    dend_18 { pt3dadd( -60.5105, 15.5107, -53.3602, 0.55 ) }
    dend_18 { pt3dadd( -61.2007, 14.8851, -54.7162, 0.28 ) }
    dend_18 { pt3dadd( -61.4044, 14.7186, -55.1308, 0.55 ) }
    dend_18 { pt3dadd( -62.7638, 13.7189, -57.9001, 0.28 ) }
    dend_18 { pt3dadd( -63.3288, 13.2911, -59.1434, 0.83 ) }
    dend_18 { pt3dadd( -66.5995, 10.7941, -66.6649, 0.28 ) }
    dend_18 { pt3dadd( -66.7461, 10.6832, -66.9853, 0.55 ) }
    dend_18 { pt3dadd( -70.0359, 8.22561, -74.1214, 0.28 ) }
    dend_18 { pt3dadd( -70.6181, 7.75647, -75.4118, 0.55 ) }
    dend_18 { pt3dadd( -72.304, 6.33935, -78.9847, 0.28 ) }
    dend_18 { pt3dadd( -72.598, 6.0748, -79.5988, 0.83 ) }
    dend_18 { pt3dadd( -74.0064, 4.72352, -82.3725, 0.28 ) }
    dend_18 { pt3dadd( -74.708, 4.03857, -83.744, 0.83 ) }
    dend_18 { pt3dadd( -78.091, 0.43107, -90.3117, 0.28 ) }
    dend_18 { pt3dadd( -78.9274, -0.444391, -91.7894, 0.83 ) }
    dend_18 { pt3dadd( -82.2206, -3.80936, -97.068, 0.55 ) }
    dend_18 { pt3dadd( -82.6371, -4.24907, -97.7205, 0.83 ) }
    dend_18 { pt3dadd( -84.9102, -6.75212, -101.2, 0.28 ) }
    dend_18 { pt3dadd( -85.6127, -7.55313, -102.209, 0.55 ) }
    dend_18 { pt3dadd( -88.4445, -10.9336, -105.985, 0.28 ) }
    dend_18 { pt3dadd( -89.453, -12.1782, -107.339, 0.83 ) }
    dend_18 { pt3dadd( -94.3526, -18.4026, -113.46, 0.28 ) }
    dend_18 { pt3dadd( -94.5987, -18.7201, -113.768, 0.83 ) }
    dend_18 { pt3dadd( -96.0903, -20.7368, -115.634, 0.28 ) }
    dend_18 { pt3dadd( -96.4708, -21.2417, -116.133, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -33.665, 44.0565, -19.1095, 0.55 ) }
    dend_17 { pt3dadd( -34.7641, 47.1721, -19.6698, 0.55 ) }
    dend_17 { pt3dadd( -35.5992, 49.5206, -20.1575, 0.55 ) }
    dend_17 { pt3dadd( -36.5052, 51.9718, -20.8229, 0.28 ) }
    dend_17 { pt3dadd( -37.1117, 53.5873, -21.3045, 1.38 ) }
    dend_17 { pt3dadd( -38.0495, 55.9334, -22.0947, 0.55 ) }
    dend_17 { pt3dadd( -39.1217, 58.548, -23.0103, 0.55 ) }
    dend_17 { pt3dadd( -39.5914, 59.6644, -23.3783, 0.83 ) }
    dend_17 { pt3dadd( -40.4458, 61.6452, -24.1032, 0.28 ) }
    dend_17 { pt3dadd( -40.9002, 62.7717, -24.5509, 0.55 ) }
    dend_17 { pt3dadd( -41.6275, 64.7557, -25.3078, 0.28 ) }
    dend_17 { pt3dadd( -42.1071, 66.2041, -25.7698, 0.83 ) }
    dend_17 { pt3dadd( -42.923, 69.2054, -26.4652, 0.28 ) }
    dend_17 { pt3dadd( -43.3145, 70.8126, -26.8622, 0.55 ) }
    dend_17 { pt3dadd( -43.7011, 72.7317, -27.3401, 0.28 ) }
    dend_17 { pt3dadd( -43.9692, 74.3375, -27.8514, 0.83 ) }
    dend_17 { pt3dadd( -44.3137, 77.3118, -28.9379, 0.28 ) }
    dend_17 { pt3dadd( -44.5779, 79.9124, -30.0928, 0.83 ) }
    dend_17 { pt3dadd( -44.8841, 84.2368, -32.3002, 0.28 ) }
    dend_17 { pt3dadd( -44.9344, 85.7206, -33.1381, 0.83 ) }
    dend_17 { pt3dadd( -45.0896, 89.7205, -35.7977, 0.28 ) }
    dend_17 { pt3dadd( -45.1447, 91.5476, -37.1642, 0.83 ) }
    dend_17 { pt3dadd( -45.1923, 93.7722, -38.962, 0.28 ) }
    dend_17 { pt3dadd( -45.2524, 95.5166, -40.4502, 0.55 ) }
    dend_17 { pt3dadd( -45.3091, 97.2615, -41.9281, 0.83 ) }
    dend_17 { pt3dadd( -45.5709, 101.135, -45.1384, 0.28 ) }
    dend_17 { pt3dadd( -45.7333, 102.664, -46.3181, 0.83 ) }
    dend_17 { pt3dadd( -46.0329, 104.744, -47.8507, 0.83 ) }
    dend_17 { pt3dadd( -46.4098, 106.842, -49.271, 0.28 ) }
    dend_17 { pt3dadd( -46.8882, 108.47, -50.3347, 0.83 ) }
    dend_17 { pt3dadd( -47.4853, 110.124, -51.2869, 0.28 ) }
    dend_17 { pt3dadd( -47.9514, 111.324, -51.8531, 0.55 ) }
    dend_17 { pt3dadd( -48.3704, 112.202, -52.2402, 0.28 ) }
    dend_17 { pt3dadd( -49.3579, 114.038, -52.8837, 0.55 ) }
    dend_17 { pt3dadd( -51.2506, 117.504, -53.7129, 0.28 ) }
    dend_17 { pt3dadd( -52.0274, 118.75, -53.9361, 0.55 ) }
    dend_17 { pt3dadd( -52.9356, 120.107, -54.0991, 0.28 ) }
    dend_17 { pt3dadd( -53.9694, 121.576, -54.1994, 0.83 ) }
    dend_17 { pt3dadd( -55.3395, 123.476, -54.1951, 0.28 ) }
    dend_17 { pt3dadd( -56.6709, 125.345, -54.0657, 0.83 ) }
    dend_17 { pt3dadd( -58.5968, 128.15, -53.6835, 0.28 ) }
    dend_17 { pt3dadd( -59.3668, 129.26, -53.5724, 0.83 ) }
    dend_17 { pt3dadd( -60.2509, 130.572, -53.473, 0.28 ) }
    dend_17 { pt3dadd( -61.3851, 132.373, -53.4122, 0.28 ) }
    dend_17 { pt3dadd( -61.8947, 133.231, -53.4849, 0.55 ) }
    dend_17 { pt3dadd( -63.0378, 135.384, -53.9155, 0.28 ) }
    dend_17 { pt3dadd( -63.9797, 137.232, -54.6453, 0.55 ) }
    dend_17 { pt3dadd( -64.5205, 138.278, -55.2074, 0.55 ) }
    dend_17 { pt3dadd( -65.3169, 139.824, -56.1755, 0.83 ) }
    dend_17 { pt3dadd( -66.9063, 142.617, -58.2415, 0.28 ) }
    dend_17 { pt3dadd( -68.1143, 144.627, -59.888, 0.83 ) }
    dend_17 { pt3dadd( -69.931, 147.374, -62.4766, 0.28 ) }
    dend_17 { pt3dadd( -70.6507, 148.367, -63.4896, 0.28 ) }
    dend_17 { pt3dadd( -71.6403, 149.742, -64.9514, 0.83 ) }
    dend_17 { pt3dadd( -73.5148, 152.316, -67.8254, 0.28 ) }
    dend_17 { pt3dadd( -74.1962, 153.275, -68.8533, 0.83 ) }
    dend_17 { pt3dadd( -76.5734, 156.828, -72.5182, 0.28 ) }
    dend_17 { pt3dadd( -77.7193, 158.562, -74.2682, 1.11 ) }
    dend_17 { pt3dadd( -79.9587, 161.962, -77.7704, 0.28 ) }
    dend_17 { pt3dadd( -80.8581, 163.388, -79.2849, 0.55 ) }
    dend_17 { pt3dadd( -81.5991, 164.733, -80.616, 0.28 ) }
    dend_17 { pt3dadd( -82.1621, 165.845, -81.6346, 0.55 ) }
    dend_17 { pt3dadd( -83.4507, 168.8, -84.1558, 0.28 ) }
    dend_17 { pt3dadd( -84.0173, 169.967, -85.2472, 0.55 ) }
    dend_17 { pt3dadd( -84.938, 171.744, -86.9644, 0.28 ) }
    dend_17 { pt3dadd( -85.5527, 172.881, -88.1851, 0.55 ) }
    dend_17 { pt3dadd( -86.276, 174.228, -89.7507, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -87.3113, 176.208, -92.1293, 0.55 ) }
    dend_17 { pt3dadd( -89.0397, 179.89, -96.3398, 0.28 ) }
    dend_17 { pt3dadd( -89.7595, 181.397, -98.1483, 0.55 ) }
    dend_17 { pt3dadd( -90.7557, 183.541, -100.757, 0.28 ) }
    dend_17 { pt3dadd( -91.287, 184.715, -102.286, 0.83 ) }
    dend_17 { pt3dadd( -91.9131, 186.308, -104.363, 0.28 ) }
    dend_17 { pt3dadd( -92.3358, 187.439, -105.899, 0.83 ) }
    dend_17 { pt3dadd( -93.0002, 189.388, -108.542, 0.28 ) }
    dend_17 { pt3dadd( -93.3477, 190.25, -109.826, 0.55 ) }
    dend_17 { pt3dadd( -93.8338, 191.445, -111.702, 0.28 ) }
    dend_17 { pt3dadd( -94.2372, 192.432, -113.37, 0.55 ) }
    dend_17 { pt3dadd( -95.3673, 195.333, -118.039, 0.28 ) }
    dend_17 { pt3dadd( -95.7603, 196.354, -119.583, 0.28 ) }
    dend_17 { pt3dadd( -96.6552, 198.702, -122.564, 0.55 ) }
    dend_17 { pt3dadd( -97.3805, 200.711, -124.803, 0.28 ) }
    dend_17 { pt3dadd( -97.7758, 201.833, -125.849, 0.55 ) }
    dend_17 { pt3dadd( -98.8781, 204.913, -128.141, 0.28 ) }
    dend_17 { pt3dadd( -99.5987, 206.752, -129.042, 0.83 ) }
    dend_17 { pt3dadd( -100.84, 209.476, -129.957, 0.28 ) }
    dend_17 { pt3dadd( -101.331, 210.332, -130.107, 0.55 ) }
    dend_17 { pt3dadd( -102.25, 211.627, -130.21, 0.28 ) }
    dend_17 { pt3dadd( -103.266, 212.827, -130.281, 0.55 ) }
    dend_17 { pt3dadd( -105.678, 215.254, -130.313, 0.28 ) }
    dend_17 { pt3dadd( -106.234, 215.789, -130.285, 0.55 ) }
    dend_17 { pt3dadd( -109.794, 219.133, -130.19, 0.28 ) }
    dend_17 { pt3dadd( -110.676, 220.041, -130.212, 0.55 ) }
    dend_17 { pt3dadd( -111.834, 221.428, -130.284, 0.28 ) }
    dend_17 { pt3dadd( -112.969, 222.886, -130.397, 0.55 ) }
    dend_17 { pt3dadd( -114.703, 225.44, -130.662, 0.28 ) }
    dend_17 { pt3dadd( -115.704, 227.088, -130.827, 0.55 ) }
    dend_17 { pt3dadd( -117.395, 230.972, -130.995, 0.28 ) }
    dend_17 { pt3dadd( -117.967, 232.541, -131.101, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.84276, 76.834, -10.8701, 0.55 ) }
    dend_15 { pt3dadd( -6.95147, 78.6942, -11.1624, 0.55 ) }
    dend_15 { pt3dadd( -4.03735, 81.8035, -13.0671, 0.55 ) }
    dend_15 { pt3dadd( -2.8273, 83.148, -14.2189, 0.83 ) }
    dend_15 { pt3dadd( -1.82884, 84.2651, -15.2735, 0.83 ) }
    dend_15 { pt3dadd( 0.960079, 87.4423, -18.4288, 0.28 ) }
    dend_15 { pt3dadd( 1.98731, 88.633, -19.592, 0.83 ) }
    dend_15 { pt3dadd( 5.63502, 93.1324, -25.0529, 0.55 ) }
    dend_15 { pt3dadd( 6.38172, 94.1465, -26.5238, 0.28 ) }
    dend_15 { pt3dadd( 6.70467, 94.6214, -27.2958, 0.28 ) }
    dend_15 { pt3dadd( 7.17844, 95.4078, -28.6899, 0.55 ) }
    dend_15 { pt3dadd( 7.65665, 96.3381, -30.3528, 0.55 ) }
    dend_15 { pt3dadd( 9.09695, 99.5546, -35.8316, 0.28 ) }
    dend_15 { pt3dadd( 9.71752, 101.067, -38.1801, 0.83 ) }
    dend_15 { pt3dadd( 11.0434, 104.368, -43.0559, 0.83 ) }
    dend_15 { pt3dadd( 12.2062, 107.275, -47.1923, 0.83 ) }
    dend_15 { pt3dadd( 13.7265, 110.998, -52.3534, 0.28 ) }
    dend_15 { pt3dadd( 14.2685, 112.295, -54.0774, 0.28 ) }
    dend_15 { pt3dadd( 14.5803, 113.008, -54.8959, 0.55 ) }
    dend_15 { pt3dadd( 16.1243, 116.179, -58.0863, 0.28 ) }
    dend_15 { pt3dadd( 16.3786, 116.655, -58.4961, 0.55 ) }
    dend_15 { pt3dadd( 18.3048, 119.76, -60.9604, 0.28 ) }
    dend_15 { pt3dadd( 19.1232, 120.845, -62.0407, 0.55 ) }
    dend_15 { pt3dadd( 19.9739, 121.833, -63.1851, 0.28 ) }
    dend_15 { pt3dadd( 20.3176, 122.206, -63.646, 0.55 ) }
    dend_15 { pt3dadd( 22.84, 124.65, -66.8697, 0.28 ) }
    dend_15 { pt3dadd( 23.634, 125.363, -67.8138, 0.55 ) }
    dend_15 { pt3dadd( 28.0566, 128.938, -72.7587, 0.28 ) }
    dend_15 { pt3dadd( 29.3354, 129.951, -74.1394, 0.28 ) }
    dend_15 { pt3dadd( 30.6655, 130.999, -75.4938, 0.55 ) }
    dend_15 { pt3dadd( 33.4991, 133.226, -78.401, 0.28 ) }
    dend_15 { pt3dadd( 34.3976, 133.922, -79.2627, 0.55 ) }
    dend_15 { pt3dadd( 38.0766, 136.728, -82.6937, 0.28 ) }
    dend_15 { pt3dadd( 39.9313, 138.103, -84.3148, 0.28 ) }
    dend_15 { pt3dadd( 41.5797, 139.312, -85.7834, 0.83 ) }
    dend_15 { pt3dadd( 47.4219, 143.428, -90.7342, 0.28 ) }
    dend_15 { pt3dadd( 48.9606, 144.474, -91.9632, 0.28 ) }
    dend_15 { pt3dadd( 51.1089, 145.89, -93.5588, 0.55 ) }
    dend_15 { pt3dadd( 52.9613, 147.087, -94.7857, 0.28 ) }
    dend_15 { pt3dadd( 54.3022, 147.88, -95.6782, 0.55 ) }
    dend_15 { pt3dadd( 55.6016, 148.619, -96.4596, 0.28 ) }
    dend_15 { pt3dadd( 56.3608, 149.057, -96.6895, 0.55 ) }
    dend_15 { pt3dadd( 58.1441, 150.153, -97.2384, 0.28 ) }
    dend_15 { pt3dadd( 60.5773, 151.91, -97.6704, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -8.84276, 76.834, -10.8701, 0.55 ) }
    dend_14 { pt3dadd( -9.88845, 80.356, -9.54423, 0.55 ) }
    dend_14 { pt3dadd( -10.4194, 82.7116, -8.50264, 0.55 ) }
    dend_14 { pt3dadd( -10.6414, 83.7118, -8.05187, 0.55 ) }
    dend_14 { pt3dadd( -10.9783, 85.3117, -7.34276, 0.55 ) }
    dend_14 { pt3dadd( -11.2565, 86.6653, -6.80834, 0.55 ) }
    dend_14 { pt3dadd( -11.9049, 89.9207, -5.52863, 0.28 ) }
    dend_14 { pt3dadd( -12.1167, 91.0684, -5.06511, 0.55 ) }
    dend_14 { pt3dadd( -12.3524, 92.6724, -4.29024, 0.55 ) }
    dend_14 { pt3dadd( -12.4952, 93.4417, -3.85802, 0.83 ) }
    dend_14 { pt3dadd( -12.9216, 95.1722, -2.79818, 0.28 ) }
    dend_14 { pt3dadd( -13.3075, 96.626, -1.91698, 0.83 ) }
    dend_14 { pt3dadd( -14.0853, 99.2676, -0.311087, 0.28 ) }
    dend_14 { pt3dadd( -14.1735, 99.5686, -0.0878636, 0.83 ) }
    dend_14 { pt3dadd( -14.7452, 101.862, 1.84806, 0.55 ) }
    dend_14 { pt3dadd( -14.9777, 102.899, 2.8146, 0.55 ) }
    dend_14 { pt3dadd( -15.2785, 104.424, 4.28736, 0.83 ) }
    dend_14 { pt3dadd( -15.7606, 107.201, 7.02838, 0.55 ) }
    dend_14 { pt3dadd( -16.0741, 109.334, 9.15725, 0.83 ) }
    dend_14 { pt3dadd( -16.2048, 110.415, 10.2624, 0.28 ) }
    dend_14 { pt3dadd( -16.2814, 111.373, 11.1819, 0.83 ) }
    dend_14 { pt3dadd( -16.402, 112.796, 12.5352, 0.83 ) }
    dend_14 { pt3dadd( -16.6951, 115.298, 14.8151, 0.83 ) }
    dend_14 { pt3dadd( -16.9834, 117.415, 16.3758, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -17.1126, 118.141, 16.8557, 0.83 ) }
    dend_14 { pt3dadd( -17.5562, 120.33, 18.3416, 0.83 ) }
    dend_14 { pt3dadd( -17.9735, 122.245, 19.6662, 0.28 ) }
    dend_14 { pt3dadd( -18.197, 123.239, 20.3915, 0.55 ) }
    dend_14 { pt3dadd( -18.6667, 125.218, 21.7469, 0.28 ) }
    dend_14 { pt3dadd( -19.2663, 127.25, 23.2144, 0.55 ) }
    dend_14 { pt3dadd( -20.1403, 129.894, 25.2621, 0.28 ) }
    dend_14 { pt3dadd( -20.3599, 130.484, 25.7591, 0.83 ) }
    dend_14 { pt3dadd( -20.8079, 131.678, 26.7449, 0.28 ) }
    dend_14 { pt3dadd( -21.3527, 133.105, 27.9842, 0.55 ) }
    dend_14 { pt3dadd( -22.1076, 135.174, 29.9899, 0.28 ) }
    dend_14 { pt3dadd( -22.2377, 135.574, 30.3565, 0.55 ) }
    dend_14 { pt3dadd( -22.5045, 136.436, 31.1851, 0.28 ) }
    dend_14 { pt3dadd( -22.7431, 137.334, 32.1587, 0.83 ) }
    dend_14 { pt3dadd( -22.9594, 138.514, 33.5121, 0.28 ) }
    dend_14 { pt3dadd( -23.1195, 139.978, 35.2966, 0.55 ) }
    dend_14 { pt3dadd( -23.2016, 140.964, 36.6458, 0.28 ) }
    dend_14 { pt3dadd( -23.2535, 141.58, 37.45, 0.83 ) }
    dend_14 { pt3dadd( -23.3242, 142.895, 39.0708, 0.83 ) }
    dend_14 { pt3dadd( -23.3769, 144.233, 40.5958, 0.55 ) }
    dend_14 { pt3dadd( -23.3762, 144.973, 41.3462, 0.83 ) }
    dend_14 { pt3dadd( -23.3328, 149.162, 45.1493, 0.55 ) }
    dend_14 { pt3dadd( -23.3033, 150.758, 46.4163, 0.83 ) }
    dend_14 { pt3dadd( -23.1186, 156.067, 49.9456, 0.28 ) }
    dend_14 { pt3dadd( -23.0778, 157.218, 50.4435, 0.55 ) }
    dend_14 { pt3dadd( -22.9467, 159.542, 51.0056, 0.28 ) }
    dend_14 { pt3dadd( -22.8385, 160.946, 51.1863, 0.83 ) }
    dend_14 { pt3dadd( -22.5635, 163.869, 51.027, 0.28 ) }
    dend_14 { pt3dadd( -22.4162, 165.643, 50.7358, 0.55 ) }
    dend_14 { pt3dadd( -22.0423, 170.65, 48.8097, 0.28 ) }
    dend_14 { pt3dadd( -21.9181, 172.854, 47.8656, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.494, 299.975, 12.6177, 0.55 ) }
    dend_10 { pt3dadd( -16.4818, 302.886, 12.5529, 0.55 ) }
    dend_10 { pt3dadd( -16.6252, 306.349, 12.4773, 0.55 ) }
    dend_10 { pt3dadd( -16.7955, 309.675, 12.4108, 0.83 ) }
    dend_10 { pt3dadd( -16.9292, 311.974, 12.3876, 0.55 ) }
    dend_10 { pt3dadd( -17.0888, 314.83, 12.3965, 1.11 ) }
    dend_10 { pt3dadd( -17.2674, 319.212, 12.4433, 0.55 ) }
    dend_10 { pt3dadd( -17.3407, 322.319, 12.5071, 1.11 ) }
    dend_10 { pt3dadd( -17.3338, 324.673, 12.4948, 0.83 ) }
    dend_10 { pt3dadd( -17.174, 326.899, 12.4278, 0.55 ) }
    dend_10 { pt3dadd( -16.6748, 329.826, 12.2683, 0.55 ) }
    dend_10 { pt3dadd( -15.95, 332.365, 12.0316, 0.83 ) }
    dend_10 { pt3dadd( -14.7927, 335.03, 11.5688, 0.55 ) }
    dend_10 { pt3dadd( -13.3178, 337.671, 10.887, 0.83 ) }
    dend_10 { pt3dadd( -11.9839, 339.678, 10.2419, 0.83 ) }
    dend_10 { pt3dadd( -10.7165, 341.331, 9.60465, 0.83 ) }
    dend_10 { pt3dadd( -9.60069, 342.653, 9.0578, 1.11 ) }
    dend_10 { pt3dadd( -7.2126, 345.422, 7.80262, 0.83 ) }
    dend_10 { pt3dadd( -6.19336, 346.621, 7.26085, 0.55 ) }
    dend_10 { pt3dadd( -4.55749, 348.551, 6.46456, 0.83 ) }
    dend_10 { pt3dadd( -2.19651, 351.532, 5.29962, 0.55 ) }
    dend_10 { pt3dadd( -0.697584, 353.393, 4.58044, 1.11 ) }
    dend_10 { pt3dadd( 1.5705, 356.219, 3.55796, 0.55 ) }
    dend_10 { pt3dadd( 2.35844, 357.221, 3.25313, 0.55 ) }
    dend_10 { pt3dadd( 3.42612, 358.629, 2.84885, 0.55 ) }
    dend_10 { pt3dadd( 5.78855, 362.018, 2.04095, 0.55 ) }
    dend_10 { pt3dadd( 6.68488, 363.431, 1.80785, 0.28 ) }
    dend_10 { pt3dadd( 7.22527, 364.398, 1.70695, 0.55 ) }
    dend_10 { pt3dadd( 8.16208, 366.26, 1.64277, 0.28 ) }
    dend_10 { pt3dadd( 8.89683, 367.905, 1.5913, 0.83 ) }
    dend_10 { pt3dadd( 10.1343, 371.008, 1.51077, 0.55 ) }
    dend_10 { pt3dadd( 10.5311, 372.047, 1.50881, 0.83 ) }
    dend_10 { pt3dadd( 11.3265, 374.282, 1.48185, 0.55 ) }
    dend_10 { pt3dadd( 11.8318, 375.729, 1.43462, 0.83 ) }
    dend_10 { pt3dadd( 13.3441, 380.134, 1.22379, 0.28 ) }
    dend_10 { pt3dadd( 14.3443, 383.049, 1.022, 0.83 ) }
    dend_10 { pt3dadd( 15.3798, 386.062, 0.765936, 0.28 ) }
    dend_10 { pt3dadd( 16.274, 388.718, 0.517599, 0.55 ) }
    dend_10 { pt3dadd( 17.1769, 391.522, 0.242183, 0.55 ) }
    dend_10 { pt3dadd( 17.8857, 394.062, -0.0648852, 0.55 ) }
    dend_10 { pt3dadd( 18.2, 395.47, -0.263026, 0.28 ) }
    dend_10 { pt3dadd( 18.44, 396.828, -0.466866, 0.55 ) }
    dend_10 { pt3dadd( 18.7559, 399.454, -0.846247, 0.28 ) }
    dend_10 { pt3dadd( 18.8658, 401.002, -1.13675, 0.55 ) }
    dend_10 { pt3dadd( 18.9449, 403.815, -1.78822, 0.28 ) }
    dend_10 { pt3dadd( 18.9566, 405.728, -2.26826, 0.28 ) }
    dend_10 { pt3dadd( 18.9451, 408.401, -2.96658, 0.83 ) }
    dend_10 { pt3dadd( 18.9017, 410.797, -3.62715, 0.83 ) }
    dend_10 { pt3dadd( 18.8159, 415.369, -4.887, 0.55 ) }
    dend_10 { pt3dadd( 18.8176, 417.936, -5.54979, 0.55 ) }
    dend_10 { pt3dadd( 18.8931, 419.603, -5.91353, 0.55 ) }
    dend_10 { pt3dadd( 18.9852, 420.554, -6.13793, 0.28 ) }
    dend_10 { pt3dadd( 19.1692, 421.896, -6.45333, 0.55 ) }
    dend_10 { pt3dadd( 19.3862, 423.039, -6.68016, 0.28 ) }
    dend_10 { pt3dadd( 19.5866, 424.111, -6.90238, 1.11 ) }
    dend_10 { pt3dadd( 20.0258, 427.343, -7.85159, 0.55 ) }
    dend_10 { pt3dadd( 20.186, 429.693, -8.63134, 0.55 ) }
    dend_10 { pt3dadd( 20.2083, 431.753, -9.42401, 0.28 ) }
    dend_10 { pt3dadd( 20.1506, 432.916, -9.95877, 0.83 ) }
    dend_10 { pt3dadd( 19.8778, 436.259, -11.7352, 0.55 ) }
    dend_10 { pt3dadd( 19.6744, 438.421, -12.97, 0.83 ) }
    dend_10 { pt3dadd( 19.4155, 440.804, -14.4497, 0.83 ) }
    dend_10 { pt3dadd( 19.216, 443.22, -16.0603, 0.55 ) }
    dend_10 { pt3dadd( 19.1231, 445.126, -17.4216, 0.28 ) }
    dend_10 { pt3dadd( 19.0906, 446.989, -18.7696, 0.55 ) }
    dend_10 { pt3dadd( 19.0946, 448.701, -20.0012, 0.55 ) }
    dend_10 { pt3dadd( 19.122, 450.95, -21.6891, 1.11 ) }
    dend_10 { pt3dadd( 19.1847, 453.912, -23.8643, 0.55 ) }
    dend_10 { pt3dadd( 19.213, 455.196, -24.7428, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 19.2122, 456.582, -25.708, 0.55 ) }
    dend_10 { pt3dadd( 19.0524, 459.85, -28.0141, 0.55 ) }
    dend_10 { pt3dadd( 18.9606, 461.499, -29.2119, 0.83 ) }
    dend_10 { pt3dadd( 18.7554, 464.993, -31.586, 0.28 ) }
    dend_10 { pt3dadd( 18.6816, 466.04, -32.2583, 0.55 ) }
    dend_10 { pt3dadd( 18.509, 469.028, -34.0745, 0.28 ) }
    dend_10 { pt3dadd( 18.4606, 470.49, -34.9159, 0.55 ) }
    dend_10 { pt3dadd( 18.4579, 472.789, -36.0971, 0.28 ) }
    dend_10 { pt3dadd( 18.4158, 475.086, -37.1464, 0.55 ) }
    dend_10 { pt3dadd( 18.3952, 476.279, -37.6292, 0.28 ) }
    dend_10 { pt3dadd( 18.3835, 478.24, -38.3215, 0.55 ) }
    dend_10 { pt3dadd( 18.4782, 481.51, -39.2018, 0.55 ) }
    dend_10 { pt3dadd( 18.5515, 483.201, -39.6799, 0.28 ) }
    dend_10 { pt3dadd( 18.5355, 484.688, -40.1176, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.494, 299.975, 12.6177, 0.55 ) }
    dend_7 { pt3dadd( -18.146, 301.357, 12.2314, 0.55 ) }
    dend_7 { pt3dadd( -20.0884, 303.085, 11.8786, 1.11 ) }
    dend_7 { pt3dadd( -22.2336, 304.882, 11.6005, 0.55 ) }
    dend_7 { pt3dadd( -22.9373, 305.479, 11.4733, 0.83 ) }
    dend_7 { pt3dadd( -24.6163, 306.935, 11.1407, 0.55 ) }
    dend_7 { pt3dadd( -26.0077, 308.091, 10.8728, 0.55 ) }
    dend_7 { pt3dadd( -27.0906, 308.973, 10.6628, 0.83 ) }
    dend_7 { pt3dadd( -30.3015, 311.517, 10.0464, 0.55 ) }
    dend_7 { pt3dadd( -32.6875, 313.362, 9.68149, 0.55 ) }
    dend_7 { pt3dadd( -33.5303, 314.009, 9.52804, 0.83 ) }
    dend_7 { pt3dadd( -35.8382, 315.739, 9.0847, 0.55 ) }
    dend_7 { pt3dadd( -36.2114, 316.014, 9.00604, 0.83 ) }
    dend_7 { pt3dadd( -37.4361, 316.95, 8.78921, 0.28 ) }
    dend_7 { pt3dadd( -37.6318, 317.115, 8.77702, 0.55 ) }
    dend_7 { pt3dadd( -38.8089, 318.105, 8.8949, 0.28 ) }
    dend_7 { pt3dadd( -39.5379, 318.767, 9.01483, 0.55 ) }
    dend_7 { pt3dadd( -40.3711, 319.491, 9.13507, 0.55 ) }
    dend_7 { pt3dadd( -42.6446, 321.357, 9.41551, 0.55 ) }
    dend_7 { pt3dadd( -44.2001, 322.634, 9.57509, 0.55 ) }
    dend_7 { pt3dadd( -45.4134, 323.666, 9.59649, 0.83 ) }
    dend_7 { pt3dadd( -47.0718, 325.129, 9.53494, 0.83 ) }
    dend_7 { pt3dadd( -49.197, 327.139, 9.17987, 0.55 ) }
    dend_7 { pt3dadd( -50.7421, 328.671, 8.76152, 0.55 ) }
    dend_7 { pt3dadd( -52.3963, 330.402, 8.14704, 1.11 ) }
    dend_7 { pt3dadd( -54.1954, 332.552, 7.32816, 0.55 ) }
    dend_7 { pt3dadd( -54.6673, 333.182, 7.07345, 0.83 ) }
    dend_7 { pt3dadd( -56.085, 335.358, 6.28196, 0.28 ) }
    dend_7 { pt3dadd( -56.7656, 336.551, 5.6556, 0.55 ) }
    dend_7 { pt3dadd( -57.2082, 337.361, 5.11622, 0.28 ) }
    dend_7 { pt3dadd( -57.6122, 338.16, 4.53773, 0.83 ) }
    dend_7 { pt3dadd( -58.3957, 339.883, 3.23491, 0.28 ) }
    dend_7 { pt3dadd( -59.0653, 341.452, 2.01089, 0.83 ) }
    dend_7 { pt3dadd( -61.411, 347.585, -2.77856, 0.55 ) }
    dend_7 { pt3dadd( -61.8281, 348.772, -3.71667, 0.55 ) }
    dend_7 { pt3dadd( -62.1719, 349.853, -4.56267, 0.83 ) }
    dend_7 { pt3dadd( -62.5738, 351.238, -5.58727, 0.28 ) }
    dend_7 { pt3dadd( -62.7326, 351.919, -6.01795, 0.55 ) }
    dend_7 { pt3dadd( -62.9436, 352.94, -6.52228, 0.28 ) }
    dend_7 { pt3dadd( -63.1625, 354.329, -6.80352, 0.55 ) }
    dend_7 { pt3dadd( -63.516, 356.286, -7.22761, 0.55 ) }
    dend_7 { pt3dadd( -63.7307, 357.401, -7.46452, 0.55 ) }
    dend_7 { pt3dadd( -63.9664, 358.647, -7.70613, 0.83 ) }
    dend_7 { pt3dadd( -64.3174, 360.639, -8.10062, 0.28 ) }
    dend_7 { pt3dadd( -64.6019, 362.313, -8.41363, 0.83 ) }
    dend_7 { pt3dadd( -64.8763, 364.382, -8.75937, 0.55 ) }
    dend_7 { pt3dadd( -64.9787, 365.208, -8.87219, 0.55 ) }
    dend_7 { pt3dadd( -65.1326, 366.779, -9.02113, 0.83 ) }
    dend_7 { pt3dadd( -65.2166, 367.605, -9.05397, 0.55 ) }
    dend_7 { pt3dadd( -65.3611, 369.156, -8.9716, 0.83 ) }
    dend_7 { pt3dadd( -65.5882, 370.575, -8.85797, 0.28 ) }
    dend_7 { pt3dadd( -65.726, 371.16, -8.85676, 0.28 ) }
    dend_7 { pt3dadd( -66.2242, 372.724, -8.98272, 0.28 ) }
    dend_7 { pt3dadd( -66.4677, 373.398, -9.09716, 0.83 ) }
    dend_7 { pt3dadd( -67.1078, 374.967, -9.53526, 0.55 ) }
    dend_7 { pt3dadd( -67.9099, 376.698, -10.3819, 0.83 ) }
    dend_7 { pt3dadd( -69.1792, 379.046, -11.8749, 0.28 ) }
    dend_7 { pt3dadd( -69.6391, 379.768, -12.4689, 0.55 ) }
    dend_7 { pt3dadd( -70.1976, 380.474, -13.2245, 0.28 ) }
    dend_7 { pt3dadd( -70.6646, 380.971, -13.7953, 0.83 ) }
    dend_7 { pt3dadd( -72.4861, 382.785, -15.9279, 0.83 ) }
    dend_7 { pt3dadd( -73.0909, 383.365, -16.5926, 0.83 ) }
    dend_7 { pt3dadd( -75.0125, 385.157, -18.4809, 0.83 ) }
    dend_7 { pt3dadd( -77.2585, 387.218, -20.5613, 0.55 ) }
    dend_7 { pt3dadd( -78.6275, 388.432, -21.7721, 0.55 ) }
    dend_7 { pt3dadd( -79.8562, 389.531, -22.8192, 0.55 ) }
    dend_7 { pt3dadd( -81.188, 390.744, -23.8871, 0.55 ) }
    dend_7 { pt3dadd( -83.095, 392.648, -25.442, 0.55 ) }
    dend_7 { pt3dadd( -84.5733, 394.236, -26.5376, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 48.4405, -31.2963, -58.6454, 0.55 ) }
    dend_45 { pt3dadd( 49.0196, -30.687, -59.6169, 0.55 ) }
    dend_45 { pt3dadd( 49.5876, -30.0245, -60.6089, 0.83 ) }
    dend_45 { pt3dadd( 50.7297, -28.6325, -62.6325, 0.28 ) }
    dend_45 { pt3dadd( 51.303, -27.9024, -63.6392, 0.83 ) }
    dend_45 { pt3dadd( 52.6873, -26.1045, -65.9956, 0.28 ) }
    dend_45 { pt3dadd( 53.1623, -25.4811, -66.7733, 0.55 ) }
    dend_45 { pt3dadd( 54.1968, -24.0393, -68.5757, 0.55 ) }
    dend_45 { pt3dadd( 55.2525, -22.4497, -70.3816, 0.55 ) }
    dend_45 { pt3dadd( 56.1534, -21.0717, -71.8455, 0.28 ) }
    dend_45 { pt3dadd( 56.5224, -20.4998, -72.42, 0.28 ) }
    dend_45 { pt3dadd( 56.8954, -19.9198, -72.974, 0.55 ) }
    dend_45 { pt3dadd( 57.7139, -18.7042, -74.1128, 0.28 ) }
    dend_45 { pt3dadd( 58.8464, -17.0508, -75.4847, 0.55 ) }
    dend_45 { pt3dadd( 60.1464, -15.0321, -77.2054, 0.28 ) }
    dend_45 { pt3dadd( 60.4834, -14.5109, -77.6664, 0.55 ) }
    dend_45 { pt3dadd( 61.8164, -12.3121, -79.5829, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 62.6665, -10.8522, -80.8552, 0.28 ) }
    dend_45 { pt3dadd( 63.6262, -9.16689, -82.3723, 0.83 ) }
    dend_45 { pt3dadd( 65.0777, -6.44089, -84.9223, 0.55 ) }
    dend_45 { pt3dadd( 65.4241, -5.7771, -85.5619, 0.55 ) }
    dend_45 { pt3dadd( 66.1192, -4.45949, -86.9601, 0.55 ) }
    dend_45 { pt3dadd( 66.836, -3.1845, -88.4324, 0.83 ) }
    dend_45 { pt3dadd( 67.9308, -1.38297, -90.6208, 0.28 ) }
    dend_45 { pt3dadd( 68.2865, -0.868072, -91.2438, 0.55 ) }
    dend_45 { pt3dadd( 69.3011, 0.40297, -92.5895, 0.28 ) }
    dend_45 { pt3dadd( 69.4937, 0.62527, -92.8239, 0.55 ) }
    dend_45 { pt3dadd( 70.4478, 1.55708, -93.7865, 0.55 ) }
    dend_45 { pt3dadd( 71.9106, 2.88668, -94.9779, 0.28 ) }
    dend_45 { pt3dadd( 72.4556, 3.36944, -95.3468, 0.55 ) }
    dend_45 { pt3dadd( 73.7966, 4.4942, -96.1829, 0.28 ) }
    dend_45 { pt3dadd( 74.3522, 4.94734, -96.4917, 0.55 ) }
    dend_45 { pt3dadd( 75.5695, 5.85062, -97.136, 0.28 ) }
    dend_45 { pt3dadd( 76.3638, 6.33239, -97.545, 0.55 ) }
    dend_45 { pt3dadd( 76.8145, 6.56131, -97.748, 0.55 ) }
    dend_45 { pt3dadd( 78.0762, 7.22533, -98.2503, 0.28 ) }
    dend_45 { pt3dadd( 78.9138, 7.69336, -98.5287, 0.28 ) }
    dend_45 { pt3dadd( 79.724, 8.21682, -98.809, 0.55 ) }
    dend_45 { pt3dadd( 81.6519, 9.64171, -99.4777, 0.28 ) }
    dend_45 { pt3dadd( 82.9586, 10.7802, -99.9397, 0.55 ) }
    dend_45 { pt3dadd( 84.1465, 11.9804, -100.336, 0.55 ) }
    dend_45 { pt3dadd( 85.1945, 13.2362, -100.663, 0.83 ) }
    dend_45 { pt3dadd( 86.6781, 15.3159, -101.073, 0.28 ) }
    dend_45 { pt3dadd( 87.1929, 16.1793, -101.202, 0.28 ) }
    dend_45 { pt3dadd( 88.0155, 17.9055, -101.354, 0.55 ) }
    dend_45 { pt3dadd( 88.769, 19.7609, -101.45, 0.28 ) }
    dend_45 { pt3dadd( 89.0795, 20.6047, -101.464, 0.55 ) }
    dend_45 { pt3dadd( 89.5394, 21.9755, -101.414, 0.55 ) }
    dend_45 { pt3dadd( 90.1875, 24.019, -101.232, 0.28 ) }
    dend_45 { pt3dadd( 90.5676, 25.2615, -101.115, 0.55 ) }
    dend_45 { pt3dadd( 91.121, 27.1883, -100.934, 0.28 ) }
    dend_45 { pt3dadd( 91.7104, 29.3741, -100.758, 0.55 ) }
    dend_45 { pt3dadd( 92.2977, 31.6348, -100.597, 0.55 ) }
    dend_45 { pt3dadd( 92.543, 32.6493, -100.533, 0.55 ) }
    dend_45 { pt3dadd( 92.9897, 34.6879, -100.454, 0.55 ) }
    dend_45 { pt3dadd( 93.3945, 36.5743, -100.457, 0.55 ) }
    dend_45 { pt3dadd( 93.7688, 38.5125, -100.518, 0.55 ) }
    dend_45 { pt3dadd( 94.1049, 40.3553, -100.6, 0.28 ) }
    dend_45 { pt3dadd( 94.282, 41.3206, -100.682, 0.55 ) }
    dend_45 { pt3dadd( 94.8423, 44.358, -100.98, 0.28 ) }
    dend_45 { pt3dadd( 95.1799, 46.3895, -101.247, 0.28 ) }
    dend_45 { pt3dadd( 95.326, 47.4088, -101.406, 0.55 ) }
    dend_45 { pt3dadd( 95.5851, 49.2122, -101.713, 0.28 ) }
    dend_45 { pt3dadd( 95.8112, 50.8358, -102.005, 0.55 ) }
    dend_45 { pt3dadd( 95.9758, 52.0786, -102.22, 0.55 ) }
    dend_45 { pt3dadd( 96.3672, 55.5783, -102.785, 0.28 ) }
    dend_45 { pt3dadd( 96.5527, 57.7473, -103.122, 0.28 ) }
    dend_45 { pt3dadd( 96.6105, 58.6304, -103.251, 0.55 ) }
    dend_45 { pt3dadd( 96.6947, 60.4113, -103.487, 0.55 ) }
    dend_45 { pt3dadd( 96.7917, 62.827, -103.719, 0.28 ) }
    dend_45 { pt3dadd( 96.8584, 64.6973, -103.868, 0.55 ) }
    dend_45 { pt3dadd( 96.9099, 66.4256, -103.944, 0.28 ) }
    dend_45 { pt3dadd( 96.9019, 67.9075, -103.994, 0.55 ) }
    dend_45 { pt3dadd( 96.8858, 68.799, -104.004, 0.28 ) }
    dend_45 { pt3dadd( 96.8799, 69.4072, -103.956, 0.55 ) }
    dend_45 { pt3dadd( 96.8629, 71.1753, -103.685, 0.28 ) }
    dend_45 { pt3dadd( 96.8757, 72.0458, -103.49, 0.55 ) }
    dend_45 { pt3dadd( 96.9899, 74.9363, -102.727, 0.28 ) }
    dend_45 { pt3dadd( 97.1114, 76.9274, -102.163, 0.55 ) }
    dend_45 { pt3dadd( 97.3065, 79.5684, -101.358, 0.28 ) }
    dend_45 { pt3dadd( 97.4362, 80.9932, -100.908, 0.55 ) }
    dend_45 { pt3dadd( 97.6156, 82.6243, -100.366, 0.28 ) }
    dend_45 { pt3dadd( 97.795, 84.0836, -99.8534, 0.55 ) }
    dend_45 { pt3dadd( 97.9783, 85.4585, -99.3613, 0.28 ) }
    dend_45 { pt3dadd( 98.1046, 86.5183, -98.9901, 0.55 ) }
    dend_45 { pt3dadd( 98.3591, 89.1499, -98.1308, 0.28 ) }
    dend_45 { pt3dadd( 98.4846, 90.4913, -97.6593, 0.55 ) }
    dend_45 { pt3dadd( 98.6255, 92.4134, -96.949, 0.28 ) }
    dend_45 { pt3dadd( 98.6709, 93.1278, -96.6609, 0.55 ) }
    dend_45 { pt3dadd( 98.742, 94.9397, -95.8978, 0.28 ) }
    dend_45 { pt3dadd( 98.767, 96.8455, -95.0954, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 48.4405, -31.2963, -58.6454, 0.28 ) }
    dend_44 { pt3dadd( 52.0382, -31.4627, -59.991, 0.28 ) }
    dend_44 { pt3dadd( 53.111, -31.5035, -60.4528, 0.55 ) }
    dend_44 { pt3dadd( 54.5714, -31.4637, -61.1586, 0.55 ) }
    dend_44 { pt3dadd( 56.8006, -31.3393, -62.2471, 0.28 ) }
    dend_44 { pt3dadd( 58.1231, -31.2651, -62.8651, 0.55 ) }
    dend_44 { pt3dadd( 62.7425, -30.9453, -64.8936, 0.28 ) }
    dend_44 { pt3dadd( 63.9795, -30.7801, -65.3878, 0.55 ) }
    dend_44 { pt3dadd( 66.9048, -30.2524, -66.4588, 0.28 ) }
    dend_44 { pt3dadd( 68.149, -29.9683, -66.8639, 0.28 ) }
    dend_44 { pt3dadd( 70.1799, -29.4334, -67.4017, 0.55 ) }
    dend_44 { pt3dadd( 72.0648, -28.9398, -67.7927, 0.55 ) }
    dend_44 { pt3dadd( 76.6367, -27.8127, -68.3437, 0.28 ) }
    dend_44 { pt3dadd( 78.3533, -27.4834, -68.5211, 0.55 ) }
    dend_44 { pt3dadd( 80.3121, -27.2482, -68.7013, 0.55 ) }
    dend_44 { pt3dadd( 83.9225, -27.0198, -69.0654, 0.28 ) }
    dend_44 { pt3dadd( 86.3036, -27.0408, -69.3214, 0.55 ) }
    dend_44 { pt3dadd( 89.306, -27.3807, -69.5968, 0.28 ) }
    dend_44 { pt3dadd( 90.9245, -27.7609, -69.7151, 0.55 ) }
    dend_44 { pt3dadd( 93.912, -28.732, -69.8966, 0.28 ) }
    dend_44 { pt3dadd( 95.1868, -29.2986, -69.9358, 0.55 ) }
    dend_44 { pt3dadd( 96.5883, -30.0991, -69.9186, 0.55 ) }
    dend_44 { pt3dadd( 98.4017, -31.3992, -69.7253, 0.28 ) }
    dend_44 { pt3dadd( 99.4301, -32.2921, -69.5374, 0.28 ) }
    dend_44 { pt3dadd( 100.521, -33.4942, -69.2442, 0.55 ) }
    dend_44 { pt3dadd( 101.864, -35.3624, -68.7618, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 102.04, -35.6538, -68.685, 0.55 ) }
    dend_44 { pt3dadd( 103.49, -38.4751, -68.0513, 0.28 ) }
    dend_44 { pt3dadd( 103.635, -38.8061, -68.0169, 0.83 ) }
    dend_44 { pt3dadd( 105.485, -43.3098, -67.9208, 0.28 ) }
    dend_44 { pt3dadd( 105.843, -44.1613, -68.0732, 0.55 ) }
    dend_44 { pt3dadd( 106.713, -46.2558, -68.7695, 0.28 ) }
    dend_44 { pt3dadd( 107.251, -47.5522, -69.3417, 0.55 ) }
    dend_44 { pt3dadd( 108.511, -50.4763, -71.0574, 0.28 ) }
    dend_44 { pt3dadd( 108.668, -50.845, -71.2936, 0.55 ) }
    dend_44 { pt3dadd( 110.526, -55.1097, -74.3925, 0.28 ) }
    dend_44 { pt3dadd( 110.765, -55.6981, -74.8052, 0.55 ) }
    dend_44 { pt3dadd( 110.921, -56.056, -75.0579, 0.55 ) }
    dend_44 { pt3dadd( 111.496, -57.3828, -75.8254, 0.28 ) }
    dend_44 { pt3dadd( 111.978, -58.5005, -76.3413, 0.55 ) }
    dend_44 { pt3dadd( 112.844, -60.4413, -77.0534, 0.28 ) }
    dend_44 { pt3dadd( 113.209, -61.2391, -77.3027, 0.55 ) }
    dend_44 { pt3dadd( 115.553, -65.9851, -78.9256, 0.28 ) }
    dend_44 { pt3dadd( 116.054, -66.9495, -79.2672, 0.55 ) }
    dend_44 { pt3dadd( 116.647, -68.0402, -79.7196, 0.28 ) }
    dend_44 { pt3dadd( 118.626, -71.529, -81.301, 0.28 ) }
    dend_44 { pt3dadd( 119.239, -72.6657, -81.7857, 0.55 ) }
    dend_44 { pt3dadd( 120.933, -75.9585, -83.0791, 0.28 ) }
    dend_44 { pt3dadd( 121.056, -76.2422, -83.1672, 0.55 ) }
    dend_44 { pt3dadd( 122.495, -79.9744, -84.2607, 0.28 ) }
    dend_44 { pt3dadd( 123.092, -81.8417, -84.6485, 0.55 ) }
    dend_44 { pt3dadd( 123.748, -84.2773, -84.9043, 0.28 ) }
    dend_44 { pt3dadd( 124.02, -85.3065, -84.8953, 0.55 ) }
    dend_44 { pt3dadd( 124.582, -87.4318, -84.7007, 0.28 ) }
    dend_44 { pt3dadd( 124.849, -88.3645, -84.5871, 0.55 ) }
    dend_44 { pt3dadd( 126.017, -91.9504, -84.3452, 0.28 ) }
    dend_44 { pt3dadd( 127.072, -94.8555, -84.336, 0.28 ) }
    dend_44 { pt3dadd( 127.599, -96.0922, -84.4393, 0.55 ) }
    dend_44 { pt3dadd( 128.995, -99.0775, -84.826, 0.28 ) }
    dend_44 { pt3dadd( 129.464, -99.9756, -84.9687, 0.55 ) }
    dend_44 { pt3dadd( 132.656, -105.869, -86.0065, 0.28 ) }
    dend_44 { pt3dadd( 133.94, -108.066, -86.4768, 0.55 ) }
    dend_44 { pt3dadd( 135.969, -111.26, -87.204, 0.28 ) }
    dend_44 { pt3dadd( 136.38, -111.883, -87.3512, 0.55 ) }
    dend_44 { pt3dadd( 138.456, -114.805, -88.0381, 0.28 ) }
    dend_44 { pt3dadd( 138.757, -115.195, -88.1169, 0.55 ) }
    dend_44 { pt3dadd( 140.031, -116.44, -88.1558, 0.28 ) }
    dend_44 { pt3dadd( 140.929, -117.186, -88.2243, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 41.7349, -49.3676, 11.4028, 0.55 ) }
    dend_41 { pt3dadd( 42.7369, -49.1108, 12.4166, 0.55 ) }
    dend_41 { pt3dadd( 44.7453, -48.5183, 14.4715, 0.55 ) }
    dend_41 { pt3dadd( 48.4145, -47.4141, 18.1532, 0.55 ) }
    dend_41 { pt3dadd( 51.2334, -46.5814, 20.9362, 0.55 ) }
    dend_41 { pt3dadd( 53.7859, -45.8888, 23.4221, 0.28 ) }
    dend_41 { pt3dadd( 55.2013, -45.5264, 24.7735, 0.83 ) }
    dend_41 { pt3dadd( 56.9727, -45.11, 26.4932, 0.55 ) }
    dend_41 { pt3dadd( 58.3109, -44.872, 27.7528, 0.28 ) }
    dend_41 { pt3dadd( 58.9733, -44.7878, 28.2767, 0.55 ) }
    dend_41 { pt3dadd( 60.3842, -44.6356, 29.2924, 0.28 ) }
    dend_41 { pt3dadd( 60.8573, -44.5981, 29.6305, 0.55 ) }
    dend_41 { pt3dadd( 62.9073, -44.6006, 30.9113, 0.28 ) }
    dend_41 { pt3dadd( 64.2234, -44.7885, 31.6434, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 41.7349, -49.3676, 11.4028, 0.28 ) }
    dend_40 { pt3dadd( 48.1611, -52.6249, 5.72155, 0.28 ) }
    dend_40 { pt3dadd( 49.0708, -52.9967, 5.01712, 0.83 ) }
    dend_40 { pt3dadd( 52.2481, -54.0901, 2.75126, 0.28 ) }
    dend_40 { pt3dadd( 53.1823, -54.2906, 2.15741, 0.83 ) }
    dend_40 { pt3dadd( 55.3708, -54.5694, 0.849567, 0.28 ) }
    dend_40 { pt3dadd( 56.2995, -54.6173, 0.324052, 0.83 ) }
    dend_40 { pt3dadd( 59.1, -54.1234, -0.683019, 0.28 ) }
    dend_40 { pt3dadd( 59.6996, -53.8772, -0.925044, 0.83 ) }
    dend_40 { pt3dadd( 62.6774, -52.0177, -2.23559, 0.28 ) }
    dend_40 { pt3dadd( 63.3972, -51.538, -2.56819, 0.28 ) }
    dend_40 { pt3dadd( 64.4138, -50.8246, -3.05557, 0.55 ) }
    dend_40 { pt3dadd( 66.3625, -49.4767, -3.56822, 0.28 ) }
    dend_40 { pt3dadd( 69.411, -47.4084, -3.89404, 0.28 ) }
    dend_40 { pt3dadd( 70.1952, -46.9015, -3.80912, 0.83 ) }
    dend_40 { pt3dadd( 75.8953, -43.4132, -2.27303, 0.28 ) }
    dend_40 { pt3dadd( 76.883, -42.8666, -1.90083, 0.55 ) }
    dend_40 { pt3dadd( 84.0984, -39.1497, 1.79467, 0.28 ) }
    dend_40 { pt3dadd( 84.8736, -38.7659, 2.28468, 0.83 ) }
    dend_40 { pt3dadd( 89.5436, -36.374, 5.84138, 0.28 ) }
    dend_40 { pt3dadd( 90.1639, -36.0156, 6.37809, 0.55 ) }
    dend_40 { pt3dadd( 92.0075, -34.8213, 8.20537, 0.28 ) }
    dend_40 { pt3dadd( 93.7367, -33.6668, 9.89506, 0.55 ) }
    dend_40 { pt3dadd( 95.8904, -32.184, 11.7154, 0.28 ) }
    dend_40 { pt3dadd( 96.7557, -31.557, 12.3894, 0.55 ) }
    dend_40 { pt3dadd( 99.4334, -29.2857, 14.008, 0.28 ) }
    dend_40 { pt3dadd( 100.399, -28.3484, 14.6172, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 37.5498, -60.6592, -0.930496, 0.55 ) }
    dend_38 { pt3dadd( 38.3885, -60.8397, -1.06275, 0.55 ) }
    dend_38 { pt3dadd( 39.7323, -61.1373, -1.28106, 0.55 ) }
    dend_38 { pt3dadd( 40.7089, -61.363, -1.45158, 0.28 ) }
    dend_38 { pt3dadd( 41.4038, -61.5223, -1.56871, 0.55 ) }
    dend_38 { pt3dadd( 42.4835, -61.7675, -1.72749, 0.55 ) }
    dend_38 { pt3dadd( 42.9426, -61.8892, -1.78308, 0.28 ) }
    dend_38 { pt3dadd( 43.2619, -61.9755, -1.83075, 0.55 ) }
    dend_38 { pt3dadd( 43.6184, -62.1009, -1.88243, 0.28 ) }
    dend_38 { pt3dadd( 44.1455, -62.3235, -1.96466, 0.55 ) }
    dend_38 { pt3dadd( 44.9111, -62.6909, -2.05172, 0.55 ) }
    dend_38 { pt3dadd( 46.0019, -63.2348, -2.15659, 0.55 ) }
    dend_38 { pt3dadd( 47.4896, -63.8848, -2.44316, 1.38 ) }
    dend_38 { pt3dadd( 48.4408, -64.2544, -2.68145, 0.83 ) }
    dend_38 { pt3dadd( 49.2526, -64.5282, -2.90984, 0.55 ) }
    dend_38 { pt3dadd( 50.2787, -64.8273, -3.22964, 0.28 ) }
    dend_38 { pt3dadd( 51.5401, -65.1366, -3.65373, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 53.9408, -65.5438, -4.57824, 0.28 ) }
    dend_38 { pt3dadd( 54.2542, -65.5924, -4.7141, 0.28 ) }
    dend_38 { pt3dadd( 55.0526, -65.7122, -5.12474, 0.55 ) }
    dend_38 { pt3dadd( 55.59, -65.7873, -5.42267, 0.55 ) }
    dend_38 { pt3dadd( 56.0812, -65.8616, -5.72357, 0.55 ) }
    dend_38 { pt3dadd( 57.4361, -66.1541, -6.54145, 0.55 ) }
    dend_38 { pt3dadd( 58.743, -66.5311, -7.31258, 0.28 ) }
    dend_38 { pt3dadd( 59.5452, -66.7889, -7.81375, 0.83 ) }
    dend_38 { pt3dadd( 60.0378, -66.9572, -8.13393, 0.83 ) }
    dend_38 { pt3dadd( 61.3351, -67.4074, -8.96612, 0.55 ) }
    dend_38 { pt3dadd( 61.8565, -67.5989, -9.28207, 0.83 ) }
    dend_38 { pt3dadd( 62.558, -67.8847, -9.62687, 0.28 ) }
    dend_38 { pt3dadd( 63.0489, -68.0821, -9.8127, 0.55 ) }
    dend_38 { pt3dadd( 63.3416, -68.2226, -9.90013, 0.28 ) }
    dend_38 { pt3dadd( 63.4813, -68.3038, -9.93256, 0.55 ) }
    dend_38 { pt3dadd( 64.1342, -68.699, -10.0132, 0.28 ) }
    dend_38 { pt3dadd( 64.8656, -69.1334, -10.1494, 0.28 ) }
    dend_38 { pt3dadd( 65.4279, -69.4764, -10.2527, 0.83 ) }
    dend_38 { pt3dadd( 65.9093, -69.8011, -10.3621, 0.55 ) }
    dend_38 { pt3dadd( 67.1187, -70.672, -10.6636, 0.28 ) }
    dend_38 { pt3dadd( 67.4805, -70.9467, -10.7798, 0.83 ) }
    dend_38 { pt3dadd( 68.6398, -71.88, -11.2112, 0.28 ) }
    dend_38 { pt3dadd( 69.0777, -72.2809, -11.4048, 0.83 ) }
    dend_38 { pt3dadd( 69.8219, -73.0172, -11.7318, 0.28 ) }
    dend_38 { pt3dadd( 70.0338, -73.2277, -11.8289, 0.83 ) }
    dend_38 { pt3dadd( 70.9066, -74.1381, -12.2445, 0.28 ) }
    dend_38 { pt3dadd( 71.4317, -74.7013, -12.4927, 0.28 ) }
    dend_38 { pt3dadd( 71.8871, -75.1899, -12.66, 0.55 ) }
    dend_38 { pt3dadd( 72.4236, -75.7147, -12.8599, 0.55 ) }
    dend_38 { pt3dadd( 73.3121, -76.5082, -13.155, 0.55 ) }
    dend_38 { pt3dadd( 73.7876, -76.911, -13.2974, 0.28 ) }
    dend_38 { pt3dadd( 74.0437, -77.1163, -13.372, 0.55 ) }
    dend_38 { pt3dadd( 74.9081, -77.7592, -13.6708, 0.28 ) }
    dend_38 { pt3dadd( 75.5612, -78.2042, -13.8878, 0.55 ) }
    dend_38 { pt3dadd( 76.2498, -78.6821, -14.1341, 0.28 ) }
    dend_38 { pt3dadd( 76.4527, -78.8282, -14.1969, 0.83 ) }
    dend_38 { pt3dadd( 77.3324, -79.4352, -14.4908, 0.28 ) }
    dend_38 { pt3dadd( 77.5378, -79.5662, -14.5581, 0.55 ) }
    dend_38 { pt3dadd( 78.0717, -79.8668, -14.7317, 0.55 ) }
    dend_38 { pt3dadd( 78.9494, -80.3767, -14.9329, 0.28 ) }
    dend_38 { pt3dadd( 78.9843, -80.3958, -14.9411, 0.55 ) }
    dend_38 { pt3dadd( 79.7831, -80.7735, -15.1568, 0.28 ) }
    dend_38 { pt3dadd( 80.0999, -80.9078, -15.2404, 0.55 ) }
    dend_38 { pt3dadd( 80.9669, -81.263, -15.5225, 0.28 ) }
    dend_38 { pt3dadd( 81.5441, -81.4802, -15.7319, 0.55 ) }
    dend_38 { pt3dadd( 82.5928, -81.828, -16.1295, 0.55 ) }
    dend_38 { pt3dadd( 83.5105, -82.1253, -16.5017, 0.28 ) }
    dend_38 { pt3dadd( 84.0744, -82.3165, -16.7427, 0.83 ) }
    dend_38 { pt3dadd( 85.0459, -82.6616, -17.1681, 0.28 ) }
    dend_38 { pt3dadd( 85.2511, -82.7299, -17.2414, 0.55 ) }
    dend_38 { pt3dadd( 86.0049, -82.9493, -17.4604, 0.28 ) }
    dend_38 { pt3dadd( 86.248, -83.0169, -17.4863, 0.55 ) }
    dend_38 { pt3dadd( 87.3829, -83.2924, -17.486, 0.28 ) }
    dend_38 { pt3dadd( 87.7408, -83.3644, -17.4641, 0.83 ) }
    dend_38 { pt3dadd( 89.0928, -83.585, -17.2251, 0.28 ) }
    dend_38 { pt3dadd( 89.3414, -83.6194, -17.1667, 0.55 ) }
    dend_38 { pt3dadd( 90.3239, -83.6947, -16.826, 0.28 ) }
    dend_38 { pt3dadd( 91.1535, -83.6904, -16.4959, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 37.5498, -60.6592, -0.930496, 0.55 ) }
    dend_35 { pt3dadd( 38.5725, -61.1485, -2.17146, 0.55 ) }
    dend_35 { pt3dadd( 40.6331, -62.2241, -4.84909, 0.55 ) }
    dend_35 { pt3dadd( 42.4137, -63.1567, -7.1004, 0.28 ) }
    dend_35 { pt3dadd( 43.7318, -63.8051, -8.72884, 0.83 ) }
    dend_35 { pt3dadd( 45.9557, -64.8097, -11.3045, 0.28 ) }
    dend_35 { pt3dadd( 46.4883, -65.021, -11.9211, 0.55 ) }
    dend_35 { pt3dadd( 46.95, -65.1767, -12.4833, 0.55 ) }
    dend_35 { pt3dadd( 47.9401, -65.3939, -13.5993, 0.55 ) }
    dend_35 { pt3dadd( 49.5092, -65.6702, -15.2622, 0.55 ) }
    dend_35 { pt3dadd( 50.3825, -65.7993, -16.166, 0.55 ) }
    dend_35 { pt3dadd( 52.9167, -66.0775, -18.4616, 0.83 ) }
    dend_35 { pt3dadd( 54.4928, -66.2105, -19.8622, 0.28 ) }
    dend_35 { pt3dadd( 55.1227, -66.2423, -20.4479, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -96.4708, -21.2417, -116.133, 0.28 ) }
    dend_20 { pt3dadd( -97.2823, -21.3771, -115.877, 0.28 ) }
    dend_20 { pt3dadd( -98.3366, -21.5531, -115.544, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -96.4708, -21.2417, -116.133, 0.28 ) }
    dend_19 { pt3dadd( -98.4028, -23.9565, -118.199, 0.28 ) }
    dend_19 { pt3dadd( -98.9677, -24.7503, -118.803, 0.55 ) }
    dend_19 { pt3dadd( -100.735, -27.2337, -120.692, 0.28 ) }
    dend_19 { pt3dadd( -101.518, -28.3328, -121.528, 0.83 ) }
    dend_19 { pt3dadd( -104.941, -33.1432, -125.188, 0.28 ) }
    dend_19 { pt3dadd( -105.503, -33.9338, -125.79, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -84.5733, 394.236, -26.5376, 0.55 ) }
    dend_9 { pt3dadd( -84.9102, 395.148, -27.874, 0.55 ) }
    dend_9 { pt3dadd( -85.3007, 396.215, -29.238, 0.28 ) }
    dend_9 { pt3dadd( -85.6899, 397.278, -30.5983, 0.55 ) }
    dend_9 { pt3dadd( -86.8158, 400.353, -34.5316, 0.28 ) }
    dend_9 { pt3dadd( -86.9452, 400.707, -34.9837, 0.55 ) }
    dend_9 { pt3dadd( -87.78, 402.987, -37.9002, 0.28 ) }
    dend_9 { pt3dadd( -88.0949, 404.006, -39.5039, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -84.5733, 394.236, -26.5376, 0.28 ) }
    dend_8 { pt3dadd( -86.0388, 393.533, -27.0448, 0.28 ) }
    dend_8 { pt3dadd( -86.8546, 393.142, -27.327, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 98.767, 96.8455, -95.0954, 0.28 ) }
    dend_47 { pt3dadd( 95.1319, 97.09, -96.0931, 0.28 ) }
    dend_47 { pt3dadd( 93.8999, 97.1729, -96.4313, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 98.767, 96.8455, -95.0954, 0.28 ) }
    dend_46 { pt3dadd( 98.0952, 99.0592, -95.3267, 0.28 ) }
    dend_46 { pt3dadd( 96.7774, 103.222, -95.7161, 0.28 ) }
    dend_46 { pt3dadd( 96.3822, 104.339, -95.7762, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 94.7734, 108.405, -95.8108, 0.28 ) }
    dend_46 { pt3dadd( 93.8489, 110.742, -95.8307, 0.55 ) }
    dend_46 { pt3dadd( 92.6545, 113.761, -95.8563, 0.28 ) }
    dend_46 { pt3dadd( 91.9627, 115.351, -95.7899, 0.55 ) }
    dend_46 { pt3dadd( 90.7377, 117.88, -95.5175, 0.28 ) }
    dend_46 { pt3dadd( 89.6757, 119.906, -95.2751, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 55.1227, -66.2423, -20.4479, 0.55 ) }
    dend_37 { pt3dadd( 54.4291, -67.5681, -22.1262, 0.55 ) }
    dend_37 { pt3dadd( 54.1292, -68.2123, -22.9311, 0.28 ) }
    dend_37 { pt3dadd( 53.9164, -68.6218, -23.4702, 0.83 ) }
    dend_37 { pt3dadd( 52.5087, -71.0387, -26.6322, 0.28 ) }
    dend_37 { pt3dadd( 52.1145, -71.7401, -27.5125, 0.83 ) }
    dend_37 { pt3dadd( 50.4052, -74.8431, -31.2157, 0.28 ) }
    dend_37 { pt3dadd( 50.1653, -75.272, -31.7253, 0.83 ) }
    dend_37 { pt3dadd( 48.5863, -77.7663, -34.7453, 0.28 ) }
    dend_37 { pt3dadd( 48.0914, -78.4742, -35.5637, 0.55 ) }
    dend_37 { pt3dadd( 45.7797, -81.4033, -38.8651, 0.28 ) }
    dend_37 { pt3dadd( 45.2996, -81.9751, -39.5355, 0.28 ) }
    dend_37 { pt3dadd( 44.246, -83.1478, -40.9787, 0.83 ) }
    dend_37 { pt3dadd( 41.1171, -86.4966, -45.2798, 0.28 ) }
    dend_37 { pt3dadd( 40.2626, -87.3977, -46.4999, 0.55 ) }
    dend_37 { pt3dadd( 38.5907, -89.1199, -48.9466, 0.55 ) }
    dend_37 { pt3dadd( 37.3288, -90.3415, -50.7559, 0.55 ) }
    dend_37 { pt3dadd( 35.1721, -92.477, -53.8914, 0.28 ) }
    dend_37 { pt3dadd( 34.5871, -93.1166, -54.7701, 0.83 ) }
    dend_37 { pt3dadd( 32.6443, -95.4042, -57.6406, 0.28 ) }
    dend_37 { pt3dadd( 32.2738, -95.8775, -58.1735, 0.55 ) }
    dend_37 { pt3dadd( 30.6074, -98.1262, -60.2132, 0.28 ) }
    dend_37 { pt3dadd( 30.0814, -98.7892, -60.741, 0.55 ) }
    dend_37 { pt3dadd( 28.0348, -101.394, -62.509, 0.28 ) }
    dend_37 { pt3dadd( 27.8474, -101.618, -62.665, 0.83 ) }
    dend_37 { pt3dadd( 26.6931, -102.894, -63.4541, 0.28 ) }
    dend_37 { pt3dadd( 25.7354, -103.905, -64.0107, 0.55 ) }
    dend_37 { pt3dadd( 22.7626, -106.877, -65.6115, 0.28 ) }
    dend_37 { pt3dadd( 21.8641, -107.779, -66.038, 0.83 ) }
    dend_37 { pt3dadd( 17.9492, -111.711, -67.5909, 0.28 ) }
    dend_37 { pt3dadd( 16.2691, -113.429, -68.2185, 0.55 ) }
    dend_37 { pt3dadd( 14.0803, -115.755, -69.0533, 0.55 ) }
    dend_37 { pt3dadd( 11.6694, -118.449, -69.9033, 0.28 ) }
    dend_37 { pt3dadd( 9.66902, -120.815, -70.4678, 0.55 ) }
    dend_37 { pt3dadd( 8.25594, -122.554, -70.952, 0.28 ) }
    dend_37 { pt3dadd( 8.05405, -122.822, -71.0275, 0.55 ) }
    dend_37 { pt3dadd( 6.81381, -124.414, -71.5864, 0.28 ) }
    dend_37 { pt3dadd( 5.8251, -125.576, -72.053, 0.55 ) }
    dend_37 { pt3dadd( 4.70617, -126.76, -72.6042, 0.55 ) }
    dend_37 { pt3dadd( 2.72305, -128.58, -73.7082, 0.28 ) }
    dend_37 { pt3dadd( 1.85062, -129.296, -74.1661, 0.55 ) }
    dend_37 { pt3dadd( 0.587212, -130.291, -74.8136, 0.28 ) }
    dend_37 { pt3dadd( -0.232669, -130.891, -75.1964, 0.55 ) }
    dend_37 { pt3dadd( -2.46762, -132.462, -76.2428, 0.28 ) }
    dend_37 { pt3dadd( -3.21934, -132.972, -76.6299, 0.55 ) }
    dend_37 { pt3dadd( -5.09528, -134.283, -77.6013, 0.28 ) }
    dend_37 { pt3dadd( -6.25808, -135.175, -78.3791, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 55.1227, -66.2423, -20.4479, 0.28 ) }
    dend_36 { pt3dadd( 59.2624, -65.8086, -20.9842, 0.28 ) }
    dend_36 { pt3dadd( 59.864, -65.7698, -21.1161, 0.83 ) }
    dend_36 { pt3dadd( 62.6495, -65.7291, -21.7436, 0.28 ) }
    dend_36 { pt3dadd( 63.6182, -65.6915, -21.971, 0.28 ) }
    dend_36 { pt3dadd( 64.8219, -65.6991, -22.2933, 0.55 ) }
    dend_36 { pt3dadd( 66.9361, -65.7758, -23.1274, 0.28 ) }
    dend_36 { pt3dadd( 69.1927, -65.9768, -24.32, 0.55 ) }
    dend_36 { pt3dadd( 70.5323, -66.1808, -25.0565, 0.55 ) }
    dend_36 { pt3dadd( 72.1945, -66.5431, -26.1471, 0.55 ) }
    dend_36 { pt3dadd( 75.0728, -67.2389, -28.2719, 0.83 ) }
    dend_36 { pt3dadd( 78.4879, -68.1373, -31.0763, 0.28 ) }
    dend_36 { pt3dadd( 79.6582, -68.4667, -32.1021, 0.28 ) }
    dend_36 { pt3dadd( 80.2585, -68.6823, -32.694, 0.83 ) }
    dend_36 { pt3dadd( 84.2384, -70.2152, -36.8132, 0.28 ) }
    dend_36 { pt3dadd( 85.3618, -70.7271, -38.064, 0.83 ) }
    dend_36 { pt3dadd( 86.3058, -71.2264, -39.1835, 0.83 ) }
    dend_36 { pt3dadd( 87.9841, -72.2395, -41.1361, 0.83 ) }
    dend_36 { pt3dadd( 90.8345, -74.0939, -44.5127, 0.55 ) }
    dend_36 { pt3dadd( 93.3098, -75.963, -47.4437, 0.55 ) }
    dend_36 { pt3dadd( 96.381, -78.7247, -50.9768, 0.55 ) }
    dend_36 { pt3dadd( 97.8275, -80.2987, -52.7205, 0.55 ) }
    dend_36 { pt3dadd( 99.0434, -81.893, -54.2405, 0.28 ) }
    dend_36 { pt3dadd( 99.1792, -82.1109, -54.4063, 0.55 ) }
    dend_36 { pt3dadd( 100.876, -85.5378, -56.3777, 0.28 ) }
    dend_36 { pt3dadd( 101.406, -86.8721, -56.9684, 0.55 ) }
    dend_36 { pt3dadd( 102.902, -90.8425, -58.4026, 0.28 ) }
    dend_36 { pt3dadd( 103.78, -93.0816, -59.0879, 0.55 ) }
    dend_36 { pt3dadd( 104.792, -95.4775, -59.7283, 0.28 ) }
    dend_36 { pt3dadd( 105.635, -97.2502, -60.0779, 0.55 ) }
    dend_36 { pt3dadd( 107.764, -101.334, -60.5763, 0.28 ) }
    dend_36 { pt3dadd( 108.323, -102.299, -60.6197, 1.11 ) }
    dend_36 { pt3dadd( 111.524, -107.03, -60.3981, 0.28 ) }
    dend_36 { pt3dadd( 113.27, -109.277, -60.1033, 0.55 ) }
    dend_36 { pt3dadd( 115.103, -111.314, -59.4076, 0.28 ) }
    dend_36 { pt3dadd( 115.756, -111.928, -59.031, 0.55 ) }
    dend_36 { pt3dadd( 117.541, -113.396, -57.6784, 0.28 ) }
    dend_36 { pt3dadd( 118.759, -114.302, -56.6033, 0.28 ) }
    dend_36 { pt3dadd( 121.138, -115.809, -54.1559, 0.55 ) }
    dend_36 { pt3dadd( 124.645, -118.045, -50.3292, 0.55 ) }
    dend_36 { pt3dadd( 126.01, -118.919, -48.8079, 0.28 ) }
    dend_36 { pt3dadd( 126.295, -119.08, -48.5076, 0.55 ) }
    dend_36 { pt3dadd( 128.417, -120.097, -46.4786, 0.28 ) }
    dend_36 { pt3dadd( 128.79, -120.262, -46.1482, 0.55 ) }
    dend_36 { pt3dadd( 130.571, -120.868, -44.8747, 0.28 ) }
    dend_36 { pt3dadd( 131.4, -121.068, -44.4302, 0.55 ) }
    dend_36 { pt3dadd( 134.688, -121.449, -42.5403, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 135.706, -121.433, -41.8219, 0.55 ) }
    dend_36 { pt3dadd( 137.308, -121.179, -40.686, 0.28 ) }
    dend_36 { pt3dadd( 137.809, -121.017, -40.2245, 0.55 ) }
    dend_36 { pt3dadd( 139.203, -120.346, -38.7099, 0.28 ) }
    dend_36 { pt3dadd( 140.384, -119.7, -37.3026, 0.55 ) }
    dend_36 { pt3dadd( 142.426, -118.333, -34.2959, 0.28 ) }
    dend_36 { pt3dadd( 143.932, -117.186, -31.845, 0.55 ) }
    dend_36 { pt3dadd( 147.006, -114.437, -26.4041, 0.28 ) }
    dend_36 { pt3dadd( 147.441, -114.022, -25.5794, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 3
    dend_6 nseg = 13
    dend_5 nseg = 5
    dend_3 nseg = 5
    dend_48 nseg = 11
    dend_43 nseg = 3
    dend_30 nseg = 17
    dend_29 nseg = 5
    dend_24 nseg = 3
    dend_18 nseg = 7
    dend_17 nseg = 13
    dend_15 nseg = 7
    dend_14 nseg = 7
    dend_10 nseg = 11
    dend_7 nseg = 7
    dend_45 nseg = 9
    dend_44 nseg = 7
    dend_40 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 5
    dend_36 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L4_BTC_22df25e508_0_0


