// Cell: cACint209_L5_ChC_759d7f7dc1_0_0
/*
{
  "id" : "cACint209_L5_ChC_759d7f7dc1_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -6.91316, -8.0337, 1.77", "-3.66144, -6.91316, -8.0337, 1.77", "-3.28399, -8.10218, -8.21018, 1.77", "-2.99651, -8.9873, -8.35076, 1.77", "-2.55714, -10.3746, -8.55822, 1.55", "-2.29908, -11.2946, -8.72299, 1.69", "-2.12242, -12.0094, -8.86656, 1.77", "-1.96766, -12.7048, -9.04022, 1.77", "-1.77118, -13.6371, -9.33212, 1.25", "-1.4527, -15.0672, -9.72566, 0.74", "-2.06491, -14.4441, -10.3998, 0.74", "-2.54232, -14.2238, -11.1172, 0.74", "-3.37944, -13.9244, -12.407, 1.18", "-3.82945, -13.8492, -13.1423, 1.18", "-4.50444, -13.698, -14.1588, 0.52", "-5.3032, -13.4228, -15.2508, 0.52", "-6.21116, -13.4627, -16.6309, 0.74", "-6.59377, -13.663, -17.5697, 0.74", "-6.77631, -13.9717, -18.389, 0.74", "-7.07091, -14.3696, -19.6254, 1.11", "-7.33389, -14.5774, -20.4169, 1.69", "-7.7643, -14.7204, -21.216, 1.77", "-8.74481, -14.9954, -22.982, 1.33", "-9.26665, -15.2416, -24.0585, 1.4", "-9.5741, -15.5695, -24.867, 1.55", "-9.7489, -16.115, -25.7136, 1.33", "-9.76793, -17.0554, -26.7884, 0.74", "-9.60435, -17.8254, -27.4128, 1.03", "-9.36542, -18.4718, -27.8076, 1.47", "-9.1119, -18.8967, -28.0912, 1.62", "-8.71031, -19.4041, -28.4822, 1.62", "-8.25519, -19.8119, -28.8422, 0.52", "-7.71421, -20.1955, -29.2392, 0.52", "-7.57962, -20.3959, -29.5805, 0.52", "-7.60698, -20.8062, -30.4645, 0.66", "-7.78198, -21.2091, -31.3985, 0.74", "-8.06737, -21.3735, -32.0574, 0.44", "-8.55913, -21.3715, -32.7544, 0.44", "-9.28397, -21.2869, -33.6408, 0.44", "-9.79926, -21.3367, -34.4294, 0.44", "-10.0858, -21.4349, -34.9887, 0.44", "-10.6185, -21.7626, -36.0754, 0.66", "-10.8785, -22.2714, -37.1734, 1.11", "-11.0132, -22.4579, -37.5548, 0.96", "-11.3649, -22.8511, -38.4291, 1.18", "-11.5017, -23.0194, -38.7708, 1.69", "-11.7242, -23.2784, -39.2662, 1.69", "-12.5719, -24.1952, -40.9237, 0.88", "-13.0897, -24.6315, -41.7892, 2.14", "-14.2642, -25.221, -43.3886, 2.28", "-14.4291, -25.2637, -43.5716, 2.28", "-15.3819, -25.3473, -44.4604, 0.44", "-15.9258, -25.3058, -44.8601, 0.44", "-16.5683, -25.1813, -45.2286, 0.81", "-17.2274, -25.022, -45.6223, 0.81", "-17.5279, -24.9827, -45.8376, 0.96", "-18.1248, -25.0338, -46.3624, 0.66", "-18.7251, -25.2277, -46.9787, 1.99", "-19.1747, -25.4597, -47.4988, 2.21", "-19.6137, -25.7656, -48.0419, 2.5", "-20.8215, -26.8158, -49.6518, 0.66", "-21.4477, -27.5009, -50.6026, 0.66", "-21.8344, -28.0335, -51.2559, 0.66", "-22.2327, -28.667, -51.955, 1.55", "-22.4177, -28.9786, -52.2645, 2.21", "-22.5961, -29.304, -52.5599, 2.21", "-23.0884, -30.3388, -53.4483, 0.29", "-23.3517, -31.0063, -54.0658, 0.29", "-23.5238, -31.4671, -54.4839, 1.55", "-23.7385, -32.0232, -54.9772, 1.99", "-23.9358, -32.521, -55.4292, 2.36", "-24.4908, -33.8749, -56.6963, 0.59", "-24.7668, -34.5689, -57.3897, 1.84", "-24.8753, -34.891, -57.7508, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.62167, 2.1563, 1.92", "-6.50143, -1.62167, 2.1563, 1.92", "-6.98043, -2.42716, 2.1182, 1.92", "-7.79521, -4.02439, 2.03534, 1.92", "-8.63542, -5.48156, 1.95176, 2.14", "-9.28309, -6.46703, 1.88107, 2.36", "-10.2009, -7.65949, 1.78361, 2.28", "-11.2091, -8.76045, 1.67215, 2.36", "-12.3373, -9.77924, 1.52742, 2.36", "-14.0882, -10.9214, 1.32085, 1.77", "-15.0513, -11.2972, 1.24848, 1.77", "-16.5614, -11.6036, 1.20823, 1.99", "-17.9071, -11.7293, 1.29366, 1.99", "-18.5729, -11.7522, 1.37587, 1.99", "-19.5654, -11.798, 1.55294, 1.77", "-21.1016, -12.0523, 1.95037, 1.47", "-22.2104, -12.4286, 2.26409, 1.47", "-23.608, -13.1952, 2.61723, 1.33", "-24.2433, -13.6641, 2.73552, 1.99", "-25.323, -14.6227, 2.85405, 1.99", "-26.5668, -15.8684, 2.86993, 1.77", "-27.9426, -17.3905, 2.74887, 1.92", "-29.2148, -18.8371, 2.48931, 1.69", "-29.997, -19.6769, 2.23773, 1.69", "-30.9772, -20.6228, 1.86715, 1.84", "-31.8713, -21.4139, 1.52569, 1.84", "-33.0286, -22.4019, 1.10172, 1.69", "-34.3006, -23.5026, 0.704904, 1.55", "-35.585, -24.6938, 0.405144, 1.4", "-36.6374, -25.6744, 0.191521, 1.25", "-37.7385, -26.7469, -0.00683911, 1.33", "-38.7813, -27.8619, -0.122225, 1.47", "-39.7576, -29.0448, -0.0754289, 1.62", "-40.4478, -30.1513, 0.167707, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.29066, -4.9037, 3.61", "0.448551, -8.29066, -4.9037, 3.61", "0.688568, -9.90288, -4.82458, 2.95", "1.03257, -12.4048, -4.70553, 2.8", "1.23093, -14.0815, -4.59211, 2.8", "1.40369, -15.9563, -4.44917, 3.02", "1.48635, -17.2007, -4.35348, 3.02", "1.52094, -18.4213, -4.2546, 3.02", "1.4876, -20.2605, -4.10294, 3.02", "1.3524, -22.2061, -3.93616, 2.36", "0.989572, -25.6094, -3.75389, 2.36", "0.727647, -27.5159, -3.7361, 2.43", "0.426326, -29.3612, -3.78152, 2.43", "0.0324755, -31.5243, -3.91042, 2.43", "-0.579893, -34.5107, -4.17351, 2.28", "-1.23976, -37.5748, -4.51766, 2.14", "-2.16101, -41.6341, -5.05612, 2.06", "-2.80037, -44.4513, -5.47671, 2.43", "-3.20423, -46.2454, -5.78196, 2.58", "-3.63728, -48.136, -6.14714, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.21333, -7.5337, 1.62", "-0.46412, 7.92253, -7.59046, 1.62", "-0.594918, 8.96589, -7.62346, 1.92", "-0.792173, 10.3597, -7.68052, 1.33", "-1.04095, 11.8599, -7.76459, 1.69", "-1.24499, 12.9699, -7.80737, 2.21", "-1.41989, 13.8978, -7.80001, 2.21", "-1.63047, 14.9423, -7.74891, 1.99", "-1.8281, 15.8306, -7.67133, 1.77", "-2.06277, 16.8187, -7.55728, 1.99", "-2.31728, 17.8645, -7.43196, 1.99", "-2.75232, 19.7019, -7.24922, 1.11", "-3.02087, 20.8505, -7.17084, 1.11", "-3.30864, 22.0061, -7.13972, 1.25", "-3.583, 22.9765, -7.13437, 1.4", "-3.94213, 24.0371, -7.19641, 0.81", "-4.36509, 25.0417, -7.35498, 0.74", "-4.7012, 25.6986, -7.5238, 0.74", "-5.11552, 26.4112, -7.75215, 0.74", "-5.59701, 27.1872, -8.04252, 0.96", "-6.05095, 27.9177, -8.33578, 0.96", "-6.52456, 28.6512, -8.6374, 1.55", "-7.05951, 29.4736, -8.9878, 2.06", "-7.51211, 30.2223, -9.3146, 2.43", "-8.03117, 31.2306, -9.75823, 2.36", "-8.61887, 32.6042, -10.347, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 7.89733, 0.346303, 2.5", "-2.38227, 8.02488, 0.346995, 2.5", "-3.3467, 9.81176, 0.309726, 1.77", "-4.01985, 11.0193, 0.316615, 1.55", "-4.80938, 12.3937, 0.38091, 1.55", "-5.41096, 13.4424, 0.470602, 1.33", "-6.32884, 15.069, 0.661455, 1.33", "-6.90284, 16.0628, 0.808303, 1.55", "-7.76886, 17.5349, 1.05787, 1.55", "-8.66829, 19.1359, 1.33469, 1.62", "-9.38638, 20.5628, 1.56719, 1.4", "-10.0559, 22.1333, 1.79425, 1.4", "-10.4368, 23.0979, 1.93528, 1.4", "-11.029, 24.6494, 2.14965, 1.4", "-11.5912, 26.1992, 2.29929, 1.4", "-12.2234, 28.1148, 2.40074, 1.77", "-12.7556, 29.8334, 2.41971, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 3.96433, 1.3463, 2.58", "6.88085, 4.01281, 1.35105, 2.58", "7.54008, 4.63934, 1.41989, 2.58", "8.28804, 5.35761, 1.52113, 1.84", "8.84175, 5.87874, 1.61095, 2.06", "9.55666, 6.54971, 1.74527, 2.06", "10.0291, 6.9828, 1.86458, 2.58", "10.5534, 7.46026, 2.02729, 2.58", "10.9, 7.78109, 2.15875, 2.58", "11.5152, 8.32487, 2.42156, 2.58", "11.9479, 8.68027, 2.61671, 2.43", "12.8545, 9.38158, 3.06087, 2.21", "13.5158, 9.86356, 3.39828, 1.99", "14.0466, 10.2278, 3.65268, 1.99", "14.7349, 10.6307, 3.94997, 1.69", "15.3102, 10.8613, 4.16819, 1.69", "16.329, 10.9939, 4.50309, 2.06", "16.9685, 10.8877, 4.67722, 2.06", "18.4794, 10.2622, 5.08147, 1.69", "19.5187, 9.72066, 5.3441, 1.92", "21.1434, 8.67158, 5.72569, 1.92", "22.6905, 7.46417, 6.05554, 2.06", "23.4836, 6.71183, 6.20477, 2.28", "24.0785, 6.02638, 6.32471, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.828859", "4.36343, 23.5449, 1.13455, 0.828859", "6.95552, 38.3192, 1.13455, 0.828859" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-24.8753, -34.891, -57.7508, 0.96", "-23.6846, -36.7936, -63.8991, 0.96", "-23.4487, -37.252, -65.0622, 0.96", "-23.138, -37.8985, -66.452, 0.96", "-22.6984, -38.8244, -68.2519, 1.55", "-22.3425, -39.625, -69.6338, 0.22", "-21.9437, -40.5837, -71.0209, 0.22", "-21.7132, -41.2484, -71.6096, 1.11", "-21.5043, -41.8837, -72.0967, 1.4", "-21.1719, -42.7451, -72.6761, 1.4", "-20.3631, -44.5977, -73.7945, 0.22", "-19.4018, -46.4725, -74.8914, 0.22", "-19.0481, -47.0805, -75.2446, 0.74", "-18.8466, -47.4046, -75.4225, 0.74", "-17.7364, -49.1323, -76.3105, 0.15", "-17.5553, -49.3999, -76.4352, 0.37", "-16.4606, -50.8388, -77.0703, 0.22", "-15.8065, -51.6246, -77.4575, 0.22", "-15.2856, -52.2521, -77.763, 0.74", "-14.7924, -52.9023, -78.0495, 0.88", "-14.6607, -53.1333, -78.1325, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-24.8753, -34.891, -57.7508, 2.87", "-25.5704, -35.1106, -57.8455, 2.87", "-27.7637, -35.9787, -58.242, 0.22", "-29.7461, -37.014, -58.6569, 0.22", "-30.7034, -37.5679, -58.8633, 1.69", "-31.0041, -37.7541, -58.9289, 2.21", "-31.4929, -38.0704, -59.0357, 2.21", "-33.2865, -39.4011, -59.4196, 0.22", "-34.8597, -40.8173, -59.8044, 0.22", "-35.3467, -41.2954, -59.9345, 1.25", "-35.7443, -41.6902, -60.0419, 1.25", "-36.2724, -42.2081, -60.1918, 1.25", "-37.3507, -43.196, -60.495, 0.15", "-37.9628, -43.7329, -60.6605, 0.15", "-38.4459, -44.1109, -60.7959, 0.96", "-38.9958, -44.4983, -60.9673, 1.18", "-39.2486, -44.6532, -61.049, 1.18", "-40.8844, -45.509, -61.6672, 0.22", "-41.3209, -45.6751, -61.8506, 0.52", "-41.7183, -45.8037, -62.0212, 0.52", "-42.7413, -46.1028, -62.4527, 0.22", "-43.3766, -46.2818, -62.7276, 1.25", "-44.3089, -46.5784, -63.1191, 1.4", "-46.1055, -47.3117, -63.9291, 0.22", "-47.3294, -47.9649, -64.4945, 0.22", "-47.7917, -48.2819, -64.716, 0.74", "-48.3814, -48.8038, -65.0068, 0.88", "-49.1944, -49.8617, -65.5649, 0.22", "-49.8276, -51.2333, -66.1426, 0.22", "-50.0691, -52.1326, -66.4715, 1.99", "-50.1598, -52.6846, -66.6432, 2.36", "-50.2258, -53.2268, -66.8104, 2.36", "-50.4571, -56.2698, -67.7383, 0.15", "-50.5106, -58.1594, -68.3515, 0.15", "-50.5105, -58.6515, -68.4915, 0.44", "-50.48, -59.5996, -68.7369, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-40.4478, -30.1513, 0.167707, 0.96", "-41.365, -30.4683, -0.160146, 0.96", "-42.2385, -30.799, -0.479168, 1.25", "-43.4971, -31.2752, -0.93335, 1.25", "-45.6887, -32.039, -1.66192, 1.18", "-47.1794, -32.4977, -2.10676, 1.11", "-48.3273, -32.8254, -2.43672, 0.88", "-49.8397, -33.2651, -2.89476, 0.96", "-50.7057, -33.5164, -3.16459, 0.96", "-51.977, -33.8942, -3.56884, 0.96", "-53.2284, -34.2737, -3.89722, 0.96", "-54.2911, -34.5878, -4.1146, 1.18", "-55.5965, -34.9571, -4.32436, 1.03", "-56.2412, -35.1227, -4.36171, 1.03", "-57.5858, -35.4262, -4.28913, 1.18", "-58.3997, -35.5785, -4.12228, 1.18", "-60.2237, -35.8228, -3.37997, 0.96", "-60.8913, -35.8747, -3.03935, 1.11", "-62.1892, -35.951, -2.30591, 1.11", "-63.2291, -36.0388, -1.70598, 1.11", "-64.4524, -36.189, -1.00175, 1.11", "-66.086, -36.5243, -0.0845717, 1.55", "-67.2563, -36.8928, 0.519355, 1.03", "-68.6565, -37.5049, 1.21496, 0.88", "-69.8514, -38.196, 1.76171, 0.74", "-70.5358, -38.7059, 2.04836, 0.74", "-71.4203, -39.5332, 2.34094, 0.74", "-72.2994, -40.5307, 2.53769, 0.66", "-73.086, -41.5607, 2.66761, 0.88", "-73.5998, -42.3111, 2.71412, 1.03", "-74.1351, -43.194, 2.73676, 1.03", "-74.8196, -44.3311, 2.74644, 0.88", "-75.6747, -45.6665, 2.74072, 0.88", "-76.1603, -46.3354, 2.72805, 0.88", "-76.8831, -47.1568, 2.71675, 0.88", "-78.2956, -48.4721, 2.71272, 0.88", "-79.1243, -49.0676, 2.71827, 0.88", "-80.3148, -49.6922, 2.7371, 0.88", "-81.1186, -49.9786, 2.75057, 0.96", "-82.067, -50.2268, 2.74209, 0.96", "-82.9298, -50.3876, 2.73947, 0.96", "-83.8959, -50.5385, 2.74641, 0.52", "-84.5543, -50.7505, 2.76139, 0.52", "-85.0468, -51.1329, 2.81212, 0.52", "-85.519, -51.8528, 2.97073, 0.81", "-85.8766, -52.6163, 3.18095, 0.96", "-86.1292, -53.4993, 3.43424, 0.96", "-86.3951, -55.0821, 3.89155, 0.81", "-86.4755, -55.8571, 4.12269, 0.81", "-86.5332, -56.84, 4.45825, 1.11", "-86.6014, -57.3979, 4.69451, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-40.4478, -30.1513, 0.167707, 1.33", "-41.0444, -30.3016, 0.677597, 1.33", "-41.623, -30.4662, 1.10458, 1.18", "-42.7104, -30.7522, 1.86896, 0.88", "-43.2367, -30.8676, 2.20722, 0.74", "-44.0104, -30.9999, 2.64755, 0.74", "-44.7972, -31.0889, 3.0911, 0.74", "-45.3914, -31.1409, 3.40284, 0.59", "-46.0903, -31.1654, 3.76322, 0.59", "-46.6405, -31.1506, 4.04921, 0.52", "-47.1945, -31.0741, 4.38158, 0.52", "-48.2366, -30.8013, 5.09396, 0.74", "-48.8963, -30.5706, 5.5949, 0.59", "-49.5039, -30.35, 6.07479, 0.44", "-50.1591, -30.1484, 6.61073, 0.37", "-50.6838, -30.0422, 7.04633, 0.66", "-51.1547, -30.0212, 7.37407, 0.66", "-51.4635, -30.0546, 7.52124, 0.66", "-51.8725, -30.1232, 7.69257, 0.44", "-52.3473, -30.234, 7.86855, 0.44", "-53.1948, -30.4362, 8.16111, 0.44", "-54.3646, -30.7416, 8.5688, 0.74", "-55.058, -30.9468, 8.80767, 0.74", "-56.016, -31.2213, 9.12514, 0.52", "-56.9121, -31.4662, 9.41164, 0.59", "-57.6814, -31.6713, 9.64432, 0.44", "-58.7507, -31.9983, 9.96725, 0.37", "-59.52, -32.3001, 10.2034, 0.37", "-60.3573, -32.7417, 10.4395, 0.29", "-60.7549, -33.031, 10.5409, 0.29", "-61.2223, -33.4715, 10.6963, 0.29", "-61.6204, -33.8917, 10.8608, 0.37", "-62.0699, -34.3842, 11.0899, 0.37", "-62.5252, -34.8602, 11.3618, 0.37", "-63.0138, -35.4205, 11.6958, 0.66", "-63.5009, -35.965, 12.0449, 0.81", "-63.8771, -36.3402, 12.3168, 0.81", "-64.4293, -36.7864, 12.6907, 0.22", "-65.1096, -37.2411, 13.135, 0.22", "-71.7985, -38.2045, 16.4098, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.63728, -48.136, -6.14714, 1.55", "-3.24886, -49.4549, -5.97716, 1.55", "-2.86451, -50.7979, -5.80444, 1.55", "-2.53995, -51.9778, -5.66082, 1.55", "-2.18754, -53.3161, -5.49496, 1.69", "-1.94001, -54.3425, -5.36743, 1.69", "-1.77999, -55.1096, -5.27763, 1.69", "-1.57518, -56.3817, -5.14168, 1.55", "-1.37052, -58.0454, -4.9831, 1.47", "-1.27953, -59.4301, -4.85766, 1.33", "-1.28521, -60.7556, -4.74854, 1.33", "-1.41998, -62.5136, -4.62723, 1.33", "-1.62604, -63.8006, -4.54683, 1.11", "-1.83197, -64.6096, -4.50239, 1.11", "-2.42005, -66.3694, -4.41693, 1.25", "-2.88363, -67.5364, -4.37008, 1.25", "-3.34629, -68.5857, -4.33572, 1.25", "-4.02474, -70.0423, -4.30869, 1.4", "-4.71155, -71.4791, -4.30429, 1.4", "-5.24804, -72.646, -4.32497, 1.55", "-5.5856, -73.5081, -4.36695, 1.55", "-5.98955, -74.7883, -4.45131, 1.33", "-6.37581, -76.3933, -4.59634, 0.96", "-6.4826, -77.0317, -4.6734, 0.81", "-6.56672, -77.7516, -4.75841, 0.81", "-6.69901, -79.417, -4.9314, 0.96", "-6.75425, -80.5714, -5.02401, 1.33", "-6.80011, -81.8456, -5.09804, 1.69", "-6.84115, -82.6171, -5.1263, 1.84", "-6.91311, -83.4906, -5.13732, 1.99", "-7.05725, -84.5217, -5.12743, 2.06", "-7.20215, -85.4024, -5.1, 2.06", "-7.3586, -86.2977, -5.03604, 1.84", "-7.52407, -87.2525, -4.92083, 1.62", "-7.71003, -88.3996, -4.73741, 1.18", "-7.83795, -89.3187, -4.57229, 0.88", "-8.0033, -90.5748, -4.32207, 0.88", "-8.11752, -91.4386, -4.1168, 1.03", "-8.24414, -92.3265, -3.87883, 1.11", "-8.35219, -92.958, -3.70459, 1.11", "-8.70288, -94.5309, -3.28757, 1.03", "-8.9825, -95.5557, -3.02938, 1.18", "-9.22841, -96.3919, -2.83806, 1.25", "-9.61234, -97.6644, -2.58477, 1.18", "-9.97292, -98.8186, -2.39647, 1.03", "-10.3554, -99.9704, -2.25226, 0.96", "-10.7924, -101.217, -2.15167, 0.88", "-11.103, -102.05, -2.13497, 0.88", "-11.6099, -103.305, -2.237, 1.25", "-12.1496, -104.556, -2.44068, 1.55", "-12.5601, -105.514, -2.64242, 1.62", "-12.8636, -106.282, -2.8162, 1.62", "-13.2181, -107.288, -3.0395, 1.4", "-13.6639, -108.716, -3.32099, 1.11", "-14.0416, -110.191, -3.55778, 1.11", "-14.3802, -111.821, -3.73243, 1.11", "-14.6893, -113.561, -3.86105, 1.11", "-14.8985, -114.834, -3.92316, 1.4", "-15.1016, -116.153, -3.96246, 1.4", "-15.4095, -118.211, -3.98808, 1.25", "-15.7232, -120.318, -4.0208, 1.25", "-15.9412, -121.703, -4.04827, 1.62", "-16.1474, -122.916, -4.08984, 1.77", "-16.4183, -124.541, -4.17224, 1.33", "-16.6539, -126.013, -4.25484, 0.88", "-16.8765, -127.655, -4.35634, 1.25", "-16.9684, -128.469, -4.4143, 1.84", "-17.0419, -129.382, -4.4871, 2.28", "-17.0877, -130.329, -4.57646, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.63728, -48.136, -6.14714, 2.14", "-3.54713, -48.5434, -6.27, 2.14", "-3.38271, -49.1883, -6.43313, 2.14", "-3.10154, -50.291, -6.71207, 1.69", "-2.86594, -51.2151, -6.94581, 1.84", "-2.63706, -52.1128, -7.17287, 1.99", "-2.45191, -52.8389, -7.35656, 2.36", "-2.30366, -53.3719, -7.46833, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.61887, 32.6042, -10.347, 1.25", "-8.16991, 33.9138, -10.6339, 1.25", "-7.79157, 34.7936, -10.8063, 1.03", "-7.28822, 35.8399, -10.9908, 0.81", "-6.72474, 37.0117, -11.1752, 0.81", "-6.23124, 38.1818, -11.3413, 1.11", "-5.92183, 39.0315, -11.4502, 1.11", "-5.59314, 40.0264, -11.5252, 0.96", "-5.2088, 41.3591, -11.5853, 0.66", "-4.97761, 42.2816, -11.6218, 0.52", "-4.71082, 43.493, -11.6574, 0.52", "-4.54532, 44.3937, -11.6805, 0.52", "-4.18663, 46.3205, -11.7619, 1.18", "-3.99587, 47.3066, -11.8144, 1.62", "-3.8472, 48.014, -11.8603, 1.69", "-3.56, 49.1856, -11.9715, 1.33", "-3.37629, 49.7651, -12.0499, 0.74", "-3.03604, 50.6538, -12.2056, 0.59", "-2.45306, 52.0591, -12.5349, 0.66", "-2.15089, 52.8192, -12.7342, 0.44", "-1.95727, 53.3874, -12.8847, 0.44", "-1.65392, 54.4301, -13.165, 0.37", "-1.39458, 55.3078, -13.3926, 0.37", "-1.17819, 55.9457, -13.5384, 0.37", "-0.752754, 56.9496, -13.7869, 0.37", "-0.337217, 57.8438, -14.0261, 0.44", "0.0288682, 58.7147, -14.2928, 0.44", "0.522299, 60.125, -14.7749, 0.81", "0.833276, 61.122, -15.1303, 1.03", "1.12687, 62.0227, -15.4657, 1.03", "1.39603, 62.8424, -15.8045, 0.81", "1.7635, 64.0394, -16.3554, 0.29", "1.92136, 64.6349, -16.6447, 0.29", "2.22673, 66.0756, -17.3382, 1.77", "2.31902, 66.5555, -17.5637, 2.36", "2.45456, 67.2201, -17.8482, 2.36", "2.7406, 68.4849, -18.3498, 2.28", "3.13157, 70.0024, -18.8916, 0.66", "3.35489, 70.8324, -19.1877, 0.88", "3.58486, 71.6966, -19.5005, 0.88", "3.84327, 72.6665, -19.8276, 0.37", "4.01916, 73.3214, -20.0383, 0.37", "4.37086, 74.6867, -20.4467, 0.37", "4.62144, 75.7165, -20.7393, 1.11", "4.80486, 76.5392, -20.9634, 1.47", "4.9182, 77.1278, -21.1133, 1.69", "5.07373, 78.1227, -21.3463, 1.33", "5.20558, 79.2158, -21.5751, 0.44", "5.25941, 80.3786, -21.7875, 0.29", "5.26512, 81.2914, -21.9492, 0.52", "5.24982, 81.9738, -22.0678, 0.52", "5.19863, 83.1196, -22.2947, 0.29", "5.16491, 84.2992, -22.534, 0.29", "5.15171, 86.3792, -22.991, 1.18", "5.15907, 87.1612, -23.1627, 1.62", "5.16639, 87.994, -23.3306, 1.84", "5.17858, 89.0457, -23.5225, 1.33", "5.20612, 92.0458, -24.0434, 0.22", "5.23262, 93.9665, -24.3571, 0.22", "5.25526, 95.7023, -24.6124, 0.22", "5.2532, 97.5366, -24.8464, 0.74", "5.24127, 98.5363, -24.9645, 1.03", "5.22682, 99.0077, -25.0142, 1.03", "5.10973, 100.511, -25.2085, 0.15", "5.05291, 101.088, -25.3115, 0.15", "4.98271, 101.748, -25.4778, 0.44", "4.91805, 102.377, -25.6664, 0.66", "4.85967, 102.957, -25.8419, 0.66", "4.74426, 104.628, -26.3377, 1.55", "4.69715, 105.857, -26.6848, 2.58", "4.68865, 106.927, -26.9834, 2.58", "4.78274, 109.303, -27.5952, 0.29", "4.94297, 110.891, -27.9258, 0.29", "5.29788, 113.167, -28.2781, 0.29", "5.60576, 114.596, -28.4231, 0.96", "5.79705, 115.33, -28.4596, 0.96", "6.53909, 117.72, -28.4646, 0.22", "7.42234, 120.264, -28.3554, 0.22", "8.01652, 121.861, -28.2321, 1.77", "8.26251, 122.485, -28.1643, 2.36", "8.56885, 123.248, -28.0744, 2.5", "9.55802, 125.713, -27.7653, 0.15", "10.0509, 126.954, -27.6189, 0.29", "10.3748, 127.784, -27.5377, 0.29", "10.7836, 128.846, -27.4902, 0.15", "11.1836, 129.934, -27.5108, 1.18", "11.433, 130.609, -27.5597, 1.55", "11.7104, 131.359, -27.6439, 1.18", "11.9131, 131.9, -27.7214, 0.74", "12.4895, 133.578, -27.9755, 0.22", "12.9059, 134.889, -28.1791, 0.22", "13.5661, 137.181, -28.489, 0.22", "13.893, 138.415, -28.6299, 0.81", "14.0129, 138.909, -28.6763, 0.81", "14.6876, 142.003, -28.8704, 0.22", "14.9791, 143.558, -28.8811, 0.22", "15.1916, 144.963, -28.8761, 1.25", "15.2208, 145.336, -28.8741, 1.69", "15.2319, 145.757, -28.8704, 1.69", "15.2232, 146.653, -28.8567, 1.33", "15.18, 147.438, -28.8559, 0.59", "15.0608, 149.07, -28.8984, 0.22", "14.9179, 151.397, -29.0336, 0.22", "14.8316, 152.83, -29.1343, 1.03", "14.7935, 153.433, -29.1807, 1.03", "14.774, 154.065, -29.2286, 1.03", "14.7815, 155.001, -29.2899, 0.52", "14.8815, 157.1, -29.3813, 0.22", "15.0108, 158.112, -29.4206, 0.59", "15.1347, 158.76, -29.4404, 0.59", "15.8167, 161.61, -29.4988, 0.22", "16.0777, 162.494, -29.5052, 0.66", "16.3081, 163.126, -29.5067, 0.66", "16.9006, 164.593, -29.5207, 0.15", "17.2452, 165.409, -29.5405, 0.81", "17.4813, 165.97, -29.5644, 0.81", "17.8186, 166.798, -29.6218, 0.81", "18.4135, 168.378, -29.7607, 0.22", "18.9912, 169.983, -29.9446, 1.33", "19.2217, 170.656, -30.0353, 1.55", "19.358, 171.049, -30.0906, 1.55", "19.5029, 171.466, -30.1559, 1.03", "20.1966, 173.364, -30.4835, 0.22", "20.8618, 175.054, -30.7979, 0.22", "21.2447, 175.94, -30.9848, 0.22", "21.6939, 176.99, -31.2093, 1.25", "21.9655, 177.667, -31.3596, 1.77", "22.1902, 178.281, -31.5026, 1.77", "22.3674, 178.799, -31.6356, 1.18", "22.6298, 179.618, -31.8572, 0.66", "23.4254, 182.116, -32.5915, 0.22", "23.966, 183.784, -33.1346, 0.22", "24.3453, 184.922, -33.503, 1.11", "24.6155, 185.653, -33.7314, 1.4", "24.8845, 186.303, -33.9312, 1.4", "25.2364, 187.056, -34.1847, 0.96", "26.3267, 189.187, -34.9626, 0.22", "27.5548, 191.402, -35.7768, 0.22", "28.5362, 193.099, -36.3874, 1.77", "28.8896, 193.698, -36.5926, 2.65", "29.4558, 194.634, -36.8955, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.61887, 32.6042, -10.347, 0.66", "-10.1513, 33.2237, -10.8598, 0.66", "-10.7603, 33.4433, -11.0633, 0.66", "-11.4736, 33.6739, -11.297, 0.66", "-12.2852, 33.9034, -11.5669, 1.11", "-12.786, 34.0233, -11.7388, 1.33", "-13.5396, 34.1953, -12.0006, 1.33", "-14.3561, 34.3569, -12.2846, 0.96", "-14.9239, 34.4706, -12.4616, 0.88", "-15.607, 34.6054, -12.6511, 0.88", "-16.4273, 34.76, -12.8366, 0.37", "-16.8539, 34.8344, -12.9138, 0.37", "-17.5881, 34.9585, -13.0196, 0.81", "-18.2273, 35.0713, -13.0934, 0.88", "-18.8214, 35.1798, -13.153, 0.81", "-19.4508, 35.2975, -13.2065, 0.29", "-19.8511, 35.3678, -13.2456, 0.29", "-20.5371, 35.4506, -13.3452, 0.74", "-21.0422, 35.4993, -13.4414, 0.74", "-21.3334, 35.5387, -13.4927, 0.74", "-21.6774, 35.6074, -13.5272, 0.74", "-22.1063, 35.7075, -13.5447, 0.59", "-22.5293, 35.7981, -13.5364, 0.59", "-22.9059, 35.8641, -13.5007, 0.37", "-23.9255, 35.9901, -13.3862, 0.37", "-24.6428, 36.0376, -13.3009, 0.37", "-25.0252, 36.0436, -13.2556, 0.22", "-25.6658, 36.0251, -13.1873, 0.22", "-26.0068, 35.9975, -13.1674, 0.22", "-26.9991, 35.8983, -13.1558, 1.03", "-27.4858, 35.8605, -13.1776, 1.4", "-27.7771, 35.8529, -13.1957, 1.4", "-28.4854, 35.8762, -13.2491, 0.81", "-29.389, 35.9452, -13.3429, 0.22", "-29.8757, 35.9896, -13.4022, 0.22", "-30.8544, 36.094, -13.5435, 1.11", "-31.3522, 36.1542, -13.6272, 1.4", "-31.7045, 36.1986, -13.6934, 1.4", "-32.5232, 36.3019, -13.8641, 0.66", "-33.2904, 36.3908, -14.0336, 0.52", "-34.2146, 36.4737, -14.2512, 0.74", "-34.8128, 36.5239, -14.3999, 0.88", "-35.6609, 36.6055, -14.6177, 0.66", "-36.2622, 36.6699, -14.7762, 0.66", "-36.7545, 36.7289, -14.9112, 0.66", "-37.6825, 36.8566, -15.1614, 0.29", "-38.4316, 36.9715, -15.3421, 1.03", "-39.0736, 37.0765, -15.4746, 1.25", "-39.2821, 37.1174, -15.5008, 1.25", "-39.8286, 37.251, -15.5305, 0.81", "-40.4956, 37.4324, -15.5233, 0.29", "-40.9341, 37.5607, -15.4878, 0.52", "-41.2284, 37.6561, -15.4552, 0.66", "-42.3012, 38.0256, -15.3383, 0.22", "-42.9055, 38.242, -15.2863, 0.22", "-43.3967, 38.4215, -15.264, 0.22", "-44.0471, 38.6704, -15.2787, 0.22", "-44.9152, 39.013, -15.3368, 0.59", "-45.4076, 39.215, -15.391, 0.81", "-45.8586, 39.4213, -15.4761, 0.81", "-46.5444, 39.7709, -15.6343, 0.52", "-47.4607, 40.284, -15.8798, 1.03", "-48.0059, 40.6071, -16.0428, 1.18", "-48.4082, 40.8604, -16.1742, 1.25", "-49.301, 41.4538, -16.4848, 0.29", "-50.1057, 42.0097, -16.7795, 0.74", "-50.4066, 42.2222, -16.8953, 0.96", "-50.6685, 42.4075, -17.0039, 0.96", "-51.5353, 43.0032, -17.3823, 0.22", "-51.8783, 43.226, -17.5351, 0.22", "-52.3488, 43.5082, -17.7402, 0.66", "-52.6673, 43.6922, -17.8875, 0.88", "-53.0447, 43.899, -18.0622, 0.44", "-53.538, 44.1613, -18.2856, 0.37", "-53.8375, 44.3152, -18.4135, 0.44", "-54.2372, 44.5289, -18.5825, 0.44", "-54.5249, 44.685, -18.7042, 0.44", "-55.0812, 44.9922, -18.932, 0.22", "-55.4477, 45.1994, -19.0691, 0.22", "-55.886, 45.4677, -19.221, 0.29", "-56.1459, 45.6364, -19.2999, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-12.7556, 29.8334, 2.41971, 1.47", "-12.4164, 30.503, 2.30788, 1.47", "-12.1107, 31.2333, 2.20081, 0.81", "-11.9208, 31.7683, 2.13162, 0.81", "-11.7215, 32.5176, 2.04978, 0.81", "-11.5178, 33.4301, 1.96034, 0.81", "-11.329, 34.4376, 1.87153, 0.81", "-11.21, 35.4436, 1.79436, 1.03", "-11.137, 36.3488, 1.73321, 1.03", "-11.0514, 37.7346, 1.64048, 1.18", "-11.0025, 38.5933, 1.58819, 1.18", "-10.9924, 40.0856, 1.50277, 1.18", "-11.0242, 41.1471, 1.44377, 1.4", "-11.0394, 41.8993, 1.39858, 1.4", "-11.0556, 42.4344, 1.36429, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.7556, 29.8334, 2.41971, 0.96", "-14.9439, 30.9106, 1.42516, 0.96", "-15.7315, 31.3184, 1.09113, 0.96", "-16.8232, 31.8942, 0.629948, 0.96", "-17.9569, 32.5142, 0.139011, 0.81", "-18.9328, 33.0671, -0.280537, 0.81", "-20.2807, 33.8491, -0.841718, 1.03", "-21.1915, 34.4221, -1.21679, 1.03", "-22.0335, 35.0468, -1.55866, 1.03", "-23.0747, 35.94, -1.97612, 0.81", "-23.8356, 36.6227, -2.2779, 0.81", "-24.6717, 37.3965, -2.59466, 0.81", "-25.653, 38.3645, -2.96512, 0.52", "-26.5532, 39.3474, -3.28872, 0.52", "-27.06, 39.9481, -3.44601, 0.52", "-27.7858, 40.8718, -3.64307, 0.52", "-28.6863, 42.0644, -3.87248, 0.52", "-29.1591, 42.7175, -3.98085, 0.52", "-29.6387, 43.3952, -4.0681, 0.52", "-30.2023, 44.2047, -4.14517, 0.66", "-30.7231, 45.0085, -4.19609, 0.88", "-31.2265, 45.8718, -4.22912, 0.88", "-31.7833, 46.8878, -4.26335, 0.59", "-32.3473, 47.8965, -4.31112, 0.88", "-32.7542, 48.6225, -4.35522, 0.88", "-33.0846, 49.2711, -4.39743, 0.96", "-33.3745, 49.865, -4.44614, 0.96", "-33.6371, 50.3842, -4.50153, 0.96", "-34.1125, 51.2315, -4.61961, 0.74", "-34.8736, 52.4765, -4.83168, 1.25", "-35.4053, 53.3042, -4.98934, 1.25", "-36.0119, 54.2275, -5.17132, 0.29", "-36.4158, 54.8419, -5.28513, 0.29", "-36.8245, 55.4651, -5.38725, 0.66", "-37.1937, 56.0288, -5.462, 0.81", "-37.5025, 56.5069, -5.50688, 0.81", "-38.0137, 57.358, -5.5417, 0.37", "-38.4874, 58.3034, -5.59322, 0.37", "-38.7574, 58.9233, -5.64422, 1.03", "-38.985, 59.4727, -5.70529, 1.25", "-39.2801, 60.1448, -5.80314, 1.25", "-39.5398, 60.6774, -5.90439, 0.81", "-40.1092, 61.7322, -6.13933, 0.59", "-40.4537, 62.3329, -6.28326, 0.44", "-40.9363, 63.1802, -6.45624, 0.88", "-41.3081, 63.8334, -6.56322, 0.88", "-41.9479, 64.9765, -6.68199, 0.59", "-42.3597, 65.7388, -6.73935, 0.59", "-42.9961, 66.9759, -6.7861, 0.44", "-43.6858, 68.4031, -6.81894, 1.03", "-44.2333, 69.6183, -6.8133, 1.55", "-44.5387, 70.3736, -6.78036, 1.62", "-44.9452, 71.4808, -6.7002, 1.11", "-45.3566, 72.6975, -6.58897, 0.59", "-45.6235, 73.5386, -6.48814, 0.59", "-46.0449, 74.9444, -6.28633, 0.59", "-46.4652, 76.3447, -6.0621, 0.52", "-46.748, 77.2601, -5.89409, 0.52", "-47.1151, 78.3993, -5.64104, 0.52", "-47.5135, 79.5873, -5.36849, 0.52", "-47.9804, 80.8869, -5.08314, 0.37", "-48.69, 82.612, -4.73384, 1.55", "-48.9637, 83.1791, -4.63343, 1.92", "-49.2513, 83.6935, -4.55842, 1.92", "-49.527, 84.1309, -4.51593, 1.92", "-50.1279, 84.956, -4.47968, 0.88", "-50.9434, 85.9992, -4.4772, 0.44", "-51.562, 86.7706, -4.49327, 0.44", "-52.2255, 87.6063, -4.5288, 0.44", "-53.146, 88.7973, -4.58224, 0.37", "-53.6355, 89.4458, -4.61127, 0.37", "-54.6411, 90.8385, -4.66689, 0.74", "-55.0408, 91.4116, -4.68078, 0.74", "-55.5333, 92.1492, -4.69297, 0.52", "-56.1833, 93.1696, -4.72529, 1.25", "-56.6323, 93.8866, -4.77651, 1.47", "-56.9306, 94.3738, -4.82788, 1.47", "-57.3418, 94.9751, -4.94074, 0.81", "-57.9034, 95.7257, -5.13044, 0.59", "-58.4679, 96.4157, -5.36565, 0.88", "-58.9453, 96.9698, -5.58822, 1.18", "-59.243, 97.3104, -5.73595, 1.18", "-59.9742, 98.1769, -6.07206, 0.96", "-60.753, 99.1641, -6.37639, 0.52", "-61.2037, 99.7828, -6.48677, 0.37", "-61.8523, 100.747, -6.54063, 0.37", "-62.4686, 101.753, -6.50582, 0.37", "-63.0294, 102.762, -6.40351, 0.37", "-63.4113, 103.547, -6.27174, 0.81", "-63.9505, 104.809, -6.01813, 1.84", "-64.1644, 105.319, -5.91414, 1.92", "-64.3274, 105.687, -5.85038, 1.92", "-64.6207, 106.372, -5.75517, 1.62", "-65.0199, 107.344, -5.67919, 0.88", "-65.4195, 108.391, -5.63246, 0.29", "-66.0286, 110.022, -5.59456, 0.29", "-66.493, 111.196, -5.5725, 0.29", "-66.8022, 111.879, -5.55629, 0.29", "-66.9696, 112.195, -5.54815, 0.29", "-67.4082, 112.889, -5.53228, 0.66", "-67.9758, 113.647, -5.51923, 0.81", "-68.3915, 114.147, -5.51368, 0.81", "-69.1886, 115.09, -5.50861, 0.37", "-69.8177, 115.814, -5.5075, 0.37", "-70.4128, 116.507, -5.50598, 0.81", "-70.8321, 117.001, -5.50045, 0.81", "-71.426, 117.711, -5.48268, 0.37", "-72.017, 118.372, -5.46443, 0.37", "-72.6241, 118.987, -5.44519, 0.88", "-73.3724, 119.707, -5.42158, 1.47", "-73.9353, 120.246, -5.40773, 1.69", "-74.391, 120.687, -5.40184, 1.69", "-75.6324, 121.866, -5.39757, 0.37", "-76.0578, 122.277, -5.39772, 0.37", "-76.8493, 123.101, -5.40526, 0.37", "-77.753, 124.122, -5.42098, 0.81", "-78.329, 124.872, -5.43285, 1.33", "-78.673, 125.371, -5.4442, 1.33", "-79.13, 126.076, -5.46502, 0.81", "-80.0534, 127.457, -5.52762, 0.52", "-80.8263, 128.524, -5.59929, 0.52", "-81.6984, 129.707, -5.69398, 0.52", "-82.1796, 130.358, -5.75148, 0.52", "-82.7972, 131.204, -5.83155, 0.52", "-83.4892, 132.151, -5.93186, 0.52", "-84.6679, 133.746, -6.11688, 0.52", "-85.0952, 134.323, -6.18552, 0.52", "-86.1593, 135.732, -6.35347, 1.25", "-86.4602, 136.132, -6.39821, 1.47", "-86.8551, 136.651, -6.46305, 1.47", "-87.4363, 137.371, -6.56842, 0.88", "-88.1485, 138.169, -6.70602, 0.29", "-88.4473, 138.464, -6.76317, 0.29", "-89.0708, 139.025, -6.87593, 0.44", "-89.5688, 139.453, -6.95519, 0.44", "-90.0403, 139.844, -7.01851, 0.44", "-90.315, 140.084, -7.06551, 0.44", "-90.7058, 140.442, -7.11114, 0.29", "-91.2074, 141.032, -7.12321, 0.29", "-91.3807, 141.257, -7.10807, 0.44", "-91.5934, 141.541, -7.07402, 0.44", "-92.1586, 142.274, -6.96912, 0.37", "-92.9274, 143.225, -6.82004, 0.44", "-94.1708, 144.741, -6.67374, 2.28", "-94.6658, 145.345, -6.64844, 2.5", "-95.0417, 145.826, -6.65376, 2.5", "-95.6456, 146.619, -6.70163, 1.92", "-96.2387, 147.424, -6.80885, 0.81", "-96.9799, 148.537, -7.08512, 0.52", "-97.2798, 149.051, -7.23575, 0.52", "-97.8993, 150.24, -7.59782, 0.88", "-98.2359, 150.976, -7.8145, 0.88", "-98.6001, 151.867, -8.05845, 0.66", "-98.8733, 152.601, -8.24614, 0.44", "-99.241, 153.668, -8.47757, 0.29", "-99.6268, 154.901, -8.7495, 0.29", "-100.013, 156.31, -9.077, 0.29", "-100.185, 157.01, -9.2481, 0.29", "-100.48, 158.31, -9.62582, 0.52", "-100.686, 159.203, -9.93079, 0.88", "-100.862, 159.937, -10.2355, 0.88", "-101.084, 160.742, -10.6218, 0.44", "-101.567, 162.017, -11.3252, 1.11", "-102.128, 163.118, -12.0011, 2.43", "-102.627, 163.858, -12.5039, 2.43", "-102.999, 164.285, -12.822, 2.43", "-103.553, 164.786, -13.2021, 1.69", "-104.377, 165.413, -13.6937, 0.59", "-105.321, 166.007, -14.1602, 0.74", "-105.649, 166.186, -14.285, 0.74", "-106.203, 166.472, -14.4827, 0.52", "-107.064, 166.913, -14.7551, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "24.0785, 6.02638, 6.32471, 1.99", "26.2098, 6.07529, 6.46089, 1.99", "27.4752, 6.41351, 6.57524, 1.99", "28.3857, 6.97769, 6.64618, 1.69", "29.6656, 7.77081, 6.74592, 1.69", "30.2047, 8.10487, 6.78792, 1.69", "31.1004, 8.6599, 6.85772, 1.69", "31.6922, 9.2339, 6.83476, 1.92", "32.5827, 10.4685, 6.83868, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "24.0785, 6.02638, 6.32471, 0.74", "24.7077, 7.50486, 7.66168, 0.74", "24.9313, 8.1448, 8.23253, 0.74", "25.2245, 9.1504, 9.11513, 0.74", "25.4422, 10.0164, 9.86772, 0.44", "25.6018, 10.7438, 10.5092, 0.44", "25.8044, 11.8152, 11.4638, 0.66", "25.8653, 12.3319, 11.9156, 0.88", "25.9374, 13.0644, 12.5937, 0.88", "25.9944, 13.7169, 13.2497, 1.03", "26.0965, 14.6344, 14.2182, 0.96", "26.1868, 15.2786, 14.9166, 0.52", "26.2848, 15.7967, 15.4826, 0.52", "26.3877, 16.4777, 16.2405, 0.88", "26.4728, 17.0308, 16.861, 0.66", "26.5733, 17.6456, 17.5622, 0.88", "26.6625, 18.1911, 18.1928, 0.88", "26.783, 18.9859, 19.1359, 0.29", "26.8561, 19.6262, 19.896, 0.29", "26.8963, 20.072, 20.4116, 0.29", "26.9644, 20.8278, 21.2958, 0.44", "27.0242, 21.2714, 21.8371, 0.74", "27.1289, 21.8061, 22.4932, 0.88", "27.2131, 22.1286, 22.8953, 1.11", "27.2907, 22.387, 23.211, 1.11", "27.4257, 22.9836, 23.9087, 0.29", "27.5684, 23.5996, 24.5626, 0.29", "27.7394, 24.2023, 25.1604, 0.29", "29.5935, 29.452, 33.3097, 0.29", "32.5986, 35.1589, 40.8034, 0.29", "34.3405, 41.6586, 47.9733, 0.29", "35.0692, 48.5274, 54.9333, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-86.6014, -57.3979, 4.69451, 0.44", "-88.004, -57.9752, 5.30013, 0.44", "-88.7145, -58.3193, 5.59582, 0.29", "-89.466, -58.7182, 5.8793, 0.29", "-89.9076, -58.9613, 6.03598, 0.29", "-90.8481, -59.4688, 6.3475, 0.37", "-91.2773, -59.6884, 6.49339, 0.37", "-91.9374, -60.004, 6.66145, 0.29", "-92.5676, -60.3529, 6.83324, 0.29", "-93.0482, -60.6582, 6.97023, 0.29", "-93.3819, -60.8817, 7.06406, 0.29", "-93.9025, -61.2199, 7.20749, 0.29", "-94.4174, -61.5093, 7.341, 0.44", "-95.1281, -61.8635, 7.52478, 0.44", "-95.5033, -62.0635, 7.63951, 0.44", "-96.0478, -62.3967, 7.83647, 0.66", "-96.5879, -62.8011, 8.07165, 0.66", "-96.8622, -63.0713, 8.22483, 0.52", "-97.3189, -63.7266, 8.61105, 0.44", "-97.4878, -64.1885, 8.88471, 0.66", "-97.5686, -64.6721, 9.17198, 0.66", "-97.6102, -65.2314, 9.50206, 0.52", "-97.6593, -65.9733, 9.94706, 0.52", "-97.6799, -66.6509, 10.3444, 0.44", "-97.6796, -67.2454, 10.6878, 0.37", "-97.7142, -68.1691, 11.2202, 0.37", "-97.7804, -68.8963, 11.6548, 0.29", "-97.9165, -69.6304, 12.1365, 0.29", "-103.069, -74.6131, 13.5857, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-86.6014, -57.3979, 4.69451, 1.11", "-87.4158, -57.7319, 4.85601, 1.11", "-88.049, -58.0484, 4.96753, 1.11", "-89.332, -58.7355, 5.19952, 0.88", "-90.3105, -59.231, 5.37472, 0.88", "-91.7997, -59.9246, 5.63654, 0.88", "-93.3547, -60.5819, 5.89468, 0.88", "-94.2068, -60.9369, 6.03373, 0.88", "-94.9996, -61.258, 6.14145, 0.81", "-95.8912, -61.6048, 6.23807, 0.81", "-96.5361, -61.8298, 6.30287, 0.81", "-97.6827, -62.1896, 6.41934, 0.96", "-98.2813, -62.3961, 6.47544, 0.96", "-98.8921, -62.6701, 6.51765, 0.96", "-99.4695, -63.0222, 6.53658, 0.96", "-100.221, -63.5746, 6.54978, 0.96", "-100.471, -63.768, 6.54819, 0.96", "-101.238, -64.3457, 6.52106, 0.88", "-102.201, -64.982, 6.45899, 0.88", "-102.891, -65.4189, 6.40517, 1.11", "-103.587, -65.8614, 6.34762, 1.11", "-104.392, -66.393, 6.26513, 0.96", "-105.072, -66.8839, 6.21552, 0.96", "-106.004, -67.6268, 6.18093, 0.88", "-107.073, -68.5626, 6.13127, 0.88", "-107.897, -69.3199, 6.05233, 0.96", "-108.556, -69.9354, 5.95728, 0.96", "-109.498, -70.784, 5.79068, 0.88", "-109.945, -71.1634, 5.68814, 0.74", "-110.952, -71.9576, 5.41556, 0.96", "-111.844, -72.5902, 5.16263, 1.11", "-112.571, -73.0786, 4.96806, 1.25", "-113.202, -73.504, 4.81772, 1.25", "-114.218, -74.2064, 4.59972, 1.03", "-115.588, -75.2179, 4.38509, 0.88", "-116.579, -76.0234, 4.28171, 0.88", "-117.577, -76.8935, 4.19873, 0.88", "-118.41, -77.6291, 4.12772, 0.88", "-119.215, -78.31, 4.05959, 1.33", "-119.849, -78.794, 4.01338, 1.33", "-120.605, -79.3307, 3.95323, 1.18", "-121.138, -79.6861, 3.90546, 0.96", "-122.098, -80.2791, 3.82822, 0.96", "-122.985, -80.7639, 3.77155, 0.96", "-124.179, -81.3257, 3.73415, 0.88", "-125.216, -81.7072, 3.7487, 0.81", "-125.799, -81.8649, 3.78939, 0.81", "-126.48, -82.0224, 3.8572, 0.74", "-126.984, -82.1558, 3.91687, 0.74", "-127.625, -82.3812, 4.00074, 0.74", "-128.541, -82.8237, 4.12594, 0.74", "-129.05, -83.1771, 4.18959, 1.11", "-129.822, -83.9346, 4.26683, 1.11", "-130.765, -85.0709, 4.33257, 0.88", "-131.375, -85.9173, 4.36437, 0.88", "-131.84, -86.6288, 4.38103, 0.88", "-132.481, -87.6216, 4.39632, 0.81", "-133.367, -88.904, 4.37572, 0.81", "-133.823, -89.5053, 4.34842, 1.18", "-134.328, -90.1489, 4.29023, 1.33", "-134.877, -90.7993, 4.2085, 1.33", "-135.781, -91.7761, 4.05741, 0.88", "-136.681, -92.6664, 3.87973, 0.81", "-137.626, -93.5301, 3.68936, 0.81", "-138.75, -94.507, 3.44601, 0.81", "-139.603, -95.2163, 3.23566, 0.81", "-140.408, -95.8658, 3.02926, 1.11", "-140.897, -96.2551, 2.89739, 1.25", "-141.481, -96.7186, 2.74055, 2.14", "-142.044, -97.1917, 2.57028, 2.5", "-142.816, -97.8302, 2.33676, 1.92", "-143.926, -98.8828, 1.94805, 1.11", "-144.4, -99.3943, 1.76153, 0.96", "-145.049, -100.161, 1.49462, 1.4", "-145.879, -101.194, 1.10701, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-17.0877, -130.329, -4.57646, 0.37", "-16.8415, -133.244, -2.89014, 0.37", "-16.7362, -134.0, -2.46945, 0.52", "-16.5794, -134.929, -1.98421, 0.66", "-16.3931, -135.988, -1.45681, 0.37", "-16.2453, -136.771, -1.07405, 0.44", "-16.0639, -137.684, -0.639851, 0.44", "-15.7812, -138.78, -0.215718, 0.29", "-15.4843, -139.809, 0.205076, 0.29", "-15.171, -140.676, 0.594692, 0.59", "-14.8249, -141.426, 0.952344, 0.59", "-14.3734, -142.212, 1.35269, 0.37", "-13.8592, -142.958, 1.75028, 0.66", "-13.3372, -143.591, 2.11401, 0.52", "-12.5123, -144.444, 2.63184, 0.37", "-11.8629, -145.046, 3.00348, 0.37", "-10.8671, -145.937, 3.53217, 0.37", "-9.88248, -146.796, 4.0205, 1.03", "-9.1567, -147.426, 4.35656, 1.18", "-8.46128, -148.031, 4.65108, 0.81", "-7.90552, -148.52, 4.86769, 0.52", "-6.86533, -149.441, 5.2717, 0.52", "-5.8785, -150.349, 5.65202, 0.59", "-5.00686, -151.204, 5.95207, 0.59", "-4.2923, -151.972, 6.17465, 0.81", "-3.71001, -152.638, 6.34489, 0.81", "-3.06775, -153.41, 6.51863, 0.66", "-2.6024, -153.999, 6.63244, 0.29", "-1.53656, -155.429, 6.87327, 0.52", "-0.628155, -156.675, 7.0708, 1.03", "-0.300893, -157.131, 7.13528, 1.47", "0.301471, -157.929, 7.25087, 1.62", "1.11981, -158.9, 7.40939, 1.03", "1.91113, -159.74, 7.58906, 0.29", "2.67476, -160.474, 7.79252, 0.29", "3.57389, -161.266, 8.0331, 0.37", "4.51088, -162.081, 8.2846, 0.66", "4.99197, -162.496, 8.42043, 0.81", "5.74707, -163.134, 8.65549, 0.96", "6.31279, -163.606, 8.84682, 0.44", "6.7569, -163.975, 9.01291, 0.29", "7.60486, -164.674, 9.36818, 0.29", "8.2356, -165.256, 9.64657, 0.59", "8.82972, -165.88, 9.92254, 0.74", "9.29778, -166.431, 10.1485, 0.74", "9.9163, -167.251, 10.4533, 0.74", "10.4074, -167.966, 10.6908, 0.44", "11.0551, -168.991, 10.9984, 0.29", "11.4373, -169.633, 11.1716, 0.66", "11.916, -170.451, 11.3742, 0.88", "12.3661, -171.208, 11.557, 0.96", "13.0124, -172.267, 11.8298, 0.66", "13.6763, -173.353, 12.1188, 0.37", "14.4644, -174.579, 12.4708, 0.74", "14.9045, -175.242, 12.6696, 0.81", "15.4098, -176.018, 12.9045, 0.37", "16.0779, -177.1, 13.2242, 0.37", "16.6465, -178.07, 13.5015, 0.37", "17.1167, -178.901, 13.7295, 0.37", "17.4931, -179.597, 13.9085, 0.52", "17.9472, -180.419, 14.111, 0.52", "18.4236, -181.258, 14.3058, 0.37", "18.9194, -182.14, 14.4874, 0.37", "19.5031, -183.147, 14.7001, 0.81", "19.861, -183.701, 14.8308, 0.88", "20.4807, -184.55, 15.0561, 0.59", "21.0223, -185.23, 15.2552, 0.37", "21.5809, -185.876, 15.4612, 0.37", "22.2969, -186.656, 15.7325, 0.44", "23.7715, -188.15, 16.3032, 0.44", "24.7442, -189.028, 16.6839, 1.18", "25.4791, -189.642, 16.977, 1.47", "26.3007, -190.288, 17.2912, 1.47", "27.5199, -191.23, 17.736, 1.18", "28.4741, -192.007, 18.0565, 0.29", "29.0733, -192.534, 18.2366, 0.29", "29.5368, -192.963, 18.3509, 0.29", "30.3886, -193.802, 18.4879, 0.59", "31.2309, -194.711, 18.5577, 0.66", "31.7058, -195.279, 18.5545, 0.74", "32.1966, -195.939, 18.5268, 0.59", "32.7346, -196.748, 18.4808, 0.44", "33.3788, -197.781, 18.4069, 0.29", "33.7528, -198.476, 18.3502, 0.37", "34.2974, -199.638, 18.2409, 0.52", "34.6484, -200.525, 18.1756, 1.03", "34.9867, -201.451, 18.0989, 1.55", "35.275, -202.253, 18.0435, 1.55", "35.9887, -204.275, 17.9056, 0.44", "36.4845, -205.596, 17.8108, 0.37", "37.7802, -208.555, 17.5784, 0.29", "38.1148, -209.186, 17.5336, 0.29", "39.1778, -210.822, 17.4578, 1.47", "39.6185, -211.358, 17.448, 1.92", "40.5342, -212.228, 17.4463, 2.06", "41.9734, -213.316, 17.4077, 0.81", "43.9215, -214.49, 17.28, 0.29", "45.1717, -215.188, 17.1666, 0.29", "46.8067, -216.072, 17.0304, 0.44", "47.5965, -216.511, 16.9937, 0.52", "49.4266, -217.589, 16.9999, 0.29", "50.7255, -218.418, 17.1044, 0.88", "51.4402, -218.922, 17.2502, 0.74", "52.9877, -220.207, 17.8586, 0.29", "53.9851, -221.14, 18.4599, 0.29", "54.9012, -222.071, 19.1595, 0.59", "55.4618, -222.686, 19.6709, 0.66", "56.4967, -223.88, 20.686, 0.29", "57.5279, -225.132, 21.695, 0.29", "58.2173, -226.033, 22.3076, 0.29", "58.858, -226.966, 22.8293, 1.03", "59.3361, -227.698, 23.1698, 1.47", "59.7857, -228.408, 23.4348, 1.18", "60.641, -229.791, 23.8397, 0.22", "61.4211, -231.071, 24.1634, 0.22", "62.4358, -232.724, 24.5352, 0.22", "62.8724, -233.405, 24.6916, 0.52", "63.632, -234.544, 24.9583, 0.29", "64.3596, -235.598, 25.201, 0.29", "64.8319, -236.236, 25.3416, 0.88", "65.4685, -237.091, 25.5606, 0.88", "66.3923, -238.383, 25.9082, 0.29", "66.8008, -238.978, 26.0889, 0.29", "67.481, -240.002, 26.4771, 0.96", "67.9288, -240.676, 26.8111, 1.4", "68.3808, -241.357, 27.2117, 1.77", "68.6543, -241.756, 27.4853, 1.77", "69.7201, -243.233, 28.5851, 0.22", "70.7995, -244.648, 29.754, 0.22", "71.6611, -245.672, 30.6667, 0.88", "72.0597, -246.115, 31.0651, 1.33", "72.4859, -246.556, 31.4461, 1.33", "73.4821, -247.534, 32.2803, 0.22", "74.7542, -248.717, 33.2526, 0.22", "76.1502, -249.996, 34.2019, 0.22", "77.4549, -251.216, 34.9887, 0.22", "78.2266, -251.96, 35.4186, 0.74", "78.6485, -252.388, 35.635, 0.88", "79.1517, -252.933, 35.8622, 0.52", "80.0555, -254.03, 36.1972, 0.22", "80.5107, -254.655, 36.3475, 0.88", "81.0007, -255.391, 36.5171, 1.33", "81.3795, -256.001, 36.6606, 1.33", "82.2383, -257.491, 37.0173, 0.29", "83.1991, -259.311, 37.4743, 0.29", "83.642, -260.214, 37.7239, 0.44", "84.0098, -261.005, 37.9667, 0.59", "84.3313, -261.729, 38.2096, 0.59", "84.8268, -262.885, 38.6299, 0.22", "85.3159, -264.07, 39.0766, 0.22", "85.6211, -264.794, 39.3535, 0.74", "85.8105, -265.225, 39.5131, 0.88", "86.0779, -265.779, 39.7048, 0.88", "86.6197, -266.862, 40.0822, 0.22", "87.6066, -268.702, 40.7184, 0.22", "88.0642, -269.511, 40.9781, 0.52", "88.3705, -270.039, 41.1313, 0.66", "88.8596, -270.861, 41.3553, 0.44", "97.3222, -279.443, 42.973, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-17.0877, -130.329, -4.57646, 2.28", "-17.8376, -131.637, -4.39951, 2.28", "-18.5476, -132.753, -4.18785, 1.62", "-19.452, -134.076, -3.93126, 1.33", "-20.3518, -135.317, -3.71247, 0.88", "-20.7895, -135.888, -3.62353, 0.88", "-21.4789, -136.723, -3.50905, 1.03", "-22.8427, -138.209, -3.34089, 1.03", "-24.0094, -139.337, -3.24794, 0.96", "-24.9274, -140.148, -3.2271, 0.88", "-25.7063, -140.84, -3.26051, 1.11", "-26.5517, -141.679, -3.36903, 1.33", "-27.2094, -142.486, -3.52521, 1.55", "-27.7291, -143.316, -3.7278, 1.25", "-28.101, -144.162, -3.94945, 0.96", "-28.4158, -145.335, -4.2492, 0.88", "-28.6427, -146.8, -4.62272, 0.88", "-28.778, -148.371, -5.00695, 0.88", "-28.8471, -149.756, -5.32911, 1.03", "-28.8782, -151.053, -5.61084, 1.03", "-28.901, -152.579, -5.90822, 1.03", "-28.9133, -153.971, -6.14518, 1.25", "-28.9086, -155.579, -6.36438, 1.55", "-28.8781, -156.809, -6.48661, 1.55", "-28.7843, -158.508, -6.60071, 1.33", "-28.6787, -159.898, -6.66246, 1.33", "-28.5891, -161.139, -6.70158, 1.11", "-28.4926, -162.466, -6.6824, 1.11", "-28.422, -163.926, -6.61521, 0.96", "-28.412, -165.009, -6.54089, 0.96", "-28.4654, -166.574, -6.38139, 0.88", "-28.6048, -168.636, -6.1256, 0.88", "-28.7763, -170.422, -5.86231, 1.03", "-28.9666, -172.01, -5.59627, 1.25", "-29.1813, -173.519, -5.32423, 1.33", "-29.3711, -174.706, -5.09989, 1.62", "-29.5578, -175.926, -4.85184, 2.5", "-29.6348, -176.589, -4.71636, 2.8", "-29.7072, -177.412, -4.58664, 3.02", "-29.7406, -178.184, -4.4553, 3.02", "-29.7568, -178.702, -4.36928, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-2.30366, -53.3719, -7.46833, 0.81", "-2.61434, -54.8816, -7.39787, 0.81", "-2.90498, -55.8976, -7.302, 0.66", "-3.30762, -57.0327, -7.17283, 0.66", "-3.77856, -58.2214, -7.03163, 0.52", "-3.97432, -58.6964, -6.97561, 0.52", "-4.49348, -59.9476, -6.83229, 0.74", "-5.00878, -61.2199, -6.62961, 0.74", "-5.46744, -62.2722, -6.47054, 0.88", "-6.00701, -63.4126, -6.3239, 0.59", "-6.36464, -64.1557, -6.25916, 1.03", "-6.69089, -64.8852, -6.20503, 1.25", "-7.00819, -65.743, -6.14861, 1.03", "-7.33666, -66.8513, -6.08602, 0.66", "-7.58093, -67.7553, -6.04075, 0.66", "-7.83207, -68.6882, -6.00921, 0.81", "-8.10968, -69.7802, -6.00583, 0.81", "-8.30711, -70.6943, -6.04667, 0.66", "-8.45964, -71.6626, -6.13858, 0.52", "-8.52557, -72.2375, -6.23166, 0.52", "-8.59841, -72.942, -6.36662, 0.52", "-8.7093, -73.9459, -6.5856, 0.66", "-8.82759, -74.8575, -6.79351, 0.66", "-8.97561, -75.8205, -7.02162, 0.59", "-9.16456, -76.8763, -7.2609, 1.18", "-9.3207, -77.7959, -7.46012, 1.55", "-9.48946, -78.6752, -7.63105, 1.99", "-9.77321, -79.7389, -7.80946, 2.73", "-10.0435, -80.5247, -7.92064, 2.87", "-10.3414, -81.257, -8.02345, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-2.30366, -53.3719, -7.46833, 0.52", "-1.09957, -55.3304, -9.12388, 0.52", "-0.839338, -55.7915, -9.4694, 0.52", "0.0620839, -57.3163, -10.6051, 0.52", "0.792654, -58.4485, -11.4477, 0.66", "1.27041, -59.1422, -11.9337, 0.66", "1.70727, -59.7289, -12.3272, 0.44", "2.24397, -60.5369, -12.8742, 0.88", "2.71773, -61.2954, -13.3362, 1.33", "3.23022, -62.1129, -13.7767, 1.47", "3.83563, -63.0593, -14.394, 1.03", "4.61882, -64.5251, -15.5615, 0.44", "4.8644, -65.4101, -16.4936, 0.44", "4.9163, -66.4143, -17.9149, 0.37", "4.86802, -67.1378, -19.1539, 0.37", "4.85329, -68.0667, -21.0018, 0.37", "4.92185, -68.6769, -22.3864, 0.74", "5.04907, -69.0943, -23.4159, 0.96", "5.3413, -69.6793, -24.8053, 0.96", "5.96874, -70.7462, -27.2082, 0.44", "6.45861, -71.4839, -28.7105, 1.33", "7.16121, -72.5008, -30.5743, 1.55", "7.79361, -73.4375, -32.1913, 1.33", "8.62316, -74.7168, -34.2051, 0.81", "8.97173, -75.2659, -34.9743, 1.25", "9.40905, -75.9479, -35.7966, 0.88", "9.85044, -76.7139, -36.5802, 0.37", "10.1975, -77.3891, -37.1441, 0.81", "10.5329, -78.1123, -37.6716, 1.03", "10.7415, -78.5482, -37.946, 1.03", "11.5129, -80.0615, -38.8355, 0.29", "11.92, -80.831, -39.2493, 0.29", "12.4892, -81.8301, -39.7271, 1.84", "13.0364, -82.6738, -40.1178, 2.14", "14.5749, -84.7624, -41.119, 0.29", "15.3749, -85.7231, -41.5829, 0.81", "16.1891, -86.5893, -41.9964, 0.81", "17.0449, -87.3995, -42.404, 0.52", "18.2294, -88.4021, -42.9755, 1.25", "19.0117, -89.0131, -43.3663, 1.4", "21.0272, -90.5265, -44.3712, 0.22", "22.263, -91.4483, -44.9485, 0.22", "23.6527, -92.5019, -45.5542, 1.4", "24.5137, -93.2009, -45.9046, 2.21", "24.9017, -93.5467, -46.0429, 2.21", "27.3785, -95.9811, -46.806, 0.22", "28.037, -96.6664, -46.9946, 0.74", "28.6194, -97.301, -47.1712, 1.03", "29.5582, -98.3984, -47.472, 0.59", "31.7458, -101.104, -48.199, 0.22", "34.5242, -104.62, -49.1817, 0.22", "35.5011, -105.869, -49.5748, 0.81", "36.2294, -106.793, -49.8844, 0.96", "38.6048, -109.802, -50.957, 0.22", "40.1038, -111.661, -51.6926, 0.22", "40.9421, -112.688, -52.1578, 0.88", "41.78, -113.684, -52.6755, 0.88", "44.1549, -116.469, -54.2001, 0.15", "45.937, -118.505, -55.2627, 0.15", "46.9805, -119.656, -55.8714, 0.15", "47.9258, -120.705, -56.4114, 1.62", "48.5111, -121.382, -56.7367, 1.92", "48.9689, -121.925, -56.9625, 1.92", "51.9051, -125.533, -58.3039, 0.22", "52.527, -126.304, -58.5548, 0.66", "52.9968, -126.903, -58.7348, 0.88", "53.4796, -127.514, -58.9219, 0.88", "55.0546, -129.509, -59.6966, 0.15", "56.2572, -131.123, -60.5307, 0.15", "56.9193, -132.103, -61.1518, 0.81", "57.3292, -132.802, -61.627, 1.03", "57.6462, -133.434, -62.08, 1.03", "58.5164, -135.553, -63.6998, 0.22", "59.2357, -137.849, -65.5855, 0.22", "59.5017, -138.782, -66.4164, 0.22", "59.8794, -140.133, -67.6949, 1.03", "60.0801, -140.834, -68.3652, 1.62", "60.2917, -141.543, -69.0812, 1.62", "60.6896, -142.738, -70.3636, 1.03", "61.5881, -145.189, -73.1127, 0.22", "62.0324, -146.336, -74.5442, 0.44", "62.307, -146.966, -75.3704, 0.44", "62.9355, -148.357, -77.2033, 0.66", "63.2629, -149.058, -78.0974, 0.96", "63.6571, -149.868, -79.1047, 0.37", "64.9606, -152.467, -82.1905, 0.66", "65.2473, -153.001, -82.8016, 0.66", "66.3393, -154.943, -85.0312, 0.22", "66.952, -155.969, -86.1463, 0.22", "67.5297, -156.884, -87.1085, 0.81", "68.1078, -157.709, -87.9313, 0.96", "68.5028, -158.246, -88.3106, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "29.4558, 194.634, -36.8955, 0.37", "31.3232, 193.764, -34.7476, 0.37", "31.7043, 193.587, -34.3093, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "29.4558, 194.634, -36.8955, 0.22", "30.4759, 196.802, -36.9973, 0.22", "30.9961, 197.98, -37.1063, 0.22", "31.3944, 198.912, -37.2149, 0.74", "31.5344, 199.258, -37.2589, 0.74", "32.1834, 200.858, -37.4625, 0.15", "32.6033, 201.894, -37.5942, 0.15", "32.9102, 202.64, -37.7784, 0.66", "33.0641, 203.101, -37.876, 0.88", "33.2264, 203.629, -37.9568, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-11.0556, 42.4344, 1.36429, 0.66", "-11.3628, 43.8852, 1.16483, 0.66", "-11.4316, 44.4356, 1.11277, 0.96", "-11.5085, 45.0819, 1.06409, 0.96", "-11.6072, 45.9653, 1.00908, 0.59", "-11.685, 46.7485, 0.966673, 0.59", "-11.7618, 47.6748, 0.921821, 0.59", "-11.8392, 49.0232, 0.900759, 0.59", "-11.8551, 49.6596, 0.893349, 0.52", "-11.8575, 50.6107, 0.886272, 0.88", "-11.8598, 51.2998, 0.875846, 1.11", "-11.8803, 52.1215, 0.852688, 1.11", "-11.9176, 53.0677, 0.827085, 0.74", "-11.98, 54.0593, 0.801558, 0.74", "-12.0732, 55.3284, 0.77333, 0.74", "-12.1557, 56.2033, 0.748747, 0.52", "-12.2648, 57.1383, 0.70847, 0.52", "-12.3527, 57.8113, 0.670312, 0.96", "-12.486, 58.804, 0.591284, 1.11", "-12.6893, 60.2751, 0.447251, 1.11", "-12.8221, 61.2413, 0.338853, 1.11", "-12.938, 62.2047, 0.238154, 0.81", "-13.0241, 63.052, 0.155597, 0.74", "-13.0925, 63.9354, 0.078151, 0.74", "-13.1328, 64.7644, 0.0187557, 0.44", "-13.1603, 65.4663, -0.016222, 0.44", "-13.2093, 66.6224, -0.0395581, 0.74", "-13.2421, 67.4211, -0.0381535, 0.74", "-13.2711, 68.2705, -0.0290751, 0.37", "-13.2745, 69.1527, -0.0146154, 0.74", "-13.2668, 69.922, -0.0329741, 0.96", "-13.2505, 70.8031, -0.0915911, 0.96", "-13.2278, 71.7709, -0.209346, 0.81", "-13.1984, 72.6785, -0.350164, 0.52", "-13.1552, 73.6262, -0.522156, 0.52", "-13.0651, 74.8692, -0.769947, 1.03", "-13.0026, 75.5297, -0.909113, 1.55", "-12.9401, 76.1266, -1.04117, 1.69", "-12.8984, 76.5156, -1.12693, 1.69", "-12.7899, 77.4781, -1.32104, 0.37", "-12.693, 78.2844, -1.45132, 0.44", "-12.6245, 78.7051, -1.49165, 0.44", "-12.5293, 79.1903, -1.52327, 0.44", "-12.3536, 79.9941, -1.5563, 0.29", "-12.2664, 80.3359, -1.56856, 0.59", "-12.0909, 80.9163, -1.58786, 0.44", "-11.803, 81.8293, -1.61486, 0.29", "-11.5506, 82.6758, -1.6363, 1.18", "-11.4235, 83.1314, -1.64559, 1.18", "-11.2384, 83.8154, -1.66108, 0.52", "-11.0622, 84.4715, -1.67601, 0.29", "-10.8547, 85.2213, -1.67066, 0.29", "-10.6791, 85.9015, -1.62666, 0.29", "-10.579, 86.3473, -1.57611, 0.29", "-10.4095, 87.2361, -1.4428, 0.81", "-10.2749, 88.0158, -1.3047, 0.44", "-10.1319, 88.7627, -1.178, 0.22", "-9.95282, 89.5161, -1.06097, 0.44", "-9.87741, 89.8049, -1.01338, 0.44", "-9.72038, 90.4244, -0.908017, 0.29", "-9.59167, 90.9845, -0.808463, 0.29", "-9.41326, 91.749, -0.689943, 0.29", "-9.29572, 92.2365, -0.632885, 0.29", "-9.1398, 92.8638, -0.567414, 0.66", "-9.01654, 93.3739, -0.50884, 0.66", "-8.86563, 94.0184, -0.452128, 0.74", "-8.73262, 94.7201, -0.386214, 0.37", "-8.64691, 95.2696, -0.331646, 0.37", "-8.53223, 96.0369, -0.279961, 0.52", "-8.44312, 96.6155, -0.264647, 0.59", "-8.30574, 97.4952, -0.254393, 0.44", "-8.20615, 98.115, -0.253611, 0.29", "-8.13058, 98.5498, -0.251007, 0.29", "-7.96514, 99.5113, -0.232856, 1.11", "-7.87204, 100.062, -0.215532, 1.25", "-7.80653, 100.455, -0.198505, 1.25", "-7.65484, 101.281, -0.162516, 0.66", "-7.5462, 101.773, -0.157223, 0.29", "-7.35136, 102.538, -0.159366, 0.29", "-7.1569, 103.222, -0.168463, 0.29", "-6.96227, 103.84, -0.182286, 0.29", "-6.64873, 104.763, -0.21235, 0.96", "-6.51155, 105.163, -0.232801, 1.47", "-6.40435, 105.506, -0.256006, 1.47", "-6.34879, 105.707, -0.272909, 1.47", "-6.21082, 106.298, -0.321391, 0.74", "-6.0697, 106.976, -0.371252, 0.29", "-5.94687, 107.671, -0.416263, 0.52", "-5.83256, 108.313, -0.453611, 0.74", "-5.666, 109.129, -0.494722, 0.44", "-5.5148, 109.779, -0.523655, 0.29", "-5.39467, 110.235, -0.542321, 0.29", "-5.20214, 110.861, -0.564687, 0.66", "-5.04903, 111.308, -0.581522, 0.74", "-4.82441, 111.939, -0.606678, 0.74", "-4.57832, 112.645, -0.629338, 0.29", "-4.37174, 113.277, -0.645376, 0.29", "-3.98662, 114.55, -0.670982, 0.29", "-3.752, 115.421, -0.642312, 0.52", "-3.62606, 115.947, -0.603819, 1.18", "-3.53235, 116.405, -0.555751, 1.4", "-3.40621, 117.15, -0.458265, 1.4", "-3.32734, 117.736, -0.371186, 0.66", "-3.16106, 119.108, -0.162431, 0.29", "-3.04513, 119.972, -0.0498507, 0.29", "-2.95862, 120.492, -0.0124028, 0.37", "-2.82206, 121.191, -0.00213828, 0.37", "-2.65953, 121.911, -0.0238029, 0.37", "-2.33119, 123.183, -0.118896, 0.37", "-1.9254, 124.562, -0.297967, 0.37", "-1.49409, 125.898, -0.488634, 1.33", "-1.26318, 126.539, -0.594457, 1.99", "-1.06761, 127.046, -0.68725, 1.99", "-0.984115, 127.261, -0.729191, 1.99", "-0.828159, 127.657, -0.806372, 1.99", "-0.498996, 128.484, -0.951168, 0.59", "-0.108601, 129.447, -1.08276, 0.29", "0.172865, 130.121, -1.13609, 0.59", "0.394759, 130.642, -1.16038, 0.59", "0.86629, 131.736, -1.17866, 0.37", "1.12074, 132.345, -1.17072, 0.37", "1.51289, 133.332, -1.12801, 0.37", "1.95203, 134.521, -1.04405, 0.74", "2.10964, 135.011, -1.00863, 0.74", "2.24474, 135.518, -0.966312, 0.88", "2.39586, 136.255, -0.899639, 0.44", "2.58908, 137.529, -0.811718, 0.29", "2.65375, 138.21, -0.80302, 0.52", "2.71893, 139.474, -0.866352, 1.25", "2.73159, 140.012, -0.908977, 1.62", "2.73506, 140.364, -0.955093, 1.62", "2.73516, 141.088, -1.08401, 0.96", "2.73852, 142.165, -1.3298, 0.29", "2.7575, 142.784, -1.48614, 0.29", "2.80464, 143.536, -1.67144, 0.29", "2.85955, 144.326, -1.8399, 0.74", "2.88055, 144.685, -1.89845, 0.96", "2.90151, 145.102, -1.94491, 0.96", "2.9486, 146.159, -2.03389, 0.52", "3.01018, 147.619, -2.16455, 0.37", "3.04927, 148.62, -2.25088, 0.29", "3.07277, 149.564, -2.33725, 0.66", "3.08251, 150.197, -2.40819, 0.66", "3.08596, 151.384, -2.56499, 0.29", "3.08672, 151.973, -2.64775, 0.29", "3.09549, 153.524, -2.87034, 0.29", "3.12976, 155.213, -3.10672, 1.99", "3.13922, 155.597, -3.15446, 2.28", "3.14806, 156.14, -3.20845, 1.55", "3.15424, 156.736, -3.23712, 0.88", "3.1535, 157.71, -3.22602, 0.22", "3.14601, 158.167, -3.19906, 0.22", "3.1252, 159.003, -3.1179, 0.66", "3.11174, 159.531, -3.06652, 0.66", "3.09554, 160.425, -2.98933, 0.29", "3.07424, 161.854, -2.8966, 0.22", "3.08159, 162.578, -2.85999, 0.22", "3.10888, 163.344, -2.83478, 0.52", "3.18978, 164.302, -2.82564, 0.44", "3.2988, 165.136, -2.83579, 0.44", "3.46258, 166.098, -2.87267, 0.44", "3.78602, 167.588, -2.95251, 0.22", "4.05658, 168.697, -3.01871, 0.66", "4.30166, 169.595, -3.07719, 1.77", "4.44435, 170.069, -3.10973, 1.77", "4.58528, 170.494, -3.13948, 1.77", "4.82198, 171.117, -3.18261, 0.88", "5.11024, 171.81, -3.20234, 0.29", "5.31361, 172.28, -3.19727, 0.52", "5.82868, 173.499, -3.15412, 0.22", "6.12358, 174.193, -3.13333, 0.52", "6.45825, 174.975, -3.12058, 0.52", "7.18167, 176.695, -3.1151, 0.22", "7.72851, 178.009, -3.13209, 0.37", "8.08205, 178.874, -3.14674, 0.37", "8.46313, 179.837, -3.17116, 1.92", "8.63003, 180.279, -3.18965, 2.21", "8.78823, 180.737, -3.22621, 2.21", "8.96138, 181.275, -3.33661, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-11.0556, 42.4344, 1.36429, 0.66", "-10.626, 43.8628, 1.61095, 0.66", "-10.3621, 44.7325, 1.75375, 0.81", "-10.1716, 45.3797, 1.87804, 0.37", "-9.95805, 46.1592, 2.03138, 0.29", "-9.59358, 47.466, 2.27944, 0.29", "-9.36011, 48.2311, 2.42553, 0.29", "-9.09053, 48.9666, 2.54835, 0.29", "-8.6684, 49.9367, 2.7299, 0.29", "-8.29044, 50.7328, 2.88549, 0.29", "-7.91368, 51.5257, 3.04, 0.74", "-7.65227, 52.0587, 3.1509, 0.74", "-7.15527, 52.9617, 3.34494, 0.29", "-6.86069, 53.4803, 3.46314, 0.37", "-6.18467, 54.6871, 3.72664, 0.37", "-5.82792, 55.3694, 3.87877, 0.37", "-5.46375, 56.175, 4.05367, 0.37", "-5.3177, 56.5462, 4.13213, 0.37", "-5.08678, 57.2232, 4.27643, 0.22", "-4.88099, 57.8804, 4.41528, 0.22", "-4.69892, 58.399, 4.52034, 0.66", "-4.49723, 59.0228, 4.61551, 0.96", "-2.27278, 66.4678, 5.13181, 0.96", "1.62335, 73.0161, 7.12927, 0.96", "4.62856, 79.6804, 10.0389, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "32.5827, 10.4685, 6.83868, 0.66", "33.2387, 8.97424, 7.25136, 0.66", "33.4214, 8.49263, 7.34975, 0.66", "33.7248, 7.75646, 7.52562, 0.88", "34.283, 6.5776, 7.86237, 0.88", "34.6912, 5.83211, 8.11351, 0.88", "35.0933, 5.21534, 8.35065, 1.03", "35.5711, 4.54813, 8.62069, 1.03", "36.2995, 4.04619, 9.00867, 0.88", "36.9071, 3.93724, 9.2887, 0.88", "37.4349, 3.9098, 9.53329, 0.88", "38.2664, 3.84759, 9.95255, 0.81", "39.2089, 3.66139, 10.4938, 0.81", "39.7971, 3.42374, 10.8538, 0.81", "40.5308, 2.92597, 11.2968, 0.74", "41.304, 2.26447, 11.7592, 0.88", "41.9859, 1.58847, 12.1505, 0.88", "42.7105, 0.758244, 12.5546, 0.52", "43.0763, 0.320637, 12.726, 0.52", "43.5386, -0.159438, 12.8602, 0.52", "44.152, -0.670395, 12.959, 0.52", "44.8741, -1.13307, 13.0056, 0.74", "45.6196, -1.53309, 13.0131, 0.74", "46.5748, -1.98319, 12.9929, 0.74", "47.8426, -2.52831, 12.9582, 0.74", "48.7252, -2.8847, 12.922, 0.74", "49.4275, -3.1326, 12.8891, 0.74", "50.1979, -3.32752, 12.8443, 0.74", "50.651, -3.40456, 12.8278, 0.88", "51.9382, -3.52422, 12.7823, 0.88", "53.037, -3.58748, 12.7554, 0.88", "54.3951, -3.67222, 12.7398, 0.66", "55.3844, -3.74629, 12.7554, 0.66", "57.9218, -3.94141, 12.8622, 0.59", "58.7996, -4.01182, 12.9162, 0.52", "60.1289, -4.08547, 13.0122, 0.52", "60.9324, -4.0863, 13.0728, 0.52", "61.8131, -4.01121, 13.1231, 0.52", "62.8715, -3.8576, 13.1725, 0.52", "63.5795, -3.73745, 13.2102, 0.52", "64.7301, -3.58341, 13.2955, 0.52", "65.9776, -3.41391, 13.3965, 0.52", "67.143, -3.28641, 13.5074, 0.52", "68.2189, -3.246, 13.6412, 0.52", "69.4301, -3.33137, 13.8455, 0.52", "70.2482, -3.5106, 14.041, 0.52", "70.9956, -3.75278, 14.2961, 0.52", "71.4934, -3.92282, 14.5028, 0.52", "72.1205, -4.11493, 14.7881, 0.52", "73.3918, -4.40718, 15.4202, 0.29", "75.673, -4.72668, 16.6068, 0.29", "77.751, -4.86045, 17.7043, 0.29", "78.8163, -4.83859, 18.2763, 0.29", "79.5836, -4.78368, 18.6913, 0.44", "80.4, -4.6546, 19.1439, 0.59", "80.9147, -4.49254, 19.463, 0.59", "81.7682, -3.89829, 20.0445, 0.59", "82.2366, -3.37951, 20.3298, 0.59", "90.8033, -6.12083, 23.6271, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "32.5827, 10.4685, 6.83868, 1.11", "33.8908, 10.0848, 6.94283, 1.11", "34.6927, 9.74726, 7.00971, 1.11", "35.6212, 9.38614, 6.9976, 1.25", "36.3487, 9.16944, 6.9522, 1.47", "37.3494, 8.97552, 6.86018, 1.4", "38.2476, 8.88126, 6.75867, 1.4", "39.2672, 8.81127, 6.59225, 1.18", "40.6701, 8.9486, 6.28467, 1.18", "41.6467, 9.22895, 6.01435, 1.18", "42.4865, 9.53669, 5.75721, 1.18", "42.9858, 9.72396, 5.60318, 0.88", "43.4828, 9.86516, 5.46283, 0.88", "44.2558, 9.93436, 5.28322, 0.88", "45.4229, 9.77946, 5.08414, 1.11", "46.3029, 9.5399, 4.95035, 1.11", "47.1904, 9.23326, 4.82021, 1.11", "48.1904, 8.83495, 4.68221, 1.25", "49.2071, 8.3807, 4.55301, 1.33", "49.6757, 8.15181, 4.50108, 1.47", "50.4485, 7.78633, 4.43232, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-145.879, -101.194, 1.10701, 0.59", "-145.9, -102.616, 0.453819, 0.59", "-145.897, -103.223, 0.203034, 0.59", "-145.874, -103.76, -0.00218808, 0.52", "-145.835, -104.384, -0.222279, 0.52", "-145.81, -105.062, -0.446663, 0.88", "-145.785, -105.816, -0.686395, 1.03", "-145.77, -106.278, -0.7937, 1.03", "-145.716, -107.096, -0.973769, 1.03", "-145.647, -107.801, -1.12329, 0.29", "-145.601, -108.304, -1.22602, 0.29", "-145.575, -108.721, -1.30634, 0.29", "-145.569, -109.509, -1.45456, 0.59", "-145.595, -110.163, -1.54093, 0.74", "-145.637, -110.634, -1.57987, 0.88", "-145.695, -111.094, -1.60493, 0.88", "-145.758, -111.523, -1.61367, 0.88", "-145.874, -112.1, -1.60823, 0.81", "-146.172, -113.345, -1.58169, 0.37", "-146.331, -114.019, -1.5619, 1.03", "-146.486, -114.696, -1.51461, 1.33", "-146.632, -115.319, -1.45321, 1.33", "-146.834, -116.118, -1.35765, 1.03", "-147.017, -116.79, -1.2711, 0.74", "-147.191, -117.369, -1.21157, 0.37", "-147.423, -118.141, -1.09032, 0.74", "-147.563, -118.589, -1.00759, 0.74", "-147.726, -119.127, -0.944302, 0.59", "-147.834, -119.531, -0.926937, 0.37", "-147.975, -120.106, -0.960842, 0.37", "-148.216, -121.021, -1.13253, 0.66", "-148.409, -121.652, -1.32528, 0.74", "-148.783, -122.701, -1.7178, 0.52", "-148.947, -123.133, -1.90243, 0.52", "-149.179, -123.642, -2.13042, 1.33", "-149.483, -124.271, -2.43006, 1.55", "-149.886, -125.102, -2.80437, 1.99", "-150.137, -125.608, -2.99091, 2.21", "-150.472, -126.248, -3.17672, 1.99", "-150.896, -127.021, -3.39278, 1.11", "-151.351, -127.905, -3.65265, 0.37", "-151.693, -128.66, -3.88305, 1.11", "-151.851, -129.041, -4.00569, 1.25", "-152.051, -129.533, -4.16452, 1.25", "-152.506, -130.61, -4.54206, 0.29", "-152.802, -131.291, -4.79779, 0.29", "-153.102, -131.914, -5.03095, 0.44", "-153.428, -132.558, -5.27582, 0.59", "-153.819, -133.321, -5.55489, 0.88", "-154.147, -133.958, -5.77488, 0.96", "-154.5, -134.575, -5.96402, 0.66", "-154.974, -135.317, -6.14493, 0.37", "-155.335, -135.849, -6.25943, 0.29", "-155.728, -136.412, -6.34596, 0.29", "-156.065, -136.91, -6.39828, 0.29", "-156.528, -137.588, -6.43695, 0.29", "-157.225, -138.521, -6.4747, 0.74", "-157.763, -139.174, -6.45954, 1.03", "-158.429, -139.939, -6.40301, 2.28", "-158.953, -140.499, -6.33574, 2.8", "-159.456, -141.029, -6.26835, 3.09", "-160.268, -141.911, -6.17097, 1.84", "-161.21, -142.92, -6.06304, 0.29", "-161.67, -143.441, -6.01223, 0.29", "-162.273, -144.181, -5.96597, 0.29", "-162.877, -144.992, -5.9273, 0.29", "-163.283, -145.665, -5.91152, 0.88", "-163.593, -146.269, -5.91199, 1.11", "-163.838, -146.783, -5.93653, 0.81", "-164.033, -147.228, -5.95982, 0.52", "-164.329, -147.977, -6.00332, 0.29", "-164.656, -148.866, -6.05164, 0.29", "-164.915, -149.627, -6.0948, 0.29", "-165.062, -150.038, -6.11774, 0.29", "-165.338, -150.857, -6.16469, 0.81", "-165.571, -151.617, -6.21103, 1.11", "-165.735, -152.214, -6.25022, 0.88", "-165.964, -153.061, -6.30854, 0.29", "-166.238, -154.094, -6.37838, 0.29", "-166.516, -155.01, -6.46803, 0.29", "-166.626, -155.342, -6.50811, 0.29", "-166.889, -156.131, -6.62355, 0.74", "-167.082, -156.693, -6.71947, 0.74", "-167.345, -157.483, -6.86916, 0.44", "-167.642, -158.398, -7.0578, 0.29", "-167.797, -158.851, -7.15509, 0.29", "-167.997, -159.488, -7.26788, 0.29", "-168.193, -160.262, -7.37412, 0.29", "-168.283, -160.714, -7.41091, 0.74", "-168.356, -161.138, -7.42134, 0.74", "-168.475, -161.913, -7.39084, 0.44", "-168.623, -162.791, -7.33762, 0.29", "-168.757, -163.557, -7.26239, 0.74", "-168.856, -164.095, -7.20238, 1.11", "-168.956, -164.549, -7.15108, 1.69", "-169.046, -164.928, -7.11202, 1.92", "-169.178, -165.475, -7.06909, 1.92", "-169.373, -166.292, -7.04202, 1.62", "-169.61, -167.278, -7.02975, 0.29", "-169.796, -168.064, -7.0367, 0.22", "-169.964, -168.712, -7.04897, 0.22", "-170.208, -169.584, -7.08101, 0.59", "-170.427, -170.304, -7.12063, 0.74", "-170.599, -170.805, -7.15047, 0.74", "-170.838, -171.449, -7.17844, 0.44", "-171.07, -171.997, -7.19435, 0.29", "-171.345, -172.547, -7.18035, 0.29", "-171.995, -173.661, -7.08049, 0.44", "-172.381, -174.233, -7.01828, 0.59", "-172.771, -174.764, -6.95808, 0.59", "-173.238, -175.367, -6.90808, 0.52", "-173.963, -176.261, -6.86187, 1.33", "-174.568, -176.977, -6.85016, 2.06", "-175.14, -177.663, -6.87169, 2.21", "-175.559, -178.206, -6.92169, 2.21", "-176.172, -179.084, -7.05322, 0.81", "-176.549, -179.711, -7.19226, 0.29", "-176.841, -180.275, -7.35702, 0.44", "-177.023, -180.704, -7.49307, 0.44", "-177.254, -181.334, -7.69123, 0.29", "-177.427, -181.804, -7.85147, 0.29", "-177.646, -182.387, -8.04929, 0.29", "-177.808, -182.768, -8.17335, 0.74", "-177.978, -183.117, -8.26737, 0.88", "-178.198, -183.531, -8.35552, 0.88", "-178.551, -184.213, -8.45743, 0.29", "-178.896, -184.907, -8.50551, 0.29", "-179.209, -185.624, -8.49454, 0.29", "-179.543, -186.499, -8.44398, 0.52", "-179.689, -186.914, -8.40561, 0.52", "-179.928, -187.678, -8.30591, 0.29", "-180.057, -188.215, -8.20809, 0.29", "-180.247, -189.313, -7.96816, 0.59", "-180.331, -189.943, -7.80654, 0.29", "-180.386, -190.36, -7.67765, 0.29", "-180.488, -190.942, -7.46403, 0.74", "-180.706, -191.712, -7.12346, 0.88", "-180.952, -192.289, -6.83478, 0.29", "-181.258, -192.817, -6.53693, 0.29", "-181.712, -193.47, -6.16726, 0.96", "-182.1, -193.977, -5.90984, 1.11", "-182.61, -194.6, -5.66574, 1.11", "-183.166, -195.295, -5.47324, 0.29", "-183.529, -195.805, -5.37859, 0.22", "-183.822, -196.306, -5.34012, 0.44", "-184.103, -196.891, -5.34862, 0.44", "-184.492, -197.86, -5.44828, 0.22", "-184.712, -198.457, -5.55081, 0.22", "-184.865, -198.897, -5.65573, 0.22", "-185.041, -199.39, -5.79326, 0.59", "-185.167, -199.745, -5.89546, 0.74", "-185.554, -200.783, -6.22469, 0.29", "-185.765, -201.332, -6.40981, 0.29", "-186.035, -202.014, -6.64651, 0.44", "-186.281, -202.666, -6.87498, 0.44", "-186.59, -203.535, -7.16597, 0.52", "-186.764, -204.034, -7.3223, 0.96", "-186.941, -204.535, -7.46127, 1.4", "-187.138, -205.041, -7.59862, 1.4", "-187.64, -206.227, -7.83606, 0.29", "-188.159, -207.393, -7.98984, 0.22", "-188.425, -207.97, -8.0221, 0.37", "-188.857, -208.896, -8.00776, 0.37", "-189.299, -209.813, -7.93956, 0.29", "-189.906, -211.019, -7.7822, 0.74", "-190.242, -211.639, -7.66501, 1.11", "-190.632, -212.295, -7.52213, 1.25", "-191.05, -212.938, -7.38225, 1.11", "-191.459, -213.523, -7.26399, 0.59", "-192.004, -214.268, -7.14802, 0.29", "-192.339, -214.706, -7.13198, 0.29", "-192.974, -215.535, -7.14312, 0.22", "-193.396, -216.098, -7.17079, 0.22", "-193.632, -216.418, -7.1908, 0.66", "-193.996, -216.921, -7.22356, 0.66", "-194.729, -217.975, -7.27252, 0.29", "-195.172, -218.611, -7.28993, 0.29", "-195.639, -219.247, -7.29498, 0.29", "-196.129, -219.874, -7.29392, 0.66", "-196.524, -220.35, -7.29147, 0.66", "-197.162, -221.082, -7.28783, 0.22", "-197.603, -221.57, -7.28921, 0.22", "-198.346, -222.387, -7.30331, 0.22", "-199.652, -223.824, -7.3728, 0.22", "-200.045, -224.285, -7.42023, 0.22", "-200.456, -224.806, -7.5013, 1.11", "-200.68, -225.126, -7.57432, 1.11", "-200.784, -225.312, -7.625, 1.11", "-200.996, -225.798, -7.77451, 0.66", "-201.261, -226.6, -8.05032, 0.22", "-201.388, -227.095, -8.22181, 0.52", "-201.593, -228.235, -8.61765, 0.22", "-201.753, -229.164, -8.93217, 0.22", "-201.82, -229.563, -9.06238, 0.59", "-201.905, -230.071, -9.21969, 0.59", "-202.026, -230.806, -9.44898, 0.52", "-202.191, -231.888, -9.79375, 0.22", "-202.275, -232.522, -10.0004, 0.22", "-202.311, -232.901, -10.1258, 0.22", "-202.342, -233.331, -10.2705, 0.66", "-202.351, -233.959, -10.4438, 0.81", "-202.293, -234.665, -10.5839, 0.59", "-202.052, -235.706, -10.6764, 1.25", "-201.831, -236.269, -10.6794, 1.69", "-201.668, -236.554, -10.6587, 1.92", "-200.937, -237.489, -10.5188, 1.18", "-200.195, -238.215, -10.3374, 0.22", "-199.299, -238.899, -10.1153, 0.22", "-198.681, -239.286, -9.96744, 0.22", "-197.902, -239.722, -9.80999, 0.22", "-197.339, -240.019, -9.72338, 0.66", "-196.923, -240.234, -9.69201, 0.66", "-195.802, -240.809, -9.65997, 0.22", "-195.377, -241.032, -9.6656, 0.37", "-194.948, -241.301, -9.68147, 0.37", "-194.605, -241.563, -9.69487, 0.22", "-194.088, -242.019, -9.72021, 0.22", "-197.451, -249.458, -10.2762, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-145.879, -101.194, 1.10701, 0.37", "-147.282, -100.956, 1.65094, 0.37", "-147.879, -100.877, 1.84794, 0.37", "-149.178, -100.738, 2.17427, 0.29", "-150.175, -100.659, 2.38072, 0.44", "-151.143, -100.608, 2.55104, 0.66", "-151.704, -100.591, 2.62979, 0.81", "-152.197, -100.59, 2.66711, 0.81", "-153.742, -100.615, 2.70741, 0.22", "-154.231, -100.63, 2.69306, 0.22", "-155.112, -100.66, 2.66434, 0.74", "-155.835, -100.682, 2.63567, 0.88", "-157.045, -100.717, 2.55386, 0.22", "-157.55, -100.716, 2.48133, 0.22", "-158.026, -100.71, 2.37672, 0.22", "-158.572, -100.706, 2.22593, 0.74", "-159.158, -100.722, 2.02145, 0.88", "-159.814, -100.786, 1.70698, 0.88", "-161.293, -101.061, 0.784235, 0.22", "-161.824, -101.188, 0.40798, 0.22", "-162.266, -101.302, 0.065741, 0.74", "-162.831, -101.462, -0.45183, 0.74", "-163.996, -101.828, -1.44904, 0.29", "-164.357, -101.947, -1.73506, 0.29", "-164.939, -102.151, -2.1602, 0.88", "-165.632, -102.366, -2.62542, 1.03", "-167.705, -102.902, -3.90237, 0.22", "-169.659, -103.36, -5.00198, 0.22", "-170.442, -103.525, -5.38324, 0.22", "-170.904, -103.619, -5.5923, 1.11", "-171.458, -103.737, -5.82392, 1.11", "-172.045, -103.866, -6.01633, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-29.7568, -178.702, -4.36928, 0.81", "-28.0304, -179.638, -4.48008, 0.81", "-26.6296, -180.315, -4.59104, 0.52", "-24.6282, -181.208, -4.77503, 0.52", "-23.7542, -181.61, -4.86341, 0.37", "-22.009, -182.437, -5.04899, 0.37", "-21.3164, -182.777, -5.12425, 0.66", "-20.6983, -183.081, -5.21274, 0.88", "-20.1849, -183.339, -5.2813, 0.88", "-18.8785, -184.129, -5.45913, 0.59", "-17.7259, -184.974, -5.61766, 0.66", "-16.5837, -185.94, -5.77112, 0.74", "-15.8849, -186.526, -5.86291, 0.74", "-15.3409, -186.947, -5.9321, 0.52", "-14.4499, -187.561, -6.04652, 0.29", "-13.4924, -188.088, -6.15174, 0.96", "-12.6188, -188.497, -6.2312, 1.03", "-12.0417, -188.745, -6.26922, 1.03", "-10.7291, -189.283, -6.3227, 0.66", "-10.1779, -189.514, -6.34754, 0.52", "-8.91243, -190.066, -6.40806, 0.59", "-7.66182, -190.682, -6.47183, 0.59", "-6.51526, -191.324, -6.5402, 0.52", "-5.56976, -191.92, -6.60803, 0.52", "-4.58222, -192.605, -6.69201, 0.96", "-3.96685, -193.041, -6.76292, 1.18", "-2.94642, -193.747, -6.91203, 0.66", "-1.73957, -194.515, -7.09799, 0.37", "-0.982326, -194.95, -7.21914, 0.37", "0.589974, -195.763, -7.4775, 0.88", "1.98368, -196.455, -7.66763, 1.03", "3.04366, -196.981, -7.7949, 0.81", "4.0212, -197.467, -7.88838, 0.52", "5.16909, -198.042, -7.96855, 0.52", "6.06651, -198.511, -8.00429, 0.52", "7.30014, -199.249, -8.01959, 0.52", "8.33605, -199.945, -8.00651, 1.33", "8.98098, -200.425, -7.99118, 1.69", "9.71742, -201.046, -7.96689, 1.69", "10.9374, -202.15, -8.02198, 1.11", "12.2571, -203.371, -8.18074, 0.44", "13.1113, -204.13, -8.3663, 0.44", "13.8028, -204.719, -8.56338, 0.29", "14.5914, -205.364, -8.85571, 0.29", "16.3819, -206.747, -9.63413, 1.03", "16.9044, -207.126, -9.89353, 1.4", "17.4678, -207.54, -10.2087, 1.4", "19.2569, -208.986, -11.3083, 0.22", "20.202, -209.794, -11.8998, 0.52", "20.6664, -210.209, -12.1828, 0.52", "21.4599, -210.995, -12.642, 0.29", "22.5677, -212.131, -13.2939, 0.29", "23.246, -212.837, -13.6787, 0.29", "23.9292, -213.588, -14.0745, 0.66", "24.4323, -214.151, -14.3311, 0.81", "24.7979, -214.563, -14.505, 0.81", "25.4143, -215.206, -14.7546, 0.59", "26.119, -215.866, -15.0155, 0.29", "26.7897, -216.52, -15.2267, 0.29", "27.5362, -217.373, -15.4215, 0.66", "28.0935, -218.127, -15.5089, 0.66", "28.8099, -219.285, -15.5276, 0.29", "29.1961, -220.033, -15.4725, 0.29", "29.8154, -221.403, -15.2832, 0.66", "30.227, -222.376, -15.0865, 0.66", "30.7129, -223.649, -14.7616, 0.44", "31.1465, -224.946, -14.383, 1.47", "31.4494, -225.991, -14.0565, 1.84", "31.6103, -226.605, -13.8651, 1.84", "31.7053, -226.986, -13.7648, 1.84", "31.9595, -227.958, -13.5272, 1.33", "32.3007, -229.129, -13.2683, 0.52", "32.4931, -229.746, -13.1399, 0.52", "32.7593, -230.584, -12.9672, 0.52", "33.1855, -231.923, -12.6792, 0.29", "33.4135, -232.616, -12.5216, 0.29", "33.7617, -233.604, -12.2745, 0.29", "34.107, -234.515, -12.0288, 0.44", "34.6421, -235.742, -11.6915, 0.44", "35.1595, -236.741, -11.435, 0.44", "35.5747, -237.438, -11.283, 1.33", "36.0681, -238.238, -11.1602, 1.84", "36.5621, -238.946, -11.0837, 1.84", "37.4125, -240.046, -10.9968, 0.96", "38.5479, -241.388, -10.9294, 0.22", "39.5271, -242.473, -10.9018, 0.22", "40.9285, -243.936, -10.9016, 0.22", "41.783, -244.758, -10.9151, 0.22", "42.7645, -245.602, -10.9419, 0.22", "43.6396, -246.282, -10.9866, 0.44", "44.6923, -247.027, -11.0732, 0.88", "45.7112, -247.714, -11.1992, 1.03", "46.3791, -248.159, -11.2971, 1.03", "47.1558, -248.714, -11.4222, 0.88", "47.9342, -249.24, -11.5562, 0.29", "48.4973, -249.595, -11.6367, 0.29", "49.3639, -250.094, -11.7096, 0.29", "50.459, -250.674, -11.7467, 0.37", "51.2873, -251.075, -11.728, 0.37", "52.0164, -251.394, -11.6785, 0.29", "53.4207, -251.933, -11.5283, 0.29", "54.5232, -252.324, -11.4056, 0.81", "55.1423, -252.542, -11.3444, 0.81", "56.3285, -253.027, -11.2268, 0.59", "57.1852, -253.474, -11.1237, 0.29", "57.9126, -253.928, -11.0187, 0.29", "58.6681, -254.464, -10.8899, 0.66", "59.2198, -254.883, -10.7699, 0.66", "60.8467, -256.166, -10.3333, 0.29", "61.8663, -256.974, -9.98843, 0.29", "62.9065, -257.812, -9.54029, 0.29", "63.6818, -258.456, -9.13531, 0.29", "64.4391, -259.085, -8.6703, 0.88", "64.7796, -259.366, -8.45366, 0.88", "65.68, -260.118, -7.83353, 0.66", "66.9051, -261.136, -6.91762, 0.29", "67.5286, -261.67, -6.41086, 0.29", "68.2619, -262.322, -5.8056, 0.66", "68.8807, -262.893, -5.33366, 0.44", "78.5131, -271.569, -3.01534, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-29.7568, -178.702, -4.36928, 2.14", "-30.4455, -180.399, -4.78866, 2.14", "-31.016, -181.95, -5.1251, 1.33", "-31.534, -183.477, -5.41328, 1.03", "-31.8766, -184.639, -5.59338, 1.03", "-32.0928, -185.432, -5.70435, 1.25", "-32.2966, -186.208, -5.80522, 1.25", "-32.6064, -187.675, -5.94883, 0.96", "-32.8358, -188.865, -6.02553, 0.96", "-33.2571, -190.95, -6.14193, 0.88", "-33.5154, -192.178, -6.18361, 0.88", "-33.7336, -193.343, -6.19787, 0.96", "-33.9457, -194.674, -6.18543, 0.96", "-34.1073, -195.811, -6.14397, 0.74", "-34.2484, -196.907, -6.07969, 0.52", "-34.3581, -197.817, -6.00395, 0.52", "-34.4864, -198.935, -5.88913, 0.37", "-34.5851, -199.826, -5.79354, 0.74", "-34.7121, -200.794, -5.69064, 0.74", "-34.8697, -201.882, -5.5628, 1.03", "-34.983, -202.574, -5.47904, 1.18", "-35.153, -203.53, -5.37352, 1.33", "-35.2997, -204.25, -5.29418, 1.33", "-35.4509, -205.017, -5.16814, 1.18", "-35.6864, -206.134, -4.86226, 0.96", "-35.8806, -206.988, -4.53218, 0.81", "-36.0759, -207.849, -4.12833, 0.81", "-36.2647, -208.795, -3.62868, 0.81", "-36.4168, -209.623, -3.17639, 0.59", "-36.6415, -210.992, -2.45619, 0.66", "-36.7553, -211.576, -2.18393, 0.66", "-37.0156, -212.621, -1.81307, 1.18", "-37.3962, -213.693, -1.63083, 1.47", "-37.8337, -214.614, -1.64728, 1.55", "-38.2483, -215.28, -1.76825, 1.55", "-38.9392, -216.171, -2.04314, 1.4", "-39.9158, -217.194, -2.42209, 1.18", "-41.095, -218.269, -2.85863, 0.66", "-42.087, -219.108, -3.19897, 0.74", "-43.3889, -220.158, -3.60466, 1.18", "-44.4796, -221.0, -3.8918, 1.25", "-45.6407, -221.864, -4.12727, 1.25", "-46.6426, -222.578, -4.25566, 1.25", "-47.6723, -223.238, -4.33168, 1.33", "-48.2727, -223.567, -4.34229, 1.33", "-49.2566, -224.01, -4.27968, 1.03", "-50.1165, -224.318, -4.16044, 0.74", "-50.8078, -224.523, -4.03523, 0.59", "-51.723, -224.794, -3.84328, 0.59", "-52.6411, -225.112, -3.63406, 0.88", "-53.565, -225.555, -3.38725, 1.18", "-54.4391, -226.106, -3.09638, 1.18", "-55.2175, -226.701, -2.79299, 1.18", "-55.952, -227.367, -2.49208, 1.18", "-56.5184, -227.952, -2.2618, 1.18", "-57.3051, -228.853, -1.94928, 0.81", "-57.7772, -229.451, -1.77136, 0.59", "-58.2127, -230.079, -1.61943, 0.52", "-59.047, -231.42, -1.3624, 0.96", "-59.529, -232.322, -1.2374, 1.18", "-59.9304, -233.165, -1.16044, 1.18", "-60.4413, -234.315, -1.11024, 0.88", "-60.9335, -235.475, -1.0956, 0.59", "-61.3397, -236.521, -1.09193, 0.59", "-61.7861, -237.74, -1.08793, 0.59", "-62.2023, -238.877, -1.08244, 0.74", "-62.6864, -240.149, -1.07473, 1.33", "-63.1208, -241.253, -1.06743, 1.69", "-63.6765, -242.615, -1.05884, 1.77", "-63.9953, -243.417, -1.05529, 1.77", "-64.3859, -244.428, -1.07709, 1.77", "-64.7095, -245.402, -1.12367, 1.47", "-65.0135, -246.486, -1.20509, 1.03", "-65.2875, -247.554, -1.31175, 1.03", "-65.6004, -248.801, -1.46785, 1.03", "-65.9075, -250.094, -1.63133, 1.11", "-66.1796, -251.314, -1.77329, 1.33", "-66.3865, -252.427, -1.87833, 1.03", "-66.5941, -253.939, -1.98162, 0.81", "-66.699, -254.999, -2.02591, 1.03", "-66.7854, -256.334, -2.04572, 0.81", "-66.8147, -257.063, -2.03718, 0.81", "-66.8529, -259.037, -1.99811, 0.74", "-66.8527, -261.022, -1.94452, 0.74", "-66.8172, -262.62, -1.89513, 0.74", "-66.7698, -264.953, -1.82247, 0.74", "-66.7752, -266.562, -1.78684, 0.74", "-66.8224, -267.604, -1.76902, 1.18", "-66.9568, -268.671, -1.74878, 1.4", "-67.2264, -269.771, -1.71983, 1.4", "-67.6356, -270.805, -1.68141, 1.47", "-68.3168, -271.936, -1.63422, 1.55", "-68.8549, -272.606, -1.61107, 1.55", "-69.8731, -273.64, -1.5735, 1.11", "-71.2221, -274.79, -1.5218, 0.88", "-72.2128, -275.53, -1.45575, 0.88", "-73.3543, -276.284, -1.35282, 1.03", "-74.145, -276.772, -1.27575, 1.03", "-74.7736, -277.169, -1.20649, 1.03", "-75.7023, -277.843, -1.05989, 0.81", "-76.7813, -278.808, -0.84777, 0.59", "-77.9716, -280.149, -0.57719, 0.59", "-78.7278, -281.199, -0.380354, 0.88", "-79.3005, -282.178, -0.205227, 0.88", "-80.0405, -283.724, 0.0411272, 0.74", "-80.4543, -284.793, 0.190273, 0.96", "-80.7887, -285.849, 0.293361, 1.11", "-80.9875, -286.61, 0.35429, 1.11", "-81.1798, -287.412, 0.391332, 0.88", "-81.4528, -288.514, 0.374954, 0.66", "-81.66, -289.287, 0.33515, 0.66", "-82.0059, -290.588, 0.271825, 0.96", "-82.2606, -291.583, 0.220278, 0.96", "-82.5729, -292.857, 0.149234, 0.66", "-82.8574, -294.019, 0.082336, 0.74", "-83.3039, -295.884, -0.00180127, 0.96", "-83.5564, -296.961, -0.016823, 0.96", "-83.8137, -298.085, -0.0251581, 0.96", "-84.1187, -299.372, -0.0575557, 0.66", "-84.5716, -301.273, -0.143177, 0.66", "-84.953, -303.09, -0.27644, 0.66", "-85.1525, -304.177, -0.38927, 0.81", "-85.4564, -306.081, -0.626603, 0.74", "-85.6587, -307.59, -0.846734, 0.74", "-85.8203, -309.185, -1.10442, 0.96", "-85.9199, -310.525, -1.33593, 0.96", "-85.9842, -311.415, -1.48092, 1.62", "-86.0481, -311.902, -1.54085, 1.62", "-86.178, -312.541, -1.56591, 1.62", "-86.4154, -313.475, -1.55253, 1.4", "-86.7151, -314.448, -1.50719, 0.88", "-87.1214, -315.693, -1.42135, 0.59", "-87.6656, -317.385, -1.28232, 0.81", "-88.1059, -318.747, -1.15814, 0.96", "-88.4457, -319.848, -1.06447, 0.96", "-88.8269, -321.177, -0.973285, 1.11", "-89.0755, -322.048, -0.925767, 1.11", "-89.2815, -322.72, -0.900671, 1.33", "-89.4953, -323.373, -0.883746, 1.33", "-89.9208, -324.432, -0.842806, 1.03", "-90.4349, -325.473, -0.785622, 0.66", "-90.8638, -326.247, -0.733437, 0.37", "-91.1881, -326.811, -0.692786, 0.37", "-91.5852, -327.552, -0.635579, 0.37", "-91.9443, -328.257, -0.577207, 1.03", "-92.3337, -329.042, -0.511862, 1.25", "-92.5897, -329.626, -0.460739, 1.25", "-93.0024, -330.722, -0.369892, 0.96", "-93.4631, -332.103, -0.266519, 0.52", "-93.8578, -333.347, -0.186302, 0.52", "-94.3728, -335.083, -0.0930237, 0.52", "-94.7433, -336.498, -0.0255015, 0.81", "-95.0044, -337.532, 0.0272615, 1.03", "-95.2493, -338.465, 0.077278, 1.03", "-95.4459, -339.184, 0.1153, 0.81", "-95.7025, -340.05, 0.156273, 0.81", "-96.1089, -341.263, 0.200361, 0.59", "-96.6231, -342.531, 0.228976, 0.44", "-97.4207, -344.119, 0.267, 0.88", "-97.8301, -344.796, 0.285151, 0.88", "-98.4451, -345.668, 0.310043, 0.59", "-99.0963, -346.404, 0.337042, 0.59", "-100.132, -347.316, 0.363471, 0.59", "-101.251, -348.106, 0.372853, 0.81", "-101.89, -348.478, 0.37536, 0.81", "-102.406, -348.743, 0.375585, 0.81", "-103.571, -349.248, 0.366837, 0.59", "-104.85, -349.688, 0.350069, 0.88", "-106.12, -350.03, 0.323085, 1.03", "-107.332, -350.297, 0.28738, 1.03", "-108.333, -350.468, 0.26119, 0.59", "-109.236, -350.596, 0.248821, 0.59", "-110.003, -350.707, 0.248688, 0.59", "-110.662, -350.799, 0.26914, 0.59", "-111.365, -350.927, 0.300179, 0.59", "-112.285, -351.137, 0.355854, 0.44", "-113.664, -351.542, 0.458728, 0.81", "-114.816, -351.958, 0.565048, 1.11", "-116.073, -352.503, 0.70785, 0.81", "-117.333, -353.146, 0.869859, 0.66", "-117.91, -353.485, 0.948932, 0.66", "-118.605, -353.952, 1.04843, 0.52", "-119.4, -354.542, 1.17277, 0.52", "-120.205, -355.216, 1.30644, 0.52", "-121.014, -355.944, 1.44722, 0.52", "-121.503, -356.429, 1.53694, 1.11", "-122.587, -357.616, 1.72936, 1.4", "-123.174, -358.332, 1.82968, 1.84", "-123.819, -359.201, 1.92275, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-10.3414, -81.257, -8.02345, 0.66", "-10.4302, -83.1979, -7.97353, 0.66", "-10.5057, -84.3939, -7.94893, 0.37", "-10.5479, -85.1931, -7.96199, 0.81", "-10.5816, -86.2258, -8.00014, 1.03", "-10.6113, -87.1235, -8.04065, 1.11", "-10.6491, -88.0814, -8.10045, 0.88", "-10.6946, -89.1844, -8.21141, 0.59", "-10.7144, -90.4681, -8.38285, 0.29", "-10.6991, -91.3987, -8.53371, 0.29", "-10.6703, -91.825, -8.61275, 0.29", "-10.5313, -92.7853, -8.82771, 0.74", "-10.3213, -93.6787, -9.05798, 1.11", "-10.1481, -94.2423, -9.20967, 1.11", "-9.86486, -95.0718, -9.43497, 1.11", "-9.51073, -96.0341, -9.65576, 0.81", "-8.92614, -97.6232, -9.94249, 0.44", "-8.39888, -99.1335, -10.1385, 0.59", "-8.11969, -100.044, -10.2201, 0.88", "-7.88004, -101.002, -10.264, 0.88", "-7.61649, -102.375, -10.2759, 0.81", "-7.439, -103.724, -10.2258, 0.44", "-7.36092, -104.789, -10.134, 1.03", "-7.32988, -105.68, -10.0412, 0.74", "-7.31358, -106.797, -9.93366, 0.52", "-7.31167, -107.662, -9.86613, 0.88", "-7.32531, -108.456, -9.85711, 1.18", "-7.33829, -109.144, -9.86362, 1.18", "-7.36253, -109.931, -9.88073, 0.88", "-7.41024, -111.301, -9.92743, 0.29", "-7.45437, -112.337, -9.97753, 0.29", "-7.52843, -113.82, -10.084, 1.03", "-7.5711, -114.804, -10.1723, 1.47", "-7.59927, -115.425, -10.2292, 1.47", "-7.62514, -116.108, -10.2925, 1.47", "-7.63844, -117.128, -10.3847, 1.25", "-7.63485, -118.376, -10.4818, 0.44", "-7.60757, -119.405, -10.5432, 0.44", "-7.56968, -120.411, -10.6094, 0.44", "-7.54256, -120.928, -10.6455, 0.59", "-7.47525, -122.142, -10.7319, 0.59", "-7.40611, -123.068, -10.8025, 0.37", "-7.34647, -123.84, -10.8611, 0.81", "-7.29273, -124.548, -10.9048, 1.03", "-7.25658, -125.065, -10.9276, 1.03", "-7.22755, -125.707, -10.9413, 0.59", "-7.17553, -126.753, -10.9451, 0.22", "-7.11904, -127.409, -10.9429, 0.22", "-7.03023, -128.183, -10.9377, 0.22", "-6.91842, -129.016, -10.9305, 0.66", "-6.76763, -130.012, -10.9256, 0.88", "-6.51297, -131.466, -10.9242, 0.88", "-6.20302, -133.155, -10.927, 0.96", "-5.96569, -134.427, -10.951, 1.18", "-5.79169, -135.458, -10.9926, 0.66", "-5.65729, -136.303, -11.0316, 0.52", "-5.43619, -137.918, -11.122, 0.52", "-5.29374, -139.164, -11.2026, 0.81", "-5.16498, -140.422, -11.296, 0.52", "-5.06743, -141.363, -11.3628, 0.52", "-4.94429, -142.476, -11.4651, 1.47", "-4.80508, -143.614, -11.5979, 1.77", "-4.68377, -144.493, -11.7377, 1.77", "-4.59717, -144.997, -11.832, 1.77", "-4.42494, -145.832, -11.9949, 1.25", "-4.20402, -146.8, -12.1863, 0.81", "-3.94204, -147.975, -12.424, 0.44", "-3.60521, -149.448, -12.7149, 0.37", "-3.39829, -150.354, -12.8868, 0.52", "-3.13173, -151.449, -13.0861, 0.52", "-2.91837, -152.269, -13.229, 0.66", "-2.61457, -153.348, -13.418, 0.66", "-2.20499, -154.727, -13.7135, 0.88", "-1.83496, -155.884, -14.0037, 1.25", "-1.61388, -156.535, -14.2019, 1.25", "-1.40657, -157.095, -14.3969, 1.25", "-0.972893, -158.193, -14.8232, 1.11", "-0.573378, -159.161, -15.2306, 0.74", "-0.211688, -160.011, -15.6138, 0.29", "4.82071E-4, -160.514, -15.8523, 0.29", "0.499344, -161.741, -16.4184, 0.44", "0.771411, -162.446, -16.7138, 0.88", "0.989742, -163.087, -16.9393, 1.33", "1.2199, -163.847, -17.1535, 1.47", "1.43881, -164.673, -17.3367, 1.47", "1.61842, -165.409, -17.4649, 1.25", "1.84928, -166.414, -17.6028, 0.44", "2.17877, -167.89, -17.7095, 0.29", "2.42003, -169.061, -17.721, 0.29", "2.6402, -170.257, -17.671, 0.29", "2.7913, -171.212, -17.5895, 0.74", "2.87448, -171.888, -17.5072, 0.88", "2.9724, -173.26, -17.2918, 0.96", "2.97841, -174.434, -17.0889, 1.03", "2.91901, -175.319, -16.9496, 1.03", "2.80915, -176.201, -16.8122, 0.59", "2.66987, -177.142, -16.675, 0.22", "2.58129, -177.736, -16.6077, 0.22", "2.38954, -179.102, -16.5308, 0.96", "2.2787, -179.911, -16.5098, 1.11", "2.17157, -180.801, -16.4646, 1.11", "2.09719, -181.651, -16.3901, 0.59", "2.05102, -182.517, -16.2927, 0.29", "2.03531, -183.255, -16.1879, 0.29", "2.02612, -183.871, -16.0815, 0.29", "2.01427, -185.207, -15.8232, 0.44", "2.0067, -186.339, -15.5731, 0.66", "2.00118, -187.534, -15.2966, 0.66", "2.00738, -188.398, -15.1047, 0.81", "2.02089, -189.359, -14.9145, 0.81", "2.03858, -190.276, -14.7509, 0.52", "2.03317, -191.442, -14.5779, 0.66", "2.01465, -192.306, -14.4568, 0.66", "1.93572, -193.76, -14.3291, 0.37", "1.83266, -195.047, -14.2848, 0.37", "1.72127, -196.075, -14.2993, 1.03", "1.58474, -197.108, -14.3921, 1.47", "1.41912, -198.121, -14.5536, 1.62", "1.05809, -199.929, -14.9594, 0.88", "0.74347, -201.104, -15.3261, 0.59", "0.432325, -201.998, -15.6828, 0.37", "-0.1979, -203.437, -16.3418, 0.29", "-0.419624, -203.862, -16.5347, 0.29", "-0.786957, -204.469, -16.7915, 0.29", "-1.49476, -205.597, -17.1878, 0.29", "-2.19899, -206.662, -17.5621, 0.59", "-2.93202, -207.791, -17.9361, 0.59", "-3.39265, -208.49, -18.1605, 0.44", "-3.96647, -209.328, -18.446, 0.44", "-4.35261, -209.839, -18.67, 0.29", "-4.92174, -210.566, -19.0588, 1.4", "-5.77239, -211.396, -19.6949, 1.62", "-6.57542, -211.962, -20.2798, 1.4", "-7.36732, -212.367, -20.8262, 1.11", "-8.69866, -212.907, -21.6843, 0.81", "-9.43821, -213.184, -22.1545, 0.59", "-10.2512, -213.518, -22.7017, 0.74", "-11.0297, -213.925, -23.2575, 0.81", "-11.6333, -214.445, -23.7262, 0.52", "-12.075, -214.974, -24.106, 0.52", "-12.4775, -215.565, -24.4447, 0.74", "-13.0285, -216.406, -24.9429, 0.74", "-13.3145, -216.928, -25.2153, 0.74", "-13.6029, -217.518, -25.5336, 0.52", "-14.0273, -218.45, -25.9824, 0.52", "-14.2586, -218.962, -26.2101, 0.52", "-14.6984, -219.966, -26.5888, 1.69", "-14.9638, -220.631, -26.784, 2.14", "-15.4416, -222.038, -27.1025, 1.55", "-15.8773, -223.514, -27.3557, 0.29", "-16.1053, -224.378, -27.4676, 0.29", "-16.4008, -225.566, -27.5849, 0.44", "-16.6755, -226.699, -27.6538, 0.59", "-16.9178, -227.705, -27.6888, 0.59", "-17.1623, -228.73, -27.6826, 0.29", "-17.295, -229.281, -27.6804, 0.29", "-17.4775, -230.049, -27.6774, 0.96", "-17.6256, -230.724, -27.6756, 1.03", "-17.8048, -231.663, -27.6795, 0.52", "-17.9951, -232.885, -27.6939, 0.29", "-18.081, -233.581, -27.7039, 0.81", "-18.1636, -234.388, -27.7135, 0.96", "-18.2211, -235.011, -27.7223, 0.96", "-18.3198, -236.102, -27.7404, 0.29", "-18.4544, -237.348, -27.7577, 0.29", "-18.6153, -238.652, -27.8129, 1.47", "-18.7311, -239.564, -27.8706, 1.92", "-18.7829, -240.008, -27.9041, 1.92", "-18.9076, -241.112, -27.98, 1.33", "-19.032, -242.34, -28.0709, 0.29", "-19.1503, -243.593, -28.1741, 0.29", "-19.2342, -244.592, -28.2708, 0.29", "-19.4069, -246.765, -28.5004, 0.29", "-19.5098, -248.243, -28.6473, 1.4", "-19.5605, -249.144, -28.7289, 2.14", "-19.5778, -249.537, -28.7609, 2.28", "-19.5973, -250.179, -28.7998, 2.28", "-19.6203, -250.842, -28.8185, 1.92", "-19.6655, -251.803, -28.7652, 0.88", "-19.7398, -253.271, -28.5918, 0.29", "-19.7845, -254.167, -28.4367, 0.29", "-19.8308, -255.171, -28.2291, 0.29", "-19.9009, -256.741, -27.8678, 0.29", "-19.9653, -258.35, -27.4958, 0.96", "-20.0001, -259.427, -27.2588, 1.62", "-20.0167, -260.037, -27.1292, 1.62", "-20.0324, -260.612, -27.0208, 1.62", "-20.0715, -261.849, -26.841, 1.11", "-20.1223, -263.368, -26.7696, 0.29", "-20.1774, -264.5, -26.7951, 0.29", "-20.2334, -265.397, -26.8429, 0.59", "-20.2705, -265.842, -26.8768, 0.66", "-20.3265, -266.381, -26.9247, 0.66", "-20.5167, -267.861, -27.0665, 0.29", "-20.7953, -269.576, -27.268, 0.29", "-21.0515, -270.905, -27.4372, 0.96", "-21.2967, -271.952, -27.5666, 1.4", "-21.5007, -272.736, -27.6521, 1.4", "-21.7222, -273.546, -27.726, 1.4", "-22.0264, -274.617, -27.7954, 0.88", "-22.4044, -275.928, -27.871, 0.29", "-22.7448, -277.125, -27.9215, 0.29", "-23.1038, -278.335, -27.9627, 0.44", "-23.3492, -279.1, -27.9772, 0.66", "-23.5586, -279.716, -27.9732, 0.66", "-23.9383, -280.811, -27.9192, 0.29", "-24.163, -281.469, -27.8812, 0.29", "-24.4536, -282.309, -27.8702, 0.29", "-24.8766, -283.461, -27.9347, 0.29", "-25.1318, -284.119, -28.0181, 0.52", "-25.4781, -285.031, -28.1843, 0.66", "-25.7544, -285.941, -28.3328, 0.66", "-26.0511, -287.355, -28.5432, 1.4", "-26.1708, -288.595, -28.7287, 2.28", "-26.1745, -289.829, -28.9176, 2.5", "-26.1098, -290.522, -29.0048, 2.5", "-25.5914, -292.946, -29.2221, 0.22", "-25.2691, -293.923, -29.2586, 0.22", "-24.6989, -295.161, -29.2338, 0.37", "-24.2675, -295.892, -29.179, 0.44", "-23.4525, -296.97, -29.181, 0.29", "-22.5496, -297.964, -29.3377, 0.88", "-22.0249, -298.431, -29.5722, 1.4", "-21.6271, -298.765, -29.8317, 1.4", "-21.1047, -299.243, -30.2897, 1.11", "-19.5227, -300.89, -32.0651, 0.29", "-19.0367, -301.485, -32.7327, 0.29", "-18.3204, -302.528, -33.8746, 0.81", "-17.9778, -303.208, -34.5033, 0.81", "-17.4533, -304.654, -35.6162, 0.22", "-17.2981, -305.262, -35.9984, 0.22", "-17.1424, -306.202, -36.4186, 0.44", "-17.0797, -306.733, -36.6113, 0.59", "-16.8927, -308.959, -37.2568, 0.22", "-16.8434, -309.737, -37.4688, 0.74", "-16.8112, -310.429, -37.6439, 1.03", "-16.7679, -311.168, -37.8159, 1.03", "-16.7222, -311.892, -37.9717, 0.74", "-16.6747, -312.565, -38.1138, 0.37", "-16.5331, -314.273, -38.4824, 0.22", "-16.4098, -315.973, -38.8554, 0.22", "-16.3362, -317.252, -39.1298, 0.88", "-16.293, -318.198, -39.3304, 1.62", "-16.2765, -318.717, -39.4404, 1.84", "-16.272, -319.344, -39.5698, 1.84", "-16.2987, -320.635, -39.822, 0.52", "-16.3705, -321.726, -40.0298, 0.22", "-16.4716, -322.6, -40.1982, 0.22", "-16.5923, -323.353, -40.3416, 0.37", "-16.6524, -323.645, -40.3885, 0.37", "-16.8407, -324.369, -40.5002, 0.22", "-17.0223, -324.958, -40.5865, 0.74", "-17.2451, -325.627, -40.6885, 0.74", "-17.4594, -326.232, -40.7741, 0.59", "-17.9527, -327.542, -40.9443, 0.22", "-18.2014, -328.148, -41.0092, 0.22", "-18.5737, -328.956, -41.0474, 0.59", "-18.8697, -329.538, -41.0316, 0.59", "-19.1851, -330.138, -40.9521, 0.29", "-19.5309, -330.75, -40.8337, 0.22", "-20.0732, -331.594, -40.6846, 0.37", "-20.8004, -332.606, -40.5173, 0.44", "-21.486, -333.325, -40.4734, 0.59", "-22.3987, -334.055, -40.5463, 0.37", "-22.9806, -334.374, -40.6665, 0.22", "-24.485, -334.866, -41.1424, 2.21", "-25.0697, -334.918, -41.389, 2.5", "-27.3883, -334.566, -42.5524, 0.22", "-28.1099, -334.321, -42.9521, 0.22", "-29.093, -333.781, -43.5893, 0.66", "-29.5657, -333.434, -43.9348, 0.66", "-30.2387, -332.841, -44.4694, 0.37", "-31.1793, -331.968, -45.2798, 1.92", "-31.5123, -331.659, -45.5784, 1.92", "-33.22, -330.348, -47.1777, 0.44", "-33.978, -329.882, -47.8942, 0.59", "-34.4347, -329.681, -48.2873, 0.37", "-35.1428, -329.513, -48.7995, 0.37", "-35.8749, -329.423, -49.298, 0.22", "-37.623, -329.389, -50.3236, 0.29", "-38.2319, -329.473, -50.5779, 0.22", "-39.2291, -329.663, -50.9238, 0.22", "-40.6052, -329.917, -51.3591, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-10.3414, -81.257, -8.02345, 0.74", "-12.3691, -82.6724, -7.80425, 0.74", "-13.1737, -83.1781, -7.71735, 0.74", "-14.341, -83.8124, -7.62537, 0.74", "-15.1618, -84.1841, -7.58162, 0.52", "-16.0225, -84.4514, -7.58256, 0.52", "-16.8536, -84.6267, -7.62371, 0.88", "-17.5666, -84.5808, -7.77386, 0.88", "-18.7212, -84.3208, -8.14013, 0.59", "-19.4468, -84.0976, -8.41707, 0.37", "-20.5695, -83.7892, -8.91127, 0.37", "-21.2539, -83.6784, -9.2712, 1.11", "-21.8297, -83.7153, -9.62058, 1.47", "-22.3855, -83.8476, -9.96129, 1.47", "-22.7902, -83.9842, -10.1929, 1.47", "-23.7164, -84.3057, -10.6941, 0.96", "-24.5426, -84.5325, -11.1056, 0.59", "-25.3007, -84.6572, -11.4219, 0.59", "-26.0833, -84.7261, -11.6597, 0.59", "-26.9082, -84.7938, -11.8819, 0.81", "-27.6916, -84.8602, -12.073, 0.81", "-28.3018, -84.9105, -12.1806, 0.81", "-29.0232, -84.997, -12.2842, 0.81", "-29.8108, -85.3441, -12.5076, 0.22", "-30.3228, -86.1372, -12.8843, 0.22", "-30.645, -86.7726, -13.2129, 0.66", "-30.8172, -87.1514, -13.423, 0.88", "-31.0651, -87.7014, -13.7559, 0.88", "-31.4295, -88.3427, -14.2925, 0.44", "-31.9861, -88.9729, -15.0196, 1.4", "-32.5198, -89.3091, -15.6386, 2.14", "-32.7611, -89.3916, -15.9113, 2.58", "-33.2728, -89.4521, -16.4579, 2.36", "-34.667, -89.4387, -17.9318, 1.69", "-35.4034, -89.373, -18.6824, 0.37", "-36.3076, -89.2453, -19.5031, 0.37", "-37.0497, -89.1335, -20.1099, 0.37", "-38.5522, -88.9624, -21.2208, 1.92", "-39.1736, -88.9281, -21.6442, 2.14", "-39.7965, -88.9524, -22.0314, 2.5", "-41.6296, -89.2202, -23.2132, 0.44", "-42.1987, -89.3588, -23.5919, 0.44", "-43.0687, -89.5931, -24.2154, 0.44", "-43.8592, -89.7803, -24.8314, 0.44", "-44.6716, -89.9136, -25.4931, 1.4", "-45.5573, -90.0196, -26.2469, 2.06", "-46.3475, -90.1034, -26.9803, 2.06", "-47.3128, -90.1447, -27.924, 0.66", "-48.0675, -90.1483, -28.7326, 0.81", "-48.8741, -90.149, -29.6821, 0.52", "-49.5222, -90.1923, -30.5944, 1.77", "-49.9448, -90.2805, -31.3321, 2.28", "-51.0809, -90.7989, -33.8848, 1.33", "-51.4187, -91.1034, -34.9077, 1.77", "-51.5902, -91.3231, -35.5699, 1.77", "-51.8775, -91.7676, -36.8531, 0.74", "-52.0898, -92.1305, -37.8755, 0.52", "-52.4187, -92.7119, -39.3535, 0.52", "-52.7597, -93.4096, -40.8438, 0.88", "-53.1595, -94.0828, -42.1936, 1.47", "-53.6108, -94.7526, -43.4476, 0.22", "-53.8583, -95.1017, -44.0454, 0.22", "-54.1845, -95.5797, -44.7563, 0.81", "-54.5017, -96.1018, -45.3969, 0.96", "-54.8986, -96.8005, -46.138, 1.55", "-55.2623, -97.5003, -46.7647, 1.55", "-55.6567, -98.2636, -47.4146, 0.37", "-55.9419, -98.8053, -47.8859, 0.74", "-56.3132, -99.4739, -48.5131, 0.81", "-56.7846, -100.352, -49.3863, 0.29", "-56.9835, -100.773, -49.81, 0.96", "-57.2355, -101.391, -50.4262, 1.33", "-57.5191, -102.257, -51.2904, 0.74", "-57.6834, -102.979, -51.9955, 0.59", "-57.8107, -104.121, -53.063, 0.29", "-57.7873, -104.861, -53.6858, 0.29", "-57.6833, -105.543, -54.2335, 0.29", "-57.5367, -106.068, -54.6073, 1.18", "-57.3374, -106.559, -54.9358, 1.69", "-56.9647, -107.271, -55.3801, 1.33", "-56.365, -108.272, -55.9986, 0.22", "-56.0842, -108.729, -56.2906, 0.22", "-55.7492, -109.322, -56.6682, 0.96", "-55.5456, -109.742, -56.9314, 1.11", "-55.2041, -110.549, -57.4207, 0.52", "-54.7228, -111.853, -58.1801, 0.22", "-54.5191, -112.473, -58.5328, 0.22", "-54.3236, -113.153, -58.9179, 0.88", "-54.2008, -113.65, -59.2214, 1.03", "-54.0122, -114.506, -59.7859, 0.22", "-53.9258, -114.901, -60.0599, 0.22", "-53.7867, -115.476, -60.4746, 0.66", "-53.6147, -116.116, -60.9339, 0.74", "-53.1814, -117.602, -61.9641, 0.22", "-52.8714, -118.686, -62.638, 0.22", "-52.549, -120.07, -63.3908, 0.96", "-52.4512, -120.596, -63.6426, 1.25", "-52.3776, -121.305, -63.9202, 1.25", "-52.3389, -122.361, -64.2358, 0.66", "-52.4006, -123.667, -64.5296, 0.15", "-52.5861, -124.788, -64.7442, 0.37", "-52.7283, -125.311, -64.8492, 0.37", "-53.3875, -127.218, -65.2715, 0.22", "-53.5122, -127.514, -65.3501, 0.74", "-53.8107, -128.142, -65.5502, 0.88", "-54.8326, -130.132, -66.2532, 0.22", "-55.2275, -130.88, -66.5208, 0.74", "-55.6213, -131.605, -66.7746, 0.74", "-56.4844, -133.182, -67.3384, 0.22", "-57.2019, -134.507, -67.7944, 0.22", "-57.9988, -136.032, -68.2407, 0.22", "-58.71, -137.476, -68.5757, 0.22", "-59.078, -138.264, -68.7102, 0.88", "-59.3495, -138.889, -68.7818, 1.11", "-59.5863, -139.526, -68.8106, 1.11", "-60.0794, -141.084, -68.8096, 0.15", "-60.408, -142.348, -68.7846, 0.15", "-60.5658, -143.049, -68.763, 0.81", "-60.6903, -143.662, -68.7419, 0.96", "-61.132, -145.95, -68.9339, 0.22", "-61.3232, -147.024, -69.0546, 0.22", "-61.5216, -148.21, -69.2646, 0.22", "-61.5975, -148.686, -69.3736, 1.18", "-61.6689, -149.139, -69.5082, 1.18", "-62.2465, -152.47, -70.989, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "31.7043, 193.587, -34.3093, 0.37", "32.0416, 192.865, -33.6221, 0.37", "32.3317, 192.326, -33.1115, 0.52", "32.7504, 191.599, -32.4134, 0.74", "33.0977, 191.024, -31.8701, 1.11", "33.3018, 190.7, -31.5566, 1.11", "33.5967, 190.232, -31.0981, 0.81", "34.2486, 189.228, -30.0036, 0.22", "34.5609, 188.737, -29.4755, 0.22", "34.7621, 188.403, -29.1557, 0.66", "34.9679, 188.027, -28.8297, 0.66", "35.1674, 187.633, -28.5131, 0.66", "35.5268, 186.838, -27.8954, 0.44", "35.8424, 186.046, -27.3024, 0.22", "36.1666, 185.16, -26.681, 0.22", "36.3131, 184.727, -26.3949, 0.44", "36.4116, 184.426, -26.2238, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "31.7043, 193.587, -34.3093, 0.22", "33.1529, 193.806, -33.6547, 0.22", "33.4889, 193.878, -33.5199, 0.44", "35.0303, 194.299, -32.9212, 0.22", "35.7001, 194.502, -32.685, 0.59", "36.2236, 194.664, -32.5288, 0.59", "38.4688, 195.359, -31.8587, 0.22", "41.0854, 196.201, -31.1481, 0.22", "42.0285, 196.527, -30.9153, 0.66", "42.7764, 196.813, -30.7629, 0.81", "43.9186, 197.269, -30.5645, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "8.96138, 181.275, -3.33661, 0.59", "10.6742, 182.635, -3.9723, 0.59", "11.231, 183.096, -4.15947, 0.44", "12.3831, 184.106, -4.58107, 0.22", "13.3694, 185.042, -4.9432, 0.81", "13.8873, 185.558, -5.15314, 0.96", "14.1253, 185.801, -5.2578, 0.96", "14.8527, 186.654, -5.60947, 0.22", "15.8536, 188.027, -6.25004, 0.22", "16.6429, 189.308, -6.89628, 1.11", "17.0208, 190.022, -7.25862, 1.47", "17.1736, 190.373, -7.45163, 1.47", "17.6846, 191.908, -8.3069, 0.22", "18.0096, 193.313, -9.10587, 0.22", "18.1343, 194.14, -9.5749, 0.66", "18.1769, 194.55, -9.81678, 0.66", "18.2613, 196.509, -10.9475, 0.22", "18.2494, 198.294, -11.9592, 0.22", "18.1893, 199.31, -12.5393, 0.22", "18.0807, 200.491, -13.2081, 1.47", "17.9872, 201.164, -13.5747, 1.47", "17.558, 203.441, -14.7189, 0.22", "17.3773, 204.182, -15.0659, 0.81", "17.185, 204.803, -15.3375, 0.81", "16.6236, 206.324, -15.9364, 0.22", "16.1153, 207.528, -16.3799, 0.22", "15.534, 208.781, -16.8168, 1.47", "15.2727, 209.298, -17.0121, 1.84", "14.2817, 211.174, -17.7317, 0.22", "13.4845, 212.61, -18.2769, 0.22", "13.1828, 213.107, -18.4715, 0.22", "12.3607, 214.403, -19.0353, 1.55", "11.834, 215.182, -19.4081, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.96138, 181.275, -3.33661, 0.22", "9.99853, 184.176, -3.6501, 0.22", "10.5887, 185.753, -3.79555, 0.22", "11.056, 186.976, -3.89541, 0.96", "11.2601, 187.508, -3.93293, 1.18", "11.4716, 188.057, -3.96611, 1.18", "11.8119, 188.956, -4.01262, 0.22", "12.0634, 189.598, -4.02261, 0.44", "12.1832, 189.926, -4.03238, 0.44", "12.501, 190.869, -4.06708, 0.22", "12.7691, 191.698, -4.09794, 0.44", "13.061, 192.618, -4.13183, 0.44", "13.9037, 195.43, -4.23216, 0.22", "14.6004, 197.799, -4.33918, 0.22", "14.8644, 198.688, -4.39093, 0.66", "15.0105, 199.176, -4.42618, 0.74", "15.252, 199.952, -4.50589, 0.22", "15.8689, 201.846, -4.74373, 0.22", "16.2335, 202.959, -4.90144, 1.03", "16.477, 203.697, -5.01584, 1.25", "16.6607, 204.254, -5.10695, 1.25", "17.2794, 206.129, -5.42689, 0.22", "18.3085, 209.213, -5.96663, 0.22", "18.6611, 210.251, -6.14742, 0.74", "18.8569, 210.851, -6.2363, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.62856, 79.6804, 10.0389, 0.37", "8.3323, 90.5163, 15.8055, 0.37", "13.0521, 100.715, 22.0942, 0.37", "15.2092, 110.478, 30.2741, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.62856, 79.6804, 10.0389, 0.22", "7.78571, 87.2658, 8.18528, 0.37", "11.1482, 94.4274, 5.18059, 0.37", "14.7362, 101.29, 1.69846, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "90.8033, -6.12083, 23.6271, 0.37", "101.367, -8.99653, 25.9702, 0.37", "112.335, -10.2232, 28.0303, 0.37", "123.184, -10.1458, 30.9326, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "90.8033, -6.12083, 23.6271, 0.22", "102.606, -9.54483, 26.9536, 0.37", "115.102, -11.2656, 28.9274, 0.37", "127.355, -13.3392, 31.8285, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "50.4485, 7.78633, 4.43232, 0.52", "51.6584, 7.98949, 4.80577, 0.52", "52.1275, 8.04735, 4.9589, 0.52", "52.6122, 8.0969, 5.15418, 0.52", "53.5395, 8.18294, 5.56033, 0.52", "54.0925, 8.22229, 5.81788, 0.88", "54.9384, 8.26523, 6.20736, 0.88", "55.5657, 8.29303, 6.48721, 0.88", "56.229, 8.24546, 6.80314, 0.81", "56.6501, 8.12044, 6.99601, 0.81", "57.2732, 7.77715, 7.2774, 0.59", "57.7641, 7.38772, 7.47826, 0.59", "58.2867, 6.87803, 7.645, 0.59", "58.8037, 6.32483, 7.7541, 0.74", "59.6063, 5.36834, 7.87053, 0.66", "59.9326, 4.93977, 7.91215, 0.66", "60.4214, 4.23654, 7.97306, 0.52", "60.7522, 3.75023, 8.00967, 0.52", "61.181, 3.14433, 8.04414, 0.81", "61.7147, 2.39001, 8.0773, 0.81", "62.0653, 1.86921, 8.11019, 0.81", "62.4832, 1.18489, 8.15141, 0.81", "62.9747, 0.281128, 8.21232, 0.88", "63.3588, -0.516139, 8.27268, 1.11", "63.5911, -1.04004, 8.31016, 1.11", "64.0086, -2.09175, 8.39131, 0.88", "64.2795, -2.92254, 8.48427, 0.96", "64.4403, -3.5625, 8.59141, 0.96", "64.5406, -4.09073, 8.70908, 0.96", "64.617, -4.56987, 8.83378, 0.66", "64.7371, -5.32292, 9.07559, 0.66", "64.9261, -6.30323, 9.45404, 0.81", "65.1437, -7.07495, 9.79087, 1.11", "65.4658, -7.93849, 10.2089, 0.96", "65.7625, -8.55687, 10.5007, 0.81", "66.2336, -9.34441, 10.8597, 0.81", "66.8433, -10.1668, 11.2098, 0.59", "67.3844, -10.7926, 11.446, 0.37", "67.8956, -11.3338, 11.6216, 0.37", "68.6616, -12.1233, 11.8353, 0.59", "69.0835, -12.5693, 11.9184, 0.88", "69.3171, -12.8325, 11.9443, 1.11", "69.6132, -13.1975, 11.9791, 1.11", "70.0011, -13.7048, 12.0467, 0.74", "70.3148, -14.0931, 12.0985, 0.74", "70.624, -14.4906, 12.1442, 0.74", "71.0927, -15.1286, 12.1815, 0.74", "71.5668, -15.8081, 12.1815, 0.74", "71.9982, -16.4271, 12.1658, 0.66", "72.4083, -17.0082, 12.1346, 0.66", "72.9535, -17.7746, 12.071, 0.96", "73.5943, -18.7045, 11.9623, 1.4", "73.9168, -19.2159, 11.8818, 1.62", "74.2441, -19.7822, 11.7725, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "50.4485, 7.78633, 4.43232, 0.88", "51.2789, 8.37976, 4.91633, 0.88", "52.0303, 8.83503, 5.33592, 0.88", "52.8822, 9.25077, 5.76456, 0.88", "53.8111, 9.61947, 6.17714, 0.88", "54.9164, 9.97926, 6.63181, 0.74", "55.6179, 10.1834, 6.91651, 0.74", "56.6147, 10.3985, 7.30973, 0.88", "57.5128, 10.5407, 7.63861, 0.88", "58.2568, 10.6366, 7.88605, 0.88", "58.9795, 10.7262, 8.11418, 0.66", "59.4862, 10.8133, 8.27528, 0.66", "60.1641, 11.0211, 8.49825, 0.88", "60.5684, 11.2051, 8.64244, 0.88", "60.9544, 11.4225, 8.7879, 0.88", "61.3461, 11.6569, 8.93492, 0.88", "62.0759, 12.0823, 9.20291, 0.59", "62.5955, 12.3527, 9.41301, 0.59", "62.9939, 12.5544, 9.60542, 0.81", "63.5163, 12.8339, 9.90327, 0.81", "63.9155, 13.0726, 10.1683, 0.81", "64.3659, 13.3622, 10.4946, 0.66", "65.0119, 13.7887, 10.9833, 0.59", "65.6951, 14.3386, 11.5648, 0.59", "66.0616, 14.6954, 11.9004, 0.59", "66.4774, 15.1661, 12.2888, 0.44", "66.7376, 15.4789, 12.5135, 0.44", "67.0177, 15.8218, 12.7285, 0.44", "67.7158, 16.6689, 13.2084, 0.44", "68.2698, 17.3086, 13.5617, 0.66", "68.7329, 17.8322, 13.847, 0.66", "69.3055, 18.4758, 14.1907, 0.74", "69.7524, 18.9796, 14.4556, 0.96", "70.0966, 19.3558, 14.6511, 0.96", "70.6063, 19.8567, 14.9072, 0.66", "71.1067, 20.3245, 15.1453, 0.66", "71.9014, 21.0531, 15.5143, 0.59", "72.6371, 21.7362, 15.8826, 0.59", "73.1125, 22.1813, 16.136, 0.81", "73.4729, 22.5256, 16.3406, 0.81", "74.0899, 23.0868, 16.6841, 0.52", "74.5686, 23.4812, 16.9305, 0.52", "75.2057, 23.965, 17.2463, 0.52", "75.7427, 24.3604, 17.5078, 0.52", "76.2575, 24.7323, 17.7509, 0.37", "77.1758, 25.3817, 18.1681, 0.37", "77.7803, 25.8047, 18.4305, 0.59", "78.1664, 26.0605, 18.5798, 0.59", "78.9863, 26.5947, 18.8627, 0.74", "79.414, 26.8769, 19.0116, 0.74", "79.7777, 27.1255, 19.148, 0.74", "80.2955, 27.5191, 19.3809, 0.74", "80.6421, 27.8128, 19.5226, 0.44", "81.1372, 28.2516, 19.6595, 0.44", "81.5628, 28.6202, 19.7253, 0.81", "82.2776, 29.2212, 19.7745, 0.81", "82.8022, 29.6482, 19.7622, 0.66", "83.7172, 30.3755, 19.6979, 0.52", "84.4135, 30.9544, 19.6148, 0.44", "84.8727, 31.3413, 19.5244, 0.44", "85.2732, 31.6882, 19.4202, 0.44", "85.5855, 31.9635, 19.3133, 0.44", "86.1081, 32.3974, 19.1341, 0.74", "86.5658, 32.7216, 19.0718, 0.59", "86.8755, 32.9558, 19.0661, 0.59", "92.7196, 37.1363, 22.8341, 0.59", "98.7509, 41.2189, 26.4362, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-123.819, -359.201, 1.92275, 0.52", "-124.445, -360.655, 1.80328, 0.52", "-124.71, -361.241, 1.75856, 0.29", "-125.074, -362.008, 1.68926, 0.44", "-125.416, -362.721, 1.61883, 0.44", "-125.688, -363.273, 1.55924, 0.29", "-126.098, -364.078, 1.45436, 0.29", "-126.518, -364.843, 1.33394, 0.81", "-126.829, -365.431, 1.22081, 1.18", "-126.99, -365.754, 1.15386, 1.4", "-127.243, -366.291, 1.04306, 1.4", "-127.463, -366.808, 0.942602, 1.11", "-127.9, -367.927, 0.744831, 0.52", "-128.196, -368.805, 0.620065, 0.44", "-128.403, -369.511, 0.540871, 0.74", "-128.643, -370.36, 0.460164, 0.81", "-128.814, -371.001, 0.405538, 0.81", "-128.979, -371.68, 0.353872, 0.74", "-129.191, -372.576, 0.330729, 0.22", "-129.287, -372.99, 0.327499, 0.22", "-129.437, -373.719, 0.324727, 0.22", "-129.548, -374.35, 0.348003, 0.66", "-129.653, -375.006, 0.405492, 0.81", "-129.804, -376.059, 0.545937, 0.66", "-129.918, -377.015, 0.726113, 0.22", "-129.989, -377.866, 0.932427, 0.22", "-130.015, -378.485, 1.1156, 0.22", "-130.039, -379.082, 1.32922, 0.96", "-130.059, -379.387, 1.44481, 1.18", "-130.093, -379.842, 1.61409, 1.18", "-130.13, -380.213, 1.77605, 1.18", "-130.225, -380.922, 2.06428, 0.74", "-130.41, -381.997, 2.44992, 0.22", "-130.482, -382.351, 2.56593, 0.22", "-130.577, -382.764, 2.69582, 0.44", "-130.659, -383.123, 2.7979, 0.44", "-130.857, -384.064, 3.04478, 0.22", "-130.966, -384.657, 3.18222, 0.96", "-131.026, -385.114, 3.27391, 1.18", "-131.073, -385.552, 3.35912, 1.25", "-131.157, -386.388, 3.51302, 0.96", "-131.306, -387.588, 3.70874, 0.29", "-131.442, -388.533, 3.84245, 0.22", "-131.622, -389.601, 3.96193, 0.22", "-131.733, -390.151, 4.01019, 0.81", "-131.845, -390.599, 4.03483, 0.96", "-132.325, -392.153, 4.08085, 0.22", "-132.504, -392.638, 4.0823, 0.22", "-132.817, -393.409, 4.08093, 0.59", "-133.061, -393.972, 4.08061, 0.59", "-133.419, -394.817, 4.08773, 0.52", "-133.698, -395.513, 4.10659, 0.52", "-134.058, -396.456, 4.16226, 0.52", "-134.197, -396.826, 4.19111, 0.96", "-134.427, -397.46, 4.24927, 0.96", "-134.678, -398.174, 4.32301, 0.59", "-135.114, -399.375, 4.48513, 0.22", "-135.557, -400.616, 4.66381, 0.22", "-135.765, -401.197, 4.75284, 0.22", "-135.959, -401.711, 4.83297, 0.96", "-136.096, -402.062, 4.89198, 1.18", "-136.385, -402.759, 5.02254, 0.52", "-137.156, -411.558, 5.31834, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-123.819, -359.201, 1.92275, 0.29", "-125.162, -358.756, 2.1456, 0.29", "-125.884, -358.701, 2.24713, 0.37", "-126.215, -358.759, 2.28649, 0.37", "-126.974, -359.002, 2.39651, 0.37", "-127.703, -359.277, 2.42639, 0.52", "-128.336, -359.531, 2.41647, 0.59", "-129.189, -359.963, 2.34083, 0.59", "-129.945, -360.374, 2.23829, 0.37", "-130.64, -360.762, 2.11799, 0.37", "-131.871, -361.462, 1.85412, 0.37", "-132.436, -361.753, 1.71937, 0.37", "-132.959, -362.0, 1.58998, 0.29", "-133.376, -362.179, 1.49043, 0.29", "-133.847, -362.376, 1.39025, 0.81", "-134.227, -362.55, 1.32521, 0.81", "-134.754, -362.846, 1.3057, 0.81", "-135.647, -363.429, 1.3063, 0.29", "-136.073, -363.744, 1.32158, 0.66", "-136.391, -364.0, 1.35034, 0.66", "-136.686, -364.257, 1.38946, 0.66", "-137.752, -365.239, 1.56442, 0.29", "-138.225, -365.697, 1.64, 0.44", "-138.634, -366.091, 1.70379, 0.29", "-139.122, -366.545, 1.76745, 0.74", "-139.479, -366.852, 1.79031, 0.74", "-140.064, -367.29, 1.79075, 0.52", "-141.094, -367.954, 1.7291, 0.29", "-141.705, -368.309, 1.67153, 0.52", "-142.116, -368.528, 1.60835, 0.52", "-142.974, -368.95, 1.41305, 0.29", "-143.611, -369.232, 1.24917, 0.29", "-143.996, -369.378, 1.14011, 0.59", "-144.451, -369.529, 0.992783, 0.59", "-145.27, -369.787, 0.705503, 0.22", "-145.73, -369.926, 0.552893, 0.29", "-146.425, -370.138, 0.348193, 0.29", "-146.753, -370.244, 0.254396, 0.29", "-147.595, -370.554, 0.0213068, 0.37", "-148.237, -370.857, -0.0942801, 0.37", "-148.902, -371.242, -0.138053, 0.52", "-149.673, -371.776, -0.132485, 1.55", "-150.136, -372.149, -0.108868, 1.92", "-150.58, -372.542, -0.0655151, 1.92", "-151.608, -373.522, 0.101614, 0.29", "-152.282, -374.215, 0.228308, 0.29", "-152.826, -374.815, 0.350572, 0.29", "-153.258, -375.302, 0.460491, 0.74", "-153.473, -375.546, 0.516289, 0.96", "-153.664, -375.753, 0.561153, 1.11", "-154.217, -376.366, 0.687068, 0.52", "-154.565, -376.779, 0.795626, 0.29", "-155.077, -377.376, 0.982223, 0.22", "-155.427, -377.763, 1.11574, 0.44", "-155.728, -378.077, 1.2319, 0.44", "-156.562, -378.939, 1.5659, 0.22", "-157.069, -379.45, 1.77702, 0.22", "-157.556, -379.923, 1.97624, 1.25", "-158.005, -380.349, 2.1701, 1.55", "-158.221, -380.543, 2.25962, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "74.2441, -19.7822, 11.7725, 0.74", "75.4873, -19.9567, 13.0238, 0.74", "75.8466, -20.0331, 13.3722, 0.74", "76.458, -20.2219, 13.9409, 0.59", "77.171, -20.5246, 14.5702, 0.59", "77.8289, -20.8731, 15.1267, 0.59", "78.1568, -21.0636, 15.3966, 0.59", "78.7965, -21.5191, 15.8951, 0.59", "79.3395, -21.9433, 16.3014, 0.81", "80.0608, -22.5026, 16.8345, 0.81", "80.6591, -22.9446, 17.2614, 0.37", "81.2841, -23.3673, 17.6923, 0.37", "82.0159, -23.8494, 18.2008, 0.37", "82.7608, -24.3298, 18.747, 0.37", "83.4763, -24.7534, 19.2813, 0.37", "84.5553, -25.3338, 20.104, 0.22", "85.7087, -25.9166, 20.9926, 0.22", "91.6448, -30.7812, 25.9156, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "74.2441, -19.7822, 11.7725, 0.37", "74.1031, -21.2883, 12.1202, 0.37", "74.0867, -22.2201, 12.3845, 0.37", "74.1253, -23.0803, 12.6509, 0.37", "74.2292, -23.932, 12.992, 0.37", "74.3561, -24.6577, 13.3055, 0.37", "74.5431, -25.4962, 13.6943, 0.29", "74.9056, -26.6975, 14.2194, 0.22", "75.3305, -28.0073, 14.7253, 0.22", "75.9079, -29.684, 15.2869, 0.22", "76.1259, -30.3226, 15.4668, 1.18", "76.2772, -30.8748, 15.5693, 1.4", "76.5109, -32.6674, 15.708, 1.4", "76.4666, -34.1881, 15.6817, 0.44", "76.3823, -34.7079, 15.6584, 0.44", "76.1719, -35.496, 15.612, 0.29", "75.734, -36.7632, 15.5977, 0.29", "75.1084, -38.3289, 15.6271, 0.22", "74.5708, -39.4564, 15.7586, 0.22", "74.1948, -40.1156, 15.8555, 1.03", "73.9951, -40.4407, 15.9187, 1.33", "73.7058, -40.8783, 16.033, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-158.221, -380.543, 2.25962, 0.29", "-159.23, -379.625, 2.20224, 0.29", "-159.454, -379.423, 2.18291, 0.52", "-159.797, -379.105, 2.14251, 0.59", "-161.736, -377.3, 1.78934, 0.22", "-162.278, -376.801, 1.67079, 0.22", "-163.023, -376.126, 1.4886, 0.66", "-163.416, -375.763, 1.36187, 0.66", "-165.075, -374.284, 0.76902, 0.22", "-165.758, -373.701, 0.506219, 0.22", "-166.384, -373.212, 0.260318, 0.52", "-166.83, -372.889, 0.08701, 0.66", "-168.057, -372.069, -0.380111, 0.22", "-170.492, -370.476, -1.29921, 0.22", "-172.066, -369.497, -1.88119, 0.22", "-173.531, -368.599, -2.38372, 1.18", "-173.942, -368.351, -2.52417, 1.4", "-174.575, -367.982, -2.73508, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-158.221, -380.543, 2.25962, 0.22", "-159.143, -381.832, 2.31606, 0.22", "-159.889, -382.888, 2.42869, 0.22", "-160.209, -383.363, 2.49204, 0.44", "-160.346, -383.572, 2.52216, 0.44", "-161.61, -385.572, 2.81985, 0.22", "-162.202, -386.508, 2.95916, 0.44", "-162.704, -387.294, 3.08663, 0.22", "-163.02, -387.825, 3.18675, 0.59", "-163.286, -388.284, 3.28238, 0.66", "-163.482, -388.637, 3.36469, 0.44", "-167.319, -396.822, 5.60303, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "axon_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "axon_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_ChC_759d7f7dc1_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.28399, -8.10218, -8.21018, 1.77 ) }
    dend_49 { pt3dadd( -2.99651, -8.9873, -8.35076, 1.77 ) }
    dend_49 { pt3dadd( -2.55714, -10.3746, -8.55822, 1.55 ) }
    dend_49 { pt3dadd( -2.29908, -11.2946, -8.72299, 1.69 ) }
    dend_49 { pt3dadd( -2.12242, -12.0094, -8.86656, 1.77 ) }
    dend_49 { pt3dadd( -1.96766, -12.7048, -9.04022, 1.77 ) }
    dend_49 { pt3dadd( -1.77118, -13.6371, -9.33212, 1.25 ) }
    dend_49 { pt3dadd( -1.4527, -15.0672, -9.72566, 0.74 ) }
    dend_49 { pt3dadd( -2.06491, -14.4441, -10.3998, 0.74 ) }
    dend_49 { pt3dadd( -2.54232, -14.2238, -11.1172, 0.74 ) }
    dend_49 { pt3dadd( -3.37944, -13.9244, -12.407, 1.18 ) }
    dend_49 { pt3dadd( -3.82945, -13.8492, -13.1423, 1.18 ) }
    dend_49 { pt3dadd( -4.50444, -13.698, -14.1588, 0.52 ) }
    dend_49 { pt3dadd( -5.3032, -13.4228, -15.2508, 0.52 ) }
    dend_49 { pt3dadd( -6.21116, -13.4627, -16.6309, 0.74 ) }
    dend_49 { pt3dadd( -6.59377, -13.663, -17.5697, 0.74 ) }
    dend_49 { pt3dadd( -6.77631, -13.9717, -18.389, 0.74 ) }
    dend_49 { pt3dadd( -7.07091, -14.3696, -19.6254, 1.11 ) }
    dend_49 { pt3dadd( -7.33389, -14.5774, -20.4169, 1.69 ) }
    dend_49 { pt3dadd( -7.7643, -14.7204, -21.216, 1.77 ) }
    dend_49 { pt3dadd( -8.74481, -14.9954, -22.982, 1.33 ) }
    dend_49 { pt3dadd( -9.26665, -15.2416, -24.0585, 1.4 ) }
    dend_49 { pt3dadd( -9.5741, -15.5695, -24.867, 1.55 ) }
    dend_49 { pt3dadd( -9.7489, -16.115, -25.7136, 1.33 ) }
    dend_49 { pt3dadd( -9.76793, -17.0554, -26.7884, 0.74 ) }
    dend_49 { pt3dadd( -9.60435, -17.8254, -27.4128, 1.03 ) }
    dend_49 { pt3dadd( -9.36542, -18.4718, -27.8076, 1.47 ) }
    dend_49 { pt3dadd( -9.1119, -18.8967, -28.0912, 1.62 ) }
    dend_49 { pt3dadd( -8.71031, -19.4041, -28.4822, 1.62 ) }
    dend_49 { pt3dadd( -8.25519, -19.8119, -28.8422, 0.52 ) }
    dend_49 { pt3dadd( -7.71421, -20.1955, -29.2392, 0.52 ) }
    dend_49 { pt3dadd( -7.57962, -20.3959, -29.5805, 0.52 ) }
    dend_49 { pt3dadd( -7.60698, -20.8062, -30.4645, 0.66 ) }
    dend_49 { pt3dadd( -7.78198, -21.2091, -31.3985, 0.74 ) }
    dend_49 { pt3dadd( -8.06737, -21.3735, -32.0574, 0.44 ) }
    dend_49 { pt3dadd( -8.55913, -21.3715, -32.7544, 0.44 ) }
    dend_49 { pt3dadd( -9.28397, -21.2869, -33.6408, 0.44 ) }
    dend_49 { pt3dadd( -9.79926, -21.3367, -34.4294, 0.44 ) }
    dend_49 { pt3dadd( -10.0858, -21.4349, -34.9887, 0.44 ) }
    dend_49 { pt3dadd( -10.6185, -21.7626, -36.0754, 0.66 ) }
    dend_49 { pt3dadd( -10.8785, -22.2714, -37.1734, 1.11 ) }
    dend_49 { pt3dadd( -11.0132, -22.4579, -37.5548, 0.96 ) }
    dend_49 { pt3dadd( -11.3649, -22.8511, -38.4291, 1.18 ) }
    dend_49 { pt3dadd( -11.5017, -23.0194, -38.7708, 1.69 ) }
    dend_49 { pt3dadd( -11.7242, -23.2784, -39.2662, 1.69 ) }
    dend_49 { pt3dadd( -12.5719, -24.1952, -40.9237, 0.88 ) }
    dend_49 { pt3dadd( -13.0897, -24.6315, -41.7892, 2.14 ) }
    dend_49 { pt3dadd( -14.2642, -25.221, -43.3886, 2.28 ) }
    dend_49 { pt3dadd( -14.4291, -25.2637, -43.5716, 2.28 ) }
    dend_49 { pt3dadd( -15.3819, -25.3473, -44.4604, 0.44 ) }
    dend_49 { pt3dadd( -15.9258, -25.3058, -44.8601, 0.44 ) }
    dend_49 { pt3dadd( -16.5683, -25.1813, -45.2286, 0.81 ) }
    dend_49 { pt3dadd( -17.2274, -25.022, -45.6223, 0.81 ) }
    dend_49 { pt3dadd( -17.5279, -24.9827, -45.8376, 0.96 ) }
    dend_49 { pt3dadd( -18.1248, -25.0338, -46.3624, 0.66 ) }
    dend_49 { pt3dadd( -18.7251, -25.2277, -46.9787, 1.99 ) }
    dend_49 { pt3dadd( -19.1747, -25.4597, -47.4988, 2.21 ) }
    dend_49 { pt3dadd( -19.6137, -25.7656, -48.0419, 2.5 ) }
    dend_49 { pt3dadd( -20.8215, -26.8158, -49.6518, 0.66 ) }
    dend_49 { pt3dadd( -21.4477, -27.5009, -50.6026, 0.66 ) }
    dend_49 { pt3dadd( -21.8344, -28.0335, -51.2559, 0.66 ) }
    dend_49 { pt3dadd( -22.2327, -28.667, -51.955, 1.55 ) }
    dend_49 { pt3dadd( -22.4177, -28.9786, -52.2645, 2.21 ) }
    dend_49 { pt3dadd( -22.5961, -29.304, -52.5599, 2.21 ) }
    dend_49 { pt3dadd( -23.0884, -30.3388, -53.4483, 0.29 ) }
    dend_49 { pt3dadd( -23.3517, -31.0063, -54.0658, 0.29 ) }
    dend_49 { pt3dadd( -23.5238, -31.4671, -54.4839, 1.55 ) }
    dend_49 { pt3dadd( -23.7385, -32.0232, -54.9772, 1.99 ) }
    dend_49 { pt3dadd( -23.9358, -32.521, -55.4292, 2.36 ) }
    dend_49 { pt3dadd( -24.4908, -33.8749, -56.6963, 0.59 ) }
    dend_49 { pt3dadd( -24.7668, -34.5689, -57.3897, 1.84 ) }
    dend_49 { pt3dadd( -24.8753, -34.891, -57.7508, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.98043, -2.42716, 2.1182, 1.92 ) }
    dend_42 { pt3dadd( -7.79521, -4.02439, 2.03534, 1.92 ) }
    dend_42 { pt3dadd( -8.63542, -5.48156, 1.95176, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.28309, -6.46703, 1.88107, 2.36 ) }
    dend_42 { pt3dadd( -10.2009, -7.65949, 1.78361, 2.28 ) }
    dend_42 { pt3dadd( -11.2091, -8.76045, 1.67215, 2.36 ) }
    dend_42 { pt3dadd( -12.3373, -9.77924, 1.52742, 2.36 ) }
    dend_42 { pt3dadd( -14.0882, -10.9214, 1.32085, 1.77 ) }
    dend_42 { pt3dadd( -15.0513, -11.2972, 1.24848, 1.77 ) }
    dend_42 { pt3dadd( -16.5614, -11.6036, 1.20823, 1.99 ) }
    dend_42 { pt3dadd( -17.9071, -11.7293, 1.29366, 1.99 ) }
    dend_42 { pt3dadd( -18.5729, -11.7522, 1.37587, 1.99 ) }
    dend_42 { pt3dadd( -19.5654, -11.798, 1.55294, 1.77 ) }
    dend_42 { pt3dadd( -21.1016, -12.0523, 1.95037, 1.47 ) }
    dend_42 { pt3dadd( -22.2104, -12.4286, 2.26409, 1.47 ) }
    dend_42 { pt3dadd( -23.608, -13.1952, 2.61723, 1.33 ) }
    dend_42 { pt3dadd( -24.2433, -13.6641, 2.73552, 1.99 ) }
    dend_42 { pt3dadd( -25.323, -14.6227, 2.85405, 1.99 ) }
    dend_42 { pt3dadd( -26.5668, -15.8684, 2.86993, 1.77 ) }
    dend_42 { pt3dadd( -27.9426, -17.3905, 2.74887, 1.92 ) }
    dend_42 { pt3dadd( -29.2148, -18.8371, 2.48931, 1.69 ) }
    dend_42 { pt3dadd( -29.997, -19.6769, 2.23773, 1.69 ) }
    dend_42 { pt3dadd( -30.9772, -20.6228, 1.86715, 1.84 ) }
    dend_42 { pt3dadd( -31.8713, -21.4139, 1.52569, 1.84 ) }
    dend_42 { pt3dadd( -33.0286, -22.4019, 1.10172, 1.69 ) }
    dend_42 { pt3dadd( -34.3006, -23.5026, 0.704904, 1.55 ) }
    dend_42 { pt3dadd( -35.585, -24.6938, 0.405144, 1.4 ) }
    dend_42 { pt3dadd( -36.6374, -25.6744, 0.191521, 1.25 ) }
    dend_42 { pt3dadd( -37.7385, -26.7469, -0.00683911, 1.33 ) }
    dend_42 { pt3dadd( -38.7813, -27.8619, -0.122225, 1.47 ) }
    dend_42 { pt3dadd( -39.7576, -29.0448, -0.0754289, 1.62 ) }
    dend_42 { pt3dadd( -40.4478, -30.1513, 0.167707, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.688568, -9.90288, -4.82458, 2.95 ) }
    dend_27 { pt3dadd( 1.03257, -12.4048, -4.70553, 2.8 ) }
    dend_27 { pt3dadd( 1.23093, -14.0815, -4.59211, 2.8 ) }
    dend_27 { pt3dadd( 1.40369, -15.9563, -4.44917, 3.02 ) }
    dend_27 { pt3dadd( 1.48635, -17.2007, -4.35348, 3.02 ) }
    dend_27 { pt3dadd( 1.52094, -18.4213, -4.2546, 3.02 ) }
    dend_27 { pt3dadd( 1.4876, -20.2605, -4.10294, 3.02 ) }
    dend_27 { pt3dadd( 1.3524, -22.2061, -3.93616, 2.36 ) }
    dend_27 { pt3dadd( 0.989572, -25.6094, -3.75389, 2.36 ) }
    dend_27 { pt3dadd( 0.727647, -27.5159, -3.7361, 2.43 ) }
    dend_27 { pt3dadd( 0.426326, -29.3612, -3.78152, 2.43 ) }
    dend_27 { pt3dadd( 0.0324755, -31.5243, -3.91042, 2.43 ) }
    dend_27 { pt3dadd( -0.579893, -34.5107, -4.17351, 2.28 ) }
    dend_27 { pt3dadd( -1.23976, -37.5748, -4.51766, 2.14 ) }
    dend_27 { pt3dadd( -2.16101, -41.6341, -5.05612, 2.06 ) }
    dend_27 { pt3dadd( -2.80037, -44.4513, -5.47671, 2.43 ) }
    dend_27 { pt3dadd( -3.20423, -46.2454, -5.78196, 2.58 ) }
    dend_27 { pt3dadd( -3.63728, -48.136, -6.14714, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.21333, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.46412, 7.92253, -7.59046, 1.62 ) }
    dend_20 { pt3dadd( -0.594918, 8.96589, -7.62346, 1.92 ) }
    dend_20 { pt3dadd( -0.792173, 10.3597, -7.68052, 1.33 ) }
    dend_20 { pt3dadd( -1.04095, 11.8599, -7.76459, 1.69 ) }
    dend_20 { pt3dadd( -1.24499, 12.9699, -7.80737, 2.21 ) }
    dend_20 { pt3dadd( -1.41989, 13.8978, -7.80001, 2.21 ) }
    dend_20 { pt3dadd( -1.63047, 14.9423, -7.74891, 1.99 ) }
    dend_20 { pt3dadd( -1.8281, 15.8306, -7.67133, 1.77 ) }
    dend_20 { pt3dadd( -2.06277, 16.8187, -7.55728, 1.99 ) }
    dend_20 { pt3dadd( -2.31728, 17.8645, -7.43196, 1.99 ) }
    dend_20 { pt3dadd( -2.75232, 19.7019, -7.24922, 1.11 ) }
    dend_20 { pt3dadd( -3.02087, 20.8505, -7.17084, 1.11 ) }
    dend_20 { pt3dadd( -3.30864, 22.0061, -7.13972, 1.25 ) }
    dend_20 { pt3dadd( -3.583, 22.9765, -7.13437, 1.4 ) }
    dend_20 { pt3dadd( -3.94213, 24.0371, -7.19641, 0.81 ) }
    dend_20 { pt3dadd( -4.36509, 25.0417, -7.35498, 0.74 ) }
    dend_20 { pt3dadd( -4.7012, 25.6986, -7.5238, 0.74 ) }
    dend_20 { pt3dadd( -5.11552, 26.4112, -7.75215, 0.74 ) }
    dend_20 { pt3dadd( -5.59701, 27.1872, -8.04252, 0.96 ) }
    dend_20 { pt3dadd( -6.05095, 27.9177, -8.33578, 0.96 ) }
    dend_20 { pt3dadd( -6.52456, 28.6512, -8.6374, 1.55 ) }
    dend_20 { pt3dadd( -7.05951, 29.4736, -8.9878, 2.06 ) }
    dend_20 { pt3dadd( -7.51211, 30.2223, -9.3146, 2.43 ) }
    dend_20 { pt3dadd( -8.03117, 31.2306, -9.75823, 2.36 ) }
    dend_20 { pt3dadd( -8.61887, 32.6042, -10.347, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 7.89733, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.38227, 8.02488, 0.346995, 2.5 ) }
    dend_11 { pt3dadd( -3.3467, 9.81176, 0.309726, 1.77 ) }
    dend_11 { pt3dadd( -4.01985, 11.0193, 0.316615, 1.55 ) }
    dend_11 { pt3dadd( -4.80938, 12.3937, 0.38091, 1.55 ) }
    dend_11 { pt3dadd( -5.41096, 13.4424, 0.470602, 1.33 ) }
    dend_11 { pt3dadd( -6.32884, 15.069, 0.661455, 1.33 ) }
    dend_11 { pt3dadd( -6.90284, 16.0628, 0.808303, 1.55 ) }
    dend_11 { pt3dadd( -7.76886, 17.5349, 1.05787, 1.55 ) }
    dend_11 { pt3dadd( -8.66829, 19.1359, 1.33469, 1.62 ) }
    dend_11 { pt3dadd( -9.38638, 20.5628, 1.56719, 1.4 ) }
    dend_11 { pt3dadd( -10.0559, 22.1333, 1.79425, 1.4 ) }
    dend_11 { pt3dadd( -10.4368, 23.0979, 1.93528, 1.4 ) }
    dend_11 { pt3dadd( -11.029, 24.6494, 2.14965, 1.4 ) }
    dend_11 { pt3dadd( -11.5912, 26.1992, 2.29929, 1.4 ) }
    dend_11 { pt3dadd( -12.2234, 28.1148, 2.40074, 1.77 ) }
    dend_11 { pt3dadd( -12.7556, 29.8334, 2.41971, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 3.96433, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.88085, 4.01281, 1.35105, 2.58 ) }
    dend_0 { pt3dadd( 7.54008, 4.63934, 1.41989, 2.58 ) }
    dend_0 { pt3dadd( 8.28804, 5.35761, 1.52113, 1.84 ) }
    dend_0 { pt3dadd( 8.84175, 5.87874, 1.61095, 2.06 ) }
    dend_0 { pt3dadd( 9.55666, 6.54971, 1.74527, 2.06 ) }
    dend_0 { pt3dadd( 10.0291, 6.9828, 1.86458, 2.58 ) }
    dend_0 { pt3dadd( 10.5534, 7.46026, 2.02729, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 10.9, 7.78109, 2.15875, 2.58 ) }
    dend_0 { pt3dadd( 11.5152, 8.32487, 2.42156, 2.58 ) }
    dend_0 { pt3dadd( 11.9479, 8.68027, 2.61671, 2.43 ) }
    dend_0 { pt3dadd( 12.8545, 9.38158, 3.06087, 2.21 ) }
    dend_0 { pt3dadd( 13.5158, 9.86356, 3.39828, 1.99 ) }
    dend_0 { pt3dadd( 14.0466, 10.2278, 3.65268, 1.99 ) }
    dend_0 { pt3dadd( 14.7349, 10.6307, 3.94997, 1.69 ) }
    dend_0 { pt3dadd( 15.3102, 10.8613, 4.16819, 1.69 ) }
    dend_0 { pt3dadd( 16.329, 10.9939, 4.50309, 2.06 ) }
    dend_0 { pt3dadd( 16.9685, 10.8877, 4.67722, 2.06 ) }
    dend_0 { pt3dadd( 18.4794, 10.2622, 5.08147, 1.69 ) }
    dend_0 { pt3dadd( 19.5187, 9.72066, 5.3441, 1.92 ) }
    dend_0 { pt3dadd( 21.1434, 8.67158, 5.72569, 1.92 ) }
    dend_0 { pt3dadd( 22.6905, 7.46417, 6.05554, 2.06 ) }
    dend_0 { pt3dadd( 23.4836, 6.71183, 6.20477, 2.28 ) }
    dend_0 { pt3dadd( 24.0785, 6.02638, 6.32471, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.828859 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.828859 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.828859 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -24.8753, -34.891, -57.7508, 0.96 ) }
    dend_51 { pt3dadd( -23.6846, -36.7936, -63.8991, 0.96 ) }
    dend_51 { pt3dadd( -23.4487, -37.252, -65.0622, 0.96 ) }
    dend_51 { pt3dadd( -23.138, -37.8985, -66.452, 0.96 ) }
    dend_51 { pt3dadd( -22.6984, -38.8244, -68.2519, 1.55 ) }
    dend_51 { pt3dadd( -22.3425, -39.625, -69.6338, 0.22 ) }
    dend_51 { pt3dadd( -21.9437, -40.5837, -71.0209, 0.22 ) }
    dend_51 { pt3dadd( -21.7132, -41.2484, -71.6096, 1.11 ) }
    dend_51 { pt3dadd( -21.5043, -41.8837, -72.0967, 1.4 ) }
    dend_51 { pt3dadd( -21.1719, -42.7451, -72.6761, 1.4 ) }
    dend_51 { pt3dadd( -20.3631, -44.5977, -73.7945, 0.22 ) }
    dend_51 { pt3dadd( -19.4018, -46.4725, -74.8914, 0.22 ) }
    dend_51 { pt3dadd( -19.0481, -47.0805, -75.2446, 0.74 ) }
    dend_51 { pt3dadd( -18.8466, -47.4046, -75.4225, 0.74 ) }
    dend_51 { pt3dadd( -17.7364, -49.1323, -76.3105, 0.15 ) }
    dend_51 { pt3dadd( -17.5553, -49.3999, -76.4352, 0.37 ) }
    dend_51 { pt3dadd( -16.4606, -50.8388, -77.0703, 0.22 ) }
    dend_51 { pt3dadd( -15.8065, -51.6246, -77.4575, 0.22 ) }
    dend_51 { pt3dadd( -15.2856, -52.2521, -77.763, 0.74 ) }
    dend_51 { pt3dadd( -14.7924, -52.9023, -78.0495, 0.88 ) }
    dend_51 { pt3dadd( -14.6607, -53.1333, -78.1325, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -24.8753, -34.891, -57.7508, 2.87 ) }
    dend_50 { pt3dadd( -25.5704, -35.1106, -57.8455, 2.87 ) }
    dend_50 { pt3dadd( -27.7637, -35.9787, -58.242, 0.22 ) }
    dend_50 { pt3dadd( -29.7461, -37.014, -58.6569, 0.22 ) }
    dend_50 { pt3dadd( -30.7034, -37.5679, -58.8633, 1.69 ) }
    dend_50 { pt3dadd( -31.0041, -37.7541, -58.9289, 2.21 ) }
    dend_50 { pt3dadd( -31.4929, -38.0704, -59.0357, 2.21 ) }
    dend_50 { pt3dadd( -33.2865, -39.4011, -59.4196, 0.22 ) }
    dend_50 { pt3dadd( -34.8597, -40.8173, -59.8044, 0.22 ) }
    dend_50 { pt3dadd( -35.3467, -41.2954, -59.9345, 1.25 ) }
    dend_50 { pt3dadd( -35.7443, -41.6902, -60.0419, 1.25 ) }
    dend_50 { pt3dadd( -36.2724, -42.2081, -60.1918, 1.25 ) }
    dend_50 { pt3dadd( -37.3507, -43.196, -60.495, 0.15 ) }
    dend_50 { pt3dadd( -37.9628, -43.7329, -60.6605, 0.15 ) }
    dend_50 { pt3dadd( -38.4459, -44.1109, -60.7959, 0.96 ) }
    dend_50 { pt3dadd( -38.9958, -44.4983, -60.9673, 1.18 ) }
    dend_50 { pt3dadd( -39.2486, -44.6532, -61.049, 1.18 ) }
    dend_50 { pt3dadd( -40.8844, -45.509, -61.6672, 0.22 ) }
    dend_50 { pt3dadd( -41.3209, -45.6751, -61.8506, 0.52 ) }
    dend_50 { pt3dadd( -41.7183, -45.8037, -62.0212, 0.52 ) }
    dend_50 { pt3dadd( -42.7413, -46.1028, -62.4527, 0.22 ) }
    dend_50 { pt3dadd( -43.3766, -46.2818, -62.7276, 1.25 ) }
    dend_50 { pt3dadd( -44.3089, -46.5784, -63.1191, 1.4 ) }
    dend_50 { pt3dadd( -46.1055, -47.3117, -63.9291, 0.22 ) }
    dend_50 { pt3dadd( -47.3294, -47.9649, -64.4945, 0.22 ) }
    dend_50 { pt3dadd( -47.7917, -48.2819, -64.716, 0.74 ) }
    dend_50 { pt3dadd( -48.3814, -48.8038, -65.0068, 0.88 ) }
    dend_50 { pt3dadd( -49.1944, -49.8617, -65.5649, 0.22 ) }
    dend_50 { pt3dadd( -49.8276, -51.2333, -66.1426, 0.22 ) }
    dend_50 { pt3dadd( -50.0691, -52.1326, -66.4715, 1.99 ) }
    dend_50 { pt3dadd( -50.1598, -52.6846, -66.6432, 2.36 ) }
    dend_50 { pt3dadd( -50.2258, -53.2268, -66.8104, 2.36 ) }
    dend_50 { pt3dadd( -50.4571, -56.2698, -67.7383, 0.15 ) }
    dend_50 { pt3dadd( -50.5106, -58.1594, -68.3515, 0.15 ) }
    dend_50 { pt3dadd( -50.5105, -58.6515, -68.4915, 0.44 ) }
    dend_50 { pt3dadd( -50.48, -59.5996, -68.7369, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -40.4478, -30.1513, 0.167707, 0.96 ) }
    dend_44 { pt3dadd( -41.365, -30.4683, -0.160146, 0.96 ) }
    dend_44 { pt3dadd( -42.2385, -30.799, -0.479168, 1.25 ) }
    dend_44 { pt3dadd( -43.4971, -31.2752, -0.93335, 1.25 ) }
    dend_44 { pt3dadd( -45.6887, -32.039, -1.66192, 1.18 ) }
    dend_44 { pt3dadd( -47.1794, -32.4977, -2.10676, 1.11 ) }
    dend_44 { pt3dadd( -48.3273, -32.8254, -2.43672, 0.88 ) }
    dend_44 { pt3dadd( -49.8397, -33.2651, -2.89476, 0.96 ) }
    dend_44 { pt3dadd( -50.7057, -33.5164, -3.16459, 0.96 ) }
    dend_44 { pt3dadd( -51.977, -33.8942, -3.56884, 0.96 ) }
    dend_44 { pt3dadd( -53.2284, -34.2737, -3.89722, 0.96 ) }
    dend_44 { pt3dadd( -54.2911, -34.5878, -4.1146, 1.18 ) }
    dend_44 { pt3dadd( -55.5965, -34.9571, -4.32436, 1.03 ) }
    dend_44 { pt3dadd( -56.2412, -35.1227, -4.36171, 1.03 ) }
    dend_44 { pt3dadd( -57.5858, -35.4262, -4.28913, 1.18 ) }
    dend_44 { pt3dadd( -58.3997, -35.5785, -4.12228, 1.18 ) }
    dend_44 { pt3dadd( -60.2237, -35.8228, -3.37997, 0.96 ) }
    dend_44 { pt3dadd( -60.8913, -35.8747, -3.03935, 1.11 ) }
    dend_44 { pt3dadd( -62.1892, -35.951, -2.30591, 1.11 ) }
    dend_44 { pt3dadd( -63.2291, -36.0388, -1.70598, 1.11 ) }
    dend_44 { pt3dadd( -64.4524, -36.189, -1.00175, 1.11 ) }
    dend_44 { pt3dadd( -66.086, -36.5243, -0.0845717, 1.55 ) }
    dend_44 { pt3dadd( -67.2563, -36.8928, 0.519355, 1.03 ) }
    dend_44 { pt3dadd( -68.6565, -37.5049, 1.21496, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -69.8514, -38.196, 1.76171, 0.74 ) }
    dend_44 { pt3dadd( -70.5358, -38.7059, 2.04836, 0.74 ) }
    dend_44 { pt3dadd( -71.4203, -39.5332, 2.34094, 0.74 ) }
    dend_44 { pt3dadd( -72.2994, -40.5307, 2.53769, 0.66 ) }
    dend_44 { pt3dadd( -73.086, -41.5607, 2.66761, 0.88 ) }
    dend_44 { pt3dadd( -73.5998, -42.3111, 2.71412, 1.03 ) }
    dend_44 { pt3dadd( -74.1351, -43.194, 2.73676, 1.03 ) }
    dend_44 { pt3dadd( -74.8196, -44.3311, 2.74644, 0.88 ) }
    dend_44 { pt3dadd( -75.6747, -45.6665, 2.74072, 0.88 ) }
    dend_44 { pt3dadd( -76.1603, -46.3354, 2.72805, 0.88 ) }
    dend_44 { pt3dadd( -76.8831, -47.1568, 2.71675, 0.88 ) }
    dend_44 { pt3dadd( -78.2956, -48.4721, 2.71272, 0.88 ) }
    dend_44 { pt3dadd( -79.1243, -49.0676, 2.71827, 0.88 ) }
    dend_44 { pt3dadd( -80.3148, -49.6922, 2.7371, 0.88 ) }
    dend_44 { pt3dadd( -81.1186, -49.9786, 2.75057, 0.96 ) }
    dend_44 { pt3dadd( -82.067, -50.2268, 2.74209, 0.96 ) }
    dend_44 { pt3dadd( -82.9298, -50.3876, 2.73947, 0.96 ) }
    dend_44 { pt3dadd( -83.8959, -50.5385, 2.74641, 0.52 ) }
    dend_44 { pt3dadd( -84.5543, -50.7505, 2.76139, 0.52 ) }
    dend_44 { pt3dadd( -85.0468, -51.1329, 2.81212, 0.52 ) }
    dend_44 { pt3dadd( -85.519, -51.8528, 2.97073, 0.81 ) }
    dend_44 { pt3dadd( -85.8766, -52.6163, 3.18095, 0.96 ) }
    dend_44 { pt3dadd( -86.1292, -53.4993, 3.43424, 0.96 ) }
    dend_44 { pt3dadd( -86.3951, -55.0821, 3.89155, 0.81 ) }
    dend_44 { pt3dadd( -86.4755, -55.8571, 4.12269, 0.81 ) }
    dend_44 { pt3dadd( -86.5332, -56.84, 4.45825, 1.11 ) }
    dend_44 { pt3dadd( -86.6014, -57.3979, 4.69451, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -40.4478, -30.1513, 0.167707, 1.33 ) }
    dend_43 { pt3dadd( -41.0444, -30.3016, 0.677597, 1.33 ) }
    dend_43 { pt3dadd( -41.623, -30.4662, 1.10458, 1.18 ) }
    dend_43 { pt3dadd( -42.7104, -30.7522, 1.86896, 0.88 ) }
    dend_43 { pt3dadd( -43.2367, -30.8676, 2.20722, 0.74 ) }
    dend_43 { pt3dadd( -44.0104, -30.9999, 2.64755, 0.74 ) }
    dend_43 { pt3dadd( -44.7972, -31.0889, 3.0911, 0.74 ) }
    dend_43 { pt3dadd( -45.3914, -31.1409, 3.40284, 0.59 ) }
    dend_43 { pt3dadd( -46.0903, -31.1654, 3.76322, 0.59 ) }
    dend_43 { pt3dadd( -46.6405, -31.1506, 4.04921, 0.52 ) }
    dend_43 { pt3dadd( -47.1945, -31.0741, 4.38158, 0.52 ) }
    dend_43 { pt3dadd( -48.2366, -30.8013, 5.09396, 0.74 ) }
    dend_43 { pt3dadd( -48.8963, -30.5706, 5.5949, 0.59 ) }
    dend_43 { pt3dadd( -49.5039, -30.35, 6.07479, 0.44 ) }
    dend_43 { pt3dadd( -50.1591, -30.1484, 6.61073, 0.37 ) }
    dend_43 { pt3dadd( -50.6838, -30.0422, 7.04633, 0.66 ) }
    dend_43 { pt3dadd( -51.1547, -30.0212, 7.37407, 0.66 ) }
    dend_43 { pt3dadd( -51.4635, -30.0546, 7.52124, 0.66 ) }
    dend_43 { pt3dadd( -51.8725, -30.1232, 7.69257, 0.44 ) }
    dend_43 { pt3dadd( -52.3473, -30.234, 7.86855, 0.44 ) }
    dend_43 { pt3dadd( -53.1948, -30.4362, 8.16111, 0.44 ) }
    dend_43 { pt3dadd( -54.3646, -30.7416, 8.5688, 0.74 ) }
    dend_43 { pt3dadd( -55.058, -30.9468, 8.80767, 0.74 ) }
    dend_43 { pt3dadd( -56.016, -31.2213, 9.12514, 0.52 ) }
    dend_43 { pt3dadd( -56.9121, -31.4662, 9.41164, 0.59 ) }
    dend_43 { pt3dadd( -57.6814, -31.6713, 9.64432, 0.44 ) }
    dend_43 { pt3dadd( -58.7507, -31.9983, 9.96725, 0.37 ) }
    dend_43 { pt3dadd( -59.52, -32.3001, 10.2034, 0.37 ) }
    dend_43 { pt3dadd( -60.3573, -32.7417, 10.4395, 0.29 ) }
    dend_43 { pt3dadd( -60.7549, -33.031, 10.5409, 0.29 ) }
    dend_43 { pt3dadd( -61.2223, -33.4715, 10.6963, 0.29 ) }
    dend_43 { pt3dadd( -61.6204, -33.8917, 10.8608, 0.37 ) }
    dend_43 { pt3dadd( -62.0699, -34.3842, 11.0899, 0.37 ) }
    dend_43 { pt3dadd( -62.5252, -34.8602, 11.3618, 0.37 ) }
    dend_43 { pt3dadd( -63.0138, -35.4205, 11.6958, 0.66 ) }
    dend_43 { pt3dadd( -63.5009, -35.965, 12.0449, 0.81 ) }
    dend_43 { pt3dadd( -63.8771, -36.3402, 12.3168, 0.81 ) }
    dend_43 { pt3dadd( -64.4293, -36.7864, 12.6907, 0.22 ) }
    dend_43 { pt3dadd( -65.1096, -37.2411, 13.135, 0.22 ) }
    dend_43 { pt3dadd( -71.7985, -38.2045, 16.4098, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.63728, -48.136, -6.14714, 1.55 ) }
    dend_33 { pt3dadd( -3.24886, -49.4549, -5.97716, 1.55 ) }
    dend_33 { pt3dadd( -2.86451, -50.7979, -5.80444, 1.55 ) }
    dend_33 { pt3dadd( -2.53995, -51.9778, -5.66082, 1.55 ) }
    dend_33 { pt3dadd( -2.18754, -53.3161, -5.49496, 1.69 ) }
    dend_33 { pt3dadd( -1.94001, -54.3425, -5.36743, 1.69 ) }
    dend_33 { pt3dadd( -1.77999, -55.1096, -5.27763, 1.69 ) }
    dend_33 { pt3dadd( -1.57518, -56.3817, -5.14168, 1.55 ) }
    dend_33 { pt3dadd( -1.37052, -58.0454, -4.9831, 1.47 ) }
    dend_33 { pt3dadd( -1.27953, -59.4301, -4.85766, 1.33 ) }
    dend_33 { pt3dadd( -1.28521, -60.7556, -4.74854, 1.33 ) }
    dend_33 { pt3dadd( -1.41998, -62.5136, -4.62723, 1.33 ) }
    dend_33 { pt3dadd( -1.62604, -63.8006, -4.54683, 1.11 ) }
    dend_33 { pt3dadd( -1.83197, -64.6096, -4.50239, 1.11 ) }
    dend_33 { pt3dadd( -2.42005, -66.3694, -4.41693, 1.25 ) }
    dend_33 { pt3dadd( -2.88363, -67.5364, -4.37008, 1.25 ) }
    dend_33 { pt3dadd( -3.34629, -68.5857, -4.33572, 1.25 ) }
    dend_33 { pt3dadd( -4.02474, -70.0423, -4.30869, 1.4 ) }
    dend_33 { pt3dadd( -4.71155, -71.4791, -4.30429, 1.4 ) }
    dend_33 { pt3dadd( -5.24804, -72.646, -4.32497, 1.55 ) }
    dend_33 { pt3dadd( -5.5856, -73.5081, -4.36695, 1.55 ) }
    dend_33 { pt3dadd( -5.98955, -74.7883, -4.45131, 1.33 ) }
    dend_33 { pt3dadd( -6.37581, -76.3933, -4.59634, 0.96 ) }
    dend_33 { pt3dadd( -6.4826, -77.0317, -4.6734, 0.81 ) }
    dend_33 { pt3dadd( -6.56672, -77.7516, -4.75841, 0.81 ) }
    dend_33 { pt3dadd( -6.69901, -79.417, -4.9314, 0.96 ) }
    dend_33 { pt3dadd( -6.75425, -80.5714, -5.02401, 1.33 ) }
    dend_33 { pt3dadd( -6.80011, -81.8456, -5.09804, 1.69 ) }
    dend_33 { pt3dadd( -6.84115, -82.6171, -5.1263, 1.84 ) }
    dend_33 { pt3dadd( -6.91311, -83.4906, -5.13732, 1.99 ) }
    dend_33 { pt3dadd( -7.05725, -84.5217, -5.12743, 2.06 ) }
    dend_33 { pt3dadd( -7.20215, -85.4024, -5.1, 2.06 ) }
    dend_33 { pt3dadd( -7.3586, -86.2977, -5.03604, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -7.52407, -87.2525, -4.92083, 1.62 ) }
    dend_33 { pt3dadd( -7.71003, -88.3996, -4.73741, 1.18 ) }
    dend_33 { pt3dadd( -7.83795, -89.3187, -4.57229, 0.88 ) }
    dend_33 { pt3dadd( -8.0033, -90.5748, -4.32207, 0.88 ) }
    dend_33 { pt3dadd( -8.11752, -91.4386, -4.1168, 1.03 ) }
    dend_33 { pt3dadd( -8.24414, -92.3265, -3.87883, 1.11 ) }
    dend_33 { pt3dadd( -8.35219, -92.958, -3.70459, 1.11 ) }
    dend_33 { pt3dadd( -8.70288, -94.5309, -3.28757, 1.03 ) }
    dend_33 { pt3dadd( -8.9825, -95.5557, -3.02938, 1.18 ) }
    dend_33 { pt3dadd( -9.22841, -96.3919, -2.83806, 1.25 ) }
    dend_33 { pt3dadd( -9.61234, -97.6644, -2.58477, 1.18 ) }
    dend_33 { pt3dadd( -9.97292, -98.8186, -2.39647, 1.03 ) }
    dend_33 { pt3dadd( -10.3554, -99.9704, -2.25226, 0.96 ) }
    dend_33 { pt3dadd( -10.7924, -101.217, -2.15167, 0.88 ) }
    dend_33 { pt3dadd( -11.103, -102.05, -2.13497, 0.88 ) }
    dend_33 { pt3dadd( -11.6099, -103.305, -2.237, 1.25 ) }
    dend_33 { pt3dadd( -12.1496, -104.556, -2.44068, 1.55 ) }
    dend_33 { pt3dadd( -12.5601, -105.514, -2.64242, 1.62 ) }
    dend_33 { pt3dadd( -12.8636, -106.282, -2.8162, 1.62 ) }
    dend_33 { pt3dadd( -13.2181, -107.288, -3.0395, 1.4 ) }
    dend_33 { pt3dadd( -13.6639, -108.716, -3.32099, 1.11 ) }
    dend_33 { pt3dadd( -14.0416, -110.191, -3.55778, 1.11 ) }
    dend_33 { pt3dadd( -14.3802, -111.821, -3.73243, 1.11 ) }
    dend_33 { pt3dadd( -14.6893, -113.561, -3.86105, 1.11 ) }
    dend_33 { pt3dadd( -14.8985, -114.834, -3.92316, 1.4 ) }
    dend_33 { pt3dadd( -15.1016, -116.153, -3.96246, 1.4 ) }
    dend_33 { pt3dadd( -15.4095, -118.211, -3.98808, 1.25 ) }
    dend_33 { pt3dadd( -15.7232, -120.318, -4.0208, 1.25 ) }
    dend_33 { pt3dadd( -15.9412, -121.703, -4.04827, 1.62 ) }
    dend_33 { pt3dadd( -16.1474, -122.916, -4.08984, 1.77 ) }
    dend_33 { pt3dadd( -16.4183, -124.541, -4.17224, 1.33 ) }
    dend_33 { pt3dadd( -16.6539, -126.013, -4.25484, 0.88 ) }
    dend_33 { pt3dadd( -16.8765, -127.655, -4.35634, 1.25 ) }
    dend_33 { pt3dadd( -16.9684, -128.469, -4.4143, 1.84 ) }
    dend_33 { pt3dadd( -17.0419, -129.382, -4.4871, 2.28 ) }
    dend_33 { pt3dadd( -17.0877, -130.329, -4.57646, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.63728, -48.136, -6.14714, 2.14 ) }
    dend_28 { pt3dadd( -3.54713, -48.5434, -6.27, 2.14 ) }
    dend_28 { pt3dadd( -3.38271, -49.1883, -6.43313, 2.14 ) }
    dend_28 { pt3dadd( -3.10154, -50.291, -6.71207, 1.69 ) }
    dend_28 { pt3dadd( -2.86594, -51.2151, -6.94581, 1.84 ) }
    dend_28 { pt3dadd( -2.63706, -52.1128, -7.17287, 1.99 ) }
    dend_28 { pt3dadd( -2.45191, -52.8389, -7.35656, 2.36 ) }
    dend_28 { pt3dadd( -2.30366, -53.3719, -7.46833, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.61887, 32.6042, -10.347, 1.25 ) }
    dend_22 { pt3dadd( -8.16991, 33.9138, -10.6339, 1.25 ) }
    dend_22 { pt3dadd( -7.79157, 34.7936, -10.8063, 1.03 ) }
    dend_22 { pt3dadd( -7.28822, 35.8399, -10.9908, 0.81 ) }
    dend_22 { pt3dadd( -6.72474, 37.0117, -11.1752, 0.81 ) }
    dend_22 { pt3dadd( -6.23124, 38.1818, -11.3413, 1.11 ) }
    dend_22 { pt3dadd( -5.92183, 39.0315, -11.4502, 1.11 ) }
    dend_22 { pt3dadd( -5.59314, 40.0264, -11.5252, 0.96 ) }
    dend_22 { pt3dadd( -5.2088, 41.3591, -11.5853, 0.66 ) }
    dend_22 { pt3dadd( -4.97761, 42.2816, -11.6218, 0.52 ) }
    dend_22 { pt3dadd( -4.71082, 43.493, -11.6574, 0.52 ) }
    dend_22 { pt3dadd( -4.54532, 44.3937, -11.6805, 0.52 ) }
    dend_22 { pt3dadd( -4.18663, 46.3205, -11.7619, 1.18 ) }
    dend_22 { pt3dadd( -3.99587, 47.3066, -11.8144, 1.62 ) }
    dend_22 { pt3dadd( -3.8472, 48.014, -11.8603, 1.69 ) }
    dend_22 { pt3dadd( -3.56, 49.1856, -11.9715, 1.33 ) }
    dend_22 { pt3dadd( -3.37629, 49.7651, -12.0499, 0.74 ) }
    dend_22 { pt3dadd( -3.03604, 50.6538, -12.2056, 0.59 ) }
    dend_22 { pt3dadd( -2.45306, 52.0591, -12.5349, 0.66 ) }
    dend_22 { pt3dadd( -2.15089, 52.8192, -12.7342, 0.44 ) }
    dend_22 { pt3dadd( -1.95727, 53.3874, -12.8847, 0.44 ) }
    dend_22 { pt3dadd( -1.65392, 54.4301, -13.165, 0.37 ) }
    dend_22 { pt3dadd( -1.39458, 55.3078, -13.3926, 0.37 ) }
    dend_22 { pt3dadd( -1.17819, 55.9457, -13.5384, 0.37 ) }
    dend_22 { pt3dadd( -0.752754, 56.9496, -13.7869, 0.37 ) }
    dend_22 { pt3dadd( -0.337217, 57.8438, -14.0261, 0.44 ) }
    dend_22 { pt3dadd( 0.0288682, 58.7147, -14.2928, 0.44 ) }
    dend_22 { pt3dadd( 0.522299, 60.125, -14.7749, 0.81 ) }
    dend_22 { pt3dadd( 0.833276, 61.122, -15.1303, 1.03 ) }
    dend_22 { pt3dadd( 1.12687, 62.0227, -15.4657, 1.03 ) }
    dend_22 { pt3dadd( 1.39603, 62.8424, -15.8045, 0.81 ) }
    dend_22 { pt3dadd( 1.7635, 64.0394, -16.3554, 0.29 ) }
    dend_22 { pt3dadd( 1.92136, 64.6349, -16.6447, 0.29 ) }
    dend_22 { pt3dadd( 2.22673, 66.0756, -17.3382, 1.77 ) }
    dend_22 { pt3dadd( 2.31902, 66.5555, -17.5637, 2.36 ) }
    dend_22 { pt3dadd( 2.45456, 67.2201, -17.8482, 2.36 ) }
    dend_22 { pt3dadd( 2.7406, 68.4849, -18.3498, 2.28 ) }
    dend_22 { pt3dadd( 3.13157, 70.0024, -18.8916, 0.66 ) }
    dend_22 { pt3dadd( 3.35489, 70.8324, -19.1877, 0.88 ) }
    dend_22 { pt3dadd( 3.58486, 71.6966, -19.5005, 0.88 ) }
    dend_22 { pt3dadd( 3.84327, 72.6665, -19.8276, 0.37 ) }
    dend_22 { pt3dadd( 4.01916, 73.3214, -20.0383, 0.37 ) }
    dend_22 { pt3dadd( 4.37086, 74.6867, -20.4467, 0.37 ) }
    dend_22 { pt3dadd( 4.62144, 75.7165, -20.7393, 1.11 ) }
    dend_22 { pt3dadd( 4.80486, 76.5392, -20.9634, 1.47 ) }
    dend_22 { pt3dadd( 4.9182, 77.1278, -21.1133, 1.69 ) }
    dend_22 { pt3dadd( 5.07373, 78.1227, -21.3463, 1.33 ) }
    dend_22 { pt3dadd( 5.20558, 79.2158, -21.5751, 0.44 ) }
    dend_22 { pt3dadd( 5.25941, 80.3786, -21.7875, 0.29 ) }
    dend_22 { pt3dadd( 5.26512, 81.2914, -21.9492, 0.52 ) }
    dend_22 { pt3dadd( 5.24982, 81.9738, -22.0678, 0.52 ) }
    dend_22 { pt3dadd( 5.19863, 83.1196, -22.2947, 0.29 ) }
    dend_22 { pt3dadd( 5.16491, 84.2992, -22.534, 0.29 ) }
    dend_22 { pt3dadd( 5.15171, 86.3792, -22.991, 1.18 ) }
    dend_22 { pt3dadd( 5.15907, 87.1612, -23.1627, 1.62 ) }
    dend_22 { pt3dadd( 5.16639, 87.994, -23.3306, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 5.17858, 89.0457, -23.5225, 1.33 ) }
    dend_22 { pt3dadd( 5.20612, 92.0458, -24.0434, 0.22 ) }
    dend_22 { pt3dadd( 5.23262, 93.9665, -24.3571, 0.22 ) }
    dend_22 { pt3dadd( 5.25526, 95.7023, -24.6124, 0.22 ) }
    dend_22 { pt3dadd( 5.2532, 97.5366, -24.8464, 0.74 ) }
    dend_22 { pt3dadd( 5.24127, 98.5363, -24.9645, 1.03 ) }
    dend_22 { pt3dadd( 5.22682, 99.0077, -25.0142, 1.03 ) }
    dend_22 { pt3dadd( 5.10973, 100.511, -25.2085, 0.15 ) }
    dend_22 { pt3dadd( 5.05291, 101.088, -25.3115, 0.15 ) }
    dend_22 { pt3dadd( 4.98271, 101.748, -25.4778, 0.44 ) }
    dend_22 { pt3dadd( 4.91805, 102.377, -25.6664, 0.66 ) }
    dend_22 { pt3dadd( 4.85967, 102.957, -25.8419, 0.66 ) }
    dend_22 { pt3dadd( 4.74426, 104.628, -26.3377, 1.55 ) }
    dend_22 { pt3dadd( 4.69715, 105.857, -26.6848, 2.58 ) }
    dend_22 { pt3dadd( 4.68865, 106.927, -26.9834, 2.58 ) }
    dend_22 { pt3dadd( 4.78274, 109.303, -27.5952, 0.29 ) }
    dend_22 { pt3dadd( 4.94297, 110.891, -27.9258, 0.29 ) }
    dend_22 { pt3dadd( 5.29788, 113.167, -28.2781, 0.29 ) }
    dend_22 { pt3dadd( 5.60576, 114.596, -28.4231, 0.96 ) }
    dend_22 { pt3dadd( 5.79705, 115.33, -28.4596, 0.96 ) }
    dend_22 { pt3dadd( 6.53909, 117.72, -28.4646, 0.22 ) }
    dend_22 { pt3dadd( 7.42234, 120.264, -28.3554, 0.22 ) }
    dend_22 { pt3dadd( 8.01652, 121.861, -28.2321, 1.77 ) }
    dend_22 { pt3dadd( 8.26251, 122.485, -28.1643, 2.36 ) }
    dend_22 { pt3dadd( 8.56885, 123.248, -28.0744, 2.5 ) }
    dend_22 { pt3dadd( 9.55802, 125.713, -27.7653, 0.15 ) }
    dend_22 { pt3dadd( 10.0509, 126.954, -27.6189, 0.29 ) }
    dend_22 { pt3dadd( 10.3748, 127.784, -27.5377, 0.29 ) }
    dend_22 { pt3dadd( 10.7836, 128.846, -27.4902, 0.15 ) }
    dend_22 { pt3dadd( 11.1836, 129.934, -27.5108, 1.18 ) }
    dend_22 { pt3dadd( 11.433, 130.609, -27.5597, 1.55 ) }
    dend_22 { pt3dadd( 11.7104, 131.359, -27.6439, 1.18 ) }
    dend_22 { pt3dadd( 11.9131, 131.9, -27.7214, 0.74 ) }
    dend_22 { pt3dadd( 12.4895, 133.578, -27.9755, 0.22 ) }
    dend_22 { pt3dadd( 12.9059, 134.889, -28.1791, 0.22 ) }
    dend_22 { pt3dadd( 13.5661, 137.181, -28.489, 0.22 ) }
    dend_22 { pt3dadd( 13.893, 138.415, -28.6299, 0.81 ) }
    dend_22 { pt3dadd( 14.0129, 138.909, -28.6763, 0.81 ) }
    dend_22 { pt3dadd( 14.6876, 142.003, -28.8704, 0.22 ) }
    dend_22 { pt3dadd( 14.9791, 143.558, -28.8811, 0.22 ) }
    dend_22 { pt3dadd( 15.1916, 144.963, -28.8761, 1.25 ) }
    dend_22 { pt3dadd( 15.2208, 145.336, -28.8741, 1.69 ) }
    dend_22 { pt3dadd( 15.2319, 145.757, -28.8704, 1.69 ) }
    dend_22 { pt3dadd( 15.2232, 146.653, -28.8567, 1.33 ) }
    dend_22 { pt3dadd( 15.18, 147.438, -28.8559, 0.59 ) }
    dend_22 { pt3dadd( 15.0608, 149.07, -28.8984, 0.22 ) }
    dend_22 { pt3dadd( 14.9179, 151.397, -29.0336, 0.22 ) }
    dend_22 { pt3dadd( 14.8316, 152.83, -29.1343, 1.03 ) }
    dend_22 { pt3dadd( 14.7935, 153.433, -29.1807, 1.03 ) }
    dend_22 { pt3dadd( 14.774, 154.065, -29.2286, 1.03 ) }
    dend_22 { pt3dadd( 14.7815, 155.001, -29.2899, 0.52 ) }
    dend_22 { pt3dadd( 14.8815, 157.1, -29.3813, 0.22 ) }
    dend_22 { pt3dadd( 15.0108, 158.112, -29.4206, 0.59 ) }
    dend_22 { pt3dadd( 15.1347, 158.76, -29.4404, 0.59 ) }
    dend_22 { pt3dadd( 15.8167, 161.61, -29.4988, 0.22 ) }
    dend_22 { pt3dadd( 16.0777, 162.494, -29.5052, 0.66 ) }
    dend_22 { pt3dadd( 16.3081, 163.126, -29.5067, 0.66 ) }
    dend_22 { pt3dadd( 16.9006, 164.593, -29.5207, 0.15 ) }
    dend_22 { pt3dadd( 17.2452, 165.409, -29.5405, 0.81 ) }
    dend_22 { pt3dadd( 17.4813, 165.97, -29.5644, 0.81 ) }
    dend_22 { pt3dadd( 17.8186, 166.798, -29.6218, 0.81 ) }
    dend_22 { pt3dadd( 18.4135, 168.378, -29.7607, 0.22 ) }
    dend_22 { pt3dadd( 18.9912, 169.983, -29.9446, 1.33 ) }
    dend_22 { pt3dadd( 19.2217, 170.656, -30.0353, 1.55 ) }
    dend_22 { pt3dadd( 19.358, 171.049, -30.0906, 1.55 ) }
    dend_22 { pt3dadd( 19.5029, 171.466, -30.1559, 1.03 ) }
    dend_22 { pt3dadd( 20.1966, 173.364, -30.4835, 0.22 ) }
    dend_22 { pt3dadd( 20.8618, 175.054, -30.7979, 0.22 ) }
    dend_22 { pt3dadd( 21.2447, 175.94, -30.9848, 0.22 ) }
    dend_22 { pt3dadd( 21.6939, 176.99, -31.2093, 1.25 ) }
    dend_22 { pt3dadd( 21.9655, 177.667, -31.3596, 1.77 ) }
    dend_22 { pt3dadd( 22.1902, 178.281, -31.5026, 1.77 ) }
    dend_22 { pt3dadd( 22.3674, 178.799, -31.6356, 1.18 ) }
    dend_22 { pt3dadd( 22.6298, 179.618, -31.8572, 0.66 ) }
    dend_22 { pt3dadd( 23.4254, 182.116, -32.5915, 0.22 ) }
    dend_22 { pt3dadd( 23.966, 183.784, -33.1346, 0.22 ) }
    dend_22 { pt3dadd( 24.3453, 184.922, -33.503, 1.11 ) }
    dend_22 { pt3dadd( 24.6155, 185.653, -33.7314, 1.4 ) }
    dend_22 { pt3dadd( 24.8845, 186.303, -33.9312, 1.4 ) }
    dend_22 { pt3dadd( 25.2364, 187.056, -34.1847, 0.96 ) }
    dend_22 { pt3dadd( 26.3267, 189.187, -34.9626, 0.22 ) }
    dend_22 { pt3dadd( 27.5548, 191.402, -35.7768, 0.22 ) }
    dend_22 { pt3dadd( 28.5362, 193.099, -36.3874, 1.77 ) }
    dend_22 { pt3dadd( 28.8896, 193.698, -36.5926, 2.65 ) }
    dend_22 { pt3dadd( 29.4558, 194.634, -36.8955, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.61887, 32.6042, -10.347, 0.66 ) }
    dend_21 { pt3dadd( -10.1513, 33.2237, -10.8598, 0.66 ) }
    dend_21 { pt3dadd( -10.7603, 33.4433, -11.0633, 0.66 ) }
    dend_21 { pt3dadd( -11.4736, 33.6739, -11.297, 0.66 ) }
    dend_21 { pt3dadd( -12.2852, 33.9034, -11.5669, 1.11 ) }
    dend_21 { pt3dadd( -12.786, 34.0233, -11.7388, 1.33 ) }
    dend_21 { pt3dadd( -13.5396, 34.1953, -12.0006, 1.33 ) }
    dend_21 { pt3dadd( -14.3561, 34.3569, -12.2846, 0.96 ) }
    dend_21 { pt3dadd( -14.9239, 34.4706, -12.4616, 0.88 ) }
    dend_21 { pt3dadd( -15.607, 34.6054, -12.6511, 0.88 ) }
    dend_21 { pt3dadd( -16.4273, 34.76, -12.8366, 0.37 ) }
    dend_21 { pt3dadd( -16.8539, 34.8344, -12.9138, 0.37 ) }
    dend_21 { pt3dadd( -17.5881, 34.9585, -13.0196, 0.81 ) }
    dend_21 { pt3dadd( -18.2273, 35.0713, -13.0934, 0.88 ) }
    dend_21 { pt3dadd( -18.8214, 35.1798, -13.153, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -19.4508, 35.2975, -13.2065, 0.29 ) }
    dend_21 { pt3dadd( -19.8511, 35.3678, -13.2456, 0.29 ) }
    dend_21 { pt3dadd( -20.5371, 35.4506, -13.3452, 0.74 ) }
    dend_21 { pt3dadd( -21.0422, 35.4993, -13.4414, 0.74 ) }
    dend_21 { pt3dadd( -21.3334, 35.5387, -13.4927, 0.74 ) }
    dend_21 { pt3dadd( -21.6774, 35.6074, -13.5272, 0.74 ) }
    dend_21 { pt3dadd( -22.1063, 35.7075, -13.5447, 0.59 ) }
    dend_21 { pt3dadd( -22.5293, 35.7981, -13.5364, 0.59 ) }
    dend_21 { pt3dadd( -22.9059, 35.8641, -13.5007, 0.37 ) }
    dend_21 { pt3dadd( -23.9255, 35.9901, -13.3862, 0.37 ) }
    dend_21 { pt3dadd( -24.6428, 36.0376, -13.3009, 0.37 ) }
    dend_21 { pt3dadd( -25.0252, 36.0436, -13.2556, 0.22 ) }
    dend_21 { pt3dadd( -25.6658, 36.0251, -13.1873, 0.22 ) }
    dend_21 { pt3dadd( -26.0068, 35.9975, -13.1674, 0.22 ) }
    dend_21 { pt3dadd( -26.9991, 35.8983, -13.1558, 1.03 ) }
    dend_21 { pt3dadd( -27.4858, 35.8605, -13.1776, 1.4 ) }
    dend_21 { pt3dadd( -27.7771, 35.8529, -13.1957, 1.4 ) }
    dend_21 { pt3dadd( -28.4854, 35.8762, -13.2491, 0.81 ) }
    dend_21 { pt3dadd( -29.389, 35.9452, -13.3429, 0.22 ) }
    dend_21 { pt3dadd( -29.8757, 35.9896, -13.4022, 0.22 ) }
    dend_21 { pt3dadd( -30.8544, 36.094, -13.5435, 1.11 ) }
    dend_21 { pt3dadd( -31.3522, 36.1542, -13.6272, 1.4 ) }
    dend_21 { pt3dadd( -31.7045, 36.1986, -13.6934, 1.4 ) }
    dend_21 { pt3dadd( -32.5232, 36.3019, -13.8641, 0.66 ) }
    dend_21 { pt3dadd( -33.2904, 36.3908, -14.0336, 0.52 ) }
    dend_21 { pt3dadd( -34.2146, 36.4737, -14.2512, 0.74 ) }
    dend_21 { pt3dadd( -34.8128, 36.5239, -14.3999, 0.88 ) }
    dend_21 { pt3dadd( -35.6609, 36.6055, -14.6177, 0.66 ) }
    dend_21 { pt3dadd( -36.2622, 36.6699, -14.7762, 0.66 ) }
    dend_21 { pt3dadd( -36.7545, 36.7289, -14.9112, 0.66 ) }
    dend_21 { pt3dadd( -37.6825, 36.8566, -15.1614, 0.29 ) }
    dend_21 { pt3dadd( -38.4316, 36.9715, -15.3421, 1.03 ) }
    dend_21 { pt3dadd( -39.0736, 37.0765, -15.4746, 1.25 ) }
    dend_21 { pt3dadd( -39.2821, 37.1174, -15.5008, 1.25 ) }
    dend_21 { pt3dadd( -39.8286, 37.251, -15.5305, 0.81 ) }
    dend_21 { pt3dadd( -40.4956, 37.4324, -15.5233, 0.29 ) }
    dend_21 { pt3dadd( -40.9341, 37.5607, -15.4878, 0.52 ) }
    dend_21 { pt3dadd( -41.2284, 37.6561, -15.4552, 0.66 ) }
    dend_21 { pt3dadd( -42.3012, 38.0256, -15.3383, 0.22 ) }
    dend_21 { pt3dadd( -42.9055, 38.242, -15.2863, 0.22 ) }
    dend_21 { pt3dadd( -43.3967, 38.4215, -15.264, 0.22 ) }
    dend_21 { pt3dadd( -44.0471, 38.6704, -15.2787, 0.22 ) }
    dend_21 { pt3dadd( -44.9152, 39.013, -15.3368, 0.59 ) }
    dend_21 { pt3dadd( -45.4076, 39.215, -15.391, 0.81 ) }
    dend_21 { pt3dadd( -45.8586, 39.4213, -15.4761, 0.81 ) }
    dend_21 { pt3dadd( -46.5444, 39.7709, -15.6343, 0.52 ) }
    dend_21 { pt3dadd( -47.4607, 40.284, -15.8798, 1.03 ) }
    dend_21 { pt3dadd( -48.0059, 40.6071, -16.0428, 1.18 ) }
    dend_21 { pt3dadd( -48.4082, 40.8604, -16.1742, 1.25 ) }
    dend_21 { pt3dadd( -49.301, 41.4538, -16.4848, 0.29 ) }
    dend_21 { pt3dadd( -50.1057, 42.0097, -16.7795, 0.74 ) }
    dend_21 { pt3dadd( -50.4066, 42.2222, -16.8953, 0.96 ) }
    dend_21 { pt3dadd( -50.6685, 42.4075, -17.0039, 0.96 ) }
    dend_21 { pt3dadd( -51.5353, 43.0032, -17.3823, 0.22 ) }
    dend_21 { pt3dadd( -51.8783, 43.226, -17.5351, 0.22 ) }
    dend_21 { pt3dadd( -52.3488, 43.5082, -17.7402, 0.66 ) }
    dend_21 { pt3dadd( -52.6673, 43.6922, -17.8875, 0.88 ) }
    dend_21 { pt3dadd( -53.0447, 43.899, -18.0622, 0.44 ) }
    dend_21 { pt3dadd( -53.538, 44.1613, -18.2856, 0.37 ) }
    dend_21 { pt3dadd( -53.8375, 44.3152, -18.4135, 0.44 ) }
    dend_21 { pt3dadd( -54.2372, 44.5289, -18.5825, 0.44 ) }
    dend_21 { pt3dadd( -54.5249, 44.685, -18.7042, 0.44 ) }
    dend_21 { pt3dadd( -55.0812, 44.9922, -18.932, 0.22 ) }
    dend_21 { pt3dadd( -55.4477, 45.1994, -19.0691, 0.22 ) }
    dend_21 { pt3dadd( -55.886, 45.4677, -19.221, 0.29 ) }
    dend_21 { pt3dadd( -56.1459, 45.6364, -19.2999, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -12.7556, 29.8334, 2.41971, 1.47 ) }
    dend_13 { pt3dadd( -12.4164, 30.503, 2.30788, 1.47 ) }
    dend_13 { pt3dadd( -12.1107, 31.2333, 2.20081, 0.81 ) }
    dend_13 { pt3dadd( -11.9208, 31.7683, 2.13162, 0.81 ) }
    dend_13 { pt3dadd( -11.7215, 32.5176, 2.04978, 0.81 ) }
    dend_13 { pt3dadd( -11.5178, 33.4301, 1.96034, 0.81 ) }
    dend_13 { pt3dadd( -11.329, 34.4376, 1.87153, 0.81 ) }
    dend_13 { pt3dadd( -11.21, 35.4436, 1.79436, 1.03 ) }
    dend_13 { pt3dadd( -11.137, 36.3488, 1.73321, 1.03 ) }
    dend_13 { pt3dadd( -11.0514, 37.7346, 1.64048, 1.18 ) }
    dend_13 { pt3dadd( -11.0025, 38.5933, 1.58819, 1.18 ) }
    dend_13 { pt3dadd( -10.9924, 40.0856, 1.50277, 1.18 ) }
    dend_13 { pt3dadd( -11.0242, 41.1471, 1.44377, 1.4 ) }
    dend_13 { pt3dadd( -11.0394, 41.8993, 1.39858, 1.4 ) }
    dend_13 { pt3dadd( -11.0556, 42.4344, 1.36429, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.7556, 29.8334, 2.41971, 0.96 ) }
    dend_12 { pt3dadd( -14.9439, 30.9106, 1.42516, 0.96 ) }
    dend_12 { pt3dadd( -15.7315, 31.3184, 1.09113, 0.96 ) }
    dend_12 { pt3dadd( -16.8232, 31.8942, 0.629948, 0.96 ) }
    dend_12 { pt3dadd( -17.9569, 32.5142, 0.139011, 0.81 ) }
    dend_12 { pt3dadd( -18.9328, 33.0671, -0.280537, 0.81 ) }
    dend_12 { pt3dadd( -20.2807, 33.8491, -0.841718, 1.03 ) }
    dend_12 { pt3dadd( -21.1915, 34.4221, -1.21679, 1.03 ) }
    dend_12 { pt3dadd( -22.0335, 35.0468, -1.55866, 1.03 ) }
    dend_12 { pt3dadd( -23.0747, 35.94, -1.97612, 0.81 ) }
    dend_12 { pt3dadd( -23.8356, 36.6227, -2.2779, 0.81 ) }
    dend_12 { pt3dadd( -24.6717, 37.3965, -2.59466, 0.81 ) }
    dend_12 { pt3dadd( -25.653, 38.3645, -2.96512, 0.52 ) }
    dend_12 { pt3dadd( -26.5532, 39.3474, -3.28872, 0.52 ) }
    dend_12 { pt3dadd( -27.06, 39.9481, -3.44601, 0.52 ) }
    dend_12 { pt3dadd( -27.7858, 40.8718, -3.64307, 0.52 ) }
    dend_12 { pt3dadd( -28.6863, 42.0644, -3.87248, 0.52 ) }
    dend_12 { pt3dadd( -29.1591, 42.7175, -3.98085, 0.52 ) }
    dend_12 { pt3dadd( -29.6387, 43.3952, -4.0681, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -30.2023, 44.2047, -4.14517, 0.66 ) }
    dend_12 { pt3dadd( -30.7231, 45.0085, -4.19609, 0.88 ) }
    dend_12 { pt3dadd( -31.2265, 45.8718, -4.22912, 0.88 ) }
    dend_12 { pt3dadd( -31.7833, 46.8878, -4.26335, 0.59 ) }
    dend_12 { pt3dadd( -32.3473, 47.8965, -4.31112, 0.88 ) }
    dend_12 { pt3dadd( -32.7542, 48.6225, -4.35522, 0.88 ) }
    dend_12 { pt3dadd( -33.0846, 49.2711, -4.39743, 0.96 ) }
    dend_12 { pt3dadd( -33.3745, 49.865, -4.44614, 0.96 ) }
    dend_12 { pt3dadd( -33.6371, 50.3842, -4.50153, 0.96 ) }
    dend_12 { pt3dadd( -34.1125, 51.2315, -4.61961, 0.74 ) }
    dend_12 { pt3dadd( -34.8736, 52.4765, -4.83168, 1.25 ) }
    dend_12 { pt3dadd( -35.4053, 53.3042, -4.98934, 1.25 ) }
    dend_12 { pt3dadd( -36.0119, 54.2275, -5.17132, 0.29 ) }
    dend_12 { pt3dadd( -36.4158, 54.8419, -5.28513, 0.29 ) }
    dend_12 { pt3dadd( -36.8245, 55.4651, -5.38725, 0.66 ) }
    dend_12 { pt3dadd( -37.1937, 56.0288, -5.462, 0.81 ) }
    dend_12 { pt3dadd( -37.5025, 56.5069, -5.50688, 0.81 ) }
    dend_12 { pt3dadd( -38.0137, 57.358, -5.5417, 0.37 ) }
    dend_12 { pt3dadd( -38.4874, 58.3034, -5.59322, 0.37 ) }
    dend_12 { pt3dadd( -38.7574, 58.9233, -5.64422, 1.03 ) }
    dend_12 { pt3dadd( -38.985, 59.4727, -5.70529, 1.25 ) }
    dend_12 { pt3dadd( -39.2801, 60.1448, -5.80314, 1.25 ) }
    dend_12 { pt3dadd( -39.5398, 60.6774, -5.90439, 0.81 ) }
    dend_12 { pt3dadd( -40.1092, 61.7322, -6.13933, 0.59 ) }
    dend_12 { pt3dadd( -40.4537, 62.3329, -6.28326, 0.44 ) }
    dend_12 { pt3dadd( -40.9363, 63.1802, -6.45624, 0.88 ) }
    dend_12 { pt3dadd( -41.3081, 63.8334, -6.56322, 0.88 ) }
    dend_12 { pt3dadd( -41.9479, 64.9765, -6.68199, 0.59 ) }
    dend_12 { pt3dadd( -42.3597, 65.7388, -6.73935, 0.59 ) }
    dend_12 { pt3dadd( -42.9961, 66.9759, -6.7861, 0.44 ) }
    dend_12 { pt3dadd( -43.6858, 68.4031, -6.81894, 1.03 ) }
    dend_12 { pt3dadd( -44.2333, 69.6183, -6.8133, 1.55 ) }
    dend_12 { pt3dadd( -44.5387, 70.3736, -6.78036, 1.62 ) }
    dend_12 { pt3dadd( -44.9452, 71.4808, -6.7002, 1.11 ) }
    dend_12 { pt3dadd( -45.3566, 72.6975, -6.58897, 0.59 ) }
    dend_12 { pt3dadd( -45.6235, 73.5386, -6.48814, 0.59 ) }
    dend_12 { pt3dadd( -46.0449, 74.9444, -6.28633, 0.59 ) }
    dend_12 { pt3dadd( -46.4652, 76.3447, -6.0621, 0.52 ) }
    dend_12 { pt3dadd( -46.748, 77.2601, -5.89409, 0.52 ) }
    dend_12 { pt3dadd( -47.1151, 78.3993, -5.64104, 0.52 ) }
    dend_12 { pt3dadd( -47.5135, 79.5873, -5.36849, 0.52 ) }
    dend_12 { pt3dadd( -47.9804, 80.8869, -5.08314, 0.37 ) }
    dend_12 { pt3dadd( -48.69, 82.612, -4.73384, 1.55 ) }
    dend_12 { pt3dadd( -48.9637, 83.1791, -4.63343, 1.92 ) }
    dend_12 { pt3dadd( -49.2513, 83.6935, -4.55842, 1.92 ) }
    dend_12 { pt3dadd( -49.527, 84.1309, -4.51593, 1.92 ) }
    dend_12 { pt3dadd( -50.1279, 84.956, -4.47968, 0.88 ) }
    dend_12 { pt3dadd( -50.9434, 85.9992, -4.4772, 0.44 ) }
    dend_12 { pt3dadd( -51.562, 86.7706, -4.49327, 0.44 ) }
    dend_12 { pt3dadd( -52.2255, 87.6063, -4.5288, 0.44 ) }
    dend_12 { pt3dadd( -53.146, 88.7973, -4.58224, 0.37 ) }
    dend_12 { pt3dadd( -53.6355, 89.4458, -4.61127, 0.37 ) }
    dend_12 { pt3dadd( -54.6411, 90.8385, -4.66689, 0.74 ) }
    dend_12 { pt3dadd( -55.0408, 91.4116, -4.68078, 0.74 ) }
    dend_12 { pt3dadd( -55.5333, 92.1492, -4.69297, 0.52 ) }
    dend_12 { pt3dadd( -56.1833, 93.1696, -4.72529, 1.25 ) }
    dend_12 { pt3dadd( -56.6323, 93.8866, -4.77651, 1.47 ) }
    dend_12 { pt3dadd( -56.9306, 94.3738, -4.82788, 1.47 ) }
    dend_12 { pt3dadd( -57.3418, 94.9751, -4.94074, 0.81 ) }
    dend_12 { pt3dadd( -57.9034, 95.7257, -5.13044, 0.59 ) }
    dend_12 { pt3dadd( -58.4679, 96.4157, -5.36565, 0.88 ) }
    dend_12 { pt3dadd( -58.9453, 96.9698, -5.58822, 1.18 ) }
    dend_12 { pt3dadd( -59.243, 97.3104, -5.73595, 1.18 ) }
    dend_12 { pt3dadd( -59.9742, 98.1769, -6.07206, 0.96 ) }
    dend_12 { pt3dadd( -60.753, 99.1641, -6.37639, 0.52 ) }
    dend_12 { pt3dadd( -61.2037, 99.7828, -6.48677, 0.37 ) }
    dend_12 { pt3dadd( -61.8523, 100.747, -6.54063, 0.37 ) }
    dend_12 { pt3dadd( -62.4686, 101.753, -6.50582, 0.37 ) }
    dend_12 { pt3dadd( -63.0294, 102.762, -6.40351, 0.37 ) }
    dend_12 { pt3dadd( -63.4113, 103.547, -6.27174, 0.81 ) }
    dend_12 { pt3dadd( -63.9505, 104.809, -6.01813, 1.84 ) }
    dend_12 { pt3dadd( -64.1644, 105.319, -5.91414, 1.92 ) }
    dend_12 { pt3dadd( -64.3274, 105.687, -5.85038, 1.92 ) }
    dend_12 { pt3dadd( -64.6207, 106.372, -5.75517, 1.62 ) }
    dend_12 { pt3dadd( -65.0199, 107.344, -5.67919, 0.88 ) }
    dend_12 { pt3dadd( -65.4195, 108.391, -5.63246, 0.29 ) }
    dend_12 { pt3dadd( -66.0286, 110.022, -5.59456, 0.29 ) }
    dend_12 { pt3dadd( -66.493, 111.196, -5.5725, 0.29 ) }
    dend_12 { pt3dadd( -66.8022, 111.879, -5.55629, 0.29 ) }
    dend_12 { pt3dadd( -66.9696, 112.195, -5.54815, 0.29 ) }
    dend_12 { pt3dadd( -67.4082, 112.889, -5.53228, 0.66 ) }
    dend_12 { pt3dadd( -67.9758, 113.647, -5.51923, 0.81 ) }
    dend_12 { pt3dadd( -68.3915, 114.147, -5.51368, 0.81 ) }
    dend_12 { pt3dadd( -69.1886, 115.09, -5.50861, 0.37 ) }
    dend_12 { pt3dadd( -69.8177, 115.814, -5.5075, 0.37 ) }
    dend_12 { pt3dadd( -70.4128, 116.507, -5.50598, 0.81 ) }
    dend_12 { pt3dadd( -70.8321, 117.001, -5.50045, 0.81 ) }
    dend_12 { pt3dadd( -71.426, 117.711, -5.48268, 0.37 ) }
    dend_12 { pt3dadd( -72.017, 118.372, -5.46443, 0.37 ) }
    dend_12 { pt3dadd( -72.6241, 118.987, -5.44519, 0.88 ) }
    dend_12 { pt3dadd( -73.3724, 119.707, -5.42158, 1.47 ) }
    dend_12 { pt3dadd( -73.9353, 120.246, -5.40773, 1.69 ) }
    dend_12 { pt3dadd( -74.391, 120.687, -5.40184, 1.69 ) }
    dend_12 { pt3dadd( -75.6324, 121.866, -5.39757, 0.37 ) }
    dend_12 { pt3dadd( -76.0578, 122.277, -5.39772, 0.37 ) }
    dend_12 { pt3dadd( -76.8493, 123.101, -5.40526, 0.37 ) }
    dend_12 { pt3dadd( -77.753, 124.122, -5.42098, 0.81 ) }
    dend_12 { pt3dadd( -78.329, 124.872, -5.43285, 1.33 ) }
    dend_12 { pt3dadd( -78.673, 125.371, -5.4442, 1.33 ) }
    dend_12 { pt3dadd( -79.13, 126.076, -5.46502, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -80.0534, 127.457, -5.52762, 0.52 ) }
    dend_12 { pt3dadd( -80.8263, 128.524, -5.59929, 0.52 ) }
    dend_12 { pt3dadd( -81.6984, 129.707, -5.69398, 0.52 ) }
    dend_12 { pt3dadd( -82.1796, 130.358, -5.75148, 0.52 ) }
    dend_12 { pt3dadd( -82.7972, 131.204, -5.83155, 0.52 ) }
    dend_12 { pt3dadd( -83.4892, 132.151, -5.93186, 0.52 ) }
    dend_12 { pt3dadd( -84.6679, 133.746, -6.11688, 0.52 ) }
    dend_12 { pt3dadd( -85.0952, 134.323, -6.18552, 0.52 ) }
    dend_12 { pt3dadd( -86.1593, 135.732, -6.35347, 1.25 ) }
    dend_12 { pt3dadd( -86.4602, 136.132, -6.39821, 1.47 ) }
    dend_12 { pt3dadd( -86.8551, 136.651, -6.46305, 1.47 ) }
    dend_12 { pt3dadd( -87.4363, 137.371, -6.56842, 0.88 ) }
    dend_12 { pt3dadd( -88.1485, 138.169, -6.70602, 0.29 ) }
    dend_12 { pt3dadd( -88.4473, 138.464, -6.76317, 0.29 ) }
    dend_12 { pt3dadd( -89.0708, 139.025, -6.87593, 0.44 ) }
    dend_12 { pt3dadd( -89.5688, 139.453, -6.95519, 0.44 ) }
    dend_12 { pt3dadd( -90.0403, 139.844, -7.01851, 0.44 ) }
    dend_12 { pt3dadd( -90.315, 140.084, -7.06551, 0.44 ) }
    dend_12 { pt3dadd( -90.7058, 140.442, -7.11114, 0.29 ) }
    dend_12 { pt3dadd( -91.2074, 141.032, -7.12321, 0.29 ) }
    dend_12 { pt3dadd( -91.3807, 141.257, -7.10807, 0.44 ) }
    dend_12 { pt3dadd( -91.5934, 141.541, -7.07402, 0.44 ) }
    dend_12 { pt3dadd( -92.1586, 142.274, -6.96912, 0.37 ) }
    dend_12 { pt3dadd( -92.9274, 143.225, -6.82004, 0.44 ) }
    dend_12 { pt3dadd( -94.1708, 144.741, -6.67374, 2.28 ) }
    dend_12 { pt3dadd( -94.6658, 145.345, -6.64844, 2.5 ) }
    dend_12 { pt3dadd( -95.0417, 145.826, -6.65376, 2.5 ) }
    dend_12 { pt3dadd( -95.6456, 146.619, -6.70163, 1.92 ) }
    dend_12 { pt3dadd( -96.2387, 147.424, -6.80885, 0.81 ) }
    dend_12 { pt3dadd( -96.9799, 148.537, -7.08512, 0.52 ) }
    dend_12 { pt3dadd( -97.2798, 149.051, -7.23575, 0.52 ) }
    dend_12 { pt3dadd( -97.8993, 150.24, -7.59782, 0.88 ) }
    dend_12 { pt3dadd( -98.2359, 150.976, -7.8145, 0.88 ) }
    dend_12 { pt3dadd( -98.6001, 151.867, -8.05845, 0.66 ) }
    dend_12 { pt3dadd( -98.8733, 152.601, -8.24614, 0.44 ) }
    dend_12 { pt3dadd( -99.241, 153.668, -8.47757, 0.29 ) }
    dend_12 { pt3dadd( -99.6268, 154.901, -8.7495, 0.29 ) }
    dend_12 { pt3dadd( -100.013, 156.31, -9.077, 0.29 ) }
    dend_12 { pt3dadd( -100.185, 157.01, -9.2481, 0.29 ) }
    dend_12 { pt3dadd( -100.48, 158.31, -9.62582, 0.52 ) }
    dend_12 { pt3dadd( -100.686, 159.203, -9.93079, 0.88 ) }
    dend_12 { pt3dadd( -100.862, 159.937, -10.2355, 0.88 ) }
    dend_12 { pt3dadd( -101.084, 160.742, -10.6218, 0.44 ) }
    dend_12 { pt3dadd( -101.567, 162.017, -11.3252, 1.11 ) }
    dend_12 { pt3dadd( -102.128, 163.118, -12.0011, 2.43 ) }
    dend_12 { pt3dadd( -102.627, 163.858, -12.5039, 2.43 ) }
    dend_12 { pt3dadd( -102.999, 164.285, -12.822, 2.43 ) }
    dend_12 { pt3dadd( -103.553, 164.786, -13.2021, 1.69 ) }
    dend_12 { pt3dadd( -104.377, 165.413, -13.6937, 0.59 ) }
    dend_12 { pt3dadd( -105.321, 166.007, -14.1602, 0.74 ) }
    dend_12 { pt3dadd( -105.649, 166.186, -14.285, 0.74 ) }
    dend_12 { pt3dadd( -106.203, 166.472, -14.4827, 0.52 ) }
    dend_12 { pt3dadd( -107.064, 166.913, -14.7551, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 24.0785, 6.02638, 6.32471, 1.99 ) }
    dend_2 { pt3dadd( 26.2098, 6.07529, 6.46089, 1.99 ) }
    dend_2 { pt3dadd( 27.4752, 6.41351, 6.57524, 1.99 ) }
    dend_2 { pt3dadd( 28.3857, 6.97769, 6.64618, 1.69 ) }
    dend_2 { pt3dadd( 29.6656, 7.77081, 6.74592, 1.69 ) }
    dend_2 { pt3dadd( 30.2047, 8.10487, 6.78792, 1.69 ) }
    dend_2 { pt3dadd( 31.1004, 8.6599, 6.85772, 1.69 ) }
    dend_2 { pt3dadd( 31.6922, 9.2339, 6.83476, 1.92 ) }
    dend_2 { pt3dadd( 32.5827, 10.4685, 6.83868, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 24.0785, 6.02638, 6.32471, 0.74 ) }
    dend_1 { pt3dadd( 24.7077, 7.50486, 7.66168, 0.74 ) }
    dend_1 { pt3dadd( 24.9313, 8.1448, 8.23253, 0.74 ) }
    dend_1 { pt3dadd( 25.2245, 9.1504, 9.11513, 0.74 ) }
    dend_1 { pt3dadd( 25.4422, 10.0164, 9.86772, 0.44 ) }
    dend_1 { pt3dadd( 25.6018, 10.7438, 10.5092, 0.44 ) }
    dend_1 { pt3dadd( 25.8044, 11.8152, 11.4638, 0.66 ) }
    dend_1 { pt3dadd( 25.8653, 12.3319, 11.9156, 0.88 ) }
    dend_1 { pt3dadd( 25.9374, 13.0644, 12.5937, 0.88 ) }
    dend_1 { pt3dadd( 25.9944, 13.7169, 13.2497, 1.03 ) }
    dend_1 { pt3dadd( 26.0965, 14.6344, 14.2182, 0.96 ) }
    dend_1 { pt3dadd( 26.1868, 15.2786, 14.9166, 0.52 ) }
    dend_1 { pt3dadd( 26.2848, 15.7967, 15.4826, 0.52 ) }
    dend_1 { pt3dadd( 26.3877, 16.4777, 16.2405, 0.88 ) }
    dend_1 { pt3dadd( 26.4728, 17.0308, 16.861, 0.66 ) }
    dend_1 { pt3dadd( 26.5733, 17.6456, 17.5622, 0.88 ) }
    dend_1 { pt3dadd( 26.6625, 18.1911, 18.1928, 0.88 ) }
    dend_1 { pt3dadd( 26.783, 18.9859, 19.1359, 0.29 ) }
    dend_1 { pt3dadd( 26.8561, 19.6262, 19.896, 0.29 ) }
    dend_1 { pt3dadd( 26.8963, 20.072, 20.4116, 0.29 ) }
    dend_1 { pt3dadd( 26.9644, 20.8278, 21.2958, 0.44 ) }
    dend_1 { pt3dadd( 27.0242, 21.2714, 21.8371, 0.74 ) }
    dend_1 { pt3dadd( 27.1289, 21.8061, 22.4932, 0.88 ) }
    dend_1 { pt3dadd( 27.2131, 22.1286, 22.8953, 1.11 ) }
    dend_1 { pt3dadd( 27.2907, 22.387, 23.211, 1.11 ) }
    dend_1 { pt3dadd( 27.4257, 22.9836, 23.9087, 0.29 ) }
    dend_1 { pt3dadd( 27.5684, 23.5996, 24.5626, 0.29 ) }
    dend_1 { pt3dadd( 27.7394, 24.2023, 25.1604, 0.29 ) }
    dend_1 { pt3dadd( 29.5935, 29.452, 33.3097, 0.29 ) }
    dend_1 { pt3dadd( 32.5986, 35.1589, 40.8034, 0.29 ) }
    dend_1 { pt3dadd( 34.3405, 41.6586, 47.9733, 0.29 ) }
    dend_1 { pt3dadd( 35.0692, 48.5274, 54.9333, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -86.6014, -57.3979, 4.69451, 0.44 ) }
    dend_48 { pt3dadd( -88.004, -57.9752, 5.30013, 0.44 ) }
    dend_48 { pt3dadd( -88.7145, -58.3193, 5.59582, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -89.466, -58.7182, 5.8793, 0.29 ) }
    dend_48 { pt3dadd( -89.9076, -58.9613, 6.03598, 0.29 ) }
    dend_48 { pt3dadd( -90.8481, -59.4688, 6.3475, 0.37 ) }
    dend_48 { pt3dadd( -91.2773, -59.6884, 6.49339, 0.37 ) }
    dend_48 { pt3dadd( -91.9374, -60.004, 6.66145, 0.29 ) }
    dend_48 { pt3dadd( -92.5676, -60.3529, 6.83324, 0.29 ) }
    dend_48 { pt3dadd( -93.0482, -60.6582, 6.97023, 0.29 ) }
    dend_48 { pt3dadd( -93.3819, -60.8817, 7.06406, 0.29 ) }
    dend_48 { pt3dadd( -93.9025, -61.2199, 7.20749, 0.29 ) }
    dend_48 { pt3dadd( -94.4174, -61.5093, 7.341, 0.44 ) }
    dend_48 { pt3dadd( -95.1281, -61.8635, 7.52478, 0.44 ) }
    dend_48 { pt3dadd( -95.5033, -62.0635, 7.63951, 0.44 ) }
    dend_48 { pt3dadd( -96.0478, -62.3967, 7.83647, 0.66 ) }
    dend_48 { pt3dadd( -96.5879, -62.8011, 8.07165, 0.66 ) }
    dend_48 { pt3dadd( -96.8622, -63.0713, 8.22483, 0.52 ) }
    dend_48 { pt3dadd( -97.3189, -63.7266, 8.61105, 0.44 ) }
    dend_48 { pt3dadd( -97.4878, -64.1885, 8.88471, 0.66 ) }
    dend_48 { pt3dadd( -97.5686, -64.6721, 9.17198, 0.66 ) }
    dend_48 { pt3dadd( -97.6102, -65.2314, 9.50206, 0.52 ) }
    dend_48 { pt3dadd( -97.6593, -65.9733, 9.94706, 0.52 ) }
    dend_48 { pt3dadd( -97.6799, -66.6509, 10.3444, 0.44 ) }
    dend_48 { pt3dadd( -97.6796, -67.2454, 10.6878, 0.37 ) }
    dend_48 { pt3dadd( -97.7142, -68.1691, 11.2202, 0.37 ) }
    dend_48 { pt3dadd( -97.7804, -68.8963, 11.6548, 0.29 ) }
    dend_48 { pt3dadd( -97.9165, -69.6304, 12.1365, 0.29 ) }
    dend_48 { pt3dadd( -103.069, -74.6131, 13.5857, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -86.6014, -57.3979, 4.69451, 1.11 ) }
    dend_45 { pt3dadd( -87.4158, -57.7319, 4.85601, 1.11 ) }
    dend_45 { pt3dadd( -88.049, -58.0484, 4.96753, 1.11 ) }
    dend_45 { pt3dadd( -89.332, -58.7355, 5.19952, 0.88 ) }
    dend_45 { pt3dadd( -90.3105, -59.231, 5.37472, 0.88 ) }
    dend_45 { pt3dadd( -91.7997, -59.9246, 5.63654, 0.88 ) }
    dend_45 { pt3dadd( -93.3547, -60.5819, 5.89468, 0.88 ) }
    dend_45 { pt3dadd( -94.2068, -60.9369, 6.03373, 0.88 ) }
    dend_45 { pt3dadd( -94.9996, -61.258, 6.14145, 0.81 ) }
    dend_45 { pt3dadd( -95.8912, -61.6048, 6.23807, 0.81 ) }
    dend_45 { pt3dadd( -96.5361, -61.8298, 6.30287, 0.81 ) }
    dend_45 { pt3dadd( -97.6827, -62.1896, 6.41934, 0.96 ) }
    dend_45 { pt3dadd( -98.2813, -62.3961, 6.47544, 0.96 ) }
    dend_45 { pt3dadd( -98.8921, -62.6701, 6.51765, 0.96 ) }
    dend_45 { pt3dadd( -99.4695, -63.0222, 6.53658, 0.96 ) }
    dend_45 { pt3dadd( -100.221, -63.5746, 6.54978, 0.96 ) }
    dend_45 { pt3dadd( -100.471, -63.768, 6.54819, 0.96 ) }
    dend_45 { pt3dadd( -101.238, -64.3457, 6.52106, 0.88 ) }
    dend_45 { pt3dadd( -102.201, -64.982, 6.45899, 0.88 ) }
    dend_45 { pt3dadd( -102.891, -65.4189, 6.40517, 1.11 ) }
    dend_45 { pt3dadd( -103.587, -65.8614, 6.34762, 1.11 ) }
    dend_45 { pt3dadd( -104.392, -66.393, 6.26513, 0.96 ) }
    dend_45 { pt3dadd( -105.072, -66.8839, 6.21552, 0.96 ) }
    dend_45 { pt3dadd( -106.004, -67.6268, 6.18093, 0.88 ) }
    dend_45 { pt3dadd( -107.073, -68.5626, 6.13127, 0.88 ) }
    dend_45 { pt3dadd( -107.897, -69.3199, 6.05233, 0.96 ) }
    dend_45 { pt3dadd( -108.556, -69.9354, 5.95728, 0.96 ) }
    dend_45 { pt3dadd( -109.498, -70.784, 5.79068, 0.88 ) }
    dend_45 { pt3dadd( -109.945, -71.1634, 5.68814, 0.74 ) }
    dend_45 { pt3dadd( -110.952, -71.9576, 5.41556, 0.96 ) }
    dend_45 { pt3dadd( -111.844, -72.5902, 5.16263, 1.11 ) }
    dend_45 { pt3dadd( -112.571, -73.0786, 4.96806, 1.25 ) }
    dend_45 { pt3dadd( -113.202, -73.504, 4.81772, 1.25 ) }
    dend_45 { pt3dadd( -114.218, -74.2064, 4.59972, 1.03 ) }
    dend_45 { pt3dadd( -115.588, -75.2179, 4.38509, 0.88 ) }
    dend_45 { pt3dadd( -116.579, -76.0234, 4.28171, 0.88 ) }
    dend_45 { pt3dadd( -117.577, -76.8935, 4.19873, 0.88 ) }
    dend_45 { pt3dadd( -118.41, -77.6291, 4.12772, 0.88 ) }
    dend_45 { pt3dadd( -119.215, -78.31, 4.05959, 1.33 ) }
    dend_45 { pt3dadd( -119.849, -78.794, 4.01338, 1.33 ) }
    dend_45 { pt3dadd( -120.605, -79.3307, 3.95323, 1.18 ) }
    dend_45 { pt3dadd( -121.138, -79.6861, 3.90546, 0.96 ) }
    dend_45 { pt3dadd( -122.098, -80.2791, 3.82822, 0.96 ) }
    dend_45 { pt3dadd( -122.985, -80.7639, 3.77155, 0.96 ) }
    dend_45 { pt3dadd( -124.179, -81.3257, 3.73415, 0.88 ) }
    dend_45 { pt3dadd( -125.216, -81.7072, 3.7487, 0.81 ) }
    dend_45 { pt3dadd( -125.799, -81.8649, 3.78939, 0.81 ) }
    dend_45 { pt3dadd( -126.48, -82.0224, 3.8572, 0.74 ) }
    dend_45 { pt3dadd( -126.984, -82.1558, 3.91687, 0.74 ) }
    dend_45 { pt3dadd( -127.625, -82.3812, 4.00074, 0.74 ) }
    dend_45 { pt3dadd( -128.541, -82.8237, 4.12594, 0.74 ) }
    dend_45 { pt3dadd( -129.05, -83.1771, 4.18959, 1.11 ) }
    dend_45 { pt3dadd( -129.822, -83.9346, 4.26683, 1.11 ) }
    dend_45 { pt3dadd( -130.765, -85.0709, 4.33257, 0.88 ) }
    dend_45 { pt3dadd( -131.375, -85.9173, 4.36437, 0.88 ) }
    dend_45 { pt3dadd( -131.84, -86.6288, 4.38103, 0.88 ) }
    dend_45 { pt3dadd( -132.481, -87.6216, 4.39632, 0.81 ) }
    dend_45 { pt3dadd( -133.367, -88.904, 4.37572, 0.81 ) }
    dend_45 { pt3dadd( -133.823, -89.5053, 4.34842, 1.18 ) }
    dend_45 { pt3dadd( -134.328, -90.1489, 4.29023, 1.33 ) }
    dend_45 { pt3dadd( -134.877, -90.7993, 4.2085, 1.33 ) }
    dend_45 { pt3dadd( -135.781, -91.7761, 4.05741, 0.88 ) }
    dend_45 { pt3dadd( -136.681, -92.6664, 3.87973, 0.81 ) }
    dend_45 { pt3dadd( -137.626, -93.5301, 3.68936, 0.81 ) }
    dend_45 { pt3dadd( -138.75, -94.507, 3.44601, 0.81 ) }
    dend_45 { pt3dadd( -139.603, -95.2163, 3.23566, 0.81 ) }
    dend_45 { pt3dadd( -140.408, -95.8658, 3.02926, 1.11 ) }
    dend_45 { pt3dadd( -140.897, -96.2551, 2.89739, 1.25 ) }
    dend_45 { pt3dadd( -141.481, -96.7186, 2.74055, 2.14 ) }
    dend_45 { pt3dadd( -142.044, -97.1917, 2.57028, 2.5 ) }
    dend_45 { pt3dadd( -142.816, -97.8302, 2.33676, 1.92 ) }
    dend_45 { pt3dadd( -143.926, -98.8828, 1.94805, 1.11 ) }
    dend_45 { pt3dadd( -144.4, -99.3943, 1.76153, 0.96 ) }
    dend_45 { pt3dadd( -145.049, -100.161, 1.49462, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -145.879, -101.194, 1.10701, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -17.0877, -130.329, -4.57646, 0.37 ) }
    dend_41 { pt3dadd( -16.8415, -133.244, -2.89014, 0.37 ) }
    dend_41 { pt3dadd( -16.7362, -134.0, -2.46945, 0.52 ) }
    dend_41 { pt3dadd( -16.5794, -134.929, -1.98421, 0.66 ) }
    dend_41 { pt3dadd( -16.3931, -135.988, -1.45681, 0.37 ) }
    dend_41 { pt3dadd( -16.2453, -136.771, -1.07405, 0.44 ) }
    dend_41 { pt3dadd( -16.0639, -137.684, -0.639851, 0.44 ) }
    dend_41 { pt3dadd( -15.7812, -138.78, -0.215718, 0.29 ) }
    dend_41 { pt3dadd( -15.4843, -139.809, 0.205076, 0.29 ) }
    dend_41 { pt3dadd( -15.171, -140.676, 0.594692, 0.59 ) }
    dend_41 { pt3dadd( -14.8249, -141.426, 0.952344, 0.59 ) }
    dend_41 { pt3dadd( -14.3734, -142.212, 1.35269, 0.37 ) }
    dend_41 { pt3dadd( -13.8592, -142.958, 1.75028, 0.66 ) }
    dend_41 { pt3dadd( -13.3372, -143.591, 2.11401, 0.52 ) }
    dend_41 { pt3dadd( -12.5123, -144.444, 2.63184, 0.37 ) }
    dend_41 { pt3dadd( -11.8629, -145.046, 3.00348, 0.37 ) }
    dend_41 { pt3dadd( -10.8671, -145.937, 3.53217, 0.37 ) }
    dend_41 { pt3dadd( -9.88248, -146.796, 4.0205, 1.03 ) }
    dend_41 { pt3dadd( -9.1567, -147.426, 4.35656, 1.18 ) }
    dend_41 { pt3dadd( -8.46128, -148.031, 4.65108, 0.81 ) }
    dend_41 { pt3dadd( -7.90552, -148.52, 4.86769, 0.52 ) }
    dend_41 { pt3dadd( -6.86533, -149.441, 5.2717, 0.52 ) }
    dend_41 { pt3dadd( -5.8785, -150.349, 5.65202, 0.59 ) }
    dend_41 { pt3dadd( -5.00686, -151.204, 5.95207, 0.59 ) }
    dend_41 { pt3dadd( -4.2923, -151.972, 6.17465, 0.81 ) }
    dend_41 { pt3dadd( -3.71001, -152.638, 6.34489, 0.81 ) }
    dend_41 { pt3dadd( -3.06775, -153.41, 6.51863, 0.66 ) }
    dend_41 { pt3dadd( -2.6024, -153.999, 6.63244, 0.29 ) }
    dend_41 { pt3dadd( -1.53656, -155.429, 6.87327, 0.52 ) }
    dend_41 { pt3dadd( -0.628155, -156.675, 7.0708, 1.03 ) }
    dend_41 { pt3dadd( -0.300893, -157.131, 7.13528, 1.47 ) }
    dend_41 { pt3dadd( 0.301471, -157.929, 7.25087, 1.62 ) }
    dend_41 { pt3dadd( 1.11981, -158.9, 7.40939, 1.03 ) }
    dend_41 { pt3dadd( 1.91113, -159.74, 7.58906, 0.29 ) }
    dend_41 { pt3dadd( 2.67476, -160.474, 7.79252, 0.29 ) }
    dend_41 { pt3dadd( 3.57389, -161.266, 8.0331, 0.37 ) }
    dend_41 { pt3dadd( 4.51088, -162.081, 8.2846, 0.66 ) }
    dend_41 { pt3dadd( 4.99197, -162.496, 8.42043, 0.81 ) }
    dend_41 { pt3dadd( 5.74707, -163.134, 8.65549, 0.96 ) }
    dend_41 { pt3dadd( 6.31279, -163.606, 8.84682, 0.44 ) }
    dend_41 { pt3dadd( 6.7569, -163.975, 9.01291, 0.29 ) }
    dend_41 { pt3dadd( 7.60486, -164.674, 9.36818, 0.29 ) }
    dend_41 { pt3dadd( 8.2356, -165.256, 9.64657, 0.59 ) }
    dend_41 { pt3dadd( 8.82972, -165.88, 9.92254, 0.74 ) }
    dend_41 { pt3dadd( 9.29778, -166.431, 10.1485, 0.74 ) }
    dend_41 { pt3dadd( 9.9163, -167.251, 10.4533, 0.74 ) }
    dend_41 { pt3dadd( 10.4074, -167.966, 10.6908, 0.44 ) }
    dend_41 { pt3dadd( 11.0551, -168.991, 10.9984, 0.29 ) }
    dend_41 { pt3dadd( 11.4373, -169.633, 11.1716, 0.66 ) }
    dend_41 { pt3dadd( 11.916, -170.451, 11.3742, 0.88 ) }
    dend_41 { pt3dadd( 12.3661, -171.208, 11.557, 0.96 ) }
    dend_41 { pt3dadd( 13.0124, -172.267, 11.8298, 0.66 ) }
    dend_41 { pt3dadd( 13.6763, -173.353, 12.1188, 0.37 ) }
    dend_41 { pt3dadd( 14.4644, -174.579, 12.4708, 0.74 ) }
    dend_41 { pt3dadd( 14.9045, -175.242, 12.6696, 0.81 ) }
    dend_41 { pt3dadd( 15.4098, -176.018, 12.9045, 0.37 ) }
    dend_41 { pt3dadd( 16.0779, -177.1, 13.2242, 0.37 ) }
    dend_41 { pt3dadd( 16.6465, -178.07, 13.5015, 0.37 ) }
    dend_41 { pt3dadd( 17.1167, -178.901, 13.7295, 0.37 ) }
    dend_41 { pt3dadd( 17.4931, -179.597, 13.9085, 0.52 ) }
    dend_41 { pt3dadd( 17.9472, -180.419, 14.111, 0.52 ) }
    dend_41 { pt3dadd( 18.4236, -181.258, 14.3058, 0.37 ) }
    dend_41 { pt3dadd( 18.9194, -182.14, 14.4874, 0.37 ) }
    dend_41 { pt3dadd( 19.5031, -183.147, 14.7001, 0.81 ) }
    dend_41 { pt3dadd( 19.861, -183.701, 14.8308, 0.88 ) }
    dend_41 { pt3dadd( 20.4807, -184.55, 15.0561, 0.59 ) }
    dend_41 { pt3dadd( 21.0223, -185.23, 15.2552, 0.37 ) }
    dend_41 { pt3dadd( 21.5809, -185.876, 15.4612, 0.37 ) }
    dend_41 { pt3dadd( 22.2969, -186.656, 15.7325, 0.44 ) }
    dend_41 { pt3dadd( 23.7715, -188.15, 16.3032, 0.44 ) }
    dend_41 { pt3dadd( 24.7442, -189.028, 16.6839, 1.18 ) }
    dend_41 { pt3dadd( 25.4791, -189.642, 16.977, 1.47 ) }
    dend_41 { pt3dadd( 26.3007, -190.288, 17.2912, 1.47 ) }
    dend_41 { pt3dadd( 27.5199, -191.23, 17.736, 1.18 ) }
    dend_41 { pt3dadd( 28.4741, -192.007, 18.0565, 0.29 ) }
    dend_41 { pt3dadd( 29.0733, -192.534, 18.2366, 0.29 ) }
    dend_41 { pt3dadd( 29.5368, -192.963, 18.3509, 0.29 ) }
    dend_41 { pt3dadd( 30.3886, -193.802, 18.4879, 0.59 ) }
    dend_41 { pt3dadd( 31.2309, -194.711, 18.5577, 0.66 ) }
    dend_41 { pt3dadd( 31.7058, -195.279, 18.5545, 0.74 ) }
    dend_41 { pt3dadd( 32.1966, -195.939, 18.5268, 0.59 ) }
    dend_41 { pt3dadd( 32.7346, -196.748, 18.4808, 0.44 ) }
    dend_41 { pt3dadd( 33.3788, -197.781, 18.4069, 0.29 ) }
    dend_41 { pt3dadd( 33.7528, -198.476, 18.3502, 0.37 ) }
    dend_41 { pt3dadd( 34.2974, -199.638, 18.2409, 0.52 ) }
    dend_41 { pt3dadd( 34.6484, -200.525, 18.1756, 1.03 ) }
    dend_41 { pt3dadd( 34.9867, -201.451, 18.0989, 1.55 ) }
    dend_41 { pt3dadd( 35.275, -202.253, 18.0435, 1.55 ) }
    dend_41 { pt3dadd( 35.9887, -204.275, 17.9056, 0.44 ) }
    dend_41 { pt3dadd( 36.4845, -205.596, 17.8108, 0.37 ) }
    dend_41 { pt3dadd( 37.7802, -208.555, 17.5784, 0.29 ) }
    dend_41 { pt3dadd( 38.1148, -209.186, 17.5336, 0.29 ) }
    dend_41 { pt3dadd( 39.1778, -210.822, 17.4578, 1.47 ) }
    dend_41 { pt3dadd( 39.6185, -211.358, 17.448, 1.92 ) }
    dend_41 { pt3dadd( 40.5342, -212.228, 17.4463, 2.06 ) }
    dend_41 { pt3dadd( 41.9734, -213.316, 17.4077, 0.81 ) }
    dend_41 { pt3dadd( 43.9215, -214.49, 17.28, 0.29 ) }
    dend_41 { pt3dadd( 45.1717, -215.188, 17.1666, 0.29 ) }
    dend_41 { pt3dadd( 46.8067, -216.072, 17.0304, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 47.5965, -216.511, 16.9937, 0.52 ) }
    dend_41 { pt3dadd( 49.4266, -217.589, 16.9999, 0.29 ) }
    dend_41 { pt3dadd( 50.7255, -218.418, 17.1044, 0.88 ) }
    dend_41 { pt3dadd( 51.4402, -218.922, 17.2502, 0.74 ) }
    dend_41 { pt3dadd( 52.9877, -220.207, 17.8586, 0.29 ) }
    dend_41 { pt3dadd( 53.9851, -221.14, 18.4599, 0.29 ) }
    dend_41 { pt3dadd( 54.9012, -222.071, 19.1595, 0.59 ) }
    dend_41 { pt3dadd( 55.4618, -222.686, 19.6709, 0.66 ) }
    dend_41 { pt3dadd( 56.4967, -223.88, 20.686, 0.29 ) }
    dend_41 { pt3dadd( 57.5279, -225.132, 21.695, 0.29 ) }
    dend_41 { pt3dadd( 58.2173, -226.033, 22.3076, 0.29 ) }
    dend_41 { pt3dadd( 58.858, -226.966, 22.8293, 1.03 ) }
    dend_41 { pt3dadd( 59.3361, -227.698, 23.1698, 1.47 ) }
    dend_41 { pt3dadd( 59.7857, -228.408, 23.4348, 1.18 ) }
    dend_41 { pt3dadd( 60.641, -229.791, 23.8397, 0.22 ) }
    dend_41 { pt3dadd( 61.4211, -231.071, 24.1634, 0.22 ) }
    dend_41 { pt3dadd( 62.4358, -232.724, 24.5352, 0.22 ) }
    dend_41 { pt3dadd( 62.8724, -233.405, 24.6916, 0.52 ) }
    dend_41 { pt3dadd( 63.632, -234.544, 24.9583, 0.29 ) }
    dend_41 { pt3dadd( 64.3596, -235.598, 25.201, 0.29 ) }
    dend_41 { pt3dadd( 64.8319, -236.236, 25.3416, 0.88 ) }
    dend_41 { pt3dadd( 65.4685, -237.091, 25.5606, 0.88 ) }
    dend_41 { pt3dadd( 66.3923, -238.383, 25.9082, 0.29 ) }
    dend_41 { pt3dadd( 66.8008, -238.978, 26.0889, 0.29 ) }
    dend_41 { pt3dadd( 67.481, -240.002, 26.4771, 0.96 ) }
    dend_41 { pt3dadd( 67.9288, -240.676, 26.8111, 1.4 ) }
    dend_41 { pt3dadd( 68.3808, -241.357, 27.2117, 1.77 ) }
    dend_41 { pt3dadd( 68.6543, -241.756, 27.4853, 1.77 ) }
    dend_41 { pt3dadd( 69.7201, -243.233, 28.5851, 0.22 ) }
    dend_41 { pt3dadd( 70.7995, -244.648, 29.754, 0.22 ) }
    dend_41 { pt3dadd( 71.6611, -245.672, 30.6667, 0.88 ) }
    dend_41 { pt3dadd( 72.0597, -246.115, 31.0651, 1.33 ) }
    dend_41 { pt3dadd( 72.4859, -246.556, 31.4461, 1.33 ) }
    dend_41 { pt3dadd( 73.4821, -247.534, 32.2803, 0.22 ) }
    dend_41 { pt3dadd( 74.7542, -248.717, 33.2526, 0.22 ) }
    dend_41 { pt3dadd( 76.1502, -249.996, 34.2019, 0.22 ) }
    dend_41 { pt3dadd( 77.4549, -251.216, 34.9887, 0.22 ) }
    dend_41 { pt3dadd( 78.2266, -251.96, 35.4186, 0.74 ) }
    dend_41 { pt3dadd( 78.6485, -252.388, 35.635, 0.88 ) }
    dend_41 { pt3dadd( 79.1517, -252.933, 35.8622, 0.52 ) }
    dend_41 { pt3dadd( 80.0555, -254.03, 36.1972, 0.22 ) }
    dend_41 { pt3dadd( 80.5107, -254.655, 36.3475, 0.88 ) }
    dend_41 { pt3dadd( 81.0007, -255.391, 36.5171, 1.33 ) }
    dend_41 { pt3dadd( 81.3795, -256.001, 36.6606, 1.33 ) }
    dend_41 { pt3dadd( 82.2383, -257.491, 37.0173, 0.29 ) }
    dend_41 { pt3dadd( 83.1991, -259.311, 37.4743, 0.29 ) }
    dend_41 { pt3dadd( 83.642, -260.214, 37.7239, 0.44 ) }
    dend_41 { pt3dadd( 84.0098, -261.005, 37.9667, 0.59 ) }
    dend_41 { pt3dadd( 84.3313, -261.729, 38.2096, 0.59 ) }
    dend_41 { pt3dadd( 84.8268, -262.885, 38.6299, 0.22 ) }
    dend_41 { pt3dadd( 85.3159, -264.07, 39.0766, 0.22 ) }
    dend_41 { pt3dadd( 85.6211, -264.794, 39.3535, 0.74 ) }
    dend_41 { pt3dadd( 85.8105, -265.225, 39.5131, 0.88 ) }
    dend_41 { pt3dadd( 86.0779, -265.779, 39.7048, 0.88 ) }
    dend_41 { pt3dadd( 86.6197, -266.862, 40.0822, 0.22 ) }
    dend_41 { pt3dadd( 87.6066, -268.702, 40.7184, 0.22 ) }
    dend_41 { pt3dadd( 88.0642, -269.511, 40.9781, 0.52 ) }
    dend_41 { pt3dadd( 88.3705, -270.039, 41.1313, 0.66 ) }
    dend_41 { pt3dadd( 88.8596, -270.861, 41.3553, 0.44 ) }
    dend_41 { pt3dadd( 97.3222, -279.443, 42.973, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -17.0877, -130.329, -4.57646, 2.28 ) }
    dend_34 { pt3dadd( -17.8376, -131.637, -4.39951, 2.28 ) }
    dend_34 { pt3dadd( -18.5476, -132.753, -4.18785, 1.62 ) }
    dend_34 { pt3dadd( -19.452, -134.076, -3.93126, 1.33 ) }
    dend_34 { pt3dadd( -20.3518, -135.317, -3.71247, 0.88 ) }
    dend_34 { pt3dadd( -20.7895, -135.888, -3.62353, 0.88 ) }
    dend_34 { pt3dadd( -21.4789, -136.723, -3.50905, 1.03 ) }
    dend_34 { pt3dadd( -22.8427, -138.209, -3.34089, 1.03 ) }
    dend_34 { pt3dadd( -24.0094, -139.337, -3.24794, 0.96 ) }
    dend_34 { pt3dadd( -24.9274, -140.148, -3.2271, 0.88 ) }
    dend_34 { pt3dadd( -25.7063, -140.84, -3.26051, 1.11 ) }
    dend_34 { pt3dadd( -26.5517, -141.679, -3.36903, 1.33 ) }
    dend_34 { pt3dadd( -27.2094, -142.486, -3.52521, 1.55 ) }
    dend_34 { pt3dadd( -27.7291, -143.316, -3.7278, 1.25 ) }
    dend_34 { pt3dadd( -28.101, -144.162, -3.94945, 0.96 ) }
    dend_34 { pt3dadd( -28.4158, -145.335, -4.2492, 0.88 ) }
    dend_34 { pt3dadd( -28.6427, -146.8, -4.62272, 0.88 ) }
    dend_34 { pt3dadd( -28.778, -148.371, -5.00695, 0.88 ) }
    dend_34 { pt3dadd( -28.8471, -149.756, -5.32911, 1.03 ) }
    dend_34 { pt3dadd( -28.8782, -151.053, -5.61084, 1.03 ) }
    dend_34 { pt3dadd( -28.901, -152.579, -5.90822, 1.03 ) }
    dend_34 { pt3dadd( -28.9133, -153.971, -6.14518, 1.25 ) }
    dend_34 { pt3dadd( -28.9086, -155.579, -6.36438, 1.55 ) }
    dend_34 { pt3dadd( -28.8781, -156.809, -6.48661, 1.55 ) }
    dend_34 { pt3dadd( -28.7843, -158.508, -6.60071, 1.33 ) }
    dend_34 { pt3dadd( -28.6787, -159.898, -6.66246, 1.33 ) }
    dend_34 { pt3dadd( -28.5891, -161.139, -6.70158, 1.11 ) }
    dend_34 { pt3dadd( -28.4926, -162.466, -6.6824, 1.11 ) }
    dend_34 { pt3dadd( -28.422, -163.926, -6.61521, 0.96 ) }
    dend_34 { pt3dadd( -28.412, -165.009, -6.54089, 0.96 ) }
    dend_34 { pt3dadd( -28.4654, -166.574, -6.38139, 0.88 ) }
    dend_34 { pt3dadd( -28.6048, -168.636, -6.1256, 0.88 ) }
    dend_34 { pt3dadd( -28.7763, -170.422, -5.86231, 1.03 ) }
    dend_34 { pt3dadd( -28.9666, -172.01, -5.59627, 1.25 ) }
    dend_34 { pt3dadd( -29.1813, -173.519, -5.32423, 1.33 ) }
    dend_34 { pt3dadd( -29.3711, -174.706, -5.09989, 1.62 ) }
    dend_34 { pt3dadd( -29.5578, -175.926, -4.85184, 2.5 ) }
    dend_34 { pt3dadd( -29.6348, -176.589, -4.71636, 2.8 ) }
    dend_34 { pt3dadd( -29.7072, -177.412, -4.58664, 3.02 ) }
    dend_34 { pt3dadd( -29.7406, -178.184, -4.4553, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -29.7568, -178.702, -4.36928, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -2.30366, -53.3719, -7.46833, 0.81 ) }
    dend_30 { pt3dadd( -2.61434, -54.8816, -7.39787, 0.81 ) }
    dend_30 { pt3dadd( -2.90498, -55.8976, -7.302, 0.66 ) }
    dend_30 { pt3dadd( -3.30762, -57.0327, -7.17283, 0.66 ) }
    dend_30 { pt3dadd( -3.77856, -58.2214, -7.03163, 0.52 ) }
    dend_30 { pt3dadd( -3.97432, -58.6964, -6.97561, 0.52 ) }
    dend_30 { pt3dadd( -4.49348, -59.9476, -6.83229, 0.74 ) }
    dend_30 { pt3dadd( -5.00878, -61.2199, -6.62961, 0.74 ) }
    dend_30 { pt3dadd( -5.46744, -62.2722, -6.47054, 0.88 ) }
    dend_30 { pt3dadd( -6.00701, -63.4126, -6.3239, 0.59 ) }
    dend_30 { pt3dadd( -6.36464, -64.1557, -6.25916, 1.03 ) }
    dend_30 { pt3dadd( -6.69089, -64.8852, -6.20503, 1.25 ) }
    dend_30 { pt3dadd( -7.00819, -65.743, -6.14861, 1.03 ) }
    dend_30 { pt3dadd( -7.33666, -66.8513, -6.08602, 0.66 ) }
    dend_30 { pt3dadd( -7.58093, -67.7553, -6.04075, 0.66 ) }
    dend_30 { pt3dadd( -7.83207, -68.6882, -6.00921, 0.81 ) }
    dend_30 { pt3dadd( -8.10968, -69.7802, -6.00583, 0.81 ) }
    dend_30 { pt3dadd( -8.30711, -70.6943, -6.04667, 0.66 ) }
    dend_30 { pt3dadd( -8.45964, -71.6626, -6.13858, 0.52 ) }
    dend_30 { pt3dadd( -8.52557, -72.2375, -6.23166, 0.52 ) }
    dend_30 { pt3dadd( -8.59841, -72.942, -6.36662, 0.52 ) }
    dend_30 { pt3dadd( -8.7093, -73.9459, -6.5856, 0.66 ) }
    dend_30 { pt3dadd( -8.82759, -74.8575, -6.79351, 0.66 ) }
    dend_30 { pt3dadd( -8.97561, -75.8205, -7.02162, 0.59 ) }
    dend_30 { pt3dadd( -9.16456, -76.8763, -7.2609, 1.18 ) }
    dend_30 { pt3dadd( -9.3207, -77.7959, -7.46012, 1.55 ) }
    dend_30 { pt3dadd( -9.48946, -78.6752, -7.63105, 1.99 ) }
    dend_30 { pt3dadd( -9.77321, -79.7389, -7.80946, 2.73 ) }
    dend_30 { pt3dadd( -10.0435, -80.5247, -7.92064, 2.87 ) }
    dend_30 { pt3dadd( -10.3414, -81.257, -8.02345, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -2.30366, -53.3719, -7.46833, 0.52 ) }
    dend_29 { pt3dadd( -1.09957, -55.3304, -9.12388, 0.52 ) }
    dend_29 { pt3dadd( -0.839338, -55.7915, -9.4694, 0.52 ) }
    dend_29 { pt3dadd( 0.0620839, -57.3163, -10.6051, 0.52 ) }
    dend_29 { pt3dadd( 0.792654, -58.4485, -11.4477, 0.66 ) }
    dend_29 { pt3dadd( 1.27041, -59.1422, -11.9337, 0.66 ) }
    dend_29 { pt3dadd( 1.70727, -59.7289, -12.3272, 0.44 ) }
    dend_29 { pt3dadd( 2.24397, -60.5369, -12.8742, 0.88 ) }
    dend_29 { pt3dadd( 2.71773, -61.2954, -13.3362, 1.33 ) }
    dend_29 { pt3dadd( 3.23022, -62.1129, -13.7767, 1.47 ) }
    dend_29 { pt3dadd( 3.83563, -63.0593, -14.394, 1.03 ) }
    dend_29 { pt3dadd( 4.61882, -64.5251, -15.5615, 0.44 ) }
    dend_29 { pt3dadd( 4.8644, -65.4101, -16.4936, 0.44 ) }
    dend_29 { pt3dadd( 4.9163, -66.4143, -17.9149, 0.37 ) }
    dend_29 { pt3dadd( 4.86802, -67.1378, -19.1539, 0.37 ) }
    dend_29 { pt3dadd( 4.85329, -68.0667, -21.0018, 0.37 ) }
    dend_29 { pt3dadd( 4.92185, -68.6769, -22.3864, 0.74 ) }
    dend_29 { pt3dadd( 5.04907, -69.0943, -23.4159, 0.96 ) }
    dend_29 { pt3dadd( 5.3413, -69.6793, -24.8053, 0.96 ) }
    dend_29 { pt3dadd( 5.96874, -70.7462, -27.2082, 0.44 ) }
    dend_29 { pt3dadd( 6.45861, -71.4839, -28.7105, 1.33 ) }
    dend_29 { pt3dadd( 7.16121, -72.5008, -30.5743, 1.55 ) }
    dend_29 { pt3dadd( 7.79361, -73.4375, -32.1913, 1.33 ) }
    dend_29 { pt3dadd( 8.62316, -74.7168, -34.2051, 0.81 ) }
    dend_29 { pt3dadd( 8.97173, -75.2659, -34.9743, 1.25 ) }
    dend_29 { pt3dadd( 9.40905, -75.9479, -35.7966, 0.88 ) }
    dend_29 { pt3dadd( 9.85044, -76.7139, -36.5802, 0.37 ) }
    dend_29 { pt3dadd( 10.1975, -77.3891, -37.1441, 0.81 ) }
    dend_29 { pt3dadd( 10.5329, -78.1123, -37.6716, 1.03 ) }
    dend_29 { pt3dadd( 10.7415, -78.5482, -37.946, 1.03 ) }
    dend_29 { pt3dadd( 11.5129, -80.0615, -38.8355, 0.29 ) }
    dend_29 { pt3dadd( 11.92, -80.831, -39.2493, 0.29 ) }
    dend_29 { pt3dadd( 12.4892, -81.8301, -39.7271, 1.84 ) }
    dend_29 { pt3dadd( 13.0364, -82.6738, -40.1178, 2.14 ) }
    dend_29 { pt3dadd( 14.5749, -84.7624, -41.119, 0.29 ) }
    dend_29 { pt3dadd( 15.3749, -85.7231, -41.5829, 0.81 ) }
    dend_29 { pt3dadd( 16.1891, -86.5893, -41.9964, 0.81 ) }
    dend_29 { pt3dadd( 17.0449, -87.3995, -42.404, 0.52 ) }
    dend_29 { pt3dadd( 18.2294, -88.4021, -42.9755, 1.25 ) }
    dend_29 { pt3dadd( 19.0117, -89.0131, -43.3663, 1.4 ) }
    dend_29 { pt3dadd( 21.0272, -90.5265, -44.3712, 0.22 ) }
    dend_29 { pt3dadd( 22.263, -91.4483, -44.9485, 0.22 ) }
    dend_29 { pt3dadd( 23.6527, -92.5019, -45.5542, 1.4 ) }
    dend_29 { pt3dadd( 24.5137, -93.2009, -45.9046, 2.21 ) }
    dend_29 { pt3dadd( 24.9017, -93.5467, -46.0429, 2.21 ) }
    dend_29 { pt3dadd( 27.3785, -95.9811, -46.806, 0.22 ) }
    dend_29 { pt3dadd( 28.037, -96.6664, -46.9946, 0.74 ) }
    dend_29 { pt3dadd( 28.6194, -97.301, -47.1712, 1.03 ) }
    dend_29 { pt3dadd( 29.5582, -98.3984, -47.472, 0.59 ) }
    dend_29 { pt3dadd( 31.7458, -101.104, -48.199, 0.22 ) }
    dend_29 { pt3dadd( 34.5242, -104.62, -49.1817, 0.22 ) }
    dend_29 { pt3dadd( 35.5011, -105.869, -49.5748, 0.81 ) }
    dend_29 { pt3dadd( 36.2294, -106.793, -49.8844, 0.96 ) }
    dend_29 { pt3dadd( 38.6048, -109.802, -50.957, 0.22 ) }
    dend_29 { pt3dadd( 40.1038, -111.661, -51.6926, 0.22 ) }
    dend_29 { pt3dadd( 40.9421, -112.688, -52.1578, 0.88 ) }
    dend_29 { pt3dadd( 41.78, -113.684, -52.6755, 0.88 ) }
    dend_29 { pt3dadd( 44.1549, -116.469, -54.2001, 0.15 ) }
    dend_29 { pt3dadd( 45.937, -118.505, -55.2627, 0.15 ) }
    dend_29 { pt3dadd( 46.9805, -119.656, -55.8714, 0.15 ) }
    dend_29 { pt3dadd( 47.9258, -120.705, -56.4114, 1.62 ) }
    dend_29 { pt3dadd( 48.5111, -121.382, -56.7367, 1.92 ) }
    dend_29 { pt3dadd( 48.9689, -121.925, -56.9625, 1.92 ) }
    dend_29 { pt3dadd( 51.9051, -125.533, -58.3039, 0.22 ) }
    dend_29 { pt3dadd( 52.527, -126.304, -58.5548, 0.66 ) }
    dend_29 { pt3dadd( 52.9968, -126.903, -58.7348, 0.88 ) }
    dend_29 { pt3dadd( 53.4796, -127.514, -58.9219, 0.88 ) }
    dend_29 { pt3dadd( 55.0546, -129.509, -59.6966, 0.15 ) }
    dend_29 { pt3dadd( 56.2572, -131.123, -60.5307, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 56.9193, -132.103, -61.1518, 0.81 ) }
    dend_29 { pt3dadd( 57.3292, -132.802, -61.627, 1.03 ) }
    dend_29 { pt3dadd( 57.6462, -133.434, -62.08, 1.03 ) }
    dend_29 { pt3dadd( 58.5164, -135.553, -63.6998, 0.22 ) }
    dend_29 { pt3dadd( 59.2357, -137.849, -65.5855, 0.22 ) }
    dend_29 { pt3dadd( 59.5017, -138.782, -66.4164, 0.22 ) }
    dend_29 { pt3dadd( 59.8794, -140.133, -67.6949, 1.03 ) }
    dend_29 { pt3dadd( 60.0801, -140.834, -68.3652, 1.62 ) }
    dend_29 { pt3dadd( 60.2917, -141.543, -69.0812, 1.62 ) }
    dend_29 { pt3dadd( 60.6896, -142.738, -70.3636, 1.03 ) }
    dend_29 { pt3dadd( 61.5881, -145.189, -73.1127, 0.22 ) }
    dend_29 { pt3dadd( 62.0324, -146.336, -74.5442, 0.44 ) }
    dend_29 { pt3dadd( 62.307, -146.966, -75.3704, 0.44 ) }
    dend_29 { pt3dadd( 62.9355, -148.357, -77.2033, 0.66 ) }
    dend_29 { pt3dadd( 63.2629, -149.058, -78.0974, 0.96 ) }
    dend_29 { pt3dadd( 63.6571, -149.868, -79.1047, 0.37 ) }
    dend_29 { pt3dadd( 64.9606, -152.467, -82.1905, 0.66 ) }
    dend_29 { pt3dadd( 65.2473, -153.001, -82.8016, 0.66 ) }
    dend_29 { pt3dadd( 66.3393, -154.943, -85.0312, 0.22 ) }
    dend_29 { pt3dadd( 66.952, -155.969, -86.1463, 0.22 ) }
    dend_29 { pt3dadd( 67.5297, -156.884, -87.1085, 0.81 ) }
    dend_29 { pt3dadd( 68.1078, -157.709, -87.9313, 0.96 ) }
    dend_29 { pt3dadd( 68.5028, -158.246, -88.3106, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 29.4558, 194.634, -36.8955, 0.37 ) }
    dend_24 { pt3dadd( 31.3232, 193.764, -34.7476, 0.37 ) }
    dend_24 { pt3dadd( 31.7043, 193.587, -34.3093, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 29.4558, 194.634, -36.8955, 0.22 ) }
    dend_23 { pt3dadd( 30.4759, 196.802, -36.9973, 0.22 ) }
    dend_23 { pt3dadd( 30.9961, 197.98, -37.1063, 0.22 ) }
    dend_23 { pt3dadd( 31.3944, 198.912, -37.2149, 0.74 ) }
    dend_23 { pt3dadd( 31.5344, 199.258, -37.2589, 0.74 ) }
    dend_23 { pt3dadd( 32.1834, 200.858, -37.4625, 0.15 ) }
    dend_23 { pt3dadd( 32.6033, 201.894, -37.5942, 0.15 ) }
    dend_23 { pt3dadd( 32.9102, 202.64, -37.7784, 0.66 ) }
    dend_23 { pt3dadd( 33.0641, 203.101, -37.876, 0.88 ) }
    dend_23 { pt3dadd( 33.2264, 203.629, -37.9568, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -11.0556, 42.4344, 1.36429, 0.66 ) }
    dend_17 { pt3dadd( -11.3628, 43.8852, 1.16483, 0.66 ) }
    dend_17 { pt3dadd( -11.4316, 44.4356, 1.11277, 0.96 ) }
    dend_17 { pt3dadd( -11.5085, 45.0819, 1.06409, 0.96 ) }
    dend_17 { pt3dadd( -11.6072, 45.9653, 1.00908, 0.59 ) }
    dend_17 { pt3dadd( -11.685, 46.7485, 0.966673, 0.59 ) }
    dend_17 { pt3dadd( -11.7618, 47.6748, 0.921821, 0.59 ) }
    dend_17 { pt3dadd( -11.8392, 49.0232, 0.900759, 0.59 ) }
    dend_17 { pt3dadd( -11.8551, 49.6596, 0.893349, 0.52 ) }
    dend_17 { pt3dadd( -11.8575, 50.6107, 0.886272, 0.88 ) }
    dend_17 { pt3dadd( -11.8598, 51.2998, 0.875846, 1.11 ) }
    dend_17 { pt3dadd( -11.8803, 52.1215, 0.852688, 1.11 ) }
    dend_17 { pt3dadd( -11.9176, 53.0677, 0.827085, 0.74 ) }
    dend_17 { pt3dadd( -11.98, 54.0593, 0.801558, 0.74 ) }
    dend_17 { pt3dadd( -12.0732, 55.3284, 0.77333, 0.74 ) }
    dend_17 { pt3dadd( -12.1557, 56.2033, 0.748747, 0.52 ) }
    dend_17 { pt3dadd( -12.2648, 57.1383, 0.70847, 0.52 ) }
    dend_17 { pt3dadd( -12.3527, 57.8113, 0.670312, 0.96 ) }
    dend_17 { pt3dadd( -12.486, 58.804, 0.591284, 1.11 ) }
    dend_17 { pt3dadd( -12.6893, 60.2751, 0.447251, 1.11 ) }
    dend_17 { pt3dadd( -12.8221, 61.2413, 0.338853, 1.11 ) }
    dend_17 { pt3dadd( -12.938, 62.2047, 0.238154, 0.81 ) }
    dend_17 { pt3dadd( -13.0241, 63.052, 0.155597, 0.74 ) }
    dend_17 { pt3dadd( -13.0925, 63.9354, 0.078151, 0.74 ) }
    dend_17 { pt3dadd( -13.1328, 64.7644, 0.0187557, 0.44 ) }
    dend_17 { pt3dadd( -13.1603, 65.4663, -0.016222, 0.44 ) }
    dend_17 { pt3dadd( -13.2093, 66.6224, -0.0395581, 0.74 ) }
    dend_17 { pt3dadd( -13.2421, 67.4211, -0.0381535, 0.74 ) }
    dend_17 { pt3dadd( -13.2711, 68.2705, -0.0290751, 0.37 ) }
    dend_17 { pt3dadd( -13.2745, 69.1527, -0.0146154, 0.74 ) }
    dend_17 { pt3dadd( -13.2668, 69.922, -0.0329741, 0.96 ) }
    dend_17 { pt3dadd( -13.2505, 70.8031, -0.0915911, 0.96 ) }
    dend_17 { pt3dadd( -13.2278, 71.7709, -0.209346, 0.81 ) }
    dend_17 { pt3dadd( -13.1984, 72.6785, -0.350164, 0.52 ) }
    dend_17 { pt3dadd( -13.1552, 73.6262, -0.522156, 0.52 ) }
    dend_17 { pt3dadd( -13.0651, 74.8692, -0.769947, 1.03 ) }
    dend_17 { pt3dadd( -13.0026, 75.5297, -0.909113, 1.55 ) }
    dend_17 { pt3dadd( -12.9401, 76.1266, -1.04117, 1.69 ) }
    dend_17 { pt3dadd( -12.8984, 76.5156, -1.12693, 1.69 ) }
    dend_17 { pt3dadd( -12.7899, 77.4781, -1.32104, 0.37 ) }
    dend_17 { pt3dadd( -12.693, 78.2844, -1.45132, 0.44 ) }
    dend_17 { pt3dadd( -12.6245, 78.7051, -1.49165, 0.44 ) }
    dend_17 { pt3dadd( -12.5293, 79.1903, -1.52327, 0.44 ) }
    dend_17 { pt3dadd( -12.3536, 79.9941, -1.5563, 0.29 ) }
    dend_17 { pt3dadd( -12.2664, 80.3359, -1.56856, 0.59 ) }
    dend_17 { pt3dadd( -12.0909, 80.9163, -1.58786, 0.44 ) }
    dend_17 { pt3dadd( -11.803, 81.8293, -1.61486, 0.29 ) }
    dend_17 { pt3dadd( -11.5506, 82.6758, -1.6363, 1.18 ) }
    dend_17 { pt3dadd( -11.4235, 83.1314, -1.64559, 1.18 ) }
    dend_17 { pt3dadd( -11.2384, 83.8154, -1.66108, 0.52 ) }
    dend_17 { pt3dadd( -11.0622, 84.4715, -1.67601, 0.29 ) }
    dend_17 { pt3dadd( -10.8547, 85.2213, -1.67066, 0.29 ) }
    dend_17 { pt3dadd( -10.6791, 85.9015, -1.62666, 0.29 ) }
    dend_17 { pt3dadd( -10.579, 86.3473, -1.57611, 0.29 ) }
    dend_17 { pt3dadd( -10.4095, 87.2361, -1.4428, 0.81 ) }
    dend_17 { pt3dadd( -10.2749, 88.0158, -1.3047, 0.44 ) }
    dend_17 { pt3dadd( -10.1319, 88.7627, -1.178, 0.22 ) }
    dend_17 { pt3dadd( -9.95282, 89.5161, -1.06097, 0.44 ) }
    dend_17 { pt3dadd( -9.87741, 89.8049, -1.01338, 0.44 ) }
    dend_17 { pt3dadd( -9.72038, 90.4244, -0.908017, 0.29 ) }
    dend_17 { pt3dadd( -9.59167, 90.9845, -0.808463, 0.29 ) }
    dend_17 { pt3dadd( -9.41326, 91.749, -0.689943, 0.29 ) }
    dend_17 { pt3dadd( -9.29572, 92.2365, -0.632885, 0.29 ) }
    dend_17 { pt3dadd( -9.1398, 92.8638, -0.567414, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -9.01654, 93.3739, -0.50884, 0.66 ) }
    dend_17 { pt3dadd( -8.86563, 94.0184, -0.452128, 0.74 ) }
    dend_17 { pt3dadd( -8.73262, 94.7201, -0.386214, 0.37 ) }
    dend_17 { pt3dadd( -8.64691, 95.2696, -0.331646, 0.37 ) }
    dend_17 { pt3dadd( -8.53223, 96.0369, -0.279961, 0.52 ) }
    dend_17 { pt3dadd( -8.44312, 96.6155, -0.264647, 0.59 ) }
    dend_17 { pt3dadd( -8.30574, 97.4952, -0.254393, 0.44 ) }
    dend_17 { pt3dadd( -8.20615, 98.115, -0.253611, 0.29 ) }
    dend_17 { pt3dadd( -8.13058, 98.5498, -0.251007, 0.29 ) }
    dend_17 { pt3dadd( -7.96514, 99.5113, -0.232856, 1.11 ) }
    dend_17 { pt3dadd( -7.87204, 100.062, -0.215532, 1.25 ) }
    dend_17 { pt3dadd( -7.80653, 100.455, -0.198505, 1.25 ) }
    dend_17 { pt3dadd( -7.65484, 101.281, -0.162516, 0.66 ) }
    dend_17 { pt3dadd( -7.5462, 101.773, -0.157223, 0.29 ) }
    dend_17 { pt3dadd( -7.35136, 102.538, -0.159366, 0.29 ) }
    dend_17 { pt3dadd( -7.1569, 103.222, -0.168463, 0.29 ) }
    dend_17 { pt3dadd( -6.96227, 103.84, -0.182286, 0.29 ) }
    dend_17 { pt3dadd( -6.64873, 104.763, -0.21235, 0.96 ) }
    dend_17 { pt3dadd( -6.51155, 105.163, -0.232801, 1.47 ) }
    dend_17 { pt3dadd( -6.40435, 105.506, -0.256006, 1.47 ) }
    dend_17 { pt3dadd( -6.34879, 105.707, -0.272909, 1.47 ) }
    dend_17 { pt3dadd( -6.21082, 106.298, -0.321391, 0.74 ) }
    dend_17 { pt3dadd( -6.0697, 106.976, -0.371252, 0.29 ) }
    dend_17 { pt3dadd( -5.94687, 107.671, -0.416263, 0.52 ) }
    dend_17 { pt3dadd( -5.83256, 108.313, -0.453611, 0.74 ) }
    dend_17 { pt3dadd( -5.666, 109.129, -0.494722, 0.44 ) }
    dend_17 { pt3dadd( -5.5148, 109.779, -0.523655, 0.29 ) }
    dend_17 { pt3dadd( -5.39467, 110.235, -0.542321, 0.29 ) }
    dend_17 { pt3dadd( -5.20214, 110.861, -0.564687, 0.66 ) }
    dend_17 { pt3dadd( -5.04903, 111.308, -0.581522, 0.74 ) }
    dend_17 { pt3dadd( -4.82441, 111.939, -0.606678, 0.74 ) }
    dend_17 { pt3dadd( -4.57832, 112.645, -0.629338, 0.29 ) }
    dend_17 { pt3dadd( -4.37174, 113.277, -0.645376, 0.29 ) }
    dend_17 { pt3dadd( -3.98662, 114.55, -0.670982, 0.29 ) }
    dend_17 { pt3dadd( -3.752, 115.421, -0.642312, 0.52 ) }
    dend_17 { pt3dadd( -3.62606, 115.947, -0.603819, 1.18 ) }
    dend_17 { pt3dadd( -3.53235, 116.405, -0.555751, 1.4 ) }
    dend_17 { pt3dadd( -3.40621, 117.15, -0.458265, 1.4 ) }
    dend_17 { pt3dadd( -3.32734, 117.736, -0.371186, 0.66 ) }
    dend_17 { pt3dadd( -3.16106, 119.108, -0.162431, 0.29 ) }
    dend_17 { pt3dadd( -3.04513, 119.972, -0.0498507, 0.29 ) }
    dend_17 { pt3dadd( -2.95862, 120.492, -0.0124028, 0.37 ) }
    dend_17 { pt3dadd( -2.82206, 121.191, -0.00213828, 0.37 ) }
    dend_17 { pt3dadd( -2.65953, 121.911, -0.0238029, 0.37 ) }
    dend_17 { pt3dadd( -2.33119, 123.183, -0.118896, 0.37 ) }
    dend_17 { pt3dadd( -1.9254, 124.562, -0.297967, 0.37 ) }
    dend_17 { pt3dadd( -1.49409, 125.898, -0.488634, 1.33 ) }
    dend_17 { pt3dadd( -1.26318, 126.539, -0.594457, 1.99 ) }
    dend_17 { pt3dadd( -1.06761, 127.046, -0.68725, 1.99 ) }
    dend_17 { pt3dadd( -0.984115, 127.261, -0.729191, 1.99 ) }
    dend_17 { pt3dadd( -0.828159, 127.657, -0.806372, 1.99 ) }
    dend_17 { pt3dadd( -0.498996, 128.484, -0.951168, 0.59 ) }
    dend_17 { pt3dadd( -0.108601, 129.447, -1.08276, 0.29 ) }
    dend_17 { pt3dadd( 0.172865, 130.121, -1.13609, 0.59 ) }
    dend_17 { pt3dadd( 0.394759, 130.642, -1.16038, 0.59 ) }
    dend_17 { pt3dadd( 0.86629, 131.736, -1.17866, 0.37 ) }
    dend_17 { pt3dadd( 1.12074, 132.345, -1.17072, 0.37 ) }
    dend_17 { pt3dadd( 1.51289, 133.332, -1.12801, 0.37 ) }
    dend_17 { pt3dadd( 1.95203, 134.521, -1.04405, 0.74 ) }
    dend_17 { pt3dadd( 2.10964, 135.011, -1.00863, 0.74 ) }
    dend_17 { pt3dadd( 2.24474, 135.518, -0.966312, 0.88 ) }
    dend_17 { pt3dadd( 2.39586, 136.255, -0.899639, 0.44 ) }
    dend_17 { pt3dadd( 2.58908, 137.529, -0.811718, 0.29 ) }
    dend_17 { pt3dadd( 2.65375, 138.21, -0.80302, 0.52 ) }
    dend_17 { pt3dadd( 2.71893, 139.474, -0.866352, 1.25 ) }
    dend_17 { pt3dadd( 2.73159, 140.012, -0.908977, 1.62 ) }
    dend_17 { pt3dadd( 2.73506, 140.364, -0.955093, 1.62 ) }
    dend_17 { pt3dadd( 2.73516, 141.088, -1.08401, 0.96 ) }
    dend_17 { pt3dadd( 2.73852, 142.165, -1.3298, 0.29 ) }
    dend_17 { pt3dadd( 2.7575, 142.784, -1.48614, 0.29 ) }
    dend_17 { pt3dadd( 2.80464, 143.536, -1.67144, 0.29 ) }
    dend_17 { pt3dadd( 2.85955, 144.326, -1.8399, 0.74 ) }
    dend_17 { pt3dadd( 2.88055, 144.685, -1.89845, 0.96 ) }
    dend_17 { pt3dadd( 2.90151, 145.102, -1.94491, 0.96 ) }
    dend_17 { pt3dadd( 2.9486, 146.159, -2.03389, 0.52 ) }
    dend_17 { pt3dadd( 3.01018, 147.619, -2.16455, 0.37 ) }
    dend_17 { pt3dadd( 3.04927, 148.62, -2.25088, 0.29 ) }
    dend_17 { pt3dadd( 3.07277, 149.564, -2.33725, 0.66 ) }
    dend_17 { pt3dadd( 3.08251, 150.197, -2.40819, 0.66 ) }
    dend_17 { pt3dadd( 3.08596, 151.384, -2.56499, 0.29 ) }
    dend_17 { pt3dadd( 3.08672, 151.973, -2.64775, 0.29 ) }
    dend_17 { pt3dadd( 3.09549, 153.524, -2.87034, 0.29 ) }
    dend_17 { pt3dadd( 3.12976, 155.213, -3.10672, 1.99 ) }
    dend_17 { pt3dadd( 3.13922, 155.597, -3.15446, 2.28 ) }
    dend_17 { pt3dadd( 3.14806, 156.14, -3.20845, 1.55 ) }
    dend_17 { pt3dadd( 3.15424, 156.736, -3.23712, 0.88 ) }
    dend_17 { pt3dadd( 3.1535, 157.71, -3.22602, 0.22 ) }
    dend_17 { pt3dadd( 3.14601, 158.167, -3.19906, 0.22 ) }
    dend_17 { pt3dadd( 3.1252, 159.003, -3.1179, 0.66 ) }
    dend_17 { pt3dadd( 3.11174, 159.531, -3.06652, 0.66 ) }
    dend_17 { pt3dadd( 3.09554, 160.425, -2.98933, 0.29 ) }
    dend_17 { pt3dadd( 3.07424, 161.854, -2.8966, 0.22 ) }
    dend_17 { pt3dadd( 3.08159, 162.578, -2.85999, 0.22 ) }
    dend_17 { pt3dadd( 3.10888, 163.344, -2.83478, 0.52 ) }
    dend_17 { pt3dadd( 3.18978, 164.302, -2.82564, 0.44 ) }
    dend_17 { pt3dadd( 3.2988, 165.136, -2.83579, 0.44 ) }
    dend_17 { pt3dadd( 3.46258, 166.098, -2.87267, 0.44 ) }
    dend_17 { pt3dadd( 3.78602, 167.588, -2.95251, 0.22 ) }
    dend_17 { pt3dadd( 4.05658, 168.697, -3.01871, 0.66 ) }
    dend_17 { pt3dadd( 4.30166, 169.595, -3.07719, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 4.44435, 170.069, -3.10973, 1.77 ) }
    dend_17 { pt3dadd( 4.58528, 170.494, -3.13948, 1.77 ) }
    dend_17 { pt3dadd( 4.82198, 171.117, -3.18261, 0.88 ) }
    dend_17 { pt3dadd( 5.11024, 171.81, -3.20234, 0.29 ) }
    dend_17 { pt3dadd( 5.31361, 172.28, -3.19727, 0.52 ) }
    dend_17 { pt3dadd( 5.82868, 173.499, -3.15412, 0.22 ) }
    dend_17 { pt3dadd( 6.12358, 174.193, -3.13333, 0.52 ) }
    dend_17 { pt3dadd( 6.45825, 174.975, -3.12058, 0.52 ) }
    dend_17 { pt3dadd( 7.18167, 176.695, -3.1151, 0.22 ) }
    dend_17 { pt3dadd( 7.72851, 178.009, -3.13209, 0.37 ) }
    dend_17 { pt3dadd( 8.08205, 178.874, -3.14674, 0.37 ) }
    dend_17 { pt3dadd( 8.46313, 179.837, -3.17116, 1.92 ) }
    dend_17 { pt3dadd( 8.63003, 180.279, -3.18965, 2.21 ) }
    dend_17 { pt3dadd( 8.78823, 180.737, -3.22621, 2.21 ) }
    dend_17 { pt3dadd( 8.96138, 181.275, -3.33661, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -11.0556, 42.4344, 1.36429, 0.66 ) }
    dend_14 { pt3dadd( -10.626, 43.8628, 1.61095, 0.66 ) }
    dend_14 { pt3dadd( -10.3621, 44.7325, 1.75375, 0.81 ) }
    dend_14 { pt3dadd( -10.1716, 45.3797, 1.87804, 0.37 ) }
    dend_14 { pt3dadd( -9.95805, 46.1592, 2.03138, 0.29 ) }
    dend_14 { pt3dadd( -9.59358, 47.466, 2.27944, 0.29 ) }
    dend_14 { pt3dadd( -9.36011, 48.2311, 2.42553, 0.29 ) }
    dend_14 { pt3dadd( -9.09053, 48.9666, 2.54835, 0.29 ) }
    dend_14 { pt3dadd( -8.6684, 49.9367, 2.7299, 0.29 ) }
    dend_14 { pt3dadd( -8.29044, 50.7328, 2.88549, 0.29 ) }
    dend_14 { pt3dadd( -7.91368, 51.5257, 3.04, 0.74 ) }
    dend_14 { pt3dadd( -7.65227, 52.0587, 3.1509, 0.74 ) }
    dend_14 { pt3dadd( -7.15527, 52.9617, 3.34494, 0.29 ) }
    dend_14 { pt3dadd( -6.86069, 53.4803, 3.46314, 0.37 ) }
    dend_14 { pt3dadd( -6.18467, 54.6871, 3.72664, 0.37 ) }
    dend_14 { pt3dadd( -5.82792, 55.3694, 3.87877, 0.37 ) }
    dend_14 { pt3dadd( -5.46375, 56.175, 4.05367, 0.37 ) }
    dend_14 { pt3dadd( -5.3177, 56.5462, 4.13213, 0.37 ) }
    dend_14 { pt3dadd( -5.08678, 57.2232, 4.27643, 0.22 ) }
    dend_14 { pt3dadd( -4.88099, 57.8804, 4.41528, 0.22 ) }
    dend_14 { pt3dadd( -4.69892, 58.399, 4.52034, 0.66 ) }
    dend_14 { pt3dadd( -4.49723, 59.0228, 4.61551, 0.96 ) }
    dend_14 { pt3dadd( -2.27278, 66.4678, 5.13181, 0.96 ) }
    dend_14 { pt3dadd( 1.62335, 73.0161, 7.12927, 0.96 ) }
    dend_14 { pt3dadd( 4.62856, 79.6804, 10.0389, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 32.5827, 10.4685, 6.83868, 0.66 ) }
    dend_8 { pt3dadd( 33.2387, 8.97424, 7.25136, 0.66 ) }
    dend_8 { pt3dadd( 33.4214, 8.49263, 7.34975, 0.66 ) }
    dend_8 { pt3dadd( 33.7248, 7.75646, 7.52562, 0.88 ) }
    dend_8 { pt3dadd( 34.283, 6.5776, 7.86237, 0.88 ) }
    dend_8 { pt3dadd( 34.6912, 5.83211, 8.11351, 0.88 ) }
    dend_8 { pt3dadd( 35.0933, 5.21534, 8.35065, 1.03 ) }
    dend_8 { pt3dadd( 35.5711, 4.54813, 8.62069, 1.03 ) }
    dend_8 { pt3dadd( 36.2995, 4.04619, 9.00867, 0.88 ) }
    dend_8 { pt3dadd( 36.9071, 3.93724, 9.2887, 0.88 ) }
    dend_8 { pt3dadd( 37.4349, 3.9098, 9.53329, 0.88 ) }
    dend_8 { pt3dadd( 38.2664, 3.84759, 9.95255, 0.81 ) }
    dend_8 { pt3dadd( 39.2089, 3.66139, 10.4938, 0.81 ) }
    dend_8 { pt3dadd( 39.7971, 3.42374, 10.8538, 0.81 ) }
    dend_8 { pt3dadd( 40.5308, 2.92597, 11.2968, 0.74 ) }
    dend_8 { pt3dadd( 41.304, 2.26447, 11.7592, 0.88 ) }
    dend_8 { pt3dadd( 41.9859, 1.58847, 12.1505, 0.88 ) }
    dend_8 { pt3dadd( 42.7105, 0.758244, 12.5546, 0.52 ) }
    dend_8 { pt3dadd( 43.0763, 0.320637, 12.726, 0.52 ) }
    dend_8 { pt3dadd( 43.5386, -0.159438, 12.8602, 0.52 ) }
    dend_8 { pt3dadd( 44.152, -0.670395, 12.959, 0.52 ) }
    dend_8 { pt3dadd( 44.8741, -1.13307, 13.0056, 0.74 ) }
    dend_8 { pt3dadd( 45.6196, -1.53309, 13.0131, 0.74 ) }
    dend_8 { pt3dadd( 46.5748, -1.98319, 12.9929, 0.74 ) }
    dend_8 { pt3dadd( 47.8426, -2.52831, 12.9582, 0.74 ) }
    dend_8 { pt3dadd( 48.7252, -2.8847, 12.922, 0.74 ) }
    dend_8 { pt3dadd( 49.4275, -3.1326, 12.8891, 0.74 ) }
    dend_8 { pt3dadd( 50.1979, -3.32752, 12.8443, 0.74 ) }
    dend_8 { pt3dadd( 50.651, -3.40456, 12.8278, 0.88 ) }
    dend_8 { pt3dadd( 51.9382, -3.52422, 12.7823, 0.88 ) }
    dend_8 { pt3dadd( 53.037, -3.58748, 12.7554, 0.88 ) }
    dend_8 { pt3dadd( 54.3951, -3.67222, 12.7398, 0.66 ) }
    dend_8 { pt3dadd( 55.3844, -3.74629, 12.7554, 0.66 ) }
    dend_8 { pt3dadd( 57.9218, -3.94141, 12.8622, 0.59 ) }
    dend_8 { pt3dadd( 58.7996, -4.01182, 12.9162, 0.52 ) }
    dend_8 { pt3dadd( 60.1289, -4.08547, 13.0122, 0.52 ) }
    dend_8 { pt3dadd( 60.9324, -4.0863, 13.0728, 0.52 ) }
    dend_8 { pt3dadd( 61.8131, -4.01121, 13.1231, 0.52 ) }
    dend_8 { pt3dadd( 62.8715, -3.8576, 13.1725, 0.52 ) }
    dend_8 { pt3dadd( 63.5795, -3.73745, 13.2102, 0.52 ) }
    dend_8 { pt3dadd( 64.7301, -3.58341, 13.2955, 0.52 ) }
    dend_8 { pt3dadd( 65.9776, -3.41391, 13.3965, 0.52 ) }
    dend_8 { pt3dadd( 67.143, -3.28641, 13.5074, 0.52 ) }
    dend_8 { pt3dadd( 68.2189, -3.246, 13.6412, 0.52 ) }
    dend_8 { pt3dadd( 69.4301, -3.33137, 13.8455, 0.52 ) }
    dend_8 { pt3dadd( 70.2482, -3.5106, 14.041, 0.52 ) }
    dend_8 { pt3dadd( 70.9956, -3.75278, 14.2961, 0.52 ) }
    dend_8 { pt3dadd( 71.4934, -3.92282, 14.5028, 0.52 ) }
    dend_8 { pt3dadd( 72.1205, -4.11493, 14.7881, 0.52 ) }
    dend_8 { pt3dadd( 73.3918, -4.40718, 15.4202, 0.29 ) }
    dend_8 { pt3dadd( 75.673, -4.72668, 16.6068, 0.29 ) }
    dend_8 { pt3dadd( 77.751, -4.86045, 17.7043, 0.29 ) }
    dend_8 { pt3dadd( 78.8163, -4.83859, 18.2763, 0.29 ) }
    dend_8 { pt3dadd( 79.5836, -4.78368, 18.6913, 0.44 ) }
    dend_8 { pt3dadd( 80.4, -4.6546, 19.1439, 0.59 ) }
    dend_8 { pt3dadd( 80.9147, -4.49254, 19.463, 0.59 ) }
    dend_8 { pt3dadd( 81.7682, -3.89829, 20.0445, 0.59 ) }
    dend_8 { pt3dadd( 82.2366, -3.37951, 20.3298, 0.59 ) }
    dend_8 { pt3dadd( 90.8033, -6.12083, 23.6271, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 32.5827, 10.4685, 6.83868, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 33.8908, 10.0848, 6.94283, 1.11 ) }
    dend_3 { pt3dadd( 34.6927, 9.74726, 7.00971, 1.11 ) }
    dend_3 { pt3dadd( 35.6212, 9.38614, 6.9976, 1.25 ) }
    dend_3 { pt3dadd( 36.3487, 9.16944, 6.9522, 1.47 ) }
    dend_3 { pt3dadd( 37.3494, 8.97552, 6.86018, 1.4 ) }
    dend_3 { pt3dadd( 38.2476, 8.88126, 6.75867, 1.4 ) }
    dend_3 { pt3dadd( 39.2672, 8.81127, 6.59225, 1.18 ) }
    dend_3 { pt3dadd( 40.6701, 8.9486, 6.28467, 1.18 ) }
    dend_3 { pt3dadd( 41.6467, 9.22895, 6.01435, 1.18 ) }
    dend_3 { pt3dadd( 42.4865, 9.53669, 5.75721, 1.18 ) }
    dend_3 { pt3dadd( 42.9858, 9.72396, 5.60318, 0.88 ) }
    dend_3 { pt3dadd( 43.4828, 9.86516, 5.46283, 0.88 ) }
    dend_3 { pt3dadd( 44.2558, 9.93436, 5.28322, 0.88 ) }
    dend_3 { pt3dadd( 45.4229, 9.77946, 5.08414, 1.11 ) }
    dend_3 { pt3dadd( 46.3029, 9.5399, 4.95035, 1.11 ) }
    dend_3 { pt3dadd( 47.1904, 9.23326, 4.82021, 1.11 ) }
    dend_3 { pt3dadd( 48.1904, 8.83495, 4.68221, 1.25 ) }
    dend_3 { pt3dadd( 49.2071, 8.3807, 4.55301, 1.33 ) }
    dend_3 { pt3dadd( 49.6757, 8.15181, 4.50108, 1.47 ) }
    dend_3 { pt3dadd( 50.4485, 7.78633, 4.43232, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -145.879, -101.194, 1.10701, 0.59 ) }
    dend_47 { pt3dadd( -145.9, -102.616, 0.453819, 0.59 ) }
    dend_47 { pt3dadd( -145.897, -103.223, 0.203034, 0.59 ) }
    dend_47 { pt3dadd( -145.874, -103.76, -0.00218808, 0.52 ) }
    dend_47 { pt3dadd( -145.835, -104.384, -0.222279, 0.52 ) }
    dend_47 { pt3dadd( -145.81, -105.062, -0.446663, 0.88 ) }
    dend_47 { pt3dadd( -145.785, -105.816, -0.686395, 1.03 ) }
    dend_47 { pt3dadd( -145.77, -106.278, -0.7937, 1.03 ) }
    dend_47 { pt3dadd( -145.716, -107.096, -0.973769, 1.03 ) }
    dend_47 { pt3dadd( -145.647, -107.801, -1.12329, 0.29 ) }
    dend_47 { pt3dadd( -145.601, -108.304, -1.22602, 0.29 ) }
    dend_47 { pt3dadd( -145.575, -108.721, -1.30634, 0.29 ) }
    dend_47 { pt3dadd( -145.569, -109.509, -1.45456, 0.59 ) }
    dend_47 { pt3dadd( -145.595, -110.163, -1.54093, 0.74 ) }
    dend_47 { pt3dadd( -145.637, -110.634, -1.57987, 0.88 ) }
    dend_47 { pt3dadd( -145.695, -111.094, -1.60493, 0.88 ) }
    dend_47 { pt3dadd( -145.758, -111.523, -1.61367, 0.88 ) }
    dend_47 { pt3dadd( -145.874, -112.1, -1.60823, 0.81 ) }
    dend_47 { pt3dadd( -146.172, -113.345, -1.58169, 0.37 ) }
    dend_47 { pt3dadd( -146.331, -114.019, -1.5619, 1.03 ) }
    dend_47 { pt3dadd( -146.486, -114.696, -1.51461, 1.33 ) }
    dend_47 { pt3dadd( -146.632, -115.319, -1.45321, 1.33 ) }
    dend_47 { pt3dadd( -146.834, -116.118, -1.35765, 1.03 ) }
    dend_47 { pt3dadd( -147.017, -116.79, -1.2711, 0.74 ) }
    dend_47 { pt3dadd( -147.191, -117.369, -1.21157, 0.37 ) }
    dend_47 { pt3dadd( -147.423, -118.141, -1.09032, 0.74 ) }
    dend_47 { pt3dadd( -147.563, -118.589, -1.00759, 0.74 ) }
    dend_47 { pt3dadd( -147.726, -119.127, -0.944302, 0.59 ) }
    dend_47 { pt3dadd( -147.834, -119.531, -0.926937, 0.37 ) }
    dend_47 { pt3dadd( -147.975, -120.106, -0.960842, 0.37 ) }
    dend_47 { pt3dadd( -148.216, -121.021, -1.13253, 0.66 ) }
    dend_47 { pt3dadd( -148.409, -121.652, -1.32528, 0.74 ) }
    dend_47 { pt3dadd( -148.783, -122.701, -1.7178, 0.52 ) }
    dend_47 { pt3dadd( -148.947, -123.133, -1.90243, 0.52 ) }
    dend_47 { pt3dadd( -149.179, -123.642, -2.13042, 1.33 ) }
    dend_47 { pt3dadd( -149.483, -124.271, -2.43006, 1.55 ) }
    dend_47 { pt3dadd( -149.886, -125.102, -2.80437, 1.99 ) }
    dend_47 { pt3dadd( -150.137, -125.608, -2.99091, 2.21 ) }
    dend_47 { pt3dadd( -150.472, -126.248, -3.17672, 1.99 ) }
    dend_47 { pt3dadd( -150.896, -127.021, -3.39278, 1.11 ) }
    dend_47 { pt3dadd( -151.351, -127.905, -3.65265, 0.37 ) }
    dend_47 { pt3dadd( -151.693, -128.66, -3.88305, 1.11 ) }
    dend_47 { pt3dadd( -151.851, -129.041, -4.00569, 1.25 ) }
    dend_47 { pt3dadd( -152.051, -129.533, -4.16452, 1.25 ) }
    dend_47 { pt3dadd( -152.506, -130.61, -4.54206, 0.29 ) }
    dend_47 { pt3dadd( -152.802, -131.291, -4.79779, 0.29 ) }
    dend_47 { pt3dadd( -153.102, -131.914, -5.03095, 0.44 ) }
    dend_47 { pt3dadd( -153.428, -132.558, -5.27582, 0.59 ) }
    dend_47 { pt3dadd( -153.819, -133.321, -5.55489, 0.88 ) }
    dend_47 { pt3dadd( -154.147, -133.958, -5.77488, 0.96 ) }
    dend_47 { pt3dadd( -154.5, -134.575, -5.96402, 0.66 ) }
    dend_47 { pt3dadd( -154.974, -135.317, -6.14493, 0.37 ) }
    dend_47 { pt3dadd( -155.335, -135.849, -6.25943, 0.29 ) }
    dend_47 { pt3dadd( -155.728, -136.412, -6.34596, 0.29 ) }
    dend_47 { pt3dadd( -156.065, -136.91, -6.39828, 0.29 ) }
    dend_47 { pt3dadd( -156.528, -137.588, -6.43695, 0.29 ) }
    dend_47 { pt3dadd( -157.225, -138.521, -6.4747, 0.74 ) }
    dend_47 { pt3dadd( -157.763, -139.174, -6.45954, 1.03 ) }
    dend_47 { pt3dadd( -158.429, -139.939, -6.40301, 2.28 ) }
    dend_47 { pt3dadd( -158.953, -140.499, -6.33574, 2.8 ) }
    dend_47 { pt3dadd( -159.456, -141.029, -6.26835, 3.09 ) }
    dend_47 { pt3dadd( -160.268, -141.911, -6.17097, 1.84 ) }
    dend_47 { pt3dadd( -161.21, -142.92, -6.06304, 0.29 ) }
    dend_47 { pt3dadd( -161.67, -143.441, -6.01223, 0.29 ) }
    dend_47 { pt3dadd( -162.273, -144.181, -5.96597, 0.29 ) }
    dend_47 { pt3dadd( -162.877, -144.992, -5.9273, 0.29 ) }
    dend_47 { pt3dadd( -163.283, -145.665, -5.91152, 0.88 ) }
    dend_47 { pt3dadd( -163.593, -146.269, -5.91199, 1.11 ) }
    dend_47 { pt3dadd( -163.838, -146.783, -5.93653, 0.81 ) }
    dend_47 { pt3dadd( -164.033, -147.228, -5.95982, 0.52 ) }
    dend_47 { pt3dadd( -164.329, -147.977, -6.00332, 0.29 ) }
    dend_47 { pt3dadd( -164.656, -148.866, -6.05164, 0.29 ) }
    dend_47 { pt3dadd( -164.915, -149.627, -6.0948, 0.29 ) }
    dend_47 { pt3dadd( -165.062, -150.038, -6.11774, 0.29 ) }
    dend_47 { pt3dadd( -165.338, -150.857, -6.16469, 0.81 ) }
    dend_47 { pt3dadd( -165.571, -151.617, -6.21103, 1.11 ) }
    dend_47 { pt3dadd( -165.735, -152.214, -6.25022, 0.88 ) }
    dend_47 { pt3dadd( -165.964, -153.061, -6.30854, 0.29 ) }
    dend_47 { pt3dadd( -166.238, -154.094, -6.37838, 0.29 ) }
    dend_47 { pt3dadd( -166.516, -155.01, -6.46803, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -166.626, -155.342, -6.50811, 0.29 ) }
    dend_47 { pt3dadd( -166.889, -156.131, -6.62355, 0.74 ) }
    dend_47 { pt3dadd( -167.082, -156.693, -6.71947, 0.74 ) }
    dend_47 { pt3dadd( -167.345, -157.483, -6.86916, 0.44 ) }
    dend_47 { pt3dadd( -167.642, -158.398, -7.0578, 0.29 ) }
    dend_47 { pt3dadd( -167.797, -158.851, -7.15509, 0.29 ) }
    dend_47 { pt3dadd( -167.997, -159.488, -7.26788, 0.29 ) }
    dend_47 { pt3dadd( -168.193, -160.262, -7.37412, 0.29 ) }
    dend_47 { pt3dadd( -168.283, -160.714, -7.41091, 0.74 ) }
    dend_47 { pt3dadd( -168.356, -161.138, -7.42134, 0.74 ) }
    dend_47 { pt3dadd( -168.475, -161.913, -7.39084, 0.44 ) }
    dend_47 { pt3dadd( -168.623, -162.791, -7.33762, 0.29 ) }
    dend_47 { pt3dadd( -168.757, -163.557, -7.26239, 0.74 ) }
    dend_47 { pt3dadd( -168.856, -164.095, -7.20238, 1.11 ) }
    dend_47 { pt3dadd( -168.956, -164.549, -7.15108, 1.69 ) }
    dend_47 { pt3dadd( -169.046, -164.928, -7.11202, 1.92 ) }
    dend_47 { pt3dadd( -169.178, -165.475, -7.06909, 1.92 ) }
    dend_47 { pt3dadd( -169.373, -166.292, -7.04202, 1.62 ) }
    dend_47 { pt3dadd( -169.61, -167.278, -7.02975, 0.29 ) }
    dend_47 { pt3dadd( -169.796, -168.064, -7.0367, 0.22 ) }
    dend_47 { pt3dadd( -169.964, -168.712, -7.04897, 0.22 ) }
    dend_47 { pt3dadd( -170.208, -169.584, -7.08101, 0.59 ) }
    dend_47 { pt3dadd( -170.427, -170.304, -7.12063, 0.74 ) }
    dend_47 { pt3dadd( -170.599, -170.805, -7.15047, 0.74 ) }
    dend_47 { pt3dadd( -170.838, -171.449, -7.17844, 0.44 ) }
    dend_47 { pt3dadd( -171.07, -171.997, -7.19435, 0.29 ) }
    dend_47 { pt3dadd( -171.345, -172.547, -7.18035, 0.29 ) }
    dend_47 { pt3dadd( -171.995, -173.661, -7.08049, 0.44 ) }
    dend_47 { pt3dadd( -172.381, -174.233, -7.01828, 0.59 ) }
    dend_47 { pt3dadd( -172.771, -174.764, -6.95808, 0.59 ) }
    dend_47 { pt3dadd( -173.238, -175.367, -6.90808, 0.52 ) }
    dend_47 { pt3dadd( -173.963, -176.261, -6.86187, 1.33 ) }
    dend_47 { pt3dadd( -174.568, -176.977, -6.85016, 2.06 ) }
    dend_47 { pt3dadd( -175.14, -177.663, -6.87169, 2.21 ) }
    dend_47 { pt3dadd( -175.559, -178.206, -6.92169, 2.21 ) }
    dend_47 { pt3dadd( -176.172, -179.084, -7.05322, 0.81 ) }
    dend_47 { pt3dadd( -176.549, -179.711, -7.19226, 0.29 ) }
    dend_47 { pt3dadd( -176.841, -180.275, -7.35702, 0.44 ) }
    dend_47 { pt3dadd( -177.023, -180.704, -7.49307, 0.44 ) }
    dend_47 { pt3dadd( -177.254, -181.334, -7.69123, 0.29 ) }
    dend_47 { pt3dadd( -177.427, -181.804, -7.85147, 0.29 ) }
    dend_47 { pt3dadd( -177.646, -182.387, -8.04929, 0.29 ) }
    dend_47 { pt3dadd( -177.808, -182.768, -8.17335, 0.74 ) }
    dend_47 { pt3dadd( -177.978, -183.117, -8.26737, 0.88 ) }
    dend_47 { pt3dadd( -178.198, -183.531, -8.35552, 0.88 ) }
    dend_47 { pt3dadd( -178.551, -184.213, -8.45743, 0.29 ) }
    dend_47 { pt3dadd( -178.896, -184.907, -8.50551, 0.29 ) }
    dend_47 { pt3dadd( -179.209, -185.624, -8.49454, 0.29 ) }
    dend_47 { pt3dadd( -179.543, -186.499, -8.44398, 0.52 ) }
    dend_47 { pt3dadd( -179.689, -186.914, -8.40561, 0.52 ) }
    dend_47 { pt3dadd( -179.928, -187.678, -8.30591, 0.29 ) }
    dend_47 { pt3dadd( -180.057, -188.215, -8.20809, 0.29 ) }
    dend_47 { pt3dadd( -180.247, -189.313, -7.96816, 0.59 ) }
    dend_47 { pt3dadd( -180.331, -189.943, -7.80654, 0.29 ) }
    dend_47 { pt3dadd( -180.386, -190.36, -7.67765, 0.29 ) }
    dend_47 { pt3dadd( -180.488, -190.942, -7.46403, 0.74 ) }
    dend_47 { pt3dadd( -180.706, -191.712, -7.12346, 0.88 ) }
    dend_47 { pt3dadd( -180.952, -192.289, -6.83478, 0.29 ) }
    dend_47 { pt3dadd( -181.258, -192.817, -6.53693, 0.29 ) }
    dend_47 { pt3dadd( -181.712, -193.47, -6.16726, 0.96 ) }
    dend_47 { pt3dadd( -182.1, -193.977, -5.90984, 1.11 ) }
    dend_47 { pt3dadd( -182.61, -194.6, -5.66574, 1.11 ) }
    dend_47 { pt3dadd( -183.166, -195.295, -5.47324, 0.29 ) }
    dend_47 { pt3dadd( -183.529, -195.805, -5.37859, 0.22 ) }
    dend_47 { pt3dadd( -183.822, -196.306, -5.34012, 0.44 ) }
    dend_47 { pt3dadd( -184.103, -196.891, -5.34862, 0.44 ) }
    dend_47 { pt3dadd( -184.492, -197.86, -5.44828, 0.22 ) }
    dend_47 { pt3dadd( -184.712, -198.457, -5.55081, 0.22 ) }
    dend_47 { pt3dadd( -184.865, -198.897, -5.65573, 0.22 ) }
    dend_47 { pt3dadd( -185.041, -199.39, -5.79326, 0.59 ) }
    dend_47 { pt3dadd( -185.167, -199.745, -5.89546, 0.74 ) }
    dend_47 { pt3dadd( -185.554, -200.783, -6.22469, 0.29 ) }
    dend_47 { pt3dadd( -185.765, -201.332, -6.40981, 0.29 ) }
    dend_47 { pt3dadd( -186.035, -202.014, -6.64651, 0.44 ) }
    dend_47 { pt3dadd( -186.281, -202.666, -6.87498, 0.44 ) }
    dend_47 { pt3dadd( -186.59, -203.535, -7.16597, 0.52 ) }
    dend_47 { pt3dadd( -186.764, -204.034, -7.3223, 0.96 ) }
    dend_47 { pt3dadd( -186.941, -204.535, -7.46127, 1.4 ) }
    dend_47 { pt3dadd( -187.138, -205.041, -7.59862, 1.4 ) }
    dend_47 { pt3dadd( -187.64, -206.227, -7.83606, 0.29 ) }
    dend_47 { pt3dadd( -188.159, -207.393, -7.98984, 0.22 ) }
    dend_47 { pt3dadd( -188.425, -207.97, -8.0221, 0.37 ) }
    dend_47 { pt3dadd( -188.857, -208.896, -8.00776, 0.37 ) }
    dend_47 { pt3dadd( -189.299, -209.813, -7.93956, 0.29 ) }
    dend_47 { pt3dadd( -189.906, -211.019, -7.7822, 0.74 ) }
    dend_47 { pt3dadd( -190.242, -211.639, -7.66501, 1.11 ) }
    dend_47 { pt3dadd( -190.632, -212.295, -7.52213, 1.25 ) }
    dend_47 { pt3dadd( -191.05, -212.938, -7.38225, 1.11 ) }
    dend_47 { pt3dadd( -191.459, -213.523, -7.26399, 0.59 ) }
    dend_47 { pt3dadd( -192.004, -214.268, -7.14802, 0.29 ) }
    dend_47 { pt3dadd( -192.339, -214.706, -7.13198, 0.29 ) }
    dend_47 { pt3dadd( -192.974, -215.535, -7.14312, 0.22 ) }
    dend_47 { pt3dadd( -193.396, -216.098, -7.17079, 0.22 ) }
    dend_47 { pt3dadd( -193.632, -216.418, -7.1908, 0.66 ) }
    dend_47 { pt3dadd( -193.996, -216.921, -7.22356, 0.66 ) }
    dend_47 { pt3dadd( -194.729, -217.975, -7.27252, 0.29 ) }
    dend_47 { pt3dadd( -195.172, -218.611, -7.28993, 0.29 ) }
    dend_47 { pt3dadd( -195.639, -219.247, -7.29498, 0.29 ) }
    dend_47 { pt3dadd( -196.129, -219.874, -7.29392, 0.66 ) }
    dend_47 { pt3dadd( -196.524, -220.35, -7.29147, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -197.162, -221.082, -7.28783, 0.22 ) }
    dend_47 { pt3dadd( -197.603, -221.57, -7.28921, 0.22 ) }
    dend_47 { pt3dadd( -198.346, -222.387, -7.30331, 0.22 ) }
    dend_47 { pt3dadd( -199.652, -223.824, -7.3728, 0.22 ) }
    dend_47 { pt3dadd( -200.045, -224.285, -7.42023, 0.22 ) }
    dend_47 { pt3dadd( -200.456, -224.806, -7.5013, 1.11 ) }
    dend_47 { pt3dadd( -200.68, -225.126, -7.57432, 1.11 ) }
    dend_47 { pt3dadd( -200.784, -225.312, -7.625, 1.11 ) }
    dend_47 { pt3dadd( -200.996, -225.798, -7.77451, 0.66 ) }
    dend_47 { pt3dadd( -201.261, -226.6, -8.05032, 0.22 ) }
    dend_47 { pt3dadd( -201.388, -227.095, -8.22181, 0.52 ) }
    dend_47 { pt3dadd( -201.593, -228.235, -8.61765, 0.22 ) }
    dend_47 { pt3dadd( -201.753, -229.164, -8.93217, 0.22 ) }
    dend_47 { pt3dadd( -201.82, -229.563, -9.06238, 0.59 ) }
    dend_47 { pt3dadd( -201.905, -230.071, -9.21969, 0.59 ) }
    dend_47 { pt3dadd( -202.026, -230.806, -9.44898, 0.52 ) }
    dend_47 { pt3dadd( -202.191, -231.888, -9.79375, 0.22 ) }
    dend_47 { pt3dadd( -202.275, -232.522, -10.0004, 0.22 ) }
    dend_47 { pt3dadd( -202.311, -232.901, -10.1258, 0.22 ) }
    dend_47 { pt3dadd( -202.342, -233.331, -10.2705, 0.66 ) }
    dend_47 { pt3dadd( -202.351, -233.959, -10.4438, 0.81 ) }
    dend_47 { pt3dadd( -202.293, -234.665, -10.5839, 0.59 ) }
    dend_47 { pt3dadd( -202.052, -235.706, -10.6764, 1.25 ) }
    dend_47 { pt3dadd( -201.831, -236.269, -10.6794, 1.69 ) }
    dend_47 { pt3dadd( -201.668, -236.554, -10.6587, 1.92 ) }
    dend_47 { pt3dadd( -200.937, -237.489, -10.5188, 1.18 ) }
    dend_47 { pt3dadd( -200.195, -238.215, -10.3374, 0.22 ) }
    dend_47 { pt3dadd( -199.299, -238.899, -10.1153, 0.22 ) }
    dend_47 { pt3dadd( -198.681, -239.286, -9.96744, 0.22 ) }
    dend_47 { pt3dadd( -197.902, -239.722, -9.80999, 0.22 ) }
    dend_47 { pt3dadd( -197.339, -240.019, -9.72338, 0.66 ) }
    dend_47 { pt3dadd( -196.923, -240.234, -9.69201, 0.66 ) }
    dend_47 { pt3dadd( -195.802, -240.809, -9.65997, 0.22 ) }
    dend_47 { pt3dadd( -195.377, -241.032, -9.6656, 0.37 ) }
    dend_47 { pt3dadd( -194.948, -241.301, -9.68147, 0.37 ) }
    dend_47 { pt3dadd( -194.605, -241.563, -9.69487, 0.22 ) }
    dend_47 { pt3dadd( -194.088, -242.019, -9.72021, 0.22 ) }
    dend_47 { pt3dadd( -197.451, -249.458, -10.2762, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -145.879, -101.194, 1.10701, 0.37 ) }
    dend_46 { pt3dadd( -147.282, -100.956, 1.65094, 0.37 ) }
    dend_46 { pt3dadd( -147.879, -100.877, 1.84794, 0.37 ) }
    dend_46 { pt3dadd( -149.178, -100.738, 2.17427, 0.29 ) }
    dend_46 { pt3dadd( -150.175, -100.659, 2.38072, 0.44 ) }
    dend_46 { pt3dadd( -151.143, -100.608, 2.55104, 0.66 ) }
    dend_46 { pt3dadd( -151.704, -100.591, 2.62979, 0.81 ) }
    dend_46 { pt3dadd( -152.197, -100.59, 2.66711, 0.81 ) }
    dend_46 { pt3dadd( -153.742, -100.615, 2.70741, 0.22 ) }
    dend_46 { pt3dadd( -154.231, -100.63, 2.69306, 0.22 ) }
    dend_46 { pt3dadd( -155.112, -100.66, 2.66434, 0.74 ) }
    dend_46 { pt3dadd( -155.835, -100.682, 2.63567, 0.88 ) }
    dend_46 { pt3dadd( -157.045, -100.717, 2.55386, 0.22 ) }
    dend_46 { pt3dadd( -157.55, -100.716, 2.48133, 0.22 ) }
    dend_46 { pt3dadd( -158.026, -100.71, 2.37672, 0.22 ) }
    dend_46 { pt3dadd( -158.572, -100.706, 2.22593, 0.74 ) }
    dend_46 { pt3dadd( -159.158, -100.722, 2.02145, 0.88 ) }
    dend_46 { pt3dadd( -159.814, -100.786, 1.70698, 0.88 ) }
    dend_46 { pt3dadd( -161.293, -101.061, 0.784235, 0.22 ) }
    dend_46 { pt3dadd( -161.824, -101.188, 0.40798, 0.22 ) }
    dend_46 { pt3dadd( -162.266, -101.302, 0.065741, 0.74 ) }
    dend_46 { pt3dadd( -162.831, -101.462, -0.45183, 0.74 ) }
    dend_46 { pt3dadd( -163.996, -101.828, -1.44904, 0.29 ) }
    dend_46 { pt3dadd( -164.357, -101.947, -1.73506, 0.29 ) }
    dend_46 { pt3dadd( -164.939, -102.151, -2.1602, 0.88 ) }
    dend_46 { pt3dadd( -165.632, -102.366, -2.62542, 1.03 ) }
    dend_46 { pt3dadd( -167.705, -102.902, -3.90237, 0.22 ) }
    dend_46 { pt3dadd( -169.659, -103.36, -5.00198, 0.22 ) }
    dend_46 { pt3dadd( -170.442, -103.525, -5.38324, 0.22 ) }
    dend_46 { pt3dadd( -170.904, -103.619, -5.5923, 1.11 ) }
    dend_46 { pt3dadd( -171.458, -103.737, -5.82392, 1.11 ) }
    dend_46 { pt3dadd( -172.045, -103.866, -6.01633, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -29.7568, -178.702, -4.36928, 0.81 ) }
    dend_40 { pt3dadd( -28.0304, -179.638, -4.48008, 0.81 ) }
    dend_40 { pt3dadd( -26.6296, -180.315, -4.59104, 0.52 ) }
    dend_40 { pt3dadd( -24.6282, -181.208, -4.77503, 0.52 ) }
    dend_40 { pt3dadd( -23.7542, -181.61, -4.86341, 0.37 ) }
    dend_40 { pt3dadd( -22.009, -182.437, -5.04899, 0.37 ) }
    dend_40 { pt3dadd( -21.3164, -182.777, -5.12425, 0.66 ) }
    dend_40 { pt3dadd( -20.6983, -183.081, -5.21274, 0.88 ) }
    dend_40 { pt3dadd( -20.1849, -183.339, -5.2813, 0.88 ) }
    dend_40 { pt3dadd( -18.8785, -184.129, -5.45913, 0.59 ) }
    dend_40 { pt3dadd( -17.7259, -184.974, -5.61766, 0.66 ) }
    dend_40 { pt3dadd( -16.5837, -185.94, -5.77112, 0.74 ) }
    dend_40 { pt3dadd( -15.8849, -186.526, -5.86291, 0.74 ) }
    dend_40 { pt3dadd( -15.3409, -186.947, -5.9321, 0.52 ) }
    dend_40 { pt3dadd( -14.4499, -187.561, -6.04652, 0.29 ) }
    dend_40 { pt3dadd( -13.4924, -188.088, -6.15174, 0.96 ) }
    dend_40 { pt3dadd( -12.6188, -188.497, -6.2312, 1.03 ) }
    dend_40 { pt3dadd( -12.0417, -188.745, -6.26922, 1.03 ) }
    dend_40 { pt3dadd( -10.7291, -189.283, -6.3227, 0.66 ) }
    dend_40 { pt3dadd( -10.1779, -189.514, -6.34754, 0.52 ) }
    dend_40 { pt3dadd( -8.91243, -190.066, -6.40806, 0.59 ) }
    dend_40 { pt3dadd( -7.66182, -190.682, -6.47183, 0.59 ) }
    dend_40 { pt3dadd( -6.51526, -191.324, -6.5402, 0.52 ) }
    dend_40 { pt3dadd( -5.56976, -191.92, -6.60803, 0.52 ) }
    dend_40 { pt3dadd( -4.58222, -192.605, -6.69201, 0.96 ) }
    dend_40 { pt3dadd( -3.96685, -193.041, -6.76292, 1.18 ) }
    dend_40 { pt3dadd( -2.94642, -193.747, -6.91203, 0.66 ) }
    dend_40 { pt3dadd( -1.73957, -194.515, -7.09799, 0.37 ) }
    dend_40 { pt3dadd( -0.982326, -194.95, -7.21914, 0.37 ) }
    dend_40 { pt3dadd( 0.589974, -195.763, -7.4775, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( 1.98368, -196.455, -7.66763, 1.03 ) }
    dend_40 { pt3dadd( 3.04366, -196.981, -7.7949, 0.81 ) }
    dend_40 { pt3dadd( 4.0212, -197.467, -7.88838, 0.52 ) }
    dend_40 { pt3dadd( 5.16909, -198.042, -7.96855, 0.52 ) }
    dend_40 { pt3dadd( 6.06651, -198.511, -8.00429, 0.52 ) }
    dend_40 { pt3dadd( 7.30014, -199.249, -8.01959, 0.52 ) }
    dend_40 { pt3dadd( 8.33605, -199.945, -8.00651, 1.33 ) }
    dend_40 { pt3dadd( 8.98098, -200.425, -7.99118, 1.69 ) }
    dend_40 { pt3dadd( 9.71742, -201.046, -7.96689, 1.69 ) }
    dend_40 { pt3dadd( 10.9374, -202.15, -8.02198, 1.11 ) }
    dend_40 { pt3dadd( 12.2571, -203.371, -8.18074, 0.44 ) }
    dend_40 { pt3dadd( 13.1113, -204.13, -8.3663, 0.44 ) }
    dend_40 { pt3dadd( 13.8028, -204.719, -8.56338, 0.29 ) }
    dend_40 { pt3dadd( 14.5914, -205.364, -8.85571, 0.29 ) }
    dend_40 { pt3dadd( 16.3819, -206.747, -9.63413, 1.03 ) }
    dend_40 { pt3dadd( 16.9044, -207.126, -9.89353, 1.4 ) }
    dend_40 { pt3dadd( 17.4678, -207.54, -10.2087, 1.4 ) }
    dend_40 { pt3dadd( 19.2569, -208.986, -11.3083, 0.22 ) }
    dend_40 { pt3dadd( 20.202, -209.794, -11.8998, 0.52 ) }
    dend_40 { pt3dadd( 20.6664, -210.209, -12.1828, 0.52 ) }
    dend_40 { pt3dadd( 21.4599, -210.995, -12.642, 0.29 ) }
    dend_40 { pt3dadd( 22.5677, -212.131, -13.2939, 0.29 ) }
    dend_40 { pt3dadd( 23.246, -212.837, -13.6787, 0.29 ) }
    dend_40 { pt3dadd( 23.9292, -213.588, -14.0745, 0.66 ) }
    dend_40 { pt3dadd( 24.4323, -214.151, -14.3311, 0.81 ) }
    dend_40 { pt3dadd( 24.7979, -214.563, -14.505, 0.81 ) }
    dend_40 { pt3dadd( 25.4143, -215.206, -14.7546, 0.59 ) }
    dend_40 { pt3dadd( 26.119, -215.866, -15.0155, 0.29 ) }
    dend_40 { pt3dadd( 26.7897, -216.52, -15.2267, 0.29 ) }
    dend_40 { pt3dadd( 27.5362, -217.373, -15.4215, 0.66 ) }
    dend_40 { pt3dadd( 28.0935, -218.127, -15.5089, 0.66 ) }
    dend_40 { pt3dadd( 28.8099, -219.285, -15.5276, 0.29 ) }
    dend_40 { pt3dadd( 29.1961, -220.033, -15.4725, 0.29 ) }
    dend_40 { pt3dadd( 29.8154, -221.403, -15.2832, 0.66 ) }
    dend_40 { pt3dadd( 30.227, -222.376, -15.0865, 0.66 ) }
    dend_40 { pt3dadd( 30.7129, -223.649, -14.7616, 0.44 ) }
    dend_40 { pt3dadd( 31.1465, -224.946, -14.383, 1.47 ) }
    dend_40 { pt3dadd( 31.4494, -225.991, -14.0565, 1.84 ) }
    dend_40 { pt3dadd( 31.6103, -226.605, -13.8651, 1.84 ) }
    dend_40 { pt3dadd( 31.7053, -226.986, -13.7648, 1.84 ) }
    dend_40 { pt3dadd( 31.9595, -227.958, -13.5272, 1.33 ) }
    dend_40 { pt3dadd( 32.3007, -229.129, -13.2683, 0.52 ) }
    dend_40 { pt3dadd( 32.4931, -229.746, -13.1399, 0.52 ) }
    dend_40 { pt3dadd( 32.7593, -230.584, -12.9672, 0.52 ) }
    dend_40 { pt3dadd( 33.1855, -231.923, -12.6792, 0.29 ) }
    dend_40 { pt3dadd( 33.4135, -232.616, -12.5216, 0.29 ) }
    dend_40 { pt3dadd( 33.7617, -233.604, -12.2745, 0.29 ) }
    dend_40 { pt3dadd( 34.107, -234.515, -12.0288, 0.44 ) }
    dend_40 { pt3dadd( 34.6421, -235.742, -11.6915, 0.44 ) }
    dend_40 { pt3dadd( 35.1595, -236.741, -11.435, 0.44 ) }
    dend_40 { pt3dadd( 35.5747, -237.438, -11.283, 1.33 ) }
    dend_40 { pt3dadd( 36.0681, -238.238, -11.1602, 1.84 ) }
    dend_40 { pt3dadd( 36.5621, -238.946, -11.0837, 1.84 ) }
    dend_40 { pt3dadd( 37.4125, -240.046, -10.9968, 0.96 ) }
    dend_40 { pt3dadd( 38.5479, -241.388, -10.9294, 0.22 ) }
    dend_40 { pt3dadd( 39.5271, -242.473, -10.9018, 0.22 ) }
    dend_40 { pt3dadd( 40.9285, -243.936, -10.9016, 0.22 ) }
    dend_40 { pt3dadd( 41.783, -244.758, -10.9151, 0.22 ) }
    dend_40 { pt3dadd( 42.7645, -245.602, -10.9419, 0.22 ) }
    dend_40 { pt3dadd( 43.6396, -246.282, -10.9866, 0.44 ) }
    dend_40 { pt3dadd( 44.6923, -247.027, -11.0732, 0.88 ) }
    dend_40 { pt3dadd( 45.7112, -247.714, -11.1992, 1.03 ) }
    dend_40 { pt3dadd( 46.3791, -248.159, -11.2971, 1.03 ) }
    dend_40 { pt3dadd( 47.1558, -248.714, -11.4222, 0.88 ) }
    dend_40 { pt3dadd( 47.9342, -249.24, -11.5562, 0.29 ) }
    dend_40 { pt3dadd( 48.4973, -249.595, -11.6367, 0.29 ) }
    dend_40 { pt3dadd( 49.3639, -250.094, -11.7096, 0.29 ) }
    dend_40 { pt3dadd( 50.459, -250.674, -11.7467, 0.37 ) }
    dend_40 { pt3dadd( 51.2873, -251.075, -11.728, 0.37 ) }
    dend_40 { pt3dadd( 52.0164, -251.394, -11.6785, 0.29 ) }
    dend_40 { pt3dadd( 53.4207, -251.933, -11.5283, 0.29 ) }
    dend_40 { pt3dadd( 54.5232, -252.324, -11.4056, 0.81 ) }
    dend_40 { pt3dadd( 55.1423, -252.542, -11.3444, 0.81 ) }
    dend_40 { pt3dadd( 56.3285, -253.027, -11.2268, 0.59 ) }
    dend_40 { pt3dadd( 57.1852, -253.474, -11.1237, 0.29 ) }
    dend_40 { pt3dadd( 57.9126, -253.928, -11.0187, 0.29 ) }
    dend_40 { pt3dadd( 58.6681, -254.464, -10.8899, 0.66 ) }
    dend_40 { pt3dadd( 59.2198, -254.883, -10.7699, 0.66 ) }
    dend_40 { pt3dadd( 60.8467, -256.166, -10.3333, 0.29 ) }
    dend_40 { pt3dadd( 61.8663, -256.974, -9.98843, 0.29 ) }
    dend_40 { pt3dadd( 62.9065, -257.812, -9.54029, 0.29 ) }
    dend_40 { pt3dadd( 63.6818, -258.456, -9.13531, 0.29 ) }
    dend_40 { pt3dadd( 64.4391, -259.085, -8.6703, 0.88 ) }
    dend_40 { pt3dadd( 64.7796, -259.366, -8.45366, 0.88 ) }
    dend_40 { pt3dadd( 65.68, -260.118, -7.83353, 0.66 ) }
    dend_40 { pt3dadd( 66.9051, -261.136, -6.91762, 0.29 ) }
    dend_40 { pt3dadd( 67.5286, -261.67, -6.41086, 0.29 ) }
    dend_40 { pt3dadd( 68.2619, -262.322, -5.8056, 0.66 ) }
    dend_40 { pt3dadd( 68.8807, -262.893, -5.33366, 0.44 ) }
    dend_40 { pt3dadd( 78.5131, -271.569, -3.01534, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -29.7568, -178.702, -4.36928, 2.14 ) }
    dend_35 { pt3dadd( -30.4455, -180.399, -4.78866, 2.14 ) }
    dend_35 { pt3dadd( -31.016, -181.95, -5.1251, 1.33 ) }
    dend_35 { pt3dadd( -31.534, -183.477, -5.41328, 1.03 ) }
    dend_35 { pt3dadd( -31.8766, -184.639, -5.59338, 1.03 ) }
    dend_35 { pt3dadd( -32.0928, -185.432, -5.70435, 1.25 ) }
    dend_35 { pt3dadd( -32.2966, -186.208, -5.80522, 1.25 ) }
    dend_35 { pt3dadd( -32.6064, -187.675, -5.94883, 0.96 ) }
    dend_35 { pt3dadd( -32.8358, -188.865, -6.02553, 0.96 ) }
    dend_35 { pt3dadd( -33.2571, -190.95, -6.14193, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -33.5154, -192.178, -6.18361, 0.88 ) }
    dend_35 { pt3dadd( -33.7336, -193.343, -6.19787, 0.96 ) }
    dend_35 { pt3dadd( -33.9457, -194.674, -6.18543, 0.96 ) }
    dend_35 { pt3dadd( -34.1073, -195.811, -6.14397, 0.74 ) }
    dend_35 { pt3dadd( -34.2484, -196.907, -6.07969, 0.52 ) }
    dend_35 { pt3dadd( -34.3581, -197.817, -6.00395, 0.52 ) }
    dend_35 { pt3dadd( -34.4864, -198.935, -5.88913, 0.37 ) }
    dend_35 { pt3dadd( -34.5851, -199.826, -5.79354, 0.74 ) }
    dend_35 { pt3dadd( -34.7121, -200.794, -5.69064, 0.74 ) }
    dend_35 { pt3dadd( -34.8697, -201.882, -5.5628, 1.03 ) }
    dend_35 { pt3dadd( -34.983, -202.574, -5.47904, 1.18 ) }
    dend_35 { pt3dadd( -35.153, -203.53, -5.37352, 1.33 ) }
    dend_35 { pt3dadd( -35.2997, -204.25, -5.29418, 1.33 ) }
    dend_35 { pt3dadd( -35.4509, -205.017, -5.16814, 1.18 ) }
    dend_35 { pt3dadd( -35.6864, -206.134, -4.86226, 0.96 ) }
    dend_35 { pt3dadd( -35.8806, -206.988, -4.53218, 0.81 ) }
    dend_35 { pt3dadd( -36.0759, -207.849, -4.12833, 0.81 ) }
    dend_35 { pt3dadd( -36.2647, -208.795, -3.62868, 0.81 ) }
    dend_35 { pt3dadd( -36.4168, -209.623, -3.17639, 0.59 ) }
    dend_35 { pt3dadd( -36.6415, -210.992, -2.45619, 0.66 ) }
    dend_35 { pt3dadd( -36.7553, -211.576, -2.18393, 0.66 ) }
    dend_35 { pt3dadd( -37.0156, -212.621, -1.81307, 1.18 ) }
    dend_35 { pt3dadd( -37.3962, -213.693, -1.63083, 1.47 ) }
    dend_35 { pt3dadd( -37.8337, -214.614, -1.64728, 1.55 ) }
    dend_35 { pt3dadd( -38.2483, -215.28, -1.76825, 1.55 ) }
    dend_35 { pt3dadd( -38.9392, -216.171, -2.04314, 1.4 ) }
    dend_35 { pt3dadd( -39.9158, -217.194, -2.42209, 1.18 ) }
    dend_35 { pt3dadd( -41.095, -218.269, -2.85863, 0.66 ) }
    dend_35 { pt3dadd( -42.087, -219.108, -3.19897, 0.74 ) }
    dend_35 { pt3dadd( -43.3889, -220.158, -3.60466, 1.18 ) }
    dend_35 { pt3dadd( -44.4796, -221.0, -3.8918, 1.25 ) }
    dend_35 { pt3dadd( -45.6407, -221.864, -4.12727, 1.25 ) }
    dend_35 { pt3dadd( -46.6426, -222.578, -4.25566, 1.25 ) }
    dend_35 { pt3dadd( -47.6723, -223.238, -4.33168, 1.33 ) }
    dend_35 { pt3dadd( -48.2727, -223.567, -4.34229, 1.33 ) }
    dend_35 { pt3dadd( -49.2566, -224.01, -4.27968, 1.03 ) }
    dend_35 { pt3dadd( -50.1165, -224.318, -4.16044, 0.74 ) }
    dend_35 { pt3dadd( -50.8078, -224.523, -4.03523, 0.59 ) }
    dend_35 { pt3dadd( -51.723, -224.794, -3.84328, 0.59 ) }
    dend_35 { pt3dadd( -52.6411, -225.112, -3.63406, 0.88 ) }
    dend_35 { pt3dadd( -53.565, -225.555, -3.38725, 1.18 ) }
    dend_35 { pt3dadd( -54.4391, -226.106, -3.09638, 1.18 ) }
    dend_35 { pt3dadd( -55.2175, -226.701, -2.79299, 1.18 ) }
    dend_35 { pt3dadd( -55.952, -227.367, -2.49208, 1.18 ) }
    dend_35 { pt3dadd( -56.5184, -227.952, -2.2618, 1.18 ) }
    dend_35 { pt3dadd( -57.3051, -228.853, -1.94928, 0.81 ) }
    dend_35 { pt3dadd( -57.7772, -229.451, -1.77136, 0.59 ) }
    dend_35 { pt3dadd( -58.2127, -230.079, -1.61943, 0.52 ) }
    dend_35 { pt3dadd( -59.047, -231.42, -1.3624, 0.96 ) }
    dend_35 { pt3dadd( -59.529, -232.322, -1.2374, 1.18 ) }
    dend_35 { pt3dadd( -59.9304, -233.165, -1.16044, 1.18 ) }
    dend_35 { pt3dadd( -60.4413, -234.315, -1.11024, 0.88 ) }
    dend_35 { pt3dadd( -60.9335, -235.475, -1.0956, 0.59 ) }
    dend_35 { pt3dadd( -61.3397, -236.521, -1.09193, 0.59 ) }
    dend_35 { pt3dadd( -61.7861, -237.74, -1.08793, 0.59 ) }
    dend_35 { pt3dadd( -62.2023, -238.877, -1.08244, 0.74 ) }
    dend_35 { pt3dadd( -62.6864, -240.149, -1.07473, 1.33 ) }
    dend_35 { pt3dadd( -63.1208, -241.253, -1.06743, 1.69 ) }
    dend_35 { pt3dadd( -63.6765, -242.615, -1.05884, 1.77 ) }
    dend_35 { pt3dadd( -63.9953, -243.417, -1.05529, 1.77 ) }
    dend_35 { pt3dadd( -64.3859, -244.428, -1.07709, 1.77 ) }
    dend_35 { pt3dadd( -64.7095, -245.402, -1.12367, 1.47 ) }
    dend_35 { pt3dadd( -65.0135, -246.486, -1.20509, 1.03 ) }
    dend_35 { pt3dadd( -65.2875, -247.554, -1.31175, 1.03 ) }
    dend_35 { pt3dadd( -65.6004, -248.801, -1.46785, 1.03 ) }
    dend_35 { pt3dadd( -65.9075, -250.094, -1.63133, 1.11 ) }
    dend_35 { pt3dadd( -66.1796, -251.314, -1.77329, 1.33 ) }
    dend_35 { pt3dadd( -66.3865, -252.427, -1.87833, 1.03 ) }
    dend_35 { pt3dadd( -66.5941, -253.939, -1.98162, 0.81 ) }
    dend_35 { pt3dadd( -66.699, -254.999, -2.02591, 1.03 ) }
    dend_35 { pt3dadd( -66.7854, -256.334, -2.04572, 0.81 ) }
    dend_35 { pt3dadd( -66.8147, -257.063, -2.03718, 0.81 ) }
    dend_35 { pt3dadd( -66.8529, -259.037, -1.99811, 0.74 ) }
    dend_35 { pt3dadd( -66.8527, -261.022, -1.94452, 0.74 ) }
    dend_35 { pt3dadd( -66.8172, -262.62, -1.89513, 0.74 ) }
    dend_35 { pt3dadd( -66.7698, -264.953, -1.82247, 0.74 ) }
    dend_35 { pt3dadd( -66.7752, -266.562, -1.78684, 0.74 ) }
    dend_35 { pt3dadd( -66.8224, -267.604, -1.76902, 1.18 ) }
    dend_35 { pt3dadd( -66.9568, -268.671, -1.74878, 1.4 ) }
    dend_35 { pt3dadd( -67.2264, -269.771, -1.71983, 1.4 ) }
    dend_35 { pt3dadd( -67.6356, -270.805, -1.68141, 1.47 ) }
    dend_35 { pt3dadd( -68.3168, -271.936, -1.63422, 1.55 ) }
    dend_35 { pt3dadd( -68.8549, -272.606, -1.61107, 1.55 ) }
    dend_35 { pt3dadd( -69.8731, -273.64, -1.5735, 1.11 ) }
    dend_35 { pt3dadd( -71.2221, -274.79, -1.5218, 0.88 ) }
    dend_35 { pt3dadd( -72.2128, -275.53, -1.45575, 0.88 ) }
    dend_35 { pt3dadd( -73.3543, -276.284, -1.35282, 1.03 ) }
    dend_35 { pt3dadd( -74.145, -276.772, -1.27575, 1.03 ) }
    dend_35 { pt3dadd( -74.7736, -277.169, -1.20649, 1.03 ) }
    dend_35 { pt3dadd( -75.7023, -277.843, -1.05989, 0.81 ) }
    dend_35 { pt3dadd( -76.7813, -278.808, -0.84777, 0.59 ) }
    dend_35 { pt3dadd( -77.9716, -280.149, -0.57719, 0.59 ) }
    dend_35 { pt3dadd( -78.7278, -281.199, -0.380354, 0.88 ) }
    dend_35 { pt3dadd( -79.3005, -282.178, -0.205227, 0.88 ) }
    dend_35 { pt3dadd( -80.0405, -283.724, 0.0411272, 0.74 ) }
    dend_35 { pt3dadd( -80.4543, -284.793, 0.190273, 0.96 ) }
    dend_35 { pt3dadd( -80.7887, -285.849, 0.293361, 1.11 ) }
    dend_35 { pt3dadd( -80.9875, -286.61, 0.35429, 1.11 ) }
    dend_35 { pt3dadd( -81.1798, -287.412, 0.391332, 0.88 ) }
    dend_35 { pt3dadd( -81.4528, -288.514, 0.374954, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -81.66, -289.287, 0.33515, 0.66 ) }
    dend_35 { pt3dadd( -82.0059, -290.588, 0.271825, 0.96 ) }
    dend_35 { pt3dadd( -82.2606, -291.583, 0.220278, 0.96 ) }
    dend_35 { pt3dadd( -82.5729, -292.857, 0.149234, 0.66 ) }
    dend_35 { pt3dadd( -82.8574, -294.019, 0.082336, 0.74 ) }
    dend_35 { pt3dadd( -83.3039, -295.884, -0.00180127, 0.96 ) }
    dend_35 { pt3dadd( -83.5564, -296.961, -0.016823, 0.96 ) }
    dend_35 { pt3dadd( -83.8137, -298.085, -0.0251581, 0.96 ) }
    dend_35 { pt3dadd( -84.1187, -299.372, -0.0575557, 0.66 ) }
    dend_35 { pt3dadd( -84.5716, -301.273, -0.143177, 0.66 ) }
    dend_35 { pt3dadd( -84.953, -303.09, -0.27644, 0.66 ) }
    dend_35 { pt3dadd( -85.1525, -304.177, -0.38927, 0.81 ) }
    dend_35 { pt3dadd( -85.4564, -306.081, -0.626603, 0.74 ) }
    dend_35 { pt3dadd( -85.6587, -307.59, -0.846734, 0.74 ) }
    dend_35 { pt3dadd( -85.8203, -309.185, -1.10442, 0.96 ) }
    dend_35 { pt3dadd( -85.9199, -310.525, -1.33593, 0.96 ) }
    dend_35 { pt3dadd( -85.9842, -311.415, -1.48092, 1.62 ) }
    dend_35 { pt3dadd( -86.0481, -311.902, -1.54085, 1.62 ) }
    dend_35 { pt3dadd( -86.178, -312.541, -1.56591, 1.62 ) }
    dend_35 { pt3dadd( -86.4154, -313.475, -1.55253, 1.4 ) }
    dend_35 { pt3dadd( -86.7151, -314.448, -1.50719, 0.88 ) }
    dend_35 { pt3dadd( -87.1214, -315.693, -1.42135, 0.59 ) }
    dend_35 { pt3dadd( -87.6656, -317.385, -1.28232, 0.81 ) }
    dend_35 { pt3dadd( -88.1059, -318.747, -1.15814, 0.96 ) }
    dend_35 { pt3dadd( -88.4457, -319.848, -1.06447, 0.96 ) }
    dend_35 { pt3dadd( -88.8269, -321.177, -0.973285, 1.11 ) }
    dend_35 { pt3dadd( -89.0755, -322.048, -0.925767, 1.11 ) }
    dend_35 { pt3dadd( -89.2815, -322.72, -0.900671, 1.33 ) }
    dend_35 { pt3dadd( -89.4953, -323.373, -0.883746, 1.33 ) }
    dend_35 { pt3dadd( -89.9208, -324.432, -0.842806, 1.03 ) }
    dend_35 { pt3dadd( -90.4349, -325.473, -0.785622, 0.66 ) }
    dend_35 { pt3dadd( -90.8638, -326.247, -0.733437, 0.37 ) }
    dend_35 { pt3dadd( -91.1881, -326.811, -0.692786, 0.37 ) }
    dend_35 { pt3dadd( -91.5852, -327.552, -0.635579, 0.37 ) }
    dend_35 { pt3dadd( -91.9443, -328.257, -0.577207, 1.03 ) }
    dend_35 { pt3dadd( -92.3337, -329.042, -0.511862, 1.25 ) }
    dend_35 { pt3dadd( -92.5897, -329.626, -0.460739, 1.25 ) }
    dend_35 { pt3dadd( -93.0024, -330.722, -0.369892, 0.96 ) }
    dend_35 { pt3dadd( -93.4631, -332.103, -0.266519, 0.52 ) }
    dend_35 { pt3dadd( -93.8578, -333.347, -0.186302, 0.52 ) }
    dend_35 { pt3dadd( -94.3728, -335.083, -0.0930237, 0.52 ) }
    dend_35 { pt3dadd( -94.7433, -336.498, -0.0255015, 0.81 ) }
    dend_35 { pt3dadd( -95.0044, -337.532, 0.0272615, 1.03 ) }
    dend_35 { pt3dadd( -95.2493, -338.465, 0.077278, 1.03 ) }
    dend_35 { pt3dadd( -95.4459, -339.184, 0.1153, 0.81 ) }
    dend_35 { pt3dadd( -95.7025, -340.05, 0.156273, 0.81 ) }
    dend_35 { pt3dadd( -96.1089, -341.263, 0.200361, 0.59 ) }
    dend_35 { pt3dadd( -96.6231, -342.531, 0.228976, 0.44 ) }
    dend_35 { pt3dadd( -97.4207, -344.119, 0.267, 0.88 ) }
    dend_35 { pt3dadd( -97.8301, -344.796, 0.285151, 0.88 ) }
    dend_35 { pt3dadd( -98.4451, -345.668, 0.310043, 0.59 ) }
    dend_35 { pt3dadd( -99.0963, -346.404, 0.337042, 0.59 ) }
    dend_35 { pt3dadd( -100.132, -347.316, 0.363471, 0.59 ) }
    dend_35 { pt3dadd( -101.251, -348.106, 0.372853, 0.81 ) }
    dend_35 { pt3dadd( -101.89, -348.478, 0.37536, 0.81 ) }
    dend_35 { pt3dadd( -102.406, -348.743, 0.375585, 0.81 ) }
    dend_35 { pt3dadd( -103.571, -349.248, 0.366837, 0.59 ) }
    dend_35 { pt3dadd( -104.85, -349.688, 0.350069, 0.88 ) }
    dend_35 { pt3dadd( -106.12, -350.03, 0.323085, 1.03 ) }
    dend_35 { pt3dadd( -107.332, -350.297, 0.28738, 1.03 ) }
    dend_35 { pt3dadd( -108.333, -350.468, 0.26119, 0.59 ) }
    dend_35 { pt3dadd( -109.236, -350.596, 0.248821, 0.59 ) }
    dend_35 { pt3dadd( -110.003, -350.707, 0.248688, 0.59 ) }
    dend_35 { pt3dadd( -110.662, -350.799, 0.26914, 0.59 ) }
    dend_35 { pt3dadd( -111.365, -350.927, 0.300179, 0.59 ) }
    dend_35 { pt3dadd( -112.285, -351.137, 0.355854, 0.44 ) }
    dend_35 { pt3dadd( -113.664, -351.542, 0.458728, 0.81 ) }
    dend_35 { pt3dadd( -114.816, -351.958, 0.565048, 1.11 ) }
    dend_35 { pt3dadd( -116.073, -352.503, 0.70785, 0.81 ) }
    dend_35 { pt3dadd( -117.333, -353.146, 0.869859, 0.66 ) }
    dend_35 { pt3dadd( -117.91, -353.485, 0.948932, 0.66 ) }
    dend_35 { pt3dadd( -118.605, -353.952, 1.04843, 0.52 ) }
    dend_35 { pt3dadd( -119.4, -354.542, 1.17277, 0.52 ) }
    dend_35 { pt3dadd( -120.205, -355.216, 1.30644, 0.52 ) }
    dend_35 { pt3dadd( -121.014, -355.944, 1.44722, 0.52 ) }
    dend_35 { pt3dadd( -121.503, -356.429, 1.53694, 1.11 ) }
    dend_35 { pt3dadd( -122.587, -357.616, 1.72936, 1.4 ) }
    dend_35 { pt3dadd( -123.174, -358.332, 1.82968, 1.84 ) }
    dend_35 { pt3dadd( -123.819, -359.201, 1.92275, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -10.3414, -81.257, -8.02345, 0.66 ) }
    dend_32 { pt3dadd( -10.4302, -83.1979, -7.97353, 0.66 ) }
    dend_32 { pt3dadd( -10.5057, -84.3939, -7.94893, 0.37 ) }
    dend_32 { pt3dadd( -10.5479, -85.1931, -7.96199, 0.81 ) }
    dend_32 { pt3dadd( -10.5816, -86.2258, -8.00014, 1.03 ) }
    dend_32 { pt3dadd( -10.6113, -87.1235, -8.04065, 1.11 ) }
    dend_32 { pt3dadd( -10.6491, -88.0814, -8.10045, 0.88 ) }
    dend_32 { pt3dadd( -10.6946, -89.1844, -8.21141, 0.59 ) }
    dend_32 { pt3dadd( -10.7144, -90.4681, -8.38285, 0.29 ) }
    dend_32 { pt3dadd( -10.6991, -91.3987, -8.53371, 0.29 ) }
    dend_32 { pt3dadd( -10.6703, -91.825, -8.61275, 0.29 ) }
    dend_32 { pt3dadd( -10.5313, -92.7853, -8.82771, 0.74 ) }
    dend_32 { pt3dadd( -10.3213, -93.6787, -9.05798, 1.11 ) }
    dend_32 { pt3dadd( -10.1481, -94.2423, -9.20967, 1.11 ) }
    dend_32 { pt3dadd( -9.86486, -95.0718, -9.43497, 1.11 ) }
    dend_32 { pt3dadd( -9.51073, -96.0341, -9.65576, 0.81 ) }
    dend_32 { pt3dadd( -8.92614, -97.6232, -9.94249, 0.44 ) }
    dend_32 { pt3dadd( -8.39888, -99.1335, -10.1385, 0.59 ) }
    dend_32 { pt3dadd( -8.11969, -100.044, -10.2201, 0.88 ) }
    dend_32 { pt3dadd( -7.88004, -101.002, -10.264, 0.88 ) }
    dend_32 { pt3dadd( -7.61649, -102.375, -10.2759, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -7.439, -103.724, -10.2258, 0.44 ) }
    dend_32 { pt3dadd( -7.36092, -104.789, -10.134, 1.03 ) }
    dend_32 { pt3dadd( -7.32988, -105.68, -10.0412, 0.74 ) }
    dend_32 { pt3dadd( -7.31358, -106.797, -9.93366, 0.52 ) }
    dend_32 { pt3dadd( -7.31167, -107.662, -9.86613, 0.88 ) }
    dend_32 { pt3dadd( -7.32531, -108.456, -9.85711, 1.18 ) }
    dend_32 { pt3dadd( -7.33829, -109.144, -9.86362, 1.18 ) }
    dend_32 { pt3dadd( -7.36253, -109.931, -9.88073, 0.88 ) }
    dend_32 { pt3dadd( -7.41024, -111.301, -9.92743, 0.29 ) }
    dend_32 { pt3dadd( -7.45437, -112.337, -9.97753, 0.29 ) }
    dend_32 { pt3dadd( -7.52843, -113.82, -10.084, 1.03 ) }
    dend_32 { pt3dadd( -7.5711, -114.804, -10.1723, 1.47 ) }
    dend_32 { pt3dadd( -7.59927, -115.425, -10.2292, 1.47 ) }
    dend_32 { pt3dadd( -7.62514, -116.108, -10.2925, 1.47 ) }
    dend_32 { pt3dadd( -7.63844, -117.128, -10.3847, 1.25 ) }
    dend_32 { pt3dadd( -7.63485, -118.376, -10.4818, 0.44 ) }
    dend_32 { pt3dadd( -7.60757, -119.405, -10.5432, 0.44 ) }
    dend_32 { pt3dadd( -7.56968, -120.411, -10.6094, 0.44 ) }
    dend_32 { pt3dadd( -7.54256, -120.928, -10.6455, 0.59 ) }
    dend_32 { pt3dadd( -7.47525, -122.142, -10.7319, 0.59 ) }
    dend_32 { pt3dadd( -7.40611, -123.068, -10.8025, 0.37 ) }
    dend_32 { pt3dadd( -7.34647, -123.84, -10.8611, 0.81 ) }
    dend_32 { pt3dadd( -7.29273, -124.548, -10.9048, 1.03 ) }
    dend_32 { pt3dadd( -7.25658, -125.065, -10.9276, 1.03 ) }
    dend_32 { pt3dadd( -7.22755, -125.707, -10.9413, 0.59 ) }
    dend_32 { pt3dadd( -7.17553, -126.753, -10.9451, 0.22 ) }
    dend_32 { pt3dadd( -7.11904, -127.409, -10.9429, 0.22 ) }
    dend_32 { pt3dadd( -7.03023, -128.183, -10.9377, 0.22 ) }
    dend_32 { pt3dadd( -6.91842, -129.016, -10.9305, 0.66 ) }
    dend_32 { pt3dadd( -6.76763, -130.012, -10.9256, 0.88 ) }
    dend_32 { pt3dadd( -6.51297, -131.466, -10.9242, 0.88 ) }
    dend_32 { pt3dadd( -6.20302, -133.155, -10.927, 0.96 ) }
    dend_32 { pt3dadd( -5.96569, -134.427, -10.951, 1.18 ) }
    dend_32 { pt3dadd( -5.79169, -135.458, -10.9926, 0.66 ) }
    dend_32 { pt3dadd( -5.65729, -136.303, -11.0316, 0.52 ) }
    dend_32 { pt3dadd( -5.43619, -137.918, -11.122, 0.52 ) }
    dend_32 { pt3dadd( -5.29374, -139.164, -11.2026, 0.81 ) }
    dend_32 { pt3dadd( -5.16498, -140.422, -11.296, 0.52 ) }
    dend_32 { pt3dadd( -5.06743, -141.363, -11.3628, 0.52 ) }
    dend_32 { pt3dadd( -4.94429, -142.476, -11.4651, 1.47 ) }
    dend_32 { pt3dadd( -4.80508, -143.614, -11.5979, 1.77 ) }
    dend_32 { pt3dadd( -4.68377, -144.493, -11.7377, 1.77 ) }
    dend_32 { pt3dadd( -4.59717, -144.997, -11.832, 1.77 ) }
    dend_32 { pt3dadd( -4.42494, -145.832, -11.9949, 1.25 ) }
    dend_32 { pt3dadd( -4.20402, -146.8, -12.1863, 0.81 ) }
    dend_32 { pt3dadd( -3.94204, -147.975, -12.424, 0.44 ) }
    dend_32 { pt3dadd( -3.60521, -149.448, -12.7149, 0.37 ) }
    dend_32 { pt3dadd( -3.39829, -150.354, -12.8868, 0.52 ) }
    dend_32 { pt3dadd( -3.13173, -151.449, -13.0861, 0.52 ) }
    dend_32 { pt3dadd( -2.91837, -152.269, -13.229, 0.66 ) }
    dend_32 { pt3dadd( -2.61457, -153.348, -13.418, 0.66 ) }
    dend_32 { pt3dadd( -2.20499, -154.727, -13.7135, 0.88 ) }
    dend_32 { pt3dadd( -1.83496, -155.884, -14.0037, 1.25 ) }
    dend_32 { pt3dadd( -1.61388, -156.535, -14.2019, 1.25 ) }
    dend_32 { pt3dadd( -1.40657, -157.095, -14.3969, 1.25 ) }
    dend_32 { pt3dadd( -0.972893, -158.193, -14.8232, 1.11 ) }
    dend_32 { pt3dadd( -0.573378, -159.161, -15.2306, 0.74 ) }
    dend_32 { pt3dadd( -0.211688, -160.011, -15.6138, 0.29 ) }
    dend_32 { pt3dadd( 4.82071E-4, -160.514, -15.8523, 0.29 ) }
    dend_32 { pt3dadd( 0.499344, -161.741, -16.4184, 0.44 ) }
    dend_32 { pt3dadd( 0.771411, -162.446, -16.7138, 0.88 ) }
    dend_32 { pt3dadd( 0.989742, -163.087, -16.9393, 1.33 ) }
    dend_32 { pt3dadd( 1.2199, -163.847, -17.1535, 1.47 ) }
    dend_32 { pt3dadd( 1.43881, -164.673, -17.3367, 1.47 ) }
    dend_32 { pt3dadd( 1.61842, -165.409, -17.4649, 1.25 ) }
    dend_32 { pt3dadd( 1.84928, -166.414, -17.6028, 0.44 ) }
    dend_32 { pt3dadd( 2.17877, -167.89, -17.7095, 0.29 ) }
    dend_32 { pt3dadd( 2.42003, -169.061, -17.721, 0.29 ) }
    dend_32 { pt3dadd( 2.6402, -170.257, -17.671, 0.29 ) }
    dend_32 { pt3dadd( 2.7913, -171.212, -17.5895, 0.74 ) }
    dend_32 { pt3dadd( 2.87448, -171.888, -17.5072, 0.88 ) }
    dend_32 { pt3dadd( 2.9724, -173.26, -17.2918, 0.96 ) }
    dend_32 { pt3dadd( 2.97841, -174.434, -17.0889, 1.03 ) }
    dend_32 { pt3dadd( 2.91901, -175.319, -16.9496, 1.03 ) }
    dend_32 { pt3dadd( 2.80915, -176.201, -16.8122, 0.59 ) }
    dend_32 { pt3dadd( 2.66987, -177.142, -16.675, 0.22 ) }
    dend_32 { pt3dadd( 2.58129, -177.736, -16.6077, 0.22 ) }
    dend_32 { pt3dadd( 2.38954, -179.102, -16.5308, 0.96 ) }
    dend_32 { pt3dadd( 2.2787, -179.911, -16.5098, 1.11 ) }
    dend_32 { pt3dadd( 2.17157, -180.801, -16.4646, 1.11 ) }
    dend_32 { pt3dadd( 2.09719, -181.651, -16.3901, 0.59 ) }
    dend_32 { pt3dadd( 2.05102, -182.517, -16.2927, 0.29 ) }
    dend_32 { pt3dadd( 2.03531, -183.255, -16.1879, 0.29 ) }
    dend_32 { pt3dadd( 2.02612, -183.871, -16.0815, 0.29 ) }
    dend_32 { pt3dadd( 2.01427, -185.207, -15.8232, 0.44 ) }
    dend_32 { pt3dadd( 2.0067, -186.339, -15.5731, 0.66 ) }
    dend_32 { pt3dadd( 2.00118, -187.534, -15.2966, 0.66 ) }
    dend_32 { pt3dadd( 2.00738, -188.398, -15.1047, 0.81 ) }
    dend_32 { pt3dadd( 2.02089, -189.359, -14.9145, 0.81 ) }
    dend_32 { pt3dadd( 2.03858, -190.276, -14.7509, 0.52 ) }
    dend_32 { pt3dadd( 2.03317, -191.442, -14.5779, 0.66 ) }
    dend_32 { pt3dadd( 2.01465, -192.306, -14.4568, 0.66 ) }
    dend_32 { pt3dadd( 1.93572, -193.76, -14.3291, 0.37 ) }
    dend_32 { pt3dadd( 1.83266, -195.047, -14.2848, 0.37 ) }
    dend_32 { pt3dadd( 1.72127, -196.075, -14.2993, 1.03 ) }
    dend_32 { pt3dadd( 1.58474, -197.108, -14.3921, 1.47 ) }
    dend_32 { pt3dadd( 1.41912, -198.121, -14.5536, 1.62 ) }
    dend_32 { pt3dadd( 1.05809, -199.929, -14.9594, 0.88 ) }
    dend_32 { pt3dadd( 0.74347, -201.104, -15.3261, 0.59 ) }
    dend_32 { pt3dadd( 0.432325, -201.998, -15.6828, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -0.1979, -203.437, -16.3418, 0.29 ) }
    dend_32 { pt3dadd( -0.419624, -203.862, -16.5347, 0.29 ) }
    dend_32 { pt3dadd( -0.786957, -204.469, -16.7915, 0.29 ) }
    dend_32 { pt3dadd( -1.49476, -205.597, -17.1878, 0.29 ) }
    dend_32 { pt3dadd( -2.19899, -206.662, -17.5621, 0.59 ) }
    dend_32 { pt3dadd( -2.93202, -207.791, -17.9361, 0.59 ) }
    dend_32 { pt3dadd( -3.39265, -208.49, -18.1605, 0.44 ) }
    dend_32 { pt3dadd( -3.96647, -209.328, -18.446, 0.44 ) }
    dend_32 { pt3dadd( -4.35261, -209.839, -18.67, 0.29 ) }
    dend_32 { pt3dadd( -4.92174, -210.566, -19.0588, 1.4 ) }
    dend_32 { pt3dadd( -5.77239, -211.396, -19.6949, 1.62 ) }
    dend_32 { pt3dadd( -6.57542, -211.962, -20.2798, 1.4 ) }
    dend_32 { pt3dadd( -7.36732, -212.367, -20.8262, 1.11 ) }
    dend_32 { pt3dadd( -8.69866, -212.907, -21.6843, 0.81 ) }
    dend_32 { pt3dadd( -9.43821, -213.184, -22.1545, 0.59 ) }
    dend_32 { pt3dadd( -10.2512, -213.518, -22.7017, 0.74 ) }
    dend_32 { pt3dadd( -11.0297, -213.925, -23.2575, 0.81 ) }
    dend_32 { pt3dadd( -11.6333, -214.445, -23.7262, 0.52 ) }
    dend_32 { pt3dadd( -12.075, -214.974, -24.106, 0.52 ) }
    dend_32 { pt3dadd( -12.4775, -215.565, -24.4447, 0.74 ) }
    dend_32 { pt3dadd( -13.0285, -216.406, -24.9429, 0.74 ) }
    dend_32 { pt3dadd( -13.3145, -216.928, -25.2153, 0.74 ) }
    dend_32 { pt3dadd( -13.6029, -217.518, -25.5336, 0.52 ) }
    dend_32 { pt3dadd( -14.0273, -218.45, -25.9824, 0.52 ) }
    dend_32 { pt3dadd( -14.2586, -218.962, -26.2101, 0.52 ) }
    dend_32 { pt3dadd( -14.6984, -219.966, -26.5888, 1.69 ) }
    dend_32 { pt3dadd( -14.9638, -220.631, -26.784, 2.14 ) }
    dend_32 { pt3dadd( -15.4416, -222.038, -27.1025, 1.55 ) }
    dend_32 { pt3dadd( -15.8773, -223.514, -27.3557, 0.29 ) }
    dend_32 { pt3dadd( -16.1053, -224.378, -27.4676, 0.29 ) }
    dend_32 { pt3dadd( -16.4008, -225.566, -27.5849, 0.44 ) }
    dend_32 { pt3dadd( -16.6755, -226.699, -27.6538, 0.59 ) }
    dend_32 { pt3dadd( -16.9178, -227.705, -27.6888, 0.59 ) }
    dend_32 { pt3dadd( -17.1623, -228.73, -27.6826, 0.29 ) }
    dend_32 { pt3dadd( -17.295, -229.281, -27.6804, 0.29 ) }
    dend_32 { pt3dadd( -17.4775, -230.049, -27.6774, 0.96 ) }
    dend_32 { pt3dadd( -17.6256, -230.724, -27.6756, 1.03 ) }
    dend_32 { pt3dadd( -17.8048, -231.663, -27.6795, 0.52 ) }
    dend_32 { pt3dadd( -17.9951, -232.885, -27.6939, 0.29 ) }
    dend_32 { pt3dadd( -18.081, -233.581, -27.7039, 0.81 ) }
    dend_32 { pt3dadd( -18.1636, -234.388, -27.7135, 0.96 ) }
    dend_32 { pt3dadd( -18.2211, -235.011, -27.7223, 0.96 ) }
    dend_32 { pt3dadd( -18.3198, -236.102, -27.7404, 0.29 ) }
    dend_32 { pt3dadd( -18.4544, -237.348, -27.7577, 0.29 ) }
    dend_32 { pt3dadd( -18.6153, -238.652, -27.8129, 1.47 ) }
    dend_32 { pt3dadd( -18.7311, -239.564, -27.8706, 1.92 ) }
    dend_32 { pt3dadd( -18.7829, -240.008, -27.9041, 1.92 ) }
    dend_32 { pt3dadd( -18.9076, -241.112, -27.98, 1.33 ) }
    dend_32 { pt3dadd( -19.032, -242.34, -28.0709, 0.29 ) }
    dend_32 { pt3dadd( -19.1503, -243.593, -28.1741, 0.29 ) }
    dend_32 { pt3dadd( -19.2342, -244.592, -28.2708, 0.29 ) }
    dend_32 { pt3dadd( -19.4069, -246.765, -28.5004, 0.29 ) }
    dend_32 { pt3dadd( -19.5098, -248.243, -28.6473, 1.4 ) }
    dend_32 { pt3dadd( -19.5605, -249.144, -28.7289, 2.14 ) }
    dend_32 { pt3dadd( -19.5778, -249.537, -28.7609, 2.28 ) }
    dend_32 { pt3dadd( -19.5973, -250.179, -28.7998, 2.28 ) }
    dend_32 { pt3dadd( -19.6203, -250.842, -28.8185, 1.92 ) }
    dend_32 { pt3dadd( -19.6655, -251.803, -28.7652, 0.88 ) }
    dend_32 { pt3dadd( -19.7398, -253.271, -28.5918, 0.29 ) }
    dend_32 { pt3dadd( -19.7845, -254.167, -28.4367, 0.29 ) }
    dend_32 { pt3dadd( -19.8308, -255.171, -28.2291, 0.29 ) }
    dend_32 { pt3dadd( -19.9009, -256.741, -27.8678, 0.29 ) }
    dend_32 { pt3dadd( -19.9653, -258.35, -27.4958, 0.96 ) }
    dend_32 { pt3dadd( -20.0001, -259.427, -27.2588, 1.62 ) }
    dend_32 { pt3dadd( -20.0167, -260.037, -27.1292, 1.62 ) }
    dend_32 { pt3dadd( -20.0324, -260.612, -27.0208, 1.62 ) }
    dend_32 { pt3dadd( -20.0715, -261.849, -26.841, 1.11 ) }
    dend_32 { pt3dadd( -20.1223, -263.368, -26.7696, 0.29 ) }
    dend_32 { pt3dadd( -20.1774, -264.5, -26.7951, 0.29 ) }
    dend_32 { pt3dadd( -20.2334, -265.397, -26.8429, 0.59 ) }
    dend_32 { pt3dadd( -20.2705, -265.842, -26.8768, 0.66 ) }
    dend_32 { pt3dadd( -20.3265, -266.381, -26.9247, 0.66 ) }
    dend_32 { pt3dadd( -20.5167, -267.861, -27.0665, 0.29 ) }
    dend_32 { pt3dadd( -20.7953, -269.576, -27.268, 0.29 ) }
    dend_32 { pt3dadd( -21.0515, -270.905, -27.4372, 0.96 ) }
    dend_32 { pt3dadd( -21.2967, -271.952, -27.5666, 1.4 ) }
    dend_32 { pt3dadd( -21.5007, -272.736, -27.6521, 1.4 ) }
    dend_32 { pt3dadd( -21.7222, -273.546, -27.726, 1.4 ) }
    dend_32 { pt3dadd( -22.0264, -274.617, -27.7954, 0.88 ) }
    dend_32 { pt3dadd( -22.4044, -275.928, -27.871, 0.29 ) }
    dend_32 { pt3dadd( -22.7448, -277.125, -27.9215, 0.29 ) }
    dend_32 { pt3dadd( -23.1038, -278.335, -27.9627, 0.44 ) }
    dend_32 { pt3dadd( -23.3492, -279.1, -27.9772, 0.66 ) }
    dend_32 { pt3dadd( -23.5586, -279.716, -27.9732, 0.66 ) }
    dend_32 { pt3dadd( -23.9383, -280.811, -27.9192, 0.29 ) }
    dend_32 { pt3dadd( -24.163, -281.469, -27.8812, 0.29 ) }
    dend_32 { pt3dadd( -24.4536, -282.309, -27.8702, 0.29 ) }
    dend_32 { pt3dadd( -24.8766, -283.461, -27.9347, 0.29 ) }
    dend_32 { pt3dadd( -25.1318, -284.119, -28.0181, 0.52 ) }
    dend_32 { pt3dadd( -25.4781, -285.031, -28.1843, 0.66 ) }
    dend_32 { pt3dadd( -25.7544, -285.941, -28.3328, 0.66 ) }
    dend_32 { pt3dadd( -26.0511, -287.355, -28.5432, 1.4 ) }
    dend_32 { pt3dadd( -26.1708, -288.595, -28.7287, 2.28 ) }
    dend_32 { pt3dadd( -26.1745, -289.829, -28.9176, 2.5 ) }
    dend_32 { pt3dadd( -26.1098, -290.522, -29.0048, 2.5 ) }
    dend_32 { pt3dadd( -25.5914, -292.946, -29.2221, 0.22 ) }
    dend_32 { pt3dadd( -25.2691, -293.923, -29.2586, 0.22 ) }
    dend_32 { pt3dadd( -24.6989, -295.161, -29.2338, 0.37 ) }
    dend_32 { pt3dadd( -24.2675, -295.892, -29.179, 0.44 ) }
    dend_32 { pt3dadd( -23.4525, -296.97, -29.181, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -22.5496, -297.964, -29.3377, 0.88 ) }
    dend_32 { pt3dadd( -22.0249, -298.431, -29.5722, 1.4 ) }
    dend_32 { pt3dadd( -21.6271, -298.765, -29.8317, 1.4 ) }
    dend_32 { pt3dadd( -21.1047, -299.243, -30.2897, 1.11 ) }
    dend_32 { pt3dadd( -19.5227, -300.89, -32.0651, 0.29 ) }
    dend_32 { pt3dadd( -19.0367, -301.485, -32.7327, 0.29 ) }
    dend_32 { pt3dadd( -18.3204, -302.528, -33.8746, 0.81 ) }
    dend_32 { pt3dadd( -17.9778, -303.208, -34.5033, 0.81 ) }
    dend_32 { pt3dadd( -17.4533, -304.654, -35.6162, 0.22 ) }
    dend_32 { pt3dadd( -17.2981, -305.262, -35.9984, 0.22 ) }
    dend_32 { pt3dadd( -17.1424, -306.202, -36.4186, 0.44 ) }
    dend_32 { pt3dadd( -17.0797, -306.733, -36.6113, 0.59 ) }
    dend_32 { pt3dadd( -16.8927, -308.959, -37.2568, 0.22 ) }
    dend_32 { pt3dadd( -16.8434, -309.737, -37.4688, 0.74 ) }
    dend_32 { pt3dadd( -16.8112, -310.429, -37.6439, 1.03 ) }
    dend_32 { pt3dadd( -16.7679, -311.168, -37.8159, 1.03 ) }
    dend_32 { pt3dadd( -16.7222, -311.892, -37.9717, 0.74 ) }
    dend_32 { pt3dadd( -16.6747, -312.565, -38.1138, 0.37 ) }
    dend_32 { pt3dadd( -16.5331, -314.273, -38.4824, 0.22 ) }
    dend_32 { pt3dadd( -16.4098, -315.973, -38.8554, 0.22 ) }
    dend_32 { pt3dadd( -16.3362, -317.252, -39.1298, 0.88 ) }
    dend_32 { pt3dadd( -16.293, -318.198, -39.3304, 1.62 ) }
    dend_32 { pt3dadd( -16.2765, -318.717, -39.4404, 1.84 ) }
    dend_32 { pt3dadd( -16.272, -319.344, -39.5698, 1.84 ) }
    dend_32 { pt3dadd( -16.2987, -320.635, -39.822, 0.52 ) }
    dend_32 { pt3dadd( -16.3705, -321.726, -40.0298, 0.22 ) }
    dend_32 { pt3dadd( -16.4716, -322.6, -40.1982, 0.22 ) }
    dend_32 { pt3dadd( -16.5923, -323.353, -40.3416, 0.37 ) }
    dend_32 { pt3dadd( -16.6524, -323.645, -40.3885, 0.37 ) }
    dend_32 { pt3dadd( -16.8407, -324.369, -40.5002, 0.22 ) }
    dend_32 { pt3dadd( -17.0223, -324.958, -40.5865, 0.74 ) }
    dend_32 { pt3dadd( -17.2451, -325.627, -40.6885, 0.74 ) }
    dend_32 { pt3dadd( -17.4594, -326.232, -40.7741, 0.59 ) }
    dend_32 { pt3dadd( -17.9527, -327.542, -40.9443, 0.22 ) }
    dend_32 { pt3dadd( -18.2014, -328.148, -41.0092, 0.22 ) }
    dend_32 { pt3dadd( -18.5737, -328.956, -41.0474, 0.59 ) }
    dend_32 { pt3dadd( -18.8697, -329.538, -41.0316, 0.59 ) }
    dend_32 { pt3dadd( -19.1851, -330.138, -40.9521, 0.29 ) }
    dend_32 { pt3dadd( -19.5309, -330.75, -40.8337, 0.22 ) }
    dend_32 { pt3dadd( -20.0732, -331.594, -40.6846, 0.37 ) }
    dend_32 { pt3dadd( -20.8004, -332.606, -40.5173, 0.44 ) }
    dend_32 { pt3dadd( -21.486, -333.325, -40.4734, 0.59 ) }
    dend_32 { pt3dadd( -22.3987, -334.055, -40.5463, 0.37 ) }
    dend_32 { pt3dadd( -22.9806, -334.374, -40.6665, 0.22 ) }
    dend_32 { pt3dadd( -24.485, -334.866, -41.1424, 2.21 ) }
    dend_32 { pt3dadd( -25.0697, -334.918, -41.389, 2.5 ) }
    dend_32 { pt3dadd( -27.3883, -334.566, -42.5524, 0.22 ) }
    dend_32 { pt3dadd( -28.1099, -334.321, -42.9521, 0.22 ) }
    dend_32 { pt3dadd( -29.093, -333.781, -43.5893, 0.66 ) }
    dend_32 { pt3dadd( -29.5657, -333.434, -43.9348, 0.66 ) }
    dend_32 { pt3dadd( -30.2387, -332.841, -44.4694, 0.37 ) }
    dend_32 { pt3dadd( -31.1793, -331.968, -45.2798, 1.92 ) }
    dend_32 { pt3dadd( -31.5123, -331.659, -45.5784, 1.92 ) }
    dend_32 { pt3dadd( -33.22, -330.348, -47.1777, 0.44 ) }
    dend_32 { pt3dadd( -33.978, -329.882, -47.8942, 0.59 ) }
    dend_32 { pt3dadd( -34.4347, -329.681, -48.2873, 0.37 ) }
    dend_32 { pt3dadd( -35.1428, -329.513, -48.7995, 0.37 ) }
    dend_32 { pt3dadd( -35.8749, -329.423, -49.298, 0.22 ) }
    dend_32 { pt3dadd( -37.623, -329.389, -50.3236, 0.29 ) }
    dend_32 { pt3dadd( -38.2319, -329.473, -50.5779, 0.22 ) }
    dend_32 { pt3dadd( -39.2291, -329.663, -50.9238, 0.22 ) }
    dend_32 { pt3dadd( -40.6052, -329.917, -51.3591, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -10.3414, -81.257, -8.02345, 0.74 ) }
    dend_31 { pt3dadd( -12.3691, -82.6724, -7.80425, 0.74 ) }
    dend_31 { pt3dadd( -13.1737, -83.1781, -7.71735, 0.74 ) }
    dend_31 { pt3dadd( -14.341, -83.8124, -7.62537, 0.74 ) }
    dend_31 { pt3dadd( -15.1618, -84.1841, -7.58162, 0.52 ) }
    dend_31 { pt3dadd( -16.0225, -84.4514, -7.58256, 0.52 ) }
    dend_31 { pt3dadd( -16.8536, -84.6267, -7.62371, 0.88 ) }
    dend_31 { pt3dadd( -17.5666, -84.5808, -7.77386, 0.88 ) }
    dend_31 { pt3dadd( -18.7212, -84.3208, -8.14013, 0.59 ) }
    dend_31 { pt3dadd( -19.4468, -84.0976, -8.41707, 0.37 ) }
    dend_31 { pt3dadd( -20.5695, -83.7892, -8.91127, 0.37 ) }
    dend_31 { pt3dadd( -21.2539, -83.6784, -9.2712, 1.11 ) }
    dend_31 { pt3dadd( -21.8297, -83.7153, -9.62058, 1.47 ) }
    dend_31 { pt3dadd( -22.3855, -83.8476, -9.96129, 1.47 ) }
    dend_31 { pt3dadd( -22.7902, -83.9842, -10.1929, 1.47 ) }
    dend_31 { pt3dadd( -23.7164, -84.3057, -10.6941, 0.96 ) }
    dend_31 { pt3dadd( -24.5426, -84.5325, -11.1056, 0.59 ) }
    dend_31 { pt3dadd( -25.3007, -84.6572, -11.4219, 0.59 ) }
    dend_31 { pt3dadd( -26.0833, -84.7261, -11.6597, 0.59 ) }
    dend_31 { pt3dadd( -26.9082, -84.7938, -11.8819, 0.81 ) }
    dend_31 { pt3dadd( -27.6916, -84.8602, -12.073, 0.81 ) }
    dend_31 { pt3dadd( -28.3018, -84.9105, -12.1806, 0.81 ) }
    dend_31 { pt3dadd( -29.0232, -84.997, -12.2842, 0.81 ) }
    dend_31 { pt3dadd( -29.8108, -85.3441, -12.5076, 0.22 ) }
    dend_31 { pt3dadd( -30.3228, -86.1372, -12.8843, 0.22 ) }
    dend_31 { pt3dadd( -30.645, -86.7726, -13.2129, 0.66 ) }
    dend_31 { pt3dadd( -30.8172, -87.1514, -13.423, 0.88 ) }
    dend_31 { pt3dadd( -31.0651, -87.7014, -13.7559, 0.88 ) }
    dend_31 { pt3dadd( -31.4295, -88.3427, -14.2925, 0.44 ) }
    dend_31 { pt3dadd( -31.9861, -88.9729, -15.0196, 1.4 ) }
    dend_31 { pt3dadd( -32.5198, -89.3091, -15.6386, 2.14 ) }
    dend_31 { pt3dadd( -32.7611, -89.3916, -15.9113, 2.58 ) }
    dend_31 { pt3dadd( -33.2728, -89.4521, -16.4579, 2.36 ) }
    dend_31 { pt3dadd( -34.667, -89.4387, -17.9318, 1.69 ) }
    dend_31 { pt3dadd( -35.4034, -89.373, -18.6824, 0.37 ) }
    dend_31 { pt3dadd( -36.3076, -89.2453, -19.5031, 0.37 ) }
    dend_31 { pt3dadd( -37.0497, -89.1335, -20.1099, 0.37 ) }
    dend_31 { pt3dadd( -38.5522, -88.9624, -21.2208, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -39.1736, -88.9281, -21.6442, 2.14 ) }
    dend_31 { pt3dadd( -39.7965, -88.9524, -22.0314, 2.5 ) }
    dend_31 { pt3dadd( -41.6296, -89.2202, -23.2132, 0.44 ) }
    dend_31 { pt3dadd( -42.1987, -89.3588, -23.5919, 0.44 ) }
    dend_31 { pt3dadd( -43.0687, -89.5931, -24.2154, 0.44 ) }
    dend_31 { pt3dadd( -43.8592, -89.7803, -24.8314, 0.44 ) }
    dend_31 { pt3dadd( -44.6716, -89.9136, -25.4931, 1.4 ) }
    dend_31 { pt3dadd( -45.5573, -90.0196, -26.2469, 2.06 ) }
    dend_31 { pt3dadd( -46.3475, -90.1034, -26.9803, 2.06 ) }
    dend_31 { pt3dadd( -47.3128, -90.1447, -27.924, 0.66 ) }
    dend_31 { pt3dadd( -48.0675, -90.1483, -28.7326, 0.81 ) }
    dend_31 { pt3dadd( -48.8741, -90.149, -29.6821, 0.52 ) }
    dend_31 { pt3dadd( -49.5222, -90.1923, -30.5944, 1.77 ) }
    dend_31 { pt3dadd( -49.9448, -90.2805, -31.3321, 2.28 ) }
    dend_31 { pt3dadd( -51.0809, -90.7989, -33.8848, 1.33 ) }
    dend_31 { pt3dadd( -51.4187, -91.1034, -34.9077, 1.77 ) }
    dend_31 { pt3dadd( -51.5902, -91.3231, -35.5699, 1.77 ) }
    dend_31 { pt3dadd( -51.8775, -91.7676, -36.8531, 0.74 ) }
    dend_31 { pt3dadd( -52.0898, -92.1305, -37.8755, 0.52 ) }
    dend_31 { pt3dadd( -52.4187, -92.7119, -39.3535, 0.52 ) }
    dend_31 { pt3dadd( -52.7597, -93.4096, -40.8438, 0.88 ) }
    dend_31 { pt3dadd( -53.1595, -94.0828, -42.1936, 1.47 ) }
    dend_31 { pt3dadd( -53.6108, -94.7526, -43.4476, 0.22 ) }
    dend_31 { pt3dadd( -53.8583, -95.1017, -44.0454, 0.22 ) }
    dend_31 { pt3dadd( -54.1845, -95.5797, -44.7563, 0.81 ) }
    dend_31 { pt3dadd( -54.5017, -96.1018, -45.3969, 0.96 ) }
    dend_31 { pt3dadd( -54.8986, -96.8005, -46.138, 1.55 ) }
    dend_31 { pt3dadd( -55.2623, -97.5003, -46.7647, 1.55 ) }
    dend_31 { pt3dadd( -55.6567, -98.2636, -47.4146, 0.37 ) }
    dend_31 { pt3dadd( -55.9419, -98.8053, -47.8859, 0.74 ) }
    dend_31 { pt3dadd( -56.3132, -99.4739, -48.5131, 0.81 ) }
    dend_31 { pt3dadd( -56.7846, -100.352, -49.3863, 0.29 ) }
    dend_31 { pt3dadd( -56.9835, -100.773, -49.81, 0.96 ) }
    dend_31 { pt3dadd( -57.2355, -101.391, -50.4262, 1.33 ) }
    dend_31 { pt3dadd( -57.5191, -102.257, -51.2904, 0.74 ) }
    dend_31 { pt3dadd( -57.6834, -102.979, -51.9955, 0.59 ) }
    dend_31 { pt3dadd( -57.8107, -104.121, -53.063, 0.29 ) }
    dend_31 { pt3dadd( -57.7873, -104.861, -53.6858, 0.29 ) }
    dend_31 { pt3dadd( -57.6833, -105.543, -54.2335, 0.29 ) }
    dend_31 { pt3dadd( -57.5367, -106.068, -54.6073, 1.18 ) }
    dend_31 { pt3dadd( -57.3374, -106.559, -54.9358, 1.69 ) }
    dend_31 { pt3dadd( -56.9647, -107.271, -55.3801, 1.33 ) }
    dend_31 { pt3dadd( -56.365, -108.272, -55.9986, 0.22 ) }
    dend_31 { pt3dadd( -56.0842, -108.729, -56.2906, 0.22 ) }
    dend_31 { pt3dadd( -55.7492, -109.322, -56.6682, 0.96 ) }
    dend_31 { pt3dadd( -55.5456, -109.742, -56.9314, 1.11 ) }
    dend_31 { pt3dadd( -55.2041, -110.549, -57.4207, 0.52 ) }
    dend_31 { pt3dadd( -54.7228, -111.853, -58.1801, 0.22 ) }
    dend_31 { pt3dadd( -54.5191, -112.473, -58.5328, 0.22 ) }
    dend_31 { pt3dadd( -54.3236, -113.153, -58.9179, 0.88 ) }
    dend_31 { pt3dadd( -54.2008, -113.65, -59.2214, 1.03 ) }
    dend_31 { pt3dadd( -54.0122, -114.506, -59.7859, 0.22 ) }
    dend_31 { pt3dadd( -53.9258, -114.901, -60.0599, 0.22 ) }
    dend_31 { pt3dadd( -53.7867, -115.476, -60.4746, 0.66 ) }
    dend_31 { pt3dadd( -53.6147, -116.116, -60.9339, 0.74 ) }
    dend_31 { pt3dadd( -53.1814, -117.602, -61.9641, 0.22 ) }
    dend_31 { pt3dadd( -52.8714, -118.686, -62.638, 0.22 ) }
    dend_31 { pt3dadd( -52.549, -120.07, -63.3908, 0.96 ) }
    dend_31 { pt3dadd( -52.4512, -120.596, -63.6426, 1.25 ) }
    dend_31 { pt3dadd( -52.3776, -121.305, -63.9202, 1.25 ) }
    dend_31 { pt3dadd( -52.3389, -122.361, -64.2358, 0.66 ) }
    dend_31 { pt3dadd( -52.4006, -123.667, -64.5296, 0.15 ) }
    dend_31 { pt3dadd( -52.5861, -124.788, -64.7442, 0.37 ) }
    dend_31 { pt3dadd( -52.7283, -125.311, -64.8492, 0.37 ) }
    dend_31 { pt3dadd( -53.3875, -127.218, -65.2715, 0.22 ) }
    dend_31 { pt3dadd( -53.5122, -127.514, -65.3501, 0.74 ) }
    dend_31 { pt3dadd( -53.8107, -128.142, -65.5502, 0.88 ) }
    dend_31 { pt3dadd( -54.8326, -130.132, -66.2532, 0.22 ) }
    dend_31 { pt3dadd( -55.2275, -130.88, -66.5208, 0.74 ) }
    dend_31 { pt3dadd( -55.6213, -131.605, -66.7746, 0.74 ) }
    dend_31 { pt3dadd( -56.4844, -133.182, -67.3384, 0.22 ) }
    dend_31 { pt3dadd( -57.2019, -134.507, -67.7944, 0.22 ) }
    dend_31 { pt3dadd( -57.9988, -136.032, -68.2407, 0.22 ) }
    dend_31 { pt3dadd( -58.71, -137.476, -68.5757, 0.22 ) }
    dend_31 { pt3dadd( -59.078, -138.264, -68.7102, 0.88 ) }
    dend_31 { pt3dadd( -59.3495, -138.889, -68.7818, 1.11 ) }
    dend_31 { pt3dadd( -59.5863, -139.526, -68.8106, 1.11 ) }
    dend_31 { pt3dadd( -60.0794, -141.084, -68.8096, 0.15 ) }
    dend_31 { pt3dadd( -60.408, -142.348, -68.7846, 0.15 ) }
    dend_31 { pt3dadd( -60.5658, -143.049, -68.763, 0.81 ) }
    dend_31 { pt3dadd( -60.6903, -143.662, -68.7419, 0.96 ) }
    dend_31 { pt3dadd( -61.132, -145.95, -68.9339, 0.22 ) }
    dend_31 { pt3dadd( -61.3232, -147.024, -69.0546, 0.22 ) }
    dend_31 { pt3dadd( -61.5216, -148.21, -69.2646, 0.22 ) }
    dend_31 { pt3dadd( -61.5975, -148.686, -69.3736, 1.18 ) }
    dend_31 { pt3dadd( -61.6689, -149.139, -69.5082, 1.18 ) }
    dend_31 { pt3dadd( -62.2465, -152.47, -70.989, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 31.7043, 193.587, -34.3093, 0.37 ) }
    dend_26 { pt3dadd( 32.0416, 192.865, -33.6221, 0.37 ) }
    dend_26 { pt3dadd( 32.3317, 192.326, -33.1115, 0.52 ) }
    dend_26 { pt3dadd( 32.7504, 191.599, -32.4134, 0.74 ) }
    dend_26 { pt3dadd( 33.0977, 191.024, -31.8701, 1.11 ) }
    dend_26 { pt3dadd( 33.3018, 190.7, -31.5566, 1.11 ) }
    dend_26 { pt3dadd( 33.5967, 190.232, -31.0981, 0.81 ) }
    dend_26 { pt3dadd( 34.2486, 189.228, -30.0036, 0.22 ) }
    dend_26 { pt3dadd( 34.5609, 188.737, -29.4755, 0.22 ) }
    dend_26 { pt3dadd( 34.7621, 188.403, -29.1557, 0.66 ) }
    dend_26 { pt3dadd( 34.9679, 188.027, -28.8297, 0.66 ) }
    dend_26 { pt3dadd( 35.1674, 187.633, -28.5131, 0.66 ) }
    dend_26 { pt3dadd( 35.5268, 186.838, -27.8954, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 35.8424, 186.046, -27.3024, 0.22 ) }
    dend_26 { pt3dadd( 36.1666, 185.16, -26.681, 0.22 ) }
    dend_26 { pt3dadd( 36.3131, 184.727, -26.3949, 0.44 ) }
    dend_26 { pt3dadd( 36.4116, 184.426, -26.2238, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 31.7043, 193.587, -34.3093, 0.22 ) }
    dend_25 { pt3dadd( 33.1529, 193.806, -33.6547, 0.22 ) }
    dend_25 { pt3dadd( 33.4889, 193.878, -33.5199, 0.44 ) }
    dend_25 { pt3dadd( 35.0303, 194.299, -32.9212, 0.22 ) }
    dend_25 { pt3dadd( 35.7001, 194.502, -32.685, 0.59 ) }
    dend_25 { pt3dadd( 36.2236, 194.664, -32.5288, 0.59 ) }
    dend_25 { pt3dadd( 38.4688, 195.359, -31.8587, 0.22 ) }
    dend_25 { pt3dadd( 41.0854, 196.201, -31.1481, 0.22 ) }
    dend_25 { pt3dadd( 42.0285, 196.527, -30.9153, 0.66 ) }
    dend_25 { pt3dadd( 42.7764, 196.813, -30.7629, 0.81 ) }
    dend_25 { pt3dadd( 43.9186, 197.269, -30.5645, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 8.96138, 181.275, -3.33661, 0.59 ) }
    dend_19 { pt3dadd( 10.6742, 182.635, -3.9723, 0.59 ) }
    dend_19 { pt3dadd( 11.231, 183.096, -4.15947, 0.44 ) }
    dend_19 { pt3dadd( 12.3831, 184.106, -4.58107, 0.22 ) }
    dend_19 { pt3dadd( 13.3694, 185.042, -4.9432, 0.81 ) }
    dend_19 { pt3dadd( 13.8873, 185.558, -5.15314, 0.96 ) }
    dend_19 { pt3dadd( 14.1253, 185.801, -5.2578, 0.96 ) }
    dend_19 { pt3dadd( 14.8527, 186.654, -5.60947, 0.22 ) }
    dend_19 { pt3dadd( 15.8536, 188.027, -6.25004, 0.22 ) }
    dend_19 { pt3dadd( 16.6429, 189.308, -6.89628, 1.11 ) }
    dend_19 { pt3dadd( 17.0208, 190.022, -7.25862, 1.47 ) }
    dend_19 { pt3dadd( 17.1736, 190.373, -7.45163, 1.47 ) }
    dend_19 { pt3dadd( 17.6846, 191.908, -8.3069, 0.22 ) }
    dend_19 { pt3dadd( 18.0096, 193.313, -9.10587, 0.22 ) }
    dend_19 { pt3dadd( 18.1343, 194.14, -9.5749, 0.66 ) }
    dend_19 { pt3dadd( 18.1769, 194.55, -9.81678, 0.66 ) }
    dend_19 { pt3dadd( 18.2613, 196.509, -10.9475, 0.22 ) }
    dend_19 { pt3dadd( 18.2494, 198.294, -11.9592, 0.22 ) }
    dend_19 { pt3dadd( 18.1893, 199.31, -12.5393, 0.22 ) }
    dend_19 { pt3dadd( 18.0807, 200.491, -13.2081, 1.47 ) }
    dend_19 { pt3dadd( 17.9872, 201.164, -13.5747, 1.47 ) }
    dend_19 { pt3dadd( 17.558, 203.441, -14.7189, 0.22 ) }
    dend_19 { pt3dadd( 17.3773, 204.182, -15.0659, 0.81 ) }
    dend_19 { pt3dadd( 17.185, 204.803, -15.3375, 0.81 ) }
    dend_19 { pt3dadd( 16.6236, 206.324, -15.9364, 0.22 ) }
    dend_19 { pt3dadd( 16.1153, 207.528, -16.3799, 0.22 ) }
    dend_19 { pt3dadd( 15.534, 208.781, -16.8168, 1.47 ) }
    dend_19 { pt3dadd( 15.2727, 209.298, -17.0121, 1.84 ) }
    dend_19 { pt3dadd( 14.2817, 211.174, -17.7317, 0.22 ) }
    dend_19 { pt3dadd( 13.4845, 212.61, -18.2769, 0.22 ) }
    dend_19 { pt3dadd( 13.1828, 213.107, -18.4715, 0.22 ) }
    dend_19 { pt3dadd( 12.3607, 214.403, -19.0353, 1.55 ) }
    dend_19 { pt3dadd( 11.834, 215.182, -19.4081, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.96138, 181.275, -3.33661, 0.22 ) }
    dend_18 { pt3dadd( 9.99853, 184.176, -3.6501, 0.22 ) }
    dend_18 { pt3dadd( 10.5887, 185.753, -3.79555, 0.22 ) }
    dend_18 { pt3dadd( 11.056, 186.976, -3.89541, 0.96 ) }
    dend_18 { pt3dadd( 11.2601, 187.508, -3.93293, 1.18 ) }
    dend_18 { pt3dadd( 11.4716, 188.057, -3.96611, 1.18 ) }
    dend_18 { pt3dadd( 11.8119, 188.956, -4.01262, 0.22 ) }
    dend_18 { pt3dadd( 12.0634, 189.598, -4.02261, 0.44 ) }
    dend_18 { pt3dadd( 12.1832, 189.926, -4.03238, 0.44 ) }
    dend_18 { pt3dadd( 12.501, 190.869, -4.06708, 0.22 ) }
    dend_18 { pt3dadd( 12.7691, 191.698, -4.09794, 0.44 ) }
    dend_18 { pt3dadd( 13.061, 192.618, -4.13183, 0.44 ) }
    dend_18 { pt3dadd( 13.9037, 195.43, -4.23216, 0.22 ) }
    dend_18 { pt3dadd( 14.6004, 197.799, -4.33918, 0.22 ) }
    dend_18 { pt3dadd( 14.8644, 198.688, -4.39093, 0.66 ) }
    dend_18 { pt3dadd( 15.0105, 199.176, -4.42618, 0.74 ) }
    dend_18 { pt3dadd( 15.252, 199.952, -4.50589, 0.22 ) }
    dend_18 { pt3dadd( 15.8689, 201.846, -4.74373, 0.22 ) }
    dend_18 { pt3dadd( 16.2335, 202.959, -4.90144, 1.03 ) }
    dend_18 { pt3dadd( 16.477, 203.697, -5.01584, 1.25 ) }
    dend_18 { pt3dadd( 16.6607, 204.254, -5.10695, 1.25 ) }
    dend_18 { pt3dadd( 17.2794, 206.129, -5.42689, 0.22 ) }
    dend_18 { pt3dadd( 18.3085, 209.213, -5.96663, 0.22 ) }
    dend_18 { pt3dadd( 18.6611, 210.251, -6.14742, 0.74 ) }
    dend_18 { pt3dadd( 18.8569, 210.851, -6.2363, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.62856, 79.6804, 10.0389, 0.37 ) }
    dend_16 { pt3dadd( 8.3323, 90.5163, 15.8055, 0.37 ) }
    dend_16 { pt3dadd( 13.0521, 100.715, 22.0942, 0.37 ) }
    dend_16 { pt3dadd( 15.2092, 110.478, 30.2741, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.62856, 79.6804, 10.0389, 0.22 ) }
    dend_15 { pt3dadd( 7.78571, 87.2658, 8.18528, 0.37 ) }
    dend_15 { pt3dadd( 11.1482, 94.4274, 5.18059, 0.37 ) }
    dend_15 { pt3dadd( 14.7362, 101.29, 1.69846, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 90.8033, -6.12083, 23.6271, 0.37 ) }
    dend_10 { pt3dadd( 101.367, -8.99653, 25.9702, 0.37 ) }
    dend_10 { pt3dadd( 112.335, -10.2232, 28.0303, 0.37 ) }
    dend_10 { pt3dadd( 123.184, -10.1458, 30.9326, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 90.8033, -6.12083, 23.6271, 0.22 ) }
    dend_9 { pt3dadd( 102.606, -9.54483, 26.9536, 0.37 ) }
    dend_9 { pt3dadd( 115.102, -11.2656, 28.9274, 0.37 ) }
    dend_9 { pt3dadd( 127.355, -13.3392, 31.8285, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 50.4485, 7.78633, 4.43232, 0.52 ) }
    dend_5 { pt3dadd( 51.6584, 7.98949, 4.80577, 0.52 ) }
    dend_5 { pt3dadd( 52.1275, 8.04735, 4.9589, 0.52 ) }
    dend_5 { pt3dadd( 52.6122, 8.0969, 5.15418, 0.52 ) }
    dend_5 { pt3dadd( 53.5395, 8.18294, 5.56033, 0.52 ) }
    dend_5 { pt3dadd( 54.0925, 8.22229, 5.81788, 0.88 ) }
    dend_5 { pt3dadd( 54.9384, 8.26523, 6.20736, 0.88 ) }
    dend_5 { pt3dadd( 55.5657, 8.29303, 6.48721, 0.88 ) }
    dend_5 { pt3dadd( 56.229, 8.24546, 6.80314, 0.81 ) }
    dend_5 { pt3dadd( 56.6501, 8.12044, 6.99601, 0.81 ) }
    dend_5 { pt3dadd( 57.2732, 7.77715, 7.2774, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 57.7641, 7.38772, 7.47826, 0.59 ) }
    dend_5 { pt3dadd( 58.2867, 6.87803, 7.645, 0.59 ) }
    dend_5 { pt3dadd( 58.8037, 6.32483, 7.7541, 0.74 ) }
    dend_5 { pt3dadd( 59.6063, 5.36834, 7.87053, 0.66 ) }
    dend_5 { pt3dadd( 59.9326, 4.93977, 7.91215, 0.66 ) }
    dend_5 { pt3dadd( 60.4214, 4.23654, 7.97306, 0.52 ) }
    dend_5 { pt3dadd( 60.7522, 3.75023, 8.00967, 0.52 ) }
    dend_5 { pt3dadd( 61.181, 3.14433, 8.04414, 0.81 ) }
    dend_5 { pt3dadd( 61.7147, 2.39001, 8.0773, 0.81 ) }
    dend_5 { pt3dadd( 62.0653, 1.86921, 8.11019, 0.81 ) }
    dend_5 { pt3dadd( 62.4832, 1.18489, 8.15141, 0.81 ) }
    dend_5 { pt3dadd( 62.9747, 0.281128, 8.21232, 0.88 ) }
    dend_5 { pt3dadd( 63.3588, -0.516139, 8.27268, 1.11 ) }
    dend_5 { pt3dadd( 63.5911, -1.04004, 8.31016, 1.11 ) }
    dend_5 { pt3dadd( 64.0086, -2.09175, 8.39131, 0.88 ) }
    dend_5 { pt3dadd( 64.2795, -2.92254, 8.48427, 0.96 ) }
    dend_5 { pt3dadd( 64.4403, -3.5625, 8.59141, 0.96 ) }
    dend_5 { pt3dadd( 64.5406, -4.09073, 8.70908, 0.96 ) }
    dend_5 { pt3dadd( 64.617, -4.56987, 8.83378, 0.66 ) }
    dend_5 { pt3dadd( 64.7371, -5.32292, 9.07559, 0.66 ) }
    dend_5 { pt3dadd( 64.9261, -6.30323, 9.45404, 0.81 ) }
    dend_5 { pt3dadd( 65.1437, -7.07495, 9.79087, 1.11 ) }
    dend_5 { pt3dadd( 65.4658, -7.93849, 10.2089, 0.96 ) }
    dend_5 { pt3dadd( 65.7625, -8.55687, 10.5007, 0.81 ) }
    dend_5 { pt3dadd( 66.2336, -9.34441, 10.8597, 0.81 ) }
    dend_5 { pt3dadd( 66.8433, -10.1668, 11.2098, 0.59 ) }
    dend_5 { pt3dadd( 67.3844, -10.7926, 11.446, 0.37 ) }
    dend_5 { pt3dadd( 67.8956, -11.3338, 11.6216, 0.37 ) }
    dend_5 { pt3dadd( 68.6616, -12.1233, 11.8353, 0.59 ) }
    dend_5 { pt3dadd( 69.0835, -12.5693, 11.9184, 0.88 ) }
    dend_5 { pt3dadd( 69.3171, -12.8325, 11.9443, 1.11 ) }
    dend_5 { pt3dadd( 69.6132, -13.1975, 11.9791, 1.11 ) }
    dend_5 { pt3dadd( 70.0011, -13.7048, 12.0467, 0.74 ) }
    dend_5 { pt3dadd( 70.3148, -14.0931, 12.0985, 0.74 ) }
    dend_5 { pt3dadd( 70.624, -14.4906, 12.1442, 0.74 ) }
    dend_5 { pt3dadd( 71.0927, -15.1286, 12.1815, 0.74 ) }
    dend_5 { pt3dadd( 71.5668, -15.8081, 12.1815, 0.74 ) }
    dend_5 { pt3dadd( 71.9982, -16.4271, 12.1658, 0.66 ) }
    dend_5 { pt3dadd( 72.4083, -17.0082, 12.1346, 0.66 ) }
    dend_5 { pt3dadd( 72.9535, -17.7746, 12.071, 0.96 ) }
    dend_5 { pt3dadd( 73.5943, -18.7045, 11.9623, 1.4 ) }
    dend_5 { pt3dadd( 73.9168, -19.2159, 11.8818, 1.62 ) }
    dend_5 { pt3dadd( 74.2441, -19.7822, 11.7725, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 50.4485, 7.78633, 4.43232, 0.88 ) }
    dend_4 { pt3dadd( 51.2789, 8.37976, 4.91633, 0.88 ) }
    dend_4 { pt3dadd( 52.0303, 8.83503, 5.33592, 0.88 ) }
    dend_4 { pt3dadd( 52.8822, 9.25077, 5.76456, 0.88 ) }
    dend_4 { pt3dadd( 53.8111, 9.61947, 6.17714, 0.88 ) }
    dend_4 { pt3dadd( 54.9164, 9.97926, 6.63181, 0.74 ) }
    dend_4 { pt3dadd( 55.6179, 10.1834, 6.91651, 0.74 ) }
    dend_4 { pt3dadd( 56.6147, 10.3985, 7.30973, 0.88 ) }
    dend_4 { pt3dadd( 57.5128, 10.5407, 7.63861, 0.88 ) }
    dend_4 { pt3dadd( 58.2568, 10.6366, 7.88605, 0.88 ) }
    dend_4 { pt3dadd( 58.9795, 10.7262, 8.11418, 0.66 ) }
    dend_4 { pt3dadd( 59.4862, 10.8133, 8.27528, 0.66 ) }
    dend_4 { pt3dadd( 60.1641, 11.0211, 8.49825, 0.88 ) }
    dend_4 { pt3dadd( 60.5684, 11.2051, 8.64244, 0.88 ) }
    dend_4 { pt3dadd( 60.9544, 11.4225, 8.7879, 0.88 ) }
    dend_4 { pt3dadd( 61.3461, 11.6569, 8.93492, 0.88 ) }
    dend_4 { pt3dadd( 62.0759, 12.0823, 9.20291, 0.59 ) }
    dend_4 { pt3dadd( 62.5955, 12.3527, 9.41301, 0.59 ) }
    dend_4 { pt3dadd( 62.9939, 12.5544, 9.60542, 0.81 ) }
    dend_4 { pt3dadd( 63.5163, 12.8339, 9.90327, 0.81 ) }
    dend_4 { pt3dadd( 63.9155, 13.0726, 10.1683, 0.81 ) }
    dend_4 { pt3dadd( 64.3659, 13.3622, 10.4946, 0.66 ) }
    dend_4 { pt3dadd( 65.0119, 13.7887, 10.9833, 0.59 ) }
    dend_4 { pt3dadd( 65.6951, 14.3386, 11.5648, 0.59 ) }
    dend_4 { pt3dadd( 66.0616, 14.6954, 11.9004, 0.59 ) }
    dend_4 { pt3dadd( 66.4774, 15.1661, 12.2888, 0.44 ) }
    dend_4 { pt3dadd( 66.7376, 15.4789, 12.5135, 0.44 ) }
    dend_4 { pt3dadd( 67.0177, 15.8218, 12.7285, 0.44 ) }
    dend_4 { pt3dadd( 67.7158, 16.6689, 13.2084, 0.44 ) }
    dend_4 { pt3dadd( 68.2698, 17.3086, 13.5617, 0.66 ) }
    dend_4 { pt3dadd( 68.7329, 17.8322, 13.847, 0.66 ) }
    dend_4 { pt3dadd( 69.3055, 18.4758, 14.1907, 0.74 ) }
    dend_4 { pt3dadd( 69.7524, 18.9796, 14.4556, 0.96 ) }
    dend_4 { pt3dadd( 70.0966, 19.3558, 14.6511, 0.96 ) }
    dend_4 { pt3dadd( 70.6063, 19.8567, 14.9072, 0.66 ) }
    dend_4 { pt3dadd( 71.1067, 20.3245, 15.1453, 0.66 ) }
    dend_4 { pt3dadd( 71.9014, 21.0531, 15.5143, 0.59 ) }
    dend_4 { pt3dadd( 72.6371, 21.7362, 15.8826, 0.59 ) }
    dend_4 { pt3dadd( 73.1125, 22.1813, 16.136, 0.81 ) }
    dend_4 { pt3dadd( 73.4729, 22.5256, 16.3406, 0.81 ) }
    dend_4 { pt3dadd( 74.0899, 23.0868, 16.6841, 0.52 ) }
    dend_4 { pt3dadd( 74.5686, 23.4812, 16.9305, 0.52 ) }
    dend_4 { pt3dadd( 75.2057, 23.965, 17.2463, 0.52 ) }
    dend_4 { pt3dadd( 75.7427, 24.3604, 17.5078, 0.52 ) }
    dend_4 { pt3dadd( 76.2575, 24.7323, 17.7509, 0.37 ) }
    dend_4 { pt3dadd( 77.1758, 25.3817, 18.1681, 0.37 ) }
    dend_4 { pt3dadd( 77.7803, 25.8047, 18.4305, 0.59 ) }
    dend_4 { pt3dadd( 78.1664, 26.0605, 18.5798, 0.59 ) }
    dend_4 { pt3dadd( 78.9863, 26.5947, 18.8627, 0.74 ) }
    dend_4 { pt3dadd( 79.414, 26.8769, 19.0116, 0.74 ) }
    dend_4 { pt3dadd( 79.7777, 27.1255, 19.148, 0.74 ) }
    dend_4 { pt3dadd( 80.2955, 27.5191, 19.3809, 0.74 ) }
    dend_4 { pt3dadd( 80.6421, 27.8128, 19.5226, 0.44 ) }
    dend_4 { pt3dadd( 81.1372, 28.2516, 19.6595, 0.44 ) }
    dend_4 { pt3dadd( 81.5628, 28.6202, 19.7253, 0.81 ) }
    dend_4 { pt3dadd( 82.2776, 29.2212, 19.7745, 0.81 ) }
    dend_4 { pt3dadd( 82.8022, 29.6482, 19.7622, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 83.7172, 30.3755, 19.6979, 0.52 ) }
    dend_4 { pt3dadd( 84.4135, 30.9544, 19.6148, 0.44 ) }
    dend_4 { pt3dadd( 84.8727, 31.3413, 19.5244, 0.44 ) }
    dend_4 { pt3dadd( 85.2732, 31.6882, 19.4202, 0.44 ) }
    dend_4 { pt3dadd( 85.5855, 31.9635, 19.3133, 0.44 ) }
    dend_4 { pt3dadd( 86.1081, 32.3974, 19.1341, 0.74 ) }
    dend_4 { pt3dadd( 86.5658, 32.7216, 19.0718, 0.59 ) }
    dend_4 { pt3dadd( 86.8755, 32.9558, 19.0661, 0.59 ) }
    dend_4 { pt3dadd( 92.7196, 37.1363, 22.8341, 0.59 ) }
    dend_4 { pt3dadd( 98.7509, 41.2189, 26.4362, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -123.819, -359.201, 1.92275, 0.52 ) }
    dend_39 { pt3dadd( -124.445, -360.655, 1.80328, 0.52 ) }
    dend_39 { pt3dadd( -124.71, -361.241, 1.75856, 0.29 ) }
    dend_39 { pt3dadd( -125.074, -362.008, 1.68926, 0.44 ) }
    dend_39 { pt3dadd( -125.416, -362.721, 1.61883, 0.44 ) }
    dend_39 { pt3dadd( -125.688, -363.273, 1.55924, 0.29 ) }
    dend_39 { pt3dadd( -126.098, -364.078, 1.45436, 0.29 ) }
    dend_39 { pt3dadd( -126.518, -364.843, 1.33394, 0.81 ) }
    dend_39 { pt3dadd( -126.829, -365.431, 1.22081, 1.18 ) }
    dend_39 { pt3dadd( -126.99, -365.754, 1.15386, 1.4 ) }
    dend_39 { pt3dadd( -127.243, -366.291, 1.04306, 1.4 ) }
    dend_39 { pt3dadd( -127.463, -366.808, 0.942602, 1.11 ) }
    dend_39 { pt3dadd( -127.9, -367.927, 0.744831, 0.52 ) }
    dend_39 { pt3dadd( -128.196, -368.805, 0.620065, 0.44 ) }
    dend_39 { pt3dadd( -128.403, -369.511, 0.540871, 0.74 ) }
    dend_39 { pt3dadd( -128.643, -370.36, 0.460164, 0.81 ) }
    dend_39 { pt3dadd( -128.814, -371.001, 0.405538, 0.81 ) }
    dend_39 { pt3dadd( -128.979, -371.68, 0.353872, 0.74 ) }
    dend_39 { pt3dadd( -129.191, -372.576, 0.330729, 0.22 ) }
    dend_39 { pt3dadd( -129.287, -372.99, 0.327499, 0.22 ) }
    dend_39 { pt3dadd( -129.437, -373.719, 0.324727, 0.22 ) }
    dend_39 { pt3dadd( -129.548, -374.35, 0.348003, 0.66 ) }
    dend_39 { pt3dadd( -129.653, -375.006, 0.405492, 0.81 ) }
    dend_39 { pt3dadd( -129.804, -376.059, 0.545937, 0.66 ) }
    dend_39 { pt3dadd( -129.918, -377.015, 0.726113, 0.22 ) }
    dend_39 { pt3dadd( -129.989, -377.866, 0.932427, 0.22 ) }
    dend_39 { pt3dadd( -130.015, -378.485, 1.1156, 0.22 ) }
    dend_39 { pt3dadd( -130.039, -379.082, 1.32922, 0.96 ) }
    dend_39 { pt3dadd( -130.059, -379.387, 1.44481, 1.18 ) }
    dend_39 { pt3dadd( -130.093, -379.842, 1.61409, 1.18 ) }
    dend_39 { pt3dadd( -130.13, -380.213, 1.77605, 1.18 ) }
    dend_39 { pt3dadd( -130.225, -380.922, 2.06428, 0.74 ) }
    dend_39 { pt3dadd( -130.41, -381.997, 2.44992, 0.22 ) }
    dend_39 { pt3dadd( -130.482, -382.351, 2.56593, 0.22 ) }
    dend_39 { pt3dadd( -130.577, -382.764, 2.69582, 0.44 ) }
    dend_39 { pt3dadd( -130.659, -383.123, 2.7979, 0.44 ) }
    dend_39 { pt3dadd( -130.857, -384.064, 3.04478, 0.22 ) }
    dend_39 { pt3dadd( -130.966, -384.657, 3.18222, 0.96 ) }
    dend_39 { pt3dadd( -131.026, -385.114, 3.27391, 1.18 ) }
    dend_39 { pt3dadd( -131.073, -385.552, 3.35912, 1.25 ) }
    dend_39 { pt3dadd( -131.157, -386.388, 3.51302, 0.96 ) }
    dend_39 { pt3dadd( -131.306, -387.588, 3.70874, 0.29 ) }
    dend_39 { pt3dadd( -131.442, -388.533, 3.84245, 0.22 ) }
    dend_39 { pt3dadd( -131.622, -389.601, 3.96193, 0.22 ) }
    dend_39 { pt3dadd( -131.733, -390.151, 4.01019, 0.81 ) }
    dend_39 { pt3dadd( -131.845, -390.599, 4.03483, 0.96 ) }
    dend_39 { pt3dadd( -132.325, -392.153, 4.08085, 0.22 ) }
    dend_39 { pt3dadd( -132.504, -392.638, 4.0823, 0.22 ) }
    dend_39 { pt3dadd( -132.817, -393.409, 4.08093, 0.59 ) }
    dend_39 { pt3dadd( -133.061, -393.972, 4.08061, 0.59 ) }
    dend_39 { pt3dadd( -133.419, -394.817, 4.08773, 0.52 ) }
    dend_39 { pt3dadd( -133.698, -395.513, 4.10659, 0.52 ) }
    dend_39 { pt3dadd( -134.058, -396.456, 4.16226, 0.52 ) }
    dend_39 { pt3dadd( -134.197, -396.826, 4.19111, 0.96 ) }
    dend_39 { pt3dadd( -134.427, -397.46, 4.24927, 0.96 ) }
    dend_39 { pt3dadd( -134.678, -398.174, 4.32301, 0.59 ) }
    dend_39 { pt3dadd( -135.114, -399.375, 4.48513, 0.22 ) }
    dend_39 { pt3dadd( -135.557, -400.616, 4.66381, 0.22 ) }
    dend_39 { pt3dadd( -135.765, -401.197, 4.75284, 0.22 ) }
    dend_39 { pt3dadd( -135.959, -401.711, 4.83297, 0.96 ) }
    dend_39 { pt3dadd( -136.096, -402.062, 4.89198, 1.18 ) }
    dend_39 { pt3dadd( -136.385, -402.759, 5.02254, 0.52 ) }
    dend_39 { pt3dadd( -137.156, -411.558, 5.31834, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -123.819, -359.201, 1.92275, 0.29 ) }
    dend_36 { pt3dadd( -125.162, -358.756, 2.1456, 0.29 ) }
    dend_36 { pt3dadd( -125.884, -358.701, 2.24713, 0.37 ) }
    dend_36 { pt3dadd( -126.215, -358.759, 2.28649, 0.37 ) }
    dend_36 { pt3dadd( -126.974, -359.002, 2.39651, 0.37 ) }
    dend_36 { pt3dadd( -127.703, -359.277, 2.42639, 0.52 ) }
    dend_36 { pt3dadd( -128.336, -359.531, 2.41647, 0.59 ) }
    dend_36 { pt3dadd( -129.189, -359.963, 2.34083, 0.59 ) }
    dend_36 { pt3dadd( -129.945, -360.374, 2.23829, 0.37 ) }
    dend_36 { pt3dadd( -130.64, -360.762, 2.11799, 0.37 ) }
    dend_36 { pt3dadd( -131.871, -361.462, 1.85412, 0.37 ) }
    dend_36 { pt3dadd( -132.436, -361.753, 1.71937, 0.37 ) }
    dend_36 { pt3dadd( -132.959, -362.0, 1.58998, 0.29 ) }
    dend_36 { pt3dadd( -133.376, -362.179, 1.49043, 0.29 ) }
    dend_36 { pt3dadd( -133.847, -362.376, 1.39025, 0.81 ) }
    dend_36 { pt3dadd( -134.227, -362.55, 1.32521, 0.81 ) }
    dend_36 { pt3dadd( -134.754, -362.846, 1.3057, 0.81 ) }
    dend_36 { pt3dadd( -135.647, -363.429, 1.3063, 0.29 ) }
    dend_36 { pt3dadd( -136.073, -363.744, 1.32158, 0.66 ) }
    dend_36 { pt3dadd( -136.391, -364.0, 1.35034, 0.66 ) }
    dend_36 { pt3dadd( -136.686, -364.257, 1.38946, 0.66 ) }
    dend_36 { pt3dadd( -137.752, -365.239, 1.56442, 0.29 ) }
    dend_36 { pt3dadd( -138.225, -365.697, 1.64, 0.44 ) }
    dend_36 { pt3dadd( -138.634, -366.091, 1.70379, 0.29 ) }
    dend_36 { pt3dadd( -139.122, -366.545, 1.76745, 0.74 ) }
    dend_36 { pt3dadd( -139.479, -366.852, 1.79031, 0.74 ) }
    dend_36 { pt3dadd( -140.064, -367.29, 1.79075, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -141.094, -367.954, 1.7291, 0.29 ) }
    dend_36 { pt3dadd( -141.705, -368.309, 1.67153, 0.52 ) }
    dend_36 { pt3dadd( -142.116, -368.528, 1.60835, 0.52 ) }
    dend_36 { pt3dadd( -142.974, -368.95, 1.41305, 0.29 ) }
    dend_36 { pt3dadd( -143.611, -369.232, 1.24917, 0.29 ) }
    dend_36 { pt3dadd( -143.996, -369.378, 1.14011, 0.59 ) }
    dend_36 { pt3dadd( -144.451, -369.529, 0.992783, 0.59 ) }
    dend_36 { pt3dadd( -145.27, -369.787, 0.705503, 0.22 ) }
    dend_36 { pt3dadd( -145.73, -369.926, 0.552893, 0.29 ) }
    dend_36 { pt3dadd( -146.425, -370.138, 0.348193, 0.29 ) }
    dend_36 { pt3dadd( -146.753, -370.244, 0.254396, 0.29 ) }
    dend_36 { pt3dadd( -147.595, -370.554, 0.0213068, 0.37 ) }
    dend_36 { pt3dadd( -148.237, -370.857, -0.0942801, 0.37 ) }
    dend_36 { pt3dadd( -148.902, -371.242, -0.138053, 0.52 ) }
    dend_36 { pt3dadd( -149.673, -371.776, -0.132485, 1.55 ) }
    dend_36 { pt3dadd( -150.136, -372.149, -0.108868, 1.92 ) }
    dend_36 { pt3dadd( -150.58, -372.542, -0.0655151, 1.92 ) }
    dend_36 { pt3dadd( -151.608, -373.522, 0.101614, 0.29 ) }
    dend_36 { pt3dadd( -152.282, -374.215, 0.228308, 0.29 ) }
    dend_36 { pt3dadd( -152.826, -374.815, 0.350572, 0.29 ) }
    dend_36 { pt3dadd( -153.258, -375.302, 0.460491, 0.74 ) }
    dend_36 { pt3dadd( -153.473, -375.546, 0.516289, 0.96 ) }
    dend_36 { pt3dadd( -153.664, -375.753, 0.561153, 1.11 ) }
    dend_36 { pt3dadd( -154.217, -376.366, 0.687068, 0.52 ) }
    dend_36 { pt3dadd( -154.565, -376.779, 0.795626, 0.29 ) }
    dend_36 { pt3dadd( -155.077, -377.376, 0.982223, 0.22 ) }
    dend_36 { pt3dadd( -155.427, -377.763, 1.11574, 0.44 ) }
    dend_36 { pt3dadd( -155.728, -378.077, 1.2319, 0.44 ) }
    dend_36 { pt3dadd( -156.562, -378.939, 1.5659, 0.22 ) }
    dend_36 { pt3dadd( -157.069, -379.45, 1.77702, 0.22 ) }
    dend_36 { pt3dadd( -157.556, -379.923, 1.97624, 1.25 ) }
    dend_36 { pt3dadd( -158.005, -380.349, 2.1701, 1.55 ) }
    dend_36 { pt3dadd( -158.221, -380.543, 2.25962, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 74.2441, -19.7822, 11.7725, 0.74 ) }
    dend_7 { pt3dadd( 75.4873, -19.9567, 13.0238, 0.74 ) }
    dend_7 { pt3dadd( 75.8466, -20.0331, 13.3722, 0.74 ) }
    dend_7 { pt3dadd( 76.458, -20.2219, 13.9409, 0.59 ) }
    dend_7 { pt3dadd( 77.171, -20.5246, 14.5702, 0.59 ) }
    dend_7 { pt3dadd( 77.8289, -20.8731, 15.1267, 0.59 ) }
    dend_7 { pt3dadd( 78.1568, -21.0636, 15.3966, 0.59 ) }
    dend_7 { pt3dadd( 78.7965, -21.5191, 15.8951, 0.59 ) }
    dend_7 { pt3dadd( 79.3395, -21.9433, 16.3014, 0.81 ) }
    dend_7 { pt3dadd( 80.0608, -22.5026, 16.8345, 0.81 ) }
    dend_7 { pt3dadd( 80.6591, -22.9446, 17.2614, 0.37 ) }
    dend_7 { pt3dadd( 81.2841, -23.3673, 17.6923, 0.37 ) }
    dend_7 { pt3dadd( 82.0159, -23.8494, 18.2008, 0.37 ) }
    dend_7 { pt3dadd( 82.7608, -24.3298, 18.747, 0.37 ) }
    dend_7 { pt3dadd( 83.4763, -24.7534, 19.2813, 0.37 ) }
    dend_7 { pt3dadd( 84.5553, -25.3338, 20.104, 0.22 ) }
    dend_7 { pt3dadd( 85.7087, -25.9166, 20.9926, 0.22 ) }
    dend_7 { pt3dadd( 91.6448, -30.7812, 25.9156, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 74.2441, -19.7822, 11.7725, 0.37 ) }
    dend_6 { pt3dadd( 74.1031, -21.2883, 12.1202, 0.37 ) }
    dend_6 { pt3dadd( 74.0867, -22.2201, 12.3845, 0.37 ) }
    dend_6 { pt3dadd( 74.1253, -23.0803, 12.6509, 0.37 ) }
    dend_6 { pt3dadd( 74.2292, -23.932, 12.992, 0.37 ) }
    dend_6 { pt3dadd( 74.3561, -24.6577, 13.3055, 0.37 ) }
    dend_6 { pt3dadd( 74.5431, -25.4962, 13.6943, 0.29 ) }
    dend_6 { pt3dadd( 74.9056, -26.6975, 14.2194, 0.22 ) }
    dend_6 { pt3dadd( 75.3305, -28.0073, 14.7253, 0.22 ) }
    dend_6 { pt3dadd( 75.9079, -29.684, 15.2869, 0.22 ) }
    dend_6 { pt3dadd( 76.1259, -30.3226, 15.4668, 1.18 ) }
    dend_6 { pt3dadd( 76.2772, -30.8748, 15.5693, 1.4 ) }
    dend_6 { pt3dadd( 76.5109, -32.6674, 15.708, 1.4 ) }
    dend_6 { pt3dadd( 76.4666, -34.1881, 15.6817, 0.44 ) }
    dend_6 { pt3dadd( 76.3823, -34.7079, 15.6584, 0.44 ) }
    dend_6 { pt3dadd( 76.1719, -35.496, 15.612, 0.29 ) }
    dend_6 { pt3dadd( 75.734, -36.7632, 15.5977, 0.29 ) }
    dend_6 { pt3dadd( 75.1084, -38.3289, 15.6271, 0.22 ) }
    dend_6 { pt3dadd( 74.5708, -39.4564, 15.7586, 0.22 ) }
    dend_6 { pt3dadd( 74.1948, -40.1156, 15.8555, 1.03 ) }
    dend_6 { pt3dadd( 73.9951, -40.4407, 15.9187, 1.33 ) }
    dend_6 { pt3dadd( 73.7058, -40.8783, 16.033, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -158.221, -380.543, 2.25962, 0.29 ) }
    dend_38 { pt3dadd( -159.23, -379.625, 2.20224, 0.29 ) }
    dend_38 { pt3dadd( -159.454, -379.423, 2.18291, 0.52 ) }
    dend_38 { pt3dadd( -159.797, -379.105, 2.14251, 0.59 ) }
    dend_38 { pt3dadd( -161.736, -377.3, 1.78934, 0.22 ) }
    dend_38 { pt3dadd( -162.278, -376.801, 1.67079, 0.22 ) }
    dend_38 { pt3dadd( -163.023, -376.126, 1.4886, 0.66 ) }
    dend_38 { pt3dadd( -163.416, -375.763, 1.36187, 0.66 ) }
    dend_38 { pt3dadd( -165.075, -374.284, 0.76902, 0.22 ) }
    dend_38 { pt3dadd( -165.758, -373.701, 0.506219, 0.22 ) }
    dend_38 { pt3dadd( -166.384, -373.212, 0.260318, 0.52 ) }
    dend_38 { pt3dadd( -166.83, -372.889, 0.08701, 0.66 ) }
    dend_38 { pt3dadd( -168.057, -372.069, -0.380111, 0.22 ) }
    dend_38 { pt3dadd( -170.492, -370.476, -1.29921, 0.22 ) }
    dend_38 { pt3dadd( -172.066, -369.497, -1.88119, 0.22 ) }
    dend_38 { pt3dadd( -173.531, -368.599, -2.38372, 1.18 ) }
    dend_38 { pt3dadd( -173.942, -368.351, -2.52417, 1.4 ) }
    dend_38 { pt3dadd( -174.575, -367.982, -2.73508, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -158.221, -380.543, 2.25962, 0.22 ) }
    dend_37 { pt3dadd( -159.143, -381.832, 2.31606, 0.22 ) }
    dend_37 { pt3dadd( -159.889, -382.888, 2.42869, 0.22 ) }
    dend_37 { pt3dadd( -160.209, -383.363, 2.49204, 0.44 ) }
    dend_37 { pt3dadd( -160.346, -383.572, 2.52216, 0.44 ) }
    dend_37 { pt3dadd( -161.61, -385.572, 2.81985, 0.22 ) }
    dend_37 { pt3dadd( -162.202, -386.508, 2.95916, 0.44 ) }
    dend_37 { pt3dadd( -162.704, -387.294, 3.08663, 0.22 ) }
    dend_37 { pt3dadd( -163.02, -387.825, 3.18675, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -163.286, -388.284, 3.28238, 0.66 ) }
    dend_37 { pt3dadd( -163.482, -388.637, 3.36469, 0.44 ) }
    dend_37 { pt3dadd( -167.319, -396.822, 5.60303, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_5 = new SectionList()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 3
    dend_42 nseg = 3
    dend_27 nseg = 3
    dend_50 nseg = 3
    dend_44 nseg = 3
    dend_33 nseg = 5
    dend_22 nseg = 9
    dend_21 nseg = 3
    dend_12 nseg = 9
    dend_1 nseg = 3
    dend_45 nseg = 3
    dend_41 nseg = 11
    dend_34 nseg = 3
    dend_29 nseg = 7
    dend_17 nseg = 7
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_47 nseg = 9
    dend_40 nseg = 7
    dend_35 nseg = 11
    dend_32 nseg = 15
    dend_31 nseg = 7
    dend_19 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_ChC_759d7f7dc1_0_0


