// Cell: Cell_477494382
/*
{
  "id" : "Cell_477494382",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "297.374, 442.042, 26.32, 12.0298", "303.389, 442.042, 26.32, 12.0298", "309.404, 442.042, 26.32, 12.0298" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "303.389, 442.042, 26.32, 1.0", "309.23, 455.858, 26.32, 1.0", "315.072, 469.674, 26.32, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "304.585, 435.966, 23.4403, 0.4426", "304.778, 434.879, 22.7553, 0.4274", "304.876, 433.786, 22.0822, 0.3814", "305.661, 433.082, 21.4064, 0.3328", "306.726, 432.721, 20.9602, 0.354", "307.244, 431.908, 20.4556, 0.3304", "307.081, 430.793, 19.9728, 0.311", "307.125, 429.664, 19.6286, 0.3258", "307.156, 428.545, 19.0815, 0.3834", "306.998, 427.445, 18.7937, 0.4462", "306.93, 426.317, 18.9636, 0.4356", "306.796, 425.223, 18.871, 0.4012", "307.129, 424.153, 18.6148, 0.3906", "306.928, 423.081, 18.3896, 0.4332", "306.481, 422.038, 18.2494, 0.4752", "306.057, 420.976, 18.1837, 0.4628", "306.503, 420.017, 18.0144, 0.3542", "306.941, 418.965, 17.8601, 0.305", "307.623, 418.058, 17.6164, 0.3188", "308.422, 417.319, 16.8213, 0.4068" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "302.082, 436.911, 29.4748, 0.2288", "301.303, 436.339, 30.5682, 0.2288", "300.348, 436.842, 30.8624, 0.2288", "300.175, 437.008, 32.2162, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "307.701, 439.124, 25.8847, 0.9706", "308.42, 438.253, 25.7359, 0.5448", "309.227, 437.448, 25.6147, 0.645", "310.132, 436.753, 25.4667, 0.661", "311.004, 436.017, 25.295, 0.661", "311.796, 435.195, 25.1131, 0.5712", "312.81, 434.686, 25.0295, 0.5592", "313.74, 434.026, 25.1318, 0.5112", "314.036, 432.939, 25.3749, 0.5084", "314.449, 431.877, 25.6215, 0.5084", "315.001, 430.877, 25.77, 0.5592", "315.707, 429.979, 25.9196, 0.5848" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "303.387, 447.819, 27.145, 0.3462", "303.373, 448.963, 27.12, 0.4446", "303.295, 450.102, 27.0065, 0.4808", "302.996, 451.203, 26.8489, 0.5072", "302.962, 452.345, 26.7898, 0.5328", "303.102, 453.477, 26.9766, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "315.072, 469.674, 26.32, 1.0", "320.913, 483.49, 26.32, 1.0", "326.754, 497.306, 26.32, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "308.422, 417.319, 16.8213, 0.4068", "307.694, 416.455, 16.4046, 0.4322", "306.752, 415.972, 16.123, 0.4322", "306.099, 415.039, 15.8946, 0.4144", "305.344, 414.184, 15.8414, 0.367", "304.426, 413.509, 15.7613, 0.3326", "304.511, 412.437, 15.7161, 0.279", "303.413, 412.191, 15.6713, 0.2508", "302.594, 411.4, 15.6509, 0.2288", "301.86, 410.527, 15.7632, 0.2288", "301.006, 409.769, 15.7886, 0.2288", "300.555, 408.775, 15.8663, 0.2288", "300.072, 407.746, 16.0138, 0.2288", "299.552, 406.728, 16.1136, 0.2314", "298.987, 405.734, 16.2334, 0.2586", "298.556, 404.709, 16.4111, 0.2924", "298.023, 403.763, 16.5823, 0.2828", "297.328, 403.208, 17.0784, 0.2636", "297.283, 402.109, 17.4837, 0.3308", "296.51, 401.346, 17.5849, 0.4234", "296.019, 400.334, 17.4094, 0.4068", "296.167, 399.217, 16.9806, 0.3214", "295.963, 398.137, 16.6729, 0.2796", "295.168, 397.335, 16.3261, 0.289", "294.229, 396.703, 15.951, 0.305", "293.151, 396.705, 15.6656, 0.3536", "292.43, 395.875, 15.3459, 0.4194", "291.474, 395.263, 15.0547, 0.4178", "291.205, 394.191, 14.8172, 0.4068", "290.376, 393.44, 14.8816, 0.4654", "289.407, 392.835, 14.9671, 0.5568", "288.439, 392.228, 15.0171, 0.601", "287.365, 391.863, 15.0731, 0.6102", "286.257, 391.855, 15.1493, 0.5742", "285.19, 391.447, 15.2483, 0.5124", "284.098, 391.11, 15.2724, 0.483", "283.003, 391.068, 14.925, 0.5862", "282.259, 390.231, 14.6296, 0.6044", "281.216, 389.801, 14.2695, 0.5848", "280.126, 389.82, 13.9345, 0.5702", "279.018, 390.038, 13.5349, 0.5592", "277.945, 390.284, 13.1908, 0.5084", "276.808, 390.226, 13.0507, 0.5252", "275.807, 390.661, 12.7059, 0.5588", "274.67, 390.572, 12.4947, 0.5002", "273.53, 390.487, 12.3885, 0.3968", "272.409, 390.283, 12.2647, 0.356", "271.289, 390.08, 12.2429, 0.356", "270.152, 389.977, 12.3671, 0.3374", "269.069, 390.254, 12.5969, 0.356" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "308.422, 417.319, 16.8213, 0.4068", "308.824, 416.776, 16.5159, 0.438", "309.518, 415.899, 15.9375, 0.4898", "310.43, 415.288, 15.4242, 0.5084", "311.279, 414.541, 15.0912, 0.4608", "311.951, 413.645, 14.5314, 0.4068", "312.664, 412.793, 13.8813, 0.4246", "313.414, 411.96, 13.308, 0.4908", "313.943, 410.973, 12.8757, 0.5308", "313.947, 409.846, 12.5954, 0.5338", "314.575, 408.924, 12.1598, 0.4794", "315.257, 408.024, 11.758, 0.45", "315.517, 406.975, 11.2625, 0.4614", "315.457, 405.843, 10.8944, 0.5036", "315.572, 404.713, 10.8009, 0.5338", "315.884, 403.679, 11.3487, 0.5338", "316.43, 402.688, 11.76, 0.5338" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "300.175, 437.008, 32.2162, 0.2288", "300.224, 436.753, 32.2717, 0.2388", "300.721, 435.747, 32.3296, 0.2326", "301.689, 435.177, 32.0844, 0.2288", "302.509, 434.387, 31.8167, 0.2312", "303.266, 433.537, 31.5672, 0.292", "303.889, 432.668, 31.0864, 0.4282", "304.12, 431.582, 30.4679, 0.5296", "304.375, 430.475, 30.1722, 0.381", "304.991, 429.683, 29.2345, 0.244", "305.531, 428.747, 28.5779, 0.2288", "305.84, 427.658, 28.1971, 0.2468", "306.344, 426.75, 28.1812, 0.3038", "306.872, 425.823, 28.7742, 0.2542", "307.561, 425.065, 28.9892, 0.266", "308.382, 424.388, 29.1242, 0.2932", "308.851, 423.348, 29.1749, 0.305", "309.436, 422.368, 29.153, 0.305", "310.494, 422.083, 29.0973, 0.305", "311.38, 421.39, 29.003, 0.2812", "312.06, 420.478, 28.7398, 0.282", "312.652, 419.505, 28.5082, 0.3106", "313.237, 418.554, 28.1742, 0.356", "314.05, 417.761, 27.9529, 0.3484", "314.674, 416.812, 27.7368, 0.3304", "315.067, 415.754, 27.5503, 0.3556", "315.458, 414.747, 27.4409, 0.437", "316.258, 413.937, 27.2868, 0.5002", "316.562, 412.872, 27.0197, 0.4686", "316.904, 411.79, 26.7721, 0.4376", "317.471, 410.805, 26.5811, 0.453", "318.076, 409.845, 26.2295, 0.5046", "318.797, 409.03, 25.5528, 0.5084", "319.309, 408.048, 25.1169, 0.5084", "320.226, 407.424, 24.7988, 0.521", "321.262, 406.955, 24.5673, 0.5172", "322.006, 406.147, 24.4151, 0.4434", "322.833, 405.399, 24.1776, 0.3528", "323.52, 404.509, 23.7275, 0.3822", "324.313, 403.747, 23.02, 0.483", "324.763, 402.742, 22.2922, 0.483", "325.236, 401.761, 21.4651, 0.4638", "325.51, 400.947, 20.0453, 0.4042", "326.292, 400.155, 19.4055, 0.3766", "327.137, 399.407, 18.9996, 0.3506", "327.79, 398.658, 18.6903, 0.3304", "327.828, 397.588, 18.2039, 0.3594", "328.575, 396.77, 17.8499, 0.4346", "329.53, 396.15, 17.8058, 0.5342", "330.299, 395.309, 17.8562, 0.5848", "330.886, 394.331, 17.7134, 0.5716", "331.615, 393.459, 17.4443, 0.511", "332.173, 392.506, 17.0596, 0.4676", "332.973, 391.829, 16.6993, 0.4384", "334.048, 391.477, 16.3122, 0.3814" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "300.175, 437.008, 32.2162, 0.2288", "299.987, 437.0, 32.9367, 0.2534", "299.368, 436.975, 35.2918, 0.3334", "298.387, 436.832, 35.7722, 0.3926", "297.368, 436.362, 35.4892, 0.5034", "296.258, 436.133, 35.1669, 0.499", "295.42, 435.512, 35.1414, 0.408", "295.167, 434.419, 35.3301, 0.359", "295.0, 433.289, 35.4852, 0.3282", "294.831, 432.16, 35.6345, 0.2974", "294.66, 431.03, 35.7837, 0.2664", "294.491, 429.9, 35.933, 0.2354", "294.463, 428.77, 36.2964, 0.2288", "294.448, 427.634, 36.6215, 0.2288", "294.337, 426.499, 36.8088, 0.2496", "294.25, 425.359, 36.9026, 0.2958", "293.873, 424.292, 37.0423, 0.3856", "293.708, 423.167, 37.0838, 0.4322", "293.558, 422.042, 37.0373, 0.403", "293.335, 420.931, 37.3097, 0.3112", "293.322, 419.797, 37.6642, 0.2566", "292.923, 418.745, 38.1004, 0.2288", "292.825, 417.628, 38.6053, 0.2318", "292.516, 416.542, 39.0127, 0.2616", "292.409, 415.41, 39.312, 0.3124", "292.358, 414.27, 39.4892, 0.3604", "292.107, 413.231, 39.7452, 0.3736", "291.869, 412.367, 40.5563, 0.356", "292.085, 411.434, 41.1816, 0.3666", "291.511, 410.46, 41.5747, 0.3814", "290.815, 409.571, 41.8936, 0.4362", "290.24, 408.598, 42.035, 0.405", "290.044, 407.491, 42.2772, 0.3684", "290.259, 406.392, 42.8064, 0.3304", "290.496, 405.285, 43.2037, 0.2974", "290.788, 404.197, 43.6906, 0.2602", "290.712, 403.096, 44.2442, 0.232", "291.109, 402.18, 45.0545, 0.2288", "291.791, 401.57, 46.0356, 0.2288", "291.917, 400.475, 46.7354, 0.2288", "291.948, 399.348, 47.1842, 0.2288", "291.635, 398.269, 47.3665, 0.2288", "291.606, 397.13, 47.4342, 0.2528", "291.554, 396.001, 47.6812, 0.3428", "291.076, 394.973, 47.8433, 0.441", "290.438, 394.047, 48.0203, 0.4746", "289.816, 393.169, 48.19, 0.4458", "288.917, 392.48, 48.4571, 0.4322", "287.924, 391.996, 48.8088, 0.4322", "286.915, 392.163, 49.84, 0.356" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "315.707, 429.979, 25.9196, 0.5848", "316.387, 429.283, 25.3816, 0.4662", "317.461, 429.102, 24.9153, 0.3624", "318.255, 428.331, 24.4745, 0.356", "319.059, 427.523, 24.3109, 0.3782", "319.825, 426.687, 24.1743, 0.4068", "320.738, 426.063, 23.9754, 0.4068", "321.537, 425.341, 23.5497, 0.3532", "322.639, 425.186, 22.941, 0.3304", "323.225, 424.648, 22.7959, 0.4146", "323.977, 423.93, 22.3362, 0.3972", "324.712, 423.124, 21.9819, 0.3408", "325.443, 422.282, 21.7419, 0.3536", "326.08, 421.337, 21.645, 0.3448", "326.999, 420.687, 21.4587, 0.312", "328.089, 420.381, 21.4799, 0.305", "329.204, 420.231, 21.7995, 0.3082", "330.308, 420.512, 21.9459, 0.3394", "331.099, 420.052, 21.5991, 0.356", "332.175, 419.774, 21.4359, 0.3304", "333.224, 419.358, 21.1803, 0.3524", "334.106, 418.675, 20.6166, 0.4156", "335.025, 418.068, 19.9181, 0.4852", "336.032, 417.562, 19.4364, 0.5744", "337.072, 417.114, 19.034, 0.6356", "338.162, 416.917, 18.7499, 0.5766", "339.211, 416.652, 18.6082, 0.429", "340.065, 415.902, 18.525, 0.3232", "341.126, 415.596, 18.3711, 0.3264", "342.223, 415.759, 18.0462, 0.3336", "343.318, 415.444, 17.801, 0.3496", "344.424, 415.16, 17.8418, 0.36", "345.493, 414.773, 17.8041, 0.3814", "346.555, 414.353, 17.7033, 0.455", "347.555, 413.818, 17.6362, 0.4628", "348.627, 413.678, 17.6579, 0.5338", "349.424, 412.928, 17.6287, 0.54", "350.373, 412.469, 17.6838, 0.5332", "351.114, 411.678, 17.8848, 0.4538", "352.207, 411.395, 18.0012, 0.3928", "353.347, 411.341, 18.0619, 0.4276", "354.232, 410.65, 18.0128, 0.4576", "354.876, 409.728, 18.0671, 0.4118", "355.691, 408.997, 18.1376, 0.3436", "356.507, 408.318, 18.6671, 0.3454", "357.577, 407.95, 18.9927, 0.483" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "315.707, 429.979, 25.9196, 0.5848", "316.307, 428.555, 26.5212, 0.451", "316.352, 427.434, 26.972, 0.4", "316.499, 426.322, 27.3483, 0.3718", "316.736, 425.28, 27.9513, 0.3248", "317.042, 424.21, 28.4192, 0.2704", "317.198, 423.932, 28.6535, 0.24", "318.093, 423.439, 28.6364, 0.2862", "318.5, 422.651, 28.2593, 0.4114", "318.8, 421.574, 27.947, 0.5174", "319.659, 420.828, 27.6888, 0.6128", "320.404, 419.966, 27.4599, 0.6356", "321.081, 419.073, 27.1526, 0.6262", "321.72, 418.169, 27.0267, 0.598", "322.392, 417.281, 27.0538, 0.5528", "323.046, 416.353, 27.1244, 0.4808", "323.542, 415.337, 27.1875, 0.4206", "324.226, 414.445, 27.2302, 0.3616", "325.111, 413.727, 27.2023, 0.3568", "325.617, 412.701, 27.2233, 0.394", "326.221, 411.73, 27.209, 0.4576", "326.964, 410.901, 27.2177, 0.4576", "327.528, 410.003, 27.1058, 0.4406", "327.805, 408.894, 27.065, 0.476", "328.067, 407.793, 27.2332, 0.483", "328.973, 407.103, 27.4411, 0.4788", "329.709, 406.229, 27.504, 0.4256", "330.169, 405.223, 27.2816, 0.358", "330.673, 404.271, 27.1587, 0.3304", "331.371, 403.372, 27.1817, 0.3812", "331.785, 402.316, 27.1367, 0.4388", "331.924, 401.186, 26.8737, 0.47", "332.302, 400.137, 26.674, 0.483", "332.671, 399.076, 26.5083, 0.483", "332.823, 397.943, 26.4658, 0.438", "332.992, 396.823, 26.4234, 0.4024", "332.677, 395.729, 26.6124, 0.3392", "332.422, 394.617, 26.6115, 0.305", "332.21, 393.496, 26.584, 0.344", "331.952, 392.383, 26.6711, 0.446", "331.767, 391.255, 26.7633, 0.4576", "331.577, 390.134, 26.923, 0.3304", "331.967, 389.112, 27.1672, 0.353", "332.446, 388.159, 26.8859, 0.5084" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "303.102, 453.477, 26.9766, 0.6864", "302.556, 454.848, 26.4278, 0.4876", "302.256, 455.949, 26.3952, 0.4366", "301.73, 456.941, 26.3573, 0.4068", "300.975, 457.8, 26.3638, 0.4068", "300.185, 458.625, 26.3658, 0.4068", "299.25, 459.237, 26.1383, 0.3916", "298.149, 459.254, 25.7727, 0.3814", "297.022, 459.289, 25.4504, 0.399", "296.086, 459.854, 25.1577, 0.4252", "295.65, 460.863, 24.8997, 0.488", "295.467, 461.986, 24.6607, 0.5648", "295.177, 463.083, 24.3684, 0.6432", "294.808, 464.154, 23.9884, 0.661", "294.19, 465.1, 23.6661, 0.5766", "293.38, 465.899, 23.4538, 0.448", "292.316, 466.276, 23.2459, 0.3376", "291.195, 466.396, 22.8161, 0.334", "290.248, 466.901, 22.2016, 0.445", "290.013, 467.948, 21.5844, 0.5226", "290.205, 469.056, 21.1164, 0.5446", "290.114, 470.162, 20.6858, 0.5", "289.631, 471.171, 20.1709, 0.483", "289.07, 472.144, 19.645, 0.483", "288.472, 473.09, 19.1376, 0.4948", "287.722, 473.926, 18.6393, 0.5084", "286.976, 474.768, 18.1648, 0.5326", "286.375, 475.719, 17.7174, 0.5842", "285.937, 476.76, 17.3148, 0.6102", "285.741, 477.866, 16.9836, 0.5836", "285.926, 478.972, 16.7831, 0.4892", "286.408, 480.004, 16.7137, 0.4176", "287.071, 480.931, 16.6858, 0.4216", "287.899, 481.712, 16.6061, 0.4934", "288.807, 482.403, 16.4519, 0.5654", "289.751, 483.045, 16.2623, 0.5688", "290.782, 483.513, 16.0237, 0.5264", "291.872, 483.839, 15.7462, 0.4574", "292.847, 484.395, 15.5193, 0.4144", "293.632, 485.216, 15.3887, 0.3708", "294.434, 486.03, 15.3648, 0.3374", "295.391, 486.642, 15.415, 0.3496", "296.198, 487.432, 15.4454, 0.4358", "296.564, 488.494, 15.3572, 0.542", "296.934, 489.573, 15.1953, 0.581", "297.576, 490.509, 15.0006, 0.541", "298.454, 491.227, 14.7375, 0.5114", "299.395, 491.872, 14.5378, 0.5084", "300.348, 492.499, 14.3195, 0.5318", "301.426, 492.865, 14.1319, 0.51", "302.491, 493.277, 13.9852, 0.4608", "303.395, 493.972, 13.8632, 0.4096", "303.853, 495.01, 13.7279, 0.3578", "304.183, 496.104, 13.5597, 0.331", "304.462, 497.211, 13.4276, 0.281", "305.192, 498.088, 13.3451, 0.2546", "305.724, 499.1, 13.2445, 0.2542", "306.134, 500.157, 12.88, 0.2796" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "303.102, 453.477, 26.9766, 0.6864", "303.732, 454.737, 27.3837, 0.3304", "304.138, 455.738, 28.2223, 0.319", "304.303, 456.739, 29.4526, 0.305", "304.341, 457.85, 30.0838, 0.305" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "269.069, 390.254, 12.5969, 0.356", "268.414, 389.38, 12.2707, 0.2654", "267.585, 388.615, 12.1309, 0.2288", "266.559, 388.138, 12.1171, 0.2288", "265.448, 387.889, 12.1094, 0.2288", "264.325, 387.712, 12.1082, 0.2288", "263.262, 387.288, 12.1072, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "269.069, 390.254, 12.5969, 0.356", "267.905, 390.73, 12.7262, 0.4532", "266.785, 390.906, 12.8819, 0.4572", "266.073, 391.656, 12.9472, 0.3354", "264.961, 391.543, 12.9921, 0.2832", "264.061, 391.03, 13.4235, 0.3458", "263.165, 390.596, 13.574, 0.4068", "262.163, 390.796, 13.6254, 0.3814", "261.087, 391.162, 13.6917, 0.3764", "260.006, 390.921, 13.8317, 0.3196", "258.92, 390.597, 14.1111, 0.2542", "257.815, 390.353, 14.2992, 0.256", "256.72, 390.551, 14.1248, 0.2916", "255.596, 390.384, 13.8404, 0.2878", "254.522, 390.015, 13.6661, 0.2596", "253.445, 389.635, 13.489, 0.2542", "252.313, 389.599, 13.4433, 0.3192", "251.19, 389.43, 13.6384, 0.3948", "250.122, 389.142, 14.0773, 0.359", "249.159, 388.574, 14.5734, 0.3304", "248.351, 387.783, 14.9186, 0.377", "247.577, 386.95, 15.075, 0.4322", "246.954, 385.991, 15.0302, 0.4166", "246.447, 384.982, 14.6813, 0.3814", "245.898, 383.989, 14.6255, 0.374", "245.468, 382.945, 14.502, 0.356", "244.764, 382.049, 14.3741, 0.3712", "244.057, 381.152, 14.286, 0.4128", "243.408, 380.212, 14.2129, 0.4148", "242.975, 379.167, 13.9945, 0.3402", "241.927, 378.905, 13.8015, 0.2604", "240.787, 378.844, 13.6753, 0.2306", "239.92, 378.125, 13.5851, 0.2288", "238.794, 377.979, 13.5393, 0.2288", "237.651, 377.967, 13.5311, 0.2288", "236.785, 377.311, 13.5693, 0.2582", "235.682, 377.534, 13.6397, 0.2856", "234.681, 378.076, 13.7274, 0.305", "233.641, 378.544, 13.8113, 0.3146", "232.628, 379.065, 13.9069, 0.39", "231.515, 379.031, 14.3181, 0.479", "230.469, 379.35, 14.5263, 0.356", "229.342, 379.484, 14.3676, 0.3852", "228.21, 379.58, 14.3044, 0.4238", "227.069, 379.658, 14.2872, 0.4528", "225.931, 379.585, 14.2989, 0.4576", "224.88, 379.896, 14.5185, 0.4278", "224.143, 380.763, 14.6586, 0.3934", "223.193, 381.322, 14.8232, 0.346", "222.079, 381.243, 15.047, 0.3152", "221.318, 381.77, 15.3723, 0.3286", "220.465, 382.524, 15.524, 0.356", "219.468, 383.076, 15.6559, 0.3378", "218.393, 383.466, 15.6691, 0.229", "217.452, 384.116, 15.6804, 0.2288", "216.511, 384.767, 15.6918, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "334.048, 391.477, 16.3122, 0.3814", "333.612, 390.5, 16.8932, 0.356", "334.063, 389.468, 16.8671, 0.3566", "334.587, 388.451, 16.7813, 0.3864", "335.167, 387.468, 16.6213, 0.4272", "335.64, 386.433, 16.4298, 0.3796", "335.897, 385.321, 16.3227, 0.3326", "336.024, 384.215, 16.2596, 0.398", "336.51, 383.206, 16.269, 0.4694", "336.472, 382.085, 16.4451, 0.483", "336.256, 380.971, 16.1935, 0.4174", "335.66, 380.001, 16.1442, 0.385", "335.073, 379.037, 15.9622, 0.512", "334.968, 377.903, 16.1851, 0.5338", "335.332, 376.87, 16.2062, 0.5338", "335.92, 375.905, 16.0054, 0.5338", "336.072, 374.773, 15.867, 0.5338", "336.131, 373.637, 15.614, 0.5338", "336.131, 372.505, 15.3012, 0.5254", "336.65, 371.623, 15.0062, 0.5084", "337.589, 371.057, 14.5276, 0.5084", "337.974, 369.986, 14.3651, 0.4972", "338.395, 368.923, 14.3944, 0.466", "339.001, 367.965, 14.3208, 0.4576", "339.753, 367.115, 14.1153, 0.4322", "340.379, 366.164, 13.8724, 0.4322", "340.227, 365.076, 13.5415, 0.4322", "340.507, 363.982, 13.2413, 0.3738", "341.1, 363.005, 13.0795, 0.3208", "341.942, 362.305, 12.6, 0.2796" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "334.048, 391.477, 16.3122, 0.3814", "334.643, 391.454, 16.2583, 0.3784", "335.786, 391.408, 16.1546, 0.3728", "336.927, 391.363, 16.0509, 0.3672", "338.07, 391.319, 15.9472, 0.3616", "339.212, 391.276, 15.837, 0.3566", "340.284, 391.111, 15.3369, 0.371", "341.341, 390.748, 15.0465, 0.356", "342.474, 390.598, 14.9183, 0.356", "343.569, 390.834, 14.8706, 0.378", "344.63, 390.494, 14.8229, 0.3346", "345.735, 390.209, 14.8821, 0.303", "346.768, 389.756, 14.8831, 0.3076", "347.888, 389.727, 14.8209, 0.3304", "348.981, 389.823, 14.5851, 0.3304", "350.017, 389.36, 14.5284, 0.3546", "351.099, 389.039, 14.2263, 0.3686", "352.111, 388.532, 14.0715, 0.356", "353.133, 388.04, 13.8015, 0.355", "354.252, 387.816, 13.7291, 0.3014", "355.362, 387.689, 13.5257, 0.2796", "356.35, 387.122, 13.3969, 0.289", "357.357, 386.617, 13.4452, 0.305", "358.457, 386.31, 13.5894, 0.3264", "359.586, 386.282, 13.58, 0.3852", "360.632, 385.851, 13.6699, 0.399", "361.537, 385.154, 13.7212, 0.3552", "362.371, 384.374, 13.6599, 0.3474", "363.398, 384.004, 13.5262, 0.4072", "364.345, 383.366, 13.439, 0.4308", "365.473, 383.186, 13.2726, 0.3476", "366.608, 383.135, 12.9951, 0.2688", "367.712, 383.328, 12.6846, 0.2398", "368.8, 383.424, 12.4871, 0.2856", "369.773, 382.877, 12.4831, 0.35", "370.848, 382.516, 12.6584, 0.3496", "371.904, 382.086, 12.8461, 0.2952", "373.015, 381.865, 12.9453, 0.2796", "374.102, 381.585, 12.9436, 0.2946", "375.177, 381.204, 12.8075, 0.2882", "376.198, 380.706, 12.7159, 0.26", "377.292, 380.41, 12.6996, 0.2326", "378.313, 379.909, 12.7596, 0.2288", "379.431, 379.67, 12.7456, 0.281", "380.477, 379.21, 12.7247, 0.3608", "381.466, 378.635, 12.6169, 0.427", "382.422, 378.009, 12.5776, 0.3858", "383.4, 377.416, 12.5112, 0.3056", "384.395, 377.497, 12.65, 0.2806", "385.533, 377.534, 12.6423, 0.305", "386.663, 377.409, 12.5102, 0.305", "387.704, 376.966, 12.3804, 0.305", "388.544, 376.192, 12.3687, 0.2796" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "357.577, 407.95, 18.9927, 0.483", "358.815, 407.811, 19.4508, 0.396", "359.574, 406.989, 19.8692, 0.3672", "360.417, 406.281, 20.3103, 0.3382", "361.45, 405.979, 21.0558, 0.3056", "361.419, 404.965, 21.9859, 0.3348", "360.822, 404.441, 23.5419, 0.356", "361.411, 404.411, 25.8121, 0.305", "362.256, 404.72, 27.4017, 0.373", "362.952, 405.501, 28.4679, 0.5008", "363.998, 405.426, 29.4277, 0.4854", "365.077, 405.335, 30.3192, 0.3774", "366.113, 405.451, 30.879, 0.297", "367.214, 405.465, 31.1623, 0.2578", "368.347, 405.331, 31.3141, 0.2542", "368.905, 405.956, 32.3453, 0.3304", "369.826, 405.954, 33.2167, 0.3226", "370.936, 405.781, 33.6669, 0.2646", "371.648, 406.282, 34.7169, 0.2288", "372.541, 405.788, 35.8212, 0.2288", "373.467, 405.265, 36.6716, 0.244", "374.55, 405.1, 37.3584, 0.2868", "375.294, 404.459, 38.0724, 0.3892", "376.101, 404.031, 39.0872, 0.4576", "376.861, 404.604, 40.3816, 0.391", "377.841, 404.865, 41.6287, 0.285", "378.747, 404.585, 43.1318, 0.2288", "379.782, 404.452, 44.2809, 0.238", "380.763, 404.148, 45.3821, 0.2668", "381.707, 404.111, 46.5346, 0.2978", "382.567, 404.141, 48.004, 0.2694", "383.608, 403.839, 48.8947, 0.2422", "384.606, 403.628, 50.1348, 0.2288", "385.481, 403.151, 51.4542, 0.2288", "386.345, 402.582, 52.6492, 0.2288", "387.328, 402.19, 53.7009, 0.2288", "388.097, 401.499, 54.8464, 0.2288", "388.979, 400.971, 56.0431, 0.2288", "390.023, 401.0, 56.9162, 0.2288", "391.107, 401.182, 57.6906, 0.2288", "392.183, 401.363, 58.5315, 0.2288", "393.258, 401.543, 59.3852, 0.2288", "394.194, 401.901, 60.4139, 0.2288", "394.817, 402.663, 61.8408, 0.2288", "394.966, 403.063, 64.143, 0.2288", "394.878, 403.283, 66.8825, 0.2288", "394.79, 403.503, 69.622, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "357.577, 407.95, 18.9927, 0.483", "358.748, 407.949, 18.3653, 0.528", "359.799, 407.836, 18.6489, 0.4656", "360.609, 407.94, 18.3762, 0.39", "361.602, 407.503, 17.7702, 0.3512", "362.701, 407.503, 17.4377, 0.2916", "363.793, 407.559, 17.1056, 0.3008", "364.928, 407.567, 16.9055, 0.382", "366.034, 407.275, 16.8783, 0.4664", "367.143, 407.272, 16.6637, 0.4656", "368.232, 407.087, 16.2893, 0.4068", "369.201, 406.497, 15.9356, 0.4236", "370.13, 405.844, 15.6107, 0.4576", "371.143, 405.448, 15.3288, 0.4458", "372.229, 405.192, 15.0991, 0.3908", "373.306, 404.83, 14.9126, 0.339", "374.308, 405.161, 14.5163, 0.2794", "375.4, 405.374, 14.244, 0.2542", "376.467, 405.694, 13.9198, 0.275", "377.582, 405.562, 13.4883, 0.3304", "378.554, 405.628, 13.0799, 0.3304", "379.25, 406.508, 12.6948, 0.317", "380.14, 406.964, 12.3436, 0.305", "381.2, 407.288, 11.9314, 0.3246", "382.21, 407.607, 10.92, 0.3304" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "332.446, 388.159, 26.8859, 0.5084", "333.113, 388.146, 25.3053, 0.3832", "334.241, 387.97, 25.1764, 0.3948", "335.247, 387.509, 25.113, 0.3134", "335.885, 386.59, 25.1002, 0.2672", "336.237, 385.537, 25.2682, 0.2882", "337.188, 384.931, 25.2247, 0.3304", "337.791, 384.196, 25.3511, 0.3754", "338.539, 383.469, 25.7426, 0.4004", "339.515, 383.738, 25.5265, 0.411", "340.525, 383.439, 25.1168, 0.4322", "341.344, 382.726, 25.014, 0.4322", "342.374, 382.496, 24.6423, 0.364", "343.242, 381.811, 24.474, 0.291", "344.352, 381.541, 24.4546, 0.2542", "345.386, 381.089, 24.701, 0.272", "346.44, 380.997, 25.4579, 0.3304", "347.445, 380.772, 25.9997, 0.3304", "348.255, 380.021, 26.2636, 0.3062", "349.319, 379.612, 26.21, 0.2796", "350.363, 379.15, 26.0804, 0.301", "351.397, 378.662, 26.1686, 0.3552", "352.263, 377.955, 26.5567, 0.3468", "353.324, 377.56, 26.9345, 0.2996", "354.386, 377.167, 27.2254, 0.285", "355.515, 377.011, 27.4122, 0.3178", "356.597, 376.762, 27.5592, 0.3644", "357.604, 376.243, 27.6067, 0.3718", "358.578, 375.714, 27.6015, 0.344", "359.495, 375.055, 27.5352, 0.3026", "360.583, 374.797, 27.4535, 0.2654", "361.402, 374.216, 27.3171, 0.2366", "362.384, 373.789, 27.249, 0.2288", "363.525, 373.747, 27.2272, 0.2288", "364.631, 373.469, 27.1843, 0.2288", "365.742, 373.681, 27.0914, 0.23", "366.884, 373.745, 27.0278, 0.2556", "368.028, 373.75, 27.0085, 0.281", "369.16, 373.892, 27.037, 0.3026", "370.245, 374.218, 27.1088, 0.2716", "371.386, 374.286, 27.271, 0.239", "372.267, 374.888, 27.5025, 0.2288", "373.029, 375.734, 27.7659, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "332.446, 388.159, 26.8859, 0.5084", "333.021, 386.966, 27.1148, 0.2796", "332.944, 385.833, 27.2042, 0.3106", "332.476, 384.812, 27.1352, 0.4206", "331.714, 384.027, 26.9565, 0.4776", "331.517, 382.902, 26.8446, 0.4356", "331.435, 381.763, 26.8788, 0.3708", "331.254, 380.643, 26.9916, 0.3364", "331.866, 379.81, 27.2932, 0.3598", "331.822, 378.868, 27.5727, 0.403", "331.544, 377.952, 27.3655, 0.4322" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "304.341, 457.85, 30.0838, 0.305", "305.053, 458.881, 29.9026, 0.4232", "305.365, 459.971, 29.7237, 0.5256", "305.681, 461.064, 29.6184, 0.589", "306.141, 462.11, 29.5982, 0.5948", "306.631, 463.143, 29.6878, 0.5688", "307.24, 464.104, 29.8592, 0.5264", "307.97, 464.98, 30.0275, 0.5084", "308.629, 465.909, 29.9788, 0.5084", "309.023, 466.966, 29.6526, 0.5704", "309.63, 467.901, 29.1508, 0.6068", "310.11, 468.906, 28.5415, 0.6332", "310.622, 469.907, 28.0266, 0.6356", "311.23, 470.861, 27.624, 0.726", "311.981, 471.714, 27.335, 0.8274", "312.732, 472.573, 27.1225, 0.8614", "313.263, 473.578, 26.9202, 0.7292", "313.516, 474.685, 26.6498, 0.5494", "313.9, 475.755, 26.3987, 0.4412", "314.657, 476.597, 26.1614, 0.4784", "315.544, 477.31, 25.886, 0.5294", "316.414, 478.047, 25.6543, 0.5806", "317.431, 478.558, 25.4692, 0.6082", "318.542, 478.796, 25.1926, 0.6826", "319.524, 479.341, 24.7009, 0.6548", "320.437, 479.993, 24.1707, 0.5182", "321.459, 480.422, 23.6398, 0.34", "322.597, 480.483, 23.3905, 0.2966", "323.736, 480.511, 23.143, 0.3576", "324.866, 480.628, 22.8633, 0.4166", "325.984, 480.849, 22.6302, 0.4122", "327.092, 481.115, 22.4161, 0.371", "328.105, 481.582, 22.1699, 0.356", "328.889, 482.392, 21.8866, 0.367", "329.357, 483.4, 21.4887, 0.3694", "329.513, 484.493, 20.8181, 0.356", "329.854, 485.51, 19.9772, 0.3376", "330.59, 486.314, 19.2562, 0.3492", "331.493, 486.966, 18.6543, 0.3376", "332.494, 487.466, 18.1147, 0.3304", "333.495, 487.99, 17.6986, 0.312", "334.542, 488.435, 17.4662, 0.3238", "335.663, 488.574, 17.2452, 0.37", "336.714, 488.965, 16.9194, 0.4234", "337.808, 488.868, 16.4791, 0.4322", "338.623, 489.653, 16.1846, 0.406", "339.204, 490.617, 15.9323, 0.3814", "339.405, 491.724, 15.7136, 0.3814", "340.001, 492.672, 15.4299, 0.3724", "340.741, 493.506, 14.9075, 0.3718", "341.66, 494.05, 14.2317, 0.3814", "342.743, 494.375, 13.8437, 0.4546", "343.863, 494.54, 13.515, 0.4602", "344.934, 494.172, 13.1456, 0.4844", "345.963, 494.329, 13.0336, 0.4176", "346.861, 495.009, 13.44, 0.305" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "388.544, 376.192, 12.3687, 0.2796", "388.548, 376.066, 12.8333, 0.2748", "388.573, 375.433, 15.166, 0.2512", "388.594, 374.777, 17.4239, 0.2288", "388.542, 373.712, 18.4404, 0.2288", "389.244, 373.018, 18.9308, 0.2288", "390.241, 372.469, 19.2148, 0.2288", "391.119, 371.793, 19.5126, 0.2288", "391.75, 370.847, 19.8395, 0.2288", "391.992, 369.828, 20.2408, 0.2288", "391.778, 368.723, 20.7289, 0.2288", "391.565, 367.616, 21.2171, 0.2288", "391.351, 366.51, 21.7053, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "388.544, 376.192, 12.3687, 0.2796", "389.792, 375.762, 12.6862, 0.2384", "390.868, 375.39, 12.8334, 0.2288", "391.964, 375.081, 12.931, 0.2288", "393.016, 374.653, 12.9004, 0.2288", "394.145, 374.58, 12.9503, 0.2288", "395.25, 374.597, 13.036, 0.2288", "396.358, 374.426, 13.1856, 0.2288", "397.366, 373.948, 13.2594, 0.2288", "398.505, 373.859, 13.3321, 0.2288", "399.65, 373.857, 13.3638, 0.2288", "400.784, 373.787, 13.3758, 0.2288", "401.841, 373.402, 13.3698, 0.2288", "402.981, 373.348, 13.3567, 0.2344", "404.021, 372.968, 13.3232, 0.2608", "404.926, 372.409, 13.278, 0.2886", "406.001, 372.161, 13.1978, 0.288", "407.111, 372.031, 13.1027, 0.2594", "408.255, 372.022, 13.104, 0.2338", "409.398, 372.032, 13.1717, 0.2288", "410.521, 371.882, 13.2296, 0.2288", "411.627, 371.591, 13.2693, 0.2288", "412.733, 371.299, 13.309, 0.2288", "413.84, 371.011, 13.348, 0.2288", "414.961, 370.778, 13.3738, 0.2288", "416.081, 370.546, 13.3994, 0.2288", "417.201, 370.314, 13.4251, 0.2288", "418.321, 370.082, 13.4508, 0.2288", "419.441, 369.849, 13.4765, 0.2288", "420.363, 369.235, 13.5204, 0.2288", "421.2, 368.456, 13.572, 0.2288", "422.038, 367.676, 13.6237, 0.2288", "422.943, 367.028, 13.6665, 0.2288", "424.064, 366.803, 13.6809, 0.2288", "425.185, 366.578, 13.6953, 0.2288", "426.307, 366.352, 13.7097, 0.2288", "427.352, 365.969, 13.7222, 0.2288", "428.221, 365.225, 13.7302, 0.2288", "429.09, 364.482, 13.7383, 0.2288", "429.869, 363.656, 13.7578, 0.2288", "430.544, 362.732, 13.7908, 0.2288", "431.218, 361.807, 13.8239, 0.2288", "431.893, 360.883, 13.8569, 0.2288", "432.567, 359.96, 13.89, 0.2288", "433.335, 359.152, 13.9146, 0.2288", "434.387, 358.705, 13.9133, 0.2288", "435.44, 358.256, 13.9121, 0.2288", "436.492, 357.808, 13.9108, 0.2288", "437.544, 357.36, 13.9096, 0.2288", "438.621, 356.975, 13.8157, 0.2288", "439.699, 356.591, 13.7205, 0.2288", "440.775, 356.206, 13.6253, 0.2288", "441.852, 355.822, 13.53, 0.2288", "442.928, 355.437, 13.4348, 0.2288", "444.006, 355.063, 13.3377, 0.2288", "445.132, 355.254, 13.1445, 0.2288", "446.256, 355.447, 12.9513, 0.2288", "447.274, 355.29, 12.7974, 0.2288", "448.096, 354.495, 12.7156, 0.2288", "448.917, 353.698, 12.6337, 0.2288", "449.738, 352.903, 12.5519, 0.2288", "450.56, 352.107, 12.47, 0.2288", "451.382, 351.312, 12.3882, 0.2288", "452.222, 350.542, 12.3047, 0.2288", "453.221, 349.985, 12.2067, 0.2288", "454.218, 349.427, 12.1088, 0.2288", "455.217, 348.87, 12.0109, 0.2288", "456.231, 348.345, 11.9047, 0.2288", "457.279, 347.889, 11.78, 0.2288", "458.328, 347.434, 11.6552, 0.2288", "459.35, 346.926, 11.592, 0.2288", "460.355, 346.379, 11.574, 0.2288", "461.359, 345.831, 11.556, 0.2288", "462.365, 345.284, 11.538, 0.2288", "463.369, 344.737, 11.52, 0.2288", "464.374, 344.19, 11.502, 0.2288", "465.378, 343.643, 11.484, 0.2288", "466.383, 343.095, 11.466, 0.2288", "467.425, 342.637, 11.4575, 0.2288", "468.516, 342.293, 11.4612, 0.2288", "469.606, 341.948, 11.4648, 0.2288", "470.72, 341.69, 11.4858, 0.2288", "471.837, 341.442, 11.5087, 0.2288", "472.955, 341.193, 11.5317, 0.2288", "474.094, 341.102, 11.5668, 0.2288", "475.235, 341.017, 11.6025, 0.2288", "476.375, 340.931, 11.6382, 0.2288", "477.516, 340.847, 11.6739, 0.2288", "478.656, 340.762, 11.7095, 0.2288", "479.798, 340.677, 11.7452, 0.2288", "480.939, 340.592, 11.7809, 0.2288", "481.893, 341.212, 11.9255, 0.2288", "482.865, 341.721, 12.0685, 0.2288", "483.975, 341.444, 12.1885, 0.2288", "484.939, 340.967, 12.311, 0.2288", "485.552, 340.003, 12.4394, 0.2288", "486.438, 339.356, 12.496, 0.2288", "487.488, 338.902, 12.5094, 0.2288", "488.537, 338.448, 12.5227, 0.2288", "489.587, 337.992, 12.536, 0.2288", "490.638, 337.538, 12.5493, 0.2288", "491.687, 337.084, 12.5627, 0.2288", "492.737, 336.629, 12.576, 0.2288", "493.787, 336.175, 12.5893, 0.2288", "494.826, 336.44, 12.6739, 0.2288", "495.861, 336.925, 12.7801, 0.2288", "496.896, 337.409, 12.8863, 0.2288", "498.003, 337.687, 13.0279, 0.2288", "499.115, 337.948, 13.1723, 0.2288", "500.245, 337.798, 13.2679, 0.2288", "501.376, 337.631, 13.3613, 0.2288", "502.508, 337.464, 13.4548, 0.2288", "503.638, 337.297, 13.5483, 0.2288", "504.769, 337.13, 13.6417, 0.2288", "505.896, 336.937, 13.7262, 0.2288", "507.021, 336.729, 13.8056, 0.2288", "508.145, 336.521, 13.8849, 0.2288", "509.27, 336.314, 13.9643, 0.2288", "510.395, 336.107, 14.0437, 0.2288", "511.519, 335.899, 14.123, 0.2288", "512.644, 335.692, 14.2024, 0.2288", "513.769, 335.86, 14.3533, 0.2288", "514.896, 336.052, 14.5089, 0.2288", "516.022, 336.245, 14.6645, 0.2288", "517.131, 336.174, 14.8026, 0.2288", "518.225, 335.843, 14.9232, 0.2288", "519.319, 335.511, 15.0439, 0.2288", "520.412, 335.179, 15.1645, 0.2288", "521.506, 334.848, 15.2852, 0.2288", "522.6, 334.516, 15.4058, 0.2288", "523.693, 334.184, 15.5265, 0.2288", "524.765, 333.788, 15.6576, 0.2288", "525.832, 333.378, 15.7911, 0.2288", "526.898, 332.967, 15.9246, 0.2288", "527.965, 332.557, 16.0581, 0.2288", "529.031, 332.147, 16.1916, 0.2288", "530.098, 331.737, 16.3251, 0.2288", "531.165, 331.326, 16.4586, 0.2288", "532.231, 330.917, 16.5921, 0.2288", "533.292, 330.494, 16.7586, 0.2288", "534.338, 330.044, 16.9998, 0.2288", "535.385, 329.593, 17.2409, 0.2288", "536.433, 329.144, 17.482, 0.2288", "537.48, 328.693, 17.7231, 0.2288", "538.527, 328.243, 17.9642, 0.2288", "539.611, 327.921, 18.197, 0.2288", "540.739, 327.753, 18.4198, 0.2288", "541.866, 327.583, 18.6427, 0.2288", "542.994, 327.414, 18.8656, 0.2288", "544.122, 327.245, 19.0884, 0.2288", "545.25, 327.075, 19.3113, 0.2288", "546.378, 327.123, 19.4898, 0.2528", "547.507, 327.301, 19.6422, 0.291", "548.635, 327.477, 19.7946, 0.3292", "549.763, 327.654, 19.9471, 0.3674", "550.774, 327.388, 20.6044, 0.2888", "551.694, 326.741, 21.098, 0.2796", "552.794, 326.943, 21.5211, 0.2796" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "331.544, 377.952, 27.3655, 0.4322", "331.842, 377.359, 27.2134, 0.2818", "332.491, 376.427, 27.2404, 0.2838", "333.135, 375.495, 27.5278, 0.2542", "333.978, 374.73, 27.5901, 0.266", "334.714, 373.891, 27.7985, 0.2978", "335.682, 373.371, 27.917, 0.305", "336.691, 372.835, 27.8475, 0.3058", "337.609, 372.16, 27.6038, 0.3632", "338.573, 371.551, 27.4279, 0.4092", "339.391, 370.783, 27.4003, 0.4116", "340.202, 369.978, 27.4226, 0.4068", "341.181, 369.407, 27.5585, 0.3532", "342.207, 369.043, 27.618, 0.3226", "342.997, 368.224, 27.7472, 0.305", "343.878, 367.494, 27.7689, 0.2854", "344.721, 366.725, 27.9402, 0.2558", "345.581, 365.974, 28.1187, 0.2288", "346.489, 365.285, 28.3175, 0.2288", "347.501, 364.76, 28.4679, 0.2328", "348.593, 364.428, 28.5894, 0.285", "349.55, 363.818, 28.7364, 0.3434", "350.342, 363.0, 28.9817, 0.3612", "351.256, 362.453, 29.2093, 0.3088", "352.246, 362.036, 29.4283, 0.2564", "352.885, 361.172, 29.748, 0.2288", "353.837, 360.572, 29.9043, 0.2288", "354.546, 359.677, 30.0765, 0.2288", "355.346, 358.88, 30.2327, 0.2288", "356.302, 358.257, 30.4035, 0.2288", "357.287, 357.684, 30.6561, 0.2288", "358.242, 357.076, 31.0114, 0.2288", "359.071, 356.311, 31.3681, 0.2288", "359.928, 355.575, 31.6848, 0.2288", "360.909, 355.006, 31.9654, 0.2288", "361.949, 354.543, 32.2272, 0.2288", "363.02, 354.154, 32.4786, 0.2288", "364.034, 353.644, 32.7074, 0.2288", "364.909, 352.924, 32.9566, 0.2288", "365.397, 351.923, 33.2046, 0.2288", "365.975, 350.968, 33.6736, 0.2288", "366.66, 350.066, 34.0805, 0.2288", "367.497, 349.316, 34.5593, 0.2288", "368.406, 348.669, 34.9322, 0.2288", "369.027, 347.752, 35.2752, 0.2338", "369.994, 347.152, 35.5407, 0.2594", "370.832, 346.401, 35.7874, 0.2858", "371.483, 345.475, 36.1172, 0.297", "372.355, 344.797, 36.5193, 0.2698", "373.419, 344.408, 36.906, 0.2426", "374.134, 343.695, 37.3629, 0.2288", "374.925, 343.07, 37.9131, 0.2288", "375.989, 342.692, 38.3558, 0.2288", "376.945, 342.096, 38.7086, 0.2288", "377.547, 341.155, 39.0082, 0.2288", "378.471, 340.545, 39.3033, 0.2288", "378.957, 339.529, 39.5581, 0.2288", "379.262, 338.55, 40.5286, 0.2288", "380.101, 338.009, 41.0628, 0.2288", "380.705, 337.177, 41.6976, 0.2288", "381.586, 336.484, 42.1089, 0.2288", "382.057, 335.448, 42.3464, 0.2288", "382.877, 334.666, 42.4684, 0.2288", "383.902, 334.182, 42.5342, 0.2288", "384.693, 333.355, 42.5586, 0.2288", "385.513, 332.557, 42.558, 0.2288", "386.322, 331.749, 42.5572, 0.2288", "387.158, 330.971, 42.5561, 0.2288", "388.123, 330.374, 42.5544, 0.2288", "389.008, 329.822, 42.5522, 0.2288", "389.267, 328.716, 42.5491, 0.2288", "389.334, 327.574, 42.5449, 0.2288", "389.415, 326.434, 42.5387, 0.2288", "389.459, 325.292, 42.5306, 0.2288", "389.532, 324.15, 42.5186, 0.2288", "389.578, 323.009, 42.5015, 0.2288", "389.781, 321.886, 42.4785, 0.2288", "389.99, 320.772, 42.4488, 0.2288", "389.99, 319.628, 42.3984, 0.2288", "389.99, 318.484, 42.32, 0.2288", "389.99, 317.341, 42.2447, 0.2288", "389.99, 316.197, 42.1672, 0.2288", "389.99, 315.054, 42.084, 0.2288", "389.99, 313.91, 41.9902, 0.2288", "389.986, 312.767, 41.8723, 0.2288", "389.812, 311.664, 41.6699, 0.2288", "389.344, 310.628, 41.3854, 0.2288", "389.002, 309.546, 41.146, 0.2288", "388.748, 308.434, 40.9259, 0.2544", "388.617, 307.309, 40.7232, 0.3316", "388.617, 306.173, 40.402, 0.4446", "388.617, 305.041, 40.0089, 0.501", "388.698, 303.909, 39.6878, 0.454", "388.731, 302.775, 39.3722, 0.3952", "388.731, 301.635, 39.102, 0.3442", "388.762, 300.496, 38.8668, 0.3304", "389.005, 299.387, 38.6758, 0.2922", "389.247, 298.272, 38.5417, 0.2604", "389.606, 297.19, 38.4516, 0.235", "390.393, 296.404, 38.3978, 0.2288", "391.05, 295.483, 38.3698, 0.2288", "391.504, 294.435, 38.3608, 0.2288", "391.844, 293.342, 38.36, 0.2288", "392.765, 292.719, 38.36, 0.2288", "393.418, 291.793, 38.36, 0.2288", "393.994, 290.805, 38.36, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "331.544, 377.952, 27.3655, 0.4322", "331.751, 377.617, 26.3332, 0.393", "331.964, 376.706, 25.1961, 0.356", "331.958, 375.643, 24.8406, 0.3814", "331.52, 374.65, 24.948, 0.361", "331.133, 373.601, 25.2172, 0.3276", "331.204, 372.649, 25.4169, 0.2796", "331.114, 371.636, 25.8768, 0.283", "330.676, 370.596, 26.1609, 0.3304", "330.568, 369.469, 26.514, 0.3304", "330.385, 368.343, 26.6973, 0.3096", "330.418, 367.211, 26.7296, 0.2658", "330.651, 366.093, 26.7705, 0.2542", "330.812, 364.962, 26.7982, 0.2714", "330.865, 363.821, 26.8714, 0.2978", "330.838, 362.68, 27.0635, 0.2834", "330.961, 361.554, 27.3691, 0.2468", "330.839, 360.421, 27.4018, 0.2288", "330.737, 359.284, 27.2976, 0.2288", "330.444, 358.181, 27.2091, 0.2288", "330.387, 357.039, 27.0712, 0.2288", "330.363, 355.904, 26.7378, 0.2332", "330.271, 354.773, 26.4265, 0.2596", "330.078, 353.727, 26.0596, 0.293", "329.26, 352.97, 25.4824, 0.3304", "328.776, 351.978, 24.9421, 0.3522", "328.469, 350.888, 24.5558, 0.3328", "327.796, 350.024, 23.8603, 0.3252", "327.251, 349.048, 23.2949, 0.305", "326.864, 347.99, 22.8288, 0.305", "326.509, 346.92, 22.4167, 0.2974", "325.965, 345.928, 22.051, 0.2704", "325.494, 344.925, 21.6163, 0.2422", "325.368, 343.802, 21.2598, 0.2288", "325.26, 342.668, 21.0289, 0.2288", "324.994, 341.562, 20.85, 0.2288", "324.38, 340.632, 20.3969, 0.2288", "323.758, 339.713, 19.9927, 0.2288", "323.07, 338.943, 19.6866, 0.2288", "323.066, 337.803, 19.4545, 0.2426", "323.096, 336.663, 19.2864, 0.2934", "323.003, 335.579, 19.1741, 0.3482", "322.157, 334.89, 19.0683, 0.3524", "321.35, 334.147, 18.9032, 0.2962", "321.361, 333.1, 18.7375, 0.241", "321.352, 331.97, 18.5572, 0.2714", "321.25, 330.832, 18.4095, 0.3232", "320.744, 329.831, 18.2959, 0.3804", "320.892, 328.708, 17.9768, 0.3482", "320.877, 327.568, 17.7763, 0.32", "320.558, 326.507, 17.7281, 0.29", "319.941, 325.543, 17.6322, 0.2586", "319.659, 324.445, 17.5587, 0.2542", "319.236, 323.386, 17.5443, 0.2774", "318.829, 322.316, 17.4668, 0.3302", "318.256, 321.344, 17.1744, 0.4248", "317.881, 320.266, 17.0456, 0.5092", "317.371, 319.258, 16.9694, 0.5478", "316.743, 318.304, 16.8944, 0.5112", "316.631, 317.221, 16.8249, 0.483", "316.141, 316.245, 16.6992, 0.5054", "315.24, 315.563, 16.3894, 0.6176", "314.615, 314.705, 15.9201, 0.6406", "314.329, 313.605, 15.6671, 0.5618", "314.3, 312.511, 15.4284, 0.4578", "314.456, 311.383, 15.2688, 0.451", "314.049, 310.36, 15.2687, 0.5028", "313.914, 309.236, 15.3945, 0.483", "313.863, 308.103, 15.6279, 0.4668", "313.378, 307.084, 15.4686, 0.5324", "313.685, 306.02, 14.84, 0.5084" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "552.794, 326.943, 21.5211, 0.2796", "553.651, 327.451, 21.7981, 0.3482", "554.601, 328.076, 22.0802, 0.2876", "555.617, 328.582, 22.4166, 0.234", "556.644, 329.067, 22.7496, 0.2288", "557.671, 329.55, 23.099, 0.2518", "558.698, 330.033, 23.4611, 0.2772", "559.723, 330.515, 23.8425, 0.3026", "560.84, 330.647, 24.255, 0.2814", "561.971, 330.613, 24.6697, 0.2558", "563.102, 330.57, 25.0837, 0.2304", "564.232, 330.527, 25.4915, 0.2288", "565.277, 330.093, 25.8472, 0.2288", "566.127, 329.336, 26.1185, 0.254", "566.976, 328.575, 26.3492, 0.2792", "567.94, 327.968, 26.591, 0.305" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "552.794, 326.943, 21.5211, 0.2796", "553.035, 326.741, 22.2532, 0.2968", "553.253, 325.745, 22.0096, 0.3132", "553.381, 324.647, 21.289, 0.3234", "553.749, 323.693, 20.5862, 0.3536", "554.672, 323.073, 19.9253, 0.4308", "553.928, 322.243, 19.5989, 0.4576", "553.155, 321.41, 19.2784, 0.4836", "552.438, 320.572, 18.9672, 0.5086", "553.046, 319.604, 18.8774, 0.5132", "553.655, 318.635, 18.7876, 0.518", "554.262, 317.667, 18.6978, 0.5228", "554.871, 316.698, 18.6081, 0.5274", "555.478, 315.73, 18.5183, 0.5322", "556.087, 314.761, 18.4285, 0.5368", "556.694, 313.793, 18.3387, 0.5416", "557.303, 312.826, 18.2489, 0.5462", "557.911, 311.857, 18.1591, 0.551", "558.519, 310.889, 18.0693, 0.5556", "559.089, 309.9, 17.9615, 0.5548", "559.55, 308.855, 17.8017, 0.5378", "560.01, 307.81, 17.6419, 0.5208", "560.47, 306.765, 17.4821, 0.504", "560.931, 305.719, 17.3223, 0.487", "561.391, 304.675, 17.1625, 0.47", "561.869, 303.637, 17.0194, 0.4554", "562.396, 302.624, 16.9211, 0.447", "562.924, 301.609, 16.8227, 0.4386", "563.452, 300.594, 16.7244, 0.4304", "563.979, 299.58, 16.626, 0.422", "564.507, 298.566, 16.5277, 0.4136", "565.034, 297.551, 16.4293, 0.4054", "565.562, 296.537, 16.331, 0.397", "566.089, 295.523, 16.2327, 0.3888", "566.686, 294.591, 16.1198, 0.3768", "567.773, 294.247, 15.9045, 0.3392", "568.861, 293.903, 15.6892, 0.3016", "569.948, 293.558, 15.4738, 0.2642", "571.037, 293.22, 15.2584, 0.2288", "572.149, 292.967, 15.0426, 0.2288", "573.262, 292.714, 14.8269, 0.2288", "574.373, 292.456, 14.6452, 0.2288", "575.485, 292.186, 14.552, 0.2288", "576.595, 291.916, 14.4588, 0.2288", "577.706, 291.646, 14.3656, 0.2288", "578.818, 291.384, 14.2532, 0.2288", "579.94, 291.193, 13.9777, 0.2288", "581.063, 291.0, 13.7021, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "567.94, 327.968, 26.591, 0.305", "568.288, 328.423, 26.9211, 0.4068", "569.228, 329.075, 26.9942, 0.4068", "570.167, 329.726, 27.0673, 0.4068", "571.107, 330.378, 27.1404, 0.4068", "572.047, 331.03, 27.2135, 0.4068", "572.986, 331.681, 27.2866, 0.4068", "574.051, 332.055, 27.552, 0.4068", "575.174, 332.129, 27.7822, 0.389", "576.313, 332.059, 27.9608, 0.36", "577.452, 331.988, 28.1394, 0.3308", "578.266, 332.78, 28.2604, 0.3224", "579.075, 333.589, 28.3805, 0.3144", "579.882, 334.397, 28.5004, 0.3062", "580.872, 334.079, 28.5998, 0.3122", "581.893, 333.565, 28.6955, 0.3208", "582.915, 333.052, 28.791, 0.3292", "583.892, 333.51, 28.8355, 0.3422", "584.862, 334.116, 28.8719, 0.3558", "585.833, 334.721, 28.9086, 0.3692", "586.803, 335.326, 28.9453, 0.3828", "587.775, 335.931, 28.982, 0.3964", "588.752, 336.525, 29.0228, 0.4072", "589.753, 337.08, 29.078, 0.4094", "590.752, 337.634, 29.1332, 0.4114", "591.753, 338.188, 29.1883, 0.4136", "592.753, 338.743, 29.2435, 0.4156", "593.753, 339.298, 29.2984, 0.4176", "594.754, 339.853, 29.3535, 0.4198", "595.754, 340.408, 29.4087, 0.4218", "596.754, 340.962, 29.4638, 0.4238", "597.755, 341.516, 29.519, 0.426", "598.755, 342.071, 29.5742, 0.428", "599.756, 342.626, 29.6293, 0.4302", "600.756, 343.181, 29.6845, 0.4322" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "567.94, 327.968, 26.591, 0.305", "568.939, 327.539, 26.5494, 0.232", "569.977, 327.091, 26.9536, 0.253", "571.039, 326.672, 27.127, 0.2784", "572.103, 326.259, 27.294, 0.3038", "573.24, 326.265, 27.5257, 0.2802", "574.372, 326.389, 27.8107, 0.2546", "575.501, 326.513, 28.1308, 0.229", "576.63, 326.636, 28.4668, 0.2288", "577.76, 326.744, 28.7966, 0.2288", "578.896, 326.817, 29.0839, 0.2288", "580.033, 326.89, 29.3261, 0.2288", "581.173, 326.963, 29.5285, 0.2288", "582.312, 327.038, 29.6982, 0.2542", "583.45, 327.137, 29.8318, 0.2796", "584.584, 327.288, 29.9191, 0.305", "585.718, 327.436, 29.974, 0.2796", "586.744, 326.93, 30.0042, 0.2542", "587.769, 326.423, 30.018, 0.2542", "588.795, 325.918, 30.0216, 0.305", "589.821, 325.411, 30.0216, 0.356" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_13", "dend_4", "dend_0", "dend_26", "dend_25", "dend_15", "dend_14", "dend_10", "dend_5", "dend_3", "dend_1", "dend_28", "dend_27", "dend_23", "dend_16", "dend_12", "dend_11", "dend_9", "dend_6", "dend_2", "dend_22", "dend_17", "dend_8", "dend_7", "dend_19", "dend_18", "dend_21", "dend_20" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_905",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_1", "dend_1", "dend_1", "dend_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.9912658"
  }, {
    "group" : "axon",
    "value" : "2.9912658"
  }, {
    "group" : "dend",
    "value" : "2.9912658"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "113.55828"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "7.483146E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.05610174",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.7519914E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.9813942E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.14292671",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.209996E-7",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0025519715",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.021235362",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "7.9694105E-4",
    "erev" : "-77.77003"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "5.9005234E-4",
    "erev" : "-77.77003"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "3.5492496E-7",
    "erev" : "-77.77003"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.9467876E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.003285403",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_477494382",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_477494382

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_0
create dend_3
public dend_3
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_24, dend_13, dend_4, dend_0, dend_26, dend_25, dend_15, dend_14, dend_10, dend_5, dend_3, dend_1, dend_28, dend_27, dend_23, dend_16, dend_12, dend_11, dend_9, dend_6, dend_2, dend_22, dend_17, dend_8, dend_7, dend_19, dend_18, dend_21, dend_20]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_905, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_905
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_1, dend_1, dend_1, dend_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_477494382
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_24(0), soma_0(0.5)
    connect dend_13(0), soma_0(0.5)
    connect dend_4(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 297.374, 442.042, 26.32, 12.0298 ) }
    soma_0 { pt3dadd( 303.389, 442.042, 26.32, 12.0298 ) }
    soma_0 { pt3dadd( 309.404, 442.042, 26.32, 12.0298 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 303.389, 442.042, 26.32, 1.0 ) }
    axon_0 { pt3dadd( 309.23, 455.858, 26.32, 1.0 ) }
    axon_0 { pt3dadd( 315.072, 469.674, 26.32, 1.0 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 304.585, 435.966, 23.4403, 0.4426 ) }
    dend_24 { pt3dadd( 304.778, 434.879, 22.7553, 0.4274 ) }
    dend_24 { pt3dadd( 304.876, 433.786, 22.0822, 0.3814 ) }
    dend_24 { pt3dadd( 305.661, 433.082, 21.4064, 0.3328 ) }
    dend_24 { pt3dadd( 306.726, 432.721, 20.9602, 0.354 ) }
    dend_24 { pt3dadd( 307.244, 431.908, 20.4556, 0.3304 ) }
    dend_24 { pt3dadd( 307.081, 430.793, 19.9728, 0.311 ) }
    dend_24 { pt3dadd( 307.125, 429.664, 19.6286, 0.3258 ) }
    dend_24 { pt3dadd( 307.156, 428.545, 19.0815, 0.3834 ) }
    dend_24 { pt3dadd( 306.998, 427.445, 18.7937, 0.4462 ) }
    dend_24 { pt3dadd( 306.93, 426.317, 18.9636, 0.4356 ) }
    dend_24 { pt3dadd( 306.796, 425.223, 18.871, 0.4012 ) }
    dend_24 { pt3dadd( 307.129, 424.153, 18.6148, 0.3906 ) }
    dend_24 { pt3dadd( 306.928, 423.081, 18.3896, 0.4332 ) }
    dend_24 { pt3dadd( 306.481, 422.038, 18.2494, 0.4752 ) }
    dend_24 { pt3dadd( 306.057, 420.976, 18.1837, 0.4628 ) }
    dend_24 { pt3dadd( 306.503, 420.017, 18.0144, 0.3542 ) }
    dend_24 { pt3dadd( 306.941, 418.965, 17.8601, 0.305 ) }
    dend_24 { pt3dadd( 307.623, 418.058, 17.6164, 0.3188 ) }
    dend_24 { pt3dadd( 308.422, 417.319, 16.8213, 0.4068 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 26/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 302.082, 436.911, 29.4748, 0.2288 ) }
    dend_13 { pt3dadd( 301.303, 436.339, 30.5682, 0.2288 ) }
    dend_13 { pt3dadd( 300.348, 436.842, 30.8624, 0.2288 ) }
    dend_13 { pt3dadd( 300.175, 437.008, 32.2162, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 30/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 307.701, 439.124, 25.8847, 0.9706 ) }
    dend_4 { pt3dadd( 308.42, 438.253, 25.7359, 0.5448 ) }
    dend_4 { pt3dadd( 309.227, 437.448, 25.6147, 0.645 ) }
    dend_4 { pt3dadd( 310.132, 436.753, 25.4667, 0.661 ) }
    dend_4 { pt3dadd( 311.004, 436.017, 25.295, 0.661 ) }
    dend_4 { pt3dadd( 311.796, 435.195, 25.1131, 0.5712 ) }
    dend_4 { pt3dadd( 312.81, 434.686, 25.0295, 0.5592 ) }
    dend_4 { pt3dadd( 313.74, 434.026, 25.1318, 0.5112 ) }
    dend_4 { pt3dadd( 314.036, 432.939, 25.3749, 0.5084 ) }
    dend_4 { pt3dadd( 314.449, 431.877, 25.6215, 0.5084 ) }
    dend_4 { pt3dadd( 315.001, 430.877, 25.77, 0.5592 ) }
    dend_4 { pt3dadd( 315.707, 429.979, 25.9196, 0.5848 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 303.387, 447.819, 27.145, 0.3462 ) }
    dend_0 { pt3dadd( 303.373, 448.963, 27.12, 0.4446 ) }
    dend_0 { pt3dadd( 303.295, 450.102, 27.0065, 0.4808 ) }
    dend_0 { pt3dadd( 302.996, 451.203, 26.8489, 0.5072 ) }
    dend_0 { pt3dadd( 302.962, 452.345, 26.7898, 0.5328 ) }
    dend_0 { pt3dadd( 303.102, 453.477, 26.9766, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 48/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 315.072, 469.674, 26.32, 1.0 ) }
    axon_1 { pt3dadd( 320.913, 483.49, 26.32, 1.0 ) }
    axon_1 { pt3dadd( 326.754, 497.306, 26.32, 1.0 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 51/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 308.422, 417.319, 16.8213, 0.4068 ) }
    dend_26 { pt3dadd( 307.694, 416.455, 16.4046, 0.4322 ) }
    dend_26 { pt3dadd( 306.752, 415.972, 16.123, 0.4322 ) }
    dend_26 { pt3dadd( 306.099, 415.039, 15.8946, 0.4144 ) }
    dend_26 { pt3dadd( 305.344, 414.184, 15.8414, 0.367 ) }
    dend_26 { pt3dadd( 304.426, 413.509, 15.7613, 0.3326 ) }
    dend_26 { pt3dadd( 304.511, 412.437, 15.7161, 0.279 ) }
    dend_26 { pt3dadd( 303.413, 412.191, 15.6713, 0.2508 ) }
    dend_26 { pt3dadd( 302.594, 411.4, 15.6509, 0.2288 ) }
    dend_26 { pt3dadd( 301.86, 410.527, 15.7632, 0.2288 ) }
    dend_26 { pt3dadd( 301.006, 409.769, 15.7886, 0.2288 ) }
    dend_26 { pt3dadd( 300.555, 408.775, 15.8663, 0.2288 ) }
    dend_26 { pt3dadd( 300.072, 407.746, 16.0138, 0.2288 ) }
    dend_26 { pt3dadd( 299.552, 406.728, 16.1136, 0.2314 ) }
    dend_26 { pt3dadd( 298.987, 405.734, 16.2334, 0.2586 ) }
    dend_26 { pt3dadd( 298.556, 404.709, 16.4111, 0.2924 ) }
    dend_26 { pt3dadd( 298.023, 403.763, 16.5823, 0.2828 ) }
    dend_26 { pt3dadd( 297.328, 403.208, 17.0784, 0.2636 ) }
    dend_26 { pt3dadd( 297.283, 402.109, 17.4837, 0.3308 ) }
    dend_26 { pt3dadd( 296.51, 401.346, 17.5849, 0.4234 ) }
    dend_26 { pt3dadd( 296.019, 400.334, 17.4094, 0.4068 ) }
    dend_26 { pt3dadd( 296.167, 399.217, 16.9806, 0.3214 ) }
    dend_26 { pt3dadd( 295.963, 398.137, 16.6729, 0.2796 ) }
    dend_26 { pt3dadd( 295.168, 397.335, 16.3261, 0.289 ) }
    dend_26 { pt3dadd( 294.229, 396.703, 15.951, 0.305 ) }
    dend_26 { pt3dadd( 293.151, 396.705, 15.6656, 0.3536 ) }
    dend_26 { pt3dadd( 292.43, 395.875, 15.3459, 0.4194 ) }
    dend_26 { pt3dadd( 291.474, 395.263, 15.0547, 0.4178 ) }
    dend_26 { pt3dadd( 291.205, 394.191, 14.8172, 0.4068 ) }
    dend_26 { pt3dadd( 290.376, 393.44, 14.8816, 0.4654 ) }
    dend_26 { pt3dadd( 289.407, 392.835, 14.9671, 0.5568 ) }
    dend_26 { pt3dadd( 288.439, 392.228, 15.0171, 0.601 ) }
    dend_26 { pt3dadd( 287.365, 391.863, 15.0731, 0.6102 ) }
    dend_26 { pt3dadd( 286.257, 391.855, 15.1493, 0.5742 ) }
    dend_26 { pt3dadd( 285.19, 391.447, 15.2483, 0.5124 ) }
    dend_26 { pt3dadd( 284.098, 391.11, 15.2724, 0.483 ) }
    dend_26 { pt3dadd( 283.003, 391.068, 14.925, 0.5862 ) }
    dend_26 { pt3dadd( 282.259, 390.231, 14.6296, 0.6044 ) }
    dend_26 { pt3dadd( 281.216, 389.801, 14.2695, 0.5848 ) }
    dend_26 { pt3dadd( 280.126, 389.82, 13.9345, 0.5702 ) }
    dend_26 { pt3dadd( 279.018, 390.038, 13.5349, 0.5592 ) }
    dend_26 { pt3dadd( 277.945, 390.284, 13.1908, 0.5084 ) }
    dend_26 { pt3dadd( 276.808, 390.226, 13.0507, 0.5252 ) }
    dend_26 { pt3dadd( 275.807, 390.661, 12.7059, 0.5588 ) }
    dend_26 { pt3dadd( 274.67, 390.572, 12.4947, 0.5002 ) }
    dend_26 { pt3dadd( 273.53, 390.487, 12.3885, 0.3968 ) }
    dend_26 { pt3dadd( 272.409, 390.283, 12.2647, 0.356 ) }
    dend_26 { pt3dadd( 271.289, 390.08, 12.2429, 0.356 ) }
    dend_26 { pt3dadd( 270.152, 389.977, 12.3671, 0.3374 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( 269.069, 390.254, 12.5969, 0.356 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 1/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 308.422, 417.319, 16.8213, 0.4068 ) }
    dend_25 { pt3dadd( 308.824, 416.776, 16.5159, 0.438 ) }
    dend_25 { pt3dadd( 309.518, 415.899, 15.9375, 0.4898 ) }
    dend_25 { pt3dadd( 310.43, 415.288, 15.4242, 0.5084 ) }
    dend_25 { pt3dadd( 311.279, 414.541, 15.0912, 0.4608 ) }
    dend_25 { pt3dadd( 311.951, 413.645, 14.5314, 0.4068 ) }
    dend_25 { pt3dadd( 312.664, 412.793, 13.8813, 0.4246 ) }
    dend_25 { pt3dadd( 313.414, 411.96, 13.308, 0.4908 ) }
    dend_25 { pt3dadd( 313.943, 410.973, 12.8757, 0.5308 ) }
    dend_25 { pt3dadd( 313.947, 409.846, 12.5954, 0.5338 ) }
    dend_25 { pt3dadd( 314.575, 408.924, 12.1598, 0.4794 ) }
    dend_25 { pt3dadd( 315.257, 408.024, 11.758, 0.45 ) }
    dend_25 { pt3dadd( 315.517, 406.975, 11.2625, 0.4614 ) }
    dend_25 { pt3dadd( 315.457, 405.843, 10.8944, 0.5036 ) }
    dend_25 { pt3dadd( 315.572, 404.713, 10.8009, 0.5338 ) }
    dend_25 { pt3dadd( 315.884, 403.679, 11.3487, 0.5338 ) }
    dend_25 { pt3dadd( 316.43, 402.688, 11.76, 0.5338 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 18/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 300.175, 437.008, 32.2162, 0.2288 ) }
    dend_15 { pt3dadd( 300.224, 436.753, 32.2717, 0.2388 ) }
    dend_15 { pt3dadd( 300.721, 435.747, 32.3296, 0.2326 ) }
    dend_15 { pt3dadd( 301.689, 435.177, 32.0844, 0.2288 ) }
    dend_15 { pt3dadd( 302.509, 434.387, 31.8167, 0.2312 ) }
    dend_15 { pt3dadd( 303.266, 433.537, 31.5672, 0.292 ) }
    dend_15 { pt3dadd( 303.889, 432.668, 31.0864, 0.4282 ) }
    dend_15 { pt3dadd( 304.12, 431.582, 30.4679, 0.5296 ) }
    dend_15 { pt3dadd( 304.375, 430.475, 30.1722, 0.381 ) }
    dend_15 { pt3dadd( 304.991, 429.683, 29.2345, 0.244 ) }
    dend_15 { pt3dadd( 305.531, 428.747, 28.5779, 0.2288 ) }
    dend_15 { pt3dadd( 305.84, 427.658, 28.1971, 0.2468 ) }
    dend_15 { pt3dadd( 306.344, 426.75, 28.1812, 0.3038 ) }
    dend_15 { pt3dadd( 306.872, 425.823, 28.7742, 0.2542 ) }
    dend_15 { pt3dadd( 307.561, 425.065, 28.9892, 0.266 ) }
    dend_15 { pt3dadd( 308.382, 424.388, 29.1242, 0.2932 ) }
    dend_15 { pt3dadd( 308.851, 423.348, 29.1749, 0.305 ) }
    dend_15 { pt3dadd( 309.436, 422.368, 29.153, 0.305 ) }
    dend_15 { pt3dadd( 310.494, 422.083, 29.0973, 0.305 ) }
    dend_15 { pt3dadd( 311.38, 421.39, 29.003, 0.2812 ) }
    dend_15 { pt3dadd( 312.06, 420.478, 28.7398, 0.282 ) }
    dend_15 { pt3dadd( 312.652, 419.505, 28.5082, 0.3106 ) }
    dend_15 { pt3dadd( 313.237, 418.554, 28.1742, 0.356 ) }
    dend_15 { pt3dadd( 314.05, 417.761, 27.9529, 0.3484 ) }
    dend_15 { pt3dadd( 314.674, 416.812, 27.7368, 0.3304 ) }
    dend_15 { pt3dadd( 315.067, 415.754, 27.5503, 0.3556 ) }
    dend_15 { pt3dadd( 315.458, 414.747, 27.4409, 0.437 ) }
    dend_15 { pt3dadd( 316.258, 413.937, 27.2868, 0.5002 ) }
    dend_15 { pt3dadd( 316.562, 412.872, 27.0197, 0.4686 ) }
    dend_15 { pt3dadd( 316.904, 411.79, 26.7721, 0.4376 ) }
    dend_15 { pt3dadd( 317.471, 410.805, 26.5811, 0.453 ) }
    dend_15 { pt3dadd( 318.076, 409.845, 26.2295, 0.5046 ) }
    dend_15 { pt3dadd( 318.797, 409.03, 25.5528, 0.5084 ) }
    dend_15 { pt3dadd( 319.309, 408.048, 25.1169, 0.5084 ) }
    dend_15 { pt3dadd( 320.226, 407.424, 24.7988, 0.521 ) }
    dend_15 { pt3dadd( 321.262, 406.955, 24.5673, 0.5172 ) }
    dend_15 { pt3dadd( 322.006, 406.147, 24.4151, 0.4434 ) }
    dend_15 { pt3dadd( 322.833, 405.399, 24.1776, 0.3528 ) }
    dend_15 { pt3dadd( 323.52, 404.509, 23.7275, 0.3822 ) }
    dend_15 { pt3dadd( 324.313, 403.747, 23.02, 0.483 ) }
    dend_15 { pt3dadd( 324.763, 402.742, 22.2922, 0.483 ) }
    dend_15 { pt3dadd( 325.236, 401.761, 21.4651, 0.4638 ) }
    dend_15 { pt3dadd( 325.51, 400.947, 20.0453, 0.4042 ) }
    dend_15 { pt3dadd( 326.292, 400.155, 19.4055, 0.3766 ) }
    dend_15 { pt3dadd( 327.137, 399.407, 18.9996, 0.3506 ) }
    dend_15 { pt3dadd( 327.79, 398.658, 18.6903, 0.3304 ) }
    dend_15 { pt3dadd( 327.828, 397.588, 18.2039, 0.3594 ) }
    dend_15 { pt3dadd( 328.575, 396.77, 17.8499, 0.4346 ) }
    dend_15 { pt3dadd( 329.53, 396.15, 17.8058, 0.5342 ) }
    dend_15 { pt3dadd( 330.299, 395.309, 17.8562, 0.5848 ) }
    dend_15 { pt3dadd( 330.886, 394.331, 17.7134, 0.5716 ) }
    dend_15 { pt3dadd( 331.615, 393.459, 17.4443, 0.511 ) }
    dend_15 { pt3dadd( 332.173, 392.506, 17.0596, 0.4676 ) }
    dend_15 { pt3dadd( 332.973, 391.829, 16.6993, 0.4384 ) }
    dend_15 { pt3dadd( 334.048, 391.477, 16.3122, 0.3814 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 300.175, 437.008, 32.2162, 0.2288 ) }
    dend_14 { pt3dadd( 299.987, 437.0, 32.9367, 0.2534 ) }
    dend_14 { pt3dadd( 299.368, 436.975, 35.2918, 0.3334 ) }
    dend_14 { pt3dadd( 298.387, 436.832, 35.7722, 0.3926 ) }
    dend_14 { pt3dadd( 297.368, 436.362, 35.4892, 0.5034 ) }
    dend_14 { pt3dadd( 296.258, 436.133, 35.1669, 0.499 ) }
    dend_14 { pt3dadd( 295.42, 435.512, 35.1414, 0.408 ) }
    dend_14 { pt3dadd( 295.167, 434.419, 35.3301, 0.359 ) }
    dend_14 { pt3dadd( 295.0, 433.289, 35.4852, 0.3282 ) }
    dend_14 { pt3dadd( 294.831, 432.16, 35.6345, 0.2974 ) }
    dend_14 { pt3dadd( 294.66, 431.03, 35.7837, 0.2664 ) }
    dend_14 { pt3dadd( 294.491, 429.9, 35.933, 0.2354 ) }
    dend_14 { pt3dadd( 294.463, 428.77, 36.2964, 0.2288 ) }
    dend_14 { pt3dadd( 294.448, 427.634, 36.6215, 0.2288 ) }
    dend_14 { pt3dadd( 294.337, 426.499, 36.8088, 0.2496 ) }
    dend_14 { pt3dadd( 294.25, 425.359, 36.9026, 0.2958 ) }
    dend_14 { pt3dadd( 293.873, 424.292, 37.0423, 0.3856 ) }
    dend_14 { pt3dadd( 293.708, 423.167, 37.0838, 0.4322 ) }
    dend_14 { pt3dadd( 293.558, 422.042, 37.0373, 0.403 ) }
    dend_14 { pt3dadd( 293.335, 420.931, 37.3097, 0.3112 ) }
    dend_14 { pt3dadd( 293.322, 419.797, 37.6642, 0.2566 ) }
    dend_14 { pt3dadd( 292.923, 418.745, 38.1004, 0.2288 ) }
    dend_14 { pt3dadd( 292.825, 417.628, 38.6053, 0.2318 ) }
    dend_14 { pt3dadd( 292.516, 416.542, 39.0127, 0.2616 ) }
    dend_14 { pt3dadd( 292.409, 415.41, 39.312, 0.3124 ) }
    dend_14 { pt3dadd( 292.358, 414.27, 39.4892, 0.3604 ) }
    dend_14 { pt3dadd( 292.107, 413.231, 39.7452, 0.3736 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_14 { pt3dadd( 291.869, 412.367, 40.5563, 0.356 ) }
    dend_14 { pt3dadd( 292.085, 411.434, 41.1816, 0.3666 ) }
    dend_14 { pt3dadd( 291.511, 410.46, 41.5747, 0.3814 ) }
    dend_14 { pt3dadd( 290.815, 409.571, 41.8936, 0.4362 ) }
    dend_14 { pt3dadd( 290.24, 408.598, 42.035, 0.405 ) }
    dend_14 { pt3dadd( 290.044, 407.491, 42.2772, 0.3684 ) }
    dend_14 { pt3dadd( 290.259, 406.392, 42.8064, 0.3304 ) }
    dend_14 { pt3dadd( 290.496, 405.285, 43.2037, 0.2974 ) }
    dend_14 { pt3dadd( 290.788, 404.197, 43.6906, 0.2602 ) }
    dend_14 { pt3dadd( 290.712, 403.096, 44.2442, 0.232 ) }
    dend_14 { pt3dadd( 291.109, 402.18, 45.0545, 0.2288 ) }
    dend_14 { pt3dadd( 291.791, 401.57, 46.0356, 0.2288 ) }
    dend_14 { pt3dadd( 291.917, 400.475, 46.7354, 0.2288 ) }
    dend_14 { pt3dadd( 291.948, 399.348, 47.1842, 0.2288 ) }
    dend_14 { pt3dadd( 291.635, 398.269, 47.3665, 0.2288 ) }
    dend_14 { pt3dadd( 291.606, 397.13, 47.4342, 0.2528 ) }
    dend_14 { pt3dadd( 291.554, 396.001, 47.6812, 0.3428 ) }
    dend_14 { pt3dadd( 291.076, 394.973, 47.8433, 0.441 ) }
    dend_14 { pt3dadd( 290.438, 394.047, 48.0203, 0.4746 ) }
    dend_14 { pt3dadd( 289.816, 393.169, 48.19, 0.4458 ) }
    dend_14 { pt3dadd( 288.917, 392.48, 48.4571, 0.4322 ) }
    dend_14 { pt3dadd( 287.924, 391.996, 48.8088, 0.4322 ) }
    dend_14 { pt3dadd( 286.915, 392.163, 49.84, 0.356 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 23/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 315.707, 429.979, 25.9196, 0.5848 ) }
    dend_10 { pt3dadd( 316.387, 429.283, 25.3816, 0.4662 ) }
    dend_10 { pt3dadd( 317.461, 429.102, 24.9153, 0.3624 ) }
    dend_10 { pt3dadd( 318.255, 428.331, 24.4745, 0.356 ) }
    dend_10 { pt3dadd( 319.059, 427.523, 24.3109, 0.3782 ) }
    dend_10 { pt3dadd( 319.825, 426.687, 24.1743, 0.4068 ) }
    dend_10 { pt3dadd( 320.738, 426.063, 23.9754, 0.4068 ) }
    dend_10 { pt3dadd( 321.537, 425.341, 23.5497, 0.3532 ) }
    dend_10 { pt3dadd( 322.639, 425.186, 22.941, 0.3304 ) }
    dend_10 { pt3dadd( 323.225, 424.648, 22.7959, 0.4146 ) }
    dend_10 { pt3dadd( 323.977, 423.93, 22.3362, 0.3972 ) }
    dend_10 { pt3dadd( 324.712, 423.124, 21.9819, 0.3408 ) }
    dend_10 { pt3dadd( 325.443, 422.282, 21.7419, 0.3536 ) }
    dend_10 { pt3dadd( 326.08, 421.337, 21.645, 0.3448 ) }
    dend_10 { pt3dadd( 326.999, 420.687, 21.4587, 0.312 ) }
    dend_10 { pt3dadd( 328.089, 420.381, 21.4799, 0.305 ) }
    dend_10 { pt3dadd( 329.204, 420.231, 21.7995, 0.3082 ) }
    dend_10 { pt3dadd( 330.308, 420.512, 21.9459, 0.3394 ) }
    dend_10 { pt3dadd( 331.099, 420.052, 21.5991, 0.356 ) }
    dend_10 { pt3dadd( 332.175, 419.774, 21.4359, 0.3304 ) }
    dend_10 { pt3dadd( 333.224, 419.358, 21.1803, 0.3524 ) }
    dend_10 { pt3dadd( 334.106, 418.675, 20.6166, 0.4156 ) }
    dend_10 { pt3dadd( 335.025, 418.068, 19.9181, 0.4852 ) }
    dend_10 { pt3dadd( 336.032, 417.562, 19.4364, 0.5744 ) }
    dend_10 { pt3dadd( 337.072, 417.114, 19.034, 0.6356 ) }
    dend_10 { pt3dadd( 338.162, 416.917, 18.7499, 0.5766 ) }
    dend_10 { pt3dadd( 339.211, 416.652, 18.6082, 0.429 ) }
    dend_10 { pt3dadd( 340.065, 415.902, 18.525, 0.3232 ) }
    dend_10 { pt3dadd( 341.126, 415.596, 18.3711, 0.3264 ) }
    dend_10 { pt3dadd( 342.223, 415.759, 18.0462, 0.3336 ) }
    dend_10 { pt3dadd( 343.318, 415.444, 17.801, 0.3496 ) }
    dend_10 { pt3dadd( 344.424, 415.16, 17.8418, 0.36 ) }
    dend_10 { pt3dadd( 345.493, 414.773, 17.8041, 0.3814 ) }
    dend_10 { pt3dadd( 346.555, 414.353, 17.7033, 0.455 ) }
    dend_10 { pt3dadd( 347.555, 413.818, 17.6362, 0.4628 ) }
    dend_10 { pt3dadd( 348.627, 413.678, 17.6579, 0.5338 ) }
    dend_10 { pt3dadd( 349.424, 412.928, 17.6287, 0.54 ) }
    dend_10 { pt3dadd( 350.373, 412.469, 17.6838, 0.5332 ) }
    dend_10 { pt3dadd( 351.114, 411.678, 17.8848, 0.4538 ) }
    dend_10 { pt3dadd( 352.207, 411.395, 18.0012, 0.3928 ) }
    dend_10 { pt3dadd( 353.347, 411.341, 18.0619, 0.4276 ) }
    dend_10 { pt3dadd( 354.232, 410.65, 18.0128, 0.4576 ) }
    dend_10 { pt3dadd( 354.876, 409.728, 18.0671, 0.4118 ) }
    dend_10 { pt3dadd( 355.691, 408.997, 18.1376, 0.3436 ) }
    dend_10 { pt3dadd( 356.507, 408.318, 18.6671, 0.3454 ) }
    dend_10 { pt3dadd( 357.577, 407.95, 18.9927, 0.483 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 69/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 315.707, 429.979, 25.9196, 0.5848 ) }
    dend_5 { pt3dadd( 316.307, 428.555, 26.5212, 0.451 ) }
    dend_5 { pt3dadd( 316.352, 427.434, 26.972, 0.4 ) }
    dend_5 { pt3dadd( 316.499, 426.322, 27.3483, 0.3718 ) }
    dend_5 { pt3dadd( 316.736, 425.28, 27.9513, 0.3248 ) }
    dend_5 { pt3dadd( 317.042, 424.21, 28.4192, 0.2704 ) }
    dend_5 { pt3dadd( 317.198, 423.932, 28.6535, 0.24 ) }
    dend_5 { pt3dadd( 318.093, 423.439, 28.6364, 0.2862 ) }
    dend_5 { pt3dadd( 318.5, 422.651, 28.2593, 0.4114 ) }
    dend_5 { pt3dadd( 318.8, 421.574, 27.947, 0.5174 ) }
    dend_5 { pt3dadd( 319.659, 420.828, 27.6888, 0.6128 ) }
    dend_5 { pt3dadd( 320.404, 419.966, 27.4599, 0.6356 ) }
    dend_5 { pt3dadd( 321.081, 419.073, 27.1526, 0.6262 ) }
    dend_5 { pt3dadd( 321.72, 418.169, 27.0267, 0.598 ) }
    dend_5 { pt3dadd( 322.392, 417.281, 27.0538, 0.5528 ) }
    dend_5 { pt3dadd( 323.046, 416.353, 27.1244, 0.4808 ) }
    dend_5 { pt3dadd( 323.542, 415.337, 27.1875, 0.4206 ) }
    dend_5 { pt3dadd( 324.226, 414.445, 27.2302, 0.3616 ) }
    dend_5 { pt3dadd( 325.111, 413.727, 27.2023, 0.3568 ) }
    dend_5 { pt3dadd( 325.617, 412.701, 27.2233, 0.394 ) }
    dend_5 { pt3dadd( 326.221, 411.73, 27.209, 0.4576 ) }
    dend_5 { pt3dadd( 326.964, 410.901, 27.2177, 0.4576 ) }
    dend_5 { pt3dadd( 327.528, 410.003, 27.1058, 0.4406 ) }
    dend_5 { pt3dadd( 327.805, 408.894, 27.065, 0.476 ) }
    dend_5 { pt3dadd( 328.067, 407.793, 27.2332, 0.483 ) }
    dend_5 { pt3dadd( 328.973, 407.103, 27.4411, 0.4788 ) }
    dend_5 { pt3dadd( 329.709, 406.229, 27.504, 0.4256 ) }
    dend_5 { pt3dadd( 330.169, 405.223, 27.2816, 0.358 ) }
    dend_5 { pt3dadd( 330.673, 404.271, 27.1587, 0.3304 ) }
    dend_5 { pt3dadd( 331.371, 403.372, 27.1817, 0.3812 ) }
    dend_5 { pt3dadd( 331.785, 402.316, 27.1367, 0.4388 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( 331.924, 401.186, 26.8737, 0.47 ) }
    dend_5 { pt3dadd( 332.302, 400.137, 26.674, 0.483 ) }
    dend_5 { pt3dadd( 332.671, 399.076, 26.5083, 0.483 ) }
    dend_5 { pt3dadd( 332.823, 397.943, 26.4658, 0.438 ) }
    dend_5 { pt3dadd( 332.992, 396.823, 26.4234, 0.4024 ) }
    dend_5 { pt3dadd( 332.677, 395.729, 26.6124, 0.3392 ) }
    dend_5 { pt3dadd( 332.422, 394.617, 26.6115, 0.305 ) }
    dend_5 { pt3dadd( 332.21, 393.496, 26.584, 0.344 ) }
    dend_5 { pt3dadd( 331.952, 392.383, 26.6711, 0.446 ) }
    dend_5 { pt3dadd( 331.767, 391.255, 26.7633, 0.4576 ) }
    dend_5 { pt3dadd( 331.577, 390.134, 26.923, 0.3304 ) }
    dend_5 { pt3dadd( 331.967, 389.112, 27.1672, 0.353 ) }
    dend_5 { pt3dadd( 332.446, 388.159, 26.8859, 0.5084 ) }
    // Section: dend_3, id: dend_3, parent: dend_0 (entry count 13/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 303.102, 453.477, 26.9766, 0.6864 ) }
    dend_3 { pt3dadd( 302.556, 454.848, 26.4278, 0.4876 ) }
    dend_3 { pt3dadd( 302.256, 455.949, 26.3952, 0.4366 ) }
    dend_3 { pt3dadd( 301.73, 456.941, 26.3573, 0.4068 ) }
    dend_3 { pt3dadd( 300.975, 457.8, 26.3638, 0.4068 ) }
    dend_3 { pt3dadd( 300.185, 458.625, 26.3658, 0.4068 ) }
    dend_3 { pt3dadd( 299.25, 459.237, 26.1383, 0.3916 ) }
    dend_3 { pt3dadd( 298.149, 459.254, 25.7727, 0.3814 ) }
    dend_3 { pt3dadd( 297.022, 459.289, 25.4504, 0.399 ) }
    dend_3 { pt3dadd( 296.086, 459.854, 25.1577, 0.4252 ) }
    dend_3 { pt3dadd( 295.65, 460.863, 24.8997, 0.488 ) }
    dend_3 { pt3dadd( 295.467, 461.986, 24.6607, 0.5648 ) }
    dend_3 { pt3dadd( 295.177, 463.083, 24.3684, 0.6432 ) }
    dend_3 { pt3dadd( 294.808, 464.154, 23.9884, 0.661 ) }
    dend_3 { pt3dadd( 294.19, 465.1, 23.6661, 0.5766 ) }
    dend_3 { pt3dadd( 293.38, 465.899, 23.4538, 0.448 ) }
    dend_3 { pt3dadd( 292.316, 466.276, 23.2459, 0.3376 ) }
    dend_3 { pt3dadd( 291.195, 466.396, 22.8161, 0.334 ) }
    dend_3 { pt3dadd( 290.248, 466.901, 22.2016, 0.445 ) }
    dend_3 { pt3dadd( 290.013, 467.948, 21.5844, 0.5226 ) }
    dend_3 { pt3dadd( 290.205, 469.056, 21.1164, 0.5446 ) }
    dend_3 { pt3dadd( 290.114, 470.162, 20.6858, 0.5 ) }
    dend_3 { pt3dadd( 289.631, 471.171, 20.1709, 0.483 ) }
    dend_3 { pt3dadd( 289.07, 472.144, 19.645, 0.483 ) }
    dend_3 { pt3dadd( 288.472, 473.09, 19.1376, 0.4948 ) }
    dend_3 { pt3dadd( 287.722, 473.926, 18.6393, 0.5084 ) }
    dend_3 { pt3dadd( 286.976, 474.768, 18.1648, 0.5326 ) }
    dend_3 { pt3dadd( 286.375, 475.719, 17.7174, 0.5842 ) }
    dend_3 { pt3dadd( 285.937, 476.76, 17.3148, 0.6102 ) }
    dend_3 { pt3dadd( 285.741, 477.866, 16.9836, 0.5836 ) }
    dend_3 { pt3dadd( 285.926, 478.972, 16.7831, 0.4892 ) }
    dend_3 { pt3dadd( 286.408, 480.004, 16.7137, 0.4176 ) }
    dend_3 { pt3dadd( 287.071, 480.931, 16.6858, 0.4216 ) }
    dend_3 { pt3dadd( 287.899, 481.712, 16.6061, 0.4934 ) }
    dend_3 { pt3dadd( 288.807, 482.403, 16.4519, 0.5654 ) }
    dend_3 { pt3dadd( 289.751, 483.045, 16.2623, 0.5688 ) }
    dend_3 { pt3dadd( 290.782, 483.513, 16.0237, 0.5264 ) }
    dend_3 { pt3dadd( 291.872, 483.839, 15.7462, 0.4574 ) }
    dend_3 { pt3dadd( 292.847, 484.395, 15.5193, 0.4144 ) }
    dend_3 { pt3dadd( 293.632, 485.216, 15.3887, 0.3708 ) }
    dend_3 { pt3dadd( 294.434, 486.03, 15.3648, 0.3374 ) }
    dend_3 { pt3dadd( 295.391, 486.642, 15.415, 0.3496 ) }
    dend_3 { pt3dadd( 296.198, 487.432, 15.4454, 0.4358 ) }
    dend_3 { pt3dadd( 296.564, 488.494, 15.3572, 0.542 ) }
    dend_3 { pt3dadd( 296.934, 489.573, 15.1953, 0.581 ) }
    dend_3 { pt3dadd( 297.576, 490.509, 15.0006, 0.541 ) }
    dend_3 { pt3dadd( 298.454, 491.227, 14.7375, 0.5114 ) }
    dend_3 { pt3dadd( 299.395, 491.872, 14.5378, 0.5084 ) }
    dend_3 { pt3dadd( 300.348, 492.499, 14.3195, 0.5318 ) }
    dend_3 { pt3dadd( 301.426, 492.865, 14.1319, 0.51 ) }
    dend_3 { pt3dadd( 302.491, 493.277, 13.9852, 0.4608 ) }
    dend_3 { pt3dadd( 303.395, 493.972, 13.8632, 0.4096 ) }
    dend_3 { pt3dadd( 303.853, 495.01, 13.7279, 0.3578 ) }
    dend_3 { pt3dadd( 304.183, 496.104, 13.5597, 0.331 ) }
    dend_3 { pt3dadd( 304.462, 497.211, 13.4276, 0.281 ) }
    dend_3 { pt3dadd( 305.192, 498.088, 13.3451, 0.2546 ) }
    dend_3 { pt3dadd( 305.724, 499.1, 13.2445, 0.2542 ) }
    dend_3 { pt3dadd( 306.134, 500.157, 12.88, 0.2796 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 71/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 303.102, 453.477, 26.9766, 0.6864 ) }
    dend_1 { pt3dadd( 303.732, 454.737, 27.3837, 0.3304 ) }
    dend_1 { pt3dadd( 304.138, 455.738, 28.2223, 0.319 ) }
    dend_1 { pt3dadd( 304.303, 456.739, 29.4526, 0.305 ) }
    dend_1 { pt3dadd( 304.341, 457.85, 30.0838, 0.305 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 269.069, 390.254, 12.5969, 0.356 ) }
    dend_28 { pt3dadd( 268.414, 389.38, 12.2707, 0.2654 ) }
    dend_28 { pt3dadd( 267.585, 388.615, 12.1309, 0.2288 ) }
    dend_28 { pt3dadd( 266.559, 388.138, 12.1171, 0.2288 ) }
    dend_28 { pt3dadd( 265.448, 387.889, 12.1094, 0.2288 ) }
    dend_28 { pt3dadd( 264.325, 387.712, 12.1082, 0.2288 ) }
    dend_28 { pt3dadd( 263.262, 387.288, 12.1072, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 83/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 269.069, 390.254, 12.5969, 0.356 ) }
    dend_27 { pt3dadd( 267.905, 390.73, 12.7262, 0.4532 ) }
    dend_27 { pt3dadd( 266.785, 390.906, 12.8819, 0.4572 ) }
    dend_27 { pt3dadd( 266.073, 391.656, 12.9472, 0.3354 ) }
    dend_27 { pt3dadd( 264.961, 391.543, 12.9921, 0.2832 ) }
    dend_27 { pt3dadd( 264.061, 391.03, 13.4235, 0.3458 ) }
    dend_27 { pt3dadd( 263.165, 390.596, 13.574, 0.4068 ) }
    dend_27 { pt3dadd( 262.163, 390.796, 13.6254, 0.3814 ) }
    dend_27 { pt3dadd( 261.087, 391.162, 13.6917, 0.3764 ) }
    dend_27 { pt3dadd( 260.006, 390.921, 13.8317, 0.3196 ) }
    dend_27 { pt3dadd( 258.92, 390.597, 14.1111, 0.2542 ) }
    dend_27 { pt3dadd( 257.815, 390.353, 14.2992, 0.256 ) }
    dend_27 { pt3dadd( 256.72, 390.551, 14.1248, 0.2916 ) }
    dend_27 { pt3dadd( 255.596, 390.384, 13.8404, 0.2878 ) }
    dend_27 { pt3dadd( 254.522, 390.015, 13.6661, 0.2596 ) }
    dend_27 { pt3dadd( 253.445, 389.635, 13.489, 0.2542 ) }
    dend_27 { pt3dadd( 252.313, 389.599, 13.4433, 0.3192 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_27 { pt3dadd( 251.19, 389.43, 13.6384, 0.3948 ) }
    dend_27 { pt3dadd( 250.122, 389.142, 14.0773, 0.359 ) }
    dend_27 { pt3dadd( 249.159, 388.574, 14.5734, 0.3304 ) }
    dend_27 { pt3dadd( 248.351, 387.783, 14.9186, 0.377 ) }
    dend_27 { pt3dadd( 247.577, 386.95, 15.075, 0.4322 ) }
    dend_27 { pt3dadd( 246.954, 385.991, 15.0302, 0.4166 ) }
    dend_27 { pt3dadd( 246.447, 384.982, 14.6813, 0.3814 ) }
    dend_27 { pt3dadd( 245.898, 383.989, 14.6255, 0.374 ) }
    dend_27 { pt3dadd( 245.468, 382.945, 14.502, 0.356 ) }
    dend_27 { pt3dadd( 244.764, 382.049, 14.3741, 0.3712 ) }
    dend_27 { pt3dadd( 244.057, 381.152, 14.286, 0.4128 ) }
    dend_27 { pt3dadd( 243.408, 380.212, 14.2129, 0.4148 ) }
    dend_27 { pt3dadd( 242.975, 379.167, 13.9945, 0.3402 ) }
    dend_27 { pt3dadd( 241.927, 378.905, 13.8015, 0.2604 ) }
    dend_27 { pt3dadd( 240.787, 378.844, 13.6753, 0.2306 ) }
    dend_27 { pt3dadd( 239.92, 378.125, 13.5851, 0.2288 ) }
    dend_27 { pt3dadd( 238.794, 377.979, 13.5393, 0.2288 ) }
    dend_27 { pt3dadd( 237.651, 377.967, 13.5311, 0.2288 ) }
    dend_27 { pt3dadd( 236.785, 377.311, 13.5693, 0.2582 ) }
    dend_27 { pt3dadd( 235.682, 377.534, 13.6397, 0.2856 ) }
    dend_27 { pt3dadd( 234.681, 378.076, 13.7274, 0.305 ) }
    dend_27 { pt3dadd( 233.641, 378.544, 13.8113, 0.3146 ) }
    dend_27 { pt3dadd( 232.628, 379.065, 13.9069, 0.39 ) }
    dend_27 { pt3dadd( 231.515, 379.031, 14.3181, 0.479 ) }
    dend_27 { pt3dadd( 230.469, 379.35, 14.5263, 0.356 ) }
    dend_27 { pt3dadd( 229.342, 379.484, 14.3676, 0.3852 ) }
    dend_27 { pt3dadd( 228.21, 379.58, 14.3044, 0.4238 ) }
    dend_27 { pt3dadd( 227.069, 379.658, 14.2872, 0.4528 ) }
    dend_27 { pt3dadd( 225.931, 379.585, 14.2989, 0.4576 ) }
    dend_27 { pt3dadd( 224.88, 379.896, 14.5185, 0.4278 ) }
    dend_27 { pt3dadd( 224.143, 380.763, 14.6586, 0.3934 ) }
    dend_27 { pt3dadd( 223.193, 381.322, 14.8232, 0.346 ) }
    dend_27 { pt3dadd( 222.079, 381.243, 15.047, 0.3152 ) }
    dend_27 { pt3dadd( 221.318, 381.77, 15.3723, 0.3286 ) }
    dend_27 { pt3dadd( 220.465, 382.524, 15.524, 0.356 ) }
    dend_27 { pt3dadd( 219.468, 383.076, 15.6559, 0.3378 ) }
    dend_27 { pt3dadd( 218.393, 383.466, 15.6691, 0.229 ) }
    dend_27 { pt3dadd( 217.452, 384.116, 15.6804, 0.2288 ) }
    dend_27 { pt3dadd( 216.511, 384.767, 15.6918, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 39/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 334.048, 391.477, 16.3122, 0.3814 ) }
    dend_23 { pt3dadd( 333.612, 390.5, 16.8932, 0.356 ) }
    dend_23 { pt3dadd( 334.063, 389.468, 16.8671, 0.3566 ) }
    dend_23 { pt3dadd( 334.587, 388.451, 16.7813, 0.3864 ) }
    dend_23 { pt3dadd( 335.167, 387.468, 16.6213, 0.4272 ) }
    dend_23 { pt3dadd( 335.64, 386.433, 16.4298, 0.3796 ) }
    dend_23 { pt3dadd( 335.897, 385.321, 16.3227, 0.3326 ) }
    dend_23 { pt3dadd( 336.024, 384.215, 16.2596, 0.398 ) }
    dend_23 { pt3dadd( 336.51, 383.206, 16.269, 0.4694 ) }
    dend_23 { pt3dadd( 336.472, 382.085, 16.4451, 0.483 ) }
    dend_23 { pt3dadd( 336.256, 380.971, 16.1935, 0.4174 ) }
    dend_23 { pt3dadd( 335.66, 380.001, 16.1442, 0.385 ) }
    dend_23 { pt3dadd( 335.073, 379.037, 15.9622, 0.512 ) }
    dend_23 { pt3dadd( 334.968, 377.903, 16.1851, 0.5338 ) }
    dend_23 { pt3dadd( 335.332, 376.87, 16.2062, 0.5338 ) }
    dend_23 { pt3dadd( 335.92, 375.905, 16.0054, 0.5338 ) }
    dend_23 { pt3dadd( 336.072, 374.773, 15.867, 0.5338 ) }
    dend_23 { pt3dadd( 336.131, 373.637, 15.614, 0.5338 ) }
    dend_23 { pt3dadd( 336.131, 372.505, 15.3012, 0.5254 ) }
    dend_23 { pt3dadd( 336.65, 371.623, 15.0062, 0.5084 ) }
    dend_23 { pt3dadd( 337.589, 371.057, 14.5276, 0.5084 ) }
    dend_23 { pt3dadd( 337.974, 369.986, 14.3651, 0.4972 ) }
    dend_23 { pt3dadd( 338.395, 368.923, 14.3944, 0.466 ) }
    dend_23 { pt3dadd( 339.001, 367.965, 14.3208, 0.4576 ) }
    dend_23 { pt3dadd( 339.753, 367.115, 14.1153, 0.4322 ) }
    dend_23 { pt3dadd( 340.379, 366.164, 13.8724, 0.4322 ) }
    dend_23 { pt3dadd( 340.227, 365.076, 13.5415, 0.4322 ) }
    dend_23 { pt3dadd( 340.507, 363.982, 13.2413, 0.3738 ) }
    dend_23 { pt3dadd( 341.1, 363.005, 13.0795, 0.3208 ) }
    dend_23 { pt3dadd( 341.942, 362.305, 12.6, 0.2796 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 334.048, 391.477, 16.3122, 0.3814 ) }
    dend_16 { pt3dadd( 334.643, 391.454, 16.2583, 0.3784 ) }
    dend_16 { pt3dadd( 335.786, 391.408, 16.1546, 0.3728 ) }
    dend_16 { pt3dadd( 336.927, 391.363, 16.0509, 0.3672 ) }
    dend_16 { pt3dadd( 338.07, 391.319, 15.9472, 0.3616 ) }
    dend_16 { pt3dadd( 339.212, 391.276, 15.837, 0.3566 ) }
    dend_16 { pt3dadd( 340.284, 391.111, 15.3369, 0.371 ) }
    dend_16 { pt3dadd( 341.341, 390.748, 15.0465, 0.356 ) }
    dend_16 { pt3dadd( 342.474, 390.598, 14.9183, 0.356 ) }
    dend_16 { pt3dadd( 343.569, 390.834, 14.8706, 0.378 ) }
    dend_16 { pt3dadd( 344.63, 390.494, 14.8229, 0.3346 ) }
    dend_16 { pt3dadd( 345.735, 390.209, 14.8821, 0.303 ) }
    dend_16 { pt3dadd( 346.768, 389.756, 14.8831, 0.3076 ) }
    dend_16 { pt3dadd( 347.888, 389.727, 14.8209, 0.3304 ) }
    dend_16 { pt3dadd( 348.981, 389.823, 14.5851, 0.3304 ) }
    dend_16 { pt3dadd( 350.017, 389.36, 14.5284, 0.3546 ) }
    dend_16 { pt3dadd( 351.099, 389.039, 14.2263, 0.3686 ) }
    dend_16 { pt3dadd( 352.111, 388.532, 14.0715, 0.356 ) }
    dend_16 { pt3dadd( 353.133, 388.04, 13.8015, 0.355 ) }
    dend_16 { pt3dadd( 354.252, 387.816, 13.7291, 0.3014 ) }
    dend_16 { pt3dadd( 355.362, 387.689, 13.5257, 0.2796 ) }
    dend_16 { pt3dadd( 356.35, 387.122, 13.3969, 0.289 ) }
    dend_16 { pt3dadd( 357.357, 386.617, 13.4452, 0.305 ) }
    dend_16 { pt3dadd( 358.457, 386.31, 13.5894, 0.3264 ) }
    dend_16 { pt3dadd( 359.586, 386.282, 13.58, 0.3852 ) }
    dend_16 { pt3dadd( 360.632, 385.851, 13.6699, 0.399 ) }
    dend_16 { pt3dadd( 361.537, 385.154, 13.7212, 0.3552 ) }
    dend_16 { pt3dadd( 362.371, 384.374, 13.6599, 0.3474 ) }
    dend_16 { pt3dadd( 363.398, 384.004, 13.5262, 0.4072 ) }
    dend_16 { pt3dadd( 364.345, 383.366, 13.439, 0.4308 ) }
    dend_16 { pt3dadd( 365.473, 383.186, 13.2726, 0.3476 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_16 { pt3dadd( 366.608, 383.135, 12.9951, 0.2688 ) }
    dend_16 { pt3dadd( 367.712, 383.328, 12.6846, 0.2398 ) }
    dend_16 { pt3dadd( 368.8, 383.424, 12.4871, 0.2856 ) }
    dend_16 { pt3dadd( 369.773, 382.877, 12.4831, 0.35 ) }
    dend_16 { pt3dadd( 370.848, 382.516, 12.6584, 0.3496 ) }
    dend_16 { pt3dadd( 371.904, 382.086, 12.8461, 0.2952 ) }
    dend_16 { pt3dadd( 373.015, 381.865, 12.9453, 0.2796 ) }
    dend_16 { pt3dadd( 374.102, 381.585, 12.9436, 0.2946 ) }
    dend_16 { pt3dadd( 375.177, 381.204, 12.8075, 0.2882 ) }
    dend_16 { pt3dadd( 376.198, 380.706, 12.7159, 0.26 ) }
    dend_16 { pt3dadd( 377.292, 380.41, 12.6996, 0.2326 ) }
    dend_16 { pt3dadd( 378.313, 379.909, 12.7596, 0.2288 ) }
    dend_16 { pt3dadd( 379.431, 379.67, 12.7456, 0.281 ) }
    dend_16 { pt3dadd( 380.477, 379.21, 12.7247, 0.3608 ) }
    dend_16 { pt3dadd( 381.466, 378.635, 12.6169, 0.427 ) }
    dend_16 { pt3dadd( 382.422, 378.009, 12.5776, 0.3858 ) }
    dend_16 { pt3dadd( 383.4, 377.416, 12.5112, 0.3056 ) }
    dend_16 { pt3dadd( 384.395, 377.497, 12.65, 0.2806 ) }
    dend_16 { pt3dadd( 385.533, 377.534, 12.6423, 0.305 ) }
    dend_16 { pt3dadd( 386.663, 377.409, 12.5102, 0.305 ) }
    dend_16 { pt3dadd( 387.704, 376.966, 12.3804, 0.305 ) }
    dend_16 { pt3dadd( 388.544, 376.192, 12.3687, 0.2796 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 22/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 357.577, 407.95, 18.9927, 0.483 ) }
    dend_12 { pt3dadd( 358.815, 407.811, 19.4508, 0.396 ) }
    dend_12 { pt3dadd( 359.574, 406.989, 19.8692, 0.3672 ) }
    dend_12 { pt3dadd( 360.417, 406.281, 20.3103, 0.3382 ) }
    dend_12 { pt3dadd( 361.45, 405.979, 21.0558, 0.3056 ) }
    dend_12 { pt3dadd( 361.419, 404.965, 21.9859, 0.3348 ) }
    dend_12 { pt3dadd( 360.822, 404.441, 23.5419, 0.356 ) }
    dend_12 { pt3dadd( 361.411, 404.411, 25.8121, 0.305 ) }
    dend_12 { pt3dadd( 362.256, 404.72, 27.4017, 0.373 ) }
    dend_12 { pt3dadd( 362.952, 405.501, 28.4679, 0.5008 ) }
    dend_12 { pt3dadd( 363.998, 405.426, 29.4277, 0.4854 ) }
    dend_12 { pt3dadd( 365.077, 405.335, 30.3192, 0.3774 ) }
    dend_12 { pt3dadd( 366.113, 405.451, 30.879, 0.297 ) }
    dend_12 { pt3dadd( 367.214, 405.465, 31.1623, 0.2578 ) }
    dend_12 { pt3dadd( 368.347, 405.331, 31.3141, 0.2542 ) }
    dend_12 { pt3dadd( 368.905, 405.956, 32.3453, 0.3304 ) }
    dend_12 { pt3dadd( 369.826, 405.954, 33.2167, 0.3226 ) }
    dend_12 { pt3dadd( 370.936, 405.781, 33.6669, 0.2646 ) }
    dend_12 { pt3dadd( 371.648, 406.282, 34.7169, 0.2288 ) }
    dend_12 { pt3dadd( 372.541, 405.788, 35.8212, 0.2288 ) }
    dend_12 { pt3dadd( 373.467, 405.265, 36.6716, 0.244 ) }
    dend_12 { pt3dadd( 374.55, 405.1, 37.3584, 0.2868 ) }
    dend_12 { pt3dadd( 375.294, 404.459, 38.0724, 0.3892 ) }
    dend_12 { pt3dadd( 376.101, 404.031, 39.0872, 0.4576 ) }
    dend_12 { pt3dadd( 376.861, 404.604, 40.3816, 0.391 ) }
    dend_12 { pt3dadd( 377.841, 404.865, 41.6287, 0.285 ) }
    dend_12 { pt3dadd( 378.747, 404.585, 43.1318, 0.2288 ) }
    dend_12 { pt3dadd( 379.782, 404.452, 44.2809, 0.238 ) }
    dend_12 { pt3dadd( 380.763, 404.148, 45.3821, 0.2668 ) }
    dend_12 { pt3dadd( 381.707, 404.111, 46.5346, 0.2978 ) }
    dend_12 { pt3dadd( 382.567, 404.141, 48.004, 0.2694 ) }
    dend_12 { pt3dadd( 383.608, 403.839, 48.8947, 0.2422 ) }
    dend_12 { pt3dadd( 384.606, 403.628, 50.1348, 0.2288 ) }
    dend_12 { pt3dadd( 385.481, 403.151, 51.4542, 0.2288 ) }
    dend_12 { pt3dadd( 386.345, 402.582, 52.6492, 0.2288 ) }
    dend_12 { pt3dadd( 387.328, 402.19, 53.7009, 0.2288 ) }
    dend_12 { pt3dadd( 388.097, 401.499, 54.8464, 0.2288 ) }
    dend_12 { pt3dadd( 388.979, 400.971, 56.0431, 0.2288 ) }
    dend_12 { pt3dadd( 390.023, 401.0, 56.9162, 0.2288 ) }
    dend_12 { pt3dadd( 391.107, 401.182, 57.6906, 0.2288 ) }
    dend_12 { pt3dadd( 392.183, 401.363, 58.5315, 0.2288 ) }
    dend_12 { pt3dadd( 393.258, 401.543, 59.3852, 0.2288 ) }
    dend_12 { pt3dadd( 394.194, 401.901, 60.4139, 0.2288 ) }
    dend_12 { pt3dadd( 394.817, 402.663, 61.8408, 0.2288 ) }
    dend_12 { pt3dadd( 394.966, 403.063, 64.143, 0.2288 ) }
    dend_12 { pt3dadd( 394.878, 403.283, 66.8825, 0.2288 ) }
    dend_12 { pt3dadd( 394.79, 403.503, 69.622, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 69/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 357.577, 407.95, 18.9927, 0.483 ) }
    dend_11 { pt3dadd( 358.748, 407.949, 18.3653, 0.528 ) }
    dend_11 { pt3dadd( 359.799, 407.836, 18.6489, 0.4656 ) }
    dend_11 { pt3dadd( 360.609, 407.94, 18.3762, 0.39 ) }
    dend_11 { pt3dadd( 361.602, 407.503, 17.7702, 0.3512 ) }
    dend_11 { pt3dadd( 362.701, 407.503, 17.4377, 0.2916 ) }
    dend_11 { pt3dadd( 363.793, 407.559, 17.1056, 0.3008 ) }
    dend_11 { pt3dadd( 364.928, 407.567, 16.9055, 0.382 ) }
    dend_11 { pt3dadd( 366.034, 407.275, 16.8783, 0.4664 ) }
    dend_11 { pt3dadd( 367.143, 407.272, 16.6637, 0.4656 ) }
    dend_11 { pt3dadd( 368.232, 407.087, 16.2893, 0.4068 ) }
    dend_11 { pt3dadd( 369.201, 406.497, 15.9356, 0.4236 ) }
    dend_11 { pt3dadd( 370.13, 405.844, 15.6107, 0.4576 ) }
    dend_11 { pt3dadd( 371.143, 405.448, 15.3288, 0.4458 ) }
    dend_11 { pt3dadd( 372.229, 405.192, 15.0991, 0.3908 ) }
    dend_11 { pt3dadd( 373.306, 404.83, 14.9126, 0.339 ) }
    dend_11 { pt3dadd( 374.308, 405.161, 14.5163, 0.2794 ) }
    dend_11 { pt3dadd( 375.4, 405.374, 14.244, 0.2542 ) }
    dend_11 { pt3dadd( 376.467, 405.694, 13.9198, 0.275 ) }
    dend_11 { pt3dadd( 377.582, 405.562, 13.4883, 0.3304 ) }
    dend_11 { pt3dadd( 378.554, 405.628, 13.0799, 0.3304 ) }
    dend_11 { pt3dadd( 379.25, 406.508, 12.6948, 0.317 ) }
    dend_11 { pt3dadd( 380.14, 406.964, 12.3436, 0.305 ) }
    dend_11 { pt3dadd( 381.2, 407.288, 11.9314, 0.3246 ) }
    dend_11 { pt3dadd( 382.21, 407.607, 10.92, 0.3304 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 94/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 332.446, 388.159, 26.8859, 0.5084 ) }
    dend_9 { pt3dadd( 333.113, 388.146, 25.3053, 0.3832 ) }
    dend_9 { pt3dadd( 334.241, 387.97, 25.1764, 0.3948 ) }
    dend_9 { pt3dadd( 335.247, 387.509, 25.113, 0.3134 ) }
    dend_9 { pt3dadd( 335.885, 386.59, 25.1002, 0.2672 ) }
    dend_9 { pt3dadd( 336.237, 385.537, 25.2682, 0.2882 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_9 { pt3dadd( 337.188, 384.931, 25.2247, 0.3304 ) }
    dend_9 { pt3dadd( 337.791, 384.196, 25.3511, 0.3754 ) }
    dend_9 { pt3dadd( 338.539, 383.469, 25.7426, 0.4004 ) }
    dend_9 { pt3dadd( 339.515, 383.738, 25.5265, 0.411 ) }
    dend_9 { pt3dadd( 340.525, 383.439, 25.1168, 0.4322 ) }
    dend_9 { pt3dadd( 341.344, 382.726, 25.014, 0.4322 ) }
    dend_9 { pt3dadd( 342.374, 382.496, 24.6423, 0.364 ) }
    dend_9 { pt3dadd( 343.242, 381.811, 24.474, 0.291 ) }
    dend_9 { pt3dadd( 344.352, 381.541, 24.4546, 0.2542 ) }
    dend_9 { pt3dadd( 345.386, 381.089, 24.701, 0.272 ) }
    dend_9 { pt3dadd( 346.44, 380.997, 25.4579, 0.3304 ) }
    dend_9 { pt3dadd( 347.445, 380.772, 25.9997, 0.3304 ) }
    dend_9 { pt3dadd( 348.255, 380.021, 26.2636, 0.3062 ) }
    dend_9 { pt3dadd( 349.319, 379.612, 26.21, 0.2796 ) }
    dend_9 { pt3dadd( 350.363, 379.15, 26.0804, 0.301 ) }
    dend_9 { pt3dadd( 351.397, 378.662, 26.1686, 0.3552 ) }
    dend_9 { pt3dadd( 352.263, 377.955, 26.5567, 0.3468 ) }
    dend_9 { pt3dadd( 353.324, 377.56, 26.9345, 0.2996 ) }
    dend_9 { pt3dadd( 354.386, 377.167, 27.2254, 0.285 ) }
    dend_9 { pt3dadd( 355.515, 377.011, 27.4122, 0.3178 ) }
    dend_9 { pt3dadd( 356.597, 376.762, 27.5592, 0.3644 ) }
    dend_9 { pt3dadd( 357.604, 376.243, 27.6067, 0.3718 ) }
    dend_9 { pt3dadd( 358.578, 375.714, 27.6015, 0.344 ) }
    dend_9 { pt3dadd( 359.495, 375.055, 27.5352, 0.3026 ) }
    dend_9 { pt3dadd( 360.583, 374.797, 27.4535, 0.2654 ) }
    dend_9 { pt3dadd( 361.402, 374.216, 27.3171, 0.2366 ) }
    dend_9 { pt3dadd( 362.384, 373.789, 27.249, 0.2288 ) }
    dend_9 { pt3dadd( 363.525, 373.747, 27.2272, 0.2288 ) }
    dend_9 { pt3dadd( 364.631, 373.469, 27.1843, 0.2288 ) }
    dend_9 { pt3dadd( 365.742, 373.681, 27.0914, 0.23 ) }
    dend_9 { pt3dadd( 366.884, 373.745, 27.0278, 0.2556 ) }
    dend_9 { pt3dadd( 368.028, 373.75, 27.0085, 0.281 ) }
    dend_9 { pt3dadd( 369.16, 373.892, 27.037, 0.3026 ) }
    dend_9 { pt3dadd( 370.245, 374.218, 27.1088, 0.2716 ) }
    dend_9 { pt3dadd( 371.386, 374.286, 27.271, 0.239 ) }
    dend_9 { pt3dadd( 372.267, 374.888, 27.5025, 0.2288 ) }
    dend_9 { pt3dadd( 373.029, 375.734, 27.7659, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 37/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 332.446, 388.159, 26.8859, 0.5084 ) }
    dend_6 { pt3dadd( 333.021, 386.966, 27.1148, 0.2796 ) }
    dend_6 { pt3dadd( 332.944, 385.833, 27.2042, 0.3106 ) }
    dend_6 { pt3dadd( 332.476, 384.812, 27.1352, 0.4206 ) }
    dend_6 { pt3dadd( 331.714, 384.027, 26.9565, 0.4776 ) }
    dend_6 { pt3dadd( 331.517, 382.902, 26.8446, 0.4356 ) }
    dend_6 { pt3dadd( 331.435, 381.763, 26.8788, 0.3708 ) }
    dend_6 { pt3dadd( 331.254, 380.643, 26.9916, 0.3364 ) }
    dend_6 { pt3dadd( 331.866, 379.81, 27.2932, 0.3598 ) }
    dend_6 { pt3dadd( 331.822, 378.868, 27.5727, 0.403 ) }
    dend_6 { pt3dadd( 331.544, 377.952, 27.3655, 0.4322 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 48/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 304.341, 457.85, 30.0838, 0.305 ) }
    dend_2 { pt3dadd( 305.053, 458.881, 29.9026, 0.4232 ) }
    dend_2 { pt3dadd( 305.365, 459.971, 29.7237, 0.5256 ) }
    dend_2 { pt3dadd( 305.681, 461.064, 29.6184, 0.589 ) }
    dend_2 { pt3dadd( 306.141, 462.11, 29.5982, 0.5948 ) }
    dend_2 { pt3dadd( 306.631, 463.143, 29.6878, 0.5688 ) }
    dend_2 { pt3dadd( 307.24, 464.104, 29.8592, 0.5264 ) }
    dend_2 { pt3dadd( 307.97, 464.98, 30.0275, 0.5084 ) }
    dend_2 { pt3dadd( 308.629, 465.909, 29.9788, 0.5084 ) }
    dend_2 { pt3dadd( 309.023, 466.966, 29.6526, 0.5704 ) }
    dend_2 { pt3dadd( 309.63, 467.901, 29.1508, 0.6068 ) }
    dend_2 { pt3dadd( 310.11, 468.906, 28.5415, 0.6332 ) }
    dend_2 { pt3dadd( 310.622, 469.907, 28.0266, 0.6356 ) }
    dend_2 { pt3dadd( 311.23, 470.861, 27.624, 0.726 ) }
    dend_2 { pt3dadd( 311.981, 471.714, 27.335, 0.8274 ) }
    dend_2 { pt3dadd( 312.732, 472.573, 27.1225, 0.8614 ) }
    dend_2 { pt3dadd( 313.263, 473.578, 26.9202, 0.7292 ) }
    dend_2 { pt3dadd( 313.516, 474.685, 26.6498, 0.5494 ) }
    dend_2 { pt3dadd( 313.9, 475.755, 26.3987, 0.4412 ) }
    dend_2 { pt3dadd( 314.657, 476.597, 26.1614, 0.4784 ) }
    dend_2 { pt3dadd( 315.544, 477.31, 25.886, 0.5294 ) }
    dend_2 { pt3dadd( 316.414, 478.047, 25.6543, 0.5806 ) }
    dend_2 { pt3dadd( 317.431, 478.558, 25.4692, 0.6082 ) }
    dend_2 { pt3dadd( 318.542, 478.796, 25.1926, 0.6826 ) }
    dend_2 { pt3dadd( 319.524, 479.341, 24.7009, 0.6548 ) }
    dend_2 { pt3dadd( 320.437, 479.993, 24.1707, 0.5182 ) }
    dend_2 { pt3dadd( 321.459, 480.422, 23.6398, 0.34 ) }
    dend_2 { pt3dadd( 322.597, 480.483, 23.3905, 0.2966 ) }
    dend_2 { pt3dadd( 323.736, 480.511, 23.143, 0.3576 ) }
    dend_2 { pt3dadd( 324.866, 480.628, 22.8633, 0.4166 ) }
    dend_2 { pt3dadd( 325.984, 480.849, 22.6302, 0.4122 ) }
    dend_2 { pt3dadd( 327.092, 481.115, 22.4161, 0.371 ) }
    dend_2 { pt3dadd( 328.105, 481.582, 22.1699, 0.356 ) }
    dend_2 { pt3dadd( 328.889, 482.392, 21.8866, 0.367 ) }
    dend_2 { pt3dadd( 329.357, 483.4, 21.4887, 0.3694 ) }
    dend_2 { pt3dadd( 329.513, 484.493, 20.8181, 0.356 ) }
    dend_2 { pt3dadd( 329.854, 485.51, 19.9772, 0.3376 ) }
    dend_2 { pt3dadd( 330.59, 486.314, 19.2562, 0.3492 ) }
    dend_2 { pt3dadd( 331.493, 486.966, 18.6543, 0.3376 ) }
    dend_2 { pt3dadd( 332.494, 487.466, 18.1147, 0.3304 ) }
    dend_2 { pt3dadd( 333.495, 487.99, 17.6986, 0.312 ) }
    dend_2 { pt3dadd( 334.542, 488.435, 17.4662, 0.3238 ) }
    dend_2 { pt3dadd( 335.663, 488.574, 17.2452, 0.37 ) }
    dend_2 { pt3dadd( 336.714, 488.965, 16.9194, 0.4234 ) }
    dend_2 { pt3dadd( 337.808, 488.868, 16.4791, 0.4322 ) }
    dend_2 { pt3dadd( 338.623, 489.653, 16.1846, 0.406 ) }
    dend_2 { pt3dadd( 339.204, 490.617, 15.9323, 0.3814 ) }
    dend_2 { pt3dadd( 339.405, 491.724, 15.7136, 0.3814 ) }
    dend_2 { pt3dadd( 340.001, 492.672, 15.4299, 0.3724 ) }
    dend_2 { pt3dadd( 340.741, 493.506, 14.9075, 0.3718 ) }
    dend_2 { pt3dadd( 341.66, 494.05, 14.2317, 0.3814 ) }
    dend_2 { pt3dadd( 342.743, 494.375, 13.8437, 0.4546 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( 343.863, 494.54, 13.515, 0.4602 ) }
    dend_2 { pt3dadd( 344.934, 494.172, 13.1456, 0.4844 ) }
    dend_2 { pt3dadd( 345.963, 494.329, 13.0336, 0.4176 ) }
    dend_2 { pt3dadd( 346.861, 495.009, 13.44, 0.305 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 4/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 388.544, 376.192, 12.3687, 0.2796 ) }
    dend_22 { pt3dadd( 388.548, 376.066, 12.8333, 0.2748 ) }
    dend_22 { pt3dadd( 388.573, 375.433, 15.166, 0.2512 ) }
    dend_22 { pt3dadd( 388.594, 374.777, 17.4239, 0.2288 ) }
    dend_22 { pt3dadd( 388.542, 373.712, 18.4404, 0.2288 ) }
    dend_22 { pt3dadd( 389.244, 373.018, 18.9308, 0.2288 ) }
    dend_22 { pt3dadd( 390.241, 372.469, 19.2148, 0.2288 ) }
    dend_22 { pt3dadd( 391.119, 371.793, 19.5126, 0.2288 ) }
    dend_22 { pt3dadd( 391.75, 370.847, 19.8395, 0.2288 ) }
    dend_22 { pt3dadd( 391.992, 369.828, 20.2408, 0.2288 ) }
    dend_22 { pt3dadd( 391.778, 368.723, 20.7289, 0.2288 ) }
    dend_22 { pt3dadd( 391.565, 367.616, 21.2171, 0.2288 ) }
    dend_22 { pt3dadd( 391.351, 366.51, 21.7053, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 388.544, 376.192, 12.3687, 0.2796 ) }
    dend_17 { pt3dadd( 389.792, 375.762, 12.6862, 0.2384 ) }
    dend_17 { pt3dadd( 390.868, 375.39, 12.8334, 0.2288 ) }
    dend_17 { pt3dadd( 391.964, 375.081, 12.931, 0.2288 ) }
    dend_17 { pt3dadd( 393.016, 374.653, 12.9004, 0.2288 ) }
    dend_17 { pt3dadd( 394.145, 374.58, 12.9503, 0.2288 ) }
    dend_17 { pt3dadd( 395.25, 374.597, 13.036, 0.2288 ) }
    dend_17 { pt3dadd( 396.358, 374.426, 13.1856, 0.2288 ) }
    dend_17 { pt3dadd( 397.366, 373.948, 13.2594, 0.2288 ) }
    dend_17 { pt3dadd( 398.505, 373.859, 13.3321, 0.2288 ) }
    dend_17 { pt3dadd( 399.65, 373.857, 13.3638, 0.2288 ) }
    dend_17 { pt3dadd( 400.784, 373.787, 13.3758, 0.2288 ) }
    dend_17 { pt3dadd( 401.841, 373.402, 13.3698, 0.2288 ) }
    dend_17 { pt3dadd( 402.981, 373.348, 13.3567, 0.2344 ) }
    dend_17 { pt3dadd( 404.021, 372.968, 13.3232, 0.2608 ) }
    dend_17 { pt3dadd( 404.926, 372.409, 13.278, 0.2886 ) }
    dend_17 { pt3dadd( 406.001, 372.161, 13.1978, 0.288 ) }
    dend_17 { pt3dadd( 407.111, 372.031, 13.1027, 0.2594 ) }
    dend_17 { pt3dadd( 408.255, 372.022, 13.104, 0.2338 ) }
    dend_17 { pt3dadd( 409.398, 372.032, 13.1717, 0.2288 ) }
    dend_17 { pt3dadd( 410.521, 371.882, 13.2296, 0.2288 ) }
    dend_17 { pt3dadd( 411.627, 371.591, 13.2693, 0.2288 ) }
    dend_17 { pt3dadd( 412.733, 371.299, 13.309, 0.2288 ) }
    dend_17 { pt3dadd( 413.84, 371.011, 13.348, 0.2288 ) }
    dend_17 { pt3dadd( 414.961, 370.778, 13.3738, 0.2288 ) }
    dend_17 { pt3dadd( 416.081, 370.546, 13.3994, 0.2288 ) }
    dend_17 { pt3dadd( 417.201, 370.314, 13.4251, 0.2288 ) }
    dend_17 { pt3dadd( 418.321, 370.082, 13.4508, 0.2288 ) }
    dend_17 { pt3dadd( 419.441, 369.849, 13.4765, 0.2288 ) }
    dend_17 { pt3dadd( 420.363, 369.235, 13.5204, 0.2288 ) }
    dend_17 { pt3dadd( 421.2, 368.456, 13.572, 0.2288 ) }
    dend_17 { pt3dadd( 422.038, 367.676, 13.6237, 0.2288 ) }
    dend_17 { pt3dadd( 422.943, 367.028, 13.6665, 0.2288 ) }
    dend_17 { pt3dadd( 424.064, 366.803, 13.6809, 0.2288 ) }
    dend_17 { pt3dadd( 425.185, 366.578, 13.6953, 0.2288 ) }
    dend_17 { pt3dadd( 426.307, 366.352, 13.7097, 0.2288 ) }
    dend_17 { pt3dadd( 427.352, 365.969, 13.7222, 0.2288 ) }
    dend_17 { pt3dadd( 428.221, 365.225, 13.7302, 0.2288 ) }
    dend_17 { pt3dadd( 429.09, 364.482, 13.7383, 0.2288 ) }
    dend_17 { pt3dadd( 429.869, 363.656, 13.7578, 0.2288 ) }
    dend_17 { pt3dadd( 430.544, 362.732, 13.7908, 0.2288 ) }
    dend_17 { pt3dadd( 431.218, 361.807, 13.8239, 0.2288 ) }
    dend_17 { pt3dadd( 431.893, 360.883, 13.8569, 0.2288 ) }
    dend_17 { pt3dadd( 432.567, 359.96, 13.89, 0.2288 ) }
    dend_17 { pt3dadd( 433.335, 359.152, 13.9146, 0.2288 ) }
    dend_17 { pt3dadd( 434.387, 358.705, 13.9133, 0.2288 ) }
    dend_17 { pt3dadd( 435.44, 358.256, 13.9121, 0.2288 ) }
    dend_17 { pt3dadd( 436.492, 357.808, 13.9108, 0.2288 ) }
    dend_17 { pt3dadd( 437.544, 357.36, 13.9096, 0.2288 ) }
    dend_17 { pt3dadd( 438.621, 356.975, 13.8157, 0.2288 ) }
    dend_17 { pt3dadd( 439.699, 356.591, 13.7205, 0.2288 ) }
    dend_17 { pt3dadd( 440.775, 356.206, 13.6253, 0.2288 ) }
    dend_17 { pt3dadd( 441.852, 355.822, 13.53, 0.2288 ) }
    dend_17 { pt3dadd( 442.928, 355.437, 13.4348, 0.2288 ) }
    dend_17 { pt3dadd( 444.006, 355.063, 13.3377, 0.2288 ) }
    dend_17 { pt3dadd( 445.132, 355.254, 13.1445, 0.2288 ) }
    dend_17 { pt3dadd( 446.256, 355.447, 12.9513, 0.2288 ) }
    dend_17 { pt3dadd( 447.274, 355.29, 12.7974, 0.2288 ) }
    dend_17 { pt3dadd( 448.096, 354.495, 12.7156, 0.2288 ) }
    dend_17 { pt3dadd( 448.917, 353.698, 12.6337, 0.2288 ) }
    dend_17 { pt3dadd( 449.738, 352.903, 12.5519, 0.2288 ) }
    dend_17 { pt3dadd( 450.56, 352.107, 12.47, 0.2288 ) }
    dend_17 { pt3dadd( 451.382, 351.312, 12.3882, 0.2288 ) }
    dend_17 { pt3dadd( 452.222, 350.542, 12.3047, 0.2288 ) }
    dend_17 { pt3dadd( 453.221, 349.985, 12.2067, 0.2288 ) }
    dend_17 { pt3dadd( 454.218, 349.427, 12.1088, 0.2288 ) }
    dend_17 { pt3dadd( 455.217, 348.87, 12.0109, 0.2288 ) }
    dend_17 { pt3dadd( 456.231, 348.345, 11.9047, 0.2288 ) }
    dend_17 { pt3dadd( 457.279, 347.889, 11.78, 0.2288 ) }
    dend_17 { pt3dadd( 458.328, 347.434, 11.6552, 0.2288 ) }
    dend_17 { pt3dadd( 459.35, 346.926, 11.592, 0.2288 ) }
    dend_17 { pt3dadd( 460.355, 346.379, 11.574, 0.2288 ) }
    dend_17 { pt3dadd( 461.359, 345.831, 11.556, 0.2288 ) }
    dend_17 { pt3dadd( 462.365, 345.284, 11.538, 0.2288 ) }
    dend_17 { pt3dadd( 463.369, 344.737, 11.52, 0.2288 ) }
    dend_17 { pt3dadd( 464.374, 344.19, 11.502, 0.2288 ) }
    dend_17 { pt3dadd( 465.378, 343.643, 11.484, 0.2288 ) }
    dend_17 { pt3dadd( 466.383, 343.095, 11.466, 0.2288 ) }
    dend_17 { pt3dadd( 467.425, 342.637, 11.4575, 0.2288 ) }
    dend_17 { pt3dadd( 468.516, 342.293, 11.4612, 0.2288 ) }
    dend_17 { pt3dadd( 469.606, 341.948, 11.4648, 0.2288 ) }
    dend_17 { pt3dadd( 470.72, 341.69, 11.4858, 0.2288 ) }
    dend_17 { pt3dadd( 471.837, 341.442, 11.5087, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 472.955, 341.193, 11.5317, 0.2288 ) }
    dend_17 { pt3dadd( 474.094, 341.102, 11.5668, 0.2288 ) }
    dend_17 { pt3dadd( 475.235, 341.017, 11.6025, 0.2288 ) }
    dend_17 { pt3dadd( 476.375, 340.931, 11.6382, 0.2288 ) }
    dend_17 { pt3dadd( 477.516, 340.847, 11.6739, 0.2288 ) }
    dend_17 { pt3dadd( 478.656, 340.762, 11.7095, 0.2288 ) }
    dend_17 { pt3dadd( 479.798, 340.677, 11.7452, 0.2288 ) }
    dend_17 { pt3dadd( 480.939, 340.592, 11.7809, 0.2288 ) }
    dend_17 { pt3dadd( 481.893, 341.212, 11.9255, 0.2288 ) }
    dend_17 { pt3dadd( 482.865, 341.721, 12.0685, 0.2288 ) }
    dend_17 { pt3dadd( 483.975, 341.444, 12.1885, 0.2288 ) }
    dend_17 { pt3dadd( 484.939, 340.967, 12.311, 0.2288 ) }
    dend_17 { pt3dadd( 485.552, 340.003, 12.4394, 0.2288 ) }
    dend_17 { pt3dadd( 486.438, 339.356, 12.496, 0.2288 ) }
    dend_17 { pt3dadd( 487.488, 338.902, 12.5094, 0.2288 ) }
    dend_17 { pt3dadd( 488.537, 338.448, 12.5227, 0.2288 ) }
    dend_17 { pt3dadd( 489.587, 337.992, 12.536, 0.2288 ) }
    dend_17 { pt3dadd( 490.638, 337.538, 12.5493, 0.2288 ) }
    dend_17 { pt3dadd( 491.687, 337.084, 12.5627, 0.2288 ) }
    dend_17 { pt3dadd( 492.737, 336.629, 12.576, 0.2288 ) }
    dend_17 { pt3dadd( 493.787, 336.175, 12.5893, 0.2288 ) }
    dend_17 { pt3dadd( 494.826, 336.44, 12.6739, 0.2288 ) }
    dend_17 { pt3dadd( 495.861, 336.925, 12.7801, 0.2288 ) }
    dend_17 { pt3dadd( 496.896, 337.409, 12.8863, 0.2288 ) }
    dend_17 { pt3dadd( 498.003, 337.687, 13.0279, 0.2288 ) }
    dend_17 { pt3dadd( 499.115, 337.948, 13.1723, 0.2288 ) }
    dend_17 { pt3dadd( 500.245, 337.798, 13.2679, 0.2288 ) }
    dend_17 { pt3dadd( 501.376, 337.631, 13.3613, 0.2288 ) }
    dend_17 { pt3dadd( 502.508, 337.464, 13.4548, 0.2288 ) }
    dend_17 { pt3dadd( 503.638, 337.297, 13.5483, 0.2288 ) }
    dend_17 { pt3dadd( 504.769, 337.13, 13.6417, 0.2288 ) }
    dend_17 { pt3dadd( 505.896, 336.937, 13.7262, 0.2288 ) }
    dend_17 { pt3dadd( 507.021, 336.729, 13.8056, 0.2288 ) }
    dend_17 { pt3dadd( 508.145, 336.521, 13.8849, 0.2288 ) }
    dend_17 { pt3dadd( 509.27, 336.314, 13.9643, 0.2288 ) }
    dend_17 { pt3dadd( 510.395, 336.107, 14.0437, 0.2288 ) }
    dend_17 { pt3dadd( 511.519, 335.899, 14.123, 0.2288 ) }
    dend_17 { pt3dadd( 512.644, 335.692, 14.2024, 0.2288 ) }
    dend_17 { pt3dadd( 513.769, 335.86, 14.3533, 0.2288 ) }
    dend_17 { pt3dadd( 514.896, 336.052, 14.5089, 0.2288 ) }
    dend_17 { pt3dadd( 516.022, 336.245, 14.6645, 0.2288 ) }
    dend_17 { pt3dadd( 517.131, 336.174, 14.8026, 0.2288 ) }
    dend_17 { pt3dadd( 518.225, 335.843, 14.9232, 0.2288 ) }
    dend_17 { pt3dadd( 519.319, 335.511, 15.0439, 0.2288 ) }
    dend_17 { pt3dadd( 520.412, 335.179, 15.1645, 0.2288 ) }
    dend_17 { pt3dadd( 521.506, 334.848, 15.2852, 0.2288 ) }
    dend_17 { pt3dadd( 522.6, 334.516, 15.4058, 0.2288 ) }
    dend_17 { pt3dadd( 523.693, 334.184, 15.5265, 0.2288 ) }
    dend_17 { pt3dadd( 524.765, 333.788, 15.6576, 0.2288 ) }
    dend_17 { pt3dadd( 525.832, 333.378, 15.7911, 0.2288 ) }
    dend_17 { pt3dadd( 526.898, 332.967, 15.9246, 0.2288 ) }
    dend_17 { pt3dadd( 527.965, 332.557, 16.0581, 0.2288 ) }
    dend_17 { pt3dadd( 529.031, 332.147, 16.1916, 0.2288 ) }
    dend_17 { pt3dadd( 530.098, 331.737, 16.3251, 0.2288 ) }
    dend_17 { pt3dadd( 531.165, 331.326, 16.4586, 0.2288 ) }
    dend_17 { pt3dadd( 532.231, 330.917, 16.5921, 0.2288 ) }
    dend_17 { pt3dadd( 533.292, 330.494, 16.7586, 0.2288 ) }
    dend_17 { pt3dadd( 534.338, 330.044, 16.9998, 0.2288 ) }
    dend_17 { pt3dadd( 535.385, 329.593, 17.2409, 0.2288 ) }
    dend_17 { pt3dadd( 536.433, 329.144, 17.482, 0.2288 ) }
    dend_17 { pt3dadd( 537.48, 328.693, 17.7231, 0.2288 ) }
    dend_17 { pt3dadd( 538.527, 328.243, 17.9642, 0.2288 ) }
    dend_17 { pt3dadd( 539.611, 327.921, 18.197, 0.2288 ) }
    dend_17 { pt3dadd( 540.739, 327.753, 18.4198, 0.2288 ) }
    dend_17 { pt3dadd( 541.866, 327.583, 18.6427, 0.2288 ) }
    dend_17 { pt3dadd( 542.994, 327.414, 18.8656, 0.2288 ) }
    dend_17 { pt3dadd( 544.122, 327.245, 19.0884, 0.2288 ) }
    dend_17 { pt3dadd( 545.25, 327.075, 19.3113, 0.2288 ) }
    dend_17 { pt3dadd( 546.378, 327.123, 19.4898, 0.2528 ) }
    dend_17 { pt3dadd( 547.507, 327.301, 19.6422, 0.291 ) }
    dend_17 { pt3dadd( 548.635, 327.477, 19.7946, 0.3292 ) }
    dend_17 { pt3dadd( 549.763, 327.654, 19.9471, 0.3674 ) }
    dend_17 { pt3dadd( 550.774, 327.388, 20.6044, 0.2888 ) }
    dend_17 { pt3dadd( 551.694, 326.741, 21.098, 0.2796 ) }
    dend_17 { pt3dadd( 552.794, 326.943, 21.5211, 0.2796 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 75/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 331.544, 377.952, 27.3655, 0.4322 ) }
    dend_8 { pt3dadd( 331.842, 377.359, 27.2134, 0.2818 ) }
    dend_8 { pt3dadd( 332.491, 376.427, 27.2404, 0.2838 ) }
    dend_8 { pt3dadd( 333.135, 375.495, 27.5278, 0.2542 ) }
    dend_8 { pt3dadd( 333.978, 374.73, 27.5901, 0.266 ) }
    dend_8 { pt3dadd( 334.714, 373.891, 27.7985, 0.2978 ) }
    dend_8 { pt3dadd( 335.682, 373.371, 27.917, 0.305 ) }
    dend_8 { pt3dadd( 336.691, 372.835, 27.8475, 0.3058 ) }
    dend_8 { pt3dadd( 337.609, 372.16, 27.6038, 0.3632 ) }
    dend_8 { pt3dadd( 338.573, 371.551, 27.4279, 0.4092 ) }
    dend_8 { pt3dadd( 339.391, 370.783, 27.4003, 0.4116 ) }
    dend_8 { pt3dadd( 340.202, 369.978, 27.4226, 0.4068 ) }
    dend_8 { pt3dadd( 341.181, 369.407, 27.5585, 0.3532 ) }
    dend_8 { pt3dadd( 342.207, 369.043, 27.618, 0.3226 ) }
    dend_8 { pt3dadd( 342.997, 368.224, 27.7472, 0.305 ) }
    dend_8 { pt3dadd( 343.878, 367.494, 27.7689, 0.2854 ) }
    dend_8 { pt3dadd( 344.721, 366.725, 27.9402, 0.2558 ) }
    dend_8 { pt3dadd( 345.581, 365.974, 28.1187, 0.2288 ) }
    dend_8 { pt3dadd( 346.489, 365.285, 28.3175, 0.2288 ) }
    dend_8 { pt3dadd( 347.501, 364.76, 28.4679, 0.2328 ) }
    dend_8 { pt3dadd( 348.593, 364.428, 28.5894, 0.285 ) }
    dend_8 { pt3dadd( 349.55, 363.818, 28.7364, 0.3434 ) }
    dend_8 { pt3dadd( 350.342, 363.0, 28.9817, 0.3612 ) }
    dend_8 { pt3dadd( 351.256, 362.453, 29.2093, 0.3088 ) }
    dend_8 { pt3dadd( 352.246, 362.036, 29.4283, 0.2564 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_8 { pt3dadd( 352.885, 361.172, 29.748, 0.2288 ) }
    dend_8 { pt3dadd( 353.837, 360.572, 29.9043, 0.2288 ) }
    dend_8 { pt3dadd( 354.546, 359.677, 30.0765, 0.2288 ) }
    dend_8 { pt3dadd( 355.346, 358.88, 30.2327, 0.2288 ) }
    dend_8 { pt3dadd( 356.302, 358.257, 30.4035, 0.2288 ) }
    dend_8 { pt3dadd( 357.287, 357.684, 30.6561, 0.2288 ) }
    dend_8 { pt3dadd( 358.242, 357.076, 31.0114, 0.2288 ) }
    dend_8 { pt3dadd( 359.071, 356.311, 31.3681, 0.2288 ) }
    dend_8 { pt3dadd( 359.928, 355.575, 31.6848, 0.2288 ) }
    dend_8 { pt3dadd( 360.909, 355.006, 31.9654, 0.2288 ) }
    dend_8 { pt3dadd( 361.949, 354.543, 32.2272, 0.2288 ) }
    dend_8 { pt3dadd( 363.02, 354.154, 32.4786, 0.2288 ) }
    dend_8 { pt3dadd( 364.034, 353.644, 32.7074, 0.2288 ) }
    dend_8 { pt3dadd( 364.909, 352.924, 32.9566, 0.2288 ) }
    dend_8 { pt3dadd( 365.397, 351.923, 33.2046, 0.2288 ) }
    dend_8 { pt3dadd( 365.975, 350.968, 33.6736, 0.2288 ) }
    dend_8 { pt3dadd( 366.66, 350.066, 34.0805, 0.2288 ) }
    dend_8 { pt3dadd( 367.497, 349.316, 34.5593, 0.2288 ) }
    dend_8 { pt3dadd( 368.406, 348.669, 34.9322, 0.2288 ) }
    dend_8 { pt3dadd( 369.027, 347.752, 35.2752, 0.2338 ) }
    dend_8 { pt3dadd( 369.994, 347.152, 35.5407, 0.2594 ) }
    dend_8 { pt3dadd( 370.832, 346.401, 35.7874, 0.2858 ) }
    dend_8 { pt3dadd( 371.483, 345.475, 36.1172, 0.297 ) }
    dend_8 { pt3dadd( 372.355, 344.797, 36.5193, 0.2698 ) }
    dend_8 { pt3dadd( 373.419, 344.408, 36.906, 0.2426 ) }
    dend_8 { pt3dadd( 374.134, 343.695, 37.3629, 0.2288 ) }
    dend_8 { pt3dadd( 374.925, 343.07, 37.9131, 0.2288 ) }
    dend_8 { pt3dadd( 375.989, 342.692, 38.3558, 0.2288 ) }
    dend_8 { pt3dadd( 376.945, 342.096, 38.7086, 0.2288 ) }
    dend_8 { pt3dadd( 377.547, 341.155, 39.0082, 0.2288 ) }
    dend_8 { pt3dadd( 378.471, 340.545, 39.3033, 0.2288 ) }
    dend_8 { pt3dadd( 378.957, 339.529, 39.5581, 0.2288 ) }
    dend_8 { pt3dadd( 379.262, 338.55, 40.5286, 0.2288 ) }
    dend_8 { pt3dadd( 380.101, 338.009, 41.0628, 0.2288 ) }
    dend_8 { pt3dadd( 380.705, 337.177, 41.6976, 0.2288 ) }
    dend_8 { pt3dadd( 381.586, 336.484, 42.1089, 0.2288 ) }
    dend_8 { pt3dadd( 382.057, 335.448, 42.3464, 0.2288 ) }
    dend_8 { pt3dadd( 382.877, 334.666, 42.4684, 0.2288 ) }
    dend_8 { pt3dadd( 383.902, 334.182, 42.5342, 0.2288 ) }
    dend_8 { pt3dadd( 384.693, 333.355, 42.5586, 0.2288 ) }
    dend_8 { pt3dadd( 385.513, 332.557, 42.558, 0.2288 ) }
    dend_8 { pt3dadd( 386.322, 331.749, 42.5572, 0.2288 ) }
    dend_8 { pt3dadd( 387.158, 330.971, 42.5561, 0.2288 ) }
    dend_8 { pt3dadd( 388.123, 330.374, 42.5544, 0.2288 ) }
    dend_8 { pt3dadd( 389.008, 329.822, 42.5522, 0.2288 ) }
    dend_8 { pt3dadd( 389.267, 328.716, 42.5491, 0.2288 ) }
    dend_8 { pt3dadd( 389.334, 327.574, 42.5449, 0.2288 ) }
    dend_8 { pt3dadd( 389.415, 326.434, 42.5387, 0.2288 ) }
    dend_8 { pt3dadd( 389.459, 325.292, 42.5306, 0.2288 ) }
    dend_8 { pt3dadd( 389.532, 324.15, 42.5186, 0.2288 ) }
    dend_8 { pt3dadd( 389.578, 323.009, 42.5015, 0.2288 ) }
    dend_8 { pt3dadd( 389.781, 321.886, 42.4785, 0.2288 ) }
    dend_8 { pt3dadd( 389.99, 320.772, 42.4488, 0.2288 ) }
    dend_8 { pt3dadd( 389.99, 319.628, 42.3984, 0.2288 ) }
    dend_8 { pt3dadd( 389.99, 318.484, 42.32, 0.2288 ) }
    dend_8 { pt3dadd( 389.99, 317.341, 42.2447, 0.2288 ) }
    dend_8 { pt3dadd( 389.99, 316.197, 42.1672, 0.2288 ) }
    dend_8 { pt3dadd( 389.99, 315.054, 42.084, 0.2288 ) }
    dend_8 { pt3dadd( 389.99, 313.91, 41.9902, 0.2288 ) }
    dend_8 { pt3dadd( 389.986, 312.767, 41.8723, 0.2288 ) }
    dend_8 { pt3dadd( 389.812, 311.664, 41.6699, 0.2288 ) }
    dend_8 { pt3dadd( 389.344, 310.628, 41.3854, 0.2288 ) }
    dend_8 { pt3dadd( 389.002, 309.546, 41.146, 0.2288 ) }
    dend_8 { pt3dadd( 388.748, 308.434, 40.9259, 0.2544 ) }
    dend_8 { pt3dadd( 388.617, 307.309, 40.7232, 0.3316 ) }
    dend_8 { pt3dadd( 388.617, 306.173, 40.402, 0.4446 ) }
    dend_8 { pt3dadd( 388.617, 305.041, 40.0089, 0.501 ) }
    dend_8 { pt3dadd( 388.698, 303.909, 39.6878, 0.454 ) }
    dend_8 { pt3dadd( 388.731, 302.775, 39.3722, 0.3952 ) }
    dend_8 { pt3dadd( 388.731, 301.635, 39.102, 0.3442 ) }
    dend_8 { pt3dadd( 388.762, 300.496, 38.8668, 0.3304 ) }
    dend_8 { pt3dadd( 389.005, 299.387, 38.6758, 0.2922 ) }
    dend_8 { pt3dadd( 389.247, 298.272, 38.5417, 0.2604 ) }
    dend_8 { pt3dadd( 389.606, 297.19, 38.4516, 0.235 ) }
    dend_8 { pt3dadd( 390.393, 296.404, 38.3978, 0.2288 ) }
    dend_8 { pt3dadd( 391.05, 295.483, 38.3698, 0.2288 ) }
    dend_8 { pt3dadd( 391.504, 294.435, 38.3608, 0.2288 ) }
    dend_8 { pt3dadd( 391.844, 293.342, 38.36, 0.2288 ) }
    dend_8 { pt3dadd( 392.765, 292.719, 38.36, 0.2288 ) }
    dend_8 { pt3dadd( 393.418, 291.793, 38.36, 0.2288 ) }
    dend_8 { pt3dadd( 393.994, 290.805, 38.36, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 81/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 331.544, 377.952, 27.3655, 0.4322 ) }
    dend_7 { pt3dadd( 331.751, 377.617, 26.3332, 0.393 ) }
    dend_7 { pt3dadd( 331.964, 376.706, 25.1961, 0.356 ) }
    dend_7 { pt3dadd( 331.958, 375.643, 24.8406, 0.3814 ) }
    dend_7 { pt3dadd( 331.52, 374.65, 24.948, 0.361 ) }
    dend_7 { pt3dadd( 331.133, 373.601, 25.2172, 0.3276 ) }
    dend_7 { pt3dadd( 331.204, 372.649, 25.4169, 0.2796 ) }
    dend_7 { pt3dadd( 331.114, 371.636, 25.8768, 0.283 ) }
    dend_7 { pt3dadd( 330.676, 370.596, 26.1609, 0.3304 ) }
    dend_7 { pt3dadd( 330.568, 369.469, 26.514, 0.3304 ) }
    dend_7 { pt3dadd( 330.385, 368.343, 26.6973, 0.3096 ) }
    dend_7 { pt3dadd( 330.418, 367.211, 26.7296, 0.2658 ) }
    dend_7 { pt3dadd( 330.651, 366.093, 26.7705, 0.2542 ) }
    dend_7 { pt3dadd( 330.812, 364.962, 26.7982, 0.2714 ) }
    dend_7 { pt3dadd( 330.865, 363.821, 26.8714, 0.2978 ) }
    dend_7 { pt3dadd( 330.838, 362.68, 27.0635, 0.2834 ) }
    dend_7 { pt3dadd( 330.961, 361.554, 27.3691, 0.2468 ) }
    dend_7 { pt3dadd( 330.839, 360.421, 27.4018, 0.2288 ) }
    dend_7 { pt3dadd( 330.737, 359.284, 27.2976, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 330.444, 358.181, 27.2091, 0.2288 ) }
    dend_7 { pt3dadd( 330.387, 357.039, 27.0712, 0.2288 ) }
    dend_7 { pt3dadd( 330.363, 355.904, 26.7378, 0.2332 ) }
    dend_7 { pt3dadd( 330.271, 354.773, 26.4265, 0.2596 ) }
    dend_7 { pt3dadd( 330.078, 353.727, 26.0596, 0.293 ) }
    dend_7 { pt3dadd( 329.26, 352.97, 25.4824, 0.3304 ) }
    dend_7 { pt3dadd( 328.776, 351.978, 24.9421, 0.3522 ) }
    dend_7 { pt3dadd( 328.469, 350.888, 24.5558, 0.3328 ) }
    dend_7 { pt3dadd( 327.796, 350.024, 23.8603, 0.3252 ) }
    dend_7 { pt3dadd( 327.251, 349.048, 23.2949, 0.305 ) }
    dend_7 { pt3dadd( 326.864, 347.99, 22.8288, 0.305 ) }
    dend_7 { pt3dadd( 326.509, 346.92, 22.4167, 0.2974 ) }
    dend_7 { pt3dadd( 325.965, 345.928, 22.051, 0.2704 ) }
    dend_7 { pt3dadd( 325.494, 344.925, 21.6163, 0.2422 ) }
    dend_7 { pt3dadd( 325.368, 343.802, 21.2598, 0.2288 ) }
    dend_7 { pt3dadd( 325.26, 342.668, 21.0289, 0.2288 ) }
    dend_7 { pt3dadd( 324.994, 341.562, 20.85, 0.2288 ) }
    dend_7 { pt3dadd( 324.38, 340.632, 20.3969, 0.2288 ) }
    dend_7 { pt3dadd( 323.758, 339.713, 19.9927, 0.2288 ) }
    dend_7 { pt3dadd( 323.07, 338.943, 19.6866, 0.2288 ) }
    dend_7 { pt3dadd( 323.066, 337.803, 19.4545, 0.2426 ) }
    dend_7 { pt3dadd( 323.096, 336.663, 19.2864, 0.2934 ) }
    dend_7 { pt3dadd( 323.003, 335.579, 19.1741, 0.3482 ) }
    dend_7 { pt3dadd( 322.157, 334.89, 19.0683, 0.3524 ) }
    dend_7 { pt3dadd( 321.35, 334.147, 18.9032, 0.2962 ) }
    dend_7 { pt3dadd( 321.361, 333.1, 18.7375, 0.241 ) }
    dend_7 { pt3dadd( 321.352, 331.97, 18.5572, 0.2714 ) }
    dend_7 { pt3dadd( 321.25, 330.832, 18.4095, 0.3232 ) }
    dend_7 { pt3dadd( 320.744, 329.831, 18.2959, 0.3804 ) }
    dend_7 { pt3dadd( 320.892, 328.708, 17.9768, 0.3482 ) }
    dend_7 { pt3dadd( 320.877, 327.568, 17.7763, 0.32 ) }
    dend_7 { pt3dadd( 320.558, 326.507, 17.7281, 0.29 ) }
    dend_7 { pt3dadd( 319.941, 325.543, 17.6322, 0.2586 ) }
    dend_7 { pt3dadd( 319.659, 324.445, 17.5587, 0.2542 ) }
    dend_7 { pt3dadd( 319.236, 323.386, 17.5443, 0.2774 ) }
    dend_7 { pt3dadd( 318.829, 322.316, 17.4668, 0.3302 ) }
    dend_7 { pt3dadd( 318.256, 321.344, 17.1744, 0.4248 ) }
    dend_7 { pt3dadd( 317.881, 320.266, 17.0456, 0.5092 ) }
    dend_7 { pt3dadd( 317.371, 319.258, 16.9694, 0.5478 ) }
    dend_7 { pt3dadd( 316.743, 318.304, 16.8944, 0.5112 ) }
    dend_7 { pt3dadd( 316.631, 317.221, 16.8249, 0.483 ) }
    dend_7 { pt3dadd( 316.141, 316.245, 16.6992, 0.5054 ) }
    dend_7 { pt3dadd( 315.24, 315.563, 16.3894, 0.6176 ) }
    dend_7 { pt3dadd( 314.615, 314.705, 15.9201, 0.6406 ) }
    dend_7 { pt3dadd( 314.329, 313.605, 15.6671, 0.5618 ) }
    dend_7 { pt3dadd( 314.3, 312.511, 15.4284, 0.4578 ) }
    dend_7 { pt3dadd( 314.456, 311.383, 15.2688, 0.451 ) }
    dend_7 { pt3dadd( 314.049, 310.36, 15.2687, 0.5028 ) }
    dend_7 { pt3dadd( 313.914, 309.236, 15.3945, 0.483 ) }
    dend_7 { pt3dadd( 313.863, 308.103, 15.6279, 0.4668 ) }
    dend_7 { pt3dadd( 313.378, 307.084, 15.4686, 0.5324 ) }
    dend_7 { pt3dadd( 313.685, 306.02, 14.84, 0.5084 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 52/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 552.794, 326.943, 21.5211, 0.2796 ) }
    dend_19 { pt3dadd( 553.651, 327.451, 21.7981, 0.3482 ) }
    dend_19 { pt3dadd( 554.601, 328.076, 22.0802, 0.2876 ) }
    dend_19 { pt3dadd( 555.617, 328.582, 22.4166, 0.234 ) }
    dend_19 { pt3dadd( 556.644, 329.067, 22.7496, 0.2288 ) }
    dend_19 { pt3dadd( 557.671, 329.55, 23.099, 0.2518 ) }
    dend_19 { pt3dadd( 558.698, 330.033, 23.4611, 0.2772 ) }
    dend_19 { pt3dadd( 559.723, 330.515, 23.8425, 0.3026 ) }
    dend_19 { pt3dadd( 560.84, 330.647, 24.255, 0.2814 ) }
    dend_19 { pt3dadd( 561.971, 330.613, 24.6697, 0.2558 ) }
    dend_19 { pt3dadd( 563.102, 330.57, 25.0837, 0.2304 ) }
    dend_19 { pt3dadd( 564.232, 330.527, 25.4915, 0.2288 ) }
    dend_19 { pt3dadd( 565.277, 330.093, 25.8472, 0.2288 ) }
    dend_19 { pt3dadd( 566.127, 329.336, 26.1185, 0.254 ) }
    dend_19 { pt3dadd( 566.976, 328.575, 26.3492, 0.2792 ) }
    dend_19 { pt3dadd( 567.94, 327.968, 26.591, 0.305 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 68/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 552.794, 326.943, 21.5211, 0.2796 ) }
    dend_18 { pt3dadd( 553.035, 326.741, 22.2532, 0.2968 ) }
    dend_18 { pt3dadd( 553.253, 325.745, 22.0096, 0.3132 ) }
    dend_18 { pt3dadd( 553.381, 324.647, 21.289, 0.3234 ) }
    dend_18 { pt3dadd( 553.749, 323.693, 20.5862, 0.3536 ) }
    dend_18 { pt3dadd( 554.672, 323.073, 19.9253, 0.4308 ) }
    dend_18 { pt3dadd( 553.928, 322.243, 19.5989, 0.4576 ) }
    dend_18 { pt3dadd( 553.155, 321.41, 19.2784, 0.4836 ) }
    dend_18 { pt3dadd( 552.438, 320.572, 18.9672, 0.5086 ) }
    dend_18 { pt3dadd( 553.046, 319.604, 18.8774, 0.5132 ) }
    dend_18 { pt3dadd( 553.655, 318.635, 18.7876, 0.518 ) }
    dend_18 { pt3dadd( 554.262, 317.667, 18.6978, 0.5228 ) }
    dend_18 { pt3dadd( 554.871, 316.698, 18.6081, 0.5274 ) }
    dend_18 { pt3dadd( 555.478, 315.73, 18.5183, 0.5322 ) }
    dend_18 { pt3dadd( 556.087, 314.761, 18.4285, 0.5368 ) }
    dend_18 { pt3dadd( 556.694, 313.793, 18.3387, 0.5416 ) }
    dend_18 { pt3dadd( 557.303, 312.826, 18.2489, 0.5462 ) }
    dend_18 { pt3dadd( 557.911, 311.857, 18.1591, 0.551 ) }
    dend_18 { pt3dadd( 558.519, 310.889, 18.0693, 0.5556 ) }
    dend_18 { pt3dadd( 559.089, 309.9, 17.9615, 0.5548 ) }
    dend_18 { pt3dadd( 559.55, 308.855, 17.8017, 0.5378 ) }
    dend_18 { pt3dadd( 560.01, 307.81, 17.6419, 0.5208 ) }
    dend_18 { pt3dadd( 560.47, 306.765, 17.4821, 0.504 ) }
    dend_18 { pt3dadd( 560.931, 305.719, 17.3223, 0.487 ) }
    dend_18 { pt3dadd( 561.391, 304.675, 17.1625, 0.47 ) }
    dend_18 { pt3dadd( 561.869, 303.637, 17.0194, 0.4554 ) }
    dend_18 { pt3dadd( 562.396, 302.624, 16.9211, 0.447 ) }
    dend_18 { pt3dadd( 562.924, 301.609, 16.8227, 0.4386 ) }
    dend_18 { pt3dadd( 563.452, 300.594, 16.7244, 0.4304 ) }
    dend_18 { pt3dadd( 563.979, 299.58, 16.626, 0.422 ) }
    dend_18 { pt3dadd( 564.507, 298.566, 16.5277, 0.4136 ) }
    dend_18 { pt3dadd( 565.034, 297.551, 16.4293, 0.4054 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_18 { pt3dadd( 565.562, 296.537, 16.331, 0.397 ) }
    dend_18 { pt3dadd( 566.089, 295.523, 16.2327, 0.3888 ) }
    dend_18 { pt3dadd( 566.686, 294.591, 16.1198, 0.3768 ) }
    dend_18 { pt3dadd( 567.773, 294.247, 15.9045, 0.3392 ) }
    dend_18 { pt3dadd( 568.861, 293.903, 15.6892, 0.3016 ) }
    dend_18 { pt3dadd( 569.948, 293.558, 15.4738, 0.2642 ) }
    dend_18 { pt3dadd( 571.037, 293.22, 15.2584, 0.2288 ) }
    dend_18 { pt3dadd( 572.149, 292.967, 15.0426, 0.2288 ) }
    dend_18 { pt3dadd( 573.262, 292.714, 14.8269, 0.2288 ) }
    dend_18 { pt3dadd( 574.373, 292.456, 14.6452, 0.2288 ) }
    dend_18 { pt3dadd( 575.485, 292.186, 14.552, 0.2288 ) }
    dend_18 { pt3dadd( 576.595, 291.916, 14.4588, 0.2288 ) }
    dend_18 { pt3dadd( 577.706, 291.646, 14.3656, 0.2288 ) }
    dend_18 { pt3dadd( 578.818, 291.384, 14.2532, 0.2288 ) }
    dend_18 { pt3dadd( 579.94, 291.193, 13.9777, 0.2288 ) }
    dend_18 { pt3dadd( 581.063, 291.0, 13.7021, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 16/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 567.94, 327.968, 26.591, 0.305 ) }
    dend_21 { pt3dadd( 568.288, 328.423, 26.9211, 0.4068 ) }
    dend_21 { pt3dadd( 569.228, 329.075, 26.9942, 0.4068 ) }
    dend_21 { pt3dadd( 570.167, 329.726, 27.0673, 0.4068 ) }
    dend_21 { pt3dadd( 571.107, 330.378, 27.1404, 0.4068 ) }
    dend_21 { pt3dadd( 572.047, 331.03, 27.2135, 0.4068 ) }
    dend_21 { pt3dadd( 572.986, 331.681, 27.2866, 0.4068 ) }
    dend_21 { pt3dadd( 574.051, 332.055, 27.552, 0.4068 ) }
    dend_21 { pt3dadd( 575.174, 332.129, 27.7822, 0.389 ) }
    dend_21 { pt3dadd( 576.313, 332.059, 27.9608, 0.36 ) }
    dend_21 { pt3dadd( 577.452, 331.988, 28.1394, 0.3308 ) }
    dend_21 { pt3dadd( 578.266, 332.78, 28.2604, 0.3224 ) }
    dend_21 { pt3dadd( 579.075, 333.589, 28.3805, 0.3144 ) }
    dend_21 { pt3dadd( 579.882, 334.397, 28.5004, 0.3062 ) }
    dend_21 { pt3dadd( 580.872, 334.079, 28.5998, 0.3122 ) }
    dend_21 { pt3dadd( 581.893, 333.565, 28.6955, 0.3208 ) }
    dend_21 { pt3dadd( 582.915, 333.052, 28.791, 0.3292 ) }
    dend_21 { pt3dadd( 583.892, 333.51, 28.8355, 0.3422 ) }
    dend_21 { pt3dadd( 584.862, 334.116, 28.8719, 0.3558 ) }
    dend_21 { pt3dadd( 585.833, 334.721, 28.9086, 0.3692 ) }
    dend_21 { pt3dadd( 586.803, 335.326, 28.9453, 0.3828 ) }
    dend_21 { pt3dadd( 587.775, 335.931, 28.982, 0.3964 ) }
    dend_21 { pt3dadd( 588.752, 336.525, 29.0228, 0.4072 ) }
    dend_21 { pt3dadd( 589.753, 337.08, 29.078, 0.4094 ) }
    dend_21 { pt3dadd( 590.752, 337.634, 29.1332, 0.4114 ) }
    dend_21 { pt3dadd( 591.753, 338.188, 29.1883, 0.4136 ) }
    dend_21 { pt3dadd( 592.753, 338.743, 29.2435, 0.4156 ) }
    dend_21 { pt3dadd( 593.753, 339.298, 29.2984, 0.4176 ) }
    dend_21 { pt3dadd( 594.754, 339.853, 29.3535, 0.4198 ) }
    dend_21 { pt3dadd( 595.754, 340.408, 29.4087, 0.4218 ) }
    dend_21 { pt3dadd( 596.754, 340.962, 29.4638, 0.4238 ) }
    dend_21 { pt3dadd( 597.755, 341.516, 29.519, 0.426 ) }
    dend_21 { pt3dadd( 598.755, 342.071, 29.5742, 0.428 ) }
    dend_21 { pt3dadd( 599.756, 342.626, 29.6293, 0.4302 ) }
    dend_21 { pt3dadd( 600.756, 343.181, 29.6845, 0.4322 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 51/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 567.94, 327.968, 26.591, 0.305 ) }
    dend_20 { pt3dadd( 568.939, 327.539, 26.5494, 0.232 ) }
    dend_20 { pt3dadd( 569.977, 327.091, 26.9536, 0.253 ) }
    dend_20 { pt3dadd( 571.039, 326.672, 27.127, 0.2784 ) }
    dend_20 { pt3dadd( 572.103, 326.259, 27.294, 0.3038 ) }
    dend_20 { pt3dadd( 573.24, 326.265, 27.5257, 0.2802 ) }
    dend_20 { pt3dadd( 574.372, 326.389, 27.8107, 0.2546 ) }
    dend_20 { pt3dadd( 575.501, 326.513, 28.1308, 0.229 ) }
    dend_20 { pt3dadd( 576.63, 326.636, 28.4668, 0.2288 ) }
    dend_20 { pt3dadd( 577.76, 326.744, 28.7966, 0.2288 ) }
    dend_20 { pt3dadd( 578.896, 326.817, 29.0839, 0.2288 ) }
    dend_20 { pt3dadd( 580.033, 326.89, 29.3261, 0.2288 ) }
    dend_20 { pt3dadd( 581.173, 326.963, 29.5285, 0.2288 ) }
    dend_20 { pt3dadd( 582.312, 327.038, 29.6982, 0.2542 ) }
    dend_20 { pt3dadd( 583.45, 327.137, 29.8318, 0.2796 ) }
    dend_20 { pt3dadd( 584.584, 327.288, 29.9191, 0.305 ) }
    dend_20 { pt3dadd( 585.718, 327.436, 29.974, 0.2796 ) }
    dend_20 { pt3dadd( 586.744, 326.93, 30.0042, 0.2542 ) }
    dend_20 { pt3dadd( 587.769, 326.423, 30.018, 0.2542 ) }
    dend_20 { pt3dadd( 588.795, 325.918, 30.0216, 0.305 ) }
    dend_20 { pt3dadd( 589.821, 325.411, 30.0216, 0.356 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_24, dend_13, dend_4, dend_0, dend_26, dend_25, dend_15, dend_14, dend_10, dend_5, dend_3, dend_1, dend_28, dend_27, dend_23, dend_16, dend_12, dend_11, dend_9, dend_6, dend_2, dend_22, dend_17, dend_8, dend_7, dend_19, dend_18, dend_21, dend_20]}
    dend = new SectionList()
    dend_24 dend.append()
    dend_13 dend.append()
    dend_4 dend.append()
    dend_0 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_10 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_1 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_23 dend.append()
    dend_16 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_6 dend.append()
    dend_2 dend.append()
    dend_22 dend.append()
    dend_17 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_905, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_905 = new SectionList()
    soma_0 OneSecGrp_SectionRef_905.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_1, dend_1, dend_1, dend_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.9912658  // units: uF/cm2
    forsec axon cm = 2.9912658  // units: uF/cm2
    forsec dend cm = 2.9912658  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 113.55828  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 7.483146E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.05610174  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.7519914E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 3.9813942E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.14292671  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 6.209996E-7  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.0025519715  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.021235362  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 7.9694105E-4  // units: S cm-2
        e_pas_nml2 = -77.77003  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 5.9005234E-4  // units: S cm-2
        e_pas_nml2 = -77.77003  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 3.5492496E-7  // units: S cm-2
        e_pas_nml2 = -77.77003  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.9467876E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.003285403  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_477494382
    forsec soma {
        insert CaDynamics_477494382
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_10 nseg = 3
    dend_5 nseg = 3
    dend_3 nseg = 3
    dend_27 nseg = 3
    dend_16 nseg = 3
    dend_12 nseg = 3
    dend_9 nseg = 3
    dend_2 nseg = 3
    dend_17 nseg = 9
    dend_8 nseg = 7
    dend_7 nseg = 5
    dend_18 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_477494382


