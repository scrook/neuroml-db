// Cell: cSTUT189_L6_NBC_df448fd9b1_0_0
/*
{
  "id" : "cSTUT189_L6_NBC_df448fd9b1_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.47614, -8.41033, 1.41903, 3.98524", "-7.69742, -7.5116, 1.27705, 6.91431", "-6.9187, -6.61288, 1.13506, 10.5717", "-6.13998, -5.71415, 0.993075, 11.4108", "-5.36126, -4.81542, 0.851088, 12.9455", "-4.58254, -3.9167, 0.709102, 14.3822", "-3.80382, -3.01797, 0.567115, 17.7461", "-3.0251, -2.11925, 0.425128, 19.1269", "-2.24638, -1.22052, 0.283142, 19.8374", "-1.46766, -0.321792, 0.141155, 20.315", "-0.688937, 0.576934, -8.31366E-4, 20.3008", "0.0897826, 1.47566, -0.142818, 20.2673", "0.868503, 2.37439, -0.284805, 20.201", "1.64722, 3.27311, -0.426791, 19.9171", "2.42594, 4.17184, -0.568778, 19.4209", "3.20466, 5.07057, -0.710764, 18.1336", "3.98338, 5.96929, -0.852751, 16.68", "4.7621, 6.86802, -0.994738, 14.9484", "5.54082, 7.76675, -1.13672, 12.9099", "6.31954, 8.66547, -1.27871, 7.73682", "7.09826, 9.5642, -1.4207, 4.34608" ]
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-11.4502, -2.42522, 0.989666, 1.47", "-11.4502, -2.42522, 0.989666, 1.47", "-12.0861, -2.73233, 1.18899, 1.47", "-13.136, -3.25889, 1.56387, 1.11", "-14.1693, -3.80088, 2.09037, 1.11", "-15.37, -4.44796, 2.8084, 1.11", "-16.3728, -5.02378, 3.56103, 1.11", "-17.259, -5.57001, 4.37846, 1.4", "-17.4861, -5.72072, 4.65711, 1.4", "-18.5463, -6.42163, 6.25699, 1.4", "-18.5896, -6.45015, 6.33172, 1.4", "-19.4859, -7.01044, 8.07525, 1.4", "-19.5183, -7.02686, 8.1341, 1.4", "-20.6235, -7.54671, 9.80448, 1.4", "-21.4733, -7.96579, 10.878, 1.4", "-21.5123, -7.98723, 10.917, 1.4", "-22.7014, -8.69893, 11.9462, 0.88", "-23.439, -9.16845, 12.4791, 0.88", "-24.3172, -9.77337, 13.0926, 0.74", "-25.399, -10.5617, 13.7235, 0.74", "-26.3294, -11.2317, 14.1839, 0.74", "-26.4058, -11.2839, 14.2167, 0.74", "-27.2604, -11.8115, 14.5205, 0.74", "-28.5448, -12.5618, 14.9704, 1.11", "-30.1094, -13.4115, 15.4662, 1.11", "-31.6657, -14.2512, 15.8556, 1.11", "-32.5274, -14.7518, 16.0273, 1.11", "-33.3902, -15.3274, 16.192, 1.47", "-33.9626, -15.7706, 16.287, 1.47", "-35.0473, -16.7529, 16.4569, 0.81", "-35.9981, -17.781, 16.7126, 0.81", "-36.9501, -18.8851, 17.0332, 0.81", "-37.9029, -19.987, 17.3673, 1.11", "-38.3783, -20.5287, 17.5373, 1.47", "-38.9987, -21.1835, 17.7714, 1.47", "-40.3121, -22.5022, 18.2786, 0.74", "-41.504, -23.6438, 18.7084, 0.74", "-42.5679, -24.6288, 19.0128, 0.74", "-42.6171, -24.6747, 19.0254, 0.74", "-43.3907, -25.429, 19.2112, 1.03", "-44.3732, -26.4242, 19.4316, 1.03", "-45.3046, -27.4288, 19.6031, 1.18", "-46.224, -28.4882, 19.7753, 1.18", "-47.445, -29.9496, 20.0127, 0.88", "-48.7134, -31.4891, 20.2456, 0.88", "-48.7563, -31.5417, 20.2524, 0.88", "-50.0988, -33.1835, 20.4544, 0.88", "-50.1424, -33.2356, 20.4603, 0.88", "-51.0331, -34.2697, 20.5605, 1.62", "-51.6396, -34.9556, 20.6114, 1.99", "-52.6442, -36.0933, 20.6899, 1.99", "-54.3169, -38.0476, 20.9053, 2.21", "-55.7533, -39.7367, 21.197, 2.21", "-56.5602, -40.6758, 21.4483, 2.5", "-57.0908, -41.2811, 21.6575, 2.5", "-58.277, -42.6148, 22.2193, 1.84", "-59.7273, -44.2206, 23.031, 1.47", "-60.8226, -45.4549, 23.7513, 1.25", "-62.0695, -46.8854, 24.66, 0.29", "-62.6478, -47.6055, 25.1332, 0.29", "-63.3484, -48.528, 25.7495, 0.29", "-63.405, -48.6044, 25.806, 0.29", "-63.9268, -49.354, 26.3526, 0.29", "-63.991, -49.4605, 26.4299, 0.29", "-64.7235, -50.8046, 27.4223, 0.29", "-64.7515, -50.8502, 27.4651, 0.29", "-65.5978, -51.9515, 28.6298, 0.29", "-65.812, -52.1843, 28.8825, 0.74", "-66.0403, -52.4, 29.1106, 1.03", "-66.3236, -52.6624, 29.3738, 1.03", "-67.05, -53.3528, 29.9389, 0.66", "-67.6363, -53.9857, 30.366, 0.66", "-68.2117, -54.6904, 30.7136, 0.88", "-68.6714, -55.2559, 30.9621, 0.88", "-69.427, -56.1767, 31.3527, 0.52", "-70.2936, -57.2049, 31.7558, 0.52", "-70.3418, -57.2629, 31.7757, 0.52", "-71.2251, -58.3189, 32.1123, 0.81", "-71.7417, -58.9185, 32.2693, 0.81", "-72.736, -60.0654, 32.5371, 0.29", "-73.4569, -60.8975, 32.6898, 0.37", "-73.8668, -61.3844, 32.7835, 1.03", "-74.5666, -62.3071, 32.9493, 0.22", "-75.5001, -63.6061, 33.1834, 0.22", "-75.5888, -63.7386, 33.2053, 0.59", "-76.1743, -64.6694, 33.3235, 0.59", "-76.7025, -65.5343, 33.4325, 0.44", "-77.3422, -66.548, 33.5517, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "9.20986, 1.27978, 4.05967, 1.84", "9.57371, 1.14935, 4.13827, 1.62", "11.2253, 0.557281, 4.4951, 1.62", "11.2998, 0.530578, 4.51119, 1.62", "13.2833, -0.180439, 4.9397, 1.62", "13.3685, -0.210958, 4.95809, 1.62", "13.8262, -0.375037, 5.05698, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.70014, 9.32353, 5.17967, 2.8", "-1.70014, 9.32353, 5.17967, 2.8", "-1.30395, 10.5342, 5.37306, 1.84", "-0.906145, 11.6521, 5.57657, 1.84", "-0.394833, 12.8968, 5.80115, 1.84", "-0.36254, 12.9659, 5.81307, 1.84", "0.398294, 14.3967, 6.04513, 1.84", "1.43737, 16.0587, 6.29915, 1.84", "1.51767, 16.1668, 6.31485, 1.84", "2.59056, 17.5071, 6.47983, 2.28", "3.29984, 18.4014, 6.64429, 2.28", "4.08216, 19.4459, 6.86705, 1.62", "4.7222, 20.3856, 7.12073, 1.62", "5.58241, 21.7702, 7.53712, 1.62", "6.22724, 22.9545, 7.99302, 1.62", "7.13663, 24.8157, 8.79938, 1.84", "7.63672, 25.9874, 9.35765, 2.06", "8.28098, 27.7941, 10.3085, 2.06", "8.29522, 27.8427, 10.3369, 2.06", "8.65204, 29.4686, 11.4032, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-11.9802, -2.93222, 0.929666, 1.92", "-11.9802, -2.93222, 0.929666, 1.92", "-12.8078, -2.94574, 0.727663, 1.55", "-14.0397, -2.96208, 0.409569, 1.55", "-15.3267, -2.97224, 0.0802553, 1.4", "-16.5328, -2.98018, -0.262352, 1.4", "-16.5877, -2.98063, -0.280025, 1.4", "-17.7309, -2.98245, -0.686492, 1.4", "-17.8304, -2.98126, -0.729173, 1.4", "-18.4994, -2.96326, -1.05738, 1.33", "-19.5437, -2.91693, -1.62424, 1.33", "-20.2562, -2.87031, -2.04558, 1.33", "-20.6022, -2.84314, -2.25939, 1.4", "-21.5661, -2.7499, -2.85784, 1.4", "-21.6154, -2.74455, -2.88743, 1.4", "-22.3069, -2.66047, -3.28182, 1.25", "-23.2486, -2.5317, -3.73727, 1.11", "-23.3146, -2.52257, -3.7633, 1.11", "-23.975, -2.44034, -3.98445, 1.11", "-24.4886, -2.37639, -4.11628, 0.88", "-24.7963, -2.34116, -4.18655, 0.74", "-24.9522, -2.32902, -4.21444, 0.66", "-25.5443, -2.3204, -4.27069, 0.66", "-25.6517, -2.32813, -4.28168, 0.66", "-26.1014, -2.41314, -4.32982, 0.88", "-26.6128, -2.56416, -4.38012, 0.88", "-26.9692, -2.6894, -4.41558, 0.96", "-27.3559, -2.83242, -4.45026, 0.96", "-27.9373, -3.04272, -4.49398, 0.96", "-28.4774, -3.21797, -4.55729, 0.37", "-29.0215, -3.36122, -4.63357, 0.37", "-29.361, -3.41828, -4.6937, 1.11", "-30.1478, -3.45736, -4.84948, 1.77", "-30.7273, -3.41886, -4.97182, 2.06", "-31.475, -3.28641, -5.13571, 2.06", "-32.06, -3.12312, -5.26068, 1.69", "-32.4803, -2.97373, -5.34345, 1.33", "-33.0557, -2.74653, -5.43844, 1.11", "-33.3983, -2.59095, -5.48297, 1.03", "-33.6766, -2.45758, -5.50355, 1.03", "-34.1199, -2.24173, -5.53837, 0.81", "-34.4217, -2.09471, -5.58306, 0.81", "-34.7508, -1.93623, -5.64767, 0.29", "-35.213, -1.71207, -5.75458, 0.29", "-35.4848, -1.58189, -5.82444, 1.03", "-36.3296, -1.17933, -6.06634, 1.33", "-36.7216, -0.992121, -6.19353, 1.62", "-37.2871, -0.713524, -6.39746, 1.62", "-37.4979, -0.607051, -6.48161, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "2.58986, 10.513, -3.07033, 4.86", "2.58986, 10.513, -3.07033, 4.86", "3.26564, 11.8436, -3.07033, 3.83", "3.7523, 12.655, -3.07033, 3.83", "4.47896, 13.7454, -3.07033, 3.83", "5.57264, 15.2361, -3.07033, 3.83", "5.90304, 15.654, -3.07033, 3.83", "6.69409, 16.5821, -3.07033, 2.36", "7.26873, 17.1544, -3.07033, 2.06", "7.75646, 17.5719, -3.07033, 1.84", "8.31192, 17.9358, -3.07033, 1.62", "8.62321, 18.0871, -3.07033, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.28986, -8.24597, -0.0103344, 2.5", "2.28986, -8.24597, -0.0103344, 2.5", "2.2628, -9.65376, -0.0103344, 2.21", "2.26266, -10.3573, -0.0103344, 1.62", "2.26786, -11.0435, -0.0081632, 1.62", "2.27724, -12.0567, -0.0030656, 1.84", "2.29173, -13.0267, -0.0064178, 1.92", "2.30696, -13.6263, -0.0120519, 2.06", "2.34878, -14.9392, 0.006901, 2.06", "2.35111, -14.991, 0.0085883, 2.06", "2.41419, -16.1299, 0.0610177, 2.06", "2.50699, -17.3868, 0.132776, 2.06", "2.59781, -18.5179, 0.230108, 1.84", "2.68454, -19.5637, 0.344255, 1.55", "2.75859, -20.4134, 0.454365, 1.4", "2.86722, -21.4781, 0.622086, 1.4", "2.88624, -21.6372, 0.652954, 1.4", "3.03006, -22.6587, 0.890411, 1.25", "3.03898, -22.7159, 0.903638, 1.25", "3.17822, -23.5118, 1.06975, 1.25", "3.42226, -24.9143, 1.34105, 1.25", "3.43127, -24.9647, 1.3498, 1.25", "3.80894, -27.1263, 1.67162, 1.25", "3.94574, -27.9319, 1.76977, 1.62", "4.14134, -29.0996, 1.89447, 1.62", "4.38312, -30.5905, 2.0255, 1.62", "4.48816, -31.2941, 2.06979, 1.62", "4.60189, -32.215, 2.11463, 1.69", "4.65022, -32.8077, 2.12931, 1.92", "4.68672, -33.6511, 2.14896, 1.92", "4.68781, -34.3564, 2.16332, 1.4", "4.6706, -34.9518, 2.17572, 1.33", "4.61675, -36.1025, 2.197, 1.33", "4.56099, -36.9743, 2.21037, 1.47", "4.52275, -37.7368, 2.21812, 1.55", "4.51628, -37.9077, 2.21923, 1.55", "4.50942, -38.3964, 2.22079, 1.33", "4.52591, -39.3719, 2.22079, 1.33", "4.52856, -39.4237, 2.22079, 1.33", "4.84892, -43.2558, 2.27805, 1.18", "4.93037, -43.9565, 2.29616, 1.33", "5.06935, -44.9299, 2.34315, 1.62", "5.22436, -45.8588, 2.40552, 1.77", "5.40413, -46.7672, 2.48414, 1.77", "5.64294, -47.7524, 2.58791, 1.62", "5.95395, -48.7428, 2.7514, 1.62", "6.26705, -49.6854, 2.92696, 1.47", "6.28336, -49.7339, 2.93643, 1.4", "6.54429, -50.5343, 3.08623, 1.55", "6.83553, -51.5333, 3.2486, 1.47", "7.03456, -52.3326, 3.34799, 1.4", "7.22277, -53.2017, 3.42216, 1.25", "7.40962, -54.1229, 3.4645, 1.25", "7.57835, -55.053, 3.48701, 1.69", "7.79968, -56.3806, 3.49675, 1.92", "7.97671, -57.5003, 3.48504, 1.92", "8.13522, -58.4733, 3.45774, 1.55", "8.32945, -59.6592, 3.42455, 1.47", "8.69708, -61.7972, 3.34605, 1.47", "8.70675, -61.8481, 3.34479, 1.47", "8.84409, -62.5064, 3.33716, 1.11", "9.34109, -64.7289, 3.35033, 1.11", "9.48256, -65.3266, 3.38793, 1.33", "9.67652, -66.0645, 3.46872, 1.47", "9.96565, -66.9878, 3.61324, 1.47", "10.3161, -68.0028, 3.79885, 1.47", "10.3374, -68.0568, 3.81185, 1.47", "10.8205, -69.1311, 4.12975, 1.33", "11.2146, -69.9627, 4.38784, 1.4", "11.5858, -70.7267, 4.60967, 1.62", "11.8377, -71.2457, 4.73725, 1.62", "12.2803, -72.1904, 4.93404, 1.03", "12.6226, -73.0092, 5.07345, 0.96", "12.6399, -73.0576, 5.08059, 0.96", "13.0733, -74.4704, 5.31396, 0.96", "13.0883, -74.527, 5.32364, 0.96", "13.3474, -75.623, 5.54208, 0.96", "13.5925, -76.8044, 5.79351, 0.74", "13.8245, -78.0792, 6.09242, 0.74", "13.8974, -78.6637, 6.22463, 0.96", "13.9264, -79.091, 6.31351, 0.96", "13.978, -79.9733, 6.46735, 0.74", "14.0042, -80.5105, 6.54494, 0.52", "14.0445, -81.4749, 6.64517, 0.52", "14.124, -83.2441, 6.77146, 0.52", "14.2035, -84.8114, 6.85757, 0.52", "14.2796, -85.9749, 6.88774, 0.52", "14.3156, -86.4399, 6.88337, 0.74", "14.3898, -87.1421, 6.87155, 0.74", "14.4864, -87.8475, 6.84136, 0.66", "14.5878, -88.4302, 6.79915, 1.25", "14.7034, -89.1416, 6.72866, 1.62", "14.7852, -89.7326, 6.66283, 1.62", "14.8625, -90.3545, 6.59247, 1.47", "14.9855, -91.4375, 6.47577, 1.03", "15.0448, -92.0269, 6.41975, 1.03", "15.0746, -92.4063, 6.39548, 1.03", "15.1094, -93.0768, 6.37344, 1.03", "15.128, -93.7303, 6.36828, 0.66", "15.1294, -94.65, 6.38462, 0.66", "15.1263, -95.407, 6.39649, 1.03", "15.1204, -96.023, 6.38881, 1.25", "15.1197, -96.0748, 6.38683, 1.25", "15.1084, -96.8836, 6.33135, 1.25", "15.1086, -96.9278, 6.32678, 1.25", "15.1463, -97.915, 6.16429, 0.88", "15.1851, -98.2575, 6.09616, 0.66", "15.194, -98.3076, 6.08594, 0.66", "15.3452, -98.9428, 5.97427, 0.52", "15.3658, -99.0126, 5.96403, 0.52", "15.5488, -99.5466, 5.9289, 0.37", "15.907, -100.516, 5.9098, 0.37", "16.1277, -101.079, 5.90134, 0.96", "16.3621, -101.658, 5.89719, 1.77", "16.5438, -102.082, 5.90098, 1.99", "16.8397, -102.76, 5.9249, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.78014, -8.95772, 2.67967, 1.18", "-6.78014, -8.95772, 2.67967, 1.18", "-6.77496, -9.71715, 2.98392, 1.18", "-6.77313, -9.77072, 3.00514, 1.18", "-6.66509, -10.8127, 3.37511, 1.03", "-6.51375, -11.8545, 3.89382, 1.03", "-6.35265, -12.945, 4.53309, 1.03", "-6.19234, -13.9801, 5.23437, 1.03", "-6.18489, -14.0253, 5.27, 1.03", "-6.02333, -15.1438, 6.36989, 1.03", "-5.93485, -16.5696, 8.31951, 1.03", "-6.00859, -16.8793, 9.0393, 1.03", "-6.10358, -16.9408, 9.39664, 1.03", "-6.22643, -16.9595, 9.68225, 1.03", "-6.82743, -17.0354, 10.7103, 1.03", "-7.33406, -17.1177, 11.3684, 1.03", "-7.37476, -17.136, 11.4067, 1.03", "-8.22502, -17.6433, 12.192, 1.03", "-8.52749, -17.8693, 12.4762, 1.25", "-8.94541, -18.2385, 12.8881, 1.25", "-9.7661, -19.0884, 13.6645, 1.25", "-10.4616, -19.9114, 14.4692, 1.25", "-10.4896, -19.9485, 14.5044, 1.25", "-11.1515, -20.9475, 15.4276, 1.25", "-11.5238, -21.551, 16.0309, 1.4", "-11.9251, -22.2005, 16.6976, 1.4", "-12.7025, -23.4723, 18.0089, 1.18", "-12.8871, -23.746, 18.3046, 1.18", "-13.3689, -24.3432, 18.9499, 0.88", "-14.1454, -25.1305, 19.8344, 0.88", "-14.7638, -25.662, 20.4518, 0.88", "-15.2648, -26.0145, 20.8863, 0.88", "-16.0233, -26.4323, 21.3674, 1.18", "-16.675, -26.7069, 21.7755, 1.4", "-17.429, -26.9155, 22.2094, 1.4", "-17.4727, -26.9219, 22.234, 1.4", "-17.9736, -26.9234, 22.5417, 0.96", "-18.6223, -26.8046, 23.0081, 0.96", "-19.3632, -26.4666, 23.9092, 0.81", "-19.5655, -26.3069, 24.2685, 0.81", "-19.5898, -26.2798, 24.3248, 0.81", "-19.7551, -26.0192, 24.8789, 0.66", "-19.8856, -25.5355, 25.9844, 1.18", "-19.7596, -25.1866, 27.4173, 0.96", "-19.7409, -25.204, 27.4795, 0.96", "-19.6316, -25.4309, 27.843, 1.03", "-19.6205, -25.4731, 27.8934, 1.03", "-19.5349, -26.0954, 28.4771, 1.03", "-19.4801, -27.4392, 29.4686, 0.88", "-19.4921, -28.3345, 30.0476, 0.66", "-19.493, -28.9064, 30.4652, 0.66", "-19.4785, -29.4753, 30.9443, 0.52", "-19.4315, -29.73, 31.187, 0.52", "-19.404, -29.7668, 31.2355, 0.52", "-18.9951, -29.8304, 31.4201, 0.52", "-17.9361, -29.9427, 31.7652, 0.37", "-17.1939, -30.0024, 31.9833, 0.37", "-15.9565, -30.0719, 32.2854, 0.37", "-15.8909, -30.0742, 32.3007, 0.37", "-15.5046, -30.0901, 32.3851, 0.37", "-15.3806, -30.0996, 32.4071, 0.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.64014, -10.0107, 1.67967, 2.5", "-5.64014, -10.0107, 1.67967, 2.5", "-5.53106, -11.3702, 1.59303, 2.21", "-5.39608, -13.3177, 1.46757, 1.99", "-5.29142, -15.1133, 1.35604, 2.06", "-5.168, -17.3058, 1.22461, 2.21", "-5.10703, -18.3891, 1.15967, 2.21", "-5.05895, -19.4007, 1.09739, 2.28", "-5.02278, -20.6975, 1.01289, 2.5", "-5.023, -21.8817, 0.935697, 2.5", "-5.03191, -22.4164, 0.910671, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-9.68014, 5.18953, -0.320334, 2.21", "-9.68014, 5.18953, -0.320334, 2.21", "-10.8731, 5.73515, -0.171396, 1.55", "-11.9587, 6.25817, 0.0324314, 1.4", "-13.1304, 6.84632, 0.270764, 1.4", "-14.3085, 7.46408, 0.49597, 1.4", "-15.1653, 7.9233, 0.648419, 1.4", "-15.2222, 7.95379, 0.657969, 1.4", "-16.5683, 8.65907, 0.866372, 1.18", "-18.5068, 9.61729, 1.12115, 1.18", "-20.4155, 10.5406, 1.33914, 1.18", "-21.4115, 11.0114, 1.44918, 1.55", "-22.347, 11.4432, 1.5407, 1.99", "-23.7629, 12.0698, 1.6418, 1.99", "-24.9902, 12.5642, 1.65028, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.09826, 9.5642, -1.4207, 1.05461", "16.9209, 20.9006, -1.4207, 1.05461", "26.7436, 32.2371, -1.4207, 1.05461" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-77.3422, -66.548, 33.5517, 0.96", "-76.7598, -67.0806, 33.682, 0.96", "-76.1357, -67.6515, 33.8217, 0.96", "-76.0583, -67.7222, 33.8391, 0.96", "-75.3291, -68.3892, 34.0023, 0.96", "-74.1911, -69.4302, 34.2571, 0.37", "-73.7244, -69.8569, 34.3615, 0.37", "-64.8058, -75.8208, 35.3177, 0.37", "-55.299, -80.9123, 35.8223, 0.37", "-45.8154, -86.0695, 35.7431, 0.37", "-35.6025, -89.146, 33.808, 0.37", "-25.5409, -91.6219, 30.5909, 0.37" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-77.3422, -66.548, 33.5517, 0.29", "-78.3077, -67.4562, 33.7872, 0.29", "-79.7231, -68.7875, 34.1325, 0.29", "-86.527, -76.238, 36.6352, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "13.8262, -0.375037, 5.05698, 1.62", "14.6238, -0.206986, 5.23202, 1.62", "14.9394, -0.531011, 6.39358, 1.62", "15.3317, -1.0521, 8.14387, 1.47", "15.3495, -1.07336, 8.21039, 1.47", "15.618, -1.32694, 8.98625, 1.47", "15.6432, -1.34818, 9.05037, 1.47", "18.7522, -4.09625, 16.8971, 1.18", "18.787, -4.1296, 16.9869, 1.18", "19.2985, -4.60712, 18.1875, 1.18", "19.9803, -5.1661, 19.517, 1.18", "20.0185, -5.19091, 19.5728, 1.18", "21.1229, -5.55562, 20.4377, 1.18", "21.2749, -5.561, 20.4652, 1.18", "22.7528, -5.58968, 20.809, 1.18", "22.9204, -5.58987, 20.8597, 1.18", "24.6342, -5.59423, 21.4474, 1.18", "25.4679, -5.59358, 21.7481, 1.03", "27.6151, -5.59585, 22.6304, 1.03", "27.6816, -5.59594, 22.6583, 1.03", "28.6955, -5.64037, 23.1274, 1.03", "29.3166, -5.68925, 23.4117, 1.55", "29.3822, -5.69727, 23.4405, 1.55", "30.922, -5.97535, 24.2273, 1.55", "31.754, -6.1588, 24.7324, 1.55", "33.7218, -6.62346, 25.9519, 1.55", "34.3158, -6.76831, 26.3484, 1.55", "34.485, -6.80986, 26.468, 1.55", "35.8825, -7.12539, 27.5308, 1.47", "37.4255, -7.43396, 28.6257, 1.25", "38.443, -7.59921, 29.3178, 0.88", "40.1139, -7.63986, 30.0631, 0.88", "40.1557, -7.61871, 30.0228, 0.88", "41.0549, -7.00595, 28.8217, 0.74", "44.4049, -4.18574, 23.3372, 0.66", "44.5449, -4.04122, 23.0568, 0.66", "44.7767, -3.74431, 22.4534, 0.37", "44.9491, -3.4877, 21.8925, 0.37", "44.969, -3.45603, 21.8191, 0.37", "45.021, -3.35427, 21.5432, 0.52", "45.5036, -2.86545, 21.7689, 0.74" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "13.8262, -0.375037, 5.05698, 0.29", "13.8691, -1.07219, 4.97782, 0.29", "13.8811, -1.81068, 4.89462, 0.29", "13.8734, -1.90566, 4.8841, 0.29", "13.786, -2.97119, 4.76611, 0.29", "13.7792, -3.0543, 4.75691, 0.29", "13.7232, -3.73691, 4.68132, 0.29", "13.7152, -3.81993, 4.67215, 0.29", "13.5096, -4.6994, 4.5774, 0.29", "14.783, -16.618, 4.73439, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "8.65204, 29.4686, 11.4032, 1.03", "8.41639, 31.4866, 11.8636, 1.03", "8.24119, 33.179, 12.1897, 1.03", "8.11647, 34.6056, 12.501, 1.03", "8.1038, 34.7653, 12.5378, 1.03", "7.93168, 37.4292, 13.077, 1.03", "7.86199, 38.687, 13.3075, 0.74", "7.8236, 39.9442, 13.7002, 0.59", "7.83521, 41.1625, 14.2784, 0.59", "7.83776, 41.2339, 14.3198, 0.59", "7.91495, 42.2581, 15.0374, 1.18", "7.9228, 42.3117, 15.0834, 1.18", "8.55023, 46.2521, 18.5614, 0.74", "8.67395, 47.0476, 19.2301, 1.18", "8.81859, 47.991, 19.969, 1.18", "8.83218, 48.0654, 20.0259, 1.18", "9.02906, 49.0533, 20.7729, 0.88", "9.21044, 49.9339, 21.3624, 0.66", "9.4962, 51.1242, 21.9039, 0.66", "9.5289, 51.2461, 21.9681, 0.66", "9.89398, 52.6004, 22.7543, 0.66", "9.91845, 52.7109, 22.8312, 0.66", "10.0591, 53.711, 23.6189, 0.96", "10.0848, 54.2038, 23.9923, 1.11", "10.0923, 55.0296, 24.4552, 1.11", "10.0882, 55.1981, 24.5294, 1.11", "10.0003, 56.8003, 25.0504, 0.96", "9.93755, 57.9595, 25.4036, 0.88", "9.84388, 59.4419, 25.8028, 0.88", "9.65412, 61.6978, 26.3929, 0.88", "9.63275, 61.9389, 26.4511, 0.88", "9.52781, 63.1999, 26.7059, 0.88", "9.41478, 64.5474, 26.8963, 0.59", "9.32578, 65.5079, 27.0248, 0.59", "9.27037, 66.0253, 27.0901, 1.18", "9.18031, 66.7948, 27.1648, 1.18", "9.05423, 67.9002, 27.222, 1.18", "8.83935, 69.7839, 27.2407, 0.66", "8.61124, 71.9987, 27.1651, 0.66", "8.59442, 72.1815, 27.1643, 0.66", "8.40124, 74.4125, 27.2056, 0.66", "8.29881, 75.6409, 27.2525, 0.66", "8.29288, 75.7225, 27.2581, 0.66", "8.21207, 77.0785, 27.3939, 0.66", "8.09464, 79.2512, 27.6791, 1.18", "8.07379, 79.7608, 27.7575, 1.69", "8.0709, 79.9221, 27.7884, 1.69", "8.07434, 81.5593, 28.0879, 1.69", "8.08282, 82.326, 28.2229, 1.69", "8.10686, 83.2443, 28.3648, 0.22", "8.11578, 83.4371, 28.3855, 0.37", "8.13502, 83.747, 28.419, 0.37", "8.29857, 86.2092, 28.7353, 0.37", "8.35329, 86.9849, 28.8469, 0.74", "8.40168, 87.6776, 28.9547, 0.74", "8.44359, 88.3662, 29.0636, 0.37", "8.47504, 89.5467, 29.3187, 0.37", "8.47449, 90.3917, 29.5264, 0.29", "8.46989, 90.9834, 29.6763, 0.29", "8.46559, 91.7326, 29.8478, 0.81", "8.46359, 92.7396, 30.0767, 1.03", "8.52349, 95.0286, 30.5672, 1.03", "8.64549, 96.7754, 30.9746, 1.47", "8.80972, 98.3691, 31.3873, 3.02", "8.95988, 99.5225, 31.7194, 3.02", "8.97404, 99.6113, 31.7468, 3.02", "9.22808, 100.917, 32.1699, 2.65", "9.58713, 102.45, 32.6461, 2.65", "9.96855, 104.243, 33.278, 0.52", "9.98125, 104.32, 33.3051, 0.52", "9.99835, 104.491, 33.3599, 0.66", "10.0025, 104.57, 33.3832, 0.66", "9.93295, 105.909, 33.6921, 0.66", "9.75669, 107.124, 33.7338, 0.66", "9.66805, 107.607, 33.6836, 0.59", "9.60589, 107.911, 33.6522, 0.59" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "8.65204, 29.4686, 11.4032, 1.18", "8.58574, 30.0913, 12.627, 1.18", "8.40422, 31.4352, 14.9798, 0.88", "8.33154, 31.9503, 15.8052, 0.88", "8.32194, 32.0283, 15.9151, 0.88", "8.22271, 32.9615, 17.0896, 0.88", "8.2192, 33.0131, 17.1471, 0.88", "8.21379, 33.7106, 17.6726, 0.88", "8.2315, 33.9451, 17.765, 0.88", "8.34554, 34.6648, 17.986, 0.88", "8.47858, 35.0297, 18.1002, 0.88", "8.79723, 35.6156, 18.2566, 0.88", "8.8375, 35.6785, 18.2759, 0.88", "9.17256, 36.1402, 18.4188, 0.88", "9.21782, 36.1998, 18.4383, 0.88", "10.6537, 37.9892, 19.032, 1.33", "11.221, 38.6801, 19.2592, 1.33", "11.268, 38.7351, 19.2871, 1.33", "11.8561, 39.4146, 19.7085, 1.47", "11.8985, 39.469, 19.7438, 1.47", "12.2014, 39.887, 20.014, 1.47", "12.2438, 39.9475, 20.0628, 1.47", "13.4772, 41.6816, 21.5649, 1.47", "13.5514, 41.7867, 21.6512, 1.47", "14.3589, 42.954, 22.5907, 1.47", "14.4108, 43.0291, 22.6512, 1.47", "15.4545, 44.5983, 23.9127, 1.47", "16.0353, 45.4891, 24.5996, 0.74", "16.4421, 46.1722, 25.0608, 0.74", "16.5124, 46.2929, 25.15, 1.18", "17.2216, 47.5533, 26.1752, 1.18", "17.5281, 48.2529, 26.7243, 0.96", "17.5395, 48.3057, 26.7622, 0.96", "17.594, 49.1075, 27.5679, 0.96", "17.5826, 49.7938, 28.4628, 0.96", "17.5823, 49.9008, 28.6115, 0.96", "17.6065, 50.4791, 29.4176, 1.33", "17.6872, 51.1048, 30.3203, 1.33", "18.1277, 52.7298, 32.6108, 1.33", "18.5582, 53.7302, 34.0405, 0.52", "18.8811, 54.3327, 34.7519, 0.52", "19.3196, 55.0282, 35.4251, 0.52", "19.3579, 55.0833, 35.4638, 0.52", "19.9836, 56.0639, 35.8805, 0.52", "20.0139, 56.1332, 35.8942, 0.52", "20.3599, 57.6052, 36.2012, 0.52", "20.3493, 58.3299, 36.4504, 1.77", "20.1755, 59.1243, 36.8095, 1.77", "19.9437, 59.6871, 37.1183, 1.77", "19.3224, 60.6191, 37.7506, 0.66", "18.8804, 61.0712, 38.1885, 0.66", "18.3298, 61.4034, 38.707, 0.66", "18.194, 61.4597, 38.8184, 0.66", "17.7324, 61.6156, 39.156, 0.52", "17.6079, 61.6776, 39.2481, 0.52", "16.5292, 62.387, 40.0247, 0.52", "16.4159, 62.473, 40.1107, 0.52", "15.689, 63.1018, 40.6814, 0.22", "14.918, 63.8186, 41.2836, 0.22", "13.6634, 65.141, 42.2486, 0.22", "13.4691, 65.3677, 42.3862, 0.88", "15.6656, 73.8396, 49.0729, 0.88", "16.213, 82.281, 56.1139, 0.88", "18.6241, 90.3611, 63.2229, 0.88", "21.1449, 98.3712, 70.3776, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-37.4979, -0.607051, -6.48161, 0.81", "-37.6742, -0.654283, -6.66498, 0.81", "-38.295, -0.810483, -7.35083, 0.74", "-38.8563, -0.922313, -7.93314, 0.74", "-40.2039, -1.11396, -9.16578, 1.69", "-40.6441, -1.15057, -9.55593, 2.14", "-40.9123, -1.16365, -9.78544, 2.14", "-42.5661, -1.14655, -11.2013, 0.66", "-43.1133, -1.12036, -11.6906, 0.52", "-43.9061, -1.05394, -12.4037, 0.52", "-44.877, -0.937883, -13.2385, 0.52", "-45.1224, -0.898648, -13.4911, 1.33", "-45.844, -0.753479, -14.3336, 1.84", "-46.6697, -0.499, -15.3967, 0.29", "-47.399, -0.209654, -16.4701, 0.29", "-47.4264, -0.194663, -16.5158, 0.29", "-48.3993, 0.48573, -18.1811, 0.29", "-48.4238, 0.507992, -18.2253, 0.29", "-48.8105, 0.962664, -18.9407, 0.22", "-48.9728, 1.2319, -19.2673, 0.22", "-49.1358, 1.62115, -19.713, 1.4", "-49.1534, 1.65839, -19.7491, 1.4", "-49.7806, 2.71272, -20.2902, 2.58" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-37.4979, -0.607051, -6.48161, 0.52", "-38.3486, -0.00363567, -6.78573, 0.52", "-38.4302, 0.0522023, -6.80774, 0.52", "-38.8867, 0.35697, -6.91632, 0.52", "-38.9498, 0.397713, -6.92987, 0.52", "-40.0283, 1.06603, -7.13838, 0.52", "-40.1496, 1.13897, -7.16023, 0.52", "-40.9734, 1.58753, -7.22701, 0.52", "-41.0413, 1.62094, -7.23803, 0.52", "-41.2977, 1.72581, -7.30796, 0.81", "-41.6968, 1.87477, -7.43764, 1.03", "-41.7653, 1.89762, -7.46329, 1.03", "-42.559, 2.15304, -7.76919, 1.03", "-43.4939, 2.43958, -8.13227, 0.44", "-44.2621, 2.67244, -8.4149, 0.29", "-45.8817, 3.14188, -8.97346, 0.22", "-46.7976, 3.40619, -9.28734, 1.33", "-46.8503, 3.42143, -9.30468, 1.33", "-47.3734, 3.57179, -9.45943, 2.06", "-48.0723, 3.77671, -9.59273, 2.28", "-48.544, 3.9138, -9.65488, 2.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "8.62321, 18.0871, -3.07033, 0.88", "9.23099, 18.922, -3.25047, 0.88", "9.96475, 19.8026, -3.52941, 0.81", "10.0612, 19.8809, -3.55509, 0.81", "10.9274, 20.4692, -3.74858, 0.81", "11.0098, 20.5089, -3.77743, 0.81", "12.3717, 21.116, -4.31018, 1.25", "12.5441, 21.1774, -4.40099, 1.25", "14.0468, 21.8021, -5.30458, 1.25", "14.1093, 21.8339, -5.35073, 1.25", "15.9199, 22.972, -6.8863, 0.66", "16.503, 23.4217, -7.41219, 0.66", "17.6416, 24.484, -8.51776, 1.03", "18.7022, 25.7092, -9.6504, 1.03", "19.5798, 26.9731, -10.711, 0.88", "20.0379, 27.7518, -11.264, 0.66", "20.3605, 28.4465, -11.6402, 0.66", "20.39, 28.5143, -11.6775, 0.66", "21.23, 30.6624, -12.7693, 0.66", "21.2553, 30.7301, -12.8098, 0.66", "21.5352, 31.5894, -13.3318, 1.25", "21.7873, 32.4796, -13.9188, 1.69", "22.1888, 34.3225, -15.1214, 1.84", "22.2723, 34.8361, -15.4356, 1.84", "22.3547, 36.3568, -16.2992, 1.4", "22.3576, 37.0383, -16.6872, 0.96", "22.3077, 37.8667, -17.1433, 0.81", "22.1455, 39.1814, -17.7877, 0.66", "21.9683, 40.2128, -18.1913, 0.59", "21.7429, 41.5165, -18.6459, 0.59", "21.4963, 43.1073, -19.1103, 0.59", "21.3643, 44.2301, -19.4173, 1.33", "21.274, 45.4766, -19.7894, 2.06", "21.2539, 46.962, -20.2799, 2.73", "21.343, 48.7218, -20.866, 3.17", "21.4912, 50.1727, -21.3408, 3.17", "21.672, 51.5778, -21.7749, 2.5", "22.0313, 53.7478, -22.4768, 0.88", "22.3967, 55.4604, -23.0424, 0.52", "22.7843, 56.959, -23.547, 0.44", "22.808, 57.0335, -23.5734, 0.44", "23.2654, 58.2689, -24.0229, 0.44", "23.335, 58.4427, -24.0788, 0.44", "23.7865, 59.6061, -24.3871, 0.44", "23.8257, 59.7192, -24.4245, 0.44", "24.1643, 60.9565, -24.9338, 0.44", "24.1777, 61.0285, -24.972, 0.44", "24.3042, 62.6015, -25.8904, 0.44", "24.2727, 64.1184, -26.8282, 1.18", "24.1849, 65.0721, -27.444, 1.77", "24.1083, 65.7593, -27.9731, 2.06", "23.8311, 67.7601, -29.6434, 0.37", "23.6518, 69.1609, -30.879, 0.37", "23.4561, 70.7082, -32.3275, 0.37", "23.4501, 70.7608, -32.375, 0.37", "23.2071, 73.5152, -34.7793, 1.77", "23.1615, 74.5112, -35.6341, 2.36", "23.153, 75.201, -36.1796, 1.55", "23.1788, 75.7376, -36.5636, 0.29", "23.3366, 77.3335, -37.3597, 0.29", "23.4424, 78.3358, -37.7059, 0.96", "23.4525, 78.428, -37.7216, 0.96", "23.5982, 79.5228, -37.8877, 0.96", "23.8043, 80.5861, -38.1477, 0.15", "24.2806, 82.7046, -38.842, 0.15", "24.3004, 82.79, -38.8768, 0.66", "24.3319, 82.9384, -38.9415, 0.66", "24.4622, 83.5726, -39.3773, 0.66", "24.8135, 85.8416, -41.2408, 0.22", "25.1096, 88.4285, -43.6468, 0.22", "25.1865, 89.2714, -44.4991, 1.4", "25.2388, 90.0097, -45.2404, 1.69", "25.4132, 93.2944, -48.5306, 0.22", "25.4891, 95.1602, -50.412, 0.22", "25.5424, 96.7643, -51.9263, 0.29", "25.6171, 97.4765, -52.6567, 1.47", "25.737, 98.2174, -53.3876, 1.69", "25.7523, 98.277, -53.4433, 1.69", "26.2059, 99.5343, -54.416, 0.15", "26.9786, 100.939, -55.6905, 0.15", "27.6843, 102.086, -56.7024, 0.15", "27.6843, 102.086, -56.7024, 1.03", "28.3523, 103.275, -57.6773, 1.84", "28.3816, 103.338, -57.7237, 1.84", "28.9607, 104.952, -58.7583, 1.84", "29.1882, 106.062, -59.3973, 0.15", "29.196, 106.125, -59.4278, 0.15", "29.4541, 108.916, -60.6238, 0.15", "29.4609, 109.025, -60.6632, 0.74", "29.5229, 110.013, -60.9772, 0.74", "29.751, 113.43, -61.8668, 0.22", "29.8733, 114.027, -62.089, 0.74", "29.9896, 114.294, -62.2074, 0.74", "30.564, 115.109, -62.6713, 0.22", "31.1, 115.727, -63.0548, 0.96", "31.6377, 116.205, -63.4124, 1.18", "34.6034, 118.415, -65.3763, 0.15", "36.7592, 120.029, -66.9052, 0.15", "37.475, 120.556, -67.4294, 0.88", "38.1135, 121.021, -67.9084, 0.88", "39.953, 122.385, -69.3143, 0.22", "40.5566, 122.891, -69.8157, 0.88", "41.1447, 123.483, -70.3294, 1.11", "41.1987, 123.54, -70.3838, 1.11", "41.5574, 123.966, -70.7403, 1.11", "41.6005, 124.022, -70.7843, 1.11", "43.6445, 126.974, -72.9701, 0.15", "43.6853, 127.032, -73.0139, 0.15", "44.1136, 127.619, -73.4861, 0.74", "44.6243, 128.324, -74.0661, 0.74", "44.6644, 128.38, -74.1135, 0.74", "45.5204, 129.641, -75.1607, 0.74", "45.5508, 129.705, -75.2035, 0.74" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.62321, 18.0871, -3.07033, 1.4", "8.75832, 17.9419, -3.18312, 1.4", "9.57946, 17.0532, -3.75497, 1.4", "9.91725, 16.6512, -3.95715, 0.96", "10.4036, 15.9785, -4.21585, 0.96", "10.4358, 15.9257, -4.24012, 0.96", "10.8001, 15.2434, -4.61139, 0.96", "11.0324, 14.75, -4.8839, 0.96", "11.3921, 13.9359, -5.46239, 0.96", "11.7615, 13.0955, -6.23536, 0.96", "12.261, 12.0202, -7.40274, 1.25", "12.6097, 11.3485, -8.20055, 1.25", "12.8551, 10.9231, -8.76135, 1.25", "13.6618, 9.70644, -10.4666, 1.03", "14.1828, 9.04814, -11.4358, 1.03", "14.5488, 8.65747, -12.0183, 1.03", "14.9907, 8.24747, -12.592, 1.25", "15.6606, 7.69671, -13.3317, 1.25", "16.1221, 7.32737, -13.8464, 1.25", "16.5135, 6.98176, -14.2586, 1.25", "16.5441, 6.9466, -14.3068, 1.25", "16.868, 6.32915, -15.2078, 1.25", "16.9808, 5.79553, -15.9585, 0.88", "17.0322, 4.87168, -17.213, 1.33", "17.0126, 4.41089, -17.8305, 1.33", "16.919, 3.28356, -19.3168, 1.03", "16.8654, 2.73591, -20.0012, 0.74", "16.8319, 2.18985, -20.6649, 0.74", "16.897, 1.55102, -21.4737, 0.74", "16.9239, 1.52417, -21.5185, 0.74", "17.2796, 1.33933, -21.947, 1.03", "17.358, 1.30594, -22.0405, 1.03", "18.1857, 0.984035, -23.1901, 1.03", "18.6386, 0.818739, -23.8439, 1.25", "19.3767, 0.513288, -24.9833, 1.33", "20.1954, 0.125048, -26.3258, 1.33", "20.9223, -0.297186, -27.6497, 1.33", "21.3687, -0.603993, -28.5583, 1.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "8.62321, 18.0871, -3.07033, 1.55", "9.02739, 18.2499, -3.03352, 1.55", "9.95595, 18.624, -2.94896, 1.55", "11.364, 19.1912, -2.82071, 1.33", "12.4287, 19.62, -2.72375, 1.62", "13.5683, 20.079, -2.61996, 1.84", "13.6263, 20.1024, -2.61468, 1.84" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "16.8397, -102.76, 5.9249, 0.22", "17.2346, -104.413, 3.73389, 0.22", "17.2442, -104.451, 3.69557, 0.22", "17.42, -105.059, 3.21494, 0.22", "17.4958, -105.294, 3.07292, 0.22", "17.5793, -105.544, 2.95478, 0.96", "17.8242, -106.256, 2.6765, 1.03", "17.9855, -106.693, 2.60744, 1.4", "18.1743, -107.184, 2.52414, 1.69", "18.4232, -107.814, 2.41539, 1.47", "18.6312, -108.344, 2.32258, 0.88", "18.8803, -109.03, 2.2146, 0.66", "19.2697, -110.164, 2.06061, 0.52", "19.2863, -110.215, 2.0538, 0.52", "19.487, -110.881, 1.96885, 0.52", "19.8539, -112.21, 1.81478, 0.52", "20.1844, -113.525, 1.686, 0.29", "20.2996, -114.034, 1.6496, 0.74", "20.4122, -114.597, 1.62349, 1.18", "20.5147, -115.154, 1.60318, 1.55", "20.6077, -115.826, 1.58603, 1.84", "20.6506, -116.388, 1.58026, 1.99", "20.668, -116.924, 1.57204, 1.62", "20.6695, -117.713, 1.55913, 0.66", "20.6521, -118.507, 1.54553, 0.44", "20.6136, -119.548, 1.5276, 0.37", "20.554, -120.625, 1.50342, 0.29", "20.5166, -121.123, 1.48959, 0.29", "20.4906, -121.411, 1.47127, 0.44", "20.462, -121.693, 1.44176, 0.44", "20.4257, -122.083, 1.37213, 0.81", "20.4065, -122.442, 1.2806, 0.81", "20.3799, -122.76, 1.18763, 0.81", "20.3008, -123.432, 0.994286, 0.59", "20.2304, -123.823, 0.887876, 0.52", "20.1029, -124.361, 0.752454, 0.15", "19.9255, -124.996, 0.608081, 0.15", "19.6019, -126.019, 0.379084, 0.15", "19.4315, -126.512, 0.277613, 0.74", "19.2203, -127.159, 0.171632, 1.25", "19.0924, -127.598, 0.095641, 1.47", "19.0104, -127.92, 0.0405197, 1.33", "18.8727, -128.623, -0.0875827, 0.22", "18.7513, -129.642, -0.275831, 0.22", "18.6679, -130.973, -0.51309, 0.22", "18.6689, -131.452, -0.588539, 0.74", "18.687, -131.845, -0.641817, 0.96", "18.7324, -132.362, -0.696143, 0.96", "18.7968, -132.815, -0.724018, 0.81", "18.8688, -133.206, -0.741817, 0.22", "19.0695, -134.203, -0.763935, 0.22", "19.1258, -134.49, -0.76295, 1.03", "19.2408, -135.067, -0.748504, 1.55", "19.3314, -135.486, -0.732146, 1.92", "19.3938, -135.764, -0.719017, 1.92", "19.4994, -136.214, -0.694242, 1.92", "19.706, -137.039, -0.644775, 0.22", "20.0727, -138.463, -0.559412, 0.22", "20.4447, -139.891, -0.474711, 0.22", "20.4584, -139.944, -0.473018, 0.22", "20.7212, -140.914, -0.462346, 0.22", "20.9903, -141.842, -0.469296, 2.21", "21.1927, -142.513, -0.486136, 2.73", "21.2923, -142.842, -0.500883, 2.73", "21.7357, -144.326, -0.562269, 0.22", "22.0054, -145.253, -0.596507, 0.22", "22.3723, -146.571, -0.641051, 0.22", "22.7088, -147.844, -0.673584, 0.22", "22.7211, -147.897, -0.672467, 0.22", "22.8357, -148.504, -0.62645, 0.22", "22.8667, -148.751, -0.589297, 1.03", "22.8958, -149.376, -0.471772, 1.47", "22.888, -149.647, -0.412344, 1.47", "22.8208, -150.697, -0.174105, 0.15", "22.7507, -151.581, 0.00966406, 0.15", "22.6961, -152.081, 0.113338, 0.15", "22.6659, -152.383, 0.17311, 0.74", "22.6398, -152.824, 0.245604, 0.74", "22.6471, -153.229, 0.299345, 0.88", "22.6711, -153.583, 0.351138, 0.88", "22.7434, -154.261, 0.472965, 0.15", "22.8762, -155.207, 0.657304, 0.15", "23.1136, -156.563, 0.931297, 0.15", "23.4449, -158.146, 1.26204, 0.15", "23.6289, -158.893, 1.43628, 0.88", "23.7785, -159.438, 1.57213, 1.18", "23.9229, -159.908, 1.69042, 1.33", "24.0288, -160.263, 1.77966, 1.47", "24.1444, -160.665, 1.87601, 1.18", "24.3166, -161.37, 2.00542, 0.44", "24.4212, -161.858, 2.07088, 0.22", "24.5819, -162.756, 2.17808, 0.22", "24.7947, -164.14, 2.36201, 0.22", "24.8056, -164.215, 2.37222, 0.22", "24.9636, -165.271, 2.53339, 0.22", "25.0094, -165.562, 2.57842, 0.52", "25.1223, -166.18, 2.68196, 0.52", "25.2744, -166.937, 2.81809, 1.25", "25.3993, -167.472, 2.91493, 1.84", "25.5769, -168.183, 3.02463, 2.21", "25.7228, -168.672, 3.08324, 1.99", "26.004, -169.544, 3.16211, 0.52", "26.1659, -170.031, 3.19375, 0.52", "26.3487, -170.567, 3.20521, 0.22", "26.6546, -171.466, 3.20891, 0.22", "27.1364, -172.85, 3.17462, 0.22", "27.2644, -173.196, 3.17132, 1.25" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "16.8397, -102.76, 5.9249, 0.52", "17.4553, -102.889, 5.88023, 0.52", "18.4846, -103.076, 5.80962, 0.52", "19.9025, -103.317, 5.71182, 0.52", "20.9024, -103.497, 5.63057, 0.74", "21.8951, -103.681, 5.54466, 0.74", "23.1072, -103.918, 5.47057, 0.44", "24.0401, -104.105, 5.4324, 0.44", "24.1125, -104.123, 5.43039, 0.44", "24.7726, -104.352, 5.40052, 0.37", "24.8413, -104.38, 5.40177, 0.37", "25.7891, -104.853, 5.39073, 0.59", "26.4371, -105.266, 5.32571, 0.88", "26.7129, -105.472, 5.29435, 1.11", "27.1805, -105.853, 5.22758, 1.25", "27.2356, -105.901, 5.2173, 1.25", "27.6885, -106.323, 5.10822, 1.25", "28.1938, -106.797, 4.95057, 0.88", "28.771, -107.29, 4.82756, 0.59", "29.2098, -107.636, 4.78886, 0.52", "29.882, -108.137, 4.77917, 0.29", "30.5534, -108.628, 4.79783, 0.29", "31.9046, -109.604, 4.88956, 0.29", "32.9899, -110.353, 5.04907, 1.11", "33.9054, -110.982, 5.22961, 1.47", "34.3987, -111.322, 5.3348, 1.84", "35.102, -111.806, 5.52832, 1.99", "35.8665, -112.335, 5.75943, 1.47", "37.0771, -113.201, 6.1429, 0.88", "37.7007, -113.641, 6.29423, 0.88", "38.529, -114.2, 6.46164, 0.88", "39.7655, -114.909, 6.74425, 0.29", "40.3503, -115.188, 6.88306, 0.29", "40.4276, -115.217, 6.90419, 0.29", "41.2281, -115.456, 7.11714, 0.29", "41.2978, -115.473, 7.13727, 0.29", "42.7715, -115.825, 7.55311, 0.29", "42.9228, -115.865, 7.58441, 0.29", "44.2027, -116.269, 7.85955, 0.44", "44.8918, -116.51, 7.98568, 1.03", "45.4625, -116.746, 8.07126, 1.33", "46.0205, -117.009, 8.118, 1.33", "46.7747, -117.428, 8.11068, 0.88", "47.6885, -117.98, 8.05465, 0.29", "48.3354, -118.418, 7.96208, 0.22", "48.8255, -118.792, 7.89441, 0.22", "49.1597, -119.075, 7.84706, 0.44", "49.4339, -119.34, 7.80196, 0.66", "49.7688, -119.696, 7.72628, 0.66", "50.107, -120.08, 7.61864, 0.66", "50.6273, -120.653, 7.452, 0.29", "50.6901, -120.709, 7.44472, 0.29", "51.1654, -121.085, 7.47932, 0.22", "51.8698, -121.603, 7.61242, 0.22", "51.9886, -121.686, 7.64361, 0.22", "52.8065, -122.243, 7.88593, 0.22", "54.2507, -123.266, 8.30893, 1.18", "54.9622, -123.799, 8.51687, 1.62", "55.1432, -123.94, 8.57776, 1.84", "55.5144, -124.25, 8.71733, 1.84", "56.076, -124.732, 8.89568, 1.55", "56.8325, -125.416, 9.0853, 0.44", "56.8869, -125.466, 9.09216, 0.44", "57.6993, -126.173, 9.19809, 0.44", "57.7543, -126.222, 9.20319, 0.44", "58.9926, -127.369, 9.28339, 0.29", "60.1178, -128.443, 9.31448, 0.29", "60.9169, -129.239, 9.29619, 0.22", "61.0106, -129.338, 9.28795, 0.22", "61.8279, -130.301, 9.13176, 0.22", "62.1303, -130.713, 9.05657, 0.66", "62.3883, -131.132, 8.97082, 0.96", "62.595, -131.514, 8.89008, 0.52", "62.782, -131.887, 8.82794, 0.29", "63.2003, -132.707, 8.77321, 0.29", "63.6793, -133.686, 8.80037, 0.29", "63.8381, -134.047, 8.81941, 0.59", "64.0912, -134.717, 8.86667, 0.59", "64.293, -135.305, 8.91414, 0.59", "64.7281, -136.788, 9.05019, 0.15", "65.0984, -138.301, 9.21068, 0.15", "65.3229, -139.42, 9.3379, 0.15", "65.4898, -140.538, 9.46632, 0.15", "65.4949, -140.62, 9.47698, 0.15", "65.4165, -141.424, 9.59601, 0.15", "65.3694, -141.585, 9.63842, 0.44", "65.3437, -141.649, 9.66268, 0.44", "65.285, -141.782, 9.72125, 0.44", "64.835, -142.801, 10.1948, 0.22", "64.1843, -144.512, 10.8626, 0.22", "63.6328, -146.578, 11.4717, 0.22", "63.6263, -146.649, 11.4844, 0.22", "63.6344, -147.032, 11.5244, 1.03", "63.7169, -147.472, 11.5197, 1.33", "64.4525, -149.285, 11.2562, 0.22", "65.3957, -150.951, 10.8369, 0.22", "66.7534, -152.965, 10.1667, 0.22", "66.7943, -153.023, 10.1468, 0.22", "68.0391, -154.65, 9.55278, 0.22", "69.2607, -156.077, 8.9926, 0.22", "69.312, -156.125, 8.97112, 0.22", "69.805, -156.522, 8.75367, 1.47", "77.1107, -164.065, 7.96834, 1.47" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-15.3806, -30.0996, 32.4071, 0.22", "-15.7582, -30.715, 32.212, 0.22", "-16.2478, -31.6138, 31.9831, 0.22", "-16.3188, -31.7443, 31.9498, 0.22", "-16.6162, -32.2904, 31.8107, 0.22", "-16.6497, -32.3517, 31.7951, 0.22", "-16.7609, -32.556, 31.7431, 0.44", "-16.9917, -33.0931, 31.6273, 0.44", "-22.1757, -40.3464, 30.6275, 0.44" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-15.3806, -30.0996, 32.4071, 0.29", "-14.9129, -29.5958, 32.453, 0.29", "-14.1308, -28.7533, 32.5299, 0.29", "-14.0665, -28.6841, 32.5362, 0.29", "-13.3791, -27.9436, 32.6037, 0.29", "-13.1378, -27.6835, 32.6274, 0.66", "-12.7049, -27.2173, 32.67, 0.66", "-5.82328, -20.7691, 34.345, 0.66", "0.581634, -13.71, 35.0149, 0.66", "5.90678, -5.87715, 34.0685, 0.66", "12.5718, 0.976105, 34.2729, 0.66", "17.5722, 8.87369, 32.5098, 0.66", "23.3016, 15.9898, 29.7547, 0.66", "29.1877, 23.2853, 27.9864, 0.66", "35.6046, 30.352, 27.6142, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-5.03191, -22.4164, 0.910671, 1.18", "-4.30631, -23.418, 1.11079, 1.18", "-3.4433, -24.6432, 1.37219, 0.66", "-2.90338, -25.4289, 1.53775, 0.66", "-2.63102, -25.8328, 1.62182, 0.81", "-2.10225, -26.6286, 1.78122, 0.74", "-1.26723, -27.9024, 2.02881, 0.74", "-1.23097, -27.9609, 2.04293, 0.74", "-0.976833, -28.3584, 2.15673, 0.96", "-0.932831, -28.4236, 2.17349, 0.96", "-0.68359, -28.7593, 2.24635, 0.96", "-0.634411, -28.8219, 2.25835, 0.96", "0.332736, -30.0051, 2.47273, 0.74", "0.369384, -30.0524, 2.48066, 0.74", "0.925608, -30.7905, 2.59908, 0.74", "1.82985, -32.0739, 2.81009, 0.88", "2.03971, -32.4024, 2.85783, 0.88", "2.06885, -32.4547, 2.86381, 0.88", "2.44004, -33.2544, 2.92076, 0.66", "2.46574, -33.3194, 2.92491, 0.66", "2.86033, -34.5334, 3.01191, 0.52", "3.14517, -35.6124, 3.07717, 0.52", "3.29845, -36.2421, 3.1005, 0.88", "3.44915, -36.9193, 3.11727, 1.11", "3.67525, -38.0019, 3.17303, 1.11", "3.80677, -38.687, 3.21857, 0.52", "4.04753, -40.1984, 3.30305, 0.52", "4.206, -41.305, 3.32757, 0.52", "4.30598, -42.0257, 3.32254, 0.88", "4.44335, -43.0238, 3.30909, 1.03", "4.69162, -44.7214, 3.26465, 0.81", "4.99254, -46.3998, 3.27513, 0.66", "5.29007, -47.8849, 3.32201, 0.52", "5.52389, -48.9561, 3.37046, 0.52", "6.17524, -51.5144, 3.62614, 0.52", "6.3255, -52.0417, 3.70096, 0.52", "7.08801, -54.3906, 4.20371, 0.44", "7.60099, -55.788, 4.61082, 1.62", "7.85783, -56.43, 4.83369, 1.99", "8.62836, -58.3002, 5.46043, 1.25", "8.79446, -58.7192, 5.57674, 0.29", "9.09638, -59.5663, 5.75715, 0.29", "9.11932, -59.6423, 5.76573, 0.29", "9.48237, -60.9612, 5.85382, 0.29", "9.92815, -62.895, 5.97394, 0.29", "10.2353, -64.6349, 6.18447, 0.29", "10.2601, -64.7973, 6.21581, 1.47", "10.3965, -65.7875, 6.45731, 1.92", "10.4346, -66.072, 6.53717, 1.92", "10.6426, -67.6274, 7.07759, 0.37", "11.2576, -71.1795, 8.47933, 0.29", "11.3939, -71.8447, 8.75844, 1.4", "11.4766, -72.2024, 8.91685, 1.62", "11.6151, -72.7247, 9.14842, 1.62", "12.003, -73.9885, 9.7034, 0.29", "12.3888, -74.9991, 10.1051, 0.29", "12.4213, -75.0674, 10.132, 0.29", "13.1206, -76.4879, 10.8078, 0.29", "13.5992, -77.4716, 11.2769, 0.29", "14.0489, -78.4239, 11.7199, 1.47", "14.3881, -79.1695, 12.0468, 1.77", "14.5772, -79.6148, 12.2315, 1.77", "15.244, -81.2105, 12.8191, 0.22", "15.9608, -82.9333, 13.3539, 0.22", "16.181, -83.5154, 13.5254, 0.22", "16.2684, -83.7948, 13.5906, 0.81", "16.4886, -84.5666, 13.721, 1.03", "16.5821, -84.9223, 13.7545, 1.03", "16.5996, -84.9899, 13.7543, 1.03", "16.6902, -85.3445, 13.7534, 0.15", "17.0427, -86.6456, 13.7418, 0.15", "17.6067, -88.5227, 13.7646, 0.15", "17.7692, -89.0279, 13.7798, 1.25", "17.9925, -89.7199, 13.8005, 1.62", "18.0386, -89.8624, 13.8047, 1.62", "18.0846, -90.0049, 13.8089, 1.62", "18.4067, -91.0501, 13.8361, 0.22", "18.7433, -92.2853, 13.9077, 0.22", "19.3714, -94.6747, 14.0785, 0.22", "19.3878, -94.7423, 14.0838, 0.22", "19.4725, -95.0973, 14.1117, 0.74", "19.6565, -95.8962, 14.1699, 0.74", "19.92, -97.1638, 14.2436, 0.15", "19.9344, -97.2319, 14.2482, 0.15", "20.0711, -97.768, 14.2818, 0.44", "20.1945, -98.1968, 14.2969, 0.44", "20.354, -98.7031, 14.3057, 0.15", "20.5691, -99.3301, 14.2928, 0.15", "20.7417, -99.7935, 14.2471, 1.18", "21.0524, -100.618, 14.1639, 1.62", "21.1328, -100.822, 14.1419, 1.62", "25.4432, -109.855, 14.083, 1.62" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-5.03191, -22.4164, 0.910671, 1.77", "-5.47987, -23.3923, 0.644198, 1.77", "-5.98451, -24.5782, 0.314287, 1.77", "-6.51379, -25.879, -0.0319954, 1.69", "-7.10001, -27.3753, -0.403223, 1.55", "-7.71764, -29.0276, -0.788417, 1.55", "-8.32735, -30.7082, -1.16261, 1.33", "-8.69351, -31.8047, -1.39619, 1.47", "-9.03831, -32.8954, -1.61205, 2.06", "-9.36769, -34.0259, -1.81699, 2.36", "-9.53126, -34.6396, -1.92176, 2.28", "-9.60184, -34.9149, -1.95146, 2.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-24.9902, 12.5642, 1.65028, 1.03", "-25.0401, 12.6205, 1.67638, 1.03", "-25.9037, 13.5615, 2.07951, 0.88", "-26.7229, 14.424, 2.41597, 0.88", "-27.5285, 15.2494, 2.7221, 0.88", "-29.1642, 16.8608, 3.27528, 0.88", "-30.1097, 17.7765, 3.56448, 0.96", "-30.8063, 18.4281, 3.74462, 0.66", "-31.4858, 19.0268, 3.90525, 0.59", "-31.6255, 19.1468, 3.93719, 0.59", "-32.6084, 20.0061, 4.12908, 0.59", "-33.1722, 20.5426, 4.22347, 0.59", "-33.6723, 21.121, 4.33188, 0.88", "-34.3484, 22.0803, 4.50163, 1.03", "-34.8291, 22.8717, 4.6353, 1.11", "-35.1268, 23.4507, 4.71778, 1.11", "-35.4718, 24.2778, 4.80755, 0.66", "-36.1516, 26.0685, 4.94501, 0.66", "-36.453, 26.9565, 4.98052, 0.96", "-36.478, 27.0389, 4.98087, 0.96", "-36.8769, 28.4667, 4.98078, 0.96", "-37.3118, 30.0954, 4.97425, 0.96", "-37.495, 30.8479, 4.96763, 0.74", "-37.8975, 32.6351, 4.95188, 0.52", "-38.0716, 33.515, 4.94411, 0.52", "-38.4544, 35.8594, 4.92338, 0.52", "-38.4667, 35.9569, 4.92252, 0.52", "-38.5624, 37.1225, 4.91216, 0.52", "-38.5843, 37.7541, 4.90826, 1.11", "-38.5674, 38.6543, 4.90883, 1.47", "-38.5086, 39.5674, 4.91581, 1.33", "-38.4977, 39.665, 4.91724, 1.33", "-38.4145, 40.4587, 4.93053, 1.33", "-38.3355, 41.2027, 4.94525, 0.88", "-38.2668, 41.8753, 4.95881, 0.88", "-38.182, 42.871, 4.97753, 0.52", "-38.1199, 43.7704, 4.99246, 0.52", "-38.0715, 44.6693, 5.00709, 0.96", "-38.0687, 44.7552, 5.00863, 0.96", "-38.0616, 45.5654, 5.01789, 1.11", "-38.07, 46.3632, 5.02787, 1.11", "-38.0696, 46.4614, 5.02982, 1.11", "-38.0563, 46.9173, 5.04096, 0.81", "-38.0295, 47.4617, 5.0545, 0.66", "-37.9854, 48.2786, 5.07187, 0.66", "-37.98, 48.352, 5.073, 0.66", "-37.9132, 49.0846, 5.07651, 0.88", "-37.8966, 49.8087, 5.07212, 0.88", "-37.921, 50.5255, 5.06534, 0.66", "-37.9767, 51.3338, 5.05713, 0.44", "-38.0969, 52.6062, 5.04627, 0.22", "-38.1414, 52.9803, 5.04252, 0.22", "-38.5024, 55.4585, 5.02013, 0.22", "-38.6228, 56.1791, 5.01444, 0.22", "-38.8239, 57.246, 5.00736, 0.22", "-38.9043, 57.5933, 5.00557, 0.59", "-38.9525, 57.7713, 5.005, 0.59", "-39.1376, 58.4601, 5.00401, 0.74", "-39.3732, 59.4431, 4.94194, 1.25", "-39.6005, 60.4101, 4.84095, 1.99", "-39.851, 61.4607, 4.70472, 2.43", "-39.9439, 61.9128, 4.64536, 2.43", "-40.1268, 62.9585, 4.51873, 2.28", "-40.4108, 64.6415, 4.32544, 0.74", "-40.4264, 64.7381, 4.31636, 0.74", "-40.6023, 65.9013, 4.22953, 0.66", "-40.9017, 68.1155, 4.10969, 0.66", "-41.1907, 70.1752, 4.03945, 0.66", "-41.31, 70.9738, 4.03311, 0.66", "-41.5016, 72.2163, 4.11691, 0.66", "-41.6329, 73.0047, 4.19831, 1.11", "-41.8393, 74.1445, 4.34545, 1.11", "-41.8581, 74.2401, 4.35901, 1.11", "-42.0271, 75.1285, 4.49039, 0.96", "-42.2945, 76.6239, 4.68922, 0.22", "-43.1376, 81.2718, 5.24116, 0.15", "-43.3075, 82.1879, 5.34069, 2.06", "-43.6285, 83.8978, 5.50641, 2.73", "-43.8948, 85.3389, 5.62327, 0.22", "-44.3807, 88.0054, 5.77236, 0.22", "-44.5324, 88.883, 5.7824, 0.66", "-44.6769, 89.787, 5.78826, 1.03", "-44.7708, 90.4122, 5.78032, 0.88", "-44.8603, 91.0378, 5.75935, 0.52", "-44.9137, 91.4239, 5.73792, 0.15", "-45.1498, 93.3855, 5.61245, 0.15", "-45.3392, 95.1161, 5.51201, 0.15", "-45.4781, 96.2332, 5.46148, 1.33", "-45.6127, 97.2114, 5.45585, 2.21", "-45.7182, 97.9281, 5.47657, 2.21", "-45.8155, 98.5453, 5.52271, 2.21", "-46.0336, 99.8108, 5.6675, 0.15", "-46.647, 102.94, 6.1833, 0.15", "-46.906, 104.136, 6.42972, 0.15", "-47.1362, 105.087, 6.64759, 1.69", "-47.3914, 106.106, 6.86947, 2.06", "-47.624, 106.99, 7.08148, 2.06", "-47.8783, 107.962, 7.32622, 1.69", "-47.8995, 108.043, 7.3466, 1.69", "-48.1573, 109.08, 7.56559, 0.15", "-48.8961, 112.389, 8.14418, 0.15", "-49.1254, 113.545, 8.29045, 0.81", "-49.2512, 114.249, 8.36183, 1.18", "-49.3984, 115.171, 8.43132, 0.88", "-49.5073, 115.891, 8.47776, 0.15", "-49.8147, 118.218, 8.59277, 0.15", "-50.0372, 120.866, 8.64376, 0.15", "-50.0613, 121.316, 8.63976, 0.81", "-50.0791, 121.942, 8.63286, 0.96", "-50.0774, 122.32, 8.62799, 0.96", "-50.0504, 123.122, 8.61618, 0.22", "-49.7602, 126.567, 8.55726, 0.22", "-49.7477, 126.665, 8.55542, 0.22", "-49.6513, 127.409, 8.53106, 0.96", "-49.5932, 127.856, 8.51258, 1.25", "-49.5345, 128.306, 8.49131, 1.25", "-49.4422, 129.011, 8.45137, 0.81", "-49.2962, 130.0, 8.42423, 0.15", "-48.8283, 132.776, 8.43909, 0.15", "-48.6417, 133.673, 8.43621, 1.99", "-48.4398, 134.515, 8.42738, 2.95", "-48.4177, 134.598, 8.42611, 2.95", "-48.0536, 135.807, 8.33663, 2.95", "-47.5983, 137.277, 8.14711, 0.22", "-46.9595, 139.418, 7.78843, 0.22", "-46.7548, 140.198, 7.6386, 1.25", "-46.5894, 140.894, 7.47797, 1.69", "-46.226, 142.552, 7.04284, 0.15", "-45.7574, 144.936, 6.33666, 0.15", "-45.4836, 146.477, 5.88766, 0.15", "-45.2629, 148.077, 5.68475, 2.14", "-45.1725, 148.788, 5.70571, 2.14", "-45.1565, 148.924, 5.73321, 2.14", "-45.0192, 150.215, 6.26121, 0.15", "-44.9516, 150.839, 6.63263, 0.15", "-44.5648, 154.378, 9.0632, 0.15", "-44.5087, 154.945, 9.44729, 0.88", "-44.4507, 155.573, 9.80133, 1.03", "-44.4441, 155.65, 9.83973, 1.03", "-44.3844, 156.4, 10.1505, 0.29", "-44.2798, 157.533, 10.4724, 0.15", "-44.1104, 159.04, 10.6203, 0.15", "-43.8199, 160.825, 10.7645, 0.15", "-43.6345, 161.656, 10.8212, 0.74", "-43.4153, 162.437, 10.8664, 0.74", "-43.2847, 162.81, 10.8845, 0.15", "-42.5818, 164.506, 10.9304, 0.15", "-41.0331, 166.895, 10.9562, 0.15", "-40.0336, 168.059, 10.9525, 0.15", "-39.4436, 168.666, 10.9532, 1.77", "-38.788, 169.279, 10.9626, 2.28", "-38.37, 169.645, 10.9707, 2.14", "-32.8404, 174.04, 11.124, 0.15", "-30.2878, 175.899, 11.2239, 0.15", "-29.6989, 176.312, 11.2488, 0.59", "-29.6373, 176.354, 11.2517, 0.59", "-32.189, 188.2, 13.3562, 0.59", "-36.3191, 199.573, 15.6916, 0.59", "-40.2126, 211.146, 17.2703, 0.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-24.9902, 12.5642, 1.65028, 0.66", "-25.9363, 12.1603, 1.48111, 0.66", "-26.7333, 11.8115, 1.29713, 0.66", "-27.8567, 11.3204, 1.00953, 0.81", "-29.1829, 10.7236, 0.630096, 1.03", "-30.6979, 10.0334, 0.18273, 1.03", "-31.7792, 9.53751, -0.134453, 0.88", "-32.6139, 9.15836, -0.401739, 0.52", "-33.203, 8.88691, -0.596199, 0.81", "-34.0015, 8.51875, -0.851227, 1.33", "-34.5828, 8.25634, -1.0246, 1.33", "-35.2005, 8.00761, -1.15505, 1.11", "-35.7694, 7.812, -1.24043, 0.88", "-36.4962, 7.59202, -1.32055, 0.59", "-37.8592, 7.20642, -1.50136, 0.59", "-38.4627, 7.04254, -1.58853, 0.81", "-39.6441, 6.70775, -1.78473, 0.81", "-40.2338, 6.53479, -1.88515, 0.81", "-40.856, 6.34387, -1.99112, 0.81", "-42.0325, 5.94764, -2.20344, 0.81", "-42.6189, 5.72088, -2.31535, 0.52", "-43.369, 5.38381, -2.43866, 0.52", "-44.3417, 4.87791, -2.58805, 0.52", "-44.3881, 4.85208, -2.59373, 0.52", "-45.034, 4.48469, -2.64655, 1.11", "-45.5873, 4.16354, -2.65505, 1.25", "-46.4995, 3.62653, -2.67272, 1.25", "-47.0108, 3.29222, -2.68158, 0.74", "-47.3725, 3.03012, -2.68469, 0.52", "-47.4613, 2.95861, -2.68319, 0.52", "-47.8388, 2.61441, -2.6605, 0.52", "-47.9172, 2.53254, -2.65207, 0.52", "-48.3378, 2.01647, -2.6014, 0.52", "-48.3713, 1.9756, -2.59738, 0.52", "-48.8765, 1.41812, -2.54094, 0.52", "-48.9153, 1.38206, -2.53708, 0.52", "-49.4081, 0.977994, -2.4947, 0.52", "-49.8211, 0.674572, -2.46081, 0.74", "-50.3477, 0.33024, -2.41993, 0.81", "-50.9172, -0.036351, -2.37567, 0.81", "-51.7613, -0.572902, -2.31004, 0.37", "-52.4498, -1.03204, -2.22323, 1.18", "-53.1742, -1.56005, -2.10086, 2.06", "-53.7497, -2.01836, -1.98529, 2.58", "-54.2621, -2.46115, -1.86966, 2.58", "-54.6892, -2.84962, -1.767, 1.99", "-55.5511, -3.64022, -1.5574, 0.52", "-56.5739, -4.54759, -1.31726, 0.52", "-57.3938, -5.24603, -1.08682, 0.52", "-57.9405, -5.67582, -0.919304, 0.96", "-58.6755, -6.19512, -0.678355, 1.47", "-59.477, -6.69402, -0.414524, 1.69", "-60.0162, -6.98822, -0.231466, 1.69", "-61.0783, -7.49529, 0.169863, 1.69", "-61.6631, -7.75499, 0.407824, 1.18", "-62.2981, -8.02764, 0.682123, 0.88", "-63.0545, -8.34785, 1.01293, 0.44", "-64.0054, -8.75957, 1.41662, 0.44", "-64.6867, -9.05384, 1.67145, 0.44", "-64.7346, -9.0736, 1.68516, 0.44", "-65.4548, -9.33944, 1.90616, 0.44", "-66.211, -9.56525, 2.13515, 0.44", "-66.4014, -9.61017, 2.1935, 0.88", "-67.0066, -9.71106, 2.3502, 1.18", "-67.5428, -9.78882, 2.49275, 1.18", "-68.3132, -9.89763, 2.69467, 0.81", "-68.7479, -9.9686, 2.79937, 0.52", "-69.0961, -10.0344, 2.88208, 0.29", "-70.4667, -10.3385, 3.19317, 0.29", "-71.0635, -10.4991, 3.32073, 0.22", "-71.1139, -10.515, 3.33018, 0.22", "-72.3223, -10.9356, 3.48001, 0.22", "-72.3988, -10.9627, 3.48755, 0.22", "-72.7076, -11.0764, 3.50367, 0.37", "-73.0619, -11.2123, 3.5032, 1.03", "-73.5685, -11.3978, 3.47955, 1.4", "-74.1136, -11.5879, 3.4292, 1.4", "-74.7543, -11.8092, 3.34873, 1.4", "-75.4557, -12.0801, 3.25779, 0.22", "-76.061, -12.3341, 3.17974, 0.15", "-76.8595, -12.6979, 3.08084, 0.15", "-77.5321, -13.0368, 3.00675, 0.15", "-78.0431, -13.3275, 2.96358, 0.15", "-78.7847, -13.7928, 2.91523, 0.15", "-79.2415, -14.0978, 2.90165, 0.29", "-79.575, -14.3322, 2.90467, 1.03", "-80.0772, -14.6984, 2.92792, 1.55", "-80.5275, -15.0298, 2.96203, 1.55", "-81.1808, -15.5038, 3.01187, 0.15", "-81.9374, -16.0438, 3.06993, 0.15", "-83.3419, -17.0541, 3.17994, 0.15", "-83.8935, -17.4489, 3.22419, 1.33", "-84.4998, -17.8775, 3.27488, 2.73", "-85.0005, -18.2243, 3.31623, 3.39", "-85.0536, -18.2617, 3.32066, 3.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "26.7436, 32.2371, -1.4207, 1.03638", "36.5663, 43.5735, -1.4207, 1.03638", "46.389, 54.91, -1.4207, 1.03638" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "45.5036, -2.86545, 21.7689, 0.15", "46.9522, -3.60916, 23.2925, 0.15", "47.691, -3.88124, 24.1199, 0.15", "48.0165, -3.96635, 24.4955, 0.15", "48.0654, -3.96995, 24.5535, 0.15", "48.2886, -3.93863, 24.8392, 0.15", "48.3276, -3.90949, 24.897, 0.15", "48.3873, -2.96687, 25.2261, 0.15", "48.3901, -2.81395, 25.2695, 0.15", "48.3697, -2.0666, 25.4678, 0.15", "48.3281, -1.37411, 25.6351, 0.15", "48.251, -0.620245, 25.7892, 1.03", "48.1557, 0.143977, 25.8976, 1.4", "48.0927, 0.53057, 25.9079, 1.4", "51.4053, 5.97336, 34.5947, 1.4", "52.9829, 10.7723, 44.1297, 1.4" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "45.5036, -2.86545, 21.7689, 0.29", "45.3262, -2.46303, 21.8557, 0.29", "45.3025, -2.40949, 21.8672, 0.29", "45.1305, -2.0194, 21.9513, 0.29", "44.7951, -1.25908, 22.1153, 0.29", "41.9067, 6.75519, 22.2651, 0.29", "40.6203, 15.0551, 23.5661, 0.29", "38.4477, 23.2868, 23.403, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "9.60589, 107.911, 33.6522, 0.52", "9.30996, 108.98, 33.8378, 0.52", "9.10948, 109.838, 33.9502, 0.52", "9.09324, 109.939, 33.9649, 0.52", "9.01851, 110.903, 34.0919, 0.52", "9.00662, 111.18, 34.1562, 0.52", "8.979, 112.18, 34.4314, 0.52", "8.97967, 112.367, 34.4819, 0.52", "8.97454, 113.358, 34.814, 0.44", "8.94827, 114.786, 35.3537, 0.44", "8.82555, 116.227, 35.9855, 0.22", "8.81309, 116.308, 36.0242, 0.22", "8.64696, 117.174, 36.474, 0.22", "8.45245, 117.993, 36.9128, 0.22", "8.42299, 118.08, 36.9616, 0.22", "7.70572, 119.588, 37.8612, 0.22", "7.61902, 119.746, 37.9345, 0.22", "5.36142, 130.661, 44.6355, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "9.60589, 107.911, 33.6522, 0.15", "10.2211, 108.77, 35.5572, 0.15", "10.4386, 109.083, 35.9613, 0.15", "10.4596, 109.114, 35.9911, 0.15", "10.6189, 109.376, 36.183, 0.88", "10.7749, 109.659, 36.334, 1.33", "10.933, 109.951, 36.4684, 1.4", "11.2027, 110.451, 36.5447, 0.29", "11.2276, 110.491, 36.547, 0.29", "11.7356, 111.211, 36.529, 0.22", "12.3063, 111.915, 36.4543, 0.22", "12.4245, 112.047, 36.4195, 0.52", "12.8233, 112.465, 36.1821, 0.59", "13.2823, 112.924, 35.7706, 0.29", "13.5155, 113.161, 35.4506, 0.29", "13.7122, 113.382, 35.0766, 0.29", "13.9339, 113.745, 34.5163, 0.66", "14.1962, 114.423, 33.712, 0.66", "14.208, 114.462, 33.6764, 0.66", "14.3902, 115.136, 33.1856, 0.37", "14.5904, 115.839, 32.7594, 0.37", "14.8558, 116.652, 32.3691, 0.29", "15.2094, 117.546, 32.0747, 0.22", "15.5162, 118.204, 31.9562, 0.22", "15.745, 118.643, 31.9153, 1.33", "15.9778, 119.045, 31.9191, 1.4", "16.1672, 119.346, 31.939, 1.4", "16.4464, 119.766, 32.0296, 0.81", "16.8151, 120.358, 32.2508, 0.59", "17.049, 120.801, 32.4455, 0.22", "17.0882, 120.885, 32.4869, 0.22", "17.3279, 121.53, 32.8865, 0.22", "17.5255, 122.233, 33.3597, 0.52", "17.5438, 122.315, 33.4249, 0.52", "17.6008, 122.611, 33.6777, 0.52", "17.6071, 122.651, 33.7137, 0.52", "17.7355, 123.639, 34.5474, 0.52", "17.7815, 124.026, 34.8562, 0.81", "17.8821, 124.867, 35.4136, 1.33", "17.8982, 124.989, 35.4879, 1.33", "17.9483, 125.362, 35.7129, 1.33", "18.0199, 125.925, 36.0161, 1.33", "18.04, 126.123, 36.0827, 1.33", "18.0686, 126.563, 36.1902, 1.03", "18.0681, 126.807, 36.1914, 0.81", "19.6628, 133.252, 37.2785, 0.81", "20.6151, 139.887, 37.7186, 0.81", "20.8664, 146.596, 37.556, 0.81", "20.8155, 153.252, 38.4602, 0.81" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "9.60589, 107.911, 33.6522, 0.22", "8.99948, 107.702, 33.9611, 0.22", "8.78675, 107.629, 34.0694, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "21.1449, 98.3712, 70.3776, 0.29", "23.7521, 106.214, 77.9165, 0.29", "27.7998, 114.409, 84.3591, 0.29", "32.5118, 121.72, 91.4381, 0.29", "39.3773, 127.918, 97.8552, 0.29", "46.5508, 135.084, 102.691, 0.29", "54.0778, 143.126, 104.8, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "21.1449, 98.3712, 70.3776, 0.15", "20.906, 107.3, 76.7243, 0.29", "18.9963, 114.8, 84.5494, 0.29", "15.3583, 122.41, 91.6076, 0.29", "13.1163, 131.272, 97.6453, 0.29", "11.4724, 141.025, 102.277, 0.29", "9.96245, 151.296, 105.609, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-48.544, 3.9138, -9.65488, 0.52", "-49.368, 3.01657, -9.85415, 0.52", "-50.0603, 2.50205, -9.99832, 0.52", "-50.1125, 2.46325, -10.0092, 0.52", "-50.3849, 2.26083, -10.0659, 0.88", "-50.9156, 1.86643, -10.1765, 0.22", "-51.5669, 1.38243, -10.3121, 1.18", "-52.2892, 1.0845, -10.4034, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-48.544, 3.9138, -9.65488, 0.22", "-49.7348, 4.57193, -10.0534, 0.22", "-51.1347, 5.32956, -10.4784, 0.22", "-51.3651, 5.45197, -10.5551, 0.22", "-52.043, 5.81285, -10.7865, 0.22", "-52.1734, 5.88061, -10.83, 0.22", "-53.5791, 6.60177, -11.2917, 0.22", "-53.6507, 6.63636, -11.3108, 0.22", "-54.7084, 7.05135, -11.61, 1.62", "-55.5042, 7.31784, -11.8307, 2.06", "-56.0803, 7.46709, -11.9667, 2.06", "-56.2428, 7.50229, -12.001, 2.06", "-57.5691, 7.72306, -12.2471, 0.15", "-59.1562, 7.94668, -12.4994, 0.15", "-60.1994, 8.06134, -12.6299, 0.15", "-62.5295, 8.25455, -12.8891, 0.15", "-62.6009, 8.25954, -12.8962, 0.15", "-63.0153, 8.2822, -12.9282, 0.88", "-63.6256, 8.30454, -12.9553, 1.11", "-64.1594, 8.31417, -12.9468, 1.11", "-64.7051, 8.3248, -12.9384, 0.22", "-64.7769, 8.32775, -12.9376, 0.22", "-66.1419, 8.40014, -12.982, 0.22", "-66.2132, 8.40681, -12.9873, 0.22", "-66.4459, 8.43737, -13.0139, 0.44", "-66.8331, 8.50301, -13.068, 0.44", "-67.938, 8.71122, -13.2672, 0.22", "-68.5982, 8.85054, -13.397, 0.88", "-69.3344, 9.01914, -13.5527, 1.55", "-69.953, 9.16073, -13.6723, 1.84", "-70.8321, 9.36489, -13.8332, 0.29", "-71.2947, 9.47673, -13.9104, 0.22", "-73.013, 9.92142, -14.2149, 0.22", "-73.2281, 9.97853, -14.2517, 0.22", "-74.6782, 10.3642, -14.5107, 0.22", "-74.7884, 10.3943, -14.5309, 0.22", "-75.9741, 10.7216, -14.7802, 0.22", "-76.679, 10.9032, -14.9248, 1.18", "-76.972, 10.971, -14.9898, 1.62", "-77.5928, 11.0964, -15.1307, 1.92", "-78.0339, 11.1769, -15.1847, 1.92", "-78.8563, 11.3282, -15.2414, 0.22", "-81.0153, 11.7361, -15.3037, 0.22", "-81.0957, 11.7521, -15.3035, 0.22", "-81.3782, 11.8227, -15.2785, 0.59", "-84.3039, 12.695, -14.8387, 0.22", "-85.2235, 12.9888, -14.6696, 1.11", "-85.7607, 13.173, -14.5548, 1.84", "-86.3219, 13.3747, -14.4276, 1.84", "-88.4949, 14.1569, -13.9499, 0.22", "-90.8015, 14.9328, -13.4848, 0.15", "-92.6603, 15.4957, -13.1516, 0.15", "-92.813, 15.5346, -13.12, 0.44", "-93.0298, 15.58, -13.0756, 0.44", "-93.469, 15.6501, -12.9958, 0.44", "-95.2948, 15.7932, -12.792, 0.15", "-95.3653, 15.7949, -12.779, 0.15", "-96.7759, 15.8003, -12.4384, 1.47", "-97.367, 15.7969, -12.284, 2.14", "-97.7379, 15.7956, -12.1757, 2.43" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "13.6263, 20.1024, -2.61468, 1.03", "14.0739, 20.6814, -2.33973, 1.03", "14.3084, 20.9724, -2.19661, 0.96", "14.6345, 21.3567, -1.98459, 0.81", "14.9564, 21.7311, -1.7782, 0.81", "15.446, 22.323, -1.46736, 0.81", "15.8797, 22.8405, -1.17457, 0.81", "15.9408, 22.9144, -1.12991, 0.81", "16.2762, 23.3183, -0.87391, 1.11", "16.5845, 23.6947, -0.642753, 1.25", "16.9622, 24.1552, -0.356211, 1.25", "17.4499, 24.7486, 0.0143382, 1.03", "17.9, 25.2859, 0.360257, 0.81", "18.5028, 25.9971, 0.798745, 0.81", "18.9772, 26.5501, 1.1101, 0.81", "19.0072, 26.5842, 1.12811, 0.81", "19.3248, 26.9491, 1.28905, 1.18", "19.4711, 27.135, 1.34894, 1.18", "19.7207, 27.4981, 1.44643, 1.18", "20.0941, 28.1134, 1.62333, 1.47", "20.3924, 28.6631, 1.82912, 1.18", "20.704, 29.2766, 2.08897, 0.74", "20.9274, 29.7744, 2.32475, 0.74", "21.2276, 30.6158, 2.78832, 0.74", "21.4566, 31.3776, 3.25494, 0.88", "21.7472, 32.4903, 4.03663, 0.88", "21.761, 32.5532, 4.08471, 0.88", "21.9361, 33.4346, 4.80561, 0.88", "22.1589, 34.6624, 5.85572, 0.88", "22.1663, 34.7047, 5.89305, 0.88", "22.2762, 35.3633, 6.44642, 0.66", "22.3612, 35.793, 6.80329, 0.66", "22.502, 36.3642, 7.25658, 0.66", "22.5153, 36.4004, 7.28625, 0.66", "22.7942, 36.8726, 7.71446, 1.03", "23.033, 37.2213, 8.0513, 1.4", "23.245, 37.4746, 8.31688, 1.55", "23.4748, 37.7122, 8.57636, 1.69", "23.9278, 38.1736, 9.05603, 1.47", "24.4993, 38.6987, 9.63599, 1.33", "24.5335, 38.7273, 9.67188, 1.33", "24.9923, 39.0801, 10.1695, 0.81", "25.529, 39.51, 10.8218, 0.66", "25.8277, 39.8094, 11.2608, 0.66", "26.3316, 40.4746, 12.1592, 0.66", "26.4849, 40.7279, 12.4927, 0.66", "26.5181, 40.7888, 12.5729, 0.66", "26.7315, 41.246, 13.1974, 0.66", "26.9844, 41.8594, 13.998, 0.66", "27.0075, 41.9232, 14.0684, 0.66", "27.1646, 42.4121, 14.4337, 0.88", "27.3449, 42.8793, 14.6754, 1.03", "27.3687, 42.9353, 14.6977, 1.03", "27.7154, 43.6385, 14.882, 1.03", "27.7451, 43.6952, 14.8922, 1.03", "28.1033, 44.4117, 14.9821, 1.03", "28.6244, 45.4952, 15.0802, 1.03", "28.6486, 45.5464, 15.0845, 1.03", "29.0859, 46.4878, 15.1582, 0.66", "29.8075, 48.0353, 15.2635, 0.66", "30.091, 48.6352, 15.3029, 0.66", "30.116, 48.6862, 15.3055, 0.66", "30.3578, 49.1531, 15.3227, 0.88", "30.5604, 49.534, 15.3417, 1.18", "30.8605, 50.0695, 15.3729, 1.4", "31.1303, 50.5156, 15.4088, 1.4", "31.3244, 50.8345, 15.4507, 1.4", "31.6352, 51.3593, 15.5257, 0.81", "31.8709, 51.7975, 15.6253, 0.66", "32.07, 52.1467, 15.7712, 0.52", "32.1497, 52.2885, 15.8446, 0.52", "32.5224, 52.9409, 16.2111, 0.52", "32.548, 52.9851, 16.236, 0.52", "33.0653, 53.8821, 16.6777, 0.52", "33.6772, 54.9276, 17.0669, 0.44", "34.0622, 55.5754, 17.2615, 0.66", "34.2763, 55.9335, 17.3416, 0.81", "34.7032, 56.6355, 17.4454, 0.81", "35.1491, 57.3581, 17.4896, 0.66", "35.7908, 58.3766, 17.4307, 0.52", "35.82, 58.4253, 17.4248, 0.52", "36.2445, 59.0938, 17.3625, 0.52", "36.2752, 59.1416, 17.3583, 0.52", "36.6137, 59.6553, 17.3198, 0.88", "36.9649, 60.1831, 17.3011, 1.18", "36.9964, 60.2306, 17.2992, 1.18", "37.3393, 60.7478, 17.2786, 1.18", "37.6811, 61.2692, 17.2602, 0.74", "38.0478, 61.8454, 17.248, 0.37", "38.6161, 62.7476, 17.2344, 0.37", "38.8483, 63.0909, 17.2201, 0.37", "38.9787, 63.2638, 17.205, 0.74", "39.274, 63.6045, 17.1528, 1.03", "39.3197, 63.6503, 17.1425, 1.03", "39.7921, 64.0608, 17.0084, 1.25", "40.3806, 64.5225, 16.8196, 1.25", "40.6691, 64.7562, 16.7303, 1.47", "40.9065, 64.9676, 16.6651, 1.47", "40.9946, 65.0514, 16.647, 1.47", "41.3462, 65.4255, 16.6075, 1.25", "41.7284, 65.8804, 16.5995, 1.03", "42.1224, 66.3873, 16.6313, 0.88", "42.819, 67.3285, 16.7319, 0.59", "43.2282, 67.9022, 16.8056, 0.37", "43.6932, 68.5319, 16.9271, 0.37", "44.03, 68.9733, 17.0361, 0.52", "44.2978, 69.3119, 17.1341, 0.66", "44.6971, 69.7953, 17.2881, 0.66", "45.4175, 70.6343, 17.5796, 0.66", "46.0304, 71.3405, 17.8198, 0.66", "46.0665, 71.3823, 17.8339, 0.66", "46.3819, 71.7654, 17.9631, 1.25", "46.6803, 72.1614, 18.0907, 1.69", "46.998, 72.654, 18.2544, 1.84", "47.1292, 72.8998, 18.3415, 1.99", "47.3314, 73.3697, 18.4973, 1.11", "47.4146, 73.578, 18.5671, 0.88", "47.4698, 73.7378, 18.6234, 0.66", "47.6232, 74.2151, 18.8084, 0.44", "47.8807, 75.0626, 19.1514, 0.29", "48.0697, 75.6981, 19.4124, 0.29", "48.5989, 77.4822, 20.1689, 0.29", "48.875, 78.4056, 20.562, 0.22", "49.0133, 78.8293, 20.7587, 0.29", "49.1375, 79.1827, 20.9329, 0.44", "49.4156, 79.938, 21.3199, 0.44", "49.6747, 80.552, 21.661, 0.44", "49.8309, 80.8663, 21.8511, 1.11", "50.3536, 81.6825, 22.3591, 1.77", "50.6439, 82.0865, 22.5941, 1.92", "51.0156, 82.4674, 22.8683, 2.14", "51.2562, 82.6775, 23.023, 1.99", "51.5025, 82.8762, 23.1599, 1.99", "52.3879, 83.5837, 23.607, 0.37", "53.0539, 84.1217, 23.9088, 0.37", "54.801, 85.5214, 24.6549, 0.29", "55.3466, 85.9465, 24.8947, 1.11", "55.7564, 86.2279, 25.1332, 1.92", "56.1532, 86.4837, 25.4001, 2.28", "56.3764, 86.6179, 25.5557, 2.43", "56.862, 86.8501, 25.9232, 2.43", "57.7095, 87.2247, 26.6356, 2.43", "59.7929, 88.0561, 28.5237, 0.37", "60.2031, 88.2191, 28.9201, 0.37", "60.7097, 88.4345, 29.4358, 0.37", "61.4827, 88.8244, 30.2718, 0.59", "61.9413, 89.1445, 30.8217, 0.81", "61.9951, 89.2235, 30.8977, 0.81", "62.1408, 89.8189, 31.2129, 0.81", "62.2509, 90.4761, 31.5264, 0.81", "62.3088, 90.9661, 31.7393, 0.59", "62.3688, 91.5699, 31.9657, 0.44", "62.4853, 92.569, 32.3257, 0.44", "62.6383, 93.7824, 32.7553, 0.44", "62.7492, 94.5638, 33.0237, 1.03", "62.8146, 95.0077, 33.1762, 1.62", "62.8212, 95.0688, 33.1965, 1.62", "62.864, 95.7013, 33.4034, 2.14", "62.8669, 95.8633, 33.4552, 2.36", "62.8402, 96.3718, 33.6186, 2.36", "62.7618, 97.0562, 33.8461, 1.77", "62.6294, 97.8502, 34.1349, 0.52", "62.6208, 97.8952, 34.1515, 0.52", "62.5702, 98.1108, 34.2319, 0.37", "62.4646, 98.495, 34.3805, 0.37", "62.413, 98.6414, 34.4419, 0.29", "62.1097, 99.3647, 34.796, 0.29", "66.4508, 106.097, 36.1477, 0.29", "69.9939, 113.154, 37.9915, 0.29", "73.0189, 120.648, 38.6727, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "13.6263, 20.1024, -2.61468, 1.33", "14.4913, 19.7408, -2.74514, 1.33", "15.4179, 19.3541, -2.86935, 0.96", "16.4534, 18.9088, -3.00201, 0.88", "16.4985, 18.8886, -3.00778, 0.88", "17.6181, 18.3691, -3.15418, 0.88", "18.6856, 17.8655, -3.29568, 0.81", "18.7305, 17.8446, -3.30143, 0.81", "19.3034, 17.5694, -3.37424, 0.81", "19.8741, 17.3041, -3.45102, 0.81", "20.5136, 17.0167, -3.54288, 0.81", "20.5593, 16.9981, -3.55018, 0.81", "21.3983, 16.6951, -3.70279, 0.81", "21.6047, 16.6294, -3.7395, 0.81", "22.4302, 16.405, -3.88282, 0.81", "22.9309, 16.2848, -3.98318, 0.66", "23.8415, 16.0808, -4.18635, 0.66", "24.4007, 15.9589, -4.32239, 0.88", "24.8954, 15.8587, -4.45302, 0.88", "25.2029, 15.802, -4.54263, 0.88", "25.8157, 15.7111, -4.758, 0.74", "26.0122, 15.6872, -4.83704, 0.74", "26.4913, 15.6357, -5.06233, 0.66", "27.0064, 15.5886, -5.32212, 0.37", "27.6731, 15.524, -5.68952, 0.29", "28.2929, 15.4652, -6.04087, 0.29", "28.3362, 15.4611, -6.06551, 0.29", "28.7104, 15.422, -6.29838, 0.44", "29.1486, 15.3647, -6.58867, 0.44", "29.7172, 15.2643, -6.9724, 0.44", "29.9375, 15.2151, -7.10986, 1.03", "29.9796, 15.2035, -7.13419, 1.03", "30.6025, 15.0274, -7.47342, 1.55", "30.9941, 14.9167, -7.66428, 1.84", "31.2232, 14.853, -7.76883, 1.84", "31.6559, 14.7341, -7.9436, 1.55", "32.297, 14.5561, -8.19206, 0.59", "32.6358, 14.4655, -8.31368, 0.37", "33.2169, 14.305, -8.4991, 0.22", "33.4151, 14.2522, -8.56064, 0.44", "33.7648, 14.1571, -8.66129, 0.88", "33.8108, 14.1435, -8.67514, 0.88", "34.1086, 14.0597, -8.76137, 1.11", "34.3774, 13.9856, -8.85045, 1.11", "34.5211, 13.9484, -8.90181, 1.11", "35.0072, 13.835, -9.02781, 0.52", "35.5156, 13.7237, -9.1049, 0.22", "36.0521, 13.6059, -9.14693, 0.22", "36.2181, 13.5709, -9.15052, 0.52", "36.6923, 13.477, -9.13941, 0.96", "37.5685, 13.3029, -9.07914, 1.25", "38.0991, 13.2001, -9.01169, 1.55", "38.3169, 13.1562, -8.97232, 1.69", "38.6675, 13.0799, -8.90912, 1.33", "38.8269, 13.0476, -8.88161, 1.03", "38.883, 13.0381, -8.87629, 1.03", "39.0382, 13.0139, -8.87971, 0.88", "39.2989, 12.9729, -8.89512, 0.88", "39.6084, 12.9214, -8.91425, 0.52", "40.0805, 12.8403, -8.94504, 0.29", "40.9154, 12.6988, -9.00549, 0.29", "41.1955, 12.6504, -9.02879, 0.88", "41.6186, 12.5689, -9.07293, 1.33", "41.6668, 12.559, -9.08186, 1.33", "42.0198, 12.4841, -9.1697, 1.33", "42.2133, 12.4416, -9.22998, 1.55", "42.5156, 12.3735, -9.33226, 1.55", "43.2752, 12.1697, -9.58545, 0.22", "44.1354, 11.903, -9.90942, 0.29", "44.1796, 11.8879, -9.92701, 0.29", "44.7443, 11.6753, -10.1596, 0.29", "44.7872, 11.6574, -10.1777, 0.29", "45.9409, 11.1262, -10.6642, 0.29", "46.5375, 10.8259, -10.9118, 1.11", "46.8053, 10.6733, -11.0247, 1.62", "47.1316, 10.4675, -11.207, 1.84", "47.3435, 10.3182, -11.3574, 2.06", "47.5441, 10.1573, -11.5222, 1.84", "47.6699, 10.0412, -11.6466, 1.55", "48.0373, 9.69234, -11.971, 1.11", "48.6834, 9.08092, -12.5514, 0.29", "48.8562, 8.92058, -12.7032, 0.15", "49.3761, 8.46373, -13.1252, 0.15", "49.4472, 8.40376, -13.1767, 0.15", "50.2545, 7.73315, -13.6672, 0.15", "50.6689, 7.40896, -13.8779, 0.88", "50.9227, 7.22037, -13.9836, 1.69", "51.2644, 6.97102, -14.127, 1.99", "51.6476, 6.70215, -14.2856, 1.99", "52.0941, 6.39457, -14.4632, 0.88", "52.6216, 6.04165, -14.6604, 0.22", "53.5792, 5.39145, -15.0337, 0.22", "53.8418, 5.21842, -15.1458, 0.59", "54.1141, 5.03743, -15.2687, 0.96", "54.3672, 4.87201, -15.3869, 1.11", "54.6095, 4.71892, -15.4936, 1.11", "55.3599, 4.23014, -15.8364, 0.15", "55.7204, 3.99033, -16.0159, 0.15", "56.3417, 3.56877, -16.3288, 0.15", "56.3784, 3.54265, -16.3498, 0.15", "57.4045, 2.76865, -16.9659, 0.15", "57.8816, 2.39309, -17.2495, 1.25", "58.2521, 2.09257, -17.4608, 1.62", "58.483, 1.89499, -17.5971, 1.62", "59.1652, 1.30232, -18.0067, 0.15", "59.94, 0.597258, -18.4732, 0.15", "60.1547, 0.383692, -18.5972, 0.66", "60.3569, 0.179666, -18.6974, 1.03", "60.5747, -0.0488281, -18.8008, 1.03", "60.6985, -0.180656, -18.8522, 1.03", "61.0331, -0.54712, -18.9563, 0.15", "61.6916, -1.30321, -19.1914, 0.15", "61.7326, -1.35099, -19.2077, 0.52", "61.8214, -1.45926, -19.2441, 0.52", "62.0753, -1.7805, -19.3504, 0.59", "62.1999, -1.94204, -19.4007, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "27.2644, -173.196, 3.17132, 0.81", "27.7779, -173.551, 3.21708, 0.81", "28.5107, -174.102, 3.27807, 0.52", "29.8113, -175.112, 3.38659, 0.44", "30.7825, -175.885, 3.46729, 0.44", "31.1794, -176.211, 3.50131, 0.81", "31.8409, -176.759, 3.56018, 0.15", "33.7325, -178.373, 3.60283, 0.15", "33.8798, -178.503, 3.59685, 0.44", "33.99, -178.603, 3.5866, 0.44", "34.3829, -178.954, 3.52883, 0.96", "34.4942, -179.052, 3.50971, 0.96", "35.4858, -179.92, 3.36501, 0.96", "35.5471, -179.969, 3.35219, 0.96", "36.0783, -180.399, 3.267, 0.96", "36.6399, -180.854, 3.20453, 0.96", "37.255, -181.366, 3.17639, 0.29", "37.9433, -181.977, 3.22781, 0.29", "37.9944, -182.023, 3.23541, 0.29", "38.2648, -182.274, 3.26598, 0.52", "38.3409, -182.347, 3.27159, 0.52", "38.676, -182.672, 3.28805, 0.52", "39.6706, -183.646, 3.33312, 0.22", "40.0629, -184.06, 3.33633, 0.37", "40.1126, -184.122, 3.33792, 0.37", "40.3357, -184.436, 3.352, 0.37", "40.4214, -184.57, 3.36137, 0.37", "40.5366, -184.77, 3.38013, 0.37", "40.8541, -185.374, 3.45576, 0.22", "41.5541, -186.73, 3.67357, 0.22", "41.7347, -187.082, 3.73018, 1.55", "42.0886, -187.772, 3.84277, 2.06", "42.1152, -187.824, 3.85136, 2.06", "42.2563, -188.093, 3.89809, 2.58", "42.5948, -188.702, 4.01662, 2.87", "49.6253, -195.499, 5.8399, 2.87" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "27.2644, -173.196, 3.17132, 0.96", "27.2574, -173.608, 3.16517, 0.96", "27.254, -174.016, 3.1587, 0.66", "27.2543, -174.485, 3.10608, 0.52", "27.2421, -175.066, 3.01174, 0.37", "27.2289, -175.667, 2.91077, 0.37", "27.2213, -176.253, 2.81427, 0.74", "27.219, -176.711, 2.73778, 0.74", "27.2498, -177.529, 2.51197, 0.15", "27.3104, -178.361, 2.22629, 0.15", "27.4223, -179.724, 1.69232, 0.15", "27.4671, -180.111, 1.51815, 0.88", "27.5398, -180.643, 1.26388, 0.96", "27.8192, -182.451, 0.390522, 0.15", "27.9641, -183.289, -0.0146876, 0.15", "28.0696, -183.826, -0.295187, 0.15", "28.4335, -185.403, -1.09477, 0.15", "28.5579, -185.823, -1.29585, 1.11", "28.7223, -186.285, -1.49557, 1.11", "28.8297, -186.531, -1.5717, 0.15", "28.856, -186.578, -1.5866, 0.15", "29.7482, -187.908, -1.95385, 0.15", "30.5644, -188.999, -2.21501, 0.15", "30.6039, -189.049, -2.22755, 0.15", "31.3244, -189.899, -2.44929, 0.15", "31.7554, -190.393, -2.57603, 1.84", "32.3044, -191.007, -2.74169, 2.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "25.4432, -109.855, 14.083, 0.59", "27.9104, -116.143, 19.7726, 0.59", "30.7421, -121.405, 26.3212, 0.59", "33.2942, -127.242, 32.4608, 0.59", "35.9853, -133.582, 37.9841, 0.59", "37.1463, -140.724, 42.9923, 0.59", "38.8373, -147.776, 47.9823, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "25.4432, -109.855, 14.083, 0.52", "26.4471, -120.077, 9.29317, 0.59", "28.329, -129.719, 3.59179, 0.59", "28.5809, -139.004, -2.97041, 0.59", "27.9898, -149.252, -7.77243, 0.59", "28.6798, -158.418, -14.4774, 0.59", "28.2326, -167.465, -21.3708, 0.59", "26.9976, -176.228, -28.548, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-9.60184, -34.9149, -1.95146, 1.4", "-10.6925, -37.9675, -5.50179, 1.4", "-11.1222, -39.1665, -6.49207, 0.52", "-11.1527, -39.2453, -6.54504, 0.52", "-11.7515, -40.6429, -7.37848, 0.81", "-12.1739, -41.508, -7.9384, 1.03", "-12.7886, -42.6207, -8.82488, 1.25", "-13.6776, -43.996, -9.76892, 0.66", "-14.2499, -44.7879, -10.4224, 0.66", "-14.6926, -45.3141, -10.9621, 0.66", "-15.5995, -46.1809, -12.2595, 0.66", "-16.756, -47.0956, -14.1045, 0.66", "-16.8017, -47.1302, -14.1876, 0.66", "-17.2436, -47.5189, -15.0607, 0.66", "-17.2704, -47.5647, -15.131, 0.66", "-17.6563, -48.7989, -16.2662, 0.44", "-17.6717, -48.8727, -16.3098, 0.44", "-17.9839, -50.1244, -16.8334, 0.44", "-18.3167, -51.2395, -17.3345, 0.59", "-18.862, -52.9654, -18.1393, 0.88", "-19.265, -54.1055, -18.6606, 0.88", "-19.2934, -54.1803, -18.695, 0.88", "-20.0762, -56.1188, -19.7088, 0.88", "-20.8329, -57.7662, -20.678, 0.66", "-21.3297, -58.7173, -21.277, 0.59", "-21.6439, -59.2999, -21.6274, 0.59", "-22.2792, -60.5275, -22.4323, 0.59", "-22.8187, -61.6254, -23.1505, 0.22", "-23.1294, -62.3088, -23.5872, 0.22", "-23.496, -63.1196, -24.1332, 0.22", "-24.0303, -64.3261, -24.9838, 0.22", "-24.6879, -65.8924, -26.1196, 1.47", "-24.9828, -66.6894, -26.733, 2.28", "-25.1718, -67.2643, -27.172, 2.28", "-25.855, -69.6884, -29.1348, 0.59", "-26.0792, -70.6681, -30.0073, 0.59", "-26.0903, -70.7271, -30.0712, 0.59", "-26.3965, -72.1635, -31.5936, 0.59", "-26.6903, -73.4253, -32.9626, 0.44", "-26.9392, -74.4605, -34.0901, 1.55", "-27.3275, -76.0385, -35.7479, 1.55", "-27.9271, -78.4582, -38.3964, 0.29", "-28.5895, -80.8426, -40.9228, 0.22", "-28.6079, -80.9023, -40.9843, 0.22", "-28.8036, -81.5179, -41.6133, 1.18", "-28.968, -81.9765, -42.0343, 1.4", "-29.6344, -83.6121, -43.3759, 0.22", "-30.3804, -85.5168, -44.9395, 0.22", "-30.405, -85.5918, -45.0008, 0.22", "-30.6729, -86.3904, -45.5947, 1.84", "-30.8378, -86.8573, -45.9046, 1.84", "-30.8667, -86.9389, -45.954, 1.84", "-31.6824, -89.3848, -47.3815, 0.22", "-32.7447, -92.4814, -49.0828, 0.22", "-32.8477, -92.7655, -49.2271, 0.96", "-33.1501, -93.5681, -49.5988, 0.96", "-33.179, -93.6437, -49.6308, 0.96", "-33.9383, -95.5335, -50.3332, 0.22", "-35.625, -99.4881, -51.3358, 0.22", "-35.8564, -100.036, -51.4645, 1.55", "-36.1461, -100.722, -51.5877, 1.84", "-36.4652, -101.477, -51.693, 1.11", "-36.7505, -102.15, -51.7578, 0.22", "-38.4056, -106.116, -51.8997, 0.22", "-38.4413, -106.209, -51.9014, 0.22", "-39.6594, -109.607, -51.9305, 0.22", "-39.6911, -109.701, -51.9302, 0.22", "-39.8896, -110.328, -51.9209, 1.25", "-40.1084, -111.114, -51.8991, 1.25", "-40.3605, -112.241, -51.847, 0.15", "-40.9256, -115.59, -51.9114, 0.15", "-40.935, -115.675, -51.9173, 0.15", "-40.9797, -116.136, -51.9647, 0.96", "-41.0439, -116.934, -52.0731, 0.96", "-41.0825, -117.738, -52.2385, 0.15", "-41.1407, -121.291, -53.1738, 0.15", "-41.1333, -121.812, -53.3311, 1.11", "-41.1177, -122.511, -53.5409, 1.25", "-41.1172, -122.595, -53.5641, 1.25", "-41.1568, -126.535, -54.7061, 0.15", "-41.1592, -126.619, -54.7298, 0.15", "-41.1773, -127.041, -54.8701, 0.37", "-41.2451, -127.651, -55.085, 0.37", "-41.6289, -130.073, -56.115, 0.22", "-41.9543, -131.78, -56.9048, 1.47", "-42.1159, -132.497, -57.25, 1.47", "-42.5799, -134.458, -58.2373, 0.15", "-43.5925, -138.548, -60.3887, 0.15", "-44.5436, -142.089, -62.3138, 0.15", "-44.5645, -142.162, -62.3551, 0.15", "-44.9508, -143.435, -63.0543, 0.15", "-45.4504, -144.782, -63.7041, 1.62", "-45.4828, -144.857, -63.734, 1.62", "-45.9149, -145.738, -64.072, 1.62", "-45.9565, -145.812, -64.0936, 1.62", "-46.608, -146.911, -64.4005, 0.15", "-49.8618, -151.867, -65.8393, 0.15", "-49.9357, -151.973, -65.8683, 0.52", "-49.986, -152.041, -65.8875, 0.52", "-50.4787, -152.684, -66.0704, 0.52", "-50.6413, -152.882, -66.1267, 0.15", "-53.0252, -155.491, -66.8553, 0.15", "-53.3672, -155.84, -67.064, 0.81", "-53.8854, -156.409, -67.4755, 0.81", "-53.9309, -156.464, -67.5258, 0.81", "-54.1238, -156.711, -67.7809, 0.15", "-54.166, -156.762, -67.8394, 0.15", "-56.3666, -158.902, -70.5202, 0.15", "-56.3666, -158.902, -70.5202, 0.44", "-57.2486, -159.617, -71.3999, 0.22", "-58.477, -160.586, -72.5809, 0.22", "-60.5689, -162.175, -74.4842, 0.22", "-63.4816, -164.242, -76.8651, 0.22", "-63.8979, -164.502, -77.1374, 0.81", "-64.4628, -164.846, -77.4912, 0.81" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.60184, -34.9149, -1.95146, 2.28", "-9.57641, -35.2221, -1.84268, 2.28", "-9.5704, -35.2828, -1.82272, 2.28", "-9.46732, -36.3384, -1.5042, 1.62", "-9.34085, -37.6788, -1.14693, 1.4", "-9.21283, -38.9088, -0.848677, 1.55", "-9.09396, -40.0119, -0.592456, 1.55", "-8.99743, -40.7767, -0.426757, 1.55", "-8.88177, -41.6222, -0.254449, 1.33", "-8.61426, -43.3885, 0.0755669, 1.18", "-8.32266, -45.3993, 0.421323, 1.18", "-8.31458, -45.462, 0.432108, 1.18", "-8.05035, -47.7422, 0.827655, 1.18", "-8.04489, -47.805, 0.839683, 1.18", "-7.95177, -49.3549, 1.15664, 0.88", "-7.87355, -52.7855, 1.87791, 0.88", "-7.88695, -53.5028, 2.02682, 1.18", "-7.93446, -54.4891, 2.22595, 1.4", "-8.05497, -55.8832, 2.50184, 1.4", "-8.17317, -57.0667, 2.7276, 1.47", "-8.28311, -58.0009, 2.89626, 1.77", "-8.37325, -58.9292, 3.04302, 1.77", "-8.44327, -59.9235, 3.1879, 1.92", "-8.44488, -59.987, 3.19634, 1.92", "-8.40237, -60.986, 3.31768, 1.55", "-8.26178, -62.2376, 3.50437, 1.47", "-7.88598, -64.3356, 3.86965, 1.11", "-7.86959, -64.4058, 3.88342, 1.11", "-7.65442, -65.1981, 4.05092, 0.96", "-7.39369, -66.0569, 4.22473, 1.18", "-7.02705, -67.0989, 4.43156, 1.47", "-6.47279, -68.5092, 4.67077, 0.96", "-6.10162, -69.4173, 4.79183, 1.11", "-6.07886, -69.4772, 4.79773, 1.11", "-5.77133, -70.3969, 4.85306, 1.4", "-5.47135, -71.5995, 4.92772, 1.84", "-5.32366, -72.5266, 4.99653, 2.14", "-5.26712, -73.2005, 5.05801, 2.14", "-5.2644, -73.8626, 5.14949, 1.99", "-5.33168, -74.7938, 5.29785, 1.18", "-5.59737, -76.3741, 5.55333, 1.03", "-5.93029, -77.8608, 5.77468, 0.88", "-6.22366, -79.1642, 5.9577, 0.74", "-6.53605, -80.6455, 6.14825, 0.59", "-6.81914, -82.2952, 6.34225, 0.59", "-7.02321, -84.1176, 6.54163, 0.59", "-7.13087, -85.9683, 6.76948, 0.59", "-7.09967, -87.6018, 7.03347, 0.59", "-7.03596, -88.2428, 7.15724, 1.18", "-6.70207, -90.1687, 7.55621, 1.18", "-6.28958, -91.9093, 7.97, 0.88", "-5.94763, -93.1282, 8.29328, 1.25", "-5.04143, -96.3297, 9.17265, 1.25", "-4.66963, -97.7312, 9.5506, 0.81", "-4.4471, -98.6337, 9.77867, 1.47", "-4.21692, -99.6721, 10.018, 1.84", "-4.07496, -100.399, 10.163, 2.14", "-3.91979, -101.451, 10.3192, 0.74", "-3.80435, -103.854, 10.6067, 0.52", "-3.82874, -104.991, 10.7202, 0.52", "-3.85275, -105.496, 10.768, 0.88", "-3.88226, -105.965, 10.8059, 1.18", "-4.00415, -107.55, 10.9113, 1.18", "-4.11626, -109.0, 11.0075, 0.66", "-4.25718, -110.742, 11.1208, 0.59", "-4.37091, -112.606, 11.2553, 0.88", "-4.38205, -113.076, 11.2956, 1.33", "-4.37147, -114.511, 11.4345, 1.33", "-4.26453, -116.457, 11.6314, 1.33", "-4.15959, -117.656, 11.7508, 1.62", "-4.02701, -118.983, 11.8736, 1.62", "-3.86393, -120.227, 11.9586, 1.55", "-3.85211, -120.3, 11.9624, 1.55", "-3.6656, -121.248, 12.0011, 1.11", "-3.30242, -122.985, 12.039, 0.66", "-2.95563, -124.632, 12.0321, 0.66", "-2.75287, -125.72, 12.0048, 1.47", "-2.74312, -125.793, 12.0021, 1.47", "-2.6064, -127.127, 11.9516, 1.47", "-2.60125, -127.191, 11.9476, 1.47", "-2.5275, -128.607, 11.8123, 1.77", "-2.46093, -129.734, 11.668, 2.21", "-2.39663, -130.878, 11.5227, 2.21", "-2.39343, -130.932, 11.5164, 2.21", "-2.28026, -132.746, 11.3654, 2.36", "-2.18208, -134.365, 11.2796, 2.36", "-2.09987, -135.937, 11.2314, 1.99", "-2.04748, -137.071, 11.2166, 1.03", "-1.97733, -139.818, 11.2302, 0.66", "-1.96784, -142.976, 11.3105, 0.66", "-1.99603, -144.312, 11.3796, 0.81", "-2.0245, -145.202, 11.4385, 0.96", "-2.07853, -146.074, 11.5325, 0.74", "-2.19558, -147.858, 11.7664, 0.74", "-2.26054, -148.781, 11.9115, 1.11", "-2.26502, -148.853, 11.9231, 1.11", "-2.30113, -149.915, 12.0713, 1.4", "-2.32306, -152.046, 12.3287, 1.4", "-2.30594, -154.322, 12.5576, 1.18", "-2.30428, -154.386, 12.563, 1.18", "-2.2097, -156.578, 12.6336, 0.74", "-2.15709, -157.406, 12.6267, 1.18", "-2.08157, -158.155, 12.5743, 1.62", "-1.92083, -159.268, 12.3979, 1.77", "-1.73578, -160.373, 12.188, 1.77", "-1.45598, -161.907, 11.8999, 0.59", "-0.973612, -164.254, 11.4516, 0.59", "-0.525659, -166.352, 11.0692, 0.59", "-0.175986, -167.954, 10.7946, 0.59", "3.41594E-4, -168.775, 10.6595, 1.62", "0.244386, -170.041, 10.4709, 1.77", "0.697889, -172.757, 10.1511, 1.77", "0.836978, -173.704, 10.0518, 1.03", "1.03385, -175.442, 9.93741, 0.66", "1.18236, -177.14, 9.88718, 0.29", "1.24864, -178.262, 9.8722, 0.29", "1.26964, -179.033, 9.87969, 0.29", "1.25462, -179.563, 9.91156, 1.03", "1.20991, -180.368, 9.9727, 1.25", "1.10157, -181.447, 10.0785, 1.25", "0.982628, -182.36, 10.1996, 0.37", "0.973638, -182.432, 10.209, 0.37", "0.727271, -184.174, 10.3966, 0.29", "0.717678, -184.246, 10.4004, 0.29", "0.650652, -184.81, 10.409, 1.33", "0.525321, -185.877, 10.4042, 2.21", "0.375032, -187.345, 10.3685, 2.21", "0.211951, -189.109, 10.3185, 1.84", "0.0824256, -190.766, 10.2553, 1.4", "-0.0174388, -192.163, 10.1952, 1.4" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-85.0536, -18.2617, 3.32066, 0.66", "-86.6822, -19.2166, 5.63485, 0.66", "-86.7309, -19.2455, 5.70806, 0.66", "-87.2082, -19.6084, 6.71955, 0.22", "-87.4171, -19.6785, 7.30079, 0.22", "-87.7871, -19.7636, 8.25263, 0.22", "-87.8219, -19.7702, 8.33857, 0.22", "-88.2081, -19.8277, 9.28103, 1.11", "-88.9108, -19.9101, 11.046, 2.06", "-90.3024, -20.2082, 15.0034, 0.22", "-90.6074, -20.2858, 15.8848, 0.22", "-90.6374, -20.2944, 15.9723, 0.22", "-90.7815, -20.3684, 16.4266, 0.22", "-90.8098, -20.3956, 16.5248, 0.22", "-91.0696, -21.2027, 18.3437, 0.22", "-91.0639, -21.2608, 18.4142, 0.22", "-91.0079, -21.7457, 19.0739, 0.66", "-90.9938, -22.0085, 19.5214, 0.66", "-90.9977, -22.0564, 19.6149, 0.66", "-91.2101, -22.8056, 21.2008, 0.22", "-91.5437, -23.4009, 22.5353, 0.22", "-91.5657, -23.453, 22.6076, 0.22", "-91.8501, -24.1801, 23.5302, 0.74", "-92.0355, -24.7141, 24.163, 1.03", "-92.1158, -24.992, 24.477, 1.03", "-92.1766, -25.4235, 24.8993, 0.15", "-92.2509, -27.4993, 26.8895, 0.15", "-92.2058, -28.7759, 28.1606, 1.03", "-92.1498, -29.382, 28.7705, 1.47", "-92.0336, -30.0728, 29.5043, 0.22", "-91.6315, -31.824, 31.4295, 0.22", "-91.6054, -31.9073, 31.5251, 0.22", "-91.201, -32.8132, 32.9106, 0.22", "-91.1805, -32.8597, 32.9872, 0.22", "-91.0285, -33.2053, 33.7107, 1.11", "-90.975, -33.3437, 34.0628, 1.11", "-90.9566, -33.4047, 34.2502, 1.11", "-90.6316, -34.7108, 37.0371, 0.22", "-90.508, -35.2451, 38.0551, 0.22", "-90.4833, -35.3416, 38.2517, 0.81", "-90.4193, -35.6076, 38.7983, 0.81", "-90.3288, -36.1077, 39.877, 0.15", "-90.253, -36.923, 41.5596, 0.15", "-90.2266, -37.5003, 42.6547, 0.88", "-90.2472, -38.476, 44.6868, 1.55", "-90.3031, -38.7964, 45.4271, 1.92", "-90.6161, -39.3412, 47.6037, 0.15", "-90.7554, -39.443, 48.3458, 0.15", "-90.8121, -39.4827, 48.629, 0.59", "-90.855, -39.5195, 48.8408, 0.59", "-91.2321, -39.8465, 50.7344, 0.59", "-91.8865, -40.7911, 55.1521, 0.22", "-91.8956, -40.8141, 55.2412, 0.22", "-92.0429, -41.652, 58.1218, 0.22", "-92.0462, -41.6832, 58.2226, 0.52", "-92.0461, -41.7148, 58.3093, 0.52", "-91.8392, -42.9349, 60.5245, 0.15", "-91.8273, -42.9989, 60.5887, 0.15", "-91.577, -44.25, 62.0106, 1.18", "-94.1165, -49.4299, 73.8454, 1.18", "-96.7101, -51.6923, 86.6318, 1.18", "-98.0401, -54.9896, 99.3582, 1.18", "-101.87, -60.5084, 110.677, 1.18", "-107.471, -67.4943, 120.289, 1.18", "-110.327, -75.391, 130.336, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-85.0536, -18.2617, 3.32066, 0.22", "-86.1089, -18.7486, 3.33229, 0.22", "-86.1596, -18.7722, 3.33355, 0.22", "-87.0823, -19.1845, 3.36588, 0.22", "-87.3787, -19.3125, 3.37762, 0.81", "-87.7305, -19.4512, 3.39772, 0.81", "-87.795, -19.4764, 3.39969, 0.81", "-88.0001, -19.5496, 3.40546, 0.81", "-88.4981, -19.7273, 3.41183, 0.15", "-88.5972, -19.7623, 3.41177, 0.15", "-90.5609, -20.4686, 3.42645, 0.15", "-90.9729, -20.6208, 3.42498, 0.81", "-91.2653, -20.7297, 3.42207, 0.96", "-91.5245, -20.8272, 3.41825, 0.96", "-92.1908, -21.083, 3.40862, 0.15", "-93.4967, -21.6162, 3.42483, 0.15", "-93.779, -21.732, 3.45165, 0.74", "-94.1194, -21.8669, 3.50399, 1.11", "-94.2694, -21.9261, 3.53195, 1.11", "-94.763, -22.1051, 3.65799, 0.22", "-96.6454, -22.643, 4.20443, 0.15", "-97.5004, -22.8218, 4.4613, 1.33", "-97.7944, -22.8659, 4.54357, 1.62", "-97.8485, -22.8704, 4.55772, 1.62", "-98.826, -22.8949, 4.78878, 0.15", "-100.655, -22.8261, 5.16796, 0.15", "-101.281, -22.7635, 5.26643, 0.66", "-102.109, -22.6938, 5.35304, 0.66", "-102.884, -22.6378, 5.42071, 1.69", "-103.353, -22.6091, 5.45105, 2.14", "-103.556, -22.6024, 5.45626, 2.14", "-104.398, -22.6006, 5.49453, 0.15", "-105.239, -22.6413, 5.54166, 0.15", "-105.392, -22.6613, 5.54563, 0.81", "-105.432, -22.6723, 5.54483, 0.81", "-105.845, -22.8261, 5.51658, 1.11", "-106.179, -22.978, 5.48504, 0.66", "-106.271, -23.0276, 5.47464, 0.66", "-106.735, -23.3084, 5.42292, 0.15", "-108.155, -24.1962, 5.2915, 0.15", "-108.774, -24.5937, 5.24328, 1.62", "-109.079, -24.7943, 5.22597, 2.06", "-109.289, -24.9365, 5.2133, 1.99", "-109.879, -25.3211, 5.18062, 0.15", "-110.367, -25.6216, 5.14542, 0.29", "-110.49, -25.6947, 5.13016, 0.59", "-110.815, -25.8747, 5.08917, 0.59", "-111.337, -26.1472, 5.01443, 0.22", "-111.828, -26.4076, 4.90542, 0.22", "-113.156, -27.1141, 4.5735, 0.15", "-113.441, -27.2671, 4.49859, 0.74", "-113.795, -27.4553, 4.40728, 0.74", "-114.034, -27.5815, 4.34814, 0.74", "-114.892, -28.0311, 4.16569, 0.15", "-116.203, -28.7665, 3.81786, 0.15", "-116.25, -28.7934, 3.8031, 0.15", "-116.471, -28.9162, 3.72669, 0.59", "-116.647, -29.0112, 3.66206, 0.88", "-116.949, -29.1479, 3.5677, 1.18", "-117.778, -29.4401, 3.42274, 1.18", "-117.825, -29.4547, 3.41443, 1.18", "-118.318, -29.6065, 3.34607, 0.15", "-118.365, -29.6204, 3.34135, 0.15", "-119.404, -29.9246, 3.27085, 0.15", "-120.515, -30.319, 3.28933, 0.15", "-120.567, -30.3391, 3.29362, 0.15", "-120.815, -30.4452, 3.31664, 0.66", "-121.009, -30.5392, 3.33741, 0.66", "-121.176, -30.6283, 3.35804, 0.22", "-122.809, -31.6366, 3.60495, 0.22", "-122.85, -31.6633, 3.61177, 0.22", "-123.086, -31.8309, 3.65824, 0.74", "-123.321, -32.012, 3.70067, 1.03", "-123.57, -32.217, 3.74328, 1.03", "-123.74, -32.3648, 3.77139, 1.03", "-124.057, -32.6566, 3.80303, 0.15", "-125.007, -33.5346, 3.88617, 0.15", "-125.395, -33.8963, 3.89457, 0.37", "-125.634, -34.1184, 3.89045, 0.37", "-125.753, -34.2262, 3.88524, 0.37", "-126.552, -34.9471, 3.84444, 0.15", "-127.216, -35.5532, 3.78837, 0.15", "-127.741, -36.0524, 3.74564, 0.15", "-128.101, -36.415, 3.72409, 1.4", "-128.302, -36.6355, 3.71248, 1.77", "-128.676, -37.0822, 3.69762, 2.06", "-129.132, -37.7457, 3.7208, 0.15", "-129.559, -38.4926, 3.75725, 0.15", "-129.714, -38.8114, 3.78659, 0.59", "-129.821, -39.0607, 3.81005, 0.74", "-129.92, -39.309, 3.83591, 0.74", "-130.305, -40.3597, 3.84669, 0.15", "-130.531, -40.9401, 3.82444, 1.25", "-130.73, -41.4249, 3.77755, 1.62", "-130.814, -41.6191, 3.73889, 1.62", "-130.915, -41.8418, 3.67753, 0.15", "-131.608, -43.277, 3.2016, 0.15", "-132.15, -44.3389, 2.85085, 0.15", "-132.168, -44.3745, 2.83945, 0.15", "-132.686, -45.3726, 2.51748, 1.4", "-132.898, -45.7846, 2.39503, 1.69", "-133.169, -46.2922, 2.29972, 0.22", "-133.921, -47.524, 2.31988, 0.22", "-134.535, -48.4262, 2.4769, 0.15", "-134.733, -48.7065, 2.55036, 1.33", "-134.945, -48.9839, 2.671, 1.55", "-136.003, -50.2641, 3.36723, 0.22", "-136.666, -50.9356, 3.93856, 0.22", "-136.985, -51.1293, 4.3323, 1.84" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "38.4477, 23.2868, 23.403, 0.22", "37.4459, 28.5695, 15.098, 0.22", "37.7692, 33.5499, 6.54733, 0.22", "38.5034, 38.5702, -1.95422, 0.22", "37.5924, 43.8717, -10.2574, 0.22", "38.805, 49.977, -17.9287, 0.22", "40.514, 55.8489, -25.6945, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "38.4477, 23.2868, 23.403, 0.29", "37.4884, 25.6079, 26.8608, 0.22", "36.5786, 27.8255, 30.4025, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "8.78675, 107.629, 34.0694, 0.37", "8.97513, 106.961, 34.2536, 0.37", "9.1494, 106.344, 34.424, 0.37", "9.17136, 106.266, 34.4454, 0.37", "11.3899, 95.7378, 39.7204, 0.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "8.78675, 107.629, 34.0694, 0.29", "8.21534, 108.062, 34.0462, 0.29", "7.62904, 108.508, 34.0224, 0.22", "7.37833, 108.698, 34.0122, 0.22", "6.89765, 109.063, 33.9927, 0.22", "6.61832, 109.275, 33.9814, 0.22", "5.91726, 109.808, 33.9529, 0.22", "-2.70902, 117.569, 35.2193, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-97.7379, 15.7956, -12.1757, 0.29", "-97.6842, 14.4876, -11.4357, 0.29", "-97.6824, 14.4146, -11.3897, 0.29", "-97.7022, 12.3002, -9.99952, 0.29", "-97.7635, 10.9651, -9.10197, 0.29", "-97.7673, 10.9115, -9.06558, 0.29", "-98.1095, 8.21462, -7.0705, 0.22", "-98.1329, 8.12188, -6.99499, 0.22", "-98.4249, 7.21864, -6.22448, 0.22", "-98.5507, 6.90909, -5.93758, 1.55", "-98.7036, 6.57546, -5.62242, 1.55", "-99.5582, 4.7946, -3.98746, 0.22", "-100.803, 2.48597, -2.00827, 0.15", "-100.849, 2.4004, -1.93395, 0.59" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-97.7379, 15.7956, -12.1757, 0.22", "-99.0503, 17.1473, -12.4388, 0.22", "-100.84, 18.9719, -12.6532, 0.22", "-101.755, 19.9006, -12.7189, 0.22", "-101.806, 19.9512, -12.7208, 0.22", "-101.87, 20.014, -12.7218, 0.59", "-102.217, 20.3368, -12.7205, 0.59", "-103.315, 21.1714, -12.7012, 0.15", "-103.363, 21.1961, -12.6909, 0.15", "-103.801, 21.3761, -12.5753, 1.11", "-103.852, 21.3909, -12.5631, 1.11", "-104.704, 21.524, -12.3797, 2.06", "-105.408, 21.5665, -12.239, 2.36", "-106.697, 21.5749, -11.9322, 0.15", "-106.819, 21.5749, -11.8974, 0.15", "-108.034, 21.5604, -11.5273, 0.15", "-109.207, 21.5732, -11.1815, 0.15", "-109.278, 21.5772, -11.1643, 0.15", "-110.42, 21.7057, -10.8967, 0.74", "-111.195, 21.8182, -10.742, 0.74", "-111.9, 21.9419, -10.6094, 0.15", "-113.671, 22.3247, -10.305, 0.15", "-115.919, 22.9222, -9.88466, 0.15", "-116.992, 23.2295, -9.67954, 1.4", "-117.497, 23.384, -9.59241, 1.77", "-117.995, 23.5535, -9.4939, 1.77", "-118.882, 23.8854, -9.29585, 0.22", "-120.251, 24.4312, -8.99525, 0.22", "-120.317, 24.4586, -8.98133, 0.22", "-121.808, 25.0719, -8.69132, 0.22", "-121.971, 25.1396, -8.65852, 0.88", "-122.526, 25.371, -8.55015, 1.03", "-124.102, 25.9809, -8.30906, 0.22", "-124.154, 25.9984, -8.30403, 0.22", "-124.76, 26.214, -8.23943, 0.22", "-125.02, 26.3108, -8.20729, 0.44", "-125.287, 26.4123, -8.17719, 0.44", "-126.55, 26.9058, -8.18908, 0.15", "-126.633, 26.9379, -8.20143, 0.44", "-127.074, 27.0845, -8.33692, 0.44", "-127.318, 27.1544, -8.43555, 0.44", "-127.374, 27.1696, -8.46054, 0.15", "-128.747, 27.5331, -9.09696, 0.15", "-128.794, 27.5457, -9.12022, 0.15", "-129.988, 27.898, -9.65985, 0.15", "-130.513, 28.0517, -9.90627, 1.03", "-130.936, 28.1793, -10.1045, 1.33", "-131.623, 28.3933, -10.4088, 0.15", "-131.678, 28.4108, -10.4349, 0.15", "-132.847, 28.7958, -11.04, 0.15", "-133.526, 29.0502, -11.4226, 0.66", "-133.809, 29.1597, -11.601, 0.81", "-134.286, 29.3417, -11.9522, 0.15", "-135.142, 29.7024, -12.6855, 0.15", "-135.212, 29.7349, -12.7519, 0.15", "-135.776, 30.0621, -13.4991, 0.15", "-135.818, 30.0986, -13.5683, 0.15", "-136.129, 30.4802, -14.224, 0.66", "-136.278, 30.7239, -14.5956, 0.66", "-136.297, 30.761, -14.6419, 0.66", "-136.792, 31.6262, -15.5735, 0.15", "-137.119, 32.1391, -16.0406, 1.47", "-137.378, 32.5017, -16.3242, 1.92", "-137.617, 32.8097, -16.5256, 1.92", "-138.061, 33.3191, -16.8268, 0.15", "-138.89, 34.112, -17.2137, 0.15", "-139.553, 34.6772, -17.4385, 0.15", "-139.823, 34.8814, -17.5187, 0.88", "-140.197, 35.1476, -17.622, 1.11", "-140.555, 35.3917, -17.7157, 0.15", "-142.909, 36.8849, -18.2783, 0.15", "-142.971, 36.9186, -18.2928, 0.15", "-143.81, 37.3224, -18.4858, 0.15", "-144.197, 37.4906, -18.5724, 0.88", "-144.584, 37.6434, -18.6593, 1.18", "-145.074, 37.8341, -18.7701, 0.15", "-146.775, 38.4947, -19.1638, 0.15", "-147.213, 38.6793, -19.267, 0.81", "-147.636, 38.8819, -19.371, 1.03", "-148.028, 39.0843, -19.468, 0.15", "-150.475, 40.4535, -20.0807, 0.15", "-150.867, 40.6963, -20.1801, 0.74", "-151.326, 41.0163, -20.2884, 0.96", "-152.551, 41.9011, -20.5884, 0.15", "-152.716, 42.0248, -20.6303, 0.44", "-152.813, 42.1008, -20.6558, 0.44", "-152.923, 42.2017, -20.6887, 0.44", "-153.141, 42.4021, -20.7518, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "32.3044, -191.007, -2.74169, 0.15", "33.1573, -191.779, -2.60184, 0.15", "34.4173, -192.941, -2.38075, 0.15", "34.4618, -192.982, -2.37264, 0.15", "36.2499, -194.703, -2.07739, 0.15", "36.668, -195.132, -2.01442, 0.15", "36.7035, -195.171, -2.00954, 0.15", "36.9752, -195.519, -1.97795, 1.25", "37.1181, -195.708, -1.98841, 1.25", "37.514, -196.205, -2.11836, 0.22", "37.9896, -196.806, -2.38539, 0.22", "38.6679, -197.646, -2.80161, 0.22", "39.1692, -198.253, -3.12617, 0.22", "39.9113, -199.128, -3.65805, 1.03", "40.5188, -199.793, -4.12012, 1.18" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "32.3044, -191.007, -2.74169, 0.15", "32.3707, -191.784, -2.78143, 0.15", "32.4855, -193.131, -2.85032, 0.15", "32.4921, -193.208, -2.85428, 0.15", "32.536, -193.722, -2.88059, 1.03" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-0.0174388, -192.163, 10.1952, 0.59", "0.389749, -193.603, 10.2262, 0.59", "0.917658, -195.462, 10.2988, 0.59", "0.941398, -195.543, 10.3045, 0.59", "1.45015, -197.213, 10.4739, 0.44", "2.00106, -198.987, 10.6813, 0.44", "2.02637, -199.067, 10.6914, 0.44", "2.21546, -199.65, 10.7986, 1.03", "2.71665, -201.074, 11.0439, 1.03", "3.12394, -202.276, 11.2298, 0.66", "3.29442, -202.811, 11.3055, 0.37", "3.31506, -202.882, 11.3134, 0.37", "3.72889, -204.458, 11.4679, 0.37", "3.94773, -205.378, 11.513, 1.03", "4.14717, -206.315, 11.5172, 1.62", "4.31975, -207.241, 11.4983, 1.62", "4.48852, -208.464, 11.4569, 1.25", "4.60345, -209.558, 11.4104, 1.03", "4.7488, -210.957, 11.2775, 0.88", "4.81947, -211.579, 11.1787, 0.66", "4.91203, -212.412, 10.9874, 0.66", "5.0967, -213.895, 10.5129, 0.66", "5.10564, -213.963, 10.4865, 0.66", "5.39804, -216.308, 9.54572, 0.59", "5.55895, -217.542, 9.02841, 1.4", "5.68311, -218.569, 8.60608, 1.84", "5.82473, -219.717, 8.13466, 2.14", "5.92069, -220.504, 7.82414, 2.14", "6.02103, -221.763, 7.39873, 0.66", "6.04682, -222.472, 7.21576, 0.22", "6.11513, -224.324, 6.84646, 0.22", "6.11772, -224.386, 6.83554, 0.22", "6.13389, -224.957, 6.76966, 1.03", "6.1693, -225.953, 6.66548, 1.03", "6.22659, -227.521, 6.53513, 1.11", "6.25816, -228.148, 6.51303, 0.59", "6.28464, -228.601, 6.50697, 0.15", "6.3878, -230.456, 6.46191, 0.15", "6.39225, -230.529, 6.46049, 0.15", "6.43396, -231.152, 6.45439, 0.15", "6.49397, -231.98, 6.39471, 0.15", "6.60263, -233.262, 6.23972, 0.15", "6.69463, -234.302, 6.09309, 1.4", "6.82122, -235.696, 5.86995, 2.28", "6.95125, -236.846, 5.6867, 2.65", "7.29384, -238.996, 5.29886, 0.22", "7.50478, -240.12, 5.07848, 0.22", "7.8581, -241.752, 4.75951, 0.22", "7.87592, -241.833, 4.74474, 0.22", "8.32831, -243.77, 4.37734, 0.22", "8.65391, -245.054, 4.17599, 0.22", "8.78199, -245.488, 4.1234, 0.96", "9.02696, -246.134, 3.98545, 1.11", "9.30951, -246.734, 3.79317, 1.11", "9.68438, -247.525, 3.52604, 0.15", "10.1569, -248.516, 3.17304, 0.15", "10.6426, -249.539, 2.85267, 0.74", "11.4205, -251.063, 2.37488, 0.74", "11.7684, -251.726, 2.17802, 0.15", "12.732, -253.538, 1.68776, 0.15", "12.9852, -254.097, 1.57703, 1.47", "13.4155, -255.286, 1.42333, 2.28", "13.7, -256.399, 1.36016, 2.43", "13.8746, -257.361, 1.34838, 2.43", "14.0632, -258.797, 1.3473, 0.15", "14.3157, -261.485, 1.2589, 0.15", "14.3859, -262.866, 1.18849, 0.15", "14.316, -264.518, 1.05819, 0.15", "14.2716, -264.911, 1.02297, 0.88", "14.129, -265.768, 0.912318, 1.25", "13.8647, -266.946, 0.721111, 0.44", "13.7508, -267.387, 0.626638, 0.15", "12.8041, -270.794, -0.183202, 0.15", "12.7832, -270.864, -0.198704, 0.15", "12.5929, -271.401, -0.306192, 0.81", "12.2984, -272.124, -0.42153, 0.81", "12.2674, -272.191, -0.427976, 0.81", "11.8915, -272.935, -0.489565, 0.81", "11.4497, -273.71, -0.536655, 0.15", "10.7761, -274.851, -0.55858, 0.15", "10.4438, -275.405, -0.554721, 1.18", "10.1176, -275.95, -0.551305, 1.62", "9.84138, -276.441, -0.563112, 1.62", "9.35567, -277.451, -0.610534, 0.22", "8.50844, -279.461, -0.755119, 0.22", "8.27941, -280.143, -0.851626, 0.81", "8.06419, -280.969, -1.00736, 1.03", "7.85233, -282.067, -1.26354, 0.15", "7.51123, -285.006, -2.04759, 0.15", "7.4972, -285.514, -2.20258, 0.88", "7.70807, -287.63, -2.99821, 0.22", "7.97041, -288.897, -3.45172, 0.22", "8.09919, -289.321, -3.59427, 0.66", "8.28246, -289.772, -3.70426, 0.96", "8.31693, -289.837, -3.71553, 0.96", "8.91447, -291.054, -3.81086, 0.15", "9.87396, -293.231, -3.77193, 0.15", "9.97055, -293.455, -3.77412, 0.52", "10.6555, -295.235, -3.77814, 0.15", "11.0327, -296.289, -3.77894, 1.18", "11.4062, -297.406, -3.77028, 1.84", "11.6471, -298.205, -3.75343, 1.84", "12.0288, -299.58, -3.77236, 0.15", "12.686, -302.1, -3.82062, 0.15", "12.7645, -302.419, -3.83432, 0.59", "12.8551, -302.799, -3.84855, 0.74", "12.9269, -303.106, -3.85679, 0.15", "13.5312, -305.994, -3.92837, 0.15", "13.6622, -306.897, -3.89152, 1.03", "13.7741, -307.933, -3.82606, 1.77", "13.8414, -308.783, -3.74933, 1.77", "13.8913, -309.788, -3.62981, 0.81", "13.8946, -310.55, -3.4943, 0.15", "13.7551, -313.578, -2.75411, 0.15", "13.7492, -313.649, -2.73466, 0.15", "13.6888, -314.159, -2.57253, 1.18", "13.555, -315.176, -2.23406, 1.62", "13.4331, -316.125, -1.90717, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.0174388, -192.163, 10.1952, 0.52", "-0.361477, -193.408, 9.13676, 0.52", "-0.555156, -194.109, 8.54088, 0.52", "-0.702432, -194.643, 8.08778, 0.52", "-0.762931, -194.862, 7.90165, 0.81", "-0.777756, -194.915, 7.85604, 0.81", "-0.900053, -195.358, 7.47978, 0.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "40.514, 55.8489, -25.6945, 0.37", "39.0417, 64.2134, -33.8127, 0.37", "36.6922, 73.9122, -39.9303, 0.37", "33.307, 83.1014, -46.3755, 0.37", "31.5465, 92.2713, -53.4679, 0.37", "27.8819, 101.092, -60.2857, 0.37" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "40.514, 55.8489, -25.6945, 0.29", "41.3126, 60.6466, -33.6562, 0.37", "43.4149, 66.8923, -40.2169, 0.37", "46.9124, 73.1566, -46.126, 0.37", "50.4068, 79.6148, -51.8146, 0.37" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "11.3899, 95.7378, 39.7204, 0.22", "13.8313, 86.1809, 44.1701, 0.22", "18.5701, 77.9952, 49.5368, 0.22", "22.6773, 70.2985, 56.0656, 0.22", "26.3533, 62.1984, 62.3339, 0.22", "30.0408, 55.5187, 70.1648, 0.22", "32.9144, 48.8615, 78.3513, 0.22", "35.2654, 43.4779, 87.6194, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "11.3899, 95.7378, 39.7204, 0.29", "14.4026, 87.8807, 42.8683, 0.22", "17.1421, 81.0424, 48.1037, 0.22", "20.9343, 74.1066, 52.4547, 0.22", "24.462, 67.5178, 57.5425, 0.22", "28.111, 60.2434, 61.4047, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.70902, 117.569, 35.2193, 0.37", "-8.95622, 122.881, 35.6988, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.70902, 117.569, 35.2193, 0.29", "-12.5529, 125.126, 39.7528, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "13.4331, -316.125, -1.90717, 0.29", "12.9226, -317.037, -1.78014, 0.29", "12.1453, -318.279, -1.60975, 0.29", "10.9262, -320.069, -1.39265, 0.29", "10.5961, -320.531, -1.34097, 0.74", "10.1485, -321.091, -1.2546, 1.11", "9.47615, -321.751, -1.19991, 1.11", "8.97154, -322.133, -1.17548, 0.88", "8.58819, -322.359, -1.19097, 0.52", "8.53132, -322.387, -1.19825, 0.52", "7.35219, -322.955, -1.39971, 0.22", "4.55386, -324.268, -1.95723, 0.15", "4.29428, -324.405, -2.02558, 0.44", "3.90942, -324.626, -2.13615, 0.66", "3.85727, -324.659, -2.15291, 0.66", "3.52497, -324.897, -2.27677, 0.66", "3.3924, -325.013, -2.33942, 0.15", "1.97308, -326.529, -2.97686, 0.15", "1.93154, -326.573, -2.99525, 0.15", "1.71782, -326.807, -3.08932, 0.74", "1.33001, -327.233, -3.25984, 1.11", "0.87888, -327.74, -3.4571, 0.88", "0.833318, -327.793, -3.47687, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "13.4331, -316.125, -1.90717, 0.15", "13.3553, -317.261, -1.52989, 0.15", "13.0812, -319.769, -0.828694, 0.15", "13.0289, -320.324, -0.705191, 0.44", "12.9789, -320.932, -0.583486, 0.44", "12.9021, -322.108, -0.375926, 0.15", "12.8001, -324.016, -0.0650272, 0.15", "12.7781, -325.195, 0.0692573, 0.15", "12.7474, -326.209, 0.168729, 0.74", "12.7345, -326.941, 0.239363, 1.33", "12.7377, -327.732, 0.295685, 0.74", "12.7557, -328.077, 0.299226, 0.15", "12.9244, -330.238, 0.281898, 0.15", "12.9446, -330.436, 0.270545, 0.44", "12.9626, -331.798, 0.0540752, 0.15", "12.9596, -331.872, 0.0400646, 0.15", "12.887, -332.779, -0.142101, 0.66", "12.8552, -333.053, -0.19852, 0.88", "12.7144, -333.96, -0.395527, 0.15", "12.0371, -338.142, -1.09794, 0.15", "11.9665, -338.885, -1.13451, 1.03", "11.9428, -339.298, -1.12258, 1.03", "11.9363, -339.7, -1.06638, 0.22", "11.9398, -339.754, -1.05297, 0.22", "12.244, -341.609, -0.358308, 0.22", "13.4058, -344.328, 1.24993, 0.22", "13.4349, -344.377, 1.28348, 0.22", "14.133, -345.288, 2.01648, 0.22", "14.6886, -345.785, 2.59627, 0.96", "14.9403, -345.916, 2.86214, 0.15", "16.436, -346.073, 4.45805, 0.15", "16.6627, -346.028, 4.70107, 0.66", "16.8823, -345.972, 4.93225, 0.15", "18.2647, -345.5, 6.36627, 0.15", "18.4956, -345.406, 6.62151, 0.44", "18.6736, -345.324, 6.83464, 0.15", "19.305, -345.002, 7.73767, 0.15", "19.5818, -344.868, 8.1396, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "27.8819, 101.092, -60.2857, 0.22", "25.119, 111.959, -65.1502, 0.22", "25.7467, 123.316, -69.4478, 0.22", "25.3719, 134.019, -75.3015, 0.22", "25.7108, 144.92, -80.7399, 0.22", "24.8076, 155.772, -86.2554, 0.22", "22.8624, 167.088, -90.368, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "27.8819, 101.092, -60.2857, 0.29", "24.7568, 111.964, -67.9792, 0.22", "20.3004, 121.879, -76.3308, 0.22", "14.2628, 132.291, -82.855, 0.22", "8.82942, 144.307, -86.2383, 0.22", "3.47923, 156.013, -90.7444, 0.22", "0.565351, 169.086, -92.7594, 0.22", "-0.509132, 182.341, -95.2634, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "50.4068, 79.6148, -51.8146, 0.22", "54.5116, 86.5571, -60.2668, 0.22", "56.6478, 93.2625, -69.5958, 0.22", "57.4341, 100.487, -78.7281, 0.22", "57.2074, 107.787, -87.8265, 0.22", "54.7162, 114.759, -96.8425, 0.22", "53.0658, 122.071, -105.776, 0.22", "51.7867, 130.238, -113.966, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "50.4068, 79.6148, -51.8146, 0.29", "53.5245, 88.2219, -60.9219, 0.22", "57.3902, 95.7877, -70.6778, 0.22", "58.8131, 103.75, -80.766, 0.22", "59.9127, 112.846, -89.8479, 0.22", "62.2682, 120.393, -100.09, 0.22", "66.3531, 127.268, -110.275, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_66", "dend_53", "dend_39", "dend_32", "dend_26", "dend_19", "dend_16", "dend_5", "dend_0", "dend_68", "dend_67", "dend_55", "dend_54", "dend_43", "dend_40", "dend_38", "dend_33", "dend_31", "dend_30", "dend_27", "dend_21", "dend_20", "dend_18", "dend_17", "dend_13", "dend_6", "dend_4", "dend_1", "dend_65", "dend_56", "dend_52", "dend_51", "dend_44", "dend_42", "dend_41", "dend_37", "dend_34", "dend_29", "dend_28", "dend_25", "dend_22", "dend_15", "dend_14", "dend_12", "dend_7", "dend_3", "dend_2", "dend_58", "dend_57", "dend_48", "dend_45", "dend_36", "dend_35", "dend_24", "dend_23", "dend_9", "dend_8", "dend_62", "dend_59", "dend_50", "dend_49", "dend_47", "dend_46", "dend_11", "dend_10", "dend_64", "dend_63", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_66", "dend_53", "dend_39", "dend_32", "dend_26", "dend_19", "dend_16", "dend_5", "dend_0", "dend_68", "dend_67", "dend_55", "dend_54", "dend_43", "dend_40", "dend_38", "dend_33", "dend_31", "dend_30", "dend_27", "dend_21", "dend_20", "dend_18", "dend_17", "dend_13", "dend_6", "dend_4", "dend_1", "dend_65", "dend_56", "dend_52", "dend_51", "dend_44", "dend_42", "dend_41", "dend_37", "dend_34", "dend_29", "dend_28", "dend_25", "dend_22", "dend_15", "dend_14", "dend_12", "dend_7", "dend_3", "dend_2", "dend_58", "dend_57", "dend_48", "dend_45", "dend_36", "dend_35", "dend_24", "dend_23", "dend_9", "dend_8", "dend_62", "dend_59", "dend_50", "dend_49", "dend_47", "dend_46", "dend_11", "dend_10", "dend_64", "dend_63", "dend_61", "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_46", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L6_NBC_df448fd9b1_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_66, id: dend_66, parent: soma_0
create dend_66
public dend_66
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_26
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_65, id: dend_65, parent: dend_55
create dend_65
public dend_65
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_43
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_43
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_68
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_46, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_66(0), soma_0(0.44999996701105516)
    connect dend_53(0), soma_0(0.44999996701105516)
    connect dend_39(0), soma_0(0.44999996701105516)
    connect dend_32(0), soma_0(0.44999996701105516)
    connect dend_26(0), soma_0(0.44999996701105516)
    connect dend_19(0), soma_0(0.44999996701105516)
    connect dend_16(0), soma_0(0.44999996701105516)
    connect dend_5(0), soma_0(0.44999996701105516)
    connect dend_0(0), soma_0(0.44999996701105516)
    connect axon_0(0), soma_0(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_26(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_65(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_43(1.0)
    connect dend_51(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.47614, -8.41033, 1.41903, 3.98524 ) }
    soma_0 { pt3dadd( -7.69742, -7.5116, 1.27705, 6.91431 ) }
    soma_0 { pt3dadd( -6.9187, -6.61288, 1.13506, 10.5717 ) }
    soma_0 { pt3dadd( -6.13998, -5.71415, 0.993075, 11.4108 ) }
    soma_0 { pt3dadd( -5.36126, -4.81542, 0.851088, 12.9455 ) }
    soma_0 { pt3dadd( -4.58254, -3.9167, 0.709102, 14.3822 ) }
    soma_0 { pt3dadd( -3.80382, -3.01797, 0.567115, 17.7461 ) }
    soma_0 { pt3dadd( -3.0251, -2.11925, 0.425128, 19.1269 ) }
    soma_0 { pt3dadd( -2.24638, -1.22052, 0.283142, 19.8374 ) }
    soma_0 { pt3dadd( -1.46766, -0.321792, 0.141155, 20.315 ) }
    soma_0 { pt3dadd( -0.688937, 0.576934, -8.31366E-4, 20.3008 ) }
    soma_0 { pt3dadd( 0.0897826, 1.47566, -0.142818, 20.2673 ) }
    soma_0 { pt3dadd( 0.868503, 2.37439, -0.284805, 20.201 ) }
    soma_0 { pt3dadd( 1.64722, 3.27311, -0.426791, 19.9171 ) }
    soma_0 { pt3dadd( 2.42594, 4.17184, -0.568778, 19.4209 ) }
    soma_0 { pt3dadd( 3.20466, 5.07057, -0.710764, 18.1336 ) }
    soma_0 { pt3dadd( 3.98338, 5.96929, -0.852751, 16.68 ) }
    soma_0 { pt3dadd( 4.7621, 6.86802, -0.994738, 14.9484 ) }
    soma_0 { pt3dadd( 5.54082, 7.76675, -1.13672, 12.9099 ) }
    soma_0 { pt3dadd( 6.31954, 8.66547, -1.27871, 7.73682 ) }
    soma_0 { pt3dadd( 7.09826, 9.5642, -1.4207, 4.34608 ) }
    // Section: dend_66, id: dend_66, parent: soma_0 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -11.4502, -2.42522, 0.989666, 1.47 ) }
    dend_66 { pt3dadd( -11.4502, -2.42522, 0.989666, 1.47 ) }
    dend_66 { pt3dadd( -12.0861, -2.73233, 1.18899, 1.47 ) }
    dend_66 { pt3dadd( -13.136, -3.25889, 1.56387, 1.11 ) }
    dend_66 { pt3dadd( -14.1693, -3.80088, 2.09037, 1.11 ) }
    dend_66 { pt3dadd( -15.37, -4.44796, 2.8084, 1.11 ) }
    dend_66 { pt3dadd( -16.3728, -5.02378, 3.56103, 1.11 ) }
    dend_66 { pt3dadd( -17.259, -5.57001, 4.37846, 1.4 ) }
    dend_66 { pt3dadd( -17.4861, -5.72072, 4.65711, 1.4 ) }
    dend_66 { pt3dadd( -18.5463, -6.42163, 6.25699, 1.4 ) }
    dend_66 { pt3dadd( -18.5896, -6.45015, 6.33172, 1.4 ) }
    dend_66 { pt3dadd( -19.4859, -7.01044, 8.07525, 1.4 ) }
    dend_66 { pt3dadd( -19.5183, -7.02686, 8.1341, 1.4 ) }
    dend_66 { pt3dadd( -20.6235, -7.54671, 9.80448, 1.4 ) }
    dend_66 { pt3dadd( -21.4733, -7.96579, 10.878, 1.4 ) }
    dend_66 { pt3dadd( -21.5123, -7.98723, 10.917, 1.4 ) }
    dend_66 { pt3dadd( -22.7014, -8.69893, 11.9462, 0.88 ) }
    dend_66 { pt3dadd( -23.439, -9.16845, 12.4791, 0.88 ) }
    dend_66 { pt3dadd( -24.3172, -9.77337, 13.0926, 0.74 ) }
    dend_66 { pt3dadd( -25.399, -10.5617, 13.7235, 0.74 ) }
    dend_66 { pt3dadd( -26.3294, -11.2317, 14.1839, 0.74 ) }
    dend_66 { pt3dadd( -26.4058, -11.2839, 14.2167, 0.74 ) }
    dend_66 { pt3dadd( -27.2604, -11.8115, 14.5205, 0.74 ) }
    dend_66 { pt3dadd( -28.5448, -12.5618, 14.9704, 1.11 ) }
    dend_66 { pt3dadd( -30.1094, -13.4115, 15.4662, 1.11 ) }
    dend_66 { pt3dadd( -31.6657, -14.2512, 15.8556, 1.11 ) }
    dend_66 { pt3dadd( -32.5274, -14.7518, 16.0273, 1.11 ) }
    dend_66 { pt3dadd( -33.3902, -15.3274, 16.192, 1.47 ) }
    dend_66 { pt3dadd( -33.9626, -15.7706, 16.287, 1.47 ) }
    dend_66 { pt3dadd( -35.0473, -16.7529, 16.4569, 0.81 ) }
    dend_66 { pt3dadd( -35.9981, -17.781, 16.7126, 0.81 ) }
    dend_66 { pt3dadd( -36.9501, -18.8851, 17.0332, 0.81 ) }
    dend_66 { pt3dadd( -37.9029, -19.987, 17.3673, 1.11 ) }
    dend_66 { pt3dadd( -38.3783, -20.5287, 17.5373, 1.47 ) }
    dend_66 { pt3dadd( -38.9987, -21.1835, 17.7714, 1.47 ) }
    dend_66 { pt3dadd( -40.3121, -22.5022, 18.2786, 0.74 ) }
    dend_66 { pt3dadd( -41.504, -23.6438, 18.7084, 0.74 ) }
    dend_66 { pt3dadd( -42.5679, -24.6288, 19.0128, 0.74 ) }
    dend_66 { pt3dadd( -42.6171, -24.6747, 19.0254, 0.74 ) }
    dend_66 { pt3dadd( -43.3907, -25.429, 19.2112, 1.03 ) }
    dend_66 { pt3dadd( -44.3732, -26.4242, 19.4316, 1.03 ) }
    dend_66 { pt3dadd( -45.3046, -27.4288, 19.6031, 1.18 ) }
    dend_66 { pt3dadd( -46.224, -28.4882, 19.7753, 1.18 ) }
    dend_66 { pt3dadd( -47.445, -29.9496, 20.0127, 0.88 ) }
    dend_66 { pt3dadd( -48.7134, -31.4891, 20.2456, 0.88 ) }
    dend_66 { pt3dadd( -48.7563, -31.5417, 20.2524, 0.88 ) }
    dend_66 { pt3dadd( -50.0988, -33.1835, 20.4544, 0.88 ) }
    dend_66 { pt3dadd( -50.1424, -33.2356, 20.4603, 0.88 ) }
    dend_66 { pt3dadd( -51.0331, -34.2697, 20.5605, 1.62 ) }
    dend_66 { pt3dadd( -51.6396, -34.9556, 20.6114, 1.99 ) }
    dend_66 { pt3dadd( -52.6442, -36.0933, 20.6899, 1.99 ) }
    dend_66 { pt3dadd( -54.3169, -38.0476, 20.9053, 2.21 ) }
    dend_66 { pt3dadd( -55.7533, -39.7367, 21.197, 2.21 ) }
    dend_66 { pt3dadd( -56.5602, -40.6758, 21.4483, 2.5 ) }
    dend_66 { pt3dadd( -57.0908, -41.2811, 21.6575, 2.5 ) }
    dend_66 { pt3dadd( -58.277, -42.6148, 22.2193, 1.84 ) }
    dend_66 { pt3dadd( -59.7273, -44.2206, 23.031, 1.47 ) }
    dend_66 { pt3dadd( -60.8226, -45.4549, 23.7513, 1.25 ) }
    dend_66 { pt3dadd( -62.0695, -46.8854, 24.66, 0.29 ) }
    dend_66 { pt3dadd( -62.6478, -47.6055, 25.1332, 0.29 ) }
    dend_66 { pt3dadd( -63.3484, -48.528, 25.7495, 0.29 ) }
    dend_66 { pt3dadd( -63.405, -48.6044, 25.806, 0.29 ) }
    dend_66 { pt3dadd( -63.9268, -49.354, 26.3526, 0.29 ) }
    dend_66 { pt3dadd( -63.991, -49.4605, 26.4299, 0.29 ) }
    dend_66 { pt3dadd( -64.7235, -50.8046, 27.4223, 0.29 ) }
    dend_66 { pt3dadd( -64.7515, -50.8502, 27.4651, 0.29 ) }
    dend_66 { pt3dadd( -65.5978, -51.9515, 28.6298, 0.29 ) }
    dend_66 { pt3dadd( -65.812, -52.1843, 28.8825, 0.74 ) }
    dend_66 { pt3dadd( -66.0403, -52.4, 29.1106, 1.03 ) }
    dend_66 { pt3dadd( -66.3236, -52.6624, 29.3738, 1.03 ) }
    dend_66 { pt3dadd( -67.05, -53.3528, 29.9389, 0.66 ) }
    dend_66 { pt3dadd( -67.6363, -53.9857, 30.366, 0.66 ) }
    dend_66 { pt3dadd( -68.2117, -54.6904, 30.7136, 0.88 ) }
    dend_66 { pt3dadd( -68.6714, -55.2559, 30.9621, 0.88 ) }
    dend_66 { pt3dadd( -69.427, -56.1767, 31.3527, 0.52 ) }
    dend_66 { pt3dadd( -70.2936, -57.2049, 31.7558, 0.52 ) }
    dend_66 { pt3dadd( -70.3418, -57.2629, 31.7757, 0.52 ) }
    dend_66 { pt3dadd( -71.2251, -58.3189, 32.1123, 0.81 ) }
    dend_66 { pt3dadd( -71.7417, -58.9185, 32.2693, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_66 { pt3dadd( -72.736, -60.0654, 32.5371, 0.29 ) }
    dend_66 { pt3dadd( -73.4569, -60.8975, 32.6898, 0.37 ) }
    dend_66 { pt3dadd( -73.8668, -61.3844, 32.7835, 1.03 ) }
    dend_66 { pt3dadd( -74.5666, -62.3071, 32.9493, 0.22 ) }
    dend_66 { pt3dadd( -75.5001, -63.6061, 33.1834, 0.22 ) }
    dend_66 { pt3dadd( -75.5888, -63.7386, 33.2053, 0.59 ) }
    dend_66 { pt3dadd( -76.1743, -64.6694, 33.3235, 0.59 ) }
    dend_66 { pt3dadd( -76.7025, -65.5343, 33.4325, 0.44 ) }
    dend_66 { pt3dadd( -77.3422, -66.548, 33.5517, 0.81 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 9/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 9.20986, 1.27978, 4.05967, 1.84 ) }
    dend_53 { pt3dadd( 9.57371, 1.14935, 4.13827, 1.62 ) }
    dend_53 { pt3dadd( 11.2253, 0.557281, 4.4951, 1.62 ) }
    dend_53 { pt3dadd( 11.2998, 0.530578, 4.51119, 1.62 ) }
    dend_53 { pt3dadd( 13.2833, -0.180439, 4.9397, 1.62 ) }
    dend_53 { pt3dadd( 13.3685, -0.210958, 4.95809, 1.62 ) }
    dend_53 { pt3dadd( 13.8262, -0.375037, 5.05698, 1.62 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 16/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.70014, 9.32353, 5.17967, 2.8 ) }
    dend_39 { pt3dadd( -1.70014, 9.32353, 5.17967, 2.8 ) }
    dend_39 { pt3dadd( -1.30395, 10.5342, 5.37306, 1.84 ) }
    dend_39 { pt3dadd( -0.906145, 11.6521, 5.57657, 1.84 ) }
    dend_39 { pt3dadd( -0.394833, 12.8968, 5.80115, 1.84 ) }
    dend_39 { pt3dadd( -0.36254, 12.9659, 5.81307, 1.84 ) }
    dend_39 { pt3dadd( 0.398294, 14.3967, 6.04513, 1.84 ) }
    dend_39 { pt3dadd( 1.43737, 16.0587, 6.29915, 1.84 ) }
    dend_39 { pt3dadd( 1.51767, 16.1668, 6.31485, 1.84 ) }
    dend_39 { pt3dadd( 2.59056, 17.5071, 6.47983, 2.28 ) }
    dend_39 { pt3dadd( 3.29984, 18.4014, 6.64429, 2.28 ) }
    dend_39 { pt3dadd( 4.08216, 19.4459, 6.86705, 1.62 ) }
    dend_39 { pt3dadd( 4.7222, 20.3856, 7.12073, 1.62 ) }
    dend_39 { pt3dadd( 5.58241, 21.7702, 7.53712, 1.62 ) }
    dend_39 { pt3dadd( 6.22724, 22.9545, 7.99302, 1.62 ) }
    dend_39 { pt3dadd( 7.13663, 24.8157, 8.79938, 1.84 ) }
    dend_39 { pt3dadd( 7.63672, 25.9874, 9.35765, 2.06 ) }
    dend_39 { pt3dadd( 8.28098, 27.7941, 10.3085, 2.06 ) }
    dend_39 { pt3dadd( 8.29522, 27.8427, 10.3369, 2.06 ) }
    dend_39 { pt3dadd( 8.65204, 29.4686, 11.4032, 2.36 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 36/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -11.9802, -2.93222, 0.929666, 1.92 ) }
    dend_32 { pt3dadd( -11.9802, -2.93222, 0.929666, 1.92 ) }
    dend_32 { pt3dadd( -12.8078, -2.94574, 0.727663, 1.55 ) }
    dend_32 { pt3dadd( -14.0397, -2.96208, 0.409569, 1.55 ) }
    dend_32 { pt3dadd( -15.3267, -2.97224, 0.0802553, 1.4 ) }
    dend_32 { pt3dadd( -16.5328, -2.98018, -0.262352, 1.4 ) }
    dend_32 { pt3dadd( -16.5877, -2.98063, -0.280025, 1.4 ) }
    dend_32 { pt3dadd( -17.7309, -2.98245, -0.686492, 1.4 ) }
    dend_32 { pt3dadd( -17.8304, -2.98126, -0.729173, 1.4 ) }
    dend_32 { pt3dadd( -18.4994, -2.96326, -1.05738, 1.33 ) }
    dend_32 { pt3dadd( -19.5437, -2.91693, -1.62424, 1.33 ) }
    dend_32 { pt3dadd( -20.2562, -2.87031, -2.04558, 1.33 ) }
    dend_32 { pt3dadd( -20.6022, -2.84314, -2.25939, 1.4 ) }
    dend_32 { pt3dadd( -21.5661, -2.7499, -2.85784, 1.4 ) }
    dend_32 { pt3dadd( -21.6154, -2.74455, -2.88743, 1.4 ) }
    dend_32 { pt3dadd( -22.3069, -2.66047, -3.28182, 1.25 ) }
    dend_32 { pt3dadd( -23.2486, -2.5317, -3.73727, 1.11 ) }
    dend_32 { pt3dadd( -23.3146, -2.52257, -3.7633, 1.11 ) }
    dend_32 { pt3dadd( -23.975, -2.44034, -3.98445, 1.11 ) }
    dend_32 { pt3dadd( -24.4886, -2.37639, -4.11628, 0.88 ) }
    dend_32 { pt3dadd( -24.7963, -2.34116, -4.18655, 0.74 ) }
    dend_32 { pt3dadd( -24.9522, -2.32902, -4.21444, 0.66 ) }
    dend_32 { pt3dadd( -25.5443, -2.3204, -4.27069, 0.66 ) }
    dend_32 { pt3dadd( -25.6517, -2.32813, -4.28168, 0.66 ) }
    dend_32 { pt3dadd( -26.1014, -2.41314, -4.32982, 0.88 ) }
    dend_32 { pt3dadd( -26.6128, -2.56416, -4.38012, 0.88 ) }
    dend_32 { pt3dadd( -26.9692, -2.6894, -4.41558, 0.96 ) }
    dend_32 { pt3dadd( -27.3559, -2.83242, -4.45026, 0.96 ) }
    dend_32 { pt3dadd( -27.9373, -3.04272, -4.49398, 0.96 ) }
    dend_32 { pt3dadd( -28.4774, -3.21797, -4.55729, 0.37 ) }
    dend_32 { pt3dadd( -29.0215, -3.36122, -4.63357, 0.37 ) }
    dend_32 { pt3dadd( -29.361, -3.41828, -4.6937, 1.11 ) }
    dend_32 { pt3dadd( -30.1478, -3.45736, -4.84948, 1.77 ) }
    dend_32 { pt3dadd( -30.7273, -3.41886, -4.97182, 2.06 ) }
    dend_32 { pt3dadd( -31.475, -3.28641, -5.13571, 2.06 ) }
    dend_32 { pt3dadd( -32.06, -3.12312, -5.26068, 1.69 ) }
    dend_32 { pt3dadd( -32.4803, -2.97373, -5.34345, 1.33 ) }
    dend_32 { pt3dadd( -33.0557, -2.74653, -5.43844, 1.11 ) }
    dend_32 { pt3dadd( -33.3983, -2.59095, -5.48297, 1.03 ) }
    dend_32 { pt3dadd( -33.6766, -2.45758, -5.50355, 1.03 ) }
    dend_32 { pt3dadd( -34.1199, -2.24173, -5.53837, 0.81 ) }
    dend_32 { pt3dadd( -34.4217, -2.09471, -5.58306, 0.81 ) }
    dend_32 { pt3dadd( -34.7508, -1.93623, -5.64767, 0.29 ) }
    dend_32 { pt3dadd( -35.213, -1.71207, -5.75458, 0.29 ) }
    dend_32 { pt3dadd( -35.4848, -1.58189, -5.82444, 1.03 ) }
    dend_32 { pt3dadd( -36.3296, -1.17933, -6.06634, 1.33 ) }
    dend_32 { pt3dadd( -36.7216, -0.992121, -6.19353, 1.62 ) }
    dend_32 { pt3dadd( -37.2871, -0.713524, -6.39746, 1.62 ) }
    dend_32 { pt3dadd( -37.4979, -0.607051, -6.48161, 1.62 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 2.58986, 10.513, -3.07033, 4.86 ) }
    dend_26 { pt3dadd( 2.58986, 10.513, -3.07033, 4.86 ) }
    dend_26 { pt3dadd( 3.26564, 11.8436, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 3.7523, 12.655, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 4.47896, 13.7454, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 5.57264, 15.2361, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 5.90304, 15.654, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 6.69409, 16.5821, -3.07033, 2.36 ) }
    dend_26 { pt3dadd( 7.26873, 17.1544, -3.07033, 2.06 ) }
    dend_26 { pt3dadd( 7.75646, 17.5719, -3.07033, 1.84 ) }
    dend_26 { pt3dadd( 8.31192, 17.9358, -3.07033, 1.62 ) }
    dend_26 { pt3dadd( 8.62321, 18.0871, -3.07033, 1.62 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.28986, -8.24597, -0.0103344, 2.5 ) }
    dend_19 { pt3dadd( 2.28986, -8.24597, -0.0103344, 2.5 ) }
    dend_19 { pt3dadd( 2.2628, -9.65376, -0.0103344, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_19 { pt3dadd( 2.26266, -10.3573, -0.0103344, 1.62 ) }
    dend_19 { pt3dadd( 2.26786, -11.0435, -0.0081632, 1.62 ) }
    dend_19 { pt3dadd( 2.27724, -12.0567, -0.0030656, 1.84 ) }
    dend_19 { pt3dadd( 2.29173, -13.0267, -0.0064178, 1.92 ) }
    dend_19 { pt3dadd( 2.30696, -13.6263, -0.0120519, 2.06 ) }
    dend_19 { pt3dadd( 2.34878, -14.9392, 0.006901, 2.06 ) }
    dend_19 { pt3dadd( 2.35111, -14.991, 0.0085883, 2.06 ) }
    dend_19 { pt3dadd( 2.41419, -16.1299, 0.0610177, 2.06 ) }
    dend_19 { pt3dadd( 2.50699, -17.3868, 0.132776, 2.06 ) }
    dend_19 { pt3dadd( 2.59781, -18.5179, 0.230108, 1.84 ) }
    dend_19 { pt3dadd( 2.68454, -19.5637, 0.344255, 1.55 ) }
    dend_19 { pt3dadd( 2.75859, -20.4134, 0.454365, 1.4 ) }
    dend_19 { pt3dadd( 2.86722, -21.4781, 0.622086, 1.4 ) }
    dend_19 { pt3dadd( 2.88624, -21.6372, 0.652954, 1.4 ) }
    dend_19 { pt3dadd( 3.03006, -22.6587, 0.890411, 1.25 ) }
    dend_19 { pt3dadd( 3.03898, -22.7159, 0.903638, 1.25 ) }
    dend_19 { pt3dadd( 3.17822, -23.5118, 1.06975, 1.25 ) }
    dend_19 { pt3dadd( 3.42226, -24.9143, 1.34105, 1.25 ) }
    dend_19 { pt3dadd( 3.43127, -24.9647, 1.3498, 1.25 ) }
    dend_19 { pt3dadd( 3.80894, -27.1263, 1.67162, 1.25 ) }
    dend_19 { pt3dadd( 3.94574, -27.9319, 1.76977, 1.62 ) }
    dend_19 { pt3dadd( 4.14134, -29.0996, 1.89447, 1.62 ) }
    dend_19 { pt3dadd( 4.38312, -30.5905, 2.0255, 1.62 ) }
    dend_19 { pt3dadd( 4.48816, -31.2941, 2.06979, 1.62 ) }
    dend_19 { pt3dadd( 4.60189, -32.215, 2.11463, 1.69 ) }
    dend_19 { pt3dadd( 4.65022, -32.8077, 2.12931, 1.92 ) }
    dend_19 { pt3dadd( 4.68672, -33.6511, 2.14896, 1.92 ) }
    dend_19 { pt3dadd( 4.68781, -34.3564, 2.16332, 1.4 ) }
    dend_19 { pt3dadd( 4.6706, -34.9518, 2.17572, 1.33 ) }
    dend_19 { pt3dadd( 4.61675, -36.1025, 2.197, 1.33 ) }
    dend_19 { pt3dadd( 4.56099, -36.9743, 2.21037, 1.47 ) }
    dend_19 { pt3dadd( 4.52275, -37.7368, 2.21812, 1.55 ) }
    dend_19 { pt3dadd( 4.51628, -37.9077, 2.21923, 1.55 ) }
    dend_19 { pt3dadd( 4.50942, -38.3964, 2.22079, 1.33 ) }
    dend_19 { pt3dadd( 4.52591, -39.3719, 2.22079, 1.33 ) }
    dend_19 { pt3dadd( 4.52856, -39.4237, 2.22079, 1.33 ) }
    dend_19 { pt3dadd( 4.84892, -43.2558, 2.27805, 1.18 ) }
    dend_19 { pt3dadd( 4.93037, -43.9565, 2.29616, 1.33 ) }
    dend_19 { pt3dadd( 5.06935, -44.9299, 2.34315, 1.62 ) }
    dend_19 { pt3dadd( 5.22436, -45.8588, 2.40552, 1.77 ) }
    dend_19 { pt3dadd( 5.40413, -46.7672, 2.48414, 1.77 ) }
    dend_19 { pt3dadd( 5.64294, -47.7524, 2.58791, 1.62 ) }
    dend_19 { pt3dadd( 5.95395, -48.7428, 2.7514, 1.62 ) }
    dend_19 { pt3dadd( 6.26705, -49.6854, 2.92696, 1.47 ) }
    dend_19 { pt3dadd( 6.28336, -49.7339, 2.93643, 1.4 ) }
    dend_19 { pt3dadd( 6.54429, -50.5343, 3.08623, 1.55 ) }
    dend_19 { pt3dadd( 6.83553, -51.5333, 3.2486, 1.47 ) }
    dend_19 { pt3dadd( 7.03456, -52.3326, 3.34799, 1.4 ) }
    dend_19 { pt3dadd( 7.22277, -53.2017, 3.42216, 1.25 ) }
    dend_19 { pt3dadd( 7.40962, -54.1229, 3.4645, 1.25 ) }
    dend_19 { pt3dadd( 7.57835, -55.053, 3.48701, 1.69 ) }
    dend_19 { pt3dadd( 7.79968, -56.3806, 3.49675, 1.92 ) }
    dend_19 { pt3dadd( 7.97671, -57.5003, 3.48504, 1.92 ) }
    dend_19 { pt3dadd( 8.13522, -58.4733, 3.45774, 1.55 ) }
    dend_19 { pt3dadd( 8.32945, -59.6592, 3.42455, 1.47 ) }
    dend_19 { pt3dadd( 8.69708, -61.7972, 3.34605, 1.47 ) }
    dend_19 { pt3dadd( 8.70675, -61.8481, 3.34479, 1.47 ) }
    dend_19 { pt3dadd( 8.84409, -62.5064, 3.33716, 1.11 ) }
    dend_19 { pt3dadd( 9.34109, -64.7289, 3.35033, 1.11 ) }
    dend_19 { pt3dadd( 9.48256, -65.3266, 3.38793, 1.33 ) }
    dend_19 { pt3dadd( 9.67652, -66.0645, 3.46872, 1.47 ) }
    dend_19 { pt3dadd( 9.96565, -66.9878, 3.61324, 1.47 ) }
    dend_19 { pt3dadd( 10.3161, -68.0028, 3.79885, 1.47 ) }
    dend_19 { pt3dadd( 10.3374, -68.0568, 3.81185, 1.47 ) }
    dend_19 { pt3dadd( 10.8205, -69.1311, 4.12975, 1.33 ) }
    dend_19 { pt3dadd( 11.2146, -69.9627, 4.38784, 1.4 ) }
    dend_19 { pt3dadd( 11.5858, -70.7267, 4.60967, 1.62 ) }
    dend_19 { pt3dadd( 11.8377, -71.2457, 4.73725, 1.62 ) }
    dend_19 { pt3dadd( 12.2803, -72.1904, 4.93404, 1.03 ) }
    dend_19 { pt3dadd( 12.6226, -73.0092, 5.07345, 0.96 ) }
    dend_19 { pt3dadd( 12.6399, -73.0576, 5.08059, 0.96 ) }
    dend_19 { pt3dadd( 13.0733, -74.4704, 5.31396, 0.96 ) }
    dend_19 { pt3dadd( 13.0883, -74.527, 5.32364, 0.96 ) }
    dend_19 { pt3dadd( 13.3474, -75.623, 5.54208, 0.96 ) }
    dend_19 { pt3dadd( 13.5925, -76.8044, 5.79351, 0.74 ) }
    dend_19 { pt3dadd( 13.8245, -78.0792, 6.09242, 0.74 ) }
    dend_19 { pt3dadd( 13.8974, -78.6637, 6.22463, 0.96 ) }
    dend_19 { pt3dadd( 13.9264, -79.091, 6.31351, 0.96 ) }
    dend_19 { pt3dadd( 13.978, -79.9733, 6.46735, 0.74 ) }
    dend_19 { pt3dadd( 14.0042, -80.5105, 6.54494, 0.52 ) }
    dend_19 { pt3dadd( 14.0445, -81.4749, 6.64517, 0.52 ) }
    dend_19 { pt3dadd( 14.124, -83.2441, 6.77146, 0.52 ) }
    dend_19 { pt3dadd( 14.2035, -84.8114, 6.85757, 0.52 ) }
    dend_19 { pt3dadd( 14.2796, -85.9749, 6.88774, 0.52 ) }
    dend_19 { pt3dadd( 14.3156, -86.4399, 6.88337, 0.74 ) }
    dend_19 { pt3dadd( 14.3898, -87.1421, 6.87155, 0.74 ) }
    dend_19 { pt3dadd( 14.4864, -87.8475, 6.84136, 0.66 ) }
    dend_19 { pt3dadd( 14.5878, -88.4302, 6.79915, 1.25 ) }
    dend_19 { pt3dadd( 14.7034, -89.1416, 6.72866, 1.62 ) }
    dend_19 { pt3dadd( 14.7852, -89.7326, 6.66283, 1.62 ) }
    dend_19 { pt3dadd( 14.8625, -90.3545, 6.59247, 1.47 ) }
    dend_19 { pt3dadd( 14.9855, -91.4375, 6.47577, 1.03 ) }
    dend_19 { pt3dadd( 15.0448, -92.0269, 6.41975, 1.03 ) }
    dend_19 { pt3dadd( 15.0746, -92.4063, 6.39548, 1.03 ) }
    dend_19 { pt3dadd( 15.1094, -93.0768, 6.37344, 1.03 ) }
    dend_19 { pt3dadd( 15.128, -93.7303, 6.36828, 0.66 ) }
    dend_19 { pt3dadd( 15.1294, -94.65, 6.38462, 0.66 ) }
    dend_19 { pt3dadd( 15.1263, -95.407, 6.39649, 1.03 ) }
    dend_19 { pt3dadd( 15.1204, -96.023, 6.38881, 1.25 ) }
    dend_19 { pt3dadd( 15.1197, -96.0748, 6.38683, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 15.1084, -96.8836, 6.33135, 1.25 ) }
    dend_19 { pt3dadd( 15.1086, -96.9278, 6.32678, 1.25 ) }
    dend_19 { pt3dadd( 15.1463, -97.915, 6.16429, 0.88 ) }
    dend_19 { pt3dadd( 15.1851, -98.2575, 6.09616, 0.66 ) }
    dend_19 { pt3dadd( 15.194, -98.3076, 6.08594, 0.66 ) }
    dend_19 { pt3dadd( 15.3452, -98.9428, 5.97427, 0.52 ) }
    dend_19 { pt3dadd( 15.3658, -99.0126, 5.96403, 0.52 ) }
    dend_19 { pt3dadd( 15.5488, -99.5466, 5.9289, 0.37 ) }
    dend_19 { pt3dadd( 15.907, -100.516, 5.9098, 0.37 ) }
    dend_19 { pt3dadd( 16.1277, -101.079, 5.90134, 0.96 ) }
    dend_19 { pt3dadd( 16.3621, -101.658, 5.89719, 1.77 ) }
    dend_19 { pt3dadd( 16.5438, -102.082, 5.90098, 1.99 ) }
    dend_19 { pt3dadd( 16.8397, -102.76, 5.9249, 1.99 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.78014, -8.95772, 2.67967, 1.18 ) }
    dend_16 { pt3dadd( -6.78014, -8.95772, 2.67967, 1.18 ) }
    dend_16 { pt3dadd( -6.77496, -9.71715, 2.98392, 1.18 ) }
    dend_16 { pt3dadd( -6.77313, -9.77072, 3.00514, 1.18 ) }
    dend_16 { pt3dadd( -6.66509, -10.8127, 3.37511, 1.03 ) }
    dend_16 { pt3dadd( -6.51375, -11.8545, 3.89382, 1.03 ) }
    dend_16 { pt3dadd( -6.35265, -12.945, 4.53309, 1.03 ) }
    dend_16 { pt3dadd( -6.19234, -13.9801, 5.23437, 1.03 ) }
    dend_16 { pt3dadd( -6.18489, -14.0253, 5.27, 1.03 ) }
    dend_16 { pt3dadd( -6.02333, -15.1438, 6.36989, 1.03 ) }
    dend_16 { pt3dadd( -5.93485, -16.5696, 8.31951, 1.03 ) }
    dend_16 { pt3dadd( -6.00859, -16.8793, 9.0393, 1.03 ) }
    dend_16 { pt3dadd( -6.10358, -16.9408, 9.39664, 1.03 ) }
    dend_16 { pt3dadd( -6.22643, -16.9595, 9.68225, 1.03 ) }
    dend_16 { pt3dadd( -6.82743, -17.0354, 10.7103, 1.03 ) }
    dend_16 { pt3dadd( -7.33406, -17.1177, 11.3684, 1.03 ) }
    dend_16 { pt3dadd( -7.37476, -17.136, 11.4067, 1.03 ) }
    dend_16 { pt3dadd( -8.22502, -17.6433, 12.192, 1.03 ) }
    dend_16 { pt3dadd( -8.52749, -17.8693, 12.4762, 1.25 ) }
    dend_16 { pt3dadd( -8.94541, -18.2385, 12.8881, 1.25 ) }
    dend_16 { pt3dadd( -9.7661, -19.0884, 13.6645, 1.25 ) }
    dend_16 { pt3dadd( -10.4616, -19.9114, 14.4692, 1.25 ) }
    dend_16 { pt3dadd( -10.4896, -19.9485, 14.5044, 1.25 ) }
    dend_16 { pt3dadd( -11.1515, -20.9475, 15.4276, 1.25 ) }
    dend_16 { pt3dadd( -11.5238, -21.551, 16.0309, 1.4 ) }
    dend_16 { pt3dadd( -11.9251, -22.2005, 16.6976, 1.4 ) }
    dend_16 { pt3dadd( -12.7025, -23.4723, 18.0089, 1.18 ) }
    dend_16 { pt3dadd( -12.8871, -23.746, 18.3046, 1.18 ) }
    dend_16 { pt3dadd( -13.3689, -24.3432, 18.9499, 0.88 ) }
    dend_16 { pt3dadd( -14.1454, -25.1305, 19.8344, 0.88 ) }
    dend_16 { pt3dadd( -14.7638, -25.662, 20.4518, 0.88 ) }
    dend_16 { pt3dadd( -15.2648, -26.0145, 20.8863, 0.88 ) }
    dend_16 { pt3dadd( -16.0233, -26.4323, 21.3674, 1.18 ) }
    dend_16 { pt3dadd( -16.675, -26.7069, 21.7755, 1.4 ) }
    dend_16 { pt3dadd( -17.429, -26.9155, 22.2094, 1.4 ) }
    dend_16 { pt3dadd( -17.4727, -26.9219, 22.234, 1.4 ) }
    dend_16 { pt3dadd( -17.9736, -26.9234, 22.5417, 0.96 ) }
    dend_16 { pt3dadd( -18.6223, -26.8046, 23.0081, 0.96 ) }
    dend_16 { pt3dadd( -19.3632, -26.4666, 23.9092, 0.81 ) }
    dend_16 { pt3dadd( -19.5655, -26.3069, 24.2685, 0.81 ) }
    dend_16 { pt3dadd( -19.5898, -26.2798, 24.3248, 0.81 ) }
    dend_16 { pt3dadd( -19.7551, -26.0192, 24.8789, 0.66 ) }
    dend_16 { pt3dadd( -19.8856, -25.5355, 25.9844, 1.18 ) }
    dend_16 { pt3dadd( -19.7596, -25.1866, 27.4173, 0.96 ) }
    dend_16 { pt3dadd( -19.7409, -25.204, 27.4795, 0.96 ) }
    dend_16 { pt3dadd( -19.6316, -25.4309, 27.843, 1.03 ) }
    dend_16 { pt3dadd( -19.6205, -25.4731, 27.8934, 1.03 ) }
    dend_16 { pt3dadd( -19.5349, -26.0954, 28.4771, 1.03 ) }
    dend_16 { pt3dadd( -19.4801, -27.4392, 29.4686, 0.88 ) }
    dend_16 { pt3dadd( -19.4921, -28.3345, 30.0476, 0.66 ) }
    dend_16 { pt3dadd( -19.493, -28.9064, 30.4652, 0.66 ) }
    dend_16 { pt3dadd( -19.4785, -29.4753, 30.9443, 0.52 ) }
    dend_16 { pt3dadd( -19.4315, -29.73, 31.187, 0.52 ) }
    dend_16 { pt3dadd( -19.404, -29.7668, 31.2355, 0.52 ) }
    dend_16 { pt3dadd( -18.9951, -29.8304, 31.4201, 0.52 ) }
    dend_16 { pt3dadd( -17.9361, -29.9427, 31.7652, 0.37 ) }
    dend_16 { pt3dadd( -17.1939, -30.0024, 31.9833, 0.37 ) }
    dend_16 { pt3dadd( -15.9565, -30.0719, 32.2854, 0.37 ) }
    dend_16 { pt3dadd( -15.8909, -30.0742, 32.3007, 0.37 ) }
    dend_16 { pt3dadd( -15.5046, -30.0901, 32.3851, 0.37 ) }
    dend_16 { pt3dadd( -15.3806, -30.0996, 32.4071, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.64014, -10.0107, 1.67967, 2.5 ) }
    dend_5 { pt3dadd( -5.64014, -10.0107, 1.67967, 2.5 ) }
    dend_5 { pt3dadd( -5.53106, -11.3702, 1.59303, 2.21 ) }
    dend_5 { pt3dadd( -5.39608, -13.3177, 1.46757, 1.99 ) }
    dend_5 { pt3dadd( -5.29142, -15.1133, 1.35604, 2.06 ) }
    dend_5 { pt3dadd( -5.168, -17.3058, 1.22461, 2.21 ) }
    dend_5 { pt3dadd( -5.10703, -18.3891, 1.15967, 2.21 ) }
    dend_5 { pt3dadd( -5.05895, -19.4007, 1.09739, 2.28 ) }
    dend_5 { pt3dadd( -5.02278, -20.6975, 1.01289, 2.5 ) }
    dend_5 { pt3dadd( -5.023, -21.8817, 0.935697, 2.5 ) }
    dend_5 { pt3dadd( -5.03191, -22.4164, 0.910671, 2.5 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 85/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -9.68014, 5.18953, -0.320334, 2.21 ) }
    dend_0 { pt3dadd( -9.68014, 5.18953, -0.320334, 2.21 ) }
    dend_0 { pt3dadd( -10.8731, 5.73515, -0.171396, 1.55 ) }
    dend_0 { pt3dadd( -11.9587, 6.25817, 0.0324314, 1.4 ) }
    dend_0 { pt3dadd( -13.1304, 6.84632, 0.270764, 1.4 ) }
    dend_0 { pt3dadd( -14.3085, 7.46408, 0.49597, 1.4 ) }
    dend_0 { pt3dadd( -15.1653, 7.9233, 0.648419, 1.4 ) }
    dend_0 { pt3dadd( -15.2222, 7.95379, 0.657969, 1.4 ) }
    dend_0 { pt3dadd( -16.5683, 8.65907, 0.866372, 1.18 ) }
    dend_0 { pt3dadd( -18.5068, 9.61729, 1.12115, 1.18 ) }
    dend_0 { pt3dadd( -20.4155, 10.5406, 1.33914, 1.18 ) }
    dend_0 { pt3dadd( -21.4115, 11.0114, 1.44918, 1.55 ) }
    dend_0 { pt3dadd( -22.347, 11.4432, 1.5407, 1.99 ) }
    dend_0 { pt3dadd( -23.7629, 12.0698, 1.6418, 1.99 ) }
    dend_0 { pt3dadd( -24.9902, 12.5642, 1.65028, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 0/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.09826, 9.5642, -1.4207, 1.05461 ) }
    axon_0 { pt3dadd( 16.9209, 20.9006, -1.4207, 1.05461 ) }
    axon_0 { pt3dadd( 26.7436, 32.2371, -1.4207, 1.05461 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 3/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -77.3422, -66.548, 33.5517, 0.96 ) }
    dend_68 { pt3dadd( -76.7598, -67.0806, 33.682, 0.96 ) }
    dend_68 { pt3dadd( -76.1357, -67.6515, 33.8217, 0.96 ) }
    dend_68 { pt3dadd( -76.0583, -67.7222, 33.8391, 0.96 ) }
    dend_68 { pt3dadd( -75.3291, -68.3892, 34.0023, 0.96 ) }
    dend_68 { pt3dadd( -74.1911, -69.4302, 34.2571, 0.37 ) }
    dend_68 { pt3dadd( -73.7244, -69.8569, 34.3615, 0.37 ) }
    dend_68 { pt3dadd( -64.8058, -75.8208, 35.3177, 0.37 ) }
    dend_68 { pt3dadd( -55.299, -80.9123, 35.8223, 0.37 ) }
    dend_68 { pt3dadd( -45.8154, -86.0695, 35.7431, 0.37 ) }
    dend_68 { pt3dadd( -35.6025, -89.146, 33.808, 0.37 ) }
    dend_68 { pt3dadd( -25.5409, -91.6219, 30.5909, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 15/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -77.3422, -66.548, 33.5517, 0.29 ) }
    dend_67 { pt3dadd( -78.3077, -67.4562, 33.7872, 0.29 ) }
    dend_67 { pt3dadd( -79.7231, -68.7875, 34.1325, 0.29 ) }
    dend_67 { pt3dadd( -86.527, -76.238, 36.6352, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 19/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 13.8262, -0.375037, 5.05698, 1.62 ) }
    dend_55 { pt3dadd( 14.6238, -0.206986, 5.23202, 1.62 ) }
    dend_55 { pt3dadd( 14.9394, -0.531011, 6.39358, 1.62 ) }
    dend_55 { pt3dadd( 15.3317, -1.0521, 8.14387, 1.47 ) }
    dend_55 { pt3dadd( 15.3495, -1.07336, 8.21039, 1.47 ) }
    dend_55 { pt3dadd( 15.618, -1.32694, 8.98625, 1.47 ) }
    dend_55 { pt3dadd( 15.6432, -1.34818, 9.05037, 1.47 ) }
    dend_55 { pt3dadd( 18.7522, -4.09625, 16.8971, 1.18 ) }
    dend_55 { pt3dadd( 18.787, -4.1296, 16.9869, 1.18 ) }
    dend_55 { pt3dadd( 19.2985, -4.60712, 18.1875, 1.18 ) }
    dend_55 { pt3dadd( 19.9803, -5.1661, 19.517, 1.18 ) }
    dend_55 { pt3dadd( 20.0185, -5.19091, 19.5728, 1.18 ) }
    dend_55 { pt3dadd( 21.1229, -5.55562, 20.4377, 1.18 ) }
    dend_55 { pt3dadd( 21.2749, -5.561, 20.4652, 1.18 ) }
    dend_55 { pt3dadd( 22.7528, -5.58968, 20.809, 1.18 ) }
    dend_55 { pt3dadd( 22.9204, -5.58987, 20.8597, 1.18 ) }
    dend_55 { pt3dadd( 24.6342, -5.59423, 21.4474, 1.18 ) }
    dend_55 { pt3dadd( 25.4679, -5.59358, 21.7481, 1.03 ) }
    dend_55 { pt3dadd( 27.6151, -5.59585, 22.6304, 1.03 ) }
    dend_55 { pt3dadd( 27.6816, -5.59594, 22.6583, 1.03 ) }
    dend_55 { pt3dadd( 28.6955, -5.64037, 23.1274, 1.03 ) }
    dend_55 { pt3dadd( 29.3166, -5.68925, 23.4117, 1.55 ) }
    dend_55 { pt3dadd( 29.3822, -5.69727, 23.4405, 1.55 ) }
    dend_55 { pt3dadd( 30.922, -5.97535, 24.2273, 1.55 ) }
    dend_55 { pt3dadd( 31.754, -6.1588, 24.7324, 1.55 ) }
    dend_55 { pt3dadd( 33.7218, -6.62346, 25.9519, 1.55 ) }
    dend_55 { pt3dadd( 34.3158, -6.76831, 26.3484, 1.55 ) }
    dend_55 { pt3dadd( 34.485, -6.80986, 26.468, 1.55 ) }
    dend_55 { pt3dadd( 35.8825, -7.12539, 27.5308, 1.47 ) }
    dend_55 { pt3dadd( 37.4255, -7.43396, 28.6257, 1.25 ) }
    dend_55 { pt3dadd( 38.443, -7.59921, 29.3178, 0.88 ) }
    dend_55 { pt3dadd( 40.1139, -7.63986, 30.0631, 0.88 ) }
    dend_55 { pt3dadd( 40.1557, -7.61871, 30.0228, 0.88 ) }
    dend_55 { pt3dadd( 41.0549, -7.00595, 28.8217, 0.74 ) }
    dend_55 { pt3dadd( 44.4049, -4.18574, 23.3372, 0.66 ) }
    dend_55 { pt3dadd( 44.5449, -4.04122, 23.0568, 0.66 ) }
    dend_55 { pt3dadd( 44.7767, -3.74431, 22.4534, 0.37 ) }
    dend_55 { pt3dadd( 44.9491, -3.4877, 21.8925, 0.37 ) }
    dend_55 { pt3dadd( 44.969, -3.45603, 21.8191, 0.37 ) }
    dend_55 { pt3dadd( 45.021, -3.35427, 21.5432, 0.52 ) }
    dend_55 { pt3dadd( 45.5036, -2.86545, 21.7689, 0.74 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 60/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 13.8262, -0.375037, 5.05698, 0.29 ) }
    dend_54 { pt3dadd( 13.8691, -1.07219, 4.97782, 0.29 ) }
    dend_54 { pt3dadd( 13.8811, -1.81068, 4.89462, 0.29 ) }
    dend_54 { pt3dadd( 13.8734, -1.90566, 4.8841, 0.29 ) }
    dend_54 { pt3dadd( 13.786, -2.97119, 4.76611, 0.29 ) }
    dend_54 { pt3dadd( 13.7792, -3.0543, 4.75691, 0.29 ) }
    dend_54 { pt3dadd( 13.7232, -3.73691, 4.68132, 0.29 ) }
    dend_54 { pt3dadd( 13.7152, -3.81993, 4.67215, 0.29 ) }
    dend_54 { pt3dadd( 13.5096, -4.6994, 4.5774, 0.29 ) }
    dend_54 { pt3dadd( 14.783, -16.618, 4.73439, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 70/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 8.65204, 29.4686, 11.4032, 1.03 ) }
    dend_43 { pt3dadd( 8.41639, 31.4866, 11.8636, 1.03 ) }
    dend_43 { pt3dadd( 8.24119, 33.179, 12.1897, 1.03 ) }
    dend_43 { pt3dadd( 8.11647, 34.6056, 12.501, 1.03 ) }
    dend_43 { pt3dadd( 8.1038, 34.7653, 12.5378, 1.03 ) }
    dend_43 { pt3dadd( 7.93168, 37.4292, 13.077, 1.03 ) }
    dend_43 { pt3dadd( 7.86199, 38.687, 13.3075, 0.74 ) }
    dend_43 { pt3dadd( 7.8236, 39.9442, 13.7002, 0.59 ) }
    dend_43 { pt3dadd( 7.83521, 41.1625, 14.2784, 0.59 ) }
    dend_43 { pt3dadd( 7.83776, 41.2339, 14.3198, 0.59 ) }
    dend_43 { pt3dadd( 7.91495, 42.2581, 15.0374, 1.18 ) }
    dend_43 { pt3dadd( 7.9228, 42.3117, 15.0834, 1.18 ) }
    dend_43 { pt3dadd( 8.55023, 46.2521, 18.5614, 0.74 ) }
    dend_43 { pt3dadd( 8.67395, 47.0476, 19.2301, 1.18 ) }
    dend_43 { pt3dadd( 8.81859, 47.991, 19.969, 1.18 ) }
    dend_43 { pt3dadd( 8.83218, 48.0654, 20.0259, 1.18 ) }
    dend_43 { pt3dadd( 9.02906, 49.0533, 20.7729, 0.88 ) }
    dend_43 { pt3dadd( 9.21044, 49.9339, 21.3624, 0.66 ) }
    dend_43 { pt3dadd( 9.4962, 51.1242, 21.9039, 0.66 ) }
    dend_43 { pt3dadd( 9.5289, 51.2461, 21.9681, 0.66 ) }
    dend_43 { pt3dadd( 9.89398, 52.6004, 22.7543, 0.66 ) }
    dend_43 { pt3dadd( 9.91845, 52.7109, 22.8312, 0.66 ) }
    dend_43 { pt3dadd( 10.0591, 53.711, 23.6189, 0.96 ) }
    dend_43 { pt3dadd( 10.0848, 54.2038, 23.9923, 1.11 ) }
    dend_43 { pt3dadd( 10.0923, 55.0296, 24.4552, 1.11 ) }
    dend_43 { pt3dadd( 10.0882, 55.1981, 24.5294, 1.11 ) }
    dend_43 { pt3dadd( 10.0003, 56.8003, 25.0504, 0.96 ) }
    dend_43 { pt3dadd( 9.93755, 57.9595, 25.4036, 0.88 ) }
    dend_43 { pt3dadd( 9.84388, 59.4419, 25.8028, 0.88 ) }
    dend_43 { pt3dadd( 9.65412, 61.6978, 26.3929, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( 9.63275, 61.9389, 26.4511, 0.88 ) }
    dend_43 { pt3dadd( 9.52781, 63.1999, 26.7059, 0.88 ) }
    dend_43 { pt3dadd( 9.41478, 64.5474, 26.8963, 0.59 ) }
    dend_43 { pt3dadd( 9.32578, 65.5079, 27.0248, 0.59 ) }
    dend_43 { pt3dadd( 9.27037, 66.0253, 27.0901, 1.18 ) }
    dend_43 { pt3dadd( 9.18031, 66.7948, 27.1648, 1.18 ) }
    dend_43 { pt3dadd( 9.05423, 67.9002, 27.222, 1.18 ) }
    dend_43 { pt3dadd( 8.83935, 69.7839, 27.2407, 0.66 ) }
    dend_43 { pt3dadd( 8.61124, 71.9987, 27.1651, 0.66 ) }
    dend_43 { pt3dadd( 8.59442, 72.1815, 27.1643, 0.66 ) }
    dend_43 { pt3dadd( 8.40124, 74.4125, 27.2056, 0.66 ) }
    dend_43 { pt3dadd( 8.29881, 75.6409, 27.2525, 0.66 ) }
    dend_43 { pt3dadd( 8.29288, 75.7225, 27.2581, 0.66 ) }
    dend_43 { pt3dadd( 8.21207, 77.0785, 27.3939, 0.66 ) }
    dend_43 { pt3dadd( 8.09464, 79.2512, 27.6791, 1.18 ) }
    dend_43 { pt3dadd( 8.07379, 79.7608, 27.7575, 1.69 ) }
    dend_43 { pt3dadd( 8.0709, 79.9221, 27.7884, 1.69 ) }
    dend_43 { pt3dadd( 8.07434, 81.5593, 28.0879, 1.69 ) }
    dend_43 { pt3dadd( 8.08282, 82.326, 28.2229, 1.69 ) }
    dend_43 { pt3dadd( 8.10686, 83.2443, 28.3648, 0.22 ) }
    dend_43 { pt3dadd( 8.11578, 83.4371, 28.3855, 0.37 ) }
    dend_43 { pt3dadd( 8.13502, 83.747, 28.419, 0.37 ) }
    dend_43 { pt3dadd( 8.29857, 86.2092, 28.7353, 0.37 ) }
    dend_43 { pt3dadd( 8.35329, 86.9849, 28.8469, 0.74 ) }
    dend_43 { pt3dadd( 8.40168, 87.6776, 28.9547, 0.74 ) }
    dend_43 { pt3dadd( 8.44359, 88.3662, 29.0636, 0.37 ) }
    dend_43 { pt3dadd( 8.47504, 89.5467, 29.3187, 0.37 ) }
    dend_43 { pt3dadd( 8.47449, 90.3917, 29.5264, 0.29 ) }
    dend_43 { pt3dadd( 8.46989, 90.9834, 29.6763, 0.29 ) }
    dend_43 { pt3dadd( 8.46559, 91.7326, 29.8478, 0.81 ) }
    dend_43 { pt3dadd( 8.46359, 92.7396, 30.0767, 1.03 ) }
    dend_43 { pt3dadd( 8.52349, 95.0286, 30.5672, 1.03 ) }
    dend_43 { pt3dadd( 8.64549, 96.7754, 30.9746, 1.47 ) }
    dend_43 { pt3dadd( 8.80972, 98.3691, 31.3873, 3.02 ) }
    dend_43 { pt3dadd( 8.95988, 99.5225, 31.7194, 3.02 ) }
    dend_43 { pt3dadd( 8.97404, 99.6113, 31.7468, 3.02 ) }
    dend_43 { pt3dadd( 9.22808, 100.917, 32.1699, 2.65 ) }
    dend_43 { pt3dadd( 9.58713, 102.45, 32.6461, 2.65 ) }
    dend_43 { pt3dadd( 9.96855, 104.243, 33.278, 0.52 ) }
    dend_43 { pt3dadd( 9.98125, 104.32, 33.3051, 0.52 ) }
    dend_43 { pt3dadd( 9.99835, 104.491, 33.3599, 0.66 ) }
    dend_43 { pt3dadd( 10.0025, 104.57, 33.3832, 0.66 ) }
    dend_43 { pt3dadd( 9.93295, 105.909, 33.6921, 0.66 ) }
    dend_43 { pt3dadd( 9.75669, 107.124, 33.7338, 0.66 ) }
    dend_43 { pt3dadd( 9.66805, 107.607, 33.6836, 0.59 ) }
    dend_43 { pt3dadd( 9.60589, 107.911, 33.6522, 0.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 8.65204, 29.4686, 11.4032, 1.18 ) }
    dend_40 { pt3dadd( 8.58574, 30.0913, 12.627, 1.18 ) }
    dend_40 { pt3dadd( 8.40422, 31.4352, 14.9798, 0.88 ) }
    dend_40 { pt3dadd( 8.33154, 31.9503, 15.8052, 0.88 ) }
    dend_40 { pt3dadd( 8.32194, 32.0283, 15.9151, 0.88 ) }
    dend_40 { pt3dadd( 8.22271, 32.9615, 17.0896, 0.88 ) }
    dend_40 { pt3dadd( 8.2192, 33.0131, 17.1471, 0.88 ) }
    dend_40 { pt3dadd( 8.21379, 33.7106, 17.6726, 0.88 ) }
    dend_40 { pt3dadd( 8.2315, 33.9451, 17.765, 0.88 ) }
    dend_40 { pt3dadd( 8.34554, 34.6648, 17.986, 0.88 ) }
    dend_40 { pt3dadd( 8.47858, 35.0297, 18.1002, 0.88 ) }
    dend_40 { pt3dadd( 8.79723, 35.6156, 18.2566, 0.88 ) }
    dend_40 { pt3dadd( 8.8375, 35.6785, 18.2759, 0.88 ) }
    dend_40 { pt3dadd( 9.17256, 36.1402, 18.4188, 0.88 ) }
    dend_40 { pt3dadd( 9.21782, 36.1998, 18.4383, 0.88 ) }
    dend_40 { pt3dadd( 10.6537, 37.9892, 19.032, 1.33 ) }
    dend_40 { pt3dadd( 11.221, 38.6801, 19.2592, 1.33 ) }
    dend_40 { pt3dadd( 11.268, 38.7351, 19.2871, 1.33 ) }
    dend_40 { pt3dadd( 11.8561, 39.4146, 19.7085, 1.47 ) }
    dend_40 { pt3dadd( 11.8985, 39.469, 19.7438, 1.47 ) }
    dend_40 { pt3dadd( 12.2014, 39.887, 20.014, 1.47 ) }
    dend_40 { pt3dadd( 12.2438, 39.9475, 20.0628, 1.47 ) }
    dend_40 { pt3dadd( 13.4772, 41.6816, 21.5649, 1.47 ) }
    dend_40 { pt3dadd( 13.5514, 41.7867, 21.6512, 1.47 ) }
    dend_40 { pt3dadd( 14.3589, 42.954, 22.5907, 1.47 ) }
    dend_40 { pt3dadd( 14.4108, 43.0291, 22.6512, 1.47 ) }
    dend_40 { pt3dadd( 15.4545, 44.5983, 23.9127, 1.47 ) }
    dend_40 { pt3dadd( 16.0353, 45.4891, 24.5996, 0.74 ) }
    dend_40 { pt3dadd( 16.4421, 46.1722, 25.0608, 0.74 ) }
    dend_40 { pt3dadd( 16.5124, 46.2929, 25.15, 1.18 ) }
    dend_40 { pt3dadd( 17.2216, 47.5533, 26.1752, 1.18 ) }
    dend_40 { pt3dadd( 17.5281, 48.2529, 26.7243, 0.96 ) }
    dend_40 { pt3dadd( 17.5395, 48.3057, 26.7622, 0.96 ) }
    dend_40 { pt3dadd( 17.594, 49.1075, 27.5679, 0.96 ) }
    dend_40 { pt3dadd( 17.5826, 49.7938, 28.4628, 0.96 ) }
    dend_40 { pt3dadd( 17.5823, 49.9008, 28.6115, 0.96 ) }
    dend_40 { pt3dadd( 17.6065, 50.4791, 29.4176, 1.33 ) }
    dend_40 { pt3dadd( 17.6872, 51.1048, 30.3203, 1.33 ) }
    dend_40 { pt3dadd( 18.1277, 52.7298, 32.6108, 1.33 ) }
    dend_40 { pt3dadd( 18.5582, 53.7302, 34.0405, 0.52 ) }
    dend_40 { pt3dadd( 18.8811, 54.3327, 34.7519, 0.52 ) }
    dend_40 { pt3dadd( 19.3196, 55.0282, 35.4251, 0.52 ) }
    dend_40 { pt3dadd( 19.3579, 55.0833, 35.4638, 0.52 ) }
    dend_40 { pt3dadd( 19.9836, 56.0639, 35.8805, 0.52 ) }
    dend_40 { pt3dadd( 20.0139, 56.1332, 35.8942, 0.52 ) }
    dend_40 { pt3dadd( 20.3599, 57.6052, 36.2012, 0.52 ) }
    dend_40 { pt3dadd( 20.3493, 58.3299, 36.4504, 1.77 ) }
    dend_40 { pt3dadd( 20.1755, 59.1243, 36.8095, 1.77 ) }
    dend_40 { pt3dadd( 19.9437, 59.6871, 37.1183, 1.77 ) }
    dend_40 { pt3dadd( 19.3224, 60.6191, 37.7506, 0.66 ) }
    dend_40 { pt3dadd( 18.8804, 61.0712, 38.1885, 0.66 ) }
    dend_40 { pt3dadd( 18.3298, 61.4034, 38.707, 0.66 ) }
    dend_40 { pt3dadd( 18.194, 61.4597, 38.8184, 0.66 ) }
    dend_40 { pt3dadd( 17.7324, 61.6156, 39.156, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_40 { pt3dadd( 17.6079, 61.6776, 39.2481, 0.52 ) }
    dend_40 { pt3dadd( 16.5292, 62.387, 40.0247, 0.52 ) }
    dend_40 { pt3dadd( 16.4159, 62.473, 40.1107, 0.52 ) }
    dend_40 { pt3dadd( 15.689, 63.1018, 40.6814, 0.22 ) }
    dend_40 { pt3dadd( 14.918, 63.8186, 41.2836, 0.22 ) }
    dend_40 { pt3dadd( 13.6634, 65.141, 42.2486, 0.22 ) }
    dend_40 { pt3dadd( 13.4691, 65.3677, 42.3862, 0.88 ) }
    dend_40 { pt3dadd( 15.6656, 73.8396, 49.0729, 0.88 ) }
    dend_40 { pt3dadd( 16.213, 82.281, 56.1139, 0.88 ) }
    dend_40 { pt3dadd( 18.6241, 90.3611, 63.2229, 0.88 ) }
    dend_40 { pt3dadd( 21.1449, 98.3712, 70.3776, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 11/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -37.4979, -0.607051, -6.48161, 0.81 ) }
    dend_38 { pt3dadd( -37.6742, -0.654283, -6.66498, 0.81 ) }
    dend_38 { pt3dadd( -38.295, -0.810483, -7.35083, 0.74 ) }
    dend_38 { pt3dadd( -38.8563, -0.922313, -7.93314, 0.74 ) }
    dend_38 { pt3dadd( -40.2039, -1.11396, -9.16578, 1.69 ) }
    dend_38 { pt3dadd( -40.6441, -1.15057, -9.55593, 2.14 ) }
    dend_38 { pt3dadd( -40.9123, -1.16365, -9.78544, 2.14 ) }
    dend_38 { pt3dadd( -42.5661, -1.14655, -11.2013, 0.66 ) }
    dend_38 { pt3dadd( -43.1133, -1.12036, -11.6906, 0.52 ) }
    dend_38 { pt3dadd( -43.9061, -1.05394, -12.4037, 0.52 ) }
    dend_38 { pt3dadd( -44.877, -0.937883, -13.2385, 0.52 ) }
    dend_38 { pt3dadd( -45.1224, -0.898648, -13.4911, 1.33 ) }
    dend_38 { pt3dadd( -45.844, -0.753479, -14.3336, 1.84 ) }
    dend_38 { pt3dadd( -46.6697, -0.499, -15.3967, 0.29 ) }
    dend_38 { pt3dadd( -47.399, -0.209654, -16.4701, 0.29 ) }
    dend_38 { pt3dadd( -47.4264, -0.194663, -16.5158, 0.29 ) }
    dend_38 { pt3dadd( -48.3993, 0.48573, -18.1811, 0.29 ) }
    dend_38 { pt3dadd( -48.4238, 0.507992, -18.2253, 0.29 ) }
    dend_38 { pt3dadd( -48.8105, 0.962664, -18.9407, 0.22 ) }
    dend_38 { pt3dadd( -48.9728, 1.2319, -19.2673, 0.22 ) }
    dend_38 { pt3dadd( -49.1358, 1.62115, -19.713, 1.4 ) }
    dend_38 { pt3dadd( -49.1534, 1.65839, -19.7491, 1.4 ) }
    dend_38 { pt3dadd( -49.7806, 2.71272, -20.2902, 2.58 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -37.4979, -0.607051, -6.48161, 0.52 ) }
    dend_33 { pt3dadd( -38.3486, -0.00363567, -6.78573, 0.52 ) }
    dend_33 { pt3dadd( -38.4302, 0.0522023, -6.80774, 0.52 ) }
    dend_33 { pt3dadd( -38.8867, 0.35697, -6.91632, 0.52 ) }
    dend_33 { pt3dadd( -38.9498, 0.397713, -6.92987, 0.52 ) }
    dend_33 { pt3dadd( -40.0283, 1.06603, -7.13838, 0.52 ) }
    dend_33 { pt3dadd( -40.1496, 1.13897, -7.16023, 0.52 ) }
    dend_33 { pt3dadd( -40.9734, 1.58753, -7.22701, 0.52 ) }
    dend_33 { pt3dadd( -41.0413, 1.62094, -7.23803, 0.52 ) }
    dend_33 { pt3dadd( -41.2977, 1.72581, -7.30796, 0.81 ) }
    dend_33 { pt3dadd( -41.6968, 1.87477, -7.43764, 1.03 ) }
    dend_33 { pt3dadd( -41.7653, 1.89762, -7.46329, 1.03 ) }
    dend_33 { pt3dadd( -42.559, 2.15304, -7.76919, 1.03 ) }
    dend_33 { pt3dadd( -43.4939, 2.43958, -8.13227, 0.44 ) }
    dend_33 { pt3dadd( -44.2621, 2.67244, -8.4149, 0.29 ) }
    dend_33 { pt3dadd( -45.8817, 3.14188, -8.97346, 0.22 ) }
    dend_33 { pt3dadd( -46.7976, 3.40619, -9.28734, 1.33 ) }
    dend_33 { pt3dadd( -46.8503, 3.42143, -9.30468, 1.33 ) }
    dend_33 { pt3dadd( -47.3734, 3.57179, -9.45943, 2.06 ) }
    dend_33 { pt3dadd( -48.0723, 3.77671, -9.59273, 2.28 ) }
    dend_33 { pt3dadd( -48.544, 3.9138, -9.65488, 2.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_26 (entry count 55/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 8.62321, 18.0871, -3.07033, 0.88 ) }
    dend_31 { pt3dadd( 9.23099, 18.922, -3.25047, 0.88 ) }
    dend_31 { pt3dadd( 9.96475, 19.8026, -3.52941, 0.81 ) }
    dend_31 { pt3dadd( 10.0612, 19.8809, -3.55509, 0.81 ) }
    dend_31 { pt3dadd( 10.9274, 20.4692, -3.74858, 0.81 ) }
    dend_31 { pt3dadd( 11.0098, 20.5089, -3.77743, 0.81 ) }
    dend_31 { pt3dadd( 12.3717, 21.116, -4.31018, 1.25 ) }
    dend_31 { pt3dadd( 12.5441, 21.1774, -4.40099, 1.25 ) }
    dend_31 { pt3dadd( 14.0468, 21.8021, -5.30458, 1.25 ) }
    dend_31 { pt3dadd( 14.1093, 21.8339, -5.35073, 1.25 ) }
    dend_31 { pt3dadd( 15.9199, 22.972, -6.8863, 0.66 ) }
    dend_31 { pt3dadd( 16.503, 23.4217, -7.41219, 0.66 ) }
    dend_31 { pt3dadd( 17.6416, 24.484, -8.51776, 1.03 ) }
    dend_31 { pt3dadd( 18.7022, 25.7092, -9.6504, 1.03 ) }
    dend_31 { pt3dadd( 19.5798, 26.9731, -10.711, 0.88 ) }
    dend_31 { pt3dadd( 20.0379, 27.7518, -11.264, 0.66 ) }
    dend_31 { pt3dadd( 20.3605, 28.4465, -11.6402, 0.66 ) }
    dend_31 { pt3dadd( 20.39, 28.5143, -11.6775, 0.66 ) }
    dend_31 { pt3dadd( 21.23, 30.6624, -12.7693, 0.66 ) }
    dend_31 { pt3dadd( 21.2553, 30.7301, -12.8098, 0.66 ) }
    dend_31 { pt3dadd( 21.5352, 31.5894, -13.3318, 1.25 ) }
    dend_31 { pt3dadd( 21.7873, 32.4796, -13.9188, 1.69 ) }
    dend_31 { pt3dadd( 22.1888, 34.3225, -15.1214, 1.84 ) }
    dend_31 { pt3dadd( 22.2723, 34.8361, -15.4356, 1.84 ) }
    dend_31 { pt3dadd( 22.3547, 36.3568, -16.2992, 1.4 ) }
    dend_31 { pt3dadd( 22.3576, 37.0383, -16.6872, 0.96 ) }
    dend_31 { pt3dadd( 22.3077, 37.8667, -17.1433, 0.81 ) }
    dend_31 { pt3dadd( 22.1455, 39.1814, -17.7877, 0.66 ) }
    dend_31 { pt3dadd( 21.9683, 40.2128, -18.1913, 0.59 ) }
    dend_31 { pt3dadd( 21.7429, 41.5165, -18.6459, 0.59 ) }
    dend_31 { pt3dadd( 21.4963, 43.1073, -19.1103, 0.59 ) }
    dend_31 { pt3dadd( 21.3643, 44.2301, -19.4173, 1.33 ) }
    dend_31 { pt3dadd( 21.274, 45.4766, -19.7894, 2.06 ) }
    dend_31 { pt3dadd( 21.2539, 46.962, -20.2799, 2.73 ) }
    dend_31 { pt3dadd( 21.343, 48.7218, -20.866, 3.17 ) }
    dend_31 { pt3dadd( 21.4912, 50.1727, -21.3408, 3.17 ) }
    dend_31 { pt3dadd( 21.672, 51.5778, -21.7749, 2.5 ) }
    dend_31 { pt3dadd( 22.0313, 53.7478, -22.4768, 0.88 ) }
    dend_31 { pt3dadd( 22.3967, 55.4604, -23.0424, 0.52 ) }
    dend_31 { pt3dadd( 22.7843, 56.959, -23.547, 0.44 ) }
    dend_31 { pt3dadd( 22.808, 57.0335, -23.5734, 0.44 ) }
    dend_31 { pt3dadd( 23.2654, 58.2689, -24.0229, 0.44 ) }
    dend_31 { pt3dadd( 23.335, 58.4427, -24.0788, 0.44 ) }
    dend_31 { pt3dadd( 23.7865, 59.6061, -24.3871, 0.44 ) }
    dend_31 { pt3dadd( 23.8257, 59.7192, -24.4245, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_31 { pt3dadd( 24.1643, 60.9565, -24.9338, 0.44 ) }
    dend_31 { pt3dadd( 24.1777, 61.0285, -24.972, 0.44 ) }
    dend_31 { pt3dadd( 24.3042, 62.6015, -25.8904, 0.44 ) }
    dend_31 { pt3dadd( 24.2727, 64.1184, -26.8282, 1.18 ) }
    dend_31 { pt3dadd( 24.1849, 65.0721, -27.444, 1.77 ) }
    dend_31 { pt3dadd( 24.1083, 65.7593, -27.9731, 2.06 ) }
    dend_31 { pt3dadd( 23.8311, 67.7601, -29.6434, 0.37 ) }
    dend_31 { pt3dadd( 23.6518, 69.1609, -30.879, 0.37 ) }
    dend_31 { pt3dadd( 23.4561, 70.7082, -32.3275, 0.37 ) }
    dend_31 { pt3dadd( 23.4501, 70.7608, -32.375, 0.37 ) }
    dend_31 { pt3dadd( 23.2071, 73.5152, -34.7793, 1.77 ) }
    dend_31 { pt3dadd( 23.1615, 74.5112, -35.6341, 2.36 ) }
    dend_31 { pt3dadd( 23.153, 75.201, -36.1796, 1.55 ) }
    dend_31 { pt3dadd( 23.1788, 75.7376, -36.5636, 0.29 ) }
    dend_31 { pt3dadd( 23.3366, 77.3335, -37.3597, 0.29 ) }
    dend_31 { pt3dadd( 23.4424, 78.3358, -37.7059, 0.96 ) }
    dend_31 { pt3dadd( 23.4525, 78.428, -37.7216, 0.96 ) }
    dend_31 { pt3dadd( 23.5982, 79.5228, -37.8877, 0.96 ) }
    dend_31 { pt3dadd( 23.8043, 80.5861, -38.1477, 0.15 ) }
    dend_31 { pt3dadd( 24.2806, 82.7046, -38.842, 0.15 ) }
    dend_31 { pt3dadd( 24.3004, 82.79, -38.8768, 0.66 ) }
    dend_31 { pt3dadd( 24.3319, 82.9384, -38.9415, 0.66 ) }
    dend_31 { pt3dadd( 24.4622, 83.5726, -39.3773, 0.66 ) }
    dend_31 { pt3dadd( 24.8135, 85.8416, -41.2408, 0.22 ) }
    dend_31 { pt3dadd( 25.1096, 88.4285, -43.6468, 0.22 ) }
    dend_31 { pt3dadd( 25.1865, 89.2714, -44.4991, 1.4 ) }
    dend_31 { pt3dadd( 25.2388, 90.0097, -45.2404, 1.69 ) }
    dend_31 { pt3dadd( 25.4132, 93.2944, -48.5306, 0.22 ) }
    dend_31 { pt3dadd( 25.4891, 95.1602, -50.412, 0.22 ) }
    dend_31 { pt3dadd( 25.5424, 96.7643, -51.9263, 0.29 ) }
    dend_31 { pt3dadd( 25.6171, 97.4765, -52.6567, 1.47 ) }
    dend_31 { pt3dadd( 25.737, 98.2174, -53.3876, 1.69 ) }
    dend_31 { pt3dadd( 25.7523, 98.277, -53.4433, 1.69 ) }
    dend_31 { pt3dadd( 26.2059, 99.5343, -54.416, 0.15 ) }
    dend_31 { pt3dadd( 26.9786, 100.939, -55.6905, 0.15 ) }
    dend_31 { pt3dadd( 27.6843, 102.086, -56.7024, 0.15 ) }
    dend_31 { pt3dadd( 27.6843, 102.086, -56.7024, 1.03 ) }
    dend_31 { pt3dadd( 28.3523, 103.275, -57.6773, 1.84 ) }
    dend_31 { pt3dadd( 28.3816, 103.338, -57.7237, 1.84 ) }
    dend_31 { pt3dadd( 28.9607, 104.952, -58.7583, 1.84 ) }
    dend_31 { pt3dadd( 29.1882, 106.062, -59.3973, 0.15 ) }
    dend_31 { pt3dadd( 29.196, 106.125, -59.4278, 0.15 ) }
    dend_31 { pt3dadd( 29.4541, 108.916, -60.6238, 0.15 ) }
    dend_31 { pt3dadd( 29.4609, 109.025, -60.6632, 0.74 ) }
    dend_31 { pt3dadd( 29.5229, 110.013, -60.9772, 0.74 ) }
    dend_31 { pt3dadd( 29.751, 113.43, -61.8668, 0.22 ) }
    dend_31 { pt3dadd( 29.8733, 114.027, -62.089, 0.74 ) }
    dend_31 { pt3dadd( 29.9896, 114.294, -62.2074, 0.74 ) }
    dend_31 { pt3dadd( 30.564, 115.109, -62.6713, 0.22 ) }
    dend_31 { pt3dadd( 31.1, 115.727, -63.0548, 0.96 ) }
    dend_31 { pt3dadd( 31.6377, 116.205, -63.4124, 1.18 ) }
    dend_31 { pt3dadd( 34.6034, 118.415, -65.3763, 0.15 ) }
    dend_31 { pt3dadd( 36.7592, 120.029, -66.9052, 0.15 ) }
    dend_31 { pt3dadd( 37.475, 120.556, -67.4294, 0.88 ) }
    dend_31 { pt3dadd( 38.1135, 121.021, -67.9084, 0.88 ) }
    dend_31 { pt3dadd( 39.953, 122.385, -69.3143, 0.22 ) }
    dend_31 { pt3dadd( 40.5566, 122.891, -69.8157, 0.88 ) }
    dend_31 { pt3dadd( 41.1447, 123.483, -70.3294, 1.11 ) }
    dend_31 { pt3dadd( 41.1987, 123.54, -70.3838, 1.11 ) }
    dend_31 { pt3dadd( 41.5574, 123.966, -70.7403, 1.11 ) }
    dend_31 { pt3dadd( 41.6005, 124.022, -70.7843, 1.11 ) }
    dend_31 { pt3dadd( 43.6445, 126.974, -72.9701, 0.15 ) }
    dend_31 { pt3dadd( 43.6853, 127.032, -73.0139, 0.15 ) }
    dend_31 { pt3dadd( 44.1136, 127.619, -73.4861, 0.74 ) }
    dend_31 { pt3dadd( 44.6243, 128.324, -74.0661, 0.74 ) }
    dend_31 { pt3dadd( 44.6644, 128.38, -74.1135, 0.74 ) }
    dend_31 { pt3dadd( 45.5204, 129.641, -75.1607, 0.74 ) }
    dend_31 { pt3dadd( 45.5508, 129.705, -75.2035, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 68/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.62321, 18.0871, -3.07033, 1.4 ) }
    dend_30 { pt3dadd( 8.75832, 17.9419, -3.18312, 1.4 ) }
    dend_30 { pt3dadd( 9.57946, 17.0532, -3.75497, 1.4 ) }
    dend_30 { pt3dadd( 9.91725, 16.6512, -3.95715, 0.96 ) }
    dend_30 { pt3dadd( 10.4036, 15.9785, -4.21585, 0.96 ) }
    dend_30 { pt3dadd( 10.4358, 15.9257, -4.24012, 0.96 ) }
    dend_30 { pt3dadd( 10.8001, 15.2434, -4.61139, 0.96 ) }
    dend_30 { pt3dadd( 11.0324, 14.75, -4.8839, 0.96 ) }
    dend_30 { pt3dadd( 11.3921, 13.9359, -5.46239, 0.96 ) }
    dend_30 { pt3dadd( 11.7615, 13.0955, -6.23536, 0.96 ) }
    dend_30 { pt3dadd( 12.261, 12.0202, -7.40274, 1.25 ) }
    dend_30 { pt3dadd( 12.6097, 11.3485, -8.20055, 1.25 ) }
    dend_30 { pt3dadd( 12.8551, 10.9231, -8.76135, 1.25 ) }
    dend_30 { pt3dadd( 13.6618, 9.70644, -10.4666, 1.03 ) }
    dend_30 { pt3dadd( 14.1828, 9.04814, -11.4358, 1.03 ) }
    dend_30 { pt3dadd( 14.5488, 8.65747, -12.0183, 1.03 ) }
    dend_30 { pt3dadd( 14.9907, 8.24747, -12.592, 1.25 ) }
    dend_30 { pt3dadd( 15.6606, 7.69671, -13.3317, 1.25 ) }
    dend_30 { pt3dadd( 16.1221, 7.32737, -13.8464, 1.25 ) }
    dend_30 { pt3dadd( 16.5135, 6.98176, -14.2586, 1.25 ) }
    dend_30 { pt3dadd( 16.5441, 6.9466, -14.3068, 1.25 ) }
    dend_30 { pt3dadd( 16.868, 6.32915, -15.2078, 1.25 ) }
    dend_30 { pt3dadd( 16.9808, 5.79553, -15.9585, 0.88 ) }
    dend_30 { pt3dadd( 17.0322, 4.87168, -17.213, 1.33 ) }
    dend_30 { pt3dadd( 17.0126, 4.41089, -17.8305, 1.33 ) }
    dend_30 { pt3dadd( 16.919, 3.28356, -19.3168, 1.03 ) }
    dend_30 { pt3dadd( 16.8654, 2.73591, -20.0012, 0.74 ) }
    dend_30 { pt3dadd( 16.8319, 2.18985, -20.6649, 0.74 ) }
    dend_30 { pt3dadd( 16.897, 1.55102, -21.4737, 0.74 ) }
    dend_30 { pt3dadd( 16.9239, 1.52417, -21.5185, 0.74 ) }
    dend_30 { pt3dadd( 17.2796, 1.33933, -21.947, 1.03 ) }
    dend_30 { pt3dadd( 17.358, 1.30594, -22.0405, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( 18.1857, 0.984035, -23.1901, 1.03 ) }
    dend_30 { pt3dadd( 18.6386, 0.818739, -23.8439, 1.25 ) }
    dend_30 { pt3dadd( 19.3767, 0.513288, -24.9833, 1.33 ) }
    dend_30 { pt3dadd( 20.1954, 0.125048, -26.3258, 1.33 ) }
    dend_30 { pt3dadd( 20.9223, -0.297186, -27.6497, 1.33 ) }
    dend_30 { pt3dadd( 21.3687, -0.603993, -28.5583, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 6/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 8.62321, 18.0871, -3.07033, 1.55 ) }
    dend_27 { pt3dadd( 9.02739, 18.2499, -3.03352, 1.55 ) }
    dend_27 { pt3dadd( 9.95595, 18.624, -2.94896, 1.55 ) }
    dend_27 { pt3dadd( 11.364, 19.1912, -2.82071, 1.33 ) }
    dend_27 { pt3dadd( 12.4287, 19.62, -2.72375, 1.62 ) }
    dend_27 { pt3dadd( 13.5683, 20.079, -2.61996, 1.84 ) }
    dend_27 { pt3dadd( 13.6263, 20.1024, -2.61468, 1.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 16.8397, -102.76, 5.9249, 0.22 ) }
    dend_21 { pt3dadd( 17.2346, -104.413, 3.73389, 0.22 ) }
    dend_21 { pt3dadd( 17.2442, -104.451, 3.69557, 0.22 ) }
    dend_21 { pt3dadd( 17.42, -105.059, 3.21494, 0.22 ) }
    dend_21 { pt3dadd( 17.4958, -105.294, 3.07292, 0.22 ) }
    dend_21 { pt3dadd( 17.5793, -105.544, 2.95478, 0.96 ) }
    dend_21 { pt3dadd( 17.8242, -106.256, 2.6765, 1.03 ) }
    dend_21 { pt3dadd( 17.9855, -106.693, 2.60744, 1.4 ) }
    dend_21 { pt3dadd( 18.1743, -107.184, 2.52414, 1.69 ) }
    dend_21 { pt3dadd( 18.4232, -107.814, 2.41539, 1.47 ) }
    dend_21 { pt3dadd( 18.6312, -108.344, 2.32258, 0.88 ) }
    dend_21 { pt3dadd( 18.8803, -109.03, 2.2146, 0.66 ) }
    dend_21 { pt3dadd( 19.2697, -110.164, 2.06061, 0.52 ) }
    dend_21 { pt3dadd( 19.2863, -110.215, 2.0538, 0.52 ) }
    dend_21 { pt3dadd( 19.487, -110.881, 1.96885, 0.52 ) }
    dend_21 { pt3dadd( 19.8539, -112.21, 1.81478, 0.52 ) }
    dend_21 { pt3dadd( 20.1844, -113.525, 1.686, 0.29 ) }
    dend_21 { pt3dadd( 20.2996, -114.034, 1.6496, 0.74 ) }
    dend_21 { pt3dadd( 20.4122, -114.597, 1.62349, 1.18 ) }
    dend_21 { pt3dadd( 20.5147, -115.154, 1.60318, 1.55 ) }
    dend_21 { pt3dadd( 20.6077, -115.826, 1.58603, 1.84 ) }
    dend_21 { pt3dadd( 20.6506, -116.388, 1.58026, 1.99 ) }
    dend_21 { pt3dadd( 20.668, -116.924, 1.57204, 1.62 ) }
    dend_21 { pt3dadd( 20.6695, -117.713, 1.55913, 0.66 ) }
    dend_21 { pt3dadd( 20.6521, -118.507, 1.54553, 0.44 ) }
    dend_21 { pt3dadd( 20.6136, -119.548, 1.5276, 0.37 ) }
    dend_21 { pt3dadd( 20.554, -120.625, 1.50342, 0.29 ) }
    dend_21 { pt3dadd( 20.5166, -121.123, 1.48959, 0.29 ) }
    dend_21 { pt3dadd( 20.4906, -121.411, 1.47127, 0.44 ) }
    dend_21 { pt3dadd( 20.462, -121.693, 1.44176, 0.44 ) }
    dend_21 { pt3dadd( 20.4257, -122.083, 1.37213, 0.81 ) }
    dend_21 { pt3dadd( 20.4065, -122.442, 1.2806, 0.81 ) }
    dend_21 { pt3dadd( 20.3799, -122.76, 1.18763, 0.81 ) }
    dend_21 { pt3dadd( 20.3008, -123.432, 0.994286, 0.59 ) }
    dend_21 { pt3dadd( 20.2304, -123.823, 0.887876, 0.52 ) }
    dend_21 { pt3dadd( 20.1029, -124.361, 0.752454, 0.15 ) }
    dend_21 { pt3dadd( 19.9255, -124.996, 0.608081, 0.15 ) }
    dend_21 { pt3dadd( 19.6019, -126.019, 0.379084, 0.15 ) }
    dend_21 { pt3dadd( 19.4315, -126.512, 0.277613, 0.74 ) }
    dend_21 { pt3dadd( 19.2203, -127.159, 0.171632, 1.25 ) }
    dend_21 { pt3dadd( 19.0924, -127.598, 0.095641, 1.47 ) }
    dend_21 { pt3dadd( 19.0104, -127.92, 0.0405197, 1.33 ) }
    dend_21 { pt3dadd( 18.8727, -128.623, -0.0875827, 0.22 ) }
    dend_21 { pt3dadd( 18.7513, -129.642, -0.275831, 0.22 ) }
    dend_21 { pt3dadd( 18.6679, -130.973, -0.51309, 0.22 ) }
    dend_21 { pt3dadd( 18.6689, -131.452, -0.588539, 0.74 ) }
    dend_21 { pt3dadd( 18.687, -131.845, -0.641817, 0.96 ) }
    dend_21 { pt3dadd( 18.7324, -132.362, -0.696143, 0.96 ) }
    dend_21 { pt3dadd( 18.7968, -132.815, -0.724018, 0.81 ) }
    dend_21 { pt3dadd( 18.8688, -133.206, -0.741817, 0.22 ) }
    dend_21 { pt3dadd( 19.0695, -134.203, -0.763935, 0.22 ) }
    dend_21 { pt3dadd( 19.1258, -134.49, -0.76295, 1.03 ) }
    dend_21 { pt3dadd( 19.2408, -135.067, -0.748504, 1.55 ) }
    dend_21 { pt3dadd( 19.3314, -135.486, -0.732146, 1.92 ) }
    dend_21 { pt3dadd( 19.3938, -135.764, -0.719017, 1.92 ) }
    dend_21 { pt3dadd( 19.4994, -136.214, -0.694242, 1.92 ) }
    dend_21 { pt3dadd( 19.706, -137.039, -0.644775, 0.22 ) }
    dend_21 { pt3dadd( 20.0727, -138.463, -0.559412, 0.22 ) }
    dend_21 { pt3dadd( 20.4447, -139.891, -0.474711, 0.22 ) }
    dend_21 { pt3dadd( 20.4584, -139.944, -0.473018, 0.22 ) }
    dend_21 { pt3dadd( 20.7212, -140.914, -0.462346, 0.22 ) }
    dend_21 { pt3dadd( 20.9903, -141.842, -0.469296, 2.21 ) }
    dend_21 { pt3dadd( 21.1927, -142.513, -0.486136, 2.73 ) }
    dend_21 { pt3dadd( 21.2923, -142.842, -0.500883, 2.73 ) }
    dend_21 { pt3dadd( 21.7357, -144.326, -0.562269, 0.22 ) }
    dend_21 { pt3dadd( 22.0054, -145.253, -0.596507, 0.22 ) }
    dend_21 { pt3dadd( 22.3723, -146.571, -0.641051, 0.22 ) }
    dend_21 { pt3dadd( 22.7088, -147.844, -0.673584, 0.22 ) }
    dend_21 { pt3dadd( 22.7211, -147.897, -0.672467, 0.22 ) }
    dend_21 { pt3dadd( 22.8357, -148.504, -0.62645, 0.22 ) }
    dend_21 { pt3dadd( 22.8667, -148.751, -0.589297, 1.03 ) }
    dend_21 { pt3dadd( 22.8958, -149.376, -0.471772, 1.47 ) }
    dend_21 { pt3dadd( 22.888, -149.647, -0.412344, 1.47 ) }
    dend_21 { pt3dadd( 22.8208, -150.697, -0.174105, 0.15 ) }
    dend_21 { pt3dadd( 22.7507, -151.581, 0.00966406, 0.15 ) }
    dend_21 { pt3dadd( 22.6961, -152.081, 0.113338, 0.15 ) }
    dend_21 { pt3dadd( 22.6659, -152.383, 0.17311, 0.74 ) }
    dend_21 { pt3dadd( 22.6398, -152.824, 0.245604, 0.74 ) }
    dend_21 { pt3dadd( 22.6471, -153.229, 0.299345, 0.88 ) }
    dend_21 { pt3dadd( 22.6711, -153.583, 0.351138, 0.88 ) }
    dend_21 { pt3dadd( 22.7434, -154.261, 0.472965, 0.15 ) }
    dend_21 { pt3dadd( 22.8762, -155.207, 0.657304, 0.15 ) }
    dend_21 { pt3dadd( 23.1136, -156.563, 0.931297, 0.15 ) }
    dend_21 { pt3dadd( 23.4449, -158.146, 1.26204, 0.15 ) }
    dend_21 { pt3dadd( 23.6289, -158.893, 1.43628, 0.88 ) }
    dend_21 { pt3dadd( 23.7785, -159.438, 1.57213, 1.18 ) }
    dend_21 { pt3dadd( 23.9229, -159.908, 1.69042, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 24.0288, -160.263, 1.77966, 1.47 ) }
    dend_21 { pt3dadd( 24.1444, -160.665, 1.87601, 1.18 ) }
    dend_21 { pt3dadd( 24.3166, -161.37, 2.00542, 0.44 ) }
    dend_21 { pt3dadd( 24.4212, -161.858, 2.07088, 0.22 ) }
    dend_21 { pt3dadd( 24.5819, -162.756, 2.17808, 0.22 ) }
    dend_21 { pt3dadd( 24.7947, -164.14, 2.36201, 0.22 ) }
    dend_21 { pt3dadd( 24.8056, -164.215, 2.37222, 0.22 ) }
    dend_21 { pt3dadd( 24.9636, -165.271, 2.53339, 0.22 ) }
    dend_21 { pt3dadd( 25.0094, -165.562, 2.57842, 0.52 ) }
    dend_21 { pt3dadd( 25.1223, -166.18, 2.68196, 0.52 ) }
    dend_21 { pt3dadd( 25.2744, -166.937, 2.81809, 1.25 ) }
    dend_21 { pt3dadd( 25.3993, -167.472, 2.91493, 1.84 ) }
    dend_21 { pt3dadd( 25.5769, -168.183, 3.02463, 2.21 ) }
    dend_21 { pt3dadd( 25.7228, -168.672, 3.08324, 1.99 ) }
    dend_21 { pt3dadd( 26.004, -169.544, 3.16211, 0.52 ) }
    dend_21 { pt3dadd( 26.1659, -170.031, 3.19375, 0.52 ) }
    dend_21 { pt3dadd( 26.3487, -170.567, 3.20521, 0.22 ) }
    dend_21 { pt3dadd( 26.6546, -171.466, 3.20891, 0.22 ) }
    dend_21 { pt3dadd( 27.1364, -172.85, 3.17462, 0.22 ) }
    dend_21 { pt3dadd( 27.2644, -173.196, 3.17132, 1.25 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 20/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 16.8397, -102.76, 5.9249, 0.52 ) }
    dend_20 { pt3dadd( 17.4553, -102.889, 5.88023, 0.52 ) }
    dend_20 { pt3dadd( 18.4846, -103.076, 5.80962, 0.52 ) }
    dend_20 { pt3dadd( 19.9025, -103.317, 5.71182, 0.52 ) }
    dend_20 { pt3dadd( 20.9024, -103.497, 5.63057, 0.74 ) }
    dend_20 { pt3dadd( 21.8951, -103.681, 5.54466, 0.74 ) }
    dend_20 { pt3dadd( 23.1072, -103.918, 5.47057, 0.44 ) }
    dend_20 { pt3dadd( 24.0401, -104.105, 5.4324, 0.44 ) }
    dend_20 { pt3dadd( 24.1125, -104.123, 5.43039, 0.44 ) }
    dend_20 { pt3dadd( 24.7726, -104.352, 5.40052, 0.37 ) }
    dend_20 { pt3dadd( 24.8413, -104.38, 5.40177, 0.37 ) }
    dend_20 { pt3dadd( 25.7891, -104.853, 5.39073, 0.59 ) }
    dend_20 { pt3dadd( 26.4371, -105.266, 5.32571, 0.88 ) }
    dend_20 { pt3dadd( 26.7129, -105.472, 5.29435, 1.11 ) }
    dend_20 { pt3dadd( 27.1805, -105.853, 5.22758, 1.25 ) }
    dend_20 { pt3dadd( 27.2356, -105.901, 5.2173, 1.25 ) }
    dend_20 { pt3dadd( 27.6885, -106.323, 5.10822, 1.25 ) }
    dend_20 { pt3dadd( 28.1938, -106.797, 4.95057, 0.88 ) }
    dend_20 { pt3dadd( 28.771, -107.29, 4.82756, 0.59 ) }
    dend_20 { pt3dadd( 29.2098, -107.636, 4.78886, 0.52 ) }
    dend_20 { pt3dadd( 29.882, -108.137, 4.77917, 0.29 ) }
    dend_20 { pt3dadd( 30.5534, -108.628, 4.79783, 0.29 ) }
    dend_20 { pt3dadd( 31.9046, -109.604, 4.88956, 0.29 ) }
    dend_20 { pt3dadd( 32.9899, -110.353, 5.04907, 1.11 ) }
    dend_20 { pt3dadd( 33.9054, -110.982, 5.22961, 1.47 ) }
    dend_20 { pt3dadd( 34.3987, -111.322, 5.3348, 1.84 ) }
    dend_20 { pt3dadd( 35.102, -111.806, 5.52832, 1.99 ) }
    dend_20 { pt3dadd( 35.8665, -112.335, 5.75943, 1.47 ) }
    dend_20 { pt3dadd( 37.0771, -113.201, 6.1429, 0.88 ) }
    dend_20 { pt3dadd( 37.7007, -113.641, 6.29423, 0.88 ) }
    dend_20 { pt3dadd( 38.529, -114.2, 6.46164, 0.88 ) }
    dend_20 { pt3dadd( 39.7655, -114.909, 6.74425, 0.29 ) }
    dend_20 { pt3dadd( 40.3503, -115.188, 6.88306, 0.29 ) }
    dend_20 { pt3dadd( 40.4276, -115.217, 6.90419, 0.29 ) }
    dend_20 { pt3dadd( 41.2281, -115.456, 7.11714, 0.29 ) }
    dend_20 { pt3dadd( 41.2978, -115.473, 7.13727, 0.29 ) }
    dend_20 { pt3dadd( 42.7715, -115.825, 7.55311, 0.29 ) }
    dend_20 { pt3dadd( 42.9228, -115.865, 7.58441, 0.29 ) }
    dend_20 { pt3dadd( 44.2027, -116.269, 7.85955, 0.44 ) }
    dend_20 { pt3dadd( 44.8918, -116.51, 7.98568, 1.03 ) }
    dend_20 { pt3dadd( 45.4625, -116.746, 8.07126, 1.33 ) }
    dend_20 { pt3dadd( 46.0205, -117.009, 8.118, 1.33 ) }
    dend_20 { pt3dadd( 46.7747, -117.428, 8.11068, 0.88 ) }
    dend_20 { pt3dadd( 47.6885, -117.98, 8.05465, 0.29 ) }
    dend_20 { pt3dadd( 48.3354, -118.418, 7.96208, 0.22 ) }
    dend_20 { pt3dadd( 48.8255, -118.792, 7.89441, 0.22 ) }
    dend_20 { pt3dadd( 49.1597, -119.075, 7.84706, 0.44 ) }
    dend_20 { pt3dadd( 49.4339, -119.34, 7.80196, 0.66 ) }
    dend_20 { pt3dadd( 49.7688, -119.696, 7.72628, 0.66 ) }
    dend_20 { pt3dadd( 50.107, -120.08, 7.61864, 0.66 ) }
    dend_20 { pt3dadd( 50.6273, -120.653, 7.452, 0.29 ) }
    dend_20 { pt3dadd( 50.6901, -120.709, 7.44472, 0.29 ) }
    dend_20 { pt3dadd( 51.1654, -121.085, 7.47932, 0.22 ) }
    dend_20 { pt3dadd( 51.8698, -121.603, 7.61242, 0.22 ) }
    dend_20 { pt3dadd( 51.9886, -121.686, 7.64361, 0.22 ) }
    dend_20 { pt3dadd( 52.8065, -122.243, 7.88593, 0.22 ) }
    dend_20 { pt3dadd( 54.2507, -123.266, 8.30893, 1.18 ) }
    dend_20 { pt3dadd( 54.9622, -123.799, 8.51687, 1.62 ) }
    dend_20 { pt3dadd( 55.1432, -123.94, 8.57776, 1.84 ) }
    dend_20 { pt3dadd( 55.5144, -124.25, 8.71733, 1.84 ) }
    dend_20 { pt3dadd( 56.076, -124.732, 8.89568, 1.55 ) }
    dend_20 { pt3dadd( 56.8325, -125.416, 9.0853, 0.44 ) }
    dend_20 { pt3dadd( 56.8869, -125.466, 9.09216, 0.44 ) }
    dend_20 { pt3dadd( 57.6993, -126.173, 9.19809, 0.44 ) }
    dend_20 { pt3dadd( 57.7543, -126.222, 9.20319, 0.44 ) }
    dend_20 { pt3dadd( 58.9926, -127.369, 9.28339, 0.29 ) }
    dend_20 { pt3dadd( 60.1178, -128.443, 9.31448, 0.29 ) }
    dend_20 { pt3dadd( 60.9169, -129.239, 9.29619, 0.22 ) }
    dend_20 { pt3dadd( 61.0106, -129.338, 9.28795, 0.22 ) }
    dend_20 { pt3dadd( 61.8279, -130.301, 9.13176, 0.22 ) }
    dend_20 { pt3dadd( 62.1303, -130.713, 9.05657, 0.66 ) }
    dend_20 { pt3dadd( 62.3883, -131.132, 8.97082, 0.96 ) }
    dend_20 { pt3dadd( 62.595, -131.514, 8.89008, 0.52 ) }
    dend_20 { pt3dadd( 62.782, -131.887, 8.82794, 0.29 ) }
    dend_20 { pt3dadd( 63.2003, -132.707, 8.77321, 0.29 ) }
    dend_20 { pt3dadd( 63.6793, -133.686, 8.80037, 0.29 ) }
    dend_20 { pt3dadd( 63.8381, -134.047, 8.81941, 0.59 ) }
    dend_20 { pt3dadd( 64.0912, -134.717, 8.86667, 0.59 ) }
    dend_20 { pt3dadd( 64.293, -135.305, 8.91414, 0.59 ) }
    dend_20 { pt3dadd( 64.7281, -136.788, 9.05019, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 65.0984, -138.301, 9.21068, 0.15 ) }
    dend_20 { pt3dadd( 65.3229, -139.42, 9.3379, 0.15 ) }
    dend_20 { pt3dadd( 65.4898, -140.538, 9.46632, 0.15 ) }
    dend_20 { pt3dadd( 65.4949, -140.62, 9.47698, 0.15 ) }
    dend_20 { pt3dadd( 65.4165, -141.424, 9.59601, 0.15 ) }
    dend_20 { pt3dadd( 65.3694, -141.585, 9.63842, 0.44 ) }
    dend_20 { pt3dadd( 65.3437, -141.649, 9.66268, 0.44 ) }
    dend_20 { pt3dadd( 65.285, -141.782, 9.72125, 0.44 ) }
    dend_20 { pt3dadd( 64.835, -142.801, 10.1948, 0.22 ) }
    dend_20 { pt3dadd( 64.1843, -144.512, 10.8626, 0.22 ) }
    dend_20 { pt3dadd( 63.6328, -146.578, 11.4717, 0.22 ) }
    dend_20 { pt3dadd( 63.6263, -146.649, 11.4844, 0.22 ) }
    dend_20 { pt3dadd( 63.6344, -147.032, 11.5244, 1.03 ) }
    dend_20 { pt3dadd( 63.7169, -147.472, 11.5197, 1.33 ) }
    dend_20 { pt3dadd( 64.4525, -149.285, 11.2562, 0.22 ) }
    dend_20 { pt3dadd( 65.3957, -150.951, 10.8369, 0.22 ) }
    dend_20 { pt3dadd( 66.7534, -152.965, 10.1667, 0.22 ) }
    dend_20 { pt3dadd( 66.7943, -153.023, 10.1468, 0.22 ) }
    dend_20 { pt3dadd( 68.0391, -154.65, 9.55278, 0.22 ) }
    dend_20 { pt3dadd( 69.2607, -156.077, 8.9926, 0.22 ) }
    dend_20 { pt3dadd( 69.312, -156.125, 8.97112, 0.22 ) }
    dend_20 { pt3dadd( 69.805, -156.522, 8.75367, 1.47 ) }
    dend_20 { pt3dadd( 77.1107, -164.065, 7.96834, 1.47 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -15.3806, -30.0996, 32.4071, 0.22 ) }
    dend_18 { pt3dadd( -15.7582, -30.715, 32.212, 0.22 ) }
    dend_18 { pt3dadd( -16.2478, -31.6138, 31.9831, 0.22 ) }
    dend_18 { pt3dadd( -16.3188, -31.7443, 31.9498, 0.22 ) }
    dend_18 { pt3dadd( -16.6162, -32.2904, 31.8107, 0.22 ) }
    dend_18 { pt3dadd( -16.6497, -32.3517, 31.7951, 0.22 ) }
    dend_18 { pt3dadd( -16.7609, -32.556, 31.7431, 0.44 ) }
    dend_18 { pt3dadd( -16.9917, -33.0931, 31.6273, 0.44 ) }
    dend_18 { pt3dadd( -22.1757, -40.3464, 30.6275, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 32/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -15.3806, -30.0996, 32.4071, 0.29 ) }
    dend_17 { pt3dadd( -14.9129, -29.5958, 32.453, 0.29 ) }
    dend_17 { pt3dadd( -14.1308, -28.7533, 32.5299, 0.29 ) }
    dend_17 { pt3dadd( -14.0665, -28.6841, 32.5362, 0.29 ) }
    dend_17 { pt3dadd( -13.3791, -27.9436, 32.6037, 0.29 ) }
    dend_17 { pt3dadd( -13.1378, -27.6835, 32.6274, 0.66 ) }
    dend_17 { pt3dadd( -12.7049, -27.2173, 32.67, 0.66 ) }
    dend_17 { pt3dadd( -5.82328, -20.7691, 34.345, 0.66 ) }
    dend_17 { pt3dadd( 0.581634, -13.71, 35.0149, 0.66 ) }
    dend_17 { pt3dadd( 5.90678, -5.87715, 34.0685, 0.66 ) }
    dend_17 { pt3dadd( 12.5718, 0.976105, 34.2729, 0.66 ) }
    dend_17 { pt3dadd( 17.5722, 8.87369, 32.5098, 0.66 ) }
    dend_17 { pt3dadd( 23.3016, 15.9898, 29.7547, 0.66 ) }
    dend_17 { pt3dadd( 29.1877, 23.2853, 27.9864, 0.66 ) }
    dend_17 { pt3dadd( 35.6046, 30.352, 27.6142, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -5.03191, -22.4164, 0.910671, 1.18 ) }
    dend_13 { pt3dadd( -4.30631, -23.418, 1.11079, 1.18 ) }
    dend_13 { pt3dadd( -3.4433, -24.6432, 1.37219, 0.66 ) }
    dend_13 { pt3dadd( -2.90338, -25.4289, 1.53775, 0.66 ) }
    dend_13 { pt3dadd( -2.63102, -25.8328, 1.62182, 0.81 ) }
    dend_13 { pt3dadd( -2.10225, -26.6286, 1.78122, 0.74 ) }
    dend_13 { pt3dadd( -1.26723, -27.9024, 2.02881, 0.74 ) }
    dend_13 { pt3dadd( -1.23097, -27.9609, 2.04293, 0.74 ) }
    dend_13 { pt3dadd( -0.976833, -28.3584, 2.15673, 0.96 ) }
    dend_13 { pt3dadd( -0.932831, -28.4236, 2.17349, 0.96 ) }
    dend_13 { pt3dadd( -0.68359, -28.7593, 2.24635, 0.96 ) }
    dend_13 { pt3dadd( -0.634411, -28.8219, 2.25835, 0.96 ) }
    dend_13 { pt3dadd( 0.332736, -30.0051, 2.47273, 0.74 ) }
    dend_13 { pt3dadd( 0.369384, -30.0524, 2.48066, 0.74 ) }
    dend_13 { pt3dadd( 0.925608, -30.7905, 2.59908, 0.74 ) }
    dend_13 { pt3dadd( 1.82985, -32.0739, 2.81009, 0.88 ) }
    dend_13 { pt3dadd( 2.03971, -32.4024, 2.85783, 0.88 ) }
    dend_13 { pt3dadd( 2.06885, -32.4547, 2.86381, 0.88 ) }
    dend_13 { pt3dadd( 2.44004, -33.2544, 2.92076, 0.66 ) }
    dend_13 { pt3dadd( 2.46574, -33.3194, 2.92491, 0.66 ) }
    dend_13 { pt3dadd( 2.86033, -34.5334, 3.01191, 0.52 ) }
    dend_13 { pt3dadd( 3.14517, -35.6124, 3.07717, 0.52 ) }
    dend_13 { pt3dadd( 3.29845, -36.2421, 3.1005, 0.88 ) }
    dend_13 { pt3dadd( 3.44915, -36.9193, 3.11727, 1.11 ) }
    dend_13 { pt3dadd( 3.67525, -38.0019, 3.17303, 1.11 ) }
    dend_13 { pt3dadd( 3.80677, -38.687, 3.21857, 0.52 ) }
    dend_13 { pt3dadd( 4.04753, -40.1984, 3.30305, 0.52 ) }
    dend_13 { pt3dadd( 4.206, -41.305, 3.32757, 0.52 ) }
    dend_13 { pt3dadd( 4.30598, -42.0257, 3.32254, 0.88 ) }
    dend_13 { pt3dadd( 4.44335, -43.0238, 3.30909, 1.03 ) }
    dend_13 { pt3dadd( 4.69162, -44.7214, 3.26465, 0.81 ) }
    dend_13 { pt3dadd( 4.99254, -46.3998, 3.27513, 0.66 ) }
    dend_13 { pt3dadd( 5.29007, -47.8849, 3.32201, 0.52 ) }
    dend_13 { pt3dadd( 5.52389, -48.9561, 3.37046, 0.52 ) }
    dend_13 { pt3dadd( 6.17524, -51.5144, 3.62614, 0.52 ) }
    dend_13 { pt3dadd( 6.3255, -52.0417, 3.70096, 0.52 ) }
    dend_13 { pt3dadd( 7.08801, -54.3906, 4.20371, 0.44 ) }
    dend_13 { pt3dadd( 7.60099, -55.788, 4.61082, 1.62 ) }
    dend_13 { pt3dadd( 7.85783, -56.43, 4.83369, 1.99 ) }
    dend_13 { pt3dadd( 8.62836, -58.3002, 5.46043, 1.25 ) }
    dend_13 { pt3dadd( 8.79446, -58.7192, 5.57674, 0.29 ) }
    dend_13 { pt3dadd( 9.09638, -59.5663, 5.75715, 0.29 ) }
    dend_13 { pt3dadd( 9.11932, -59.6423, 5.76573, 0.29 ) }
    dend_13 { pt3dadd( 9.48237, -60.9612, 5.85382, 0.29 ) }
    dend_13 { pt3dadd( 9.92815, -62.895, 5.97394, 0.29 ) }
    dend_13 { pt3dadd( 10.2353, -64.6349, 6.18447, 0.29 ) }
    dend_13 { pt3dadd( 10.2601, -64.7973, 6.21581, 1.47 ) }
    dend_13 { pt3dadd( 10.3965, -65.7875, 6.45731, 1.92 ) }
    dend_13 { pt3dadd( 10.4346, -66.072, 6.53717, 1.92 ) }
    dend_13 { pt3dadd( 10.6426, -67.6274, 7.07759, 0.37 ) }
    dend_13 { pt3dadd( 11.2576, -71.1795, 8.47933, 0.29 ) }
    dend_13 { pt3dadd( 11.3939, -71.8447, 8.75844, 1.4 ) }
    dend_13 { pt3dadd( 11.4766, -72.2024, 8.91685, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 11.6151, -72.7247, 9.14842, 1.62 ) }
    dend_13 { pt3dadd( 12.003, -73.9885, 9.7034, 0.29 ) }
    dend_13 { pt3dadd( 12.3888, -74.9991, 10.1051, 0.29 ) }
    dend_13 { pt3dadd( 12.4213, -75.0674, 10.132, 0.29 ) }
    dend_13 { pt3dadd( 13.1206, -76.4879, 10.8078, 0.29 ) }
    dend_13 { pt3dadd( 13.5992, -77.4716, 11.2769, 0.29 ) }
    dend_13 { pt3dadd( 14.0489, -78.4239, 11.7199, 1.47 ) }
    dend_13 { pt3dadd( 14.3881, -79.1695, 12.0468, 1.77 ) }
    dend_13 { pt3dadd( 14.5772, -79.6148, 12.2315, 1.77 ) }
    dend_13 { pt3dadd( 15.244, -81.2105, 12.8191, 0.22 ) }
    dend_13 { pt3dadd( 15.9608, -82.9333, 13.3539, 0.22 ) }
    dend_13 { pt3dadd( 16.181, -83.5154, 13.5254, 0.22 ) }
    dend_13 { pt3dadd( 16.2684, -83.7948, 13.5906, 0.81 ) }
    dend_13 { pt3dadd( 16.4886, -84.5666, 13.721, 1.03 ) }
    dend_13 { pt3dadd( 16.5821, -84.9223, 13.7545, 1.03 ) }
    dend_13 { pt3dadd( 16.5996, -84.9899, 13.7543, 1.03 ) }
    dend_13 { pt3dadd( 16.6902, -85.3445, 13.7534, 0.15 ) }
    dend_13 { pt3dadd( 17.0427, -86.6456, 13.7418, 0.15 ) }
    dend_13 { pt3dadd( 17.6067, -88.5227, 13.7646, 0.15 ) }
    dend_13 { pt3dadd( 17.7692, -89.0279, 13.7798, 1.25 ) }
    dend_13 { pt3dadd( 17.9925, -89.7199, 13.8005, 1.62 ) }
    dend_13 { pt3dadd( 18.0386, -89.8624, 13.8047, 1.62 ) }
    dend_13 { pt3dadd( 18.0846, -90.0049, 13.8089, 1.62 ) }
    dend_13 { pt3dadd( 18.4067, -91.0501, 13.8361, 0.22 ) }
    dend_13 { pt3dadd( 18.7433, -92.2853, 13.9077, 0.22 ) }
    dend_13 { pt3dadd( 19.3714, -94.6747, 14.0785, 0.22 ) }
    dend_13 { pt3dadd( 19.3878, -94.7423, 14.0838, 0.22 ) }
    dend_13 { pt3dadd( 19.4725, -95.0973, 14.1117, 0.74 ) }
    dend_13 { pt3dadd( 19.6565, -95.8962, 14.1699, 0.74 ) }
    dend_13 { pt3dadd( 19.92, -97.1638, 14.2436, 0.15 ) }
    dend_13 { pt3dadd( 19.9344, -97.2319, 14.2482, 0.15 ) }
    dend_13 { pt3dadd( 20.0711, -97.768, 14.2818, 0.44 ) }
    dend_13 { pt3dadd( 20.1945, -98.1968, 14.2969, 0.44 ) }
    dend_13 { pt3dadd( 20.354, -98.7031, 14.3057, 0.15 ) }
    dend_13 { pt3dadd( 20.5691, -99.3301, 14.2928, 0.15 ) }
    dend_13 { pt3dadd( 20.7417, -99.7935, 14.2471, 1.18 ) }
    dend_13 { pt3dadd( 21.0524, -100.618, 14.1639, 1.62 ) }
    dend_13 { pt3dadd( 21.1328, -100.822, 14.1419, 1.62 ) }
    dend_13 { pt3dadd( 25.4432, -109.855, 14.083, 1.62 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 39/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -5.03191, -22.4164, 0.910671, 1.77 ) }
    dend_6 { pt3dadd( -5.47987, -23.3923, 0.644198, 1.77 ) }
    dend_6 { pt3dadd( -5.98451, -24.5782, 0.314287, 1.77 ) }
    dend_6 { pt3dadd( -6.51379, -25.879, -0.0319954, 1.69 ) }
    dend_6 { pt3dadd( -7.10001, -27.3753, -0.403223, 1.55 ) }
    dend_6 { pt3dadd( -7.71764, -29.0276, -0.788417, 1.55 ) }
    dend_6 { pt3dadd( -8.32735, -30.7082, -1.16261, 1.33 ) }
    dend_6 { pt3dadd( -8.69351, -31.8047, -1.39619, 1.47 ) }
    dend_6 { pt3dadd( -9.03831, -32.8954, -1.61205, 2.06 ) }
    dend_6 { pt3dadd( -9.36769, -34.0259, -1.81699, 2.36 ) }
    dend_6 { pt3dadd( -9.53126, -34.6396, -1.92176, 2.28 ) }
    dend_6 { pt3dadd( -9.60184, -34.9149, -1.95146, 2.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 51/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -24.9902, 12.5642, 1.65028, 1.03 ) }
    dend_4 { pt3dadd( -25.0401, 12.6205, 1.67638, 1.03 ) }
    dend_4 { pt3dadd( -25.9037, 13.5615, 2.07951, 0.88 ) }
    dend_4 { pt3dadd( -26.7229, 14.424, 2.41597, 0.88 ) }
    dend_4 { pt3dadd( -27.5285, 15.2494, 2.7221, 0.88 ) }
    dend_4 { pt3dadd( -29.1642, 16.8608, 3.27528, 0.88 ) }
    dend_4 { pt3dadd( -30.1097, 17.7765, 3.56448, 0.96 ) }
    dend_4 { pt3dadd( -30.8063, 18.4281, 3.74462, 0.66 ) }
    dend_4 { pt3dadd( -31.4858, 19.0268, 3.90525, 0.59 ) }
    dend_4 { pt3dadd( -31.6255, 19.1468, 3.93719, 0.59 ) }
    dend_4 { pt3dadd( -32.6084, 20.0061, 4.12908, 0.59 ) }
    dend_4 { pt3dadd( -33.1722, 20.5426, 4.22347, 0.59 ) }
    dend_4 { pt3dadd( -33.6723, 21.121, 4.33188, 0.88 ) }
    dend_4 { pt3dadd( -34.3484, 22.0803, 4.50163, 1.03 ) }
    dend_4 { pt3dadd( -34.8291, 22.8717, 4.6353, 1.11 ) }
    dend_4 { pt3dadd( -35.1268, 23.4507, 4.71778, 1.11 ) }
    dend_4 { pt3dadd( -35.4718, 24.2778, 4.80755, 0.66 ) }
    dend_4 { pt3dadd( -36.1516, 26.0685, 4.94501, 0.66 ) }
    dend_4 { pt3dadd( -36.453, 26.9565, 4.98052, 0.96 ) }
    dend_4 { pt3dadd( -36.478, 27.0389, 4.98087, 0.96 ) }
    dend_4 { pt3dadd( -36.8769, 28.4667, 4.98078, 0.96 ) }
    dend_4 { pt3dadd( -37.3118, 30.0954, 4.97425, 0.96 ) }
    dend_4 { pt3dadd( -37.495, 30.8479, 4.96763, 0.74 ) }
    dend_4 { pt3dadd( -37.8975, 32.6351, 4.95188, 0.52 ) }
    dend_4 { pt3dadd( -38.0716, 33.515, 4.94411, 0.52 ) }
    dend_4 { pt3dadd( -38.4544, 35.8594, 4.92338, 0.52 ) }
    dend_4 { pt3dadd( -38.4667, 35.9569, 4.92252, 0.52 ) }
    dend_4 { pt3dadd( -38.5624, 37.1225, 4.91216, 0.52 ) }
    dend_4 { pt3dadd( -38.5843, 37.7541, 4.90826, 1.11 ) }
    dend_4 { pt3dadd( -38.5674, 38.6543, 4.90883, 1.47 ) }
    dend_4 { pt3dadd( -38.5086, 39.5674, 4.91581, 1.33 ) }
    dend_4 { pt3dadd( -38.4977, 39.665, 4.91724, 1.33 ) }
    dend_4 { pt3dadd( -38.4145, 40.4587, 4.93053, 1.33 ) }
    dend_4 { pt3dadd( -38.3355, 41.2027, 4.94525, 0.88 ) }
    dend_4 { pt3dadd( -38.2668, 41.8753, 4.95881, 0.88 ) }
    dend_4 { pt3dadd( -38.182, 42.871, 4.97753, 0.52 ) }
    dend_4 { pt3dadd( -38.1199, 43.7704, 4.99246, 0.52 ) }
    dend_4 { pt3dadd( -38.0715, 44.6693, 5.00709, 0.96 ) }
    dend_4 { pt3dadd( -38.0687, 44.7552, 5.00863, 0.96 ) }
    dend_4 { pt3dadd( -38.0616, 45.5654, 5.01789, 1.11 ) }
    dend_4 { pt3dadd( -38.07, 46.3632, 5.02787, 1.11 ) }
    dend_4 { pt3dadd( -38.0696, 46.4614, 5.02982, 1.11 ) }
    dend_4 { pt3dadd( -38.0563, 46.9173, 5.04096, 0.81 ) }
    dend_4 { pt3dadd( -38.0295, 47.4617, 5.0545, 0.66 ) }
    dend_4 { pt3dadd( -37.9854, 48.2786, 5.07187, 0.66 ) }
    dend_4 { pt3dadd( -37.98, 48.352, 5.073, 0.66 ) }
    dend_4 { pt3dadd( -37.9132, 49.0846, 5.07651, 0.88 ) }
    dend_4 { pt3dadd( -37.8966, 49.8087, 5.07212, 0.88 ) }
    dend_4 { pt3dadd( -37.921, 50.5255, 5.06534, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( -37.9767, 51.3338, 5.05713, 0.44 ) }
    dend_4 { pt3dadd( -38.0969, 52.6062, 5.04627, 0.22 ) }
    dend_4 { pt3dadd( -38.1414, 52.9803, 5.04252, 0.22 ) }
    dend_4 { pt3dadd( -38.5024, 55.4585, 5.02013, 0.22 ) }
    dend_4 { pt3dadd( -38.6228, 56.1791, 5.01444, 0.22 ) }
    dend_4 { pt3dadd( -38.8239, 57.246, 5.00736, 0.22 ) }
    dend_4 { pt3dadd( -38.9043, 57.5933, 5.00557, 0.59 ) }
    dend_4 { pt3dadd( -38.9525, 57.7713, 5.005, 0.59 ) }
    dend_4 { pt3dadd( -39.1376, 58.4601, 5.00401, 0.74 ) }
    dend_4 { pt3dadd( -39.3732, 59.4431, 4.94194, 1.25 ) }
    dend_4 { pt3dadd( -39.6005, 60.4101, 4.84095, 1.99 ) }
    dend_4 { pt3dadd( -39.851, 61.4607, 4.70472, 2.43 ) }
    dend_4 { pt3dadd( -39.9439, 61.9128, 4.64536, 2.43 ) }
    dend_4 { pt3dadd( -40.1268, 62.9585, 4.51873, 2.28 ) }
    dend_4 { pt3dadd( -40.4108, 64.6415, 4.32544, 0.74 ) }
    dend_4 { pt3dadd( -40.4264, 64.7381, 4.31636, 0.74 ) }
    dend_4 { pt3dadd( -40.6023, 65.9013, 4.22953, 0.66 ) }
    dend_4 { pt3dadd( -40.9017, 68.1155, 4.10969, 0.66 ) }
    dend_4 { pt3dadd( -41.1907, 70.1752, 4.03945, 0.66 ) }
    dend_4 { pt3dadd( -41.31, 70.9738, 4.03311, 0.66 ) }
    dend_4 { pt3dadd( -41.5016, 72.2163, 4.11691, 0.66 ) }
    dend_4 { pt3dadd( -41.6329, 73.0047, 4.19831, 1.11 ) }
    dend_4 { pt3dadd( -41.8393, 74.1445, 4.34545, 1.11 ) }
    dend_4 { pt3dadd( -41.8581, 74.2401, 4.35901, 1.11 ) }
    dend_4 { pt3dadd( -42.0271, 75.1285, 4.49039, 0.96 ) }
    dend_4 { pt3dadd( -42.2945, 76.6239, 4.68922, 0.22 ) }
    dend_4 { pt3dadd( -43.1376, 81.2718, 5.24116, 0.15 ) }
    dend_4 { pt3dadd( -43.3075, 82.1879, 5.34069, 2.06 ) }
    dend_4 { pt3dadd( -43.6285, 83.8978, 5.50641, 2.73 ) }
    dend_4 { pt3dadd( -43.8948, 85.3389, 5.62327, 0.22 ) }
    dend_4 { pt3dadd( -44.3807, 88.0054, 5.77236, 0.22 ) }
    dend_4 { pt3dadd( -44.5324, 88.883, 5.7824, 0.66 ) }
    dend_4 { pt3dadd( -44.6769, 89.787, 5.78826, 1.03 ) }
    dend_4 { pt3dadd( -44.7708, 90.4122, 5.78032, 0.88 ) }
    dend_4 { pt3dadd( -44.8603, 91.0378, 5.75935, 0.52 ) }
    dend_4 { pt3dadd( -44.9137, 91.4239, 5.73792, 0.15 ) }
    dend_4 { pt3dadd( -45.1498, 93.3855, 5.61245, 0.15 ) }
    dend_4 { pt3dadd( -45.3392, 95.1161, 5.51201, 0.15 ) }
    dend_4 { pt3dadd( -45.4781, 96.2332, 5.46148, 1.33 ) }
    dend_4 { pt3dadd( -45.6127, 97.2114, 5.45585, 2.21 ) }
    dend_4 { pt3dadd( -45.7182, 97.9281, 5.47657, 2.21 ) }
    dend_4 { pt3dadd( -45.8155, 98.5453, 5.52271, 2.21 ) }
    dend_4 { pt3dadd( -46.0336, 99.8108, 5.6675, 0.15 ) }
    dend_4 { pt3dadd( -46.647, 102.94, 6.1833, 0.15 ) }
    dend_4 { pt3dadd( -46.906, 104.136, 6.42972, 0.15 ) }
    dend_4 { pt3dadd( -47.1362, 105.087, 6.64759, 1.69 ) }
    dend_4 { pt3dadd( -47.3914, 106.106, 6.86947, 2.06 ) }
    dend_4 { pt3dadd( -47.624, 106.99, 7.08148, 2.06 ) }
    dend_4 { pt3dadd( -47.8783, 107.962, 7.32622, 1.69 ) }
    dend_4 { pt3dadd( -47.8995, 108.043, 7.3466, 1.69 ) }
    dend_4 { pt3dadd( -48.1573, 109.08, 7.56559, 0.15 ) }
    dend_4 { pt3dadd( -48.8961, 112.389, 8.14418, 0.15 ) }
    dend_4 { pt3dadd( -49.1254, 113.545, 8.29045, 0.81 ) }
    dend_4 { pt3dadd( -49.2512, 114.249, 8.36183, 1.18 ) }
    dend_4 { pt3dadd( -49.3984, 115.171, 8.43132, 0.88 ) }
    dend_4 { pt3dadd( -49.5073, 115.891, 8.47776, 0.15 ) }
    dend_4 { pt3dadd( -49.8147, 118.218, 8.59277, 0.15 ) }
    dend_4 { pt3dadd( -50.0372, 120.866, 8.64376, 0.15 ) }
    dend_4 { pt3dadd( -50.0613, 121.316, 8.63976, 0.81 ) }
    dend_4 { pt3dadd( -50.0791, 121.942, 8.63286, 0.96 ) }
    dend_4 { pt3dadd( -50.0774, 122.32, 8.62799, 0.96 ) }
    dend_4 { pt3dadd( -50.0504, 123.122, 8.61618, 0.22 ) }
    dend_4 { pt3dadd( -49.7602, 126.567, 8.55726, 0.22 ) }
    dend_4 { pt3dadd( -49.7477, 126.665, 8.55542, 0.22 ) }
    dend_4 { pt3dadd( -49.6513, 127.409, 8.53106, 0.96 ) }
    dend_4 { pt3dadd( -49.5932, 127.856, 8.51258, 1.25 ) }
    dend_4 { pt3dadd( -49.5345, 128.306, 8.49131, 1.25 ) }
    dend_4 { pt3dadd( -49.4422, 129.011, 8.45137, 0.81 ) }
    dend_4 { pt3dadd( -49.2962, 130.0, 8.42423, 0.15 ) }
    dend_4 { pt3dadd( -48.8283, 132.776, 8.43909, 0.15 ) }
    dend_4 { pt3dadd( -48.6417, 133.673, 8.43621, 1.99 ) }
    dend_4 { pt3dadd( -48.4398, 134.515, 8.42738, 2.95 ) }
    dend_4 { pt3dadd( -48.4177, 134.598, 8.42611, 2.95 ) }
    dend_4 { pt3dadd( -48.0536, 135.807, 8.33663, 2.95 ) }
    dend_4 { pt3dadd( -47.5983, 137.277, 8.14711, 0.22 ) }
    dend_4 { pt3dadd( -46.9595, 139.418, 7.78843, 0.22 ) }
    dend_4 { pt3dadd( -46.7548, 140.198, 7.6386, 1.25 ) }
    dend_4 { pt3dadd( -46.5894, 140.894, 7.47797, 1.69 ) }
    dend_4 { pt3dadd( -46.226, 142.552, 7.04284, 0.15 ) }
    dend_4 { pt3dadd( -45.7574, 144.936, 6.33666, 0.15 ) }
    dend_4 { pt3dadd( -45.4836, 146.477, 5.88766, 0.15 ) }
    dend_4 { pt3dadd( -45.2629, 148.077, 5.68475, 2.14 ) }
    dend_4 { pt3dadd( -45.1725, 148.788, 5.70571, 2.14 ) }
    dend_4 { pt3dadd( -45.1565, 148.924, 5.73321, 2.14 ) }
    dend_4 { pt3dadd( -45.0192, 150.215, 6.26121, 0.15 ) }
    dend_4 { pt3dadd( -44.9516, 150.839, 6.63263, 0.15 ) }
    dend_4 { pt3dadd( -44.5648, 154.378, 9.0632, 0.15 ) }
    dend_4 { pt3dadd( -44.5087, 154.945, 9.44729, 0.88 ) }
    dend_4 { pt3dadd( -44.4507, 155.573, 9.80133, 1.03 ) }
    dend_4 { pt3dadd( -44.4441, 155.65, 9.83973, 1.03 ) }
    dend_4 { pt3dadd( -44.3844, 156.4, 10.1505, 0.29 ) }
    dend_4 { pt3dadd( -44.2798, 157.533, 10.4724, 0.15 ) }
    dend_4 { pt3dadd( -44.1104, 159.04, 10.6203, 0.15 ) }
    dend_4 { pt3dadd( -43.8199, 160.825, 10.7645, 0.15 ) }
    dend_4 { pt3dadd( -43.6345, 161.656, 10.8212, 0.74 ) }
    dend_4 { pt3dadd( -43.4153, 162.437, 10.8664, 0.74 ) }
    dend_4 { pt3dadd( -43.2847, 162.81, 10.8845, 0.15 ) }
    dend_4 { pt3dadd( -42.5818, 164.506, 10.9304, 0.15 ) }
    dend_4 { pt3dadd( -41.0331, 166.895, 10.9562, 0.15 ) }
    dend_4 { pt3dadd( -40.0336, 168.059, 10.9525, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( -39.4436, 168.666, 10.9532, 1.77 ) }
    dend_4 { pt3dadd( -38.788, 169.279, 10.9626, 2.28 ) }
    dend_4 { pt3dadd( -38.37, 169.645, 10.9707, 2.14 ) }
    dend_4 { pt3dadd( -32.8404, 174.04, 11.124, 0.15 ) }
    dend_4 { pt3dadd( -30.2878, 175.899, 11.2239, 0.15 ) }
    dend_4 { pt3dadd( -29.6989, 176.312, 11.2488, 0.59 ) }
    dend_4 { pt3dadd( -29.6373, 176.354, 11.2517, 0.59 ) }
    dend_4 { pt3dadd( -32.189, 188.2, 13.3562, 0.59 ) }
    dend_4 { pt3dadd( -36.3191, 199.573, 15.6916, 0.59 ) }
    dend_4 { pt3dadd( -40.2126, 211.146, 17.2703, 0.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -24.9902, 12.5642, 1.65028, 0.66 ) }
    dend_1 { pt3dadd( -25.9363, 12.1603, 1.48111, 0.66 ) }
    dend_1 { pt3dadd( -26.7333, 11.8115, 1.29713, 0.66 ) }
    dend_1 { pt3dadd( -27.8567, 11.3204, 1.00953, 0.81 ) }
    dend_1 { pt3dadd( -29.1829, 10.7236, 0.630096, 1.03 ) }
    dend_1 { pt3dadd( -30.6979, 10.0334, 0.18273, 1.03 ) }
    dend_1 { pt3dadd( -31.7792, 9.53751, -0.134453, 0.88 ) }
    dend_1 { pt3dadd( -32.6139, 9.15836, -0.401739, 0.52 ) }
    dend_1 { pt3dadd( -33.203, 8.88691, -0.596199, 0.81 ) }
    dend_1 { pt3dadd( -34.0015, 8.51875, -0.851227, 1.33 ) }
    dend_1 { pt3dadd( -34.5828, 8.25634, -1.0246, 1.33 ) }
    dend_1 { pt3dadd( -35.2005, 8.00761, -1.15505, 1.11 ) }
    dend_1 { pt3dadd( -35.7694, 7.812, -1.24043, 0.88 ) }
    dend_1 { pt3dadd( -36.4962, 7.59202, -1.32055, 0.59 ) }
    dend_1 { pt3dadd( -37.8592, 7.20642, -1.50136, 0.59 ) }
    dend_1 { pt3dadd( -38.4627, 7.04254, -1.58853, 0.81 ) }
    dend_1 { pt3dadd( -39.6441, 6.70775, -1.78473, 0.81 ) }
    dend_1 { pt3dadd( -40.2338, 6.53479, -1.88515, 0.81 ) }
    dend_1 { pt3dadd( -40.856, 6.34387, -1.99112, 0.81 ) }
    dend_1 { pt3dadd( -42.0325, 5.94764, -2.20344, 0.81 ) }
    dend_1 { pt3dadd( -42.6189, 5.72088, -2.31535, 0.52 ) }
    dend_1 { pt3dadd( -43.369, 5.38381, -2.43866, 0.52 ) }
    dend_1 { pt3dadd( -44.3417, 4.87791, -2.58805, 0.52 ) }
    dend_1 { pt3dadd( -44.3881, 4.85208, -2.59373, 0.52 ) }
    dend_1 { pt3dadd( -45.034, 4.48469, -2.64655, 1.11 ) }
    dend_1 { pt3dadd( -45.5873, 4.16354, -2.65505, 1.25 ) }
    dend_1 { pt3dadd( -46.4995, 3.62653, -2.67272, 1.25 ) }
    dend_1 { pt3dadd( -47.0108, 3.29222, -2.68158, 0.74 ) }
    dend_1 { pt3dadd( -47.3725, 3.03012, -2.68469, 0.52 ) }
    dend_1 { pt3dadd( -47.4613, 2.95861, -2.68319, 0.52 ) }
    dend_1 { pt3dadd( -47.8388, 2.61441, -2.6605, 0.52 ) }
    dend_1 { pt3dadd( -47.9172, 2.53254, -2.65207, 0.52 ) }
    dend_1 { pt3dadd( -48.3378, 2.01647, -2.6014, 0.52 ) }
    dend_1 { pt3dadd( -48.3713, 1.9756, -2.59738, 0.52 ) }
    dend_1 { pt3dadd( -48.8765, 1.41812, -2.54094, 0.52 ) }
    dend_1 { pt3dadd( -48.9153, 1.38206, -2.53708, 0.52 ) }
    dend_1 { pt3dadd( -49.4081, 0.977994, -2.4947, 0.52 ) }
    dend_1 { pt3dadd( -49.8211, 0.674572, -2.46081, 0.74 ) }
    dend_1 { pt3dadd( -50.3477, 0.33024, -2.41993, 0.81 ) }
    dend_1 { pt3dadd( -50.9172, -0.036351, -2.37567, 0.81 ) }
    dend_1 { pt3dadd( -51.7613, -0.572902, -2.31004, 0.37 ) }
    dend_1 { pt3dadd( -52.4498, -1.03204, -2.22323, 1.18 ) }
    dend_1 { pt3dadd( -53.1742, -1.56005, -2.10086, 2.06 ) }
    dend_1 { pt3dadd( -53.7497, -2.01836, -1.98529, 2.58 ) }
    dend_1 { pt3dadd( -54.2621, -2.46115, -1.86966, 2.58 ) }
    dend_1 { pt3dadd( -54.6892, -2.84962, -1.767, 1.99 ) }
    dend_1 { pt3dadd( -55.5511, -3.64022, -1.5574, 0.52 ) }
    dend_1 { pt3dadd( -56.5739, -4.54759, -1.31726, 0.52 ) }
    dend_1 { pt3dadd( -57.3938, -5.24603, -1.08682, 0.52 ) }
    dend_1 { pt3dadd( -57.9405, -5.67582, -0.919304, 0.96 ) }
    dend_1 { pt3dadd( -58.6755, -6.19512, -0.678355, 1.47 ) }
    dend_1 { pt3dadd( -59.477, -6.69402, -0.414524, 1.69 ) }
    dend_1 { pt3dadd( -60.0162, -6.98822, -0.231466, 1.69 ) }
    dend_1 { pt3dadd( -61.0783, -7.49529, 0.169863, 1.69 ) }
    dend_1 { pt3dadd( -61.6631, -7.75499, 0.407824, 1.18 ) }
    dend_1 { pt3dadd( -62.2981, -8.02764, 0.682123, 0.88 ) }
    dend_1 { pt3dadd( -63.0545, -8.34785, 1.01293, 0.44 ) }
    dend_1 { pt3dadd( -64.0054, -8.75957, 1.41662, 0.44 ) }
    dend_1 { pt3dadd( -64.6867, -9.05384, 1.67145, 0.44 ) }
    dend_1 { pt3dadd( -64.7346, -9.0736, 1.68516, 0.44 ) }
    dend_1 { pt3dadd( -65.4548, -9.33944, 1.90616, 0.44 ) }
    dend_1 { pt3dadd( -66.211, -9.56525, 2.13515, 0.44 ) }
    dend_1 { pt3dadd( -66.4014, -9.61017, 2.1935, 0.88 ) }
    dend_1 { pt3dadd( -67.0066, -9.71106, 2.3502, 1.18 ) }
    dend_1 { pt3dadd( -67.5428, -9.78882, 2.49275, 1.18 ) }
    dend_1 { pt3dadd( -68.3132, -9.89763, 2.69467, 0.81 ) }
    dend_1 { pt3dadd( -68.7479, -9.9686, 2.79937, 0.52 ) }
    dend_1 { pt3dadd( -69.0961, -10.0344, 2.88208, 0.29 ) }
    dend_1 { pt3dadd( -70.4667, -10.3385, 3.19317, 0.29 ) }
    dend_1 { pt3dadd( -71.0635, -10.4991, 3.32073, 0.22 ) }
    dend_1 { pt3dadd( -71.1139, -10.515, 3.33018, 0.22 ) }
    dend_1 { pt3dadd( -72.3223, -10.9356, 3.48001, 0.22 ) }
    dend_1 { pt3dadd( -72.3988, -10.9627, 3.48755, 0.22 ) }
    dend_1 { pt3dadd( -72.7076, -11.0764, 3.50367, 0.37 ) }
    dend_1 { pt3dadd( -73.0619, -11.2123, 3.5032, 1.03 ) }
    dend_1 { pt3dadd( -73.5685, -11.3978, 3.47955, 1.4 ) }
    dend_1 { pt3dadd( -74.1136, -11.5879, 3.4292, 1.4 ) }
    dend_1 { pt3dadd( -74.7543, -11.8092, 3.34873, 1.4 ) }
    dend_1 { pt3dadd( -75.4557, -12.0801, 3.25779, 0.22 ) }
    dend_1 { pt3dadd( -76.061, -12.3341, 3.17974, 0.15 ) }
    dend_1 { pt3dadd( -76.8595, -12.6979, 3.08084, 0.15 ) }
    dend_1 { pt3dadd( -77.5321, -13.0368, 3.00675, 0.15 ) }
    dend_1 { pt3dadd( -78.0431, -13.3275, 2.96358, 0.15 ) }
    dend_1 { pt3dadd( -78.7847, -13.7928, 2.91523, 0.15 ) }
    dend_1 { pt3dadd( -79.2415, -14.0978, 2.90165, 0.29 ) }
    dend_1 { pt3dadd( -79.575, -14.3322, 2.90467, 1.03 ) }
    dend_1 { pt3dadd( -80.0772, -14.6984, 2.92792, 1.55 ) }
    dend_1 { pt3dadd( -80.5275, -15.0298, 2.96203, 1.55 ) }
    dend_1 { pt3dadd( -81.1808, -15.5038, 3.01187, 0.15 ) }
    dend_1 { pt3dadd( -81.9374, -16.0438, 3.06993, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_1 { pt3dadd( -83.3419, -17.0541, 3.17994, 0.15 ) }
    dend_1 { pt3dadd( -83.8935, -17.4489, 3.22419, 1.33 ) }
    dend_1 { pt3dadd( -84.4998, -17.8775, 3.27488, 2.73 ) }
    dend_1 { pt3dadd( -85.0005, -18.2243, 3.31623, 3.39 ) }
    dend_1 { pt3dadd( -85.0536, -18.2617, 3.32066, 3.39 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 5/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 26.7436, 32.2371, -1.4207, 1.03638 ) }
    axon_1 { pt3dadd( 36.5663, 43.5735, -1.4207, 1.03638 ) }
    axon_1 { pt3dadd( 46.389, 54.91, -1.4207, 1.03638 ) }
    // Section: dend_65, id: dend_65, parent: dend_55 (entry count 8/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 45.5036, -2.86545, 21.7689, 0.15 ) }
    dend_65 { pt3dadd( 46.9522, -3.60916, 23.2925, 0.15 ) }
    dend_65 { pt3dadd( 47.691, -3.88124, 24.1199, 0.15 ) }
    dend_65 { pt3dadd( 48.0165, -3.96635, 24.4955, 0.15 ) }
    dend_65 { pt3dadd( 48.0654, -3.96995, 24.5535, 0.15 ) }
    dend_65 { pt3dadd( 48.2886, -3.93863, 24.8392, 0.15 ) }
    dend_65 { pt3dadd( 48.3276, -3.90949, 24.897, 0.15 ) }
    dend_65 { pt3dadd( 48.3873, -2.96687, 25.2261, 0.15 ) }
    dend_65 { pt3dadd( 48.3901, -2.81395, 25.2695, 0.15 ) }
    dend_65 { pt3dadd( 48.3697, -2.0666, 25.4678, 0.15 ) }
    dend_65 { pt3dadd( 48.3281, -1.37411, 25.6351, 0.15 ) }
    dend_65 { pt3dadd( 48.251, -0.620245, 25.7892, 1.03 ) }
    dend_65 { pt3dadd( 48.1557, 0.143977, 25.8976, 1.4 ) }
    dend_65 { pt3dadd( 48.0927, 0.53057, 25.9079, 1.4 ) }
    dend_65 { pt3dadd( 51.4053, 5.97336, 34.5947, 1.4 ) }
    dend_65 { pt3dadd( 52.9829, 10.7723, 44.1297, 1.4 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 24/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 45.5036, -2.86545, 21.7689, 0.29 ) }
    dend_56 { pt3dadd( 45.3262, -2.46303, 21.8557, 0.29 ) }
    dend_56 { pt3dadd( 45.3025, -2.40949, 21.8672, 0.29 ) }
    dend_56 { pt3dadd( 45.1305, -2.0194, 21.9513, 0.29 ) }
    dend_56 { pt3dadd( 44.7951, -1.25908, 22.1153, 0.29 ) }
    dend_56 { pt3dadd( 41.9067, 6.75519, 22.2651, 0.29 ) }
    dend_56 { pt3dadd( 40.6203, 15.0551, 23.5661, 0.29 ) }
    dend_56 { pt3dadd( 38.4477, 23.2868, 23.403, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_43 (entry count 32/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 9.60589, 107.911, 33.6522, 0.52 ) }
    dend_52 { pt3dadd( 9.30996, 108.98, 33.8378, 0.52 ) }
    dend_52 { pt3dadd( 9.10948, 109.838, 33.9502, 0.52 ) }
    dend_52 { pt3dadd( 9.09324, 109.939, 33.9649, 0.52 ) }
    dend_52 { pt3dadd( 9.01851, 110.903, 34.0919, 0.52 ) }
    dend_52 { pt3dadd( 9.00662, 111.18, 34.1562, 0.52 ) }
    dend_52 { pt3dadd( 8.979, 112.18, 34.4314, 0.52 ) }
    dend_52 { pt3dadd( 8.97967, 112.367, 34.4819, 0.52 ) }
    dend_52 { pt3dadd( 8.97454, 113.358, 34.814, 0.44 ) }
    dend_52 { pt3dadd( 8.94827, 114.786, 35.3537, 0.44 ) }
    dend_52 { pt3dadd( 8.82555, 116.227, 35.9855, 0.22 ) }
    dend_52 { pt3dadd( 8.81309, 116.308, 36.0242, 0.22 ) }
    dend_52 { pt3dadd( 8.64696, 117.174, 36.474, 0.22 ) }
    dend_52 { pt3dadd( 8.45245, 117.993, 36.9128, 0.22 ) }
    dend_52 { pt3dadd( 8.42299, 118.08, 36.9616, 0.22 ) }
    dend_52 { pt3dadd( 7.70572, 119.588, 37.8612, 0.22 ) }
    dend_52 { pt3dadd( 7.61902, 119.746, 37.9345, 0.22 ) }
    dend_52 { pt3dadd( 5.36142, 130.661, 44.6355, 0.22 ) }
    // Section: dend_51, id: dend_51, parent: dend_43 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 9.60589, 107.911, 33.6522, 0.15 ) }
    dend_51 { pt3dadd( 10.2211, 108.77, 35.5572, 0.15 ) }
    dend_51 { pt3dadd( 10.4386, 109.083, 35.9613, 0.15 ) }
    dend_51 { pt3dadd( 10.4596, 109.114, 35.9911, 0.15 ) }
    dend_51 { pt3dadd( 10.6189, 109.376, 36.183, 0.88 ) }
    dend_51 { pt3dadd( 10.7749, 109.659, 36.334, 1.33 ) }
    dend_51 { pt3dadd( 10.933, 109.951, 36.4684, 1.4 ) }
    dend_51 { pt3dadd( 11.2027, 110.451, 36.5447, 0.29 ) }
    dend_51 { pt3dadd( 11.2276, 110.491, 36.547, 0.29 ) }
    dend_51 { pt3dadd( 11.7356, 111.211, 36.529, 0.22 ) }
    dend_51 { pt3dadd( 12.3063, 111.915, 36.4543, 0.22 ) }
    dend_51 { pt3dadd( 12.4245, 112.047, 36.4195, 0.52 ) }
    dend_51 { pt3dadd( 12.8233, 112.465, 36.1821, 0.59 ) }
    dend_51 { pt3dadd( 13.2823, 112.924, 35.7706, 0.29 ) }
    dend_51 { pt3dadd( 13.5155, 113.161, 35.4506, 0.29 ) }
    dend_51 { pt3dadd( 13.7122, 113.382, 35.0766, 0.29 ) }
    dend_51 { pt3dadd( 13.9339, 113.745, 34.5163, 0.66 ) }
    dend_51 { pt3dadd( 14.1962, 114.423, 33.712, 0.66 ) }
    dend_51 { pt3dadd( 14.208, 114.462, 33.6764, 0.66 ) }
    dend_51 { pt3dadd( 14.3902, 115.136, 33.1856, 0.37 ) }
    dend_51 { pt3dadd( 14.5904, 115.839, 32.7594, 0.37 ) }
    dend_51 { pt3dadd( 14.8558, 116.652, 32.3691, 0.29 ) }
    dend_51 { pt3dadd( 15.2094, 117.546, 32.0747, 0.22 ) }
    dend_51 { pt3dadd( 15.5162, 118.204, 31.9562, 0.22 ) }
    dend_51 { pt3dadd( 15.745, 118.643, 31.9153, 1.33 ) }
    dend_51 { pt3dadd( 15.9778, 119.045, 31.9191, 1.4 ) }
    dend_51 { pt3dadd( 16.1672, 119.346, 31.939, 1.4 ) }
    dend_51 { pt3dadd( 16.4464, 119.766, 32.0296, 0.81 ) }
    dend_51 { pt3dadd( 16.8151, 120.358, 32.2508, 0.59 ) }
    dend_51 { pt3dadd( 17.049, 120.801, 32.4455, 0.22 ) }
    dend_51 { pt3dadd( 17.0882, 120.885, 32.4869, 0.22 ) }
    dend_51 { pt3dadd( 17.3279, 121.53, 32.8865, 0.22 ) }
    dend_51 { pt3dadd( 17.5255, 122.233, 33.3597, 0.52 ) }
    dend_51 { pt3dadd( 17.5438, 122.315, 33.4249, 0.52 ) }
    dend_51 { pt3dadd( 17.6008, 122.611, 33.6777, 0.52 ) }
    dend_51 { pt3dadd( 17.6071, 122.651, 33.7137, 0.52 ) }
    dend_51 { pt3dadd( 17.7355, 123.639, 34.5474, 0.52 ) }
    dend_51 { pt3dadd( 17.7815, 124.026, 34.8562, 0.81 ) }
    dend_51 { pt3dadd( 17.8821, 124.867, 35.4136, 1.33 ) }
    dend_51 { pt3dadd( 17.8982, 124.989, 35.4879, 1.33 ) }
    dend_51 { pt3dadd( 17.9483, 125.362, 35.7129, 1.33 ) }
    dend_51 { pt3dadd( 18.0199, 125.925, 36.0161, 1.33 ) }
    dend_51 { pt3dadd( 18.04, 126.123, 36.0827, 1.33 ) }
    dend_51 { pt3dadd( 18.0686, 126.563, 36.1902, 1.03 ) }
    dend_51 { pt3dadd( 18.0681, 126.807, 36.1914, 0.81 ) }
    dend_51 { pt3dadd( 19.6628, 133.252, 37.2785, 0.81 ) }
    dend_51 { pt3dadd( 20.6151, 139.887, 37.7186, 0.81 ) }
    dend_51 { pt3dadd( 20.8664, 146.596, 37.556, 0.81 ) }
    dend_51 { pt3dadd( 20.8155, 153.252, 38.4602, 0.81 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 99/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 9.60589, 107.911, 33.6522, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_44 { pt3dadd( 8.99948, 107.702, 33.9611, 0.22 ) }
    dend_44 { pt3dadd( 8.78675, 107.629, 34.0694, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 21.1449, 98.3712, 70.3776, 0.29 ) }
    dend_42 { pt3dadd( 23.7521, 106.214, 77.9165, 0.29 ) }
    dend_42 { pt3dadd( 27.7998, 114.409, 84.3591, 0.29 ) }
    dend_42 { pt3dadd( 32.5118, 121.72, 91.4381, 0.29 ) }
    dend_42 { pt3dadd( 39.3773, 127.918, 97.8552, 0.29 ) }
    dend_42 { pt3dadd( 46.5508, 135.084, 102.691, 0.29 ) }
    dend_42 { pt3dadd( 54.0778, 143.126, 104.8, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 9/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 21.1449, 98.3712, 70.3776, 0.15 ) }
    dend_41 { pt3dadd( 20.906, 107.3, 76.7243, 0.29 ) }
    dend_41 { pt3dadd( 18.9963, 114.8, 84.5494, 0.29 ) }
    dend_41 { pt3dadd( 15.3583, 122.41, 91.6076, 0.29 ) }
    dend_41 { pt3dadd( 13.1163, 131.272, 97.6453, 0.29 ) }
    dend_41 { pt3dadd( 11.4724, 141.025, 102.277, 0.29 ) }
    dend_41 { pt3dadd( 9.96245, 151.296, 105.609, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 16/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -48.544, 3.9138, -9.65488, 0.52 ) }
    dend_37 { pt3dadd( -49.368, 3.01657, -9.85415, 0.52 ) }
    dend_37 { pt3dadd( -50.0603, 2.50205, -9.99832, 0.52 ) }
    dend_37 { pt3dadd( -50.1125, 2.46325, -10.0092, 0.52 ) }
    dend_37 { pt3dadd( -50.3849, 2.26083, -10.0659, 0.88 ) }
    dend_37 { pt3dadd( -50.9156, 1.86643, -10.1765, 0.22 ) }
    dend_37 { pt3dadd( -51.5669, 1.38243, -10.3121, 1.18 ) }
    dend_37 { pt3dadd( -52.2892, 1.0845, -10.4034, 1.18 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 24/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -48.544, 3.9138, -9.65488, 0.22 ) }
    dend_34 { pt3dadd( -49.7348, 4.57193, -10.0534, 0.22 ) }
    dend_34 { pt3dadd( -51.1347, 5.32956, -10.4784, 0.22 ) }
    dend_34 { pt3dadd( -51.3651, 5.45197, -10.5551, 0.22 ) }
    dend_34 { pt3dadd( -52.043, 5.81285, -10.7865, 0.22 ) }
    dend_34 { pt3dadd( -52.1734, 5.88061, -10.83, 0.22 ) }
    dend_34 { pt3dadd( -53.5791, 6.60177, -11.2917, 0.22 ) }
    dend_34 { pt3dadd( -53.6507, 6.63636, -11.3108, 0.22 ) }
    dend_34 { pt3dadd( -54.7084, 7.05135, -11.61, 1.62 ) }
    dend_34 { pt3dadd( -55.5042, 7.31784, -11.8307, 2.06 ) }
    dend_34 { pt3dadd( -56.0803, 7.46709, -11.9667, 2.06 ) }
    dend_34 { pt3dadd( -56.2428, 7.50229, -12.001, 2.06 ) }
    dend_34 { pt3dadd( -57.5691, 7.72306, -12.2471, 0.15 ) }
    dend_34 { pt3dadd( -59.1562, 7.94668, -12.4994, 0.15 ) }
    dend_34 { pt3dadd( -60.1994, 8.06134, -12.6299, 0.15 ) }
    dend_34 { pt3dadd( -62.5295, 8.25455, -12.8891, 0.15 ) }
    dend_34 { pt3dadd( -62.6009, 8.25954, -12.8962, 0.15 ) }
    dend_34 { pt3dadd( -63.0153, 8.2822, -12.9282, 0.88 ) }
    dend_34 { pt3dadd( -63.6256, 8.30454, -12.9553, 1.11 ) }
    dend_34 { pt3dadd( -64.1594, 8.31417, -12.9468, 1.11 ) }
    dend_34 { pt3dadd( -64.7051, 8.3248, -12.9384, 0.22 ) }
    dend_34 { pt3dadd( -64.7769, 8.32775, -12.9376, 0.22 ) }
    dend_34 { pt3dadd( -66.1419, 8.40014, -12.982, 0.22 ) }
    dend_34 { pt3dadd( -66.2132, 8.40681, -12.9873, 0.22 ) }
    dend_34 { pt3dadd( -66.4459, 8.43737, -13.0139, 0.44 ) }
    dend_34 { pt3dadd( -66.8331, 8.50301, -13.068, 0.44 ) }
    dend_34 { pt3dadd( -67.938, 8.71122, -13.2672, 0.22 ) }
    dend_34 { pt3dadd( -68.5982, 8.85054, -13.397, 0.88 ) }
    dend_34 { pt3dadd( -69.3344, 9.01914, -13.5527, 1.55 ) }
    dend_34 { pt3dadd( -69.953, 9.16073, -13.6723, 1.84 ) }
    dend_34 { pt3dadd( -70.8321, 9.36489, -13.8332, 0.29 ) }
    dend_34 { pt3dadd( -71.2947, 9.47673, -13.9104, 0.22 ) }
    dend_34 { pt3dadd( -73.013, 9.92142, -14.2149, 0.22 ) }
    dend_34 { pt3dadd( -73.2281, 9.97853, -14.2517, 0.22 ) }
    dend_34 { pt3dadd( -74.6782, 10.3642, -14.5107, 0.22 ) }
    dend_34 { pt3dadd( -74.7884, 10.3943, -14.5309, 0.22 ) }
    dend_34 { pt3dadd( -75.9741, 10.7216, -14.7802, 0.22 ) }
    dend_34 { pt3dadd( -76.679, 10.9032, -14.9248, 1.18 ) }
    dend_34 { pt3dadd( -76.972, 10.971, -14.9898, 1.62 ) }
    dend_34 { pt3dadd( -77.5928, 11.0964, -15.1307, 1.92 ) }
    dend_34 { pt3dadd( -78.0339, 11.1769, -15.1847, 1.92 ) }
    dend_34 { pt3dadd( -78.8563, 11.3282, -15.2414, 0.22 ) }
    dend_34 { pt3dadd( -81.0153, 11.7361, -15.3037, 0.22 ) }
    dend_34 { pt3dadd( -81.0957, 11.7521, -15.3035, 0.22 ) }
    dend_34 { pt3dadd( -81.3782, 11.8227, -15.2785, 0.59 ) }
    dend_34 { pt3dadd( -84.3039, 12.695, -14.8387, 0.22 ) }
    dend_34 { pt3dadd( -85.2235, 12.9888, -14.6696, 1.11 ) }
    dend_34 { pt3dadd( -85.7607, 13.173, -14.5548, 1.84 ) }
    dend_34 { pt3dadd( -86.3219, 13.3747, -14.4276, 1.84 ) }
    dend_34 { pt3dadd( -88.4949, 14.1569, -13.9499, 0.22 ) }
    dend_34 { pt3dadd( -90.8015, 14.9328, -13.4848, 0.15 ) }
    dend_34 { pt3dadd( -92.6603, 15.4957, -13.1516, 0.15 ) }
    dend_34 { pt3dadd( -92.813, 15.5346, -13.12, 0.44 ) }
    dend_34 { pt3dadd( -93.0298, 15.58, -13.0756, 0.44 ) }
    dend_34 { pt3dadd( -93.469, 15.6501, -12.9958, 0.44 ) }
    dend_34 { pt3dadd( -95.2948, 15.7932, -12.792, 0.15 ) }
    dend_34 { pt3dadd( -95.3653, 15.7949, -12.779, 0.15 ) }
    dend_34 { pt3dadd( -96.7759, 15.8003, -12.4384, 1.47 ) }
    dend_34 { pt3dadd( -97.367, 15.7969, -12.284, 2.14 ) }
    dend_34 { pt3dadd( -97.7379, 15.7956, -12.1757, 2.43 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 84/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 13.6263, 20.1024, -2.61468, 1.03 ) }
    dend_29 { pt3dadd( 14.0739, 20.6814, -2.33973, 1.03 ) }
    dend_29 { pt3dadd( 14.3084, 20.9724, -2.19661, 0.96 ) }
    dend_29 { pt3dadd( 14.6345, 21.3567, -1.98459, 0.81 ) }
    dend_29 { pt3dadd( 14.9564, 21.7311, -1.7782, 0.81 ) }
    dend_29 { pt3dadd( 15.446, 22.323, -1.46736, 0.81 ) }
    dend_29 { pt3dadd( 15.8797, 22.8405, -1.17457, 0.81 ) }
    dend_29 { pt3dadd( 15.9408, 22.9144, -1.12991, 0.81 ) }
    dend_29 { pt3dadd( 16.2762, 23.3183, -0.87391, 1.11 ) }
    dend_29 { pt3dadd( 16.5845, 23.6947, -0.642753, 1.25 ) }
    dend_29 { pt3dadd( 16.9622, 24.1552, -0.356211, 1.25 ) }
    dend_29 { pt3dadd( 17.4499, 24.7486, 0.0143382, 1.03 ) }
    dend_29 { pt3dadd( 17.9, 25.2859, 0.360257, 0.81 ) }
    dend_29 { pt3dadd( 18.5028, 25.9971, 0.798745, 0.81 ) }
    dend_29 { pt3dadd( 18.9772, 26.5501, 1.1101, 0.81 ) }
    dend_29 { pt3dadd( 19.0072, 26.5842, 1.12811, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_29 { pt3dadd( 19.3248, 26.9491, 1.28905, 1.18 ) }
    dend_29 { pt3dadd( 19.4711, 27.135, 1.34894, 1.18 ) }
    dend_29 { pt3dadd( 19.7207, 27.4981, 1.44643, 1.18 ) }
    dend_29 { pt3dadd( 20.0941, 28.1134, 1.62333, 1.47 ) }
    dend_29 { pt3dadd( 20.3924, 28.6631, 1.82912, 1.18 ) }
    dend_29 { pt3dadd( 20.704, 29.2766, 2.08897, 0.74 ) }
    dend_29 { pt3dadd( 20.9274, 29.7744, 2.32475, 0.74 ) }
    dend_29 { pt3dadd( 21.2276, 30.6158, 2.78832, 0.74 ) }
    dend_29 { pt3dadd( 21.4566, 31.3776, 3.25494, 0.88 ) }
    dend_29 { pt3dadd( 21.7472, 32.4903, 4.03663, 0.88 ) }
    dend_29 { pt3dadd( 21.761, 32.5532, 4.08471, 0.88 ) }
    dend_29 { pt3dadd( 21.9361, 33.4346, 4.80561, 0.88 ) }
    dend_29 { pt3dadd( 22.1589, 34.6624, 5.85572, 0.88 ) }
    dend_29 { pt3dadd( 22.1663, 34.7047, 5.89305, 0.88 ) }
    dend_29 { pt3dadd( 22.2762, 35.3633, 6.44642, 0.66 ) }
    dend_29 { pt3dadd( 22.3612, 35.793, 6.80329, 0.66 ) }
    dend_29 { pt3dadd( 22.502, 36.3642, 7.25658, 0.66 ) }
    dend_29 { pt3dadd( 22.5153, 36.4004, 7.28625, 0.66 ) }
    dend_29 { pt3dadd( 22.7942, 36.8726, 7.71446, 1.03 ) }
    dend_29 { pt3dadd( 23.033, 37.2213, 8.0513, 1.4 ) }
    dend_29 { pt3dadd( 23.245, 37.4746, 8.31688, 1.55 ) }
    dend_29 { pt3dadd( 23.4748, 37.7122, 8.57636, 1.69 ) }
    dend_29 { pt3dadd( 23.9278, 38.1736, 9.05603, 1.47 ) }
    dend_29 { pt3dadd( 24.4993, 38.6987, 9.63599, 1.33 ) }
    dend_29 { pt3dadd( 24.5335, 38.7273, 9.67188, 1.33 ) }
    dend_29 { pt3dadd( 24.9923, 39.0801, 10.1695, 0.81 ) }
    dend_29 { pt3dadd( 25.529, 39.51, 10.8218, 0.66 ) }
    dend_29 { pt3dadd( 25.8277, 39.8094, 11.2608, 0.66 ) }
    dend_29 { pt3dadd( 26.3316, 40.4746, 12.1592, 0.66 ) }
    dend_29 { pt3dadd( 26.4849, 40.7279, 12.4927, 0.66 ) }
    dend_29 { pt3dadd( 26.5181, 40.7888, 12.5729, 0.66 ) }
    dend_29 { pt3dadd( 26.7315, 41.246, 13.1974, 0.66 ) }
    dend_29 { pt3dadd( 26.9844, 41.8594, 13.998, 0.66 ) }
    dend_29 { pt3dadd( 27.0075, 41.9232, 14.0684, 0.66 ) }
    dend_29 { pt3dadd( 27.1646, 42.4121, 14.4337, 0.88 ) }
    dend_29 { pt3dadd( 27.3449, 42.8793, 14.6754, 1.03 ) }
    dend_29 { pt3dadd( 27.3687, 42.9353, 14.6977, 1.03 ) }
    dend_29 { pt3dadd( 27.7154, 43.6385, 14.882, 1.03 ) }
    dend_29 { pt3dadd( 27.7451, 43.6952, 14.8922, 1.03 ) }
    dend_29 { pt3dadd( 28.1033, 44.4117, 14.9821, 1.03 ) }
    dend_29 { pt3dadd( 28.6244, 45.4952, 15.0802, 1.03 ) }
    dend_29 { pt3dadd( 28.6486, 45.5464, 15.0845, 1.03 ) }
    dend_29 { pt3dadd( 29.0859, 46.4878, 15.1582, 0.66 ) }
    dend_29 { pt3dadd( 29.8075, 48.0353, 15.2635, 0.66 ) }
    dend_29 { pt3dadd( 30.091, 48.6352, 15.3029, 0.66 ) }
    dend_29 { pt3dadd( 30.116, 48.6862, 15.3055, 0.66 ) }
    dend_29 { pt3dadd( 30.3578, 49.1531, 15.3227, 0.88 ) }
    dend_29 { pt3dadd( 30.5604, 49.534, 15.3417, 1.18 ) }
    dend_29 { pt3dadd( 30.8605, 50.0695, 15.3729, 1.4 ) }
    dend_29 { pt3dadd( 31.1303, 50.5156, 15.4088, 1.4 ) }
    dend_29 { pt3dadd( 31.3244, 50.8345, 15.4507, 1.4 ) }
    dend_29 { pt3dadd( 31.6352, 51.3593, 15.5257, 0.81 ) }
    dend_29 { pt3dadd( 31.8709, 51.7975, 15.6253, 0.66 ) }
    dend_29 { pt3dadd( 32.07, 52.1467, 15.7712, 0.52 ) }
    dend_29 { pt3dadd( 32.1497, 52.2885, 15.8446, 0.52 ) }
    dend_29 { pt3dadd( 32.5224, 52.9409, 16.2111, 0.52 ) }
    dend_29 { pt3dadd( 32.548, 52.9851, 16.236, 0.52 ) }
    dend_29 { pt3dadd( 33.0653, 53.8821, 16.6777, 0.52 ) }
    dend_29 { pt3dadd( 33.6772, 54.9276, 17.0669, 0.44 ) }
    dend_29 { pt3dadd( 34.0622, 55.5754, 17.2615, 0.66 ) }
    dend_29 { pt3dadd( 34.2763, 55.9335, 17.3416, 0.81 ) }
    dend_29 { pt3dadd( 34.7032, 56.6355, 17.4454, 0.81 ) }
    dend_29 { pt3dadd( 35.1491, 57.3581, 17.4896, 0.66 ) }
    dend_29 { pt3dadd( 35.7908, 58.3766, 17.4307, 0.52 ) }
    dend_29 { pt3dadd( 35.82, 58.4253, 17.4248, 0.52 ) }
    dend_29 { pt3dadd( 36.2445, 59.0938, 17.3625, 0.52 ) }
    dend_29 { pt3dadd( 36.2752, 59.1416, 17.3583, 0.52 ) }
    dend_29 { pt3dadd( 36.6137, 59.6553, 17.3198, 0.88 ) }
    dend_29 { pt3dadd( 36.9649, 60.1831, 17.3011, 1.18 ) }
    dend_29 { pt3dadd( 36.9964, 60.2306, 17.2992, 1.18 ) }
    dend_29 { pt3dadd( 37.3393, 60.7478, 17.2786, 1.18 ) }
    dend_29 { pt3dadd( 37.6811, 61.2692, 17.2602, 0.74 ) }
    dend_29 { pt3dadd( 38.0478, 61.8454, 17.248, 0.37 ) }
    dend_29 { pt3dadd( 38.6161, 62.7476, 17.2344, 0.37 ) }
    dend_29 { pt3dadd( 38.8483, 63.0909, 17.2201, 0.37 ) }
    dend_29 { pt3dadd( 38.9787, 63.2638, 17.205, 0.74 ) }
    dend_29 { pt3dadd( 39.274, 63.6045, 17.1528, 1.03 ) }
    dend_29 { pt3dadd( 39.3197, 63.6503, 17.1425, 1.03 ) }
    dend_29 { pt3dadd( 39.7921, 64.0608, 17.0084, 1.25 ) }
    dend_29 { pt3dadd( 40.3806, 64.5225, 16.8196, 1.25 ) }
    dend_29 { pt3dadd( 40.6691, 64.7562, 16.7303, 1.47 ) }
    dend_29 { pt3dadd( 40.9065, 64.9676, 16.6651, 1.47 ) }
    dend_29 { pt3dadd( 40.9946, 65.0514, 16.647, 1.47 ) }
    dend_29 { pt3dadd( 41.3462, 65.4255, 16.6075, 1.25 ) }
    dend_29 { pt3dadd( 41.7284, 65.8804, 16.5995, 1.03 ) }
    dend_29 { pt3dadd( 42.1224, 66.3873, 16.6313, 0.88 ) }
    dend_29 { pt3dadd( 42.819, 67.3285, 16.7319, 0.59 ) }
    dend_29 { pt3dadd( 43.2282, 67.9022, 16.8056, 0.37 ) }
    dend_29 { pt3dadd( 43.6932, 68.5319, 16.9271, 0.37 ) }
    dend_29 { pt3dadd( 44.03, 68.9733, 17.0361, 0.52 ) }
    dend_29 { pt3dadd( 44.2978, 69.3119, 17.1341, 0.66 ) }
    dend_29 { pt3dadd( 44.6971, 69.7953, 17.2881, 0.66 ) }
    dend_29 { pt3dadd( 45.4175, 70.6343, 17.5796, 0.66 ) }
    dend_29 { pt3dadd( 46.0304, 71.3405, 17.8198, 0.66 ) }
    dend_29 { pt3dadd( 46.0665, 71.3823, 17.8339, 0.66 ) }
    dend_29 { pt3dadd( 46.3819, 71.7654, 17.9631, 1.25 ) }
    dend_29 { pt3dadd( 46.6803, 72.1614, 18.0907, 1.69 ) }
    dend_29 { pt3dadd( 46.998, 72.654, 18.2544, 1.84 ) }
    dend_29 { pt3dadd( 47.1292, 72.8998, 18.3415, 1.99 ) }
    dend_29 { pt3dadd( 47.3314, 73.3697, 18.4973, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_29 { pt3dadd( 47.4146, 73.578, 18.5671, 0.88 ) }
    dend_29 { pt3dadd( 47.4698, 73.7378, 18.6234, 0.66 ) }
    dend_29 { pt3dadd( 47.6232, 74.2151, 18.8084, 0.44 ) }
    dend_29 { pt3dadd( 47.8807, 75.0626, 19.1514, 0.29 ) }
    dend_29 { pt3dadd( 48.0697, 75.6981, 19.4124, 0.29 ) }
    dend_29 { pt3dadd( 48.5989, 77.4822, 20.1689, 0.29 ) }
    dend_29 { pt3dadd( 48.875, 78.4056, 20.562, 0.22 ) }
    dend_29 { pt3dadd( 49.0133, 78.8293, 20.7587, 0.29 ) }
    dend_29 { pt3dadd( 49.1375, 79.1827, 20.9329, 0.44 ) }
    dend_29 { pt3dadd( 49.4156, 79.938, 21.3199, 0.44 ) }
    dend_29 { pt3dadd( 49.6747, 80.552, 21.661, 0.44 ) }
    dend_29 { pt3dadd( 49.8309, 80.8663, 21.8511, 1.11 ) }
    dend_29 { pt3dadd( 50.3536, 81.6825, 22.3591, 1.77 ) }
    dend_29 { pt3dadd( 50.6439, 82.0865, 22.5941, 1.92 ) }
    dend_29 { pt3dadd( 51.0156, 82.4674, 22.8683, 2.14 ) }
    dend_29 { pt3dadd( 51.2562, 82.6775, 23.023, 1.99 ) }
    dend_29 { pt3dadd( 51.5025, 82.8762, 23.1599, 1.99 ) }
    dend_29 { pt3dadd( 52.3879, 83.5837, 23.607, 0.37 ) }
    dend_29 { pt3dadd( 53.0539, 84.1217, 23.9088, 0.37 ) }
    dend_29 { pt3dadd( 54.801, 85.5214, 24.6549, 0.29 ) }
    dend_29 { pt3dadd( 55.3466, 85.9465, 24.8947, 1.11 ) }
    dend_29 { pt3dadd( 55.7564, 86.2279, 25.1332, 1.92 ) }
    dend_29 { pt3dadd( 56.1532, 86.4837, 25.4001, 2.28 ) }
    dend_29 { pt3dadd( 56.3764, 86.6179, 25.5557, 2.43 ) }
    dend_29 { pt3dadd( 56.862, 86.8501, 25.9232, 2.43 ) }
    dend_29 { pt3dadd( 57.7095, 87.2247, 26.6356, 2.43 ) }
    dend_29 { pt3dadd( 59.7929, 88.0561, 28.5237, 0.37 ) }
    dend_29 { pt3dadd( 60.2031, 88.2191, 28.9201, 0.37 ) }
    dend_29 { pt3dadd( 60.7097, 88.4345, 29.4358, 0.37 ) }
    dend_29 { pt3dadd( 61.4827, 88.8244, 30.2718, 0.59 ) }
    dend_29 { pt3dadd( 61.9413, 89.1445, 30.8217, 0.81 ) }
    dend_29 { pt3dadd( 61.9951, 89.2235, 30.8977, 0.81 ) }
    dend_29 { pt3dadd( 62.1408, 89.8189, 31.2129, 0.81 ) }
    dend_29 { pt3dadd( 62.2509, 90.4761, 31.5264, 0.81 ) }
    dend_29 { pt3dadd( 62.3088, 90.9661, 31.7393, 0.59 ) }
    dend_29 { pt3dadd( 62.3688, 91.5699, 31.9657, 0.44 ) }
    dend_29 { pt3dadd( 62.4853, 92.569, 32.3257, 0.44 ) }
    dend_29 { pt3dadd( 62.6383, 93.7824, 32.7553, 0.44 ) }
    dend_29 { pt3dadd( 62.7492, 94.5638, 33.0237, 1.03 ) }
    dend_29 { pt3dadd( 62.8146, 95.0077, 33.1762, 1.62 ) }
    dend_29 { pt3dadd( 62.8212, 95.0688, 33.1965, 1.62 ) }
    dend_29 { pt3dadd( 62.864, 95.7013, 33.4034, 2.14 ) }
    dend_29 { pt3dadd( 62.8669, 95.8633, 33.4552, 2.36 ) }
    dend_29 { pt3dadd( 62.8402, 96.3718, 33.6186, 2.36 ) }
    dend_29 { pt3dadd( 62.7618, 97.0562, 33.8461, 1.77 ) }
    dend_29 { pt3dadd( 62.6294, 97.8502, 34.1349, 0.52 ) }
    dend_29 { pt3dadd( 62.6208, 97.8952, 34.1515, 0.52 ) }
    dend_29 { pt3dadd( 62.5702, 98.1108, 34.2319, 0.37 ) }
    dend_29 { pt3dadd( 62.4646, 98.495, 34.3805, 0.37 ) }
    dend_29 { pt3dadd( 62.413, 98.6414, 34.4419, 0.29 ) }
    dend_29 { pt3dadd( 62.1097, 99.3647, 34.796, 0.29 ) }
    dend_29 { pt3dadd( 66.4508, 106.097, 36.1477, 0.29 ) }
    dend_29 { pt3dadd( 69.9939, 113.154, 37.9915, 0.29 ) }
    dend_29 { pt3dadd( 73.0189, 120.648, 38.6727, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 54/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 13.6263, 20.1024, -2.61468, 1.33 ) }
    dend_28 { pt3dadd( 14.4913, 19.7408, -2.74514, 1.33 ) }
    dend_28 { pt3dadd( 15.4179, 19.3541, -2.86935, 0.96 ) }
    dend_28 { pt3dadd( 16.4534, 18.9088, -3.00201, 0.88 ) }
    dend_28 { pt3dadd( 16.4985, 18.8886, -3.00778, 0.88 ) }
    dend_28 { pt3dadd( 17.6181, 18.3691, -3.15418, 0.88 ) }
    dend_28 { pt3dadd( 18.6856, 17.8655, -3.29568, 0.81 ) }
    dend_28 { pt3dadd( 18.7305, 17.8446, -3.30143, 0.81 ) }
    dend_28 { pt3dadd( 19.3034, 17.5694, -3.37424, 0.81 ) }
    dend_28 { pt3dadd( 19.8741, 17.3041, -3.45102, 0.81 ) }
    dend_28 { pt3dadd( 20.5136, 17.0167, -3.54288, 0.81 ) }
    dend_28 { pt3dadd( 20.5593, 16.9981, -3.55018, 0.81 ) }
    dend_28 { pt3dadd( 21.3983, 16.6951, -3.70279, 0.81 ) }
    dend_28 { pt3dadd( 21.6047, 16.6294, -3.7395, 0.81 ) }
    dend_28 { pt3dadd( 22.4302, 16.405, -3.88282, 0.81 ) }
    dend_28 { pt3dadd( 22.9309, 16.2848, -3.98318, 0.66 ) }
    dend_28 { pt3dadd( 23.8415, 16.0808, -4.18635, 0.66 ) }
    dend_28 { pt3dadd( 24.4007, 15.9589, -4.32239, 0.88 ) }
    dend_28 { pt3dadd( 24.8954, 15.8587, -4.45302, 0.88 ) }
    dend_28 { pt3dadd( 25.2029, 15.802, -4.54263, 0.88 ) }
    dend_28 { pt3dadd( 25.8157, 15.7111, -4.758, 0.74 ) }
    dend_28 { pt3dadd( 26.0122, 15.6872, -4.83704, 0.74 ) }
    dend_28 { pt3dadd( 26.4913, 15.6357, -5.06233, 0.66 ) }
    dend_28 { pt3dadd( 27.0064, 15.5886, -5.32212, 0.37 ) }
    dend_28 { pt3dadd( 27.6731, 15.524, -5.68952, 0.29 ) }
    dend_28 { pt3dadd( 28.2929, 15.4652, -6.04087, 0.29 ) }
    dend_28 { pt3dadd( 28.3362, 15.4611, -6.06551, 0.29 ) }
    dend_28 { pt3dadd( 28.7104, 15.422, -6.29838, 0.44 ) }
    dend_28 { pt3dadd( 29.1486, 15.3647, -6.58867, 0.44 ) }
    dend_28 { pt3dadd( 29.7172, 15.2643, -6.9724, 0.44 ) }
    dend_28 { pt3dadd( 29.9375, 15.2151, -7.10986, 1.03 ) }
    dend_28 { pt3dadd( 29.9796, 15.2035, -7.13419, 1.03 ) }
    dend_28 { pt3dadd( 30.6025, 15.0274, -7.47342, 1.55 ) }
    dend_28 { pt3dadd( 30.9941, 14.9167, -7.66428, 1.84 ) }
    dend_28 { pt3dadd( 31.2232, 14.853, -7.76883, 1.84 ) }
    dend_28 { pt3dadd( 31.6559, 14.7341, -7.9436, 1.55 ) }
    dend_28 { pt3dadd( 32.297, 14.5561, -8.19206, 0.59 ) }
    dend_28 { pt3dadd( 32.6358, 14.4655, -8.31368, 0.37 ) }
    dend_28 { pt3dadd( 33.2169, 14.305, -8.4991, 0.22 ) }
    dend_28 { pt3dadd( 33.4151, 14.2522, -8.56064, 0.44 ) }
    dend_28 { pt3dadd( 33.7648, 14.1571, -8.66129, 0.88 ) }
    dend_28 { pt3dadd( 33.8108, 14.1435, -8.67514, 0.88 ) }
    dend_28 { pt3dadd( 34.1086, 14.0597, -8.76137, 1.11 ) }
    dend_28 { pt3dadd( 34.3774, 13.9856, -8.85045, 1.11 ) }
    dend_28 { pt3dadd( 34.5211, 13.9484, -8.90181, 1.11 ) }
    dend_28 { pt3dadd( 35.0072, 13.835, -9.02781, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_28 { pt3dadd( 35.5156, 13.7237, -9.1049, 0.22 ) }
    dend_28 { pt3dadd( 36.0521, 13.6059, -9.14693, 0.22 ) }
    dend_28 { pt3dadd( 36.2181, 13.5709, -9.15052, 0.52 ) }
    dend_28 { pt3dadd( 36.6923, 13.477, -9.13941, 0.96 ) }
    dend_28 { pt3dadd( 37.5685, 13.3029, -9.07914, 1.25 ) }
    dend_28 { pt3dadd( 38.0991, 13.2001, -9.01169, 1.55 ) }
    dend_28 { pt3dadd( 38.3169, 13.1562, -8.97232, 1.69 ) }
    dend_28 { pt3dadd( 38.6675, 13.0799, -8.90912, 1.33 ) }
    dend_28 { pt3dadd( 38.8269, 13.0476, -8.88161, 1.03 ) }
    dend_28 { pt3dadd( 38.883, 13.0381, -8.87629, 1.03 ) }
    dend_28 { pt3dadd( 39.0382, 13.0139, -8.87971, 0.88 ) }
    dend_28 { pt3dadd( 39.2989, 12.9729, -8.89512, 0.88 ) }
    dend_28 { pt3dadd( 39.6084, 12.9214, -8.91425, 0.52 ) }
    dend_28 { pt3dadd( 40.0805, 12.8403, -8.94504, 0.29 ) }
    dend_28 { pt3dadd( 40.9154, 12.6988, -9.00549, 0.29 ) }
    dend_28 { pt3dadd( 41.1955, 12.6504, -9.02879, 0.88 ) }
    dend_28 { pt3dadd( 41.6186, 12.5689, -9.07293, 1.33 ) }
    dend_28 { pt3dadd( 41.6668, 12.559, -9.08186, 1.33 ) }
    dend_28 { pt3dadd( 42.0198, 12.4841, -9.1697, 1.33 ) }
    dend_28 { pt3dadd( 42.2133, 12.4416, -9.22998, 1.55 ) }
    dend_28 { pt3dadd( 42.5156, 12.3735, -9.33226, 1.55 ) }
    dend_28 { pt3dadd( 43.2752, 12.1697, -9.58545, 0.22 ) }
    dend_28 { pt3dadd( 44.1354, 11.903, -9.90942, 0.29 ) }
    dend_28 { pt3dadd( 44.1796, 11.8879, -9.92701, 0.29 ) }
    dend_28 { pt3dadd( 44.7443, 11.6753, -10.1596, 0.29 ) }
    dend_28 { pt3dadd( 44.7872, 11.6574, -10.1777, 0.29 ) }
    dend_28 { pt3dadd( 45.9409, 11.1262, -10.6642, 0.29 ) }
    dend_28 { pt3dadd( 46.5375, 10.8259, -10.9118, 1.11 ) }
    dend_28 { pt3dadd( 46.8053, 10.6733, -11.0247, 1.62 ) }
    dend_28 { pt3dadd( 47.1316, 10.4675, -11.207, 1.84 ) }
    dend_28 { pt3dadd( 47.3435, 10.3182, -11.3574, 2.06 ) }
    dend_28 { pt3dadd( 47.5441, 10.1573, -11.5222, 1.84 ) }
    dend_28 { pt3dadd( 47.6699, 10.0412, -11.6466, 1.55 ) }
    dend_28 { pt3dadd( 48.0373, 9.69234, -11.971, 1.11 ) }
    dend_28 { pt3dadd( 48.6834, 9.08092, -12.5514, 0.29 ) }
    dend_28 { pt3dadd( 48.8562, 8.92058, -12.7032, 0.15 ) }
    dend_28 { pt3dadd( 49.3761, 8.46373, -13.1252, 0.15 ) }
    dend_28 { pt3dadd( 49.4472, 8.40376, -13.1767, 0.15 ) }
    dend_28 { pt3dadd( 50.2545, 7.73315, -13.6672, 0.15 ) }
    dend_28 { pt3dadd( 50.6689, 7.40896, -13.8779, 0.88 ) }
    dend_28 { pt3dadd( 50.9227, 7.22037, -13.9836, 1.69 ) }
    dend_28 { pt3dadd( 51.2644, 6.97102, -14.127, 1.99 ) }
    dend_28 { pt3dadd( 51.6476, 6.70215, -14.2856, 1.99 ) }
    dend_28 { pt3dadd( 52.0941, 6.39457, -14.4632, 0.88 ) }
    dend_28 { pt3dadd( 52.6216, 6.04165, -14.6604, 0.22 ) }
    dend_28 { pt3dadd( 53.5792, 5.39145, -15.0337, 0.22 ) }
    dend_28 { pt3dadd( 53.8418, 5.21842, -15.1458, 0.59 ) }
    dend_28 { pt3dadd( 54.1141, 5.03743, -15.2687, 0.96 ) }
    dend_28 { pt3dadd( 54.3672, 4.87201, -15.3869, 1.11 ) }
    dend_28 { pt3dadd( 54.6095, 4.71892, -15.4936, 1.11 ) }
    dend_28 { pt3dadd( 55.3599, 4.23014, -15.8364, 0.15 ) }
    dend_28 { pt3dadd( 55.7204, 3.99033, -16.0159, 0.15 ) }
    dend_28 { pt3dadd( 56.3417, 3.56877, -16.3288, 0.15 ) }
    dend_28 { pt3dadd( 56.3784, 3.54265, -16.3498, 0.15 ) }
    dend_28 { pt3dadd( 57.4045, 2.76865, -16.9659, 0.15 ) }
    dend_28 { pt3dadd( 57.8816, 2.39309, -17.2495, 1.25 ) }
    dend_28 { pt3dadd( 58.2521, 2.09257, -17.4608, 1.62 ) }
    dend_28 { pt3dadd( 58.483, 1.89499, -17.5971, 1.62 ) }
    dend_28 { pt3dadd( 59.1652, 1.30232, -18.0067, 0.15 ) }
    dend_28 { pt3dadd( 59.94, 0.597258, -18.4732, 0.15 ) }
    dend_28 { pt3dadd( 60.1547, 0.383692, -18.5972, 0.66 ) }
    dend_28 { pt3dadd( 60.3569, 0.179666, -18.6974, 1.03 ) }
    dend_28 { pt3dadd( 60.5747, -0.0488281, -18.8008, 1.03 ) }
    dend_28 { pt3dadd( 60.6985, -0.180656, -18.8522, 1.03 ) }
    dend_28 { pt3dadd( 61.0331, -0.54712, -18.9563, 0.15 ) }
    dend_28 { pt3dadd( 61.6916, -1.30321, -19.1914, 0.15 ) }
    dend_28 { pt3dadd( 61.7326, -1.35099, -19.2077, 0.52 ) }
    dend_28 { pt3dadd( 61.8214, -1.45926, -19.2441, 0.52 ) }
    dend_28 { pt3dadd( 62.0753, -1.7805, -19.3504, 0.59 ) }
    dend_28 { pt3dadd( 62.1999, -1.94204, -19.4007, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 70/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 27.2644, -173.196, 3.17132, 0.81 ) }
    dend_25 { pt3dadd( 27.7779, -173.551, 3.21708, 0.81 ) }
    dend_25 { pt3dadd( 28.5107, -174.102, 3.27807, 0.52 ) }
    dend_25 { pt3dadd( 29.8113, -175.112, 3.38659, 0.44 ) }
    dend_25 { pt3dadd( 30.7825, -175.885, 3.46729, 0.44 ) }
    dend_25 { pt3dadd( 31.1794, -176.211, 3.50131, 0.81 ) }
    dend_25 { pt3dadd( 31.8409, -176.759, 3.56018, 0.15 ) }
    dend_25 { pt3dadd( 33.7325, -178.373, 3.60283, 0.15 ) }
    dend_25 { pt3dadd( 33.8798, -178.503, 3.59685, 0.44 ) }
    dend_25 { pt3dadd( 33.99, -178.603, 3.5866, 0.44 ) }
    dend_25 { pt3dadd( 34.3829, -178.954, 3.52883, 0.96 ) }
    dend_25 { pt3dadd( 34.4942, -179.052, 3.50971, 0.96 ) }
    dend_25 { pt3dadd( 35.4858, -179.92, 3.36501, 0.96 ) }
    dend_25 { pt3dadd( 35.5471, -179.969, 3.35219, 0.96 ) }
    dend_25 { pt3dadd( 36.0783, -180.399, 3.267, 0.96 ) }
    dend_25 { pt3dadd( 36.6399, -180.854, 3.20453, 0.96 ) }
    dend_25 { pt3dadd( 37.255, -181.366, 3.17639, 0.29 ) }
    dend_25 { pt3dadd( 37.9433, -181.977, 3.22781, 0.29 ) }
    dend_25 { pt3dadd( 37.9944, -182.023, 3.23541, 0.29 ) }
    dend_25 { pt3dadd( 38.2648, -182.274, 3.26598, 0.52 ) }
    dend_25 { pt3dadd( 38.3409, -182.347, 3.27159, 0.52 ) }
    dend_25 { pt3dadd( 38.676, -182.672, 3.28805, 0.52 ) }
    dend_25 { pt3dadd( 39.6706, -183.646, 3.33312, 0.22 ) }
    dend_25 { pt3dadd( 40.0629, -184.06, 3.33633, 0.37 ) }
    dend_25 { pt3dadd( 40.1126, -184.122, 3.33792, 0.37 ) }
    dend_25 { pt3dadd( 40.3357, -184.436, 3.352, 0.37 ) }
    dend_25 { pt3dadd( 40.4214, -184.57, 3.36137, 0.37 ) }
    dend_25 { pt3dadd( 40.5366, -184.77, 3.38013, 0.37 ) }
    dend_25 { pt3dadd( 40.8541, -185.374, 3.45576, 0.22 ) }
    dend_25 { pt3dadd( 41.5541, -186.73, 3.67357, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_25 { pt3dadd( 41.7347, -187.082, 3.73018, 1.55 ) }
    dend_25 { pt3dadd( 42.0886, -187.772, 3.84277, 2.06 ) }
    dend_25 { pt3dadd( 42.1152, -187.824, 3.85136, 2.06 ) }
    dend_25 { pt3dadd( 42.2563, -188.093, 3.89809, 2.58 ) }
    dend_25 { pt3dadd( 42.5948, -188.702, 4.01662, 2.87 ) }
    dend_25 { pt3dadd( 49.6253, -195.499, 5.8399, 2.87 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 6/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 27.2644, -173.196, 3.17132, 0.96 ) }
    dend_22 { pt3dadd( 27.2574, -173.608, 3.16517, 0.96 ) }
    dend_22 { pt3dadd( 27.254, -174.016, 3.1587, 0.66 ) }
    dend_22 { pt3dadd( 27.2543, -174.485, 3.10608, 0.52 ) }
    dend_22 { pt3dadd( 27.2421, -175.066, 3.01174, 0.37 ) }
    dend_22 { pt3dadd( 27.2289, -175.667, 2.91077, 0.37 ) }
    dend_22 { pt3dadd( 27.2213, -176.253, 2.81427, 0.74 ) }
    dend_22 { pt3dadd( 27.219, -176.711, 2.73778, 0.74 ) }
    dend_22 { pt3dadd( 27.2498, -177.529, 2.51197, 0.15 ) }
    dend_22 { pt3dadd( 27.3104, -178.361, 2.22629, 0.15 ) }
    dend_22 { pt3dadd( 27.4223, -179.724, 1.69232, 0.15 ) }
    dend_22 { pt3dadd( 27.4671, -180.111, 1.51815, 0.88 ) }
    dend_22 { pt3dadd( 27.5398, -180.643, 1.26388, 0.96 ) }
    dend_22 { pt3dadd( 27.8192, -182.451, 0.390522, 0.15 ) }
    dend_22 { pt3dadd( 27.9641, -183.289, -0.0146876, 0.15 ) }
    dend_22 { pt3dadd( 28.0696, -183.826, -0.295187, 0.15 ) }
    dend_22 { pt3dadd( 28.4335, -185.403, -1.09477, 0.15 ) }
    dend_22 { pt3dadd( 28.5579, -185.823, -1.29585, 1.11 ) }
    dend_22 { pt3dadd( 28.7223, -186.285, -1.49557, 1.11 ) }
    dend_22 { pt3dadd( 28.8297, -186.531, -1.5717, 0.15 ) }
    dend_22 { pt3dadd( 28.856, -186.578, -1.5866, 0.15 ) }
    dend_22 { pt3dadd( 29.7482, -187.908, -1.95385, 0.15 ) }
    dend_22 { pt3dadd( 30.5644, -188.999, -2.21501, 0.15 ) }
    dend_22 { pt3dadd( 30.6039, -189.049, -2.22755, 0.15 ) }
    dend_22 { pt3dadd( 31.3244, -189.899, -2.44929, 0.15 ) }
    dend_22 { pt3dadd( 31.7554, -190.393, -2.57603, 1.84 ) }
    dend_22 { pt3dadd( 32.3044, -191.007, -2.74169, 2.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 25.4432, -109.855, 14.083, 0.59 ) }
    dend_15 { pt3dadd( 27.9104, -116.143, 19.7726, 0.59 ) }
    dend_15 { pt3dadd( 30.7421, -121.405, 26.3212, 0.59 ) }
    dend_15 { pt3dadd( 33.2942, -127.242, 32.4608, 0.59 ) }
    dend_15 { pt3dadd( 35.9853, -133.582, 37.9841, 0.59 ) }
    dend_15 { pt3dadd( 37.1463, -140.724, 42.9923, 0.59 ) }
    dend_15 { pt3dadd( 38.8373, -147.776, 47.9823, 0.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 25.4432, -109.855, 14.083, 0.52 ) }
    dend_14 { pt3dadd( 26.4471, -120.077, 9.29317, 0.59 ) }
    dend_14 { pt3dadd( 28.329, -129.719, 3.59179, 0.59 ) }
    dend_14 { pt3dadd( 28.5809, -139.004, -2.97041, 0.59 ) }
    dend_14 { pt3dadd( 27.9898, -149.252, -7.77243, 0.59 ) }
    dend_14 { pt3dadd( 28.6798, -158.418, -14.4774, 0.59 ) }
    dend_14 { pt3dadd( 28.2326, -167.465, -21.3708, 0.59 ) }
    dend_14 { pt3dadd( 26.9976, -176.228, -28.548, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 48/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -9.60184, -34.9149, -1.95146, 1.4 ) }
    dend_12 { pt3dadd( -10.6925, -37.9675, -5.50179, 1.4 ) }
    dend_12 { pt3dadd( -11.1222, -39.1665, -6.49207, 0.52 ) }
    dend_12 { pt3dadd( -11.1527, -39.2453, -6.54504, 0.52 ) }
    dend_12 { pt3dadd( -11.7515, -40.6429, -7.37848, 0.81 ) }
    dend_12 { pt3dadd( -12.1739, -41.508, -7.9384, 1.03 ) }
    dend_12 { pt3dadd( -12.7886, -42.6207, -8.82488, 1.25 ) }
    dend_12 { pt3dadd( -13.6776, -43.996, -9.76892, 0.66 ) }
    dend_12 { pt3dadd( -14.2499, -44.7879, -10.4224, 0.66 ) }
    dend_12 { pt3dadd( -14.6926, -45.3141, -10.9621, 0.66 ) }
    dend_12 { pt3dadd( -15.5995, -46.1809, -12.2595, 0.66 ) }
    dend_12 { pt3dadd( -16.756, -47.0956, -14.1045, 0.66 ) }
    dend_12 { pt3dadd( -16.8017, -47.1302, -14.1876, 0.66 ) }
    dend_12 { pt3dadd( -17.2436, -47.5189, -15.0607, 0.66 ) }
    dend_12 { pt3dadd( -17.2704, -47.5647, -15.131, 0.66 ) }
    dend_12 { pt3dadd( -17.6563, -48.7989, -16.2662, 0.44 ) }
    dend_12 { pt3dadd( -17.6717, -48.8727, -16.3098, 0.44 ) }
    dend_12 { pt3dadd( -17.9839, -50.1244, -16.8334, 0.44 ) }
    dend_12 { pt3dadd( -18.3167, -51.2395, -17.3345, 0.59 ) }
    dend_12 { pt3dadd( -18.862, -52.9654, -18.1393, 0.88 ) }
    dend_12 { pt3dadd( -19.265, -54.1055, -18.6606, 0.88 ) }
    dend_12 { pt3dadd( -19.2934, -54.1803, -18.695, 0.88 ) }
    dend_12 { pt3dadd( -20.0762, -56.1188, -19.7088, 0.88 ) }
    dend_12 { pt3dadd( -20.8329, -57.7662, -20.678, 0.66 ) }
    dend_12 { pt3dadd( -21.3297, -58.7173, -21.277, 0.59 ) }
    dend_12 { pt3dadd( -21.6439, -59.2999, -21.6274, 0.59 ) }
    dend_12 { pt3dadd( -22.2792, -60.5275, -22.4323, 0.59 ) }
    dend_12 { pt3dadd( -22.8187, -61.6254, -23.1505, 0.22 ) }
    dend_12 { pt3dadd( -23.1294, -62.3088, -23.5872, 0.22 ) }
    dend_12 { pt3dadd( -23.496, -63.1196, -24.1332, 0.22 ) }
    dend_12 { pt3dadd( -24.0303, -64.3261, -24.9838, 0.22 ) }
    dend_12 { pt3dadd( -24.6879, -65.8924, -26.1196, 1.47 ) }
    dend_12 { pt3dadd( -24.9828, -66.6894, -26.733, 2.28 ) }
    dend_12 { pt3dadd( -25.1718, -67.2643, -27.172, 2.28 ) }
    dend_12 { pt3dadd( -25.855, -69.6884, -29.1348, 0.59 ) }
    dend_12 { pt3dadd( -26.0792, -70.6681, -30.0073, 0.59 ) }
    dend_12 { pt3dadd( -26.0903, -70.7271, -30.0712, 0.59 ) }
    dend_12 { pt3dadd( -26.3965, -72.1635, -31.5936, 0.59 ) }
    dend_12 { pt3dadd( -26.6903, -73.4253, -32.9626, 0.44 ) }
    dend_12 { pt3dadd( -26.9392, -74.4605, -34.0901, 1.55 ) }
    dend_12 { pt3dadd( -27.3275, -76.0385, -35.7479, 1.55 ) }
    dend_12 { pt3dadd( -27.9271, -78.4582, -38.3964, 0.29 ) }
    dend_12 { pt3dadd( -28.5895, -80.8426, -40.9228, 0.22 ) }
    dend_12 { pt3dadd( -28.6079, -80.9023, -40.9843, 0.22 ) }
    dend_12 { pt3dadd( -28.8036, -81.5179, -41.6133, 1.18 ) }
    dend_12 { pt3dadd( -28.968, -81.9765, -42.0343, 1.4 ) }
    dend_12 { pt3dadd( -29.6344, -83.6121, -43.3759, 0.22 ) }
    dend_12 { pt3dadd( -30.3804, -85.5168, -44.9395, 0.22 ) }
    dend_12 { pt3dadd( -30.405, -85.5918, -45.0008, 0.22 ) }
    dend_12 { pt3dadd( -30.6729, -86.3904, -45.5947, 1.84 ) }
    dend_12 { pt3dadd( -30.8378, -86.8573, -45.9046, 1.84 ) }
    dend_12 { pt3dadd( -30.8667, -86.9389, -45.954, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -31.6824, -89.3848, -47.3815, 0.22 ) }
    dend_12 { pt3dadd( -32.7447, -92.4814, -49.0828, 0.22 ) }
    dend_12 { pt3dadd( -32.8477, -92.7655, -49.2271, 0.96 ) }
    dend_12 { pt3dadd( -33.1501, -93.5681, -49.5988, 0.96 ) }
    dend_12 { pt3dadd( -33.179, -93.6437, -49.6308, 0.96 ) }
    dend_12 { pt3dadd( -33.9383, -95.5335, -50.3332, 0.22 ) }
    dend_12 { pt3dadd( -35.625, -99.4881, -51.3358, 0.22 ) }
    dend_12 { pt3dadd( -35.8564, -100.036, -51.4645, 1.55 ) }
    dend_12 { pt3dadd( -36.1461, -100.722, -51.5877, 1.84 ) }
    dend_12 { pt3dadd( -36.4652, -101.477, -51.693, 1.11 ) }
    dend_12 { pt3dadd( -36.7505, -102.15, -51.7578, 0.22 ) }
    dend_12 { pt3dadd( -38.4056, -106.116, -51.8997, 0.22 ) }
    dend_12 { pt3dadd( -38.4413, -106.209, -51.9014, 0.22 ) }
    dend_12 { pt3dadd( -39.6594, -109.607, -51.9305, 0.22 ) }
    dend_12 { pt3dadd( -39.6911, -109.701, -51.9302, 0.22 ) }
    dend_12 { pt3dadd( -39.8896, -110.328, -51.9209, 1.25 ) }
    dend_12 { pt3dadd( -40.1084, -111.114, -51.8991, 1.25 ) }
    dend_12 { pt3dadd( -40.3605, -112.241, -51.847, 0.15 ) }
    dend_12 { pt3dadd( -40.9256, -115.59, -51.9114, 0.15 ) }
    dend_12 { pt3dadd( -40.935, -115.675, -51.9173, 0.15 ) }
    dend_12 { pt3dadd( -40.9797, -116.136, -51.9647, 0.96 ) }
    dend_12 { pt3dadd( -41.0439, -116.934, -52.0731, 0.96 ) }
    dend_12 { pt3dadd( -41.0825, -117.738, -52.2385, 0.15 ) }
    dend_12 { pt3dadd( -41.1407, -121.291, -53.1738, 0.15 ) }
    dend_12 { pt3dadd( -41.1333, -121.812, -53.3311, 1.11 ) }
    dend_12 { pt3dadd( -41.1177, -122.511, -53.5409, 1.25 ) }
    dend_12 { pt3dadd( -41.1172, -122.595, -53.5641, 1.25 ) }
    dend_12 { pt3dadd( -41.1568, -126.535, -54.7061, 0.15 ) }
    dend_12 { pt3dadd( -41.1592, -126.619, -54.7298, 0.15 ) }
    dend_12 { pt3dadd( -41.1773, -127.041, -54.8701, 0.37 ) }
    dend_12 { pt3dadd( -41.2451, -127.651, -55.085, 0.37 ) }
    dend_12 { pt3dadd( -41.6289, -130.073, -56.115, 0.22 ) }
    dend_12 { pt3dadd( -41.9543, -131.78, -56.9048, 1.47 ) }
    dend_12 { pt3dadd( -42.1159, -132.497, -57.25, 1.47 ) }
    dend_12 { pt3dadd( -42.5799, -134.458, -58.2373, 0.15 ) }
    dend_12 { pt3dadd( -43.5925, -138.548, -60.3887, 0.15 ) }
    dend_12 { pt3dadd( -44.5436, -142.089, -62.3138, 0.15 ) }
    dend_12 { pt3dadd( -44.5645, -142.162, -62.3551, 0.15 ) }
    dend_12 { pt3dadd( -44.9508, -143.435, -63.0543, 0.15 ) }
    dend_12 { pt3dadd( -45.4504, -144.782, -63.7041, 1.62 ) }
    dend_12 { pt3dadd( -45.4828, -144.857, -63.734, 1.62 ) }
    dend_12 { pt3dadd( -45.9149, -145.738, -64.072, 1.62 ) }
    dend_12 { pt3dadd( -45.9565, -145.812, -64.0936, 1.62 ) }
    dend_12 { pt3dadd( -46.608, -146.911, -64.4005, 0.15 ) }
    dend_12 { pt3dadd( -49.8618, -151.867, -65.8393, 0.15 ) }
    dend_12 { pt3dadd( -49.9357, -151.973, -65.8683, 0.52 ) }
    dend_12 { pt3dadd( -49.986, -152.041, -65.8875, 0.52 ) }
    dend_12 { pt3dadd( -50.4787, -152.684, -66.0704, 0.52 ) }
    dend_12 { pt3dadd( -50.6413, -152.882, -66.1267, 0.15 ) }
    dend_12 { pt3dadd( -53.0252, -155.491, -66.8553, 0.15 ) }
    dend_12 { pt3dadd( -53.3672, -155.84, -67.064, 0.81 ) }
    dend_12 { pt3dadd( -53.8854, -156.409, -67.4755, 0.81 ) }
    dend_12 { pt3dadd( -53.9309, -156.464, -67.5258, 0.81 ) }
    dend_12 { pt3dadd( -54.1238, -156.711, -67.7809, 0.15 ) }
    dend_12 { pt3dadd( -54.166, -156.762, -67.8394, 0.15 ) }
    dend_12 { pt3dadd( -56.3666, -158.902, -70.5202, 0.15 ) }
    dend_12 { pt3dadd( -56.3666, -158.902, -70.5202, 0.44 ) }
    dend_12 { pt3dadd( -57.2486, -159.617, -71.3999, 0.22 ) }
    dend_12 { pt3dadd( -58.477, -160.586, -72.5809, 0.22 ) }
    dend_12 { pt3dadd( -60.5689, -162.175, -74.4842, 0.22 ) }
    dend_12 { pt3dadd( -63.4816, -164.242, -76.8651, 0.22 ) }
    dend_12 { pt3dadd( -63.8979, -164.502, -77.1374, 0.81 ) }
    dend_12 { pt3dadd( -64.4628, -164.846, -77.4912, 0.81 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.60184, -34.9149, -1.95146, 2.28 ) }
    dend_7 { pt3dadd( -9.57641, -35.2221, -1.84268, 2.28 ) }
    dend_7 { pt3dadd( -9.5704, -35.2828, -1.82272, 2.28 ) }
    dend_7 { pt3dadd( -9.46732, -36.3384, -1.5042, 1.62 ) }
    dend_7 { pt3dadd( -9.34085, -37.6788, -1.14693, 1.4 ) }
    dend_7 { pt3dadd( -9.21283, -38.9088, -0.848677, 1.55 ) }
    dend_7 { pt3dadd( -9.09396, -40.0119, -0.592456, 1.55 ) }
    dend_7 { pt3dadd( -8.99743, -40.7767, -0.426757, 1.55 ) }
    dend_7 { pt3dadd( -8.88177, -41.6222, -0.254449, 1.33 ) }
    dend_7 { pt3dadd( -8.61426, -43.3885, 0.0755669, 1.18 ) }
    dend_7 { pt3dadd( -8.32266, -45.3993, 0.421323, 1.18 ) }
    dend_7 { pt3dadd( -8.31458, -45.462, 0.432108, 1.18 ) }
    dend_7 { pt3dadd( -8.05035, -47.7422, 0.827655, 1.18 ) }
    dend_7 { pt3dadd( -8.04489, -47.805, 0.839683, 1.18 ) }
    dend_7 { pt3dadd( -7.95177, -49.3549, 1.15664, 0.88 ) }
    dend_7 { pt3dadd( -7.87355, -52.7855, 1.87791, 0.88 ) }
    dend_7 { pt3dadd( -7.88695, -53.5028, 2.02682, 1.18 ) }
    dend_7 { pt3dadd( -7.93446, -54.4891, 2.22595, 1.4 ) }
    dend_7 { pt3dadd( -8.05497, -55.8832, 2.50184, 1.4 ) }
    dend_7 { pt3dadd( -8.17317, -57.0667, 2.7276, 1.47 ) }
    dend_7 { pt3dadd( -8.28311, -58.0009, 2.89626, 1.77 ) }
    dend_7 { pt3dadd( -8.37325, -58.9292, 3.04302, 1.77 ) }
    dend_7 { pt3dadd( -8.44327, -59.9235, 3.1879, 1.92 ) }
    dend_7 { pt3dadd( -8.44488, -59.987, 3.19634, 1.92 ) }
    dend_7 { pt3dadd( -8.40237, -60.986, 3.31768, 1.55 ) }
    dend_7 { pt3dadd( -8.26178, -62.2376, 3.50437, 1.47 ) }
    dend_7 { pt3dadd( -7.88598, -64.3356, 3.86965, 1.11 ) }
    dend_7 { pt3dadd( -7.86959, -64.4058, 3.88342, 1.11 ) }
    dend_7 { pt3dadd( -7.65442, -65.1981, 4.05092, 0.96 ) }
    dend_7 { pt3dadd( -7.39369, -66.0569, 4.22473, 1.18 ) }
    dend_7 { pt3dadd( -7.02705, -67.0989, 4.43156, 1.47 ) }
    dend_7 { pt3dadd( -6.47279, -68.5092, 4.67077, 0.96 ) }
    dend_7 { pt3dadd( -6.10162, -69.4173, 4.79183, 1.11 ) }
    dend_7 { pt3dadd( -6.07886, -69.4772, 4.79773, 1.11 ) }
    dend_7 { pt3dadd( -5.77133, -70.3969, 4.85306, 1.4 ) }
    dend_7 { pt3dadd( -5.47135, -71.5995, 4.92772, 1.84 ) }
    dend_7 { pt3dadd( -5.32366, -72.5266, 4.99653, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( -5.26712, -73.2005, 5.05801, 2.14 ) }
    dend_7 { pt3dadd( -5.2644, -73.8626, 5.14949, 1.99 ) }
    dend_7 { pt3dadd( -5.33168, -74.7938, 5.29785, 1.18 ) }
    dend_7 { pt3dadd( -5.59737, -76.3741, 5.55333, 1.03 ) }
    dend_7 { pt3dadd( -5.93029, -77.8608, 5.77468, 0.88 ) }
    dend_7 { pt3dadd( -6.22366, -79.1642, 5.9577, 0.74 ) }
    dend_7 { pt3dadd( -6.53605, -80.6455, 6.14825, 0.59 ) }
    dend_7 { pt3dadd( -6.81914, -82.2952, 6.34225, 0.59 ) }
    dend_7 { pt3dadd( -7.02321, -84.1176, 6.54163, 0.59 ) }
    dend_7 { pt3dadd( -7.13087, -85.9683, 6.76948, 0.59 ) }
    dend_7 { pt3dadd( -7.09967, -87.6018, 7.03347, 0.59 ) }
    dend_7 { pt3dadd( -7.03596, -88.2428, 7.15724, 1.18 ) }
    dend_7 { pt3dadd( -6.70207, -90.1687, 7.55621, 1.18 ) }
    dend_7 { pt3dadd( -6.28958, -91.9093, 7.97, 0.88 ) }
    dend_7 { pt3dadd( -5.94763, -93.1282, 8.29328, 1.25 ) }
    dend_7 { pt3dadd( -5.04143, -96.3297, 9.17265, 1.25 ) }
    dend_7 { pt3dadd( -4.66963, -97.7312, 9.5506, 0.81 ) }
    dend_7 { pt3dadd( -4.4471, -98.6337, 9.77867, 1.47 ) }
    dend_7 { pt3dadd( -4.21692, -99.6721, 10.018, 1.84 ) }
    dend_7 { pt3dadd( -4.07496, -100.399, 10.163, 2.14 ) }
    dend_7 { pt3dadd( -3.91979, -101.451, 10.3192, 0.74 ) }
    dend_7 { pt3dadd( -3.80435, -103.854, 10.6067, 0.52 ) }
    dend_7 { pt3dadd( -3.82874, -104.991, 10.7202, 0.52 ) }
    dend_7 { pt3dadd( -3.85275, -105.496, 10.768, 0.88 ) }
    dend_7 { pt3dadd( -3.88226, -105.965, 10.8059, 1.18 ) }
    dend_7 { pt3dadd( -4.00415, -107.55, 10.9113, 1.18 ) }
    dend_7 { pt3dadd( -4.11626, -109.0, 11.0075, 0.66 ) }
    dend_7 { pt3dadd( -4.25718, -110.742, 11.1208, 0.59 ) }
    dend_7 { pt3dadd( -4.37091, -112.606, 11.2553, 0.88 ) }
    dend_7 { pt3dadd( -4.38205, -113.076, 11.2956, 1.33 ) }
    dend_7 { pt3dadd( -4.37147, -114.511, 11.4345, 1.33 ) }
    dend_7 { pt3dadd( -4.26453, -116.457, 11.6314, 1.33 ) }
    dend_7 { pt3dadd( -4.15959, -117.656, 11.7508, 1.62 ) }
    dend_7 { pt3dadd( -4.02701, -118.983, 11.8736, 1.62 ) }
    dend_7 { pt3dadd( -3.86393, -120.227, 11.9586, 1.55 ) }
    dend_7 { pt3dadd( -3.85211, -120.3, 11.9624, 1.55 ) }
    dend_7 { pt3dadd( -3.6656, -121.248, 12.0011, 1.11 ) }
    dend_7 { pt3dadd( -3.30242, -122.985, 12.039, 0.66 ) }
    dend_7 { pt3dadd( -2.95563, -124.632, 12.0321, 0.66 ) }
    dend_7 { pt3dadd( -2.75287, -125.72, 12.0048, 1.47 ) }
    dend_7 { pt3dadd( -2.74312, -125.793, 12.0021, 1.47 ) }
    dend_7 { pt3dadd( -2.6064, -127.127, 11.9516, 1.47 ) }
    dend_7 { pt3dadd( -2.60125, -127.191, 11.9476, 1.47 ) }
    dend_7 { pt3dadd( -2.5275, -128.607, 11.8123, 1.77 ) }
    dend_7 { pt3dadd( -2.46093, -129.734, 11.668, 2.21 ) }
    dend_7 { pt3dadd( -2.39663, -130.878, 11.5227, 2.21 ) }
    dend_7 { pt3dadd( -2.39343, -130.932, 11.5164, 2.21 ) }
    dend_7 { pt3dadd( -2.28026, -132.746, 11.3654, 2.36 ) }
    dend_7 { pt3dadd( -2.18208, -134.365, 11.2796, 2.36 ) }
    dend_7 { pt3dadd( -2.09987, -135.937, 11.2314, 1.99 ) }
    dend_7 { pt3dadd( -2.04748, -137.071, 11.2166, 1.03 ) }
    dend_7 { pt3dadd( -1.97733, -139.818, 11.2302, 0.66 ) }
    dend_7 { pt3dadd( -1.96784, -142.976, 11.3105, 0.66 ) }
    dend_7 { pt3dadd( -1.99603, -144.312, 11.3796, 0.81 ) }
    dend_7 { pt3dadd( -2.0245, -145.202, 11.4385, 0.96 ) }
    dend_7 { pt3dadd( -2.07853, -146.074, 11.5325, 0.74 ) }
    dend_7 { pt3dadd( -2.19558, -147.858, 11.7664, 0.74 ) }
    dend_7 { pt3dadd( -2.26054, -148.781, 11.9115, 1.11 ) }
    dend_7 { pt3dadd( -2.26502, -148.853, 11.9231, 1.11 ) }
    dend_7 { pt3dadd( -2.30113, -149.915, 12.0713, 1.4 ) }
    dend_7 { pt3dadd( -2.32306, -152.046, 12.3287, 1.4 ) }
    dend_7 { pt3dadd( -2.30594, -154.322, 12.5576, 1.18 ) }
    dend_7 { pt3dadd( -2.30428, -154.386, 12.563, 1.18 ) }
    dend_7 { pt3dadd( -2.2097, -156.578, 12.6336, 0.74 ) }
    dend_7 { pt3dadd( -2.15709, -157.406, 12.6267, 1.18 ) }
    dend_7 { pt3dadd( -2.08157, -158.155, 12.5743, 1.62 ) }
    dend_7 { pt3dadd( -1.92083, -159.268, 12.3979, 1.77 ) }
    dend_7 { pt3dadd( -1.73578, -160.373, 12.188, 1.77 ) }
    dend_7 { pt3dadd( -1.45598, -161.907, 11.8999, 0.59 ) }
    dend_7 { pt3dadd( -0.973612, -164.254, 11.4516, 0.59 ) }
    dend_7 { pt3dadd( -0.525659, -166.352, 11.0692, 0.59 ) }
    dend_7 { pt3dadd( -0.175986, -167.954, 10.7946, 0.59 ) }
    dend_7 { pt3dadd( 3.41594E-4, -168.775, 10.6595, 1.62 ) }
    dend_7 { pt3dadd( 0.244386, -170.041, 10.4709, 1.77 ) }
    dend_7 { pt3dadd( 0.697889, -172.757, 10.1511, 1.77 ) }
    dend_7 { pt3dadd( 0.836978, -173.704, 10.0518, 1.03 ) }
    dend_7 { pt3dadd( 1.03385, -175.442, 9.93741, 0.66 ) }
    dend_7 { pt3dadd( 1.18236, -177.14, 9.88718, 0.29 ) }
    dend_7 { pt3dadd( 1.24864, -178.262, 9.8722, 0.29 ) }
    dend_7 { pt3dadd( 1.26964, -179.033, 9.87969, 0.29 ) }
    dend_7 { pt3dadd( 1.25462, -179.563, 9.91156, 1.03 ) }
    dend_7 { pt3dadd( 1.20991, -180.368, 9.9727, 1.25 ) }
    dend_7 { pt3dadd( 1.10157, -181.447, 10.0785, 1.25 ) }
    dend_7 { pt3dadd( 0.982628, -182.36, 10.1996, 0.37 ) }
    dend_7 { pt3dadd( 0.973638, -182.432, 10.209, 0.37 ) }
    dend_7 { pt3dadd( 0.727271, -184.174, 10.3966, 0.29 ) }
    dend_7 { pt3dadd( 0.717678, -184.246, 10.4004, 0.29 ) }
    dend_7 { pt3dadd( 0.650652, -184.81, 10.409, 1.33 ) }
    dend_7 { pt3dadd( 0.525321, -185.877, 10.4042, 2.21 ) }
    dend_7 { pt3dadd( 0.375032, -187.345, 10.3685, 2.21 ) }
    dend_7 { pt3dadd( 0.211951, -189.109, 10.3185, 1.84 ) }
    dend_7 { pt3dadd( 0.0824256, -190.766, 10.2553, 1.4 ) }
    dend_7 { pt3dadd( -0.0174388, -192.163, 10.1952, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -85.0536, -18.2617, 3.32066, 0.66 ) }
    dend_3 { pt3dadd( -86.6822, -19.2166, 5.63485, 0.66 ) }
    dend_3 { pt3dadd( -86.7309, -19.2455, 5.70806, 0.66 ) }
    dend_3 { pt3dadd( -87.2082, -19.6084, 6.71955, 0.22 ) }
    dend_3 { pt3dadd( -87.4171, -19.6785, 7.30079, 0.22 ) }
    dend_3 { pt3dadd( -87.7871, -19.7636, 8.25263, 0.22 ) }
    dend_3 { pt3dadd( -87.8219, -19.7702, 8.33857, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_3 { pt3dadd( -88.2081, -19.8277, 9.28103, 1.11 ) }
    dend_3 { pt3dadd( -88.9108, -19.9101, 11.046, 2.06 ) }
    dend_3 { pt3dadd( -90.3024, -20.2082, 15.0034, 0.22 ) }
    dend_3 { pt3dadd( -90.6074, -20.2858, 15.8848, 0.22 ) }
    dend_3 { pt3dadd( -90.6374, -20.2944, 15.9723, 0.22 ) }
    dend_3 { pt3dadd( -90.7815, -20.3684, 16.4266, 0.22 ) }
    dend_3 { pt3dadd( -90.8098, -20.3956, 16.5248, 0.22 ) }
    dend_3 { pt3dadd( -91.0696, -21.2027, 18.3437, 0.22 ) }
    dend_3 { pt3dadd( -91.0639, -21.2608, 18.4142, 0.22 ) }
    dend_3 { pt3dadd( -91.0079, -21.7457, 19.0739, 0.66 ) }
    dend_3 { pt3dadd( -90.9938, -22.0085, 19.5214, 0.66 ) }
    dend_3 { pt3dadd( -90.9977, -22.0564, 19.6149, 0.66 ) }
    dend_3 { pt3dadd( -91.2101, -22.8056, 21.2008, 0.22 ) }
    dend_3 { pt3dadd( -91.5437, -23.4009, 22.5353, 0.22 ) }
    dend_3 { pt3dadd( -91.5657, -23.453, 22.6076, 0.22 ) }
    dend_3 { pt3dadd( -91.8501, -24.1801, 23.5302, 0.74 ) }
    dend_3 { pt3dadd( -92.0355, -24.7141, 24.163, 1.03 ) }
    dend_3 { pt3dadd( -92.1158, -24.992, 24.477, 1.03 ) }
    dend_3 { pt3dadd( -92.1766, -25.4235, 24.8993, 0.15 ) }
    dend_3 { pt3dadd( -92.2509, -27.4993, 26.8895, 0.15 ) }
    dend_3 { pt3dadd( -92.2058, -28.7759, 28.1606, 1.03 ) }
    dend_3 { pt3dadd( -92.1498, -29.382, 28.7705, 1.47 ) }
    dend_3 { pt3dadd( -92.0336, -30.0728, 29.5043, 0.22 ) }
    dend_3 { pt3dadd( -91.6315, -31.824, 31.4295, 0.22 ) }
    dend_3 { pt3dadd( -91.6054, -31.9073, 31.5251, 0.22 ) }
    dend_3 { pt3dadd( -91.201, -32.8132, 32.9106, 0.22 ) }
    dend_3 { pt3dadd( -91.1805, -32.8597, 32.9872, 0.22 ) }
    dend_3 { pt3dadd( -91.0285, -33.2053, 33.7107, 1.11 ) }
    dend_3 { pt3dadd( -90.975, -33.3437, 34.0628, 1.11 ) }
    dend_3 { pt3dadd( -90.9566, -33.4047, 34.2502, 1.11 ) }
    dend_3 { pt3dadd( -90.6316, -34.7108, 37.0371, 0.22 ) }
    dend_3 { pt3dadd( -90.508, -35.2451, 38.0551, 0.22 ) }
    dend_3 { pt3dadd( -90.4833, -35.3416, 38.2517, 0.81 ) }
    dend_3 { pt3dadd( -90.4193, -35.6076, 38.7983, 0.81 ) }
    dend_3 { pt3dadd( -90.3288, -36.1077, 39.877, 0.15 ) }
    dend_3 { pt3dadd( -90.253, -36.923, 41.5596, 0.15 ) }
    dend_3 { pt3dadd( -90.2266, -37.5003, 42.6547, 0.88 ) }
    dend_3 { pt3dadd( -90.2472, -38.476, 44.6868, 1.55 ) }
    dend_3 { pt3dadd( -90.3031, -38.7964, 45.4271, 1.92 ) }
    dend_3 { pt3dadd( -90.6161, -39.3412, 47.6037, 0.15 ) }
    dend_3 { pt3dadd( -90.7554, -39.443, 48.3458, 0.15 ) }
    dend_3 { pt3dadd( -90.8121, -39.4827, 48.629, 0.59 ) }
    dend_3 { pt3dadd( -90.855, -39.5195, 48.8408, 0.59 ) }
    dend_3 { pt3dadd( -91.2321, -39.8465, 50.7344, 0.59 ) }
    dend_3 { pt3dadd( -91.8865, -40.7911, 55.1521, 0.22 ) }
    dend_3 { pt3dadd( -91.8956, -40.8141, 55.2412, 0.22 ) }
    dend_3 { pt3dadd( -92.0429, -41.652, 58.1218, 0.22 ) }
    dend_3 { pt3dadd( -92.0462, -41.6832, 58.2226, 0.52 ) }
    dend_3 { pt3dadd( -92.0461, -41.7148, 58.3093, 0.52 ) }
    dend_3 { pt3dadd( -91.8392, -42.9349, 60.5245, 0.15 ) }
    dend_3 { pt3dadd( -91.8273, -42.9989, 60.5887, 0.15 ) }
    dend_3 { pt3dadd( -91.577, -44.25, 62.0106, 1.18 ) }
    dend_3 { pt3dadd( -94.1165, -49.4299, 73.8454, 1.18 ) }
    dend_3 { pt3dadd( -96.7101, -51.6923, 86.6318, 1.18 ) }
    dend_3 { pt3dadd( -98.0401, -54.9896, 99.3582, 1.18 ) }
    dend_3 { pt3dadd( -101.87, -60.5084, 110.677, 1.18 ) }
    dend_3 { pt3dadd( -107.471, -67.4943, 120.289, 1.18 ) }
    dend_3 { pt3dadd( -110.327, -75.391, 130.336, 1.18 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 58/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -85.0536, -18.2617, 3.32066, 0.22 ) }
    dend_2 { pt3dadd( -86.1089, -18.7486, 3.33229, 0.22 ) }
    dend_2 { pt3dadd( -86.1596, -18.7722, 3.33355, 0.22 ) }
    dend_2 { pt3dadd( -87.0823, -19.1845, 3.36588, 0.22 ) }
    dend_2 { pt3dadd( -87.3787, -19.3125, 3.37762, 0.81 ) }
    dend_2 { pt3dadd( -87.7305, -19.4512, 3.39772, 0.81 ) }
    dend_2 { pt3dadd( -87.795, -19.4764, 3.39969, 0.81 ) }
    dend_2 { pt3dadd( -88.0001, -19.5496, 3.40546, 0.81 ) }
    dend_2 { pt3dadd( -88.4981, -19.7273, 3.41183, 0.15 ) }
    dend_2 { pt3dadd( -88.5972, -19.7623, 3.41177, 0.15 ) }
    dend_2 { pt3dadd( -90.5609, -20.4686, 3.42645, 0.15 ) }
    dend_2 { pt3dadd( -90.9729, -20.6208, 3.42498, 0.81 ) }
    dend_2 { pt3dadd( -91.2653, -20.7297, 3.42207, 0.96 ) }
    dend_2 { pt3dadd( -91.5245, -20.8272, 3.41825, 0.96 ) }
    dend_2 { pt3dadd( -92.1908, -21.083, 3.40862, 0.15 ) }
    dend_2 { pt3dadd( -93.4967, -21.6162, 3.42483, 0.15 ) }
    dend_2 { pt3dadd( -93.779, -21.732, 3.45165, 0.74 ) }
    dend_2 { pt3dadd( -94.1194, -21.8669, 3.50399, 1.11 ) }
    dend_2 { pt3dadd( -94.2694, -21.9261, 3.53195, 1.11 ) }
    dend_2 { pt3dadd( -94.763, -22.1051, 3.65799, 0.22 ) }
    dend_2 { pt3dadd( -96.6454, -22.643, 4.20443, 0.15 ) }
    dend_2 { pt3dadd( -97.5004, -22.8218, 4.4613, 1.33 ) }
    dend_2 { pt3dadd( -97.7944, -22.8659, 4.54357, 1.62 ) }
    dend_2 { pt3dadd( -97.8485, -22.8704, 4.55772, 1.62 ) }
    dend_2 { pt3dadd( -98.826, -22.8949, 4.78878, 0.15 ) }
    dend_2 { pt3dadd( -100.655, -22.8261, 5.16796, 0.15 ) }
    dend_2 { pt3dadd( -101.281, -22.7635, 5.26643, 0.66 ) }
    dend_2 { pt3dadd( -102.109, -22.6938, 5.35304, 0.66 ) }
    dend_2 { pt3dadd( -102.884, -22.6378, 5.42071, 1.69 ) }
    dend_2 { pt3dadd( -103.353, -22.6091, 5.45105, 2.14 ) }
    dend_2 { pt3dadd( -103.556, -22.6024, 5.45626, 2.14 ) }
    dend_2 { pt3dadd( -104.398, -22.6006, 5.49453, 0.15 ) }
    dend_2 { pt3dadd( -105.239, -22.6413, 5.54166, 0.15 ) }
    dend_2 { pt3dadd( -105.392, -22.6613, 5.54563, 0.81 ) }
    dend_2 { pt3dadd( -105.432, -22.6723, 5.54483, 0.81 ) }
    dend_2 { pt3dadd( -105.845, -22.8261, 5.51658, 1.11 ) }
    dend_2 { pt3dadd( -106.179, -22.978, 5.48504, 0.66 ) }
    dend_2 { pt3dadd( -106.271, -23.0276, 5.47464, 0.66 ) }
    dend_2 { pt3dadd( -106.735, -23.3084, 5.42292, 0.15 ) }
    dend_2 { pt3dadd( -108.155, -24.1962, 5.2915, 0.15 ) }
    dend_2 { pt3dadd( -108.774, -24.5937, 5.24328, 1.62 ) }
    dend_2 { pt3dadd( -109.079, -24.7943, 5.22597, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_2 { pt3dadd( -109.289, -24.9365, 5.2133, 1.99 ) }
    dend_2 { pt3dadd( -109.879, -25.3211, 5.18062, 0.15 ) }
    dend_2 { pt3dadd( -110.367, -25.6216, 5.14542, 0.29 ) }
    dend_2 { pt3dadd( -110.49, -25.6947, 5.13016, 0.59 ) }
    dend_2 { pt3dadd( -110.815, -25.8747, 5.08917, 0.59 ) }
    dend_2 { pt3dadd( -111.337, -26.1472, 5.01443, 0.22 ) }
    dend_2 { pt3dadd( -111.828, -26.4076, 4.90542, 0.22 ) }
    dend_2 { pt3dadd( -113.156, -27.1141, 4.5735, 0.15 ) }
    dend_2 { pt3dadd( -113.441, -27.2671, 4.49859, 0.74 ) }
    dend_2 { pt3dadd( -113.795, -27.4553, 4.40728, 0.74 ) }
    dend_2 { pt3dadd( -114.034, -27.5815, 4.34814, 0.74 ) }
    dend_2 { pt3dadd( -114.892, -28.0311, 4.16569, 0.15 ) }
    dend_2 { pt3dadd( -116.203, -28.7665, 3.81786, 0.15 ) }
    dend_2 { pt3dadd( -116.25, -28.7934, 3.8031, 0.15 ) }
    dend_2 { pt3dadd( -116.471, -28.9162, 3.72669, 0.59 ) }
    dend_2 { pt3dadd( -116.647, -29.0112, 3.66206, 0.88 ) }
    dend_2 { pt3dadd( -116.949, -29.1479, 3.5677, 1.18 ) }
    dend_2 { pt3dadd( -117.778, -29.4401, 3.42274, 1.18 ) }
    dend_2 { pt3dadd( -117.825, -29.4547, 3.41443, 1.18 ) }
    dend_2 { pt3dadd( -118.318, -29.6065, 3.34607, 0.15 ) }
    dend_2 { pt3dadd( -118.365, -29.6204, 3.34135, 0.15 ) }
    dend_2 { pt3dadd( -119.404, -29.9246, 3.27085, 0.15 ) }
    dend_2 { pt3dadd( -120.515, -30.319, 3.28933, 0.15 ) }
    dend_2 { pt3dadd( -120.567, -30.3391, 3.29362, 0.15 ) }
    dend_2 { pt3dadd( -120.815, -30.4452, 3.31664, 0.66 ) }
    dend_2 { pt3dadd( -121.009, -30.5392, 3.33741, 0.66 ) }
    dend_2 { pt3dadd( -121.176, -30.6283, 3.35804, 0.22 ) }
    dend_2 { pt3dadd( -122.809, -31.6366, 3.60495, 0.22 ) }
    dend_2 { pt3dadd( -122.85, -31.6633, 3.61177, 0.22 ) }
    dend_2 { pt3dadd( -123.086, -31.8309, 3.65824, 0.74 ) }
    dend_2 { pt3dadd( -123.321, -32.012, 3.70067, 1.03 ) }
    dend_2 { pt3dadd( -123.57, -32.217, 3.74328, 1.03 ) }
    dend_2 { pt3dadd( -123.74, -32.3648, 3.77139, 1.03 ) }
    dend_2 { pt3dadd( -124.057, -32.6566, 3.80303, 0.15 ) }
    dend_2 { pt3dadd( -125.007, -33.5346, 3.88617, 0.15 ) }
    dend_2 { pt3dadd( -125.395, -33.8963, 3.89457, 0.37 ) }
    dend_2 { pt3dadd( -125.634, -34.1184, 3.89045, 0.37 ) }
    dend_2 { pt3dadd( -125.753, -34.2262, 3.88524, 0.37 ) }
    dend_2 { pt3dadd( -126.552, -34.9471, 3.84444, 0.15 ) }
    dend_2 { pt3dadd( -127.216, -35.5532, 3.78837, 0.15 ) }
    dend_2 { pt3dadd( -127.741, -36.0524, 3.74564, 0.15 ) }
    dend_2 { pt3dadd( -128.101, -36.415, 3.72409, 1.4 ) }
    dend_2 { pt3dadd( -128.302, -36.6355, 3.71248, 1.77 ) }
    dend_2 { pt3dadd( -128.676, -37.0822, 3.69762, 2.06 ) }
    dend_2 { pt3dadd( -129.132, -37.7457, 3.7208, 0.15 ) }
    dend_2 { pt3dadd( -129.559, -38.4926, 3.75725, 0.15 ) }
    dend_2 { pt3dadd( -129.714, -38.8114, 3.78659, 0.59 ) }
    dend_2 { pt3dadd( -129.821, -39.0607, 3.81005, 0.74 ) }
    dend_2 { pt3dadd( -129.92, -39.309, 3.83591, 0.74 ) }
    dend_2 { pt3dadd( -130.305, -40.3597, 3.84669, 0.15 ) }
    dend_2 { pt3dadd( -130.531, -40.9401, 3.82444, 1.25 ) }
    dend_2 { pt3dadd( -130.73, -41.4249, 3.77755, 1.62 ) }
    dend_2 { pt3dadd( -130.814, -41.6191, 3.73889, 1.62 ) }
    dend_2 { pt3dadd( -130.915, -41.8418, 3.67753, 0.15 ) }
    dend_2 { pt3dadd( -131.608, -43.277, 3.2016, 0.15 ) }
    dend_2 { pt3dadd( -132.15, -44.3389, 2.85085, 0.15 ) }
    dend_2 { pt3dadd( -132.168, -44.3745, 2.83945, 0.15 ) }
    dend_2 { pt3dadd( -132.686, -45.3726, 2.51748, 1.4 ) }
    dend_2 { pt3dadd( -132.898, -45.7846, 2.39503, 1.69 ) }
    dend_2 { pt3dadd( -133.169, -46.2922, 2.29972, 0.22 ) }
    dend_2 { pt3dadd( -133.921, -47.524, 2.31988, 0.22 ) }
    dend_2 { pt3dadd( -134.535, -48.4262, 2.4769, 0.15 ) }
    dend_2 { pt3dadd( -134.733, -48.7065, 2.55036, 1.33 ) }
    dend_2 { pt3dadd( -134.945, -48.9839, 2.671, 1.55 ) }
    dend_2 { pt3dadd( -136.003, -50.2641, 3.36723, 0.22 ) }
    dend_2 { pt3dadd( -136.666, -50.9356, 3.93856, 0.22 ) }
    dend_2 { pt3dadd( -136.985, -51.1293, 4.3323, 1.84 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 67/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 38.4477, 23.2868, 23.403, 0.22 ) }
    dend_58 { pt3dadd( 37.4459, 28.5695, 15.098, 0.22 ) }
    dend_58 { pt3dadd( 37.7692, 33.5499, 6.54733, 0.22 ) }
    dend_58 { pt3dadd( 38.5034, 38.5702, -1.95422, 0.22 ) }
    dend_58 { pt3dadd( 37.5924, 43.8717, -10.2574, 0.22 ) }
    dend_58 { pt3dadd( 38.805, 49.977, -17.9287, 0.22 ) }
    dend_58 { pt3dadd( 40.514, 55.8489, -25.6945, 0.22 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 74/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 38.4477, 23.2868, 23.403, 0.29 ) }
    dend_57 { pt3dadd( 37.4884, 25.6079, 26.8608, 0.22 ) }
    dend_57 { pt3dadd( 36.5786, 27.8255, 30.4025, 0.22 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 77/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 8.78675, 107.629, 34.0694, 0.37 ) }
    dend_48 { pt3dadd( 8.97513, 106.961, 34.2536, 0.37 ) }
    dend_48 { pt3dadd( 9.1494, 106.344, 34.424, 0.37 ) }
    dend_48 { pt3dadd( 9.17136, 106.266, 34.4454, 0.37 ) }
    dend_48 { pt3dadd( 11.3899, 95.7378, 39.7204, 0.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 82/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 8.78675, 107.629, 34.0694, 0.29 ) }
    dend_45 { pt3dadd( 8.21534, 108.062, 34.0462, 0.29 ) }
    dend_45 { pt3dadd( 7.62904, 108.508, 34.0224, 0.22 ) }
    dend_45 { pt3dadd( 7.37833, 108.698, 34.0122, 0.22 ) }
    dend_45 { pt3dadd( 6.89765, 109.063, 33.9927, 0.22 ) }
    dend_45 { pt3dadd( 6.61832, 109.275, 33.9814, 0.22 ) }
    dend_45 { pt3dadd( 5.91726, 109.808, 33.9529, 0.22 ) }
    dend_45 { pt3dadd( -2.70902, 117.569, 35.2193, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 90/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -97.7379, 15.7956, -12.1757, 0.29 ) }
    dend_36 { pt3dadd( -97.6842, 14.4876, -11.4357, 0.29 ) }
    dend_36 { pt3dadd( -97.6824, 14.4146, -11.3897, 0.29 ) }
    dend_36 { pt3dadd( -97.7022, 12.3002, -9.99952, 0.29 ) }
    dend_36 { pt3dadd( -97.7635, 10.9651, -9.10197, 0.29 ) }
    dend_36 { pt3dadd( -97.7673, 10.9115, -9.06558, 0.29 ) }
    dend_36 { pt3dadd( -98.1095, 8.21462, -7.0705, 0.22 ) }
    dend_36 { pt3dadd( -98.1329, 8.12188, -6.99499, 0.22 ) }
    dend_36 { pt3dadd( -98.4249, 7.21864, -6.22448, 0.22 ) }
    dend_36 { pt3dadd( -98.5507, 6.90909, -5.93758, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_36 { pt3dadd( -98.7036, 6.57546, -5.62242, 1.55 ) }
    dend_36 { pt3dadd( -99.5582, 4.7946, -3.98746, 0.22 ) }
    dend_36 { pt3dadd( -100.803, 2.48597, -2.00827, 0.15 ) }
    dend_36 { pt3dadd( -100.849, 2.4004, -1.93395, 0.59 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -97.7379, 15.7956, -12.1757, 0.22 ) }
    dend_35 { pt3dadd( -99.0503, 17.1473, -12.4388, 0.22 ) }
    dend_35 { pt3dadd( -100.84, 18.9719, -12.6532, 0.22 ) }
    dend_35 { pt3dadd( -101.755, 19.9006, -12.7189, 0.22 ) }
    dend_35 { pt3dadd( -101.806, 19.9512, -12.7208, 0.22 ) }
    dend_35 { pt3dadd( -101.87, 20.014, -12.7218, 0.59 ) }
    dend_35 { pt3dadd( -102.217, 20.3368, -12.7205, 0.59 ) }
    dend_35 { pt3dadd( -103.315, 21.1714, -12.7012, 0.15 ) }
    dend_35 { pt3dadd( -103.363, 21.1961, -12.6909, 0.15 ) }
    dend_35 { pt3dadd( -103.801, 21.3761, -12.5753, 1.11 ) }
    dend_35 { pt3dadd( -103.852, 21.3909, -12.5631, 1.11 ) }
    dend_35 { pt3dadd( -104.704, 21.524, -12.3797, 2.06 ) }
    dend_35 { pt3dadd( -105.408, 21.5665, -12.239, 2.36 ) }
    dend_35 { pt3dadd( -106.697, 21.5749, -11.9322, 0.15 ) }
    dend_35 { pt3dadd( -106.819, 21.5749, -11.8974, 0.15 ) }
    dend_35 { pt3dadd( -108.034, 21.5604, -11.5273, 0.15 ) }
    dend_35 { pt3dadd( -109.207, 21.5732, -11.1815, 0.15 ) }
    dend_35 { pt3dadd( -109.278, 21.5772, -11.1643, 0.15 ) }
    dend_35 { pt3dadd( -110.42, 21.7057, -10.8967, 0.74 ) }
    dend_35 { pt3dadd( -111.195, 21.8182, -10.742, 0.74 ) }
    dend_35 { pt3dadd( -111.9, 21.9419, -10.6094, 0.15 ) }
    dend_35 { pt3dadd( -113.671, 22.3247, -10.305, 0.15 ) }
    dend_35 { pt3dadd( -115.919, 22.9222, -9.88466, 0.15 ) }
    dend_35 { pt3dadd( -116.992, 23.2295, -9.67954, 1.4 ) }
    dend_35 { pt3dadd( -117.497, 23.384, -9.59241, 1.77 ) }
    dend_35 { pt3dadd( -117.995, 23.5535, -9.4939, 1.77 ) }
    dend_35 { pt3dadd( -118.882, 23.8854, -9.29585, 0.22 ) }
    dend_35 { pt3dadd( -120.251, 24.4312, -8.99525, 0.22 ) }
    dend_35 { pt3dadd( -120.317, 24.4586, -8.98133, 0.22 ) }
    dend_35 { pt3dadd( -121.808, 25.0719, -8.69132, 0.22 ) }
    dend_35 { pt3dadd( -121.971, 25.1396, -8.65852, 0.88 ) }
    dend_35 { pt3dadd( -122.526, 25.371, -8.55015, 1.03 ) }
    dend_35 { pt3dadd( -124.102, 25.9809, -8.30906, 0.22 ) }
    dend_35 { pt3dadd( -124.154, 25.9984, -8.30403, 0.22 ) }
    dend_35 { pt3dadd( -124.76, 26.214, -8.23943, 0.22 ) }
    dend_35 { pt3dadd( -125.02, 26.3108, -8.20729, 0.44 ) }
    dend_35 { pt3dadd( -125.287, 26.4123, -8.17719, 0.44 ) }
    dend_35 { pt3dadd( -126.55, 26.9058, -8.18908, 0.15 ) }
    dend_35 { pt3dadd( -126.633, 26.9379, -8.20143, 0.44 ) }
    dend_35 { pt3dadd( -127.074, 27.0845, -8.33692, 0.44 ) }
    dend_35 { pt3dadd( -127.318, 27.1544, -8.43555, 0.44 ) }
    dend_35 { pt3dadd( -127.374, 27.1696, -8.46054, 0.15 ) }
    dend_35 { pt3dadd( -128.747, 27.5331, -9.09696, 0.15 ) }
    dend_35 { pt3dadd( -128.794, 27.5457, -9.12022, 0.15 ) }
    dend_35 { pt3dadd( -129.988, 27.898, -9.65985, 0.15 ) }
    dend_35 { pt3dadd( -130.513, 28.0517, -9.90627, 1.03 ) }
    dend_35 { pt3dadd( -130.936, 28.1793, -10.1045, 1.33 ) }
    dend_35 { pt3dadd( -131.623, 28.3933, -10.4088, 0.15 ) }
    dend_35 { pt3dadd( -131.678, 28.4108, -10.4349, 0.15 ) }
    dend_35 { pt3dadd( -132.847, 28.7958, -11.04, 0.15 ) }
    dend_35 { pt3dadd( -133.526, 29.0502, -11.4226, 0.66 ) }
    dend_35 { pt3dadd( -133.809, 29.1597, -11.601, 0.81 ) }
    dend_35 { pt3dadd( -134.286, 29.3417, -11.9522, 0.15 ) }
    dend_35 { pt3dadd( -135.142, 29.7024, -12.6855, 0.15 ) }
    dend_35 { pt3dadd( -135.212, 29.7349, -12.7519, 0.15 ) }
    dend_35 { pt3dadd( -135.776, 30.0621, -13.4991, 0.15 ) }
    dend_35 { pt3dadd( -135.818, 30.0986, -13.5683, 0.15 ) }
    dend_35 { pt3dadd( -136.129, 30.4802, -14.224, 0.66 ) }
    dend_35 { pt3dadd( -136.278, 30.7239, -14.5956, 0.66 ) }
    dend_35 { pt3dadd( -136.297, 30.761, -14.6419, 0.66 ) }
    dend_35 { pt3dadd( -136.792, 31.6262, -15.5735, 0.15 ) }
    dend_35 { pt3dadd( -137.119, 32.1391, -16.0406, 1.47 ) }
    dend_35 { pt3dadd( -137.378, 32.5017, -16.3242, 1.92 ) }
    dend_35 { pt3dadd( -137.617, 32.8097, -16.5256, 1.92 ) }
    dend_35 { pt3dadd( -138.061, 33.3191, -16.8268, 0.15 ) }
    dend_35 { pt3dadd( -138.89, 34.112, -17.2137, 0.15 ) }
    dend_35 { pt3dadd( -139.553, 34.6772, -17.4385, 0.15 ) }
    dend_35 { pt3dadd( -139.823, 34.8814, -17.5187, 0.88 ) }
    dend_35 { pt3dadd( -140.197, 35.1476, -17.622, 1.11 ) }
    dend_35 { pt3dadd( -140.555, 35.3917, -17.7157, 0.15 ) }
    dend_35 { pt3dadd( -142.909, 36.8849, -18.2783, 0.15 ) }
    dend_35 { pt3dadd( -142.971, 36.9186, -18.2928, 0.15 ) }
    dend_35 { pt3dadd( -143.81, 37.3224, -18.4858, 0.15 ) }
    dend_35 { pt3dadd( -144.197, 37.4906, -18.5724, 0.88 ) }
    dend_35 { pt3dadd( -144.584, 37.6434, -18.6593, 1.18 ) }
    dend_35 { pt3dadd( -145.074, 37.8341, -18.7701, 0.15 ) }
    dend_35 { pt3dadd( -146.775, 38.4947, -19.1638, 0.15 ) }
    dend_35 { pt3dadd( -147.213, 38.6793, -19.267, 0.81 ) }
    dend_35 { pt3dadd( -147.636, 38.8819, -19.371, 1.03 ) }
    dend_35 { pt3dadd( -148.028, 39.0843, -19.468, 0.15 ) }
    dend_35 { pt3dadd( -150.475, 40.4535, -20.0807, 0.15 ) }
    dend_35 { pt3dadd( -150.867, 40.6963, -20.1801, 0.74 ) }
    dend_35 { pt3dadd( -151.326, 41.0163, -20.2884, 0.96 ) }
    dend_35 { pt3dadd( -152.551, 41.9011, -20.5884, 0.15 ) }
    dend_35 { pt3dadd( -152.716, 42.0248, -20.6303, 0.44 ) }
    dend_35 { pt3dadd( -152.813, 42.1008, -20.6558, 0.44 ) }
    dend_35 { pt3dadd( -152.923, 42.2017, -20.6887, 0.44 ) }
    dend_35 { pt3dadd( -153.141, 42.4021, -20.7518, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 92/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 32.3044, -191.007, -2.74169, 0.15 ) }
    dend_24 { pt3dadd( 33.1573, -191.779, -2.60184, 0.15 ) }
    dend_24 { pt3dadd( 34.4173, -192.941, -2.38075, 0.15 ) }
    dend_24 { pt3dadd( 34.4618, -192.982, -2.37264, 0.15 ) }
    dend_24 { pt3dadd( 36.2499, -194.703, -2.07739, 0.15 ) }
    dend_24 { pt3dadd( 36.668, -195.132, -2.01442, 0.15 ) }
    dend_24 { pt3dadd( 36.7035, -195.171, -2.00954, 0.15 ) }
    dend_24 { pt3dadd( 36.9752, -195.519, -1.97795, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_24 { pt3dadd( 37.1181, -195.708, -1.98841, 1.25 ) }
    dend_24 { pt3dadd( 37.514, -196.205, -2.11836, 0.22 ) }
    dend_24 { pt3dadd( 37.9896, -196.806, -2.38539, 0.22 ) }
    dend_24 { pt3dadd( 38.6679, -197.646, -2.80161, 0.22 ) }
    dend_24 { pt3dadd( 39.1692, -198.253, -3.12617, 0.22 ) }
    dend_24 { pt3dadd( 39.9113, -199.128, -3.65805, 1.03 ) }
    dend_24 { pt3dadd( 40.5188, -199.793, -4.12012, 1.18 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 7/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 32.3044, -191.007, -2.74169, 0.15 ) }
    dend_23 { pt3dadd( 32.3707, -191.784, -2.78143, 0.15 ) }
    dend_23 { pt3dadd( 32.4855, -193.131, -2.85032, 0.15 ) }
    dend_23 { pt3dadd( 32.4921, -193.208, -2.85428, 0.15 ) }
    dend_23 { pt3dadd( 32.536, -193.722, -2.88059, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -0.0174388, -192.163, 10.1952, 0.59 ) }
    dend_9 { pt3dadd( 0.389749, -193.603, 10.2262, 0.59 ) }
    dend_9 { pt3dadd( 0.917658, -195.462, 10.2988, 0.59 ) }
    dend_9 { pt3dadd( 0.941398, -195.543, 10.3045, 0.59 ) }
    dend_9 { pt3dadd( 1.45015, -197.213, 10.4739, 0.44 ) }
    dend_9 { pt3dadd( 2.00106, -198.987, 10.6813, 0.44 ) }
    dend_9 { pt3dadd( 2.02637, -199.067, 10.6914, 0.44 ) }
    dend_9 { pt3dadd( 2.21546, -199.65, 10.7986, 1.03 ) }
    dend_9 { pt3dadd( 2.71665, -201.074, 11.0439, 1.03 ) }
    dend_9 { pt3dadd( 3.12394, -202.276, 11.2298, 0.66 ) }
    dend_9 { pt3dadd( 3.29442, -202.811, 11.3055, 0.37 ) }
    dend_9 { pt3dadd( 3.31506, -202.882, 11.3134, 0.37 ) }
    dend_9 { pt3dadd( 3.72889, -204.458, 11.4679, 0.37 ) }
    dend_9 { pt3dadd( 3.94773, -205.378, 11.513, 1.03 ) }
    dend_9 { pt3dadd( 4.14717, -206.315, 11.5172, 1.62 ) }
    dend_9 { pt3dadd( 4.31975, -207.241, 11.4983, 1.62 ) }
    dend_9 { pt3dadd( 4.48852, -208.464, 11.4569, 1.25 ) }
    dend_9 { pt3dadd( 4.60345, -209.558, 11.4104, 1.03 ) }
    dend_9 { pt3dadd( 4.7488, -210.957, 11.2775, 0.88 ) }
    dend_9 { pt3dadd( 4.81947, -211.579, 11.1787, 0.66 ) }
    dend_9 { pt3dadd( 4.91203, -212.412, 10.9874, 0.66 ) }
    dend_9 { pt3dadd( 5.0967, -213.895, 10.5129, 0.66 ) }
    dend_9 { pt3dadd( 5.10564, -213.963, 10.4865, 0.66 ) }
    dend_9 { pt3dadd( 5.39804, -216.308, 9.54572, 0.59 ) }
    dend_9 { pt3dadd( 5.55895, -217.542, 9.02841, 1.4 ) }
    dend_9 { pt3dadd( 5.68311, -218.569, 8.60608, 1.84 ) }
    dend_9 { pt3dadd( 5.82473, -219.717, 8.13466, 2.14 ) }
    dend_9 { pt3dadd( 5.92069, -220.504, 7.82414, 2.14 ) }
    dend_9 { pt3dadd( 6.02103, -221.763, 7.39873, 0.66 ) }
    dend_9 { pt3dadd( 6.04682, -222.472, 7.21576, 0.22 ) }
    dend_9 { pt3dadd( 6.11513, -224.324, 6.84646, 0.22 ) }
    dend_9 { pt3dadd( 6.11772, -224.386, 6.83554, 0.22 ) }
    dend_9 { pt3dadd( 6.13389, -224.957, 6.76966, 1.03 ) }
    dend_9 { pt3dadd( 6.1693, -225.953, 6.66548, 1.03 ) }
    dend_9 { pt3dadd( 6.22659, -227.521, 6.53513, 1.11 ) }
    dend_9 { pt3dadd( 6.25816, -228.148, 6.51303, 0.59 ) }
    dend_9 { pt3dadd( 6.28464, -228.601, 6.50697, 0.15 ) }
    dend_9 { pt3dadd( 6.3878, -230.456, 6.46191, 0.15 ) }
    dend_9 { pt3dadd( 6.39225, -230.529, 6.46049, 0.15 ) }
    dend_9 { pt3dadd( 6.43396, -231.152, 6.45439, 0.15 ) }
    dend_9 { pt3dadd( 6.49397, -231.98, 6.39471, 0.15 ) }
    dend_9 { pt3dadd( 6.60263, -233.262, 6.23972, 0.15 ) }
    dend_9 { pt3dadd( 6.69463, -234.302, 6.09309, 1.4 ) }
    dend_9 { pt3dadd( 6.82122, -235.696, 5.86995, 2.28 ) }
    dend_9 { pt3dadd( 6.95125, -236.846, 5.6867, 2.65 ) }
    dend_9 { pt3dadd( 7.29384, -238.996, 5.29886, 0.22 ) }
    dend_9 { pt3dadd( 7.50478, -240.12, 5.07848, 0.22 ) }
    dend_9 { pt3dadd( 7.8581, -241.752, 4.75951, 0.22 ) }
    dend_9 { pt3dadd( 7.87592, -241.833, 4.74474, 0.22 ) }
    dend_9 { pt3dadd( 8.32831, -243.77, 4.37734, 0.22 ) }
    dend_9 { pt3dadd( 8.65391, -245.054, 4.17599, 0.22 ) }
    dend_9 { pt3dadd( 8.78199, -245.488, 4.1234, 0.96 ) }
    dend_9 { pt3dadd( 9.02696, -246.134, 3.98545, 1.11 ) }
    dend_9 { pt3dadd( 9.30951, -246.734, 3.79317, 1.11 ) }
    dend_9 { pt3dadd( 9.68438, -247.525, 3.52604, 0.15 ) }
    dend_9 { pt3dadd( 10.1569, -248.516, 3.17304, 0.15 ) }
    dend_9 { pt3dadd( 10.6426, -249.539, 2.85267, 0.74 ) }
    dend_9 { pt3dadd( 11.4205, -251.063, 2.37488, 0.74 ) }
    dend_9 { pt3dadd( 11.7684, -251.726, 2.17802, 0.15 ) }
    dend_9 { pt3dadd( 12.732, -253.538, 1.68776, 0.15 ) }
    dend_9 { pt3dadd( 12.9852, -254.097, 1.57703, 1.47 ) }
    dend_9 { pt3dadd( 13.4155, -255.286, 1.42333, 2.28 ) }
    dend_9 { pt3dadd( 13.7, -256.399, 1.36016, 2.43 ) }
    dend_9 { pt3dadd( 13.8746, -257.361, 1.34838, 2.43 ) }
    dend_9 { pt3dadd( 14.0632, -258.797, 1.3473, 0.15 ) }
    dend_9 { pt3dadd( 14.3157, -261.485, 1.2589, 0.15 ) }
    dend_9 { pt3dadd( 14.3859, -262.866, 1.18849, 0.15 ) }
    dend_9 { pt3dadd( 14.316, -264.518, 1.05819, 0.15 ) }
    dend_9 { pt3dadd( 14.2716, -264.911, 1.02297, 0.88 ) }
    dend_9 { pt3dadd( 14.129, -265.768, 0.912318, 1.25 ) }
    dend_9 { pt3dadd( 13.8647, -266.946, 0.721111, 0.44 ) }
    dend_9 { pt3dadd( 13.7508, -267.387, 0.626638, 0.15 ) }
    dend_9 { pt3dadd( 12.8041, -270.794, -0.183202, 0.15 ) }
    dend_9 { pt3dadd( 12.7832, -270.864, -0.198704, 0.15 ) }
    dend_9 { pt3dadd( 12.5929, -271.401, -0.306192, 0.81 ) }
    dend_9 { pt3dadd( 12.2984, -272.124, -0.42153, 0.81 ) }
    dend_9 { pt3dadd( 12.2674, -272.191, -0.427976, 0.81 ) }
    dend_9 { pt3dadd( 11.8915, -272.935, -0.489565, 0.81 ) }
    dend_9 { pt3dadd( 11.4497, -273.71, -0.536655, 0.15 ) }
    dend_9 { pt3dadd( 10.7761, -274.851, -0.55858, 0.15 ) }
    dend_9 { pt3dadd( 10.4438, -275.405, -0.554721, 1.18 ) }
    dend_9 { pt3dadd( 10.1176, -275.95, -0.551305, 1.62 ) }
    dend_9 { pt3dadd( 9.84138, -276.441, -0.563112, 1.62 ) }
    dend_9 { pt3dadd( 9.35567, -277.451, -0.610534, 0.22 ) }
    dend_9 { pt3dadd( 8.50844, -279.461, -0.755119, 0.22 ) }
    dend_9 { pt3dadd( 8.27941, -280.143, -0.851626, 0.81 ) }
    dend_9 { pt3dadd( 8.06419, -280.969, -1.00736, 1.03 ) }
    dend_9 { pt3dadd( 7.85233, -282.067, -1.26354, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_9 { pt3dadd( 7.51123, -285.006, -2.04759, 0.15 ) }
    dend_9 { pt3dadd( 7.4972, -285.514, -2.20258, 0.88 ) }
    dend_9 { pt3dadd( 7.70807, -287.63, -2.99821, 0.22 ) }
    dend_9 { pt3dadd( 7.97041, -288.897, -3.45172, 0.22 ) }
    dend_9 { pt3dadd( 8.09919, -289.321, -3.59427, 0.66 ) }
    dend_9 { pt3dadd( 8.28246, -289.772, -3.70426, 0.96 ) }
    dend_9 { pt3dadd( 8.31693, -289.837, -3.71553, 0.96 ) }
    dend_9 { pt3dadd( 8.91447, -291.054, -3.81086, 0.15 ) }
    dend_9 { pt3dadd( 9.87396, -293.231, -3.77193, 0.15 ) }
    dend_9 { pt3dadd( 9.97055, -293.455, -3.77412, 0.52 ) }
    dend_9 { pt3dadd( 10.6555, -295.235, -3.77814, 0.15 ) }
    dend_9 { pt3dadd( 11.0327, -296.289, -3.77894, 1.18 ) }
    dend_9 { pt3dadd( 11.4062, -297.406, -3.77028, 1.84 ) }
    dend_9 { pt3dadd( 11.6471, -298.205, -3.75343, 1.84 ) }
    dend_9 { pt3dadd( 12.0288, -299.58, -3.77236, 0.15 ) }
    dend_9 { pt3dadd( 12.686, -302.1, -3.82062, 0.15 ) }
    dend_9 { pt3dadd( 12.7645, -302.419, -3.83432, 0.59 ) }
    dend_9 { pt3dadd( 12.8551, -302.799, -3.84855, 0.74 ) }
    dend_9 { pt3dadd( 12.9269, -303.106, -3.85679, 0.15 ) }
    dend_9 { pt3dadd( 13.5312, -305.994, -3.92837, 0.15 ) }
    dend_9 { pt3dadd( 13.6622, -306.897, -3.89152, 1.03 ) }
    dend_9 { pt3dadd( 13.7741, -307.933, -3.82606, 1.77 ) }
    dend_9 { pt3dadd( 13.8414, -308.783, -3.74933, 1.77 ) }
    dend_9 { pt3dadd( 13.8913, -309.788, -3.62981, 0.81 ) }
    dend_9 { pt3dadd( 13.8946, -310.55, -3.4943, 0.15 ) }
    dend_9 { pt3dadd( 13.7551, -313.578, -2.75411, 0.15 ) }
    dend_9 { pt3dadd( 13.7492, -313.649, -2.73466, 0.15 ) }
    dend_9 { pt3dadd( 13.6888, -314.159, -2.57253, 1.18 ) }
    dend_9 { pt3dadd( 13.555, -315.176, -2.23406, 1.62 ) }
    dend_9 { pt3dadd( 13.4331, -316.125, -1.90717, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 30/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.0174388, -192.163, 10.1952, 0.52 ) }
    dend_8 { pt3dadd( -0.361477, -193.408, 9.13676, 0.52 ) }
    dend_8 { pt3dadd( -0.555156, -194.109, 8.54088, 0.52 ) }
    dend_8 { pt3dadd( -0.702432, -194.643, 8.08778, 0.52 ) }
    dend_8 { pt3dadd( -0.762931, -194.862, 7.90165, 0.81 ) }
    dend_8 { pt3dadd( -0.777756, -194.915, 7.85604, 0.81 ) }
    dend_8 { pt3dadd( -0.900053, -195.358, 7.47978, 0.81 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 37/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 40.514, 55.8489, -25.6945, 0.37 ) }
    dend_62 { pt3dadd( 39.0417, 64.2134, -33.8127, 0.37 ) }
    dend_62 { pt3dadd( 36.6922, 73.9122, -39.9303, 0.37 ) }
    dend_62 { pt3dadd( 33.307, 83.1014, -46.3755, 0.37 ) }
    dend_62 { pt3dadd( 31.5465, 92.2713, -53.4679, 0.37 ) }
    dend_62 { pt3dadd( 27.8819, 101.092, -60.2857, 0.37 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 40.514, 55.8489, -25.6945, 0.29 ) }
    dend_59 { pt3dadd( 41.3126, 60.6466, -33.6562, 0.37 ) }
    dend_59 { pt3dadd( 43.4149, 66.8923, -40.2169, 0.37 ) }
    dend_59 { pt3dadd( 46.9124, 73.1566, -46.126, 0.37 ) }
    dend_59 { pt3dadd( 50.4068, 79.6148, -51.8146, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 48/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 11.3899, 95.7378, 39.7204, 0.22 ) }
    dend_50 { pt3dadd( 13.8313, 86.1809, 44.1701, 0.22 ) }
    dend_50 { pt3dadd( 18.5701, 77.9952, 49.5368, 0.22 ) }
    dend_50 { pt3dadd( 22.6773, 70.2985, 56.0656, 0.22 ) }
    dend_50 { pt3dadd( 26.3533, 62.1984, 62.3339, 0.22 ) }
    dend_50 { pt3dadd( 30.0408, 55.5187, 70.1648, 0.22 ) }
    dend_50 { pt3dadd( 32.9144, 48.8615, 78.3513, 0.22 ) }
    dend_50 { pt3dadd( 35.2654, 43.4779, 87.6194, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 56/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 11.3899, 95.7378, 39.7204, 0.29 ) }
    dend_49 { pt3dadd( 14.4026, 87.8807, 42.8683, 0.22 ) }
    dend_49 { pt3dadd( 17.1421, 81.0424, 48.1037, 0.22 ) }
    dend_49 { pt3dadd( 20.9343, 74.1066, 52.4547, 0.22 ) }
    dend_49 { pt3dadd( 24.462, 67.5178, 57.5425, 0.22 ) }
    dend_49 { pt3dadd( 28.111, 60.2434, 61.4047, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 62/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.70902, 117.569, 35.2193, 0.37 ) }
    dend_47 { pt3dadd( -8.95622, 122.881, 35.6988, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 64/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.70902, 117.569, 35.2193, 0.29 ) }
    dend_46 { pt3dadd( -12.5529, 125.126, 39.7528, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 13.4331, -316.125, -1.90717, 0.29 ) }
    dend_11 { pt3dadd( 12.9226, -317.037, -1.78014, 0.29 ) }
    dend_11 { pt3dadd( 12.1453, -318.279, -1.60975, 0.29 ) }
    dend_11 { pt3dadd( 10.9262, -320.069, -1.39265, 0.29 ) }
    dend_11 { pt3dadd( 10.5961, -320.531, -1.34097, 0.74 ) }
    dend_11 { pt3dadd( 10.1485, -321.091, -1.2546, 1.11 ) }
    dend_11 { pt3dadd( 9.47615, -321.751, -1.19991, 1.11 ) }
    dend_11 { pt3dadd( 8.97154, -322.133, -1.17548, 0.88 ) }
    dend_11 { pt3dadd( 8.58819, -322.359, -1.19097, 0.52 ) }
    dend_11 { pt3dadd( 8.53132, -322.387, -1.19825, 0.52 ) }
    dend_11 { pt3dadd( 7.35219, -322.955, -1.39971, 0.22 ) }
    dend_11 { pt3dadd( 4.55386, -324.268, -1.95723, 0.15 ) }
    dend_11 { pt3dadd( 4.29428, -324.405, -2.02558, 0.44 ) }
    dend_11 { pt3dadd( 3.90942, -324.626, -2.13615, 0.66 ) }
    dend_11 { pt3dadd( 3.85727, -324.659, -2.15291, 0.66 ) }
    dend_11 { pt3dadd( 3.52497, -324.897, -2.27677, 0.66 ) }
    dend_11 { pt3dadd( 3.3924, -325.013, -2.33942, 0.15 ) }
    dend_11 { pt3dadd( 1.97308, -326.529, -2.97686, 0.15 ) }
    dend_11 { pt3dadd( 1.93154, -326.573, -2.99525, 0.15 ) }
    dend_11 { pt3dadd( 1.71782, -326.807, -3.08932, 0.74 ) }
    dend_11 { pt3dadd( 1.33001, -327.233, -3.25984, 1.11 ) }
    dend_11 { pt3dadd( 0.87888, -327.74, -3.4571, 0.88 ) }
    dend_11 { pt3dadd( 0.833318, -327.793, -3.47687, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 13.4331, -316.125, -1.90717, 0.15 ) }
    dend_10 { pt3dadd( 13.3553, -317.261, -1.52989, 0.15 ) }
    dend_10 { pt3dadd( 13.0812, -319.769, -0.828694, 0.15 ) }
    dend_10 { pt3dadd( 13.0289, -320.324, -0.705191, 0.44 ) }
    dend_10 { pt3dadd( 12.9789, -320.932, -0.583486, 0.44 ) }
    dend_10 { pt3dadd( 12.9021, -322.108, -0.375926, 0.15 ) }
    dend_10 { pt3dadd( 12.8001, -324.016, -0.0650272, 0.15 ) }
    dend_10 { pt3dadd( 12.7781, -325.195, 0.0692573, 0.15 ) }
    dend_10 { pt3dadd( 12.7474, -326.209, 0.168729, 0.74 ) }
    dend_10 { pt3dadd( 12.7345, -326.941, 0.239363, 1.33 ) }
    dend_10 { pt3dadd( 12.7377, -327.732, 0.295685, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_10 { pt3dadd( 12.7557, -328.077, 0.299226, 0.15 ) }
    dend_10 { pt3dadd( 12.9244, -330.238, 0.281898, 0.15 ) }
    dend_10 { pt3dadd( 12.9446, -330.436, 0.270545, 0.44 ) }
    dend_10 { pt3dadd( 12.9626, -331.798, 0.0540752, 0.15 ) }
    dend_10 { pt3dadd( 12.9596, -331.872, 0.0400646, 0.15 ) }
    dend_10 { pt3dadd( 12.887, -332.779, -0.142101, 0.66 ) }
    dend_10 { pt3dadd( 12.8552, -333.053, -0.19852, 0.88 ) }
    dend_10 { pt3dadd( 12.7144, -333.96, -0.395527, 0.15 ) }
    dend_10 { pt3dadd( 12.0371, -338.142, -1.09794, 0.15 ) }
    dend_10 { pt3dadd( 11.9665, -338.885, -1.13451, 1.03 ) }
    dend_10 { pt3dadd( 11.9428, -339.298, -1.12258, 1.03 ) }
    dend_10 { pt3dadd( 11.9363, -339.7, -1.06638, 0.22 ) }
    dend_10 { pt3dadd( 11.9398, -339.754, -1.05297, 0.22 ) }
    dend_10 { pt3dadd( 12.244, -341.609, -0.358308, 0.22 ) }
    dend_10 { pt3dadd( 13.4058, -344.328, 1.24993, 0.22 ) }
    dend_10 { pt3dadd( 13.4349, -344.377, 1.28348, 0.22 ) }
    dend_10 { pt3dadd( 14.133, -345.288, 2.01648, 0.22 ) }
    dend_10 { pt3dadd( 14.6886, -345.785, 2.59627, 0.96 ) }
    dend_10 { pt3dadd( 14.9403, -345.916, 2.86214, 0.15 ) }
    dend_10 { pt3dadd( 16.436, -346.073, 4.45805, 0.15 ) }
    dend_10 { pt3dadd( 16.6627, -346.028, 4.70107, 0.66 ) }
    dend_10 { pt3dadd( 16.8823, -345.972, 4.93225, 0.15 ) }
    dend_10 { pt3dadd( 18.2647, -345.5, 6.36627, 0.15 ) }
    dend_10 { pt3dadd( 18.4956, -345.406, 6.62151, 0.44 ) }
    dend_10 { pt3dadd( 18.6736, -345.324, 6.83464, 0.15 ) }
    dend_10 { pt3dadd( 19.305, -345.002, 7.73767, 0.15 ) }
    dend_10 { pt3dadd( 19.5818, -344.868, 8.1396, 0.59 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 27/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 27.8819, 101.092, -60.2857, 0.22 ) }
    dend_64 { pt3dadd( 25.119, 111.959, -65.1502, 0.22 ) }
    dend_64 { pt3dadd( 25.7467, 123.316, -69.4478, 0.22 ) }
    dend_64 { pt3dadd( 25.3719, 134.019, -75.3015, 0.22 ) }
    dend_64 { pt3dadd( 25.7108, 144.92, -80.7399, 0.22 ) }
    dend_64 { pt3dadd( 24.8076, 155.772, -86.2554, 0.22 ) }
    dend_64 { pt3dadd( 22.8624, 167.088, -90.368, 0.22 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 34/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 27.8819, 101.092, -60.2857, 0.29 ) }
    dend_63 { pt3dadd( 24.7568, 111.964, -67.9792, 0.22 ) }
    dend_63 { pt3dadd( 20.3004, 121.879, -76.3308, 0.22 ) }
    dend_63 { pt3dadd( 14.2628, 132.291, -82.855, 0.22 ) }
    dend_63 { pt3dadd( 8.82942, 144.307, -86.2383, 0.22 ) }
    dend_63 { pt3dadd( 3.47923, 156.013, -90.7444, 0.22 ) }
    dend_63 { pt3dadd( 0.565351, 169.086, -92.7594, 0.22 ) }
    dend_63 { pt3dadd( -0.509132, 182.341, -95.2634, 0.22 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 50.4068, 79.6148, -51.8146, 0.22 ) }
    dend_61 { pt3dadd( 54.5116, 86.5571, -60.2668, 0.22 ) }
    dend_61 { pt3dadd( 56.6478, 93.2625, -69.5958, 0.22 ) }
    dend_61 { pt3dadd( 57.4341, 100.487, -78.7281, 0.22 ) }
    dend_61 { pt3dadd( 57.2074, 107.787, -87.8265, 0.22 ) }
    dend_61 { pt3dadd( 54.7162, 114.759, -96.8425, 0.22 ) }
    dend_61 { pt3dadd( 53.0658, 122.071, -105.776, 0.22 ) }
    dend_61 { pt3dadd( 51.7867, 130.238, -113.966, 0.22 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 50/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 50.4068, 79.6148, -51.8146, 0.29 ) }
    dend_60 { pt3dadd( 53.5245, 88.2219, -60.9219, 0.22 ) }
    dend_60 { pt3dadd( 57.3902, 95.7877, -70.6778, 0.22 ) }
    dend_60 { pt3dadd( 58.8131, 103.75, -80.766, 0.22 ) }
    dend_60 { pt3dadd( 59.9127, 112.846, -89.8479, 0.22 ) }
    dend_60 { pt3dadd( 62.2682, 120.393, -100.09, 0.22 ) }
    dend_60 { pt3dadd( 66.3531, 127.268, -110.275, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_66 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_66 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_19 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_16 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_68 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_43 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_40 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_1 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_51 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_42 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_29 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_28 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_14 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_12 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_3 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_2 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_58 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_35 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_62 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_64 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_63 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_61 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_60 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_27 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_54 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_39 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_33 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_37 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_56 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_65 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_57 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_36 OneSecGrp_SectionRef_55.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_67 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_48 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_45 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_52 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_59 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_8 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_22 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_23 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_25 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_24 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_11 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_10 OneSecGrp_SectionRef_68.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_46, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_66 nseg = 5
    dend_19 nseg = 5
    dend_16 nseg = 3
    dend_68 nseg = 3
    dend_55 nseg = 3
    dend_43 nseg = 5
    dend_40 nseg = 5
    dend_31 nseg = 7
    dend_21 nseg = 3
    dend_20 nseg = 5
    dend_17 nseg = 5
    dend_13 nseg = 5
    dend_4 nseg = 11
    dend_1 nseg = 3
    dend_51 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 7
    dend_28 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_12 nseg = 9
    dend_7 nseg = 9
    dend_3 nseg = 7
    dend_2 nseg = 3
    dend_58 nseg = 3
    dend_35 nseg = 3
    dend_9 nseg = 7
    dend_62 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 3
    dend_64 nseg = 3
    dend_63 nseg = 5
    dend_61 nseg = 5
    dend_60 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L6_NBC_df448fd9b1_0_0


