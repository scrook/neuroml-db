// Cell: dNAC222_L23_NBC_ed12f3afab_0_0
/*
{
  "id" : "dNAC222_L23_NBC_ed12f3afab_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.33004, 6.9136, -1.72338, 3.35756", "-1.30767, 6.0419, -1.50091, 5.92196", "-1.2853, 5.17019, -1.27844, 10.136", "-1.26293, 4.29848, -1.05596, 12.0381", "-1.24056, 3.42677, -0.833493, 14.7633", "-1.21819, 2.55506, -0.61102, 15.4638", "-1.19582, 1.68335, -0.388548, 15.4684", "-1.17345, 0.811646, -0.166076, 15.4327", "-1.15108, -0.0600623, 0.0563968, 14.9176", "-1.12871, -0.931771, 0.278869, 14.1939", "-1.10634, -1.80348, 0.501341, 13.4702", "-1.08397, -2.67519, 0.723814, 12.7466", "-1.0616, -3.5469, 0.946286, 12.3598", "-1.03923, -4.4186, 1.16876, 12.0665", "-1.01686, -5.29031, 1.39123, 11.6276", "-0.994493, -6.16202, 1.6137, 11.1336", "-0.972123, -7.03373, 1.83618, 10.6396", "-0.949754, -7.90544, 2.05865, 9.89654", "-0.927384, -8.77715, 2.28112, 8.0678", "-0.905015, -9.64885, 2.50359, 6.12489", "-0.882645, -10.5206, 2.72606, 3.55851" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-6.38069, 1.59658, -14.2729, 1.39", "-6.30618, 1.29512, -15.0552, 1.39", "-6.16978, 0.74324, -16.4872, 1.11", "-6.03681, 0.205237, -17.8833, 1.11", "-5.51051, -1.92417, -23.4088, 1.11", "-5.30056, -2.77365, -25.6131, 1.11", "-5.17823, -3.26858, -26.8974, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-5.84069, 6.05233, -3.83293, 1.11", "-10.2055, 8.82033, -4.32516, 0.83", "-12.9059, 10.7045, -4.27765, 0.83", "-15.093, 12.4358, -4.43511, 0.83", "-19.8069, 16.4711, -5.02008, 0.83", "-23.426, 19.5779, -5.55397, 0.83", "-26.5768, 22.1666, -6.04449, 0.83", "-30.1831, 24.6817, -6.29539, 0.83", "-35.3792, 27.9701, -6.77576, 0.83", "-37.0863, 29.0244, -6.99745, 0.56", "-38.5392, 29.9166, -7.35385, 0.83", "-40.4004, 30.9305, -7.91423, 0.83", "-42.9193, 32.0197, -8.73373, 0.83", "-46.0461, 33.0475, -9.2503, 0.28", "-48.7753, 34.2079, -9.54527, 0.83", "-52.9246, 36.1862, -10.181, 0.56", "-54.4293, 37.0171, -10.486, 0.56", "-57.7785, 38.9084, -11.2912, 0.56", "-64.1837, 42.4531, -13.0783, 0.56", "-70.5111, 45.7439, -15.0766, 0.56", "-76.1117, 48.4497, -17.0417, 0.56", "-80.5129, 50.5484, -18.6524, 0.56", "-83.4098, 51.7982, -19.8287, 0.56", "-86.3111, 52.915, -21.132, 0.56", "-89.0877, 53.8697, -22.591, 0.56", "-91.6482, 54.5752, -23.8814, 0.56", "-93.1853, 55.0134, -24.6996, 0.56", "-96.8427, 56.0707, -26.7505, 0.56", "-100.64, 57.2979, -28.9216, 0.56", "-104.082, 58.4854, -31.0174, 0.56", "-106.334, 59.273, -32.457, 0.56", "-108.519, 60.0659, -33.8757, 0.28", "-111.878, 61.257, -36.0915, 0.56", "-113.669, 61.8766, -37.2345, 0.56", "-116.014, 62.6181, -38.6832, 0.56", "-119.059, 63.6114, -40.4511, 0.28", "-121.287, 64.3938, -41.6681, 0.28", "-123.632, 65.3419, -42.8646, 0.56", "-126.077, 66.4604, -44.1286, 0.56", "-128.776, 67.8739, -45.5214, 0.28", "-129.796, 68.4292, -46.0193, 0.56", "-132.431, 69.9669, -47.3402, 0.28", "-133.422, 70.5452, -47.8477, 0.83", "-137.421, 72.9371, -49.8283, 0.28", "-140.821, 75.2012, -51.6702, 0.28", "-142.852, 76.5889, -52.7641, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.16931, 5.51607, 2.45707, 5.56", "1.48378, 6.77966, 2.45707, 5.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.99931, 4.80433, -11.5829, 1.39", "3.34847, 5.57266, -12.3701, 1.11", "4.10607, 7.90066, -15.0704, 1.11", "4.41077, 9.37968, -17.5938, 1.11", "4.53087, 10.3595, -20.331, 1.11", "4.63353, 11.0306, -22.858, 1.11", "4.77775, 11.527, -24.8786, 1.11", "4.98859, 11.9411, -28.0612, 1.11", "5.27377, 11.9455, -33.2872, 1.11", "5.33119, 11.5425, -37.3856, 0.83", "5.3345, 11.3206, -38.7553, 0.83", "5.36041, 10.8564, -41.4399, 0.83", "5.43949, 10.2813, -44.3832, 0.83", "5.53038, 9.9474, -46.6667, 0.83", "5.76728, 9.33522, -51.8047, 0.83", "5.96845, 8.79102, -56.4661, 0.83", "6.03832, 8.40257, -59.4519, 0.83", "6.09112, 8.10035, -61.6318, 0.83", "6.44465, 6.99701, -71.0126, 0.56", "6.58483, 6.73426, -73.5632, 0.56", "6.73789, 6.53309, -75.6258, 1.39", "7.23836, 5.87161, -81.9396, 0.56", "7.49208, 5.529, -84.5646, 0.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "6.60931, 3.29307, -6.83293, 2.78", "7.35976, 4.44962, -7.63501, 2.78", "8.58396, 6.33629, -8.94345, 2.22", "10.1894, 8.81064, -10.6595, 3.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.46931, -9.96692, 3.82707, 1.94", "2.8694, -11.8117, 3.78729, 1.39", "3.21225, -13.3925, 3.7532, 2.22", "3.54859, -14.9433, 3.71976, 2.5", "4.31542, -18.4791, 3.64352, 1.39", "4.61292, -19.8508, 3.61394, 1.39", "5.41488, -23.5485, 3.53421, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.07069, -9.85968, -1.42293, 2.78", "-5.68521, -10.8157, -1.97493, 2.22", "-6.53001, -12.13, -2.7338, 2.22", "-7.64288, -13.8614, -3.73344, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.882645, -10.5206, 2.72606, 0.644147", "-0.497843, -25.5157, 2.72606, 0.644147", "-0.11304, -40.5107, 2.72606, 0.644147" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-5.17823, -3.26858, -26.8974, 1.11", "-7.06481, -3.46328, -27.0457, 1.11", "-9.07827, -3.73151, -28.0007, 1.11", "-12.0636, -4.1292, -29.4165, 1.11", "-15.5129, -4.58872, -31.0524, 1.11", "-17.2271, -4.81708, -31.8654, 0.83", "-20.2239, -5.21631, -33.2867, 1.11", "-26.5378, -6.43084, -37.0665, 1.39" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.17823, -3.26858, -26.8974, 0.83", "-6.06789, -7.45311, -27.12, 0.83", "-6.58113, -10.1853, -27.1537, 0.28", "-6.86935, -11.8286, -27.1391, 0.56", "-7.46959, -15.6092, -27.0675, 0.28", "-7.77271, -17.8552, -27.0327, 0.56", "-8.06681, -20.453, -26.9965, 0.28", "-8.37116, -24.228, -26.909, 0.83", "-8.55233, -27.8392, -26.7855, 0.28", "-8.63559, -30.6062, -26.6988, 0.83", "-8.62025, -33.2599, -26.6243, 0.28", "-8.55018, -35.1538, -26.6302, 0.83", "-8.43075, -36.8925, -26.592, 0.83", "-8.19207, -39.6542, -26.4902, 0.28", "-8.13581, -40.6243, -26.4432, 0.83", "-8.04079, -45.2249, -26.181, 0.28", "-8.06568, -45.8738, -26.1468, 0.56", "-8.40881, -49.1406, -26.0101, 0.28", "-8.67907, -50.8833, -25.9518, 0.83", "-9.89037, -56.5974, -26.0279, 0.28", "-10.4378, -58.5677, -26.1209, 0.56", "-11.957, -62.5306, -26.4029, 0.28", "-13.4882, -65.8032, -26.7002, 0.28", "-14.0881, -66.9465, -26.8429, 0.83", "-15.8508, -69.981, -27.2368, 0.28", "-17.012, -71.6578, -27.5128, 0.56", "-19.1611, -74.3364, -28.0069, 0.28", "-20.7596, -75.9611, -28.3347, 0.56" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.48378, 6.77966, 2.45707, 0.56", "-3.44219, 9.6946, 0.034516, 0.56", "-5.73184, 11.234, -0.84804, 0.56", "-8.04305, 12.8371, -1.46819, 0.56", "-9.92812, 14.2208, -1.80129, 0.83", "-12.0007, 15.8685, -2.13151, 0.56", "-12.8351, 16.6086, -2.26775, 0.83", "-15.4179, 19.4223, -2.51678, 0.56", "-17.4166, 22.0932, -2.60116, 0.56", "-18.5932, 23.789, -2.63412, 0.56", "-20.402, 26.3988, -2.62952, 0.56", "-22.1205, 28.7737, -2.7118, 0.56", "-23.7234, 30.7647, -2.89977, 0.56", "-25.3263, 32.5206, -3.25425, 0.56", "-27.3844, 34.4376, -3.7462, 0.56", "-28.5823, 35.4029, -4.01885, 0.83", "-30.3488, 36.5245, -4.32444, 0.56", "-32.5328, 37.5061, -4.6968, 0.83", "-35.0627, 38.2539, -5.20876, 0.28", "-37.2248, 38.5957, -5.72729, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.48378, 6.77966, 2.45707, 5.56", "1.54968, 6.97646, 3.08052, 5.56" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "10.1894, 8.81064, -10.6595, 0.83", "15.8057, 9.9659, -20.4563, 0.83", "17.4655, 10.4197, -23.6179, 0.56", "19.1063, 10.8607, -26.7855, 0.56", "21.3048, 11.3771, -31.6633, 0.56", "23.1074, 11.8402, -35.904, 0.56", "24.9476, 12.382, -40.1903, 0.56", "26.0277, 12.772, -42.7426, 0.56", "26.8017, 13.0638, -44.5485, 0.83", "30.7571, 14.7674, -53.2222, 0.56", "31.9948, 15.3596, -55.6405, 0.83", "33.2066, 15.9086, -57.8205, 0.56", "35.0655, 16.7441, -60.9913, 0.83", "38.0443, 18.1328, -65.9221, 0.56", "40.789, 19.4265, -70.5362, 0.28", "42.0623, 19.9519, -72.6607, 0.56", "45.187, 21.058, -78.6863, 0.28", "46.8069, 21.4543, -82.1809, 1.11", "48.0155, 21.6225, -85.057, 0.56", "49.8056, 21.5554, -90.1286, 0.56", "50.7418, 21.3611, -92.9062, 0.56", "52.793, 20.7155, -99.4647, 0.56", "55.7954, 19.5104, -109.02, 0.28", "56.8718, 18.9985, -112.428, 0.83", "60.6464, 17.2516, -124.043, 0.28", "61.1498, 17.0128, -125.57, 0.83", "65.0772, 15.1534, -137.315, 0.28", "66.2309, 14.5244, -140.709, 0.56", "68.0949, 13.4486, -146.418, 0.28", "69.693, 12.6537, -150.842, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "10.1894, 8.81064, -10.6595, 2.5", "12.2227, 9.8732, -13.0599, 2.5", "14.5055, 11.0661, -15.755, 1.94", "17.0375, 12.3892, -18.7442, 1.94" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.41488, -23.5485, 3.53421, 0.83", "6.55937, -24.7648, 3.38453, 0.83", "7.39967, -25.6578, 3.27464, 0.83", "9.06869, -27.4315, 3.05636, 0.83", "10.2769, -28.7156, 2.89834, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "5.41488, -23.5485, 3.53421, 0.83", "5.90069, -29.8066, 8.82518, 0.83", "5.99936, -31.0776, 9.89974, 0.83", "6.20057, -33.6696, 12.0912, 1.39", "6.45649, -36.9663, 14.8784, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.64288, -13.8614, -3.73344, 1.11", "-7.82295, -14.9399, -5.69637, 1.11", "-8.43089, -15.739, -8.11012, 1.11", "-9.20553, -16.1936, -10.0597, 1.11", "-9.913, -16.6088, -11.8402, 1.11", "-10.4515, -16.9247, -13.1954, 1.11", "-11.2649, -17.4021, -15.2425, 1.11", "-12.8678, -17.6556, -17.7166, 1.11", "-13.8372, -17.5633, -18.7624, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.64288, -13.8614, -3.73344, 1.11", "-7.50444, -19.4271, -4.56016, 1.11", "-7.52186, -24.9022, -5.61906, 1.11", "-7.55252, -30.9724, -7.02615, 1.11", "-7.49697, -33.481, -7.68196, 1.11", "-7.45389, -35.4263, -8.19052, 1.11", "-7.41726, -37.0803, -8.62291, 1.11", "-7.49942, -39.5177, -9.34139, 1.11", "-7.84384, -43.7425, -11.1289, 1.11", "-7.79214, -46.9685, -12.7411, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.11304, -40.5107, 2.72606, 0.56", "0.271762, -55.5058, 2.72606, 0.56", "0.656564, -70.5009, 2.72606, 0.56" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-26.5378, -6.43084, -37.0665, 0.83", "-28.4912, -6.52905, -37.0083, 0.83", "-30.1745, -6.55934, -36.7598, 0.28", "-31.0299, -6.52945, -36.6032, 0.28", "-31.9692, -6.48271, -36.4228, 0.28", "-33.9741, -6.36671, -36.1041, 1.11", "-35.854, -6.2293, -35.8717, 0.28", "-37.951, -6.0388, -35.6619, 0.56", "-40.346, -5.75758, -35.5285, 0.28", "-41.3065, -5.64389, -35.5072, 0.83", "-43.6618, -5.36853, -35.576, 0.56", "-44.9593, -5.23909, -35.6634, 0.28", "-47.3543, -5.03215, -35.9586, 0.56", "-49.485, -4.87073, -36.3097, 0.28", "-52.6053, -4.73812, -36.8354, 1.11", "-54.9544, -4.68711, -37.2565, 0.28", "-56.627, -4.76699, -37.5762, 0.83", "-58.6888, -5.00891, -37.9825, 0.28", "-59.7438, -5.20242, -38.2051, 0.56", "-61.5228, -5.66442, -38.6137, 0.28", "-63.4365, -6.32917, -39.0987, 0.56", "-66.6502, -7.59533, -39.9588, 0.28", "-68.6275, -8.40158, -40.5141, 0.28", "-69.4088, -8.71011, -40.7281, 0.56", "-70.7919, -9.22726, -41.1119, 0.28", "-73.5666, -10.2085, -41.8951, 0.56", "-76.1974, -11.1077, -42.5859, 0.28", "-76.8781, -11.3073, -42.7517, 0.56", "-79.723, -12.1142, -43.4089, 0.56", "-80.5576, -12.3394, -43.5912, 0.28", "-83.5831, -13.12, -44.1747, 0.28", "-85.7861, -13.6473, -44.5787, 0.83", "-87.7108, -14.1677, -44.865, 0.28", "-88.5396, -14.4024, -44.9868, 0.56" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-26.5378, -6.43084, -37.0665, 0.56", "-28.0764, -5.88841, -37.9452, 0.56", "-28.6313, -5.6796, -38.2708, 0.56", "-31.667, -4.12257, -40.6878, 0.28", "-33.706, -2.91386, -42.9549, 0.83", "-38.2113, -0.194376, -48.4468, 0.28", "-38.9178, 0.231364, -49.341, 0.28", "-39.4466, 0.55465, -50.0967, 0.83", "-42.7579, 2.61612, -55.2164, 0.83", "-46.4833, 4.70445, -61.2351, 0.28", "-47.0335, 4.97448, -62.0742, 0.28", "-47.238, 5.03796, -62.3452, 0.83", "-49.2905, 5.41282, -64.7418, 0.28", "-50.0336, 5.4872, -65.5542, 1.11", "-56.0259, 5.64561, -71.4785, 0.28", "-58.1705, 5.62575, -73.526, 1.39", "-64.3931, 5.4255, -79.4953, 0.28", "-67.0738, 5.28937, -82.1524, 1.11", "-71.5647, 4.89803, -86.6966, 0.28", "-72.3152, 4.83461, -87.4808, 0.56", "-74.5943, 4.63617, -89.844, 0.28", "-77.4171, 4.53704, -92.6673, 0.56", "-79.6564, 4.60451, -94.5761, 0.28", "-80.7844, 4.72557, -95.5199, 0.83", "-85.0636, 5.39956, -98.5687, 0.28", "-86.4681, 5.7228, -99.5302, 0.83", "-88.5373, 6.43759, -100.722, 0.28", "-91.5386, 7.73972, -101.926, 0.56" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "1.54968, 6.97646, 3.08052, 0.56", "-0.357646, 9.6334, 3.05729, 0.56", "-1.91665, 11.9436, 3.23586, 0.56", "-3.28784, 14.0244, 3.53326, 0.56", "-3.96041, 15.0804, 3.68689, 0.56", "-5.30647, 17.142, 4.00982, 0.56", "-6.8004, 19.2938, 4.37828, 0.56", "-7.43445, 20.068, 4.54337, 0.56", "-8.70171, 21.4968, 4.98769, 0.28", "-9.59561, 22.5026, 5.3402, 0.56", "-10.8832, 23.8548, 5.77218, 0.56", "-11.9973, 24.8652, 6.04163, 0.56", "-14.2069, 26.8492, 6.63993, 0.56", "-15.3954, 27.8305, 7.039, 0.56", "-17.2311, 29.2707, 7.77845, 0.56", "-18.9766, 30.621, 8.62813, 0.56", "-21.2677, 32.4222, 9.84576, 0.56", "-24.5745, 34.9674, 11.718, 0.56", "-26.4036, 36.3505, 12.809, 0.56", "-28.075, 37.5274, 13.7641, 0.56", "-29.9269, 38.7297, 14.8544, 0.56", "-31.386, 39.737, 15.8715, 0.56", "-33.0488, 40.9887, 17.0819, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "1.54968, 6.97646, 3.08052, 2.22", "3.03892, 10.8411, 4.39796, 2.22", "4.14715, 13.7171, 5.37834, 1.11", "5.59624, 17.4776, 6.66027, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "17.0375, 12.3892, -18.7442, 0.83", "19.6984, 11.7604, -22.6186, 0.83", "22.4557, 11.1915, -26.014, 0.83", "24.7303, 10.8354, -28.4927, 0.83", "31.3102, 10.2079, -35.2411, 0.83", "34.6371, 10.071, -38.5641, 0.83", "42.8237, 10.0552, -47.2544, 0.83", "45.8903, 10.1228, -50.4058, 0.83", "48.6658, 10.2172, -53.1236, 0.83", "51.3422, 10.3372, -55.6286, 0.83", "58.6315, 10.6895, -61.6749, 0.83", "63.7757, 11.1809, -66.3889, 0.83", "67.0228, 12.0248, -70.3202, 1.39" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "17.0375, 12.3892, -18.7442, 1.11", "21.2824, 9.7732, -17.8935, 1.11", "23.8235, 8.20727, -17.3843, 1.11", "27.0652, 6.20954, -16.7346, 1.11", "28.8232, 5.12615, -16.3823, 1.11", "30.5852, 4.04031, -16.0292, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "10.2769, -28.7156, 2.89834, 0.83", "11.3183, -30.8386, 4.23371, 0.83", "12.2197, -32.4325, 5.29574, 0.56", "12.5174, -32.9125, 5.58735, 0.56", "13.3491, -34.2538, 6.40225, 0.28", "13.7614, -34.9186, 6.80616, 0.83", "14.4414, -36.0151, 7.4724, 0.56", "14.9745, -36.7666, 7.86112, 0.56", "15.9038, -38.118, 8.66662, 0.56" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "10.2769, -28.7156, 2.89834, 0.83", "13.9504, -30.4782, 3.43493, 0.83", "19.1572, -32.925, 3.98399, 0.83", "20.9863, -33.7751, 4.09512, 0.83", "22.9175, -34.7675, 4.10232, 1.11", "29.5488, -38.1754, 4.12702, 0.83", "34.0084, -40.4672, 4.14363, 0.83", "36.5725, -41.7722, 4.13231, 0.83", "40.5519, -43.8044, 4.03745, 0.83", "45.0808, -46.0285, 3.90426, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.45649, -36.9663, 14.8784, 0.56", "4.45582, -37.3378, 17.4649, 0.56", "3.43373, -37.5277, 18.7862, 0.83", "2.51935, -37.6975, 19.9683, 0.28", "2.14616, -37.7668, 20.4508, 0.83", "-2.38022, -39.6979, 28.1856, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "6.45649, -36.9663, 14.8784, 0.56", "8.16984, -36.738, 13.3047, 0.56", "9.1484, -36.7711, 12.3619, 0.56", "11.4749, -36.9773, 10.0646, 0.56", "13.7941, -37.3744, 7.74765, 0.56", "15.6181, -37.6868, 5.92545, 0.56", "18.5803, -38.194, 2.96608, 0.28", "22.4231, -39.1246, -0.901922, 0.28", "24.0898, -39.614, -2.61494, 0.28", "26.0366, -40.3478, -4.71667, 0.28", "34.1088, -40.0604, -10.3452, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-13.8372, -17.5633, -18.7624, 0.83", "-12.9473, -19.0554, -20.3485, 0.83", "-10.5318, -24.0221, -23.4711, 0.28", "-10.1043, -25.0274, -23.8919, 0.56", "-9.31528, -26.8751, -24.4036, 0.56", "-8.53832, -28.7968, -24.8219, 0.56", "-7.61028, -31.0921, -25.3215, 0.28", "-6.20239, -34.6301, -25.7518, 0.28", "-5.70453, -36.0023, -25.6422, 0.83", "-4.44481, -39.7214, -25.2471, 0.28", "-4.14866, -40.711, -25.1048, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-13.8372, -17.5633, -18.7624, 0.83", "-14.3948, -16.6041, -18.9433, 0.83", "-15.344, -15.0934, -19.1595, 0.28", "-15.8151, -14.3884, -19.2415, 0.28", "-16.9123, -12.7366, -19.4815, 0.83", "-18.2975, -10.6961, -19.7806, 0.28", "-18.7687, -10.0025, -19.979, 0.28", "-19.2966, -9.20054, -20.274, 0.28", "-19.5506, -8.76051, -20.4728, 0.56", "-20.1957, -7.51701, -21.0725, 0.28", "-20.5074, -6.89662, -21.3876, 0.56", "-21.9748, -3.87297, -23.0326, 0.56", "-22.5364, -2.7054, -23.6126, 0.83", "-23.5231, -0.720771, -24.4882, 0.28", "-24.412, 0.913319, -25.1244, 0.56", "-24.8346, 1.63591, -25.3429, 0.28", "-25.1563, 2.15474, -25.4648, 0.56", "-26.0821, 3.48323, -25.6107, 0.28", "-26.7639, 4.3482, -25.7112, 0.56", "-27.394, 5.08554, -25.7858, 0.83", "-28.2106, 6.03015, -25.9235, 0.83", "-29.4895, 7.51162, -26.1675, 0.28", "-29.8419, 7.92108, -26.2378, 0.56", "-30.2427, 8.39502, -26.3212, 0.28", "-31.1357, 9.39467, -26.4813, 0.56", "-31.6742, 9.9986, -26.5625, 0.28", "-32.0283, 10.3498, -26.6082, 0.56", "-33.1049, 11.367, -26.6882, 0.28", "-33.2343, 11.4898, -26.6992, 0.56", "-34.0049, 12.198, -26.7672, 0.56" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.79214, -46.9685, -12.7411, 0.28", "-9.22471, -49.2398, -11.73, 0.28", "-10.1282, -50.7881, -11.0647, 0.56", "-10.7742, -51.9361, -10.5749, 0.56", "-11.765, -53.7224, -9.82975, 0.56", "-13.0327, -56.1636, -8.81862, 0.28", "-14.0801, -58.2842, -7.96007, 0.28", "-14.7855, -59.8228, -7.39975, 0.83", "-15.2414, -60.8994, -6.98825, 0.28", "-15.4977, -61.5036, -6.75564, 0.83", "-16.2305, -63.287, -6.06539, 0.28", "-16.5591, -64.0626, -5.80376, 0.28", "-16.8614, -64.6725, -5.65788, 0.56", "-17.3784, -65.5972, -5.48971, 0.28", "-17.9537, -66.633, -5.44218, 0.56", "-19.1202, -68.7288, -5.53045, 0.28", "-19.5691, -69.5309, -5.62854, 0.83", "-21.065, -71.9258, -6.17391, 0.28", "-21.9138, -73.1743, -6.5566, 0.56", "-23.3788, -75.2296, -7.39085, 0.28", "-23.6221, -75.5566, -7.54887, 0.83", "-24.2433, -76.3665, -8.00466, 0.83", "-27.0058, -79.7773, -10.0259, 0.28", "-27.4941, -80.3242, -10.3662, 0.56", "-28.6567, -81.4562, -11.1188, 0.28", "-29.0166, -81.7506, -11.3076, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.79214, -46.9685, -12.7411, 0.56", "-4.48979, -50.5309, -17.1677, 0.56", "-2.72865, -52.5681, -19.0243, 0.56", "-0.625439, -55.2274, -20.8412, 0.56", "0.815258, -57.3049, -22.0107, 1.11", "3.15778, -61.1047, -23.8545, 1.11", "4.93697, -64.3308, -25.4346, 0.56", "6.52429, -67.9969, -26.7288, 0.56", "7.56166, -70.7259, -27.5871, 0.28", "8.09183, -72.8401, -28.118, 0.56", "8.32958, -74.1192, -28.4739, 0.28", "8.87861, -77.9532, -29.3638, 0.56", "9.3739, -81.0152, -30.0513, 0.28", "9.51641, -81.9427, -30.2499, 0.83", "10.2263, -86.1488, -31.0622, 0.83", "10.7276, -88.6803, -31.4957, 0.56", "11.768, -93.384, -32.1493, 0.56", "12.826, -97.9894, -32.585, 1.39", "14.1172, -103.282, -32.9339, 0.28", "14.3071, -104.09, -32.9654, 0.83", "14.9858, -107.275, -32.9781, 0.28", "15.4714, -110.153, -32.834, 0.28", "15.647, -111.456, -32.7316, 0.83", "15.9931, -115.562, -32.2927, 0.28", "16.1642, -118.071, -32.0352, 0.28", "16.2631, -119.782, -31.9557, 0.83", "16.3772, -124.264, -31.8935, 0.28", "16.3617, -125.569, -31.9251, 0.83", "16.3329, -128.53, -32.0666, 1.39", "16.1987, -131.721, -32.2297, 1.39", "15.8562, -139.783, -32.5614, 0.28", "15.7932, -141.484, -32.6117, 0.83", "15.4905, -147.711, -32.8376, 0.28", "15.2923, -151.622, -32.8753, 0.28", "15.2489, -156.195, -32.67, 0.83", "15.2849, -158.993, -32.3959, 0.28", "15.3751, -161.328, -32.079, 0.83", "15.7358, -165.767, -31.289, 0.28", "16.0713, -168.717, -30.6669, 0.83", "17.3111, -179.268, -28.2611, 0.28", "17.5424, -181.063, -27.8375, 0.83", "17.8016, -184.416, -27.2195, 0.83", "17.9072, -191.328, -26.2989, 0.28", "17.8887, -192.141, -26.2614, 0.56", "17.6804, -195.042, -26.4139, 0.28", "17.488, -197.557, -26.7919, 1.39", "17.1224, -207.64, -28.7751, 0.28", "17.2549, -211.083, -29.6541, 1.11", "18.0082, -217.933, -31.7733, 0.28", "18.2875, -219.1, -32.1106, 0.83", "21.2529, -227.175, -34.2638, 0.28", "22.0093, -228.688, -34.6094, 0.83", "25.1227, -233.445, -35.2223, 0.28", "25.9065, -234.521, -35.2905, 0.56", "31.9438, -242.342, -35.098, 0.28", "32.8029, -243.439, -35.0123, 0.83", "33.8661, -244.851, -34.7612, 0.83", "36.7467, -248.949, -33.8343, 0.28", "37.1128, -249.51, -33.6702, 0.56", "38.1665, -251.222, -33.1269, 0.28", "38.7293, -252.25, -32.7319, 0.83", "41.5816, -257.523, -30.8, 0.28", "42.2085, -258.618, -30.4195, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-33.0488, 40.9887, 17.0819, 0.56", "-35.931, 40.3426, 17.8693, 0.56", "-39.5821, 39.524, 18.8667, 0.56", "-49.7577, 37.3984, 22.9451, 0.56", "-60.352, 34.4986, 24.9199, 0.56", "-70.477, 30.0544, 26.2657, 0.56", "-81.4913, 28.2773, 26.7345, 0.56", "-92.5675, 26.9598, 26.1833, 0.56", "-103.646, 25.7291, 25.4878, 0.56" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-33.0488, 40.9887, 17.0819, 0.56", "-34.9439, 40.1632, 17.5524, 0.56", "-35.8878, 39.7519, 17.7867, 0.56", "-36.8026, 39.3534, 18.0139, 0.56", "-39.62, 38.126, 18.7134, 0.56", "-41.7642, 37.1919, 19.2457, 0.56", "-46.5632, 35.1012, 20.4372, 0.28", "-52.6337, 31.6682, 22.8056, 0.28", "-58.1373, 27.1652, 24.6181, 0.28", "-63.9416, 23.0278, 26.4047, 0.28", "-69.428, 18.4795, 28.1496, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.59624, 17.4776, 6.66027, 0.56", "4.15032, 17.0515, 8.44397, 0.56", "3.32048, 16.9968, 9.27843, 0.56", "2.27531, 17.0578, 10.2541, 0.56", "1.19808, 17.1675, 11.1661, 0.83", "-0.483105, 17.3231, 12.4185, 0.56", "-0.994782, 17.39, 12.7669, 0.83", "-2.70331, 17.8133, 13.5792, 0.28", "-3.11061, 18.0548, 13.7903, 0.83", "-3.69665, 18.8336, 14.1491, 0.83", "-4.22667, 20.0449, 14.5792, 0.56", "-4.47707, 21.119, 14.911, 0.56", "-4.80989, 23.2107, 15.5226, 0.56", "-5.07148, 26.9505, 16.5649, 0.56", "-5.10329, 28.8545, 17.0867, 0.56", "-5.06331, 29.643, 17.2968, 0.56", "-4.78643, 31.9655, 17.9263, 0.56", "-8.45674, 35.8306, 20.4524, 0.56", "-12.1528, 39.8374, 22.6937, 0.56", "-16.4528, 43.5484, 24.3102, 0.56", "-20.4428, 47.7617, 25.3191, 0.56", "-24.5476, 51.9039, 26.1671, 0.56", "-28.0928, 56.585, 26.3812, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "5.59624, 17.4776, 6.66027, 0.56", "9.72023, 17.7756, 6.88567, 0.56", "13.0138, 18.1576, 7.28397, 0.56", "18.4809, 18.7916, 7.94511, 0.56", "23.0211, 19.3181, 8.49416, 0.56", "25.878, 19.6494, 8.83965, 0.56", "29.4728, 20.0663, 9.27438, 0.56", "32.3652, 20.362, 9.92658, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "67.0228, 12.0248, -70.3202, 0.56", "68.7259, 12.8984, -71.6778, 0.56", "69.5561, 13.3241, -72.3395, 0.56", "70.5202, 13.8186, -73.108, 0.28", "71.2378, 14.1867, -73.68, 0.28", "72.3258, 14.7447, -74.5473, 0.56" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "67.0228, 12.0248, -70.3202, 0.83", "68.2515, 10.189, -73.3213, 0.83", "69.2081, 8.98179, -75.5604, 0.83", "70.2529, 8.21683, -77.7146, 0.83", "71.2473, 7.74583, -79.5621, 0.56", "72.3797, 7.3083, -81.3037, 0.56", "73.6529, 6.91005, -83.0216, 0.28", "74.5015, 6.82353, -83.9511, 0.83", "77.3994, 6.82715, -86.6605, 0.83", "79.0853, 6.86963, -88.1117, 0.83", "81.4834, 6.91907, -90.401, 0.56", "82.5119, 6.87201, -91.4559, 0.56", "83.4729, 6.79424, -92.5589, 0.56", "85.5149, 6.58098, -95.3961, 0.56", "86.5937, 6.50971, -97.2501, 0.83", "88.746, 6.65794, -101.613, 0.56", "89.217, 6.7719, -102.767, 0.28", "89.888, 7.03147, -104.52, 1.11", "92.0085, 8.12204, -109.962, 0.56", "92.9739, 8.84838, -112.219, 0.56", "93.8844, 9.6194, -114.166, 1.39", "96.6734, 12.1008, -119.791, 0.28", "98.2104, 13.51, -122.779, 0.28", "100.051, 15.2339, -126.218, 1.39", "104.577, 19.6338, -134.277, 0.28", "105.816, 20.7837, -136.389, 0.83", "107.284, 22.1097, -138.795, 0.28", "107.571, 22.3537, -139.238, 0.56", "109.431, 23.8167, -142.085, 0.28", "110.26, 24.3901, -143.3, 1.11", "113.723, 26.247, -148.028, 0.28", "115.029, 26.8226, -149.675, 0.83", "118.067, 27.8432, -153.078, 0.28", "118.26, 27.8793, -153.291, 0.56", "119.672, 27.9391, -154.799, 0.28", "121.107, 27.8005, -156.373, 0.56", "122.113, 27.5412, -157.519, 0.28", "123.395, 27.134, -159.075, 0.83", "126.352, 26.1863, -162.763, 0.28", "126.53, 26.1335, -162.997, 0.56", "128.173, 25.6846, -165.363, 0.28", "128.687, 25.5721, -166.122, 0.56", "130.645, 25.2734, -169.145, 0.28", "131.485, 25.1721, -170.476, 0.83", "131.619, 25.1851, -170.742, 0.83", "133.241, 25.4579, -174.563, 0.28", "133.454, 25.5307, -175.104, 0.28", "133.694, 25.6356, -175.748, 0.83", "133.8, 25.6865, -176.022, 0.83", "138.115, 27.9629, -187.731, 0.28", "138.891, 28.4085, -189.86, 0.83", "141.34, 29.9841, -196.717, 0.28", "141.476, 30.0724, -197.099, 0.28", "142.079, 30.4871, -198.777, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "30.5852, 4.04031, -16.0292, 0.56", "32.6424, 3.9906, -16.9902, 0.56", "35.09, 3.58852, -18.0432, 0.56", "36.3018, 3.23771, -18.5815, 0.56", "38.1441, 2.55124, -19.4579, 0.56", "39.6679, 1.86982, -20.165, 0.56", "42.8228, 0.128633, -21.5879, 0.56", "44.3041, -1.04734, -22.2336, 0.56", "45.4692, -2.22162, -22.7308, 0.56", "46.2436, -3.13823, -23.0137, 0.56", "47.4472, -4.83247, -23.3998, 0.83", "48.6436, -6.87186, -23.8078, 0.56", "49.3912, -8.34994, -24.0788, 0.56", "50.377, -10.1704, -24.3295, 0.56", "51.2262, -11.5674, -24.4751, 0.56", "51.8335, -12.4322, -24.5649, 0.56", "52.4221, -13.1892, -24.7072, 0.83", "53.3392, -14.1228, -24.9674, 0.56", "54.0132, -14.7205, -25.1626, 0.56", "55.1251, -15.6514, -25.5198, 0.83", "57.4057, -17.4322, -26.2555, 0.83", "60.2933, -19.4711, -27.3303, 0.56", "62.0317, -20.643, -28.0989, 0.56", "63.0373, -21.2648, -28.6036, 0.56", "64.0353, -21.7826, -29.1984, 0.56", "65.1082, -22.1996, -29.9343, 0.56", "67.26, -22.5469, -31.6647, 0.83", "68.7728, -22.6087, -32.8147, 0.56", "69.8347, -22.6765, -33.6585, 0.83", "71.9522, -22.7891, -35.2367, 0.56", "72.9521, -22.8295, -35.9175, 0.56", "74.313, -22.9009, -36.737, 0.56", "77.3073, -23.2028, -38.2331, 0.28", "80.4294, -23.6547, -39.7522, 0.28", "81.8154, -23.969, -40.4474, 0.28", "83.3508, -24.4041, -41.1741, 0.28", "84.6099, -24.7504, -41.785, 0.28", "85.6286, -25.0427, -42.3241, 0.56", "88.2187, -25.7154, -43.9892, 0.28", "89.2654, -26.1035, -44.6059, 0.28", "90.2684, -26.6415, -45.3064, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "30.5852, 4.04031, -16.0292, 0.56", "32.4903, 1.60649, -16.8863, 0.56", "33.5821, 0.211833, -17.3774, 0.83", "34.5368, -1.00777, -17.8068, 0.83", "35.6095, -2.37815, -18.2894, 0.56", "37.2585, -4.48488, -19.0312, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "15.9038, -38.118, 8.66662, 0.56", "14.6768, -39.6595, 8.61791, 0.56", "13.4281, -41.2282, 8.56835, 0.56", "8.26178, -49.5403, 9.31203, 0.56", "2.34784, -57.377, 8.71964, 0.56", "-3.01281, -65.5012, 7.39385, 0.56", "-6.95383, -74.4412, 6.83631, 0.56", "-10.8605, -83.3742, 7.68047, 0.56", "-13.1111, -92.6374, 9.81952, 0.56", "-13.6974, -102.302, 10.9477, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "15.9038, -38.118, 8.66662, 0.56", "18.2336, -37.7811, 9.73131, 0.56", "23.2599, -37.0062, 11.9778, 0.56", "26.2375, -36.5472, 13.3086, 0.56", "29.29, -36.0766, 14.6729, 0.56", "33.4537, -35.4347, 16.5338, 0.56", "38.3623, -34.678, 18.7276, 0.56", "41.7349, -34.2673, 20.0968, 0.56", "56.1041, -34.2704, 23.1126, 0.56", "69.5823, -32.015, 28.4729, 0.56", "83.2026, -29.2777, 33.2059, 0.56", "96.5243, -25.6683, 38.1733, 0.56", "108.796, -22.1604, 45.3975, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "45.0808, -46.0285, 3.90426, 0.56", "47.4818, -48.0398, 3.36316, 0.56", "48.8578, -49.251, 3.06259, 0.28", "50.8654, -51.2579, 2.53568, 0.56", "53.5914, -54.0177, 1.78953, 0.28", "53.8959, -54.3275, 1.70776, 0.56", "54.9666, -55.46, 1.4239, 0.28", "55.4589, -55.969, 1.29759, 0.83", "57.8236, -58.3817, 0.683403, 0.28", "58.7613, -59.2797, 0.45728, 0.56", "60.1288, -60.4997, 0.155131, 0.28", "61.1161, -61.3487, -0.059299, 0.83", "63.4731, -63.1756, -0.546228, 0.83", "65.9321, -64.8864, -0.992932, 0.28", "67.4151, -65.7444, -1.18038, 0.56" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "45.0808, -46.0285, 3.90426, 0.56", "47.4767, -46.0419, 5.19833, 0.56", "48.6807, -45.9822, 5.73928, 0.56", "50.6021, -45.8233, 6.45764, 0.56", "52.6385, -45.542, 7.14401, 0.56", "54.9262, -45.2132, 7.68092, 0.83", "57.2934, -44.8788, 8.19761, 0.56", "58.7173, -44.6675, 8.34666, 0.56", "59.989, -44.5508, 8.40768, 0.56", "61.3312, -44.4088, 8.46023, 0.56", "63.9715, -43.8788, 8.51199, 0.56", "65.7713, -43.4066, 8.6304, 0.56", "67.2442, -43.0038, 8.80698, 0.56", "69.1779, -42.5215, 9.07837, 0.56", "71.8418, -41.8172, 9.52594, 0.56", "73.2083, -41.4322, 9.79795, 0.56", "74.8958, -40.7971, 10.2586, 0.56", "77.0569, -39.8489, 10.7262, 0.28", "84.9613, -37.2976, 12.6656, 0.28", "92.4922, -33.5157, 13.8187, 0.28", "99.6861, -29.0546, 13.2048, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "32.3652, 20.362, 9.92658, 0.56", "36.6354, 23.4369, 3.98673, 0.56", "38.934, 25.1394, 1.32345, 0.56", "39.4422, 25.53, 0.752019, 0.56", "40.6643, 26.4561, -0.639216, 0.28", "42.5049, 27.8713, -2.69041, 0.28", "43.7996, 28.9164, -4.11266, 0.83", "46.3549, 31.0296, -6.474, 0.28", "47.7008, 32.4612, -7.83229, 0.56", "49.4417, 34.5969, -9.69078, 0.28", "50.4913, 36.0315, -10.9245, 0.83", "51.2579, 37.2643, -11.8931, 0.28", "52.5867, 39.6162, -13.6401, 0.28", "54.2794, 42.7239, -15.7154, 0.28", "55.5974, 45.4447, -17.1757, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "32.3652, 20.362, 9.92658, 0.56", "34.1075, 20.7008, 11.9191, 0.56", "35.4366, 20.9593, 13.4393, 1.11", "37.7099, 21.4014, 16.039, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "37.2585, -4.48488, -19.0312, 0.56", "37.8403, -7.13047, -20.339, 0.56", "38.2439, -8.23413, -20.8675, 0.56", "38.4042, -8.67246, -21.0774, 0.56", "38.7614, -9.64899, -21.5451, 0.28", "39.3185, -11.1723, -22.2746, 0.56", "39.7718, -12.4118, -22.8682, 0.28", "40.2597, -13.2065, -23.1691, 0.56" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "37.2585, -4.48488, -19.0312, 0.56", "40.2348, -9.89944, -19.3967, 0.56", "41.0049, -11.3004, -19.4913, 0.56", "41.4823, -12.169, -19.55, 0.56", "42.7447, -14.4656, -19.705, 0.56", "43.7745, -16.3391, -19.8315, 0.56", "47.7369, -25.0592, -22.3405, 0.56" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "37.7099, 21.4014, 16.039, 0.56", "38.8273, 22.8184, 16.0673, 0.56", "40.3046, 24.6346, 16.1026, 0.56", "42.6476, 27.5152, 16.1585, 0.28", "45.6618, 31.2208, 16.2305, 0.28", "46.8251, 32.651, 16.2583, 0.28", "48.0081, 34.1053, 16.2865, 0.28", "48.826, 35.0796, 16.3084, 0.56", "53.6045, 41.5265, 16.8109, 0.56", "57.5896, 48.2826, 18.4719, 0.56", "62.5023, 54.2363, 20.753, 0.56", "68.4789, 58.9077, 23.5664, 0.56", "74.3006, 63.5898, 26.6667, 0.56" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "37.7099, 21.4014, 16.039, 0.83", "38.6091, 19.1285, 15.9523, 0.83", "39.1511, 17.7583, 15.9001, 0.83", "44.258, 8.84672, 16.195, 0.83", "49.1147, -0.190219, 15.9078, 0.83", "52.965, -9.60217, 14.7051, 0.83", "55.6153, -19.454, 13.89, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "40.2597, -13.2065, -23.1691, 0.56", "41.5862, -12.7408, -24.8065, 0.56", "43.2245, -12.1656, -26.8289, 0.28", "44.0231, -11.8852, -27.8148, 0.56" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "40.2597, -13.2065, -23.1691, 0.28", "40.7811, -16.0372, -23.8898, 0.28", "41.4939, -17.7108, -24.252, 0.56", "42.14, -18.604, -24.5864, 0.56", "43.441, -19.839, -25.2486, 0.56", "44.0167, -20.2877, -25.5824, 0.56", "45.8552, -21.5411, -26.6639, 0.83", "48.4741, -22.7356, -28.1703, 0.83", "51.5, -23.7996, -29.814, 0.56", "52.4286, -24.074, -30.337, 0.56", "54.4082, -24.4684, -31.4738, 0.56", "55.9594, -24.6948, -32.4376, 0.28", "57.0421, -24.8267, -33.1974, 0.28", "57.9288, -24.9504, -33.8556, 0.56", "59.5464, -25.241, -34.9494, 0.28", "61.5733, -25.5023, -36.327, 0.28", "62.2571, -25.5233, -36.7706, 0.56", "63.6492, -25.4612, -37.7856, 0.83", "64.4473, -25.3876, -38.4036, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "55.6153, -19.454, 13.89, 0.56", "59.9915, -27.8007, 11.4814, 0.56", "66.1635, -35.1636, 9.72215, 0.56", "70.7525, -43.6132, 8.20586, 0.56", "73.644, -52.7811, 6.80179, 0.56", "76.4263, -61.5858, 3.80295, 0.56", "81.0173, -69.9441, 1.86051, 0.56", "86.7305, -77.78, 0.762255, 0.56", "91.3768, -86.3522, 1.02466, 0.56", "95.0712, -95.2023, 2.89321, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "55.6153, -19.454, 13.89, 0.56", "58.8326, -27.5018, 14.2571, 0.56", "61.0261, -35.7808, 15.7286, 0.56", "65.1712, -43.1114, 18.0115, 0.56", "69.8985, -50.3309, 19.1921, 0.56", "74.4675, -57.7011, 18.7858, 0.56", "77.8958, -65.6139, 17.992, 0.56", "79.6093, -73.9791, 16.6473, 0.56", "80.6505, -82.5703, 16.3899, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_47", "dend_32", "dend_31", "dend_18", "dend_7", "dend_0", "dend_50", "dend_49", "dend_46", "dend_33", "dend_30", "dend_19", "dend_11", "dend_8", "dend_4", "dend_1", "dend_52", "dend_51", "dend_43", "dend_34", "dend_27", "dend_20", "dend_15", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_45", "dend_44", "dend_42", "dend_35", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_41", "dend_36", "dend_23", "dend_22", "dend_40", "dend_37", "dend_25", "dend_24", "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_47", "dend_32", "dend_31", "dend_18", "dend_7", "dend_0", "dend_50", "dend_49", "dend_46", "dend_33", "dend_30", "dend_19", "dend_11", "dend_8", "dend_4", "dend_1", "dend_52", "dend_51", "dend_43", "dend_34", "dend_27", "dend_20", "dend_15", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_45", "dend_44", "dend_42", "dend_35", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_41", "dend_36", "dend_23", "dend_22", "dend_40", "dend_37", "dend_25", "dend_24", "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_NBC_ed12f3afab_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_32
create dend_46
public dend_46
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_18
create dend_30
public dend_30
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_39
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.4999989408307432)
    connect dend_47(0), soma_0(0.4999989408307432)
    connect dend_32(0), soma_0(0.4999989408307432)
    connect dend_31(0), soma_0(0.4999989408307432)
    connect dend_18(0), soma_0(0.4999989408307432)
    connect dend_7(0), soma_0(0.4999989408307432)
    connect dend_0(0), soma_0(0.4999989408307432)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.33004, 6.9136, -1.72338, 3.35756 ) }
    soma_0 { pt3dadd( -1.30767, 6.0419, -1.50091, 5.92196 ) }
    soma_0 { pt3dadd( -1.2853, 5.17019, -1.27844, 10.136 ) }
    soma_0 { pt3dadd( -1.26293, 4.29848, -1.05596, 12.0381 ) }
    soma_0 { pt3dadd( -1.24056, 3.42677, -0.833493, 14.7633 ) }
    soma_0 { pt3dadd( -1.21819, 2.55506, -0.61102, 15.4638 ) }
    soma_0 { pt3dadd( -1.19582, 1.68335, -0.388548, 15.4684 ) }
    soma_0 { pt3dadd( -1.17345, 0.811646, -0.166076, 15.4327 ) }
    soma_0 { pt3dadd( -1.15108, -0.0600623, 0.0563968, 14.9176 ) }
    soma_0 { pt3dadd( -1.12871, -0.931771, 0.278869, 14.1939 ) }
    soma_0 { pt3dadd( -1.10634, -1.80348, 0.501341, 13.4702 ) }
    soma_0 { pt3dadd( -1.08397, -2.67519, 0.723814, 12.7466 ) }
    soma_0 { pt3dadd( -1.0616, -3.5469, 0.946286, 12.3598 ) }
    soma_0 { pt3dadd( -1.03923, -4.4186, 1.16876, 12.0665 ) }
    soma_0 { pt3dadd( -1.01686, -5.29031, 1.39123, 11.6276 ) }
    soma_0 { pt3dadd( -0.994493, -6.16202, 1.6137, 11.1336 ) }
    soma_0 { pt3dadd( -0.972123, -7.03373, 1.83618, 10.6396 ) }
    soma_0 { pt3dadd( -0.949754, -7.90544, 2.05865, 9.89654 ) }
    soma_0 { pt3dadd( -0.927384, -8.77715, 2.28112, 8.0678 ) }
    soma_0 { pt3dadd( -0.905015, -9.64885, 2.50359, 6.12489 ) }
    soma_0 { pt3dadd( -0.882645, -10.5206, 2.72606, 3.55851 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -6.38069, 1.59658, -14.2729, 1.39 ) }
    dend_48 { pt3dadd( -6.30618, 1.29512, -15.0552, 1.39 ) }
    dend_48 { pt3dadd( -6.16978, 0.74324, -16.4872, 1.11 ) }
    dend_48 { pt3dadd( -6.03681, 0.205237, -17.8833, 1.11 ) }
    dend_48 { pt3dadd( -5.51051, -1.92417, -23.4088, 1.11 ) }
    dend_48 { pt3dadd( -5.30056, -2.77365, -25.6131, 1.11 ) }
    dend_48 { pt3dadd( -5.17823, -3.26858, -26.8974, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 28/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -5.84069, 6.05233, -3.83293, 1.11 ) }
    dend_47 { pt3dadd( -10.2055, 8.82033, -4.32516, 0.83 ) }
    dend_47 { pt3dadd( -12.9059, 10.7045, -4.27765, 0.83 ) }
    dend_47 { pt3dadd( -15.093, 12.4358, -4.43511, 0.83 ) }
    dend_47 { pt3dadd( -19.8069, 16.4711, -5.02008, 0.83 ) }
    dend_47 { pt3dadd( -23.426, 19.5779, -5.55397, 0.83 ) }
    dend_47 { pt3dadd( -26.5768, 22.1666, -6.04449, 0.83 ) }
    dend_47 { pt3dadd( -30.1831, 24.6817, -6.29539, 0.83 ) }
    dend_47 { pt3dadd( -35.3792, 27.9701, -6.77576, 0.83 ) }
    dend_47 { pt3dadd( -37.0863, 29.0244, -6.99745, 0.56 ) }
    dend_47 { pt3dadd( -38.5392, 29.9166, -7.35385, 0.83 ) }
    dend_47 { pt3dadd( -40.4004, 30.9305, -7.91423, 0.83 ) }
    dend_47 { pt3dadd( -42.9193, 32.0197, -8.73373, 0.83 ) }
    dend_47 { pt3dadd( -46.0461, 33.0475, -9.2503, 0.28 ) }
    dend_47 { pt3dadd( -48.7753, 34.2079, -9.54527, 0.83 ) }
    dend_47 { pt3dadd( -52.9246, 36.1862, -10.181, 0.56 ) }
    dend_47 { pt3dadd( -54.4293, 37.0171, -10.486, 0.56 ) }
    dend_47 { pt3dadd( -57.7785, 38.9084, -11.2912, 0.56 ) }
    dend_47 { pt3dadd( -64.1837, 42.4531, -13.0783, 0.56 ) }
    dend_47 { pt3dadd( -70.5111, 45.7439, -15.0766, 0.56 ) }
    dend_47 { pt3dadd( -76.1117, 48.4497, -17.0417, 0.56 ) }
    dend_47 { pt3dadd( -80.5129, 50.5484, -18.6524, 0.56 ) }
    dend_47 { pt3dadd( -83.4098, 51.7982, -19.8287, 0.56 ) }
    dend_47 { pt3dadd( -86.3111, 52.915, -21.132, 0.56 ) }
    dend_47 { pt3dadd( -89.0877, 53.8697, -22.591, 0.56 ) }
    dend_47 { pt3dadd( -91.6482, 54.5752, -23.8814, 0.56 ) }
    dend_47 { pt3dadd( -93.1853, 55.0134, -24.6996, 0.56 ) }
    dend_47 { pt3dadd( -96.8427, 56.0707, -26.7505, 0.56 ) }
    dend_47 { pt3dadd( -100.64, 57.2979, -28.9216, 0.56 ) }
    dend_47 { pt3dadd( -104.082, 58.4854, -31.0174, 0.56 ) }
    dend_47 { pt3dadd( -106.334, 59.273, -32.457, 0.56 ) }
    dend_47 { pt3dadd( -108.519, 60.0659, -33.8757, 0.28 ) }
    dend_47 { pt3dadd( -111.878, 61.257, -36.0915, 0.56 ) }
    dend_47 { pt3dadd( -113.669, 61.8766, -37.2345, 0.56 ) }
    dend_47 { pt3dadd( -116.014, 62.6181, -38.6832, 0.56 ) }
    dend_47 { pt3dadd( -119.059, 63.6114, -40.4511, 0.28 ) }
    dend_47 { pt3dadd( -121.287, 64.3938, -41.6681, 0.28 ) }
    dend_47 { pt3dadd( -123.632, 65.3419, -42.8646, 0.56 ) }
    dend_47 { pt3dadd( -126.077, 66.4604, -44.1286, 0.56 ) }
    dend_47 { pt3dadd( -128.776, 67.8739, -45.5214, 0.28 ) }
    dend_47 { pt3dadd( -129.796, 68.4292, -46.0193, 0.56 ) }
    dend_47 { pt3dadd( -132.431, 69.9669, -47.3402, 0.28 ) }
    dend_47 { pt3dadd( -133.422, 70.5452, -47.8477, 0.83 ) }
    dend_47 { pt3dadd( -137.421, 72.9371, -49.8283, 0.28 ) }
    dend_47 { pt3dadd( -140.821, 75.2012, -51.6702, 0.28 ) }
    dend_47 { pt3dadd( -142.852, 76.5889, -52.7641, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 74/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.16931, 5.51607, 2.45707, 5.56 ) }
    dend_32 { pt3dadd( 1.48378, 6.77966, 2.45707, 5.56 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 76/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.99931, 4.80433, -11.5829, 1.39 ) }
    dend_31 { pt3dadd( 3.34847, 5.57266, -12.3701, 1.11 ) }
    dend_31 { pt3dadd( 4.10607, 7.90066, -15.0704, 1.11 ) }
    dend_31 { pt3dadd( 4.41077, 9.37968, -17.5938, 1.11 ) }
    dend_31 { pt3dadd( 4.53087, 10.3595, -20.331, 1.11 ) }
    dend_31 { pt3dadd( 4.63353, 11.0306, -22.858, 1.11 ) }
    dend_31 { pt3dadd( 4.77775, 11.527, -24.8786, 1.11 ) }
    dend_31 { pt3dadd( 4.98859, 11.9411, -28.0612, 1.11 ) }
    dend_31 { pt3dadd( 5.27377, 11.9455, -33.2872, 1.11 ) }
    dend_31 { pt3dadd( 5.33119, 11.5425, -37.3856, 0.83 ) }
    dend_31 { pt3dadd( 5.3345, 11.3206, -38.7553, 0.83 ) }
    dend_31 { pt3dadd( 5.36041, 10.8564, -41.4399, 0.83 ) }
    dend_31 { pt3dadd( 5.43949, 10.2813, -44.3832, 0.83 ) }
    dend_31 { pt3dadd( 5.53038, 9.9474, -46.6667, 0.83 ) }
    dend_31 { pt3dadd( 5.76728, 9.33522, -51.8047, 0.83 ) }
    dend_31 { pt3dadd( 5.96845, 8.79102, -56.4661, 0.83 ) }
    dend_31 { pt3dadd( 6.03832, 8.40257, -59.4519, 0.83 ) }
    dend_31 { pt3dadd( 6.09112, 8.10035, -61.6318, 0.83 ) }
    dend_31 { pt3dadd( 6.44465, 6.99701, -71.0126, 0.56 ) }
    dend_31 { pt3dadd( 6.58483, 6.73426, -73.5632, 0.56 ) }
    dend_31 { pt3dadd( 6.73789, 6.53309, -75.6258, 1.39 ) }
    dend_31 { pt3dadd( 7.23836, 5.87161, -81.9396, 0.56 ) }
    dend_31 { pt3dadd( 7.49208, 5.529, -84.5646, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 99/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 6.60931, 3.29307, -6.83293, 2.78 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( 7.35976, 4.44962, -7.63501, 2.78 ) }
    dend_18 { pt3dadd( 8.58396, 6.33629, -8.94345, 2.22 ) }
    dend_18 { pt3dadd( 10.1894, 8.81064, -10.6595, 3.06 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 3/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.46931, -9.96692, 3.82707, 1.94 ) }
    dend_7 { pt3dadd( 2.8694, -11.8117, 3.78729, 1.39 ) }
    dend_7 { pt3dadd( 3.21225, -13.3925, 3.7532, 2.22 ) }
    dend_7 { pt3dadd( 3.54859, -14.9433, 3.71976, 2.5 ) }
    dend_7 { pt3dadd( 4.31542, -18.4791, 3.64352, 1.39 ) }
    dend_7 { pt3dadd( 4.61292, -19.8508, 3.61394, 1.39 ) }
    dend_7 { pt3dadd( 5.41488, -23.5485, 3.53421, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 10/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.07069, -9.85968, -1.42293, 2.78 ) }
    dend_0 { pt3dadd( -5.68521, -10.8157, -1.97493, 2.22 ) }
    dend_0 { pt3dadd( -6.53001, -12.13, -2.7338, 2.22 ) }
    dend_0 { pt3dadd( -7.64288, -13.8614, -3.73344, 2.78 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 14/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.882645, -10.5206, 2.72606, 0.644147 ) }
    axon_0 { pt3dadd( -0.497843, -25.5157, 2.72606, 0.644147 ) }
    axon_0 { pt3dadd( -0.11304, -40.5107, 2.72606, 0.644147 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 17/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -5.17823, -3.26858, -26.8974, 1.11 ) }
    dend_50 { pt3dadd( -7.06481, -3.46328, -27.0457, 1.11 ) }
    dend_50 { pt3dadd( -9.07827, -3.73151, -28.0007, 1.11 ) }
    dend_50 { pt3dadd( -12.0636, -4.1292, -29.4165, 1.11 ) }
    dend_50 { pt3dadd( -15.5129, -4.58872, -31.0524, 1.11 ) }
    dend_50 { pt3dadd( -17.2271, -4.81708, -31.8654, 0.83 ) }
    dend_50 { pt3dadd( -20.2239, -5.21631, -33.2867, 1.11 ) }
    dend_50 { pt3dadd( -26.5378, -6.43084, -37.0665, 1.39 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 25/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.17823, -3.26858, -26.8974, 0.83 ) }
    dend_49 { pt3dadd( -6.06789, -7.45311, -27.12, 0.83 ) }
    dend_49 { pt3dadd( -6.58113, -10.1853, -27.1537, 0.28 ) }
    dend_49 { pt3dadd( -6.86935, -11.8286, -27.1391, 0.56 ) }
    dend_49 { pt3dadd( -7.46959, -15.6092, -27.0675, 0.28 ) }
    dend_49 { pt3dadd( -7.77271, -17.8552, -27.0327, 0.56 ) }
    dend_49 { pt3dadd( -8.06681, -20.453, -26.9965, 0.28 ) }
    dend_49 { pt3dadd( -8.37116, -24.228, -26.909, 0.83 ) }
    dend_49 { pt3dadd( -8.55233, -27.8392, -26.7855, 0.28 ) }
    dend_49 { pt3dadd( -8.63559, -30.6062, -26.6988, 0.83 ) }
    dend_49 { pt3dadd( -8.62025, -33.2599, -26.6243, 0.28 ) }
    dend_49 { pt3dadd( -8.55018, -35.1538, -26.6302, 0.83 ) }
    dend_49 { pt3dadd( -8.43075, -36.8925, -26.592, 0.83 ) }
    dend_49 { pt3dadd( -8.19207, -39.6542, -26.4902, 0.28 ) }
    dend_49 { pt3dadd( -8.13581, -40.6243, -26.4432, 0.83 ) }
    dend_49 { pt3dadd( -8.04079, -45.2249, -26.181, 0.28 ) }
    dend_49 { pt3dadd( -8.06568, -45.8738, -26.1468, 0.56 ) }
    dend_49 { pt3dadd( -8.40881, -49.1406, -26.0101, 0.28 ) }
    dend_49 { pt3dadd( -8.67907, -50.8833, -25.9518, 0.83 ) }
    dend_49 { pt3dadd( -9.89037, -56.5974, -26.0279, 0.28 ) }
    dend_49 { pt3dadd( -10.4378, -58.5677, -26.1209, 0.56 ) }
    dend_49 { pt3dadd( -11.957, -62.5306, -26.4029, 0.28 ) }
    dend_49 { pt3dadd( -13.4882, -65.8032, -26.7002, 0.28 ) }
    dend_49 { pt3dadd( -14.0881, -66.9465, -26.8429, 0.83 ) }
    dend_49 { pt3dadd( -15.8508, -69.981, -27.2368, 0.28 ) }
    dend_49 { pt3dadd( -17.012, -71.6578, -27.5128, 0.56 ) }
    dend_49 { pt3dadd( -19.1611, -74.3364, -28.0069, 0.28 ) }
    dend_49 { pt3dadd( -20.7596, -75.9611, -28.3347, 0.56 ) }
    // Section: dend_46, id: dend_46, parent: dend_32 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.48378, 6.77966, 2.45707, 0.56 ) }
    dend_46 { pt3dadd( -3.44219, 9.6946, 0.034516, 0.56 ) }
    dend_46 { pt3dadd( -5.73184, 11.234, -0.84804, 0.56 ) }
    dend_46 { pt3dadd( -8.04305, 12.8371, -1.46819, 0.56 ) }
    dend_46 { pt3dadd( -9.92812, 14.2208, -1.80129, 0.83 ) }
    dend_46 { pt3dadd( -12.0007, 15.8685, -2.13151, 0.56 ) }
    dend_46 { pt3dadd( -12.8351, 16.6086, -2.26775, 0.83 ) }
    dend_46 { pt3dadd( -15.4179, 19.4223, -2.51678, 0.56 ) }
    dend_46 { pt3dadd( -17.4166, 22.0932, -2.60116, 0.56 ) }
    dend_46 { pt3dadd( -18.5932, 23.789, -2.63412, 0.56 ) }
    dend_46 { pt3dadd( -20.402, 26.3988, -2.62952, 0.56 ) }
    dend_46 { pt3dadd( -22.1205, 28.7737, -2.7118, 0.56 ) }
    dend_46 { pt3dadd( -23.7234, 30.7647, -2.89977, 0.56 ) }
    dend_46 { pt3dadd( -25.3263, 32.5206, -3.25425, 0.56 ) }
    dend_46 { pt3dadd( -27.3844, 34.4376, -3.7462, 0.56 ) }
    dend_46 { pt3dadd( -28.5823, 35.4029, -4.01885, 0.83 ) }
    dend_46 { pt3dadd( -30.3488, 36.5245, -4.32444, 0.56 ) }
    dend_46 { pt3dadd( -32.5328, 37.5061, -4.6968, 0.83 ) }
    dend_46 { pt3dadd( -35.0627, 38.2539, -5.20876, 0.28 ) }
    dend_46 { pt3dadd( -37.2248, 38.5957, -5.72729, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 73/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.48378, 6.77966, 2.45707, 5.56 ) }
    dend_33 { pt3dadd( 1.54968, 6.97646, 3.08052, 5.56 ) }
    // Section: dend_30, id: dend_30, parent: dend_18 (entry count 75/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 10.1894, 8.81064, -10.6595, 0.83 ) }
    dend_30 { pt3dadd( 15.8057, 9.9659, -20.4563, 0.83 ) }
    dend_30 { pt3dadd( 17.4655, 10.4197, -23.6179, 0.56 ) }
    dend_30 { pt3dadd( 19.1063, 10.8607, -26.7855, 0.56 ) }
    dend_30 { pt3dadd( 21.3048, 11.3771, -31.6633, 0.56 ) }
    dend_30 { pt3dadd( 23.1074, 11.8402, -35.904, 0.56 ) }
    dend_30 { pt3dadd( 24.9476, 12.382, -40.1903, 0.56 ) }
    dend_30 { pt3dadd( 26.0277, 12.772, -42.7426, 0.56 ) }
    dend_30 { pt3dadd( 26.8017, 13.0638, -44.5485, 0.83 ) }
    dend_30 { pt3dadd( 30.7571, 14.7674, -53.2222, 0.56 ) }
    dend_30 { pt3dadd( 31.9948, 15.3596, -55.6405, 0.83 ) }
    dend_30 { pt3dadd( 33.2066, 15.9086, -57.8205, 0.56 ) }
    dend_30 { pt3dadd( 35.0655, 16.7441, -60.9913, 0.83 ) }
    dend_30 { pt3dadd( 38.0443, 18.1328, -65.9221, 0.56 ) }
    dend_30 { pt3dadd( 40.789, 19.4265, -70.5362, 0.28 ) }
    dend_30 { pt3dadd( 42.0623, 19.9519, -72.6607, 0.56 ) }
    dend_30 { pt3dadd( 45.187, 21.058, -78.6863, 0.28 ) }
    dend_30 { pt3dadd( 46.8069, 21.4543, -82.1809, 1.11 ) }
    dend_30 { pt3dadd( 48.0155, 21.6225, -85.057, 0.56 ) }
    dend_30 { pt3dadd( 49.8056, 21.5554, -90.1286, 0.56 ) }
    dend_30 { pt3dadd( 50.7418, 21.3611, -92.9062, 0.56 ) }
    dend_30 { pt3dadd( 52.793, 20.7155, -99.4647, 0.56 ) }
    dend_30 { pt3dadd( 55.7954, 19.5104, -109.02, 0.28 ) }
    dend_30 { pt3dadd( 56.8718, 18.9985, -112.428, 0.83 ) }
    dend_30 { pt3dadd( 60.6464, 17.2516, -124.043, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( 61.1498, 17.0128, -125.57, 0.83 ) }
    dend_30 { pt3dadd( 65.0772, 15.1534, -137.315, 0.28 ) }
    dend_30 { pt3dadd( 66.2309, 14.5244, -140.709, 0.56 ) }
    dend_30 { pt3dadd( 68.0949, 13.4486, -146.418, 0.28 ) }
    dend_30 { pt3dadd( 69.693, 12.6537, -150.842, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 5/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 10.1894, 8.81064, -10.6595, 2.5 ) }
    dend_19 { pt3dadd( 12.2227, 9.8732, -13.0599, 2.5 ) }
    dend_19 { pt3dadd( 14.5055, 11.0661, -15.755, 1.94 ) }
    dend_19 { pt3dadd( 17.0375, 12.3892, -18.7442, 1.94 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 9/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.41488, -23.5485, 3.53421, 0.83 ) }
    dend_11 { pt3dadd( 6.55937, -24.7648, 3.38453, 0.83 ) }
    dend_11 { pt3dadd( 7.39967, -25.6578, 3.27464, 0.83 ) }
    dend_11 { pt3dadd( 9.06869, -27.4315, 3.05636, 0.83 ) }
    dend_11 { pt3dadd( 10.2769, -28.7156, 2.89834, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 14/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 5.41488, -23.5485, 3.53421, 0.83 ) }
    dend_8 { pt3dadd( 5.90069, -29.8066, 8.82518, 0.83 ) }
    dend_8 { pt3dadd( 5.99936, -31.0776, 9.89974, 0.83 ) }
    dend_8 { pt3dadd( 6.20057, -33.6696, 12.0912, 1.39 ) }
    dend_8 { pt3dadd( 6.45649, -36.9663, 14.8784, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 19/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.64288, -13.8614, -3.73344, 1.11 ) }
    dend_4 { pt3dadd( -7.82295, -14.9399, -5.69637, 1.11 ) }
    dend_4 { pt3dadd( -8.43089, -15.739, -8.11012, 1.11 ) }
    dend_4 { pt3dadd( -9.20553, -16.1936, -10.0597, 1.11 ) }
    dend_4 { pt3dadd( -9.913, -16.6088, -11.8402, 1.11 ) }
    dend_4 { pt3dadd( -10.4515, -16.9247, -13.1954, 1.11 ) }
    dend_4 { pt3dadd( -11.2649, -17.4021, -15.2425, 1.11 ) }
    dend_4 { pt3dadd( -12.8678, -17.6556, -17.7166, 1.11 ) }
    dend_4 { pt3dadd( -13.8372, -17.5633, -18.7624, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 28/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.64288, -13.8614, -3.73344, 1.11 ) }
    dend_1 { pt3dadd( -7.50444, -19.4271, -4.56016, 1.11 ) }
    dend_1 { pt3dadd( -7.52186, -24.9022, -5.61906, 1.11 ) }
    dend_1 { pt3dadd( -7.55252, -30.9724, -7.02615, 1.11 ) }
    dend_1 { pt3dadd( -7.49697, -33.481, -7.68196, 1.11 ) }
    dend_1 { pt3dadd( -7.45389, -35.4263, -8.19052, 1.11 ) }
    dend_1 { pt3dadd( -7.41726, -37.0803, -8.62291, 1.11 ) }
    dend_1 { pt3dadd( -7.49942, -39.5177, -9.34139, 1.11 ) }
    dend_1 { pt3dadd( -7.84384, -43.7425, -11.1289, 1.11 ) }
    dend_1 { pt3dadd( -7.79214, -46.9685, -12.7411, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 38/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.11304, -40.5107, 2.72606, 0.56 ) }
    axon_1 { pt3dadd( 0.271762, -55.5058, 2.72606, 0.56 ) }
    axon_1 { pt3dadd( 0.656564, -70.5009, 2.72606, 0.56 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -26.5378, -6.43084, -37.0665, 0.83 ) }
    dend_52 { pt3dadd( -28.4912, -6.52905, -37.0083, 0.83 ) }
    dend_52 { pt3dadd( -30.1745, -6.55934, -36.7598, 0.28 ) }
    dend_52 { pt3dadd( -31.0299, -6.52945, -36.6032, 0.28 ) }
    dend_52 { pt3dadd( -31.9692, -6.48271, -36.4228, 0.28 ) }
    dend_52 { pt3dadd( -33.9741, -6.36671, -36.1041, 1.11 ) }
    dend_52 { pt3dadd( -35.854, -6.2293, -35.8717, 0.28 ) }
    dend_52 { pt3dadd( -37.951, -6.0388, -35.6619, 0.56 ) }
    dend_52 { pt3dadd( -40.346, -5.75758, -35.5285, 0.28 ) }
    dend_52 { pt3dadd( -41.3065, -5.64389, -35.5072, 0.83 ) }
    dend_52 { pt3dadd( -43.6618, -5.36853, -35.576, 0.56 ) }
    dend_52 { pt3dadd( -44.9593, -5.23909, -35.6634, 0.28 ) }
    dend_52 { pt3dadd( -47.3543, -5.03215, -35.9586, 0.56 ) }
    dend_52 { pt3dadd( -49.485, -4.87073, -36.3097, 0.28 ) }
    dend_52 { pt3dadd( -52.6053, -4.73812, -36.8354, 1.11 ) }
    dend_52 { pt3dadd( -54.9544, -4.68711, -37.2565, 0.28 ) }
    dend_52 { pt3dadd( -56.627, -4.76699, -37.5762, 0.83 ) }
    dend_52 { pt3dadd( -58.6888, -5.00891, -37.9825, 0.28 ) }
    dend_52 { pt3dadd( -59.7438, -5.20242, -38.2051, 0.56 ) }
    dend_52 { pt3dadd( -61.5228, -5.66442, -38.6137, 0.28 ) }
    dend_52 { pt3dadd( -63.4365, -6.32917, -39.0987, 0.56 ) }
    dend_52 { pt3dadd( -66.6502, -7.59533, -39.9588, 0.28 ) }
    dend_52 { pt3dadd( -68.6275, -8.40158, -40.5141, 0.28 ) }
    dend_52 { pt3dadd( -69.4088, -8.71011, -40.7281, 0.56 ) }
    dend_52 { pt3dadd( -70.7919, -9.22726, -41.1119, 0.28 ) }
    dend_52 { pt3dadd( -73.5666, -10.2085, -41.8951, 0.56 ) }
    dend_52 { pt3dadd( -76.1974, -11.1077, -42.5859, 0.28 ) }
    dend_52 { pt3dadd( -76.8781, -11.3073, -42.7517, 0.56 ) }
    dend_52 { pt3dadd( -79.723, -12.1142, -43.4089, 0.56 ) }
    dend_52 { pt3dadd( -80.5576, -12.3394, -43.5912, 0.28 ) }
    dend_52 { pt3dadd( -83.5831, -13.12, -44.1747, 0.28 ) }
    dend_52 { pt3dadd( -85.7861, -13.6473, -44.5787, 0.83 ) }
    dend_52 { pt3dadd( -87.7108, -14.1677, -44.865, 0.28 ) }
    dend_52 { pt3dadd( -88.5396, -14.4024, -44.9868, 0.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -26.5378, -6.43084, -37.0665, 0.56 ) }
    dend_51 { pt3dadd( -28.0764, -5.88841, -37.9452, 0.56 ) }
    dend_51 { pt3dadd( -28.6313, -5.6796, -38.2708, 0.56 ) }
    dend_51 { pt3dadd( -31.667, -4.12257, -40.6878, 0.28 ) }
    dend_51 { pt3dadd( -33.706, -2.91386, -42.9549, 0.83 ) }
    dend_51 { pt3dadd( -38.2113, -0.194376, -48.4468, 0.28 ) }
    dend_51 { pt3dadd( -38.9178, 0.231364, -49.341, 0.28 ) }
    dend_51 { pt3dadd( -39.4466, 0.55465, -50.0967, 0.83 ) }
    dend_51 { pt3dadd( -42.7579, 2.61612, -55.2164, 0.83 ) }
    dend_51 { pt3dadd( -46.4833, 4.70445, -61.2351, 0.28 ) }
    dend_51 { pt3dadd( -47.0335, 4.97448, -62.0742, 0.28 ) }
    dend_51 { pt3dadd( -47.238, 5.03796, -62.3452, 0.83 ) }
    dend_51 { pt3dadd( -49.2905, 5.41282, -64.7418, 0.28 ) }
    dend_51 { pt3dadd( -50.0336, 5.4872, -65.5542, 1.11 ) }
    dend_51 { pt3dadd( -56.0259, 5.64561, -71.4785, 0.28 ) }
    dend_51 { pt3dadd( -58.1705, 5.62575, -73.526, 1.39 ) }
    dend_51 { pt3dadd( -64.3931, 5.4255, -79.4953, 0.28 ) }
    dend_51 { pt3dadd( -67.0738, 5.28937, -82.1524, 1.11 ) }
    dend_51 { pt3dadd( -71.5647, 4.89803, -86.6966, 0.28 ) }
    dend_51 { pt3dadd( -72.3152, 4.83461, -87.4808, 0.56 ) }
    dend_51 { pt3dadd( -74.5943, 4.63617, -89.844, 0.28 ) }
    dend_51 { pt3dadd( -77.4171, 4.53704, -92.6673, 0.56 ) }
    dend_51 { pt3dadd( -79.6564, 4.60451, -94.5761, 0.28 ) }
    dend_51 { pt3dadd( -80.7844, 4.72557, -95.5199, 0.83 ) }
    dend_51 { pt3dadd( -85.0636, 5.39956, -98.5687, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -86.4681, 5.7228, -99.5302, 0.83 ) }
    dend_51 { pt3dadd( -88.5373, 6.43759, -100.722, 0.28 ) }
    dend_51 { pt3dadd( -91.5386, 7.73972, -101.926, 0.56 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 3/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 1.54968, 6.97646, 3.08052, 0.56 ) }
    dend_43 { pt3dadd( -0.357646, 9.6334, 3.05729, 0.56 ) }
    dend_43 { pt3dadd( -1.91665, 11.9436, 3.23586, 0.56 ) }
    dend_43 { pt3dadd( -3.28784, 14.0244, 3.53326, 0.56 ) }
    dend_43 { pt3dadd( -3.96041, 15.0804, 3.68689, 0.56 ) }
    dend_43 { pt3dadd( -5.30647, 17.142, 4.00982, 0.56 ) }
    dend_43 { pt3dadd( -6.8004, 19.2938, 4.37828, 0.56 ) }
    dend_43 { pt3dadd( -7.43445, 20.068, 4.54337, 0.56 ) }
    dend_43 { pt3dadd( -8.70171, 21.4968, 4.98769, 0.28 ) }
    dend_43 { pt3dadd( -9.59561, 22.5026, 5.3402, 0.56 ) }
    dend_43 { pt3dadd( -10.8832, 23.8548, 5.77218, 0.56 ) }
    dend_43 { pt3dadd( -11.9973, 24.8652, 6.04163, 0.56 ) }
    dend_43 { pt3dadd( -14.2069, 26.8492, 6.63993, 0.56 ) }
    dend_43 { pt3dadd( -15.3954, 27.8305, 7.039, 0.56 ) }
    dend_43 { pt3dadd( -17.2311, 29.2707, 7.77845, 0.56 ) }
    dend_43 { pt3dadd( -18.9766, 30.621, 8.62813, 0.56 ) }
    dend_43 { pt3dadd( -21.2677, 32.4222, 9.84576, 0.56 ) }
    dend_43 { pt3dadd( -24.5745, 34.9674, 11.718, 0.56 ) }
    dend_43 { pt3dadd( -26.4036, 36.3505, 12.809, 0.56 ) }
    dend_43 { pt3dadd( -28.075, 37.5274, 13.7641, 0.56 ) }
    dend_43 { pt3dadd( -29.9269, 38.7297, 14.8544, 0.56 ) }
    dend_43 { pt3dadd( -31.386, 39.737, 15.8715, 0.56 ) }
    dend_43 { pt3dadd( -33.0488, 40.9887, 17.0819, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 26/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 1.54968, 6.97646, 3.08052, 2.22 ) }
    dend_34 { pt3dadd( 3.03892, 10.8411, 4.39796, 2.22 ) }
    dend_34 { pt3dadd( 4.14715, 13.7171, 5.37834, 1.11 ) }
    dend_34 { pt3dadd( 5.59624, 17.4776, 6.66027, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 30/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 17.0375, 12.3892, -18.7442, 0.83 ) }
    dend_27 { pt3dadd( 19.6984, 11.7604, -22.6186, 0.83 ) }
    dend_27 { pt3dadd( 22.4557, 11.1915, -26.014, 0.83 ) }
    dend_27 { pt3dadd( 24.7303, 10.8354, -28.4927, 0.83 ) }
    dend_27 { pt3dadd( 31.3102, 10.2079, -35.2411, 0.83 ) }
    dend_27 { pt3dadd( 34.6371, 10.071, -38.5641, 0.83 ) }
    dend_27 { pt3dadd( 42.8237, 10.0552, -47.2544, 0.83 ) }
    dend_27 { pt3dadd( 45.8903, 10.1228, -50.4058, 0.83 ) }
    dend_27 { pt3dadd( 48.6658, 10.2172, -53.1236, 0.83 ) }
    dend_27 { pt3dadd( 51.3422, 10.3372, -55.6286, 0.83 ) }
    dend_27 { pt3dadd( 58.6315, 10.6895, -61.6749, 0.83 ) }
    dend_27 { pt3dadd( 63.7757, 11.1809, -66.3889, 0.83 ) }
    dend_27 { pt3dadd( 67.0228, 12.0248, -70.3202, 1.39 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 17.0375, 12.3892, -18.7442, 1.11 ) }
    dend_20 { pt3dadd( 21.2824, 9.7732, -17.8935, 1.11 ) }
    dend_20 { pt3dadd( 23.8235, 8.20727, -17.3843, 1.11 ) }
    dend_20 { pt3dadd( 27.0652, 6.20954, -16.7346, 1.11 ) }
    dend_20 { pt3dadd( 28.8232, 5.12615, -16.3823, 1.11 ) }
    dend_20 { pt3dadd( 30.5852, 4.04031, -16.0292, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 49/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 10.2769, -28.7156, 2.89834, 0.83 ) }
    dend_15 { pt3dadd( 11.3183, -30.8386, 4.23371, 0.83 ) }
    dend_15 { pt3dadd( 12.2197, -32.4325, 5.29574, 0.56 ) }
    dend_15 { pt3dadd( 12.5174, -32.9125, 5.58735, 0.56 ) }
    dend_15 { pt3dadd( 13.3491, -34.2538, 6.40225, 0.28 ) }
    dend_15 { pt3dadd( 13.7614, -34.9186, 6.80616, 0.83 ) }
    dend_15 { pt3dadd( 14.4414, -36.0151, 7.4724, 0.56 ) }
    dend_15 { pt3dadd( 14.9745, -36.7666, 7.86112, 0.56 ) }
    dend_15 { pt3dadd( 15.9038, -38.118, 8.66662, 0.56 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 58/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 10.2769, -28.7156, 2.89834, 0.83 ) }
    dend_12 { pt3dadd( 13.9504, -30.4782, 3.43493, 0.83 ) }
    dend_12 { pt3dadd( 19.1572, -32.925, 3.98399, 0.83 ) }
    dend_12 { pt3dadd( 20.9863, -33.7751, 4.09512, 0.83 ) }
    dend_12 { pt3dadd( 22.9175, -34.7675, 4.10232, 1.11 ) }
    dend_12 { pt3dadd( 29.5488, -38.1754, 4.12702, 0.83 ) }
    dend_12 { pt3dadd( 34.0084, -40.4672, 4.14363, 0.83 ) }
    dend_12 { pt3dadd( 36.5725, -41.7722, 4.13231, 0.83 ) }
    dend_12 { pt3dadd( 40.5519, -43.8044, 4.03745, 0.83 ) }
    dend_12 { pt3dadd( 45.0808, -46.0285, 3.90426, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.45649, -36.9663, 14.8784, 0.56 ) }
    dend_10 { pt3dadd( 4.45582, -37.3378, 17.4649, 0.56 ) }
    dend_10 { pt3dadd( 3.43373, -37.5277, 18.7862, 0.83 ) }
    dend_10 { pt3dadd( 2.51935, -37.6975, 19.9683, 0.28 ) }
    dend_10 { pt3dadd( 2.14616, -37.7668, 20.4508, 0.83 ) }
    dend_10 { pt3dadd( -2.38022, -39.6979, 28.1856, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 74/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 6.45649, -36.9663, 14.8784, 0.56 ) }
    dend_9 { pt3dadd( 8.16984, -36.738, 13.3047, 0.56 ) }
    dend_9 { pt3dadd( 9.1484, -36.7711, 12.3619, 0.56 ) }
    dend_9 { pt3dadd( 11.4749, -36.9773, 10.0646, 0.56 ) }
    dend_9 { pt3dadd( 13.7941, -37.3744, 7.74765, 0.56 ) }
    dend_9 { pt3dadd( 15.6181, -37.6868, 5.92545, 0.56 ) }
    dend_9 { pt3dadd( 18.5803, -38.194, 2.96608, 0.28 ) }
    dend_9 { pt3dadd( 22.4231, -39.1246, -0.901922, 0.28 ) }
    dend_9 { pt3dadd( 24.0898, -39.614, -2.61494, 0.28 ) }
    dend_9 { pt3dadd( 26.0366, -40.3478, -4.71667, 0.28 ) }
    dend_9 { pt3dadd( 34.1088, -40.0604, -10.3452, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -13.8372, -17.5633, -18.7624, 0.83 ) }
    dend_6 { pt3dadd( -12.9473, -19.0554, -20.3485, 0.83 ) }
    dend_6 { pt3dadd( -10.5318, -24.0221, -23.4711, 0.28 ) }
    dend_6 { pt3dadd( -10.1043, -25.0274, -23.8919, 0.56 ) }
    dend_6 { pt3dadd( -9.31528, -26.8751, -24.4036, 0.56 ) }
    dend_6 { pt3dadd( -8.53832, -28.7968, -24.8219, 0.56 ) }
    dend_6 { pt3dadd( -7.61028, -31.0921, -25.3215, 0.28 ) }
    dend_6 { pt3dadd( -6.20239, -34.6301, -25.7518, 0.28 ) }
    dend_6 { pt3dadd( -5.70453, -36.0023, -25.6422, 0.83 ) }
    dend_6 { pt3dadd( -4.44481, -39.7214, -25.2471, 0.28 ) }
    dend_6 { pt3dadd( -4.14866, -40.711, -25.1048, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -13.8372, -17.5633, -18.7624, 0.83 ) }
    dend_5 { pt3dadd( -14.3948, -16.6041, -18.9433, 0.83 ) }
    dend_5 { pt3dadd( -15.344, -15.0934, -19.1595, 0.28 ) }
    dend_5 { pt3dadd( -15.8151, -14.3884, -19.2415, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( -16.9123, -12.7366, -19.4815, 0.83 ) }
    dend_5 { pt3dadd( -18.2975, -10.6961, -19.7806, 0.28 ) }
    dend_5 { pt3dadd( -18.7687, -10.0025, -19.979, 0.28 ) }
    dend_5 { pt3dadd( -19.2966, -9.20054, -20.274, 0.28 ) }
    dend_5 { pt3dadd( -19.5506, -8.76051, -20.4728, 0.56 ) }
    dend_5 { pt3dadd( -20.1957, -7.51701, -21.0725, 0.28 ) }
    dend_5 { pt3dadd( -20.5074, -6.89662, -21.3876, 0.56 ) }
    dend_5 { pt3dadd( -21.9748, -3.87297, -23.0326, 0.56 ) }
    dend_5 { pt3dadd( -22.5364, -2.7054, -23.6126, 0.83 ) }
    dend_5 { pt3dadd( -23.5231, -0.720771, -24.4882, 0.28 ) }
    dend_5 { pt3dadd( -24.412, 0.913319, -25.1244, 0.56 ) }
    dend_5 { pt3dadd( -24.8346, 1.63591, -25.3429, 0.28 ) }
    dend_5 { pt3dadd( -25.1563, 2.15474, -25.4648, 0.56 ) }
    dend_5 { pt3dadd( -26.0821, 3.48323, -25.6107, 0.28 ) }
    dend_5 { pt3dadd( -26.7639, 4.3482, -25.7112, 0.56 ) }
    dend_5 { pt3dadd( -27.394, 5.08554, -25.7858, 0.83 ) }
    dend_5 { pt3dadd( -28.2106, 6.03015, -25.9235, 0.83 ) }
    dend_5 { pt3dadd( -29.4895, 7.51162, -26.1675, 0.28 ) }
    dend_5 { pt3dadd( -29.8419, 7.92108, -26.2378, 0.56 ) }
    dend_5 { pt3dadd( -30.2427, 8.39502, -26.3212, 0.28 ) }
    dend_5 { pt3dadd( -31.1357, 9.39467, -26.4813, 0.56 ) }
    dend_5 { pt3dadd( -31.6742, 9.9986, -26.5625, 0.28 ) }
    dend_5 { pt3dadd( -32.0283, 10.3498, -26.6082, 0.56 ) }
    dend_5 { pt3dadd( -33.1049, 11.367, -26.6882, 0.28 ) }
    dend_5 { pt3dadd( -33.2343, 11.4898, -26.6992, 0.56 ) }
    dend_5 { pt3dadd( -34.0049, 12.198, -26.7672, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 26/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.79214, -46.9685, -12.7411, 0.28 ) }
    dend_3 { pt3dadd( -9.22471, -49.2398, -11.73, 0.28 ) }
    dend_3 { pt3dadd( -10.1282, -50.7881, -11.0647, 0.56 ) }
    dend_3 { pt3dadd( -10.7742, -51.9361, -10.5749, 0.56 ) }
    dend_3 { pt3dadd( -11.765, -53.7224, -9.82975, 0.56 ) }
    dend_3 { pt3dadd( -13.0327, -56.1636, -8.81862, 0.28 ) }
    dend_3 { pt3dadd( -14.0801, -58.2842, -7.96007, 0.28 ) }
    dend_3 { pt3dadd( -14.7855, -59.8228, -7.39975, 0.83 ) }
    dend_3 { pt3dadd( -15.2414, -60.8994, -6.98825, 0.28 ) }
    dend_3 { pt3dadd( -15.4977, -61.5036, -6.75564, 0.83 ) }
    dend_3 { pt3dadd( -16.2305, -63.287, -6.06539, 0.28 ) }
    dend_3 { pt3dadd( -16.5591, -64.0626, -5.80376, 0.28 ) }
    dend_3 { pt3dadd( -16.8614, -64.6725, -5.65788, 0.56 ) }
    dend_3 { pt3dadd( -17.3784, -65.5972, -5.48971, 0.28 ) }
    dend_3 { pt3dadd( -17.9537, -66.633, -5.44218, 0.56 ) }
    dend_3 { pt3dadd( -19.1202, -68.7288, -5.53045, 0.28 ) }
    dend_3 { pt3dadd( -19.5691, -69.5309, -5.62854, 0.83 ) }
    dend_3 { pt3dadd( -21.065, -71.9258, -6.17391, 0.28 ) }
    dend_3 { pt3dadd( -21.9138, -73.1743, -6.5566, 0.56 ) }
    dend_3 { pt3dadd( -23.3788, -75.2296, -7.39085, 0.28 ) }
    dend_3 { pt3dadd( -23.6221, -75.5566, -7.54887, 0.83 ) }
    dend_3 { pt3dadd( -24.2433, -76.3665, -8.00466, 0.83 ) }
    dend_3 { pt3dadd( -27.0058, -79.7773, -10.0259, 0.28 ) }
    dend_3 { pt3dadd( -27.4941, -80.3242, -10.3662, 0.56 ) }
    dend_3 { pt3dadd( -28.6567, -81.4562, -11.1188, 0.28 ) }
    dend_3 { pt3dadd( -29.0166, -81.7506, -11.3076, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.79214, -46.9685, -12.7411, 0.56 ) }
    dend_2 { pt3dadd( -4.48979, -50.5309, -17.1677, 0.56 ) }
    dend_2 { pt3dadd( -2.72865, -52.5681, -19.0243, 0.56 ) }
    dend_2 { pt3dadd( -0.625439, -55.2274, -20.8412, 0.56 ) }
    dend_2 { pt3dadd( 0.815258, -57.3049, -22.0107, 1.11 ) }
    dend_2 { pt3dadd( 3.15778, -61.1047, -23.8545, 1.11 ) }
    dend_2 { pt3dadd( 4.93697, -64.3308, -25.4346, 0.56 ) }
    dend_2 { pt3dadd( 6.52429, -67.9969, -26.7288, 0.56 ) }
    dend_2 { pt3dadd( 7.56166, -70.7259, -27.5871, 0.28 ) }
    dend_2 { pt3dadd( 8.09183, -72.8401, -28.118, 0.56 ) }
    dend_2 { pt3dadd( 8.32958, -74.1192, -28.4739, 0.28 ) }
    dend_2 { pt3dadd( 8.87861, -77.9532, -29.3638, 0.56 ) }
    dend_2 { pt3dadd( 9.3739, -81.0152, -30.0513, 0.28 ) }
    dend_2 { pt3dadd( 9.51641, -81.9427, -30.2499, 0.83 ) }
    dend_2 { pt3dadd( 10.2263, -86.1488, -31.0622, 0.83 ) }
    dend_2 { pt3dadd( 10.7276, -88.6803, -31.4957, 0.56 ) }
    dend_2 { pt3dadd( 11.768, -93.384, -32.1493, 0.56 ) }
    dend_2 { pt3dadd( 12.826, -97.9894, -32.585, 1.39 ) }
    dend_2 { pt3dadd( 14.1172, -103.282, -32.9339, 0.28 ) }
    dend_2 { pt3dadd( 14.3071, -104.09, -32.9654, 0.83 ) }
    dend_2 { pt3dadd( 14.9858, -107.275, -32.9781, 0.28 ) }
    dend_2 { pt3dadd( 15.4714, -110.153, -32.834, 0.28 ) }
    dend_2 { pt3dadd( 15.647, -111.456, -32.7316, 0.83 ) }
    dend_2 { pt3dadd( 15.9931, -115.562, -32.2927, 0.28 ) }
    dend_2 { pt3dadd( 16.1642, -118.071, -32.0352, 0.28 ) }
    dend_2 { pt3dadd( 16.2631, -119.782, -31.9557, 0.83 ) }
    dend_2 { pt3dadd( 16.3772, -124.264, -31.8935, 0.28 ) }
    dend_2 { pt3dadd( 16.3617, -125.569, -31.9251, 0.83 ) }
    dend_2 { pt3dadd( 16.3329, -128.53, -32.0666, 1.39 ) }
    dend_2 { pt3dadd( 16.1987, -131.721, -32.2297, 1.39 ) }
    dend_2 { pt3dadd( 15.8562, -139.783, -32.5614, 0.28 ) }
    dend_2 { pt3dadd( 15.7932, -141.484, -32.6117, 0.83 ) }
    dend_2 { pt3dadd( 15.4905, -147.711, -32.8376, 0.28 ) }
    dend_2 { pt3dadd( 15.2923, -151.622, -32.8753, 0.28 ) }
    dend_2 { pt3dadd( 15.2489, -156.195, -32.67, 0.83 ) }
    dend_2 { pt3dadd( 15.2849, -158.993, -32.3959, 0.28 ) }
    dend_2 { pt3dadd( 15.3751, -161.328, -32.079, 0.83 ) }
    dend_2 { pt3dadd( 15.7358, -165.767, -31.289, 0.28 ) }
    dend_2 { pt3dadd( 16.0713, -168.717, -30.6669, 0.83 ) }
    dend_2 { pt3dadd( 17.3111, -179.268, -28.2611, 0.28 ) }
    dend_2 { pt3dadd( 17.5424, -181.063, -27.8375, 0.83 ) }
    dend_2 { pt3dadd( 17.8016, -184.416, -27.2195, 0.83 ) }
    dend_2 { pt3dadd( 17.9072, -191.328, -26.2989, 0.28 ) }
    dend_2 { pt3dadd( 17.8887, -192.141, -26.2614, 0.56 ) }
    dend_2 { pt3dadd( 17.6804, -195.042, -26.4139, 0.28 ) }
    dend_2 { pt3dadd( 17.488, -197.557, -26.7919, 1.39 ) }
    dend_2 { pt3dadd( 17.1224, -207.64, -28.7751, 0.28 ) }
    dend_2 { pt3dadd( 17.2549, -211.083, -29.6541, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 18.0082, -217.933, -31.7733, 0.28 ) }
    dend_2 { pt3dadd( 18.2875, -219.1, -32.1106, 0.83 ) }
    dend_2 { pt3dadd( 21.2529, -227.175, -34.2638, 0.28 ) }
    dend_2 { pt3dadd( 22.0093, -228.688, -34.6094, 0.83 ) }
    dend_2 { pt3dadd( 25.1227, -233.445, -35.2223, 0.28 ) }
    dend_2 { pt3dadd( 25.9065, -234.521, -35.2905, 0.56 ) }
    dend_2 { pt3dadd( 31.9438, -242.342, -35.098, 0.28 ) }
    dend_2 { pt3dadd( 32.8029, -243.439, -35.0123, 0.83 ) }
    dend_2 { pt3dadd( 33.8661, -244.851, -34.7612, 0.83 ) }
    dend_2 { pt3dadd( 36.7467, -248.949, -33.8343, 0.28 ) }
    dend_2 { pt3dadd( 37.1128, -249.51, -33.6702, 0.56 ) }
    dend_2 { pt3dadd( 38.1665, -251.222, -33.1269, 0.28 ) }
    dend_2 { pt3dadd( 38.7293, -252.25, -32.7319, 0.83 ) }
    dend_2 { pt3dadd( 41.5816, -257.523, -30.8, 0.28 ) }
    dend_2 { pt3dadd( 42.2085, -258.618, -30.4195, 0.56 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 15/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -33.0488, 40.9887, 17.0819, 0.56 ) }
    dend_45 { pt3dadd( -35.931, 40.3426, 17.8693, 0.56 ) }
    dend_45 { pt3dadd( -39.5821, 39.524, 18.8667, 0.56 ) }
    dend_45 { pt3dadd( -49.7577, 37.3984, 22.9451, 0.56 ) }
    dend_45 { pt3dadd( -60.352, 34.4986, 24.9199, 0.56 ) }
    dend_45 { pt3dadd( -70.477, 30.0544, 26.2657, 0.56 ) }
    dend_45 { pt3dadd( -81.4913, 28.2773, 26.7345, 0.56 ) }
    dend_45 { pt3dadd( -92.5675, 26.9598, 26.1833, 0.56 ) }
    dend_45 { pt3dadd( -103.646, 25.7291, 25.4878, 0.56 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -33.0488, 40.9887, 17.0819, 0.56 ) }
    dend_44 { pt3dadd( -34.9439, 40.1632, 17.5524, 0.56 ) }
    dend_44 { pt3dadd( -35.8878, 39.7519, 17.7867, 0.56 ) }
    dend_44 { pt3dadd( -36.8026, 39.3534, 18.0139, 0.56 ) }
    dend_44 { pt3dadd( -39.62, 38.126, 18.7134, 0.56 ) }
    dend_44 { pt3dadd( -41.7642, 37.1919, 19.2457, 0.56 ) }
    dend_44 { pt3dadd( -46.5632, 35.1012, 20.4372, 0.28 ) }
    dend_44 { pt3dadd( -52.6337, 31.6682, 22.8056, 0.28 ) }
    dend_44 { pt3dadd( -58.1373, 27.1652, 24.6181, 0.28 ) }
    dend_44 { pt3dadd( -63.9416, 23.0278, 26.4047, 0.28 ) }
    dend_44 { pt3dadd( -69.428, 18.4795, 28.1496, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 35/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.59624, 17.4776, 6.66027, 0.56 ) }
    dend_42 { pt3dadd( 4.15032, 17.0515, 8.44397, 0.56 ) }
    dend_42 { pt3dadd( 3.32048, 16.9968, 9.27843, 0.56 ) }
    dend_42 { pt3dadd( 2.27531, 17.0578, 10.2541, 0.56 ) }
    dend_42 { pt3dadd( 1.19808, 17.1675, 11.1661, 0.83 ) }
    dend_42 { pt3dadd( -0.483105, 17.3231, 12.4185, 0.56 ) }
    dend_42 { pt3dadd( -0.994782, 17.39, 12.7669, 0.83 ) }
    dend_42 { pt3dadd( -2.70331, 17.8133, 13.5792, 0.28 ) }
    dend_42 { pt3dadd( -3.11061, 18.0548, 13.7903, 0.83 ) }
    dend_42 { pt3dadd( -3.69665, 18.8336, 14.1491, 0.83 ) }
    dend_42 { pt3dadd( -4.22667, 20.0449, 14.5792, 0.56 ) }
    dend_42 { pt3dadd( -4.47707, 21.119, 14.911, 0.56 ) }
    dend_42 { pt3dadd( -4.80989, 23.2107, 15.5226, 0.56 ) }
    dend_42 { pt3dadd( -5.07148, 26.9505, 16.5649, 0.56 ) }
    dend_42 { pt3dadd( -5.10329, 28.8545, 17.0867, 0.56 ) }
    dend_42 { pt3dadd( -5.06331, 29.643, 17.2968, 0.56 ) }
    dend_42 { pt3dadd( -4.78643, 31.9655, 17.9263, 0.56 ) }
    dend_42 { pt3dadd( -8.45674, 35.8306, 20.4524, 0.56 ) }
    dend_42 { pt3dadd( -12.1528, 39.8374, 22.6937, 0.56 ) }
    dend_42 { pt3dadd( -16.4528, 43.5484, 24.3102, 0.56 ) }
    dend_42 { pt3dadd( -20.4428, 47.7617, 25.3191, 0.56 ) }
    dend_42 { pt3dadd( -24.5476, 51.9039, 26.1671, 0.56 ) }
    dend_42 { pt3dadd( -28.0928, 56.585, 26.3812, 0.56 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 5.59624, 17.4776, 6.66027, 0.56 ) }
    dend_35 { pt3dadd( 9.72023, 17.7756, 6.88567, 0.56 ) }
    dend_35 { pt3dadd( 13.0138, 18.1576, 7.28397, 0.56 ) }
    dend_35 { pt3dadd( 18.4809, 18.7916, 7.94511, 0.56 ) }
    dend_35 { pt3dadd( 23.0211, 19.3181, 8.49416, 0.56 ) }
    dend_35 { pt3dadd( 25.878, 19.6494, 8.83965, 0.56 ) }
    dend_35 { pt3dadd( 29.4728, 20.0663, 9.27438, 0.56 ) }
    dend_35 { pt3dadd( 32.3652, 20.362, 9.92658, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 67.0228, 12.0248, -70.3202, 0.56 ) }
    dend_29 { pt3dadd( 68.7259, 12.8984, -71.6778, 0.56 ) }
    dend_29 { pt3dadd( 69.5561, 13.3241, -72.3395, 0.56 ) }
    dend_29 { pt3dadd( 70.5202, 13.8186, -73.108, 0.28 ) }
    dend_29 { pt3dadd( 71.2378, 14.1867, -73.68, 0.28 ) }
    dend_29 { pt3dadd( 72.3258, 14.7447, -74.5473, 0.56 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 72/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 67.0228, 12.0248, -70.3202, 0.83 ) }
    dend_28 { pt3dadd( 68.2515, 10.189, -73.3213, 0.83 ) }
    dend_28 { pt3dadd( 69.2081, 8.98179, -75.5604, 0.83 ) }
    dend_28 { pt3dadd( 70.2529, 8.21683, -77.7146, 0.83 ) }
    dend_28 { pt3dadd( 71.2473, 7.74583, -79.5621, 0.56 ) }
    dend_28 { pt3dadd( 72.3797, 7.3083, -81.3037, 0.56 ) }
    dend_28 { pt3dadd( 73.6529, 6.91005, -83.0216, 0.28 ) }
    dend_28 { pt3dadd( 74.5015, 6.82353, -83.9511, 0.83 ) }
    dend_28 { pt3dadd( 77.3994, 6.82715, -86.6605, 0.83 ) }
    dend_28 { pt3dadd( 79.0853, 6.86963, -88.1117, 0.83 ) }
    dend_28 { pt3dadd( 81.4834, 6.91907, -90.401, 0.56 ) }
    dend_28 { pt3dadd( 82.5119, 6.87201, -91.4559, 0.56 ) }
    dend_28 { pt3dadd( 83.4729, 6.79424, -92.5589, 0.56 ) }
    dend_28 { pt3dadd( 85.5149, 6.58098, -95.3961, 0.56 ) }
    dend_28 { pt3dadd( 86.5937, 6.50971, -97.2501, 0.83 ) }
    dend_28 { pt3dadd( 88.746, 6.65794, -101.613, 0.56 ) }
    dend_28 { pt3dadd( 89.217, 6.7719, -102.767, 0.28 ) }
    dend_28 { pt3dadd( 89.888, 7.03147, -104.52, 1.11 ) }
    dend_28 { pt3dadd( 92.0085, 8.12204, -109.962, 0.56 ) }
    dend_28 { pt3dadd( 92.9739, 8.84838, -112.219, 0.56 ) }
    dend_28 { pt3dadd( 93.8844, 9.6194, -114.166, 1.39 ) }
    dend_28 { pt3dadd( 96.6734, 12.1008, -119.791, 0.28 ) }
    dend_28 { pt3dadd( 98.2104, 13.51, -122.779, 0.28 ) }
    dend_28 { pt3dadd( 100.051, 15.2339, -126.218, 1.39 ) }
    dend_28 { pt3dadd( 104.577, 19.6338, -134.277, 0.28 ) }
    dend_28 { pt3dadd( 105.816, 20.7837, -136.389, 0.83 ) }
    dend_28 { pt3dadd( 107.284, 22.1097, -138.795, 0.28 ) }
    dend_28 { pt3dadd( 107.571, 22.3537, -139.238, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_28 { pt3dadd( 109.431, 23.8167, -142.085, 0.28 ) }
    dend_28 { pt3dadd( 110.26, 24.3901, -143.3, 1.11 ) }
    dend_28 { pt3dadd( 113.723, 26.247, -148.028, 0.28 ) }
    dend_28 { pt3dadd( 115.029, 26.8226, -149.675, 0.83 ) }
    dend_28 { pt3dadd( 118.067, 27.8432, -153.078, 0.28 ) }
    dend_28 { pt3dadd( 118.26, 27.8793, -153.291, 0.56 ) }
    dend_28 { pt3dadd( 119.672, 27.9391, -154.799, 0.28 ) }
    dend_28 { pt3dadd( 121.107, 27.8005, -156.373, 0.56 ) }
    dend_28 { pt3dadd( 122.113, 27.5412, -157.519, 0.28 ) }
    dend_28 { pt3dadd( 123.395, 27.134, -159.075, 0.83 ) }
    dend_28 { pt3dadd( 126.352, 26.1863, -162.763, 0.28 ) }
    dend_28 { pt3dadd( 126.53, 26.1335, -162.997, 0.56 ) }
    dend_28 { pt3dadd( 128.173, 25.6846, -165.363, 0.28 ) }
    dend_28 { pt3dadd( 128.687, 25.5721, -166.122, 0.56 ) }
    dend_28 { pt3dadd( 130.645, 25.2734, -169.145, 0.28 ) }
    dend_28 { pt3dadd( 131.485, 25.1721, -170.476, 0.83 ) }
    dend_28 { pt3dadd( 131.619, 25.1851, -170.742, 0.83 ) }
    dend_28 { pt3dadd( 133.241, 25.4579, -174.563, 0.28 ) }
    dend_28 { pt3dadd( 133.454, 25.5307, -175.104, 0.28 ) }
    dend_28 { pt3dadd( 133.694, 25.6356, -175.748, 0.83 ) }
    dend_28 { pt3dadd( 133.8, 25.6865, -176.022, 0.83 ) }
    dend_28 { pt3dadd( 138.115, 27.9629, -187.731, 0.28 ) }
    dend_28 { pt3dadd( 138.891, 28.4085, -189.86, 0.83 ) }
    dend_28 { pt3dadd( 141.34, 29.9841, -196.717, 0.28 ) }
    dend_28 { pt3dadd( 141.476, 30.0724, -197.099, 0.28 ) }
    dend_28 { pt3dadd( 142.079, 30.4871, -198.777, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 30.5852, 4.04031, -16.0292, 0.56 ) }
    dend_26 { pt3dadd( 32.6424, 3.9906, -16.9902, 0.56 ) }
    dend_26 { pt3dadd( 35.09, 3.58852, -18.0432, 0.56 ) }
    dend_26 { pt3dadd( 36.3018, 3.23771, -18.5815, 0.56 ) }
    dend_26 { pt3dadd( 38.1441, 2.55124, -19.4579, 0.56 ) }
    dend_26 { pt3dadd( 39.6679, 1.86982, -20.165, 0.56 ) }
    dend_26 { pt3dadd( 42.8228, 0.128633, -21.5879, 0.56 ) }
    dend_26 { pt3dadd( 44.3041, -1.04734, -22.2336, 0.56 ) }
    dend_26 { pt3dadd( 45.4692, -2.22162, -22.7308, 0.56 ) }
    dend_26 { pt3dadd( 46.2436, -3.13823, -23.0137, 0.56 ) }
    dend_26 { pt3dadd( 47.4472, -4.83247, -23.3998, 0.83 ) }
    dend_26 { pt3dadd( 48.6436, -6.87186, -23.8078, 0.56 ) }
    dend_26 { pt3dadd( 49.3912, -8.34994, -24.0788, 0.56 ) }
    dend_26 { pt3dadd( 50.377, -10.1704, -24.3295, 0.56 ) }
    dend_26 { pt3dadd( 51.2262, -11.5674, -24.4751, 0.56 ) }
    dend_26 { pt3dadd( 51.8335, -12.4322, -24.5649, 0.56 ) }
    dend_26 { pt3dadd( 52.4221, -13.1892, -24.7072, 0.83 ) }
    dend_26 { pt3dadd( 53.3392, -14.1228, -24.9674, 0.56 ) }
    dend_26 { pt3dadd( 54.0132, -14.7205, -25.1626, 0.56 ) }
    dend_26 { pt3dadd( 55.1251, -15.6514, -25.5198, 0.83 ) }
    dend_26 { pt3dadd( 57.4057, -17.4322, -26.2555, 0.83 ) }
    dend_26 { pt3dadd( 60.2933, -19.4711, -27.3303, 0.56 ) }
    dend_26 { pt3dadd( 62.0317, -20.643, -28.0989, 0.56 ) }
    dend_26 { pt3dadd( 63.0373, -21.2648, -28.6036, 0.56 ) }
    dend_26 { pt3dadd( 64.0353, -21.7826, -29.1984, 0.56 ) }
    dend_26 { pt3dadd( 65.1082, -22.1996, -29.9343, 0.56 ) }
    dend_26 { pt3dadd( 67.26, -22.5469, -31.6647, 0.83 ) }
    dend_26 { pt3dadd( 68.7728, -22.6087, -32.8147, 0.56 ) }
    dend_26 { pt3dadd( 69.8347, -22.6765, -33.6585, 0.83 ) }
    dend_26 { pt3dadd( 71.9522, -22.7891, -35.2367, 0.56 ) }
    dend_26 { pt3dadd( 72.9521, -22.8295, -35.9175, 0.56 ) }
    dend_26 { pt3dadd( 74.313, -22.9009, -36.737, 0.56 ) }
    dend_26 { pt3dadd( 77.3073, -23.2028, -38.2331, 0.28 ) }
    dend_26 { pt3dadd( 80.4294, -23.6547, -39.7522, 0.28 ) }
    dend_26 { pt3dadd( 81.8154, -23.969, -40.4474, 0.28 ) }
    dend_26 { pt3dadd( 83.3508, -24.4041, -41.1741, 0.28 ) }
    dend_26 { pt3dadd( 84.6099, -24.7504, -41.785, 0.28 ) }
    dend_26 { pt3dadd( 85.6286, -25.0427, -42.3241, 0.56 ) }
    dend_26 { pt3dadd( 88.2187, -25.7154, -43.9892, 0.28 ) }
    dend_26 { pt3dadd( 89.2654, -26.1035, -44.6059, 0.28 ) }
    dend_26 { pt3dadd( 90.2684, -26.6415, -45.3064, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 30.5852, 4.04031, -16.0292, 0.56 ) }
    dend_21 { pt3dadd( 32.4903, 1.60649, -16.8863, 0.56 ) }
    dend_21 { pt3dadd( 33.5821, 0.211833, -17.3774, 0.83 ) }
    dend_21 { pt3dadd( 34.5368, -1.00777, -17.8068, 0.83 ) }
    dend_21 { pt3dadd( 35.6095, -2.37815, -18.2894, 0.56 ) }
    dend_21 { pt3dadd( 37.2585, -4.48488, -19.0312, 0.56 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 15.9038, -38.118, 8.66662, 0.56 ) }
    dend_17 { pt3dadd( 14.6768, -39.6595, 8.61791, 0.56 ) }
    dend_17 { pt3dadd( 13.4281, -41.2282, 8.56835, 0.56 ) }
    dend_17 { pt3dadd( 8.26178, -49.5403, 9.31203, 0.56 ) }
    dend_17 { pt3dadd( 2.34784, -57.377, 8.71964, 0.56 ) }
    dend_17 { pt3dadd( -3.01281, -65.5012, 7.39385, 0.56 ) }
    dend_17 { pt3dadd( -6.95383, -74.4412, 6.83631, 0.56 ) }
    dend_17 { pt3dadd( -10.8605, -83.3742, 7.68047, 0.56 ) }
    dend_17 { pt3dadd( -13.1111, -92.6374, 9.81952, 0.56 ) }
    dend_17 { pt3dadd( -13.6974, -102.302, 10.9477, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 83/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 15.9038, -38.118, 8.66662, 0.56 ) }
    dend_16 { pt3dadd( 18.2336, -37.7811, 9.73131, 0.56 ) }
    dend_16 { pt3dadd( 23.2599, -37.0062, 11.9778, 0.56 ) }
    dend_16 { pt3dadd( 26.2375, -36.5472, 13.3086, 0.56 ) }
    dend_16 { pt3dadd( 29.29, -36.0766, 14.6729, 0.56 ) }
    dend_16 { pt3dadd( 33.4537, -35.4347, 16.5338, 0.56 ) }
    dend_16 { pt3dadd( 38.3623, -34.678, 18.7276, 0.56 ) }
    dend_16 { pt3dadd( 41.7349, -34.2673, 20.0968, 0.56 ) }
    dend_16 { pt3dadd( 56.1041, -34.2704, 23.1126, 0.56 ) }
    dend_16 { pt3dadd( 69.5823, -32.015, 28.4729, 0.56 ) }
    dend_16 { pt3dadd( 83.2026, -29.2777, 33.2059, 0.56 ) }
    dend_16 { pt3dadd( 96.5243, -25.6683, 38.1733, 0.56 ) }
    dend_16 { pt3dadd( 108.796, -22.1604, 45.3975, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 45.0808, -46.0285, 3.90426, 0.56 ) }
    dend_14 { pt3dadd( 47.4818, -48.0398, 3.36316, 0.56 ) }
    dend_14 { pt3dadd( 48.8578, -49.251, 3.06259, 0.28 ) }
    dend_14 { pt3dadd( 50.8654, -51.2579, 2.53568, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 53.5914, -54.0177, 1.78953, 0.28 ) }
    dend_14 { pt3dadd( 53.8959, -54.3275, 1.70776, 0.56 ) }
    dend_14 { pt3dadd( 54.9666, -55.46, 1.4239, 0.28 ) }
    dend_14 { pt3dadd( 55.4589, -55.969, 1.29759, 0.83 ) }
    dend_14 { pt3dadd( 57.8236, -58.3817, 0.683403, 0.28 ) }
    dend_14 { pt3dadd( 58.7613, -59.2797, 0.45728, 0.56 ) }
    dend_14 { pt3dadd( 60.1288, -60.4997, 0.155131, 0.28 ) }
    dend_14 { pt3dadd( 61.1161, -61.3487, -0.059299, 0.83 ) }
    dend_14 { pt3dadd( 63.4731, -63.1756, -0.546228, 0.83 ) }
    dend_14 { pt3dadd( 65.9321, -64.8864, -0.992932, 0.28 ) }
    dend_14 { pt3dadd( 67.4151, -65.7444, -1.18038, 0.56 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 11/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 45.0808, -46.0285, 3.90426, 0.56 ) }
    dend_13 { pt3dadd( 47.4767, -46.0419, 5.19833, 0.56 ) }
    dend_13 { pt3dadd( 48.6807, -45.9822, 5.73928, 0.56 ) }
    dend_13 { pt3dadd( 50.6021, -45.8233, 6.45764, 0.56 ) }
    dend_13 { pt3dadd( 52.6385, -45.542, 7.14401, 0.56 ) }
    dend_13 { pt3dadd( 54.9262, -45.2132, 7.68092, 0.83 ) }
    dend_13 { pt3dadd( 57.2934, -44.8788, 8.19761, 0.56 ) }
    dend_13 { pt3dadd( 58.7173, -44.6675, 8.34666, 0.56 ) }
    dend_13 { pt3dadd( 59.989, -44.5508, 8.40768, 0.56 ) }
    dend_13 { pt3dadd( 61.3312, -44.4088, 8.46023, 0.56 ) }
    dend_13 { pt3dadd( 63.9715, -43.8788, 8.51199, 0.56 ) }
    dend_13 { pt3dadd( 65.7713, -43.4066, 8.6304, 0.56 ) }
    dend_13 { pt3dadd( 67.2442, -43.0038, 8.80698, 0.56 ) }
    dend_13 { pt3dadd( 69.1779, -42.5215, 9.07837, 0.56 ) }
    dend_13 { pt3dadd( 71.8418, -41.8172, 9.52594, 0.56 ) }
    dend_13 { pt3dadd( 73.2083, -41.4322, 9.79795, 0.56 ) }
    dend_13 { pt3dadd( 74.8958, -40.7971, 10.2586, 0.56 ) }
    dend_13 { pt3dadd( 77.0569, -39.8489, 10.7262, 0.28 ) }
    dend_13 { pt3dadd( 84.9613, -37.2976, 12.6656, 0.28 ) }
    dend_13 { pt3dadd( 92.4922, -33.5157, 13.8187, 0.28 ) }
    dend_13 { pt3dadd( 99.6861, -29.0546, 13.2048, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 32.3652, 20.362, 9.92658, 0.56 ) }
    dend_41 { pt3dadd( 36.6354, 23.4369, 3.98673, 0.56 ) }
    dend_41 { pt3dadd( 38.934, 25.1394, 1.32345, 0.56 ) }
    dend_41 { pt3dadd( 39.4422, 25.53, 0.752019, 0.56 ) }
    dend_41 { pt3dadd( 40.6643, 26.4561, -0.639216, 0.28 ) }
    dend_41 { pt3dadd( 42.5049, 27.8713, -2.69041, 0.28 ) }
    dend_41 { pt3dadd( 43.7996, 28.9164, -4.11266, 0.83 ) }
    dend_41 { pt3dadd( 46.3549, 31.0296, -6.474, 0.28 ) }
    dend_41 { pt3dadd( 47.7008, 32.4612, -7.83229, 0.56 ) }
    dend_41 { pt3dadd( 49.4417, 34.5969, -9.69078, 0.28 ) }
    dend_41 { pt3dadd( 50.4913, 36.0315, -10.9245, 0.83 ) }
    dend_41 { pt3dadd( 51.2579, 37.2643, -11.8931, 0.28 ) }
    dend_41 { pt3dadd( 52.5867, 39.6162, -13.6401, 0.28 ) }
    dend_41 { pt3dadd( 54.2794, 42.7239, -15.7154, 0.28 ) }
    dend_41 { pt3dadd( 55.5974, 45.4447, -17.1757, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 47/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 32.3652, 20.362, 9.92658, 0.56 ) }
    dend_36 { pt3dadd( 34.1075, 20.7008, 11.9191, 0.56 ) }
    dend_36 { pt3dadd( 35.4366, 20.9593, 13.4393, 1.11 ) }
    dend_36 { pt3dadd( 37.7099, 21.4014, 16.039, 0.56 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 51/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 37.2585, -4.48488, -19.0312, 0.56 ) }
    dend_23 { pt3dadd( 37.8403, -7.13047, -20.339, 0.56 ) }
    dend_23 { pt3dadd( 38.2439, -8.23413, -20.8675, 0.56 ) }
    dend_23 { pt3dadd( 38.4042, -8.67246, -21.0774, 0.56 ) }
    dend_23 { pt3dadd( 38.7614, -9.64899, -21.5451, 0.28 ) }
    dend_23 { pt3dadd( 39.3185, -11.1723, -22.2746, 0.56 ) }
    dend_23 { pt3dadd( 39.7718, -12.4118, -22.8682, 0.28 ) }
    dend_23 { pt3dadd( 40.2597, -13.2065, -23.1691, 0.56 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 59/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 37.2585, -4.48488, -19.0312, 0.56 ) }
    dend_22 { pt3dadd( 40.2348, -9.89944, -19.3967, 0.56 ) }
    dend_22 { pt3dadd( 41.0049, -11.3004, -19.4913, 0.56 ) }
    dend_22 { pt3dadd( 41.4823, -12.169, -19.55, 0.56 ) }
    dend_22 { pt3dadd( 42.7447, -14.4656, -19.705, 0.56 ) }
    dend_22 { pt3dadd( 43.7745, -16.3391, -19.8315, 0.56 ) }
    dend_22 { pt3dadd( 47.7369, -25.0592, -22.3405, 0.56 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 37.7099, 21.4014, 16.039, 0.56 ) }
    dend_40 { pt3dadd( 38.8273, 22.8184, 16.0673, 0.56 ) }
    dend_40 { pt3dadd( 40.3046, 24.6346, 16.1026, 0.56 ) }
    dend_40 { pt3dadd( 42.6476, 27.5152, 16.1585, 0.28 ) }
    dend_40 { pt3dadd( 45.6618, 31.2208, 16.2305, 0.28 ) }
    dend_40 { pt3dadd( 46.8251, 32.651, 16.2583, 0.28 ) }
    dend_40 { pt3dadd( 48.0081, 34.1053, 16.2865, 0.28 ) }
    dend_40 { pt3dadd( 48.826, 35.0796, 16.3084, 0.56 ) }
    dend_40 { pt3dadd( 53.6045, 41.5265, 16.8109, 0.56 ) }
    dend_40 { pt3dadd( 57.5896, 48.2826, 18.4719, 0.56 ) }
    dend_40 { pt3dadd( 62.5023, 54.2363, 20.753, 0.56 ) }
    dend_40 { pt3dadd( 68.4789, 58.9077, 23.5664, 0.56 ) }
    dend_40 { pt3dadd( 74.3006, 63.5898, 26.6667, 0.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 79/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 37.7099, 21.4014, 16.039, 0.83 ) }
    dend_37 { pt3dadd( 38.6091, 19.1285, 15.9523, 0.83 ) }
    dend_37 { pt3dadd( 39.1511, 17.7583, 15.9001, 0.83 ) }
    dend_37 { pt3dadd( 44.258, 8.84672, 16.195, 0.83 ) }
    dend_37 { pt3dadd( 49.1147, -0.190219, 15.9078, 0.83 ) }
    dend_37 { pt3dadd( 52.965, -9.60217, 14.7051, 0.83 ) }
    dend_37 { pt3dadd( 55.6153, -19.454, 13.89, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 86/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 40.2597, -13.2065, -23.1691, 0.56 ) }
    dend_25 { pt3dadd( 41.5862, -12.7408, -24.8065, 0.56 ) }
    dend_25 { pt3dadd( 43.2245, -12.1656, -26.8289, 0.28 ) }
    dend_25 { pt3dadd( 44.0231, -11.8852, -27.8148, 0.56 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 90/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 40.2597, -13.2065, -23.1691, 0.28 ) }
    dend_24 { pt3dadd( 40.7811, -16.0372, -23.8898, 0.28 ) }
    dend_24 { pt3dadd( 41.4939, -17.7108, -24.252, 0.56 ) }
    dend_24 { pt3dadd( 42.14, -18.604, -24.5864, 0.56 ) }
    dend_24 { pt3dadd( 43.441, -19.839, -25.2486, 0.56 ) }
    dend_24 { pt3dadd( 44.0167, -20.2877, -25.5824, 0.56 ) }
    dend_24 { pt3dadd( 45.8552, -21.5411, -26.6639, 0.83 ) }
    dend_24 { pt3dadd( 48.4741, -22.7356, -28.1703, 0.83 ) }
    dend_24 { pt3dadd( 51.5, -23.7996, -29.814, 0.56 ) }
    dend_24 { pt3dadd( 52.4286, -24.074, -30.337, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( 54.4082, -24.4684, -31.4738, 0.56 ) }
    dend_24 { pt3dadd( 55.9594, -24.6948, -32.4376, 0.28 ) }
    dend_24 { pt3dadd( 57.0421, -24.8267, -33.1974, 0.28 ) }
    dend_24 { pt3dadd( 57.9288, -24.9504, -33.8556, 0.56 ) }
    dend_24 { pt3dadd( 59.5464, -25.241, -34.9494, 0.28 ) }
    dend_24 { pt3dadd( 61.5733, -25.5023, -36.327, 0.28 ) }
    dend_24 { pt3dadd( 62.2571, -25.5233, -36.7706, 0.56 ) }
    dend_24 { pt3dadd( 63.6492, -25.4612, -37.7856, 0.83 ) }
    dend_24 { pt3dadd( 64.4473, -25.3876, -38.4036, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 55.6153, -19.454, 13.89, 0.56 ) }
    dend_39 { pt3dadd( 59.9915, -27.8007, 11.4814, 0.56 ) }
    dend_39 { pt3dadd( 66.1635, -35.1636, 9.72215, 0.56 ) }
    dend_39 { pt3dadd( 70.7525, -43.6132, 8.20586, 0.56 ) }
    dend_39 { pt3dadd( 73.644, -52.7811, 6.80179, 0.56 ) }
    dend_39 { pt3dadd( 76.4263, -61.5858, 3.80295, 0.56 ) }
    dend_39 { pt3dadd( 81.0173, -69.9441, 1.86051, 0.56 ) }
    dend_39 { pt3dadd( 86.7305, -77.78, 0.762255, 0.56 ) }
    dend_39 { pt3dadd( 91.3768, -86.3522, 1.02466, 0.56 ) }
    dend_39 { pt3dadd( 95.0712, -95.2023, 2.89321, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 19/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 55.6153, -19.454, 13.89, 0.56 ) }
    dend_38 { pt3dadd( 58.8326, -27.5018, 14.2571, 0.56 ) }
    dend_38 { pt3dadd( 61.0261, -35.7808, 15.7286, 0.56 ) }
    dend_38 { pt3dadd( 65.1712, -43.1114, 18.0115, 0.56 ) }
    dend_38 { pt3dadd( 69.8985, -50.3309, 19.1921, 0.56 ) }
    dend_38 { pt3dadd( 74.4675, -57.7011, 18.7858, 0.56 ) }
    dend_38 { pt3dadd( 77.8958, -65.6139, 17.992, 0.56 ) }
    dend_38 { pt3dadd( 79.6093, -73.9791, 16.6473, 0.56 ) }
    dend_38 { pt3dadd( 80.6505, -82.5703, 16.3899, 0.56 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_47 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_49 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_52 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_51 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_43 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_27 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_45 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_42 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_28 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_17 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_41 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_37 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_39 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_38 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_34 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_7 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_19 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_11 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_8 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_6 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_12 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_24 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_29 OneSecGrp_SectionRef_39.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 9
    dend_31 nseg = 3
    dend_49 nseg = 3
    dend_46 nseg = 3
    dend_30 nseg = 7
    dend_52 nseg = 3
    dend_51 nseg = 5
    dend_43 nseg = 3
    dend_27 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 11
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_42 nseg = 3
    dend_28 nseg = 7
    dend_26 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 5
    dend_13 nseg = 3
    dend_41 nseg = 3
    dend_40 nseg = 3
    dend_37 nseg = 3
    dend_39 nseg = 5
    dend_38 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_NBC_ed12f3afab_0_0


