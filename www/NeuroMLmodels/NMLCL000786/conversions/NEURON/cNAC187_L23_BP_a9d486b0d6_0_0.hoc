// Cell: cNAC187_L23_BP_a9d486b0d6_0_0
/*
{
  "id" : "cNAC187_L23_BP_a9d486b0d6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -9.3824, 10.7418, 1.66", "-0.49312, -11.1899, 12.1681, 1.66", "-0.968253, -13.1408, 13.7077, 1.66", "-1.78422, -16.4911, 16.3516, 1.39", "-5.02936, -29.8156, 26.8664, 1.11", "-5.59863, -32.153, 28.7109, 1.11", "-6.31963, -35.1134, 31.0471, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 8.2471, -0.778182, 1.39", "0.625679, 13.157, 1.26215, 0.83", "0.628508, 14.7737, 1.93397, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.31963, -35.1134, 31.0471, 0.83", "-8.2231, -42.389, 28.5823, 0.83", "-8.67632, -44.1214, 27.9954, 0.83", "-9.83325, -48.5435, 26.4973, 0.83", "-10.3519, -50.5259, 25.8258, 0.83", "-11.4672, -54.789, 24.3815, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.31963, -35.1134, 31.0471, 0.83", "-6.37462, -36.6279, 31.2693, 0.83", "-6.42555, -37.9994, 31.4505, 0.83", "-6.54946, -39.7946, 31.6674, 0.83", "-6.76743, -43.8994, 32.0561, 0.83", "-6.90612, -47.2879, 32.3262, 0.55", "-7.14765, -53.0351, 32.6637, 0.55", "-7.18963, -55.8952, 32.8526, 0.83", "-7.16567, -59.1674, 33.0697, 0.55", "-6.96851, -64.5163, 33.5708, 0.55", "-6.88152, -66.0446, 33.7307, 0.55", "-6.63223, -70.1888, 34.1861, 0.55", "-6.29593, -75.4146, 34.8858, 0.55", "-6.09673, -78.5436, 35.3391, 0.55", "-5.86835, -82.7093, 35.9812, 0.55", "-5.70568, -90.2048, 37.2257, 0.55", "-5.72989, -94.1596, 37.8727, 0.55", "-5.81152, -97.1106, 38.3182, 0.55", "-5.99062, -99.1549, 38.5491, 0.55", "-6.23934, -100.943, 38.7194, 0.55", "-6.88437, -104.525, 39.1428, 0.55", "-7.24644, -106.317, 39.371, 0.55", "-7.80834, -109.052, 39.8324, 0.55", "-8.57042, -112.714, 40.5101, 0.55", "-9.72871, -117.997, 41.5693, 0.55", "-10.7395, -122.752, 42.5901, 0.55", "-11.6551, -126.898, 43.5672, 0.83", "-12.5346, -130.856, 44.6364, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.628508, 14.7737, 1.93397, 0.83", "0.733683, 22.8446, -1.74665, 0.83", "0.82127, 24.9707, -2.63754, 0.83", "0.927971, 27.5764, -3.75466, 0.83", "1.04441, 29.7284, -4.61586, 0.83", "1.24426, 33.1697, -5.92311, 0.83", "1.55745, 37.6694, -7.53516, 0.83", "1.7406, 40.8692, -8.42912, 0.83", "1.97089, 44.3307, -9.45355, 0.83", "2.25892, 47.8836, -10.6392, 0.55", "2.35036, 49.0087, -11.0211, 0.55", "2.47826, 50.9341, -11.6872, 0.55", "2.79581, 54.9534, -13.006, 0.55", "2.99711, 57.87, -13.9294, 0.55", "3.55781, 65.1779, -16.2319, 0.55", "3.7845, 68.477, -17.4072, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.628508, 14.7737, 1.93397, 0.83", "1.42699, 17.9223, 3.34551, 0.83", "1.96897, 20.4104, 4.52147, 0.83", "2.68452, 24.3412, 6.46687, 0.83", "3.32443, 28.1322, 8.36246, 0.83", "4.06426, 32.9346, 10.5287, 0.83", "4.64701, 36.5538, 12.0691, 0.83", "4.99458, 39.296, 13.208, 0.83", "5.37725, 42.3044, 14.3488, 0.83", "5.46383, 43.1242, 14.6048, 0.83", "6.60912, 52.5437, 17.0758, 0.83", "6.85358, 54.5462, 17.4637, 0.83", "7.20702, 57.2686, 17.8504, 0.83", "7.50683, 59.6257, 18.1271, 0.83", "7.82833, 62.3606, 18.3911, 0.83", "8.25758, 65.8139, 18.7351, 0.83", "8.62115, 69.3763, 19.047, 0.83", "8.86109, 71.4098, 19.2395, 0.83", "9.31162, 74.551, 19.563, 0.83", "9.70557, 77.6423, 19.8698, 0.83", "10.1827, 80.8881, 20.1767, 0.83", "10.7906, 85.1308, 20.6199, 0.83", "11.1481, 87.9041, 21.0271, 0.83", "11.3059, 89.4406, 21.2817, 0.83", "11.425, 91.1813, 21.6401, 0.83", "11.5491, 93.7588, 22.3101, 0.83", "11.5016, 97.5537, 23.4601, 0.55", "11.3947, 102.533, 25.1628, 0.55", "11.2876, 104.002, 25.6618, 0.55", "11.0565, 107.09, 26.6905, 0.55", "10.9357, 108.386, 27.0927, 0.55", "10.6753, 110.819, 27.8281, 0.55", "10.4836, 113.353, 28.5023, 0.55", "10.4177, 117.025, 29.342, 0.55", "10.3933, 119.444, 29.864, 0.55", "10.3594, 121.647, 30.2608, 0.55", "10.3872, 124.395, 30.7719, 0.55", "10.5847, 127.251, 31.3106, 0.55", "10.9404, 131.14, 32.1378, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-11.4672, -54.789, 24.3815, 0.83", "-12.9504, -59.4704, 26.1726, 0.83", "-14.0948, -63.1799, 27.4241, 0.83", "-15.4417, -67.6536, 28.7492, 0.83", "-16.5492, -71.3517, 29.7258, 0.83", "-17.2223, -73.5991, 30.3192, 0.83", "-18.0248, -76.2786, 31.0268, 0.83", "-18.5222, -78.2165, 31.4141, 0.83", "-19.0746, -80.4287, 31.7638, 0.83", "-19.6824, -83.2563, 31.8157, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-11.4672, -54.789, 24.3815, 0.55", "-10.3148, -54.9641, 29.7078, 0.55", "-8.91482, -55.1122, 35.3729, 0.55", "-8.20367, -55.1875, 38.2507, 0.55", "-7.30796, -55.2823, 41.8753, 0.28", "-7.15999, -55.298, 42.474, 0.83", "-6.38375, -55.3801, 45.6152, 0.28", "-6.23297, -55.3571, 46.1488, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "3.7845, 68.477, -17.4072, 0.55", "4.04712, 72.2041, -17.4621, 0.55", "4.3989, 76.1445, -17.5923, 0.55", "4.62959, 78.9141, -17.6639, 0.55", "4.99079, 83.0739, -17.7273, 0.83", "5.2378, 86.0307, -17.7589, 0.55", "5.47968, 88.7895, -17.7615, 0.55", "5.65975, 91.3692, -17.7104, 1.11", "6.08071, 95.8533, -17.6971, 0.55", "6.21173, 97.351, -17.7402, 0.55", "6.38546, 99.2402, -17.8153, 1.11", "6.60376, 101.584, -17.9287, 0.55", "6.72664, 103.114, -18.0227, 1.11", "7.03844, 107.778, -18.3053, 0.55", "7.25278, 110.233, -18.6339, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.7845, 68.477, -17.4072, 0.28", "5.0559, 71.2376, -19.7952, 0.28", "5.25233, 71.6519, -20.1335, 0.55", "6.94982, 75.3183, -22.9655, 0.28", "8.70832, 78.7435, -25.6964, 1.11", "9.71945, 80.5283, -27.1628, 0.28", "9.71945, 80.5283, -27.1628, 0.55", "10.8996, 82.7123, -28.4335, 0.28", "11.358, 83.5529, -28.8044, 1.11", "13.3091, 87.3113, -29.1908, 0.55", "14.6363, 90.2535, -28.5096, 0.28", "16.6223, 94.8657, -26.8158, 1.11", "18.2007, 98.7822, -24.9411, 0.28", "18.2321, 98.8735, -24.877, 0.55", "18.9878, 101.466, -22.5601, 0.28", "19.0292, 101.694, -22.3001, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-19.6824, -83.2563, 31.8157, 0.83", "-19.5749, -89.0879, 33.5763, 0.83", "-19.4867, -93.7719, 35.2896, 0.83", "-19.3876, -95.9665, 36.0983, 0.83", "-19.339, -97.2294, 36.6666, 0.83", "-19.2833, -100.68, 38.3067, 0.83", "-19.2737, -102.718, 39.1396, 0.83", "-19.2472, -106.587, 40.3633, 0.83", "-19.1241, -109.275, 41.2109, 0.83", "-18.7127, -113.869, 42.492, 0.83", "-18.396, -116.235, 42.9929, 0.83", "-17.5231, -122.053, 43.6889, 0.83", "-16.8047, -127.239, 43.9942, 0.83", "-16.341, -131.519, 43.906, 0.83", "-16.1524, -134.612, 43.769, 0.83", "-16.1247, -135.236, 43.7229, 0.83", "-16.0907, -138.81, 43.6448, 0.28", "-16.1384, -139.755, 43.6929, 0.83", "-16.4217, -142.186, 43.768, 0.28", "-16.9842, -146.5, 43.8414, 0.28", "-17.1124, -147.426, 43.891, 0.28", "-17.4993, -150.38, 44.0688, 0.83", "-17.7777, -152.995, 44.2547, 0.28", "-17.9863, -155.094, 44.4302, 0.83", "-18.0857, -156.777, 44.6085, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-19.6824, -83.2563, 31.8157, 0.55", "-21.6982, -88.9266, 29.9053, 0.55", "-22.6501, -91.3544, 29.1478, 0.55", "-24.7891, -96.5013, 27.6592, 0.55", "-25.7625, -98.7019, 27.0649, 0.55", "-26.7906, -100.84, 26.5297, 0.28", "-27.25, -101.796, 26.2905, 0.55", "-28.5206, -104.0, 25.8681, 0.28", "-29.373, -105.43, 25.6278, 0.55", "-30.482, -107.087, 25.4868, 0.28", "-32.2514, -109.577, 25.2512, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_BP_a9d486b0d6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -9.3824, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.49312, -11.1899, 12.1681, 1.66 ) }
    dend_5 { pt3dadd( -0.968253, -13.1408, 13.7077, 1.66 ) }
    dend_5 { pt3dadd( -1.78422, -16.4911, 16.3516, 1.39 ) }
    dend_5 { pt3dadd( -5.02936, -29.8156, 26.8664, 1.11 ) }
    dend_5 { pt3dadd( -5.59863, -32.153, 28.7109, 1.11 ) }
    dend_5 { pt3dadd( -6.31963, -35.1134, 31.0471, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 8.2471, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.625679, 13.157, 1.26215, 0.83 ) }
    dend_0 { pt3dadd( 0.628508, 14.7737, 1.93397, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.31963, -35.1134, 31.0471, 0.83 ) }
    dend_7 { pt3dadd( -8.2231, -42.389, 28.5823, 0.83 ) }
    dend_7 { pt3dadd( -8.67632, -44.1214, 27.9954, 0.83 ) }
    dend_7 { pt3dadd( -9.83325, -48.5435, 26.4973, 0.83 ) }
    dend_7 { pt3dadd( -10.3519, -50.5259, 25.8258, 0.83 ) }
    dend_7 { pt3dadd( -11.4672, -54.789, 24.3815, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.31963, -35.1134, 31.0471, 0.83 ) }
    dend_6 { pt3dadd( -6.37462, -36.6279, 31.2693, 0.83 ) }
    dend_6 { pt3dadd( -6.42555, -37.9994, 31.4505, 0.83 ) }
    dend_6 { pt3dadd( -6.54946, -39.7946, 31.6674, 0.83 ) }
    dend_6 { pt3dadd( -6.76743, -43.8994, 32.0561, 0.83 ) }
    dend_6 { pt3dadd( -6.90612, -47.2879, 32.3262, 0.55 ) }
    dend_6 { pt3dadd( -7.14765, -53.0351, 32.6637, 0.55 ) }
    dend_6 { pt3dadd( -7.18963, -55.8952, 32.8526, 0.83 ) }
    dend_6 { pt3dadd( -7.16567, -59.1674, 33.0697, 0.55 ) }
    dend_6 { pt3dadd( -6.96851, -64.5163, 33.5708, 0.55 ) }
    dend_6 { pt3dadd( -6.88152, -66.0446, 33.7307, 0.55 ) }
    dend_6 { pt3dadd( -6.63223, -70.1888, 34.1861, 0.55 ) }
    dend_6 { pt3dadd( -6.29593, -75.4146, 34.8858, 0.55 ) }
    dend_6 { pt3dadd( -6.09673, -78.5436, 35.3391, 0.55 ) }
    dend_6 { pt3dadd( -5.86835, -82.7093, 35.9812, 0.55 ) }
    dend_6 { pt3dadd( -5.70568, -90.2048, 37.2257, 0.55 ) }
    dend_6 { pt3dadd( -5.72989, -94.1596, 37.8727, 0.55 ) }
    dend_6 { pt3dadd( -5.81152, -97.1106, 38.3182, 0.55 ) }
    dend_6 { pt3dadd( -5.99062, -99.1549, 38.5491, 0.55 ) }
    dend_6 { pt3dadd( -6.23934, -100.943, 38.7194, 0.55 ) }
    dend_6 { pt3dadd( -6.88437, -104.525, 39.1428, 0.55 ) }
    dend_6 { pt3dadd( -7.24644, -106.317, 39.371, 0.55 ) }
    dend_6 { pt3dadd( -7.80834, -109.052, 39.8324, 0.55 ) }
    dend_6 { pt3dadd( -8.57042, -112.714, 40.5101, 0.55 ) }
    dend_6 { pt3dadd( -9.72871, -117.997, 41.5693, 0.55 ) }
    dend_6 { pt3dadd( -10.7395, -122.752, 42.5901, 0.55 ) }
    dend_6 { pt3dadd( -11.6551, -126.898, 43.5672, 0.83 ) }
    dend_6 { pt3dadd( -12.5346, -130.856, 44.6364, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.628508, 14.7737, 1.93397, 0.83 ) }
    dend_2 { pt3dadd( 0.733683, 22.8446, -1.74665, 0.83 ) }
    dend_2 { pt3dadd( 0.82127, 24.9707, -2.63754, 0.83 ) }
    dend_2 { pt3dadd( 0.927971, 27.5764, -3.75466, 0.83 ) }
    dend_2 { pt3dadd( 1.04441, 29.7284, -4.61586, 0.83 ) }
    dend_2 { pt3dadd( 1.24426, 33.1697, -5.92311, 0.83 ) }
    dend_2 { pt3dadd( 1.55745, 37.6694, -7.53516, 0.83 ) }
    dend_2 { pt3dadd( 1.7406, 40.8692, -8.42912, 0.83 ) }
    dend_2 { pt3dadd( 1.97089, 44.3307, -9.45355, 0.83 ) }
    dend_2 { pt3dadd( 2.25892, 47.8836, -10.6392, 0.55 ) }
    dend_2 { pt3dadd( 2.35036, 49.0087, -11.0211, 0.55 ) }
    dend_2 { pt3dadd( 2.47826, 50.9341, -11.6872, 0.55 ) }
    dend_2 { pt3dadd( 2.79581, 54.9534, -13.006, 0.55 ) }
    dend_2 { pt3dadd( 2.99711, 57.87, -13.9294, 0.55 ) }
    dend_2 { pt3dadd( 3.55781, 65.1779, -16.2319, 0.55 ) }
    dend_2 { pt3dadd( 3.7845, 68.477, -17.4072, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.628508, 14.7737, 1.93397, 0.83 ) }
    dend_1 { pt3dadd( 1.42699, 17.9223, 3.34551, 0.83 ) }
    dend_1 { pt3dadd( 1.96897, 20.4104, 4.52147, 0.83 ) }
    dend_1 { pt3dadd( 2.68452, 24.3412, 6.46687, 0.83 ) }
    dend_1 { pt3dadd( 3.32443, 28.1322, 8.36246, 0.83 ) }
    dend_1 { pt3dadd( 4.06426, 32.9346, 10.5287, 0.83 ) }
    dend_1 { pt3dadd( 4.64701, 36.5538, 12.0691, 0.83 ) }
    dend_1 { pt3dadd( 4.99458, 39.296, 13.208, 0.83 ) }
    dend_1 { pt3dadd( 5.37725, 42.3044, 14.3488, 0.83 ) }
    dend_1 { pt3dadd( 5.46383, 43.1242, 14.6048, 0.83 ) }
    dend_1 { pt3dadd( 6.60912, 52.5437, 17.0758, 0.83 ) }
    dend_1 { pt3dadd( 6.85358, 54.5462, 17.4637, 0.83 ) }
    dend_1 { pt3dadd( 7.20702, 57.2686, 17.8504, 0.83 ) }
    dend_1 { pt3dadd( 7.50683, 59.6257, 18.1271, 0.83 ) }
    dend_1 { pt3dadd( 7.82833, 62.3606, 18.3911, 0.83 ) }
    dend_1 { pt3dadd( 8.25758, 65.8139, 18.7351, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 8.62115, 69.3763, 19.047, 0.83 ) }
    dend_1 { pt3dadd( 8.86109, 71.4098, 19.2395, 0.83 ) }
    dend_1 { pt3dadd( 9.31162, 74.551, 19.563, 0.83 ) }
    dend_1 { pt3dadd( 9.70557, 77.6423, 19.8698, 0.83 ) }
    dend_1 { pt3dadd( 10.1827, 80.8881, 20.1767, 0.83 ) }
    dend_1 { pt3dadd( 10.7906, 85.1308, 20.6199, 0.83 ) }
    dend_1 { pt3dadd( 11.1481, 87.9041, 21.0271, 0.83 ) }
    dend_1 { pt3dadd( 11.3059, 89.4406, 21.2817, 0.83 ) }
    dend_1 { pt3dadd( 11.425, 91.1813, 21.6401, 0.83 ) }
    dend_1 { pt3dadd( 11.5491, 93.7588, 22.3101, 0.83 ) }
    dend_1 { pt3dadd( 11.5016, 97.5537, 23.4601, 0.55 ) }
    dend_1 { pt3dadd( 11.3947, 102.533, 25.1628, 0.55 ) }
    dend_1 { pt3dadd( 11.2876, 104.002, 25.6618, 0.55 ) }
    dend_1 { pt3dadd( 11.0565, 107.09, 26.6905, 0.55 ) }
    dend_1 { pt3dadd( 10.9357, 108.386, 27.0927, 0.55 ) }
    dend_1 { pt3dadd( 10.6753, 110.819, 27.8281, 0.55 ) }
    dend_1 { pt3dadd( 10.4836, 113.353, 28.5023, 0.55 ) }
    dend_1 { pt3dadd( 10.4177, 117.025, 29.342, 0.55 ) }
    dend_1 { pt3dadd( 10.3933, 119.444, 29.864, 0.55 ) }
    dend_1 { pt3dadd( 10.3594, 121.647, 30.2608, 0.55 ) }
    dend_1 { pt3dadd( 10.3872, 124.395, 30.7719, 0.55 ) }
    dend_1 { pt3dadd( 10.5847, 127.251, 31.3106, 0.55 ) }
    dend_1 { pt3dadd( 10.9404, 131.14, 32.1378, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -11.4672, -54.789, 24.3815, 0.83 ) }
    dend_9 { pt3dadd( -12.9504, -59.4704, 26.1726, 0.83 ) }
    dend_9 { pt3dadd( -14.0948, -63.1799, 27.4241, 0.83 ) }
    dend_9 { pt3dadd( -15.4417, -67.6536, 28.7492, 0.83 ) }
    dend_9 { pt3dadd( -16.5492, -71.3517, 29.7258, 0.83 ) }
    dend_9 { pt3dadd( -17.2223, -73.5991, 30.3192, 0.83 ) }
    dend_9 { pt3dadd( -18.0248, -76.2786, 31.0268, 0.83 ) }
    dend_9 { pt3dadd( -18.5222, -78.2165, 31.4141, 0.83 ) }
    dend_9 { pt3dadd( -19.0746, -80.4287, 31.7638, 0.83 ) }
    dend_9 { pt3dadd( -19.6824, -83.2563, 31.8157, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -11.4672, -54.789, 24.3815, 0.55 ) }
    dend_8 { pt3dadd( -10.3148, -54.9641, 29.7078, 0.55 ) }
    dend_8 { pt3dadd( -8.91482, -55.1122, 35.3729, 0.55 ) }
    dend_8 { pt3dadd( -8.20367, -55.1875, 38.2507, 0.55 ) }
    dend_8 { pt3dadd( -7.30796, -55.2823, 41.8753, 0.28 ) }
    dend_8 { pt3dadd( -7.15999, -55.298, 42.474, 0.83 ) }
    dend_8 { pt3dadd( -6.38375, -55.3801, 45.6152, 0.28 ) }
    dend_8 { pt3dadd( -6.23297, -55.3571, 46.1488, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 3.7845, 68.477, -17.4072, 0.55 ) }
    dend_4 { pt3dadd( 4.04712, 72.2041, -17.4621, 0.55 ) }
    dend_4 { pt3dadd( 4.3989, 76.1445, -17.5923, 0.55 ) }
    dend_4 { pt3dadd( 4.62959, 78.9141, -17.6639, 0.55 ) }
    dend_4 { pt3dadd( 4.99079, 83.0739, -17.7273, 0.83 ) }
    dend_4 { pt3dadd( 5.2378, 86.0307, -17.7589, 0.55 ) }
    dend_4 { pt3dadd( 5.47968, 88.7895, -17.7615, 0.55 ) }
    dend_4 { pt3dadd( 5.65975, 91.3692, -17.7104, 1.11 ) }
    dend_4 { pt3dadd( 6.08071, 95.8533, -17.6971, 0.55 ) }
    dend_4 { pt3dadd( 6.21173, 97.351, -17.7402, 0.55 ) }
    dend_4 { pt3dadd( 6.38546, 99.2402, -17.8153, 1.11 ) }
    dend_4 { pt3dadd( 6.60376, 101.584, -17.9287, 0.55 ) }
    dend_4 { pt3dadd( 6.72664, 103.114, -18.0227, 1.11 ) }
    dend_4 { pt3dadd( 7.03844, 107.778, -18.3053, 0.55 ) }
    dend_4 { pt3dadd( 7.25278, 110.233, -18.6339, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.7845, 68.477, -17.4072, 0.28 ) }
    dend_3 { pt3dadd( 5.0559, 71.2376, -19.7952, 0.28 ) }
    dend_3 { pt3dadd( 5.25233, 71.6519, -20.1335, 0.55 ) }
    dend_3 { pt3dadd( 6.94982, 75.3183, -22.9655, 0.28 ) }
    dend_3 { pt3dadd( 8.70832, 78.7435, -25.6964, 1.11 ) }
    dend_3 { pt3dadd( 9.71945, 80.5283, -27.1628, 0.28 ) }
    dend_3 { pt3dadd( 9.71945, 80.5283, -27.1628, 0.55 ) }
    dend_3 { pt3dadd( 10.8996, 82.7123, -28.4335, 0.28 ) }
    dend_3 { pt3dadd( 11.358, 83.5529, -28.8044, 1.11 ) }
    dend_3 { pt3dadd( 13.3091, 87.3113, -29.1908, 0.55 ) }
    dend_3 { pt3dadd( 14.6363, 90.2535, -28.5096, 0.28 ) }
    dend_3 { pt3dadd( 16.6223, 94.8657, -26.8158, 1.11 ) }
    dend_3 { pt3dadd( 18.2007, 98.7822, -24.9411, 0.28 ) }
    dend_3 { pt3dadd( 18.2321, 98.8735, -24.877, 0.55 ) }
    dend_3 { pt3dadd( 18.9878, 101.466, -22.5601, 0.28 ) }
    dend_3 { pt3dadd( 19.0292, 101.694, -22.3001, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -19.6824, -83.2563, 31.8157, 0.83 ) }
    dend_11 { pt3dadd( -19.5749, -89.0879, 33.5763, 0.83 ) }
    dend_11 { pt3dadd( -19.4867, -93.7719, 35.2896, 0.83 ) }
    dend_11 { pt3dadd( -19.3876, -95.9665, 36.0983, 0.83 ) }
    dend_11 { pt3dadd( -19.339, -97.2294, 36.6666, 0.83 ) }
    dend_11 { pt3dadd( -19.2833, -100.68, 38.3067, 0.83 ) }
    dend_11 { pt3dadd( -19.2737, -102.718, 39.1396, 0.83 ) }
    dend_11 { pt3dadd( -19.2472, -106.587, 40.3633, 0.83 ) }
    dend_11 { pt3dadd( -19.1241, -109.275, 41.2109, 0.83 ) }
    dend_11 { pt3dadd( -18.7127, -113.869, 42.492, 0.83 ) }
    dend_11 { pt3dadd( -18.396, -116.235, 42.9929, 0.83 ) }
    dend_11 { pt3dadd( -17.5231, -122.053, 43.6889, 0.83 ) }
    dend_11 { pt3dadd( -16.8047, -127.239, 43.9942, 0.83 ) }
    dend_11 { pt3dadd( -16.341, -131.519, 43.906, 0.83 ) }
    dend_11 { pt3dadd( -16.1524, -134.612, 43.769, 0.83 ) }
    dend_11 { pt3dadd( -16.1247, -135.236, 43.7229, 0.83 ) }
    dend_11 { pt3dadd( -16.0907, -138.81, 43.6448, 0.28 ) }
    dend_11 { pt3dadd( -16.1384, -139.755, 43.6929, 0.83 ) }
    dend_11 { pt3dadd( -16.4217, -142.186, 43.768, 0.28 ) }
    dend_11 { pt3dadd( -16.9842, -146.5, 43.8414, 0.28 ) }
    dend_11 { pt3dadd( -17.1124, -147.426, 43.891, 0.28 ) }
    dend_11 { pt3dadd( -17.4993, -150.38, 44.0688, 0.83 ) }
    dend_11 { pt3dadd( -17.7777, -152.995, 44.2547, 0.28 ) }
    dend_11 { pt3dadd( -17.9863, -155.094, 44.4302, 0.83 ) }
    dend_11 { pt3dadd( -18.0857, -156.777, 44.6085, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -19.6824, -83.2563, 31.8157, 0.55 ) }
    dend_10 { pt3dadd( -21.6982, -88.9266, 29.9053, 0.55 ) }
    dend_10 { pt3dadd( -22.6501, -91.3544, 29.1478, 0.55 ) }
    dend_10 { pt3dadd( -24.7891, -96.5013, 27.6592, 0.55 ) }
    dend_10 { pt3dadd( -25.7625, -98.7019, 27.0649, 0.55 ) }
    dend_10 { pt3dadd( -26.7906, -100.84, 26.5297, 0.28 ) }
    dend_10 { pt3dadd( -27.25, -101.796, 26.2905, 0.55 ) }
    dend_10 { pt3dadd( -28.5206, -104.0, 25.8681, 0.28 ) }
    dend_10 { pt3dadd( -29.373, -105.43, 25.6278, 0.55 ) }
    dend_10 { pt3dadd( -30.482, -107.087, 25.4868, 0.28 ) }
    dend_10 { pt3dadd( -32.2514, -109.577, 25.2512, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_BP_a9d486b0d6_0_0


