// Cell: bNAC219_L4_MC_5fa0a62bd0_0_0
/*
{
  "id" : "bNAC219_L4_MC_5fa0a62bd0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.990274, 10.0329, -2.04532, 6.5955", "-0.916974, 8.69695, -1.77222, 11.7827", "-0.843674, 7.361, -1.49912, 14.5661", "-0.770374, 6.02505, -1.22601, 15.5703", "-0.697074, 4.6891, -0.952908, 16.4465", "-0.623774, 3.35314, -0.679804, 17.1803", "-0.550474, 2.01719, -0.4067, 17.9244", "-0.477174, 0.681242, -0.133596, 18.3543", "-0.403873, -0.654708, 0.139508, 18.5081", "-0.330573, -1.99066, 0.412612, 18.2649", "-0.257273, -3.32661, 0.685717, 18.0213", "-0.183973, -4.66256, 0.958821, 17.7017", "-0.110673, -5.99851, 1.23192, 17.3049", "-0.0373732, -7.33446, 1.50503, 16.1306", "0.0359269, -8.67041, 1.77813, 14.7151", "0.109227, -10.0064, 2.05124, 13.0272", "0.182527, -11.3423, 2.32434, 11.0913", "0.255827, -12.6783, 2.59744, 9.26593", "0.329127, -14.0142, 2.87055, 7.34863", "0.402427, -15.3502, 3.14365, 4.67215", "0.475727, -16.6861, 3.41676, 2.80931" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "0.496558, -17.1866, 6.73932, 2.8", "0.496558, -17.1866, 6.73932, 2.8", "0.497997, -19.0015, 6.98681, 2.58", "0.499606, -21.0283, 7.26319, 2.58", "0.500726, -22.4416, 7.45591, 3.24", "0.501911, -23.9338, 7.65939, 3.98", "0.502751, -24.9922, 7.80371, 4.13", "0.503258, -25.9593, 7.94828, 4.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000033000065803
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.30344, 1.60341, -17.4507, 1.77", "-4.36381, 2.281, -18.0845, 1.77", "-4.47921, 3.57632, -19.2959, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000033000065803
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.34656, 8.53341, -2.63068, 3.68", "4.34656, 8.53341, -2.63068, 3.68", "4.82339, 10.0982, -3.23665, 2.73", "5.23795, 11.8044, -3.78444, 2.73", "5.25147, 11.8601, -3.80231, 2.73", "5.66414, 13.5585, -4.34762, 2.43", "5.94183, 14.7014, -4.71455, 2.21", "6.31587, 16.4081, -5.23243, 2.06", "6.48921, 17.5105, -5.51624, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000033000065803
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.475727, -16.6861, 3.41676, 0.672765", "1.2975, -31.6636, 3.41676, 0.672765", "2.11928, -46.641, 3.41676, 0.672765" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "0.503258, -25.9593, 7.94828, 0.74", "-2.39052, -27.5699, 8.7876, 0.74", "-3.66791, -28.2961, 9.03483, 0.74", "-4.6261, -28.8243, 9.16305, 1.33", "-5.31468, -29.2, 9.235, 1.62", "-6.09769, -29.6221, 9.27673, 1.92", "-7.34607, -30.2878, 9.29821, 1.62", "-8.49356, -30.93, 9.09122, 0.96", "-9.33729, -31.4042, 9.00549, 0.81", "-9.39932, -31.4366, 9.00811, 0.81", "-10.3995, -31.9043, 9.19848, 1.62", "-11.1146, -32.1812, 9.47129, 1.99", "-12.0868, -32.4589, 10.05, 1.99", "-14.3876, -32.9923, 11.8337, 0.88", "-15.3629, -33.1486, 12.6998, 0.66", "-15.9425, -33.202, 13.2632, 0.66", "-16.7079, -33.2013, 14.0804, 1.03", "-17.2304, -33.1347, 14.6796, 1.03", "-17.2744, -33.1264, 14.7334, 1.03", "-17.77, -33.0473, 15.2652, 1.03", "-17.8107, -33.0453, 15.3092, 1.03", "-18.2576, -33.0895, 15.8156, 1.03", "-19.4448, -33.312, 17.1561, 0.74", "-20.5012, -33.5896, 18.3425, 0.44", "-20.9374, -33.7294, 18.8466, 0.81", "-21.1651, -33.8259, 19.1246, 0.81", "-21.5525, -34.0169, 19.6103, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.503258, -25.9593, 7.94828, 2.43", "1.10436, -28.6239, 7.60674, 2.43", "1.45591, -30.1823, 7.40699, 1.99" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-4.47921, 3.57632, -19.2959, 0.44", "-2.74353, 5.24306, -23.695, 0.44", "-2.07423, 6.05018, -25.2708, 0.44", "-2.05316, 6.08197, -25.3171, 0.44", "-1.50373, 7.05907, -26.4095, 0.59", "-1.44937, 7.16766, -26.4975, 0.59", "-0.768265, 8.48381, -27.4138, 1.69", "-0.376772, 9.3069, -27.6664, 2.95", "0.169894, 10.2151, -27.9326, 2.87", "0.740444, 10.9205, -28.217, 1.62", "2.04192, 12.0464, -28.8672, 0.22", "2.79306, 12.5448, -29.2889, 0.74", "3.74434, 13.0126, -29.863, 0.81", "5.17361, 13.5956, -30.7971, 0.74", "6.077, 13.9272, -31.4341, 0.29", "6.62015, 14.1813, -31.9064, 0.29", "7.36609, 14.7559, -32.724, 1.84", "7.67037, 15.1873, -33.1006, 2.65", "7.70012, 15.2461, -33.1459, 2.65", "7.99128, 15.8529, -33.6059, 2.43", "8.49696, 16.9977, -34.9816, 0.29", "8.68817, 17.4783, -35.6847, 0.29", "8.96158, 18.2004, -36.8804, 0.29", "9.34323, 19.3085, -38.8026, 1.4", "9.55933, 20.0215, -40.0983, 4.13", "10.4021, 22.7369, -45.0777, 0.44", "10.4978, 23.087, -45.7091, 0.59", "10.5132, 23.1572, -45.8408, 0.59", "10.566, 23.4775, -46.4323, 0.59", "10.66, 24.1077, -47.4787, 0.37", "10.9333, 25.9, -50.1763, 2.8", "11.0867, 26.6115, -51.1933, 3.39", "11.7434, 29.5604, -55.5269, 0.96", "11.8602, 30.0975, -56.3296, 0.59", "12.0116, 30.8348, -57.4471, 2.21", "12.0704, 31.1681, -57.937, 3.17", "12.313, 33.2953, -61.0618, 0.52", "12.3606, 33.5882, -61.5541, 0.29", "12.3672, 33.6223, -61.6149, 0.29", "12.4727, 34.0413, -62.4324, 0.29", "12.6567, 34.6456, -63.7163, 2.43", "12.8622, 35.1541, -64.837, 3.09", "13.9106, 37.392, -69.6209, 0.37", "14.3712, 38.2293, -71.3932, 0.96", "14.5556, 38.526, -72.021, 0.96", "14.572, 38.5503, -72.0734, 0.96", "15.407, 39.6983, -74.5735, 0.37", "16.1113, 40.6483, -76.4573, 2.73", "16.5744, 41.2848, -77.437, 3.61", "17.3331, 42.3002, -79.0763, 2.87" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.47921, 3.57632, -19.2959, 1.47", "-6.26944, 8.03893, -25.3684, 1.47", "-6.78741, 9.4656, -26.7276, 1.47", "-6.82553, 9.5776, -26.8025, 1.47", "-7.17506, 10.7099, -27.403, 1.69", "-7.19224, 10.7706, -27.4334, 1.69", "-7.60304, 12.3584, -28.2289, 1.69", "-7.96645, 14.1036, -28.784, 1.69", "-8.21572, 15.3895, -29.2531, 1.99", "-8.4764, 16.8313, -29.8245, 2.06", "-8.73122, 18.3826, -30.5318, 2.28", "-8.92364, 19.6432, -31.1852, 2.21", "-9.11123, 21.1995, -32.2441, 2.43" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.48921, 17.5105, -5.51624, 1.92", "6.41291, 17.9185, -11.3298, 1.92", "6.50236, 18.0411, -12.9161, 1.69", "6.76084, 18.2482, -15.4026, 2.0", "7.67476, 18.8608, -21.4009, 1.33", "7.69079, 18.8707, -21.4786, 1.33", "8.01568, 19.0717, -23.0545, 0.88", "8.61002, 19.2597, -24.4579, 0.88", "8.67468, 19.2751, -24.5603, 0.88", "9.53884, 19.4667, -25.3461, 1.55", "10.6013, 19.8782, -25.5103, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.48921, 17.5105, -5.51624, 1.62", "6.17248, 18.4783, -5.5949, 1.62", "5.76542, 19.7545, -5.77417, 1.47", "5.39789, 21.1473, -5.994, 0.59", "5.26493, 21.889, -6.11007, 0.96", "5.21435, 22.4723, -6.18344, 1.25", "5.21174, 23.0655, -6.24668, 1.4", "5.41138, 24.2799, -6.32395, 0.96", "5.78556, 25.2507, -6.31261, 0.81", "6.29346, 26.215, -6.25487, 1.25", "6.90763, 27.1869, -6.16201, 1.69", "7.30814, 27.7265, -6.08119, 2.06", "7.94246, 28.4385, -5.90996, 2.28", "8.6471, 29.0823, -5.64178, 2.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.11928, -46.641, 3.41676, 0.672765", "2.94105, -61.6185, 3.41676, 0.672765", "3.76282, -76.596, 3.41676, 0.672765" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "1.45591, -30.1823, 7.40699, 0.52", "3.31562, -30.7315, 5.84019, 0.52", "4.58561, -31.0816, 4.86394, 0.96", "5.8251, -31.4632, 3.96358, 0.29", "6.89994, -31.8516, 3.20008, 0.44", "6.95412, -31.8746, 3.1622, 0.44", "7.45437, -32.1316, 2.78563, 0.44", "7.99125, -32.4892, 2.39015, 0.29", "8.50517, -32.8522, 2.01999, 0.29", "8.98014, -33.2405, 1.67445, 0.88", "9.3002, -33.5631, 1.42169, 0.88", "10.4685, -34.92, 0.370715, 0.44", "10.7237, -35.2471, 0.106362, 0.22", "11.1033, -35.7287, -0.313739, 0.22", "11.5779, -36.2807, -0.8087, 0.81", "11.8304, -36.5473, -1.05119, 0.96", "12.7142, -37.3976, -1.82889, 0.29", "13.4539, -38.077, -2.41119, 0.29", "13.9025, -38.4701, -2.75962, 1.25", "14.3557, -38.8122, -3.09106, 1.69", "15.6508, -39.5915, -3.93565, 0.22", "16.075, -39.8052, -4.19507, 0.22", "16.3628, -39.9368, -4.36675, 0.81", "16.4236, -39.9688, -4.40777, 0.81", "17.1412, -40.4185, -4.9548, 0.81", "17.1854, -40.4548, -4.99513, 0.81", "18.0704, -41.3897, -5.95547, 0.22", "18.8643, -42.3948, -6.89928, 1.47", "19.2972, -43.0479, -7.48678, 1.99", "19.4462, -43.2825, -7.72595, 2.5", "20.0564, -44.2271, -8.7413, 0.81", "20.4508, -44.8467, -9.41604, 0.29", "20.7645, -45.3608, -9.99057, 0.15", "21.3547, -46.3227, -11.1095, 1.4", "22.4359, -47.9513, -13.1274, 0.37", "22.8307, -48.4913, -13.8745, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "1.45591, -30.1823, 7.40699, 1.77", "1.1074, -31.9652, 7.11631, 1.77", "0.794665, -33.5612, 6.88817, 1.84", "0.443843, -35.3937, 6.64945, 1.84", "0.0951398, -37.2962, 6.42266, 1.84", "-0.172211, -38.8431, 6.25588, 2.06", "-0.44969, -40.5504, 6.08629, 2.58", "-0.676893, -42.0303, 5.97166, 3.09", "-0.770087, -42.6817, 5.92091, 3.39", "-0.89329, -43.6213, 5.85459, 3.61", "-1.13518, -45.7403, 5.76202, 3.39", "-1.31612, -47.5013, 5.70649, 2.14" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "17.3331, 42.3002, -79.0763, 0.37", "17.3219, 44.3033, -83.0156, 0.37", "17.2924, 44.7872, -83.9205, 0.37", "17.2819, 44.8818, -84.0849, 0.37", "17.1723, 45.6061, -85.2031, 0.66", "17.0429, 46.3525, -86.2448, 0.22", "17.0385, 46.386, -86.2944, 0.22", "16.9842, 46.8423, -86.9104, 0.22", "16.9609, 47.1279, -87.3102, 0.59", "16.8629, 48.3344, -89.084, 1.77", "16.8216, 48.8778, -89.9081, 2.5", "16.6069, 51.2366, -93.6115, 0.22", "16.5655, 51.5887, -94.1881, 0.52", "16.5498, 51.7134, -94.4041, 0.52", "16.3908, 52.5189, -95.8566, 1.11", "16.3793, 52.5506, -95.918, 1.11", "16.1984, 52.8355, -96.5597, 1.25", "15.4633, 53.6051, -98.3954, 0.22", "15.4408, 53.6264, -98.4469, 0.22", "14.9378, 54.0443, -99.5071, 1.55", "14.2154, 54.5798, -100.878, 1.77", "12.8371, 55.5379, -103.397, 0.37", "12.6902, 55.6363, -103.715, 1.11", "12.4414, 55.8288, -104.431, 1.25", "11.7916, 56.4552, -106.754, 0.22", "11.5287, 56.737, -107.82, 1.77", "11.2998, 57.0148, -108.852, 2.43", "10.1849, 58.3428, -113.632, 0.66", "9.37807, 59.2344, -116.856, 0.59", "8.76255, 59.8957, -119.258, 1.69", "8.58326, 60.0793, -119.905, 2.06", "8.54458, 60.1133, -120.025, 2.06", "7.07132, 61.102, -123.18, 0.22", "6.46154, 61.4031, -123.907, 0.22", "6.41646, 61.42, -123.943, 0.22", "5.78392, 61.6191, -124.363, 1.55", "5.19413, 61.8211, -124.733, 1.99", "3.93452, 62.3016, -125.415, 0.15", "3.83223, 62.3486, -125.48, 0.15", "3.28965, 62.6421, -125.953, 0.15", "3.21199, 62.6892, -126.032, 0.15", "2.80806, 62.986, -126.5, 0.96", "2.46828, 63.2722, -126.985, 1.18", "1.01844, 64.7957, -129.345, 0.15", "0.987008, 64.8322, -129.396, 0.15", "0.589781, 65.3319, -130.029, 1.18", "0.243649, 65.7864, -130.573, 1.33", "-0.397593, 66.6533, -131.595, 0.15", "-0.876822, 67.3292, -132.332, 0.15", "-1.77138, 68.7362, -133.513, 1.99", "-2.26796, 69.5417, -134.215, 2.73", "-2.29549, 69.5885, -134.259, 2.73" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "17.3331, 42.3002, -79.0763, 0.22", "19.3199, 43.5922, -81.5486, 0.22", "20.1661, 44.2218, -82.7337, 0.74", "20.6897, 44.7386, -83.6478, 1.03", "21.6288, 45.8577, -85.5589, 0.29", "22.1458, 46.6367, -86.9778, 0.81", "22.6158, 47.5743, -88.694, 1.84", "22.7035, 48.0107, -89.492, 2.36", "22.6926, 49.2744, -91.8668, 0.29", "22.6036, 49.784, -92.7878, 0.96", "22.0456, 51.451, -95.5829, 0.29", "21.737, 52.1297, -96.6552, 2.06", "21.4127, 52.7088, -97.5022, 2.43", "20.4373, 54.3061, -99.6481, 0.29", "20.1054, 54.7991, -100.233, 0.22", "19.6298, 55.4708, -100.916, 1.25", "19.2559, 55.9955, -101.341, 1.62", "18.3171, 57.2652, -102.313, 0.15", "17.8752, 57.8284, -102.718, 0.81", "17.6161, 58.1539, -102.937, 0.96", "17.0292, 58.9257, -103.51, 0.22", "16.4852, 59.6673, -104.222, 1.03", "16.3005, 59.9279, -104.498, 1.25", "15.4402, 61.1667, -105.943, 0.22", "14.8426, 62.0791, -107.033, 2.14", "14.4968, 62.6294, -107.719, 2.73", "13.177, 64.8055, -110.456, 0.37", "12.9041, 65.2808, -111.063, 0.44", "12.4817, 66.0635, -112.103, 0.44", "12.2426, 66.612, -112.87, 1.18", "11.8144, 67.8538, -114.606, 0.22", "11.7233, 68.2024, -115.069, 0.22", "11.5546, 69.2387, -116.305, 1.62", "11.4583, 70.0557, -117.249, 2.21", "11.3315, 72.1728, -119.552, 0.37", "11.3324, 72.6931, -120.086, 0.37", "11.3347, 72.7435, -120.134, 0.37", "11.4006, 73.7262, -121.069, 0.74", "11.4315, 74.1871, -121.484, 0.59", "11.4795, 75.2412, -122.355, 0.29", "11.5095, 76.3612, -123.232, 1.47", "11.5367, 77.2324, -123.949, 1.77", "11.5868, 78.8912, -125.282, 0.22", "11.5886, 78.9749, -125.347, 0.22", "11.5997, 79.4841, -125.701, 0.22", "11.6068, 80.0423, -126.016, 0.22", "11.6083, 80.1056, -126.046, 0.22", "11.6605, 81.2751, -126.482, 1.69", "11.6856, 81.9444, -126.696, 1.69", "11.7715, 83.5688, -127.211, 0.22", "11.8182, 84.3148, -127.448, 0.52", "11.8205, 84.3723, -127.465, 0.52", "11.8393, 85.446, -127.821, 0.22", "11.8391, 85.5122, -127.843, 0.22", "11.8345, 86.2898, -128.112, 0.22", "11.8019, 87.8108, -128.638, 1.55", "11.7882, 88.5282, -128.878, 1.77", "11.771, 90.0658, -129.408, 0.22", "11.7616, 90.8252, -129.69, 0.59", "11.7542, 92.2533, -130.235, 0.22", "11.7525, 93.0616, -130.567, 0.59", "11.6708, 94.4523, -131.217, 0.22", "11.5659, 95.4406, -131.721, 1.47", "11.417, 96.2158, -132.121, 2.28", "11.4004, 96.2755, -132.154, 2.28", "11.1102, 97.0494, -132.575, 2.73", "10.1291, 99.2155, -133.698, 0.22", "9.72446, 99.9955, -134.054, 0.52", "9.22889, 100.909, -134.418, 0.22", "8.93538, 101.446, -134.617, 0.81", "8.58851, 102.081, -134.836, 1.18", "7.679, 103.801, -135.414, 0.22", "6.95413, 105.266, -135.883, 0.22", "6.43897, 106.321, -136.246, 1.11", "6.15898, 106.922, -136.476, 1.69", "5.89651, 107.512, -136.713, 1.99", "5.22732, 109.093, -137.388, 0.22", "4.70406, 110.301, -138.015, 0.22", "4.33873, 111.126, -138.499, 0.22", "3.85759, 112.153, -139.103, 1.25", "3.65867, 112.556, -139.344, 2.36", "3.30887, 113.24, -139.764, 2.36", "2.24684, 115.226, -140.932, 0.22", "2.21856, 115.28, -140.966, 0.22", "1.69065, 116.564, -141.742, 0.22", "1.67506, 116.616, -141.77, 0.22", "1.50551, 117.413, -142.179, 0.22", "1.4279, 118.464, -142.66, 2.28", "1.47455, 119.38, -143.047, 1.47", "1.6883, 121.434, -143.959, 0.22", "1.78591, 122.008, -144.242, 0.66", "1.85634, 122.382, -144.432, 0.66", "2.16789, 123.84, -145.217, 0.22", "2.33711, 124.578, -145.627, 0.81", "2.42317, 125.032, -145.874, 0.81", "2.63396, 126.462, -146.676, 0.22", "2.74484, 127.687, -147.383, 1.69", "2.76539, 128.229, -147.685, 1.92", "2.76517, 128.299, -147.723, 1.92", "2.7217, 129.691, -148.451, 0.22", "2.69598, 130.154, -148.688, 0.59", "2.58697, 131.458, -149.327, 0.22", "2.48762, 132.447, -149.838, 0.22", "2.48337, 132.499, -149.867, 0.22", "2.43537, 133.479, -150.443, 0.22", "2.42616, 134.35, -150.98, 1.62", "2.42771, 134.417, -151.022, 1.62", "2.47646, 135.088, -151.424, 1.69", "2.58907, 136.241, -152.117, 0.44", "2.66975, 137.003, -152.557, 0.59", "2.6771, 137.064, -152.589, 0.59", "2.84223, 138.35, -153.264, 0.22", "2.96132, 139.361, -153.78, 0.59", "2.98834, 139.622, -153.904, 0.74", "3.06878, 140.562, -154.351, 0.22", "3.11496, 141.411, -154.797, 1.11", "3.13883, 142.641, -155.468, 0.22", "3.1173, 143.549, -155.958, 1.55", "3.0884, 144.077, -156.234, 1.77", "3.07167, 144.298, -156.35, 1.77", "2.88527, 146.047, -157.259, 0.22", "2.85068, 146.322, -157.402, 0.37", "2.73778, 147.174, -157.813, 0.22", "2.72937, 147.234, -157.846, 0.22", "2.67975, 147.607, -158.055, 0.52", "2.50683, 148.915, -158.763, 0.22", "2.34184, 150.195, -159.489, 1.25", "2.3168, 150.382, -159.601, 1.77", "2.08834, 151.909, -160.558, 0.15", "1.98166, 152.583, -160.977, 0.15", "1.84998, 153.389, -161.519, 0.59", "1.61331, 154.775, -162.517, 0.22", "1.47571, 155.551, -163.096, 0.22", "1.36307, 156.236, -163.6, 1.4", "1.30959, 156.519, -163.816, 1.55", "0.735905, 159.016, -165.807, 0.22", "0.724934, 159.062, -165.844, 0.22", "0.569031, 159.676, -166.346, 0.22", "0.408022, 160.29, -166.854, 1.84", "-0.230523, 162.592, -168.765, 0.22", "-0.482523, 163.398, -169.432, 1.33" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-9.11123, 21.1995, -32.2441, 1.47", "-12.1048, 19.7474, -35.6668, 1.47", "-13.246, 19.2878, -36.6925, 2.28", "-14.0134, 19.0164, -37.2845, 2.73", "-14.7861, 18.7748, -37.8193, 2.87", "-14.8418, 18.7574, -37.8578, 2.87", "-16.1787, 18.3394, -38.783, 2.95", "-17.5457, 18.0614, -39.256, 2.95", "-18.6317, 17.8567, -39.6118, 2.43", "-19.1538, 17.7656, -39.7819, 2.43" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-9.11123, 21.1995, -32.2441, 0.59", "-6.0132, 23.6899, -32.9754, 0.59", "-5.41767, 24.2048, -33.182, 0.59", "-4.3361, 25.2567, -33.6265, 0.81", "-3.32612, 26.3692, -34.0954, 0.74", "-2.94197, 26.8631, -34.2971, 0.66", "-2.36383, 27.7413, -34.6089, 0.52", "-2.34628, 27.7923, -34.6351, 0.52", "-2.31466, 28.4475, -34.8021, 0.66", "-2.43465, 28.9408, -34.764, 0.66", "-2.67658, 29.5508, -34.5855, 0.52", "-3.00532, 30.2305, -34.2892, 0.44", "-3.46748, 31.066, -33.835, 0.66", "-3.66155, 31.4074, -33.6366, 0.88", "-3.97306, 31.937, -33.3113, 0.96", "-4.27214, 32.4605, -33.003, 0.81", "-4.54826, 32.9563, -32.7499, 0.88", "-4.83561, 33.4591, -32.5223, 0.88", "-4.88724, 33.5453, -32.4875, 0.88", "-5.23387, 34.1024, -32.2808, 0.88", "-5.5814, 34.6861, -32.1305, 1.03", "-5.98561, 35.3595, -32.0526, 1.03" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "10.6013, 19.8782, -25.5103, 0.37", "10.7839, 21.6171, -25.4981, 0.37", "10.8487, 22.7926, -25.4258, 0.81", "10.864, 23.3746, -25.3769, 1.33", "10.8902, 24.4914, -25.2751, 1.92", "10.9073, 25.4407, -25.1881, 1.03", "10.9522, 27.4504, -24.9954, 0.29", "10.9488, 28.2716, -24.893, 0.66", "10.938, 28.9329, -24.8369, 0.66", "10.9198, 30.2039, -24.7594, 0.44", "10.9199, 31.0866, -24.7506, 0.59", "10.94, 31.869, -24.7843, 0.52", "11.0035, 32.8118, -24.8828, 0.52", "11.0647, 34.1222, -25.0756, 1.25", "11.0754, 34.7735, -25.1821, 1.92", "11.0361, 36.1303, -25.4212, 1.62", "11.0325, 36.1991, -25.4332, 1.62", "10.9401, 37.3582, -25.6246, 0.29", "10.869, 38.1253, -25.7455, 0.22", "10.8154, 38.6831, -25.8145, 0.22", "10.7481, 39.418, -25.9038, 1.11", "10.6726, 40.2219, -25.9912, 1.69", "10.6339, 40.6574, -26.0404, 2.06", "10.582, 41.6911, -26.1703, 1.11", "10.5407, 42.9214, -26.3188, 0.29", "10.4961, 44.0985, -26.4508, 1.99", "10.4854, 44.6238, -26.5118, 2.65", "10.4969, 45.3132, -26.6043, 2.87", "10.6086, 47.0465, -26.853, 0.22", "10.7656, 48.2426, -27.026, 0.37", "10.9696, 49.0777, -27.1771, 0.37", "11.521, 50.52, -27.4763, 2.58", "12.0927, 51.5765, -27.7203, 2.87", "12.4333, 52.032, -27.8367, 2.95", "12.9998, 52.5664, -27.9872, 3.09", "14.1398, 53.4603, -28.264, 0.74", "14.8947, 53.9641, -28.425, 0.29", "15.692, 54.4084, -28.554, 1.4", "16.3609, 54.7454, -28.6326, 2.06", "17.2974, 55.1884, -28.734, 2.73" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "10.6013, 19.8782, -25.5103, 0.44", "11.8015, 22.3737, -24.4223, 0.44", "12.1814, 23.2407, -24.0601, 0.44", "12.236, 23.3707, -24.0089, 0.44", "12.5384, 24.1025, -23.7304, 0.44", "13.217, 25.6447, -23.1756, 0.44", "14.1152, 27.6861, -22.4411, 1.25", "14.1374, 27.7505, -22.425, 1.25", "14.3399, 28.3444, -22.2612, 1.25", "14.3744, 28.4408, -22.2328, 1.25", "14.7851, 29.4725, -21.8804, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "8.6471, 29.0823, -5.64178, 0.74", "8.39143, 29.7969, -4.13775, 0.74", "8.09059, 30.5529, -2.71972, 0.74", "7.61075, 31.7507, -0.671507, 1.4", "6.95523, 33.3608, 1.87056, 0.29", "6.82157, 33.7196, 2.40813, 0.29", "6.61461, 34.3196, 3.25855, 0.22", "6.44822, 34.8504, 3.93867, 0.22", "6.0255, 36.2967, 5.51869, 1.11", "5.89593, 36.7348, 5.88677, 1.55", "5.33288, 38.3797, 7.11636, 0.22", "5.201, 38.8025, 7.49078, 0.22", "5.0788, 39.3396, 8.01799, 1.03", "5.03517, 39.7001, 8.39987, 1.18", "5.02616, 40.6735, 9.46041, 0.22", "5.21013, 41.8668, 10.8447, 1.33", "5.5965, 43.0601, 12.296, 0.29", "5.84564, 43.5458, 12.9129, 0.29", "6.19221, 44.0585, 13.5671, 0.74", "6.46593, 44.4264, 13.9986, 1.11", "6.99148, 45.1145, 14.6975, 0.29", "7.0229, 45.1618, 14.7385, 0.29", "7.27694, 45.6791, 15.1294, 0.29", "7.61463, 46.5665, 15.7752, 0.29", "7.88938, 47.4233, 16.322, 0.74", "8.10151, 48.1253, 16.7146, 1.25", "8.4649, 49.3198, 17.3078, 0.88", "8.62951, 49.8425, 17.5308, 1.03", "8.87405, 50.5769, 17.7922, 0.74", "9.30647, 51.7852, 18.0823, 0.29", "9.66935, 52.7249, 18.2395, 0.29", "9.69691, 52.7998, 18.2456, 0.29", "9.92504, 53.5697, 18.2355, 0.29", "9.96095, 53.7153, 18.2341, 0.29", "10.1413, 54.4947, 18.2341, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.6471, 29.0823, -5.64178, 0.96", "9.18068, 30.6, -6.34627, 0.96", "9.53518, 31.8021, -6.88976, 0.29", "9.76025, 32.7196, -7.27441, 0.81", "9.95811, 33.7579, -7.66132, 1.11", "9.96597, 33.8142, -7.68046, 1.11", "10.0277, 34.3766, -7.84695, 1.11", "10.0278, 34.4452, -7.86113, 1.11", "10.0198, 35.1736, -8.02487, 1.25", "10.0358, 35.7732, -8.13779, 1.11", "10.1044, 37.0113, -8.31059, 0.81", "10.2028, 38.2497, -8.45343, 1.47", "10.2099, 38.309, -8.45902, 1.47", "10.4009, 39.6519, -8.55873, 2.28", "10.532, 40.463, -8.60708, 2.14", "10.6856, 41.2479, -8.62192, 1.47", "11.0213, 42.7801, -8.58434, 0.88", "11.4288, 44.4182, -8.5041, 0.29", "11.8077, 45.8562, -8.40398, 0.29", "11.8267, 45.9233, -8.3975, 0.29", "12.1824, 47.0936, -8.29297, 1.55", "12.428, 47.8641, -8.21706, 2.14", "12.6711, 48.6637, -8.13079, 1.92", "12.8824, 49.4337, -8.04473, 1.11", "13.0724, 50.3362, -7.95556, 0.44", "13.1758, 51.3035, -7.88831, 0.37", "13.1642, 51.453, -7.88614, 0.37", "13.014, 52.0588, -7.89661, 0.29", "12.987, 52.1341, -7.90003, 0.29", "12.681, 52.9574, -7.95417, 0.29", "12.457, 53.5738, -7.99943, 0.29", "12.2243, 54.2977, -8.05572, 0.29", "11.8807, 55.5364, -8.15519, 1.84", "11.7036, 56.3983, -8.22685, 2.65", "11.595, 57.2012, -8.29372, 2.95", "11.5841, 57.6296, -8.32949, 2.95", "11.5883, 57.7092, -8.33618, 2.95" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-1.31612, -47.5013, 5.70649, 0.44", "0.415038, -47.9412, 6.18029, 0.44", "1.3112, -48.2501, 6.35214, 0.44", "1.3851, -48.2786, 6.36317, 0.44", "2.1492, -48.616, 6.45437, 0.44", "3.16471, -49.0644, 6.57558, 0.37", "4.00297, -49.4345, 6.67563, 0.37", "5.04118, -49.8211, 6.71159, 1.92", "5.48715, -50.0283, 6.72518, 2.5", "6.21943, -50.428, 6.74036, 2.8" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.31612, -47.5013, 5.70649, 1.03", "-1.181, -49.3773, 4.85773, 1.03", "-1.09467, -50.5761, 4.31537, 1.03", "-1.0064, -51.8016, 3.76092, 1.33", "-0.918616, -53.0204, 3.20947, 1.33" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.29549, 69.5885, -134.259, 0.37", "-1.78442, 71.7321, -137.758, 0.37", "-1.62948, 72.2675, -138.673, 0.22", "-1.61866, 72.3036, -138.732, 0.22", "-1.51311, 72.6542, -139.286, 0.22", "-1.22627, 73.6868, -141.067, 1.77", "-1.00138, 74.5742, -142.618, 1.33", "-0.824387, 75.3685, -143.958, 0.22", "-0.774053, 75.6942, -144.524, 0.74", "-0.763985, 75.8036, -144.714, 0.74", "-0.790874, 77.5333, -147.517, 0.22", "-0.864047, 78.17, -148.384, 1.25", "-0.940167, 78.6011, -148.885, 1.4", "-1.34129, 80.3292, -150.842, 0.22", "-1.353, 80.3769, -150.892, 0.22", "-1.64689, 81.5567, -151.988, 0.22", "-1.91226, 82.6453, -152.787, 1.55", "-2.0535, 83.2316, -153.172, 1.47", "-2.66555, 85.9588, -154.75, 0.22", "-2.91836, 86.9898, -155.305, 0.22", "-2.95425, 87.1185, -155.378, 0.22", "-3.21391, 87.9327, -155.855, 0.22", "-3.70862, 89.2076, -156.558, 1.77", "-3.88515, 89.6389, -156.777, 2.06", "-4.94171, 92.1374, -157.952, 0.22", "-5.00265, 92.2776, -158.026, 0.22", "-5.28042, 92.9494, -158.402, 0.88", "-5.82996, 94.4, -159.252, 0.22", "-6.17708, 95.6194, -159.997, 0.88", "-6.18879, 95.6785, -160.033, 0.88", "-6.20846, 95.9415, -160.176, 0.88", "-6.28308, 96.7298, -160.65, 0.15", "-6.34857, 97.2649, -161.011, 0.52", "-6.57214, 98.4355, -161.869, 0.22", "-6.76978, 99.0485, -162.371, 0.22", "-6.79226, 99.1045, -162.423, 0.22", "-7.13164, 99.8735, -163.207, 0.22", "-7.34168, 100.364, -163.746, 0.22", "-7.75581, 101.412, -164.92, 1.69", "-7.93238, 101.968, -165.648, 1.47", "-8.29162, 103.431, -167.747, 0.29", "-8.42511, 104.18, -168.868, 0.22", "-8.50232, 105.228, -170.493, 1.11", "-8.50512, 105.498, -170.926, 1.11", "-8.43513, 107.697, -174.703, 0.37", "-8.43362, 107.726, -174.755, 0.37", "-8.42679, 107.979, -175.221, 1.03", "-8.44818, 109.056, -177.228, 0.22", "-8.5169, 109.84, -178.69, 1.55", "-8.63279, 110.714, -180.304, 1.62", "-8.99826, 112.369, -183.221, 0.22", "-9.31125, 113.514, -185.254, 1.47", "-9.39187, 113.746, -185.669, 2.06", "-9.59893, 114.251, -186.522, 2.06", "-9.61643, 114.294, -186.587, 2.06", "-10.2853, 116.133, -189.027, 0.15", "-10.443, 116.606, -189.624, 1.03", "-10.5513, 116.976, -190.074, 1.4", "-10.9574, 118.538, -191.917, 0.15", "-11.2364, 119.763, -193.314, 1.33", "-11.5709, 121.366, -195.112, 0.22", "-11.7479, 122.368, -196.177, 0.81", "-11.7729, 122.514, -196.34, 1.18", "-11.8858, 123.062, -197.018, 0.59", "-12.0471, 123.698, -197.858, 1.25", "-12.062, 123.745, -197.92, 1.25", "-12.2521, 124.121, -198.463, 1.25", "-13.2244, 125.676, -200.868, 1.11", "-13.9838, 126.753, -202.638, 0.22", "-14.0204, 126.799, -202.717, 0.22", "-14.6112, 127.456, -203.853, 1.77", "-16.5015, 129.475, -207.277, 0.15", "-17.0599, 130.062, -208.237, 1.4", "-17.0917, 130.102, -208.299, 1.4", "-17.238, 130.348, -208.662, 2.06", "-17.9476, 132.656, -211.739, 0.22", "-18.0732, 133.607, -212.904, 2.21", "-18.0701, 134.07, -213.411, 2.95", "-17.8967, 137.559, -217.154, 0.22", "-17.7782, 138.812, -218.486, 1.84", "-17.2013, 142.225, -222.049, 0.22", "-17.0678, 142.678, -222.496, 0.96", "-17.0414, 142.757, -222.573, 0.96" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.29549, 69.5885, -134.259, 0.22", "-5.3616, 71.5641, -135.825, 0.22", "-6.00671, 71.9359, -136.079, 0.44", "-7.37619, 72.6679, -136.516, 0.22", "-8.14962, 73.0586, -136.73, 1.03", "-8.38395, 73.1728, -136.785, 1.18", "-9.712, 73.8275, -137.048, 0.22", "-11.1158, 74.4746, -137.126, 0.22", "-11.9011, 74.8236, -137.167, 1.4", "-12.4599, 75.0711, -137.193, 1.62", "-13.8882, 75.7421, -137.246, 0.22", "-14.908, 76.2478, -137.265, 0.22", "-14.9785, 76.2856, -137.265, 0.22", "-15.556, 76.5993, -137.248, 0.22", "-16.3055, 77.0038, -137.215, 1.33", "-17.0127, 77.3789, -137.174, 1.69", "-18.3816, 78.0899, -137.067, 0.15", "-19.376, 78.6008, -136.976, 0.74", "-20.6594, 79.3038, -136.848, 0.15", "-21.1193, 79.5833, -136.79, 0.15", "-21.176, 79.6237, -136.783, 0.15", "-21.6861, 80.0469, -136.742, 0.88", "-22.1726, 80.5235, -136.728, 1.25", "-22.6011, 80.9234, -136.795, 1.11", "-23.5771, 81.7899, -137.07, 0.22", "-24.6074, 82.6669, -137.411, 0.22", "-25.4213, 83.3103, -137.674, 1.03", "-25.6282, 83.4614, -137.747, 1.33", "-27.875, 84.9948, -138.532, 0.15", "-27.9236, 85.0256, -138.549, 0.15", "-28.3097, 85.2748, -138.721, 1.03", "-29.7482, 86.2624, -139.414, 0.22", "-30.4043, 86.7728, -139.748, 1.18", "-31.01, 87.3095, -140.107, 1.33", "-31.0537, 87.3555, -140.137, 1.33", "-32.6736, 89.1139, -141.37, 0.15", "-33.0701, 89.5463, -141.729, 0.66", "-33.3157, 89.8182, -141.983, 0.66", "-34.0739, 90.6242, -142.763, 0.22", "-34.2633, 90.8003, -142.946, 0.66", "-34.5275, 91.0195, -143.17, 0.66", "-35.6737, 91.8548, -143.991, 0.15", "-36.0896, 92.1553, -144.293, 0.66", "-36.6344, 92.5482, -144.686, 0.66", "-37.9825, 93.5757, -145.65, 0.22", "-38.4823, 93.9777, -146.015, 0.88", "-38.7262, 94.1849, -146.205, 1.25", "-40.7166, 95.9776, -147.813, 0.22", "-40.7528, 96.0123, -147.846, 0.22", "-41.4135, 96.6767, -148.483, 1.03", "-41.5819, 96.8479, -148.664, 1.03", "-42.8708, 98.1116, -150.071, 0.22", "-42.9054, 98.1447, -150.107, 0.22", "-43.6975, 98.8509, -150.922, 0.96", "-43.9999, 99.0995, -151.22, 1.4", "-45.3718, 100.159, -152.544, 0.15", "-45.903, 100.554, -153.041, 0.44", "-46.5296, 101.003, -153.576, 0.15", "-47.3735, 101.587, -154.255, 1.03", "-47.647, 101.762, -154.446, 1.18" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.482523, 163.398, -169.432, 0.22", "-0.655841, 164.294, -170.286, 0.22", "-1.00027, 166.139, -171.914, 1.33", "-1.13436, 166.874, -172.518, 1.62", "-1.54797, 168.941, -174.281, 0.22", "-1.73354, 169.818, -175.037, 0.22", "-1.75456, 169.908, -175.114, 0.22", "-1.97279, 170.702, -175.768, 1.03", "-2.09249, 171.109, -176.061, 1.03", "-2.62124, 172.794, -177.219, 0.22", "-2.66168, 172.924, -177.306, 0.22", "-2.89425, 173.613, -177.834, 0.22", "-2.91226, 173.667, -177.876, 0.22", "-3.45188, 175.046, -178.997, 1.84", "-3.67264, 175.581, -179.403, 2.43", "-3.71343, 175.674, -179.465, 2.43", "-4.25882, 176.861, -180.219, 1.11", "-4.82797, 178.07, -180.946, 0.22", "-5.34504, 179.104, -181.546, 0.22", "-5.76763, 179.87, -181.959, 0.81", "-6.12732, 180.533, -182.298, 1.99", "-6.42004, 181.07, -182.552, 1.4", "-6.69149, 181.616, -182.805, 0.96", "-7.24223, 182.95, -183.466, 0.15", "-7.48139, 183.695, -183.879, 0.15", "-7.71961, 184.59, -184.419, 1.25", "-7.78348, 184.867, -184.591, 1.62", "-8.02835, 186.206, -185.414, 0.15", "-8.09807, 186.721, -185.827, 0.52", "-8.1425, 187.076, -186.108, 0.52", "-8.26058, 187.924, -186.757, 0.15", "-8.43458, 188.993, -187.537, 1.4", "-8.54754, 189.583, -187.95, 1.99", "-9.49222, 193.848, -190.91, 0.15", "-9.83727, 195.366, -191.964, 0.15", "-10.0563, 196.367, -192.639, 1.18", "-10.1469, 196.807, -192.917, 2.14", "-10.2193, 197.161, -193.125, 2.14", "-10.7166, 199.447, -194.309, 0.15", "-10.8922, 200.288, -194.609, 0.66", "-11.153, 201.676, -195.18, 0.22", "-11.3157, 202.607, -195.564, 0.96", "-11.4023, 203.132, -195.765, 1.11", "-11.4242, 203.26, -195.814, 1.11", "-11.5602, 203.993, -196.066, 1.11", "-12.0126, 206.314, -196.908, 0.22", "-12.2314, 207.32, -197.272, 0.22", "-12.5118, 208.566, -197.72, 1.47", "-12.7922, 209.939, -198.242, 0.22", "-12.9293, 210.7, -198.545, 0.81", "-12.9715, 210.975, -198.657, 0.81", "-13.1571, 212.652, -199.303, 0.22", "-13.1706, 213.204, -199.54, 0.96", "-13.0084, 214.796, -200.332, 0.22", "-12.8747, 215.512, -200.753, 1.4", "-12.7804, 215.93, -201.027, 1.77", "-12.602, 216.721, -201.536, 1.55", "-12.1853, 218.486, -202.677, 0.22", "-11.9374, 219.648, -203.396, 0.59", "-11.249, 223.57, -205.546, 0.22", "-11.2404, 223.633, -205.576, 0.22", "-11.0513, 225.579, -206.409, 0.22", "-11.0483, 225.645, -206.433, 0.22", "-11.0562, 226.428, -206.625, 0.96", "-11.1063, 228.171, -206.869, 0.22", "-11.1289, 229.34, -206.889, 0.37", "-11.1401, 230.294, -206.907, 0.15", "-11.1381, 230.592, -206.913, 0.44", "-11.125, 231.338, -206.927, 0.22", "-11.0983, 232.074, -206.938, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-0.482523, 163.398, -169.432, 0.22", "-1.4173, 162.977, -169.466, 0.22", "-1.68404, 162.844, -169.474, 0.29", "-2.27385, 162.538, -169.506, 0.15", "-2.84222, 162.24, -169.543, 0.29", "-4.04383, 161.609, -169.621, 0.15", "-5.28249, 160.958, -169.701, 0.44", "-5.9286, 160.609, -169.748, 0.15", "-6.48007, 160.296, -169.79, 0.59", "-6.76103, 160.122, -169.813, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-19.1538, 17.7656, -39.7819, 2.28", "-19.1785, 17.7807, -44.8907, 2.28", "-19.2717, 17.7869, -46.1555, 2.21", "-19.875, 17.7673, -50.8936, 2.43", "-20.0369, 17.7431, -51.8283, 2.58", "-20.1034, 17.7242, -52.1305, 2.58", "-21.0667, 17.3289, -55.7164, 0.52", "-21.5253, 17.1747, -56.7067, 2.06", "-21.8639, 17.0591, -57.3042, 2.43", "-23.01, 16.5923, -58.997, 1.62", "-23.7299, 16.2983, -60.0419, 0.59", "-24.7495, 15.9269, -61.4451, 2.58", "-25.9762, 15.5512, -63.0079, 3.61", "-27.6672, 15.1121, -65.2127, 0.59", "-28.3233, 14.9557, -66.1064, 0.29", "-28.386, 14.9434, -66.1914, 0.29", "-28.7187, 14.8889, -66.6821, 0.59", "-29.053, 14.8254, -67.1723, 0.44", "-29.945, 14.5289, -68.4946, 0.22", "-30.9138, 14.1341, -69.8304, 0.22", "-30.949, 14.1203, -69.877, 0.22", "-31.8713, 13.8277, -71.0069, 2.06", "-32.7571, 13.5884, -72.0394, 3.39", "-33.9005, 13.3519, -73.2445, 3.61", "-35.5292, 13.1359, -74.739, 2.06", "-36.6194, 13.0237, -75.601, 0.44", "-37.704, 12.91, -76.3694, 0.22", "-37.8244, 12.9, -76.4401, 0.22", "-38.5684, 12.8573, -76.7911, 0.22", "-38.6451, 12.857, -76.8139, 0.22", "-39.7339, 12.9153, -76.9593, 0.22", "-40.6199, 13.0207, -76.9884, 0.22", "-41.4522, 13.1788, -77.0827, 0.66", "-41.5596, 13.2068, -77.1044, 0.66", "-42.2955, 13.4575, -77.3455, 0.88", "-42.7885, 13.6575, -77.5345, 0.22", "-43.4105, 13.9258, -77.7822, 0.22", "-44.8281, 14.4938, -78.3525, 0.81", "-45.408, 14.7055, -78.5857, 0.96", "-46.2557, 14.9975, -78.9089, 0.59", "-47.5333, 15.4139, -79.3815, 0.22", "-48.6646, 15.7644, -79.7813, 0.22", "-49.7113, 16.0652, -80.1095, 2.14", "-50.7839, 16.3646, -80.3571, 3.46", "-51.5968, 16.5985, -80.542, 3.76", "-51.6536, 16.6144, -80.5531, 3.76" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-19.1538, 17.7656, -39.7819, 0.22", "-20.1077, 17.9321, -39.8127, 0.22", "-21.6301, 18.1978, -39.8617, 0.22", "-21.7581, 18.2201, -39.8658, 0.22", "-23.1026, 18.4548, -39.9091, 2.14", "-23.9291, 18.599, -39.9357, 2.65" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.98561, 35.3595, -32.0526, 0.29", "-6.34875, 35.7025, -32.851, 0.29", "-6.3805, 35.732, -32.9059, 0.29", "-6.63107, 35.9821, -33.3233, 0.44", "-7.2565, 36.6722, -34.3714, 0.66", "-8.01537, 37.5559, -35.658, 0.22", "-8.51132, 38.1565, -36.4715, 0.37", "-8.97077, 38.7882, -37.2997, 0.37", "-9.31203, 39.3051, -37.8975, 0.29", "-9.72353, 39.9368, -38.6, 1.03", "-9.7549, 39.9899, -38.6511, 1.03", "-10.0055, 40.5022, -39.1162, 1.25", "-10.4917, 41.6484, -40.2077, 0.22", "-10.7572, 42.2971, -40.8856, 0.52", "-11.2652, 43.4305, -42.116, 0.22", "-11.4506, 43.8071, -42.5383, 0.22", "-11.729, 44.3071, -43.1522, 0.44", "-11.7735, 44.3793, -43.2507, 0.44", "-12.127, 44.8551, -43.9087, 0.29", "-12.4139, 45.1817, -44.3358, 0.59", "-12.6525, 45.4446, -44.6318, 0.81", "-13.3821, 46.1749, -45.43, 0.59", "-13.4214, 46.2149, -45.4718, 0.59", "-13.9807, 46.8166, -46.0576, 0.29", "-14.7873, 47.7226, -46.897, 1.99", "-15.2749, 48.2836, -47.3903, 2.5", "-15.8452, 48.9465, -47.9471, 2.8", "-17.5477, 50.9099, -49.4707, 0.22", "-18.0078, 51.431, -49.8574, 0.88", "-18.049, 51.4772, -49.8901, 0.88", "-18.4236, 51.8961, -50.1734, 0.66", "-18.9494, 52.4744, -50.5339, 0.22", "-19.3843, 52.9498, -50.8243, 0.22", "-19.9544, 53.5207, -51.1885, 0.22", "-20.5632, 54.1255, -51.6571, 1.03", "-20.9345, 54.4987, -51.9817, 1.55", "-21.171, 54.74, -52.2117, 1.77", "-22.005, 55.6281, -53.1418, 0.22", "-22.5341, 56.2331, -53.8878, 0.22", "-23.0504, 56.8443, -54.7257, 1.69", "-23.3918, 57.2235, -55.2915, 2.21", "-23.4224, 57.2567, -55.345, 2.21", "-23.7237, 57.5823, -56.0488, 2.21", "-24.6521, 58.7036, -58.6617, 0.22", "-24.6676, 58.7263, -58.715, 0.22", "-24.9818, 59.2305, -59.9159, 1.55", "-25.1968, 59.5805, -60.7464, 2.36", "-26.4597, 61.6481, -65.6141, 0.29", "-26.7038, 62.0566, -66.519, 0.88", "-27.1002, 62.7934, -68.0151, 0.22", "-27.1165, 62.8266, -68.0745, 0.22", "-27.3082, 63.2651, -68.745, 0.22", "-27.3297, 63.3119, -68.8062, 0.22", "-27.8508, 64.4144, -69.9635, 2.36", "-28.0885, 64.9352, -70.5778, 2.73", "-29.0539, 67.167, -73.3111, 0.22", "-29.2187, 67.571, -73.8029, 0.88", "-29.3086, 67.8153, -74.0921, 1.03", "-29.3252, 67.8592, -74.1439, 1.03", "-30.0058, 69.5953, -76.3849, 0.22", "-30.0223, 69.6359, -76.4395, 0.22", "-30.312, 70.4675, -77.5304, 0.22", "-30.5629, 71.298, -78.7036, 1.69", "-30.6936, 71.7471, -79.3517, 1.92", "-31.2562, 73.6564, -82.091, 0.66", "-31.4779, 74.4673, -83.2691, 0.29", "-31.696, 75.4165, -84.6553, 0.66", "-31.8988, 76.7749, -86.7256, 0.22", "-31.9459, 77.2369, -87.4315, 1.25", "-31.9702, 77.653, -88.0314, 1.69", "-32.0342, 79.4841, -90.4182, 0.22", "-32.0524, 79.9472, -90.9853, 1.03", "-32.1071, 81.3344, -92.5627, 0.22", "-32.1067, 81.3919, -92.6184, 0.22", "-32.0798, 81.7745, -92.9616, 0.22", "-32.0093, 82.4335, -93.4966, 1.11", "-31.9535, 82.8503, -93.8172, 1.33", "-31.6546, 84.6603, -95.2857, 0.29", "-31.5586, 85.0775, -95.6832, 0.29", "-31.3388, 85.8407, -96.498, 0.88", "-31.267, 86.0522, -96.7804, 0.88", "-30.7986, 87.306, -98.6601, 0.22", "-30.6024, 87.8462, -99.5677, 1.47", "-30.0852, 89.3536, -102.266, 0.29", "-30.0256, 89.5221, -102.588, 0.59", "-29.4835, 91.0585, -105.67, 0.37", "-29.3211, 91.5291, -106.598, 1.18", "-29.0153, 92.6234, -108.804, 0.88", "-28.9763, 92.8097, -109.201, 1.03", "-28.7934, 93.7006, -111.158, 0.37", "-28.6078, 94.4508, -112.833, 1.33", "-28.5098, 94.7815, -113.555, 1.33", "-27.9875, 96.3053, -116.93, 1.03", "-27.7976, 96.8127, -118.011, 1.18", "-27.3276, 98.0927, -120.63, 0.22", "-27.2008, 98.4946, -121.406, 1.25", "-27.134, 98.7148, -121.823, 1.4", "-26.8442, 99.7535, -123.885, 0.15", "-26.7619, 100.214, -124.734, 0.81", "-26.7885, 100.436, -125.192, 0.81", "-27.1645, 101.201, -126.872, 0.29", "-27.4578, 101.611, -127.809, 0.59", "-28.3711, 102.51, -129.986, 1.25", "-28.9556, 102.958, -131.12, 1.4", "-30.6906, 104.096, -134.111, 0.15", "-31.355, 104.488, -135.147, 0.15", "-31.7352, 104.699, -135.698, 1.03", "-33.1773, 105.488, -137.657, 0.22", "-33.2186, 105.509, -137.709, 0.22", "-33.595, 105.708, -138.193, 1.03", "-33.8961, 105.871, -138.554, 1.25", "-35.8012, 106.936, -140.883, 0.15", "-36.1566, 107.15, -141.287, 0.66", "-36.2067, 107.186, -141.339, 0.66", "-36.4652, 107.372, -141.573, 0.88", "-37.7898, 108.315, -142.641, 0.22", "-38.2347, 108.617, -142.941, 0.22", "-38.9051, 109.057, -143.293, 1.11", "-39.3398, 109.344, -143.537, 1.47", "-39.6803, 109.585, -143.755, 1.47", "-41.3358, 110.868, -144.952, 0.22", "-41.73, 111.214, -145.263, 0.74", "-41.9184, 111.387, -145.418, 0.88", "-41.955, 111.423, -145.449, 0.88", "-42.8094, 112.288, -146.184, 0.22", "-43.3532, 112.863, -146.634, 0.22", "-43.8965, 113.484, -147.116, 0.52", "-44.2616, 113.898, -147.455, 1.18", "-45.0505, 114.727, -148.207, 0.22", "-45.9022, 115.484, -149.007, 0.88", "-46.2395, 115.738, -149.315, 1.03", "-47.5068, 116.587, -150.483, 0.22", "-48.0312, 116.878, -150.98, 0.22", "-49.0243, 117.348, -151.935, 1.11", "-50.4292, 117.872, -153.161, 0.15", "-50.7352, 117.968, -153.409, 0.59", "-50.9743, 118.031, -153.593, 0.59", "-52.4911, 118.374, -154.616, 0.22", "-52.632, 118.411, -154.722, 0.22", "-54.6454, 118.992, -156.201, 0.22", "-54.6917, 119.007, -156.236, 0.22", "-55.4847, 119.285, -156.849, 1.03", "-56.0844, 119.518, -157.315, 1.4", "-57.7537, 120.326, -158.545, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.98561, 35.3595, -32.0526, 0.29", "-5.62769, 36.0557, -32.5665, 0.29", "-5.2415, 37.0072, -33.2065, 1.69", "-5.12196, 37.4153, -33.454, 2.36", "-4.91214, 38.3075, -33.9619, 2.14", "-4.49543, 40.355, -35.0802, 0.29", "-4.37933, 40.9162, -35.387, 0.44", "-4.26482, 41.6907, -35.8113, 0.44", "-4.1688, 42.5678, -36.2752, 0.22", "-4.13104, 42.8513, -36.4272, 0.22", "-4.12023, 42.9032, -36.4552, 0.22", "-3.86982, 43.6191, -36.9691, 0.37", "-3.81467, 43.7311, -37.0716, 0.37", "-3.77012, 43.8212, -37.154, 0.37", "-3.53729, 44.4261, -37.6472, 0.37", "-3.34535, 45.0823, -38.1478, 0.22", "-2.98578, 46.5088, -39.1947, 2.06", "-2.78463, 47.3974, -39.8162, 2.73", "-2.39408, 49.1573, -40.9946, 0.22", "-2.13168, 50.1992, -41.6909, 0.22", "-1.80899, 51.2407, -42.3921, 0.22", "-1.57474, 51.8378, -42.8037, 0.22", "-1.16128, 52.741, -43.5106, 1.77", "-0.986189, 53.094, -43.8051, 1.99", "-0.153144, 54.4546, -45.063, 0.22", "0.438245, 55.3069, -45.9015, 2.28", "0.885067, 55.9613, -46.5368, 2.5", "1.95624, 57.7681, -48.2686, 0.44", "2.26938, 58.3899, -48.8703, 0.44", "2.74904, 59.5564, -49.976, 0.29", "2.76218, 59.6073, -50.0222, 0.29", "2.88129, 60.3899, -50.6821, 0.22", "3.06962, 61.7715, -51.7586, 1.69", "3.14395, 62.4324, -52.2331, 2.21", "3.16753, 62.6763, -52.4062, 2.21", "3.33243, 64.3357, -53.5039, 0.52", "3.53169, 65.2506, -54.0978, 0.22", "3.72349, 65.7861, -54.4275, 0.22", "3.76982, 65.883, -54.4811, 0.22", "4.28058, 66.8291, -54.9918, 1.62", "4.57138, 67.3194, -55.2592, 1.84", "5.22427, 68.3265, -55.8355, 0.22", "5.70408, 69.0949, -56.3523, 0.59", "5.78677, 69.2518, -56.4647, 0.81", "6.32939, 70.3887, -57.2572, 0.22", "6.71339, 71.2548, -57.8552, 1.84", "7.05849, 72.032, -58.3872, 2.14", "7.49083, 72.8756, -58.9553, 1.62", "8.43011, 74.4475, -60.0068, 0.22", "9.0458, 75.3612, -60.5935, 0.22", "9.22973, 75.6, -60.7304, 0.52", "9.61258, 76.0074, -60.9315, 0.52", "10.5264, 76.8075, -61.227, 0.22", "10.8408, 77.019, -61.285, 0.81", "11.1183, 77.1563, -61.3151, 0.81", "11.6011, 77.3683, -61.3899, 0.44", "12.7305, 77.8703, -61.6242, 0.22", "12.8015, 77.9016, -61.6439, 0.22", "13.5514, 78.2251, -61.8904, 1.62", "14.1609, 78.4825, -62.1054, 2.28", "14.9667, 78.8167, -62.4113, 1.77", "15.916, 79.2092, -62.7957, 0.52", "16.7654, 79.5805, -63.1562, 0.22", "16.8339, 79.6114, -63.1836, 0.22", "17.2928, 79.8058, -63.3685, 0.22", "17.387, 79.839, -63.4049, 0.22", "17.7241, 79.9237, -63.513, 0.22", "18.1319, 79.9727, -63.6417, 0.74", "18.8226, 80.0666, -63.8586, 0.74", "20.1734, 80.2597, -64.2962, 0.22", "20.76, 80.3676, -64.4981, 0.74", "21.2547, 80.4781, -64.6878, 0.96", "22.7289, 80.8327, -65.4119, 0.22", "23.5266, 81.0294, -65.8889, 0.22", "23.5837, 81.0441, -65.9266, 0.22", "24.5606, 81.3031, -66.6109, 1.47", "25.3047, 81.4796, -67.1366, 1.99", "26.5554, 81.7196, -67.9955, 1.33", "27.9813, 81.9189, -68.9147, 0.15", "28.4284, 81.9687, -69.1848, 0.29", "28.4976, 81.9767, -69.2241, 0.29", "29.3518, 82.0685, -69.6581, 0.29", "30.3276, 82.2198, -70.0697, 0.81", "30.7608, 82.3195, -70.2228, 0.81", "31.9357, 82.6779, -70.7095, 0.15", "31.9947, 82.6995, -70.7404, 0.15", "32.2966, 82.8217, -70.916, 0.15", "33.365, 83.2909, -71.5787, 1.33", "33.9958, 83.5755, -71.9784, 1.84", "34.8804, 83.9931, -72.5045, 1.62", "36.474, 84.8298, -73.3765, 0.22", "37.2009, 85.255, -73.7494, 1.11", "37.6333, 85.5356, -73.9561, 1.33", "37.687, 85.575, -73.9778, 1.33", "38.8968, 86.5246, -74.3379, 0.22", "39.4627, 87.0514, -74.5221, 0.81", "39.6672, 87.2893, -74.6124, 1.11", "39.6994, 87.3345, -74.6353, 1.11", "39.9927, 87.7987, -74.9281, 1.4", "40.1331, 88.0372, -75.0993, 1.4", "40.9948, 89.6301, -76.4186, 0.22", "41.0269, 89.6859, -76.4661, 0.22", "41.3669, 90.2476, -76.9202, 0.22", "41.4007, 90.2953, -76.9587, 0.22", "41.8797, 90.8576, -77.3506, 1.11", "42.1881, 91.1694, -77.52, 1.4", "42.3383, 91.3026, -77.5624, 1.4", "42.612, 91.5294, -77.6409, 1.4", "43.4347, 92.2344, -77.9002, 0.52", "44.3858, 93.0678, -78.2091, 0.81", "44.4363, 93.113, -78.2264, 0.81", "45.0689, 93.6931, -78.4435, 0.81", "45.6906, 94.2753, -78.645, 0.22", "46.2941, 94.835, -78.8178, 0.22", "46.8678, 95.3735, -78.9502, 0.22", "46.9269, 95.4257, -78.9635, 0.22", "47.5218, 95.9329, -79.1179, 1.03", "47.9599, 96.2863, -79.2345, 1.55", "48.4219, 96.6417, -79.3498, 1.77", "48.557, 96.731, -79.384, 1.77", "48.9706, 97.0165, -79.5022, 1.69", "50.2151, 97.9088, -79.8699, 0.29", "50.7688, 98.3882, -80.0597, 0.52", "50.8418, 98.4605, -80.0869, 0.52", "52.0253, 99.7675, -80.5453, 0.22", "52.7703, 100.688, -80.8336, 1.92", "53.1134, 101.197, -80.9735, 2.21", "54.2233, 103.215, -81.4367, 0.15", "54.4363, 103.688, -81.5415, 0.81", "54.5677, 104.057, -81.6154, 1.4", "54.8132, 105.057, -81.7889, 0.66", "55.0749, 106.372, -81.9881, 0.22", "55.1396, 106.723, -82.0345, 0.59", "55.4011, 108.106, -82.1773, 0.29", "55.6314, 109.02, -82.2652, 0.44", "55.9803, 110.169, -82.3669, 0.22", "56.2926, 110.992, -82.4286, 1.4", "56.5707, 111.613, -82.4882, 1.99", "56.8657, 112.212, -82.5792, 1.55", "57.6533, 113.649, -82.8798, 0.22", "57.6922, 113.715, -82.9034, 0.22", "58.0526, 114.331, -83.2, 0.22", "58.6298, 115.372, -83.8114, 1.25", "58.9507, 116.04, -84.2501, 1.55", "59.1399, 116.503, -84.5878, 1.11", "59.5606, 117.697, -85.4929, 0.22", "59.6544, 117.973, -85.7045, 0.66", "59.6736, 118.035, -85.7519, 0.66", "59.7429, 118.264, -85.9132, 0.66", "59.9969, 119.236, -86.5234, 0.22", "60.149, 119.912, -86.9034, 0.22", "60.3452, 120.826, -87.3199, 0.22", "60.4367, 121.268, -87.5267, 0.22", "60.5276, 121.731, -87.7445, 0.81", "60.5981, 122.115, -87.9257, 1.11", "60.6927, 122.647, -88.1691, 0.96", "60.8752, 123.658, -88.6373, 0.22", "61.1108, 124.738, -89.1158, 0.22", "61.1249, 124.8, -89.1419, 0.22", "61.403, 125.943, -89.5774, 1.69", "61.5598, 126.522, -89.7373, 1.99", "61.5781, 126.581, -89.7393, 1.99", "62.1186, 128.007, -89.4022, 0.22", "62.4508, 128.77, -89.08, 0.22", "62.7367, 129.299, -88.7706, 0.52", "63.3589, 130.249, -88.0322, 0.29", "64.3301, 131.633, -86.7836, 0.29", "64.7341, 132.18, -86.256, 1.25", "64.9345, 132.43, -85.9894, 1.47", "65.8674, 133.549, -84.8473, 0.22", "66.4473, 134.247, -84.1712, 0.52", "66.9559, 134.863, -83.6576, 0.22", "67.3458, 135.367, -83.3387, 0.22", "67.3783, 135.411, -83.3134, 0.22", "67.7904, 136.031, -83.0352, 0.96", "67.9715, 136.354, -82.9518, 1.25", "68.2111, 136.777, -82.8828, 1.25", "68.8174, 137.786, -82.7564, 0.22", "68.8535, 137.846, -82.7485, 0.22", "69.3171, 138.624, -82.6763, 0.22", "69.7275, 139.35, -82.6745, 1.03", "69.8772, 139.622, -82.6917, 1.33", "69.916, 139.691, -82.7003, 1.33", "70.1502, 140.075, -82.8107, 0.96", "70.8368, 141.165, -83.2014, 0.22", "71.364, 141.969, -83.569, 0.88", "71.4004, 142.023, -83.5966, 0.88", "71.6712, 142.409, -83.8062, 1.03", "72.5214, 143.611, -84.4808, 0.22", "73.127, 144.447, -84.9771, 0.22", "73.677, 145.159, -85.4284, 1.25", "74.0787, 145.661, -85.7436, 1.62", "74.1228, 145.719, -85.779, 1.62" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "17.2974, 55.1884, -28.734, 0.22", "17.7802, 56.8238, -28.7802, 0.22", "17.9547, 57.4317, -28.7891, 0.22", "18.2243, 58.3648, -28.7975, 1.62", "18.4286, 59.0332, -28.8015, 1.84", "18.5947, 59.5632, -28.8049, 2.06", "19.0402, 61.0032, -28.8146, 0.22", "19.2243, 61.6521, -28.7976, 0.22", "19.2452, 61.7293, -28.7961, 0.22", "19.3188, 62.0098, -28.796, 0.22", "19.4296, 62.516, -28.798, 0.22", "19.4975, 62.9563, -28.8025, 0.22", "19.5481, 63.5374, -28.8358, 0.52", "19.5602, 63.6865, -28.8474, 0.52", "19.5719, 63.8355, -28.8603, 0.52", "19.6059, 64.2724, -28.8992, 0.52", "19.664, 64.8476, -28.9458, 0.52", "19.7485, 65.5832, -29.0015, 0.22", "19.8288, 66.2759, -29.0477, 0.22", "19.8361, 66.3455, -29.0503, 0.22", "19.9013, 67.0059, -29.0604, 0.22", "19.9529, 67.7399, -29.0549, 0.81", "19.9658, 68.1064, -29.0507, 1.11", "19.9514, 68.6961, -29.0394, 1.11", "19.8734, 69.6643, -29.0316, 0.29", "19.8627, 69.7334, -29.0329, 0.29", "19.6802, 70.473, -29.0653, 0.29", "19.3407, 71.5466, -29.1333, 1.03", "19.1477, 72.0866, -29.1741, 1.55", "19.0156, 72.4245, -29.2033, 1.77", "18.5876, 73.4633, -29.3044, 0.22", "18.2968, 74.1985, -29.3682, 0.22", "18.0681, 74.8236, -29.4123, 0.74", "17.9836, 75.1114, -29.4064, 0.74", "17.8744, 75.608, -29.3664, 0.52", "17.816, 75.9604, -29.3219, 0.37", "17.7317, 76.6112, -29.2225, 0.37", "17.6241, 77.3995, -29.1072, 0.29", "17.421, 78.7352, -28.9846, 1.77", "17.2379, 79.7658, -28.9618, 2.28", "17.2241, 79.8344, -28.9638, 2.28", "17.0387, 80.6677, -29.0226, 2.28", "16.7724, 81.6877, -29.1381, 1.99", "16.4846, 82.6344, -29.3107, 1.55", "16.0203, 83.9783, -29.6425, 0.22", "15.8426, 84.4638, -29.7661, 0.29", "15.6646, 84.9097, -29.8732, 0.29", "15.349, 85.6075, -30.0204, 0.22", "14.9735, 86.2734, -30.1457, 0.22", "14.7383, 86.6274, -30.1931, 0.44", "14.5563, 86.878, -30.2232, 0.44", "14.1235, 87.4931, -30.3057, 0.37", "13.5724, 88.3229, -30.415, 0.29", "13.1288, 89.019, -30.4986, 0.22", "12.8058, 89.5467, -30.5431, 0.44", "12.6185, 89.8647, -30.5687, 0.44", "12.1774, 90.6385, -30.6253, 0.22", "11.687, 91.5352, -30.6417, 0.22", "11.446, 91.9995, -30.632, 0.22", "10.8097, 93.2558, -30.5655, 2.28", "10.5854, 93.6928, -30.5383, 3.02", "10.4205, 94.0164, -30.5136, 3.02", "9.49555, 95.9985, -30.267, 0.22", "9.41758, 96.2014, -30.2331, 0.29", "9.20598, 96.9521, -30.0881, 0.22", "9.07207, 97.6451, -29.9387, 0.66", "9.02162, 98.0679, -29.8466, 0.66", "8.94391, 99.3835, -29.5327, 0.22", "8.94989, 100.377, -29.2857, 0.22", "8.94834, 101.199, -29.0608, 0.29", "8.9505, 101.267, -29.0416, 0.29", "8.98842, 102.396, -28.7083, 0.29", "9.03122, 103.652, -28.3643, 0.96", "9.04503, 104.147, -28.2475, 1.33", "9.07311, 105.148, -28.0262, 0.22", "9.08905, 106.161, -27.8048, 0.22", "9.10134, 106.59, -27.7171, 0.22", "9.1305, 107.201, -27.6053, 0.81", "9.16758, 107.855, -27.5305, 1.11", "9.19983, 108.78, -27.4728, 0.22", "9.20714, 109.429, -27.4722, 0.22", "9.18568, 109.868, -27.4897, 0.44", "9.17059, 110.107, -27.5083, 0.44", "9.0729, 111.009, -27.629, 0.22", "8.99753, 111.605, -27.7565, 0.22", "8.99001, 111.663, -27.7718, 0.22", "8.87938, 112.493, -28.0598, 0.66", "8.81849, 112.908, -28.2119, 0.66", "8.70586, 113.629, -28.498, 0.22", "8.53702, 114.586, -28.8875, 1.11", "8.40844, 115.257, -29.1701, 1.25", "8.07546, 116.91, -29.9403, 0.22", "7.83753, 118.086, -30.5463, 0.22", "7.66689, 118.924, -31.0019, 1.03", "7.54428, 119.495, -31.3118, 1.55", "7.3777, 120.202, -31.6822, 1.69", "7.12587, 121.301, -32.243, 0.81", "6.91362, 122.355, -32.7212, 0.22", "6.90207, 122.429, -32.7527, 0.22", "6.81028, 123.398, -33.1349, 0.22", "6.75349, 124.433, -33.5396, 0.88", "6.74884, 125.251, -33.8536, 0.22", "6.76474, 125.938, -34.1084, 0.59", "6.82033, 127.247, -34.6079, 0.22", "6.90607, 128.615, -35.1598, 1.77", "6.97423, 129.572, -35.5826, 1.99", "7.0589, 130.915, -36.2148, 0.22", "7.06763, 131.247, -36.3716, 0.29", "7.06216, 131.926, -36.6967, 0.22", "7.02245, 132.525, -36.9719, 0.37", "6.93009, 133.083, -37.2166, 0.22", "6.91714, 133.139, -37.2382, 0.22", "6.79789, 133.519, -37.3941, 0.37", "6.68115, 133.835, -37.5221, 0.37", "6.4705, 134.374, -37.7238, 0.22", "6.15616, 135.174, -38.0013, 1.11", "6.01268, 135.577, -38.1273, 1.47", "5.69801, 136.478, -38.3706, 0.22", "5.33933, 137.536, -38.6475, 0.22", "5.10107, 138.202, -38.8492, 0.22", "5.08247, 138.256, -38.8688, 0.22", "4.86735, 138.835, -39.102, 0.22", "4.42606, 140.003, -39.6007, 1.92", "4.18373, 140.641, -39.8891, 1.77", "3.84841, 141.6, -40.3817, 1.47", "3.40993, 142.766, -41.0436, 0.22", "3.04844, 143.689, -41.6046, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "17.2974, 55.1884, -28.734, 0.15", "19.0414, 56.1024, -28.6693, 0.15", "20.0154, 56.6611, -28.6405, 0.15", "20.6598, 57.0572, -28.6252, 0.37", "21.4527, 57.5491, -28.5995, 0.44", "22.5003, 58.1573, -28.5615, 0.81", "22.8804, 58.3589, -28.5475, 1.03", "23.3392, 58.6174, -28.5281, 1.03", "23.9313, 58.953, -28.501, 0.81", "24.7734, 59.375, -28.4392, 0.22", "25.3426, 59.6398, -28.3853, 0.22", "26.2172, 60.0509, -28.3003, 0.29", "27.0611, 60.4424, -28.224, 0.29", "28.0722, 60.9279, -28.0979, 1.4", "28.6268, 61.2146, -28.0157, 1.99", "29.4212, 61.6638, -27.8857, 2.28", "31.3604, 62.8746, -27.5656, 0.29", "32.0973, 63.3571, -27.4466, 0.29", "32.8027, 63.8203, -27.3536, 0.81", "33.2685, 64.1295, -27.3326, 0.81", "33.6182, 64.3654, -27.3386, 0.81", "34.5049, 64.95, -27.5111, 0.29", "35.1238, 65.3774, -27.7451, 0.29", "35.7544, 65.8403, -28.0504, 2.14", "36.6564, 66.5214, -28.5533, 2.95", "37.0267, 66.8155, -28.7805, 2.95", "38.6853, 68.2767, -29.8704, 0.22", "39.2139, 68.8074, -30.2411, 0.22", "39.5771, 69.2226, -30.5037, 0.81", "39.7396, 69.4352, -30.6155, 1.11", "40.1415, 70.0332, -30.8551, 0.66", "40.6326, 70.8367, -31.1077, 0.22", "40.9209, 71.3484, -31.205, 0.22", "41.1861, 71.757, -31.2737, 0.37", "41.5512, 72.2553, -31.3488, 0.37", "42.2906, 73.1034, -31.4815, 0.88", "42.4522, 73.2666, -31.5054, 1.33", "42.4952, 73.308, -31.5117, 1.33", "42.8808, 73.6637, -31.5617, 1.18", "43.7791, 74.519, -31.7033, 0.29", "44.4725, 75.2446, -31.8619, 1.03", "44.8709, 75.7173, -31.9838, 1.55", "45.2536, 76.2384, -32.1453, 2.28", "45.7118, 76.9617, -32.39, 1.4", "46.2706, 78.0575, -32.78, 0.22", "46.6909, 79.146, -33.273, 0.22", "46.9122, 79.8211, -33.6457, 0.81", "47.1166, 80.5581, -34.0978, 1.55", "47.1945, 80.9135, -34.327, 1.92", "47.2792, 81.5854, -34.7714, 2.14", "47.4046, 83.2885, -35.8986, 1.11", "47.445, 84.3526, -36.566, 0.29", "47.4723, 85.2595, -37.1364, 0.22", "47.4823, 85.7564, -37.4481, 0.22", "47.5212, 86.9917, -38.2146, 1.55", "47.5429, 87.25, -38.3624, 2.43", "47.7022, 88.2428, -38.8596, 2.87", "48.1435, 90.0247, -39.7534, 0.22", "48.1623, 90.0751, -39.7801, 0.22", "48.6216, 90.9846, -40.2816, 0.22", "49.267, 91.9779, -40.939, 0.22", "49.7626, 92.6284, -41.4544, 0.22", "50.2169, 93.1366, -41.9015, 1.77", "50.5069, 93.4363, -42.1623, 2.28", "51.2192, 94.1452, -42.7777, 2.28", "52.391, 95.2835, -43.7609, 1.69", "53.3115, 96.1752, -44.511, 0.22", "54.0377, 96.8886, -45.0548, 0.22", "54.6498, 97.4856, -45.4466, 1.33", "55.1323, 97.9708, -45.7696, 1.62", "55.5763, 98.4441, -46.0801, 1.62", "55.872, 98.7779, -46.2879, 0.81", "56.6716, 99.7605, -46.9614, 0.29", "57.1255, 100.381, -47.4075, 0.22", "58.364, 102.257, -48.7638, 1.99", "58.7407, 102.881, -49.197, 2.5", "58.9394, 103.232, -49.4342, 2.65", "59.7811, 104.841, -50.4402, 0.22", "60.1849, 105.624, -50.88, 0.22", "60.5892, 106.417, -51.2822, 0.88", "60.8987, 107.022, -51.5048, 1.47", "61.2128, 107.614, -51.7013, 1.69", "61.5128, 108.16, -51.8768, 0.96", "62.1158, 109.248, -52.1855, 0.22", "62.1502, 109.307, -52.2011, 0.22", "62.3886, 109.701, -52.2929, 0.22", "62.7694, 110.319, -52.4113, 0.88", "62.9991, 110.685, -52.4617, 0.88", "63.2762, 111.128, -52.5109, 0.44", "63.7797, 111.947, -52.567, 0.22", "63.989, 112.243, -52.5856, 0.22", "64.5605, 112.988, -52.6283, 1.11", "64.7623, 113.232, -52.6398, 1.47", "64.8532, 113.34, -52.6444, 1.47", "65.1633, 113.701, -52.6577, 1.47", "66.3142, 115.091, -52.8446, 0.22", "66.7827, 115.674, -52.9591, 0.22", "67.4032, 116.492, -53.1888, 1.25", "67.6726, 116.863, -53.3166, 1.92", "68.0126, 117.377, -53.5186, 1.92", "69.0495, 119.118, -54.3113, 0.22", "69.3087, 119.621, -54.5707, 0.22", "69.6547, 120.343, -54.9423, 0.22", "69.6995, 120.444, -54.9911, 0.22", "69.9318, 120.966, -55.2959, 0.22", "69.9845, 121.083, -55.3753, 0.22", "70.3805, 122.013, -56.0326, 0.22", "70.7766, 122.938, -56.717, 1.69", "70.9763, 123.388, -57.0684, 2.21", "71.7385, 125.076, -58.4281, 1.18", "72.0961, 125.851, -59.083, 0.29", "72.2798, 126.253, -59.4266, 0.29", "72.5824, 126.937, -60.0221, 0.22", "72.8922, 127.648, -60.6014, 1.18", "73.1333, 128.232, -61.017, 1.33", "73.1815, 128.357, -61.0857, 1.33", "73.7874, 129.872, -61.8635, 0.22", "73.9822, 130.307, -62.0867, 0.88", "74.217, 130.799, -62.3266, 1.33", "74.7695, 131.9, -62.8513, 0.22", "74.9574, 132.236, -63.0404, 0.29", "75.2642, 132.757, -63.3394, 0.22", "75.9616, 133.876, -63.9953, 1.62", "76.1781, 134.199, -64.1817, 1.99", "76.7122, 134.935, -64.6067, 1.55", "77.9971, 136.62, -65.5382, 0.22", "78.5267, 137.316, -65.9113, 0.22", "78.5713, 137.374, -65.9427, 0.22", "79.1416, 138.141, -66.3351, 0.22", "79.1856, 138.201, -66.3646, 0.22", "79.884, 139.197, -66.7871, 1.03", "80.28, 139.794, -67.0025, 1.11", "81.1405, 141.116, -67.4821, 0.22", "81.5702, 141.734, -67.7089, 0.22", "81.6094, 141.788, -67.7293, 0.22", "82.4191, 142.805, -68.1198, 1.55", "82.7932, 143.208, -68.2929, 2.36", "83.1487, 143.561, -68.457, 2.21", "84.7633, 145.1, -69.1725, 0.22", "84.804, 145.139, -69.1927, 0.22", "85.6296, 145.975, -69.6628, 0.59", "86.5373, 146.962, -70.2548, 0.22", "86.8873, 147.406, -70.5113, 0.44", "87.0627, 147.687, -70.6725, 0.59", "87.5411, 148.719, -71.2353, 0.22", "87.8585, 149.473, -71.6245, 1.18", "88.0695, 150.042, -71.8971, 1.55", "88.3007, 150.68, -72.1817, 1.62", "89.0504, 152.469, -72.9838, 0.22", "89.086, 152.534, -73.013, 0.22", "89.4546, 153.049, -73.2211, 0.22", "89.7252, 153.363, -73.3392, 0.44", "89.8726, 153.507, -73.3902, 0.44", "90.0786, 153.678, -73.4408, 0.44", "91.1178, 154.43, -73.5979, 0.22", "91.8098, 154.969, -73.7228, 1.03", "92.1652, 155.255, -73.7977, 1.55", "92.3673, 155.423, -73.8411, 1.92", "92.842, 155.827, -73.9436, 1.92", "93.4809, 156.391, -74.0797, 1.33", "94.8265, 157.613, -74.3651, 0.22", "95.8959, 158.576, -74.6215, 0.22", "96.612, 159.228, -74.7962, 0.74", "96.7196, 159.329, -74.8213, 0.74", "97.015, 159.617, -74.8849, 0.74", "97.0642, 159.665, -74.8941, 0.74", "98.1087, 160.738, -75.0739, 0.29", "99.0374, 161.777, -75.2147, 0.22", "99.8159, 162.689, -75.3232, 1.25", "100.146, 163.092, -75.3632, 1.92", "100.447, 163.48, -75.3888, 2.36", "100.724, 163.852, -75.3997, 2.43", "101.972, 165.617, -75.3774, 0.22", "102.43, 166.26, -75.3627, 0.88", "102.633, 166.542, -75.3535, 0.88", "103.287, 167.435, -75.316, 0.22", "103.665, 167.934, -75.2887, 0.88", "103.711, 167.986, -75.2842, 0.88", "103.986, 168.242, -75.2486, 1.25", "104.112, 168.346, -75.2341, 1.25", "104.195, 168.413, -75.227, 1.25", "104.251, 168.456, -75.2235, 1.25", "105.531, 169.283, -75.2439, 0.22", "106.186, 169.637, -75.2318, 0.22", "106.249, 169.669, -75.23, 0.22", "106.823, 169.926, -75.2082, 0.59", "107.19, 170.083, -75.1944, 0.59", "108.633, 170.652, -75.1406, 0.22", "109.964, 171.077, -75.0928, 1.25", "110.032, 171.092, -75.09, 1.25", "110.56, 171.21, -75.0629, 1.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "14.7851, 29.4725, -21.8804, 0.29", "16.2315, 30.6885, -21.2208, 0.29", "16.8319, 31.1374, -20.9892, 0.37", "17.755, 31.6985, -20.6385, 0.22", "18.3191, 32.0046, -20.422, 0.44", "18.3817, 32.0327, -20.408, 0.44", "19.7099, 32.554, -20.2489, 1.69", "19.7779, 32.5696, -20.2536, 1.69", "20.8699, 32.766, -20.4611, 1.92", "20.9371, 32.7754, -20.4783, 1.92", "22.96, 33.1257, -21.1017, 0.29", "23.4153, 33.2167, -21.2643, 0.74", "23.4871, 33.233, -21.2955, 0.74", "24.631, 33.5639, -21.841, 0.22", "24.6898, 33.5869, -21.8714, 0.22", "25.172, 33.8161, -22.0845, 0.59", "25.2302, 33.8494, -22.1046, 0.59", "25.4088, 33.9588, -22.1719, 0.59", "26.3124, 34.5471, -22.5148, 0.22", "26.8485, 34.9125, -22.7224, 0.88", "27.7488, 35.5255, -23.0697, 0.22", "27.8433, 35.5901, -23.1058, 0.22", "28.4008, 35.9756, -23.3076, 0.66", "28.7719, 36.2354, -23.4329, 0.66", "29.7983, 36.9181, -23.7002, 0.22", "30.0604, 37.076, -23.7565, 0.44", "30.2903, 37.2055, -23.7923, 0.44", "30.6408, 37.3925, -23.8318, 0.44", "30.729, 37.4369, -23.8396, 0.44", "31.7162, 37.9082, -23.9079, 0.37", "32.7066, 38.3505, -23.9357, 1.99", "33.1916, 38.5562, -23.9504, 2.73", "33.8386, 38.8199, -23.9717, 2.73" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.7851, 29.4725, -21.8804, 0.22", "14.9684, 31.628, -21.927, 0.22", "15.1231, 32.7718, -22.0071, 1.33", "15.2281, 33.4208, -22.0652, 1.62", "15.4797, 34.557, -22.2647, 1.99", "15.9588, 36.4561, -22.7226, 0.22", "16.2564, 37.4694, -23.0004, 0.22", "16.6497, 38.4883, -23.3899, 0.96", "16.8547, 38.9428, -23.5743, 1.47", "17.8058, 40.769, -24.3641, 0.22", "18.3615, 41.7065, -24.7985, 1.84", "18.8598, 42.4486, -25.1408, 1.99", "19.8216, 43.8081, -25.7469, 0.29", "20.3308, 44.4909, -26.0068, 0.52", "20.7864, 45.0968, -26.1845, 0.29", "20.8252, 45.1547, -26.1906, 0.29", "21.3639, 46.0685, -26.217, 0.29", "21.4044, 46.1589, -26.2161, 0.29", "21.6973, 47.0391, -26.1535, 0.22", "21.8644, 47.6379, -26.1098, 0.22", "22.2587, 49.2136, -25.9987, 2.36", "22.4626, 49.9284, -25.9453, 2.73", "22.731, 50.7636, -25.876, 2.58", "23.1148, 51.7768, -25.7842, 1.25", "23.6588, 52.9988, -25.6607, 0.22", "23.7849, 53.232, -25.6356, 0.22", "24.3698, 54.0739, -25.5366, 0.22", "24.8481, 54.6695, -25.4594, 0.66", "25.136, 54.9869, -25.4187, 0.96", "25.1835, 55.038, -25.4122, 0.96", "25.5847, 55.5186, -25.3413, 0.66", "26.2044, 56.3603, -25.2198, 0.22", "26.257, 56.4441, -25.2166, 0.22", "26.6976, 57.1023, -25.259, 0.22", "27.183, 57.801, -25.3518, 1.25", "27.51, 58.2423, -25.4343, 1.62", "27.8189, 58.6518, -25.5378, 1.84", "28.6248, 59.7177, -25.867, 0.81", "29.3433, 60.7464, -26.195, 0.22", "29.4561, 60.9218, -26.2541, 0.22", "29.8454, 61.6149, -26.4834, 0.22", "30.17, 62.3918, -26.6991, 0.15", "30.2483, 62.6654, -26.7546, 0.15", "30.3732, 63.4031, -26.8672, 0.15", "30.3985, 63.6881, -26.9144, 0.15", "30.4457, 64.334, -27.0418, 0.15", "30.5253, 65.6727, -27.3346, 1.55", "30.5627, 66.2494, -27.4652, 1.92", "30.701, 67.8712, -27.8588, 0.22", "30.709, 67.9384, -27.8766, 0.22", "30.8183, 68.7937, -28.1196, 0.22", "30.9078, 69.4208, -28.3177, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "11.5883, 57.7092, -8.33618, 0.29", "10.0201, 59.6042, -8.54998, 0.29", "9.16692, 60.662, -8.62845, 0.29", "8.4151, 61.6526, -8.6754, 0.29", "7.83465, 62.5147, -8.69547, 0.52", "7.20378, 63.525, -8.70855, 0.22", "6.77213, 64.296, -8.71223, 0.22", "6.74526, 64.3602, -8.70447, 0.22", "6.57341, 64.9937, -8.63608, 0.22", "6.48479, 65.9673, -8.62921, 0.22", "6.4856, 66.0371, -8.63514, 0.22", "6.5389, 66.8403, -8.75566, 1.77", "6.5755, 67.3229, -8.84355, 2.06", "6.64955, 68.372, -9.05536, 1.18", "6.74295, 69.7951, -9.36862, 0.22", "6.77759, 70.5807, -9.56523, 0.22", "6.79107, 71.3023, -9.75083, 0.22", "6.78642, 72.4796, -10.0695, 1.55", "6.76999, 72.9909, -10.2081, 1.84", "6.76439, 73.0484, -10.2241, 1.84", "6.56825, 74.1896, -10.5106, 0.37", "6.39981, 74.8561, -10.6949, 0.22", "6.37185, 74.928, -10.7163, 0.22", "6.16756, 75.3331, -10.8335, 0.52", "5.89493, 75.8707, -10.9855, 0.59", "5.62608, 76.4198, -11.1491, 0.59", "5.60101, 76.472, -11.165, 0.59", "5.29038, 77.2114, -11.4046, 0.22", "5.14075, 77.6075, -11.5241, 0.22", "4.99221, 78.0493, -11.6589, 0.22", "4.86209, 78.5514, -11.7956, 0.22", "4.7466, 79.1884, -11.9794, 0.88", "4.67855, 79.6836, -12.1389, 1.03", "4.61827, 80.29, -12.3734, 0.66", "4.53451, 81.341, -12.7951, 0.22", "4.47601, 82.2016, -13.142, 0.22", "4.42642, 83.3551, -13.5968, 1.47", "4.41421, 84.1067, -13.8881, 1.84", "4.40491, 85.7141, -14.4969, 0.22", "4.38842, 86.6266, -14.8406, 0.22", "4.37979, 86.7677, -14.8908, 0.22", "4.2902, 87.3825, -15.0943, 0.22", "4.02493, 88.5765, -15.4533, 1.55", "3.90604, 89.0003, -15.5702, 1.92", "3.38882, 90.5504, -15.9919, 0.29", "3.13923, 91.2128, -16.1913, 0.29", "2.85303, 91.9921, -16.4766, 0.29", "2.52247, 92.9187, -16.867, 0.81", "2.5016, 92.9792, -16.8952, 0.81", "2.35697, 93.4216, -17.1094, 1.11", "2.34028, 93.4714, -17.1384, 1.11", "2.01114, 94.4894, -18.1845, 0.29", "1.82289, 95.0255, -18.8791, 0.29", "1.78569, 95.1217, -19.0143, 0.29", "1.61294, 95.56, -19.6063, 0.29", "1.20824, 96.5605, -20.9027, 0.96", "0.561885, 98.5285, -23.3081, 0.22", "0.424835, 99.0032, -23.872, 0.22", "0.358776, 99.2945, -24.2045, 0.22", "0.187758, 100.354, -25.2902, 1.99", "0.112852, 101.201, -26.0243, 2.95", "-0.00989142, 103.04, -27.266, 0.37", "-0.0140856, 103.092, -27.2935, 0.37", "-0.074489, 103.673, -27.6031, 0.59", "-0.176685, 104.301, -27.959, 0.74", "-0.345818, 104.988, -28.3596, 0.88", "-0.831004, 106.285, -29.0982, 0.22", "-0.861767, 106.339, -29.1298, 0.22", "-1.23629, 106.953, -29.533, 0.22", "-1.54615, 107.408, -29.8559, 0.66", "-1.74246, 107.686, -30.0513, 0.66", "-1.7766, 107.736, -30.0857, 0.66", "-2.27503, 108.568, -30.572, 0.22", "-2.84172, 109.589, -31.1216, 1.18", "-3.06892, 110.05, -31.3613, 1.33", "-3.41798, 110.805, -31.7449, 0.81", "-3.78226, 111.648, -32.1798, 0.44", "-3.97454, 112.115, -32.4133, 0.59", "-4.13995, 112.531, -32.6148, 0.59", "-4.58898, 113.73, -33.2698, 0.22", "-5.05055, 114.962, -33.9675, 1.69", "-5.34399, 115.792, -34.4552, 2.73", "-5.61926, 116.592, -34.9322, 2.73", "-5.63865, 116.649, -34.9672, 2.73", "-6.41469, 118.798, -36.3004, 0.52", "-6.82057, 119.878, -36.9276, 0.96", "-7.29252, 121.128, -37.602, 0.22", "-7.50383, 121.706, -37.8842, 0.52", "-7.58888, 121.96, -37.9951, 0.52", "-7.92956, 123.061, -38.3811, 0.29", "-8.13973, 123.924, -38.5337, 0.22", "-8.27935, 124.646, -38.6197, 0.81", "-8.33383, 125.001, -38.6526, 0.81", "-8.3526, 125.148, -38.6698, 0.81", "-8.37469, 125.432, -38.7261, 0.81", "-8.36398, 126.441, -39.1248, 0.29", "-8.32234, 127.428, -39.6306, 0.29", "-8.23991, 128.54, -40.2528, 1.92", "-8.18843, 129.077, -40.5667, 2.36", "-8.04694, 130.256, -41.2791, 2.06", "-7.68045, 132.523, -42.8095, 0.29", "-7.58352, 132.999, -43.1582, 0.74", "-7.48533, 133.437, -43.5021, 0.96", "-7.4513, 133.609, -43.6354, 0.96", "-7.42811, 133.773, -43.7567, 0.96", "-7.4289, 135.047, -44.6279, 0.37", "-7.53382, 135.732, -45.0334, 0.22", "-7.62877, 136.174, -45.2904, 0.22", "-7.85212, 137.234, -45.8416, 1.62", "-7.96348, 137.922, -46.1623, 1.92", "-8.13068, 139.195, -46.685, 0.59", "-8.2067, 140.159, -47.0059, 0.22", "-8.1824, 140.738, -47.1947, 0.74", "-8.04804, 141.777, -47.5077, 0.29", "-7.90264, 142.611, -47.7123, 0.81", "-7.88983, 142.678, -47.7248, 0.81", "-7.79793, 143.182, -47.8324, 0.81", "-7.64966, 144.077, -48.0758, 0.22", "-7.54939, 144.992, -48.3465, 0.22", "-7.47615, 146.499, -48.7855, 1.4", "-7.46858, 147.219, -48.9796, 1.99", "-7.47421, 149.019, -49.4397, 0.29", "-7.48194, 149.454, -49.5433, 0.29", "-7.49631, 150.324, -49.7395, 0.22", "-7.47207, 151.079, -49.9118, 0.81", "-7.462, 151.361, -49.9764, 1.03", "-7.46124, 151.574, -50.036, 1.03", "-7.4746, 152.02, -50.1669, 0.74", "-7.50559, 153.034, -50.5154, 0.22", "-7.47083, 153.853, -50.7927, 1.11", "-7.43647, 154.23, -50.9141, 1.47", "-7.23523, 155.775, -51.344, 0.29", "-7.13162, 156.424, -51.503, 0.29", "-6.93563, 157.363, -51.6822, 0.22", "-6.53556, 158.932, -51.8761, 1.62", "-6.36596, 159.516, -51.9077, 1.77", "-6.1314, 160.296, -51.9036, 1.25", "-6.10967, 160.372, -51.8959, 1.25", "-5.80308, 161.701, -51.734, 0.29", "-5.69983, 162.488, -51.6439, 0.29", "-5.66789, 163.445, -51.5477, 0.81", "-5.6785, 164.266, -51.4712, 0.88", "-5.73038, 165.178, -51.4332, 0.29", "-5.79568, 165.9, -51.4361, 0.29", "-5.97991, 167.201, -51.505, 1.62", "-6.05475, 167.702, -51.5551, 2.06", "-6.13172, 168.215, -51.6324, 2.06", "-6.26323, 169.493, -51.8672, 0.44", "-6.28806, 169.99, -51.976, 0.29", "-6.26561, 170.654, -52.1012, 0.29", "-6.16842, 171.443, -52.1908, 0.22", "-6.14831, 171.555, -52.1952, 0.22", "-6.0057, 172.213, -52.1573, 0.22", "-5.99266, 172.29, -52.1436, 0.22", "-5.89599, 173.258, -51.9729, 0.22", "-5.857, 174.152, -51.8177, 0.52", "-5.88608, 174.676, -51.7385, 0.59", "-5.94412, 175.137, -51.6806, 0.59", "-6.1271, 176.236, -51.5775, 0.29", "-6.20395, 176.902, -51.5435, 0.88", "-6.21175, 176.98, -51.5427, 0.88", "-6.22229, 177.633, -51.5421, 1.11", "-6.20988, 177.924, -51.5429, 1.33", "-6.14061, 178.693, -51.5475, 1.03", "-5.96662, 180.027, -51.5596, 0.29", "-5.95645, 180.096, -51.5604, 0.29", "-5.76335, 181.249, -51.5721, 0.29", "-5.74895, 181.318, -51.5734, 0.29", "-5.4646, 182.536, -51.6048, 0.29", "-5.26377, 183.271, -51.6278, 0.81", "-5.0328, 183.952, -51.6513, 1.03", "-5.00162, 184.027, -51.6555, 1.03", "-4.54299, 184.941, -51.7362, 1.69", "-4.33878, 185.318, -51.7759, 1.69", "-3.87966, 186.075, -51.9157, 1.92", "-3.47412, 186.721, -52.0746, 1.25", "-2.83309, 187.708, -52.4211, 0.96", "-2.5649, 188.113, -52.8168, 0.74", "-2.54394, 188.146, -52.8614, 0.74", "-2.1175, 188.889, -53.936, 0.22", "-2.08887, 188.941, -54.0159, 0.22", "-1.65665, 189.855, -55.3664, 2.06", "-0.29908, 192.993, -59.8912, 0.22", "-0.106158, 193.482, -60.5464, 1.25", "0.00690338, 193.82, -60.9727, 1.62", "0.250304, 194.715, -62.0866, 0.22", "0.488943, 195.672, -63.2012, 1.47", "0.54827, 195.939, -63.4912, 2.06", "0.717694, 196.781, -64.2665, 2.8", "0.872651, 197.639, -65.0642, 2.95", "1.3771, 201.305, -68.481, 0.59", "1.47638, 202.395, -69.4849, 0.22", "1.48068, 202.447, -69.5315, 0.22", "1.52852, 203.301, -70.2556, 0.37", "1.54082, 204.12, -70.8533, 0.37", "1.53582, 204.87, -71.2709, 0.22", "1.52531, 205.413, -71.4891, 0.22", "1.57908, 206.23, -71.8809, 0.22", "1.75627, 207.128, -72.3497, 0.22", "2.15442, 208.421, -73.0875, 1.92", "2.27644, 208.749, -73.2792, 2.06", "2.86995, 210.372, -74.1991, 0.37", "3.02695, 210.911, -74.4945, 0.88", "3.03945, 211.471, -74.7662, 0.88", "2.88467, 212.197, -75.05, 0.29", "2.72668, 212.855, -75.3807, 0.44", "2.54495, 213.59, -75.7611, 0.22", "2.39798, 214.188, -76.0713, 0.22", "2.15841, 215.471, -76.7885, 1.92", "2.10258, 216.1, -77.1602, 2.14", "2.16109, 218.374, -78.4985, 0.22", "2.23687, 219.074, -78.9081, 0.22", "2.35675, 219.757, -79.3019, 0.96", "2.43132, 220.085, -79.49, 1.11", "2.78984, 221.301, -80.1029, 0.22", "3.02985, 221.956, -80.3729, 0.52", "3.05331, 222.01, -80.3836, 0.52", "3.1439, 222.215, -80.4292, 0.52", "3.17239, 222.277, -80.445, 0.52", "3.70525, 223.445, -80.7723, 0.22", "4.11785, 224.34, -81.0322, 0.52", "4.38397, 224.915, -81.2134, 0.52", "5.10057, 226.495, -81.7804, 1.11", "5.74123, 227.921, -82.3473, 0.15", "5.87735, 228.234, -82.4844, 0.88", "5.90188, 228.294, -82.5127, 0.88", "6.03132, 228.607, -82.6658, 0.88", "6.6682, 229.965, -83.2941, 0.22", "7.15606, 230.93, -83.6791, 0.22", "7.18017, 230.98, -83.6986, 0.22", "7.56721, 231.863, -84.0162, 1.03", "7.72592, 232.238, -84.1467, 1.33", "8.22256, 233.458, -84.5494, 0.22", "8.48224, 234.143, -84.7335, 0.22", "8.50157, 234.197, -84.7472, 0.22", "8.88369, 235.335, -85.0198, 1.4" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.5883, 57.7092, -8.33618, 0.29", "11.7279, 59.7741, -7.44143, 0.29", "11.8056, 61.112, -6.83175, 0.29", "11.8197, 61.2312, -6.78193, 0.29", "11.977, 62.2914, -6.35883, 0.29", "11.9958, 62.3899, -6.32371, 0.29", "12.1559, 63.1347, -6.07943, 0.29", "12.4042, 64.2409, -5.80742, 0.29", "12.7191, 65.6542, -5.49543, 0.29", "12.7377, 65.7565, -5.47346, 0.29", "12.851, 66.554, -5.31215, 0.29", "12.8625, 66.7001, -5.28025, 0.29", "12.8421, 67.695, -5.05834, 0.29", "12.6936, 68.8793, -4.81115, 1.18", "12.4945, 69.8916, -4.59636, 2.14", "12.4189, 70.2455, -4.52463, 2.43", "12.2959, 70.8201, -4.4054, 2.43", "12.0789, 71.9902, -4.18715, 0.59", "11.9865, 72.5856, -4.09987, 0.29", "11.8805, 73.2033, -4.05338, 0.29", "11.8597, 73.3307, -4.03805, 0.29", "11.7044, 74.4088, -3.83475, 0.29", "11.6956, 74.476, -3.81723, 0.29", "11.6154, 75.2179, -3.56018, 0.29", "11.5294, 76.0924, -3.2454, 0.29", "11.4091, 77.3706, -2.80055, 0.15", "11.3961, 77.5019, -2.75382, 0.15", "11.3031, 78.3272, -2.48545, 0.15", "11.1506, 79.5866, -2.10218, 0.81", "10.979, 80.6251, -1.81044, 1.4", "10.8406, 81.3218, -1.64221, 1.99", "10.6427, 82.1011, -1.4956, 2.21", "10.2607, 83.4467, -1.25115, 0.29", "10.0341, 84.1521, -1.13865, 0.22", "9.6849, 85.0853, -1.02459, 0.22", "9.51476, 85.4969, -0.98447, 0.22", "9.45269, 85.6333, -0.97711, 0.22", "9.13983, 86.2963, -0.96088, 0.22", "8.67026, 87.2553, -0.92639, 1.11", "8.51168, 87.5916, -0.913, 1.18", "8.30579, 88.0761, -0.88832, 0.88", "7.93625, 88.9943, -0.84256, 0.52", "7.60612, 89.8904, -0.798382, 0.29", "7.33748, 90.7111, -0.778691, 0.29", "7.30411, 90.8471, -0.778883, 0.29", "7.19538, 91.5709, -0.82495, 0.22", "7.11905, 92.4643, -0.92409, 0.96", "7.0979, 92.8988, -0.98994, 0.96", "7.04703, 93.6697, -1.15878, 0.44", "6.94201, 94.5163, -1.37482, 0.29", "6.68958, 95.7856, -1.7178, 1.84", "6.57037, 96.2168, -1.84399, 2.14", "6.39398, 96.7894, -2.01932, 1.92", "5.93498, 98.307, -2.48119, 0.29", "5.65185, 99.2415, -2.75828, 0.29", "5.46558, 99.9055, -2.97075, 0.29", "5.31285, 100.643, -3.21965, 0.22", "5.23216, 101.531, -3.53298, 1.03", "5.27401, 102.206, -3.79373, 1.03", "5.28511, 102.271, -3.81835, 1.03", "5.44623, 103.096, -4.17509, 1.18", "5.63787, 104.217, -4.68152, 1.92", "5.71324, 104.977, -5.02631, 2.21", "5.69652, 106.434, -5.66597, 0.29", "5.59291, 107.315, -6.03694, 0.29", "5.27758, 108.831, -6.62515, 1.18", "5.08326, 109.46, -6.84394, 1.33", "4.62209, 110.555, -7.23432, 0.29", "4.10456, 111.576, -7.60691, 0.29", "3.48268, 112.69, -7.99782, 1.03", "3.15188, 113.309, -8.22155, 1.25", "2.89865, 113.813, -8.39772, 1.4", "2.15711, 115.438, -9.00552, 0.22", "2.1286, 115.508, -9.03215, 0.22", "1.8448, 116.382, -9.34541, 0.22", "1.50219, 117.719, -9.72867, 2.36", "1.48786, 117.796, -9.74656, 2.36", "1.40683, 118.43, -9.85017, 2.8", "1.35334, 119.09, -9.86487, 2.65", "1.1967, 120.932, -9.80103, 0.29", "1.11637, 121.815, -9.71786, 0.22", "1.05864, 122.398, -9.64615, 0.22", "0.990775, 123.04, -9.56896, 0.22", "0.762632, 124.783, -9.36648, 1.84", "0.688746, 125.204, -9.31883, 2.43", "0.590903, 125.628, -9.27331, 2.58", "0.0614171, 127.514, -9.09516, 0.22", "0.0291151, 127.613, -9.08588, 0.22", "-0.299781, 128.609, -9.00436, 0.22", "-0.703185, 129.859, -8.9266, 1.77", "-0.808562, 130.21, -8.90152, 2.21", "-1.33447, 132.105, -8.74845, 0.29", "-1.48133, 132.764, -8.70152, 0.29", "-1.62667, 133.635, -8.65973, 0.29", "-1.72666, 134.652, -8.63962, 1.18", "-1.76454, 135.312, -8.63901, 1.47", "-1.78983, 136.042, -8.64866, 1.11", "-1.78141, 137.174, -8.69661, 0.22", "-1.78242, 137.378, -8.6944, 0.22", "-1.80861, 138.329, -8.63483, 0.74", "-1.83985, 138.816, -8.57543, 0.52", "-1.91397, 139.773, -8.32314, 0.29", "-1.92033, 139.84, -8.30241, 0.29", "-2.1018, 141.43, -7.75352, 1.99", "-2.13533, 141.721, -7.65504, 2.73", "-2.25269, 142.839, -7.25503, 2.43", "-2.46007, 145.102, -6.45825, 0.29", "-2.54424, 146.202, -6.07769, 0.22", "-2.54991, 146.268, -6.05685, 0.22", "-2.61561, 146.937, -5.87742, 0.22", "-2.71872, 147.811, -5.67991, 0.88", "-2.78851, 148.395, -5.59225, 1.18", "-2.93279, 149.564, -5.5401, 0.29", "-2.98802, 150.124, -5.52082, 0.22", "-3.02569, 150.588, -5.52639, 0.37", "-3.07204, 151.249, -5.56887, 0.37", "-3.14652, 152.214, -5.68987, 0.29", "-3.15252, 152.283, -5.69421, 0.29", "-3.19514, 152.825, -5.61735, 0.29", "-3.24271, 153.54, -5.37531, 0.59", "-3.2519, 153.635, -5.32742, 0.59", "-3.30021, 154.088, -5.05774, 0.59", "-3.42338, 155.152, -4.38783, 0.22", "-3.61165, 156.965, -3.26627, 2.5", "-3.70889, 158.027, -2.62858, 1.99", "-3.85883, 159.906, -1.5413, 0.22", "-3.92977, 161.049, -0.92691, 1.62", "-3.96196, 161.648, -0.637267, 2.28", "-4.05678, 163.109, -0.0502847, 0.22", "-4.12511, 163.904, 0.186361, 0.74", "-4.14402, 164.163, 0.238813, 0.74", "-4.18676, 165.096, 0.345563, 0.22", "-4.2135, 165.818, 0.405434, 0.66", "-4.21003, 166.443, 0.481604, 0.66", "-4.1774, 167.273, 0.605699, 0.29", "-4.15523, 168.111, 0.746478, 0.37", "-4.1642, 168.576, 0.822492, 0.22", "-4.22375, 169.23, 0.918862, 0.22", "-4.40244, 170.745, 1.12006, 1.92", "-4.47264, 171.247, 1.17783, 2.65", "-4.75003, 172.799, 1.32311, 0.29", "-4.92982, 173.659, 1.36032, 0.29", "-5.16591, 174.723, 1.35818, 0.29", "-5.32902, 175.409, 1.31906, 0.29", "-5.46724, 175.975, 1.26665, 1.03", "-5.64929, 176.775, 1.20398, 1.4", "-5.85912, 177.874, 1.15739, 0.29", "-5.87268, 177.954, 1.15741, 0.29", "-6.04703, 178.792, 1.20744, 0.29", "-6.35174, 179.766, 1.31929, 0.66", "-6.60202, 180.393, 1.41537, 1.11", "-6.89512, 181.019, 1.53722, 1.25", "-7.20826, 181.665, 1.72966, 0.81", "-7.51847, 182.348, 1.95158, 0.29", "-7.78655, 182.98, 2.17367, 0.29", "-8.0741, 183.699, 2.43921, 0.29", "-8.09605, 183.76, 2.46488, 0.29", "-8.47783, 184.876, 2.96022, 0.22", "-8.70241, 185.585, 3.31213, 0.22", "-8.7156, 185.637, 3.33964, 0.22", "-8.93639, 186.723, 3.97469, 1.03", "-9.0615, 187.363, 4.36892, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "6.21943, -50.428, 6.74036, 0.29", "6.96737, -52.6163, 7.61845, 0.29", "7.33491, -53.8682, 8.1527, 0.29", "7.52979, -54.7739, 8.60293, 0.66", "7.74888, -56.0645, 9.28147, 0.44", "7.8384, -56.814, 9.68181, 0.81", "7.86723, -57.2035, 9.88439, 1.18", "7.87657, -58.4509, 10.5162, 1.03", "7.72345, -59.7013, 11.1855, 0.44", "7.67023, -59.966, 11.3356, 1.03", "7.57796, -60.3993, 11.621, 0.59", "7.43438, -61.05, 12.1052, 0.37" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "6.21943, -50.428, 6.74036, 0.96", "7.29501, -54.6782, 2.66699, 0.96", "7.40257, -55.1148, 2.285, 1.25", "7.65126, -56.1801, 1.43998, 1.25", "8.02539, -57.9313, 0.195459, 0.44", "8.28707, -59.2918, -0.647169, 0.44", "8.36255, -59.7131, -0.87794, 1.55", "8.45977, -60.3817, -1.04412, 1.77", "8.54987, -61.1694, -1.20991, 1.47", "8.60131, -62.1099, -1.3517, 0.81", "8.62696, -63.4098, -1.52666, 0.52", "8.66588, -64.1467, -1.6314, 0.88", "8.74083, -64.649, -1.73477, 1.25", "8.96463, -65.4933, -1.97933, 1.03", "9.57284, -66.6872, -2.44583, 0.37", "10.5084, -68.0046, -3.05057, 0.66", "10.9553, -68.5181, -3.31444, 1.25", "11.8076, -69.4277, -3.78954, 1.84", "12.4277, -70.0607, -4.11199, 1.99", "13.8682, -71.4414, -4.78351, 0.29", "14.4346, -71.9825, -5.00474, 0.29", "14.5034, -72.0611, -5.02419, 0.29", "14.9237, -72.705, -5.18479, 0.29", "15.2033, -73.3087, -5.35744, 1.18", "15.2235, -73.3626, -5.37441, 1.18", "15.3648, -73.7737, -5.53015, 1.62", "15.5587, -74.2676, -5.75151, 1.62", "16.2041, -75.8076, -6.53485, 0.37", "16.7113, -77.0068, -7.17436, 1.99", "16.9553, -77.6088, -7.50199, 2.65", "17.2925, -78.5223, -7.99349, 2.65", "17.6354, -79.5417, -8.53953, 2.06", "18.0991, -81.0682, -9.34397, 0.52", "18.3593, -81.9782, -9.77636, 0.29", "18.3979, -82.1245, -9.84327, 0.29", "18.5472, -82.6941, -10.1358, 0.29", "18.5612, -82.7533, -10.1703, 0.29", "18.76, -83.5041, -10.639, 0.29", "18.971, -84.1813, -11.1143, 1.69", "19.3029, -85.1029, -11.8021, 2.06", "19.7177, -86.2762, -12.6913, 1.92", "20.1406, -87.6853, -13.7615, 0.44", "20.3027, -88.3928, -14.2719, 0.37", "20.4587, -89.6059, -15.1609, 0.52", "20.4923, -89.9896, -15.4278, 0.52", "20.5437, -90.7987, -15.9404, 0.22", "20.6031, -91.8996, -16.5561, 2.14", "20.6419, -92.6874, -16.9463, 2.87", "20.7461, -95.2588, -18.1886, 0.81", "20.8165, -96.6224, -18.8207, 0.29", "20.8216, -96.685, -18.8515, 0.29", "20.9223, -97.6101, -19.3313, 0.29", "21.052, -98.6384, -19.8785, 0.29", "21.1732, -99.5604, -20.3779, 1.77", "21.2894, -100.322, -20.779, 2.5", "21.5728, -102.015, -21.7592, 0.52", "21.7577, -102.895, -22.2762, 0.22", "21.9105, -103.439, -22.6026, 0.22", "22.1128, -103.922, -22.8758, 0.22", "22.49, -104.646, -23.1896, 0.96", "22.8056, -105.155, -23.3575, 1.25", "23.118, -105.609, -23.4537, 1.25", "23.5607, -106.231, -23.5722, 0.66", "24.166, -107.095, -23.7391, 0.29", "24.7324, -107.927, -23.9221, 0.29", "24.7717, -107.983, -23.9335, 0.29", "25.4178, -108.911, -24.1075, 0.29", "26.144, -109.915, -24.36, 2.06", "26.5636, -110.49, -24.5244, 3.02", "27.2804, -111.431, -24.958, 3.17", "28.4146, -112.91, -25.9152, 0.29", "29.0686, -113.777, -26.585, 0.29", "29.9602, -115.04, -27.7223, 1.4", "30.1113, -115.279, -27.9555, 1.4", "31.2479, -117.484, -30.2939, 0.29", "31.7416, -118.552, -31.4944, 0.29", "31.7579, -118.59, -31.5388, 0.29", "32.2158, -119.576, -32.7027, 2.36", "32.5954, -120.381, -33.5593, 2.8", "33.7127, -122.622, -35.7443, 0.52", "34.1938, -123.589, -36.5076, 0.44", "34.3626, -123.927, -36.7499, 0.81", "34.7628, -124.771, -37.3153, 0.22", "35.0278, -125.343, -37.6682, 0.22", "35.0482, -125.394, -37.6947, 0.22", "35.2615, -125.94, -37.9796, 0.22", "35.5724, -126.956, -38.628, 2.14", "35.7902, -127.646, -39.1222, 2.65", "35.9615, -128.158, -39.5577, 2.65", "35.9768, -128.201, -39.5968, 2.65", "36.7719, -130.27, -41.497, 0.29", "36.8043, -130.352, -41.5785, 0.29", "37.0256, -130.945, -42.1557, 0.29", "37.4025, -132.059, -43.165, 1.47", "37.5507, -132.551, -43.5832, 1.84", "37.7045, -133.064, -43.9965, 2.14", "38.4066, -135.37, -45.6674, 0.52", "38.6882, -136.109, -46.1946, 0.29", "38.9635, -136.719, -46.6194, 0.37", "38.9927, -136.773, -46.6536, 0.37", "39.3997, -137.419, -47.0745, 1.18", "39.7429, -138.001, -47.4044, 0.74", "40.2742, -138.966, -47.7964, 0.29", "40.8476, -140.09, -48.2529, 1.62", "41.0517, -140.533, -48.4207, 2.28", "41.4384, -141.477, -48.7326, 1.92", "41.9782, -142.943, -49.1818, 0.22", "42.2994, -143.846, -49.4748, 0.22", "42.6023, -144.693, -49.78, 0.96", "42.8331, -145.271, -50.0364, 1.18", "43.0703, -145.818, -50.3817, 1.47", "43.529, -146.902, -51.1894, 0.59", "43.8862, -147.792, -51.9435, 1.77", "44.1495, -148.546, -52.6201, 2.43", "44.4092, -149.397, -53.3796, 2.43", "44.9617, -151.512, -55.3021, 0.52", "45.2404, -152.798, -56.4605, 0.29", "45.3938, -153.697, -57.2605, 1.55", "45.4021, -153.757, -57.3127, 1.55", "45.4852, -154.447, -57.8961, 1.84", "45.6868, -156.355, -59.5204, 0.52", "45.8071, -157.243, -60.2754, 0.96", "46.0821, -158.708, -61.5657, 0.52", "46.3141, -159.673, -62.4209, 1.18", "46.3456, -159.786, -62.523, 1.18", "46.9453, -161.645, -64.2901, 0.29", "47.3005, -162.529, -65.1407, 0.22", "47.5353, -163.042, -65.6471, 1.55", "48.0244, -164.092, -66.7808, 1.55", "48.0412, -164.128, -66.8256, 1.55", "48.5866, -165.315, -68.3857, 1.99", "48.866, -165.9, -69.195, 2.21", "48.8988, -165.966, -69.2898, 2.21", "49.5918, -167.259, -71.169, 2.58", "50.6995, -169.23, -73.9268, 0.22", "50.9241, -169.613, -74.4251, 0.22", "51.289, -170.227, -75.157, 1.11", "51.4226, -170.467, -75.405, 1.11", "52.1187, -171.781, -76.555, 0.37", "52.6564, -172.865, -77.3161, 2.06", "52.8501, -173.374, -77.6029, 2.5", "53.4964, -175.495, -78.7072, 0.22", "53.8626, -177.16, -79.4636, 0.22", "53.9665, -177.913, -79.761, 1.55", "53.9929, -178.382, -79.9074, 1.55", "53.9584, -180.065, -80.2811, 0.22", "53.954, -180.126, -80.29, 0.22", "53.821, -181.259, -80.3423, 0.22", "53.6905, -182.188, -80.3656, 1.11", "53.622, -182.703, -80.367, 1.4", "53.4685, -184.247, -80.3507, 0.22", "53.42, -185.147, -80.2957, 0.88", "53.3971, -185.956, -80.219, 0.88", "53.4011, -187.098, -80.0707, 0.22", "53.4058, -187.393, -80.0188, 0.22", "53.4131, -188.475, -79.8118, 0.22", "53.3452, -190.087, -79.4367, 0.22", "53.34, -190.154, -79.4188, 0.22", "53.2036, -191.359, -79.0963, 0.22", "53.0379, -192.645, -78.768, 2.21", "52.9306, -193.361, -78.5991, 2.36", "52.5811, -195.369, -78.1639, 0.15", "52.3121, -196.781, -77.9031, 0.15", "52.0432, -198.156, -77.6852, 0.15", "51.8326, -199.219, -77.5532, 0.52", "51.7221, -199.801, -77.5079, 0.74", "51.6951, -199.938, -77.5004, 0.74", "51.6359, -200.232, -77.4958, 0.74", "51.2749, -201.783, -77.46, 0.29", "51.0062, -202.852, -77.4286, 0.22", "50.7875, -203.561, -77.3917, 0.81", "50.3031, -204.932, -77.2961, 0.22", "50.2784, -204.997, -77.2904, 0.22", "50.0746, -205.471, -77.2748, 0.22", "50.0431, -205.533, -77.2761, 0.22", "49.5339, -206.456, -77.3347, 1.84", "49.1573, -207.109, -77.3965, 2.28", "48.7908, -207.727, -77.4808, 2.28", "47.7907, -209.421, -77.7345, 0.22", "47.1071, -210.578, -77.9245, 0.22", "46.8171, -211.087, -78.0135, 0.96", "46.415, -211.805, -78.152, 0.96", "45.7108, -213.014, -78.3822, 0.22", "45.3704, -213.576, -78.4806, 0.66", "45.337, -213.637, -78.4899, 0.66", "45.1268, -214.091, -78.5851, 0.66", "44.649, -215.348, -78.8882, 0.22", "44.4381, -216.143, -79.1235, 1.11", "44.3775, -216.518, -79.2453, 1.11", "44.3012, -217.785, -79.6915, 0.22", "44.3417, -218.624, -79.9957, 0.88", "44.4339, -219.229, -80.2232, 1.11", "44.7816, -220.447, -80.6921, 0.22", "44.9618, -220.94, -80.8738, 0.59", "45.4862, -222.068, -81.2722, 0.22", "45.8431, -222.68, -81.4474, 0.22", "45.8818, -222.736, -81.4602, 0.22", "46.2868, -223.271, -81.5585, 1.03", "46.7448, -223.856, -81.6152, 1.55", "47.9639, -225.499, -81.7698, 0.22", "48.5556, -226.335, -81.8441, 1.4", "48.8439, -226.773, -81.8888, 1.84", "48.9617, -226.958, -81.9059, 1.84", "49.8752, -228.417, -82.0242, 0.22", "50.5868, -229.561, -82.1196, 0.22", "50.6627, -229.686, -82.1297, 0.22", "51.3122, -230.762, -82.2488, 0.22", "51.7297, -231.423, -82.3223, 1.03", "52.016, -231.861, -82.3826, 1.03", "52.8455, -233.072, -82.5348, 0.22", "53.3196, -233.747, -82.5943, 1.03", "53.6647, -234.227, -82.6402, 1.03", "53.7064, -234.283, -82.6462, 1.03", "54.9947, -235.992, -82.8704, 0.15", "55.7025, -236.924, -82.9963, 1.25", "56.1755, -237.548, -83.0799, 1.69", "57.2056, -238.971, -83.2842, 0.22", "57.7284, -239.751, -83.3944, 0.22", "58.2203, -240.555, -83.5057, 1.18", "58.475, -241.012, -83.5677, 1.77", "58.6617, -241.406, -83.6317, 1.84", "59.1822, -242.762, -83.8185, 0.22", "59.4438, -243.626, -83.898, 0.22", "59.6611, -244.415, -83.9451, 0.52", "59.68, -244.481, -83.9466, 0.52", "59.7953, -244.876, -83.9496, 0.52", "60.2308, -246.163, -83.9204, 0.22", "60.4706, -246.729, -83.8644, 1.18", "60.6189, -247.018, -83.8288, 1.4", "60.6508, -247.079, -83.82, 1.4" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-0.918616, -53.0204, 3.20947, 0.96", "-0.794531, -53.2705, 2.3912, 0.96", "-0.504853, -54.1423, 0.0757609, 1.4", "-0.270586, -55.2133, -2.29995, 1.69", "-0.0532905, -57.0545, -6.00044, 0.88", "-0.0179718, -57.7771, -7.33095, 0.96", "-0.0164542, -58.4462, -8.43314, 0.96", "-0.0773425, -58.9735, -9.14813, 1.18", "-0.203068, -59.7194, -9.92857, 1.84", "-0.427729, -61.2635, -11.2491, 2.14", "-0.469324, -61.8177, -11.7146, 2.36", "-0.357551, -62.6628, -12.7118, 0.74", "-0.0547175, -63.3872, -13.9276, 0.44", "0.181273, -63.7673, -14.8894, 0.66", "0.433879, -64.1928, -16.2038, 1.03", "0.663387, -64.5955, -17.6089, 1.84", "0.808564, -65.1113, -19.3412, 1.84", "0.81171, -65.1265, -19.3991, 1.84", "0.798846, -66.2536, -23.5627, 0.52", "0.649939, -66.7241, -25.0722, 0.52", "0.638785, -66.745, -25.1272, 0.52", "0.147213, -67.6098, -26.8164, 0.52" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-0.918616, -53.0204, 3.20947, 0.52", "-0.829253, -54.4101, 2.82065, 0.52", "-0.867836, -55.2745, 2.57742, 0.52", "-1.02843, -56.1158, 2.35382, 1.03", "-1.34529, -56.9689, 2.10519, 0.37", "-1.77173, -57.8549, 1.84962, 0.88", "-2.09224, -58.4338, 1.68809, 1.11", "-2.38816, -58.848, 1.5625, 1.33", "-3.02157, -59.5915, 1.33838, 0.88", "-4.05146, -60.6806, 1.02065, 0.59", "-4.79412, -61.4146, 0.831118, 0.59", "-5.42227, -62.0211, 0.71707, 1.18", "-6.21498, -62.7865, 0.660827, 1.47", "-6.62171, -63.1721, 0.680577, 1.69", "-6.6811, -63.2248, 0.690281, 1.69", "-7.4167, -63.7999, 0.900955, 1.33", "-8.49307, -64.5184, 1.25304, 0.29", "-9.62915, -65.1913, 1.63617, 0.29", "-10.3307, -65.5857, 1.86212, 1.47", "-11.0935, -66.0109, 2.07156, 1.69", "-11.9039, -66.4493, 2.25083, 2.21", "-12.6313, -66.8197, 2.36145, 2.06", "-13.5498, -67.254, 2.41, 0.96", "-14.8277, -67.8375, 2.52877, 0.22", "-15.7218, -68.2669, 2.67164, 0.22", "-16.2751, -68.5484, 2.79288, 1.11", "-16.8755, -68.8524, 2.94683, 1.77", "-17.5898, -69.1982, 3.16482, 1.77", "-20.0578, -70.3348, 3.98753, 0.29", "-20.5137, -70.5395, 4.14258, 0.74", "-20.9336, -70.7485, 4.29088, 0.96", "-21.755, -71.2032, 4.58127, 0.96", "-22.7547, -71.827, 4.90171, 0.88", "-23.6558, -72.4475, 5.07718, 0.52", "-24.4362, -73.0587, 4.97821, 0.52", "-25.5029, -73.9687, 4.6772, 1.4", "-25.7644, -74.2049, 4.58594, 1.84", "-26.5531, -74.9766, 4.22433, 1.03", "-27.5747, -76.0434, 3.59483, 0.52", "-29.3398, -77.9361, 2.21871, 2.28", "-29.9289, -78.5725, 1.64558, 3.24" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-51.6536, 16.6144, -80.5531, 0.29", "-53.3627, 16.7662, -82.4647, 0.29", "-54.4621, 16.9112, -83.6975, 0.29", "-55.5833, 17.0706, -84.9109, 0.52", "-56.5455, 17.2099, -85.9232, 0.22", "-57.1567, 17.3132, -86.54, 1.33", "-57.6425, 17.3951, -87.0165, 1.92", "-58.2892, 17.5319, -87.6293, 2.06", "-59.9445, 17.8203, -89.1617, 0.29", "-60.1025, 17.8318, -89.3143, 0.52", "-60.8665, 17.8243, -90.1804, 0.29", "-62.0046, 17.744, -91.539, 0.22", "-63.4032, 17.5774, -93.3106, 1.62", "-63.6964, 17.5296, -93.7026, 2.28", "-64.5087, 17.388, -94.8778, 1.77", "-66.5121, 17.029, -97.9066, 0.22", "-67.0989, 16.9266, -98.8458, 0.22", "-67.6048, 16.8697, -99.7503, 1.03", "-68.4144, 16.8804, -101.309, 0.59", "-68.979, 16.9839, -102.498, 1.47", "-69.0034, 16.9935, -102.552, 1.47", "-69.2556, 17.1373, -103.122, 1.69", "-70.3958, 17.933, -105.928, 0.37", "-70.7147, 18.1859, -106.708, 0.52", "-71.1973, 18.5949, -107.823, 0.74", "-71.6187, 18.9296, -108.729, 0.29", "-72.225, 19.3498, -109.846, 1.47", "-72.2601, 19.3709, -109.903, 1.47", "-72.6533, 19.5886, -110.448, 1.99", "-73.8789, 20.2524, -112.257, 0.22", "-73.9098, 20.2682, -112.306, 0.22", "-74.4117, 20.5207, -113.171, 0.52", "-75.2569, 20.8859, -114.698, 0.44", "-75.6731, 21.0408, -115.443, 1.33", "-76.8915, 21.3766, -117.579, 0.52", "-77.9321, 21.5764, -119.306, 0.29", "-77.9643, 21.5813, -119.356, 0.29", "-78.7154, 21.6917, -120.456, 1.84", "-79.0271, 21.7292, -120.858, 2.21", "-81.1445, 21.9331, -123.234, 0.22", "-81.9694, 21.9799, -123.984, 1.11", "-82.3141, 22.006, -124.257, 1.4", "-83.3605, 22.0461, -124.967, 0.22", "-83.4128, 22.0451, -124.996, 0.22", "-84.3534, 21.9503, -125.431, 0.22", "-85.2835, 21.7859, -125.738, 1.62", "-86.0228, 21.6266, -125.99, 1.77", "-87.6871, 21.2241, -126.546, 0.22", "-89.1389, 20.8326, -127.013, 0.22", "-90.0709, 20.5792, -127.312, 1.4", "-90.5484, 20.4476, -127.471, 1.77", "-92.8767, 19.8296, -128.237, 0.22", "-93.9103, 19.56, -128.655, 0.22", "-94.002, 19.5361, -128.703, 0.22", "-94.5707, 19.3831, -129.052, 0.22", "-95.2152, 19.1823, -129.514, 1.11", "-95.4955, 19.0809, -129.733, 1.11", "-97.3935, 18.2962, -131.375, 0.22", "-98.0306, 18.0395, -131.954, 0.96", "-98.2195, 17.9659, -132.118, 1.18", "-99.6659, 17.4155, -133.323, 0.22", "-100.065, 17.264, -133.632, 0.22", "-100.682, 17.0284, -134.151, 1.18", "-102.184, 16.4675, -135.403, 0.22", "-102.813, 16.247, -135.952, 0.22", "-103.584, 15.9731, -136.709, 1.92", "-103.905, 15.8526, -137.074, 2.14", "-106.354, 14.9183, -140.259, 0.29", "-107.205, 14.553, -141.505, 0.22", "-107.714, 14.3317, -142.346, 1.11", "-109.013, 13.8013, -144.738, 0.74", "-109.786, 13.4696, -146.383, 1.69", "-111.086, 12.8345, -149.515, 1.18", "-111.973, 12.3327, -151.832, 0.66", "-112.667, 11.8518, -153.873, 0.88", "-113.847, 10.8612, -157.699, 1.69", "-114.991, 9.6296, -161.95, 1.55", "-115.772, 8.55947, -165.264, 0.29", "-116.052, 7.98782, -166.785, 1.33", "-116.311, 7.2292, -168.539, 0.22", "-116.381, 6.86545, -169.223, 0.59", "-116.482, 5.82837, -170.874, 0.22", "-116.491, 5.75911, -170.984, 0.22", "-116.623, 5.22023, -171.91, 0.22", "-117.01, 4.47491, -173.492, 2.06", "-118.179, 3.11576, -176.809, 1.11", "-118.699, 2.68064, -178.06, 0.81", "-119.812, 1.94376, -180.421, 0.44", "-120.232, 1.69623, -181.251, 1.03", "-122.005, 0.76204, -184.511, 0.22", "-122.424, 0.55975, -185.237, 0.88", "-124.353, -0.172119, -188.274, 0.22", "-124.678, -0.282909, -188.761, 0.96", "-125.832, -0.650556, -190.449, 1.47", "-126.16, -0.758682, -190.933, 1.55", "-126.407, -0.838337, -191.288, 1.55", "-129.116, -1.72278, -195.229, 0.22", "-129.66, -1.94943, -196.169, 0.52", "-130.77, -2.50913, -198.335, 0.52", "-131.273, -2.80011, -199.513, 0.52", "-131.317, -2.82748, -199.621, 0.52", "-131.883, -3.28621, -201.23, 1.03", "-132.884, -4.76576, -205.46, 0.59", "-133.077, -5.15234, -206.573, 0.88", "-133.517, -6.39992, -210.218, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-51.6536, 16.6144, -80.5531, 0.22", "-53.3356, 18.508, -82.2563, 0.22", "-53.8324, 19.0133, -82.7312, 0.81", "-54.0621, 19.226, -82.9284, 1.11", "-54.723, 19.7955, -83.4189, 0.37", "-55.5317, 20.448, -83.9441, 0.22", "-55.5882, 20.4926, -83.9789, 0.22", "-56.2147, 20.9577, -84.3146, 0.22", "-57.1187, 21.5894, -84.7471, 0.22", "-57.9119, 22.0904, -85.0822, 1.33", "-58.4398, 22.3893, -85.2512, 2.14", "-59.4694, 22.9506, -85.5123, 2.5" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-23.9291, 18.599, -39.9357, 0.22", "-25.847, 18.551, -40.3726, 0.22", "-26.5208, 18.5023, -40.5391, 0.22", "-27.3921, 18.426, -40.7456, 0.22", "-28.3665, 18.334, -40.9609, 1.55", "-28.9949, 18.2417, -41.0879, 2.28", "-29.4418, 18.1599, -41.1702, 2.43", "-31.4698, 17.774, -41.4735, 0.22", "-32.1787, 17.5744, -41.5737, 1.18", "-32.8567, 17.311, -41.6673, 1.25", "-34.1746, 16.7009, -41.8375, 0.22", "-34.9418, 16.3128, -41.9211, 0.88", "-35.3116, 16.1102, -41.9778, 1.11", "-36.6545, 15.3244, -42.2194, 0.22", "-37.517, 14.8077, -42.406, 1.69", "-37.6518, 14.7254, -42.4384, 2.06", "-38.23, 14.3773, -42.5875, 2.21", "-40.2789, 13.1388, -43.1274, 0.22", "-41.1371, 12.6195, -43.3395, 0.22", "-41.2046, 12.5794, -43.3551, 0.22", "-42.2111, 11.9793, -43.5581, 0.22", "-42.5741, 11.7588, -43.6278, 0.52", "-42.9917, 11.5051, -43.6855, 0.52", "-43.9638, 10.9027, -43.7404, 0.15", "-44.7606, 10.4178, -43.7821, 1.62", "-45.1592, 10.1844, -43.8005, 1.99", "-45.6402, 9.9213, -43.82, 1.92", "-46.9951, 9.1644, -43.8625, 0.22", "-47.6239, 8.78217, -43.8755, 0.22", "-47.9056, 8.5983, -43.8696, 0.74", "-48.2564, 8.36531, -43.844, 0.96", "-48.6327, 8.12161, -43.8049, 0.74", "-49.43, 7.60283, -43.6986, 0.15", "-49.9771, 7.23397, -43.6269, 0.15", "-50.481, 6.89146, -43.5688, 0.15", "-51.4157, 6.29975, -43.4775, 0.15", "-51.932, 5.99152, -43.4299, 1.25", "-52.441, 5.71163, -43.3858, 1.55", "-53.1424, 5.37091, -43.3325, 1.18", "-54.0504, 4.93869, -43.2428, 0.22", "-54.9042, 4.50374, -43.1513, 0.22", "-54.9571, 4.47622, -43.1448, 0.22", "-55.9556, 3.97194, -43.0123, 1.69", "-56.3939, 3.75689, -42.9522, 2.06", "-58.1964, 2.88549, -42.7208, 0.22", "-58.7652, 2.60533, -42.6486, 0.52", "-59.8969, 2.01347, -42.5237, 0.22", "-59.95, 1.98585, -42.519, 0.22", "-60.2899, 1.80892, -42.5125, 0.22", "-60.9432, 1.50397, -42.5485, 1.03", "-60.9992, 1.48414, -42.5569, 1.03", "-61.3779, 1.37319, -42.6234, 1.55", "-61.7441, 1.2879, -42.6672, 1.77", "-63.1304, 1.01571, -42.7797, 0.22", "-64.0682, 0.85582, -42.8281, 0.22", "-65.1716, 0.67407, -42.8571, 1.18", "-66.0563, 0.52181, -42.8877, 1.47", "-67.728, 0.23185, -42.9569, 0.22", "-68.2348, 0.14328, -42.9761, 0.52", "-68.5659, 0.0896899, -42.976, 0.52", "-69.868, -0.155526, -42.9551, 0.22", "-71.0495, -0.400496, -42.9037, 0.96", "-71.633, -0.522572, -42.8684, 1.18", "-71.6916, -0.53503, -42.8653, 1.18", "-73.1837, -0.869106, -42.7586, 0.15", "-73.8023, -1.01574, -42.7032, 0.15", "-74.4961, -1.1886, -42.622, 0.96", "-75.0703, -1.3195, -42.5437, 1.33", "-75.7916, -1.45231, -42.4651, 1.03", "-76.8106, -1.60146, -42.3923, 0.22", "-77.4651, -1.66318, -42.3843, 0.22", "-77.545, -1.66562, -42.3847, 0.22", "-78.5412, -1.66315, -42.3894, 0.22", "-79.3595, -1.64691, -42.383, 0.44", "-79.5095, -1.64569, -42.3821, 0.44", "-80.693, -1.6501, -42.3715, 0.22", "-81.3573, -1.67441, -42.3792, 1.11", "-82.1482, -1.73496, -42.4036, 1.69", "-82.675, -1.79898, -42.4351, 1.92", "-84.1189, -1.98139, -42.5574, 0.22", "-85.066, -2.10641, -42.6745, 0.22", "-85.8475, -2.23843, -42.7995, 0.22", "-85.9723, -2.26603, -42.8233, 0.22", "-86.9648, -2.53846, -43.0765, 1.4", "-87.6574, -2.76603, -43.2819, 2.21", "-88.5919, -3.13843, -43.5946, 0.96", "-89.4476, -3.52457, -43.9137, 0.15", "-89.9445, -3.75223, -44.1078, 0.15", "-90.6146, -4.07528, -44.3695, 0.15", "-90.9308, -4.2377, -44.4937, 0.81", "-91.3019, -4.44045, -44.6339, 1.25", "-91.9714, -4.81935, -44.8272, 1.33", "-93.4444, -5.6582, -45.1731, 0.22", "-94.1569, -6.08774, -45.2912, 1.62", "-94.5654, -6.35837, -45.3345, 1.99", "-95.2395, -6.8171, -45.4043, 1.92", "-96.5147, -7.71062, -45.5444, 0.29", "-96.5704, -7.75267, -45.55, 0.29", "-97.4607, -8.47623, -45.6436, 0.29", "-98.0767, -9.00339, -45.7332, 0.29", "-98.9187, -9.76784, -45.8876, 0.29", "-99.4469, -10.2619, -46.0052, 0.29", "-99.91, -10.7185, -46.1376, 0.66", "-100.271, -11.0966, -46.2365, 0.52", "-100.857, -11.7674, -46.4061, 0.22", "-101.213, -12.2002, -46.5013, 0.81", "-101.607, -12.6943, -46.5921, 0.96", "-102.522, -13.7759, -46.7834, 0.22", "-103.051, -14.3613, -46.9061, 0.22", "-103.351, -14.662, -46.9779, 1.18", "-103.772, -15.039, -47.0825, 1.4", "-104.202, -15.395, -47.1879, 1.4", "-104.611, -15.7052, -47.2903, 1.03", "-105.639, -16.4174, -47.5268, 0.22", "-106.164, -16.7456, -47.6456, 0.22", "-106.571, -16.9912, -47.7498, 0.29", "-107.11, -17.3203, -47.9323, 0.29", "-107.761, -17.742, -48.1889, 0.37", "-108.285, -18.0998, -48.4148, 0.37", "-108.345, -18.145, -48.4419, 0.37", "-109.044, -18.7652, -48.8056, 0.29", "-109.728, -19.4534, -49.2396, 1.77", "-110.032, -19.7918, -49.4275, 2.36", "-110.068, -19.8347, -49.4485, 2.36", "-110.353, -20.1768, -49.5957, 2.65", "-110.803, -20.7161, -49.7974, 2.58", "-112.01, -22.0794, -50.2866, 0.29", "-112.802, -22.843, -50.6447, 0.22", "-112.852, -22.885, -50.6695, 0.22", "-113.376, -23.2618, -50.9173, 0.22", "-113.917, -23.586, -51.1703, 0.88", "-114.601, -23.9159, -51.4632, 0.59", "-115.809, -24.3718, -51.9638, 0.22", "-115.87, -24.3914, -51.9925, 0.22", "-116.981, -24.7105, -52.4871, 0.22", "-117.406, -24.8249, -52.6649, 1.11", "-117.977, -24.9834, -52.877, 1.25", "-118.492, -25.1484, -53.0422, 0.88", "-119.906, -25.6427, -53.4522, 0.22", "-120.775, -25.9671, -53.6976, 0.44", "-121.775, -26.3592, -53.9784, 0.22", "-122.238, -26.5829, -54.0794, 0.74", "-123.17, -27.1435, -54.2313, 0.22", "-123.958, -27.7196, -54.2969, 1.55", "-124.448, -28.1636, -54.2797, 1.92", "-124.505, -28.2199, -54.2761, 1.92", "-125.713, -29.4305, -54.1453, 0.22", "-126.163, -29.8234, -54.0981, 0.66", "-126.755, -30.1913, -54.0486, 0.44", "-126.828, -30.2233, -54.0458, 0.44", "-127.641, -30.4808, -54.0568, 0.22", "-127.962, -30.5707, -54.0745, 0.59", "-128.832, -30.7693, -54.1542, 0.66", "-130.022, -31.0517, -54.2422, 0.22", "-130.718, -31.2585, -54.2946, 1.11", "-131.162, -31.4265, -54.3358, 1.4", "-132.554, -32.09, -54.4828, 0.22", "-132.964, -32.3213, -54.5402, 0.74", "-133.685, -32.81, -54.6665, 0.74", "-134.877, -33.6774, -54.9087, 0.15", "-135.6, -34.2206, -55.0712, 1.33", "-136.297, -34.753, -55.2418, 1.4", "-137.139, -35.448, -55.4813, 0.22", "-137.745, -35.9731, -55.6626, 0.22", "-138.227, -36.4112, -55.8187, 0.22", "-138.324, -36.4936, -55.8485, 0.22", "-139.24, -37.1853, -56.1378, 0.66", "-139.99, -37.7044, -56.4229, 0.22", "-140.542, -38.0649, -56.6491, 0.22", "-140.995, -38.343, -56.8499, 0.66", "-141.537, -38.6721, -57.0876, 0.74", "-142.723, -39.3665, -57.598, 0.22", "-143.646, -39.8897, -58.0019, 1.4", "-144.167, -40.1644, -58.2224, 1.77", "-145.613, -40.9084, -58.8672, 0.15", "-146.593, -41.4441, -59.3426, 0.15", "-147.312, -41.8486, -59.7282, 1.33", "-147.407, -41.9, -59.7804, 1.33", "-147.888, -42.156, -60.0522, 1.69", "-149.341, -42.9539, -60.9634, 0.22", "-150.094, -43.3794, -61.5102, 0.22", "-151.143, -43.9985, -62.3102, 0.22", "-151.844, -44.4427, -62.8346, 1.77", "-151.894, -44.4764, -62.8708, 1.77", "-152.453, -44.862, -63.287, 1.55", "-154.212, -46.0763, -64.547, 0.22", "-154.985, -46.6198, -65.0907, 0.22", "-155.53, -47.0453, -65.5337, 1.18", "-155.778, -47.2421, -65.7457, 1.25", "-157.417, -48.5166, -67.1657, 0.22", "-158.474, -49.3141, -68.1016, 1.47", "-158.761, -49.5298, -68.3654, 1.47", "-160.433, -50.777, -69.9469, 0.22", "-160.909, -51.1353, -70.3938, 0.22", "-160.954, -51.1718, -70.4327, 0.22", "-161.737, -51.874, -70.978, 1.33", "-162.016, -52.1285, -71.1199, 1.4", "-162.936, -52.9733, -71.4467, 0.22", "-163.152, -53.1775, -71.4886, 0.37", "-164.183, -54.1921, -71.6637, 0.22", "-165.15, -55.1391, -71.7895, 1.11", "-166.188, -56.1555, -71.891, 0.22", "-166.495, -56.4425, -71.9248, 1.11", "-166.845, -56.7467, -71.966, 1.11", "-167.907, -57.6297, -72.1068, 0.22", "-169.004, -58.5005, -72.2714, 0.22", "-169.601, -58.9377, -72.3695, 0.88", "-170.511, -59.5336, -72.5323, 0.22", "-170.638, -59.6113, -72.5527, 0.37", "-171.164, -59.9246, -72.5669, 0.15", "-171.355, -60.0328, -72.5448, 0.29", "-172.513, -60.6776, -72.2977, 0.22", "-173.052, -60.9802, -72.1513, 0.22", "-174.062, -61.5654, -71.8291, 1.25", "-175.82, -62.6135, -71.2204, 0.22", "-176.522, -63.0486, -70.9463, 1.33", "-177.683, -63.7894, -70.439, 0.22", "-178.091, -64.0592, -70.2215, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-23.9291, 18.599, -39.9357, 0.22", "-24.7461, 20.1112, -39.9553, 0.22", "-25.4315, 21.3626, -39.952, 0.22", "-25.9844, 22.3651, -39.945, 1.47", "-26.2961, 22.9437, -39.9286, 1.77", "-26.9747, 24.2591, -39.8735, 0.66", "-27.3772, 25.0691, -39.8337, 1.55", "-27.6089, 25.5505, -39.8061, 1.92", "-27.6336, 25.6051, -39.8024, 1.92", "-28.3555, 27.285, -39.6985, 0.15", "-28.636, 27.9644, -39.6652, 0.66", "-28.7455, 28.2436, -39.6554, 0.66", "-29.2445, 29.5352, -39.63, 0.22", "-29.6593, 30.57, -39.6179, 0.22", "-29.6858, 30.6348, -39.6174, 0.22", "-30.2193, 31.8986, -39.6789, 0.22", "-30.6983, 33.0512, -39.7693, 1.62", "-30.8706, 33.481, -39.8109, 2.06", "-31.0599, 33.9697, -39.8659, 1.92", "-31.3125, 34.6847, -39.965, 1.25", "-31.705, 35.952, -40.1553, 0.22", "-31.912, 36.7242, -40.2853, 0.22", "-32.1163, 37.6327, -40.4493, 0.59", "-32.1908, 38.0376, -40.5169, 0.59", "-32.3525, 39.1343, -40.6797, 0.22", "-32.4702, 40.0704, -40.7909, 0.22", "-32.4796, 40.1497, -40.7962, 0.22", "-32.5451, 40.6913, -40.8392, 0.22", "-32.675, 41.8595, -40.9382, 1.33", "-32.7164, 42.2199, -40.9922, 1.4", "-32.7919, 42.8338, -41.1278, 0.66", "-32.8727, 43.455, -41.2954, 0.22", "-33.0397, 44.6066, -41.636, 1.69", "-33.1101, 45.0168, -41.7787, 2.21", "-33.363, 46.4194, -42.3195, 0.81", "-33.552, 47.4486, -42.7159, 0.22", "-33.6728, 48.0928, -42.9588, 0.44", "-33.7364, 48.4251, -43.0759, 0.52", "-33.9645, 49.5319, -43.4081, 0.22", "-34.1254, 50.3074, -43.5918, 0.22", "-34.3071, 51.1607, -43.7267, 1.25", "-34.4182, 51.6761, -43.7952, 1.55", "-34.5232, 52.2517, -43.871, 1.33", "-34.749, 53.6528, -44.0408, 0.22", "-34.8974, 54.4377, -44.1229, 0.22", "-35.1835, 55.7683, -44.2841, 1.62", "-35.2694, 56.155, -44.3336, 1.77", "-35.7067, 58.1093, -44.5866, 0.22", "-35.8682, 58.8311, -44.6777, 0.22", "-36.1158, 59.9817, -44.8321, 0.22", "-36.397, 61.3765, -45.0305, 0.22", "-36.5616, 62.3034, -45.1807, 0.81", "-36.6381, 62.8089, -45.2757, 1.11", "-36.7277, 63.518, -45.4241, 0.88", "-36.8409, 64.6086, -45.7318, 0.29", "-36.8723, 65.0253, -45.8695, 0.29", "-36.9863, 66.3026, -46.3483, 1.92", "-37.0684, 67.1038, -46.6893, 2.43", "-37.1218, 67.7013, -46.9589, 2.36", "-37.2462, 69.6323, -47.8666, 0.22", "-37.2883, 70.375, -48.2125, 0.22", "-37.2954, 70.4837, -48.2627, 0.22", "-37.3482, 71.2301, -48.5982, 0.74", "-37.4102, 71.8539, -48.8648, 0.74", "-37.5119, 72.6757, -49.1792, 0.22", "-37.6067, 73.3202, -49.3504, 0.37", "-37.6938, 73.729, -49.4533, 0.37", "-37.7089, 73.7955, -49.4693, 0.37", "-37.8191, 74.2334, -49.5999, 0.37", "-37.9201, 74.596, -49.733, 0.22", "-38.0185, 75.0962, -49.9398, 0.22", "-38.0355, 75.2152, -49.9893, 0.22", "-38.1811, 76.2251, -50.384, 1.77", "-38.3161, 77.0709, -50.6931, 2.14", "-38.3872, 77.4637, -50.8296, 1.92", "-38.7709, 79.2874, -51.4282, 0.29", "-38.9253, 79.8736, -51.5984, 0.29", "-39.1858, 80.6636, -51.7842, 0.22", "-39.357, 81.1186, -51.8594, 0.59", "-39.4661, 81.4201, -51.8899, 0.74", "-39.492, 81.4955, -51.8956, 0.74", "-39.7271, 82.1908, -51.9111, 0.37", "-39.9977, 83.2145, -51.9484, 0.22", "-40.162, 84.0521, -51.9859, 0.22", "-40.2652, 84.7077, -52.0645, 0.29", "-40.2754, 84.7759, -52.0765, 0.29", "-40.3987, 85.4428, -52.2315, 0.29", "-40.551, 86.2155, -52.4353, 1.25", "-40.7239, 86.9925, -52.6472, 1.62", "-40.9864, 87.9848, -52.9118, 1.84", "-41.1816, 88.7196, -53.107, 1.55", "-41.4826, 89.9164, -53.4196, 0.15", "-41.7383, 91.0527, -53.6734, 0.15", "-41.8587, 91.6289, -53.7741, 1.11", "-41.9282, 91.9796, -53.8158, 1.55", "-42.0641, 92.6761, -53.8475, 1.47", "-42.0752, 92.7351, -53.8494, 1.47", "-42.3077, 93.8449, -53.906, 0.52", "-42.4737, 94.4603, -53.9744, 0.22", "-42.5921, 94.849, -54.0305, 0.22", "-42.7337, 95.2948, -54.1202, 0.59", "-42.8885, 95.7374, -54.2361, 0.59", "-43.2968, 96.7297, -54.5725, 0.22", "-43.8033, 97.7864, -55.0062, 1.18", "-43.973, 98.1144, -55.148, 1.55", "-44.5026, 99.1395, -55.5877, 0.44", "-44.8931, 99.8905, -55.8975, 0.22", "-45.3003, 100.682, -56.1883, 0.22", "-45.5462, 101.182, -56.3302, 0.22", "-45.7239, 101.555, -56.4122, 0.44", "-46.0723, 102.353, -56.5608, 0.44", "-46.4262, 103.246, -56.6813, 0.22", "-46.725, 104.156, -56.7783, 0.22", "-47.0567, 105.295, -56.8842, 1.33", "-47.231, 105.889, -56.9417, 1.4", "-47.3924, 106.432, -56.9941, 0.96", "-47.4091, 106.489, -57.0004, 0.96", "-47.5753, 107.141, -57.0725, 0.22", "-47.8501, 108.279, -57.2074, 0.22", "-47.8647, 108.357, -57.2156, 0.22", "-47.9477, 108.934, -57.2592, 0.22", "-48.0767, 109.926, -57.3122, 0.74", "-48.1282, 110.363, -57.3361, 0.96", "-48.1763, 110.836, -57.3653, 0.59", "-48.2984, 112.22, -57.4536, 0.22", "-48.4309, 113.605, -57.5666, 0.22", "-48.4497, 113.754, -57.5854, 0.22", "-48.5572, 114.412, -57.6973, 0.22", "-48.7242, 115.283, -57.8782, 1.62", "-48.8196, 115.773, -58.0013, 2.06", "-48.9949, 116.569, -58.251, 1.92", "-49.3996, 118.377, -58.9151, 0.22", "-49.5545, 119.117, -59.2364, 0.29", "-49.6454, 119.578, -59.4737, 0.29", "-49.7541, 120.097, -59.7985, 0.22", "-49.9309, 120.868, -60.3871, 1.18", "-50.0979, 121.484, -60.9497, 1.11", "-50.4253, 122.482, -61.9887, 0.29", "-50.7693, 123.337, -62.9471, 0.29", "-51.3225, 124.541, -64.3266, 1.55", "-51.6973, 125.271, -65.1734, 1.99", "-52.3617, 126.479, -66.5583, 0.22", "-52.6231, 126.922, -67.0409, 0.37", "-53.0845, 127.676, -67.7957, 0.37", "-53.4104, 128.234, -68.2892, 0.22", "-53.8871, 129.124, -68.9231, 0.22", "-54.1874, 129.766, -69.2878, 1.11", "-54.4413, 130.376, -69.5747, 1.25", "-54.6204, 130.84, -69.7731, 0.74", "-54.9868, 131.788, -70.1291, 0.22", "-55.2629, 132.415, -70.3577, 0.22", "-55.6339, 133.167, -70.5876, 1.33", "-55.8852, 133.659, -70.7264, 1.62", "-56.0263, 133.926, -70.795, 1.77", "-56.0556, 133.977, -70.8063, 1.77", "-56.6197, 134.954, -71.0131, 0.29", "-57.0454, 135.682, -71.1728, 0.29", "-57.3982, 136.271, -71.2975, 0.66", "-57.6581, 136.721, -71.3942, 0.88", "-58.3851, 138.001, -71.659, 0.22", "-58.7621, 138.65, -71.7833, 1.25", "-58.9471, 138.969, -71.8372, 1.25", "-59.2527, 139.501, -71.9222, 1.11", "-59.8148, 140.477, -72.0924, 0.22", "-60.1267, 141.023, -72.2026, 0.44", "-60.3768, 141.475, -72.3017, 0.44", "-60.7018, 142.066, -72.4777, 0.22", "-61.1042, 142.74, -72.7455, 0.22", "-61.6529, 143.577, -73.1743, 0.96", "-61.9907, 144.042, -73.4779, 1.25", "-62.0216, 144.083, -73.5089, 1.25", "-62.5435, 144.866, -74.2197, 0.52", "-62.9056, 145.456, -74.7998, 0.22", "-62.9492, 145.536, -74.8792, 0.22", "-63.1497, 145.958, -75.2658, 1.18", "-63.2882, 146.281, -75.531, 1.33", "-63.8227, 147.842, -76.651, 0.22", "-63.9577, 148.367, -76.9731, 0.29", "-63.9686, 148.428, -77.0061, 0.29", "-64.0419, 148.954, -77.2636, 0.37", "-64.1336, 149.844, -77.6407, 0.22", "-64.2179, 150.755, -77.9865, 1.25", "-64.2398, 151.031, -78.0725, 1.55", "-64.2769, 151.728, -78.2886, 1.03", "-64.3355, 152.995, -78.6924, 0.22", "-64.3662, 153.695, -78.9106, 0.22", "-64.396, 154.271, -79.0802, 0.74", "-64.4084, 154.415, -79.1223, 0.74", "-64.4573, 154.902, -79.2593, 0.74", "-64.5435, 156.079, -79.5989, 0.22", "-64.5767, 156.743, -79.7729, 0.22", "-64.5782, 156.801, -79.7878, 0.22", "-64.5873, 158.04, -80.0832, 0.74", "-64.5797, 158.926, -80.279, 1.33", "-64.5461, 160.139, -80.5644, 0.22", "-64.4949, 161.135, -80.7928, 1.11", "-64.4823, 161.35, -80.8433, 1.4", "-64.4672, 161.632, -80.9087, 1.62", "-64.4322, 162.411, -81.0838, 1.03", "-64.404, 163.257, -81.2858, 0.44", "-64.401, 163.9, -81.4308, 0.29", "-64.3866, 164.689, -81.6172, 0.52", "-64.3839, 164.971, -81.6847, 0.88", "-64.4166, 165.613, -81.833, 0.52", "-64.4732, 166.365, -81.9895, 0.22", "-64.5355, 166.939, -82.107, 0.52", "-64.592, 167.359, -82.2072, 0.52", "-64.6915, 168.01, -82.3688, 0.29", "-64.8477, 168.924, -82.6094, 0.29", "-64.9907, 169.557, -82.7844, 0.22", "-65.2505, 170.48, -83.0309, 1.18", "-65.395, 170.952, -83.1583, 1.4", "-65.6578, 171.697, -83.3492, 0.81", "-66.0001, 172.551, -83.5504, 0.22", "-66.3984, 173.464, -83.7511, 1.11", "-66.6362, 173.921, -83.8401, 1.11", "-66.9619, 174.488, -83.9239, 0.81", "-67.4392, 175.279, -84.0536, 0.22", "-67.7029, 175.7, -84.1222, 0.22", "-67.8449, 175.949, -84.168, 0.44", "-67.9172, 176.094, -84.1993, 0.44", "-68.0113, 176.299, -84.2481, 0.44", "-68.3385, 177.027, -84.4667, 0.22", "-68.6664, 177.82, -84.7242, 0.22", "-69.1714, 178.956, -85.2494, 0.88", "-69.4217, 179.482, -85.5351, 1.4", "-69.6465, 179.919, -85.7927, 1.69", "-70.0676, 180.626, -86.2472, 1.69", "-70.4015, 181.116, -86.5927, 1.33", "-71.6365, 182.729, -87.9068, 0.22", "-71.6752, 182.771, -87.9461, 0.22", "-72.0899, 183.193, -88.3601, 0.29", "-72.5973, 183.656, -88.8251, 0.22", "-72.6621, 183.712, -88.8747, 0.22", "-72.8961, 183.917, -89.0165, 0.22", "-73.2705, 184.271, -89.1439, 0.59", "-73.3248, 184.322, -89.1726, 0.59", "-73.6283, 184.62, -89.3729, 0.88", "-74.2002, 185.238, -89.7784, 0.22", "-74.7131, 185.773, -90.1257, 1.18", "-75.1516, 186.221, -90.4097, 1.18", "-76.301, 187.245, -91.0895, 0.22", "-76.3509, 187.286, -91.1173, 0.22", "-77.0825, 187.833, -91.4944, 0.22", "-77.8877, 188.393, -91.8616, 1.33", "-78.2058, 188.616, -91.9936, 1.62", "-79.6828, 189.702, -92.5038, 0.22", "-79.7366, 189.745, -92.5179, 0.22", "-80.2133, 190.126, -92.6369, 0.59", "-80.6065, 190.467, -92.749, 0.59", "-81.4983, 191.368, -93.0234, 0.22", "-81.9339, 191.861, -93.1664, 0.22", "-82.3468, 192.408, -93.3066, 1.11", "-82.8591, 193.107, -93.487, 1.55", "-83.5301, 194.077, -93.7494, 0.22", "-83.813, 194.512, -93.8646, 0.81", "-83.8478, 194.572, -93.8789, 0.81", "-84.018, 194.883, -93.9567, 1.11", "-84.1589, 195.21, -94.0357, 1.25", "-84.4492, 196.294, -94.2721, 0.22", "-84.5511, 196.842, -94.3706, 0.52", "-84.5797, 197.044, -94.4166, 0.52", "-84.5899, 197.122, -94.4352, 0.52", "-84.7681, 198.219, -94.7799, 0.22", "-84.9476, 199.178, -95.1764, 1.18", "-85.0001, 199.43, -95.3095, 1.47", "-85.2811, 200.6, -96.0708, 0.22", "-85.4317, 201.16, -96.4559, 0.44", "-85.8153, 202.395, -97.3643, 0.22", "-86.1303, 203.208, -98.0427, 0.44", "-86.4654, 204.007, -98.7928, 0.66", "-86.7732, 204.732, -99.5367, 1.03" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "110.56, 171.21, -75.0629, 0.22", "112.618, 171.242, -74.5288, 0.22", "112.872, 171.251, -74.4703, 0.22", "114.176, 171.344, -74.2921, 0.22", "114.281, 171.357, -74.2828, 0.22", "115.209, 171.488, -74.2223, 1.25", "115.618, 171.59, -74.2052, 1.4", "115.693, 171.618, -74.2093, 1.4", "117.099, 172.346, -74.2865, 0.22", "117.608, 172.706, -74.3256, 0.96", "117.69, 172.773, -74.3329, 0.96", "119.041, 174.055, -74.5028, 0.22", "119.311, 174.339, -74.5497, 0.29", "119.726, 174.805, -74.634, 0.22", "120.371, 175.534, -74.753, 0.96", "120.872, 176.046, -74.8377, 1.25", "121.853, 176.969, -74.9928, 0.22", "122.573, 177.594, -75.1001, 0.88", "123.004, 177.941, -75.1541, 0.88", "124.344, 178.93, -75.3137, 0.22", "125.142, 179.465, -75.3976, 1.11", "125.2, 179.503, -75.4052, 1.11", "125.601, 179.781, -75.4699, 1.25", "126.067, 180.139, -75.5661, 1.25", "127.208, 181.139, -75.9736, 0.22", "127.522, 181.449, -76.1276, 0.44", "128.052, 182.014, -76.4256, 0.22", "128.68, 182.717, -76.7999, 1.33", "129.036, 183.128, -77.0219, 1.47", "130.039, 184.353, -77.6912, 0.22", "130.458, 184.883, -77.9605, 0.59", "130.806, 185.309, -78.1549, 0.22", "131.272, 185.831, -78.3655, 0.88", "131.524, 186.089, -78.4495, 0.88", "131.612, 186.169, -78.4647, 0.88", "132.406, 186.857, -78.5123, 0.22", "132.927, 187.294, -78.541, 0.22", "132.981, 187.34, -78.5435, 0.22", "133.599, 187.902, -78.59, 1.47", "135.02, 189.307, -78.7337, 0.22", "135.663, 190.034, -78.8068, 0.74", "135.754, 190.152, -78.8202, 0.74", "135.979, 190.516, -78.8585, 0.74", "136.42, 191.402, -78.9442, 0.22", "136.49, 191.622, -78.9513, 0.37", "136.674, 192.715, -78.9445, 0.22", "136.683, 192.794, -78.9411, 0.22", "136.799, 193.876, -78.8711, 0.22", "136.806, 193.956, -78.8627, 0.22", "136.851, 195.303, -78.6102, 0.81" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "110.56, 171.21, -75.0629, 0.74", "113.43, 167.889, -78.9906, 0.74", "114.261, 166.924, -79.9402, 0.29", "115.231, 165.798, -80.14, 0.22", "115.767, 165.182, -79.8778, 0.44", "116.44, 164.421, -79.2454, 0.52", "116.543, 164.305, -79.1357, 0.52", "117.365, 163.45, -77.9, 0.22", "117.582, 163.236, -77.5416, 0.59", "117.625, 163.202, -77.4836, 0.59", "118.611, 162.579, -76.3786, 0.22", "118.656, 162.551, -76.3329, 0.22", "119.664, 161.963, -75.4103, 0.22", "119.707, 161.939, -75.3765, 0.22", "120.853, 161.368, -74.4826, 0.74", "121.904, 160.882, -73.7026, 0.88" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "33.8386, 38.8199, -23.9717, 0.22", "34.9501, 40.4428, -23.3935, 0.22", "35.4137, 41.1042, -23.2143, 0.22", "36.1011, 41.9527, -23.0068, 1.18", "36.5219, 42.4099, -22.9048, 1.77", "37.1054, 43.0002, -22.781, 2.06", "37.4406, 43.3236, -22.7174, 2.06", "38.9673, 44.6204, -22.5759, 0.22", "39.7569, 45.236, -22.519, 0.22", "40.4532, 45.7406, -22.4903, 0.52", "40.5891, 45.8427, -22.4871, 0.52", "40.9913, 46.1662, -22.4871, 0.52", "41.0526, 46.2177, -22.4871, 0.52", "41.6827, 46.7641, -22.4871, 0.44", "42.3454, 47.3675, -22.4871, 0.37", "43.3217, 48.1864, -22.4871, 0.22", "43.3856, 48.2346, -22.4871, 0.22", "43.7531, 48.4766, -22.4871, 0.37", "44.0773, 48.6547, -22.478, 0.37", "44.7713, 48.9485, -22.4319, 0.37", "45.3849, 49.1511, -22.3775, 0.22", "45.5902, 49.2028, -22.3642, 0.22", "46.6225, 49.4473, -22.3097, 0.22", "47.9563, 49.7117, -22.251, 2.14", "48.8579, 49.8629, -22.2176, 2.87", "49.3788, 49.9363, -22.2073, 2.73", "51.3978, 50.1357, -22.1959, 0.22", "51.4675, 50.1421, -22.1991, 0.22", "52.2937, 50.2198, -22.2857, 0.22", "52.3621, 50.2284, -22.298, 0.22", "53.2683, 50.4188, -22.5056, 0.44", "53.3215, 50.4388, -22.5247, 0.44", "54.5701, 51.193, -23.1416, 0.22", "54.9005, 51.4156, -23.3048, 0.74", "54.9616, 51.4585, -23.3336, 0.74", "55.4058, 51.7762, -23.5479, 0.74", "56.5649, 52.6279, -24.1273, 0.22", "57.0592, 52.9852, -24.3725, 0.22", "58.3773, 53.9026, -24.999, 1.92", "59.0175, 54.3255, -25.2989, 2.87" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "33.8386, 38.8199, -23.9717, 0.22", "35.9825, 38.8407, -24.3023, 0.22", "36.7013, 38.8187, -24.4945, 0.66", "37.6854, 38.756, -24.847, 0.22", "38.2509, 38.7027, -25.0658, 0.22", "38.996, 38.5941, -25.4157, 0.22", "39.7452, 38.4472, -25.8099, 0.96", "41.3229, 38.0727, -26.8296, 0.22", "42.2147, 37.8453, -27.5753, 0.81", "42.5365, 37.7766, -27.9054, 0.81", "43.7611, 37.6238, -29.5603, 0.22", "44.4731, 37.5912, -30.7288, 0.22", "45.1709, 37.599, -32.0774, 2.06", "46.3897, 37.6816, -34.7195, 1.18", "47.1832, 37.7925, -36.5175, 1.77", "48.3397, 38.0067, -39.235, 1.77", "48.4136, 38.024, -39.4092, 1.77", "49.9852, 38.4041, -42.9991, 0.22", "51.0917, 38.6355, -45.3348, 0.22", "51.6304, 38.7296, -46.379, 1.47", "51.9287, 38.7588, -46.8926, 1.62", "53.1953, 38.8444, -48.7061, 0.22", "53.5459, 38.8769, -49.1862, 0.74", "53.8774, 38.9419, -49.5751, 0.81" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "30.9078, 69.4208, -28.3177, 0.22", "31.1628, 70.7114, -28.3417, 0.22", "31.1755, 70.7802, -28.3443, 0.22", "31.3258, 71.6493, -28.382, 0.29", "31.5148, 72.494, -28.461, 0.22", "31.7038, 73.2205, -28.5413, 0.22", "32.0182, 74.3637, -28.6979, 1.25", "32.1166, 74.679, -28.7563, 1.84", "32.4267, 75.6442, -28.9435, 1.18", "32.9048, 77.1314, -29.2391, 0.22", "33.2622, 78.2404, -29.4536, 0.22", "33.5833, 79.0906, -29.6272, 0.74", "33.6103, 79.1539, -29.6402, 0.74", "33.846, 79.6574, -29.7384, 0.74", "34.17, 80.3013, -29.8541, 0.22", "34.4124, 80.7534, -29.9118, 0.37", "35.0974, 81.8351, -30.0973, 0.22", "35.2245, 82.0114, -30.1316, 0.22", "35.8512, 82.8292, -30.3176, 0.22", "35.896, 82.8805, -30.3338, 0.22", "36.5991, 83.584, -30.6493, 0.22", "37.4902, 84.4017, -31.1833, 0.22", "37.8737, 84.7293, -31.4547, 1.25", "37.9269, 84.7722, -31.4964, 1.25", "38.6717, 85.3496, -32.1265, 1.92", "39.3227, 85.8731, -32.6844, 1.69", "40.0276, 86.4907, -33.3281, 1.11", "40.2563, 86.7318, -33.5879, 0.52", "40.7397, 87.403, -34.2955, 0.96", "40.901, 87.6873, -34.5756, 1.25", "41.1215, 88.2019, -35.041, 0.96", "41.7038, 89.8681, -36.4386, 0.29", "42.0988, 91.1782, -37.4758, 0.59", "42.3958, 92.2853, -38.3258, 1.11", "42.4776, 92.6866, -38.6646, 1.4", "42.6813, 94.0374, -39.8628, 0.22", "42.745, 94.7652, -40.6071, 1.47", "42.7446, 94.9676, -40.8297, 1.69", "42.7311, 95.3814, -41.2728, 1.55", "42.5, 97.5297, -43.64, 0.59", "42.4308, 97.8759, -44.0312, 0.44", "42.036, 99.1185, -45.4222, 0.44", "41.6398, 100.015, -46.414, 0.29", "41.1408, 100.965, -47.4275, 0.29", "40.9238, 101.315, -47.7631, 0.22", "40.3812, 102.089, -48.3509, 1.18", "39.9904, 102.586, -48.7133, 1.4", "38.8641, 103.885, -49.5852, 0.15", "38.8202, 103.929, -49.6183, 0.15", "38.3027, 104.415, -50.0432, 0.15", "37.7064, 105.021, -50.5724, 0.15", "36.7811, 106.067, -51.4064, 0.15", "36.2398, 106.739, -51.9171, 1.99", "35.6658, 107.522, -52.4749, 2.28", "34.5701, 109.115, -53.5669, 0.37", "33.9981, 110.028, -54.171, 0.29", "33.5079, 110.919, -54.7158, 0.22", "33.2686, 111.479, -55.0604, 0.22", "33.2518, 111.529, -55.0896, 0.22", "32.938, 112.797, -55.7912, 0.22", "32.7843, 113.729, -56.2846, 1.18", "32.7346, 114.188, -56.539, 1.18", "32.6363, 116.04, -57.6196, 0.29", "32.629, 117.017, -58.2073, 0.29", "32.6486, 117.549, -58.4827, 0.29", "32.7838, 118.771, -58.997, 1.4", "32.8372, 119.103, -59.1129, 1.99", "32.8475, 119.16, -59.1287, 1.99", "32.999, 119.825, -59.2554, 1.99", "33.5479, 121.876, -59.6305, 0.37", "33.8061, 122.742, -59.794, 0.59", "34.2538, 124.075, -60.0235, 0.29", "34.5435, 124.884, -60.1667, 0.88", "34.5814, 124.982, -60.1867, 0.88", "34.6474, 125.126, -60.2207, 0.88", "35.2115, 126.146, -60.5656, 0.29", "35.7634, 127.051, -60.9002, 0.29", "36.0659, 127.48, -61.082, 0.66", "36.6863, 128.275, -61.4795, 0.22", "37.1908, 128.902, -61.8517, 1.77", "37.2578, 128.986, -61.9063, 1.77", "37.6219, 129.456, -62.2723, 1.69", "38.1489, 130.152, -62.8492, 0.59", "38.358, 130.441, -63.0906, 0.59", "38.848, 131.176, -63.6761, 0.29", "39.1077, 131.607, -63.9918, 0.66", "39.88, 132.973, -64.898, 0.22", "40.4288, 134.019, -65.5557, 0.22", "40.4789, 134.122, -65.617, 0.22", "40.8061, 134.766, -66.0207, 1.18", "41.019, 135.18, -66.2779, 1.18", "41.6458, 136.359, -67.0554, 0.29", "42.1365, 137.277, -67.7047, 1.03", "42.3102, 137.594, -67.9647, 1.62", "43.1046, 139.035, -69.2346, 0.22", "43.2394, 139.288, -69.4683, 0.52", "43.7103, 140.152, -70.3042, 0.22", "44.0966, 140.846, -71.0013, 1.03", "44.543, 141.648, -71.8249, 0.22", "44.8926, 142.299, -72.5311, 1.55", "45.083, 142.742, -73.0207, 1.62" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "30.9078, 69.4208, -28.3177, 1.33", "31.3587, 69.9751, -28.3925, 1.33", "31.404, 70.0274, -28.4028, 1.33", "31.7587, 70.4163, -28.4836, 1.33", "31.8062, 70.4667, -28.4943, 1.33", "32.4889, 71.116, -28.6449, 0.66", "33.371, 71.9528, -28.8477, 0.22", "33.969, 72.5924, -29.0206, 0.66", "34.2499, 72.9073, -29.1052, 0.88", "34.3024, 72.9657, -29.1208, 0.88", "34.9829, 73.6658, -29.3045, 0.22", "35.4191, 74.0708, -29.3954, 0.22", "36.3182, 74.8287, -29.5059, 0.96", "36.4025, 74.8929, -29.5138, 0.96", "36.7688, 75.1453, -29.5385, 0.96", "37.7583, 75.7368, -29.573, 0.22", "38.3693, 76.0929, -29.5783, 1.11", "38.8585, 76.3559, -29.5767, 1.84", "39.5325, 76.6919, -29.571, 2.28", "39.9656, 76.9251, -29.5651, 1.99", "41.4506, 77.7794, -29.5435, 0.15", "42.1601, 78.198, -29.5422, 0.15", "42.2198, 78.2345, -29.5436, 0.15", "43.311, 78.9419, -29.5727, 0.15", "44.0868, 79.4765, -29.5953, 1.55", "44.6252, 79.8531, -29.6184, 1.84", "46.1696, 80.9397, -29.7111, 0.22", "46.6223, 81.2455, -29.7439, 0.22", "47.2826, 81.6832, -29.8148, 0.96", "47.6752, 81.9472, -29.8706, 1.11", "49.0551, 82.8794, -30.1706, 0.22", "49.6996, 83.3217, -30.3513, 0.52", "50.001, 83.5226, -30.4544, 0.59", "50.9155, 84.0877, -30.812, 0.22", "51.3197, 84.2999, -30.9951, 0.22", "52.3756, 84.77, -31.5188, 0.88", "52.4447, 84.7902, -31.5537, 0.88", "52.8074, 84.8411, -31.7126, 0.88", "52.9198, 84.848, -31.7541, 0.88", "54.1643, 84.8205, -32.1509, 0.29", "54.2513, 84.8076, -32.1963, 0.29", "55.1474, 84.658, -32.7616, 0.29", "56.3019, 84.4795, -33.5826, 1.47", "56.5397, 84.451, -33.7645, 1.92", "57.3801, 84.3703, -34.4466, 1.99", "60.2439, 84.2023, -36.9011, 0.29", "61.0921, 84.1867, -37.6424, 0.22", "61.1433, 84.1884, -37.69, 0.22", "61.6418, 84.2331, -38.1408, 0.22", "61.7029, 84.2427, -38.1916, 0.22", "62.7464, 84.5864, -38.9091, 1.18", "63.0934, 84.7832, -39.0499, 1.33", "63.6039, 85.0728, -39.245, 1.18", "64.6309, 85.6667, -39.6516, 0.22", "64.6964, 85.7044, -39.6777, 0.22", "65.4097, 86.1411, -39.9514, 0.22", "65.4658, 86.1784, -39.9704, 0.22", "66.0626, 86.5242, -40.1197, 0.44", "66.1273, 86.551, -40.1172, 0.44", "66.6876, 86.7427, -40.165, 0.44", "66.7911, 86.7813, -40.1896, 0.44", "67.2552, 86.9697, -40.3593, 0.96", "67.64, 87.1465, -40.6714, 1.33", "68.7662, 87.6955, -41.8186, 0.37", "70.1604, 88.4251, -43.3807, 0.29", "70.817, 88.8028, -44.1773, 1.69", "71.1745, 89.0199, -44.6352, 2.21", "73.4781, 90.5913, -47.8357, 0.22", "73.5138, 90.6184, -47.8894, 0.22", "73.8409, 90.9032, -48.4235, 0.96", "74.0836, 91.1278, -48.7877, 0.96", "74.9725, 91.9841, -50.0252, 0.29", "75.4932, 92.5129, -50.717, 0.22", "75.568, 92.5907, -50.8062, 0.22", "75.9409, 92.8973, -51.2562, 0.22", "75.9838, 92.9225, -51.3055, 0.22", "76.8279, 93.352, -52.3349, 0.96", "77.6894, 93.7574, -53.4046, 0.66", "78.4432, 94.0823, -54.3384, 0.22", "78.9608, 94.2981, -54.9763, 1.33", "79.4297, 94.4821, -55.5487, 1.33", "81.063, 95.1003, -57.4195, 0.15", "81.8064, 95.3476, -58.2222, 0.37", "81.8622, 95.3636, -58.2773, 0.37", "81.9955, 95.4049, -58.4473, 0.37", "82.0828, 95.4376, -58.5731, 0.37", "82.643, 95.6721, -59.4305, 0.59", "83.4171, 95.9791, -60.6106, 0.29", "84.231, 96.3325, -61.8794, 2.28", "86.3383, 97.3137, -65.1401, 0.88", "86.8321, 97.564, -65.9121, 0.66", "87.4886, 97.8778, -66.9223, 0.22", "87.5318, 97.8964, -66.987, 0.22", "88.0782, 98.0762, -67.6857, 1.33", "88.4582, 98.093, -68.0402, 1.69", "88.5185, 98.07, -68.0674, 1.69", "89.9596, 97.2833, -68.6232, 0.22", "90.7012, 96.7788, -68.855, 0.22", "90.9422, 96.5948, -68.9247, 0.59", "91.0996, 96.458, -68.9633, 0.59", "91.1503, 96.4113, -68.9756, 0.59", "91.7573, 95.8532, -69.1011, 0.22", "91.8099, 95.8071, -69.104, 0.22", "92.187, 95.4897, -69.1336, 1.03", "92.4832, 95.2433, -69.161, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.0615, 187.363, 4.36892, 0.29", "-9.30483, 188.622, 4.01612, 0.29", "-9.37288, 189.839, 3.68366, 0.29", "-9.3729, 189.904, 3.66116, 0.29", "-9.35139, 190.87, 3.3019, 0.29", "-9.35065, 191.09, 3.22055, 0.29", "-9.35578, 191.96, 2.89547, 0.52", "-9.32041, 192.783, 2.57847, 0.81", "-9.28219, 193.891, 2.14229, 0.22", "-9.30627, 195.055, 1.6914, 1.69", "-9.37494, 195.548, 1.51117, 1.92", "-9.39186, 195.611, 1.48878, 1.92", "-9.53153, 196.014, 1.35944, 1.92", "-10.0235, 197.395, 0.949712, 0.29", "-10.0485, 197.469, 0.931949, 0.29", "-10.3388, 198.456, 0.706629, 0.22", "-10.5298, 199.176, 0.586715, 0.22", "-10.8331, 200.333, 0.447133, 0.22", "-11.1311, 201.495, 0.351534, 1.55", "-11.2327, 201.924, 0.336735, 1.84", "-11.7451, 204.12, 0.393845, 0.22", "-11.9725, 205.269, 0.490387, 1.25", "-12.0628, 205.725, 0.553501, 1.62", "-12.1233, 205.947, 0.602489, 1.62", "-12.1419, 206.003, 0.618284, 1.62", "-12.6172, 207.273, 1.02965, 0.29", "-12.9666, 208.135, 1.32432, 0.29", "-13.2467, 208.799, 1.46298, 0.29", "-13.6332, 209.673, 1.5836, 0.22", "-13.9211, 210.279, 1.62901, 0.22", "-14.1608, 210.751, 1.61112, 0.59", "-14.471, 211.301, 1.53069, 0.29", "-15.1428, 212.424, 1.36053, 1.92", "-15.4628, 212.992, 1.27442, 2.5", "-15.5986, 213.275, 1.23112, 2.36", "-16.2943, 214.865, 1.03038, 0.29", "-16.4744, 215.253, 0.985963, 0.29", "-16.8919, 216.124, 0.905571, 0.29", "-17.1476, 216.659, 0.865174, 0.29", "-17.5278, 217.464, 0.807961, 0.22", "-17.8604, 218.182, 0.76646, 0.22", "-18.4496, 219.452, 0.73959, 2.58", "-18.594, 219.755, 0.718706, 2.87" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-9.0615, 187.363, 4.36892, 0.15", "-10.6114, 188.771, 4.48955, 0.15", "-11.5815, 189.779, 4.42389, 0.15", "-11.6335, 189.84, 4.41609, 0.15", "-12.5438, 190.896, 4.27955, 0.15", "-13.2733, 191.742, 4.17014, 0.15", "-13.6427, 192.169, 4.11472, 0.29", "-14.3414, 193.137, 3.77156, 0.44", "-14.5607, 193.478, 3.62618, 0.74" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "0.147213, -67.6098, -26.8164, 0.66", "0.934641, -68.1171, -30.218, 0.66", "2.14139, -68.8009, -34.7584, 1.84", "4.4336, -69.9033, -42.4946, 1.92", "6.06586, -70.5943, -47.5672, 1.92", "7.29788, -71.0617, -51.1313, 0.52", "7.85051, -71.2541, -52.6338, 0.52", "8.69106, -71.4553, -54.5025, 1.84", "10.377, -71.7656, -57.6019, 0.44", "10.7391, -71.8515, -58.2475, 0.66", "11.2062, -72.0117, -59.2133, 0.44", "11.7553, -72.2783, -60.5275, 1.77", "11.8534, -72.3428, -60.8045, 2.06", "13.1694, -73.4896, -64.9245, 1.77", "14.1201, -74.5122, -68.1778, 2.06", "14.8788, -75.4159, -70.8502, 0.88", "15.4388, -76.1396, -72.8317, 0.22", "16.0005, -76.8872, -74.7251, 1.69", "16.0794, -76.9854, -74.9596, 1.99", "16.933, -77.9907, -76.9862, 0.59", "17.5454, -78.6711, -78.2018, 0.22", "17.9576, -79.1431, -79.0633, 1.69", "18.1315, -79.3568, -79.4999, 1.69", "19.0401, -80.4438, -82.0431, 0.29", "19.3395, -80.7536, -82.9469, 0.22", "20.1265, -81.5477, -85.4388, 1.03", "20.9293, -82.3316, -88.1843, 1.25", "21.6281, -82.9884, -90.7246, 1.62", "22.2034, -83.5158, -92.9967, 1.62", "22.821, -84.0475, -95.7191, 1.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "0.147213, -67.6098, -26.8164, 1.99", "0.496083, -67.9705, -25.7218, 1.99", "1.15539, -68.6938, -24.2426, 1.77", "2.50558, -70.5767, -21.6611, 0.88", "5.10338, -75.1983, -17.3077, 0.74", "5.26271, -75.5558, -17.0788, 0.74", "5.47261, -76.184, -16.8898, 1.62", "5.61519, -77.1274, -16.8575, 1.62", "5.55301, -78.7312, -17.3464, 0.59", "5.41242, -79.7434, -17.8892, 2.21", "5.27469, -80.6576, -18.5245, 2.5", "4.89601, -82.7503, -20.1307, 0.37", "4.57005, -84.3997, -21.4771, 0.37", "4.34918, -85.5008, -22.4486, 1.92", "4.29619, -85.7702, -22.6967, 2.14", "4.04314, -87.1315, -23.9488, 0.29", "3.80056, -88.574, -25.2919, 0.29", "3.74115, -89.1192, -25.7774, 0.29", "3.73158, -89.4087, -26.0234, 0.29", "3.73873, -90.2065, -26.7098, 1.33", "3.77911, -90.9683, -27.3977, 1.69", "3.96592, -92.4963, -28.7771, 0.44", "4.2155, -93.6967, -29.8351, 0.44", "4.41281, -94.5267, -30.5319, 2.36", "4.51806, -94.967, -30.875, 2.58", "5.01688, -97.176, -32.4564, 0.29", "5.18475, -97.9959, -32.9743, 0.29", "5.40079, -99.1024, -33.5748, 1.99", "5.54645, -99.8841, -33.9517, 2.36", "5.89508, -102.078, -35.0458, 0.29", "5.98543, -102.969, -35.5334, 0.29", "5.99349, -103.803, -36.0328, 0.22", "5.98501, -103.924, -36.121, 0.22", "5.90683, -104.499, -36.6496, 0.22", "5.64144, -105.919, -38.1434, 0.59", "5.30037, -107.265, -39.6653, 1.69", "5.13109, -107.838, -40.3254, 2.21", "4.88074, -108.549, -41.1382, 2.06", "4.24067, -110.266, -42.9836, 0.74", "4.06193, -110.74, -43.4502, 0.88", "3.84363, -111.359, -43.974, 0.88", "3.53641, -112.39, -44.7018, 0.29", "3.30712, -113.244, -45.1958, 1.18", "3.13394, -113.917, -45.4849, 1.47", "2.9422, -114.742, -45.7067, 1.77", "2.91618, -114.856, -45.7311, 1.77", "2.59757, -116.137, -45.9321, 0.29", "2.34656, -117.018, -46.0065, 0.29", "2.09943, -117.798, -46.0446, 1.84", "1.84818, -118.496, -46.0717, 2.65", "1.47145, -119.477, -46.1055, 1.92", "0.974196, -120.746, -46.1568, 0.52", "0.445222, -122.081, -46.2292, 0.22", "0.183768, -122.82, -46.2863, 0.22", "0.162089, -122.897, -46.2944, 0.22", "0.0313242, -123.564, -46.3788, 0.88", "-0.0122222, -124.021, -46.4489, 1.25", "-0.032026, -124.593, -46.5433, 1.25", "-0.042173, -125.472, -46.7022, 0.81", "-0.0431948, -126.78, -46.9435, 0.29", "-0.0785905, -127.593, -47.1051, 0.29", "-0.211444, -128.646, -47.3466, 1.84", "-0.330949, -129.275, -47.4986, 1.99", "-0.527928, -130.04, -47.6932, 1.77", "-0.548907, -130.105, -47.7095, 1.77", "-1.10995, -131.615, -48.054, 0.22", "-1.50753, -132.65, -48.2951, 0.22", "-1.94964, -133.863, -48.564, 0.22", "-2.27415, -134.811, -48.7704, 0.88", "-2.48255, -135.458, -48.9143, 1.47", "-2.68361, -136.161, -49.0607, 1.69", "-2.93238, -137.231, -49.2582, 1.77", "-3.07654, -137.939, -49.3865, 1.77", "-3.09185, -138.007, -49.3994, 1.77", "-3.50341, -139.891, -49.7912, 0.22", "-3.64225, -140.6, -49.9524, 0.74", "-3.72609, -141.089, -50.0666, 0.74", "-3.92768, -142.589, -50.4151, 0.22", "-3.97545, -143.104, -50.543, 0.59", "-4.01218, -144.359, -50.8697, 0.22", "-4.01292, -145.169, -51.0771, 1.11", "-4.02055, -145.88, -51.2565, 2.14", "-4.01252, -146.68, -51.4452, 2.36", "-3.95367, -147.958, -51.7137, 0.81", "-3.85025, -149.387, -51.9836, 0.22", "-3.72414, -150.787, -52.2042, 0.22", "-3.57057, -151.971, -52.3811, 0.22", "-3.38239, -153.063, -52.5331, 0.22", "-3.19931, -153.919, -52.6358, 0.96", "-3.07757, -154.37, -52.6874, 1.33", "-2.86274, -155.016, -52.7761, 0.96", "-2.30863, -156.38, -53.0107, 0.22", "-2.07058, -156.951, -53.1227, 0.74", "-1.92162, -157.365, -53.2241, 0.74", "-1.57499, -158.495, -53.5226, 0.22", "-1.39848, -159.186, -53.7152, 1.11", "-1.27993, -159.762, -53.8769, 1.55", "-1.19419, -160.391, -54.0741, 1.69", "-1.07963, -161.787, -54.6003, 0.22", "-1.07156, -162.736, -54.9835, 1.03", "-1.11337, -163.249, -55.2319, 1.18", "-1.1974, -163.762, -55.5097, 1.47", "-1.51082, -165.105, -56.293, 0.22", "-1.90692, -166.255, -57.0215, 0.22", "-2.26324, -167.062, -57.5654, 0.22", "-2.86531, -168.247, -58.3958, 1.55", "-3.10186, -168.671, -58.6927, 1.77", "-3.34272, -169.063, -58.9576, 1.47", "-4.38448, -170.673, -59.9069, 0.22", "-4.41409, -170.719, -59.9314, 0.22", "-4.68332, -171.158, -60.139, 0.29", "-4.72455, -171.221, -60.1659, 0.29", "-5.15436, -171.848, -60.4597, 0.29", "-5.89068, -172.768, -60.9166, 0.22", "-5.9731, -172.857, -60.9613, 0.22", "-6.62427, -173.445, -61.2964, 0.52", "-7.57016, -174.098, -61.7936, 0.29", "-7.63222, -174.139, -61.8234, 0.29", "-8.34723, -174.6, -62.0959, 1.18", "-8.4115, -174.643, -62.1157, 1.18", "-9.10795, -175.182, -62.2918, 1.55", "-10.6836, -176.527, -62.6218, 0.22", "-11.8924, -177.693, -62.8014, 0.22", "-12.8128, -178.68, -62.9174, 1.77", "-13.0738, -179.022, -63.0098, 2.21", "-13.7906, -180.139, -63.4031, 1.11", "-13.8225, -180.197, -63.4281, 1.11", "-14.2174, -180.979, -63.833, 1.77", "-14.4487, -181.44, -64.11, 2.06", "-16.0894, -184.725, -66.2421, 0.22", "-16.647, -185.79, -66.9446, 1.03", "-17.3034, -187.014, -67.7734, 0.37", "-17.8372, -187.966, -68.3984, 0.22", "-18.1169, -188.443, -68.7013, 0.37", "-18.8801, -189.665, -69.4092, 0.81", "-19.8255, -191.147, -70.0384, 0.22", "-19.8545, -191.197, -70.058, 0.22", "-20.479, -192.376, -70.4423, 0.22", "-20.6096, -192.639, -70.5137, 0.52", "-20.6379, -192.701, -70.5275, 0.52", "-21.0403, -193.717, -70.6672, 0.22", "-21.2634, -194.562, -70.7886, 0.22", "-21.4296, -195.473, -70.9408, 0.22", "-21.5484, -196.475, -71.1264, 1.33", "-21.5956, -196.977, -71.2367, 1.55", "-21.6266, -197.404, -71.3417, 1.55", "-21.7, -199.21, -71.8365, 0.22", "-21.7041, -200.335, -72.156, 0.22", "-21.7002, -200.404, -72.1738, 0.22", "-21.6075, -201.49, -72.4386, 0.88", "-21.5875, -201.773, -72.5011, 1.33", "-21.5612, -202.348, -72.607, 1.33", "-21.5716, -202.856, -72.6492, 1.11", "-21.6659, -204.122, -72.7005, 0.22", "-21.7407, -204.837, -72.7045, 0.88", "-21.8082, -205.357, -72.6904, 1.11", "-21.9319, -206.096, -72.6824, 0.81", "-22.2044, -207.402, -72.6599, 0.22", "-22.519, -208.69, -72.6576, 0.22", "-22.7774, -209.553, -72.642, 1.03", "-22.9089, -209.971, -72.629, 1.4", "-23.3626, -211.396, -72.5889, 0.22", "-23.6212, -212.165, -72.5729, 0.96", "-23.9074, -212.971, -72.5939, 1.25", "-24.4275, -214.4, -72.6509, 0.37", "-24.7448, -215.292, -72.7158, 0.22", "-24.7639, -215.359, -72.7221, 0.22", "-24.9867, -216.43, -72.8371, 0.22", "-25.1815, -217.747, -73.0149, 1.4", "-25.2465, -218.333, -73.0976, 1.4", "-25.3619, -219.723, -73.3303, 0.29", "-25.4674, -220.891, -73.5182, 0.29", "-25.5214, -221.477, -73.6008, 0.37", "-25.6202, -222.438, -73.7384, 0.29", "-25.6971, -223.059, -73.8186, 0.29", "-25.8681, -223.891, -73.9658, 0.29", "-26.0897, -224.626, -74.1347, 1.4", "-26.4047, -225.501, -74.3826, 1.4", "-26.8773, -226.893, -74.8424, 0.22", "-27.0438, -227.464, -75.0503, 0.44", "-27.3036, -228.77, -75.5361, 0.29", "-27.3821, -229.46, -75.7887, 0.81", "-27.3971, -230.079, -75.9784, 0.81", "-27.34, -230.949, -76.2874, 0.74", "-27.2546, -231.619, -76.5248, 0.81", "-27.0891, -232.753, -76.9442, 0.22", "-26.9956, -233.23, -77.1139, 0.88", "-26.8223, -234.091, -77.4241, 1.18", "-26.4547, -236.206, -78.3828, 0.66", "-26.3845, -236.852, -78.7014, 0.44", "-26.349, -237.38, -78.9863, 1.4", "-26.3399, -237.88, -79.2923, 1.77", "-26.3323, -238.542, -79.7216, 1.69", "-26.302, -240.622, -81.1228, 0.29", "-26.2843, -241.609, -81.7245, 0.29", "-26.2703, -242.23, -82.0867, 0.29", "-26.2594, -243.829, -82.9842, 1.33", "-26.2723, -244.835, -83.5266, 1.92", "-26.2861, -245.757, -83.9857, 1.11", "-26.2513, -247.007, -84.413, 0.15", "-26.1248, -248.369, -84.6737, 0.15", "-26.0216, -249.212, -84.7152, 1.25", "-25.9495, -249.643, -84.6708, 1.77", "-25.8405, -250.216, -84.5568, 2.06", "-25.3116, -252.518, -83.9138, 0.22", "-24.8977, -253.986, -83.4121, 0.22", "-24.8806, -254.04, -83.3903, 0.22", "-24.6399, -254.723, -83.0702, 0.88", "-24.6184, -254.783, -83.0409, 0.88", "-24.4038, -255.391, -82.7295, 1.11", "-24.3807, -255.451, -82.7022, 1.11" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-29.9289, -78.5725, 1.64558, 0.52", "-33.2958, -79.748, -1.17657, 0.52", "-34.0953, -80.0168, -1.79323, 0.37", "-34.9347, -80.2921, -2.37614, 1.55", "-35.4916, -80.4632, -2.70341, 2.06", "-36.5982, -80.8162, -3.31623, 1.69", "-37.7417, -81.2189, -3.92967, 0.44", "-38.2478, -81.4162, -4.12412, 1.4", "-38.913, -81.6691, -4.39777, 1.69", "-40.962, -82.4963, -5.30547, 0.22", "-41.6121, -82.7888, -5.57706, 0.22", "-42.1374, -83.0859, -5.84429, 0.22", "-42.7728, -83.4799, -6.22571, 0.22", "-42.8186, -83.5156, -6.26483, 0.22", "-43.5895, -84.2664, -7.10947, 1.69", "-43.7521, -84.4546, -7.32096, 1.99", "-45.2034, -86.2816, -9.30535, 0.74", "-45.8953, -87.2135, -10.2715, 2.28", "-47.1531, -89.1036, -12.0997, 0.52", "-47.4847, -89.7153, -12.6424, 1.03", "-47.6042, -90.0297, -12.8771, 1.03", "-47.9008, -91.2695, -13.5992, 0.29", "-48.1002, -92.5371, -14.2022, 1.77", "-48.1372, -92.9392, -14.3769, 2.28", "-48.3071, -95.312, -15.2052, 0.22", "-48.3807, -97.2642, -15.891, 0.22", "-48.3507, -99.3471, -16.6041, 0.74" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-29.9289, -78.5725, 1.64558, 0.37", "-30.2089, -81.6687, 2.28858, 0.37", "-30.2479, -82.7352, 2.54626, 0.22", "-30.2663, -83.7256, 2.79144, 0.88", "-30.2822, -84.2952, 2.93128, 0.88", "-30.3409, -86.0954, 3.37013, 0.22", "-30.3708, -87.0243, 3.58853, 0.22", "-30.3863, -87.8084, 3.85913, 0.66", "-30.4074, -88.3179, 3.99945, 0.66", "-30.5397, -89.4651, 4.2219, 0.22", "-30.5544, -89.533, 4.23072, 0.22", "-30.7684, -90.2444, 4.25537, 0.22", "-30.9878, -90.835, 4.25526, 0.37", "-31.2143, -91.3564, 4.25947, 0.37", "-31.6912, -92.3445, 4.27094, 0.22", "-31.9563, -92.942, 4.27275, 1.62", "-32.2173, -93.6344, 4.26047, 2.28", "-32.5075, -94.5271, 4.23251, 1.47", "-32.9668, -96.1309, 4.20003, 0.22", "-33.2316, -97.1956, 4.19535, 1.55", "-33.6143, -98.8776, 4.21938, 0.22", "-33.8328, -99.8461, 4.24976, 0.22", "-33.9433, -100.348, 4.27435, 0.22", "-34.1117, -101.226, 4.33974, 0.22", "-34.1851, -101.693, 4.37157, 0.22", "-34.3663, -102.787, 4.47346, 1.62", "-34.4604, -103.215, 4.52495, 2.06", "-34.6403, -103.95, 4.6149, 1.77", "-34.9728, -105.397, 4.70769, 0.22", "-35.0668, -105.903, 4.72584, 0.59", "-35.0779, -105.972, 4.72838, 0.59", "-35.1384, -106.479, 4.74992, 0.59", "-35.2411, -107.519, 4.80011, 0.29", "-35.3213, -108.582, 4.85403, 0.22", "-35.4213, -109.882, 4.91734, 0.22", "-35.4926, -110.622, 4.9554, 0.59", "-35.5567, -111.109, 4.97812, 0.59", "-35.5685, -111.178, 4.98108, 0.59", "-35.7661, -112.119, 5.01175, 0.22", "-35.9916, -112.915, 5.02818, 1.55", "-36.2294, -113.561, 5.01335, 1.55", "-36.7424, -114.772, 5.07813, 0.29", "-37.045, -115.423, 5.15201, 0.22", "-37.2636, -115.877, 5.22583, 0.66", "-37.4919, -116.33, 5.32361, 1.03", "-37.678, -116.694, 5.4266, 1.03", "-38.5559, -118.347, 6.05, 0.22", "-38.7436, -118.679, 6.19974, 0.22", "-38.9499, -119.039, 6.36764, 0.66", "-39.0998, -119.283, 6.48983, 0.66", "-39.7243, -120.227, 6.96374, 0.37", "-40.1884, -120.9, 7.2821, 1.25", "-40.6141, -121.522, 7.5302, 1.55", "-40.8851, -121.969, 7.71732, 1.77", "-41.5722, -123.326, 8.26236, 0.29", "-41.7677, -123.784, 8.43765, 0.96", "-41.9496, -124.303, 8.61782, 1.11", "-42.151, -125.054, 8.84535, 1.03", "-42.4411, -126.483, 9.20219, 0.29", "-42.6043, -127.553, 9.38724, 0.29", "-42.6132, -127.623, 9.39409, 0.29", "-42.7391, -128.229, 9.43486, 1.4", "-42.9111, -128.792, 9.46154, 1.62", "-43.3827, -130.04, 9.48908, 0.22", "-43.9673, -131.286, 9.47915, 2.28", "-44.2417, -131.811, 9.48506, 2.58", "-44.9193, -133.021, 9.51669, 2.06", "-45.6889, -134.3, 9.51334, 0.29", "-46.2644, -135.173, 9.48348, 0.81", "-46.697, -135.764, 9.44677, 1.25", "-47.5118, -136.803, 9.31222, 0.29", "-47.9786, -137.43, 9.22202, 0.29", "-48.6403, -138.397, 9.06315, 0.74", "-48.8852, -138.773, 8.99527, 0.81", "-49.337, -139.581, 8.86429, 0.44", "-49.6518, -140.298, 8.77797, 0.74", "-50.0693, -141.432, 8.6612, 0.29", "-50.2663, -142.148, 8.61556, 0.52", "-50.4146, -142.867, 8.6023, 0.81", "-50.4941, -143.548, 8.58674, 0.96", "-50.5841, -144.826, 8.60824, 0.52", "-50.6445, -145.467, 8.66722, 1.11", "-50.7392, -146.083, 8.76259, 1.11", "-50.9714, -146.992, 8.96857, 0.44", "-51.5014, -148.492, 9.40886, 3.32", "-52.1208, -149.878, 9.91607, 1.62", "-52.8194, -151.156, 10.4656, 0.29", "-53.5093, -152.195, 10.9146, 0.22", "-54.3091, -153.197, 11.3034, 0.22", "-54.8439, -153.762, 11.491, 0.22", "-55.4145, -154.287, 11.613, 1.77", "-56.04, -154.87, 11.6537, 2.06", "-56.9629, -155.818, 11.6084, 1.18", "-57.7192, -156.714, 11.5148, 0.29", "-58.153, -157.35, 11.4425, 0.29", "-58.589, -158.081, 11.3522, 0.22", "-58.9216, -158.753, 11.2749, 0.88", "-59.1323, -159.298, 11.2442, 1.47", "-59.3287, -159.964, 11.2586, 1.25", "-59.5385, -160.749, 11.2975, 0.88", "-59.705, -161.335, 11.3261, 0.59", "-60.0214, -162.232, 11.369, 0.37", "-60.4066, -163.102, 11.4086, 0.37", "-60.794, -163.846, 11.4181, 0.52", "-61.1802, -164.501, 11.4065, 0.74", "-61.6493, -165.216, 11.3713, 1.62", "-62.142, -165.908, 11.2996, 2.06", "-62.4535, -166.315, 11.2363, 1.69", "-63.2059, -167.283, 11.0436, 0.37", "-63.7295, -167.999, 10.9163, 0.29", "-64.1724, -168.654, 10.8245, 0.22", "-64.5685, -169.257, 10.7617, 1.03", "-64.825, -169.639, 10.7278, 1.25", "-65.2664, -170.253, 10.6871, 1.11", "-66.0967, -171.352, 10.6519, 0.22", "-66.8243, -172.301, 10.6368, 0.22", "-67.2119, -172.798, 10.6433, 1.03", "-67.6214, -173.311, 10.6713, 1.4", "-67.997, -173.762, 10.6932, 1.92" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-59.4694, 22.9506, -85.5123, 0.22", "-60.5393, 23.2462, -86.0351, 0.22", "-61.6452, 23.5431, -86.5448, 0.22", "-62.0035, 23.6356, -86.697, 0.74", "-62.8968, 23.8837, -87.0535, 1.03", "-63.7668, 24.1354, -87.4232, 0.22", "-63.8388, 24.1534, -87.453, 0.22", "-64.4932, 24.3403, -87.717, 0.22", "-65.1888, 24.5159, -87.9804, 0.66", "-65.5843, 24.6147, -88.1188, 0.81", "-66.8008, 24.9041, -88.4952, 0.22", "-67.784, 25.1428, -88.7644, 0.22", "-68.5848, 25.3445, -88.974, 0.29", "-68.6775, 25.3704, -88.9974, 0.29", "-69.276, 25.543, -89.1364, 0.29", "-70.2914, 25.8656, -89.3398, 1.4", "-70.8059, 26.0596, -89.4183, 2.21", "-71.2151, 26.2339, -89.4865, 2.14", "-72.5987, 26.752, -89.715, 0.22", "-72.6641, 26.7745, -89.7258, 0.22", "-73.397, 27.0113, -89.8427, 0.59", "-73.7481, 27.1232, -89.8934, 0.59", "-74.4944, 27.3465, -89.9989, 0.22", "-75.1915, 27.5404, -90.082, 0.22", "-75.2598, 27.555, -90.0872, 0.22", "-75.8421, 27.6677, -90.1389, 0.22", "-75.9106, 27.6791, -90.1479, 0.22", "-76.1692, 27.7288, -90.1873, 0.22", "-76.9028, 27.9141, -90.3258, 1.03", "-77.2507, 28.0107, -90.4066, 1.47", "-77.7471, 28.1368, -90.5342, 1.47", "-78.9356, 28.3699, -90.8674, 0.22", "-79.0019, 28.3806, -90.8869, 0.22", "-79.694, 28.4669, -91.1056, 0.22", "-80.0131, 28.4925, -91.2115, 0.22", "-80.1079, 28.4972, -91.2429, 0.22", "-80.6746, 28.4993, -91.4062, 0.22", "-81.3683, 28.4811, -91.6339, 0.22", "-81.4242, 28.4799, -91.6556, 0.22", "-82.239, 28.4836, -92.0385, 0.22", "-82.2921, 28.4845, -92.0664, 0.22", "-83.3861, 28.5134, -92.6997, 1.69", "-84.1926, 28.5537, -93.2081, 2.28", "-84.7507, 28.5841, -93.577, 2.28", "-86.4182, 28.6842, -94.693, 0.22", "-87.7552, 28.773, -95.6113, 0.22", "-88.347, 28.813, -96.0135, 0.88", "-89.2726, 28.8797, -96.6464, 0.22", "-89.3404, 28.8822, -96.6889, 0.22", "-89.7261, 28.8769, -96.9118, 0.88", "-89.7864, 28.8694, -96.9465, 0.88", "-90.1728, 28.7918, -97.1542, 0.88", "-90.2432, 28.7752, -97.1884, 0.88", "-91.5175, 28.4715, -97.7526, 0.37", "-92.2672, 28.3208, -98.0685, 1.4", "-93.8218, 28.0569, -98.682, 0.22", "-94.5133, 27.9529, -98.9341, 0.52", "-95.2099, 27.8519, -99.1624, 0.22", "-95.9282, 27.7555, -99.3672, 1.62", "-96.3851, 27.7056, -99.4657, 1.84", "-97.0367, 27.6301, -99.5671, 1.25", "-98.3283, 27.4481, -99.6865, 0.22", "-99.0705, 27.3084, -99.7314, 0.29", "-99.1387, 27.2925, -99.7332, 0.29", "-99.7105, 27.1478, -99.7486, 0.29", "-100.301, 26.9979, -99.7565, 0.22", "-100.879, 26.8703, -99.7538, 0.22", "-101.74, 26.7195, -99.7308, 0.81", "-102.181, 26.6544, -99.7385, 1.03", "-103.68, 26.4618, -99.804, 0.22", "-104.141, 26.4139, -99.8329, 1.18", "-104.808, 26.3856, -99.8849, 1.55", "-105.316, 26.3891, -99.9319, 1.92", "-107.238, 26.4952, -100.15, 0.22", "-108.039, 26.5945, -100.25, 0.66", "-108.683, 26.7204, -100.357, 0.81", "-109.612, 26.9611, -100.573, 0.22", "-109.676, 26.982, -100.592, 0.22", "-110.176, 27.2063, -100.825, 0.22", "-110.917, 27.605, -101.269, 0.22", "-111.57, 27.9278, -101.722, 1.03", "-112.091, 28.1407, -102.095, 1.62", "-112.568, 28.2705, -102.424, 1.84", "-114.423, 28.6095, -103.606, 0.22", "-115.119, 28.6854, -104.013, 0.29", "-115.587, 28.7083, -104.255, 0.88", "-116.135, 28.7164, -104.514, 0.88", "-117.358, 28.6505, -104.99, 0.22", "-118.267, 28.5422, -105.26, 1.62", "-118.625, 28.4671, -105.318, 1.92", "-119.207, 28.3371, -105.387, 1.69", "-119.683, 28.2328, -105.414, 1.25", "-121.248, 27.8855, -105.373, 0.22", "-121.315, 27.87, -105.364, 0.22", "-122.026, 27.6532, -105.234, 0.22", "-122.082, 27.6341, -105.223, 0.22", "-122.485, 27.4738, -105.149, 1.18", "-123.233, 27.1329, -105.022, 1.84", "-123.772, 26.864, -104.954, 2.06", "-125.362, 26.0836, -104.758, 0.22", "-125.434, 26.0497, -104.749, 0.22", "-126.321, 25.6378, -104.643, 0.22", "-126.773, 25.4278, -104.594, 0.37", "-126.924, 25.3611, -104.583, 0.37", "-127.227, 25.2413, -104.556, 0.37", "-128.262, 24.8431, -104.425, 0.22", "-128.336, 24.8139, -104.415, 0.22", "-128.79, 24.637, -104.352, 0.96", "-129.201, 24.4713, -104.301, 1.33", "-129.684, 24.2673, -104.25, 1.33", "-131.089, 23.6084, -104.098, 0.22", "-131.558, 23.3756, -104.05, 0.22", "-132.365, 22.9686, -103.969, 0.22", "-133.339, 22.4796, -103.873, 1.33", "-133.639, 22.3299, -103.845, 1.77", "-135.415, 21.4595, -103.695, 0.22", "-136.241, 21.0538, -103.636, 0.44", "-136.894, 20.7305, -103.593, 0.22", "-137.36, 20.5119, -103.553, 0.66", "-137.873, 20.282, -103.499, 0.74", "-137.963, 20.2437, -103.489, 0.74", "-138.878, 19.855, -103.399, 0.22", "-139.889, 19.3919, -103.294, 0.22", "-140.688, 18.9715, -103.23, 1.03", "-141.276, 18.6299, -103.196, 1.77", "-141.414, 18.5454, -103.191, 2.06", "-142.924, 17.5206, -103.217, 0.22", "-142.972, 17.4845, -103.221, 0.22", "-143.711, 16.8405, -103.327, 0.22", "-143.892, 16.683, -103.366, 1.03", "-144.246, 16.3966, -103.444, 1.03", "-145.013, 15.8324, -103.597, 0.22", "-145.078, 15.7892, -103.613, 0.22", "-145.593, 15.4584, -103.727, 0.22", "-146.145, 15.1152, -103.841, 0.22", "-146.211, 15.072, -103.854, 0.22", "-147.088, 14.4663, -104.016, 0.22", "-147.921, 13.9146, -104.156, 1.25", "-148.42, 13.5823, -104.244, 1.62", "-148.477, 13.5442, -104.254, 1.62", "-148.976, 13.2066, -104.345, 0.88", "-149.709, 12.6982, -104.473, 0.22", "-150.644, 12.0209, -104.624, 0.22", "-150.708, 11.9732, -104.629, 0.22", "-151.211, 11.5956, -104.661, 0.22", "-151.683, 11.217, -104.676, 1.03", "-152.076, 10.8584, -104.673, 1.18", "-152.337, 10.5754, -104.646, 1.03", "-153.014, 9.677, -104.507, 0.15", "-153.204, 9.4037, -104.465, 0.15", "-153.435, 9.03337, -104.408, 0.15", "-153.724, 8.53057, -104.336, 0.15", "-153.993, 8.03936, -104.278, 0.81", "-154.166, 7.70633, -104.249, 0.81", "-154.55, 6.84249, -104.184, 0.22", "-154.791, 6.27302, -104.135, 0.22", "-155.07, 5.65881, -104.079, 1.18", "-155.288, 5.21458, -104.032, 1.69", "-155.5, 4.79055, -103.985, 1.47", "-156.095, 3.64295, -103.834, 0.22", "-156.323, 3.20775, -103.762, 0.22", "-156.572, 2.76438, -103.684, 0.22", "-157.051, 1.99189, -103.541, 0.22", "-157.409, 1.48875, -103.485, 0.52", "-157.549, 1.30496, -103.48, 0.52", "-157.93, 0.76665, -103.527, 0.22", "-158.183, 0.38657, -103.598, 0.74", "-158.391, 0.0543898, -103.673, 0.74", "-159.038, -0.995827, -103.98, 0.22", "-159.408, -1.5924, -104.18, 0.22", "-160.178, -2.85486, -104.65, 1.99", "-160.591, -3.56785, -104.955, 2.43" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-59.4694, 22.9506, -85.5123, 0.22", "-61.2364, 24.6787, -86.2975, 0.22", "-61.516, 24.9498, -86.426, 0.37", "-62.3641, 25.718, -86.7986, 0.22", "-62.8405, 26.1353, -87.0017, 1.03", "-63.4758, 26.695, -87.2605, 1.4", "-64.7212, 27.7946, -87.7793, 0.22", "-64.7702, 27.8373, -87.8053, 0.22", "-65.2713, 28.2743, -88.1301, 0.22", "-65.3671, 28.3628, -88.2167, 0.22", "-65.8597, 28.8188, -88.7003, 0.22", "-66.3339, 29.2458, -89.1912, 0.44", "-67.3875, 30.1489, -90.2999, 1.18", "-67.5717, 30.3019, -90.4985, 1.47", "-68.9828, 31.3657, -92.0073, 0.22", "-69.5617, 31.7389, -92.5653, 0.22", "-70.2419, 32.1228, -93.1671, 1.25", "-70.9487, 32.4952, -93.7344, 2.21", "-71.6128, 32.8358, -94.2103, 2.06", "-72.9834, 33.5643, -95.2164, 0.22", "-73.8914, 34.0562, -95.8568, 0.22", "-73.9679, 34.102, -95.9146, 0.22", "-74.5492, 34.4738, -96.3606, 0.66", "-74.9729, 34.6945, -96.6894, 0.88", "-75.9126, 35.0568, -97.4004, 0.22", "-76.3695, 35.1932, -97.7569, 0.22", "-77.0843, 35.3385, -98.3327, 1.25", "-77.5843, 35.3971, -98.7344, 1.4", "-79.6283, 35.4911, -100.35, 0.22", "-80.546, 35.5242, -101.064, 1.84", "-80.6018, 35.5259, -101.106, 1.84", "-81.2232, 35.5664, -101.586, 1.84", "-82.6506, 35.7414, -102.689, 0.22", "-82.7058, 35.7531, -102.73, 0.22", "-83.5212, 36.0659, -103.332, 0.22", "-83.6043, 36.0991, -103.401, 0.22", "-84.0107, 36.2835, -103.737, 0.22", "-84.0539, 36.3059, -103.772, 0.22", "-84.5772, 36.5846, -104.177, 0.96", "-85.2405, 36.9155, -104.714, 0.96", "-86.2379, 37.3559, -105.513, 0.22", "-87.0336, 37.7166, -106.142, 0.22", "-87.0848, 37.7416, -106.183, 0.22", "-87.9079, 38.1596, -106.782, 1.55", "-88.4869, 38.4675, -107.173, 1.92", "-89.0014, 38.7271, -107.502, 1.92", "-89.0548, 38.7516, -107.54, 1.92", "-90.8574, 39.4849, -108.962, 0.22", "-91.4744, 39.7094, -109.523, 0.22", "-91.5223, 39.7254, -109.572, 0.22", "-92.4052, 39.9735, -110.486, 1.55", "-93.4697, 40.2264, -111.646, 1.77", "-93.5174, 40.2359, -111.697, 1.77", "-95.2907, 40.5046, -113.435, 0.22", "-95.3346, 40.5113, -113.475, 0.22", "-96.0294, 40.626, -114.005, 0.22", "-96.0893, 40.6368, -114.04, 0.22", "-97.2118, 40.8598, -114.562, 0.22", "-98.1849, 41.0701, -114.975, 0.22", "-98.2396, 41.0828, -114.996, 0.22", "-99.1041, 41.2949, -115.365, 0.96", "-99.1659, 41.3123, -115.394, 0.96", "-100.674, 41.7207, -116.052, 0.22", "-101.558, 41.96, -116.424, 1.4", "-102.297, 42.1765, -116.716, 2.06", "-102.82, 42.3388, -116.899, 2.36", "-104.829, 43.0015, -117.528, 0.22", "-105.994, 43.4088, -117.823, 0.22", "-106.637, 43.6526, -117.935, 0.88", "-107.06, 43.8291, -117.993, 1.18", "-108.035, 44.2657, -118.089, 0.22", "-108.107, 44.2993, -118.096, 0.22", "-108.866, 44.6903, -118.163, 0.22", "-108.934, 44.7301, -118.177, 0.22", "-109.551, 45.093, -118.345, 0.22", "-109.601, 45.1219, -118.362, 0.22", "-110.36, 45.5225, -118.727, 0.59", "-110.963, 45.813, -119.033, 0.22", "-112.077, 46.3309, -119.613, 1.55", "-112.537, 46.5402, -119.844, 2.21", "-113.512, 46.9827, -120.311, 2.06", "-115.436, 47.834, -121.156, 0.52", "-116.317, 48.234, -121.506, 0.52", "-116.762, 48.4409, -121.665, 0.52", "-117.486, 48.7815, -121.877, 0.22", "-118.174, 49.1359, -122.051, 0.66", "-118.791, 49.4975, -122.161, 0.88", "-119.78, 50.1885, -122.265, 0.22", "-120.277, 50.5701, -122.329, 0.88", "-120.549, 50.8009, -122.378, 0.88", "-121.245, 51.4515, -122.538, 0.22", "-121.737, 51.9069, -122.659, 0.22", "-122.165, 52.2958, -122.763, 0.88", "-122.684, 52.7215, -122.874, 1.18", "-123.704, 53.4761, -123.079, 0.22", "-123.762, 53.5143, -123.089, 0.22", "-124.863, 54.1162, -123.273, 0.22", "-125.611, 54.4802, -123.392, 0.22", "-126.493, 54.8729, -123.554, 1.84", "-127.149, 55.1336, -123.743, 2.36", "-127.742, 55.3337, -123.952, 1.99", "-129.292, 55.7828, -124.582, 0.15", "-129.841, 55.9179, -124.841, 0.59", "-130.629, 56.0745, -125.239, 0.74", "-132.329, 56.37, -126.134, 0.29", "-133.112, 56.4913, -126.546, 0.22", "-133.931, 56.6023, -126.984, 0.22", "-135.104, 56.704, -127.588, 1.47", "-135.167, 56.7083, -127.618, 1.47", "-135.661, 56.751, -127.819, 1.84", "-135.994, 56.8026, -127.947, 1.77", "-136.692, 56.9449, -128.254, 1.62", "-138.205, 57.2615, -128.942, 0.22", "-138.84, 57.3953, -129.218, 1.03", "-139.375, 57.4991, -129.435, 1.25", "-140.998, 57.8, -130.04, 0.22", "-141.138, 57.8274, -130.086, 0.22", "-141.952, 58.0021, -130.302, 0.22", "-142.745, 58.1898, -130.478, 0.22", "-143.563, 58.4011, -130.641, 0.22", "-144.093, 58.5766, -130.748, 0.96", "-144.598, 58.7862, -130.845, 1.11", "-145.79, 59.37, -131.116, 0.15", "-146.846, 59.9632, -131.386, 1.77", "-147.375, 60.2708, -131.548, 1.99", "-148.889, 61.2678, -132.064, 0.22", "-149.416, 61.6381, -132.261, 0.22", "-150.025, 62.084, -132.5, 1.03", "-150.4, 62.3667, -132.644, 1.03", "-151.815, 63.4465, -133.204, 0.22", "-152.546, 63.9876, -133.486, 0.22", "-153.285, 64.5153, -133.751, 0.96", "-153.823, 64.9097, -133.946, 1.33", "-154.502, 65.4233, -134.195, 0.66", "-155.32, 66.0646, -134.505, 0.22", "-155.784, 66.4427, -134.676, 0.88", "-156.284, 66.8297, -134.871, 0.88", "-156.992, 67.4136, -135.163, 0.22", "-157.486, 67.8801, -135.422, 0.22", "-157.654, 68.0601, -135.523, 0.22", "-157.983, 68.4353, -135.728, 0.22", "-157.983, 68.4353, -135.728, 0.81", "-158.2, 68.7286, -135.865, 0.81", "-159.058, 69.8418, -136.392, 0.22", "-159.453, 70.3453, -136.646, 1.33", "-159.605, 70.5388, -136.747, 1.62", "-159.686, 70.6414, -136.798, 1.55", "-160.069, 71.1557, -137.028, 1.4", "-161.017, 72.4291, -137.62, 0.22", "-161.051, 72.4738, -137.641, 0.22", "-161.554, 73.1225, -137.967, 0.22", "-161.922, 73.6041, -138.221, 0.37", "-162.47, 74.3237, -138.639, 0.22", "-163.141, 75.2254, -139.201, 1.25", "-163.457, 75.6339, -139.464, 1.4", "-163.525, 75.7138, -139.522, 1.4", "-164.27, 76.4877, -140.163, 0.22", "-164.967, 77.0784, -140.769, 0.22", "-165.008, 77.1069, -140.802, 0.22", "-165.961, 77.6966, -141.503, 0.22", "-166.762, 78.1316, -142.049, 1.69", "-167.432, 78.4474, -142.453, 1.84", "-168.811, 78.9954, -143.18, 0.15", "-169.664, 79.3076, -143.583, 0.15", "-169.733, 79.335, -143.611, 0.15", "-170.475, 79.6681, -143.843, 0.15", "-171.187, 80.0278, -144.014, 1.18", "-171.827, 80.3827, -144.128, 1.47", "-172.274, 80.6616, -144.187, 1.55", "-173.967, 81.7858, -144.367, 0.22", "-175.366, 82.7487, -144.484, 0.22", "-176.146, 83.3047, -144.53, 1.47", "-176.784, 83.7694, -144.555, 1.77", "-177.411, 84.2326, -144.563, 1.69", "-178.658, 85.2021, -144.549, 0.22", "-179.355, 85.7731, -144.533, 0.74", "-179.401, 85.8116, -144.532, 0.74", "-179.837, 86.19, -144.506, 1.03", "-179.883, 86.2283, -144.501, 1.03", "-180.971, 86.9961, -144.327, 0.22", "-181.031, 87.0304, -144.316, 0.22", "-181.69, 87.3414, -144.187, 0.22", "-181.754, 87.3672, -144.173, 0.22", "-182.863, 87.756, -143.905, 0.22", "-183.855, 88.0908, -143.613, 0.96", "-184.214, 88.2146, -143.492, 1.25", "-184.677, 88.4024, -143.331, 1.25", "-186.057, 89.0472, -142.846, 0.22", "-186.699, 89.3972, -142.597, 0.52", "-187.584, 89.9529, -142.239, 0.22", "-188.263, 90.4434, -141.924, 0.22", "-188.837, 90.8942, -141.651, 0.74", "-189.209, 91.2231, -141.473, 0.96", "-190.077, 92.1143, -141.065, 0.22", "-190.458, 92.538, -140.893, 0.22", "-191.034, 93.2018, -140.655, 1.18", "-191.396, 93.6154, -140.512, 1.55", "-191.788, 94.0549, -140.367, 1.84", "-193.187, 95.5532, -139.918, 0.22", "-193.618, 95.9924, -139.81, 0.52", "-194.272, 96.6437, -139.643, 0.22", "-194.929, 97.2738, -139.486, 0.22", "-195.616, 97.9245, -139.332, 1.11", "-195.94, 98.2214, -139.267, 1.47", "-196.632, 98.8448, -139.153, 1.69", "-197.772, 99.8945, -138.968, 0.22", "-198.219, 100.338, -138.908, 0.22", "-198.711, 100.871, -138.852, 0.81", "-198.906, 101.097, -138.837, 1.18", "-198.957, 101.159, -138.834, 1.18", "-199.17, 101.411, -138.835, 0.88", "-199.844, 102.239, -138.893, 0.22", "-200.405, 102.993, -138.937, 0.22", "-200.444, 103.05, -138.938, 0.22", "-200.759, 103.531, -138.933, 0.74", "-200.892, 103.756, -138.926, 0.74", "-201.271, 104.447, -138.89, 0.22", "-201.654, 105.159, -138.841, 0.22", "-202.064, 105.996, -138.788, 1.25", "-202.35, 106.604, -138.737, 1.47", "-202.889, 107.776, -138.625, 0.22", "-202.934, 107.871, -138.615, 0.22", "-203.455, 108.943, -138.499, 0.22", "-203.858, 109.8, -138.395, 0.52", "-204.212, 110.654, -138.293, 0.22", "-204.344, 110.99, -138.251, 0.22", "-204.557, 111.473, -138.18, 0.81", "-204.695, 111.77, -138.135, 0.81", "-205.268, 112.901, -137.965, 0.22", "-205.716, 113.652, -137.85, 1.33", "-206.162, 114.367, -137.751, 1.62", "-207.015, 115.742, -137.565, 0.22", "-207.453, 116.451, -137.473, 0.88", "-207.799, 117.006, -137.404, 0.88", "-208.432, 117.987, -137.296, 0.22", "-208.87, 118.669, -137.225, 0.22", "-209.352, 119.488, -137.157, 0.96", "-209.495, 119.752, -137.143, 1.33", "-209.561, 119.875, -137.138, 1.33", "-209.713, 120.163, -137.132, 1.33", "-210.319, 121.278, -137.126, 0.22", "-210.649, 121.801, -137.162, 0.44", "-210.714, 121.884, -137.175, 0.44", "-211.219, 122.473, -137.302, 0.22", "-211.576, 122.854, -137.405, 0.81", "-211.923, 123.185, -137.53, 1.25", "-212.681, 123.833, -137.864, 0.66", "-213.31, 124.299, -138.146, 0.22", "-213.648, 124.523, -138.289, 0.44", "-213.98, 124.726, -138.422, 0.44", "-214.802, 125.248, -138.729, 0.22", "-214.906, 125.317, -138.765, 0.22", "-215.916, 126.078, -139.041, 0.22", "-216.457, 126.534, -139.185, 1.18", "-216.799, 126.845, -139.268, 1.33", "-217.439, 127.467, -139.399, 1.11", "-217.479, 127.51, -139.405, 1.11", "-218.34, 128.484, -139.507, 0.22", "-218.385, 128.538, -139.511, 0.22", "-218.88, 129.156, -139.558, 0.22", "-219.325, 129.73, -139.597, 0.22", "-219.899, 130.486, -139.641, 1.25", "-220.121, 130.786, -139.658, 1.55", "-220.458, 131.249, -139.685, 1.69", "-220.814, 131.734, -139.713, 0.96", "-221.763, 132.988, -139.79, 0.22", "-221.816, 133.049, -139.793, 0.22", "-222.04, 133.279, -139.802, 0.22", "-222.378, 133.607, -139.809, 0.59", "-222.656, 133.855, -139.812, 0.88", "-223.013, 134.158, -139.813, 0.88", "-224.261, 135.187, -139.831, 0.22", "-224.371, 135.288, -139.835, 0.22", "-224.974, 135.943, -139.837, 0.22", "-225.012, 135.991, -139.837, 0.22", "-225.46, 136.603, -139.821, 0.88", "-225.713, 136.963, -139.786, 1.25", "-226.079, 137.512, -139.704, 1.55", "-226.939, 138.687, -139.482, 0.22", "-226.982, 138.741, -139.469, 0.22", "-227.641, 139.544, -139.262, 0.22", "-228.463, 140.521, -138.925, 0.22", "-228.507, 140.572, -138.905, 0.22", "-228.984, 141.113, -138.675, 0.59", "-229.078, 141.219, -138.628, 0.59", "-229.302, 141.48, -138.511, 0.59", "-230.244, 142.635, -137.977, 0.15", "-230.765, 143.352, -137.683, 1.18", "-231.368, 144.202, -137.318, 1.4" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "59.0175, 54.3255, -25.2989, 0.22", "60.3302, 55.8002, -25.511, 0.22", "60.9319, 56.4506, -25.6001, 0.81", "61.6297, 57.1429, -25.7113, 0.22", "62.1675, 57.6488, -25.7974, 0.22", "62.5034, 57.9371, -25.8481, 0.22", "63.0812, 58.3665, -25.9587, 0.22", "63.1426, 58.3977, -25.9712, 0.22", "64.1854, 58.855, -26.2109, 1.4", "64.5204, 58.9954, -26.2915, 1.77", "65.1803, 59.2702, -26.4553, 1.18", "66.7705, 59.9149, -26.8707, 0.22", "67.3815, 60.1564, -27.0334, 0.22", "68.2746, 60.5128, -27.2658, 0.22", "68.6519, 60.6497, -27.3499, 0.88", "69.1552, 60.8239, -27.4439, 0.88", "70.1802, 61.1843, -27.5198, 0.29", "70.6629, 61.3463, -27.4916, 0.52", "71.0373, 61.4834, -27.4705, 0.52", "71.9465, 61.8078, -27.4163, 0.22", "72.411, 61.9698, -27.4135, 0.22", "73.9214, 62.4961, -27.4615, 1.84", "74.2694, 62.6199, -27.4833, 2.21", "75.9496, 63.2399, -27.7099, 0.22", "76.5772, 63.4785, -27.8533, 0.22", "77.4297, 63.8178, -28.1248, 1.03", "77.4915, 63.8402, -28.149, 1.03", "77.8958, 63.9735, -28.3277, 1.11", "79.2097, 64.3794, -28.8715, 0.22", "80.5081, 64.7357, -29.3581, 0.22", "80.6173, 64.7661, -29.3976, 0.22", "81.3006, 64.9647, -29.6689, 0.29", "82.4067, 65.2884, -30.1765, 0.29", "83.5297, 65.6181, -30.7572, 1.55", "83.7145, 65.6739, -30.8626, 2.06", "83.7734, 65.6912, -30.8963, 2.06", "85.3641, 66.1543, -31.7929, 0.66", "86.3591, 66.4819, -32.3635, 0.22", "86.4169, 66.5018, -32.3976, 0.52", "86.5964, 66.5608, -32.494, 0.52", "87.6462, 66.9083, -32.9982, 0.22", "88.1835, 67.0835, -33.2173, 0.37", "89.5402, 67.5203, -33.6653, 1.77", "89.7413, 67.5848, -33.727, 1.99", "92.161, 68.3775, -34.4128, 0.22", "92.7415, 68.5699, -34.5644, 0.52", "93.811, 68.9275, -34.812, 0.22", "94.6825, 69.2155, -34.9868, 0.22", "95.7833, 69.5505, -35.1549, 0.22", "96.4657, 69.7594, -35.2376, 0.96", "96.9088, 69.8971, -35.2666, 1.11", "98.3871, 70.3386, -35.3634, 0.22", "98.4636, 70.3616, -35.368, 0.22", "99.4488, 70.6566, -35.4243, 0.22", "99.5233, 70.6839, -35.435, 0.22", "100.291, 71.0495, -35.6195, 0.59", "100.508, 71.185, -35.6927, 0.96", "100.933, 71.4957, -35.8698, 1.25", "101.231, 71.7191, -36.0019, 1.25", "102.888, 72.9686, -36.8053, 0.22", "103.617, 73.488, -37.1617, 0.22", "104.359, 73.9907, -37.5381, 0.66", "104.976, 74.3838, -37.8513, 0.66", "105.439, 74.67, -38.0775, 0.29", "106.135, 75.0803, -38.3842, 1.25", "106.506, 75.2746, -38.5176, 1.84", "107.795, 75.9477, -38.9792, 0.22", "107.852, 75.9821, -38.9994, 0.22", "108.643, 76.5409, -39.3764, 0.88", "109.015, 76.8247, -39.612, 0.88", "109.113, 76.9072, -39.6899, 0.88", "110.062, 77.733, -40.5497, 0.22", "110.505, 78.1252, -40.9742, 0.88", "111.561, 79.065, -42.0127, 0.66", "112.278, 79.7018, -42.751, 1.11", "113.383, 80.7128, -43.9088, 0.22", "113.423, 80.751, -43.9512, 0.22", "113.93, 81.2503, -44.4782, 0.29", "114.05, 81.3759, -44.6002, 0.29", "114.09, 81.4234, -44.6319, 0.29", "114.752, 82.2454, -45.0842, 0.22", "114.786, 82.2872, -45.11, 0.22", "114.964, 82.5515, -45.3495, 0.81", "114.989, 82.5976, -45.3958, 0.81", "115.252, 83.1444, -45.9684, 0.22", "115.687, 84.0636, -46.9412, 1.47", "115.989, 84.6861, -47.5954, 1.69", "116.888, 86.3849, -49.4367, 0.22", "117.08, 86.7386, -49.8192, 0.44", "117.625, 87.7107, -50.8414, 0.22", "118.106, 88.5618, -51.7534, 1.4", "118.326, 88.945, -52.1236, 1.62", "119.168, 90.3147, -53.3096, 0.29", "119.801, 91.2661, -54.0568, 0.22", "120.59, 92.427, -54.9678, 2.06", "121.493, 93.7856, -55.9934, 1.18", "122.432, 95.2693, -57.0816, 0.22", "122.777, 95.841, -57.4846, 0.59", "122.808, 95.895, -57.5167, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "59.0175, 54.3255, -25.2989, 0.22", "60.9693, 53.591, -25.3475, 0.22", "62.0282, 53.2293, -25.393, 0.22", "62.6605, 53.04, -25.4727, 0.88", "62.8691, 52.9782, -25.5056, 0.88", "64.0526, 52.6211, -25.7559, 0.22", "65.1294, 52.2875, -26.0444, 1.69", "65.3995, 52.2112, -26.1391, 1.99", "67.4086, 51.5321, -26.8735, 0.22", "67.6027, 51.4561, -26.9439, 0.37", "68.807, 50.9596, -27.4061, 0.22", "69.6198, 50.5969, -27.747, 1.47", "69.9797, 50.4155, -27.8981, 2.06", "71.21, 49.7313, -28.3873, 0.22", "71.6704, 49.4151, -28.5235, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.594, 219.755, 0.718706, 0.22", "-19.8009, 221.247, 1.03004, 0.22", "-20.3571, 221.915, 1.20995, 0.22", "-20.6455, 222.275, 1.3182, 0.74", "-20.95, 222.665, 1.49579, 0.88", "-21.0354, 222.777, 1.55507, 0.88", "-21.646, 223.531, 1.99768, 0.22", "-22.0455, 223.863, 2.31619, 0.59", "-22.4128, 224.107, 2.6096, 0.74", "-23.4759, 224.68, 3.41805, 0.22", "-23.5279, 224.708, 3.45668, 0.22", "-23.9796, 224.917, 3.7781, 0.81", "-25.169, 225.385, 4.57965, 0.22", "-25.6106, 225.514, 4.85934, 0.22", "-26.4326, 225.689, 5.32269, 0.22", "-27.274, 225.818, 5.69477, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-18.594, 219.755, 0.718706, 0.22", "-18.4369, 221.639, 0.417177, 0.22", "-18.4313, 221.708, 0.404323, 0.22", "-18.3843, 222.508, 0.237211, 0.22", "-18.3466, 223.299, 0.0604703, 0.81", "-18.3246, 224.014, -0.10447, 1.11", "-18.3067, 225.092, -0.35918, 0.22", "-18.2998, 225.863, -0.565278, 0.22", "-18.3083, 226.37, -0.707382, 0.22", "-18.3124, 226.428, -0.724809, 0.22", "-18.4302, 227.49, -1.05861, 1.55", "-18.4727, 227.919, -1.19974, 2.21" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "22.821, -84.0475, -95.7191, 1.18", "25.9385, -85.3346, -101.043, 1.18", "27.7286, -86.1684, -104.002, 0.52", "27.8922, -86.2491, -104.267, 1.11", "28.9687, -86.7663, -106.141, 1.47", "29.8145, -87.1726, -107.614, 1.55", "31.0354, -87.7592, -109.74, 0.59", "31.5841, -88.0665, -110.652, 0.59", "31.9829, -88.3117, -111.4, 0.96", "33.4734, -89.2229, -114.417, 0.66" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "22.821, -84.0475, -95.7191, 0.29", "24.9073, -85.8184, -98.7681, 0.29", "25.3692, -86.2105, -99.4432, 0.29", "25.7941, -86.5712, -100.064, 0.37", "26.5865, -87.2438, -101.222, 0.52" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-160.591, -3.56785, -104.955, 0.22", "-161.35, -4.86837, -106.308, 0.22", "-161.42, -4.99674, -106.429, 0.22", "-161.868, -5.90233, -107.263, 0.81", "-161.887, -5.94359, -107.303, 0.81", "-162.408, -6.98294, -108.329, 0.81", "-162.917, -7.8918, -109.244, 0.15", "-163.337, -8.56721, -109.928, 0.96", "-163.907, -9.47234, -110.826, 2.21", "-164.687, -10.7199, -112.087, 2.36", "-165.638, -12.2414, -113.612, 0.22", "-166.248, -13.2564, -114.647, 0.22", "-166.59, -13.8353, -115.267, 1.4", "-166.729, -14.0761, -115.521, 1.77", "-167.794, -15.9878, -117.496, 0.22", "-168.294, -16.9481, -118.453, 0.37", "-168.862, -18.2111, -119.646, 0.96", "-169.146, -18.8444, -120.25, 0.88", "-169.493, -19.5517, -120.937, 0.22", "-169.519, -19.5985, -120.983, 0.22", "-169.729, -19.9047, -121.271, 0.96", "-170.121, -20.4002, -121.745, 1.11", "-171.357, -21.8221, -123.034, 0.22", "-171.911, -22.4328, -123.594, 0.22", "-172.507, -23.0714, -124.169, 1.25", "-172.731, -23.2987, -124.372, 1.55", "-173.496, -24.0275, -125.017, 0.29", "-173.886, -24.3522, -125.303, 0.22", "-174.157, -24.5492, -125.452, 0.52", "-175.197, -25.1905, -125.971, 0.22", "-175.962, -25.562, -126.354, 1.25", "-176.242, -25.6695, -126.484, 1.33", "-177.282, -25.9582, -126.918, 0.59", "-177.894, -26.1003, -127.165, 0.15", "-178.621, -26.2426, -127.431, 0.44", "-180.244, -26.4714, -127.975, 0.22", "-181.12, -26.563, -128.256, 1.25", "-181.572, -26.5985, -128.395, 1.55", "-183.414, -26.7028, -128.929, 0.22", "-184.467, -26.745, -129.254, 0.22", "-185.874, -26.7767, -129.71, 0.29", "-187.215, -26.7802, -130.169, 0.22", "-187.419, -26.7771, -130.251, 0.81", "-187.825, -26.7643, -130.422, 1.03", "-189.368, -26.6674, -131.081, 0.22", "-190.151, -26.6182, -131.443, 1.18", "-190.7, -26.5926, -131.699, 1.47", "-191.615, -26.5421, -132.106, 1.11", "-192.837, -26.4329, -132.618, 0.22", "-193.179, -26.3845, -132.751, 0.74", "-193.742, -26.2791, -132.935, 0.74", "-194.59, -26.0516, -133.206, 0.22", "-195.734, -25.6555, -133.556, 0.22", "-196.209, -25.4538, -133.683, 0.22", "-196.964, -25.1002, -133.892, 1.33", "-197.292, -24.9374, -133.979, 1.47", "-198.411, -24.3481, -134.244, 0.22", "-199.197, -23.8962, -134.435, 0.37", "-199.869, -23.5102, -134.612, 0.22", "-200.662, -23.0899, -134.813, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-160.591, -3.56785, -104.955, 0.22", "-161.693, -2.59905, -105.253, 0.22", "-161.739, -2.56283, -105.266, 0.22", "-162.633, -1.98552, -105.555, 0.22", "-162.693, -1.95398, -105.574, 0.22", "-163.585, -1.60526, -105.801, 0.22", "-163.898, -1.51165, -105.876, 0.96", "-164.484, -1.41316, -105.995, 0.96", "-165.3, -1.35638, -106.164, 0.52", "-166.63, -1.36848, -106.446, 0.22", "-168.072, -1.47, -106.744, 0.22", "-168.925, -1.57947, -106.912, 0.96", "-169.379, -1.64447, -106.99, 1.11", "-170.826, -1.85777, -107.205, 0.22", "-170.894, -1.86869, -107.216, 0.22", "-171.792, -2.03746, -107.372, 0.22", "-172.44, -2.15424, -107.492, 0.22", "-173.309, -2.28836, -107.645, 0.74", "-174.28, -2.40506, -107.815, 0.22", "-174.979, -2.44762, -107.924, 0.88", "-175.195, -2.4584, -107.962, 1.11" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_25", "dend_0", "dend_64", "dend_49", "dend_41", "dend_26", "dend_10", "dend_1", "dend_63", "dend_50", "dend_45", "dend_42", "dend_30", "dend_27", "dend_20", "dend_11", "dend_9", "dend_2", "dend_60", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_15", "dend_12", "dend_8", "dend_3", "dend_62", "dend_61", "dend_55", "dend_52", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_17", "dend_16", "dend_14", "dend_13", "dend_5", "dend_4", "dend_57", "dend_56", "dend_54", "dend_53", "dend_37", "dend_36", "dend_19", "dend_18", "dend_7", "dend_6", "dend_59", "dend_58", "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_25", "dend_0", "dend_64", "dend_49", "dend_41", "dend_26", "dend_10", "dend_1", "dend_63", "dend_50", "dend_45", "dend_42", "dend_30", "dend_27", "dend_20", "dend_11", "dend_9", "dend_2", "dend_60", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_15", "dend_12", "dend_8", "dend_3", "dend_62", "dend_61", "dend_55", "dend_52", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_17", "dend_16", "dend_14", "dend_13", "dend_5", "dend_4", "dend_57", "dend_56", "dend_54", "dend_53", "dend_37", "dend_36", "dend_19", "dend_18", "dend_7", "dend_6", "dend_59", "dend_58", "dend_39", "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_MC_5fa0a62bd0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_64, id: dend_64, parent: dend_48
create dend_64
public dend_64
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_63, id: dend_63, parent: dend_49
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_50
create dend_60
public dend_60
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_25, dend_0, dend_64, dend_49, dend_41, dend_26, dend_10, dend_1, dend_63, dend_50, dend_45, dend_42, dend_30, dend_27, dend_20, dend_11, dend_9, dend_2, dend_60, dend_51, dend_47, dend_46, dend_44, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_15, dend_12, dend_8, dend_3, dend_62, dend_61, dend_55, dend_52, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_17, dend_16, dend_14, dend_13, dend_5, dend_4, dend_57, dend_56, dend_54, dend_53, dend_37, dend_36, dend_19, dend_18, dend_7, dend_6, dend_59, dend_58, dend_39, dend_38]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_25, dend_0, dend_64, dend_49, dend_41, dend_26, dend_10, dend_1, dend_63, dend_50, dend_45, dend_42, dend_30, dend_27, dend_20, dend_11, dend_9, dend_2, dend_60, dend_51, dend_47, dend_46, dend_44, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_15, dend_12, dend_8, dend_3, dend_62, dend_61, dend_55, dend_52, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_17, dend_16, dend_14, dend_13, dend_5, dend_4, dend_57, dend_56, dend_54, dend_53, dend_37, dend_36, dend_19, dend_18, dend_7, dend_6, dend_59, dend_58, dend_39, dend_38]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.45000033000065803)
    connect dend_25(0), soma_0(0.45000033000065803)
    connect dend_0(0), soma_0(0.45000033000065803)
    connect axon_0(0), soma_0(1.0)
    connect dend_64(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_63(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.990274, 10.0329, -2.04532, 6.5955 ) }
    soma_0 { pt3dadd( -0.916974, 8.69695, -1.77222, 11.7827 ) }
    soma_0 { pt3dadd( -0.843674, 7.361, -1.49912, 14.5661 ) }
    soma_0 { pt3dadd( -0.770374, 6.02505, -1.22601, 15.5703 ) }
    soma_0 { pt3dadd( -0.697074, 4.6891, -0.952908, 16.4465 ) }
    soma_0 { pt3dadd( -0.623774, 3.35314, -0.679804, 17.1803 ) }
    soma_0 { pt3dadd( -0.550474, 2.01719, -0.4067, 17.9244 ) }
    soma_0 { pt3dadd( -0.477174, 0.681242, -0.133596, 18.3543 ) }
    soma_0 { pt3dadd( -0.403873, -0.654708, 0.139508, 18.5081 ) }
    soma_0 { pt3dadd( -0.330573, -1.99066, 0.412612, 18.2649 ) }
    soma_0 { pt3dadd( -0.257273, -3.32661, 0.685717, 18.0213 ) }
    soma_0 { pt3dadd( -0.183973, -4.66256, 0.958821, 17.7017 ) }
    soma_0 { pt3dadd( -0.110673, -5.99851, 1.23192, 17.3049 ) }
    soma_0 { pt3dadd( -0.0373732, -7.33446, 1.50503, 16.1306 ) }
    soma_0 { pt3dadd( 0.0359269, -8.67041, 1.77813, 14.7151 ) }
    soma_0 { pt3dadd( 0.109227, -10.0064, 2.05124, 13.0272 ) }
    soma_0 { pt3dadd( 0.182527, -11.3423, 2.32434, 11.0913 ) }
    soma_0 { pt3dadd( 0.255827, -12.6783, 2.59744, 9.26593 ) }
    soma_0 { pt3dadd( 0.329127, -14.0142, 2.87055, 7.34863 ) }
    soma_0 { pt3dadd( 0.402427, -15.3502, 3.14365, 4.67215 ) }
    soma_0 { pt3dadd( 0.475727, -16.6861, 3.41676, 2.80931 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 0.496558, -17.1866, 6.73932, 2.8 ) }
    dend_48 { pt3dadd( 0.496558, -17.1866, 6.73932, 2.8 ) }
    dend_48 { pt3dadd( 0.497997, -19.0015, 6.98681, 2.58 ) }
    dend_48 { pt3dadd( 0.499606, -21.0283, 7.26319, 2.58 ) }
    dend_48 { pt3dadd( 0.500726, -22.4416, 7.45591, 3.24 ) }
    dend_48 { pt3dadd( 0.501911, -23.9338, 7.65939, 3.98 ) }
    dend_48 { pt3dadd( 0.502751, -24.9922, 7.80371, 4.13 ) }
    dend_48 { pt3dadd( 0.503258, -25.9593, 7.94828, 4.05 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.30344, 1.60341, -17.4507, 1.77 ) }
    dend_25 { pt3dadd( -4.36381, 2.281, -18.0845, 1.77 ) }
    dend_25 { pt3dadd( -4.47921, 3.57632, -19.2959, 2.06 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.34656, 8.53341, -2.63068, 3.68 ) }
    dend_0 { pt3dadd( 4.34656, 8.53341, -2.63068, 3.68 ) }
    dend_0 { pt3dadd( 4.82339, 10.0982, -3.23665, 2.73 ) }
    dend_0 { pt3dadd( 5.23795, 11.8044, -3.78444, 2.73 ) }
    dend_0 { pt3dadd( 5.25147, 11.8601, -3.80231, 2.73 ) }
    dend_0 { pt3dadd( 5.66414, 13.5585, -4.34762, 2.43 ) }
    dend_0 { pt3dadd( 5.94183, 14.7014, -4.71455, 2.21 ) }
    dend_0 { pt3dadd( 6.31587, 16.4081, -5.23243, 2.06 ) }
    dend_0 { pt3dadd( 6.48921, 17.5105, -5.51624, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 41/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.475727, -16.6861, 3.41676, 0.672765 ) }
    axon_0 { pt3dadd( 1.2975, -31.6636, 3.41676, 0.672765 ) }
    axon_0 { pt3dadd( 2.11928, -46.641, 3.41676, 0.672765 ) }
    // Section: dend_64, id: dend_64, parent: dend_48 (entry count 44/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 0.503258, -25.9593, 7.94828, 0.74 ) }
    dend_64 { pt3dadd( -2.39052, -27.5699, 8.7876, 0.74 ) }
    dend_64 { pt3dadd( -3.66791, -28.2961, 9.03483, 0.74 ) }
    dend_64 { pt3dadd( -4.6261, -28.8243, 9.16305, 1.33 ) }
    dend_64 { pt3dadd( -5.31468, -29.2, 9.235, 1.62 ) }
    dend_64 { pt3dadd( -6.09769, -29.6221, 9.27673, 1.92 ) }
    dend_64 { pt3dadd( -7.34607, -30.2878, 9.29821, 1.62 ) }
    dend_64 { pt3dadd( -8.49356, -30.93, 9.09122, 0.96 ) }
    dend_64 { pt3dadd( -9.33729, -31.4042, 9.00549, 0.81 ) }
    dend_64 { pt3dadd( -9.39932, -31.4366, 9.00811, 0.81 ) }
    dend_64 { pt3dadd( -10.3995, -31.9043, 9.19848, 1.62 ) }
    dend_64 { pt3dadd( -11.1146, -32.1812, 9.47129, 1.99 ) }
    dend_64 { pt3dadd( -12.0868, -32.4589, 10.05, 1.99 ) }
    dend_64 { pt3dadd( -14.3876, -32.9923, 11.8337, 0.88 ) }
    dend_64 { pt3dadd( -15.3629, -33.1486, 12.6998, 0.66 ) }
    dend_64 { pt3dadd( -15.9425, -33.202, 13.2632, 0.66 ) }
    dend_64 { pt3dadd( -16.7079, -33.2013, 14.0804, 1.03 ) }
    dend_64 { pt3dadd( -17.2304, -33.1347, 14.6796, 1.03 ) }
    dend_64 { pt3dadd( -17.2744, -33.1264, 14.7334, 1.03 ) }
    dend_64 { pt3dadd( -17.77, -33.0473, 15.2652, 1.03 ) }
    dend_64 { pt3dadd( -17.8107, -33.0453, 15.3092, 1.03 ) }
    dend_64 { pt3dadd( -18.2576, -33.0895, 15.8156, 1.03 ) }
    dend_64 { pt3dadd( -19.4448, -33.312, 17.1561, 0.74 ) }
    dend_64 { pt3dadd( -20.5012, -33.5896, 18.3425, 0.44 ) }
    dend_64 { pt3dadd( -20.9374, -33.7294, 18.8466, 0.81 ) }
    dend_64 { pt3dadd( -21.1651, -33.8259, 19.1246, 0.81 ) }
    dend_64 { pt3dadd( -21.5525, -34.0169, 19.6103, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 71/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.503258, -25.9593, 7.94828, 2.43 ) }
    dend_49 { pt3dadd( 1.10436, -28.6239, 7.60674, 2.43 ) }
    dend_49 { pt3dadd( 1.45591, -30.1823, 7.40699, 1.99 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 74/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -4.47921, 3.57632, -19.2959, 0.44 ) }
    dend_41 { pt3dadd( -2.74353, 5.24306, -23.695, 0.44 ) }
    dend_41 { pt3dadd( -2.07423, 6.05018, -25.2708, 0.44 ) }
    dend_41 { pt3dadd( -2.05316, 6.08197, -25.3171, 0.44 ) }
    dend_41 { pt3dadd( -1.50373, 7.05907, -26.4095, 0.59 ) }
    dend_41 { pt3dadd( -1.44937, 7.16766, -26.4975, 0.59 ) }
    dend_41 { pt3dadd( -0.768265, 8.48381, -27.4138, 1.69 ) }
    dend_41 { pt3dadd( -0.376772, 9.3069, -27.6664, 2.95 ) }
    dend_41 { pt3dadd( 0.169894, 10.2151, -27.9326, 2.87 ) }
    dend_41 { pt3dadd( 0.740444, 10.9205, -28.217, 1.62 ) }
    dend_41 { pt3dadd( 2.04192, 12.0464, -28.8672, 0.22 ) }
    dend_41 { pt3dadd( 2.79306, 12.5448, -29.2889, 0.74 ) }
    dend_41 { pt3dadd( 3.74434, 13.0126, -29.863, 0.81 ) }
    dend_41 { pt3dadd( 5.17361, 13.5956, -30.7971, 0.74 ) }
    dend_41 { pt3dadd( 6.077, 13.9272, -31.4341, 0.29 ) }
    dend_41 { pt3dadd( 6.62015, 14.1813, -31.9064, 0.29 ) }
    dend_41 { pt3dadd( 7.36609, 14.7559, -32.724, 1.84 ) }
    dend_41 { pt3dadd( 7.67037, 15.1873, -33.1006, 2.65 ) }
    dend_41 { pt3dadd( 7.70012, 15.2461, -33.1459, 2.65 ) }
    dend_41 { pt3dadd( 7.99128, 15.8529, -33.6059, 2.43 ) }
    dend_41 { pt3dadd( 8.49696, 16.9977, -34.9816, 0.29 ) }
    dend_41 { pt3dadd( 8.68817, 17.4783, -35.6847, 0.29 ) }
    dend_41 { pt3dadd( 8.96158, 18.2004, -36.8804, 0.29 ) }
    dend_41 { pt3dadd( 9.34323, 19.3085, -38.8026, 1.4 ) }
    dend_41 { pt3dadd( 9.55933, 20.0215, -40.0983, 4.13 ) }
    dend_41 { pt3dadd( 10.4021, 22.7369, -45.0777, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_41 { pt3dadd( 10.4978, 23.087, -45.7091, 0.59 ) }
    dend_41 { pt3dadd( 10.5132, 23.1572, -45.8408, 0.59 ) }
    dend_41 { pt3dadd( 10.566, 23.4775, -46.4323, 0.59 ) }
    dend_41 { pt3dadd( 10.66, 24.1077, -47.4787, 0.37 ) }
    dend_41 { pt3dadd( 10.9333, 25.9, -50.1763, 2.8 ) }
    dend_41 { pt3dadd( 11.0867, 26.6115, -51.1933, 3.39 ) }
    dend_41 { pt3dadd( 11.7434, 29.5604, -55.5269, 0.96 ) }
    dend_41 { pt3dadd( 11.8602, 30.0975, -56.3296, 0.59 ) }
    dend_41 { pt3dadd( 12.0116, 30.8348, -57.4471, 2.21 ) }
    dend_41 { pt3dadd( 12.0704, 31.1681, -57.937, 3.17 ) }
    dend_41 { pt3dadd( 12.313, 33.2953, -61.0618, 0.52 ) }
    dend_41 { pt3dadd( 12.3606, 33.5882, -61.5541, 0.29 ) }
    dend_41 { pt3dadd( 12.3672, 33.6223, -61.6149, 0.29 ) }
    dend_41 { pt3dadd( 12.4727, 34.0413, -62.4324, 0.29 ) }
    dend_41 { pt3dadd( 12.6567, 34.6456, -63.7163, 2.43 ) }
    dend_41 { pt3dadd( 12.8622, 35.1541, -64.837, 3.09 ) }
    dend_41 { pt3dadd( 13.9106, 37.392, -69.6209, 0.37 ) }
    dend_41 { pt3dadd( 14.3712, 38.2293, -71.3932, 0.96 ) }
    dend_41 { pt3dadd( 14.5556, 38.526, -72.021, 0.96 ) }
    dend_41 { pt3dadd( 14.572, 38.5503, -72.0734, 0.96 ) }
    dend_41 { pt3dadd( 15.407, 39.6983, -74.5735, 0.37 ) }
    dend_41 { pt3dadd( 16.1113, 40.6483, -76.4573, 2.73 ) }
    dend_41 { pt3dadd( 16.5744, 41.2848, -77.437, 3.61 ) }
    dend_41 { pt3dadd( 17.3331, 42.3002, -79.0763, 2.87 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 24/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.47921, 3.57632, -19.2959, 1.47 ) }
    dend_26 { pt3dadd( -6.26944, 8.03893, -25.3684, 1.47 ) }
    dend_26 { pt3dadd( -6.78741, 9.4656, -26.7276, 1.47 ) }
    dend_26 { pt3dadd( -6.82553, 9.5776, -26.8025, 1.47 ) }
    dend_26 { pt3dadd( -7.17506, 10.7099, -27.403, 1.69 ) }
    dend_26 { pt3dadd( -7.19224, 10.7706, -27.4334, 1.69 ) }
    dend_26 { pt3dadd( -7.60304, 12.3584, -28.2289, 1.69 ) }
    dend_26 { pt3dadd( -7.96645, 14.1036, -28.784, 1.69 ) }
    dend_26 { pt3dadd( -8.21572, 15.3895, -29.2531, 1.99 ) }
    dend_26 { pt3dadd( -8.4764, 16.8313, -29.8245, 2.06 ) }
    dend_26 { pt3dadd( -8.73122, 18.3826, -30.5318, 2.28 ) }
    dend_26 { pt3dadd( -8.92364, 19.6432, -31.1852, 2.21 ) }
    dend_26 { pt3dadd( -9.11123, 21.1995, -32.2441, 2.43 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 37/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.48921, 17.5105, -5.51624, 1.92 ) }
    dend_10 { pt3dadd( 6.41291, 17.9185, -11.3298, 1.92 ) }
    dend_10 { pt3dadd( 6.50236, 18.0411, -12.9161, 1.69 ) }
    dend_10 { pt3dadd( 6.76084, 18.2482, -15.4026, 2.0 ) }
    dend_10 { pt3dadd( 7.67476, 18.8608, -21.4009, 1.33 ) }
    dend_10 { pt3dadd( 7.69079, 18.8707, -21.4786, 1.33 ) }
    dend_10 { pt3dadd( 8.01568, 19.0717, -23.0545, 0.88 ) }
    dend_10 { pt3dadd( 8.61002, 19.2597, -24.4579, 0.88 ) }
    dend_10 { pt3dadd( 8.67468, 19.2751, -24.5603, 0.88 ) }
    dend_10 { pt3dadd( 9.53884, 19.4667, -25.3461, 1.55 ) }
    dend_10 { pt3dadd( 10.6013, 19.8782, -25.5103, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 48/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.48921, 17.5105, -5.51624, 1.62 ) }
    dend_1 { pt3dadd( 6.17248, 18.4783, -5.5949, 1.62 ) }
    dend_1 { pt3dadd( 5.76542, 19.7545, -5.77417, 1.47 ) }
    dend_1 { pt3dadd( 5.39789, 21.1473, -5.994, 0.59 ) }
    dend_1 { pt3dadd( 5.26493, 21.889, -6.11007, 0.96 ) }
    dend_1 { pt3dadd( 5.21435, 22.4723, -6.18344, 1.25 ) }
    dend_1 { pt3dadd( 5.21174, 23.0655, -6.24668, 1.4 ) }
    dend_1 { pt3dadd( 5.41138, 24.2799, -6.32395, 0.96 ) }
    dend_1 { pt3dadd( 5.78556, 25.2507, -6.31261, 0.81 ) }
    dend_1 { pt3dadd( 6.29346, 26.215, -6.25487, 1.25 ) }
    dend_1 { pt3dadd( 6.90763, 27.1869, -6.16201, 1.69 ) }
    dend_1 { pt3dadd( 7.30814, 27.7265, -6.08119, 2.06 ) }
    dend_1 { pt3dadd( 7.94246, 28.4385, -5.90996, 2.28 ) }
    dend_1 { pt3dadd( 8.6471, 29.0823, -5.64178, 2.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.11928, -46.641, 3.41676, 0.672765 ) }
    axon_1 { pt3dadd( 2.94105, -61.6185, 3.41676, 0.672765 ) }
    axon_1 { pt3dadd( 3.76282, -76.596, 3.41676, 0.672765 ) }
    // Section: dend_63, id: dend_63, parent: dend_49 (entry count 65/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 1.45591, -30.1823, 7.40699, 0.52 ) }
    dend_63 { pt3dadd( 3.31562, -30.7315, 5.84019, 0.52 ) }
    dend_63 { pt3dadd( 4.58561, -31.0816, 4.86394, 0.96 ) }
    dend_63 { pt3dadd( 5.8251, -31.4632, 3.96358, 0.29 ) }
    dend_63 { pt3dadd( 6.89994, -31.8516, 3.20008, 0.44 ) }
    dend_63 { pt3dadd( 6.95412, -31.8746, 3.1622, 0.44 ) }
    dend_63 { pt3dadd( 7.45437, -32.1316, 2.78563, 0.44 ) }
    dend_63 { pt3dadd( 7.99125, -32.4892, 2.39015, 0.29 ) }
    dend_63 { pt3dadd( 8.50517, -32.8522, 2.01999, 0.29 ) }
    dend_63 { pt3dadd( 8.98014, -33.2405, 1.67445, 0.88 ) }
    dend_63 { pt3dadd( 9.3002, -33.5631, 1.42169, 0.88 ) }
    dend_63 { pt3dadd( 10.4685, -34.92, 0.370715, 0.44 ) }
    dend_63 { pt3dadd( 10.7237, -35.2471, 0.106362, 0.22 ) }
    dend_63 { pt3dadd( 11.1033, -35.7287, -0.313739, 0.22 ) }
    dend_63 { pt3dadd( 11.5779, -36.2807, -0.8087, 0.81 ) }
    dend_63 { pt3dadd( 11.8304, -36.5473, -1.05119, 0.96 ) }
    dend_63 { pt3dadd( 12.7142, -37.3976, -1.82889, 0.29 ) }
    dend_63 { pt3dadd( 13.4539, -38.077, -2.41119, 0.29 ) }
    dend_63 { pt3dadd( 13.9025, -38.4701, -2.75962, 1.25 ) }
    dend_63 { pt3dadd( 14.3557, -38.8122, -3.09106, 1.69 ) }
    dend_63 { pt3dadd( 15.6508, -39.5915, -3.93565, 0.22 ) }
    dend_63 { pt3dadd( 16.075, -39.8052, -4.19507, 0.22 ) }
    dend_63 { pt3dadd( 16.3628, -39.9368, -4.36675, 0.81 ) }
    dend_63 { pt3dadd( 16.4236, -39.9688, -4.40777, 0.81 ) }
    dend_63 { pt3dadd( 17.1412, -40.4185, -4.9548, 0.81 ) }
    dend_63 { pt3dadd( 17.1854, -40.4548, -4.99513, 0.81 ) }
    dend_63 { pt3dadd( 18.0704, -41.3897, -5.95547, 0.22 ) }
    dend_63 { pt3dadd( 18.8643, -42.3948, -6.89928, 1.47 ) }
    dend_63 { pt3dadd( 19.2972, -43.0479, -7.48678, 1.99 ) }
    dend_63 { pt3dadd( 19.4462, -43.2825, -7.72595, 2.5 ) }
    dend_63 { pt3dadd( 20.0564, -44.2271, -8.7413, 0.81 ) }
    dend_63 { pt3dadd( 20.4508, -44.8467, -9.41604, 0.29 ) }
    dend_63 { pt3dadd( 20.7645, -45.3608, -9.99057, 0.15 ) }
    dend_63 { pt3dadd( 21.3547, -46.3227, -11.1095, 1.4 ) }
    dend_63 { pt3dadd( 22.4359, -47.9513, -13.1274, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_63 { pt3dadd( 22.8307, -48.4913, -13.8745, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 1.45591, -30.1823, 7.40699, 1.77 ) }
    dend_50 { pt3dadd( 1.1074, -31.9652, 7.11631, 1.77 ) }
    dend_50 { pt3dadd( 0.794665, -33.5612, 6.88817, 1.84 ) }
    dend_50 { pt3dadd( 0.443843, -35.3937, 6.64945, 1.84 ) }
    dend_50 { pt3dadd( 0.0951398, -37.2962, 6.42266, 1.84 ) }
    dend_50 { pt3dadd( -0.172211, -38.8431, 6.25588, 2.06 ) }
    dend_50 { pt3dadd( -0.44969, -40.5504, 6.08629, 2.58 ) }
    dend_50 { pt3dadd( -0.676893, -42.0303, 5.97166, 3.09 ) }
    dend_50 { pt3dadd( -0.770087, -42.6817, 5.92091, 3.39 ) }
    dend_50 { pt3dadd( -0.89329, -43.6213, 5.85459, 3.61 ) }
    dend_50 { pt3dadd( -1.13518, -45.7403, 5.76202, 3.39 ) }
    dend_50 { pt3dadd( -1.31612, -47.5013, 5.70649, 2.14 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 13/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 17.3331, 42.3002, -79.0763, 0.37 ) }
    dend_45 { pt3dadd( 17.3219, 44.3033, -83.0156, 0.37 ) }
    dend_45 { pt3dadd( 17.2924, 44.7872, -83.9205, 0.37 ) }
    dend_45 { pt3dadd( 17.2819, 44.8818, -84.0849, 0.37 ) }
    dend_45 { pt3dadd( 17.1723, 45.6061, -85.2031, 0.66 ) }
    dend_45 { pt3dadd( 17.0429, 46.3525, -86.2448, 0.22 ) }
    dend_45 { pt3dadd( 17.0385, 46.386, -86.2944, 0.22 ) }
    dend_45 { pt3dadd( 16.9842, 46.8423, -86.9104, 0.22 ) }
    dend_45 { pt3dadd( 16.9609, 47.1279, -87.3102, 0.59 ) }
    dend_45 { pt3dadd( 16.8629, 48.3344, -89.084, 1.77 ) }
    dend_45 { pt3dadd( 16.8216, 48.8778, -89.9081, 2.5 ) }
    dend_45 { pt3dadd( 16.6069, 51.2366, -93.6115, 0.22 ) }
    dend_45 { pt3dadd( 16.5655, 51.5887, -94.1881, 0.52 ) }
    dend_45 { pt3dadd( 16.5498, 51.7134, -94.4041, 0.52 ) }
    dend_45 { pt3dadd( 16.3908, 52.5189, -95.8566, 1.11 ) }
    dend_45 { pt3dadd( 16.3793, 52.5506, -95.918, 1.11 ) }
    dend_45 { pt3dadd( 16.1984, 52.8355, -96.5597, 1.25 ) }
    dend_45 { pt3dadd( 15.4633, 53.6051, -98.3954, 0.22 ) }
    dend_45 { pt3dadd( 15.4408, 53.6264, -98.4469, 0.22 ) }
    dend_45 { pt3dadd( 14.9378, 54.0443, -99.5071, 1.55 ) }
    dend_45 { pt3dadd( 14.2154, 54.5798, -100.878, 1.77 ) }
    dend_45 { pt3dadd( 12.8371, 55.5379, -103.397, 0.37 ) }
    dend_45 { pt3dadd( 12.6902, 55.6363, -103.715, 1.11 ) }
    dend_45 { pt3dadd( 12.4414, 55.8288, -104.431, 1.25 ) }
    dend_45 { pt3dadd( 11.7916, 56.4552, -106.754, 0.22 ) }
    dend_45 { pt3dadd( 11.5287, 56.737, -107.82, 1.77 ) }
    dend_45 { pt3dadd( 11.2998, 57.0148, -108.852, 2.43 ) }
    dend_45 { pt3dadd( 10.1849, 58.3428, -113.632, 0.66 ) }
    dend_45 { pt3dadd( 9.37807, 59.2344, -116.856, 0.59 ) }
    dend_45 { pt3dadd( 8.76255, 59.8957, -119.258, 1.69 ) }
    dend_45 { pt3dadd( 8.58326, 60.0793, -119.905, 2.06 ) }
    dend_45 { pt3dadd( 8.54458, 60.1133, -120.025, 2.06 ) }
    dend_45 { pt3dadd( 7.07132, 61.102, -123.18, 0.22 ) }
    dend_45 { pt3dadd( 6.46154, 61.4031, -123.907, 0.22 ) }
    dend_45 { pt3dadd( 6.41646, 61.42, -123.943, 0.22 ) }
    dend_45 { pt3dadd( 5.78392, 61.6191, -124.363, 1.55 ) }
    dend_45 { pt3dadd( 5.19413, 61.8211, -124.733, 1.99 ) }
    dend_45 { pt3dadd( 3.93452, 62.3016, -125.415, 0.15 ) }
    dend_45 { pt3dadd( 3.83223, 62.3486, -125.48, 0.15 ) }
    dend_45 { pt3dadd( 3.28965, 62.6421, -125.953, 0.15 ) }
    dend_45 { pt3dadd( 3.21199, 62.6892, -126.032, 0.15 ) }
    dend_45 { pt3dadd( 2.80806, 62.986, -126.5, 0.96 ) }
    dend_45 { pt3dadd( 2.46828, 63.2722, -126.985, 1.18 ) }
    dend_45 { pt3dadd( 1.01844, 64.7957, -129.345, 0.15 ) }
    dend_45 { pt3dadd( 0.987008, 64.8322, -129.396, 0.15 ) }
    dend_45 { pt3dadd( 0.589781, 65.3319, -130.029, 1.18 ) }
    dend_45 { pt3dadd( 0.243649, 65.7864, -130.573, 1.33 ) }
    dend_45 { pt3dadd( -0.397593, 66.6533, -131.595, 0.15 ) }
    dend_45 { pt3dadd( -0.876822, 67.3292, -132.332, 0.15 ) }
    dend_45 { pt3dadd( -1.77138, 68.7362, -133.513, 1.99 ) }
    dend_45 { pt3dadd( -2.26796, 69.5417, -134.215, 2.73 ) }
    dend_45 { pt3dadd( -2.29549, 69.5885, -134.259, 2.73 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 65/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 17.3331, 42.3002, -79.0763, 0.22 ) }
    dend_42 { pt3dadd( 19.3199, 43.5922, -81.5486, 0.22 ) }
    dend_42 { pt3dadd( 20.1661, 44.2218, -82.7337, 0.74 ) }
    dend_42 { pt3dadd( 20.6897, 44.7386, -83.6478, 1.03 ) }
    dend_42 { pt3dadd( 21.6288, 45.8577, -85.5589, 0.29 ) }
    dend_42 { pt3dadd( 22.1458, 46.6367, -86.9778, 0.81 ) }
    dend_42 { pt3dadd( 22.6158, 47.5743, -88.694, 1.84 ) }
    dend_42 { pt3dadd( 22.7035, 48.0107, -89.492, 2.36 ) }
    dend_42 { pt3dadd( 22.6926, 49.2744, -91.8668, 0.29 ) }
    dend_42 { pt3dadd( 22.6036, 49.784, -92.7878, 0.96 ) }
    dend_42 { pt3dadd( 22.0456, 51.451, -95.5829, 0.29 ) }
    dend_42 { pt3dadd( 21.737, 52.1297, -96.6552, 2.06 ) }
    dend_42 { pt3dadd( 21.4127, 52.7088, -97.5022, 2.43 ) }
    dend_42 { pt3dadd( 20.4373, 54.3061, -99.6481, 0.29 ) }
    dend_42 { pt3dadd( 20.1054, 54.7991, -100.233, 0.22 ) }
    dend_42 { pt3dadd( 19.6298, 55.4708, -100.916, 1.25 ) }
    dend_42 { pt3dadd( 19.2559, 55.9955, -101.341, 1.62 ) }
    dend_42 { pt3dadd( 18.3171, 57.2652, -102.313, 0.15 ) }
    dend_42 { pt3dadd( 17.8752, 57.8284, -102.718, 0.81 ) }
    dend_42 { pt3dadd( 17.6161, 58.1539, -102.937, 0.96 ) }
    dend_42 { pt3dadd( 17.0292, 58.9257, -103.51, 0.22 ) }
    dend_42 { pt3dadd( 16.4852, 59.6673, -104.222, 1.03 ) }
    dend_42 { pt3dadd( 16.3005, 59.9279, -104.498, 1.25 ) }
    dend_42 { pt3dadd( 15.4402, 61.1667, -105.943, 0.22 ) }
    dend_42 { pt3dadd( 14.8426, 62.0791, -107.033, 2.14 ) }
    dend_42 { pt3dadd( 14.4968, 62.6294, -107.719, 2.73 ) }
    dend_42 { pt3dadd( 13.177, 64.8055, -110.456, 0.37 ) }
    dend_42 { pt3dadd( 12.9041, 65.2808, -111.063, 0.44 ) }
    dend_42 { pt3dadd( 12.4817, 66.0635, -112.103, 0.44 ) }
    dend_42 { pt3dadd( 12.2426, 66.612, -112.87, 1.18 ) }
    dend_42 { pt3dadd( 11.8144, 67.8538, -114.606, 0.22 ) }
    dend_42 { pt3dadd( 11.7233, 68.2024, -115.069, 0.22 ) }
    dend_42 { pt3dadd( 11.5546, 69.2387, -116.305, 1.62 ) }
    dend_42 { pt3dadd( 11.4583, 70.0557, -117.249, 2.21 ) }
    dend_42 { pt3dadd( 11.3315, 72.1728, -119.552, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( 11.3324, 72.6931, -120.086, 0.37 ) }
    dend_42 { pt3dadd( 11.3347, 72.7435, -120.134, 0.37 ) }
    dend_42 { pt3dadd( 11.4006, 73.7262, -121.069, 0.74 ) }
    dend_42 { pt3dadd( 11.4315, 74.1871, -121.484, 0.59 ) }
    dend_42 { pt3dadd( 11.4795, 75.2412, -122.355, 0.29 ) }
    dend_42 { pt3dadd( 11.5095, 76.3612, -123.232, 1.47 ) }
    dend_42 { pt3dadd( 11.5367, 77.2324, -123.949, 1.77 ) }
    dend_42 { pt3dadd( 11.5868, 78.8912, -125.282, 0.22 ) }
    dend_42 { pt3dadd( 11.5886, 78.9749, -125.347, 0.22 ) }
    dend_42 { pt3dadd( 11.5997, 79.4841, -125.701, 0.22 ) }
    dend_42 { pt3dadd( 11.6068, 80.0423, -126.016, 0.22 ) }
    dend_42 { pt3dadd( 11.6083, 80.1056, -126.046, 0.22 ) }
    dend_42 { pt3dadd( 11.6605, 81.2751, -126.482, 1.69 ) }
    dend_42 { pt3dadd( 11.6856, 81.9444, -126.696, 1.69 ) }
    dend_42 { pt3dadd( 11.7715, 83.5688, -127.211, 0.22 ) }
    dend_42 { pt3dadd( 11.8182, 84.3148, -127.448, 0.52 ) }
    dend_42 { pt3dadd( 11.8205, 84.3723, -127.465, 0.52 ) }
    dend_42 { pt3dadd( 11.8393, 85.446, -127.821, 0.22 ) }
    dend_42 { pt3dadd( 11.8391, 85.5122, -127.843, 0.22 ) }
    dend_42 { pt3dadd( 11.8345, 86.2898, -128.112, 0.22 ) }
    dend_42 { pt3dadd( 11.8019, 87.8108, -128.638, 1.55 ) }
    dend_42 { pt3dadd( 11.7882, 88.5282, -128.878, 1.77 ) }
    dend_42 { pt3dadd( 11.771, 90.0658, -129.408, 0.22 ) }
    dend_42 { pt3dadd( 11.7616, 90.8252, -129.69, 0.59 ) }
    dend_42 { pt3dadd( 11.7542, 92.2533, -130.235, 0.22 ) }
    dend_42 { pt3dadd( 11.7525, 93.0616, -130.567, 0.59 ) }
    dend_42 { pt3dadd( 11.6708, 94.4523, -131.217, 0.22 ) }
    dend_42 { pt3dadd( 11.5659, 95.4406, -131.721, 1.47 ) }
    dend_42 { pt3dadd( 11.417, 96.2158, -132.121, 2.28 ) }
    dend_42 { pt3dadd( 11.4004, 96.2755, -132.154, 2.28 ) }
    dend_42 { pt3dadd( 11.1102, 97.0494, -132.575, 2.73 ) }
    dend_42 { pt3dadd( 10.1291, 99.2155, -133.698, 0.22 ) }
    dend_42 { pt3dadd( 9.72446, 99.9955, -134.054, 0.52 ) }
    dend_42 { pt3dadd( 9.22889, 100.909, -134.418, 0.22 ) }
    dend_42 { pt3dadd( 8.93538, 101.446, -134.617, 0.81 ) }
    dend_42 { pt3dadd( 8.58851, 102.081, -134.836, 1.18 ) }
    dend_42 { pt3dadd( 7.679, 103.801, -135.414, 0.22 ) }
    dend_42 { pt3dadd( 6.95413, 105.266, -135.883, 0.22 ) }
    dend_42 { pt3dadd( 6.43897, 106.321, -136.246, 1.11 ) }
    dend_42 { pt3dadd( 6.15898, 106.922, -136.476, 1.69 ) }
    dend_42 { pt3dadd( 5.89651, 107.512, -136.713, 1.99 ) }
    dend_42 { pt3dadd( 5.22732, 109.093, -137.388, 0.22 ) }
    dend_42 { pt3dadd( 4.70406, 110.301, -138.015, 0.22 ) }
    dend_42 { pt3dadd( 4.33873, 111.126, -138.499, 0.22 ) }
    dend_42 { pt3dadd( 3.85759, 112.153, -139.103, 1.25 ) }
    dend_42 { pt3dadd( 3.65867, 112.556, -139.344, 2.36 ) }
    dend_42 { pt3dadd( 3.30887, 113.24, -139.764, 2.36 ) }
    dend_42 { pt3dadd( 2.24684, 115.226, -140.932, 0.22 ) }
    dend_42 { pt3dadd( 2.21856, 115.28, -140.966, 0.22 ) }
    dend_42 { pt3dadd( 1.69065, 116.564, -141.742, 0.22 ) }
    dend_42 { pt3dadd( 1.67506, 116.616, -141.77, 0.22 ) }
    dend_42 { pt3dadd( 1.50551, 117.413, -142.179, 0.22 ) }
    dend_42 { pt3dadd( 1.4279, 118.464, -142.66, 2.28 ) }
    dend_42 { pt3dadd( 1.47455, 119.38, -143.047, 1.47 ) }
    dend_42 { pt3dadd( 1.6883, 121.434, -143.959, 0.22 ) }
    dend_42 { pt3dadd( 1.78591, 122.008, -144.242, 0.66 ) }
    dend_42 { pt3dadd( 1.85634, 122.382, -144.432, 0.66 ) }
    dend_42 { pt3dadd( 2.16789, 123.84, -145.217, 0.22 ) }
    dend_42 { pt3dadd( 2.33711, 124.578, -145.627, 0.81 ) }
    dend_42 { pt3dadd( 2.42317, 125.032, -145.874, 0.81 ) }
    dend_42 { pt3dadd( 2.63396, 126.462, -146.676, 0.22 ) }
    dend_42 { pt3dadd( 2.74484, 127.687, -147.383, 1.69 ) }
    dend_42 { pt3dadd( 2.76539, 128.229, -147.685, 1.92 ) }
    dend_42 { pt3dadd( 2.76517, 128.299, -147.723, 1.92 ) }
    dend_42 { pt3dadd( 2.7217, 129.691, -148.451, 0.22 ) }
    dend_42 { pt3dadd( 2.69598, 130.154, -148.688, 0.59 ) }
    dend_42 { pt3dadd( 2.58697, 131.458, -149.327, 0.22 ) }
    dend_42 { pt3dadd( 2.48762, 132.447, -149.838, 0.22 ) }
    dend_42 { pt3dadd( 2.48337, 132.499, -149.867, 0.22 ) }
    dend_42 { pt3dadd( 2.43537, 133.479, -150.443, 0.22 ) }
    dend_42 { pt3dadd( 2.42616, 134.35, -150.98, 1.62 ) }
    dend_42 { pt3dadd( 2.42771, 134.417, -151.022, 1.62 ) }
    dend_42 { pt3dadd( 2.47646, 135.088, -151.424, 1.69 ) }
    dend_42 { pt3dadd( 2.58907, 136.241, -152.117, 0.44 ) }
    dend_42 { pt3dadd( 2.66975, 137.003, -152.557, 0.59 ) }
    dend_42 { pt3dadd( 2.6771, 137.064, -152.589, 0.59 ) }
    dend_42 { pt3dadd( 2.84223, 138.35, -153.264, 0.22 ) }
    dend_42 { pt3dadd( 2.96132, 139.361, -153.78, 0.59 ) }
    dend_42 { pt3dadd( 2.98834, 139.622, -153.904, 0.74 ) }
    dend_42 { pt3dadd( 3.06878, 140.562, -154.351, 0.22 ) }
    dend_42 { pt3dadd( 3.11496, 141.411, -154.797, 1.11 ) }
    dend_42 { pt3dadd( 3.13883, 142.641, -155.468, 0.22 ) }
    dend_42 { pt3dadd( 3.1173, 143.549, -155.958, 1.55 ) }
    dend_42 { pt3dadd( 3.0884, 144.077, -156.234, 1.77 ) }
    dend_42 { pt3dadd( 3.07167, 144.298, -156.35, 1.77 ) }
    dend_42 { pt3dadd( 2.88527, 146.047, -157.259, 0.22 ) }
    dend_42 { pt3dadd( 2.85068, 146.322, -157.402, 0.37 ) }
    dend_42 { pt3dadd( 2.73778, 147.174, -157.813, 0.22 ) }
    dend_42 { pt3dadd( 2.72937, 147.234, -157.846, 0.22 ) }
    dend_42 { pt3dadd( 2.67975, 147.607, -158.055, 0.52 ) }
    dend_42 { pt3dadd( 2.50683, 148.915, -158.763, 0.22 ) }
    dend_42 { pt3dadd( 2.34184, 150.195, -159.489, 1.25 ) }
    dend_42 { pt3dadd( 2.3168, 150.382, -159.601, 1.77 ) }
    dend_42 { pt3dadd( 2.08834, 151.909, -160.558, 0.15 ) }
    dend_42 { pt3dadd( 1.98166, 152.583, -160.977, 0.15 ) }
    dend_42 { pt3dadd( 1.84998, 153.389, -161.519, 0.59 ) }
    dend_42 { pt3dadd( 1.61331, 154.775, -162.517, 0.22 ) }
    dend_42 { pt3dadd( 1.47571, 155.551, -163.096, 0.22 ) }
    dend_42 { pt3dadd( 1.36307, 156.236, -163.6, 1.4 ) }
    dend_42 { pt3dadd( 1.30959, 156.519, -163.816, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 0.735905, 159.016, -165.807, 0.22 ) }
    dend_42 { pt3dadd( 0.724934, 159.062, -165.844, 0.22 ) }
    dend_42 { pt3dadd( 0.569031, 159.676, -166.346, 0.22 ) }
    dend_42 { pt3dadd( 0.408022, 160.29, -166.854, 1.84 ) }
    dend_42 { pt3dadd( -0.230523, 162.592, -168.765, 0.22 ) }
    dend_42 { pt3dadd( -0.482523, 163.398, -169.432, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 6/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -9.11123, 21.1995, -32.2441, 1.47 ) }
    dend_30 { pt3dadd( -12.1048, 19.7474, -35.6668, 1.47 ) }
    dend_30 { pt3dadd( -13.246, 19.2878, -36.6925, 2.28 ) }
    dend_30 { pt3dadd( -14.0134, 19.0164, -37.2845, 2.73 ) }
    dend_30 { pt3dadd( -14.7861, 18.7748, -37.8193, 2.87 ) }
    dend_30 { pt3dadd( -14.8418, 18.7574, -37.8578, 2.87 ) }
    dend_30 { pt3dadd( -16.1787, 18.3394, -38.783, 2.95 ) }
    dend_30 { pt3dadd( -17.5457, 18.0614, -39.256, 2.95 ) }
    dend_30 { pt3dadd( -18.6317, 17.8567, -39.6118, 2.43 ) }
    dend_30 { pt3dadd( -19.1538, 17.7656, -39.7819, 2.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 16/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -9.11123, 21.1995, -32.2441, 0.59 ) }
    dend_27 { pt3dadd( -6.0132, 23.6899, -32.9754, 0.59 ) }
    dend_27 { pt3dadd( -5.41767, 24.2048, -33.182, 0.59 ) }
    dend_27 { pt3dadd( -4.3361, 25.2567, -33.6265, 0.81 ) }
    dend_27 { pt3dadd( -3.32612, 26.3692, -34.0954, 0.74 ) }
    dend_27 { pt3dadd( -2.94197, 26.8631, -34.2971, 0.66 ) }
    dend_27 { pt3dadd( -2.36383, 27.7413, -34.6089, 0.52 ) }
    dend_27 { pt3dadd( -2.34628, 27.7923, -34.6351, 0.52 ) }
    dend_27 { pt3dadd( -2.31466, 28.4475, -34.8021, 0.66 ) }
    dend_27 { pt3dadd( -2.43465, 28.9408, -34.764, 0.66 ) }
    dend_27 { pt3dadd( -2.67658, 29.5508, -34.5855, 0.52 ) }
    dend_27 { pt3dadd( -3.00532, 30.2305, -34.2892, 0.44 ) }
    dend_27 { pt3dadd( -3.46748, 31.066, -33.835, 0.66 ) }
    dend_27 { pt3dadd( -3.66155, 31.4074, -33.6366, 0.88 ) }
    dend_27 { pt3dadd( -3.97306, 31.937, -33.3113, 0.96 ) }
    dend_27 { pt3dadd( -4.27214, 32.4605, -33.003, 0.81 ) }
    dend_27 { pt3dadd( -4.54826, 32.9563, -32.7499, 0.88 ) }
    dend_27 { pt3dadd( -4.83561, 33.4591, -32.5223, 0.88 ) }
    dend_27 { pt3dadd( -4.88724, 33.5453, -32.4875, 0.88 ) }
    dend_27 { pt3dadd( -5.23387, 34.1024, -32.2808, 0.88 ) }
    dend_27 { pt3dadd( -5.5814, 34.6861, -32.1305, 1.03 ) }
    dend_27 { pt3dadd( -5.98561, 35.3595, -32.0526, 1.03 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 38/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 10.6013, 19.8782, -25.5103, 0.37 ) }
    dend_20 { pt3dadd( 10.7839, 21.6171, -25.4981, 0.37 ) }
    dend_20 { pt3dadd( 10.8487, 22.7926, -25.4258, 0.81 ) }
    dend_20 { pt3dadd( 10.864, 23.3746, -25.3769, 1.33 ) }
    dend_20 { pt3dadd( 10.8902, 24.4914, -25.2751, 1.92 ) }
    dend_20 { pt3dadd( 10.9073, 25.4407, -25.1881, 1.03 ) }
    dend_20 { pt3dadd( 10.9522, 27.4504, -24.9954, 0.29 ) }
    dend_20 { pt3dadd( 10.9488, 28.2716, -24.893, 0.66 ) }
    dend_20 { pt3dadd( 10.938, 28.9329, -24.8369, 0.66 ) }
    dend_20 { pt3dadd( 10.9198, 30.2039, -24.7594, 0.44 ) }
    dend_20 { pt3dadd( 10.9199, 31.0866, -24.7506, 0.59 ) }
    dend_20 { pt3dadd( 10.94, 31.869, -24.7843, 0.52 ) }
    dend_20 { pt3dadd( 11.0035, 32.8118, -24.8828, 0.52 ) }
    dend_20 { pt3dadd( 11.0647, 34.1222, -25.0756, 1.25 ) }
    dend_20 { pt3dadd( 11.0754, 34.7735, -25.1821, 1.92 ) }
    dend_20 { pt3dadd( 11.0361, 36.1303, -25.4212, 1.62 ) }
    dend_20 { pt3dadd( 11.0325, 36.1991, -25.4332, 1.62 ) }
    dend_20 { pt3dadd( 10.9401, 37.3582, -25.6246, 0.29 ) }
    dend_20 { pt3dadd( 10.869, 38.1253, -25.7455, 0.22 ) }
    dend_20 { pt3dadd( 10.8154, 38.6831, -25.8145, 0.22 ) }
    dend_20 { pt3dadd( 10.7481, 39.418, -25.9038, 1.11 ) }
    dend_20 { pt3dadd( 10.6726, 40.2219, -25.9912, 1.69 ) }
    dend_20 { pt3dadd( 10.6339, 40.6574, -26.0404, 2.06 ) }
    dend_20 { pt3dadd( 10.582, 41.6911, -26.1703, 1.11 ) }
    dend_20 { pt3dadd( 10.5407, 42.9214, -26.3188, 0.29 ) }
    dend_20 { pt3dadd( 10.4961, 44.0985, -26.4508, 1.99 ) }
    dend_20 { pt3dadd( 10.4854, 44.6238, -26.5118, 2.65 ) }
    dend_20 { pt3dadd( 10.4969, 45.3132, -26.6043, 2.87 ) }
    dend_20 { pt3dadd( 10.6086, 47.0465, -26.853, 0.22 ) }
    dend_20 { pt3dadd( 10.7656, 48.2426, -27.026, 0.37 ) }
    dend_20 { pt3dadd( 10.9696, 49.0777, -27.1771, 0.37 ) }
    dend_20 { pt3dadd( 11.521, 50.52, -27.4763, 2.58 ) }
    dend_20 { pt3dadd( 12.0927, 51.5765, -27.7203, 2.87 ) }
    dend_20 { pt3dadd( 12.4333, 52.032, -27.8367, 2.95 ) }
    dend_20 { pt3dadd( 12.9998, 52.5664, -27.9872, 3.09 ) }
    dend_20 { pt3dadd( 14.1398, 53.4603, -28.264, 0.74 ) }
    dend_20 { pt3dadd( 14.8947, 53.9641, -28.425, 0.29 ) }
    dend_20 { pt3dadd( 15.692, 54.4084, -28.554, 1.4 ) }
    dend_20 { pt3dadd( 16.3609, 54.7454, -28.6326, 2.06 ) }
    dend_20 { pt3dadd( 17.2974, 55.1884, -28.734, 2.73 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 78/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 10.6013, 19.8782, -25.5103, 0.44 ) }
    dend_11 { pt3dadd( 11.8015, 22.3737, -24.4223, 0.44 ) }
    dend_11 { pt3dadd( 12.1814, 23.2407, -24.0601, 0.44 ) }
    dend_11 { pt3dadd( 12.236, 23.3707, -24.0089, 0.44 ) }
    dend_11 { pt3dadd( 12.5384, 24.1025, -23.7304, 0.44 ) }
    dend_11 { pt3dadd( 13.217, 25.6447, -23.1756, 0.44 ) }
    dend_11 { pt3dadd( 14.1152, 27.6861, -22.4411, 1.25 ) }
    dend_11 { pt3dadd( 14.1374, 27.7505, -22.425, 1.25 ) }
    dend_11 { pt3dadd( 14.3399, 28.3444, -22.2612, 1.25 ) }
    dend_11 { pt3dadd( 14.3744, 28.4408, -22.2328, 1.25 ) }
    dend_11 { pt3dadd( 14.7851, 29.4725, -21.8804, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 89/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 8.6471, 29.0823, -5.64178, 0.74 ) }
    dend_9 { pt3dadd( 8.39143, 29.7969, -4.13775, 0.74 ) }
    dend_9 { pt3dadd( 8.09059, 30.5529, -2.71972, 0.74 ) }
    dend_9 { pt3dadd( 7.61075, 31.7507, -0.671507, 1.4 ) }
    dend_9 { pt3dadd( 6.95523, 33.3608, 1.87056, 0.29 ) }
    dend_9 { pt3dadd( 6.82157, 33.7196, 2.40813, 0.29 ) }
    dend_9 { pt3dadd( 6.61461, 34.3196, 3.25855, 0.22 ) }
    dend_9 { pt3dadd( 6.44822, 34.8504, 3.93867, 0.22 ) }
    dend_9 { pt3dadd( 6.0255, 36.2967, 5.51869, 1.11 ) }
    dend_9 { pt3dadd( 5.89593, 36.7348, 5.88677, 1.55 ) }
    dend_9 { pt3dadd( 5.33288, 38.3797, 7.11636, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_9 { pt3dadd( 5.201, 38.8025, 7.49078, 0.22 ) }
    dend_9 { pt3dadd( 5.0788, 39.3396, 8.01799, 1.03 ) }
    dend_9 { pt3dadd( 5.03517, 39.7001, 8.39987, 1.18 ) }
    dend_9 { pt3dadd( 5.02616, 40.6735, 9.46041, 0.22 ) }
    dend_9 { pt3dadd( 5.21013, 41.8668, 10.8447, 1.33 ) }
    dend_9 { pt3dadd( 5.5965, 43.0601, 12.296, 0.29 ) }
    dend_9 { pt3dadd( 5.84564, 43.5458, 12.9129, 0.29 ) }
    dend_9 { pt3dadd( 6.19221, 44.0585, 13.5671, 0.74 ) }
    dend_9 { pt3dadd( 6.46593, 44.4264, 13.9986, 1.11 ) }
    dend_9 { pt3dadd( 6.99148, 45.1145, 14.6975, 0.29 ) }
    dend_9 { pt3dadd( 7.0229, 45.1618, 14.7385, 0.29 ) }
    dend_9 { pt3dadd( 7.27694, 45.6791, 15.1294, 0.29 ) }
    dend_9 { pt3dadd( 7.61463, 46.5665, 15.7752, 0.29 ) }
    dend_9 { pt3dadd( 7.88938, 47.4233, 16.322, 0.74 ) }
    dend_9 { pt3dadd( 8.10151, 48.1253, 16.7146, 1.25 ) }
    dend_9 { pt3dadd( 8.4649, 49.3198, 17.3078, 0.88 ) }
    dend_9 { pt3dadd( 8.62951, 49.8425, 17.5308, 1.03 ) }
    dend_9 { pt3dadd( 8.87405, 50.5769, 17.7922, 0.74 ) }
    dend_9 { pt3dadd( 9.30647, 51.7852, 18.0823, 0.29 ) }
    dend_9 { pt3dadd( 9.66935, 52.7249, 18.2395, 0.29 ) }
    dend_9 { pt3dadd( 9.69691, 52.7998, 18.2456, 0.29 ) }
    dend_9 { pt3dadd( 9.92504, 53.5697, 18.2355, 0.29 ) }
    dend_9 { pt3dadd( 9.96095, 53.7153, 18.2341, 0.29 ) }
    dend_9 { pt3dadd( 10.1413, 54.4947, 18.2341, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 24/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.6471, 29.0823, -5.64178, 0.96 ) }
    dend_2 { pt3dadd( 9.18068, 30.6, -6.34627, 0.96 ) }
    dend_2 { pt3dadd( 9.53518, 31.8021, -6.88976, 0.29 ) }
    dend_2 { pt3dadd( 9.76025, 32.7196, -7.27441, 0.81 ) }
    dend_2 { pt3dadd( 9.95811, 33.7579, -7.66132, 1.11 ) }
    dend_2 { pt3dadd( 9.96597, 33.8142, -7.68046, 1.11 ) }
    dend_2 { pt3dadd( 10.0277, 34.3766, -7.84695, 1.11 ) }
    dend_2 { pt3dadd( 10.0278, 34.4452, -7.86113, 1.11 ) }
    dend_2 { pt3dadd( 10.0198, 35.1736, -8.02487, 1.25 ) }
    dend_2 { pt3dadd( 10.0358, 35.7732, -8.13779, 1.11 ) }
    dend_2 { pt3dadd( 10.1044, 37.0113, -8.31059, 0.81 ) }
    dend_2 { pt3dadd( 10.2028, 38.2497, -8.45343, 1.47 ) }
    dend_2 { pt3dadd( 10.2099, 38.309, -8.45902, 1.47 ) }
    dend_2 { pt3dadd( 10.4009, 39.6519, -8.55873, 2.28 ) }
    dend_2 { pt3dadd( 10.532, 40.463, -8.60708, 2.14 ) }
    dend_2 { pt3dadd( 10.6856, 41.2479, -8.62192, 1.47 ) }
    dend_2 { pt3dadd( 11.0213, 42.7801, -8.58434, 0.88 ) }
    dend_2 { pt3dadd( 11.4288, 44.4182, -8.5041, 0.29 ) }
    dend_2 { pt3dadd( 11.8077, 45.8562, -8.40398, 0.29 ) }
    dend_2 { pt3dadd( 11.8267, 45.9233, -8.3975, 0.29 ) }
    dend_2 { pt3dadd( 12.1824, 47.0936, -8.29297, 1.55 ) }
    dend_2 { pt3dadd( 12.428, 47.8641, -8.21706, 2.14 ) }
    dend_2 { pt3dadd( 12.6711, 48.6637, -8.13079, 1.92 ) }
    dend_2 { pt3dadd( 12.8824, 49.4337, -8.04473, 1.11 ) }
    dend_2 { pt3dadd( 13.0724, 50.3362, -7.95556, 0.44 ) }
    dend_2 { pt3dadd( 13.1758, 51.3035, -7.88831, 0.37 ) }
    dend_2 { pt3dadd( 13.1642, 51.453, -7.88614, 0.37 ) }
    dend_2 { pt3dadd( 13.014, 52.0588, -7.89661, 0.29 ) }
    dend_2 { pt3dadd( 12.987, 52.1341, -7.90003, 0.29 ) }
    dend_2 { pt3dadd( 12.681, 52.9574, -7.95417, 0.29 ) }
    dend_2 { pt3dadd( 12.457, 53.5738, -7.99943, 0.29 ) }
    dend_2 { pt3dadd( 12.2243, 54.2977, -8.05572, 0.29 ) }
    dend_2 { pt3dadd( 11.8807, 55.5364, -8.15519, 1.84 ) }
    dend_2 { pt3dadd( 11.7036, 56.3983, -8.22685, 2.65 ) }
    dend_2 { pt3dadd( 11.595, 57.2012, -8.29372, 2.95 ) }
    dend_2 { pt3dadd( 11.5841, 57.6296, -8.32949, 2.95 ) }
    dend_2 { pt3dadd( 11.5883, 57.7092, -8.33618, 2.95 ) }
    // Section: dend_60, id: dend_60, parent: dend_50 (entry count 61/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -1.31612, -47.5013, 5.70649, 0.44 ) }
    dend_60 { pt3dadd( 0.415038, -47.9412, 6.18029, 0.44 ) }
    dend_60 { pt3dadd( 1.3112, -48.2501, 6.35214, 0.44 ) }
    dend_60 { pt3dadd( 1.3851, -48.2786, 6.36317, 0.44 ) }
    dend_60 { pt3dadd( 2.1492, -48.616, 6.45437, 0.44 ) }
    dend_60 { pt3dadd( 3.16471, -49.0644, 6.57558, 0.37 ) }
    dend_60 { pt3dadd( 4.00297, -49.4345, 6.67563, 0.37 ) }
    dend_60 { pt3dadd( 5.04118, -49.8211, 6.71159, 1.92 ) }
    dend_60 { pt3dadd( 5.48715, -50.0283, 6.72518, 2.5 ) }
    dend_60 { pt3dadd( 6.21943, -50.428, 6.74036, 2.8 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 71/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.31612, -47.5013, 5.70649, 1.03 ) }
    dend_51 { pt3dadd( -1.181, -49.3773, 4.85773, 1.03 ) }
    dend_51 { pt3dadd( -1.09467, -50.5761, 4.31537, 1.03 ) }
    dend_51 { pt3dadd( -1.0064, -51.8016, 3.76092, 1.33 ) }
    dend_51 { pt3dadd( -0.918616, -53.0204, 3.20947, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 76/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.29549, 69.5885, -134.259, 0.37 ) }
    dend_47 { pt3dadd( -1.78442, 71.7321, -137.758, 0.37 ) }
    dend_47 { pt3dadd( -1.62948, 72.2675, -138.673, 0.22 ) }
    dend_47 { pt3dadd( -1.61866, 72.3036, -138.732, 0.22 ) }
    dend_47 { pt3dadd( -1.51311, 72.6542, -139.286, 0.22 ) }
    dend_47 { pt3dadd( -1.22627, 73.6868, -141.067, 1.77 ) }
    dend_47 { pt3dadd( -1.00138, 74.5742, -142.618, 1.33 ) }
    dend_47 { pt3dadd( -0.824387, 75.3685, -143.958, 0.22 ) }
    dend_47 { pt3dadd( -0.774053, 75.6942, -144.524, 0.74 ) }
    dend_47 { pt3dadd( -0.763985, 75.8036, -144.714, 0.74 ) }
    dend_47 { pt3dadd( -0.790874, 77.5333, -147.517, 0.22 ) }
    dend_47 { pt3dadd( -0.864047, 78.17, -148.384, 1.25 ) }
    dend_47 { pt3dadd( -0.940167, 78.6011, -148.885, 1.4 ) }
    dend_47 { pt3dadd( -1.34129, 80.3292, -150.842, 0.22 ) }
    dend_47 { pt3dadd( -1.353, 80.3769, -150.892, 0.22 ) }
    dend_47 { pt3dadd( -1.64689, 81.5567, -151.988, 0.22 ) }
    dend_47 { pt3dadd( -1.91226, 82.6453, -152.787, 1.55 ) }
    dend_47 { pt3dadd( -2.0535, 83.2316, -153.172, 1.47 ) }
    dend_47 { pt3dadd( -2.66555, 85.9588, -154.75, 0.22 ) }
    dend_47 { pt3dadd( -2.91836, 86.9898, -155.305, 0.22 ) }
    dend_47 { pt3dadd( -2.95425, 87.1185, -155.378, 0.22 ) }
    dend_47 { pt3dadd( -3.21391, 87.9327, -155.855, 0.22 ) }
    dend_47 { pt3dadd( -3.70862, 89.2076, -156.558, 1.77 ) }
    dend_47 { pt3dadd( -3.88515, 89.6389, -156.777, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( -4.94171, 92.1374, -157.952, 0.22 ) }
    dend_47 { pt3dadd( -5.00265, 92.2776, -158.026, 0.22 ) }
    dend_47 { pt3dadd( -5.28042, 92.9494, -158.402, 0.88 ) }
    dend_47 { pt3dadd( -5.82996, 94.4, -159.252, 0.22 ) }
    dend_47 { pt3dadd( -6.17708, 95.6194, -159.997, 0.88 ) }
    dend_47 { pt3dadd( -6.18879, 95.6785, -160.033, 0.88 ) }
    dend_47 { pt3dadd( -6.20846, 95.9415, -160.176, 0.88 ) }
    dend_47 { pt3dadd( -6.28308, 96.7298, -160.65, 0.15 ) }
    dend_47 { pt3dadd( -6.34857, 97.2649, -161.011, 0.52 ) }
    dend_47 { pt3dadd( -6.57214, 98.4355, -161.869, 0.22 ) }
    dend_47 { pt3dadd( -6.76978, 99.0485, -162.371, 0.22 ) }
    dend_47 { pt3dadd( -6.79226, 99.1045, -162.423, 0.22 ) }
    dend_47 { pt3dadd( -7.13164, 99.8735, -163.207, 0.22 ) }
    dend_47 { pt3dadd( -7.34168, 100.364, -163.746, 0.22 ) }
    dend_47 { pt3dadd( -7.75581, 101.412, -164.92, 1.69 ) }
    dend_47 { pt3dadd( -7.93238, 101.968, -165.648, 1.47 ) }
    dend_47 { pt3dadd( -8.29162, 103.431, -167.747, 0.29 ) }
    dend_47 { pt3dadd( -8.42511, 104.18, -168.868, 0.22 ) }
    dend_47 { pt3dadd( -8.50232, 105.228, -170.493, 1.11 ) }
    dend_47 { pt3dadd( -8.50512, 105.498, -170.926, 1.11 ) }
    dend_47 { pt3dadd( -8.43513, 107.697, -174.703, 0.37 ) }
    dend_47 { pt3dadd( -8.43362, 107.726, -174.755, 0.37 ) }
    dend_47 { pt3dadd( -8.42679, 107.979, -175.221, 1.03 ) }
    dend_47 { pt3dadd( -8.44818, 109.056, -177.228, 0.22 ) }
    dend_47 { pt3dadd( -8.5169, 109.84, -178.69, 1.55 ) }
    dend_47 { pt3dadd( -8.63279, 110.714, -180.304, 1.62 ) }
    dend_47 { pt3dadd( -8.99826, 112.369, -183.221, 0.22 ) }
    dend_47 { pt3dadd( -9.31125, 113.514, -185.254, 1.47 ) }
    dend_47 { pt3dadd( -9.39187, 113.746, -185.669, 2.06 ) }
    dend_47 { pt3dadd( -9.59893, 114.251, -186.522, 2.06 ) }
    dend_47 { pt3dadd( -9.61643, 114.294, -186.587, 2.06 ) }
    dend_47 { pt3dadd( -10.2853, 116.133, -189.027, 0.15 ) }
    dend_47 { pt3dadd( -10.443, 116.606, -189.624, 1.03 ) }
    dend_47 { pt3dadd( -10.5513, 116.976, -190.074, 1.4 ) }
    dend_47 { pt3dadd( -10.9574, 118.538, -191.917, 0.15 ) }
    dend_47 { pt3dadd( -11.2364, 119.763, -193.314, 1.33 ) }
    dend_47 { pt3dadd( -11.5709, 121.366, -195.112, 0.22 ) }
    dend_47 { pt3dadd( -11.7479, 122.368, -196.177, 0.81 ) }
    dend_47 { pt3dadd( -11.7729, 122.514, -196.34, 1.18 ) }
    dend_47 { pt3dadd( -11.8858, 123.062, -197.018, 0.59 ) }
    dend_47 { pt3dadd( -12.0471, 123.698, -197.858, 1.25 ) }
    dend_47 { pt3dadd( -12.062, 123.745, -197.92, 1.25 ) }
    dend_47 { pt3dadd( -12.2521, 124.121, -198.463, 1.25 ) }
    dend_47 { pt3dadd( -13.2244, 125.676, -200.868, 1.11 ) }
    dend_47 { pt3dadd( -13.9838, 126.753, -202.638, 0.22 ) }
    dend_47 { pt3dadd( -14.0204, 126.799, -202.717, 0.22 ) }
    dend_47 { pt3dadd( -14.6112, 127.456, -203.853, 1.77 ) }
    dend_47 { pt3dadd( -16.5015, 129.475, -207.277, 0.15 ) }
    dend_47 { pt3dadd( -17.0599, 130.062, -208.237, 1.4 ) }
    dend_47 { pt3dadd( -17.0917, 130.102, -208.299, 1.4 ) }
    dend_47 { pt3dadd( -17.238, 130.348, -208.662, 2.06 ) }
    dend_47 { pt3dadd( -17.9476, 132.656, -211.739, 0.22 ) }
    dend_47 { pt3dadd( -18.0732, 133.607, -212.904, 2.21 ) }
    dend_47 { pt3dadd( -18.0701, 134.07, -213.411, 2.95 ) }
    dend_47 { pt3dadd( -17.8967, 137.559, -217.154, 0.22 ) }
    dend_47 { pt3dadd( -17.7782, 138.812, -218.486, 1.84 ) }
    dend_47 { pt3dadd( -17.2013, 142.225, -222.049, 0.22 ) }
    dend_47 { pt3dadd( -17.0678, 142.678, -222.496, 0.96 ) }
    dend_47 { pt3dadd( -17.0414, 142.757, -222.573, 0.96 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 59/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.29549, 69.5885, -134.259, 0.22 ) }
    dend_46 { pt3dadd( -5.3616, 71.5641, -135.825, 0.22 ) }
    dend_46 { pt3dadd( -6.00671, 71.9359, -136.079, 0.44 ) }
    dend_46 { pt3dadd( -7.37619, 72.6679, -136.516, 0.22 ) }
    dend_46 { pt3dadd( -8.14962, 73.0586, -136.73, 1.03 ) }
    dend_46 { pt3dadd( -8.38395, 73.1728, -136.785, 1.18 ) }
    dend_46 { pt3dadd( -9.712, 73.8275, -137.048, 0.22 ) }
    dend_46 { pt3dadd( -11.1158, 74.4746, -137.126, 0.22 ) }
    dend_46 { pt3dadd( -11.9011, 74.8236, -137.167, 1.4 ) }
    dend_46 { pt3dadd( -12.4599, 75.0711, -137.193, 1.62 ) }
    dend_46 { pt3dadd( -13.8882, 75.7421, -137.246, 0.22 ) }
    dend_46 { pt3dadd( -14.908, 76.2478, -137.265, 0.22 ) }
    dend_46 { pt3dadd( -14.9785, 76.2856, -137.265, 0.22 ) }
    dend_46 { pt3dadd( -15.556, 76.5993, -137.248, 0.22 ) }
    dend_46 { pt3dadd( -16.3055, 77.0038, -137.215, 1.33 ) }
    dend_46 { pt3dadd( -17.0127, 77.3789, -137.174, 1.69 ) }
    dend_46 { pt3dadd( -18.3816, 78.0899, -137.067, 0.15 ) }
    dend_46 { pt3dadd( -19.376, 78.6008, -136.976, 0.74 ) }
    dend_46 { pt3dadd( -20.6594, 79.3038, -136.848, 0.15 ) }
    dend_46 { pt3dadd( -21.1193, 79.5833, -136.79, 0.15 ) }
    dend_46 { pt3dadd( -21.176, 79.6237, -136.783, 0.15 ) }
    dend_46 { pt3dadd( -21.6861, 80.0469, -136.742, 0.88 ) }
    dend_46 { pt3dadd( -22.1726, 80.5235, -136.728, 1.25 ) }
    dend_46 { pt3dadd( -22.6011, 80.9234, -136.795, 1.11 ) }
    dend_46 { pt3dadd( -23.5771, 81.7899, -137.07, 0.22 ) }
    dend_46 { pt3dadd( -24.6074, 82.6669, -137.411, 0.22 ) }
    dend_46 { pt3dadd( -25.4213, 83.3103, -137.674, 1.03 ) }
    dend_46 { pt3dadd( -25.6282, 83.4614, -137.747, 1.33 ) }
    dend_46 { pt3dadd( -27.875, 84.9948, -138.532, 0.15 ) }
    dend_46 { pt3dadd( -27.9236, 85.0256, -138.549, 0.15 ) }
    dend_46 { pt3dadd( -28.3097, 85.2748, -138.721, 1.03 ) }
    dend_46 { pt3dadd( -29.7482, 86.2624, -139.414, 0.22 ) }
    dend_46 { pt3dadd( -30.4043, 86.7728, -139.748, 1.18 ) }
    dend_46 { pt3dadd( -31.01, 87.3095, -140.107, 1.33 ) }
    dend_46 { pt3dadd( -31.0537, 87.3555, -140.137, 1.33 ) }
    dend_46 { pt3dadd( -32.6736, 89.1139, -141.37, 0.15 ) }
    dend_46 { pt3dadd( -33.0701, 89.5463, -141.729, 0.66 ) }
    dend_46 { pt3dadd( -33.3157, 89.8182, -141.983, 0.66 ) }
    dend_46 { pt3dadd( -34.0739, 90.6242, -142.763, 0.22 ) }
    dend_46 { pt3dadd( -34.2633, 90.8003, -142.946, 0.66 ) }
    dend_46 { pt3dadd( -34.5275, 91.0195, -143.17, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_46 { pt3dadd( -35.6737, 91.8548, -143.991, 0.15 ) }
    dend_46 { pt3dadd( -36.0896, 92.1553, -144.293, 0.66 ) }
    dend_46 { pt3dadd( -36.6344, 92.5482, -144.686, 0.66 ) }
    dend_46 { pt3dadd( -37.9825, 93.5757, -145.65, 0.22 ) }
    dend_46 { pt3dadd( -38.4823, 93.9777, -146.015, 0.88 ) }
    dend_46 { pt3dadd( -38.7262, 94.1849, -146.205, 1.25 ) }
    dend_46 { pt3dadd( -40.7166, 95.9776, -147.813, 0.22 ) }
    dend_46 { pt3dadd( -40.7528, 96.0123, -147.846, 0.22 ) }
    dend_46 { pt3dadd( -41.4135, 96.6767, -148.483, 1.03 ) }
    dend_46 { pt3dadd( -41.5819, 96.8479, -148.664, 1.03 ) }
    dend_46 { pt3dadd( -42.8708, 98.1116, -150.071, 0.22 ) }
    dend_46 { pt3dadd( -42.9054, 98.1447, -150.107, 0.22 ) }
    dend_46 { pt3dadd( -43.6975, 98.8509, -150.922, 0.96 ) }
    dend_46 { pt3dadd( -43.9999, 99.0995, -151.22, 1.4 ) }
    dend_46 { pt3dadd( -45.3718, 100.159, -152.544, 0.15 ) }
    dend_46 { pt3dadd( -45.903, 100.554, -153.041, 0.44 ) }
    dend_46 { pt3dadd( -46.5296, 101.003, -153.576, 0.15 ) }
    dend_46 { pt3dadd( -47.3735, 101.587, -154.255, 1.03 ) }
    dend_46 { pt3dadd( -47.647, 101.762, -154.446, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.482523, 163.398, -169.432, 0.22 ) }
    dend_44 { pt3dadd( -0.655841, 164.294, -170.286, 0.22 ) }
    dend_44 { pt3dadd( -1.00027, 166.139, -171.914, 1.33 ) }
    dend_44 { pt3dadd( -1.13436, 166.874, -172.518, 1.62 ) }
    dend_44 { pt3dadd( -1.54797, 168.941, -174.281, 0.22 ) }
    dend_44 { pt3dadd( -1.73354, 169.818, -175.037, 0.22 ) }
    dend_44 { pt3dadd( -1.75456, 169.908, -175.114, 0.22 ) }
    dend_44 { pt3dadd( -1.97279, 170.702, -175.768, 1.03 ) }
    dend_44 { pt3dadd( -2.09249, 171.109, -176.061, 1.03 ) }
    dend_44 { pt3dadd( -2.62124, 172.794, -177.219, 0.22 ) }
    dend_44 { pt3dadd( -2.66168, 172.924, -177.306, 0.22 ) }
    dend_44 { pt3dadd( -2.89425, 173.613, -177.834, 0.22 ) }
    dend_44 { pt3dadd( -2.91226, 173.667, -177.876, 0.22 ) }
    dend_44 { pt3dadd( -3.45188, 175.046, -178.997, 1.84 ) }
    dend_44 { pt3dadd( -3.67264, 175.581, -179.403, 2.43 ) }
    dend_44 { pt3dadd( -3.71343, 175.674, -179.465, 2.43 ) }
    dend_44 { pt3dadd( -4.25882, 176.861, -180.219, 1.11 ) }
    dend_44 { pt3dadd( -4.82797, 178.07, -180.946, 0.22 ) }
    dend_44 { pt3dadd( -5.34504, 179.104, -181.546, 0.22 ) }
    dend_44 { pt3dadd( -5.76763, 179.87, -181.959, 0.81 ) }
    dend_44 { pt3dadd( -6.12732, 180.533, -182.298, 1.99 ) }
    dend_44 { pt3dadd( -6.42004, 181.07, -182.552, 1.4 ) }
    dend_44 { pt3dadd( -6.69149, 181.616, -182.805, 0.96 ) }
    dend_44 { pt3dadd( -7.24223, 182.95, -183.466, 0.15 ) }
    dend_44 { pt3dadd( -7.48139, 183.695, -183.879, 0.15 ) }
    dend_44 { pt3dadd( -7.71961, 184.59, -184.419, 1.25 ) }
    dend_44 { pt3dadd( -7.78348, 184.867, -184.591, 1.62 ) }
    dend_44 { pt3dadd( -8.02835, 186.206, -185.414, 0.15 ) }
    dend_44 { pt3dadd( -8.09807, 186.721, -185.827, 0.52 ) }
    dend_44 { pt3dadd( -8.1425, 187.076, -186.108, 0.52 ) }
    dend_44 { pt3dadd( -8.26058, 187.924, -186.757, 0.15 ) }
    dend_44 { pt3dadd( -8.43458, 188.993, -187.537, 1.4 ) }
    dend_44 { pt3dadd( -8.54754, 189.583, -187.95, 1.99 ) }
    dend_44 { pt3dadd( -9.49222, 193.848, -190.91, 0.15 ) }
    dend_44 { pt3dadd( -9.83727, 195.366, -191.964, 0.15 ) }
    dend_44 { pt3dadd( -10.0563, 196.367, -192.639, 1.18 ) }
    dend_44 { pt3dadd( -10.1469, 196.807, -192.917, 2.14 ) }
    dend_44 { pt3dadd( -10.2193, 197.161, -193.125, 2.14 ) }
    dend_44 { pt3dadd( -10.7166, 199.447, -194.309, 0.15 ) }
    dend_44 { pt3dadd( -10.8922, 200.288, -194.609, 0.66 ) }
    dend_44 { pt3dadd( -11.153, 201.676, -195.18, 0.22 ) }
    dend_44 { pt3dadd( -11.3157, 202.607, -195.564, 0.96 ) }
    dend_44 { pt3dadd( -11.4023, 203.132, -195.765, 1.11 ) }
    dend_44 { pt3dadd( -11.4242, 203.26, -195.814, 1.11 ) }
    dend_44 { pt3dadd( -11.5602, 203.993, -196.066, 1.11 ) }
    dend_44 { pt3dadd( -12.0126, 206.314, -196.908, 0.22 ) }
    dend_44 { pt3dadd( -12.2314, 207.32, -197.272, 0.22 ) }
    dend_44 { pt3dadd( -12.5118, 208.566, -197.72, 1.47 ) }
    dend_44 { pt3dadd( -12.7922, 209.939, -198.242, 0.22 ) }
    dend_44 { pt3dadd( -12.9293, 210.7, -198.545, 0.81 ) }
    dend_44 { pt3dadd( -12.9715, 210.975, -198.657, 0.81 ) }
    dend_44 { pt3dadd( -13.1571, 212.652, -199.303, 0.22 ) }
    dend_44 { pt3dadd( -13.1706, 213.204, -199.54, 0.96 ) }
    dend_44 { pt3dadd( -13.0084, 214.796, -200.332, 0.22 ) }
    dend_44 { pt3dadd( -12.8747, 215.512, -200.753, 1.4 ) }
    dend_44 { pt3dadd( -12.7804, 215.93, -201.027, 1.77 ) }
    dend_44 { pt3dadd( -12.602, 216.721, -201.536, 1.55 ) }
    dend_44 { pt3dadd( -12.1853, 218.486, -202.677, 0.22 ) }
    dend_44 { pt3dadd( -11.9374, 219.648, -203.396, 0.59 ) }
    dend_44 { pt3dadd( -11.249, 223.57, -205.546, 0.22 ) }
    dend_44 { pt3dadd( -11.2404, 223.633, -205.576, 0.22 ) }
    dend_44 { pt3dadd( -11.0513, 225.579, -206.409, 0.22 ) }
    dend_44 { pt3dadd( -11.0483, 225.645, -206.433, 0.22 ) }
    dend_44 { pt3dadd( -11.0562, 226.428, -206.625, 0.96 ) }
    dend_44 { pt3dadd( -11.1063, 228.171, -206.869, 0.22 ) }
    dend_44 { pt3dadd( -11.1289, 229.34, -206.889, 0.37 ) }
    dend_44 { pt3dadd( -11.1401, 230.294, -206.907, 0.15 ) }
    dend_44 { pt3dadd( -11.1381, 230.592, -206.913, 0.44 ) }
    dend_44 { pt3dadd( -11.125, 231.338, -206.927, 0.22 ) }
    dend_44 { pt3dadd( -11.0983, 232.074, -206.938, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -0.482523, 163.398, -169.432, 0.22 ) }
    dend_43 { pt3dadd( -1.4173, 162.977, -169.466, 0.22 ) }
    dend_43 { pt3dadd( -1.68404, 162.844, -169.474, 0.29 ) }
    dend_43 { pt3dadd( -2.27385, 162.538, -169.506, 0.15 ) }
    dend_43 { pt3dadd( -2.84222, 162.24, -169.543, 0.29 ) }
    dend_43 { pt3dadd( -4.04383, 161.609, -169.621, 0.15 ) }
    dend_43 { pt3dadd( -5.28249, 160.958, -169.701, 0.44 ) }
    dend_43 { pt3dadd( -5.9286, 160.609, -169.748, 0.15 ) }
    dend_43 { pt3dadd( -6.48007, 160.296, -169.79, 0.59 ) }
    dend_43 { pt3dadd( -6.76103, 160.122, -169.813, 0.59 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 99/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -19.1538, 17.7656, -39.7819, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -19.1785, 17.7807, -44.8907, 2.28 ) }
    dend_34 { pt3dadd( -19.2717, 17.7869, -46.1555, 2.21 ) }
    dend_34 { pt3dadd( -19.875, 17.7673, -50.8936, 2.43 ) }
    dend_34 { pt3dadd( -20.0369, 17.7431, -51.8283, 2.58 ) }
    dend_34 { pt3dadd( -20.1034, 17.7242, -52.1305, 2.58 ) }
    dend_34 { pt3dadd( -21.0667, 17.3289, -55.7164, 0.52 ) }
    dend_34 { pt3dadd( -21.5253, 17.1747, -56.7067, 2.06 ) }
    dend_34 { pt3dadd( -21.8639, 17.0591, -57.3042, 2.43 ) }
    dend_34 { pt3dadd( -23.01, 16.5923, -58.997, 1.62 ) }
    dend_34 { pt3dadd( -23.7299, 16.2983, -60.0419, 0.59 ) }
    dend_34 { pt3dadd( -24.7495, 15.9269, -61.4451, 2.58 ) }
    dend_34 { pt3dadd( -25.9762, 15.5512, -63.0079, 3.61 ) }
    dend_34 { pt3dadd( -27.6672, 15.1121, -65.2127, 0.59 ) }
    dend_34 { pt3dadd( -28.3233, 14.9557, -66.1064, 0.29 ) }
    dend_34 { pt3dadd( -28.386, 14.9434, -66.1914, 0.29 ) }
    dend_34 { pt3dadd( -28.7187, 14.8889, -66.6821, 0.59 ) }
    dend_34 { pt3dadd( -29.053, 14.8254, -67.1723, 0.44 ) }
    dend_34 { pt3dadd( -29.945, 14.5289, -68.4946, 0.22 ) }
    dend_34 { pt3dadd( -30.9138, 14.1341, -69.8304, 0.22 ) }
    dend_34 { pt3dadd( -30.949, 14.1203, -69.877, 0.22 ) }
    dend_34 { pt3dadd( -31.8713, 13.8277, -71.0069, 2.06 ) }
    dend_34 { pt3dadd( -32.7571, 13.5884, -72.0394, 3.39 ) }
    dend_34 { pt3dadd( -33.9005, 13.3519, -73.2445, 3.61 ) }
    dend_34 { pt3dadd( -35.5292, 13.1359, -74.739, 2.06 ) }
    dend_34 { pt3dadd( -36.6194, 13.0237, -75.601, 0.44 ) }
    dend_34 { pt3dadd( -37.704, 12.91, -76.3694, 0.22 ) }
    dend_34 { pt3dadd( -37.8244, 12.9, -76.4401, 0.22 ) }
    dend_34 { pt3dadd( -38.5684, 12.8573, -76.7911, 0.22 ) }
    dend_34 { pt3dadd( -38.6451, 12.857, -76.8139, 0.22 ) }
    dend_34 { pt3dadd( -39.7339, 12.9153, -76.9593, 0.22 ) }
    dend_34 { pt3dadd( -40.6199, 13.0207, -76.9884, 0.22 ) }
    dend_34 { pt3dadd( -41.4522, 13.1788, -77.0827, 0.66 ) }
    dend_34 { pt3dadd( -41.5596, 13.2068, -77.1044, 0.66 ) }
    dend_34 { pt3dadd( -42.2955, 13.4575, -77.3455, 0.88 ) }
    dend_34 { pt3dadd( -42.7885, 13.6575, -77.5345, 0.22 ) }
    dend_34 { pt3dadd( -43.4105, 13.9258, -77.7822, 0.22 ) }
    dend_34 { pt3dadd( -44.8281, 14.4938, -78.3525, 0.81 ) }
    dend_34 { pt3dadd( -45.408, 14.7055, -78.5857, 0.96 ) }
    dend_34 { pt3dadd( -46.2557, 14.9975, -78.9089, 0.59 ) }
    dend_34 { pt3dadd( -47.5333, 15.4139, -79.3815, 0.22 ) }
    dend_34 { pt3dadd( -48.6646, 15.7644, -79.7813, 0.22 ) }
    dend_34 { pt3dadd( -49.7113, 16.0652, -80.1095, 2.14 ) }
    dend_34 { pt3dadd( -50.7839, 16.3646, -80.3571, 3.46 ) }
    dend_34 { pt3dadd( -51.5968, 16.5985, -80.542, 3.76 ) }
    dend_34 { pt3dadd( -51.6536, 16.6144, -80.5531, 3.76 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 45/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -19.1538, 17.7656, -39.7819, 0.22 ) }
    dend_31 { pt3dadd( -20.1077, 17.9321, -39.8127, 0.22 ) }
    dend_31 { pt3dadd( -21.6301, 18.1978, -39.8617, 0.22 ) }
    dend_31 { pt3dadd( -21.7581, 18.2201, -39.8658, 0.22 ) }
    dend_31 { pt3dadd( -23.1026, 18.4548, -39.9091, 2.14 ) }
    dend_31 { pt3dadd( -23.9291, 18.599, -39.9357, 2.65 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 51/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.98561, 35.3595, -32.0526, 0.29 ) }
    dend_29 { pt3dadd( -6.34875, 35.7025, -32.851, 0.29 ) }
    dend_29 { pt3dadd( -6.3805, 35.732, -32.9059, 0.29 ) }
    dend_29 { pt3dadd( -6.63107, 35.9821, -33.3233, 0.44 ) }
    dend_29 { pt3dadd( -7.2565, 36.6722, -34.3714, 0.66 ) }
    dend_29 { pt3dadd( -8.01537, 37.5559, -35.658, 0.22 ) }
    dend_29 { pt3dadd( -8.51132, 38.1565, -36.4715, 0.37 ) }
    dend_29 { pt3dadd( -8.97077, 38.7882, -37.2997, 0.37 ) }
    dend_29 { pt3dadd( -9.31203, 39.3051, -37.8975, 0.29 ) }
    dend_29 { pt3dadd( -9.72353, 39.9368, -38.6, 1.03 ) }
    dend_29 { pt3dadd( -9.7549, 39.9899, -38.6511, 1.03 ) }
    dend_29 { pt3dadd( -10.0055, 40.5022, -39.1162, 1.25 ) }
    dend_29 { pt3dadd( -10.4917, 41.6484, -40.2077, 0.22 ) }
    dend_29 { pt3dadd( -10.7572, 42.2971, -40.8856, 0.52 ) }
    dend_29 { pt3dadd( -11.2652, 43.4305, -42.116, 0.22 ) }
    dend_29 { pt3dadd( -11.4506, 43.8071, -42.5383, 0.22 ) }
    dend_29 { pt3dadd( -11.729, 44.3071, -43.1522, 0.44 ) }
    dend_29 { pt3dadd( -11.7735, 44.3793, -43.2507, 0.44 ) }
    dend_29 { pt3dadd( -12.127, 44.8551, -43.9087, 0.29 ) }
    dend_29 { pt3dadd( -12.4139, 45.1817, -44.3358, 0.59 ) }
    dend_29 { pt3dadd( -12.6525, 45.4446, -44.6318, 0.81 ) }
    dend_29 { pt3dadd( -13.3821, 46.1749, -45.43, 0.59 ) }
    dend_29 { pt3dadd( -13.4214, 46.2149, -45.4718, 0.59 ) }
    dend_29 { pt3dadd( -13.9807, 46.8166, -46.0576, 0.29 ) }
    dend_29 { pt3dadd( -14.7873, 47.7226, -46.897, 1.99 ) }
    dend_29 { pt3dadd( -15.2749, 48.2836, -47.3903, 2.5 ) }
    dend_29 { pt3dadd( -15.8452, 48.9465, -47.9471, 2.8 ) }
    dend_29 { pt3dadd( -17.5477, 50.9099, -49.4707, 0.22 ) }
    dend_29 { pt3dadd( -18.0078, 51.431, -49.8574, 0.88 ) }
    dend_29 { pt3dadd( -18.049, 51.4772, -49.8901, 0.88 ) }
    dend_29 { pt3dadd( -18.4236, 51.8961, -50.1734, 0.66 ) }
    dend_29 { pt3dadd( -18.9494, 52.4744, -50.5339, 0.22 ) }
    dend_29 { pt3dadd( -19.3843, 52.9498, -50.8243, 0.22 ) }
    dend_29 { pt3dadd( -19.9544, 53.5207, -51.1885, 0.22 ) }
    dend_29 { pt3dadd( -20.5632, 54.1255, -51.6571, 1.03 ) }
    dend_29 { pt3dadd( -20.9345, 54.4987, -51.9817, 1.55 ) }
    dend_29 { pt3dadd( -21.171, 54.74, -52.2117, 1.77 ) }
    dend_29 { pt3dadd( -22.005, 55.6281, -53.1418, 0.22 ) }
    dend_29 { pt3dadd( -22.5341, 56.2331, -53.8878, 0.22 ) }
    dend_29 { pt3dadd( -23.0504, 56.8443, -54.7257, 1.69 ) }
    dend_29 { pt3dadd( -23.3918, 57.2235, -55.2915, 2.21 ) }
    dend_29 { pt3dadd( -23.4224, 57.2567, -55.345, 2.21 ) }
    dend_29 { pt3dadd( -23.7237, 57.5823, -56.0488, 2.21 ) }
    dend_29 { pt3dadd( -24.6521, 58.7036, -58.6617, 0.22 ) }
    dend_29 { pt3dadd( -24.6676, 58.7263, -58.715, 0.22 ) }
    dend_29 { pt3dadd( -24.9818, 59.2305, -59.9159, 1.55 ) }
    dend_29 { pt3dadd( -25.1968, 59.5805, -60.7464, 2.36 ) }
    dend_29 { pt3dadd( -26.4597, 61.6481, -65.6141, 0.29 ) }
    dend_29 { pt3dadd( -26.7038, 62.0566, -66.519, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_29 { pt3dadd( -27.1002, 62.7934, -68.0151, 0.22 ) }
    dend_29 { pt3dadd( -27.1165, 62.8266, -68.0745, 0.22 ) }
    dend_29 { pt3dadd( -27.3082, 63.2651, -68.745, 0.22 ) }
    dend_29 { pt3dadd( -27.3297, 63.3119, -68.8062, 0.22 ) }
    dend_29 { pt3dadd( -27.8508, 64.4144, -69.9635, 2.36 ) }
    dend_29 { pt3dadd( -28.0885, 64.9352, -70.5778, 2.73 ) }
    dend_29 { pt3dadd( -29.0539, 67.167, -73.3111, 0.22 ) }
    dend_29 { pt3dadd( -29.2187, 67.571, -73.8029, 0.88 ) }
    dend_29 { pt3dadd( -29.3086, 67.8153, -74.0921, 1.03 ) }
    dend_29 { pt3dadd( -29.3252, 67.8592, -74.1439, 1.03 ) }
    dend_29 { pt3dadd( -30.0058, 69.5953, -76.3849, 0.22 ) }
    dend_29 { pt3dadd( -30.0223, 69.6359, -76.4395, 0.22 ) }
    dend_29 { pt3dadd( -30.312, 70.4675, -77.5304, 0.22 ) }
    dend_29 { pt3dadd( -30.5629, 71.298, -78.7036, 1.69 ) }
    dend_29 { pt3dadd( -30.6936, 71.7471, -79.3517, 1.92 ) }
    dend_29 { pt3dadd( -31.2562, 73.6564, -82.091, 0.66 ) }
    dend_29 { pt3dadd( -31.4779, 74.4673, -83.2691, 0.29 ) }
    dend_29 { pt3dadd( -31.696, 75.4165, -84.6553, 0.66 ) }
    dend_29 { pt3dadd( -31.8988, 76.7749, -86.7256, 0.22 ) }
    dend_29 { pt3dadd( -31.9459, 77.2369, -87.4315, 1.25 ) }
    dend_29 { pt3dadd( -31.9702, 77.653, -88.0314, 1.69 ) }
    dend_29 { pt3dadd( -32.0342, 79.4841, -90.4182, 0.22 ) }
    dend_29 { pt3dadd( -32.0524, 79.9472, -90.9853, 1.03 ) }
    dend_29 { pt3dadd( -32.1071, 81.3344, -92.5627, 0.22 ) }
    dend_29 { pt3dadd( -32.1067, 81.3919, -92.6184, 0.22 ) }
    dend_29 { pt3dadd( -32.0798, 81.7745, -92.9616, 0.22 ) }
    dend_29 { pt3dadd( -32.0093, 82.4335, -93.4966, 1.11 ) }
    dend_29 { pt3dadd( -31.9535, 82.8503, -93.8172, 1.33 ) }
    dend_29 { pt3dadd( -31.6546, 84.6603, -95.2857, 0.29 ) }
    dend_29 { pt3dadd( -31.5586, 85.0775, -95.6832, 0.29 ) }
    dend_29 { pt3dadd( -31.3388, 85.8407, -96.498, 0.88 ) }
    dend_29 { pt3dadd( -31.267, 86.0522, -96.7804, 0.88 ) }
    dend_29 { pt3dadd( -30.7986, 87.306, -98.6601, 0.22 ) }
    dend_29 { pt3dadd( -30.6024, 87.8462, -99.5677, 1.47 ) }
    dend_29 { pt3dadd( -30.0852, 89.3536, -102.266, 0.29 ) }
    dend_29 { pt3dadd( -30.0256, 89.5221, -102.588, 0.59 ) }
    dend_29 { pt3dadd( -29.4835, 91.0585, -105.67, 0.37 ) }
    dend_29 { pt3dadd( -29.3211, 91.5291, -106.598, 1.18 ) }
    dend_29 { pt3dadd( -29.0153, 92.6234, -108.804, 0.88 ) }
    dend_29 { pt3dadd( -28.9763, 92.8097, -109.201, 1.03 ) }
    dend_29 { pt3dadd( -28.7934, 93.7006, -111.158, 0.37 ) }
    dend_29 { pt3dadd( -28.6078, 94.4508, -112.833, 1.33 ) }
    dend_29 { pt3dadd( -28.5098, 94.7815, -113.555, 1.33 ) }
    dend_29 { pt3dadd( -27.9875, 96.3053, -116.93, 1.03 ) }
    dend_29 { pt3dadd( -27.7976, 96.8127, -118.011, 1.18 ) }
    dend_29 { pt3dadd( -27.3276, 98.0927, -120.63, 0.22 ) }
    dend_29 { pt3dadd( -27.2008, 98.4946, -121.406, 1.25 ) }
    dend_29 { pt3dadd( -27.134, 98.7148, -121.823, 1.4 ) }
    dend_29 { pt3dadd( -26.8442, 99.7535, -123.885, 0.15 ) }
    dend_29 { pt3dadd( -26.7619, 100.214, -124.734, 0.81 ) }
    dend_29 { pt3dadd( -26.7885, 100.436, -125.192, 0.81 ) }
    dend_29 { pt3dadd( -27.1645, 101.201, -126.872, 0.29 ) }
    dend_29 { pt3dadd( -27.4578, 101.611, -127.809, 0.59 ) }
    dend_29 { pt3dadd( -28.3711, 102.51, -129.986, 1.25 ) }
    dend_29 { pt3dadd( -28.9556, 102.958, -131.12, 1.4 ) }
    dend_29 { pt3dadd( -30.6906, 104.096, -134.111, 0.15 ) }
    dend_29 { pt3dadd( -31.355, 104.488, -135.147, 0.15 ) }
    dend_29 { pt3dadd( -31.7352, 104.699, -135.698, 1.03 ) }
    dend_29 { pt3dadd( -33.1773, 105.488, -137.657, 0.22 ) }
    dend_29 { pt3dadd( -33.2186, 105.509, -137.709, 0.22 ) }
    dend_29 { pt3dadd( -33.595, 105.708, -138.193, 1.03 ) }
    dend_29 { pt3dadd( -33.8961, 105.871, -138.554, 1.25 ) }
    dend_29 { pt3dadd( -35.8012, 106.936, -140.883, 0.15 ) }
    dend_29 { pt3dadd( -36.1566, 107.15, -141.287, 0.66 ) }
    dend_29 { pt3dadd( -36.2067, 107.186, -141.339, 0.66 ) }
    dend_29 { pt3dadd( -36.4652, 107.372, -141.573, 0.88 ) }
    dend_29 { pt3dadd( -37.7898, 108.315, -142.641, 0.22 ) }
    dend_29 { pt3dadd( -38.2347, 108.617, -142.941, 0.22 ) }
    dend_29 { pt3dadd( -38.9051, 109.057, -143.293, 1.11 ) }
    dend_29 { pt3dadd( -39.3398, 109.344, -143.537, 1.47 ) }
    dend_29 { pt3dadd( -39.6803, 109.585, -143.755, 1.47 ) }
    dend_29 { pt3dadd( -41.3358, 110.868, -144.952, 0.22 ) }
    dend_29 { pt3dadd( -41.73, 111.214, -145.263, 0.74 ) }
    dend_29 { pt3dadd( -41.9184, 111.387, -145.418, 0.88 ) }
    dend_29 { pt3dadd( -41.955, 111.423, -145.449, 0.88 ) }
    dend_29 { pt3dadd( -42.8094, 112.288, -146.184, 0.22 ) }
    dend_29 { pt3dadd( -43.3532, 112.863, -146.634, 0.22 ) }
    dend_29 { pt3dadd( -43.8965, 113.484, -147.116, 0.52 ) }
    dend_29 { pt3dadd( -44.2616, 113.898, -147.455, 1.18 ) }
    dend_29 { pt3dadd( -45.0505, 114.727, -148.207, 0.22 ) }
    dend_29 { pt3dadd( -45.9022, 115.484, -149.007, 0.88 ) }
    dend_29 { pt3dadd( -46.2395, 115.738, -149.315, 1.03 ) }
    dend_29 { pt3dadd( -47.5068, 116.587, -150.483, 0.22 ) }
    dend_29 { pt3dadd( -48.0312, 116.878, -150.98, 0.22 ) }
    dend_29 { pt3dadd( -49.0243, 117.348, -151.935, 1.11 ) }
    dend_29 { pt3dadd( -50.4292, 117.872, -153.161, 0.15 ) }
    dend_29 { pt3dadd( -50.7352, 117.968, -153.409, 0.59 ) }
    dend_29 { pt3dadd( -50.9743, 118.031, -153.593, 0.59 ) }
    dend_29 { pt3dadd( -52.4911, 118.374, -154.616, 0.22 ) }
    dend_29 { pt3dadd( -52.632, 118.411, -154.722, 0.22 ) }
    dend_29 { pt3dadd( -54.6454, 118.992, -156.201, 0.22 ) }
    dend_29 { pt3dadd( -54.6917, 119.007, -156.236, 0.22 ) }
    dend_29 { pt3dadd( -55.4847, 119.285, -156.849, 1.03 ) }
    dend_29 { pt3dadd( -56.0844, 119.518, -157.315, 1.4 ) }
    dend_29 { pt3dadd( -57.7537, 120.326, -158.545, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 95/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.98561, 35.3595, -32.0526, 0.29 ) }
    dend_28 { pt3dadd( -5.62769, 36.0557, -32.5665, 0.29 ) }
    dend_28 { pt3dadd( -5.2415, 37.0072, -33.2065, 1.69 ) }
    dend_28 { pt3dadd( -5.12196, 37.4153, -33.454, 2.36 ) }
    dend_28 { pt3dadd( -4.91214, 38.3075, -33.9619, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -4.49543, 40.355, -35.0802, 0.29 ) }
    dend_28 { pt3dadd( -4.37933, 40.9162, -35.387, 0.44 ) }
    dend_28 { pt3dadd( -4.26482, 41.6907, -35.8113, 0.44 ) }
    dend_28 { pt3dadd( -4.1688, 42.5678, -36.2752, 0.22 ) }
    dend_28 { pt3dadd( -4.13104, 42.8513, -36.4272, 0.22 ) }
    dend_28 { pt3dadd( -4.12023, 42.9032, -36.4552, 0.22 ) }
    dend_28 { pt3dadd( -3.86982, 43.6191, -36.9691, 0.37 ) }
    dend_28 { pt3dadd( -3.81467, 43.7311, -37.0716, 0.37 ) }
    dend_28 { pt3dadd( -3.77012, 43.8212, -37.154, 0.37 ) }
    dend_28 { pt3dadd( -3.53729, 44.4261, -37.6472, 0.37 ) }
    dend_28 { pt3dadd( -3.34535, 45.0823, -38.1478, 0.22 ) }
    dend_28 { pt3dadd( -2.98578, 46.5088, -39.1947, 2.06 ) }
    dend_28 { pt3dadd( -2.78463, 47.3974, -39.8162, 2.73 ) }
    dend_28 { pt3dadd( -2.39408, 49.1573, -40.9946, 0.22 ) }
    dend_28 { pt3dadd( -2.13168, 50.1992, -41.6909, 0.22 ) }
    dend_28 { pt3dadd( -1.80899, 51.2407, -42.3921, 0.22 ) }
    dend_28 { pt3dadd( -1.57474, 51.8378, -42.8037, 0.22 ) }
    dend_28 { pt3dadd( -1.16128, 52.741, -43.5106, 1.77 ) }
    dend_28 { pt3dadd( -0.986189, 53.094, -43.8051, 1.99 ) }
    dend_28 { pt3dadd( -0.153144, 54.4546, -45.063, 0.22 ) }
    dend_28 { pt3dadd( 0.438245, 55.3069, -45.9015, 2.28 ) }
    dend_28 { pt3dadd( 0.885067, 55.9613, -46.5368, 2.5 ) }
    dend_28 { pt3dadd( 1.95624, 57.7681, -48.2686, 0.44 ) }
    dend_28 { pt3dadd( 2.26938, 58.3899, -48.8703, 0.44 ) }
    dend_28 { pt3dadd( 2.74904, 59.5564, -49.976, 0.29 ) }
    dend_28 { pt3dadd( 2.76218, 59.6073, -50.0222, 0.29 ) }
    dend_28 { pt3dadd( 2.88129, 60.3899, -50.6821, 0.22 ) }
    dend_28 { pt3dadd( 3.06962, 61.7715, -51.7586, 1.69 ) }
    dend_28 { pt3dadd( 3.14395, 62.4324, -52.2331, 2.21 ) }
    dend_28 { pt3dadd( 3.16753, 62.6763, -52.4062, 2.21 ) }
    dend_28 { pt3dadd( 3.33243, 64.3357, -53.5039, 0.52 ) }
    dend_28 { pt3dadd( 3.53169, 65.2506, -54.0978, 0.22 ) }
    dend_28 { pt3dadd( 3.72349, 65.7861, -54.4275, 0.22 ) }
    dend_28 { pt3dadd( 3.76982, 65.883, -54.4811, 0.22 ) }
    dend_28 { pt3dadd( 4.28058, 66.8291, -54.9918, 1.62 ) }
    dend_28 { pt3dadd( 4.57138, 67.3194, -55.2592, 1.84 ) }
    dend_28 { pt3dadd( 5.22427, 68.3265, -55.8355, 0.22 ) }
    dend_28 { pt3dadd( 5.70408, 69.0949, -56.3523, 0.59 ) }
    dend_28 { pt3dadd( 5.78677, 69.2518, -56.4647, 0.81 ) }
    dend_28 { pt3dadd( 6.32939, 70.3887, -57.2572, 0.22 ) }
    dend_28 { pt3dadd( 6.71339, 71.2548, -57.8552, 1.84 ) }
    dend_28 { pt3dadd( 7.05849, 72.032, -58.3872, 2.14 ) }
    dend_28 { pt3dadd( 7.49083, 72.8756, -58.9553, 1.62 ) }
    dend_28 { pt3dadd( 8.43011, 74.4475, -60.0068, 0.22 ) }
    dend_28 { pt3dadd( 9.0458, 75.3612, -60.5935, 0.22 ) }
    dend_28 { pt3dadd( 9.22973, 75.6, -60.7304, 0.52 ) }
    dend_28 { pt3dadd( 9.61258, 76.0074, -60.9315, 0.52 ) }
    dend_28 { pt3dadd( 10.5264, 76.8075, -61.227, 0.22 ) }
    dend_28 { pt3dadd( 10.8408, 77.019, -61.285, 0.81 ) }
    dend_28 { pt3dadd( 11.1183, 77.1563, -61.3151, 0.81 ) }
    dend_28 { pt3dadd( 11.6011, 77.3683, -61.3899, 0.44 ) }
    dend_28 { pt3dadd( 12.7305, 77.8703, -61.6242, 0.22 ) }
    dend_28 { pt3dadd( 12.8015, 77.9016, -61.6439, 0.22 ) }
    dend_28 { pt3dadd( 13.5514, 78.2251, -61.8904, 1.62 ) }
    dend_28 { pt3dadd( 14.1609, 78.4825, -62.1054, 2.28 ) }
    dend_28 { pt3dadd( 14.9667, 78.8167, -62.4113, 1.77 ) }
    dend_28 { pt3dadd( 15.916, 79.2092, -62.7957, 0.52 ) }
    dend_28 { pt3dadd( 16.7654, 79.5805, -63.1562, 0.22 ) }
    dend_28 { pt3dadd( 16.8339, 79.6114, -63.1836, 0.22 ) }
    dend_28 { pt3dadd( 17.2928, 79.8058, -63.3685, 0.22 ) }
    dend_28 { pt3dadd( 17.387, 79.839, -63.4049, 0.22 ) }
    dend_28 { pt3dadd( 17.7241, 79.9237, -63.513, 0.22 ) }
    dend_28 { pt3dadd( 18.1319, 79.9727, -63.6417, 0.74 ) }
    dend_28 { pt3dadd( 18.8226, 80.0666, -63.8586, 0.74 ) }
    dend_28 { pt3dadd( 20.1734, 80.2597, -64.2962, 0.22 ) }
    dend_28 { pt3dadd( 20.76, 80.3676, -64.4981, 0.74 ) }
    dend_28 { pt3dadd( 21.2547, 80.4781, -64.6878, 0.96 ) }
    dend_28 { pt3dadd( 22.7289, 80.8327, -65.4119, 0.22 ) }
    dend_28 { pt3dadd( 23.5266, 81.0294, -65.8889, 0.22 ) }
    dend_28 { pt3dadd( 23.5837, 81.0441, -65.9266, 0.22 ) }
    dend_28 { pt3dadd( 24.5606, 81.3031, -66.6109, 1.47 ) }
    dend_28 { pt3dadd( 25.3047, 81.4796, -67.1366, 1.99 ) }
    dend_28 { pt3dadd( 26.5554, 81.7196, -67.9955, 1.33 ) }
    dend_28 { pt3dadd( 27.9813, 81.9189, -68.9147, 0.15 ) }
    dend_28 { pt3dadd( 28.4284, 81.9687, -69.1848, 0.29 ) }
    dend_28 { pt3dadd( 28.4976, 81.9767, -69.2241, 0.29 ) }
    dend_28 { pt3dadd( 29.3518, 82.0685, -69.6581, 0.29 ) }
    dend_28 { pt3dadd( 30.3276, 82.2198, -70.0697, 0.81 ) }
    dend_28 { pt3dadd( 30.7608, 82.3195, -70.2228, 0.81 ) }
    dend_28 { pt3dadd( 31.9357, 82.6779, -70.7095, 0.15 ) }
    dend_28 { pt3dadd( 31.9947, 82.6995, -70.7404, 0.15 ) }
    dend_28 { pt3dadd( 32.2966, 82.8217, -70.916, 0.15 ) }
    dend_28 { pt3dadd( 33.365, 83.2909, -71.5787, 1.33 ) }
    dend_28 { pt3dadd( 33.9958, 83.5755, -71.9784, 1.84 ) }
    dend_28 { pt3dadd( 34.8804, 83.9931, -72.5045, 1.62 ) }
    dend_28 { pt3dadd( 36.474, 84.8298, -73.3765, 0.22 ) }
    dend_28 { pt3dadd( 37.2009, 85.255, -73.7494, 1.11 ) }
    dend_28 { pt3dadd( 37.6333, 85.5356, -73.9561, 1.33 ) }
    dend_28 { pt3dadd( 37.687, 85.575, -73.9778, 1.33 ) }
    dend_28 { pt3dadd( 38.8968, 86.5246, -74.3379, 0.22 ) }
    dend_28 { pt3dadd( 39.4627, 87.0514, -74.5221, 0.81 ) }
    dend_28 { pt3dadd( 39.6672, 87.2893, -74.6124, 1.11 ) }
    dend_28 { pt3dadd( 39.6994, 87.3345, -74.6353, 1.11 ) }
    dend_28 { pt3dadd( 39.9927, 87.7987, -74.9281, 1.4 ) }
    dend_28 { pt3dadd( 40.1331, 88.0372, -75.0993, 1.4 ) }
    dend_28 { pt3dadd( 40.9948, 89.6301, -76.4186, 0.22 ) }
    dend_28 { pt3dadd( 41.0269, 89.6859, -76.4661, 0.22 ) }
    dend_28 { pt3dadd( 41.3669, 90.2476, -76.9202, 0.22 ) }
    dend_28 { pt3dadd( 41.4007, 90.2953, -76.9587, 0.22 ) }
    dend_28 { pt3dadd( 41.8797, 90.8576, -77.3506, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( 42.1881, 91.1694, -77.52, 1.4 ) }
    dend_28 { pt3dadd( 42.3383, 91.3026, -77.5624, 1.4 ) }
    dend_28 { pt3dadd( 42.612, 91.5294, -77.6409, 1.4 ) }
    dend_28 { pt3dadd( 43.4347, 92.2344, -77.9002, 0.52 ) }
    dend_28 { pt3dadd( 44.3858, 93.0678, -78.2091, 0.81 ) }
    dend_28 { pt3dadd( 44.4363, 93.113, -78.2264, 0.81 ) }
    dend_28 { pt3dadd( 45.0689, 93.6931, -78.4435, 0.81 ) }
    dend_28 { pt3dadd( 45.6906, 94.2753, -78.645, 0.22 ) }
    dend_28 { pt3dadd( 46.2941, 94.835, -78.8178, 0.22 ) }
    dend_28 { pt3dadd( 46.8678, 95.3735, -78.9502, 0.22 ) }
    dend_28 { pt3dadd( 46.9269, 95.4257, -78.9635, 0.22 ) }
    dend_28 { pt3dadd( 47.5218, 95.9329, -79.1179, 1.03 ) }
    dend_28 { pt3dadd( 47.9599, 96.2863, -79.2345, 1.55 ) }
    dend_28 { pt3dadd( 48.4219, 96.6417, -79.3498, 1.77 ) }
    dend_28 { pt3dadd( 48.557, 96.731, -79.384, 1.77 ) }
    dend_28 { pt3dadd( 48.9706, 97.0165, -79.5022, 1.69 ) }
    dend_28 { pt3dadd( 50.2151, 97.9088, -79.8699, 0.29 ) }
    dend_28 { pt3dadd( 50.7688, 98.3882, -80.0597, 0.52 ) }
    dend_28 { pt3dadd( 50.8418, 98.4605, -80.0869, 0.52 ) }
    dend_28 { pt3dadd( 52.0253, 99.7675, -80.5453, 0.22 ) }
    dend_28 { pt3dadd( 52.7703, 100.688, -80.8336, 1.92 ) }
    dend_28 { pt3dadd( 53.1134, 101.197, -80.9735, 2.21 ) }
    dend_28 { pt3dadd( 54.2233, 103.215, -81.4367, 0.15 ) }
    dend_28 { pt3dadd( 54.4363, 103.688, -81.5415, 0.81 ) }
    dend_28 { pt3dadd( 54.5677, 104.057, -81.6154, 1.4 ) }
    dend_28 { pt3dadd( 54.8132, 105.057, -81.7889, 0.66 ) }
    dend_28 { pt3dadd( 55.0749, 106.372, -81.9881, 0.22 ) }
    dend_28 { pt3dadd( 55.1396, 106.723, -82.0345, 0.59 ) }
    dend_28 { pt3dadd( 55.4011, 108.106, -82.1773, 0.29 ) }
    dend_28 { pt3dadd( 55.6314, 109.02, -82.2652, 0.44 ) }
    dend_28 { pt3dadd( 55.9803, 110.169, -82.3669, 0.22 ) }
    dend_28 { pt3dadd( 56.2926, 110.992, -82.4286, 1.4 ) }
    dend_28 { pt3dadd( 56.5707, 111.613, -82.4882, 1.99 ) }
    dend_28 { pt3dadd( 56.8657, 112.212, -82.5792, 1.55 ) }
    dend_28 { pt3dadd( 57.6533, 113.649, -82.8798, 0.22 ) }
    dend_28 { pt3dadd( 57.6922, 113.715, -82.9034, 0.22 ) }
    dend_28 { pt3dadd( 58.0526, 114.331, -83.2, 0.22 ) }
    dend_28 { pt3dadd( 58.6298, 115.372, -83.8114, 1.25 ) }
    dend_28 { pt3dadd( 58.9507, 116.04, -84.2501, 1.55 ) }
    dend_28 { pt3dadd( 59.1399, 116.503, -84.5878, 1.11 ) }
    dend_28 { pt3dadd( 59.5606, 117.697, -85.4929, 0.22 ) }
    dend_28 { pt3dadd( 59.6544, 117.973, -85.7045, 0.66 ) }
    dend_28 { pt3dadd( 59.6736, 118.035, -85.7519, 0.66 ) }
    dend_28 { pt3dadd( 59.7429, 118.264, -85.9132, 0.66 ) }
    dend_28 { pt3dadd( 59.9969, 119.236, -86.5234, 0.22 ) }
    dend_28 { pt3dadd( 60.149, 119.912, -86.9034, 0.22 ) }
    dend_28 { pt3dadd( 60.3452, 120.826, -87.3199, 0.22 ) }
    dend_28 { pt3dadd( 60.4367, 121.268, -87.5267, 0.22 ) }
    dend_28 { pt3dadd( 60.5276, 121.731, -87.7445, 0.81 ) }
    dend_28 { pt3dadd( 60.5981, 122.115, -87.9257, 1.11 ) }
    dend_28 { pt3dadd( 60.6927, 122.647, -88.1691, 0.96 ) }
    dend_28 { pt3dadd( 60.8752, 123.658, -88.6373, 0.22 ) }
    dend_28 { pt3dadd( 61.1108, 124.738, -89.1158, 0.22 ) }
    dend_28 { pt3dadd( 61.1249, 124.8, -89.1419, 0.22 ) }
    dend_28 { pt3dadd( 61.403, 125.943, -89.5774, 1.69 ) }
    dend_28 { pt3dadd( 61.5598, 126.522, -89.7373, 1.99 ) }
    dend_28 { pt3dadd( 61.5781, 126.581, -89.7393, 1.99 ) }
    dend_28 { pt3dadd( 62.1186, 128.007, -89.4022, 0.22 ) }
    dend_28 { pt3dadd( 62.4508, 128.77, -89.08, 0.22 ) }
    dend_28 { pt3dadd( 62.7367, 129.299, -88.7706, 0.52 ) }
    dend_28 { pt3dadd( 63.3589, 130.249, -88.0322, 0.29 ) }
    dend_28 { pt3dadd( 64.3301, 131.633, -86.7836, 0.29 ) }
    dend_28 { pt3dadd( 64.7341, 132.18, -86.256, 1.25 ) }
    dend_28 { pt3dadd( 64.9345, 132.43, -85.9894, 1.47 ) }
    dend_28 { pt3dadd( 65.8674, 133.549, -84.8473, 0.22 ) }
    dend_28 { pt3dadd( 66.4473, 134.247, -84.1712, 0.52 ) }
    dend_28 { pt3dadd( 66.9559, 134.863, -83.6576, 0.22 ) }
    dend_28 { pt3dadd( 67.3458, 135.367, -83.3387, 0.22 ) }
    dend_28 { pt3dadd( 67.3783, 135.411, -83.3134, 0.22 ) }
    dend_28 { pt3dadd( 67.7904, 136.031, -83.0352, 0.96 ) }
    dend_28 { pt3dadd( 67.9715, 136.354, -82.9518, 1.25 ) }
    dend_28 { pt3dadd( 68.2111, 136.777, -82.8828, 1.25 ) }
    dend_28 { pt3dadd( 68.8174, 137.786, -82.7564, 0.22 ) }
    dend_28 { pt3dadd( 68.8535, 137.846, -82.7485, 0.22 ) }
    dend_28 { pt3dadd( 69.3171, 138.624, -82.6763, 0.22 ) }
    dend_28 { pt3dadd( 69.7275, 139.35, -82.6745, 1.03 ) }
    dend_28 { pt3dadd( 69.8772, 139.622, -82.6917, 1.33 ) }
    dend_28 { pt3dadd( 69.916, 139.691, -82.7003, 1.33 ) }
    dend_28 { pt3dadd( 70.1502, 140.075, -82.8107, 0.96 ) }
    dend_28 { pt3dadd( 70.8368, 141.165, -83.2014, 0.22 ) }
    dend_28 { pt3dadd( 71.364, 141.969, -83.569, 0.88 ) }
    dend_28 { pt3dadd( 71.4004, 142.023, -83.5966, 0.88 ) }
    dend_28 { pt3dadd( 71.6712, 142.409, -83.8062, 1.03 ) }
    dend_28 { pt3dadd( 72.5214, 143.611, -84.4808, 0.22 ) }
    dend_28 { pt3dadd( 73.127, 144.447, -84.9771, 0.22 ) }
    dend_28 { pt3dadd( 73.677, 145.159, -85.4284, 1.25 ) }
    dend_28 { pt3dadd( 74.0787, 145.661, -85.7436, 1.62 ) }
    dend_28 { pt3dadd( 74.1228, 145.719, -85.779, 1.62 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 88/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 17.2974, 55.1884, -28.734, 0.22 ) }
    dend_24 { pt3dadd( 17.7802, 56.8238, -28.7802, 0.22 ) }
    dend_24 { pt3dadd( 17.9547, 57.4317, -28.7891, 0.22 ) }
    dend_24 { pt3dadd( 18.2243, 58.3648, -28.7975, 1.62 ) }
    dend_24 { pt3dadd( 18.4286, 59.0332, -28.8015, 1.84 ) }
    dend_24 { pt3dadd( 18.5947, 59.5632, -28.8049, 2.06 ) }
    dend_24 { pt3dadd( 19.0402, 61.0032, -28.8146, 0.22 ) }
    dend_24 { pt3dadd( 19.2243, 61.6521, -28.7976, 0.22 ) }
    dend_24 { pt3dadd( 19.2452, 61.7293, -28.7961, 0.22 ) }
    dend_24 { pt3dadd( 19.3188, 62.0098, -28.796, 0.22 ) }
    dend_24 { pt3dadd( 19.4296, 62.516, -28.798, 0.22 ) }
    dend_24 { pt3dadd( 19.4975, 62.9563, -28.8025, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_24 { pt3dadd( 19.5481, 63.5374, -28.8358, 0.52 ) }
    dend_24 { pt3dadd( 19.5602, 63.6865, -28.8474, 0.52 ) }
    dend_24 { pt3dadd( 19.5719, 63.8355, -28.8603, 0.52 ) }
    dend_24 { pt3dadd( 19.6059, 64.2724, -28.8992, 0.52 ) }
    dend_24 { pt3dadd( 19.664, 64.8476, -28.9458, 0.52 ) }
    dend_24 { pt3dadd( 19.7485, 65.5832, -29.0015, 0.22 ) }
    dend_24 { pt3dadd( 19.8288, 66.2759, -29.0477, 0.22 ) }
    dend_24 { pt3dadd( 19.8361, 66.3455, -29.0503, 0.22 ) }
    dend_24 { pt3dadd( 19.9013, 67.0059, -29.0604, 0.22 ) }
    dend_24 { pt3dadd( 19.9529, 67.7399, -29.0549, 0.81 ) }
    dend_24 { pt3dadd( 19.9658, 68.1064, -29.0507, 1.11 ) }
    dend_24 { pt3dadd( 19.9514, 68.6961, -29.0394, 1.11 ) }
    dend_24 { pt3dadd( 19.8734, 69.6643, -29.0316, 0.29 ) }
    dend_24 { pt3dadd( 19.8627, 69.7334, -29.0329, 0.29 ) }
    dend_24 { pt3dadd( 19.6802, 70.473, -29.0653, 0.29 ) }
    dend_24 { pt3dadd( 19.3407, 71.5466, -29.1333, 1.03 ) }
    dend_24 { pt3dadd( 19.1477, 72.0866, -29.1741, 1.55 ) }
    dend_24 { pt3dadd( 19.0156, 72.4245, -29.2033, 1.77 ) }
    dend_24 { pt3dadd( 18.5876, 73.4633, -29.3044, 0.22 ) }
    dend_24 { pt3dadd( 18.2968, 74.1985, -29.3682, 0.22 ) }
    dend_24 { pt3dadd( 18.0681, 74.8236, -29.4123, 0.74 ) }
    dend_24 { pt3dadd( 17.9836, 75.1114, -29.4064, 0.74 ) }
    dend_24 { pt3dadd( 17.8744, 75.608, -29.3664, 0.52 ) }
    dend_24 { pt3dadd( 17.816, 75.9604, -29.3219, 0.37 ) }
    dend_24 { pt3dadd( 17.7317, 76.6112, -29.2225, 0.37 ) }
    dend_24 { pt3dadd( 17.6241, 77.3995, -29.1072, 0.29 ) }
    dend_24 { pt3dadd( 17.421, 78.7352, -28.9846, 1.77 ) }
    dend_24 { pt3dadd( 17.2379, 79.7658, -28.9618, 2.28 ) }
    dend_24 { pt3dadd( 17.2241, 79.8344, -28.9638, 2.28 ) }
    dend_24 { pt3dadd( 17.0387, 80.6677, -29.0226, 2.28 ) }
    dend_24 { pt3dadd( 16.7724, 81.6877, -29.1381, 1.99 ) }
    dend_24 { pt3dadd( 16.4846, 82.6344, -29.3107, 1.55 ) }
    dend_24 { pt3dadd( 16.0203, 83.9783, -29.6425, 0.22 ) }
    dend_24 { pt3dadd( 15.8426, 84.4638, -29.7661, 0.29 ) }
    dend_24 { pt3dadd( 15.6646, 84.9097, -29.8732, 0.29 ) }
    dend_24 { pt3dadd( 15.349, 85.6075, -30.0204, 0.22 ) }
    dend_24 { pt3dadd( 14.9735, 86.2734, -30.1457, 0.22 ) }
    dend_24 { pt3dadd( 14.7383, 86.6274, -30.1931, 0.44 ) }
    dend_24 { pt3dadd( 14.5563, 86.878, -30.2232, 0.44 ) }
    dend_24 { pt3dadd( 14.1235, 87.4931, -30.3057, 0.37 ) }
    dend_24 { pt3dadd( 13.5724, 88.3229, -30.415, 0.29 ) }
    dend_24 { pt3dadd( 13.1288, 89.019, -30.4986, 0.22 ) }
    dend_24 { pt3dadd( 12.8058, 89.5467, -30.5431, 0.44 ) }
    dend_24 { pt3dadd( 12.6185, 89.8647, -30.5687, 0.44 ) }
    dend_24 { pt3dadd( 12.1774, 90.6385, -30.6253, 0.22 ) }
    dend_24 { pt3dadd( 11.687, 91.5352, -30.6417, 0.22 ) }
    dend_24 { pt3dadd( 11.446, 91.9995, -30.632, 0.22 ) }
    dend_24 { pt3dadd( 10.8097, 93.2558, -30.5655, 2.28 ) }
    dend_24 { pt3dadd( 10.5854, 93.6928, -30.5383, 3.02 ) }
    dend_24 { pt3dadd( 10.4205, 94.0164, -30.5136, 3.02 ) }
    dend_24 { pt3dadd( 9.49555, 95.9985, -30.267, 0.22 ) }
    dend_24 { pt3dadd( 9.41758, 96.2014, -30.2331, 0.29 ) }
    dend_24 { pt3dadd( 9.20598, 96.9521, -30.0881, 0.22 ) }
    dend_24 { pt3dadd( 9.07207, 97.6451, -29.9387, 0.66 ) }
    dend_24 { pt3dadd( 9.02162, 98.0679, -29.8466, 0.66 ) }
    dend_24 { pt3dadd( 8.94391, 99.3835, -29.5327, 0.22 ) }
    dend_24 { pt3dadd( 8.94989, 100.377, -29.2857, 0.22 ) }
    dend_24 { pt3dadd( 8.94834, 101.199, -29.0608, 0.29 ) }
    dend_24 { pt3dadd( 8.9505, 101.267, -29.0416, 0.29 ) }
    dend_24 { pt3dadd( 8.98842, 102.396, -28.7083, 0.29 ) }
    dend_24 { pt3dadd( 9.03122, 103.652, -28.3643, 0.96 ) }
    dend_24 { pt3dadd( 9.04503, 104.147, -28.2475, 1.33 ) }
    dend_24 { pt3dadd( 9.07311, 105.148, -28.0262, 0.22 ) }
    dend_24 { pt3dadd( 9.08905, 106.161, -27.8048, 0.22 ) }
    dend_24 { pt3dadd( 9.10134, 106.59, -27.7171, 0.22 ) }
    dend_24 { pt3dadd( 9.1305, 107.201, -27.6053, 0.81 ) }
    dend_24 { pt3dadd( 9.16758, 107.855, -27.5305, 1.11 ) }
    dend_24 { pt3dadd( 9.19983, 108.78, -27.4728, 0.22 ) }
    dend_24 { pt3dadd( 9.20714, 109.429, -27.4722, 0.22 ) }
    dend_24 { pt3dadd( 9.18568, 109.868, -27.4897, 0.44 ) }
    dend_24 { pt3dadd( 9.17059, 110.107, -27.5083, 0.44 ) }
    dend_24 { pt3dadd( 9.0729, 111.009, -27.629, 0.22 ) }
    dend_24 { pt3dadd( 8.99753, 111.605, -27.7565, 0.22 ) }
    dend_24 { pt3dadd( 8.99001, 111.663, -27.7718, 0.22 ) }
    dend_24 { pt3dadd( 8.87938, 112.493, -28.0598, 0.66 ) }
    dend_24 { pt3dadd( 8.81849, 112.908, -28.2119, 0.66 ) }
    dend_24 { pt3dadd( 8.70586, 113.629, -28.498, 0.22 ) }
    dend_24 { pt3dadd( 8.53702, 114.586, -28.8875, 1.11 ) }
    dend_24 { pt3dadd( 8.40844, 115.257, -29.1701, 1.25 ) }
    dend_24 { pt3dadd( 8.07546, 116.91, -29.9403, 0.22 ) }
    dend_24 { pt3dadd( 7.83753, 118.086, -30.5463, 0.22 ) }
    dend_24 { pt3dadd( 7.66689, 118.924, -31.0019, 1.03 ) }
    dend_24 { pt3dadd( 7.54428, 119.495, -31.3118, 1.55 ) }
    dend_24 { pt3dadd( 7.3777, 120.202, -31.6822, 1.69 ) }
    dend_24 { pt3dadd( 7.12587, 121.301, -32.243, 0.81 ) }
    dend_24 { pt3dadd( 6.91362, 122.355, -32.7212, 0.22 ) }
    dend_24 { pt3dadd( 6.90207, 122.429, -32.7527, 0.22 ) }
    dend_24 { pt3dadd( 6.81028, 123.398, -33.1349, 0.22 ) }
    dend_24 { pt3dadd( 6.75349, 124.433, -33.5396, 0.88 ) }
    dend_24 { pt3dadd( 6.74884, 125.251, -33.8536, 0.22 ) }
    dend_24 { pt3dadd( 6.76474, 125.938, -34.1084, 0.59 ) }
    dend_24 { pt3dadd( 6.82033, 127.247, -34.6079, 0.22 ) }
    dend_24 { pt3dadd( 6.90607, 128.615, -35.1598, 1.77 ) }
    dend_24 { pt3dadd( 6.97423, 129.572, -35.5826, 1.99 ) }
    dend_24 { pt3dadd( 7.0589, 130.915, -36.2148, 0.22 ) }
    dend_24 { pt3dadd( 7.06763, 131.247, -36.3716, 0.29 ) }
    dend_24 { pt3dadd( 7.06216, 131.926, -36.6967, 0.22 ) }
    dend_24 { pt3dadd( 7.02245, 132.525, -36.9719, 0.37 ) }
    dend_24 { pt3dadd( 6.93009, 133.083, -37.2166, 0.22 ) }
    dend_24 { pt3dadd( 6.91714, 133.139, -37.2382, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_24 { pt3dadd( 6.79789, 133.519, -37.3941, 0.37 ) }
    dend_24 { pt3dadd( 6.68115, 133.835, -37.5221, 0.37 ) }
    dend_24 { pt3dadd( 6.4705, 134.374, -37.7238, 0.22 ) }
    dend_24 { pt3dadd( 6.15616, 135.174, -38.0013, 1.11 ) }
    dend_24 { pt3dadd( 6.01268, 135.577, -38.1273, 1.47 ) }
    dend_24 { pt3dadd( 5.69801, 136.478, -38.3706, 0.22 ) }
    dend_24 { pt3dadd( 5.33933, 137.536, -38.6475, 0.22 ) }
    dend_24 { pt3dadd( 5.10107, 138.202, -38.8492, 0.22 ) }
    dend_24 { pt3dadd( 5.08247, 138.256, -38.8688, 0.22 ) }
    dend_24 { pt3dadd( 4.86735, 138.835, -39.102, 0.22 ) }
    dend_24 { pt3dadd( 4.42606, 140.003, -39.6007, 1.92 ) }
    dend_24 { pt3dadd( 4.18373, 140.641, -39.8891, 1.77 ) }
    dend_24 { pt3dadd( 3.84841, 141.6, -40.3817, 1.47 ) }
    dend_24 { pt3dadd( 3.40993, 142.766, -41.0436, 0.22 ) }
    dend_24 { pt3dadd( 3.04844, 143.689, -41.6046, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 15/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 17.2974, 55.1884, -28.734, 0.15 ) }
    dend_21 { pt3dadd( 19.0414, 56.1024, -28.6693, 0.15 ) }
    dend_21 { pt3dadd( 20.0154, 56.6611, -28.6405, 0.15 ) }
    dend_21 { pt3dadd( 20.6598, 57.0572, -28.6252, 0.37 ) }
    dend_21 { pt3dadd( 21.4527, 57.5491, -28.5995, 0.44 ) }
    dend_21 { pt3dadd( 22.5003, 58.1573, -28.5615, 0.81 ) }
    dend_21 { pt3dadd( 22.8804, 58.3589, -28.5475, 1.03 ) }
    dend_21 { pt3dadd( 23.3392, 58.6174, -28.5281, 1.03 ) }
    dend_21 { pt3dadd( 23.9313, 58.953, -28.501, 0.81 ) }
    dend_21 { pt3dadd( 24.7734, 59.375, -28.4392, 0.22 ) }
    dend_21 { pt3dadd( 25.3426, 59.6398, -28.3853, 0.22 ) }
    dend_21 { pt3dadd( 26.2172, 60.0509, -28.3003, 0.29 ) }
    dend_21 { pt3dadd( 27.0611, 60.4424, -28.224, 0.29 ) }
    dend_21 { pt3dadd( 28.0722, 60.9279, -28.0979, 1.4 ) }
    dend_21 { pt3dadd( 28.6268, 61.2146, -28.0157, 1.99 ) }
    dend_21 { pt3dadd( 29.4212, 61.6638, -27.8857, 2.28 ) }
    dend_21 { pt3dadd( 31.3604, 62.8746, -27.5656, 0.29 ) }
    dend_21 { pt3dadd( 32.0973, 63.3571, -27.4466, 0.29 ) }
    dend_21 { pt3dadd( 32.8027, 63.8203, -27.3536, 0.81 ) }
    dend_21 { pt3dadd( 33.2685, 64.1295, -27.3326, 0.81 ) }
    dend_21 { pt3dadd( 33.6182, 64.3654, -27.3386, 0.81 ) }
    dend_21 { pt3dadd( 34.5049, 64.95, -27.5111, 0.29 ) }
    dend_21 { pt3dadd( 35.1238, 65.3774, -27.7451, 0.29 ) }
    dend_21 { pt3dadd( 35.7544, 65.8403, -28.0504, 2.14 ) }
    dend_21 { pt3dadd( 36.6564, 66.5214, -28.5533, 2.95 ) }
    dend_21 { pt3dadd( 37.0267, 66.8155, -28.7805, 2.95 ) }
    dend_21 { pt3dadd( 38.6853, 68.2767, -29.8704, 0.22 ) }
    dend_21 { pt3dadd( 39.2139, 68.8074, -30.2411, 0.22 ) }
    dend_21 { pt3dadd( 39.5771, 69.2226, -30.5037, 0.81 ) }
    dend_21 { pt3dadd( 39.7396, 69.4352, -30.6155, 1.11 ) }
    dend_21 { pt3dadd( 40.1415, 70.0332, -30.8551, 0.66 ) }
    dend_21 { pt3dadd( 40.6326, 70.8367, -31.1077, 0.22 ) }
    dend_21 { pt3dadd( 40.9209, 71.3484, -31.205, 0.22 ) }
    dend_21 { pt3dadd( 41.1861, 71.757, -31.2737, 0.37 ) }
    dend_21 { pt3dadd( 41.5512, 72.2553, -31.3488, 0.37 ) }
    dend_21 { pt3dadd( 42.2906, 73.1034, -31.4815, 0.88 ) }
    dend_21 { pt3dadd( 42.4522, 73.2666, -31.5054, 1.33 ) }
    dend_21 { pt3dadd( 42.4952, 73.308, -31.5117, 1.33 ) }
    dend_21 { pt3dadd( 42.8808, 73.6637, -31.5617, 1.18 ) }
    dend_21 { pt3dadd( 43.7791, 74.519, -31.7033, 0.29 ) }
    dend_21 { pt3dadd( 44.4725, 75.2446, -31.8619, 1.03 ) }
    dend_21 { pt3dadd( 44.8709, 75.7173, -31.9838, 1.55 ) }
    dend_21 { pt3dadd( 45.2536, 76.2384, -32.1453, 2.28 ) }
    dend_21 { pt3dadd( 45.7118, 76.9617, -32.39, 1.4 ) }
    dend_21 { pt3dadd( 46.2706, 78.0575, -32.78, 0.22 ) }
    dend_21 { pt3dadd( 46.6909, 79.146, -33.273, 0.22 ) }
    dend_21 { pt3dadd( 46.9122, 79.8211, -33.6457, 0.81 ) }
    dend_21 { pt3dadd( 47.1166, 80.5581, -34.0978, 1.55 ) }
    dend_21 { pt3dadd( 47.1945, 80.9135, -34.327, 1.92 ) }
    dend_21 { pt3dadd( 47.2792, 81.5854, -34.7714, 2.14 ) }
    dend_21 { pt3dadd( 47.4046, 83.2885, -35.8986, 1.11 ) }
    dend_21 { pt3dadd( 47.445, 84.3526, -36.566, 0.29 ) }
    dend_21 { pt3dadd( 47.4723, 85.2595, -37.1364, 0.22 ) }
    dend_21 { pt3dadd( 47.4823, 85.7564, -37.4481, 0.22 ) }
    dend_21 { pt3dadd( 47.5212, 86.9917, -38.2146, 1.55 ) }
    dend_21 { pt3dadd( 47.5429, 87.25, -38.3624, 2.43 ) }
    dend_21 { pt3dadd( 47.7022, 88.2428, -38.8596, 2.87 ) }
    dend_21 { pt3dadd( 48.1435, 90.0247, -39.7534, 0.22 ) }
    dend_21 { pt3dadd( 48.1623, 90.0751, -39.7801, 0.22 ) }
    dend_21 { pt3dadd( 48.6216, 90.9846, -40.2816, 0.22 ) }
    dend_21 { pt3dadd( 49.267, 91.9779, -40.939, 0.22 ) }
    dend_21 { pt3dadd( 49.7626, 92.6284, -41.4544, 0.22 ) }
    dend_21 { pt3dadd( 50.2169, 93.1366, -41.9015, 1.77 ) }
    dend_21 { pt3dadd( 50.5069, 93.4363, -42.1623, 2.28 ) }
    dend_21 { pt3dadd( 51.2192, 94.1452, -42.7777, 2.28 ) }
    dend_21 { pt3dadd( 52.391, 95.2835, -43.7609, 1.69 ) }
    dend_21 { pt3dadd( 53.3115, 96.1752, -44.511, 0.22 ) }
    dend_21 { pt3dadd( 54.0377, 96.8886, -45.0548, 0.22 ) }
    dend_21 { pt3dadd( 54.6498, 97.4856, -45.4466, 1.33 ) }
    dend_21 { pt3dadd( 55.1323, 97.9708, -45.7696, 1.62 ) }
    dend_21 { pt3dadd( 55.5763, 98.4441, -46.0801, 1.62 ) }
    dend_21 { pt3dadd( 55.872, 98.7779, -46.2879, 0.81 ) }
    dend_21 { pt3dadd( 56.6716, 99.7605, -46.9614, 0.29 ) }
    dend_21 { pt3dadd( 57.1255, 100.381, -47.4075, 0.22 ) }
    dend_21 { pt3dadd( 58.364, 102.257, -48.7638, 1.99 ) }
    dend_21 { pt3dadd( 58.7407, 102.881, -49.197, 2.5 ) }
    dend_21 { pt3dadd( 58.9394, 103.232, -49.4342, 2.65 ) }
    dend_21 { pt3dadd( 59.7811, 104.841, -50.4402, 0.22 ) }
    dend_21 { pt3dadd( 60.1849, 105.624, -50.88, 0.22 ) }
    dend_21 { pt3dadd( 60.5892, 106.417, -51.2822, 0.88 ) }
    dend_21 { pt3dadd( 60.8987, 107.022, -51.5048, 1.47 ) }
    dend_21 { pt3dadd( 61.2128, 107.614, -51.7013, 1.69 ) }
    dend_21 { pt3dadd( 61.5128, 108.16, -51.8768, 0.96 ) }
    dend_21 { pt3dadd( 62.1158, 109.248, -52.1855, 0.22 ) }
    dend_21 { pt3dadd( 62.1502, 109.307, -52.2011, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_21 { pt3dadd( 62.3886, 109.701, -52.2929, 0.22 ) }
    dend_21 { pt3dadd( 62.7694, 110.319, -52.4113, 0.88 ) }
    dend_21 { pt3dadd( 62.9991, 110.685, -52.4617, 0.88 ) }
    dend_21 { pt3dadd( 63.2762, 111.128, -52.5109, 0.44 ) }
    dend_21 { pt3dadd( 63.7797, 111.947, -52.567, 0.22 ) }
    dend_21 { pt3dadd( 63.989, 112.243, -52.5856, 0.22 ) }
    dend_21 { pt3dadd( 64.5605, 112.988, -52.6283, 1.11 ) }
    dend_21 { pt3dadd( 64.7623, 113.232, -52.6398, 1.47 ) }
    dend_21 { pt3dadd( 64.8532, 113.34, -52.6444, 1.47 ) }
    dend_21 { pt3dadd( 65.1633, 113.701, -52.6577, 1.47 ) }
    dend_21 { pt3dadd( 66.3142, 115.091, -52.8446, 0.22 ) }
    dend_21 { pt3dadd( 66.7827, 115.674, -52.9591, 0.22 ) }
    dend_21 { pt3dadd( 67.4032, 116.492, -53.1888, 1.25 ) }
    dend_21 { pt3dadd( 67.6726, 116.863, -53.3166, 1.92 ) }
    dend_21 { pt3dadd( 68.0126, 117.377, -53.5186, 1.92 ) }
    dend_21 { pt3dadd( 69.0495, 119.118, -54.3113, 0.22 ) }
    dend_21 { pt3dadd( 69.3087, 119.621, -54.5707, 0.22 ) }
    dend_21 { pt3dadd( 69.6547, 120.343, -54.9423, 0.22 ) }
    dend_21 { pt3dadd( 69.6995, 120.444, -54.9911, 0.22 ) }
    dend_21 { pt3dadd( 69.9318, 120.966, -55.2959, 0.22 ) }
    dend_21 { pt3dadd( 69.9845, 121.083, -55.3753, 0.22 ) }
    dend_21 { pt3dadd( 70.3805, 122.013, -56.0326, 0.22 ) }
    dend_21 { pt3dadd( 70.7766, 122.938, -56.717, 1.69 ) }
    dend_21 { pt3dadd( 70.9763, 123.388, -57.0684, 2.21 ) }
    dend_21 { pt3dadd( 71.7385, 125.076, -58.4281, 1.18 ) }
    dend_21 { pt3dadd( 72.0961, 125.851, -59.083, 0.29 ) }
    dend_21 { pt3dadd( 72.2798, 126.253, -59.4266, 0.29 ) }
    dend_21 { pt3dadd( 72.5824, 126.937, -60.0221, 0.22 ) }
    dend_21 { pt3dadd( 72.8922, 127.648, -60.6014, 1.18 ) }
    dend_21 { pt3dadd( 73.1333, 128.232, -61.017, 1.33 ) }
    dend_21 { pt3dadd( 73.1815, 128.357, -61.0857, 1.33 ) }
    dend_21 { pt3dadd( 73.7874, 129.872, -61.8635, 0.22 ) }
    dend_21 { pt3dadd( 73.9822, 130.307, -62.0867, 0.88 ) }
    dend_21 { pt3dadd( 74.217, 130.799, -62.3266, 1.33 ) }
    dend_21 { pt3dadd( 74.7695, 131.9, -62.8513, 0.22 ) }
    dend_21 { pt3dadd( 74.9574, 132.236, -63.0404, 0.29 ) }
    dend_21 { pt3dadd( 75.2642, 132.757, -63.3394, 0.22 ) }
    dend_21 { pt3dadd( 75.9616, 133.876, -63.9953, 1.62 ) }
    dend_21 { pt3dadd( 76.1781, 134.199, -64.1817, 1.99 ) }
    dend_21 { pt3dadd( 76.7122, 134.935, -64.6067, 1.55 ) }
    dend_21 { pt3dadd( 77.9971, 136.62, -65.5382, 0.22 ) }
    dend_21 { pt3dadd( 78.5267, 137.316, -65.9113, 0.22 ) }
    dend_21 { pt3dadd( 78.5713, 137.374, -65.9427, 0.22 ) }
    dend_21 { pt3dadd( 79.1416, 138.141, -66.3351, 0.22 ) }
    dend_21 { pt3dadd( 79.1856, 138.201, -66.3646, 0.22 ) }
    dend_21 { pt3dadd( 79.884, 139.197, -66.7871, 1.03 ) }
    dend_21 { pt3dadd( 80.28, 139.794, -67.0025, 1.11 ) }
    dend_21 { pt3dadd( 81.1405, 141.116, -67.4821, 0.22 ) }
    dend_21 { pt3dadd( 81.5702, 141.734, -67.7089, 0.22 ) }
    dend_21 { pt3dadd( 81.6094, 141.788, -67.7293, 0.22 ) }
    dend_21 { pt3dadd( 82.4191, 142.805, -68.1198, 1.55 ) }
    dend_21 { pt3dadd( 82.7932, 143.208, -68.2929, 2.36 ) }
    dend_21 { pt3dadd( 83.1487, 143.561, -68.457, 2.21 ) }
    dend_21 { pt3dadd( 84.7633, 145.1, -69.1725, 0.22 ) }
    dend_21 { pt3dadd( 84.804, 145.139, -69.1927, 0.22 ) }
    dend_21 { pt3dadd( 85.6296, 145.975, -69.6628, 0.59 ) }
    dend_21 { pt3dadd( 86.5373, 146.962, -70.2548, 0.22 ) }
    dend_21 { pt3dadd( 86.8873, 147.406, -70.5113, 0.44 ) }
    dend_21 { pt3dadd( 87.0627, 147.687, -70.6725, 0.59 ) }
    dend_21 { pt3dadd( 87.5411, 148.719, -71.2353, 0.22 ) }
    dend_21 { pt3dadd( 87.8585, 149.473, -71.6245, 1.18 ) }
    dend_21 { pt3dadd( 88.0695, 150.042, -71.8971, 1.55 ) }
    dend_21 { pt3dadd( 88.3007, 150.68, -72.1817, 1.62 ) }
    dend_21 { pt3dadd( 89.0504, 152.469, -72.9838, 0.22 ) }
    dend_21 { pt3dadd( 89.086, 152.534, -73.013, 0.22 ) }
    dend_21 { pt3dadd( 89.4546, 153.049, -73.2211, 0.22 ) }
    dend_21 { pt3dadd( 89.7252, 153.363, -73.3392, 0.44 ) }
    dend_21 { pt3dadd( 89.8726, 153.507, -73.3902, 0.44 ) }
    dend_21 { pt3dadd( 90.0786, 153.678, -73.4408, 0.44 ) }
    dend_21 { pt3dadd( 91.1178, 154.43, -73.5979, 0.22 ) }
    dend_21 { pt3dadd( 91.8098, 154.969, -73.7228, 1.03 ) }
    dend_21 { pt3dadd( 92.1652, 155.255, -73.7977, 1.55 ) }
    dend_21 { pt3dadd( 92.3673, 155.423, -73.8411, 1.92 ) }
    dend_21 { pt3dadd( 92.842, 155.827, -73.9436, 1.92 ) }
    dend_21 { pt3dadd( 93.4809, 156.391, -74.0797, 1.33 ) }
    dend_21 { pt3dadd( 94.8265, 157.613, -74.3651, 0.22 ) }
    dend_21 { pt3dadd( 95.8959, 158.576, -74.6215, 0.22 ) }
    dend_21 { pt3dadd( 96.612, 159.228, -74.7962, 0.74 ) }
    dend_21 { pt3dadd( 96.7196, 159.329, -74.8213, 0.74 ) }
    dend_21 { pt3dadd( 97.015, 159.617, -74.8849, 0.74 ) }
    dend_21 { pt3dadd( 97.0642, 159.665, -74.8941, 0.74 ) }
    dend_21 { pt3dadd( 98.1087, 160.738, -75.0739, 0.29 ) }
    dend_21 { pt3dadd( 99.0374, 161.777, -75.2147, 0.22 ) }
    dend_21 { pt3dadd( 99.8159, 162.689, -75.3232, 1.25 ) }
    dend_21 { pt3dadd( 100.146, 163.092, -75.3632, 1.92 ) }
    dend_21 { pt3dadd( 100.447, 163.48, -75.3888, 2.36 ) }
    dend_21 { pt3dadd( 100.724, 163.852, -75.3997, 2.43 ) }
    dend_21 { pt3dadd( 101.972, 165.617, -75.3774, 0.22 ) }
    dend_21 { pt3dadd( 102.43, 166.26, -75.3627, 0.88 ) }
    dend_21 { pt3dadd( 102.633, 166.542, -75.3535, 0.88 ) }
    dend_21 { pt3dadd( 103.287, 167.435, -75.316, 0.22 ) }
    dend_21 { pt3dadd( 103.665, 167.934, -75.2887, 0.88 ) }
    dend_21 { pt3dadd( 103.711, 167.986, -75.2842, 0.88 ) }
    dend_21 { pt3dadd( 103.986, 168.242, -75.2486, 1.25 ) }
    dend_21 { pt3dadd( 104.112, 168.346, -75.2341, 1.25 ) }
    dend_21 { pt3dadd( 104.195, 168.413, -75.227, 1.25 ) }
    dend_21 { pt3dadd( 104.251, 168.456, -75.2235, 1.25 ) }
    dend_21 { pt3dadd( 105.531, 169.283, -75.2439, 0.22 ) }
    dend_21 { pt3dadd( 106.186, 169.637, -75.2318, 0.22 ) }
    dend_21 { pt3dadd( 106.249, 169.669, -75.23, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_21 { pt3dadd( 106.823, 169.926, -75.2082, 0.59 ) }
    dend_21 { pt3dadd( 107.19, 170.083, -75.1944, 0.59 ) }
    dend_21 { pt3dadd( 108.633, 170.652, -75.1406, 0.22 ) }
    dend_21 { pt3dadd( 109.964, 171.077, -75.0928, 1.25 ) }
    dend_21 { pt3dadd( 110.032, 171.092, -75.09, 1.25 ) }
    dend_21 { pt3dadd( 110.56, 171.21, -75.0629, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 6/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 14.7851, 29.4725, -21.8804, 0.29 ) }
    dend_15 { pt3dadd( 16.2315, 30.6885, -21.2208, 0.29 ) }
    dend_15 { pt3dadd( 16.8319, 31.1374, -20.9892, 0.37 ) }
    dend_15 { pt3dadd( 17.755, 31.6985, -20.6385, 0.22 ) }
    dend_15 { pt3dadd( 18.3191, 32.0046, -20.422, 0.44 ) }
    dend_15 { pt3dadd( 18.3817, 32.0327, -20.408, 0.44 ) }
    dend_15 { pt3dadd( 19.7099, 32.554, -20.2489, 1.69 ) }
    dend_15 { pt3dadd( 19.7779, 32.5696, -20.2536, 1.69 ) }
    dend_15 { pt3dadd( 20.8699, 32.766, -20.4611, 1.92 ) }
    dend_15 { pt3dadd( 20.9371, 32.7754, -20.4783, 1.92 ) }
    dend_15 { pt3dadd( 22.96, 33.1257, -21.1017, 0.29 ) }
    dend_15 { pt3dadd( 23.4153, 33.2167, -21.2643, 0.74 ) }
    dend_15 { pt3dadd( 23.4871, 33.233, -21.2955, 0.74 ) }
    dend_15 { pt3dadd( 24.631, 33.5639, -21.841, 0.22 ) }
    dend_15 { pt3dadd( 24.6898, 33.5869, -21.8714, 0.22 ) }
    dend_15 { pt3dadd( 25.172, 33.8161, -22.0845, 0.59 ) }
    dend_15 { pt3dadd( 25.2302, 33.8494, -22.1046, 0.59 ) }
    dend_15 { pt3dadd( 25.4088, 33.9588, -22.1719, 0.59 ) }
    dend_15 { pt3dadd( 26.3124, 34.5471, -22.5148, 0.22 ) }
    dend_15 { pt3dadd( 26.8485, 34.9125, -22.7224, 0.88 ) }
    dend_15 { pt3dadd( 27.7488, 35.5255, -23.0697, 0.22 ) }
    dend_15 { pt3dadd( 27.8433, 35.5901, -23.1058, 0.22 ) }
    dend_15 { pt3dadd( 28.4008, 35.9756, -23.3076, 0.66 ) }
    dend_15 { pt3dadd( 28.7719, 36.2354, -23.4329, 0.66 ) }
    dend_15 { pt3dadd( 29.7983, 36.9181, -23.7002, 0.22 ) }
    dend_15 { pt3dadd( 30.0604, 37.076, -23.7565, 0.44 ) }
    dend_15 { pt3dadd( 30.2903, 37.2055, -23.7923, 0.44 ) }
    dend_15 { pt3dadd( 30.6408, 37.3925, -23.8318, 0.44 ) }
    dend_15 { pt3dadd( 30.729, 37.4369, -23.8396, 0.44 ) }
    dend_15 { pt3dadd( 31.7162, 37.9082, -23.9079, 0.37 ) }
    dend_15 { pt3dadd( 32.7066, 38.3505, -23.9357, 1.99 ) }
    dend_15 { pt3dadd( 33.1916, 38.5562, -23.9504, 2.73 ) }
    dend_15 { pt3dadd( 33.8386, 38.8199, -23.9717, 2.73 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.7851, 29.4725, -21.8804, 0.22 ) }
    dend_12 { pt3dadd( 14.9684, 31.628, -21.927, 0.22 ) }
    dend_12 { pt3dadd( 15.1231, 32.7718, -22.0071, 1.33 ) }
    dend_12 { pt3dadd( 15.2281, 33.4208, -22.0652, 1.62 ) }
    dend_12 { pt3dadd( 15.4797, 34.557, -22.2647, 1.99 ) }
    dend_12 { pt3dadd( 15.9588, 36.4561, -22.7226, 0.22 ) }
    dend_12 { pt3dadd( 16.2564, 37.4694, -23.0004, 0.22 ) }
    dend_12 { pt3dadd( 16.6497, 38.4883, -23.3899, 0.96 ) }
    dend_12 { pt3dadd( 16.8547, 38.9428, -23.5743, 1.47 ) }
    dend_12 { pt3dadd( 17.8058, 40.769, -24.3641, 0.22 ) }
    dend_12 { pt3dadd( 18.3615, 41.7065, -24.7985, 1.84 ) }
    dend_12 { pt3dadd( 18.8598, 42.4486, -25.1408, 1.99 ) }
    dend_12 { pt3dadd( 19.8216, 43.8081, -25.7469, 0.29 ) }
    dend_12 { pt3dadd( 20.3308, 44.4909, -26.0068, 0.52 ) }
    dend_12 { pt3dadd( 20.7864, 45.0968, -26.1845, 0.29 ) }
    dend_12 { pt3dadd( 20.8252, 45.1547, -26.1906, 0.29 ) }
    dend_12 { pt3dadd( 21.3639, 46.0685, -26.217, 0.29 ) }
    dend_12 { pt3dadd( 21.4044, 46.1589, -26.2161, 0.29 ) }
    dend_12 { pt3dadd( 21.6973, 47.0391, -26.1535, 0.22 ) }
    dend_12 { pt3dadd( 21.8644, 47.6379, -26.1098, 0.22 ) }
    dend_12 { pt3dadd( 22.2587, 49.2136, -25.9987, 2.36 ) }
    dend_12 { pt3dadd( 22.4626, 49.9284, -25.9453, 2.73 ) }
    dend_12 { pt3dadd( 22.731, 50.7636, -25.876, 2.58 ) }
    dend_12 { pt3dadd( 23.1148, 51.7768, -25.7842, 1.25 ) }
    dend_12 { pt3dadd( 23.6588, 52.9988, -25.6607, 0.22 ) }
    dend_12 { pt3dadd( 23.7849, 53.232, -25.6356, 0.22 ) }
    dend_12 { pt3dadd( 24.3698, 54.0739, -25.5366, 0.22 ) }
    dend_12 { pt3dadd( 24.8481, 54.6695, -25.4594, 0.66 ) }
    dend_12 { pt3dadd( 25.136, 54.9869, -25.4187, 0.96 ) }
    dend_12 { pt3dadd( 25.1835, 55.038, -25.4122, 0.96 ) }
    dend_12 { pt3dadd( 25.5847, 55.5186, -25.3413, 0.66 ) }
    dend_12 { pt3dadd( 26.2044, 56.3603, -25.2198, 0.22 ) }
    dend_12 { pt3dadd( 26.257, 56.4441, -25.2166, 0.22 ) }
    dend_12 { pt3dadd( 26.6976, 57.1023, -25.259, 0.22 ) }
    dend_12 { pt3dadd( 27.183, 57.801, -25.3518, 1.25 ) }
    dend_12 { pt3dadd( 27.51, 58.2423, -25.4343, 1.62 ) }
    dend_12 { pt3dadd( 27.8189, 58.6518, -25.5378, 1.84 ) }
    dend_12 { pt3dadd( 28.6248, 59.7177, -25.867, 0.81 ) }
    dend_12 { pt3dadd( 29.3433, 60.7464, -26.195, 0.22 ) }
    dend_12 { pt3dadd( 29.4561, 60.9218, -26.2541, 0.22 ) }
    dend_12 { pt3dadd( 29.8454, 61.6149, -26.4834, 0.22 ) }
    dend_12 { pt3dadd( 30.17, 62.3918, -26.6991, 0.15 ) }
    dend_12 { pt3dadd( 30.2483, 62.6654, -26.7546, 0.15 ) }
    dend_12 { pt3dadd( 30.3732, 63.4031, -26.8672, 0.15 ) }
    dend_12 { pt3dadd( 30.3985, 63.6881, -26.9144, 0.15 ) }
    dend_12 { pt3dadd( 30.4457, 64.334, -27.0418, 0.15 ) }
    dend_12 { pt3dadd( 30.5253, 65.6727, -27.3346, 1.55 ) }
    dend_12 { pt3dadd( 30.5627, 66.2494, -27.4652, 1.92 ) }
    dend_12 { pt3dadd( 30.701, 67.8712, -27.8588, 0.22 ) }
    dend_12 { pt3dadd( 30.709, 67.9384, -27.8766, 0.22 ) }
    dend_12 { pt3dadd( 30.8183, 68.7937, -28.1196, 0.22 ) }
    dend_12 { pt3dadd( 30.9078, 69.4208, -28.3177, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 91/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 11.5883, 57.7092, -8.33618, 0.29 ) }
    dend_8 { pt3dadd( 10.0201, 59.6042, -8.54998, 0.29 ) }
    dend_8 { pt3dadd( 9.16692, 60.662, -8.62845, 0.29 ) }
    dend_8 { pt3dadd( 8.4151, 61.6526, -8.6754, 0.29 ) }
    dend_8 { pt3dadd( 7.83465, 62.5147, -8.69547, 0.52 ) }
    dend_8 { pt3dadd( 7.20378, 63.525, -8.70855, 0.22 ) }
    dend_8 { pt3dadd( 6.77213, 64.296, -8.71223, 0.22 ) }
    dend_8 { pt3dadd( 6.74526, 64.3602, -8.70447, 0.22 ) }
    dend_8 { pt3dadd( 6.57341, 64.9937, -8.63608, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_8 { pt3dadd( 6.48479, 65.9673, -8.62921, 0.22 ) }
    dend_8 { pt3dadd( 6.4856, 66.0371, -8.63514, 0.22 ) }
    dend_8 { pt3dadd( 6.5389, 66.8403, -8.75566, 1.77 ) }
    dend_8 { pt3dadd( 6.5755, 67.3229, -8.84355, 2.06 ) }
    dend_8 { pt3dadd( 6.64955, 68.372, -9.05536, 1.18 ) }
    dend_8 { pt3dadd( 6.74295, 69.7951, -9.36862, 0.22 ) }
    dend_8 { pt3dadd( 6.77759, 70.5807, -9.56523, 0.22 ) }
    dend_8 { pt3dadd( 6.79107, 71.3023, -9.75083, 0.22 ) }
    dend_8 { pt3dadd( 6.78642, 72.4796, -10.0695, 1.55 ) }
    dend_8 { pt3dadd( 6.76999, 72.9909, -10.2081, 1.84 ) }
    dend_8 { pt3dadd( 6.76439, 73.0484, -10.2241, 1.84 ) }
    dend_8 { pt3dadd( 6.56825, 74.1896, -10.5106, 0.37 ) }
    dend_8 { pt3dadd( 6.39981, 74.8561, -10.6949, 0.22 ) }
    dend_8 { pt3dadd( 6.37185, 74.928, -10.7163, 0.22 ) }
    dend_8 { pt3dadd( 6.16756, 75.3331, -10.8335, 0.52 ) }
    dend_8 { pt3dadd( 5.89493, 75.8707, -10.9855, 0.59 ) }
    dend_8 { pt3dadd( 5.62608, 76.4198, -11.1491, 0.59 ) }
    dend_8 { pt3dadd( 5.60101, 76.472, -11.165, 0.59 ) }
    dend_8 { pt3dadd( 5.29038, 77.2114, -11.4046, 0.22 ) }
    dend_8 { pt3dadd( 5.14075, 77.6075, -11.5241, 0.22 ) }
    dend_8 { pt3dadd( 4.99221, 78.0493, -11.6589, 0.22 ) }
    dend_8 { pt3dadd( 4.86209, 78.5514, -11.7956, 0.22 ) }
    dend_8 { pt3dadd( 4.7466, 79.1884, -11.9794, 0.88 ) }
    dend_8 { pt3dadd( 4.67855, 79.6836, -12.1389, 1.03 ) }
    dend_8 { pt3dadd( 4.61827, 80.29, -12.3734, 0.66 ) }
    dend_8 { pt3dadd( 4.53451, 81.341, -12.7951, 0.22 ) }
    dend_8 { pt3dadd( 4.47601, 82.2016, -13.142, 0.22 ) }
    dend_8 { pt3dadd( 4.42642, 83.3551, -13.5968, 1.47 ) }
    dend_8 { pt3dadd( 4.41421, 84.1067, -13.8881, 1.84 ) }
    dend_8 { pt3dadd( 4.40491, 85.7141, -14.4969, 0.22 ) }
    dend_8 { pt3dadd( 4.38842, 86.6266, -14.8406, 0.22 ) }
    dend_8 { pt3dadd( 4.37979, 86.7677, -14.8908, 0.22 ) }
    dend_8 { pt3dadd( 4.2902, 87.3825, -15.0943, 0.22 ) }
    dend_8 { pt3dadd( 4.02493, 88.5765, -15.4533, 1.55 ) }
    dend_8 { pt3dadd( 3.90604, 89.0003, -15.5702, 1.92 ) }
    dend_8 { pt3dadd( 3.38882, 90.5504, -15.9919, 0.29 ) }
    dend_8 { pt3dadd( 3.13923, 91.2128, -16.1913, 0.29 ) }
    dend_8 { pt3dadd( 2.85303, 91.9921, -16.4766, 0.29 ) }
    dend_8 { pt3dadd( 2.52247, 92.9187, -16.867, 0.81 ) }
    dend_8 { pt3dadd( 2.5016, 92.9792, -16.8952, 0.81 ) }
    dend_8 { pt3dadd( 2.35697, 93.4216, -17.1094, 1.11 ) }
    dend_8 { pt3dadd( 2.34028, 93.4714, -17.1384, 1.11 ) }
    dend_8 { pt3dadd( 2.01114, 94.4894, -18.1845, 0.29 ) }
    dend_8 { pt3dadd( 1.82289, 95.0255, -18.8791, 0.29 ) }
    dend_8 { pt3dadd( 1.78569, 95.1217, -19.0143, 0.29 ) }
    dend_8 { pt3dadd( 1.61294, 95.56, -19.6063, 0.29 ) }
    dend_8 { pt3dadd( 1.20824, 96.5605, -20.9027, 0.96 ) }
    dend_8 { pt3dadd( 0.561885, 98.5285, -23.3081, 0.22 ) }
    dend_8 { pt3dadd( 0.424835, 99.0032, -23.872, 0.22 ) }
    dend_8 { pt3dadd( 0.358776, 99.2945, -24.2045, 0.22 ) }
    dend_8 { pt3dadd( 0.187758, 100.354, -25.2902, 1.99 ) }
    dend_8 { pt3dadd( 0.112852, 101.201, -26.0243, 2.95 ) }
    dend_8 { pt3dadd( -0.00989142, 103.04, -27.266, 0.37 ) }
    dend_8 { pt3dadd( -0.0140856, 103.092, -27.2935, 0.37 ) }
    dend_8 { pt3dadd( -0.074489, 103.673, -27.6031, 0.59 ) }
    dend_8 { pt3dadd( -0.176685, 104.301, -27.959, 0.74 ) }
    dend_8 { pt3dadd( -0.345818, 104.988, -28.3596, 0.88 ) }
    dend_8 { pt3dadd( -0.831004, 106.285, -29.0982, 0.22 ) }
    dend_8 { pt3dadd( -0.861767, 106.339, -29.1298, 0.22 ) }
    dend_8 { pt3dadd( -1.23629, 106.953, -29.533, 0.22 ) }
    dend_8 { pt3dadd( -1.54615, 107.408, -29.8559, 0.66 ) }
    dend_8 { pt3dadd( -1.74246, 107.686, -30.0513, 0.66 ) }
    dend_8 { pt3dadd( -1.7766, 107.736, -30.0857, 0.66 ) }
    dend_8 { pt3dadd( -2.27503, 108.568, -30.572, 0.22 ) }
    dend_8 { pt3dadd( -2.84172, 109.589, -31.1216, 1.18 ) }
    dend_8 { pt3dadd( -3.06892, 110.05, -31.3613, 1.33 ) }
    dend_8 { pt3dadd( -3.41798, 110.805, -31.7449, 0.81 ) }
    dend_8 { pt3dadd( -3.78226, 111.648, -32.1798, 0.44 ) }
    dend_8 { pt3dadd( -3.97454, 112.115, -32.4133, 0.59 ) }
    dend_8 { pt3dadd( -4.13995, 112.531, -32.6148, 0.59 ) }
    dend_8 { pt3dadd( -4.58898, 113.73, -33.2698, 0.22 ) }
    dend_8 { pt3dadd( -5.05055, 114.962, -33.9675, 1.69 ) }
    dend_8 { pt3dadd( -5.34399, 115.792, -34.4552, 2.73 ) }
    dend_8 { pt3dadd( -5.61926, 116.592, -34.9322, 2.73 ) }
    dend_8 { pt3dadd( -5.63865, 116.649, -34.9672, 2.73 ) }
    dend_8 { pt3dadd( -6.41469, 118.798, -36.3004, 0.52 ) }
    dend_8 { pt3dadd( -6.82057, 119.878, -36.9276, 0.96 ) }
    dend_8 { pt3dadd( -7.29252, 121.128, -37.602, 0.22 ) }
    dend_8 { pt3dadd( -7.50383, 121.706, -37.8842, 0.52 ) }
    dend_8 { pt3dadd( -7.58888, 121.96, -37.9951, 0.52 ) }
    dend_8 { pt3dadd( -7.92956, 123.061, -38.3811, 0.29 ) }
    dend_8 { pt3dadd( -8.13973, 123.924, -38.5337, 0.22 ) }
    dend_8 { pt3dadd( -8.27935, 124.646, -38.6197, 0.81 ) }
    dend_8 { pt3dadd( -8.33383, 125.001, -38.6526, 0.81 ) }
    dend_8 { pt3dadd( -8.3526, 125.148, -38.6698, 0.81 ) }
    dend_8 { pt3dadd( -8.37469, 125.432, -38.7261, 0.81 ) }
    dend_8 { pt3dadd( -8.36398, 126.441, -39.1248, 0.29 ) }
    dend_8 { pt3dadd( -8.32234, 127.428, -39.6306, 0.29 ) }
    dend_8 { pt3dadd( -8.23991, 128.54, -40.2528, 1.92 ) }
    dend_8 { pt3dadd( -8.18843, 129.077, -40.5667, 2.36 ) }
    dend_8 { pt3dadd( -8.04694, 130.256, -41.2791, 2.06 ) }
    dend_8 { pt3dadd( -7.68045, 132.523, -42.8095, 0.29 ) }
    dend_8 { pt3dadd( -7.58352, 132.999, -43.1582, 0.74 ) }
    dend_8 { pt3dadd( -7.48533, 133.437, -43.5021, 0.96 ) }
    dend_8 { pt3dadd( -7.4513, 133.609, -43.6354, 0.96 ) }
    dend_8 { pt3dadd( -7.42811, 133.773, -43.7567, 0.96 ) }
    dend_8 { pt3dadd( -7.4289, 135.047, -44.6279, 0.37 ) }
    dend_8 { pt3dadd( -7.53382, 135.732, -45.0334, 0.22 ) }
    dend_8 { pt3dadd( -7.62877, 136.174, -45.2904, 0.22 ) }
    dend_8 { pt3dadd( -7.85212, 137.234, -45.8416, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_8 { pt3dadd( -7.96348, 137.922, -46.1623, 1.92 ) }
    dend_8 { pt3dadd( -8.13068, 139.195, -46.685, 0.59 ) }
    dend_8 { pt3dadd( -8.2067, 140.159, -47.0059, 0.22 ) }
    dend_8 { pt3dadd( -8.1824, 140.738, -47.1947, 0.74 ) }
    dend_8 { pt3dadd( -8.04804, 141.777, -47.5077, 0.29 ) }
    dend_8 { pt3dadd( -7.90264, 142.611, -47.7123, 0.81 ) }
    dend_8 { pt3dadd( -7.88983, 142.678, -47.7248, 0.81 ) }
    dend_8 { pt3dadd( -7.79793, 143.182, -47.8324, 0.81 ) }
    dend_8 { pt3dadd( -7.64966, 144.077, -48.0758, 0.22 ) }
    dend_8 { pt3dadd( -7.54939, 144.992, -48.3465, 0.22 ) }
    dend_8 { pt3dadd( -7.47615, 146.499, -48.7855, 1.4 ) }
    dend_8 { pt3dadd( -7.46858, 147.219, -48.9796, 1.99 ) }
    dend_8 { pt3dadd( -7.47421, 149.019, -49.4397, 0.29 ) }
    dend_8 { pt3dadd( -7.48194, 149.454, -49.5433, 0.29 ) }
    dend_8 { pt3dadd( -7.49631, 150.324, -49.7395, 0.22 ) }
    dend_8 { pt3dadd( -7.47207, 151.079, -49.9118, 0.81 ) }
    dend_8 { pt3dadd( -7.462, 151.361, -49.9764, 1.03 ) }
    dend_8 { pt3dadd( -7.46124, 151.574, -50.036, 1.03 ) }
    dend_8 { pt3dadd( -7.4746, 152.02, -50.1669, 0.74 ) }
    dend_8 { pt3dadd( -7.50559, 153.034, -50.5154, 0.22 ) }
    dend_8 { pt3dadd( -7.47083, 153.853, -50.7927, 1.11 ) }
    dend_8 { pt3dadd( -7.43647, 154.23, -50.9141, 1.47 ) }
    dend_8 { pt3dadd( -7.23523, 155.775, -51.344, 0.29 ) }
    dend_8 { pt3dadd( -7.13162, 156.424, -51.503, 0.29 ) }
    dend_8 { pt3dadd( -6.93563, 157.363, -51.6822, 0.22 ) }
    dend_8 { pt3dadd( -6.53556, 158.932, -51.8761, 1.62 ) }
    dend_8 { pt3dadd( -6.36596, 159.516, -51.9077, 1.77 ) }
    dend_8 { pt3dadd( -6.1314, 160.296, -51.9036, 1.25 ) }
    dend_8 { pt3dadd( -6.10967, 160.372, -51.8959, 1.25 ) }
    dend_8 { pt3dadd( -5.80308, 161.701, -51.734, 0.29 ) }
    dend_8 { pt3dadd( -5.69983, 162.488, -51.6439, 0.29 ) }
    dend_8 { pt3dadd( -5.66789, 163.445, -51.5477, 0.81 ) }
    dend_8 { pt3dadd( -5.6785, 164.266, -51.4712, 0.88 ) }
    dend_8 { pt3dadd( -5.73038, 165.178, -51.4332, 0.29 ) }
    dend_8 { pt3dadd( -5.79568, 165.9, -51.4361, 0.29 ) }
    dend_8 { pt3dadd( -5.97991, 167.201, -51.505, 1.62 ) }
    dend_8 { pt3dadd( -6.05475, 167.702, -51.5551, 2.06 ) }
    dend_8 { pt3dadd( -6.13172, 168.215, -51.6324, 2.06 ) }
    dend_8 { pt3dadd( -6.26323, 169.493, -51.8672, 0.44 ) }
    dend_8 { pt3dadd( -6.28806, 169.99, -51.976, 0.29 ) }
    dend_8 { pt3dadd( -6.26561, 170.654, -52.1012, 0.29 ) }
    dend_8 { pt3dadd( -6.16842, 171.443, -52.1908, 0.22 ) }
    dend_8 { pt3dadd( -6.14831, 171.555, -52.1952, 0.22 ) }
    dend_8 { pt3dadd( -6.0057, 172.213, -52.1573, 0.22 ) }
    dend_8 { pt3dadd( -5.99266, 172.29, -52.1436, 0.22 ) }
    dend_8 { pt3dadd( -5.89599, 173.258, -51.9729, 0.22 ) }
    dend_8 { pt3dadd( -5.857, 174.152, -51.8177, 0.52 ) }
    dend_8 { pt3dadd( -5.88608, 174.676, -51.7385, 0.59 ) }
    dend_8 { pt3dadd( -5.94412, 175.137, -51.6806, 0.59 ) }
    dend_8 { pt3dadd( -6.1271, 176.236, -51.5775, 0.29 ) }
    dend_8 { pt3dadd( -6.20395, 176.902, -51.5435, 0.88 ) }
    dend_8 { pt3dadd( -6.21175, 176.98, -51.5427, 0.88 ) }
    dend_8 { pt3dadd( -6.22229, 177.633, -51.5421, 1.11 ) }
    dend_8 { pt3dadd( -6.20988, 177.924, -51.5429, 1.33 ) }
    dend_8 { pt3dadd( -6.14061, 178.693, -51.5475, 1.03 ) }
    dend_8 { pt3dadd( -5.96662, 180.027, -51.5596, 0.29 ) }
    dend_8 { pt3dadd( -5.95645, 180.096, -51.5604, 0.29 ) }
    dend_8 { pt3dadd( -5.76335, 181.249, -51.5721, 0.29 ) }
    dend_8 { pt3dadd( -5.74895, 181.318, -51.5734, 0.29 ) }
    dend_8 { pt3dadd( -5.4646, 182.536, -51.6048, 0.29 ) }
    dend_8 { pt3dadd( -5.26377, 183.271, -51.6278, 0.81 ) }
    dend_8 { pt3dadd( -5.0328, 183.952, -51.6513, 1.03 ) }
    dend_8 { pt3dadd( -5.00162, 184.027, -51.6555, 1.03 ) }
    dend_8 { pt3dadd( -4.54299, 184.941, -51.7362, 1.69 ) }
    dend_8 { pt3dadd( -4.33878, 185.318, -51.7759, 1.69 ) }
    dend_8 { pt3dadd( -3.87966, 186.075, -51.9157, 1.92 ) }
    dend_8 { pt3dadd( -3.47412, 186.721, -52.0746, 1.25 ) }
    dend_8 { pt3dadd( -2.83309, 187.708, -52.4211, 0.96 ) }
    dend_8 { pt3dadd( -2.5649, 188.113, -52.8168, 0.74 ) }
    dend_8 { pt3dadd( -2.54394, 188.146, -52.8614, 0.74 ) }
    dend_8 { pt3dadd( -2.1175, 188.889, -53.936, 0.22 ) }
    dend_8 { pt3dadd( -2.08887, 188.941, -54.0159, 0.22 ) }
    dend_8 { pt3dadd( -1.65665, 189.855, -55.3664, 2.06 ) }
    dend_8 { pt3dadd( -0.29908, 192.993, -59.8912, 0.22 ) }
    dend_8 { pt3dadd( -0.106158, 193.482, -60.5464, 1.25 ) }
    dend_8 { pt3dadd( 0.00690338, 193.82, -60.9727, 1.62 ) }
    dend_8 { pt3dadd( 0.250304, 194.715, -62.0866, 0.22 ) }
    dend_8 { pt3dadd( 0.488943, 195.672, -63.2012, 1.47 ) }
    dend_8 { pt3dadd( 0.54827, 195.939, -63.4912, 2.06 ) }
    dend_8 { pt3dadd( 0.717694, 196.781, -64.2665, 2.8 ) }
    dend_8 { pt3dadd( 0.872651, 197.639, -65.0642, 2.95 ) }
    dend_8 { pt3dadd( 1.3771, 201.305, -68.481, 0.59 ) }
    dend_8 { pt3dadd( 1.47638, 202.395, -69.4849, 0.22 ) }
    dend_8 { pt3dadd( 1.48068, 202.447, -69.5315, 0.22 ) }
    dend_8 { pt3dadd( 1.52852, 203.301, -70.2556, 0.37 ) }
    dend_8 { pt3dadd( 1.54082, 204.12, -70.8533, 0.37 ) }
    dend_8 { pt3dadd( 1.53582, 204.87, -71.2709, 0.22 ) }
    dend_8 { pt3dadd( 1.52531, 205.413, -71.4891, 0.22 ) }
    dend_8 { pt3dadd( 1.57908, 206.23, -71.8809, 0.22 ) }
    dend_8 { pt3dadd( 1.75627, 207.128, -72.3497, 0.22 ) }
    dend_8 { pt3dadd( 2.15442, 208.421, -73.0875, 1.92 ) }
    dend_8 { pt3dadd( 2.27644, 208.749, -73.2792, 2.06 ) }
    dend_8 { pt3dadd( 2.86995, 210.372, -74.1991, 0.37 ) }
    dend_8 { pt3dadd( 3.02695, 210.911, -74.4945, 0.88 ) }
    dend_8 { pt3dadd( 3.03945, 211.471, -74.7662, 0.88 ) }
    dend_8 { pt3dadd( 2.88467, 212.197, -75.05, 0.29 ) }
    dend_8 { pt3dadd( 2.72668, 212.855, -75.3807, 0.44 ) }
    dend_8 { pt3dadd( 2.54495, 213.59, -75.7611, 0.22 ) }
    dend_8 { pt3dadd( 2.39798, 214.188, -76.0713, 0.22 ) }
    dend_8 { pt3dadd( 2.15841, 215.471, -76.7885, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( 2.10258, 216.1, -77.1602, 2.14 ) }
    dend_8 { pt3dadd( 2.16109, 218.374, -78.4985, 0.22 ) }
    dend_8 { pt3dadd( 2.23687, 219.074, -78.9081, 0.22 ) }
    dend_8 { pt3dadd( 2.35675, 219.757, -79.3019, 0.96 ) }
    dend_8 { pt3dadd( 2.43132, 220.085, -79.49, 1.11 ) }
    dend_8 { pt3dadd( 2.78984, 221.301, -80.1029, 0.22 ) }
    dend_8 { pt3dadd( 3.02985, 221.956, -80.3729, 0.52 ) }
    dend_8 { pt3dadd( 3.05331, 222.01, -80.3836, 0.52 ) }
    dend_8 { pt3dadd( 3.1439, 222.215, -80.4292, 0.52 ) }
    dend_8 { pt3dadd( 3.17239, 222.277, -80.445, 0.52 ) }
    dend_8 { pt3dadd( 3.70525, 223.445, -80.7723, 0.22 ) }
    dend_8 { pt3dadd( 4.11785, 224.34, -81.0322, 0.52 ) }
    dend_8 { pt3dadd( 4.38397, 224.915, -81.2134, 0.52 ) }
    dend_8 { pt3dadd( 5.10057, 226.495, -81.7804, 1.11 ) }
    dend_8 { pt3dadd( 5.74123, 227.921, -82.3473, 0.15 ) }
    dend_8 { pt3dadd( 5.87735, 228.234, -82.4844, 0.88 ) }
    dend_8 { pt3dadd( 5.90188, 228.294, -82.5127, 0.88 ) }
    dend_8 { pt3dadd( 6.03132, 228.607, -82.6658, 0.88 ) }
    dend_8 { pt3dadd( 6.6682, 229.965, -83.2941, 0.22 ) }
    dend_8 { pt3dadd( 7.15606, 230.93, -83.6791, 0.22 ) }
    dend_8 { pt3dadd( 7.18017, 230.98, -83.6986, 0.22 ) }
    dend_8 { pt3dadd( 7.56721, 231.863, -84.0162, 1.03 ) }
    dend_8 { pt3dadd( 7.72592, 232.238, -84.1467, 1.33 ) }
    dend_8 { pt3dadd( 8.22256, 233.458, -84.5494, 0.22 ) }
    dend_8 { pt3dadd( 8.48224, 234.143, -84.7335, 0.22 ) }
    dend_8 { pt3dadd( 8.50157, 234.197, -84.7472, 0.22 ) }
    dend_8 { pt3dadd( 8.88369, 235.335, -85.0198, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 27/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.5883, 57.7092, -8.33618, 0.29 ) }
    dend_3 { pt3dadd( 11.7279, 59.7741, -7.44143, 0.29 ) }
    dend_3 { pt3dadd( 11.8056, 61.112, -6.83175, 0.29 ) }
    dend_3 { pt3dadd( 11.8197, 61.2312, -6.78193, 0.29 ) }
    dend_3 { pt3dadd( 11.977, 62.2914, -6.35883, 0.29 ) }
    dend_3 { pt3dadd( 11.9958, 62.3899, -6.32371, 0.29 ) }
    dend_3 { pt3dadd( 12.1559, 63.1347, -6.07943, 0.29 ) }
    dend_3 { pt3dadd( 12.4042, 64.2409, -5.80742, 0.29 ) }
    dend_3 { pt3dadd( 12.7191, 65.6542, -5.49543, 0.29 ) }
    dend_3 { pt3dadd( 12.7377, 65.7565, -5.47346, 0.29 ) }
    dend_3 { pt3dadd( 12.851, 66.554, -5.31215, 0.29 ) }
    dend_3 { pt3dadd( 12.8625, 66.7001, -5.28025, 0.29 ) }
    dend_3 { pt3dadd( 12.8421, 67.695, -5.05834, 0.29 ) }
    dend_3 { pt3dadd( 12.6936, 68.8793, -4.81115, 1.18 ) }
    dend_3 { pt3dadd( 12.4945, 69.8916, -4.59636, 2.14 ) }
    dend_3 { pt3dadd( 12.4189, 70.2455, -4.52463, 2.43 ) }
    dend_3 { pt3dadd( 12.2959, 70.8201, -4.4054, 2.43 ) }
    dend_3 { pt3dadd( 12.0789, 71.9902, -4.18715, 0.59 ) }
    dend_3 { pt3dadd( 11.9865, 72.5856, -4.09987, 0.29 ) }
    dend_3 { pt3dadd( 11.8805, 73.2033, -4.05338, 0.29 ) }
    dend_3 { pt3dadd( 11.8597, 73.3307, -4.03805, 0.29 ) }
    dend_3 { pt3dadd( 11.7044, 74.4088, -3.83475, 0.29 ) }
    dend_3 { pt3dadd( 11.6956, 74.476, -3.81723, 0.29 ) }
    dend_3 { pt3dadd( 11.6154, 75.2179, -3.56018, 0.29 ) }
    dend_3 { pt3dadd( 11.5294, 76.0924, -3.2454, 0.29 ) }
    dend_3 { pt3dadd( 11.4091, 77.3706, -2.80055, 0.15 ) }
    dend_3 { pt3dadd( 11.3961, 77.5019, -2.75382, 0.15 ) }
    dend_3 { pt3dadd( 11.3031, 78.3272, -2.48545, 0.15 ) }
    dend_3 { pt3dadd( 11.1506, 79.5866, -2.10218, 0.81 ) }
    dend_3 { pt3dadd( 10.979, 80.6251, -1.81044, 1.4 ) }
    dend_3 { pt3dadd( 10.8406, 81.3218, -1.64221, 1.99 ) }
    dend_3 { pt3dadd( 10.6427, 82.1011, -1.4956, 2.21 ) }
    dend_3 { pt3dadd( 10.2607, 83.4467, -1.25115, 0.29 ) }
    dend_3 { pt3dadd( 10.0341, 84.1521, -1.13865, 0.22 ) }
    dend_3 { pt3dadd( 9.6849, 85.0853, -1.02459, 0.22 ) }
    dend_3 { pt3dadd( 9.51476, 85.4969, -0.98447, 0.22 ) }
    dend_3 { pt3dadd( 9.45269, 85.6333, -0.97711, 0.22 ) }
    dend_3 { pt3dadd( 9.13983, 86.2963, -0.96088, 0.22 ) }
    dend_3 { pt3dadd( 8.67026, 87.2553, -0.92639, 1.11 ) }
    dend_3 { pt3dadd( 8.51168, 87.5916, -0.913, 1.18 ) }
    dend_3 { pt3dadd( 8.30579, 88.0761, -0.88832, 0.88 ) }
    dend_3 { pt3dadd( 7.93625, 88.9943, -0.84256, 0.52 ) }
    dend_3 { pt3dadd( 7.60612, 89.8904, -0.798382, 0.29 ) }
    dend_3 { pt3dadd( 7.33748, 90.7111, -0.778691, 0.29 ) }
    dend_3 { pt3dadd( 7.30411, 90.8471, -0.778883, 0.29 ) }
    dend_3 { pt3dadd( 7.19538, 91.5709, -0.82495, 0.22 ) }
    dend_3 { pt3dadd( 7.11905, 92.4643, -0.92409, 0.96 ) }
    dend_3 { pt3dadd( 7.0979, 92.8988, -0.98994, 0.96 ) }
    dend_3 { pt3dadd( 7.04703, 93.6697, -1.15878, 0.44 ) }
    dend_3 { pt3dadd( 6.94201, 94.5163, -1.37482, 0.29 ) }
    dend_3 { pt3dadd( 6.68958, 95.7856, -1.7178, 1.84 ) }
    dend_3 { pt3dadd( 6.57037, 96.2168, -1.84399, 2.14 ) }
    dend_3 { pt3dadd( 6.39398, 96.7894, -2.01932, 1.92 ) }
    dend_3 { pt3dadd( 5.93498, 98.307, -2.48119, 0.29 ) }
    dend_3 { pt3dadd( 5.65185, 99.2415, -2.75828, 0.29 ) }
    dend_3 { pt3dadd( 5.46558, 99.9055, -2.97075, 0.29 ) }
    dend_3 { pt3dadd( 5.31285, 100.643, -3.21965, 0.22 ) }
    dend_3 { pt3dadd( 5.23216, 101.531, -3.53298, 1.03 ) }
    dend_3 { pt3dadd( 5.27401, 102.206, -3.79373, 1.03 ) }
    dend_3 { pt3dadd( 5.28511, 102.271, -3.81835, 1.03 ) }
    dend_3 { pt3dadd( 5.44623, 103.096, -4.17509, 1.18 ) }
    dend_3 { pt3dadd( 5.63787, 104.217, -4.68152, 1.92 ) }
    dend_3 { pt3dadd( 5.71324, 104.977, -5.02631, 2.21 ) }
    dend_3 { pt3dadd( 5.69652, 106.434, -5.66597, 0.29 ) }
    dend_3 { pt3dadd( 5.59291, 107.315, -6.03694, 0.29 ) }
    dend_3 { pt3dadd( 5.27758, 108.831, -6.62515, 1.18 ) }
    dend_3 { pt3dadd( 5.08326, 109.46, -6.84394, 1.33 ) }
    dend_3 { pt3dadd( 4.62209, 110.555, -7.23432, 0.29 ) }
    dend_3 { pt3dadd( 4.10456, 111.576, -7.60691, 0.29 ) }
    dend_3 { pt3dadd( 3.48268, 112.69, -7.99782, 1.03 ) }
    dend_3 { pt3dadd( 3.15188, 113.309, -8.22155, 1.25 ) }
    dend_3 { pt3dadd( 2.89865, 113.813, -8.39772, 1.4 ) }
    dend_3 { pt3dadd( 2.15711, 115.438, -9.00552, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_3 { pt3dadd( 2.1286, 115.508, -9.03215, 0.22 ) }
    dend_3 { pt3dadd( 1.8448, 116.382, -9.34541, 0.22 ) }
    dend_3 { pt3dadd( 1.50219, 117.719, -9.72867, 2.36 ) }
    dend_3 { pt3dadd( 1.48786, 117.796, -9.74656, 2.36 ) }
    dend_3 { pt3dadd( 1.40683, 118.43, -9.85017, 2.8 ) }
    dend_3 { pt3dadd( 1.35334, 119.09, -9.86487, 2.65 ) }
    dend_3 { pt3dadd( 1.1967, 120.932, -9.80103, 0.29 ) }
    dend_3 { pt3dadd( 1.11637, 121.815, -9.71786, 0.22 ) }
    dend_3 { pt3dadd( 1.05864, 122.398, -9.64615, 0.22 ) }
    dend_3 { pt3dadd( 0.990775, 123.04, -9.56896, 0.22 ) }
    dend_3 { pt3dadd( 0.762632, 124.783, -9.36648, 1.84 ) }
    dend_3 { pt3dadd( 0.688746, 125.204, -9.31883, 2.43 ) }
    dend_3 { pt3dadd( 0.590903, 125.628, -9.27331, 2.58 ) }
    dend_3 { pt3dadd( 0.0614171, 127.514, -9.09516, 0.22 ) }
    dend_3 { pt3dadd( 0.0291151, 127.613, -9.08588, 0.22 ) }
    dend_3 { pt3dadd( -0.299781, 128.609, -9.00436, 0.22 ) }
    dend_3 { pt3dadd( -0.703185, 129.859, -8.9266, 1.77 ) }
    dend_3 { pt3dadd( -0.808562, 130.21, -8.90152, 2.21 ) }
    dend_3 { pt3dadd( -1.33447, 132.105, -8.74845, 0.29 ) }
    dend_3 { pt3dadd( -1.48133, 132.764, -8.70152, 0.29 ) }
    dend_3 { pt3dadd( -1.62667, 133.635, -8.65973, 0.29 ) }
    dend_3 { pt3dadd( -1.72666, 134.652, -8.63962, 1.18 ) }
    dend_3 { pt3dadd( -1.76454, 135.312, -8.63901, 1.47 ) }
    dend_3 { pt3dadd( -1.78983, 136.042, -8.64866, 1.11 ) }
    dend_3 { pt3dadd( -1.78141, 137.174, -8.69661, 0.22 ) }
    dend_3 { pt3dadd( -1.78242, 137.378, -8.6944, 0.22 ) }
    dend_3 { pt3dadd( -1.80861, 138.329, -8.63483, 0.74 ) }
    dend_3 { pt3dadd( -1.83985, 138.816, -8.57543, 0.52 ) }
    dend_3 { pt3dadd( -1.91397, 139.773, -8.32314, 0.29 ) }
    dend_3 { pt3dadd( -1.92033, 139.84, -8.30241, 0.29 ) }
    dend_3 { pt3dadd( -2.1018, 141.43, -7.75352, 1.99 ) }
    dend_3 { pt3dadd( -2.13533, 141.721, -7.65504, 2.73 ) }
    dend_3 { pt3dadd( -2.25269, 142.839, -7.25503, 2.43 ) }
    dend_3 { pt3dadd( -2.46007, 145.102, -6.45825, 0.29 ) }
    dend_3 { pt3dadd( -2.54424, 146.202, -6.07769, 0.22 ) }
    dend_3 { pt3dadd( -2.54991, 146.268, -6.05685, 0.22 ) }
    dend_3 { pt3dadd( -2.61561, 146.937, -5.87742, 0.22 ) }
    dend_3 { pt3dadd( -2.71872, 147.811, -5.67991, 0.88 ) }
    dend_3 { pt3dadd( -2.78851, 148.395, -5.59225, 1.18 ) }
    dend_3 { pt3dadd( -2.93279, 149.564, -5.5401, 0.29 ) }
    dend_3 { pt3dadd( -2.98802, 150.124, -5.52082, 0.22 ) }
    dend_3 { pt3dadd( -3.02569, 150.588, -5.52639, 0.37 ) }
    dend_3 { pt3dadd( -3.07204, 151.249, -5.56887, 0.37 ) }
    dend_3 { pt3dadd( -3.14652, 152.214, -5.68987, 0.29 ) }
    dend_3 { pt3dadd( -3.15252, 152.283, -5.69421, 0.29 ) }
    dend_3 { pt3dadd( -3.19514, 152.825, -5.61735, 0.29 ) }
    dend_3 { pt3dadd( -3.24271, 153.54, -5.37531, 0.59 ) }
    dend_3 { pt3dadd( -3.2519, 153.635, -5.32742, 0.59 ) }
    dend_3 { pt3dadd( -3.30021, 154.088, -5.05774, 0.59 ) }
    dend_3 { pt3dadd( -3.42338, 155.152, -4.38783, 0.22 ) }
    dend_3 { pt3dadd( -3.61165, 156.965, -3.26627, 2.5 ) }
    dend_3 { pt3dadd( -3.70889, 158.027, -2.62858, 1.99 ) }
    dend_3 { pt3dadd( -3.85883, 159.906, -1.5413, 0.22 ) }
    dend_3 { pt3dadd( -3.92977, 161.049, -0.92691, 1.62 ) }
    dend_3 { pt3dadd( -3.96196, 161.648, -0.637267, 2.28 ) }
    dend_3 { pt3dadd( -4.05678, 163.109, -0.0502847, 0.22 ) }
    dend_3 { pt3dadd( -4.12511, 163.904, 0.186361, 0.74 ) }
    dend_3 { pt3dadd( -4.14402, 164.163, 0.238813, 0.74 ) }
    dend_3 { pt3dadd( -4.18676, 165.096, 0.345563, 0.22 ) }
    dend_3 { pt3dadd( -4.2135, 165.818, 0.405434, 0.66 ) }
    dend_3 { pt3dadd( -4.21003, 166.443, 0.481604, 0.66 ) }
    dend_3 { pt3dadd( -4.1774, 167.273, 0.605699, 0.29 ) }
    dend_3 { pt3dadd( -4.15523, 168.111, 0.746478, 0.37 ) }
    dend_3 { pt3dadd( -4.1642, 168.576, 0.822492, 0.22 ) }
    dend_3 { pt3dadd( -4.22375, 169.23, 0.918862, 0.22 ) }
    dend_3 { pt3dadd( -4.40244, 170.745, 1.12006, 1.92 ) }
    dend_3 { pt3dadd( -4.47264, 171.247, 1.17783, 2.65 ) }
    dend_3 { pt3dadd( -4.75003, 172.799, 1.32311, 0.29 ) }
    dend_3 { pt3dadd( -4.92982, 173.659, 1.36032, 0.29 ) }
    dend_3 { pt3dadd( -5.16591, 174.723, 1.35818, 0.29 ) }
    dend_3 { pt3dadd( -5.32902, 175.409, 1.31906, 0.29 ) }
    dend_3 { pt3dadd( -5.46724, 175.975, 1.26665, 1.03 ) }
    dend_3 { pt3dadd( -5.64929, 176.775, 1.20398, 1.4 ) }
    dend_3 { pt3dadd( -5.85912, 177.874, 1.15739, 0.29 ) }
    dend_3 { pt3dadd( -5.87268, 177.954, 1.15741, 0.29 ) }
    dend_3 { pt3dadd( -6.04703, 178.792, 1.20744, 0.29 ) }
    dend_3 { pt3dadd( -6.35174, 179.766, 1.31929, 0.66 ) }
    dend_3 { pt3dadd( -6.60202, 180.393, 1.41537, 1.11 ) }
    dend_3 { pt3dadd( -6.89512, 181.019, 1.53722, 1.25 ) }
    dend_3 { pt3dadd( -7.20826, 181.665, 1.72966, 0.81 ) }
    dend_3 { pt3dadd( -7.51847, 182.348, 1.95158, 0.29 ) }
    dend_3 { pt3dadd( -7.78655, 182.98, 2.17367, 0.29 ) }
    dend_3 { pt3dadd( -8.0741, 183.699, 2.43921, 0.29 ) }
    dend_3 { pt3dadd( -8.09605, 183.76, 2.46488, 0.29 ) }
    dend_3 { pt3dadd( -8.47783, 184.876, 2.96022, 0.22 ) }
    dend_3 { pt3dadd( -8.70241, 185.585, 3.31213, 0.22 ) }
    dend_3 { pt3dadd( -8.7156, 185.637, 3.33964, 0.22 ) }
    dend_3 { pt3dadd( -8.93639, 186.723, 3.97469, 1.03 ) }
    dend_3 { pt3dadd( -9.0615, 187.363, 4.36892, 1.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 89/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 6.21943, -50.428, 6.74036, 0.29 ) }
    dend_62 { pt3dadd( 6.96737, -52.6163, 7.61845, 0.29 ) }
    dend_62 { pt3dadd( 7.33491, -53.8682, 8.1527, 0.29 ) }
    dend_62 { pt3dadd( 7.52979, -54.7739, 8.60293, 0.66 ) }
    dend_62 { pt3dadd( 7.74888, -56.0645, 9.28147, 0.44 ) }
    dend_62 { pt3dadd( 7.8384, -56.814, 9.68181, 0.81 ) }
    dend_62 { pt3dadd( 7.86723, -57.2035, 9.88439, 1.18 ) }
    dend_62 { pt3dadd( 7.87657, -58.4509, 10.5162, 1.03 ) }
    dend_62 { pt3dadd( 7.72345, -59.7013, 11.1855, 0.44 ) }
    dend_62 { pt3dadd( 7.67023, -59.966, 11.3356, 1.03 ) }
    dend_62 { pt3dadd( 7.57796, -60.3993, 11.621, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_62 { pt3dadd( 7.43438, -61.05, 12.1052, 0.37 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 1/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 6.21943, -50.428, 6.74036, 0.96 ) }
    dend_61 { pt3dadd( 7.29501, -54.6782, 2.66699, 0.96 ) }
    dend_61 { pt3dadd( 7.40257, -55.1148, 2.285, 1.25 ) }
    dend_61 { pt3dadd( 7.65126, -56.1801, 1.43998, 1.25 ) }
    dend_61 { pt3dadd( 8.02539, -57.9313, 0.195459, 0.44 ) }
    dend_61 { pt3dadd( 8.28707, -59.2918, -0.647169, 0.44 ) }
    dend_61 { pt3dadd( 8.36255, -59.7131, -0.87794, 1.55 ) }
    dend_61 { pt3dadd( 8.45977, -60.3817, -1.04412, 1.77 ) }
    dend_61 { pt3dadd( 8.54987, -61.1694, -1.20991, 1.47 ) }
    dend_61 { pt3dadd( 8.60131, -62.1099, -1.3517, 0.81 ) }
    dend_61 { pt3dadd( 8.62696, -63.4098, -1.52666, 0.52 ) }
    dend_61 { pt3dadd( 8.66588, -64.1467, -1.6314, 0.88 ) }
    dend_61 { pt3dadd( 8.74083, -64.649, -1.73477, 1.25 ) }
    dend_61 { pt3dadd( 8.96463, -65.4933, -1.97933, 1.03 ) }
    dend_61 { pt3dadd( 9.57284, -66.6872, -2.44583, 0.37 ) }
    dend_61 { pt3dadd( 10.5084, -68.0046, -3.05057, 0.66 ) }
    dend_61 { pt3dadd( 10.9553, -68.5181, -3.31444, 1.25 ) }
    dend_61 { pt3dadd( 11.8076, -69.4277, -3.78954, 1.84 ) }
    dend_61 { pt3dadd( 12.4277, -70.0607, -4.11199, 1.99 ) }
    dend_61 { pt3dadd( 13.8682, -71.4414, -4.78351, 0.29 ) }
    dend_61 { pt3dadd( 14.4346, -71.9825, -5.00474, 0.29 ) }
    dend_61 { pt3dadd( 14.5034, -72.0611, -5.02419, 0.29 ) }
    dend_61 { pt3dadd( 14.9237, -72.705, -5.18479, 0.29 ) }
    dend_61 { pt3dadd( 15.2033, -73.3087, -5.35744, 1.18 ) }
    dend_61 { pt3dadd( 15.2235, -73.3626, -5.37441, 1.18 ) }
    dend_61 { pt3dadd( 15.3648, -73.7737, -5.53015, 1.62 ) }
    dend_61 { pt3dadd( 15.5587, -74.2676, -5.75151, 1.62 ) }
    dend_61 { pt3dadd( 16.2041, -75.8076, -6.53485, 0.37 ) }
    dend_61 { pt3dadd( 16.7113, -77.0068, -7.17436, 1.99 ) }
    dend_61 { pt3dadd( 16.9553, -77.6088, -7.50199, 2.65 ) }
    dend_61 { pt3dadd( 17.2925, -78.5223, -7.99349, 2.65 ) }
    dend_61 { pt3dadd( 17.6354, -79.5417, -8.53953, 2.06 ) }
    dend_61 { pt3dadd( 18.0991, -81.0682, -9.34397, 0.52 ) }
    dend_61 { pt3dadd( 18.3593, -81.9782, -9.77636, 0.29 ) }
    dend_61 { pt3dadd( 18.3979, -82.1245, -9.84327, 0.29 ) }
    dend_61 { pt3dadd( 18.5472, -82.6941, -10.1358, 0.29 ) }
    dend_61 { pt3dadd( 18.5612, -82.7533, -10.1703, 0.29 ) }
    dend_61 { pt3dadd( 18.76, -83.5041, -10.639, 0.29 ) }
    dend_61 { pt3dadd( 18.971, -84.1813, -11.1143, 1.69 ) }
    dend_61 { pt3dadd( 19.3029, -85.1029, -11.8021, 2.06 ) }
    dend_61 { pt3dadd( 19.7177, -86.2762, -12.6913, 1.92 ) }
    dend_61 { pt3dadd( 20.1406, -87.6853, -13.7615, 0.44 ) }
    dend_61 { pt3dadd( 20.3027, -88.3928, -14.2719, 0.37 ) }
    dend_61 { pt3dadd( 20.4587, -89.6059, -15.1609, 0.52 ) }
    dend_61 { pt3dadd( 20.4923, -89.9896, -15.4278, 0.52 ) }
    dend_61 { pt3dadd( 20.5437, -90.7987, -15.9404, 0.22 ) }
    dend_61 { pt3dadd( 20.6031, -91.8996, -16.5561, 2.14 ) }
    dend_61 { pt3dadd( 20.6419, -92.6874, -16.9463, 2.87 ) }
    dend_61 { pt3dadd( 20.7461, -95.2588, -18.1886, 0.81 ) }
    dend_61 { pt3dadd( 20.8165, -96.6224, -18.8207, 0.29 ) }
    dend_61 { pt3dadd( 20.8216, -96.685, -18.8515, 0.29 ) }
    dend_61 { pt3dadd( 20.9223, -97.6101, -19.3313, 0.29 ) }
    dend_61 { pt3dadd( 21.052, -98.6384, -19.8785, 0.29 ) }
    dend_61 { pt3dadd( 21.1732, -99.5604, -20.3779, 1.77 ) }
    dend_61 { pt3dadd( 21.2894, -100.322, -20.779, 2.5 ) }
    dend_61 { pt3dadd( 21.5728, -102.015, -21.7592, 0.52 ) }
    dend_61 { pt3dadd( 21.7577, -102.895, -22.2762, 0.22 ) }
    dend_61 { pt3dadd( 21.9105, -103.439, -22.6026, 0.22 ) }
    dend_61 { pt3dadd( 22.1128, -103.922, -22.8758, 0.22 ) }
    dend_61 { pt3dadd( 22.49, -104.646, -23.1896, 0.96 ) }
    dend_61 { pt3dadd( 22.8056, -105.155, -23.3575, 1.25 ) }
    dend_61 { pt3dadd( 23.118, -105.609, -23.4537, 1.25 ) }
    dend_61 { pt3dadd( 23.5607, -106.231, -23.5722, 0.66 ) }
    dend_61 { pt3dadd( 24.166, -107.095, -23.7391, 0.29 ) }
    dend_61 { pt3dadd( 24.7324, -107.927, -23.9221, 0.29 ) }
    dend_61 { pt3dadd( 24.7717, -107.983, -23.9335, 0.29 ) }
    dend_61 { pt3dadd( 25.4178, -108.911, -24.1075, 0.29 ) }
    dend_61 { pt3dadd( 26.144, -109.915, -24.36, 2.06 ) }
    dend_61 { pt3dadd( 26.5636, -110.49, -24.5244, 3.02 ) }
    dend_61 { pt3dadd( 27.2804, -111.431, -24.958, 3.17 ) }
    dend_61 { pt3dadd( 28.4146, -112.91, -25.9152, 0.29 ) }
    dend_61 { pt3dadd( 29.0686, -113.777, -26.585, 0.29 ) }
    dend_61 { pt3dadd( 29.9602, -115.04, -27.7223, 1.4 ) }
    dend_61 { pt3dadd( 30.1113, -115.279, -27.9555, 1.4 ) }
    dend_61 { pt3dadd( 31.2479, -117.484, -30.2939, 0.29 ) }
    dend_61 { pt3dadd( 31.7416, -118.552, -31.4944, 0.29 ) }
    dend_61 { pt3dadd( 31.7579, -118.59, -31.5388, 0.29 ) }
    dend_61 { pt3dadd( 32.2158, -119.576, -32.7027, 2.36 ) }
    dend_61 { pt3dadd( 32.5954, -120.381, -33.5593, 2.8 ) }
    dend_61 { pt3dadd( 33.7127, -122.622, -35.7443, 0.52 ) }
    dend_61 { pt3dadd( 34.1938, -123.589, -36.5076, 0.44 ) }
    dend_61 { pt3dadd( 34.3626, -123.927, -36.7499, 0.81 ) }
    dend_61 { pt3dadd( 34.7628, -124.771, -37.3153, 0.22 ) }
    dend_61 { pt3dadd( 35.0278, -125.343, -37.6682, 0.22 ) }
    dend_61 { pt3dadd( 35.0482, -125.394, -37.6947, 0.22 ) }
    dend_61 { pt3dadd( 35.2615, -125.94, -37.9796, 0.22 ) }
    dend_61 { pt3dadd( 35.5724, -126.956, -38.628, 2.14 ) }
    dend_61 { pt3dadd( 35.7902, -127.646, -39.1222, 2.65 ) }
    dend_61 { pt3dadd( 35.9615, -128.158, -39.5577, 2.65 ) }
    dend_61 { pt3dadd( 35.9768, -128.201, -39.5968, 2.65 ) }
    dend_61 { pt3dadd( 36.7719, -130.27, -41.497, 0.29 ) }
    dend_61 { pt3dadd( 36.8043, -130.352, -41.5785, 0.29 ) }
    dend_61 { pt3dadd( 37.0256, -130.945, -42.1557, 0.29 ) }
    dend_61 { pt3dadd( 37.4025, -132.059, -43.165, 1.47 ) }
    dend_61 { pt3dadd( 37.5507, -132.551, -43.5832, 1.84 ) }
    dend_61 { pt3dadd( 37.7045, -133.064, -43.9965, 2.14 ) }
    dend_61 { pt3dadd( 38.4066, -135.37, -45.6674, 0.52 ) }
    dend_61 { pt3dadd( 38.6882, -136.109, -46.1946, 0.29 ) }
    dend_61 { pt3dadd( 38.9635, -136.719, -46.6194, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_61 { pt3dadd( 38.9927, -136.773, -46.6536, 0.37 ) }
    dend_61 { pt3dadd( 39.3997, -137.419, -47.0745, 1.18 ) }
    dend_61 { pt3dadd( 39.7429, -138.001, -47.4044, 0.74 ) }
    dend_61 { pt3dadd( 40.2742, -138.966, -47.7964, 0.29 ) }
    dend_61 { pt3dadd( 40.8476, -140.09, -48.2529, 1.62 ) }
    dend_61 { pt3dadd( 41.0517, -140.533, -48.4207, 2.28 ) }
    dend_61 { pt3dadd( 41.4384, -141.477, -48.7326, 1.92 ) }
    dend_61 { pt3dadd( 41.9782, -142.943, -49.1818, 0.22 ) }
    dend_61 { pt3dadd( 42.2994, -143.846, -49.4748, 0.22 ) }
    dend_61 { pt3dadd( 42.6023, -144.693, -49.78, 0.96 ) }
    dend_61 { pt3dadd( 42.8331, -145.271, -50.0364, 1.18 ) }
    dend_61 { pt3dadd( 43.0703, -145.818, -50.3817, 1.47 ) }
    dend_61 { pt3dadd( 43.529, -146.902, -51.1894, 0.59 ) }
    dend_61 { pt3dadd( 43.8862, -147.792, -51.9435, 1.77 ) }
    dend_61 { pt3dadd( 44.1495, -148.546, -52.6201, 2.43 ) }
    dend_61 { pt3dadd( 44.4092, -149.397, -53.3796, 2.43 ) }
    dend_61 { pt3dadd( 44.9617, -151.512, -55.3021, 0.52 ) }
    dend_61 { pt3dadd( 45.2404, -152.798, -56.4605, 0.29 ) }
    dend_61 { pt3dadd( 45.3938, -153.697, -57.2605, 1.55 ) }
    dend_61 { pt3dadd( 45.4021, -153.757, -57.3127, 1.55 ) }
    dend_61 { pt3dadd( 45.4852, -154.447, -57.8961, 1.84 ) }
    dend_61 { pt3dadd( 45.6868, -156.355, -59.5204, 0.52 ) }
    dend_61 { pt3dadd( 45.8071, -157.243, -60.2754, 0.96 ) }
    dend_61 { pt3dadd( 46.0821, -158.708, -61.5657, 0.52 ) }
    dend_61 { pt3dadd( 46.3141, -159.673, -62.4209, 1.18 ) }
    dend_61 { pt3dadd( 46.3456, -159.786, -62.523, 1.18 ) }
    dend_61 { pt3dadd( 46.9453, -161.645, -64.2901, 0.29 ) }
    dend_61 { pt3dadd( 47.3005, -162.529, -65.1407, 0.22 ) }
    dend_61 { pt3dadd( 47.5353, -163.042, -65.6471, 1.55 ) }
    dend_61 { pt3dadd( 48.0244, -164.092, -66.7808, 1.55 ) }
    dend_61 { pt3dadd( 48.0412, -164.128, -66.8256, 1.55 ) }
    dend_61 { pt3dadd( 48.5866, -165.315, -68.3857, 1.99 ) }
    dend_61 { pt3dadd( 48.866, -165.9, -69.195, 2.21 ) }
    dend_61 { pt3dadd( 48.8988, -165.966, -69.2898, 2.21 ) }
    dend_61 { pt3dadd( 49.5918, -167.259, -71.169, 2.58 ) }
    dend_61 { pt3dadd( 50.6995, -169.23, -73.9268, 0.22 ) }
    dend_61 { pt3dadd( 50.9241, -169.613, -74.4251, 0.22 ) }
    dend_61 { pt3dadd( 51.289, -170.227, -75.157, 1.11 ) }
    dend_61 { pt3dadd( 51.4226, -170.467, -75.405, 1.11 ) }
    dend_61 { pt3dadd( 52.1187, -171.781, -76.555, 0.37 ) }
    dend_61 { pt3dadd( 52.6564, -172.865, -77.3161, 2.06 ) }
    dend_61 { pt3dadd( 52.8501, -173.374, -77.6029, 2.5 ) }
    dend_61 { pt3dadd( 53.4964, -175.495, -78.7072, 0.22 ) }
    dend_61 { pt3dadd( 53.8626, -177.16, -79.4636, 0.22 ) }
    dend_61 { pt3dadd( 53.9665, -177.913, -79.761, 1.55 ) }
    dend_61 { pt3dadd( 53.9929, -178.382, -79.9074, 1.55 ) }
    dend_61 { pt3dadd( 53.9584, -180.065, -80.2811, 0.22 ) }
    dend_61 { pt3dadd( 53.954, -180.126, -80.29, 0.22 ) }
    dend_61 { pt3dadd( 53.821, -181.259, -80.3423, 0.22 ) }
    dend_61 { pt3dadd( 53.6905, -182.188, -80.3656, 1.11 ) }
    dend_61 { pt3dadd( 53.622, -182.703, -80.367, 1.4 ) }
    dend_61 { pt3dadd( 53.4685, -184.247, -80.3507, 0.22 ) }
    dend_61 { pt3dadd( 53.42, -185.147, -80.2957, 0.88 ) }
    dend_61 { pt3dadd( 53.3971, -185.956, -80.219, 0.88 ) }
    dend_61 { pt3dadd( 53.4011, -187.098, -80.0707, 0.22 ) }
    dend_61 { pt3dadd( 53.4058, -187.393, -80.0188, 0.22 ) }
    dend_61 { pt3dadd( 53.4131, -188.475, -79.8118, 0.22 ) }
    dend_61 { pt3dadd( 53.3452, -190.087, -79.4367, 0.22 ) }
    dend_61 { pt3dadd( 53.34, -190.154, -79.4188, 0.22 ) }
    dend_61 { pt3dadd( 53.2036, -191.359, -79.0963, 0.22 ) }
    dend_61 { pt3dadd( 53.0379, -192.645, -78.768, 2.21 ) }
    dend_61 { pt3dadd( 52.9306, -193.361, -78.5991, 2.36 ) }
    dend_61 { pt3dadd( 52.5811, -195.369, -78.1639, 0.15 ) }
    dend_61 { pt3dadd( 52.3121, -196.781, -77.9031, 0.15 ) }
    dend_61 { pt3dadd( 52.0432, -198.156, -77.6852, 0.15 ) }
    dend_61 { pt3dadd( 51.8326, -199.219, -77.5532, 0.52 ) }
    dend_61 { pt3dadd( 51.7221, -199.801, -77.5079, 0.74 ) }
    dend_61 { pt3dadd( 51.6951, -199.938, -77.5004, 0.74 ) }
    dend_61 { pt3dadd( 51.6359, -200.232, -77.4958, 0.74 ) }
    dend_61 { pt3dadd( 51.2749, -201.783, -77.46, 0.29 ) }
    dend_61 { pt3dadd( 51.0062, -202.852, -77.4286, 0.22 ) }
    dend_61 { pt3dadd( 50.7875, -203.561, -77.3917, 0.81 ) }
    dend_61 { pt3dadd( 50.3031, -204.932, -77.2961, 0.22 ) }
    dend_61 { pt3dadd( 50.2784, -204.997, -77.2904, 0.22 ) }
    dend_61 { pt3dadd( 50.0746, -205.471, -77.2748, 0.22 ) }
    dend_61 { pt3dadd( 50.0431, -205.533, -77.2761, 0.22 ) }
    dend_61 { pt3dadd( 49.5339, -206.456, -77.3347, 1.84 ) }
    dend_61 { pt3dadd( 49.1573, -207.109, -77.3965, 2.28 ) }
    dend_61 { pt3dadd( 48.7908, -207.727, -77.4808, 2.28 ) }
    dend_61 { pt3dadd( 47.7907, -209.421, -77.7345, 0.22 ) }
    dend_61 { pt3dadd( 47.1071, -210.578, -77.9245, 0.22 ) }
    dend_61 { pt3dadd( 46.8171, -211.087, -78.0135, 0.96 ) }
    dend_61 { pt3dadd( 46.415, -211.805, -78.152, 0.96 ) }
    dend_61 { pt3dadd( 45.7108, -213.014, -78.3822, 0.22 ) }
    dend_61 { pt3dadd( 45.3704, -213.576, -78.4806, 0.66 ) }
    dend_61 { pt3dadd( 45.337, -213.637, -78.4899, 0.66 ) }
    dend_61 { pt3dadd( 45.1268, -214.091, -78.5851, 0.66 ) }
    dend_61 { pt3dadd( 44.649, -215.348, -78.8882, 0.22 ) }
    dend_61 { pt3dadd( 44.4381, -216.143, -79.1235, 1.11 ) }
    dend_61 { pt3dadd( 44.3775, -216.518, -79.2453, 1.11 ) }
    dend_61 { pt3dadd( 44.3012, -217.785, -79.6915, 0.22 ) }
    dend_61 { pt3dadd( 44.3417, -218.624, -79.9957, 0.88 ) }
    dend_61 { pt3dadd( 44.4339, -219.229, -80.2232, 1.11 ) }
    dend_61 { pt3dadd( 44.7816, -220.447, -80.6921, 0.22 ) }
    dend_61 { pt3dadd( 44.9618, -220.94, -80.8738, 0.59 ) }
    dend_61 { pt3dadd( 45.4862, -222.068, -81.2722, 0.22 ) }
    dend_61 { pt3dadd( 45.8431, -222.68, -81.4474, 0.22 ) }
    dend_61 { pt3dadd( 45.8818, -222.736, -81.4602, 0.22 ) }
    dend_61 { pt3dadd( 46.2868, -223.271, -81.5585, 1.03 ) }
    dend_61 { pt3dadd( 46.7448, -223.856, -81.6152, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_61 { pt3dadd( 47.9639, -225.499, -81.7698, 0.22 ) }
    dend_61 { pt3dadd( 48.5556, -226.335, -81.8441, 1.4 ) }
    dend_61 { pt3dadd( 48.8439, -226.773, -81.8888, 1.84 ) }
    dend_61 { pt3dadd( 48.9617, -226.958, -81.9059, 1.84 ) }
    dend_61 { pt3dadd( 49.8752, -228.417, -82.0242, 0.22 ) }
    dend_61 { pt3dadd( 50.5868, -229.561, -82.1196, 0.22 ) }
    dend_61 { pt3dadd( 50.6627, -229.686, -82.1297, 0.22 ) }
    dend_61 { pt3dadd( 51.3122, -230.762, -82.2488, 0.22 ) }
    dend_61 { pt3dadd( 51.7297, -231.423, -82.3223, 1.03 ) }
    dend_61 { pt3dadd( 52.016, -231.861, -82.3826, 1.03 ) }
    dend_61 { pt3dadd( 52.8455, -233.072, -82.5348, 0.22 ) }
    dend_61 { pt3dadd( 53.3196, -233.747, -82.5943, 1.03 ) }
    dend_61 { pt3dadd( 53.6647, -234.227, -82.6402, 1.03 ) }
    dend_61 { pt3dadd( 53.7064, -234.283, -82.6462, 1.03 ) }
    dend_61 { pt3dadd( 54.9947, -235.992, -82.8704, 0.15 ) }
    dend_61 { pt3dadd( 55.7025, -236.924, -82.9963, 1.25 ) }
    dend_61 { pt3dadd( 56.1755, -237.548, -83.0799, 1.69 ) }
    dend_61 { pt3dadd( 57.2056, -238.971, -83.2842, 0.22 ) }
    dend_61 { pt3dadd( 57.7284, -239.751, -83.3944, 0.22 ) }
    dend_61 { pt3dadd( 58.2203, -240.555, -83.5057, 1.18 ) }
    dend_61 { pt3dadd( 58.475, -241.012, -83.5677, 1.77 ) }
    dend_61 { pt3dadd( 58.6617, -241.406, -83.6317, 1.84 ) }
    dend_61 { pt3dadd( 59.1822, -242.762, -83.8185, 0.22 ) }
    dend_61 { pt3dadd( 59.4438, -243.626, -83.898, 0.22 ) }
    dend_61 { pt3dadd( 59.6611, -244.415, -83.9451, 0.52 ) }
    dend_61 { pt3dadd( 59.68, -244.481, -83.9466, 0.52 ) }
    dend_61 { pt3dadd( 59.7953, -244.876, -83.9496, 0.52 ) }
    dend_61 { pt3dadd( 60.2308, -246.163, -83.9204, 0.22 ) }
    dend_61 { pt3dadd( 60.4706, -246.729, -83.8644, 1.18 ) }
    dend_61 { pt3dadd( 60.6189, -247.018, -83.8288, 1.4 ) }
    dend_61 { pt3dadd( 60.6508, -247.079, -83.82, 1.4 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 31/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -0.918616, -53.0204, 3.20947, 0.96 ) }
    dend_55 { pt3dadd( -0.794531, -53.2705, 2.3912, 0.96 ) }
    dend_55 { pt3dadd( -0.504853, -54.1423, 0.0757609, 1.4 ) }
    dend_55 { pt3dadd( -0.270586, -55.2133, -2.29995, 1.69 ) }
    dend_55 { pt3dadd( -0.0532905, -57.0545, -6.00044, 0.88 ) }
    dend_55 { pt3dadd( -0.0179718, -57.7771, -7.33095, 0.96 ) }
    dend_55 { pt3dadd( -0.0164542, -58.4462, -8.43314, 0.96 ) }
    dend_55 { pt3dadd( -0.0773425, -58.9735, -9.14813, 1.18 ) }
    dend_55 { pt3dadd( -0.203068, -59.7194, -9.92857, 1.84 ) }
    dend_55 { pt3dadd( -0.427729, -61.2635, -11.2491, 2.14 ) }
    dend_55 { pt3dadd( -0.469324, -61.8177, -11.7146, 2.36 ) }
    dend_55 { pt3dadd( -0.357551, -62.6628, -12.7118, 0.74 ) }
    dend_55 { pt3dadd( -0.0547175, -63.3872, -13.9276, 0.44 ) }
    dend_55 { pt3dadd( 0.181273, -63.7673, -14.8894, 0.66 ) }
    dend_55 { pt3dadd( 0.433879, -64.1928, -16.2038, 1.03 ) }
    dend_55 { pt3dadd( 0.663387, -64.5955, -17.6089, 1.84 ) }
    dend_55 { pt3dadd( 0.808564, -65.1113, -19.3412, 1.84 ) }
    dend_55 { pt3dadd( 0.81171, -65.1265, -19.3991, 1.84 ) }
    dend_55 { pt3dadd( 0.798846, -66.2536, -23.5627, 0.52 ) }
    dend_55 { pt3dadd( 0.649939, -66.7241, -25.0722, 0.52 ) }
    dend_55 { pt3dadd( 0.638785, -66.745, -25.1272, 0.52 ) }
    dend_55 { pt3dadd( 0.147213, -67.6098, -26.8164, 0.52 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 53/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -0.918616, -53.0204, 3.20947, 0.52 ) }
    dend_52 { pt3dadd( -0.829253, -54.4101, 2.82065, 0.52 ) }
    dend_52 { pt3dadd( -0.867836, -55.2745, 2.57742, 0.52 ) }
    dend_52 { pt3dadd( -1.02843, -56.1158, 2.35382, 1.03 ) }
    dend_52 { pt3dadd( -1.34529, -56.9689, 2.10519, 0.37 ) }
    dend_52 { pt3dadd( -1.77173, -57.8549, 1.84962, 0.88 ) }
    dend_52 { pt3dadd( -2.09224, -58.4338, 1.68809, 1.11 ) }
    dend_52 { pt3dadd( -2.38816, -58.848, 1.5625, 1.33 ) }
    dend_52 { pt3dadd( -3.02157, -59.5915, 1.33838, 0.88 ) }
    dend_52 { pt3dadd( -4.05146, -60.6806, 1.02065, 0.59 ) }
    dend_52 { pt3dadd( -4.79412, -61.4146, 0.831118, 0.59 ) }
    dend_52 { pt3dadd( -5.42227, -62.0211, 0.71707, 1.18 ) }
    dend_52 { pt3dadd( -6.21498, -62.7865, 0.660827, 1.47 ) }
    dend_52 { pt3dadd( -6.62171, -63.1721, 0.680577, 1.69 ) }
    dend_52 { pt3dadd( -6.6811, -63.2248, 0.690281, 1.69 ) }
    dend_52 { pt3dadd( -7.4167, -63.7999, 0.900955, 1.33 ) }
    dend_52 { pt3dadd( -8.49307, -64.5184, 1.25304, 0.29 ) }
    dend_52 { pt3dadd( -9.62915, -65.1913, 1.63617, 0.29 ) }
    dend_52 { pt3dadd( -10.3307, -65.5857, 1.86212, 1.47 ) }
    dend_52 { pt3dadd( -11.0935, -66.0109, 2.07156, 1.69 ) }
    dend_52 { pt3dadd( -11.9039, -66.4493, 2.25083, 2.21 ) }
    dend_52 { pt3dadd( -12.6313, -66.8197, 2.36145, 2.06 ) }
    dend_52 { pt3dadd( -13.5498, -67.254, 2.41, 0.96 ) }
    dend_52 { pt3dadd( -14.8277, -67.8375, 2.52877, 0.22 ) }
    dend_52 { pt3dadd( -15.7218, -68.2669, 2.67164, 0.22 ) }
    dend_52 { pt3dadd( -16.2751, -68.5484, 2.79288, 1.11 ) }
    dend_52 { pt3dadd( -16.8755, -68.8524, 2.94683, 1.77 ) }
    dend_52 { pt3dadd( -17.5898, -69.1982, 3.16482, 1.77 ) }
    dend_52 { pt3dadd( -20.0578, -70.3348, 3.98753, 0.29 ) }
    dend_52 { pt3dadd( -20.5137, -70.5395, 4.14258, 0.74 ) }
    dend_52 { pt3dadd( -20.9336, -70.7485, 4.29088, 0.96 ) }
    dend_52 { pt3dadd( -21.755, -71.2032, 4.58127, 0.96 ) }
    dend_52 { pt3dadd( -22.7547, -71.827, 4.90171, 0.88 ) }
    dend_52 { pt3dadd( -23.6558, -72.4475, 5.07718, 0.52 ) }
    dend_52 { pt3dadd( -24.4362, -73.0587, 4.97821, 0.52 ) }
    dend_52 { pt3dadd( -25.5029, -73.9687, 4.6772, 1.4 ) }
    dend_52 { pt3dadd( -25.7644, -74.2049, 4.58594, 1.84 ) }
    dend_52 { pt3dadd( -26.5531, -74.9766, 4.22433, 1.03 ) }
    dend_52 { pt3dadd( -27.5747, -76.0434, 3.59483, 0.52 ) }
    dend_52 { pt3dadd( -29.3398, -77.9361, 2.21871, 2.28 ) }
    dend_52 { pt3dadd( -29.9289, -78.5725, 1.64558, 3.24 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 94/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -51.6536, 16.6144, -80.5531, 0.29 ) }
    dend_40 { pt3dadd( -53.3627, 16.7662, -82.4647, 0.29 ) }
    dend_40 { pt3dadd( -54.4621, 16.9112, -83.6975, 0.29 ) }
    dend_40 { pt3dadd( -55.5833, 17.0706, -84.9109, 0.52 ) }
    dend_40 { pt3dadd( -56.5455, 17.2099, -85.9232, 0.22 ) }
    dend_40 { pt3dadd( -57.1567, 17.3132, -86.54, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_40 { pt3dadd( -57.6425, 17.3951, -87.0165, 1.92 ) }
    dend_40 { pt3dadd( -58.2892, 17.5319, -87.6293, 2.06 ) }
    dend_40 { pt3dadd( -59.9445, 17.8203, -89.1617, 0.29 ) }
    dend_40 { pt3dadd( -60.1025, 17.8318, -89.3143, 0.52 ) }
    dend_40 { pt3dadd( -60.8665, 17.8243, -90.1804, 0.29 ) }
    dend_40 { pt3dadd( -62.0046, 17.744, -91.539, 0.22 ) }
    dend_40 { pt3dadd( -63.4032, 17.5774, -93.3106, 1.62 ) }
    dend_40 { pt3dadd( -63.6964, 17.5296, -93.7026, 2.28 ) }
    dend_40 { pt3dadd( -64.5087, 17.388, -94.8778, 1.77 ) }
    dend_40 { pt3dadd( -66.5121, 17.029, -97.9066, 0.22 ) }
    dend_40 { pt3dadd( -67.0989, 16.9266, -98.8458, 0.22 ) }
    dend_40 { pt3dadd( -67.6048, 16.8697, -99.7503, 1.03 ) }
    dend_40 { pt3dadd( -68.4144, 16.8804, -101.309, 0.59 ) }
    dend_40 { pt3dadd( -68.979, 16.9839, -102.498, 1.47 ) }
    dend_40 { pt3dadd( -69.0034, 16.9935, -102.552, 1.47 ) }
    dend_40 { pt3dadd( -69.2556, 17.1373, -103.122, 1.69 ) }
    dend_40 { pt3dadd( -70.3958, 17.933, -105.928, 0.37 ) }
    dend_40 { pt3dadd( -70.7147, 18.1859, -106.708, 0.52 ) }
    dend_40 { pt3dadd( -71.1973, 18.5949, -107.823, 0.74 ) }
    dend_40 { pt3dadd( -71.6187, 18.9296, -108.729, 0.29 ) }
    dend_40 { pt3dadd( -72.225, 19.3498, -109.846, 1.47 ) }
    dend_40 { pt3dadd( -72.2601, 19.3709, -109.903, 1.47 ) }
    dend_40 { pt3dadd( -72.6533, 19.5886, -110.448, 1.99 ) }
    dend_40 { pt3dadd( -73.8789, 20.2524, -112.257, 0.22 ) }
    dend_40 { pt3dadd( -73.9098, 20.2682, -112.306, 0.22 ) }
    dend_40 { pt3dadd( -74.4117, 20.5207, -113.171, 0.52 ) }
    dend_40 { pt3dadd( -75.2569, 20.8859, -114.698, 0.44 ) }
    dend_40 { pt3dadd( -75.6731, 21.0408, -115.443, 1.33 ) }
    dend_40 { pt3dadd( -76.8915, 21.3766, -117.579, 0.52 ) }
    dend_40 { pt3dadd( -77.9321, 21.5764, -119.306, 0.29 ) }
    dend_40 { pt3dadd( -77.9643, 21.5813, -119.356, 0.29 ) }
    dend_40 { pt3dadd( -78.7154, 21.6917, -120.456, 1.84 ) }
    dend_40 { pt3dadd( -79.0271, 21.7292, -120.858, 2.21 ) }
    dend_40 { pt3dadd( -81.1445, 21.9331, -123.234, 0.22 ) }
    dend_40 { pt3dadd( -81.9694, 21.9799, -123.984, 1.11 ) }
    dend_40 { pt3dadd( -82.3141, 22.006, -124.257, 1.4 ) }
    dend_40 { pt3dadd( -83.3605, 22.0461, -124.967, 0.22 ) }
    dend_40 { pt3dadd( -83.4128, 22.0451, -124.996, 0.22 ) }
    dend_40 { pt3dadd( -84.3534, 21.9503, -125.431, 0.22 ) }
    dend_40 { pt3dadd( -85.2835, 21.7859, -125.738, 1.62 ) }
    dend_40 { pt3dadd( -86.0228, 21.6266, -125.99, 1.77 ) }
    dend_40 { pt3dadd( -87.6871, 21.2241, -126.546, 0.22 ) }
    dend_40 { pt3dadd( -89.1389, 20.8326, -127.013, 0.22 ) }
    dend_40 { pt3dadd( -90.0709, 20.5792, -127.312, 1.4 ) }
    dend_40 { pt3dadd( -90.5484, 20.4476, -127.471, 1.77 ) }
    dend_40 { pt3dadd( -92.8767, 19.8296, -128.237, 0.22 ) }
    dend_40 { pt3dadd( -93.9103, 19.56, -128.655, 0.22 ) }
    dend_40 { pt3dadd( -94.002, 19.5361, -128.703, 0.22 ) }
    dend_40 { pt3dadd( -94.5707, 19.3831, -129.052, 0.22 ) }
    dend_40 { pt3dadd( -95.2152, 19.1823, -129.514, 1.11 ) }
    dend_40 { pt3dadd( -95.4955, 19.0809, -129.733, 1.11 ) }
    dend_40 { pt3dadd( -97.3935, 18.2962, -131.375, 0.22 ) }
    dend_40 { pt3dadd( -98.0306, 18.0395, -131.954, 0.96 ) }
    dend_40 { pt3dadd( -98.2195, 17.9659, -132.118, 1.18 ) }
    dend_40 { pt3dadd( -99.6659, 17.4155, -133.323, 0.22 ) }
    dend_40 { pt3dadd( -100.065, 17.264, -133.632, 0.22 ) }
    dend_40 { pt3dadd( -100.682, 17.0284, -134.151, 1.18 ) }
    dend_40 { pt3dadd( -102.184, 16.4675, -135.403, 0.22 ) }
    dend_40 { pt3dadd( -102.813, 16.247, -135.952, 0.22 ) }
    dend_40 { pt3dadd( -103.584, 15.9731, -136.709, 1.92 ) }
    dend_40 { pt3dadd( -103.905, 15.8526, -137.074, 2.14 ) }
    dend_40 { pt3dadd( -106.354, 14.9183, -140.259, 0.29 ) }
    dend_40 { pt3dadd( -107.205, 14.553, -141.505, 0.22 ) }
    dend_40 { pt3dadd( -107.714, 14.3317, -142.346, 1.11 ) }
    dend_40 { pt3dadd( -109.013, 13.8013, -144.738, 0.74 ) }
    dend_40 { pt3dadd( -109.786, 13.4696, -146.383, 1.69 ) }
    dend_40 { pt3dadd( -111.086, 12.8345, -149.515, 1.18 ) }
    dend_40 { pt3dadd( -111.973, 12.3327, -151.832, 0.66 ) }
    dend_40 { pt3dadd( -112.667, 11.8518, -153.873, 0.88 ) }
    dend_40 { pt3dadd( -113.847, 10.8612, -157.699, 1.69 ) }
    dend_40 { pt3dadd( -114.991, 9.6296, -161.95, 1.55 ) }
    dend_40 { pt3dadd( -115.772, 8.55947, -165.264, 0.29 ) }
    dend_40 { pt3dadd( -116.052, 7.98782, -166.785, 1.33 ) }
    dend_40 { pt3dadd( -116.311, 7.2292, -168.539, 0.22 ) }
    dend_40 { pt3dadd( -116.381, 6.86545, -169.223, 0.59 ) }
    dend_40 { pt3dadd( -116.482, 5.82837, -170.874, 0.22 ) }
    dend_40 { pt3dadd( -116.491, 5.75911, -170.984, 0.22 ) }
    dend_40 { pt3dadd( -116.623, 5.22023, -171.91, 0.22 ) }
    dend_40 { pt3dadd( -117.01, 4.47491, -173.492, 2.06 ) }
    dend_40 { pt3dadd( -118.179, 3.11576, -176.809, 1.11 ) }
    dend_40 { pt3dadd( -118.699, 2.68064, -178.06, 0.81 ) }
    dend_40 { pt3dadd( -119.812, 1.94376, -180.421, 0.44 ) }
    dend_40 { pt3dadd( -120.232, 1.69623, -181.251, 1.03 ) }
    dend_40 { pt3dadd( -122.005, 0.76204, -184.511, 0.22 ) }
    dend_40 { pt3dadd( -122.424, 0.55975, -185.237, 0.88 ) }
    dend_40 { pt3dadd( -124.353, -0.172119, -188.274, 0.22 ) }
    dend_40 { pt3dadd( -124.678, -0.282909, -188.761, 0.96 ) }
    dend_40 { pt3dadd( -125.832, -0.650556, -190.449, 1.47 ) }
    dend_40 { pt3dadd( -126.16, -0.758682, -190.933, 1.55 ) }
    dend_40 { pt3dadd( -126.407, -0.838337, -191.288, 1.55 ) }
    dend_40 { pt3dadd( -129.116, -1.72278, -195.229, 0.22 ) }
    dend_40 { pt3dadd( -129.66, -1.94943, -196.169, 0.52 ) }
    dend_40 { pt3dadd( -130.77, -2.50913, -198.335, 0.52 ) }
    dend_40 { pt3dadd( -131.273, -2.80011, -199.513, 0.52 ) }
    dend_40 { pt3dadd( -131.317, -2.82748, -199.621, 0.52 ) }
    dend_40 { pt3dadd( -131.883, -3.28621, -201.23, 1.03 ) }
    dend_40 { pt3dadd( -132.884, -4.76576, -205.46, 0.59 ) }
    dend_40 { pt3dadd( -133.077, -5.15234, -206.573, 0.88 ) }
    dend_40 { pt3dadd( -133.517, -6.39992, -210.218, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 99/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -51.6536, 16.6144, -80.5531, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_35 { pt3dadd( -53.3356, 18.508, -82.2563, 0.22 ) }
    dend_35 { pt3dadd( -53.8324, 19.0133, -82.7312, 0.81 ) }
    dend_35 { pt3dadd( -54.0621, 19.226, -82.9284, 1.11 ) }
    dend_35 { pt3dadd( -54.723, 19.7955, -83.4189, 0.37 ) }
    dend_35 { pt3dadd( -55.5317, 20.448, -83.9441, 0.22 ) }
    dend_35 { pt3dadd( -55.5882, 20.4926, -83.9789, 0.22 ) }
    dend_35 { pt3dadd( -56.2147, 20.9577, -84.3146, 0.22 ) }
    dend_35 { pt3dadd( -57.1187, 21.5894, -84.7471, 0.22 ) }
    dend_35 { pt3dadd( -57.9119, 22.0904, -85.0822, 1.33 ) }
    dend_35 { pt3dadd( -58.4398, 22.3893, -85.2512, 2.14 ) }
    dend_35 { pt3dadd( -59.4694, 22.9506, -85.5123, 2.5 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 11/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -23.9291, 18.599, -39.9357, 0.22 ) }
    dend_33 { pt3dadd( -25.847, 18.551, -40.3726, 0.22 ) }
    dend_33 { pt3dadd( -26.5208, 18.5023, -40.5391, 0.22 ) }
    dend_33 { pt3dadd( -27.3921, 18.426, -40.7456, 0.22 ) }
    dend_33 { pt3dadd( -28.3665, 18.334, -40.9609, 1.55 ) }
    dend_33 { pt3dadd( -28.9949, 18.2417, -41.0879, 2.28 ) }
    dend_33 { pt3dadd( -29.4418, 18.1599, -41.1702, 2.43 ) }
    dend_33 { pt3dadd( -31.4698, 17.774, -41.4735, 0.22 ) }
    dend_33 { pt3dadd( -32.1787, 17.5744, -41.5737, 1.18 ) }
    dend_33 { pt3dadd( -32.8567, 17.311, -41.6673, 1.25 ) }
    dend_33 { pt3dadd( -34.1746, 16.7009, -41.8375, 0.22 ) }
    dend_33 { pt3dadd( -34.9418, 16.3128, -41.9211, 0.88 ) }
    dend_33 { pt3dadd( -35.3116, 16.1102, -41.9778, 1.11 ) }
    dend_33 { pt3dadd( -36.6545, 15.3244, -42.2194, 0.22 ) }
    dend_33 { pt3dadd( -37.517, 14.8077, -42.406, 1.69 ) }
    dend_33 { pt3dadd( -37.6518, 14.7254, -42.4384, 2.06 ) }
    dend_33 { pt3dadd( -38.23, 14.3773, -42.5875, 2.21 ) }
    dend_33 { pt3dadd( -40.2789, 13.1388, -43.1274, 0.22 ) }
    dend_33 { pt3dadd( -41.1371, 12.6195, -43.3395, 0.22 ) }
    dend_33 { pt3dadd( -41.2046, 12.5794, -43.3551, 0.22 ) }
    dend_33 { pt3dadd( -42.2111, 11.9793, -43.5581, 0.22 ) }
    dend_33 { pt3dadd( -42.5741, 11.7588, -43.6278, 0.52 ) }
    dend_33 { pt3dadd( -42.9917, 11.5051, -43.6855, 0.52 ) }
    dend_33 { pt3dadd( -43.9638, 10.9027, -43.7404, 0.15 ) }
    dend_33 { pt3dadd( -44.7606, 10.4178, -43.7821, 1.62 ) }
    dend_33 { pt3dadd( -45.1592, 10.1844, -43.8005, 1.99 ) }
    dend_33 { pt3dadd( -45.6402, 9.9213, -43.82, 1.92 ) }
    dend_33 { pt3dadd( -46.9951, 9.1644, -43.8625, 0.22 ) }
    dend_33 { pt3dadd( -47.6239, 8.78217, -43.8755, 0.22 ) }
    dend_33 { pt3dadd( -47.9056, 8.5983, -43.8696, 0.74 ) }
    dend_33 { pt3dadd( -48.2564, 8.36531, -43.844, 0.96 ) }
    dend_33 { pt3dadd( -48.6327, 8.12161, -43.8049, 0.74 ) }
    dend_33 { pt3dadd( -49.43, 7.60283, -43.6986, 0.15 ) }
    dend_33 { pt3dadd( -49.9771, 7.23397, -43.6269, 0.15 ) }
    dend_33 { pt3dadd( -50.481, 6.89146, -43.5688, 0.15 ) }
    dend_33 { pt3dadd( -51.4157, 6.29975, -43.4775, 0.15 ) }
    dend_33 { pt3dadd( -51.932, 5.99152, -43.4299, 1.25 ) }
    dend_33 { pt3dadd( -52.441, 5.71163, -43.3858, 1.55 ) }
    dend_33 { pt3dadd( -53.1424, 5.37091, -43.3325, 1.18 ) }
    dend_33 { pt3dadd( -54.0504, 4.93869, -43.2428, 0.22 ) }
    dend_33 { pt3dadd( -54.9042, 4.50374, -43.1513, 0.22 ) }
    dend_33 { pt3dadd( -54.9571, 4.47622, -43.1448, 0.22 ) }
    dend_33 { pt3dadd( -55.9556, 3.97194, -43.0123, 1.69 ) }
    dend_33 { pt3dadd( -56.3939, 3.75689, -42.9522, 2.06 ) }
    dend_33 { pt3dadd( -58.1964, 2.88549, -42.7208, 0.22 ) }
    dend_33 { pt3dadd( -58.7652, 2.60533, -42.6486, 0.52 ) }
    dend_33 { pt3dadd( -59.8969, 2.01347, -42.5237, 0.22 ) }
    dend_33 { pt3dadd( -59.95, 1.98585, -42.519, 0.22 ) }
    dend_33 { pt3dadd( -60.2899, 1.80892, -42.5125, 0.22 ) }
    dend_33 { pt3dadd( -60.9432, 1.50397, -42.5485, 1.03 ) }
    dend_33 { pt3dadd( -60.9992, 1.48414, -42.5569, 1.03 ) }
    dend_33 { pt3dadd( -61.3779, 1.37319, -42.6234, 1.55 ) }
    dend_33 { pt3dadd( -61.7441, 1.2879, -42.6672, 1.77 ) }
    dend_33 { pt3dadd( -63.1304, 1.01571, -42.7797, 0.22 ) }
    dend_33 { pt3dadd( -64.0682, 0.85582, -42.8281, 0.22 ) }
    dend_33 { pt3dadd( -65.1716, 0.67407, -42.8571, 1.18 ) }
    dend_33 { pt3dadd( -66.0563, 0.52181, -42.8877, 1.47 ) }
    dend_33 { pt3dadd( -67.728, 0.23185, -42.9569, 0.22 ) }
    dend_33 { pt3dadd( -68.2348, 0.14328, -42.9761, 0.52 ) }
    dend_33 { pt3dadd( -68.5659, 0.0896899, -42.976, 0.52 ) }
    dend_33 { pt3dadd( -69.868, -0.155526, -42.9551, 0.22 ) }
    dend_33 { pt3dadd( -71.0495, -0.400496, -42.9037, 0.96 ) }
    dend_33 { pt3dadd( -71.633, -0.522572, -42.8684, 1.18 ) }
    dend_33 { pt3dadd( -71.6916, -0.53503, -42.8653, 1.18 ) }
    dend_33 { pt3dadd( -73.1837, -0.869106, -42.7586, 0.15 ) }
    dend_33 { pt3dadd( -73.8023, -1.01574, -42.7032, 0.15 ) }
    dend_33 { pt3dadd( -74.4961, -1.1886, -42.622, 0.96 ) }
    dend_33 { pt3dadd( -75.0703, -1.3195, -42.5437, 1.33 ) }
    dend_33 { pt3dadd( -75.7916, -1.45231, -42.4651, 1.03 ) }
    dend_33 { pt3dadd( -76.8106, -1.60146, -42.3923, 0.22 ) }
    dend_33 { pt3dadd( -77.4651, -1.66318, -42.3843, 0.22 ) }
    dend_33 { pt3dadd( -77.545, -1.66562, -42.3847, 0.22 ) }
    dend_33 { pt3dadd( -78.5412, -1.66315, -42.3894, 0.22 ) }
    dend_33 { pt3dadd( -79.3595, -1.64691, -42.383, 0.44 ) }
    dend_33 { pt3dadd( -79.5095, -1.64569, -42.3821, 0.44 ) }
    dend_33 { pt3dadd( -80.693, -1.6501, -42.3715, 0.22 ) }
    dend_33 { pt3dadd( -81.3573, -1.67441, -42.3792, 1.11 ) }
    dend_33 { pt3dadd( -82.1482, -1.73496, -42.4036, 1.69 ) }
    dend_33 { pt3dadd( -82.675, -1.79898, -42.4351, 1.92 ) }
    dend_33 { pt3dadd( -84.1189, -1.98139, -42.5574, 0.22 ) }
    dend_33 { pt3dadd( -85.066, -2.10641, -42.6745, 0.22 ) }
    dend_33 { pt3dadd( -85.8475, -2.23843, -42.7995, 0.22 ) }
    dend_33 { pt3dadd( -85.9723, -2.26603, -42.8233, 0.22 ) }
    dend_33 { pt3dadd( -86.9648, -2.53846, -43.0765, 1.4 ) }
    dend_33 { pt3dadd( -87.6574, -2.76603, -43.2819, 2.21 ) }
    dend_33 { pt3dadd( -88.5919, -3.13843, -43.5946, 0.96 ) }
    dend_33 { pt3dadd( -89.4476, -3.52457, -43.9137, 0.15 ) }
    dend_33 { pt3dadd( -89.9445, -3.75223, -44.1078, 0.15 ) }
    dend_33 { pt3dadd( -90.6146, -4.07528, -44.3695, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_33 { pt3dadd( -90.9308, -4.2377, -44.4937, 0.81 ) }
    dend_33 { pt3dadd( -91.3019, -4.44045, -44.6339, 1.25 ) }
    dend_33 { pt3dadd( -91.9714, -4.81935, -44.8272, 1.33 ) }
    dend_33 { pt3dadd( -93.4444, -5.6582, -45.1731, 0.22 ) }
    dend_33 { pt3dadd( -94.1569, -6.08774, -45.2912, 1.62 ) }
    dend_33 { pt3dadd( -94.5654, -6.35837, -45.3345, 1.99 ) }
    dend_33 { pt3dadd( -95.2395, -6.8171, -45.4043, 1.92 ) }
    dend_33 { pt3dadd( -96.5147, -7.71062, -45.5444, 0.29 ) }
    dend_33 { pt3dadd( -96.5704, -7.75267, -45.55, 0.29 ) }
    dend_33 { pt3dadd( -97.4607, -8.47623, -45.6436, 0.29 ) }
    dend_33 { pt3dadd( -98.0767, -9.00339, -45.7332, 0.29 ) }
    dend_33 { pt3dadd( -98.9187, -9.76784, -45.8876, 0.29 ) }
    dend_33 { pt3dadd( -99.4469, -10.2619, -46.0052, 0.29 ) }
    dend_33 { pt3dadd( -99.91, -10.7185, -46.1376, 0.66 ) }
    dend_33 { pt3dadd( -100.271, -11.0966, -46.2365, 0.52 ) }
    dend_33 { pt3dadd( -100.857, -11.7674, -46.4061, 0.22 ) }
    dend_33 { pt3dadd( -101.213, -12.2002, -46.5013, 0.81 ) }
    dend_33 { pt3dadd( -101.607, -12.6943, -46.5921, 0.96 ) }
    dend_33 { pt3dadd( -102.522, -13.7759, -46.7834, 0.22 ) }
    dend_33 { pt3dadd( -103.051, -14.3613, -46.9061, 0.22 ) }
    dend_33 { pt3dadd( -103.351, -14.662, -46.9779, 1.18 ) }
    dend_33 { pt3dadd( -103.772, -15.039, -47.0825, 1.4 ) }
    dend_33 { pt3dadd( -104.202, -15.395, -47.1879, 1.4 ) }
    dend_33 { pt3dadd( -104.611, -15.7052, -47.2903, 1.03 ) }
    dend_33 { pt3dadd( -105.639, -16.4174, -47.5268, 0.22 ) }
    dend_33 { pt3dadd( -106.164, -16.7456, -47.6456, 0.22 ) }
    dend_33 { pt3dadd( -106.571, -16.9912, -47.7498, 0.29 ) }
    dend_33 { pt3dadd( -107.11, -17.3203, -47.9323, 0.29 ) }
    dend_33 { pt3dadd( -107.761, -17.742, -48.1889, 0.37 ) }
    dend_33 { pt3dadd( -108.285, -18.0998, -48.4148, 0.37 ) }
    dend_33 { pt3dadd( -108.345, -18.145, -48.4419, 0.37 ) }
    dend_33 { pt3dadd( -109.044, -18.7652, -48.8056, 0.29 ) }
    dend_33 { pt3dadd( -109.728, -19.4534, -49.2396, 1.77 ) }
    dend_33 { pt3dadd( -110.032, -19.7918, -49.4275, 2.36 ) }
    dend_33 { pt3dadd( -110.068, -19.8347, -49.4485, 2.36 ) }
    dend_33 { pt3dadd( -110.353, -20.1768, -49.5957, 2.65 ) }
    dend_33 { pt3dadd( -110.803, -20.7161, -49.7974, 2.58 ) }
    dend_33 { pt3dadd( -112.01, -22.0794, -50.2866, 0.29 ) }
    dend_33 { pt3dadd( -112.802, -22.843, -50.6447, 0.22 ) }
    dend_33 { pt3dadd( -112.852, -22.885, -50.6695, 0.22 ) }
    dend_33 { pt3dadd( -113.376, -23.2618, -50.9173, 0.22 ) }
    dend_33 { pt3dadd( -113.917, -23.586, -51.1703, 0.88 ) }
    dend_33 { pt3dadd( -114.601, -23.9159, -51.4632, 0.59 ) }
    dend_33 { pt3dadd( -115.809, -24.3718, -51.9638, 0.22 ) }
    dend_33 { pt3dadd( -115.87, -24.3914, -51.9925, 0.22 ) }
    dend_33 { pt3dadd( -116.981, -24.7105, -52.4871, 0.22 ) }
    dend_33 { pt3dadd( -117.406, -24.8249, -52.6649, 1.11 ) }
    dend_33 { pt3dadd( -117.977, -24.9834, -52.877, 1.25 ) }
    dend_33 { pt3dadd( -118.492, -25.1484, -53.0422, 0.88 ) }
    dend_33 { pt3dadd( -119.906, -25.6427, -53.4522, 0.22 ) }
    dend_33 { pt3dadd( -120.775, -25.9671, -53.6976, 0.44 ) }
    dend_33 { pt3dadd( -121.775, -26.3592, -53.9784, 0.22 ) }
    dend_33 { pt3dadd( -122.238, -26.5829, -54.0794, 0.74 ) }
    dend_33 { pt3dadd( -123.17, -27.1435, -54.2313, 0.22 ) }
    dend_33 { pt3dadd( -123.958, -27.7196, -54.2969, 1.55 ) }
    dend_33 { pt3dadd( -124.448, -28.1636, -54.2797, 1.92 ) }
    dend_33 { pt3dadd( -124.505, -28.2199, -54.2761, 1.92 ) }
    dend_33 { pt3dadd( -125.713, -29.4305, -54.1453, 0.22 ) }
    dend_33 { pt3dadd( -126.163, -29.8234, -54.0981, 0.66 ) }
    dend_33 { pt3dadd( -126.755, -30.1913, -54.0486, 0.44 ) }
    dend_33 { pt3dadd( -126.828, -30.2233, -54.0458, 0.44 ) }
    dend_33 { pt3dadd( -127.641, -30.4808, -54.0568, 0.22 ) }
    dend_33 { pt3dadd( -127.962, -30.5707, -54.0745, 0.59 ) }
    dend_33 { pt3dadd( -128.832, -30.7693, -54.1542, 0.66 ) }
    dend_33 { pt3dadd( -130.022, -31.0517, -54.2422, 0.22 ) }
    dend_33 { pt3dadd( -130.718, -31.2585, -54.2946, 1.11 ) }
    dend_33 { pt3dadd( -131.162, -31.4265, -54.3358, 1.4 ) }
    dend_33 { pt3dadd( -132.554, -32.09, -54.4828, 0.22 ) }
    dend_33 { pt3dadd( -132.964, -32.3213, -54.5402, 0.74 ) }
    dend_33 { pt3dadd( -133.685, -32.81, -54.6665, 0.74 ) }
    dend_33 { pt3dadd( -134.877, -33.6774, -54.9087, 0.15 ) }
    dend_33 { pt3dadd( -135.6, -34.2206, -55.0712, 1.33 ) }
    dend_33 { pt3dadd( -136.297, -34.753, -55.2418, 1.4 ) }
    dend_33 { pt3dadd( -137.139, -35.448, -55.4813, 0.22 ) }
    dend_33 { pt3dadd( -137.745, -35.9731, -55.6626, 0.22 ) }
    dend_33 { pt3dadd( -138.227, -36.4112, -55.8187, 0.22 ) }
    dend_33 { pt3dadd( -138.324, -36.4936, -55.8485, 0.22 ) }
    dend_33 { pt3dadd( -139.24, -37.1853, -56.1378, 0.66 ) }
    dend_33 { pt3dadd( -139.99, -37.7044, -56.4229, 0.22 ) }
    dend_33 { pt3dadd( -140.542, -38.0649, -56.6491, 0.22 ) }
    dend_33 { pt3dadd( -140.995, -38.343, -56.8499, 0.66 ) }
    dend_33 { pt3dadd( -141.537, -38.6721, -57.0876, 0.74 ) }
    dend_33 { pt3dadd( -142.723, -39.3665, -57.598, 0.22 ) }
    dend_33 { pt3dadd( -143.646, -39.8897, -58.0019, 1.4 ) }
    dend_33 { pt3dadd( -144.167, -40.1644, -58.2224, 1.77 ) }
    dend_33 { pt3dadd( -145.613, -40.9084, -58.8672, 0.15 ) }
    dend_33 { pt3dadd( -146.593, -41.4441, -59.3426, 0.15 ) }
    dend_33 { pt3dadd( -147.312, -41.8486, -59.7282, 1.33 ) }
    dend_33 { pt3dadd( -147.407, -41.9, -59.7804, 1.33 ) }
    dend_33 { pt3dadd( -147.888, -42.156, -60.0522, 1.69 ) }
    dend_33 { pt3dadd( -149.341, -42.9539, -60.9634, 0.22 ) }
    dend_33 { pt3dadd( -150.094, -43.3794, -61.5102, 0.22 ) }
    dend_33 { pt3dadd( -151.143, -43.9985, -62.3102, 0.22 ) }
    dend_33 { pt3dadd( -151.844, -44.4427, -62.8346, 1.77 ) }
    dend_33 { pt3dadd( -151.894, -44.4764, -62.8708, 1.77 ) }
    dend_33 { pt3dadd( -152.453, -44.862, -63.287, 1.55 ) }
    dend_33 { pt3dadd( -154.212, -46.0763, -64.547, 0.22 ) }
    dend_33 { pt3dadd( -154.985, -46.6198, -65.0907, 0.22 ) }
    dend_33 { pt3dadd( -155.53, -47.0453, -65.5337, 1.18 ) }
    dend_33 { pt3dadd( -155.778, -47.2421, -65.7457, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_33 { pt3dadd( -157.417, -48.5166, -67.1657, 0.22 ) }
    dend_33 { pt3dadd( -158.474, -49.3141, -68.1016, 1.47 ) }
    dend_33 { pt3dadd( -158.761, -49.5298, -68.3654, 1.47 ) }
    dend_33 { pt3dadd( -160.433, -50.777, -69.9469, 0.22 ) }
    dend_33 { pt3dadd( -160.909, -51.1353, -70.3938, 0.22 ) }
    dend_33 { pt3dadd( -160.954, -51.1718, -70.4327, 0.22 ) }
    dend_33 { pt3dadd( -161.737, -51.874, -70.978, 1.33 ) }
    dend_33 { pt3dadd( -162.016, -52.1285, -71.1199, 1.4 ) }
    dend_33 { pt3dadd( -162.936, -52.9733, -71.4467, 0.22 ) }
    dend_33 { pt3dadd( -163.152, -53.1775, -71.4886, 0.37 ) }
    dend_33 { pt3dadd( -164.183, -54.1921, -71.6637, 0.22 ) }
    dend_33 { pt3dadd( -165.15, -55.1391, -71.7895, 1.11 ) }
    dend_33 { pt3dadd( -166.188, -56.1555, -71.891, 0.22 ) }
    dend_33 { pt3dadd( -166.495, -56.4425, -71.9248, 1.11 ) }
    dend_33 { pt3dadd( -166.845, -56.7467, -71.966, 1.11 ) }
    dend_33 { pt3dadd( -167.907, -57.6297, -72.1068, 0.22 ) }
    dend_33 { pt3dadd( -169.004, -58.5005, -72.2714, 0.22 ) }
    dend_33 { pt3dadd( -169.601, -58.9377, -72.3695, 0.88 ) }
    dend_33 { pt3dadd( -170.511, -59.5336, -72.5323, 0.22 ) }
    dend_33 { pt3dadd( -170.638, -59.6113, -72.5527, 0.37 ) }
    dend_33 { pt3dadd( -171.164, -59.9246, -72.5669, 0.15 ) }
    dend_33 { pt3dadd( -171.355, -60.0328, -72.5448, 0.29 ) }
    dend_33 { pt3dadd( -172.513, -60.6776, -72.2977, 0.22 ) }
    dend_33 { pt3dadd( -173.052, -60.9802, -72.1513, 0.22 ) }
    dend_33 { pt3dadd( -174.062, -61.5654, -71.8291, 1.25 ) }
    dend_33 { pt3dadd( -175.82, -62.6135, -71.2204, 0.22 ) }
    dend_33 { pt3dadd( -176.522, -63.0486, -70.9463, 1.33 ) }
    dend_33 { pt3dadd( -177.683, -63.7894, -70.439, 0.22 ) }
    dend_33 { pt3dadd( -178.091, -64.0592, -70.2215, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -23.9291, 18.599, -39.9357, 0.22 ) }
    dend_32 { pt3dadd( -24.7461, 20.1112, -39.9553, 0.22 ) }
    dend_32 { pt3dadd( -25.4315, 21.3626, -39.952, 0.22 ) }
    dend_32 { pt3dadd( -25.9844, 22.3651, -39.945, 1.47 ) }
    dend_32 { pt3dadd( -26.2961, 22.9437, -39.9286, 1.77 ) }
    dend_32 { pt3dadd( -26.9747, 24.2591, -39.8735, 0.66 ) }
    dend_32 { pt3dadd( -27.3772, 25.0691, -39.8337, 1.55 ) }
    dend_32 { pt3dadd( -27.6089, 25.5505, -39.8061, 1.92 ) }
    dend_32 { pt3dadd( -27.6336, 25.6051, -39.8024, 1.92 ) }
    dend_32 { pt3dadd( -28.3555, 27.285, -39.6985, 0.15 ) }
    dend_32 { pt3dadd( -28.636, 27.9644, -39.6652, 0.66 ) }
    dend_32 { pt3dadd( -28.7455, 28.2436, -39.6554, 0.66 ) }
    dend_32 { pt3dadd( -29.2445, 29.5352, -39.63, 0.22 ) }
    dend_32 { pt3dadd( -29.6593, 30.57, -39.6179, 0.22 ) }
    dend_32 { pt3dadd( -29.6858, 30.6348, -39.6174, 0.22 ) }
    dend_32 { pt3dadd( -30.2193, 31.8986, -39.6789, 0.22 ) }
    dend_32 { pt3dadd( -30.6983, 33.0512, -39.7693, 1.62 ) }
    dend_32 { pt3dadd( -30.8706, 33.481, -39.8109, 2.06 ) }
    dend_32 { pt3dadd( -31.0599, 33.9697, -39.8659, 1.92 ) }
    dend_32 { pt3dadd( -31.3125, 34.6847, -39.965, 1.25 ) }
    dend_32 { pt3dadd( -31.705, 35.952, -40.1553, 0.22 ) }
    dend_32 { pt3dadd( -31.912, 36.7242, -40.2853, 0.22 ) }
    dend_32 { pt3dadd( -32.1163, 37.6327, -40.4493, 0.59 ) }
    dend_32 { pt3dadd( -32.1908, 38.0376, -40.5169, 0.59 ) }
    dend_32 { pt3dadd( -32.3525, 39.1343, -40.6797, 0.22 ) }
    dend_32 { pt3dadd( -32.4702, 40.0704, -40.7909, 0.22 ) }
    dend_32 { pt3dadd( -32.4796, 40.1497, -40.7962, 0.22 ) }
    dend_32 { pt3dadd( -32.5451, 40.6913, -40.8392, 0.22 ) }
    dend_32 { pt3dadd( -32.675, 41.8595, -40.9382, 1.33 ) }
    dend_32 { pt3dadd( -32.7164, 42.2199, -40.9922, 1.4 ) }
    dend_32 { pt3dadd( -32.7919, 42.8338, -41.1278, 0.66 ) }
    dend_32 { pt3dadd( -32.8727, 43.455, -41.2954, 0.22 ) }
    dend_32 { pt3dadd( -33.0397, 44.6066, -41.636, 1.69 ) }
    dend_32 { pt3dadd( -33.1101, 45.0168, -41.7787, 2.21 ) }
    dend_32 { pt3dadd( -33.363, 46.4194, -42.3195, 0.81 ) }
    dend_32 { pt3dadd( -33.552, 47.4486, -42.7159, 0.22 ) }
    dend_32 { pt3dadd( -33.6728, 48.0928, -42.9588, 0.44 ) }
    dend_32 { pt3dadd( -33.7364, 48.4251, -43.0759, 0.52 ) }
    dend_32 { pt3dadd( -33.9645, 49.5319, -43.4081, 0.22 ) }
    dend_32 { pt3dadd( -34.1254, 50.3074, -43.5918, 0.22 ) }
    dend_32 { pt3dadd( -34.3071, 51.1607, -43.7267, 1.25 ) }
    dend_32 { pt3dadd( -34.4182, 51.6761, -43.7952, 1.55 ) }
    dend_32 { pt3dadd( -34.5232, 52.2517, -43.871, 1.33 ) }
    dend_32 { pt3dadd( -34.749, 53.6528, -44.0408, 0.22 ) }
    dend_32 { pt3dadd( -34.8974, 54.4377, -44.1229, 0.22 ) }
    dend_32 { pt3dadd( -35.1835, 55.7683, -44.2841, 1.62 ) }
    dend_32 { pt3dadd( -35.2694, 56.155, -44.3336, 1.77 ) }
    dend_32 { pt3dadd( -35.7067, 58.1093, -44.5866, 0.22 ) }
    dend_32 { pt3dadd( -35.8682, 58.8311, -44.6777, 0.22 ) }
    dend_32 { pt3dadd( -36.1158, 59.9817, -44.8321, 0.22 ) }
    dend_32 { pt3dadd( -36.397, 61.3765, -45.0305, 0.22 ) }
    dend_32 { pt3dadd( -36.5616, 62.3034, -45.1807, 0.81 ) }
    dend_32 { pt3dadd( -36.6381, 62.8089, -45.2757, 1.11 ) }
    dend_32 { pt3dadd( -36.7277, 63.518, -45.4241, 0.88 ) }
    dend_32 { pt3dadd( -36.8409, 64.6086, -45.7318, 0.29 ) }
    dend_32 { pt3dadd( -36.8723, 65.0253, -45.8695, 0.29 ) }
    dend_32 { pt3dadd( -36.9863, 66.3026, -46.3483, 1.92 ) }
    dend_32 { pt3dadd( -37.0684, 67.1038, -46.6893, 2.43 ) }
    dend_32 { pt3dadd( -37.1218, 67.7013, -46.9589, 2.36 ) }
    dend_32 { pt3dadd( -37.2462, 69.6323, -47.8666, 0.22 ) }
    dend_32 { pt3dadd( -37.2883, 70.375, -48.2125, 0.22 ) }
    dend_32 { pt3dadd( -37.2954, 70.4837, -48.2627, 0.22 ) }
    dend_32 { pt3dadd( -37.3482, 71.2301, -48.5982, 0.74 ) }
    dend_32 { pt3dadd( -37.4102, 71.8539, -48.8648, 0.74 ) }
    dend_32 { pt3dadd( -37.5119, 72.6757, -49.1792, 0.22 ) }
    dend_32 { pt3dadd( -37.6067, 73.3202, -49.3504, 0.37 ) }
    dend_32 { pt3dadd( -37.6938, 73.729, -49.4533, 0.37 ) }
    dend_32 { pt3dadd( -37.7089, 73.7955, -49.4693, 0.37 ) }
    dend_32 { pt3dadd( -37.8191, 74.2334, -49.5999, 0.37 ) }
    dend_32 { pt3dadd( -37.9201, 74.596, -49.733, 0.22 ) }
    dend_32 { pt3dadd( -38.0185, 75.0962, -49.9398, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_32 { pt3dadd( -38.0355, 75.2152, -49.9893, 0.22 ) }
    dend_32 { pt3dadd( -38.1811, 76.2251, -50.384, 1.77 ) }
    dend_32 { pt3dadd( -38.3161, 77.0709, -50.6931, 2.14 ) }
    dend_32 { pt3dadd( -38.3872, 77.4637, -50.8296, 1.92 ) }
    dend_32 { pt3dadd( -38.7709, 79.2874, -51.4282, 0.29 ) }
    dend_32 { pt3dadd( -38.9253, 79.8736, -51.5984, 0.29 ) }
    dend_32 { pt3dadd( -39.1858, 80.6636, -51.7842, 0.22 ) }
    dend_32 { pt3dadd( -39.357, 81.1186, -51.8594, 0.59 ) }
    dend_32 { pt3dadd( -39.4661, 81.4201, -51.8899, 0.74 ) }
    dend_32 { pt3dadd( -39.492, 81.4955, -51.8956, 0.74 ) }
    dend_32 { pt3dadd( -39.7271, 82.1908, -51.9111, 0.37 ) }
    dend_32 { pt3dadd( -39.9977, 83.2145, -51.9484, 0.22 ) }
    dend_32 { pt3dadd( -40.162, 84.0521, -51.9859, 0.22 ) }
    dend_32 { pt3dadd( -40.2652, 84.7077, -52.0645, 0.29 ) }
    dend_32 { pt3dadd( -40.2754, 84.7759, -52.0765, 0.29 ) }
    dend_32 { pt3dadd( -40.3987, 85.4428, -52.2315, 0.29 ) }
    dend_32 { pt3dadd( -40.551, 86.2155, -52.4353, 1.25 ) }
    dend_32 { pt3dadd( -40.7239, 86.9925, -52.6472, 1.62 ) }
    dend_32 { pt3dadd( -40.9864, 87.9848, -52.9118, 1.84 ) }
    dend_32 { pt3dadd( -41.1816, 88.7196, -53.107, 1.55 ) }
    dend_32 { pt3dadd( -41.4826, 89.9164, -53.4196, 0.15 ) }
    dend_32 { pt3dadd( -41.7383, 91.0527, -53.6734, 0.15 ) }
    dend_32 { pt3dadd( -41.8587, 91.6289, -53.7741, 1.11 ) }
    dend_32 { pt3dadd( -41.9282, 91.9796, -53.8158, 1.55 ) }
    dend_32 { pt3dadd( -42.0641, 92.6761, -53.8475, 1.47 ) }
    dend_32 { pt3dadd( -42.0752, 92.7351, -53.8494, 1.47 ) }
    dend_32 { pt3dadd( -42.3077, 93.8449, -53.906, 0.52 ) }
    dend_32 { pt3dadd( -42.4737, 94.4603, -53.9744, 0.22 ) }
    dend_32 { pt3dadd( -42.5921, 94.849, -54.0305, 0.22 ) }
    dend_32 { pt3dadd( -42.7337, 95.2948, -54.1202, 0.59 ) }
    dend_32 { pt3dadd( -42.8885, 95.7374, -54.2361, 0.59 ) }
    dend_32 { pt3dadd( -43.2968, 96.7297, -54.5725, 0.22 ) }
    dend_32 { pt3dadd( -43.8033, 97.7864, -55.0062, 1.18 ) }
    dend_32 { pt3dadd( -43.973, 98.1144, -55.148, 1.55 ) }
    dend_32 { pt3dadd( -44.5026, 99.1395, -55.5877, 0.44 ) }
    dend_32 { pt3dadd( -44.8931, 99.8905, -55.8975, 0.22 ) }
    dend_32 { pt3dadd( -45.3003, 100.682, -56.1883, 0.22 ) }
    dend_32 { pt3dadd( -45.5462, 101.182, -56.3302, 0.22 ) }
    dend_32 { pt3dadd( -45.7239, 101.555, -56.4122, 0.44 ) }
    dend_32 { pt3dadd( -46.0723, 102.353, -56.5608, 0.44 ) }
    dend_32 { pt3dadd( -46.4262, 103.246, -56.6813, 0.22 ) }
    dend_32 { pt3dadd( -46.725, 104.156, -56.7783, 0.22 ) }
    dend_32 { pt3dadd( -47.0567, 105.295, -56.8842, 1.33 ) }
    dend_32 { pt3dadd( -47.231, 105.889, -56.9417, 1.4 ) }
    dend_32 { pt3dadd( -47.3924, 106.432, -56.9941, 0.96 ) }
    dend_32 { pt3dadd( -47.4091, 106.489, -57.0004, 0.96 ) }
    dend_32 { pt3dadd( -47.5753, 107.141, -57.0725, 0.22 ) }
    dend_32 { pt3dadd( -47.8501, 108.279, -57.2074, 0.22 ) }
    dend_32 { pt3dadd( -47.8647, 108.357, -57.2156, 0.22 ) }
    dend_32 { pt3dadd( -47.9477, 108.934, -57.2592, 0.22 ) }
    dend_32 { pt3dadd( -48.0767, 109.926, -57.3122, 0.74 ) }
    dend_32 { pt3dadd( -48.1282, 110.363, -57.3361, 0.96 ) }
    dend_32 { pt3dadd( -48.1763, 110.836, -57.3653, 0.59 ) }
    dend_32 { pt3dadd( -48.2984, 112.22, -57.4536, 0.22 ) }
    dend_32 { pt3dadd( -48.4309, 113.605, -57.5666, 0.22 ) }
    dend_32 { pt3dadd( -48.4497, 113.754, -57.5854, 0.22 ) }
    dend_32 { pt3dadd( -48.5572, 114.412, -57.6973, 0.22 ) }
    dend_32 { pt3dadd( -48.7242, 115.283, -57.8782, 1.62 ) }
    dend_32 { pt3dadd( -48.8196, 115.773, -58.0013, 2.06 ) }
    dend_32 { pt3dadd( -48.9949, 116.569, -58.251, 1.92 ) }
    dend_32 { pt3dadd( -49.3996, 118.377, -58.9151, 0.22 ) }
    dend_32 { pt3dadd( -49.5545, 119.117, -59.2364, 0.29 ) }
    dend_32 { pt3dadd( -49.6454, 119.578, -59.4737, 0.29 ) }
    dend_32 { pt3dadd( -49.7541, 120.097, -59.7985, 0.22 ) }
    dend_32 { pt3dadd( -49.9309, 120.868, -60.3871, 1.18 ) }
    dend_32 { pt3dadd( -50.0979, 121.484, -60.9497, 1.11 ) }
    dend_32 { pt3dadd( -50.4253, 122.482, -61.9887, 0.29 ) }
    dend_32 { pt3dadd( -50.7693, 123.337, -62.9471, 0.29 ) }
    dend_32 { pt3dadd( -51.3225, 124.541, -64.3266, 1.55 ) }
    dend_32 { pt3dadd( -51.6973, 125.271, -65.1734, 1.99 ) }
    dend_32 { pt3dadd( -52.3617, 126.479, -66.5583, 0.22 ) }
    dend_32 { pt3dadd( -52.6231, 126.922, -67.0409, 0.37 ) }
    dend_32 { pt3dadd( -53.0845, 127.676, -67.7957, 0.37 ) }
    dend_32 { pt3dadd( -53.4104, 128.234, -68.2892, 0.22 ) }
    dend_32 { pt3dadd( -53.8871, 129.124, -68.9231, 0.22 ) }
    dend_32 { pt3dadd( -54.1874, 129.766, -69.2878, 1.11 ) }
    dend_32 { pt3dadd( -54.4413, 130.376, -69.5747, 1.25 ) }
    dend_32 { pt3dadd( -54.6204, 130.84, -69.7731, 0.74 ) }
    dend_32 { pt3dadd( -54.9868, 131.788, -70.1291, 0.22 ) }
    dend_32 { pt3dadd( -55.2629, 132.415, -70.3577, 0.22 ) }
    dend_32 { pt3dadd( -55.6339, 133.167, -70.5876, 1.33 ) }
    dend_32 { pt3dadd( -55.8852, 133.659, -70.7264, 1.62 ) }
    dend_32 { pt3dadd( -56.0263, 133.926, -70.795, 1.77 ) }
    dend_32 { pt3dadd( -56.0556, 133.977, -70.8063, 1.77 ) }
    dend_32 { pt3dadd( -56.6197, 134.954, -71.0131, 0.29 ) }
    dend_32 { pt3dadd( -57.0454, 135.682, -71.1728, 0.29 ) }
    dend_32 { pt3dadd( -57.3982, 136.271, -71.2975, 0.66 ) }
    dend_32 { pt3dadd( -57.6581, 136.721, -71.3942, 0.88 ) }
    dend_32 { pt3dadd( -58.3851, 138.001, -71.659, 0.22 ) }
    dend_32 { pt3dadd( -58.7621, 138.65, -71.7833, 1.25 ) }
    dend_32 { pt3dadd( -58.9471, 138.969, -71.8372, 1.25 ) }
    dend_32 { pt3dadd( -59.2527, 139.501, -71.9222, 1.11 ) }
    dend_32 { pt3dadd( -59.8148, 140.477, -72.0924, 0.22 ) }
    dend_32 { pt3dadd( -60.1267, 141.023, -72.2026, 0.44 ) }
    dend_32 { pt3dadd( -60.3768, 141.475, -72.3017, 0.44 ) }
    dend_32 { pt3dadd( -60.7018, 142.066, -72.4777, 0.22 ) }
    dend_32 { pt3dadd( -61.1042, 142.74, -72.7455, 0.22 ) }
    dend_32 { pt3dadd( -61.6529, 143.577, -73.1743, 0.96 ) }
    dend_32 { pt3dadd( -61.9907, 144.042, -73.4779, 1.25 ) }
    dend_32 { pt3dadd( -62.0216, 144.083, -73.5089, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_32 { pt3dadd( -62.5435, 144.866, -74.2197, 0.52 ) }
    dend_32 { pt3dadd( -62.9056, 145.456, -74.7998, 0.22 ) }
    dend_32 { pt3dadd( -62.9492, 145.536, -74.8792, 0.22 ) }
    dend_32 { pt3dadd( -63.1497, 145.958, -75.2658, 1.18 ) }
    dend_32 { pt3dadd( -63.2882, 146.281, -75.531, 1.33 ) }
    dend_32 { pt3dadd( -63.8227, 147.842, -76.651, 0.22 ) }
    dend_32 { pt3dadd( -63.9577, 148.367, -76.9731, 0.29 ) }
    dend_32 { pt3dadd( -63.9686, 148.428, -77.0061, 0.29 ) }
    dend_32 { pt3dadd( -64.0419, 148.954, -77.2636, 0.37 ) }
    dend_32 { pt3dadd( -64.1336, 149.844, -77.6407, 0.22 ) }
    dend_32 { pt3dadd( -64.2179, 150.755, -77.9865, 1.25 ) }
    dend_32 { pt3dadd( -64.2398, 151.031, -78.0725, 1.55 ) }
    dend_32 { pt3dadd( -64.2769, 151.728, -78.2886, 1.03 ) }
    dend_32 { pt3dadd( -64.3355, 152.995, -78.6924, 0.22 ) }
    dend_32 { pt3dadd( -64.3662, 153.695, -78.9106, 0.22 ) }
    dend_32 { pt3dadd( -64.396, 154.271, -79.0802, 0.74 ) }
    dend_32 { pt3dadd( -64.4084, 154.415, -79.1223, 0.74 ) }
    dend_32 { pt3dadd( -64.4573, 154.902, -79.2593, 0.74 ) }
    dend_32 { pt3dadd( -64.5435, 156.079, -79.5989, 0.22 ) }
    dend_32 { pt3dadd( -64.5767, 156.743, -79.7729, 0.22 ) }
    dend_32 { pt3dadd( -64.5782, 156.801, -79.7878, 0.22 ) }
    dend_32 { pt3dadd( -64.5873, 158.04, -80.0832, 0.74 ) }
    dend_32 { pt3dadd( -64.5797, 158.926, -80.279, 1.33 ) }
    dend_32 { pt3dadd( -64.5461, 160.139, -80.5644, 0.22 ) }
    dend_32 { pt3dadd( -64.4949, 161.135, -80.7928, 1.11 ) }
    dend_32 { pt3dadd( -64.4823, 161.35, -80.8433, 1.4 ) }
    dend_32 { pt3dadd( -64.4672, 161.632, -80.9087, 1.62 ) }
    dend_32 { pt3dadd( -64.4322, 162.411, -81.0838, 1.03 ) }
    dend_32 { pt3dadd( -64.404, 163.257, -81.2858, 0.44 ) }
    dend_32 { pt3dadd( -64.401, 163.9, -81.4308, 0.29 ) }
    dend_32 { pt3dadd( -64.3866, 164.689, -81.6172, 0.52 ) }
    dend_32 { pt3dadd( -64.3839, 164.971, -81.6847, 0.88 ) }
    dend_32 { pt3dadd( -64.4166, 165.613, -81.833, 0.52 ) }
    dend_32 { pt3dadd( -64.4732, 166.365, -81.9895, 0.22 ) }
    dend_32 { pt3dadd( -64.5355, 166.939, -82.107, 0.52 ) }
    dend_32 { pt3dadd( -64.592, 167.359, -82.2072, 0.52 ) }
    dend_32 { pt3dadd( -64.6915, 168.01, -82.3688, 0.29 ) }
    dend_32 { pt3dadd( -64.8477, 168.924, -82.6094, 0.29 ) }
    dend_32 { pt3dadd( -64.9907, 169.557, -82.7844, 0.22 ) }
    dend_32 { pt3dadd( -65.2505, 170.48, -83.0309, 1.18 ) }
    dend_32 { pt3dadd( -65.395, 170.952, -83.1583, 1.4 ) }
    dend_32 { pt3dadd( -65.6578, 171.697, -83.3492, 0.81 ) }
    dend_32 { pt3dadd( -66.0001, 172.551, -83.5504, 0.22 ) }
    dend_32 { pt3dadd( -66.3984, 173.464, -83.7511, 1.11 ) }
    dend_32 { pt3dadd( -66.6362, 173.921, -83.8401, 1.11 ) }
    dend_32 { pt3dadd( -66.9619, 174.488, -83.9239, 0.81 ) }
    dend_32 { pt3dadd( -67.4392, 175.279, -84.0536, 0.22 ) }
    dend_32 { pt3dadd( -67.7029, 175.7, -84.1222, 0.22 ) }
    dend_32 { pt3dadd( -67.8449, 175.949, -84.168, 0.44 ) }
    dend_32 { pt3dadd( -67.9172, 176.094, -84.1993, 0.44 ) }
    dend_32 { pt3dadd( -68.0113, 176.299, -84.2481, 0.44 ) }
    dend_32 { pt3dadd( -68.3385, 177.027, -84.4667, 0.22 ) }
    dend_32 { pt3dadd( -68.6664, 177.82, -84.7242, 0.22 ) }
    dend_32 { pt3dadd( -69.1714, 178.956, -85.2494, 0.88 ) }
    dend_32 { pt3dadd( -69.4217, 179.482, -85.5351, 1.4 ) }
    dend_32 { pt3dadd( -69.6465, 179.919, -85.7927, 1.69 ) }
    dend_32 { pt3dadd( -70.0676, 180.626, -86.2472, 1.69 ) }
    dend_32 { pt3dadd( -70.4015, 181.116, -86.5927, 1.33 ) }
    dend_32 { pt3dadd( -71.6365, 182.729, -87.9068, 0.22 ) }
    dend_32 { pt3dadd( -71.6752, 182.771, -87.9461, 0.22 ) }
    dend_32 { pt3dadd( -72.0899, 183.193, -88.3601, 0.29 ) }
    dend_32 { pt3dadd( -72.5973, 183.656, -88.8251, 0.22 ) }
    dend_32 { pt3dadd( -72.6621, 183.712, -88.8747, 0.22 ) }
    dend_32 { pt3dadd( -72.8961, 183.917, -89.0165, 0.22 ) }
    dend_32 { pt3dadd( -73.2705, 184.271, -89.1439, 0.59 ) }
    dend_32 { pt3dadd( -73.3248, 184.322, -89.1726, 0.59 ) }
    dend_32 { pt3dadd( -73.6283, 184.62, -89.3729, 0.88 ) }
    dend_32 { pt3dadd( -74.2002, 185.238, -89.7784, 0.22 ) }
    dend_32 { pt3dadd( -74.7131, 185.773, -90.1257, 1.18 ) }
    dend_32 { pt3dadd( -75.1516, 186.221, -90.4097, 1.18 ) }
    dend_32 { pt3dadd( -76.301, 187.245, -91.0895, 0.22 ) }
    dend_32 { pt3dadd( -76.3509, 187.286, -91.1173, 0.22 ) }
    dend_32 { pt3dadd( -77.0825, 187.833, -91.4944, 0.22 ) }
    dend_32 { pt3dadd( -77.8877, 188.393, -91.8616, 1.33 ) }
    dend_32 { pt3dadd( -78.2058, 188.616, -91.9936, 1.62 ) }
    dend_32 { pt3dadd( -79.6828, 189.702, -92.5038, 0.22 ) }
    dend_32 { pt3dadd( -79.7366, 189.745, -92.5179, 0.22 ) }
    dend_32 { pt3dadd( -80.2133, 190.126, -92.6369, 0.59 ) }
    dend_32 { pt3dadd( -80.6065, 190.467, -92.749, 0.59 ) }
    dend_32 { pt3dadd( -81.4983, 191.368, -93.0234, 0.22 ) }
    dend_32 { pt3dadd( -81.9339, 191.861, -93.1664, 0.22 ) }
    dend_32 { pt3dadd( -82.3468, 192.408, -93.3066, 1.11 ) }
    dend_32 { pt3dadd( -82.8591, 193.107, -93.487, 1.55 ) }
    dend_32 { pt3dadd( -83.5301, 194.077, -93.7494, 0.22 ) }
    dend_32 { pt3dadd( -83.813, 194.512, -93.8646, 0.81 ) }
    dend_32 { pt3dadd( -83.8478, 194.572, -93.8789, 0.81 ) }
    dend_32 { pt3dadd( -84.018, 194.883, -93.9567, 1.11 ) }
    dend_32 { pt3dadd( -84.1589, 195.21, -94.0357, 1.25 ) }
    dend_32 { pt3dadd( -84.4492, 196.294, -94.2721, 0.22 ) }
    dend_32 { pt3dadd( -84.5511, 196.842, -94.3706, 0.52 ) }
    dend_32 { pt3dadd( -84.5797, 197.044, -94.4166, 0.52 ) }
    dend_32 { pt3dadd( -84.5899, 197.122, -94.4352, 0.52 ) }
    dend_32 { pt3dadd( -84.7681, 198.219, -94.7799, 0.22 ) }
    dend_32 { pt3dadd( -84.9476, 199.178, -95.1764, 1.18 ) }
    dend_32 { pt3dadd( -85.0001, 199.43, -95.3095, 1.47 ) }
    dend_32 { pt3dadd( -85.2811, 200.6, -96.0708, 0.22 ) }
    dend_32 { pt3dadd( -85.4317, 201.16, -96.4559, 0.44 ) }
    dend_32 { pt3dadd( -85.8153, 202.395, -97.3643, 0.22 ) }
    dend_32 { pt3dadd( -86.1303, 203.208, -98.0427, 0.44 ) }
    dend_32 { pt3dadd( -86.4654, 204.007, -98.7928, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_32 { pt3dadd( -86.7732, 204.732, -99.5367, 1.03 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 110.56, 171.21, -75.0629, 0.22 ) }
    dend_23 { pt3dadd( 112.618, 171.242, -74.5288, 0.22 ) }
    dend_23 { pt3dadd( 112.872, 171.251, -74.4703, 0.22 ) }
    dend_23 { pt3dadd( 114.176, 171.344, -74.2921, 0.22 ) }
    dend_23 { pt3dadd( 114.281, 171.357, -74.2828, 0.22 ) }
    dend_23 { pt3dadd( 115.209, 171.488, -74.2223, 1.25 ) }
    dend_23 { pt3dadd( 115.618, 171.59, -74.2052, 1.4 ) }
    dend_23 { pt3dadd( 115.693, 171.618, -74.2093, 1.4 ) }
    dend_23 { pt3dadd( 117.099, 172.346, -74.2865, 0.22 ) }
    dend_23 { pt3dadd( 117.608, 172.706, -74.3256, 0.96 ) }
    dend_23 { pt3dadd( 117.69, 172.773, -74.3329, 0.96 ) }
    dend_23 { pt3dadd( 119.041, 174.055, -74.5028, 0.22 ) }
    dend_23 { pt3dadd( 119.311, 174.339, -74.5497, 0.29 ) }
    dend_23 { pt3dadd( 119.726, 174.805, -74.634, 0.22 ) }
    dend_23 { pt3dadd( 120.371, 175.534, -74.753, 0.96 ) }
    dend_23 { pt3dadd( 120.872, 176.046, -74.8377, 1.25 ) }
    dend_23 { pt3dadd( 121.853, 176.969, -74.9928, 0.22 ) }
    dend_23 { pt3dadd( 122.573, 177.594, -75.1001, 0.88 ) }
    dend_23 { pt3dadd( 123.004, 177.941, -75.1541, 0.88 ) }
    dend_23 { pt3dadd( 124.344, 178.93, -75.3137, 0.22 ) }
    dend_23 { pt3dadd( 125.142, 179.465, -75.3976, 1.11 ) }
    dend_23 { pt3dadd( 125.2, 179.503, -75.4052, 1.11 ) }
    dend_23 { pt3dadd( 125.601, 179.781, -75.4699, 1.25 ) }
    dend_23 { pt3dadd( 126.067, 180.139, -75.5661, 1.25 ) }
    dend_23 { pt3dadd( 127.208, 181.139, -75.9736, 0.22 ) }
    dend_23 { pt3dadd( 127.522, 181.449, -76.1276, 0.44 ) }
    dend_23 { pt3dadd( 128.052, 182.014, -76.4256, 0.22 ) }
    dend_23 { pt3dadd( 128.68, 182.717, -76.7999, 1.33 ) }
    dend_23 { pt3dadd( 129.036, 183.128, -77.0219, 1.47 ) }
    dend_23 { pt3dadd( 130.039, 184.353, -77.6912, 0.22 ) }
    dend_23 { pt3dadd( 130.458, 184.883, -77.9605, 0.59 ) }
    dend_23 { pt3dadd( 130.806, 185.309, -78.1549, 0.22 ) }
    dend_23 { pt3dadd( 131.272, 185.831, -78.3655, 0.88 ) }
    dend_23 { pt3dadd( 131.524, 186.089, -78.4495, 0.88 ) }
    dend_23 { pt3dadd( 131.612, 186.169, -78.4647, 0.88 ) }
    dend_23 { pt3dadd( 132.406, 186.857, -78.5123, 0.22 ) }
    dend_23 { pt3dadd( 132.927, 187.294, -78.541, 0.22 ) }
    dend_23 { pt3dadd( 132.981, 187.34, -78.5435, 0.22 ) }
    dend_23 { pt3dadd( 133.599, 187.902, -78.59, 1.47 ) }
    dend_23 { pt3dadd( 135.02, 189.307, -78.7337, 0.22 ) }
    dend_23 { pt3dadd( 135.663, 190.034, -78.8068, 0.74 ) }
    dend_23 { pt3dadd( 135.754, 190.152, -78.8202, 0.74 ) }
    dend_23 { pt3dadd( 135.979, 190.516, -78.8585, 0.74 ) }
    dend_23 { pt3dadd( 136.42, 191.402, -78.9442, 0.22 ) }
    dend_23 { pt3dadd( 136.49, 191.622, -78.9513, 0.37 ) }
    dend_23 { pt3dadd( 136.674, 192.715, -78.9445, 0.22 ) }
    dend_23 { pt3dadd( 136.683, 192.794, -78.9411, 0.22 ) }
    dend_23 { pt3dadd( 136.799, 193.876, -78.8711, 0.22 ) }
    dend_23 { pt3dadd( 136.806, 193.956, -78.8627, 0.22 ) }
    dend_23 { pt3dadd( 136.851, 195.303, -78.6102, 0.81 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 51/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 110.56, 171.21, -75.0629, 0.74 ) }
    dend_22 { pt3dadd( 113.43, 167.889, -78.9906, 0.74 ) }
    dend_22 { pt3dadd( 114.261, 166.924, -79.9402, 0.29 ) }
    dend_22 { pt3dadd( 115.231, 165.798, -80.14, 0.22 ) }
    dend_22 { pt3dadd( 115.767, 165.182, -79.8778, 0.44 ) }
    dend_22 { pt3dadd( 116.44, 164.421, -79.2454, 0.52 ) }
    dend_22 { pt3dadd( 116.543, 164.305, -79.1357, 0.52 ) }
    dend_22 { pt3dadd( 117.365, 163.45, -77.9, 0.22 ) }
    dend_22 { pt3dadd( 117.582, 163.236, -77.5416, 0.59 ) }
    dend_22 { pt3dadd( 117.625, 163.202, -77.4836, 0.59 ) }
    dend_22 { pt3dadd( 118.611, 162.579, -76.3786, 0.22 ) }
    dend_22 { pt3dadd( 118.656, 162.551, -76.3329, 0.22 ) }
    dend_22 { pt3dadd( 119.664, 161.963, -75.4103, 0.22 ) }
    dend_22 { pt3dadd( 119.707, 161.939, -75.3765, 0.22 ) }
    dend_22 { pt3dadd( 120.853, 161.368, -74.4826, 0.74 ) }
    dend_22 { pt3dadd( 121.904, 160.882, -73.7026, 0.88 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 33.8386, 38.8199, -23.9717, 0.22 ) }
    dend_17 { pt3dadd( 34.9501, 40.4428, -23.3935, 0.22 ) }
    dend_17 { pt3dadd( 35.4137, 41.1042, -23.2143, 0.22 ) }
    dend_17 { pt3dadd( 36.1011, 41.9527, -23.0068, 1.18 ) }
    dend_17 { pt3dadd( 36.5219, 42.4099, -22.9048, 1.77 ) }
    dend_17 { pt3dadd( 37.1054, 43.0002, -22.781, 2.06 ) }
    dend_17 { pt3dadd( 37.4406, 43.3236, -22.7174, 2.06 ) }
    dend_17 { pt3dadd( 38.9673, 44.6204, -22.5759, 0.22 ) }
    dend_17 { pt3dadd( 39.7569, 45.236, -22.519, 0.22 ) }
    dend_17 { pt3dadd( 40.4532, 45.7406, -22.4903, 0.52 ) }
    dend_17 { pt3dadd( 40.5891, 45.8427, -22.4871, 0.52 ) }
    dend_17 { pt3dadd( 40.9913, 46.1662, -22.4871, 0.52 ) }
    dend_17 { pt3dadd( 41.0526, 46.2177, -22.4871, 0.52 ) }
    dend_17 { pt3dadd( 41.6827, 46.7641, -22.4871, 0.44 ) }
    dend_17 { pt3dadd( 42.3454, 47.3675, -22.4871, 0.37 ) }
    dend_17 { pt3dadd( 43.3217, 48.1864, -22.4871, 0.22 ) }
    dend_17 { pt3dadd( 43.3856, 48.2346, -22.4871, 0.22 ) }
    dend_17 { pt3dadd( 43.7531, 48.4766, -22.4871, 0.37 ) }
    dend_17 { pt3dadd( 44.0773, 48.6547, -22.478, 0.37 ) }
    dend_17 { pt3dadd( 44.7713, 48.9485, -22.4319, 0.37 ) }
    dend_17 { pt3dadd( 45.3849, 49.1511, -22.3775, 0.22 ) }
    dend_17 { pt3dadd( 45.5902, 49.2028, -22.3642, 0.22 ) }
    dend_17 { pt3dadd( 46.6225, 49.4473, -22.3097, 0.22 ) }
    dend_17 { pt3dadd( 47.9563, 49.7117, -22.251, 2.14 ) }
    dend_17 { pt3dadd( 48.8579, 49.8629, -22.2176, 2.87 ) }
    dend_17 { pt3dadd( 49.3788, 49.9363, -22.2073, 2.73 ) }
    dend_17 { pt3dadd( 51.3978, 50.1357, -22.1959, 0.22 ) }
    dend_17 { pt3dadd( 51.4675, 50.1421, -22.1991, 0.22 ) }
    dend_17 { pt3dadd( 52.2937, 50.2198, -22.2857, 0.22 ) }
    dend_17 { pt3dadd( 52.3621, 50.2284, -22.298, 0.22 ) }
    dend_17 { pt3dadd( 53.2683, 50.4188, -22.5056, 0.44 ) }
    dend_17 { pt3dadd( 53.3215, 50.4388, -22.5247, 0.44 ) }
    dend_17 { pt3dadd( 54.5701, 51.193, -23.1416, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( 54.9005, 51.4156, -23.3048, 0.74 ) }
    dend_17 { pt3dadd( 54.9616, 51.4585, -23.3336, 0.74 ) }
    dend_17 { pt3dadd( 55.4058, 51.7762, -23.5479, 0.74 ) }
    dend_17 { pt3dadd( 56.5649, 52.6279, -24.1273, 0.22 ) }
    dend_17 { pt3dadd( 57.0592, 52.9852, -24.3725, 0.22 ) }
    dend_17 { pt3dadd( 58.3773, 53.9026, -24.999, 1.92 ) }
    dend_17 { pt3dadd( 59.0175, 54.3255, -25.2989, 2.87 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 7/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 33.8386, 38.8199, -23.9717, 0.22 ) }
    dend_16 { pt3dadd( 35.9825, 38.8407, -24.3023, 0.22 ) }
    dend_16 { pt3dadd( 36.7013, 38.8187, -24.4945, 0.66 ) }
    dend_16 { pt3dadd( 37.6854, 38.756, -24.847, 0.22 ) }
    dend_16 { pt3dadd( 38.2509, 38.7027, -25.0658, 0.22 ) }
    dend_16 { pt3dadd( 38.996, 38.5941, -25.4157, 0.22 ) }
    dend_16 { pt3dadd( 39.7452, 38.4472, -25.8099, 0.96 ) }
    dend_16 { pt3dadd( 41.3229, 38.0727, -26.8296, 0.22 ) }
    dend_16 { pt3dadd( 42.2147, 37.8453, -27.5753, 0.81 ) }
    dend_16 { pt3dadd( 42.5365, 37.7766, -27.9054, 0.81 ) }
    dend_16 { pt3dadd( 43.7611, 37.6238, -29.5603, 0.22 ) }
    dend_16 { pt3dadd( 44.4731, 37.5912, -30.7288, 0.22 ) }
    dend_16 { pt3dadd( 45.1709, 37.599, -32.0774, 2.06 ) }
    dend_16 { pt3dadd( 46.3897, 37.6816, -34.7195, 1.18 ) }
    dend_16 { pt3dadd( 47.1832, 37.7925, -36.5175, 1.77 ) }
    dend_16 { pt3dadd( 48.3397, 38.0067, -39.235, 1.77 ) }
    dend_16 { pt3dadd( 48.4136, 38.024, -39.4092, 1.77 ) }
    dend_16 { pt3dadd( 49.9852, 38.4041, -42.9991, 0.22 ) }
    dend_16 { pt3dadd( 51.0917, 38.6355, -45.3348, 0.22 ) }
    dend_16 { pt3dadd( 51.6304, 38.7296, -46.379, 1.47 ) }
    dend_16 { pt3dadd( 51.9287, 38.7588, -46.8926, 1.62 ) }
    dend_16 { pt3dadd( 53.1953, 38.8444, -48.7061, 0.22 ) }
    dend_16 { pt3dadd( 53.5459, 38.8769, -49.1862, 0.74 ) }
    dend_16 { pt3dadd( 53.8774, 38.9419, -49.5751, 0.81 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 31/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 30.9078, 69.4208, -28.3177, 0.22 ) }
    dend_14 { pt3dadd( 31.1628, 70.7114, -28.3417, 0.22 ) }
    dend_14 { pt3dadd( 31.1755, 70.7802, -28.3443, 0.22 ) }
    dend_14 { pt3dadd( 31.3258, 71.6493, -28.382, 0.29 ) }
    dend_14 { pt3dadd( 31.5148, 72.494, -28.461, 0.22 ) }
    dend_14 { pt3dadd( 31.7038, 73.2205, -28.5413, 0.22 ) }
    dend_14 { pt3dadd( 32.0182, 74.3637, -28.6979, 1.25 ) }
    dend_14 { pt3dadd( 32.1166, 74.679, -28.7563, 1.84 ) }
    dend_14 { pt3dadd( 32.4267, 75.6442, -28.9435, 1.18 ) }
    dend_14 { pt3dadd( 32.9048, 77.1314, -29.2391, 0.22 ) }
    dend_14 { pt3dadd( 33.2622, 78.2404, -29.4536, 0.22 ) }
    dend_14 { pt3dadd( 33.5833, 79.0906, -29.6272, 0.74 ) }
    dend_14 { pt3dadd( 33.6103, 79.1539, -29.6402, 0.74 ) }
    dend_14 { pt3dadd( 33.846, 79.6574, -29.7384, 0.74 ) }
    dend_14 { pt3dadd( 34.17, 80.3013, -29.8541, 0.22 ) }
    dend_14 { pt3dadd( 34.4124, 80.7534, -29.9118, 0.37 ) }
    dend_14 { pt3dadd( 35.0974, 81.8351, -30.0973, 0.22 ) }
    dend_14 { pt3dadd( 35.2245, 82.0114, -30.1316, 0.22 ) }
    dend_14 { pt3dadd( 35.8512, 82.8292, -30.3176, 0.22 ) }
    dend_14 { pt3dadd( 35.896, 82.8805, -30.3338, 0.22 ) }
    dend_14 { pt3dadd( 36.5991, 83.584, -30.6493, 0.22 ) }
    dend_14 { pt3dadd( 37.4902, 84.4017, -31.1833, 0.22 ) }
    dend_14 { pt3dadd( 37.8737, 84.7293, -31.4547, 1.25 ) }
    dend_14 { pt3dadd( 37.9269, 84.7722, -31.4964, 1.25 ) }
    dend_14 { pt3dadd( 38.6717, 85.3496, -32.1265, 1.92 ) }
    dend_14 { pt3dadd( 39.3227, 85.8731, -32.6844, 1.69 ) }
    dend_14 { pt3dadd( 40.0276, 86.4907, -33.3281, 1.11 ) }
    dend_14 { pt3dadd( 40.2563, 86.7318, -33.5879, 0.52 ) }
    dend_14 { pt3dadd( 40.7397, 87.403, -34.2955, 0.96 ) }
    dend_14 { pt3dadd( 40.901, 87.6873, -34.5756, 1.25 ) }
    dend_14 { pt3dadd( 41.1215, 88.2019, -35.041, 0.96 ) }
    dend_14 { pt3dadd( 41.7038, 89.8681, -36.4386, 0.29 ) }
    dend_14 { pt3dadd( 42.0988, 91.1782, -37.4758, 0.59 ) }
    dend_14 { pt3dadd( 42.3958, 92.2853, -38.3258, 1.11 ) }
    dend_14 { pt3dadd( 42.4776, 92.6866, -38.6646, 1.4 ) }
    dend_14 { pt3dadd( 42.6813, 94.0374, -39.8628, 0.22 ) }
    dend_14 { pt3dadd( 42.745, 94.7652, -40.6071, 1.47 ) }
    dend_14 { pt3dadd( 42.7446, 94.9676, -40.8297, 1.69 ) }
    dend_14 { pt3dadd( 42.7311, 95.3814, -41.2728, 1.55 ) }
    dend_14 { pt3dadd( 42.5, 97.5297, -43.64, 0.59 ) }
    dend_14 { pt3dadd( 42.4308, 97.8759, -44.0312, 0.44 ) }
    dend_14 { pt3dadd( 42.036, 99.1185, -45.4222, 0.44 ) }
    dend_14 { pt3dadd( 41.6398, 100.015, -46.414, 0.29 ) }
    dend_14 { pt3dadd( 41.1408, 100.965, -47.4275, 0.29 ) }
    dend_14 { pt3dadd( 40.9238, 101.315, -47.7631, 0.22 ) }
    dend_14 { pt3dadd( 40.3812, 102.089, -48.3509, 1.18 ) }
    dend_14 { pt3dadd( 39.9904, 102.586, -48.7133, 1.4 ) }
    dend_14 { pt3dadd( 38.8641, 103.885, -49.5852, 0.15 ) }
    dend_14 { pt3dadd( 38.8202, 103.929, -49.6183, 0.15 ) }
    dend_14 { pt3dadd( 38.3027, 104.415, -50.0432, 0.15 ) }
    dend_14 { pt3dadd( 37.7064, 105.021, -50.5724, 0.15 ) }
    dend_14 { pt3dadd( 36.7811, 106.067, -51.4064, 0.15 ) }
    dend_14 { pt3dadd( 36.2398, 106.739, -51.9171, 1.99 ) }
    dend_14 { pt3dadd( 35.6658, 107.522, -52.4749, 2.28 ) }
    dend_14 { pt3dadd( 34.5701, 109.115, -53.5669, 0.37 ) }
    dend_14 { pt3dadd( 33.9981, 110.028, -54.171, 0.29 ) }
    dend_14 { pt3dadd( 33.5079, 110.919, -54.7158, 0.22 ) }
    dend_14 { pt3dadd( 33.2686, 111.479, -55.0604, 0.22 ) }
    dend_14 { pt3dadd( 33.2518, 111.529, -55.0896, 0.22 ) }
    dend_14 { pt3dadd( 32.938, 112.797, -55.7912, 0.22 ) }
    dend_14 { pt3dadd( 32.7843, 113.729, -56.2846, 1.18 ) }
    dend_14 { pt3dadd( 32.7346, 114.188, -56.539, 1.18 ) }
    dend_14 { pt3dadd( 32.6363, 116.04, -57.6196, 0.29 ) }
    dend_14 { pt3dadd( 32.629, 117.017, -58.2073, 0.29 ) }
    dend_14 { pt3dadd( 32.6486, 117.549, -58.4827, 0.29 ) }
    dend_14 { pt3dadd( 32.7838, 118.771, -58.997, 1.4 ) }
    dend_14 { pt3dadd( 32.8372, 119.103, -59.1129, 1.99 ) }
    dend_14 { pt3dadd( 32.8475, 119.16, -59.1287, 1.99 ) }
    dend_14 { pt3dadd( 32.999, 119.825, -59.2554, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_14 { pt3dadd( 33.5479, 121.876, -59.6305, 0.37 ) }
    dend_14 { pt3dadd( 33.8061, 122.742, -59.794, 0.59 ) }
    dend_14 { pt3dadd( 34.2538, 124.075, -60.0235, 0.29 ) }
    dend_14 { pt3dadd( 34.5435, 124.884, -60.1667, 0.88 ) }
    dend_14 { pt3dadd( 34.5814, 124.982, -60.1867, 0.88 ) }
    dend_14 { pt3dadd( 34.6474, 125.126, -60.2207, 0.88 ) }
    dend_14 { pt3dadd( 35.2115, 126.146, -60.5656, 0.29 ) }
    dend_14 { pt3dadd( 35.7634, 127.051, -60.9002, 0.29 ) }
    dend_14 { pt3dadd( 36.0659, 127.48, -61.082, 0.66 ) }
    dend_14 { pt3dadd( 36.6863, 128.275, -61.4795, 0.22 ) }
    dend_14 { pt3dadd( 37.1908, 128.902, -61.8517, 1.77 ) }
    dend_14 { pt3dadd( 37.2578, 128.986, -61.9063, 1.77 ) }
    dend_14 { pt3dadd( 37.6219, 129.456, -62.2723, 1.69 ) }
    dend_14 { pt3dadd( 38.1489, 130.152, -62.8492, 0.59 ) }
    dend_14 { pt3dadd( 38.358, 130.441, -63.0906, 0.59 ) }
    dend_14 { pt3dadd( 38.848, 131.176, -63.6761, 0.29 ) }
    dend_14 { pt3dadd( 39.1077, 131.607, -63.9918, 0.66 ) }
    dend_14 { pt3dadd( 39.88, 132.973, -64.898, 0.22 ) }
    dend_14 { pt3dadd( 40.4288, 134.019, -65.5557, 0.22 ) }
    dend_14 { pt3dadd( 40.4789, 134.122, -65.617, 0.22 ) }
    dend_14 { pt3dadd( 40.8061, 134.766, -66.0207, 1.18 ) }
    dend_14 { pt3dadd( 41.019, 135.18, -66.2779, 1.18 ) }
    dend_14 { pt3dadd( 41.6458, 136.359, -67.0554, 0.29 ) }
    dend_14 { pt3dadd( 42.1365, 137.277, -67.7047, 1.03 ) }
    dend_14 { pt3dadd( 42.3102, 137.594, -67.9647, 1.62 ) }
    dend_14 { pt3dadd( 43.1046, 139.035, -69.2346, 0.22 ) }
    dend_14 { pt3dadd( 43.2394, 139.288, -69.4683, 0.52 ) }
    dend_14 { pt3dadd( 43.7103, 140.152, -70.3042, 0.22 ) }
    dend_14 { pt3dadd( 44.0966, 140.846, -71.0013, 1.03 ) }
    dend_14 { pt3dadd( 44.543, 141.648, -71.8249, 0.22 ) }
    dend_14 { pt3dadd( 44.8926, 142.299, -72.5311, 1.55 ) }
    dend_14 { pt3dadd( 45.083, 142.742, -73.0207, 1.62 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 32/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 30.9078, 69.4208, -28.3177, 1.33 ) }
    dend_13 { pt3dadd( 31.3587, 69.9751, -28.3925, 1.33 ) }
    dend_13 { pt3dadd( 31.404, 70.0274, -28.4028, 1.33 ) }
    dend_13 { pt3dadd( 31.7587, 70.4163, -28.4836, 1.33 ) }
    dend_13 { pt3dadd( 31.8062, 70.4667, -28.4943, 1.33 ) }
    dend_13 { pt3dadd( 32.4889, 71.116, -28.6449, 0.66 ) }
    dend_13 { pt3dadd( 33.371, 71.9528, -28.8477, 0.22 ) }
    dend_13 { pt3dadd( 33.969, 72.5924, -29.0206, 0.66 ) }
    dend_13 { pt3dadd( 34.2499, 72.9073, -29.1052, 0.88 ) }
    dend_13 { pt3dadd( 34.3024, 72.9657, -29.1208, 0.88 ) }
    dend_13 { pt3dadd( 34.9829, 73.6658, -29.3045, 0.22 ) }
    dend_13 { pt3dadd( 35.4191, 74.0708, -29.3954, 0.22 ) }
    dend_13 { pt3dadd( 36.3182, 74.8287, -29.5059, 0.96 ) }
    dend_13 { pt3dadd( 36.4025, 74.8929, -29.5138, 0.96 ) }
    dend_13 { pt3dadd( 36.7688, 75.1453, -29.5385, 0.96 ) }
    dend_13 { pt3dadd( 37.7583, 75.7368, -29.573, 0.22 ) }
    dend_13 { pt3dadd( 38.3693, 76.0929, -29.5783, 1.11 ) }
    dend_13 { pt3dadd( 38.8585, 76.3559, -29.5767, 1.84 ) }
    dend_13 { pt3dadd( 39.5325, 76.6919, -29.571, 2.28 ) }
    dend_13 { pt3dadd( 39.9656, 76.9251, -29.5651, 1.99 ) }
    dend_13 { pt3dadd( 41.4506, 77.7794, -29.5435, 0.15 ) }
    dend_13 { pt3dadd( 42.1601, 78.198, -29.5422, 0.15 ) }
    dend_13 { pt3dadd( 42.2198, 78.2345, -29.5436, 0.15 ) }
    dend_13 { pt3dadd( 43.311, 78.9419, -29.5727, 0.15 ) }
    dend_13 { pt3dadd( 44.0868, 79.4765, -29.5953, 1.55 ) }
    dend_13 { pt3dadd( 44.6252, 79.8531, -29.6184, 1.84 ) }
    dend_13 { pt3dadd( 46.1696, 80.9397, -29.7111, 0.22 ) }
    dend_13 { pt3dadd( 46.6223, 81.2455, -29.7439, 0.22 ) }
    dend_13 { pt3dadd( 47.2826, 81.6832, -29.8148, 0.96 ) }
    dend_13 { pt3dadd( 47.6752, 81.9472, -29.8706, 1.11 ) }
    dend_13 { pt3dadd( 49.0551, 82.8794, -30.1706, 0.22 ) }
    dend_13 { pt3dadd( 49.6996, 83.3217, -30.3513, 0.52 ) }
    dend_13 { pt3dadd( 50.001, 83.5226, -30.4544, 0.59 ) }
    dend_13 { pt3dadd( 50.9155, 84.0877, -30.812, 0.22 ) }
    dend_13 { pt3dadd( 51.3197, 84.2999, -30.9951, 0.22 ) }
    dend_13 { pt3dadd( 52.3756, 84.77, -31.5188, 0.88 ) }
    dend_13 { pt3dadd( 52.4447, 84.7902, -31.5537, 0.88 ) }
    dend_13 { pt3dadd( 52.8074, 84.8411, -31.7126, 0.88 ) }
    dend_13 { pt3dadd( 52.9198, 84.848, -31.7541, 0.88 ) }
    dend_13 { pt3dadd( 54.1643, 84.8205, -32.1509, 0.29 ) }
    dend_13 { pt3dadd( 54.2513, 84.8076, -32.1963, 0.29 ) }
    dend_13 { pt3dadd( 55.1474, 84.658, -32.7616, 0.29 ) }
    dend_13 { pt3dadd( 56.3019, 84.4795, -33.5826, 1.47 ) }
    dend_13 { pt3dadd( 56.5397, 84.451, -33.7645, 1.92 ) }
    dend_13 { pt3dadd( 57.3801, 84.3703, -34.4466, 1.99 ) }
    dend_13 { pt3dadd( 60.2439, 84.2023, -36.9011, 0.29 ) }
    dend_13 { pt3dadd( 61.0921, 84.1867, -37.6424, 0.22 ) }
    dend_13 { pt3dadd( 61.1433, 84.1884, -37.69, 0.22 ) }
    dend_13 { pt3dadd( 61.6418, 84.2331, -38.1408, 0.22 ) }
    dend_13 { pt3dadd( 61.7029, 84.2427, -38.1916, 0.22 ) }
    dend_13 { pt3dadd( 62.7464, 84.5864, -38.9091, 1.18 ) }
    dend_13 { pt3dadd( 63.0934, 84.7832, -39.0499, 1.33 ) }
    dend_13 { pt3dadd( 63.6039, 85.0728, -39.245, 1.18 ) }
    dend_13 { pt3dadd( 64.6309, 85.6667, -39.6516, 0.22 ) }
    dend_13 { pt3dadd( 64.6964, 85.7044, -39.6777, 0.22 ) }
    dend_13 { pt3dadd( 65.4097, 86.1411, -39.9514, 0.22 ) }
    dend_13 { pt3dadd( 65.4658, 86.1784, -39.9704, 0.22 ) }
    dend_13 { pt3dadd( 66.0626, 86.5242, -40.1197, 0.44 ) }
    dend_13 { pt3dadd( 66.1273, 86.551, -40.1172, 0.44 ) }
    dend_13 { pt3dadd( 66.6876, 86.7427, -40.165, 0.44 ) }
    dend_13 { pt3dadd( 66.7911, 86.7813, -40.1896, 0.44 ) }
    dend_13 { pt3dadd( 67.2552, 86.9697, -40.3593, 0.96 ) }
    dend_13 { pt3dadd( 67.64, 87.1465, -40.6714, 1.33 ) }
    dend_13 { pt3dadd( 68.7662, 87.6955, -41.8186, 0.37 ) }
    dend_13 { pt3dadd( 70.1604, 88.4251, -43.3807, 0.29 ) }
    dend_13 { pt3dadd( 70.817, 88.8028, -44.1773, 1.69 ) }
    dend_13 { pt3dadd( 71.1745, 89.0199, -44.6352, 2.21 ) }
    dend_13 { pt3dadd( 73.4781, 90.5913, -47.8357, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_13 { pt3dadd( 73.5138, 90.6184, -47.8894, 0.22 ) }
    dend_13 { pt3dadd( 73.8409, 90.9032, -48.4235, 0.96 ) }
    dend_13 { pt3dadd( 74.0836, 91.1278, -48.7877, 0.96 ) }
    dend_13 { pt3dadd( 74.9725, 91.9841, -50.0252, 0.29 ) }
    dend_13 { pt3dadd( 75.4932, 92.5129, -50.717, 0.22 ) }
    dend_13 { pt3dadd( 75.568, 92.5907, -50.8062, 0.22 ) }
    dend_13 { pt3dadd( 75.9409, 92.8973, -51.2562, 0.22 ) }
    dend_13 { pt3dadd( 75.9838, 92.9225, -51.3055, 0.22 ) }
    dend_13 { pt3dadd( 76.8279, 93.352, -52.3349, 0.96 ) }
    dend_13 { pt3dadd( 77.6894, 93.7574, -53.4046, 0.66 ) }
    dend_13 { pt3dadd( 78.4432, 94.0823, -54.3384, 0.22 ) }
    dend_13 { pt3dadd( 78.9608, 94.2981, -54.9763, 1.33 ) }
    dend_13 { pt3dadd( 79.4297, 94.4821, -55.5487, 1.33 ) }
    dend_13 { pt3dadd( 81.063, 95.1003, -57.4195, 0.15 ) }
    dend_13 { pt3dadd( 81.8064, 95.3476, -58.2222, 0.37 ) }
    dend_13 { pt3dadd( 81.8622, 95.3636, -58.2773, 0.37 ) }
    dend_13 { pt3dadd( 81.9955, 95.4049, -58.4473, 0.37 ) }
    dend_13 { pt3dadd( 82.0828, 95.4376, -58.5731, 0.37 ) }
    dend_13 { pt3dadd( 82.643, 95.6721, -59.4305, 0.59 ) }
    dend_13 { pt3dadd( 83.4171, 95.9791, -60.6106, 0.29 ) }
    dend_13 { pt3dadd( 84.231, 96.3325, -61.8794, 2.28 ) }
    dend_13 { pt3dadd( 86.3383, 97.3137, -65.1401, 0.88 ) }
    dend_13 { pt3dadd( 86.8321, 97.564, -65.9121, 0.66 ) }
    dend_13 { pt3dadd( 87.4886, 97.8778, -66.9223, 0.22 ) }
    dend_13 { pt3dadd( 87.5318, 97.8964, -66.987, 0.22 ) }
    dend_13 { pt3dadd( 88.0782, 98.0762, -67.6857, 1.33 ) }
    dend_13 { pt3dadd( 88.4582, 98.093, -68.0402, 1.69 ) }
    dend_13 { pt3dadd( 88.5185, 98.07, -68.0674, 1.69 ) }
    dend_13 { pt3dadd( 89.9596, 97.2833, -68.6232, 0.22 ) }
    dend_13 { pt3dadd( 90.7012, 96.7788, -68.855, 0.22 ) }
    dend_13 { pt3dadd( 90.9422, 96.5948, -68.9247, 0.59 ) }
    dend_13 { pt3dadd( 91.0996, 96.458, -68.9633, 0.59 ) }
    dend_13 { pt3dadd( 91.1503, 96.4113, -68.9756, 0.59 ) }
    dend_13 { pt3dadd( 91.7573, 95.8532, -69.1011, 0.22 ) }
    dend_13 { pt3dadd( 91.8099, 95.8071, -69.104, 0.22 ) }
    dend_13 { pt3dadd( 92.187, 95.4897, -69.1336, 1.03 ) }
    dend_13 { pt3dadd( 92.4832, 95.2433, -69.161, 1.03 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 37/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.0615, 187.363, 4.36892, 0.29 ) }
    dend_5 { pt3dadd( -9.30483, 188.622, 4.01612, 0.29 ) }
    dend_5 { pt3dadd( -9.37288, 189.839, 3.68366, 0.29 ) }
    dend_5 { pt3dadd( -9.3729, 189.904, 3.66116, 0.29 ) }
    dend_5 { pt3dadd( -9.35139, 190.87, 3.3019, 0.29 ) }
    dend_5 { pt3dadd( -9.35065, 191.09, 3.22055, 0.29 ) }
    dend_5 { pt3dadd( -9.35578, 191.96, 2.89547, 0.52 ) }
    dend_5 { pt3dadd( -9.32041, 192.783, 2.57847, 0.81 ) }
    dend_5 { pt3dadd( -9.28219, 193.891, 2.14229, 0.22 ) }
    dend_5 { pt3dadd( -9.30627, 195.055, 1.6914, 1.69 ) }
    dend_5 { pt3dadd( -9.37494, 195.548, 1.51117, 1.92 ) }
    dend_5 { pt3dadd( -9.39186, 195.611, 1.48878, 1.92 ) }
    dend_5 { pt3dadd( -9.53153, 196.014, 1.35944, 1.92 ) }
    dend_5 { pt3dadd( -10.0235, 197.395, 0.949712, 0.29 ) }
    dend_5 { pt3dadd( -10.0485, 197.469, 0.931949, 0.29 ) }
    dend_5 { pt3dadd( -10.3388, 198.456, 0.706629, 0.22 ) }
    dend_5 { pt3dadd( -10.5298, 199.176, 0.586715, 0.22 ) }
    dend_5 { pt3dadd( -10.8331, 200.333, 0.447133, 0.22 ) }
    dend_5 { pt3dadd( -11.1311, 201.495, 0.351534, 1.55 ) }
    dend_5 { pt3dadd( -11.2327, 201.924, 0.336735, 1.84 ) }
    dend_5 { pt3dadd( -11.7451, 204.12, 0.393845, 0.22 ) }
    dend_5 { pt3dadd( -11.9725, 205.269, 0.490387, 1.25 ) }
    dend_5 { pt3dadd( -12.0628, 205.725, 0.553501, 1.62 ) }
    dend_5 { pt3dadd( -12.1233, 205.947, 0.602489, 1.62 ) }
    dend_5 { pt3dadd( -12.1419, 206.003, 0.618284, 1.62 ) }
    dend_5 { pt3dadd( -12.6172, 207.273, 1.02965, 0.29 ) }
    dend_5 { pt3dadd( -12.9666, 208.135, 1.32432, 0.29 ) }
    dend_5 { pt3dadd( -13.2467, 208.799, 1.46298, 0.29 ) }
    dend_5 { pt3dadd( -13.6332, 209.673, 1.5836, 0.22 ) }
    dend_5 { pt3dadd( -13.9211, 210.279, 1.62901, 0.22 ) }
    dend_5 { pt3dadd( -14.1608, 210.751, 1.61112, 0.59 ) }
    dend_5 { pt3dadd( -14.471, 211.301, 1.53069, 0.29 ) }
    dend_5 { pt3dadd( -15.1428, 212.424, 1.36053, 1.92 ) }
    dend_5 { pt3dadd( -15.4628, 212.992, 1.27442, 2.5 ) }
    dend_5 { pt3dadd( -15.5986, 213.275, 1.23112, 2.36 ) }
    dend_5 { pt3dadd( -16.2943, 214.865, 1.03038, 0.29 ) }
    dend_5 { pt3dadd( -16.4744, 215.253, 0.985963, 0.29 ) }
    dend_5 { pt3dadd( -16.8919, 216.124, 0.905571, 0.29 ) }
    dend_5 { pt3dadd( -17.1476, 216.659, 0.865174, 0.29 ) }
    dend_5 { pt3dadd( -17.5278, 217.464, 0.807961, 0.22 ) }
    dend_5 { pt3dadd( -17.8604, 218.182, 0.76646, 0.22 ) }
    dend_5 { pt3dadd( -18.4496, 219.452, 0.73959, 2.58 ) }
    dend_5 { pt3dadd( -18.594, 219.755, 0.718706, 2.87 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 80/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -9.0615, 187.363, 4.36892, 0.15 ) }
    dend_4 { pt3dadd( -10.6114, 188.771, 4.48955, 0.15 ) }
    dend_4 { pt3dadd( -11.5815, 189.779, 4.42389, 0.15 ) }
    dend_4 { pt3dadd( -11.6335, 189.84, 4.41609, 0.15 ) }
    dend_4 { pt3dadd( -12.5438, 190.896, 4.27955, 0.15 ) }
    dend_4 { pt3dadd( -13.2733, 191.742, 4.17014, 0.15 ) }
    dend_4 { pt3dadd( -13.6427, 192.169, 4.11472, 0.29 ) }
    dend_4 { pt3dadd( -14.3414, 193.137, 3.77156, 0.44 ) }
    dend_4 { pt3dadd( -14.5607, 193.478, 3.62618, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 89/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 0.147213, -67.6098, -26.8164, 0.66 ) }
    dend_57 { pt3dadd( 0.934641, -68.1171, -30.218, 0.66 ) }
    dend_57 { pt3dadd( 2.14139, -68.8009, -34.7584, 1.84 ) }
    dend_57 { pt3dadd( 4.4336, -69.9033, -42.4946, 1.92 ) }
    dend_57 { pt3dadd( 6.06586, -70.5943, -47.5672, 1.92 ) }
    dend_57 { pt3dadd( 7.29788, -71.0617, -51.1313, 0.52 ) }
    dend_57 { pt3dadd( 7.85051, -71.2541, -52.6338, 0.52 ) }
    dend_57 { pt3dadd( 8.69106, -71.4553, -54.5025, 1.84 ) }
    dend_57 { pt3dadd( 10.377, -71.7656, -57.6019, 0.44 ) }
    dend_57 { pt3dadd( 10.7391, -71.8515, -58.2475, 0.66 ) }
    dend_57 { pt3dadd( 11.2062, -72.0117, -59.2133, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_57 { pt3dadd( 11.7553, -72.2783, -60.5275, 1.77 ) }
    dend_57 { pt3dadd( 11.8534, -72.3428, -60.8045, 2.06 ) }
    dend_57 { pt3dadd( 13.1694, -73.4896, -64.9245, 1.77 ) }
    dend_57 { pt3dadd( 14.1201, -74.5122, -68.1778, 2.06 ) }
    dend_57 { pt3dadd( 14.8788, -75.4159, -70.8502, 0.88 ) }
    dend_57 { pt3dadd( 15.4388, -76.1396, -72.8317, 0.22 ) }
    dend_57 { pt3dadd( 16.0005, -76.8872, -74.7251, 1.69 ) }
    dend_57 { pt3dadd( 16.0794, -76.9854, -74.9596, 1.99 ) }
    dend_57 { pt3dadd( 16.933, -77.9907, -76.9862, 0.59 ) }
    dend_57 { pt3dadd( 17.5454, -78.6711, -78.2018, 0.22 ) }
    dend_57 { pt3dadd( 17.9576, -79.1431, -79.0633, 1.69 ) }
    dend_57 { pt3dadd( 18.1315, -79.3568, -79.4999, 1.69 ) }
    dend_57 { pt3dadd( 19.0401, -80.4438, -82.0431, 0.29 ) }
    dend_57 { pt3dadd( 19.3395, -80.7536, -82.9469, 0.22 ) }
    dend_57 { pt3dadd( 20.1265, -81.5477, -85.4388, 1.03 ) }
    dend_57 { pt3dadd( 20.9293, -82.3316, -88.1843, 1.25 ) }
    dend_57 { pt3dadd( 21.6281, -82.9884, -90.7246, 1.62 ) }
    dend_57 { pt3dadd( 22.2034, -83.5158, -92.9967, 1.62 ) }
    dend_57 { pt3dadd( 22.821, -84.0475, -95.7191, 1.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 19/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 0.147213, -67.6098, -26.8164, 1.99 ) }
    dend_56 { pt3dadd( 0.496083, -67.9705, -25.7218, 1.99 ) }
    dend_56 { pt3dadd( 1.15539, -68.6938, -24.2426, 1.77 ) }
    dend_56 { pt3dadd( 2.50558, -70.5767, -21.6611, 0.88 ) }
    dend_56 { pt3dadd( 5.10338, -75.1983, -17.3077, 0.74 ) }
    dend_56 { pt3dadd( 5.26271, -75.5558, -17.0788, 0.74 ) }
    dend_56 { pt3dadd( 5.47261, -76.184, -16.8898, 1.62 ) }
    dend_56 { pt3dadd( 5.61519, -77.1274, -16.8575, 1.62 ) }
    dend_56 { pt3dadd( 5.55301, -78.7312, -17.3464, 0.59 ) }
    dend_56 { pt3dadd( 5.41242, -79.7434, -17.8892, 2.21 ) }
    dend_56 { pt3dadd( 5.27469, -80.6576, -18.5245, 2.5 ) }
    dend_56 { pt3dadd( 4.89601, -82.7503, -20.1307, 0.37 ) }
    dend_56 { pt3dadd( 4.57005, -84.3997, -21.4771, 0.37 ) }
    dend_56 { pt3dadd( 4.34918, -85.5008, -22.4486, 1.92 ) }
    dend_56 { pt3dadd( 4.29619, -85.7702, -22.6967, 2.14 ) }
    dend_56 { pt3dadd( 4.04314, -87.1315, -23.9488, 0.29 ) }
    dend_56 { pt3dadd( 3.80056, -88.574, -25.2919, 0.29 ) }
    dend_56 { pt3dadd( 3.74115, -89.1192, -25.7774, 0.29 ) }
    dend_56 { pt3dadd( 3.73158, -89.4087, -26.0234, 0.29 ) }
    dend_56 { pt3dadd( 3.73873, -90.2065, -26.7098, 1.33 ) }
    dend_56 { pt3dadd( 3.77911, -90.9683, -27.3977, 1.69 ) }
    dend_56 { pt3dadd( 3.96592, -92.4963, -28.7771, 0.44 ) }
    dend_56 { pt3dadd( 4.2155, -93.6967, -29.8351, 0.44 ) }
    dend_56 { pt3dadd( 4.41281, -94.5267, -30.5319, 2.36 ) }
    dend_56 { pt3dadd( 4.51806, -94.967, -30.875, 2.58 ) }
    dend_56 { pt3dadd( 5.01688, -97.176, -32.4564, 0.29 ) }
    dend_56 { pt3dadd( 5.18475, -97.9959, -32.9743, 0.29 ) }
    dend_56 { pt3dadd( 5.40079, -99.1024, -33.5748, 1.99 ) }
    dend_56 { pt3dadd( 5.54645, -99.8841, -33.9517, 2.36 ) }
    dend_56 { pt3dadd( 5.89508, -102.078, -35.0458, 0.29 ) }
    dend_56 { pt3dadd( 5.98543, -102.969, -35.5334, 0.29 ) }
    dend_56 { pt3dadd( 5.99349, -103.803, -36.0328, 0.22 ) }
    dend_56 { pt3dadd( 5.98501, -103.924, -36.121, 0.22 ) }
    dend_56 { pt3dadd( 5.90683, -104.499, -36.6496, 0.22 ) }
    dend_56 { pt3dadd( 5.64144, -105.919, -38.1434, 0.59 ) }
    dend_56 { pt3dadd( 5.30037, -107.265, -39.6653, 1.69 ) }
    dend_56 { pt3dadd( 5.13109, -107.838, -40.3254, 2.21 ) }
    dend_56 { pt3dadd( 4.88074, -108.549, -41.1382, 2.06 ) }
    dend_56 { pt3dadd( 4.24067, -110.266, -42.9836, 0.74 ) }
    dend_56 { pt3dadd( 4.06193, -110.74, -43.4502, 0.88 ) }
    dend_56 { pt3dadd( 3.84363, -111.359, -43.974, 0.88 ) }
    dend_56 { pt3dadd( 3.53641, -112.39, -44.7018, 0.29 ) }
    dend_56 { pt3dadd( 3.30712, -113.244, -45.1958, 1.18 ) }
    dend_56 { pt3dadd( 3.13394, -113.917, -45.4849, 1.47 ) }
    dend_56 { pt3dadd( 2.9422, -114.742, -45.7067, 1.77 ) }
    dend_56 { pt3dadd( 2.91618, -114.856, -45.7311, 1.77 ) }
    dend_56 { pt3dadd( 2.59757, -116.137, -45.9321, 0.29 ) }
    dend_56 { pt3dadd( 2.34656, -117.018, -46.0065, 0.29 ) }
    dend_56 { pt3dadd( 2.09943, -117.798, -46.0446, 1.84 ) }
    dend_56 { pt3dadd( 1.84818, -118.496, -46.0717, 2.65 ) }
    dend_56 { pt3dadd( 1.47145, -119.477, -46.1055, 1.92 ) }
    dend_56 { pt3dadd( 0.974196, -120.746, -46.1568, 0.52 ) }
    dend_56 { pt3dadd( 0.445222, -122.081, -46.2292, 0.22 ) }
    dend_56 { pt3dadd( 0.183768, -122.82, -46.2863, 0.22 ) }
    dend_56 { pt3dadd( 0.162089, -122.897, -46.2944, 0.22 ) }
    dend_56 { pt3dadd( 0.0313242, -123.564, -46.3788, 0.88 ) }
    dend_56 { pt3dadd( -0.0122222, -124.021, -46.4489, 1.25 ) }
    dend_56 { pt3dadd( -0.032026, -124.593, -46.5433, 1.25 ) }
    dend_56 { pt3dadd( -0.042173, -125.472, -46.7022, 0.81 ) }
    dend_56 { pt3dadd( -0.0431948, -126.78, -46.9435, 0.29 ) }
    dend_56 { pt3dadd( -0.0785905, -127.593, -47.1051, 0.29 ) }
    dend_56 { pt3dadd( -0.211444, -128.646, -47.3466, 1.84 ) }
    dend_56 { pt3dadd( -0.330949, -129.275, -47.4986, 1.99 ) }
    dend_56 { pt3dadd( -0.527928, -130.04, -47.6932, 1.77 ) }
    dend_56 { pt3dadd( -0.548907, -130.105, -47.7095, 1.77 ) }
    dend_56 { pt3dadd( -1.10995, -131.615, -48.054, 0.22 ) }
    dend_56 { pt3dadd( -1.50753, -132.65, -48.2951, 0.22 ) }
    dend_56 { pt3dadd( -1.94964, -133.863, -48.564, 0.22 ) }
    dend_56 { pt3dadd( -2.27415, -134.811, -48.7704, 0.88 ) }
    dend_56 { pt3dadd( -2.48255, -135.458, -48.9143, 1.47 ) }
    dend_56 { pt3dadd( -2.68361, -136.161, -49.0607, 1.69 ) }
    dend_56 { pt3dadd( -2.93238, -137.231, -49.2582, 1.77 ) }
    dend_56 { pt3dadd( -3.07654, -137.939, -49.3865, 1.77 ) }
    dend_56 { pt3dadd( -3.09185, -138.007, -49.3994, 1.77 ) }
    dend_56 { pt3dadd( -3.50341, -139.891, -49.7912, 0.22 ) }
    dend_56 { pt3dadd( -3.64225, -140.6, -49.9524, 0.74 ) }
    dend_56 { pt3dadd( -3.72609, -141.089, -50.0666, 0.74 ) }
    dend_56 { pt3dadd( -3.92768, -142.589, -50.4151, 0.22 ) }
    dend_56 { pt3dadd( -3.97545, -143.104, -50.543, 0.59 ) }
    dend_56 { pt3dadd( -4.01218, -144.359, -50.8697, 0.22 ) }
    dend_56 { pt3dadd( -4.01292, -145.169, -51.0771, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_56 { pt3dadd( -4.02055, -145.88, -51.2565, 2.14 ) }
    dend_56 { pt3dadd( -4.01252, -146.68, -51.4452, 2.36 ) }
    dend_56 { pt3dadd( -3.95367, -147.958, -51.7137, 0.81 ) }
    dend_56 { pt3dadd( -3.85025, -149.387, -51.9836, 0.22 ) }
    dend_56 { pt3dadd( -3.72414, -150.787, -52.2042, 0.22 ) }
    dend_56 { pt3dadd( -3.57057, -151.971, -52.3811, 0.22 ) }
    dend_56 { pt3dadd( -3.38239, -153.063, -52.5331, 0.22 ) }
    dend_56 { pt3dadd( -3.19931, -153.919, -52.6358, 0.96 ) }
    dend_56 { pt3dadd( -3.07757, -154.37, -52.6874, 1.33 ) }
    dend_56 { pt3dadd( -2.86274, -155.016, -52.7761, 0.96 ) }
    dend_56 { pt3dadd( -2.30863, -156.38, -53.0107, 0.22 ) }
    dend_56 { pt3dadd( -2.07058, -156.951, -53.1227, 0.74 ) }
    dend_56 { pt3dadd( -1.92162, -157.365, -53.2241, 0.74 ) }
    dend_56 { pt3dadd( -1.57499, -158.495, -53.5226, 0.22 ) }
    dend_56 { pt3dadd( -1.39848, -159.186, -53.7152, 1.11 ) }
    dend_56 { pt3dadd( -1.27993, -159.762, -53.8769, 1.55 ) }
    dend_56 { pt3dadd( -1.19419, -160.391, -54.0741, 1.69 ) }
    dend_56 { pt3dadd( -1.07963, -161.787, -54.6003, 0.22 ) }
    dend_56 { pt3dadd( -1.07156, -162.736, -54.9835, 1.03 ) }
    dend_56 { pt3dadd( -1.11337, -163.249, -55.2319, 1.18 ) }
    dend_56 { pt3dadd( -1.1974, -163.762, -55.5097, 1.47 ) }
    dend_56 { pt3dadd( -1.51082, -165.105, -56.293, 0.22 ) }
    dend_56 { pt3dadd( -1.90692, -166.255, -57.0215, 0.22 ) }
    dend_56 { pt3dadd( -2.26324, -167.062, -57.5654, 0.22 ) }
    dend_56 { pt3dadd( -2.86531, -168.247, -58.3958, 1.55 ) }
    dend_56 { pt3dadd( -3.10186, -168.671, -58.6927, 1.77 ) }
    dend_56 { pt3dadd( -3.34272, -169.063, -58.9576, 1.47 ) }
    dend_56 { pt3dadd( -4.38448, -170.673, -59.9069, 0.22 ) }
    dend_56 { pt3dadd( -4.41409, -170.719, -59.9314, 0.22 ) }
    dend_56 { pt3dadd( -4.68332, -171.158, -60.139, 0.29 ) }
    dend_56 { pt3dadd( -4.72455, -171.221, -60.1659, 0.29 ) }
    dend_56 { pt3dadd( -5.15436, -171.848, -60.4597, 0.29 ) }
    dend_56 { pt3dadd( -5.89068, -172.768, -60.9166, 0.22 ) }
    dend_56 { pt3dadd( -5.9731, -172.857, -60.9613, 0.22 ) }
    dend_56 { pt3dadd( -6.62427, -173.445, -61.2964, 0.52 ) }
    dend_56 { pt3dadd( -7.57016, -174.098, -61.7936, 0.29 ) }
    dend_56 { pt3dadd( -7.63222, -174.139, -61.8234, 0.29 ) }
    dend_56 { pt3dadd( -8.34723, -174.6, -62.0959, 1.18 ) }
    dend_56 { pt3dadd( -8.4115, -174.643, -62.1157, 1.18 ) }
    dend_56 { pt3dadd( -9.10795, -175.182, -62.2918, 1.55 ) }
    dend_56 { pt3dadd( -10.6836, -176.527, -62.6218, 0.22 ) }
    dend_56 { pt3dadd( -11.8924, -177.693, -62.8014, 0.22 ) }
    dend_56 { pt3dadd( -12.8128, -178.68, -62.9174, 1.77 ) }
    dend_56 { pt3dadd( -13.0738, -179.022, -63.0098, 2.21 ) }
    dend_56 { pt3dadd( -13.7906, -180.139, -63.4031, 1.11 ) }
    dend_56 { pt3dadd( -13.8225, -180.197, -63.4281, 1.11 ) }
    dend_56 { pt3dadd( -14.2174, -180.979, -63.833, 1.77 ) }
    dend_56 { pt3dadd( -14.4487, -181.44, -64.11, 2.06 ) }
    dend_56 { pt3dadd( -16.0894, -184.725, -66.2421, 0.22 ) }
    dend_56 { pt3dadd( -16.647, -185.79, -66.9446, 1.03 ) }
    dend_56 { pt3dadd( -17.3034, -187.014, -67.7734, 0.37 ) }
    dend_56 { pt3dadd( -17.8372, -187.966, -68.3984, 0.22 ) }
    dend_56 { pt3dadd( -18.1169, -188.443, -68.7013, 0.37 ) }
    dend_56 { pt3dadd( -18.8801, -189.665, -69.4092, 0.81 ) }
    dend_56 { pt3dadd( -19.8255, -191.147, -70.0384, 0.22 ) }
    dend_56 { pt3dadd( -19.8545, -191.197, -70.058, 0.22 ) }
    dend_56 { pt3dadd( -20.479, -192.376, -70.4423, 0.22 ) }
    dend_56 { pt3dadd( -20.6096, -192.639, -70.5137, 0.52 ) }
    dend_56 { pt3dadd( -20.6379, -192.701, -70.5275, 0.52 ) }
    dend_56 { pt3dadd( -21.0403, -193.717, -70.6672, 0.22 ) }
    dend_56 { pt3dadd( -21.2634, -194.562, -70.7886, 0.22 ) }
    dend_56 { pt3dadd( -21.4296, -195.473, -70.9408, 0.22 ) }
    dend_56 { pt3dadd( -21.5484, -196.475, -71.1264, 1.33 ) }
    dend_56 { pt3dadd( -21.5956, -196.977, -71.2367, 1.55 ) }
    dend_56 { pt3dadd( -21.6266, -197.404, -71.3417, 1.55 ) }
    dend_56 { pt3dadd( -21.7, -199.21, -71.8365, 0.22 ) }
    dend_56 { pt3dadd( -21.7041, -200.335, -72.156, 0.22 ) }
    dend_56 { pt3dadd( -21.7002, -200.404, -72.1738, 0.22 ) }
    dend_56 { pt3dadd( -21.6075, -201.49, -72.4386, 0.88 ) }
    dend_56 { pt3dadd( -21.5875, -201.773, -72.5011, 1.33 ) }
    dend_56 { pt3dadd( -21.5612, -202.348, -72.607, 1.33 ) }
    dend_56 { pt3dadd( -21.5716, -202.856, -72.6492, 1.11 ) }
    dend_56 { pt3dadd( -21.6659, -204.122, -72.7005, 0.22 ) }
    dend_56 { pt3dadd( -21.7407, -204.837, -72.7045, 0.88 ) }
    dend_56 { pt3dadd( -21.8082, -205.357, -72.6904, 1.11 ) }
    dend_56 { pt3dadd( -21.9319, -206.096, -72.6824, 0.81 ) }
    dend_56 { pt3dadd( -22.2044, -207.402, -72.6599, 0.22 ) }
    dend_56 { pt3dadd( -22.519, -208.69, -72.6576, 0.22 ) }
    dend_56 { pt3dadd( -22.7774, -209.553, -72.642, 1.03 ) }
    dend_56 { pt3dadd( -22.9089, -209.971, -72.629, 1.4 ) }
    dend_56 { pt3dadd( -23.3626, -211.396, -72.5889, 0.22 ) }
    dend_56 { pt3dadd( -23.6212, -212.165, -72.5729, 0.96 ) }
    dend_56 { pt3dadd( -23.9074, -212.971, -72.5939, 1.25 ) }
    dend_56 { pt3dadd( -24.4275, -214.4, -72.6509, 0.37 ) }
    dend_56 { pt3dadd( -24.7448, -215.292, -72.7158, 0.22 ) }
    dend_56 { pt3dadd( -24.7639, -215.359, -72.7221, 0.22 ) }
    dend_56 { pt3dadd( -24.9867, -216.43, -72.8371, 0.22 ) }
    dend_56 { pt3dadd( -25.1815, -217.747, -73.0149, 1.4 ) }
    dend_56 { pt3dadd( -25.2465, -218.333, -73.0976, 1.4 ) }
    dend_56 { pt3dadd( -25.3619, -219.723, -73.3303, 0.29 ) }
    dend_56 { pt3dadd( -25.4674, -220.891, -73.5182, 0.29 ) }
    dend_56 { pt3dadd( -25.5214, -221.477, -73.6008, 0.37 ) }
    dend_56 { pt3dadd( -25.6202, -222.438, -73.7384, 0.29 ) }
    dend_56 { pt3dadd( -25.6971, -223.059, -73.8186, 0.29 ) }
    dend_56 { pt3dadd( -25.8681, -223.891, -73.9658, 0.29 ) }
    dend_56 { pt3dadd( -26.0897, -224.626, -74.1347, 1.4 ) }
    dend_56 { pt3dadd( -26.4047, -225.501, -74.3826, 1.4 ) }
    dend_56 { pt3dadd( -26.8773, -226.893, -74.8424, 0.22 ) }
    dend_56 { pt3dadd( -27.0438, -227.464, -75.0503, 0.44 ) }
    dend_56 { pt3dadd( -27.3036, -228.77, -75.5361, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_56 { pt3dadd( -27.3821, -229.46, -75.7887, 0.81 ) }
    dend_56 { pt3dadd( -27.3971, -230.079, -75.9784, 0.81 ) }
    dend_56 { pt3dadd( -27.34, -230.949, -76.2874, 0.74 ) }
    dend_56 { pt3dadd( -27.2546, -231.619, -76.5248, 0.81 ) }
    dend_56 { pt3dadd( -27.0891, -232.753, -76.9442, 0.22 ) }
    dend_56 { pt3dadd( -26.9956, -233.23, -77.1139, 0.88 ) }
    dend_56 { pt3dadd( -26.8223, -234.091, -77.4241, 1.18 ) }
    dend_56 { pt3dadd( -26.4547, -236.206, -78.3828, 0.66 ) }
    dend_56 { pt3dadd( -26.3845, -236.852, -78.7014, 0.44 ) }
    dend_56 { pt3dadd( -26.349, -237.38, -78.9863, 1.4 ) }
    dend_56 { pt3dadd( -26.3399, -237.88, -79.2923, 1.77 ) }
    dend_56 { pt3dadd( -26.3323, -238.542, -79.7216, 1.69 ) }
    dend_56 { pt3dadd( -26.302, -240.622, -81.1228, 0.29 ) }
    dend_56 { pt3dadd( -26.2843, -241.609, -81.7245, 0.29 ) }
    dend_56 { pt3dadd( -26.2703, -242.23, -82.0867, 0.29 ) }
    dend_56 { pt3dadd( -26.2594, -243.829, -82.9842, 1.33 ) }
    dend_56 { pt3dadd( -26.2723, -244.835, -83.5266, 1.92 ) }
    dend_56 { pt3dadd( -26.2861, -245.757, -83.9857, 1.11 ) }
    dend_56 { pt3dadd( -26.2513, -247.007, -84.413, 0.15 ) }
    dend_56 { pt3dadd( -26.1248, -248.369, -84.6737, 0.15 ) }
    dend_56 { pt3dadd( -26.0216, -249.212, -84.7152, 1.25 ) }
    dend_56 { pt3dadd( -25.9495, -249.643, -84.6708, 1.77 ) }
    dend_56 { pt3dadd( -25.8405, -250.216, -84.5568, 2.06 ) }
    dend_56 { pt3dadd( -25.3116, -252.518, -83.9138, 0.22 ) }
    dend_56 { pt3dadd( -24.8977, -253.986, -83.4121, 0.22 ) }
    dend_56 { pt3dadd( -24.8806, -254.04, -83.3903, 0.22 ) }
    dend_56 { pt3dadd( -24.6399, -254.723, -83.0702, 0.88 ) }
    dend_56 { pt3dadd( -24.6184, -254.783, -83.0409, 0.88 ) }
    dend_56 { pt3dadd( -24.4038, -255.391, -82.7295, 1.11 ) }
    dend_56 { pt3dadd( -24.3807, -255.451, -82.7022, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 30/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -29.9289, -78.5725, 1.64558, 0.52 ) }
    dend_54 { pt3dadd( -33.2958, -79.748, -1.17657, 0.52 ) }
    dend_54 { pt3dadd( -34.0953, -80.0168, -1.79323, 0.37 ) }
    dend_54 { pt3dadd( -34.9347, -80.2921, -2.37614, 1.55 ) }
    dend_54 { pt3dadd( -35.4916, -80.4632, -2.70341, 2.06 ) }
    dend_54 { pt3dadd( -36.5982, -80.8162, -3.31623, 1.69 ) }
    dend_54 { pt3dadd( -37.7417, -81.2189, -3.92967, 0.44 ) }
    dend_54 { pt3dadd( -38.2478, -81.4162, -4.12412, 1.4 ) }
    dend_54 { pt3dadd( -38.913, -81.6691, -4.39777, 1.69 ) }
    dend_54 { pt3dadd( -40.962, -82.4963, -5.30547, 0.22 ) }
    dend_54 { pt3dadd( -41.6121, -82.7888, -5.57706, 0.22 ) }
    dend_54 { pt3dadd( -42.1374, -83.0859, -5.84429, 0.22 ) }
    dend_54 { pt3dadd( -42.7728, -83.4799, -6.22571, 0.22 ) }
    dend_54 { pt3dadd( -42.8186, -83.5156, -6.26483, 0.22 ) }
    dend_54 { pt3dadd( -43.5895, -84.2664, -7.10947, 1.69 ) }
    dend_54 { pt3dadd( -43.7521, -84.4546, -7.32096, 1.99 ) }
    dend_54 { pt3dadd( -45.2034, -86.2816, -9.30535, 0.74 ) }
    dend_54 { pt3dadd( -45.8953, -87.2135, -10.2715, 2.28 ) }
    dend_54 { pt3dadd( -47.1531, -89.1036, -12.0997, 0.52 ) }
    dend_54 { pt3dadd( -47.4847, -89.7153, -12.6424, 1.03 ) }
    dend_54 { pt3dadd( -47.6042, -90.0297, -12.8771, 1.03 ) }
    dend_54 { pt3dadd( -47.9008, -91.2695, -13.5992, 0.29 ) }
    dend_54 { pt3dadd( -48.1002, -92.5371, -14.2022, 1.77 ) }
    dend_54 { pt3dadd( -48.1372, -92.9392, -14.3769, 2.28 ) }
    dend_54 { pt3dadd( -48.3071, -95.312, -15.2052, 0.22 ) }
    dend_54 { pt3dadd( -48.3807, -97.2642, -15.891, 0.22 ) }
    dend_54 { pt3dadd( -48.3507, -99.3471, -16.6041, 0.74 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 57/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -29.9289, -78.5725, 1.64558, 0.37 ) }
    dend_53 { pt3dadd( -30.2089, -81.6687, 2.28858, 0.37 ) }
    dend_53 { pt3dadd( -30.2479, -82.7352, 2.54626, 0.22 ) }
    dend_53 { pt3dadd( -30.2663, -83.7256, 2.79144, 0.88 ) }
    dend_53 { pt3dadd( -30.2822, -84.2952, 2.93128, 0.88 ) }
    dend_53 { pt3dadd( -30.3409, -86.0954, 3.37013, 0.22 ) }
    dend_53 { pt3dadd( -30.3708, -87.0243, 3.58853, 0.22 ) }
    dend_53 { pt3dadd( -30.3863, -87.8084, 3.85913, 0.66 ) }
    dend_53 { pt3dadd( -30.4074, -88.3179, 3.99945, 0.66 ) }
    dend_53 { pt3dadd( -30.5397, -89.4651, 4.2219, 0.22 ) }
    dend_53 { pt3dadd( -30.5544, -89.533, 4.23072, 0.22 ) }
    dend_53 { pt3dadd( -30.7684, -90.2444, 4.25537, 0.22 ) }
    dend_53 { pt3dadd( -30.9878, -90.835, 4.25526, 0.37 ) }
    dend_53 { pt3dadd( -31.2143, -91.3564, 4.25947, 0.37 ) }
    dend_53 { pt3dadd( -31.6912, -92.3445, 4.27094, 0.22 ) }
    dend_53 { pt3dadd( -31.9563, -92.942, 4.27275, 1.62 ) }
    dend_53 { pt3dadd( -32.2173, -93.6344, 4.26047, 2.28 ) }
    dend_53 { pt3dadd( -32.5075, -94.5271, 4.23251, 1.47 ) }
    dend_53 { pt3dadd( -32.9668, -96.1309, 4.20003, 0.22 ) }
    dend_53 { pt3dadd( -33.2316, -97.1956, 4.19535, 1.55 ) }
    dend_53 { pt3dadd( -33.6143, -98.8776, 4.21938, 0.22 ) }
    dend_53 { pt3dadd( -33.8328, -99.8461, 4.24976, 0.22 ) }
    dend_53 { pt3dadd( -33.9433, -100.348, 4.27435, 0.22 ) }
    dend_53 { pt3dadd( -34.1117, -101.226, 4.33974, 0.22 ) }
    dend_53 { pt3dadd( -34.1851, -101.693, 4.37157, 0.22 ) }
    dend_53 { pt3dadd( -34.3663, -102.787, 4.47346, 1.62 ) }
    dend_53 { pt3dadd( -34.4604, -103.215, 4.52495, 2.06 ) }
    dend_53 { pt3dadd( -34.6403, -103.95, 4.6149, 1.77 ) }
    dend_53 { pt3dadd( -34.9728, -105.397, 4.70769, 0.22 ) }
    dend_53 { pt3dadd( -35.0668, -105.903, 4.72584, 0.59 ) }
    dend_53 { pt3dadd( -35.0779, -105.972, 4.72838, 0.59 ) }
    dend_53 { pt3dadd( -35.1384, -106.479, 4.74992, 0.59 ) }
    dend_53 { pt3dadd( -35.2411, -107.519, 4.80011, 0.29 ) }
    dend_53 { pt3dadd( -35.3213, -108.582, 4.85403, 0.22 ) }
    dend_53 { pt3dadd( -35.4213, -109.882, 4.91734, 0.22 ) }
    dend_53 { pt3dadd( -35.4926, -110.622, 4.9554, 0.59 ) }
    dend_53 { pt3dadd( -35.5567, -111.109, 4.97812, 0.59 ) }
    dend_53 { pt3dadd( -35.5685, -111.178, 4.98108, 0.59 ) }
    dend_53 { pt3dadd( -35.7661, -112.119, 5.01175, 0.22 ) }
    dend_53 { pt3dadd( -35.9916, -112.915, 5.02818, 1.55 ) }
    dend_53 { pt3dadd( -36.2294, -113.561, 5.01335, 1.55 ) }
    dend_53 { pt3dadd( -36.7424, -114.772, 5.07813, 0.29 ) }
    dend_53 { pt3dadd( -37.045, -115.423, 5.15201, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_53 { pt3dadd( -37.2636, -115.877, 5.22583, 0.66 ) }
    dend_53 { pt3dadd( -37.4919, -116.33, 5.32361, 1.03 ) }
    dend_53 { pt3dadd( -37.678, -116.694, 5.4266, 1.03 ) }
    dend_53 { pt3dadd( -38.5559, -118.347, 6.05, 0.22 ) }
    dend_53 { pt3dadd( -38.7436, -118.679, 6.19974, 0.22 ) }
    dend_53 { pt3dadd( -38.9499, -119.039, 6.36764, 0.66 ) }
    dend_53 { pt3dadd( -39.0998, -119.283, 6.48983, 0.66 ) }
    dend_53 { pt3dadd( -39.7243, -120.227, 6.96374, 0.37 ) }
    dend_53 { pt3dadd( -40.1884, -120.9, 7.2821, 1.25 ) }
    dend_53 { pt3dadd( -40.6141, -121.522, 7.5302, 1.55 ) }
    dend_53 { pt3dadd( -40.8851, -121.969, 7.71732, 1.77 ) }
    dend_53 { pt3dadd( -41.5722, -123.326, 8.26236, 0.29 ) }
    dend_53 { pt3dadd( -41.7677, -123.784, 8.43765, 0.96 ) }
    dend_53 { pt3dadd( -41.9496, -124.303, 8.61782, 1.11 ) }
    dend_53 { pt3dadd( -42.151, -125.054, 8.84535, 1.03 ) }
    dend_53 { pt3dadd( -42.4411, -126.483, 9.20219, 0.29 ) }
    dend_53 { pt3dadd( -42.6043, -127.553, 9.38724, 0.29 ) }
    dend_53 { pt3dadd( -42.6132, -127.623, 9.39409, 0.29 ) }
    dend_53 { pt3dadd( -42.7391, -128.229, 9.43486, 1.4 ) }
    dend_53 { pt3dadd( -42.9111, -128.792, 9.46154, 1.62 ) }
    dend_53 { pt3dadd( -43.3827, -130.04, 9.48908, 0.22 ) }
    dend_53 { pt3dadd( -43.9673, -131.286, 9.47915, 2.28 ) }
    dend_53 { pt3dadd( -44.2417, -131.811, 9.48506, 2.58 ) }
    dend_53 { pt3dadd( -44.9193, -133.021, 9.51669, 2.06 ) }
    dend_53 { pt3dadd( -45.6889, -134.3, 9.51334, 0.29 ) }
    dend_53 { pt3dadd( -46.2644, -135.173, 9.48348, 0.81 ) }
    dend_53 { pt3dadd( -46.697, -135.764, 9.44677, 1.25 ) }
    dend_53 { pt3dadd( -47.5118, -136.803, 9.31222, 0.29 ) }
    dend_53 { pt3dadd( -47.9786, -137.43, 9.22202, 0.29 ) }
    dend_53 { pt3dadd( -48.6403, -138.397, 9.06315, 0.74 ) }
    dend_53 { pt3dadd( -48.8852, -138.773, 8.99527, 0.81 ) }
    dend_53 { pt3dadd( -49.337, -139.581, 8.86429, 0.44 ) }
    dend_53 { pt3dadd( -49.6518, -140.298, 8.77797, 0.74 ) }
    dend_53 { pt3dadd( -50.0693, -141.432, 8.6612, 0.29 ) }
    dend_53 { pt3dadd( -50.2663, -142.148, 8.61556, 0.52 ) }
    dend_53 { pt3dadd( -50.4146, -142.867, 8.6023, 0.81 ) }
    dend_53 { pt3dadd( -50.4941, -143.548, 8.58674, 0.96 ) }
    dend_53 { pt3dadd( -50.5841, -144.826, 8.60824, 0.52 ) }
    dend_53 { pt3dadd( -50.6445, -145.467, 8.66722, 1.11 ) }
    dend_53 { pt3dadd( -50.7392, -146.083, 8.76259, 1.11 ) }
    dend_53 { pt3dadd( -50.9714, -146.992, 8.96857, 0.44 ) }
    dend_53 { pt3dadd( -51.5014, -148.492, 9.40886, 3.32 ) }
    dend_53 { pt3dadd( -52.1208, -149.878, 9.91607, 1.62 ) }
    dend_53 { pt3dadd( -52.8194, -151.156, 10.4656, 0.29 ) }
    dend_53 { pt3dadd( -53.5093, -152.195, 10.9146, 0.22 ) }
    dend_53 { pt3dadd( -54.3091, -153.197, 11.3034, 0.22 ) }
    dend_53 { pt3dadd( -54.8439, -153.762, 11.491, 0.22 ) }
    dend_53 { pt3dadd( -55.4145, -154.287, 11.613, 1.77 ) }
    dend_53 { pt3dadd( -56.04, -154.87, 11.6537, 2.06 ) }
    dend_53 { pt3dadd( -56.9629, -155.818, 11.6084, 1.18 ) }
    dend_53 { pt3dadd( -57.7192, -156.714, 11.5148, 0.29 ) }
    dend_53 { pt3dadd( -58.153, -157.35, 11.4425, 0.29 ) }
    dend_53 { pt3dadd( -58.589, -158.081, 11.3522, 0.22 ) }
    dend_53 { pt3dadd( -58.9216, -158.753, 11.2749, 0.88 ) }
    dend_53 { pt3dadd( -59.1323, -159.298, 11.2442, 1.47 ) }
    dend_53 { pt3dadd( -59.3287, -159.964, 11.2586, 1.25 ) }
    dend_53 { pt3dadd( -59.5385, -160.749, 11.2975, 0.88 ) }
    dend_53 { pt3dadd( -59.705, -161.335, 11.3261, 0.59 ) }
    dend_53 { pt3dadd( -60.0214, -162.232, 11.369, 0.37 ) }
    dend_53 { pt3dadd( -60.4066, -163.102, 11.4086, 0.37 ) }
    dend_53 { pt3dadd( -60.794, -163.846, 11.4181, 0.52 ) }
    dend_53 { pt3dadd( -61.1802, -164.501, 11.4065, 0.74 ) }
    dend_53 { pt3dadd( -61.6493, -165.216, 11.3713, 1.62 ) }
    dend_53 { pt3dadd( -62.142, -165.908, 11.2996, 2.06 ) }
    dend_53 { pt3dadd( -62.4535, -166.315, 11.2363, 1.69 ) }
    dend_53 { pt3dadd( -63.2059, -167.283, 11.0436, 0.37 ) }
    dend_53 { pt3dadd( -63.7295, -167.999, 10.9163, 0.29 ) }
    dend_53 { pt3dadd( -64.1724, -168.654, 10.8245, 0.22 ) }
    dend_53 { pt3dadd( -64.5685, -169.257, 10.7617, 1.03 ) }
    dend_53 { pt3dadd( -64.825, -169.639, 10.7278, 1.25 ) }
    dend_53 { pt3dadd( -65.2664, -170.253, 10.6871, 1.11 ) }
    dend_53 { pt3dadd( -66.0967, -171.352, 10.6519, 0.22 ) }
    dend_53 { pt3dadd( -66.8243, -172.301, 10.6368, 0.22 ) }
    dend_53 { pt3dadd( -67.2119, -172.798, 10.6433, 1.03 ) }
    dend_53 { pt3dadd( -67.6214, -173.311, 10.6713, 1.4 ) }
    dend_53 { pt3dadd( -67.997, -173.762, 10.6932, 1.92 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -59.4694, 22.9506, -85.5123, 0.22 ) }
    dend_37 { pt3dadd( -60.5393, 23.2462, -86.0351, 0.22 ) }
    dend_37 { pt3dadd( -61.6452, 23.5431, -86.5448, 0.22 ) }
    dend_37 { pt3dadd( -62.0035, 23.6356, -86.697, 0.74 ) }
    dend_37 { pt3dadd( -62.8968, 23.8837, -87.0535, 1.03 ) }
    dend_37 { pt3dadd( -63.7668, 24.1354, -87.4232, 0.22 ) }
    dend_37 { pt3dadd( -63.8388, 24.1534, -87.453, 0.22 ) }
    dend_37 { pt3dadd( -64.4932, 24.3403, -87.717, 0.22 ) }
    dend_37 { pt3dadd( -65.1888, 24.5159, -87.9804, 0.66 ) }
    dend_37 { pt3dadd( -65.5843, 24.6147, -88.1188, 0.81 ) }
    dend_37 { pt3dadd( -66.8008, 24.9041, -88.4952, 0.22 ) }
    dend_37 { pt3dadd( -67.784, 25.1428, -88.7644, 0.22 ) }
    dend_37 { pt3dadd( -68.5848, 25.3445, -88.974, 0.29 ) }
    dend_37 { pt3dadd( -68.6775, 25.3704, -88.9974, 0.29 ) }
    dend_37 { pt3dadd( -69.276, 25.543, -89.1364, 0.29 ) }
    dend_37 { pt3dadd( -70.2914, 25.8656, -89.3398, 1.4 ) }
    dend_37 { pt3dadd( -70.8059, 26.0596, -89.4183, 2.21 ) }
    dend_37 { pt3dadd( -71.2151, 26.2339, -89.4865, 2.14 ) }
    dend_37 { pt3dadd( -72.5987, 26.752, -89.715, 0.22 ) }
    dend_37 { pt3dadd( -72.6641, 26.7745, -89.7258, 0.22 ) }
    dend_37 { pt3dadd( -73.397, 27.0113, -89.8427, 0.59 ) }
    dend_37 { pt3dadd( -73.7481, 27.1232, -89.8934, 0.59 ) }
    dend_37 { pt3dadd( -74.4944, 27.3465, -89.9989, 0.22 ) }
    dend_37 { pt3dadd( -75.1915, 27.5404, -90.082, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_37 { pt3dadd( -75.2598, 27.555, -90.0872, 0.22 ) }
    dend_37 { pt3dadd( -75.8421, 27.6677, -90.1389, 0.22 ) }
    dend_37 { pt3dadd( -75.9106, 27.6791, -90.1479, 0.22 ) }
    dend_37 { pt3dadd( -76.1692, 27.7288, -90.1873, 0.22 ) }
    dend_37 { pt3dadd( -76.9028, 27.9141, -90.3258, 1.03 ) }
    dend_37 { pt3dadd( -77.2507, 28.0107, -90.4066, 1.47 ) }
    dend_37 { pt3dadd( -77.7471, 28.1368, -90.5342, 1.47 ) }
    dend_37 { pt3dadd( -78.9356, 28.3699, -90.8674, 0.22 ) }
    dend_37 { pt3dadd( -79.0019, 28.3806, -90.8869, 0.22 ) }
    dend_37 { pt3dadd( -79.694, 28.4669, -91.1056, 0.22 ) }
    dend_37 { pt3dadd( -80.0131, 28.4925, -91.2115, 0.22 ) }
    dend_37 { pt3dadd( -80.1079, 28.4972, -91.2429, 0.22 ) }
    dend_37 { pt3dadd( -80.6746, 28.4993, -91.4062, 0.22 ) }
    dend_37 { pt3dadd( -81.3683, 28.4811, -91.6339, 0.22 ) }
    dend_37 { pt3dadd( -81.4242, 28.4799, -91.6556, 0.22 ) }
    dend_37 { pt3dadd( -82.239, 28.4836, -92.0385, 0.22 ) }
    dend_37 { pt3dadd( -82.2921, 28.4845, -92.0664, 0.22 ) }
    dend_37 { pt3dadd( -83.3861, 28.5134, -92.6997, 1.69 ) }
    dend_37 { pt3dadd( -84.1926, 28.5537, -93.2081, 2.28 ) }
    dend_37 { pt3dadd( -84.7507, 28.5841, -93.577, 2.28 ) }
    dend_37 { pt3dadd( -86.4182, 28.6842, -94.693, 0.22 ) }
    dend_37 { pt3dadd( -87.7552, 28.773, -95.6113, 0.22 ) }
    dend_37 { pt3dadd( -88.347, 28.813, -96.0135, 0.88 ) }
    dend_37 { pt3dadd( -89.2726, 28.8797, -96.6464, 0.22 ) }
    dend_37 { pt3dadd( -89.3404, 28.8822, -96.6889, 0.22 ) }
    dend_37 { pt3dadd( -89.7261, 28.8769, -96.9118, 0.88 ) }
    dend_37 { pt3dadd( -89.7864, 28.8694, -96.9465, 0.88 ) }
    dend_37 { pt3dadd( -90.1728, 28.7918, -97.1542, 0.88 ) }
    dend_37 { pt3dadd( -90.2432, 28.7752, -97.1884, 0.88 ) }
    dend_37 { pt3dadd( -91.5175, 28.4715, -97.7526, 0.37 ) }
    dend_37 { pt3dadd( -92.2672, 28.3208, -98.0685, 1.4 ) }
    dend_37 { pt3dadd( -93.8218, 28.0569, -98.682, 0.22 ) }
    dend_37 { pt3dadd( -94.5133, 27.9529, -98.9341, 0.52 ) }
    dend_37 { pt3dadd( -95.2099, 27.8519, -99.1624, 0.22 ) }
    dend_37 { pt3dadd( -95.9282, 27.7555, -99.3672, 1.62 ) }
    dend_37 { pt3dadd( -96.3851, 27.7056, -99.4657, 1.84 ) }
    dend_37 { pt3dadd( -97.0367, 27.6301, -99.5671, 1.25 ) }
    dend_37 { pt3dadd( -98.3283, 27.4481, -99.6865, 0.22 ) }
    dend_37 { pt3dadd( -99.0705, 27.3084, -99.7314, 0.29 ) }
    dend_37 { pt3dadd( -99.1387, 27.2925, -99.7332, 0.29 ) }
    dend_37 { pt3dadd( -99.7105, 27.1478, -99.7486, 0.29 ) }
    dend_37 { pt3dadd( -100.301, 26.9979, -99.7565, 0.22 ) }
    dend_37 { pt3dadd( -100.879, 26.8703, -99.7538, 0.22 ) }
    dend_37 { pt3dadd( -101.74, 26.7195, -99.7308, 0.81 ) }
    dend_37 { pt3dadd( -102.181, 26.6544, -99.7385, 1.03 ) }
    dend_37 { pt3dadd( -103.68, 26.4618, -99.804, 0.22 ) }
    dend_37 { pt3dadd( -104.141, 26.4139, -99.8329, 1.18 ) }
    dend_37 { pt3dadd( -104.808, 26.3856, -99.8849, 1.55 ) }
    dend_37 { pt3dadd( -105.316, 26.3891, -99.9319, 1.92 ) }
    dend_37 { pt3dadd( -107.238, 26.4952, -100.15, 0.22 ) }
    dend_37 { pt3dadd( -108.039, 26.5945, -100.25, 0.66 ) }
    dend_37 { pt3dadd( -108.683, 26.7204, -100.357, 0.81 ) }
    dend_37 { pt3dadd( -109.612, 26.9611, -100.573, 0.22 ) }
    dend_37 { pt3dadd( -109.676, 26.982, -100.592, 0.22 ) }
    dend_37 { pt3dadd( -110.176, 27.2063, -100.825, 0.22 ) }
    dend_37 { pt3dadd( -110.917, 27.605, -101.269, 0.22 ) }
    dend_37 { pt3dadd( -111.57, 27.9278, -101.722, 1.03 ) }
    dend_37 { pt3dadd( -112.091, 28.1407, -102.095, 1.62 ) }
    dend_37 { pt3dadd( -112.568, 28.2705, -102.424, 1.84 ) }
    dend_37 { pt3dadd( -114.423, 28.6095, -103.606, 0.22 ) }
    dend_37 { pt3dadd( -115.119, 28.6854, -104.013, 0.29 ) }
    dend_37 { pt3dadd( -115.587, 28.7083, -104.255, 0.88 ) }
    dend_37 { pt3dadd( -116.135, 28.7164, -104.514, 0.88 ) }
    dend_37 { pt3dadd( -117.358, 28.6505, -104.99, 0.22 ) }
    dend_37 { pt3dadd( -118.267, 28.5422, -105.26, 1.62 ) }
    dend_37 { pt3dadd( -118.625, 28.4671, -105.318, 1.92 ) }
    dend_37 { pt3dadd( -119.207, 28.3371, -105.387, 1.69 ) }
    dend_37 { pt3dadd( -119.683, 28.2328, -105.414, 1.25 ) }
    dend_37 { pt3dadd( -121.248, 27.8855, -105.373, 0.22 ) }
    dend_37 { pt3dadd( -121.315, 27.87, -105.364, 0.22 ) }
    dend_37 { pt3dadd( -122.026, 27.6532, -105.234, 0.22 ) }
    dend_37 { pt3dadd( -122.082, 27.6341, -105.223, 0.22 ) }
    dend_37 { pt3dadd( -122.485, 27.4738, -105.149, 1.18 ) }
    dend_37 { pt3dadd( -123.233, 27.1329, -105.022, 1.84 ) }
    dend_37 { pt3dadd( -123.772, 26.864, -104.954, 2.06 ) }
    dend_37 { pt3dadd( -125.362, 26.0836, -104.758, 0.22 ) }
    dend_37 { pt3dadd( -125.434, 26.0497, -104.749, 0.22 ) }
    dend_37 { pt3dadd( -126.321, 25.6378, -104.643, 0.22 ) }
    dend_37 { pt3dadd( -126.773, 25.4278, -104.594, 0.37 ) }
    dend_37 { pt3dadd( -126.924, 25.3611, -104.583, 0.37 ) }
    dend_37 { pt3dadd( -127.227, 25.2413, -104.556, 0.37 ) }
    dend_37 { pt3dadd( -128.262, 24.8431, -104.425, 0.22 ) }
    dend_37 { pt3dadd( -128.336, 24.8139, -104.415, 0.22 ) }
    dend_37 { pt3dadd( -128.79, 24.637, -104.352, 0.96 ) }
    dend_37 { pt3dadd( -129.201, 24.4713, -104.301, 1.33 ) }
    dend_37 { pt3dadd( -129.684, 24.2673, -104.25, 1.33 ) }
    dend_37 { pt3dadd( -131.089, 23.6084, -104.098, 0.22 ) }
    dend_37 { pt3dadd( -131.558, 23.3756, -104.05, 0.22 ) }
    dend_37 { pt3dadd( -132.365, 22.9686, -103.969, 0.22 ) }
    dend_37 { pt3dadd( -133.339, 22.4796, -103.873, 1.33 ) }
    dend_37 { pt3dadd( -133.639, 22.3299, -103.845, 1.77 ) }
    dend_37 { pt3dadd( -135.415, 21.4595, -103.695, 0.22 ) }
    dend_37 { pt3dadd( -136.241, 21.0538, -103.636, 0.44 ) }
    dend_37 { pt3dadd( -136.894, 20.7305, -103.593, 0.22 ) }
    dend_37 { pt3dadd( -137.36, 20.5119, -103.553, 0.66 ) }
    dend_37 { pt3dadd( -137.873, 20.282, -103.499, 0.74 ) }
    dend_37 { pt3dadd( -137.963, 20.2437, -103.489, 0.74 ) }
    dend_37 { pt3dadd( -138.878, 19.855, -103.399, 0.22 ) }
    dend_37 { pt3dadd( -139.889, 19.3919, -103.294, 0.22 ) }
    dend_37 { pt3dadd( -140.688, 18.9715, -103.23, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_37 { pt3dadd( -141.276, 18.6299, -103.196, 1.77 ) }
    dend_37 { pt3dadd( -141.414, 18.5454, -103.191, 2.06 ) }
    dend_37 { pt3dadd( -142.924, 17.5206, -103.217, 0.22 ) }
    dend_37 { pt3dadd( -142.972, 17.4845, -103.221, 0.22 ) }
    dend_37 { pt3dadd( -143.711, 16.8405, -103.327, 0.22 ) }
    dend_37 { pt3dadd( -143.892, 16.683, -103.366, 1.03 ) }
    dend_37 { pt3dadd( -144.246, 16.3966, -103.444, 1.03 ) }
    dend_37 { pt3dadd( -145.013, 15.8324, -103.597, 0.22 ) }
    dend_37 { pt3dadd( -145.078, 15.7892, -103.613, 0.22 ) }
    dend_37 { pt3dadd( -145.593, 15.4584, -103.727, 0.22 ) }
    dend_37 { pt3dadd( -146.145, 15.1152, -103.841, 0.22 ) }
    dend_37 { pt3dadd( -146.211, 15.072, -103.854, 0.22 ) }
    dend_37 { pt3dadd( -147.088, 14.4663, -104.016, 0.22 ) }
    dend_37 { pt3dadd( -147.921, 13.9146, -104.156, 1.25 ) }
    dend_37 { pt3dadd( -148.42, 13.5823, -104.244, 1.62 ) }
    dend_37 { pt3dadd( -148.477, 13.5442, -104.254, 1.62 ) }
    dend_37 { pt3dadd( -148.976, 13.2066, -104.345, 0.88 ) }
    dend_37 { pt3dadd( -149.709, 12.6982, -104.473, 0.22 ) }
    dend_37 { pt3dadd( -150.644, 12.0209, -104.624, 0.22 ) }
    dend_37 { pt3dadd( -150.708, 11.9732, -104.629, 0.22 ) }
    dend_37 { pt3dadd( -151.211, 11.5956, -104.661, 0.22 ) }
    dend_37 { pt3dadd( -151.683, 11.217, -104.676, 1.03 ) }
    dend_37 { pt3dadd( -152.076, 10.8584, -104.673, 1.18 ) }
    dend_37 { pt3dadd( -152.337, 10.5754, -104.646, 1.03 ) }
    dend_37 { pt3dadd( -153.014, 9.677, -104.507, 0.15 ) }
    dend_37 { pt3dadd( -153.204, 9.4037, -104.465, 0.15 ) }
    dend_37 { pt3dadd( -153.435, 9.03337, -104.408, 0.15 ) }
    dend_37 { pt3dadd( -153.724, 8.53057, -104.336, 0.15 ) }
    dend_37 { pt3dadd( -153.993, 8.03936, -104.278, 0.81 ) }
    dend_37 { pt3dadd( -154.166, 7.70633, -104.249, 0.81 ) }
    dend_37 { pt3dadd( -154.55, 6.84249, -104.184, 0.22 ) }
    dend_37 { pt3dadd( -154.791, 6.27302, -104.135, 0.22 ) }
    dend_37 { pt3dadd( -155.07, 5.65881, -104.079, 1.18 ) }
    dend_37 { pt3dadd( -155.288, 5.21458, -104.032, 1.69 ) }
    dend_37 { pt3dadd( -155.5, 4.79055, -103.985, 1.47 ) }
    dend_37 { pt3dadd( -156.095, 3.64295, -103.834, 0.22 ) }
    dend_37 { pt3dadd( -156.323, 3.20775, -103.762, 0.22 ) }
    dend_37 { pt3dadd( -156.572, 2.76438, -103.684, 0.22 ) }
    dend_37 { pt3dadd( -157.051, 1.99189, -103.541, 0.22 ) }
    dend_37 { pt3dadd( -157.409, 1.48875, -103.485, 0.52 ) }
    dend_37 { pt3dadd( -157.549, 1.30496, -103.48, 0.52 ) }
    dend_37 { pt3dadd( -157.93, 0.76665, -103.527, 0.22 ) }
    dend_37 { pt3dadd( -158.183, 0.38657, -103.598, 0.74 ) }
    dend_37 { pt3dadd( -158.391, 0.0543898, -103.673, 0.74 ) }
    dend_37 { pt3dadd( -159.038, -0.995827, -103.98, 0.22 ) }
    dend_37 { pt3dadd( -159.408, -1.5924, -104.18, 0.22 ) }
    dend_37 { pt3dadd( -160.178, -2.85486, -104.65, 1.99 ) }
    dend_37 { pt3dadd( -160.591, -3.56785, -104.955, 2.43 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -59.4694, 22.9506, -85.5123, 0.22 ) }
    dend_36 { pt3dadd( -61.2364, 24.6787, -86.2975, 0.22 ) }
    dend_36 { pt3dadd( -61.516, 24.9498, -86.426, 0.37 ) }
    dend_36 { pt3dadd( -62.3641, 25.718, -86.7986, 0.22 ) }
    dend_36 { pt3dadd( -62.8405, 26.1353, -87.0017, 1.03 ) }
    dend_36 { pt3dadd( -63.4758, 26.695, -87.2605, 1.4 ) }
    dend_36 { pt3dadd( -64.7212, 27.7946, -87.7793, 0.22 ) }
    dend_36 { pt3dadd( -64.7702, 27.8373, -87.8053, 0.22 ) }
    dend_36 { pt3dadd( -65.2713, 28.2743, -88.1301, 0.22 ) }
    dend_36 { pt3dadd( -65.3671, 28.3628, -88.2167, 0.22 ) }
    dend_36 { pt3dadd( -65.8597, 28.8188, -88.7003, 0.22 ) }
    dend_36 { pt3dadd( -66.3339, 29.2458, -89.1912, 0.44 ) }
    dend_36 { pt3dadd( -67.3875, 30.1489, -90.2999, 1.18 ) }
    dend_36 { pt3dadd( -67.5717, 30.3019, -90.4985, 1.47 ) }
    dend_36 { pt3dadd( -68.9828, 31.3657, -92.0073, 0.22 ) }
    dend_36 { pt3dadd( -69.5617, 31.7389, -92.5653, 0.22 ) }
    dend_36 { pt3dadd( -70.2419, 32.1228, -93.1671, 1.25 ) }
    dend_36 { pt3dadd( -70.9487, 32.4952, -93.7344, 2.21 ) }
    dend_36 { pt3dadd( -71.6128, 32.8358, -94.2103, 2.06 ) }
    dend_36 { pt3dadd( -72.9834, 33.5643, -95.2164, 0.22 ) }
    dend_36 { pt3dadd( -73.8914, 34.0562, -95.8568, 0.22 ) }
    dend_36 { pt3dadd( -73.9679, 34.102, -95.9146, 0.22 ) }
    dend_36 { pt3dadd( -74.5492, 34.4738, -96.3606, 0.66 ) }
    dend_36 { pt3dadd( -74.9729, 34.6945, -96.6894, 0.88 ) }
    dend_36 { pt3dadd( -75.9126, 35.0568, -97.4004, 0.22 ) }
    dend_36 { pt3dadd( -76.3695, 35.1932, -97.7569, 0.22 ) }
    dend_36 { pt3dadd( -77.0843, 35.3385, -98.3327, 1.25 ) }
    dend_36 { pt3dadd( -77.5843, 35.3971, -98.7344, 1.4 ) }
    dend_36 { pt3dadd( -79.6283, 35.4911, -100.35, 0.22 ) }
    dend_36 { pt3dadd( -80.546, 35.5242, -101.064, 1.84 ) }
    dend_36 { pt3dadd( -80.6018, 35.5259, -101.106, 1.84 ) }
    dend_36 { pt3dadd( -81.2232, 35.5664, -101.586, 1.84 ) }
    dend_36 { pt3dadd( -82.6506, 35.7414, -102.689, 0.22 ) }
    dend_36 { pt3dadd( -82.7058, 35.7531, -102.73, 0.22 ) }
    dend_36 { pt3dadd( -83.5212, 36.0659, -103.332, 0.22 ) }
    dend_36 { pt3dadd( -83.6043, 36.0991, -103.401, 0.22 ) }
    dend_36 { pt3dadd( -84.0107, 36.2835, -103.737, 0.22 ) }
    dend_36 { pt3dadd( -84.0539, 36.3059, -103.772, 0.22 ) }
    dend_36 { pt3dadd( -84.5772, 36.5846, -104.177, 0.96 ) }
    dend_36 { pt3dadd( -85.2405, 36.9155, -104.714, 0.96 ) }
    dend_36 { pt3dadd( -86.2379, 37.3559, -105.513, 0.22 ) }
    dend_36 { pt3dadd( -87.0336, 37.7166, -106.142, 0.22 ) }
    dend_36 { pt3dadd( -87.0848, 37.7416, -106.183, 0.22 ) }
    dend_36 { pt3dadd( -87.9079, 38.1596, -106.782, 1.55 ) }
    dend_36 { pt3dadd( -88.4869, 38.4675, -107.173, 1.92 ) }
    dend_36 { pt3dadd( -89.0014, 38.7271, -107.502, 1.92 ) }
    dend_36 { pt3dadd( -89.0548, 38.7516, -107.54, 1.92 ) }
    dend_36 { pt3dadd( -90.8574, 39.4849, -108.962, 0.22 ) }
    dend_36 { pt3dadd( -91.4744, 39.7094, -109.523, 0.22 ) }
    dend_36 { pt3dadd( -91.5223, 39.7254, -109.572, 0.22 ) }
    dend_36 { pt3dadd( -92.4052, 39.9735, -110.486, 1.55 ) }
    dend_36 { pt3dadd( -93.4697, 40.2264, -111.646, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_36 { pt3dadd( -93.5174, 40.2359, -111.697, 1.77 ) }
    dend_36 { pt3dadd( -95.2907, 40.5046, -113.435, 0.22 ) }
    dend_36 { pt3dadd( -95.3346, 40.5113, -113.475, 0.22 ) }
    dend_36 { pt3dadd( -96.0294, 40.626, -114.005, 0.22 ) }
    dend_36 { pt3dadd( -96.0893, 40.6368, -114.04, 0.22 ) }
    dend_36 { pt3dadd( -97.2118, 40.8598, -114.562, 0.22 ) }
    dend_36 { pt3dadd( -98.1849, 41.0701, -114.975, 0.22 ) }
    dend_36 { pt3dadd( -98.2396, 41.0828, -114.996, 0.22 ) }
    dend_36 { pt3dadd( -99.1041, 41.2949, -115.365, 0.96 ) }
    dend_36 { pt3dadd( -99.1659, 41.3123, -115.394, 0.96 ) }
    dend_36 { pt3dadd( -100.674, 41.7207, -116.052, 0.22 ) }
    dend_36 { pt3dadd( -101.558, 41.96, -116.424, 1.4 ) }
    dend_36 { pt3dadd( -102.297, 42.1765, -116.716, 2.06 ) }
    dend_36 { pt3dadd( -102.82, 42.3388, -116.899, 2.36 ) }
    dend_36 { pt3dadd( -104.829, 43.0015, -117.528, 0.22 ) }
    dend_36 { pt3dadd( -105.994, 43.4088, -117.823, 0.22 ) }
    dend_36 { pt3dadd( -106.637, 43.6526, -117.935, 0.88 ) }
    dend_36 { pt3dadd( -107.06, 43.8291, -117.993, 1.18 ) }
    dend_36 { pt3dadd( -108.035, 44.2657, -118.089, 0.22 ) }
    dend_36 { pt3dadd( -108.107, 44.2993, -118.096, 0.22 ) }
    dend_36 { pt3dadd( -108.866, 44.6903, -118.163, 0.22 ) }
    dend_36 { pt3dadd( -108.934, 44.7301, -118.177, 0.22 ) }
    dend_36 { pt3dadd( -109.551, 45.093, -118.345, 0.22 ) }
    dend_36 { pt3dadd( -109.601, 45.1219, -118.362, 0.22 ) }
    dend_36 { pt3dadd( -110.36, 45.5225, -118.727, 0.59 ) }
    dend_36 { pt3dadd( -110.963, 45.813, -119.033, 0.22 ) }
    dend_36 { pt3dadd( -112.077, 46.3309, -119.613, 1.55 ) }
    dend_36 { pt3dadd( -112.537, 46.5402, -119.844, 2.21 ) }
    dend_36 { pt3dadd( -113.512, 46.9827, -120.311, 2.06 ) }
    dend_36 { pt3dadd( -115.436, 47.834, -121.156, 0.52 ) }
    dend_36 { pt3dadd( -116.317, 48.234, -121.506, 0.52 ) }
    dend_36 { pt3dadd( -116.762, 48.4409, -121.665, 0.52 ) }
    dend_36 { pt3dadd( -117.486, 48.7815, -121.877, 0.22 ) }
    dend_36 { pt3dadd( -118.174, 49.1359, -122.051, 0.66 ) }
    dend_36 { pt3dadd( -118.791, 49.4975, -122.161, 0.88 ) }
    dend_36 { pt3dadd( -119.78, 50.1885, -122.265, 0.22 ) }
    dend_36 { pt3dadd( -120.277, 50.5701, -122.329, 0.88 ) }
    dend_36 { pt3dadd( -120.549, 50.8009, -122.378, 0.88 ) }
    dend_36 { pt3dadd( -121.245, 51.4515, -122.538, 0.22 ) }
    dend_36 { pt3dadd( -121.737, 51.9069, -122.659, 0.22 ) }
    dend_36 { pt3dadd( -122.165, 52.2958, -122.763, 0.88 ) }
    dend_36 { pt3dadd( -122.684, 52.7215, -122.874, 1.18 ) }
    dend_36 { pt3dadd( -123.704, 53.4761, -123.079, 0.22 ) }
    dend_36 { pt3dadd( -123.762, 53.5143, -123.089, 0.22 ) }
    dend_36 { pt3dadd( -124.863, 54.1162, -123.273, 0.22 ) }
    dend_36 { pt3dadd( -125.611, 54.4802, -123.392, 0.22 ) }
    dend_36 { pt3dadd( -126.493, 54.8729, -123.554, 1.84 ) }
    dend_36 { pt3dadd( -127.149, 55.1336, -123.743, 2.36 ) }
    dend_36 { pt3dadd( -127.742, 55.3337, -123.952, 1.99 ) }
    dend_36 { pt3dadd( -129.292, 55.7828, -124.582, 0.15 ) }
    dend_36 { pt3dadd( -129.841, 55.9179, -124.841, 0.59 ) }
    dend_36 { pt3dadd( -130.629, 56.0745, -125.239, 0.74 ) }
    dend_36 { pt3dadd( -132.329, 56.37, -126.134, 0.29 ) }
    dend_36 { pt3dadd( -133.112, 56.4913, -126.546, 0.22 ) }
    dend_36 { pt3dadd( -133.931, 56.6023, -126.984, 0.22 ) }
    dend_36 { pt3dadd( -135.104, 56.704, -127.588, 1.47 ) }
    dend_36 { pt3dadd( -135.167, 56.7083, -127.618, 1.47 ) }
    dend_36 { pt3dadd( -135.661, 56.751, -127.819, 1.84 ) }
    dend_36 { pt3dadd( -135.994, 56.8026, -127.947, 1.77 ) }
    dend_36 { pt3dadd( -136.692, 56.9449, -128.254, 1.62 ) }
    dend_36 { pt3dadd( -138.205, 57.2615, -128.942, 0.22 ) }
    dend_36 { pt3dadd( -138.84, 57.3953, -129.218, 1.03 ) }
    dend_36 { pt3dadd( -139.375, 57.4991, -129.435, 1.25 ) }
    dend_36 { pt3dadd( -140.998, 57.8, -130.04, 0.22 ) }
    dend_36 { pt3dadd( -141.138, 57.8274, -130.086, 0.22 ) }
    dend_36 { pt3dadd( -141.952, 58.0021, -130.302, 0.22 ) }
    dend_36 { pt3dadd( -142.745, 58.1898, -130.478, 0.22 ) }
    dend_36 { pt3dadd( -143.563, 58.4011, -130.641, 0.22 ) }
    dend_36 { pt3dadd( -144.093, 58.5766, -130.748, 0.96 ) }
    dend_36 { pt3dadd( -144.598, 58.7862, -130.845, 1.11 ) }
    dend_36 { pt3dadd( -145.79, 59.37, -131.116, 0.15 ) }
    dend_36 { pt3dadd( -146.846, 59.9632, -131.386, 1.77 ) }
    dend_36 { pt3dadd( -147.375, 60.2708, -131.548, 1.99 ) }
    dend_36 { pt3dadd( -148.889, 61.2678, -132.064, 0.22 ) }
    dend_36 { pt3dadd( -149.416, 61.6381, -132.261, 0.22 ) }
    dend_36 { pt3dadd( -150.025, 62.084, -132.5, 1.03 ) }
    dend_36 { pt3dadd( -150.4, 62.3667, -132.644, 1.03 ) }
    dend_36 { pt3dadd( -151.815, 63.4465, -133.204, 0.22 ) }
    dend_36 { pt3dadd( -152.546, 63.9876, -133.486, 0.22 ) }
    dend_36 { pt3dadd( -153.285, 64.5153, -133.751, 0.96 ) }
    dend_36 { pt3dadd( -153.823, 64.9097, -133.946, 1.33 ) }
    dend_36 { pt3dadd( -154.502, 65.4233, -134.195, 0.66 ) }
    dend_36 { pt3dadd( -155.32, 66.0646, -134.505, 0.22 ) }
    dend_36 { pt3dadd( -155.784, 66.4427, -134.676, 0.88 ) }
    dend_36 { pt3dadd( -156.284, 66.8297, -134.871, 0.88 ) }
    dend_36 { pt3dadd( -156.992, 67.4136, -135.163, 0.22 ) }
    dend_36 { pt3dadd( -157.486, 67.8801, -135.422, 0.22 ) }
    dend_36 { pt3dadd( -157.654, 68.0601, -135.523, 0.22 ) }
    dend_36 { pt3dadd( -157.983, 68.4353, -135.728, 0.22 ) }
    dend_36 { pt3dadd( -157.983, 68.4353, -135.728, 0.81 ) }
    dend_36 { pt3dadd( -158.2, 68.7286, -135.865, 0.81 ) }
    dend_36 { pt3dadd( -159.058, 69.8418, -136.392, 0.22 ) }
    dend_36 { pt3dadd( -159.453, 70.3453, -136.646, 1.33 ) }
    dend_36 { pt3dadd( -159.605, 70.5388, -136.747, 1.62 ) }
    dend_36 { pt3dadd( -159.686, 70.6414, -136.798, 1.55 ) }
    dend_36 { pt3dadd( -160.069, 71.1557, -137.028, 1.4 ) }
    dend_36 { pt3dadd( -161.017, 72.4291, -137.62, 0.22 ) }
    dend_36 { pt3dadd( -161.051, 72.4738, -137.641, 0.22 ) }
    dend_36 { pt3dadd( -161.554, 73.1225, -137.967, 0.22 ) }
    dend_36 { pt3dadd( -161.922, 73.6041, -138.221, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_36 { pt3dadd( -162.47, 74.3237, -138.639, 0.22 ) }
    dend_36 { pt3dadd( -163.141, 75.2254, -139.201, 1.25 ) }
    dend_36 { pt3dadd( -163.457, 75.6339, -139.464, 1.4 ) }
    dend_36 { pt3dadd( -163.525, 75.7138, -139.522, 1.4 ) }
    dend_36 { pt3dadd( -164.27, 76.4877, -140.163, 0.22 ) }
    dend_36 { pt3dadd( -164.967, 77.0784, -140.769, 0.22 ) }
    dend_36 { pt3dadd( -165.008, 77.1069, -140.802, 0.22 ) }
    dend_36 { pt3dadd( -165.961, 77.6966, -141.503, 0.22 ) }
    dend_36 { pt3dadd( -166.762, 78.1316, -142.049, 1.69 ) }
    dend_36 { pt3dadd( -167.432, 78.4474, -142.453, 1.84 ) }
    dend_36 { pt3dadd( -168.811, 78.9954, -143.18, 0.15 ) }
    dend_36 { pt3dadd( -169.664, 79.3076, -143.583, 0.15 ) }
    dend_36 { pt3dadd( -169.733, 79.335, -143.611, 0.15 ) }
    dend_36 { pt3dadd( -170.475, 79.6681, -143.843, 0.15 ) }
    dend_36 { pt3dadd( -171.187, 80.0278, -144.014, 1.18 ) }
    dend_36 { pt3dadd( -171.827, 80.3827, -144.128, 1.47 ) }
    dend_36 { pt3dadd( -172.274, 80.6616, -144.187, 1.55 ) }
    dend_36 { pt3dadd( -173.967, 81.7858, -144.367, 0.22 ) }
    dend_36 { pt3dadd( -175.366, 82.7487, -144.484, 0.22 ) }
    dend_36 { pt3dadd( -176.146, 83.3047, -144.53, 1.47 ) }
    dend_36 { pt3dadd( -176.784, 83.7694, -144.555, 1.77 ) }
    dend_36 { pt3dadd( -177.411, 84.2326, -144.563, 1.69 ) }
    dend_36 { pt3dadd( -178.658, 85.2021, -144.549, 0.22 ) }
    dend_36 { pt3dadd( -179.355, 85.7731, -144.533, 0.74 ) }
    dend_36 { pt3dadd( -179.401, 85.8116, -144.532, 0.74 ) }
    dend_36 { pt3dadd( -179.837, 86.19, -144.506, 1.03 ) }
    dend_36 { pt3dadd( -179.883, 86.2283, -144.501, 1.03 ) }
    dend_36 { pt3dadd( -180.971, 86.9961, -144.327, 0.22 ) }
    dend_36 { pt3dadd( -181.031, 87.0304, -144.316, 0.22 ) }
    dend_36 { pt3dadd( -181.69, 87.3414, -144.187, 0.22 ) }
    dend_36 { pt3dadd( -181.754, 87.3672, -144.173, 0.22 ) }
    dend_36 { pt3dadd( -182.863, 87.756, -143.905, 0.22 ) }
    dend_36 { pt3dadd( -183.855, 88.0908, -143.613, 0.96 ) }
    dend_36 { pt3dadd( -184.214, 88.2146, -143.492, 1.25 ) }
    dend_36 { pt3dadd( -184.677, 88.4024, -143.331, 1.25 ) }
    dend_36 { pt3dadd( -186.057, 89.0472, -142.846, 0.22 ) }
    dend_36 { pt3dadd( -186.699, 89.3972, -142.597, 0.52 ) }
    dend_36 { pt3dadd( -187.584, 89.9529, -142.239, 0.22 ) }
    dend_36 { pt3dadd( -188.263, 90.4434, -141.924, 0.22 ) }
    dend_36 { pt3dadd( -188.837, 90.8942, -141.651, 0.74 ) }
    dend_36 { pt3dadd( -189.209, 91.2231, -141.473, 0.96 ) }
    dend_36 { pt3dadd( -190.077, 92.1143, -141.065, 0.22 ) }
    dend_36 { pt3dadd( -190.458, 92.538, -140.893, 0.22 ) }
    dend_36 { pt3dadd( -191.034, 93.2018, -140.655, 1.18 ) }
    dend_36 { pt3dadd( -191.396, 93.6154, -140.512, 1.55 ) }
    dend_36 { pt3dadd( -191.788, 94.0549, -140.367, 1.84 ) }
    dend_36 { pt3dadd( -193.187, 95.5532, -139.918, 0.22 ) }
    dend_36 { pt3dadd( -193.618, 95.9924, -139.81, 0.52 ) }
    dend_36 { pt3dadd( -194.272, 96.6437, -139.643, 0.22 ) }
    dend_36 { pt3dadd( -194.929, 97.2738, -139.486, 0.22 ) }
    dend_36 { pt3dadd( -195.616, 97.9245, -139.332, 1.11 ) }
    dend_36 { pt3dadd( -195.94, 98.2214, -139.267, 1.47 ) }
    dend_36 { pt3dadd( -196.632, 98.8448, -139.153, 1.69 ) }
    dend_36 { pt3dadd( -197.772, 99.8945, -138.968, 0.22 ) }
    dend_36 { pt3dadd( -198.219, 100.338, -138.908, 0.22 ) }
    dend_36 { pt3dadd( -198.711, 100.871, -138.852, 0.81 ) }
    dend_36 { pt3dadd( -198.906, 101.097, -138.837, 1.18 ) }
    dend_36 { pt3dadd( -198.957, 101.159, -138.834, 1.18 ) }
    dend_36 { pt3dadd( -199.17, 101.411, -138.835, 0.88 ) }
    dend_36 { pt3dadd( -199.844, 102.239, -138.893, 0.22 ) }
    dend_36 { pt3dadd( -200.405, 102.993, -138.937, 0.22 ) }
    dend_36 { pt3dadd( -200.444, 103.05, -138.938, 0.22 ) }
    dend_36 { pt3dadd( -200.759, 103.531, -138.933, 0.74 ) }
    dend_36 { pt3dadd( -200.892, 103.756, -138.926, 0.74 ) }
    dend_36 { pt3dadd( -201.271, 104.447, -138.89, 0.22 ) }
    dend_36 { pt3dadd( -201.654, 105.159, -138.841, 0.22 ) }
    dend_36 { pt3dadd( -202.064, 105.996, -138.788, 1.25 ) }
    dend_36 { pt3dadd( -202.35, 106.604, -138.737, 1.47 ) }
    dend_36 { pt3dadd( -202.889, 107.776, -138.625, 0.22 ) }
    dend_36 { pt3dadd( -202.934, 107.871, -138.615, 0.22 ) }
    dend_36 { pt3dadd( -203.455, 108.943, -138.499, 0.22 ) }
    dend_36 { pt3dadd( -203.858, 109.8, -138.395, 0.52 ) }
    dend_36 { pt3dadd( -204.212, 110.654, -138.293, 0.22 ) }
    dend_36 { pt3dadd( -204.344, 110.99, -138.251, 0.22 ) }
    dend_36 { pt3dadd( -204.557, 111.473, -138.18, 0.81 ) }
    dend_36 { pt3dadd( -204.695, 111.77, -138.135, 0.81 ) }
    dend_36 { pt3dadd( -205.268, 112.901, -137.965, 0.22 ) }
    dend_36 { pt3dadd( -205.716, 113.652, -137.85, 1.33 ) }
    dend_36 { pt3dadd( -206.162, 114.367, -137.751, 1.62 ) }
    dend_36 { pt3dadd( -207.015, 115.742, -137.565, 0.22 ) }
    dend_36 { pt3dadd( -207.453, 116.451, -137.473, 0.88 ) }
    dend_36 { pt3dadd( -207.799, 117.006, -137.404, 0.88 ) }
    dend_36 { pt3dadd( -208.432, 117.987, -137.296, 0.22 ) }
    dend_36 { pt3dadd( -208.87, 118.669, -137.225, 0.22 ) }
    dend_36 { pt3dadd( -209.352, 119.488, -137.157, 0.96 ) }
    dend_36 { pt3dadd( -209.495, 119.752, -137.143, 1.33 ) }
    dend_36 { pt3dadd( -209.561, 119.875, -137.138, 1.33 ) }
    dend_36 { pt3dadd( -209.713, 120.163, -137.132, 1.33 ) }
    dend_36 { pt3dadd( -210.319, 121.278, -137.126, 0.22 ) }
    dend_36 { pt3dadd( -210.649, 121.801, -137.162, 0.44 ) }
    dend_36 { pt3dadd( -210.714, 121.884, -137.175, 0.44 ) }
    dend_36 { pt3dadd( -211.219, 122.473, -137.302, 0.22 ) }
    dend_36 { pt3dadd( -211.576, 122.854, -137.405, 0.81 ) }
    dend_36 { pt3dadd( -211.923, 123.185, -137.53, 1.25 ) }
    dend_36 { pt3dadd( -212.681, 123.833, -137.864, 0.66 ) }
    dend_36 { pt3dadd( -213.31, 124.299, -138.146, 0.22 ) }
    dend_36 { pt3dadd( -213.648, 124.523, -138.289, 0.44 ) }
    dend_36 { pt3dadd( -213.98, 124.726, -138.422, 0.44 ) }
    dend_36 { pt3dadd( -214.802, 125.248, -138.729, 0.22 ) }
    dend_36 { pt3dadd( -214.906, 125.317, -138.765, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_36 { pt3dadd( -215.916, 126.078, -139.041, 0.22 ) }
    dend_36 { pt3dadd( -216.457, 126.534, -139.185, 1.18 ) }
    dend_36 { pt3dadd( -216.799, 126.845, -139.268, 1.33 ) }
    dend_36 { pt3dadd( -217.439, 127.467, -139.399, 1.11 ) }
    dend_36 { pt3dadd( -217.479, 127.51, -139.405, 1.11 ) }
    dend_36 { pt3dadd( -218.34, 128.484, -139.507, 0.22 ) }
    dend_36 { pt3dadd( -218.385, 128.538, -139.511, 0.22 ) }
    dend_36 { pt3dadd( -218.88, 129.156, -139.558, 0.22 ) }
    dend_36 { pt3dadd( -219.325, 129.73, -139.597, 0.22 ) }
    dend_36 { pt3dadd( -219.899, 130.486, -139.641, 1.25 ) }
    dend_36 { pt3dadd( -220.121, 130.786, -139.658, 1.55 ) }
    dend_36 { pt3dadd( -220.458, 131.249, -139.685, 1.69 ) }
    dend_36 { pt3dadd( -220.814, 131.734, -139.713, 0.96 ) }
    dend_36 { pt3dadd( -221.763, 132.988, -139.79, 0.22 ) }
    dend_36 { pt3dadd( -221.816, 133.049, -139.793, 0.22 ) }
    dend_36 { pt3dadd( -222.04, 133.279, -139.802, 0.22 ) }
    dend_36 { pt3dadd( -222.378, 133.607, -139.809, 0.59 ) }
    dend_36 { pt3dadd( -222.656, 133.855, -139.812, 0.88 ) }
    dend_36 { pt3dadd( -223.013, 134.158, -139.813, 0.88 ) }
    dend_36 { pt3dadd( -224.261, 135.187, -139.831, 0.22 ) }
    dend_36 { pt3dadd( -224.371, 135.288, -139.835, 0.22 ) }
    dend_36 { pt3dadd( -224.974, 135.943, -139.837, 0.22 ) }
    dend_36 { pt3dadd( -225.012, 135.991, -139.837, 0.22 ) }
    dend_36 { pt3dadd( -225.46, 136.603, -139.821, 0.88 ) }
    dend_36 { pt3dadd( -225.713, 136.963, -139.786, 1.25 ) }
    dend_36 { pt3dadd( -226.079, 137.512, -139.704, 1.55 ) }
    dend_36 { pt3dadd( -226.939, 138.687, -139.482, 0.22 ) }
    dend_36 { pt3dadd( -226.982, 138.741, -139.469, 0.22 ) }
    dend_36 { pt3dadd( -227.641, 139.544, -139.262, 0.22 ) }
    dend_36 { pt3dadd( -228.463, 140.521, -138.925, 0.22 ) }
    dend_36 { pt3dadd( -228.507, 140.572, -138.905, 0.22 ) }
    dend_36 { pt3dadd( -228.984, 141.113, -138.675, 0.59 ) }
    dend_36 { pt3dadd( -229.078, 141.219, -138.628, 0.59 ) }
    dend_36 { pt3dadd( -229.302, 141.48, -138.511, 0.59 ) }
    dend_36 { pt3dadd( -230.244, 142.635, -137.977, 0.15 ) }
    dend_36 { pt3dadd( -230.765, 143.352, -137.683, 1.18 ) }
    dend_36 { pt3dadd( -231.368, 144.202, -137.318, 1.4 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 37/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 59.0175, 54.3255, -25.2989, 0.22 ) }
    dend_19 { pt3dadd( 60.3302, 55.8002, -25.511, 0.22 ) }
    dend_19 { pt3dadd( 60.9319, 56.4506, -25.6001, 0.81 ) }
    dend_19 { pt3dadd( 61.6297, 57.1429, -25.7113, 0.22 ) }
    dend_19 { pt3dadd( 62.1675, 57.6488, -25.7974, 0.22 ) }
    dend_19 { pt3dadd( 62.5034, 57.9371, -25.8481, 0.22 ) }
    dend_19 { pt3dadd( 63.0812, 58.3665, -25.9587, 0.22 ) }
    dend_19 { pt3dadd( 63.1426, 58.3977, -25.9712, 0.22 ) }
    dend_19 { pt3dadd( 64.1854, 58.855, -26.2109, 1.4 ) }
    dend_19 { pt3dadd( 64.5204, 58.9954, -26.2915, 1.77 ) }
    dend_19 { pt3dadd( 65.1803, 59.2702, -26.4553, 1.18 ) }
    dend_19 { pt3dadd( 66.7705, 59.9149, -26.8707, 0.22 ) }
    dend_19 { pt3dadd( 67.3815, 60.1564, -27.0334, 0.22 ) }
    dend_19 { pt3dadd( 68.2746, 60.5128, -27.2658, 0.22 ) }
    dend_19 { pt3dadd( 68.6519, 60.6497, -27.3499, 0.88 ) }
    dend_19 { pt3dadd( 69.1552, 60.8239, -27.4439, 0.88 ) }
    dend_19 { pt3dadd( 70.1802, 61.1843, -27.5198, 0.29 ) }
    dend_19 { pt3dadd( 70.6629, 61.3463, -27.4916, 0.52 ) }
    dend_19 { pt3dadd( 71.0373, 61.4834, -27.4705, 0.52 ) }
    dend_19 { pt3dadd( 71.9465, 61.8078, -27.4163, 0.22 ) }
    dend_19 { pt3dadd( 72.411, 61.9698, -27.4135, 0.22 ) }
    dend_19 { pt3dadd( 73.9214, 62.4961, -27.4615, 1.84 ) }
    dend_19 { pt3dadd( 74.2694, 62.6199, -27.4833, 2.21 ) }
    dend_19 { pt3dadd( 75.9496, 63.2399, -27.7099, 0.22 ) }
    dend_19 { pt3dadd( 76.5772, 63.4785, -27.8533, 0.22 ) }
    dend_19 { pt3dadd( 77.4297, 63.8178, -28.1248, 1.03 ) }
    dend_19 { pt3dadd( 77.4915, 63.8402, -28.149, 1.03 ) }
    dend_19 { pt3dadd( 77.8958, 63.9735, -28.3277, 1.11 ) }
    dend_19 { pt3dadd( 79.2097, 64.3794, -28.8715, 0.22 ) }
    dend_19 { pt3dadd( 80.5081, 64.7357, -29.3581, 0.22 ) }
    dend_19 { pt3dadd( 80.6173, 64.7661, -29.3976, 0.22 ) }
    dend_19 { pt3dadd( 81.3006, 64.9647, -29.6689, 0.29 ) }
    dend_19 { pt3dadd( 82.4067, 65.2884, -30.1765, 0.29 ) }
    dend_19 { pt3dadd( 83.5297, 65.6181, -30.7572, 1.55 ) }
    dend_19 { pt3dadd( 83.7145, 65.6739, -30.8626, 2.06 ) }
    dend_19 { pt3dadd( 83.7734, 65.6912, -30.8963, 2.06 ) }
    dend_19 { pt3dadd( 85.3641, 66.1543, -31.7929, 0.66 ) }
    dend_19 { pt3dadd( 86.3591, 66.4819, -32.3635, 0.22 ) }
    dend_19 { pt3dadd( 86.4169, 66.5018, -32.3976, 0.52 ) }
    dend_19 { pt3dadd( 86.5964, 66.5608, -32.494, 0.52 ) }
    dend_19 { pt3dadd( 87.6462, 66.9083, -32.9982, 0.22 ) }
    dend_19 { pt3dadd( 88.1835, 67.0835, -33.2173, 0.37 ) }
    dend_19 { pt3dadd( 89.5402, 67.5203, -33.6653, 1.77 ) }
    dend_19 { pt3dadd( 89.7413, 67.5848, -33.727, 1.99 ) }
    dend_19 { pt3dadd( 92.161, 68.3775, -34.4128, 0.22 ) }
    dend_19 { pt3dadd( 92.7415, 68.5699, -34.5644, 0.52 ) }
    dend_19 { pt3dadd( 93.811, 68.9275, -34.812, 0.22 ) }
    dend_19 { pt3dadd( 94.6825, 69.2155, -34.9868, 0.22 ) }
    dend_19 { pt3dadd( 95.7833, 69.5505, -35.1549, 0.22 ) }
    dend_19 { pt3dadd( 96.4657, 69.7594, -35.2376, 0.96 ) }
    dend_19 { pt3dadd( 96.9088, 69.8971, -35.2666, 1.11 ) }
    dend_19 { pt3dadd( 98.3871, 70.3386, -35.3634, 0.22 ) }
    dend_19 { pt3dadd( 98.4636, 70.3616, -35.368, 0.22 ) }
    dend_19 { pt3dadd( 99.4488, 70.6566, -35.4243, 0.22 ) }
    dend_19 { pt3dadd( 99.5233, 70.6839, -35.435, 0.22 ) }
    dend_19 { pt3dadd( 100.291, 71.0495, -35.6195, 0.59 ) }
    dend_19 { pt3dadd( 100.508, 71.185, -35.6927, 0.96 ) }
    dend_19 { pt3dadd( 100.933, 71.4957, -35.8698, 1.25 ) }
    dend_19 { pt3dadd( 101.231, 71.7191, -36.0019, 1.25 ) }
    dend_19 { pt3dadd( 102.888, 72.9686, -36.8053, 0.22 ) }
    dend_19 { pt3dadd( 103.617, 73.488, -37.1617, 0.22 ) }
    dend_19 { pt3dadd( 104.359, 73.9907, -37.5381, 0.66 ) }
    dend_19 { pt3dadd( 104.976, 74.3838, -37.8513, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_19 { pt3dadd( 105.439, 74.67, -38.0775, 0.29 ) }
    dend_19 { pt3dadd( 106.135, 75.0803, -38.3842, 1.25 ) }
    dend_19 { pt3dadd( 106.506, 75.2746, -38.5176, 1.84 ) }
    dend_19 { pt3dadd( 107.795, 75.9477, -38.9792, 0.22 ) }
    dend_19 { pt3dadd( 107.852, 75.9821, -38.9994, 0.22 ) }
    dend_19 { pt3dadd( 108.643, 76.5409, -39.3764, 0.88 ) }
    dend_19 { pt3dadd( 109.015, 76.8247, -39.612, 0.88 ) }
    dend_19 { pt3dadd( 109.113, 76.9072, -39.6899, 0.88 ) }
    dend_19 { pt3dadd( 110.062, 77.733, -40.5497, 0.22 ) }
    dend_19 { pt3dadd( 110.505, 78.1252, -40.9742, 0.88 ) }
    dend_19 { pt3dadd( 111.561, 79.065, -42.0127, 0.66 ) }
    dend_19 { pt3dadd( 112.278, 79.7018, -42.751, 1.11 ) }
    dend_19 { pt3dadd( 113.383, 80.7128, -43.9088, 0.22 ) }
    dend_19 { pt3dadd( 113.423, 80.751, -43.9512, 0.22 ) }
    dend_19 { pt3dadd( 113.93, 81.2503, -44.4782, 0.29 ) }
    dend_19 { pt3dadd( 114.05, 81.3759, -44.6002, 0.29 ) }
    dend_19 { pt3dadd( 114.09, 81.4234, -44.6319, 0.29 ) }
    dend_19 { pt3dadd( 114.752, 82.2454, -45.0842, 0.22 ) }
    dend_19 { pt3dadd( 114.786, 82.2872, -45.11, 0.22 ) }
    dend_19 { pt3dadd( 114.964, 82.5515, -45.3495, 0.81 ) }
    dend_19 { pt3dadd( 114.989, 82.5976, -45.3958, 0.81 ) }
    dend_19 { pt3dadd( 115.252, 83.1444, -45.9684, 0.22 ) }
    dend_19 { pt3dadd( 115.687, 84.0636, -46.9412, 1.47 ) }
    dend_19 { pt3dadd( 115.989, 84.6861, -47.5954, 1.69 ) }
    dend_19 { pt3dadd( 116.888, 86.3849, -49.4367, 0.22 ) }
    dend_19 { pt3dadd( 117.08, 86.7386, -49.8192, 0.44 ) }
    dend_19 { pt3dadd( 117.625, 87.7107, -50.8414, 0.22 ) }
    dend_19 { pt3dadd( 118.106, 88.5618, -51.7534, 1.4 ) }
    dend_19 { pt3dadd( 118.326, 88.945, -52.1236, 1.62 ) }
    dend_19 { pt3dadd( 119.168, 90.3147, -53.3096, 0.29 ) }
    dend_19 { pt3dadd( 119.801, 91.2661, -54.0568, 0.22 ) }
    dend_19 { pt3dadd( 120.59, 92.427, -54.9678, 2.06 ) }
    dend_19 { pt3dadd( 121.493, 93.7856, -55.9934, 1.18 ) }
    dend_19 { pt3dadd( 122.432, 95.2693, -57.0816, 0.22 ) }
    dend_19 { pt3dadd( 122.777, 95.841, -57.4846, 0.59 ) }
    dend_19 { pt3dadd( 122.808, 95.895, -57.5167, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 36/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 59.0175, 54.3255, -25.2989, 0.22 ) }
    dend_18 { pt3dadd( 60.9693, 53.591, -25.3475, 0.22 ) }
    dend_18 { pt3dadd( 62.0282, 53.2293, -25.393, 0.22 ) }
    dend_18 { pt3dadd( 62.6605, 53.04, -25.4727, 0.88 ) }
    dend_18 { pt3dadd( 62.8691, 52.9782, -25.5056, 0.88 ) }
    dend_18 { pt3dadd( 64.0526, 52.6211, -25.7559, 0.22 ) }
    dend_18 { pt3dadd( 65.1294, 52.2875, -26.0444, 1.69 ) }
    dend_18 { pt3dadd( 65.3995, 52.2112, -26.1391, 1.99 ) }
    dend_18 { pt3dadd( 67.4086, 51.5321, -26.8735, 0.22 ) }
    dend_18 { pt3dadd( 67.6027, 51.4561, -26.9439, 0.37 ) }
    dend_18 { pt3dadd( 68.807, 50.9596, -27.4061, 0.22 ) }
    dend_18 { pt3dadd( 69.6198, 50.5969, -27.747, 1.47 ) }
    dend_18 { pt3dadd( 69.9797, 50.4155, -27.8981, 2.06 ) }
    dend_18 { pt3dadd( 71.21, 49.7313, -28.3873, 0.22 ) }
    dend_18 { pt3dadd( 71.6704, 49.4151, -28.5235, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.594, 219.755, 0.718706, 0.22 ) }
    dend_7 { pt3dadd( -19.8009, 221.247, 1.03004, 0.22 ) }
    dend_7 { pt3dadd( -20.3571, 221.915, 1.20995, 0.22 ) }
    dend_7 { pt3dadd( -20.6455, 222.275, 1.3182, 0.74 ) }
    dend_7 { pt3dadd( -20.95, 222.665, 1.49579, 0.88 ) }
    dend_7 { pt3dadd( -21.0354, 222.777, 1.55507, 0.88 ) }
    dend_7 { pt3dadd( -21.646, 223.531, 1.99768, 0.22 ) }
    dend_7 { pt3dadd( -22.0455, 223.863, 2.31619, 0.59 ) }
    dend_7 { pt3dadd( -22.4128, 224.107, 2.6096, 0.74 ) }
    dend_7 { pt3dadd( -23.4759, 224.68, 3.41805, 0.22 ) }
    dend_7 { pt3dadd( -23.5279, 224.708, 3.45668, 0.22 ) }
    dend_7 { pt3dadd( -23.9796, 224.917, 3.7781, 0.81 ) }
    dend_7 { pt3dadd( -25.169, 225.385, 4.57965, 0.22 ) }
    dend_7 { pt3dadd( -25.6106, 225.514, 4.85934, 0.22 ) }
    dend_7 { pt3dadd( -26.4326, 225.689, 5.32269, 0.22 ) }
    dend_7 { pt3dadd( -27.274, 225.818, 5.69477, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 67/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -18.594, 219.755, 0.718706, 0.22 ) }
    dend_6 { pt3dadd( -18.4369, 221.639, 0.417177, 0.22 ) }
    dend_6 { pt3dadd( -18.4313, 221.708, 0.404323, 0.22 ) }
    dend_6 { pt3dadd( -18.3843, 222.508, 0.237211, 0.22 ) }
    dend_6 { pt3dadd( -18.3466, 223.299, 0.0604703, 0.81 ) }
    dend_6 { pt3dadd( -18.3246, 224.014, -0.10447, 1.11 ) }
    dend_6 { pt3dadd( -18.3067, 225.092, -0.35918, 0.22 ) }
    dend_6 { pt3dadd( -18.2998, 225.863, -0.565278, 0.22 ) }
    dend_6 { pt3dadd( -18.3083, 226.37, -0.707382, 0.22 ) }
    dend_6 { pt3dadd( -18.3124, 226.428, -0.724809, 0.22 ) }
    dend_6 { pt3dadd( -18.4302, 227.49, -1.05861, 1.55 ) }
    dend_6 { pt3dadd( -18.4727, 227.919, -1.19974, 2.21 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 79/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 22.821, -84.0475, -95.7191, 1.18 ) }
    dend_59 { pt3dadd( 25.9385, -85.3346, -101.043, 1.18 ) }
    dend_59 { pt3dadd( 27.7286, -86.1684, -104.002, 0.52 ) }
    dend_59 { pt3dadd( 27.8922, -86.2491, -104.267, 1.11 ) }
    dend_59 { pt3dadd( 28.9687, -86.7663, -106.141, 1.47 ) }
    dend_59 { pt3dadd( 29.8145, -87.1726, -107.614, 1.55 ) }
    dend_59 { pt3dadd( 31.0354, -87.7592, -109.74, 0.59 ) }
    dend_59 { pt3dadd( 31.5841, -88.0665, -110.652, 0.59 ) }
    dend_59 { pt3dadd( 31.9829, -88.3117, -111.4, 0.96 ) }
    dend_59 { pt3dadd( 33.4734, -89.2229, -114.417, 0.66 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 89/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 22.821, -84.0475, -95.7191, 0.29 ) }
    dend_58 { pt3dadd( 24.9073, -85.8184, -98.7681, 0.29 ) }
    dend_58 { pt3dadd( 25.3692, -86.2105, -99.4432, 0.29 ) }
    dend_58 { pt3dadd( 25.7941, -86.5712, -100.064, 0.37 ) }
    dend_58 { pt3dadd( 26.5865, -87.2438, -101.222, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 94/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -160.591, -3.56785, -104.955, 0.22 ) }
    dend_39 { pt3dadd( -161.35, -4.86837, -106.308, 0.22 ) }
    dend_39 { pt3dadd( -161.42, -4.99674, -106.429, 0.22 ) }
    dend_39 { pt3dadd( -161.868, -5.90233, -107.263, 0.81 ) }
    dend_39 { pt3dadd( -161.887, -5.94359, -107.303, 0.81 ) }
    dend_39 { pt3dadd( -162.408, -6.98294, -108.329, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_39 { pt3dadd( -162.917, -7.8918, -109.244, 0.15 ) }
    dend_39 { pt3dadd( -163.337, -8.56721, -109.928, 0.96 ) }
    dend_39 { pt3dadd( -163.907, -9.47234, -110.826, 2.21 ) }
    dend_39 { pt3dadd( -164.687, -10.7199, -112.087, 2.36 ) }
    dend_39 { pt3dadd( -165.638, -12.2414, -113.612, 0.22 ) }
    dend_39 { pt3dadd( -166.248, -13.2564, -114.647, 0.22 ) }
    dend_39 { pt3dadd( -166.59, -13.8353, -115.267, 1.4 ) }
    dend_39 { pt3dadd( -166.729, -14.0761, -115.521, 1.77 ) }
    dend_39 { pt3dadd( -167.794, -15.9878, -117.496, 0.22 ) }
    dend_39 { pt3dadd( -168.294, -16.9481, -118.453, 0.37 ) }
    dend_39 { pt3dadd( -168.862, -18.2111, -119.646, 0.96 ) }
    dend_39 { pt3dadd( -169.146, -18.8444, -120.25, 0.88 ) }
    dend_39 { pt3dadd( -169.493, -19.5517, -120.937, 0.22 ) }
    dend_39 { pt3dadd( -169.519, -19.5985, -120.983, 0.22 ) }
    dend_39 { pt3dadd( -169.729, -19.9047, -121.271, 0.96 ) }
    dend_39 { pt3dadd( -170.121, -20.4002, -121.745, 1.11 ) }
    dend_39 { pt3dadd( -171.357, -21.8221, -123.034, 0.22 ) }
    dend_39 { pt3dadd( -171.911, -22.4328, -123.594, 0.22 ) }
    dend_39 { pt3dadd( -172.507, -23.0714, -124.169, 1.25 ) }
    dend_39 { pt3dadd( -172.731, -23.2987, -124.372, 1.55 ) }
    dend_39 { pt3dadd( -173.496, -24.0275, -125.017, 0.29 ) }
    dend_39 { pt3dadd( -173.886, -24.3522, -125.303, 0.22 ) }
    dend_39 { pt3dadd( -174.157, -24.5492, -125.452, 0.52 ) }
    dend_39 { pt3dadd( -175.197, -25.1905, -125.971, 0.22 ) }
    dend_39 { pt3dadd( -175.962, -25.562, -126.354, 1.25 ) }
    dend_39 { pt3dadd( -176.242, -25.6695, -126.484, 1.33 ) }
    dend_39 { pt3dadd( -177.282, -25.9582, -126.918, 0.59 ) }
    dend_39 { pt3dadd( -177.894, -26.1003, -127.165, 0.15 ) }
    dend_39 { pt3dadd( -178.621, -26.2426, -127.431, 0.44 ) }
    dend_39 { pt3dadd( -180.244, -26.4714, -127.975, 0.22 ) }
    dend_39 { pt3dadd( -181.12, -26.563, -128.256, 1.25 ) }
    dend_39 { pt3dadd( -181.572, -26.5985, -128.395, 1.55 ) }
    dend_39 { pt3dadd( -183.414, -26.7028, -128.929, 0.22 ) }
    dend_39 { pt3dadd( -184.467, -26.745, -129.254, 0.22 ) }
    dend_39 { pt3dadd( -185.874, -26.7767, -129.71, 0.29 ) }
    dend_39 { pt3dadd( -187.215, -26.7802, -130.169, 0.22 ) }
    dend_39 { pt3dadd( -187.419, -26.7771, -130.251, 0.81 ) }
    dend_39 { pt3dadd( -187.825, -26.7643, -130.422, 1.03 ) }
    dend_39 { pt3dadd( -189.368, -26.6674, -131.081, 0.22 ) }
    dend_39 { pt3dadd( -190.151, -26.6182, -131.443, 1.18 ) }
    dend_39 { pt3dadd( -190.7, -26.5926, -131.699, 1.47 ) }
    dend_39 { pt3dadd( -191.615, -26.5421, -132.106, 1.11 ) }
    dend_39 { pt3dadd( -192.837, -26.4329, -132.618, 0.22 ) }
    dend_39 { pt3dadd( -193.179, -26.3845, -132.751, 0.74 ) }
    dend_39 { pt3dadd( -193.742, -26.2791, -132.935, 0.74 ) }
    dend_39 { pt3dadd( -194.59, -26.0516, -133.206, 0.22 ) }
    dend_39 { pt3dadd( -195.734, -25.6555, -133.556, 0.22 ) }
    dend_39 { pt3dadd( -196.209, -25.4538, -133.683, 0.22 ) }
    dend_39 { pt3dadd( -196.964, -25.1002, -133.892, 1.33 ) }
    dend_39 { pt3dadd( -197.292, -24.9374, -133.979, 1.47 ) }
    dend_39 { pt3dadd( -198.411, -24.3481, -134.244, 0.22 ) }
    dend_39 { pt3dadd( -199.197, -23.8962, -134.435, 0.37 ) }
    dend_39 { pt3dadd( -199.869, -23.5102, -134.612, 0.22 ) }
    dend_39 { pt3dadd( -200.662, -23.0899, -134.813, 0.81 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 54/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -160.591, -3.56785, -104.955, 0.22 ) }
    dend_38 { pt3dadd( -161.693, -2.59905, -105.253, 0.22 ) }
    dend_38 { pt3dadd( -161.739, -2.56283, -105.266, 0.22 ) }
    dend_38 { pt3dadd( -162.633, -1.98552, -105.555, 0.22 ) }
    dend_38 { pt3dadd( -162.693, -1.95398, -105.574, 0.22 ) }
    dend_38 { pt3dadd( -163.585, -1.60526, -105.801, 0.22 ) }
    dend_38 { pt3dadd( -163.898, -1.51165, -105.876, 0.96 ) }
    dend_38 { pt3dadd( -164.484, -1.41316, -105.995, 0.96 ) }
    dend_38 { pt3dadd( -165.3, -1.35638, -106.164, 0.52 ) }
    dend_38 { pt3dadd( -166.63, -1.36848, -106.446, 0.22 ) }
    dend_38 { pt3dadd( -168.072, -1.47, -106.744, 0.22 ) }
    dend_38 { pt3dadd( -168.925, -1.57947, -106.912, 0.96 ) }
    dend_38 { pt3dadd( -169.379, -1.64447, -106.99, 1.11 ) }
    dend_38 { pt3dadd( -170.826, -1.85777, -107.205, 0.22 ) }
    dend_38 { pt3dadd( -170.894, -1.86869, -107.216, 0.22 ) }
    dend_38 { pt3dadd( -171.792, -2.03746, -107.372, 0.22 ) }
    dend_38 { pt3dadd( -172.44, -2.15424, -107.492, 0.22 ) }
    dend_38 { pt3dadd( -173.309, -2.28836, -107.645, 0.74 ) }
    dend_38 { pt3dadd( -174.28, -2.40506, -107.815, 0.22 ) }
    dend_38 { pt3dadd( -174.979, -2.44762, -107.924, 0.88 ) }
    dend_38 { pt3dadd( -175.195, -2.4584, -107.962, 1.11 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_25, dend_0, dend_64, dend_49, dend_41, dend_26, dend_10, dend_1, dend_63, dend_50, dend_45, dend_42, dend_30, dend_27, dend_20, dend_11, dend_9, dend_2, dend_60, dend_51, dend_47, dend_46, dend_44, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_15, dend_12, dend_8, dend_3, dend_62, dend_61, dend_55, dend_52, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_17, dend_16, dend_14, dend_13, dend_5, dend_4, dend_57, dend_56, dend_54, dend_53, dend_37, dend_36, dend_19, dend_18, dend_7, dend_6, dend_59, dend_58, dend_39, dend_38]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_25, dend_0, dend_64, dend_49, dend_41, dend_26, dend_10, dend_1, dend_63, dend_50, dend_45, dend_42, dend_30, dend_27, dend_20, dend_11, dend_9, dend_2, dend_60, dend_51, dend_47, dend_46, dend_44, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_15, dend_12, dend_8, dend_3, dend_62, dend_61, dend_55, dend_52, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_17, dend_16, dend_14, dend_13, dend_5, dend_4, dend_57, dend_56, dend_54, dend_53, dend_37, dend_36, dend_19, dend_18, dend_7, dend_6, dend_59, dend_58, dend_39, dend_38]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_45 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_42 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_47 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_46 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_44 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_24 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_21 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_12 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_61 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_52 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_40 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_33 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_32 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_57 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_53 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_36 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_49 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_50 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_64 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_27 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_63 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_62 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_55 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_18 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_58 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_59 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_4 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_5 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_6 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_7 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_22 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_23 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_41 nseg = 3
    dend_45 nseg = 3
    dend_42 nseg = 9
    dend_47 nseg = 5
    dend_46 nseg = 3
    dend_44 nseg = 5
    dend_34 nseg = 3
    dend_29 nseg = 9
    dend_28 nseg = 9
    dend_24 nseg = 5
    dend_21 nseg = 9
    dend_12 nseg = 3
    dend_8 nseg = 11
    dend_3 nseg = 7
    dend_61 nseg = 13
    dend_52 nseg = 3
    dend_40 nseg = 9
    dend_33 nseg = 9
    dend_32 nseg = 11
    dend_14 nseg = 5
    dend_13 nseg = 5
    dend_57 nseg = 3
    dend_56 nseg = 11
    dend_53 nseg = 5
    dend_37 nseg = 7
    dend_36 nseg = 11
    dend_19 nseg = 5
    dend_39 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_MC_5fa0a62bd0_0_0


